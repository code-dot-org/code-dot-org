---
it:
  data:
    markdown_instructions:
      2-3 Artist 1 new_markdown_instruction: Ciao, io sono un artista. Puoi scrivere
        del codice per farmi disegnare quasi qualunque cosa. Usa i blocchi per farmi
        disegnare lungo le linee grigie dell'immagine. (Ciascuna riga è lunga 100
        pixel)
      2-3 Artist 11_markdown_instruction: |-
        Disegna il bordo del segnale di stop creando un ottagono con lati lunghi 100 pixel. <br><br>
        Di quanti gradi devi girare ogni volta per completare il bordo del segnale di stop?
      2-3 Artist 12_markdown_instruction: |-
        Disegna il "cerchio" che rappresenta il bulbo oculare.<br><br>
        Usa il blocco `ripeti ... volte` impostando il numero di ripetizioni in modo tale da disegnare tutto il cerchio. Se ad ogni movimento giri a destra di un grado, quante volte devi ripetere il movimento per completare esattamente il cerchio?
      2-3 Artist 2 new_markdown_instruction: Questa casa ha una parete lasciata a
        metà. Ogni parete è lunga 100 pixel, ma della parete a destra ne è stata disegnata
        solo una metà. Completala.
      2-3 Artist 3.4_markdown_instruction: Il blocco "salta" consente di muovere l'artista
        senza disegnare. Disegna la linea tratteggiata usando sia i blocchi "salta"
        che quelli per disegnare. Ogni linea è lunga 50 pixel.
      2-3 Artist 3new_markdown_instruction: Il cappello rosso ha un'altezza pari a
        100 pixel. Completa il disegno con un cappello nero che sia più basso di quello
        rosso di 70 pixel. Ogni cappello è largo 50 pixel.
      2-3 Artist 4_markdown_instruction: Aiutami a completare la casa per questo gatto.
      2-3 Artist 6_markdown_instruction: |-
        Questa casa ha bisogno di un tetto! Disegna un triangolo.<br>
        <b>Suggerimento</b>: tutti e tre i lati hanno la stessa lunghezza.<br>

        <img src="https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif"
        width="300"/>
      2-3 Artist 7_markdown_instruction: 'Finisci di disegnare le ultime due finestre
        a destra. Ciascuna finestra è un quadratino di lato 25 pixel. '
      2-3 Artist 8_markdown_instruction: |-
        E ora costruisci una stalla!<br>
        Completa gli spazi per ciascun animale suddividendo il rettangolo in 2 quadrati delle stesse dimensioni.<br>
        Il rettangolo è largo 200 pixel e alto 100 pixel.<br>
        Ci sono molti modi diversi di risolvere quest'esercizio: divertiti!
      2-3 Artist 9 NEW_markdown_instruction: Finisci di disegnare questo aquilone
      2-3 Artist 9 REPLACEMENT_markdown_instruction: Finisci di disegnare queste scale!
      2-3 Artist 9_markdown_instruction: Finisci di disegnare questo aquilone
      2-3 Artist Debugging 1_markdown_instruction: |-
        Riesci a disegnare questo cappello facendo in modo che la sua parte superiore sia lunga solo 50 pixel?<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-11#VIDEO" target="_blank">Video doppiato in italiano</a>
      2-3 Artist Debugging 10_markdown_instruction: Il tastierino direzionale del
        controller del mio gioco è troppo stretto. Riesci ad allargarlo di 10 pixel?
      2-3 Artist Debugging 11_markdown_instruction: |-
        Aiutami a completare il mio bellissimo fiocco di neve.<br><br>
        Quante volte devo eseguire il blocco "ripeti" per completarlo?
      2-3 Artist Debugging 2_markdown_instruction: |-
        Il codice che disegna i tre baffi a destra è sbagliato, correggilo.<br><br>
        <b>Suggerimento</b>: tutti i baffi hanno la stessa lunghezza.
      2-3 Artist Debugging 3_markdown_instruction: La mia barca ha un buco! Riesci
        a ripararla modificando l'angolazione di una linea?
      2-3 Artist Debugging 5_markdown_instruction: |-
        Il codice che disegna la gamba e il piede è sbagliato. Riesci ad aiutarmi?<br><br>
        <b>Suggerimento</b>: Il piede è troppo lungo, potrebbe essere necessario eliminare un blocco.
      2-3 Artist Debugging 6_markdown_instruction: |-
        Mi sembra di star seduto su una sedia senza una gamba.<br>
        Modifica i blocchi per disegnare la gamba mancante.
      2-3 Artist Debugging 7_markdown_instruction: |-
        Questo codice disegna la C al contrario nella parola "CODE".<br>
        Riesci a farla disegnare correttamente?
      2-3 Artist Debugging 8_markdown_instruction: La mia girandola non è finita.
        Riesci ad aiutarmi?
      2-3 Artist Debugging 9_markdown_instruction: Il codice per disegnare questo
        gambo non è corretto! Riesci a capire come aiutare l'artista?
      2-3 Artist Debugging Assessment 1_markdown_instruction: |-
        Questo è un esercizio di riepilogo -- Questa figura è troppo piccola. Riesci a farla più grande?<br><br>
        <b>Suggerimento</b>: ogni lato dovrebbe essere 75 pixel più lungo della dimensione attuale.
      2-3 Artist Free Play_markdown_instruction: Gioco libero! Disegna qualcosa che
        ti piace.
      2-3 Artist Functions 1 a_markdown_instruction: |-
        Ciao. Io artista zombie. Mi piace disegnare!<br>
        Aiutami a disegnare questi occhiali quadrati.<br>
        <b>Suggerimento</b>: l'asta tra le lenti è di 25 pixel più corta della lunghezza di ciascuna lente.
      2-3 Artist Functions 1_markdown_instruction: |-
        Ciao. Io artista zombie. Mi piace disegnare!<br>
        Aiutami a disegnare questi occhiali quadrati.<br>
        <b>Suggerimento</b>: l'asta tra le lenti è di 25 pixel più corta della lunghezza di ciascuna lente.
      2-3 Artist Functions 10_markdown_instruction: Qui ci sono due funzioni, una
        per disegnare un ingranaggio grande e una per disegnare un ingranaggio piccolo.
        Usale per disegnare l'interno di un macchinario!
      2-3 Artist Functions 11 a_markdown_instruction: Abbiamo rinominato la funzione
        `disegna un quadrato` in `draw a hexagon` (<i>disegna un esagono</i>), ma
        realizza ancora quadrati! Puoi modificare la funzione `disegna un esagono`
        in modo che produca un esagono con i lati lunghi 50 pixel, e riprodurre poi
        tutta la figura usando la nuova funzione?
      2-3 Artist Functions 11.5 a_markdown_instruction: "Qui abbiamo sempre la funzione
        `draw a hexagon` (*disegna un esagono*).\r\n\r\nCosa succede se nel ripetere
        l'esecuzione della funzione come nell'esercizio precedente adesso giri ogni
        volta solo di **60** gradi?"
      2-3 Artist Functions 11.5_markdown_instruction: |-
        Qui abbiamo sempre la funzione `draw a hexagon` (<i>disegna un esagono</i>).<br>
        <br>
        Cosa succede se nel ripetere l'esecuzione della funzione come nell'esercizio precedente adesso giri ogni volta solo di 60 gradi?
      2-3 Artist Functions 11_markdown_instruction: Abbiamo rinominato la funzione
        `disegna un quadrato` in `draw a hexagon` (<i>disegna un esagono</i>), ma
        realizza ancora quadrati! Puoi modificare la funzione `disegna un esagono`
        in modo che produca un esagono con i lati lunghi 50 pixel, e riprodurre poi
        tutta la figura usando la nuova funzione?
      2-3 Artist Functions 12 Mike_markdown_instruction: |-
        Le funzioni sono davvero utili per disegnare più volte oggetti complessi.<br>
        <br>
        Puoi usare la funzione `draw a flower` (<i>disegna un fiore</i>) per riempire il resto della fioriera?<br>
        <br>
        <b>Suggerimento</b>: le piante sono tutte distanti 100 pixel l'una dall'altra.
      2-3 Artist Functions 12 a_markdown_instruction: |-
        Le funzioni sono davvero utili per disegnare più volte oggetti complessi.<br>
        <br>
        Puoi usare la funzione `draw a flower` (<i>disegna un fiore</i>) per riempire il resto della fioriera?<br>
        <br>
        <b>Suggerimento</b>: le piante sono tutte distanti 100 pixel l'una dall'altra.
      2-3 Artist Functions 12_markdown_instruction: |-
        Le funzioni sono davvero utili per disegnare più volte oggetti complessi.<br>
        <br>
        Puoi usare la funzione `draw a flower` (<i>disegna un fiore</i>) per riempire il resto della fioriera?<br>
        <br>
        <b>Suggerimento</b>: le piante sono tutte distanti 100 pixel l'una dall'altra.
      2-3 Artist Functions 2 a_markdown_instruction: "Le funzioni ti permettono di
        definire nuovi blocchi!\r\n\r\nAbbiamo spostato i blocchi per disegnare un
        quadrato all'interno di una funzione chiamata `draw a square` (*disegna un
        quadrato*). Puoi usare il piccolo blocco verde `draw a square` per richiamare
        questa nuova funzione e creare gli occhiali?\r\n\r\nI quadrati sono distanti
        75 pixel."
      2-3 Artist Functions 2_markdown_instruction: |-
        Le funzioni ti permettono di definire nuovi blocchi!<br>
        <br>
        Abbiamo spostato i blocchi per disegnare un quadrato all'interno di una funzione chiamata `draw a square` (<i>disegna un quadrato</i>). Puoi usare la funzione `draw a square` per creare gli occhiali?<br>
        <br>
        I quadrati sono distanti 75 pixel.
      2-3 Artist Functions 3 a_markdown_instruction: "Modifica la funzione `draw a
        square` (<i>disegna un quadrato</i>) in modo da disegnare un quadrato con
        i lati lunghi 115 pixel e creare occhiali più grandi.\r\n\r\nI quadrati sono
        ora distanti 45 pixel."
      2-3 Artist Functions 3_markdown_instruction: |-
        Modifica la funzione in modo da disegnare un quadrato con i lati lunghi 115 pixel e creare occhiali più grandi.<br>
        <br>
        I quadrati sono ora distanti 45 pixel.
      2-3 Artist Functions 4 a_markdown_instruction: Ora, posiziona la funzione dentro
        a un blocco `ripeti ... volte` e aggiungi un altro blocco `gira a ...` per
        disegnare questi tre quadrati.
      2-3 Artist Functions 4_markdown_instruction: Usa il blocco `ripeti ... volte`
        per disegnare questi tre quadrati.
      2-3 Artist Functions 9_markdown_instruction: Qui trovi la funzione `draw a snowflake`
        (<i>disegna un fiocco di neve</i>). Sperimentala per creare una scena invernale!
        Questo è un esercizio libero, quindi non c'è alcun problema da risolvere.
        Buon divertimento!
      2-3 Artist Loops 1_markdown_instruction: Puoi creare un esagono con i lati lunghi
        100 pixel per completare la cella? Ricordati, questo significa che avrai bisogno
        di girare di soli 60 gradi!
      2-3 Artist Loops 2_markdown_instruction: Ora utilizza un blocco "ripeti" per
        rendere la cella una conchiglia.
      2-3 Artist Loops New 1_markdown_instruction: 'Completiamo la testa di questo
        robot! Riesci a disegnare un quadrato i cui lati siano tutti lunghi 100 pixel?

'
      2-3 Artist Loops New 10_markdown_instruction: Cerca adesso di disegnare una
        serie di V collegate, usando un ciclo.
      2-3 Artist Loops New 11_markdown_instruction: Riscrivi il codice del precedente
        esercizio, ma questa volta aggiungi il blocco `gira a sinistra di 30 gradi`
        all'interno del blocco `ripeti ... volte`. Poi, ripeti il ciclo 24 volte invece
        che 8.
      2-3 Artist Loops New 12_markdown_instruction: Disegna un rombo i cui lati siano
        lunghi 100 pixel.
      2-3 Artist Loops New 13_markdown_instruction: |-
        Il codice che trovi già pronto (in grigio) disegna un rombo.<br><br>
        Ripetilo 3 volte usando un ciclo per creare la figura che vedi.
      2-3 Artist Loops New 14_markdown_instruction: Il codice che trovi già pronto
        è sempre quello per disegnare un rombo. Prova a variarlo per disegnare altre
        figure. Prova a cambiare il numero di gradi di cui giri o il numero di ripetizioni
        che fai.
      2-3 Artist Loops New 15_markdown_instruction: 'Disegna qualcosa che ti piace.

'
      2-3 Artist Loops New 2_markdown_instruction: |-
        Ecco lo stesso esercizio che hai appena risolto, ma questa volta puoi usare solo 1 blocco `vai avanti` ed 1 blocco `gira a ...` per disegnare il quadrato.<br>
        Puoi usare un blocco `ripeti ... volte` per risolvere questo esercizio?<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      2-3 Artist Loops New 9_markdown_instruction: Per completare la freccia disegna
        semplicemente una V i cui lati siano entrambi di 50 pixel.
      2-3 Artist Nested Loops 1_markdown_instruction: |
        Hai già utilizzato i cicli per disegnare, ma sapevi che puoi inserire un ciclo all'interno di un altro ciclo?

        Crea un ciclo che ripete per 3 volte tutti i blocchi di codice in grigio, allo scopo di disegnare la figura indicata.
      2-3 Artist Nested Loops 10_markdown_instruction: Ripeti 12 volte questo codice
        per completare la figura.
      2-3 Artist Nested Loops 11_markdown_instruction: Ripeti 4 volte questo codice
        per completare la figura, girando di 90 gradi alla fine di ciascun cerchio.
      2-3 Artist Nested Loops 12_markdown_instruction: Ripeti 12 volte questo codice
        per completare la figura.
      2-3 Artist Nested Loops 2_markdown_instruction: |-
        Ora disegna il triangolo 6 volte.<br>
        Dopo ogni triangolo, devi girarti di 60 gradi prima di disegnare il successivo.
      2-3 Artist Nested Loops 3_markdown_instruction: |-
        Per disegnare questa figura devi ripetere il triangolo 12 volte.<br>
        <br>
        Per sapere di quanti gradi girare dopo ciascun triangolo, dividi il numero di gradi in un cerchio (360) per il numero di triangoli che stai disegnando (12).
      2-3 Artist Nested Loops 4_markdown_instruction: |-
        Per disegnare un fiore devi ripetere il rombo 12 volte.<br>
        <br>
        <b>Suggerimento</b>: i 12 rombi sono come i 12 triangoli che hai già disegnato - di quanti gradi devi girare dopo aver disegnato ciascun rombo?
      2-3 Artist Nested Loops 5_markdown_instruction: |-
        Riempi le finestre di questo edificio usando un ciclo annidato.<br>
        <br>
        Le finestre sono grandi 20 pixel e distanti 20 pixel l'una dall'altra.
      2-3 Artist Nested Loops 6_markdown_instruction: |-
        Lungo la coda del dinosauro ci sono 8 punte; ogni punta è lunga 30 pixel.<br>
        <br>
        Disegna il triangolo 8 volte, ma assicurati di spostarti in avanti dopo aver disegnato ciascun triangolo.
      2-3 Artist Nested Loops 7_markdown_instruction: |-
        Per disegnare un sole ripeti 10 volte questo triangolo.<br>
        Dopo ogni triangolo devi spostarti e anche girarti.<br>
        <br>
        Puoi capire di quanto devi girarti dividendo il numero di gradi in un cerchio per il numero di figure che compongono il disegno.
      2-3 Artist Nested Loops 8_markdown_instruction: Ora aggiungi un po' di erba
        all'immagine. I ciuffi d'erba distano tra loro 50 pixel.
      2-3 Artist Nested Loops 9_markdown_instruction: |-
        Completa quest'immagine aggiungendo un fiore.<br>
        Per disegnare il tuo fiore devi ripetere il rombo 12 volte girando un po' alla fine di ogni rombo.
      2-3 Artist Nested Loops Free Play_markdown_instruction: 'Tempo di giocare: disegna
        qualcosa di carino usando i <i>cicli annidati</i>.'
      2-3 Bee Conditionals 11_markdown_instruction: Fammi volare nel giardino per
        raccogliere il nettare solo dai fiori che ne hanno.
      2-3 Bee Conditionals 13_markdown_instruction: |-
        Qui ci sono diverse cose da fare!<br>
        Usa ciò che hai imparato per raccogliere tutto il nettare e poi fare il miele.<br><br>
        <b>Suggerimenti</b><br>
        - Cosa succede se usi un blocco condizionale `se nettare` su un fiore rosso?<br>
        - Puoi risolvere questo esercizio usando il <i>ciclo</i>`ripeti ... volte`?
      2-3 Bee Conditionals 14_markdown_instruction: |-
        Metti insieme tutto ciò che hai imparato!<br>
        Raccogli il nettare solo dai fiori che ne hanno, usando il minor numero possibile di blocchi. Non dimenticarti di fare il miele alla fine.
      2-3 Bee Conditionals 15_markdown_instruction: |-
        Questo percorso a gradini ormai dovrebbe essere familiare.<br>
        Raccogli il nettare solo dai fiori che ne hanno, usando il minor numero possibile di blocchi.
      2-3 Bee Conditionals 2_markdown_instruction: |-
        Ciao, sono un'ape!<br>
        Aiutami a raccogliere tutto il nettare dai fiori, usando il minor numero possibile di blocchi.<br><br>
        <b>Suggerimento</b>: Usa il blocco `ripeti ... volte` (<i>ciclo</i>).
      2-3 Bee Conditionals 3_markdown_instruction: |-
        Aiutami a raccogliere tutto il nettare dai fiori e a produrre tutto il miele, usando il minor numero possibile di blocchi.<br><br>
        <b>Suggerimento</b>: usa il blocco `ripeti ... volte` (<i>ciclo</i>).
      2-3 Bee Conditionals 5_markdown_instruction: |-
        I fiori viola possono avere una quantità di nettare pari a 0 oppure 1, ma tu non lo sai! Fai attenzione a non raccogliere nettare da un fiore viola se ne ha una quantità pari a 0.<br>
        Usa il blocco `se` per controllare se la quantità è 0 oppure 1.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-13#VIDEO" target="_blank">Video doppiato in italiano</a>
      2-3 Bee Conditionals Assessment 1_markdown_instruction: Questo è un esercizio
        di riepilogo -- Raccogli tutto il nettare. Fai attenzione a non raccogliere
        il nettare dai fiori viola se non ne hanno.
      2-3 Bee Debugging 1_markdown_instruction: |-
        Questi blocchi sbagliati mi fanno perdere tempo. Correggi gli errori per raccogliere tutto il nettare.<br>
        Clicca su "Fai un passo" per eseguire il programma un blocco alla volta.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-10#VIDEO" target="_blank">Video doppiato in italiano</a>
      2-3 Bee Debugging 10_markdown_instruction: |-
        Questo esercizio mi fa girare la testa!<br>
        Correggi gli errori per raccogliere tutto il nettare e trasformarlo in miele.<br>
        Clicca su "Fai un passo" per eseguire il programma un blocco alla volta.
      2-3 Bee Debugging 2_markdown_instruction: |-
        Riesci a capire qual è il problema in questo esercizio?<br>
        Correggi gli errori per raccogliere tutto il nettare.<br>
        Clicca su "Fai un passo" per eseguire il programma un blocco alla volta.
      2-3 Bee Debugging 3_markdown_instruction: |-
        Questi blocchi sbagliati mi fanno perdere tempo.<br>
        Correggi gli errori per raccogliere tutto il nettare.<br>
        Clicca su "Fai un passo" per eseguire il programma un blocco alla volta.
      2-3 Bee Debugging 5_markdown_instruction: |-
        Questo fiore sembra saporito!<br>
        Correggi gli errori per raccogliere tutto il nettare.<br>
        Da ora in avanti puoi usare, oltre al comando "Fai un passo", anche il comando "Esegui" per eseguire tutti i blocchi.
      2-3 Bee Debugging 6_markdown_instruction: |-
        Che dolce sfida!<br>
        Correggi gli errori per raccogliere tutto il nettare.<br>
        Ricorda che cliccando su "Fai un passo" puoi eseguire il programma un blocco alla volta.
      2-3 Bee Debugging 9_markdown_instruction: |-
        Questi blocchi sbagliati mi fanno perdere tempo. Correggi gli errori per raccogliere tutto il nettare e produrre tutto il miele.<br><br>
        Ricorda che cliccando su "Fai un passo" puoi eseguire il programma un blocco alla volta.
      2-3 Bee Debugging Assessment 1_markdown_instruction: Questo è un esercizio di
        riepilogo -- Correggi gli errori per raccogliere tutto il nettare.
      2-3 Bee Functions 1_markdown_instruction: |-
        Una funzione è una sequenza di blocchi di codice che esegue un compito. Usa la funzione `get 2 nectar` (<i>prendi 2 dosi di nettare</i>) per raccogliere il nettare da ogni fiore.
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-6#VIDEO" target="_blank">Video doppiato in italiano</a> (solo la seconda parte)
      2-3 Bee Functions 10_markdown_instruction: |-
        Ogni volta che esegui l'esercizio i fiori viola possono avere una quantità di nettare pari a 0 oppure 1. <br><br>
        Definisci una funzione che raccoglie il nettare da un fiore viola solo se ne ha.
      2-3 Bee Functions 2_markdown_instruction: |-
        Una "funzione" è una sequenza di blocchi di codice che esegue un compito.<br>
        <br>
        Usa la funzione `get 5` (<i>prendi 5 dosi</i>) che raccoglie ogni volta 5 dosi di nettare.
      2-3 Bee Functions 4_markdown_instruction: |-
        La funzione `move and get nectar` (<i>vai a prendere il nettare</i>) sposta l'ape sul fiore, raccoglie il nettare e fa tornare l'ape dove si trovava.<br>
        <br>
        Usa questa funzione per raccogliere tutto il nettare.
      2-3 Bee Functions Assessment 1_markdown_instruction: Questo è un esercizio di
        riepilogo -- Usa la funzione data per raccogliere il nettare da ogni fiore.
      2-3 Bee Functions Assessment 2_markdown_instruction: Questo è un esercizio di
        riepilogo -- Definisci la funzione `move and get 3` (<i>spostati e fanne 3</i>)
        per spostarsi, fare 3 dosi di miele, e tornare indietro.
      2-3 Bee Loops 1_markdown_instruction: Raccogli il nettare da ogni fiore, usando
        il minor numero possibile di blocchi.
      2-3 Bee Loops 13_markdown_instruction: Questo è un esercizio di riepilogo --
        Usa il blocco `ripeti ... volte` per raccogliere tutto il nettare.
      2-3 Bee Loops 3A_markdown_instruction: Riesci ad usare un <i>ciclo</i> `ripeti
        ... volte` per raccogliere tutto il nettare?
      2-3 Bee Loops 3B_markdown_instruction: Adesso usa il blocco `ripeti ... volte`
        sia per raccogliere tutto il nettare che per produrre tutto il miele.
      2-3 Bee Loops 4_markdown_instruction: |-
        Quest'ape ha molto da fare!<br>
        Aiutala a raccogliere tutto il nettare e produrre tutto il miele, usando il minor numero possibile di blocchi.<br><br>
        <b>Suggerimento</b>: usa un ciclo simile a quello del precedente esercizio, aggiungendo l'istruzione `gira a ...`.
      2-3 Bee Loops 4A_markdown_instruction: |-
        Usa i cicli per risolvere quest'esercizio col minor numero possibile di blocchi.<br><br>
        Non dimenticarti di produrre il miele alla fine!
      2-3 Bee Loops 5_markdown_instruction: Usa un ciclo per scendere la scala e raccogliere
        tutto il nettare.
      2-3 Bee Loops 7_markdown_instruction: |-
        Quanti fiori! Aiuta l'ape a visitarli tutti.<br><br>
        Riesci a farlo con <b>meno</b> di 7 blocchi?
      2-3 Bee Loops 8_markdown_instruction: |-
        Ogni volta che esegui l'esercizio i fiori viola possono avere una quantità diversa di nettare.<br>
        <br>
        Usa il ciclo `mentre` per raccoglierlo tutto. Il blocco `mentre` farà qualunque cosa si trova all'interno di esso PER TUTTO IL TEMPO IN CUI la condizione scritta accanto a `mentre` è VERA, in questo caso per tutto il tempo in cui "nettare > 0".
      2-3 Bee Loops Assessment 1_markdown_instruction: Questo è un esercizio di riepilogo
        -- Usa un ciclo `mentre` per raccogliere tutto il nettare da questi fiori.
      2-3 Maze 1_markdown_instruction: |-
        Puoi aiutarmi a catturare il maialino cattivo? Metti due blocchi `vai avanti`, uno sotto l'altro, sotto il blocco `quando si clicca su "Esegui"`. Poi clicca a sinistra sul pulsante "Esegui", sotto al labirinto. <br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-3#VIDEO" target="_blank">Video doppiato in italiano</a>
      2-3 Maze 12_markdown_instruction: |-
        Adesso è disponibile un nuovo blocco! Con il blocco `ripeti ... volte` (detto anche <i>ciclo</i>) puoi ripetere più volte un insieme di blocchi.<br>
        <br>
        Riesci a farmi arrivare al maialino creando un ciclo che usa solo un blocco `vai avanti` all'interno di un blocco `ripeti ... volte`?
      2-3 Maze 13_markdown_instruction: Fammi arrivare al maialino! Questa volta puoi
        usare un solo blocco`vai avanti`.
      2-3 Maze 15_markdown_instruction: Usa due blocchi `ripeti ... volte` (detti
        anche <i>cicli</i>) per arrivare al maialino usando meno blocchi possibile.
      2-3 Maze Loops 18_markdown_instruction: |-
        Fammi arrivare al girasole usando il minor numero possibile di blocchi!<br><br>
        Prova ad usare un blocco `ripeti ... volte` (<i>ciclo</i>) all'interno di un altro ciclo, per diminuire il numero di blocchi che usi.
      2-3 Maze Loops 19_markdown_instruction: Usa i cicli per farmi arrivare al girasole
        col minor numero possibile di blocchi!
      4-5 Artist 1_markdown_instruction: Aiutami a disegnare il quadrato. (Ogni linea
        è lunga 300 pixel)
      4-5 Artist 10_markdown_instruction: Premi "Esegui" per provare il codice. Poi,
        ripetilo abbastanza volte per completare il disegno. I colori saranno diversi
        ogni volta.
      4-5 Artist 11_markdown_instruction: Completa le linee verdi. Le linee sono lunghe
        300 pixel e distanziate di 15 pixel.
      4-5 Artist 2_markdown_instruction: Riesci a ripetere questo codice per completare
        il quadrato?
      4-5 Artist 3.5_markdown_instruction: Cerca di immaginare cosa succede se si
        eseguono questi blocchi di codice già pronti (o clicca su `Esegui` per verificarlo).
        Poi, ripetili una quantità di volte sufficiente a completare il disegno. I
        colori saranno diversi ogni volta.
      4-5 Artist 3_markdown_instruction: |-
        Questa aiuola rettangolare ha un perimetro di 600 pixel. Il lato lungo ha una lunghezza di 200.<br>
        Disegna il rettangolo usando il minor numero possibile di blocchi.
      4-5 Artist 4_markdown_instruction: Quanti gradi ci sono in un cerchio?  Inserisci
        questo valore nel blocco `ripeti ... volte` in modo da creare un cerchio tutto
        colorato.
      4-5 Artist 5_markdown_instruction: Che angolo devi usare in questo esercizio,
        per essere sicuro di disegnare tutte e 3 le linee con i blocchi all'interno
        del ciclo?
      4-5 Artist 6_markdown_instruction: 'Questo triangolo è equilatero: tutti gli
        angoli sono quindi di 60 gradi. Ogni lato è lungo 200 pixel. Completa il disegno.'
      4-5 Artist 7_markdown_instruction: Questo triangolo rettangolo ha gli angoli
        di 30, 60 e 90 gradi. Il lato obliquo è lungo il doppio del lato verticale,
        che è alto 100 pixel. Completa il disegno.
      4-5 Artist 8_markdown_instruction: |-
        La linea di centrocampo in un campo di calcio è <i>perpendicolare</i> alle linee laterali. Questo campo ha un perimetro di 800 pixel ed è lungo 240 pixel. Quanto è lunga la linea di centrocampo?<br><br>
        Disegna i bordi del campo e la linea di centrocampo.
      4-5 Artist 9_markdown_instruction: Disegna l'altra metà in modo che il disegno
        sia simmetrico. I triangoli sono equilateri e con il lato di 50 pixel.
      4-5 Artist Assessment 1_markdown_instruction: Questo è un esercizio di riepilogo
        -- Usa un ciclo per disegnare il triangolo equilatero. Ogni lato è lungo 300
        pixel.
      4-5 Artist Free Draw 1_markdown_instruction: Disegna liberamente!  Disegna qualunque
        cosa ti venga l'ispirazione di creare.
      4-5 Artist Patterns 1_markdown_instruction: Riesci a disegnare questo quadrato
        usando un ciclo? Ogni lato è lungo 20 pixel.
      4-5 Artist Patterns 10_markdown_instruction: |-
        Questo codice disegna due righe di esagoni. Per disegnare tutto il favo devi eseguire l'intero codice 4 volte.<br>
        Suggerimento: per essere sicuro che l'artista non disegni fuori dallo schermo, assicurati di saltare indietro di 120 pixel nel ciclo più esterno.
      4-5 Artist Patterns 11_markdown_instruction: Quante volte devi eseguire questo
        codice per disegnare un semicerchio?
      4-5 Artist Patterns 12_markdown_instruction: |-
        Che cosa succede se aggiungi un ciclo uguale a quello che trovi già pronto, ma fai girare l'artista a sinistra invece che a destra?<br>
        Riesci a disegnare quest'onda ripetendo il tutto?
      4-5 Artist Patterns 13_markdown_instruction: |-
        Per creare questa cornice devi ripetere 4 volte tutto il codice che trovi già pronto. Attento agli spigoli, non basta girare di 90 gradi! <br>
        <br>
        Se, girando di 3 gradi per ciclo, hai bisogno di 60 ripetizioni per disegnare mezzo cerchio, quale di questi blocchi di codice ti permette di disegnare un quarto di cerchio per gli spigoli?
      4-5 Artist Patterns 2_markdown_instruction: Se posizioni il ciclo per disegnare
        il quadrato all'interno di un altro ciclo, ottieni un ciclo annidato. Cosa
        devi aggiungere al ciclo più esterno per essere sicuro che tutti i 15 quadrati
        siano allineati l'uno all'altro?
      4-5 Artist Patterns 3_markdown_instruction: Andiamo ancora più a fondo! Abbiamo
        annidato il ciclo che disegna una cella della griglia all'interno di un altro
        ciclo, per disegnare così tutta la riga di celle. Per completare la griglia,
        devi far tornare l'artista indietro in modo tale da disegnare le righe successive.
        Quale sequenza di blocchi devi posizionare alla fine del ciclo più esterno
        per raggiungere questo obiettivo?
      4-5 Artist Patterns 4_markdown_instruction: 'Questo rombo ha tutti i lati di
        50 pixel e due tipi di angoli: da 120 e da 60 gradi. Usa un ciclo per disegnarlo.'
      4-5 Artist Patterns 5_markdown_instruction: 'Ripetiamo il disegno 6 volte per
        ottenere una fila di rombi. Fai attenzione: il codice per disegnare il rombo
        viene ora ripetuto 3 volte invece di 2 - secondo te qual è il motivo?'
      4-5 Artist Patterns 7_markdown_instruction: Modifichiamo il codice dell'esercizio
        precedente per disegnare una figura più complessa. Osserva il modo in cui
        si sovrappongono i rombi in questa figura e prova a dimezzare il primo `salta
        all'indietro` impostando 50 al posto di 100.  Di quanto deve essere modificato
        il secondo `salta all'indietro` per completare la figura?
      4-5 Artist Patterns 8_markdown_instruction: Disegna un esagono con lati di 40
        pixel e angoli di 60 gradi.
      4-5 Artist Patterns 9.5_markdown_instruction: Per disegnare due righe di esagoni
        devi inserire questo codice all'interno di un altro ciclo.  Osserva il modo
        in cui la seconda riga viene spostata verso destra.
      4-5 Artist Patterns 9_markdown_instruction: |-
        Ripetiamo il disegno 3 volte per ottenere una fila di esagoni. <br>
        Suggerimento: gli estremi, sinistro e destro, di ciascun esagono distano 80 pixel.
      4-5 Artist Patterns Free Play_markdown_instruction: 'Tempo di giocare: prova
        a fare un disegno tutto tuo!'
      4-5 Bee Conditionals 1_markdown_instruction: |-
        La nuvola impedisce all'ape di sapere se dietro c'è un fiore oppure no. Verifica se c'è un fiore e solo in questo caso raccogli il nettare. Attenzione, ciò che trovi dietro la nuvola può cambiare di volta in volta!<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      4-5 Bee Conditionals 2_markdown_instruction: |-
        Adesso ci sono più nuvole!<br><br>
        Controlla ognuna di esse e verifica se c'è un fiore. Solo in tal caso raccogli il nettare.<br><br>
        Ricordati che le diverse nuvole possono nascondere oggetti diversi!
      4-5 Bee Conditionals 4_markdown_instruction: L'oggetto nascosto può essere un
        fiore oppure un favo. Usa il blocco `se-altrimenti` per raccogliere il nettare
        <i>se</i> si tratta di un fiore, <i>altrimenti</i> per produrre il miele (dato
        che, in questo caso, si tratta sicuramente di un favo).
      4-5 Bee Conditionals 5_markdown_instruction: Potrebbe esserci un fiore oppure
        un favo dietro quelle nuvole. Usa un blocco `se-altrimenti` per raccogliere
        il nettare <i>se</i> si tratta di un fiore, <i>altrimenti</i> per produrre
        il miele (dato che, in questo caso, si tratta sicuramente di un favo).
      4-5 Bee Conditionals 6_markdown_instruction: |-
        Un fiore viola può avere 1, 2 o 3 dosi di nettare, ma tu non sai quante ne ha! <br>
        <br>
        Combina i blocchi condizionali `se` e `se-altrimenti` per raccogliere esattamente la quantità di nettare che ha il fiore. <br>
        <br>
        Ricordati che ad ogni esecuzione la quantità di nettare del fiore viola può essere diversa.
      4-5 Bee Conditionals 7_markdown_instruction: |-
        Ricordati che un fiore viola può avere 1, 2, 3 dosi di nettare.<br>
        <br>
        Completa la funzione `check purple flower` (<i>controlla fiore viola</i>) ed usala per raccogliere tutto il nettare dai fiori.
      4-5 Bee Conditionals 8_markdown_instruction: |-
        Scrivi la funzione `check flower - make honey` (<i>controlla fiore - fai miele</i>).<br>
        <br>
        La funzione deve controllare quanto nettare c'è in ogni fiore viola e raccoglierlo tutto, poi andare avanti e produrre una sola dose di miele.
      4-5 Bee Conditionals Assessment 1_markdown_instruction: |-
        Questo è un esercizio di riepilogo -- Questa nuvola nasconde un fiore con una dose di nettare oppure un favo che richiede una dose di miele.<br>
        <br>
        Scrivi la funzione `get nectar or make honey` (<i>prendi il nettare o fai il miele</i>), poi usala per raccogliere il nettare o produrre il miele.
      4-5 Bee Debugging 1_markdown_instruction: |-
        Questi blocchi sbagliati mi fanno perdere tempo. Riesci a correggerli?<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-14#VIDEO" target="_blank">Video doppiato in italiano</a>
      4-5 Bee Debugging 6_markdown_instruction: |-
        Ogni volta che esegui l'esercizio il fiore viola può avere una quantità diversa di nettare.<br><br>
        Correggi la sequenza di blocchi in modo da raccogliere tutto il nettare dal fiore.
      4-5 Bee Debugging Assessment 1_markdown_instruction: Questo è un esercizio di
        riepilogo -- Correggi il codice.
      4-5 Bee Nested Loops 2_markdown_instruction: "Raccogli tutto il nettare da ogni
        fiore. \r \r Usa un ciclo annidato. "
      4-5 Bee Nested Loops 4_markdown_instruction: Raccogli tutto il nettare da ogni
        fiore e produci il miele in ogni favo. Usa un ciclo annidato.
      4-5 Bee Nested Loops Assessment 1_markdown_instruction: Questo è un esercizio
        di riepilogo -- Usa i cicli per raccogliere tutto il nettare e trasformarlo
        in miele.
      4-5 Maze 7_markdown_instruction: |-
        Caro umano, me zombie. Devo... arrivare... girasole.<br>
        Clicca su "Fai un passo" per eseguire il programma un blocco alla volta, oppure sul comando "Esegui" per eseguire tutti i blocchi.
      4-5 Maze 9_markdown_instruction: |-
        Crea un ciclo usando il nuovo blocco `ripeti fino a che`.<br>
        Esso mi farà <i>ripetere</i> le azioni <i>fino a che</i> raggiungo il girasole.
      4-5 Maze Assessment 1_markdown_instruction: Questo è un esercizio di riepilogo
        -- Fammi arrivare al girasole.
      4-5 Maze Conditionals 1_markdown_instruction: Usa il blocco `ripeti fino a che`
        per far arrivare lo zombie fino al girasole.
      4-5 Maze Conditionals 10_markdown_instruction: |-
        Puoi aggiungere solo 3 blocchi per aiutare lo zombie ad uscire da un labirinto più complesso?<br>
        <br>
        Se lo fai correttamente, riuscirà a camminare lungo un percorso tortuoso di qualsiasi lunghezza!
      4-5 Maze Conditionals 2_markdown_instruction: Usa il blocco `ripeti fino a che`
        per far arrivare lo zombie fino al girasole.
      4-5 Maze Conditionals 3_markdown_instruction: 'Usa il blocco `se c''è strada`
        per decidere quando farmi svoltare. <br><br>Attenzione: in questo caso devi
        aggiungere solo un blocco! Osserva, però, il modo in cui abbiamo impostato
        questo programma in modo tale che, la prossima volta, tu riesca a farlo tutto
        da solo.'
      4-5 Maze Conditionals 4_markdown_instruction: Ok, questo è quasi come l'esercizio
        precedente, ma devi ricordarti come hai usato insieme i blocchi `se c'è strada`
        e `ripeti fino a che`.
      4-5 Maze Conditionals 5_markdown_instruction: |-
        Me ... volere ... girasole!<br>
        <br>
        Usa un blocco `se c'è strada` per farmi arrivare là utilizzando il minor numero possibile di blocchi.
      4-5 Maze Conditionals 6_markdown_instruction: |-
        Me ... volere ... girasole!

        Usa un blocco `se c'è strada` per farmi arrivare là utilizzando il minor numero possibile di blocchi.
      4-5 Maze Conditionals 7_markdown_instruction: 'Ok, esercitiamoci di nuovo per
        far pratica: questo esercizio non è molto diverso, ma stai attento alle piante
        carnivore!'
      4-5 Maze Conditionals 8_markdown_instruction: |-
        Il blocco `se-altrimenti` controlla una condizione: SE è vera fa una cosa ALTRIMENTI ne fa un'altra.<br>
        <br>
        Prova ad usare questo nuovo blocco per farmi arrivare al girasole.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      4-5 Maze Conditionals 9_markdown_instruction: 'Ancora un esercizio con il blocco
        `se-altrimenti`: riesci a risolverlo correttamente al primo tentativo?'
      4-5 Maze Conditionals Assessment 1_markdown_instruction: Questo è un esercizio
        di riepilogo -- Usa i blocchi `ripeti fino a che` e `se-altrimenti` per arrivare
        al girasole utilizzando il minor numero possibile di blocchi.
      4-5 Nested Loops 1_markdown_instruction: 'Completa il codice per disegnare questi
        triangoli. Le istruzioni per disegnare il primo sono già pronte. Suggerimento:
        il disegno dei 3 triangoli richiede in totale una rotazione complessiva di
        360 gradi.'
      4-5 Nested Loops 11_markdown_instruction: Riesci a disegnare i 10 quadrati di
        questo marciapiede utilizzando un ciclo annidato? Ogni quadrato ha il lato
        di 30 pixel.
      4-5 Nested Loops 12_markdown_instruction: Riesci a disegnare questi 36 triangoli
        utilizzando un ciclo annidato?
      4-5 Nested Loops 2_markdown_instruction: |-
        Ora inserisci le istruzioni già presenti (che contengono un ciclo) all'interno di un altro ciclo, in modo da disegnare 10 triangoli. Un ciclo inserito all'interno di un altro ciclo viene detto "ciclo annidato".<br>
        <b>Suggerimento</b>: il disegno dei 10 triangoli richiede in totale una rotazione complessiva di 360 gradi.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-11#VIDEO" target="_blank">Video doppiato in italiano</a>
      4-5 Nested Loops 3_markdown_instruction: |-
        Disegna un sole inserendo in un ciclo il codice (che è un ciclo) che trovi già pronto. <br><br>
        Un ciclo inserito in un altro ciclo si chiama "ciclo annidato".<br><br>
        <b>Suggerimento</b>: al termine del disegno di ogni triangolo ti devi spostare PRIMA di girare.
      4-5 Nested Loops 5_markdown_instruction: Inserisci in un ciclo il codice che
        trovi già pronto, così da disegnare un mulino a vento.
      4-5 Nested Loops 6_markdown_instruction: Riesci a disegnare un esagono inserendo
        in un ciclo le istruzioni per disegnare un triangolo?
      4-5 Nested Loops 7_markdown_instruction: Ripeti 10 volte la figura disegnata
        dal codice che trovi già pronto. Di quanti gradi devi ruotare ad ogni ripetizione?
      4-5 Nested Loops 8_markdown_instruction: 'Ripeti 6 volte la figura disegnata
        dal codice che trovi già pronto. Di quanti gradi devi ruotare ad ogni ripetizione?

'
      4-5 Nested Loops 9_markdown_instruction: Finisci di disegnare i denti del coccodrillo!
      4-5 Nested Loops Assessment 1_markdown_instruction: Questo è un esercizio di
        riepilogo -- Usa un ciclo annidato per completare il disegno.
      4-5 While Loops 1_markdown_instruction: Spostami verso la buca e riempila con
        2 palate di terra, usando il blocco `riempi 1`.
      4-5 While Loops 2_markdown_instruction: Spostami verso il mucchio di terra e
        rimuovilo con 5 palate di terra, usando il blocco `rimuovi 1`.
      4-5 While Loops 3_markdown_instruction: |-
        Usa il minor numero possibile di blocchi per risolvere quest'esercizio!<br><br>
        Spostami verso il mucchio di terra e rimuovilo del tutto, poi spostami verso la buca e riempila completamente.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-12#VIDEO" target="_blank">Video doppiato in italiano</a>
      4-5 While Loops 4_markdown_instruction: |-
        Wow, ho trovato una buca davvero profonda! Non so quante palate di terra saranno necessarie per riempirla completamente. Riesci a scrivere un programma che la riempie fino a quando il terreno è livellato?<br>
        <br>
        <b>Suggerimento</b>: usa le opzioni nel menu a discesa del blocco `mentre`.
      Alien Defender_markdown_instruction: "**Idea di progetto:** Costruisci un gioco
        di difesa nel Laboratorio!"
      Alien Defender_2018_markdown_instruction: "**Idea di progetto:** Costruisci
        un gioco di difesa nel Laboratorio!"
      AppLab Intro 7 - Change Screen Color_markdown_instruction: "<div style=\"float:right\">\n<img
        src=\"https://images.code.org/bf9b1fb57751fa90c9b786339914ad70-image-1508521068798.34.54
        AM.png\" style=\"height:150px\"> \n</div>\n\n**Obiettivo:** Rendere verde
        (*green*) lo schermo.\n\n**Come:** Sposta nell'area di lavoro il blocco `setProperty()`.
        Usa il menù a discesa\nper assegnare a `\"background-color\"` il colore `\"green\"`.
        Poi clicca su \"Esegui\".\n\n**Sei bloccato?\nClicca qui** ![expandable](https://images.code.org/817990cbff035c9960b84a4b228ecaba-image-1508521071643.gif)"
      AppLab Intro 7 - Change Text 2_markdown_instruction: |-
        <div style="float:right">
        <img src="https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29 PM.png" style="height:200px;">
        </div>

        **Obiettivo:** Fai in modo che il testo diventi più grande e blu.

        **Come:**  Hai bisogno di due linee di codice. Una per attribuire all'etichetta `"label1"` la dimensione `"font-size"` di `80` e l'altra per impostare il colore `"text-color"`  a `"blue"`.

        **Sei bloccato? Clicca qui:** ![expandable](https://images.code.org/2d5d46a03082af3b01847aad6602e2ea-image-1511280140482.gif)
      AppLab Intro 7 - Full Text_markdown_instruction: |-
        <div style="float:right">
        <img src="https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19 AM.png" style="height:200px">
        </div>

        **Obiettivo:** Fai in modo che i bottoni diventino `"red"` (rosso) e `"blue"` (blu). Quindi cambia il testo nella grande etichetta arancione.

        **Come:**

        * Ricorda che basta passare con il mouse sopra ad un elemento per vedere il suo codice identificativo `"id"`.
        * Imposta il colore di sfondo `"background-color"` dei pulsanti a `"red"` e `"blue"`.
        * Cambia il testo `"text"` della grande etichetta arancione come preferisci, per esempio `"Benvenuto nella mia nuova app!"`.

        **Sei bloccato? Clicca qui:** ![expandable](https://images.code.org/4bf99e7352e7c17a5bf73ced80171f6a-image-1511280628092.gif)
      AppLab Intro 7 - onEvent intro_markdown_instruction: |-
        <img src="https://images.code.org/3d8c8487ea669563d3401c0009cd9462-image-1511281194897.gif" style="float:right;height:200px">

        **Obiettivo:** All'inizio la schermata è blu. Aggiungi il codice necessario affinché diventi verde (*green*) quando si clicca sul pulsante "Green-ify" (*"Inverdirsci"*).

        **Come:** Aggiungi del codice dentro al blocco `onEvent()` per impostare il colore di sfondo `"background-color"` a `"green"`.

        **Sei bloccato? Clicca qui:** ![expandable](https://images.code.org/5ddf6b129bc04b79839b3661ccef788b-image-1511281012076.gif)
      AppLab Intro 7 - onEvent twoButtons_markdown_instruction: |-
        <img src="https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif" style="float:right;height:200px">

        **Obiettivo:** Aiuta a completare questa app luminosa. Il pulsante "On" rende già lo schermo bianco (*white*). Premi "Esegui" per provarla. Quindi scrivi del codice per fare in modo che premendo il pulsante "Off" lo schermo diventi nuovamente nero (*black*).

        **Come:** Aggiungi del codice nel blocco `onEvent()` per impostare il colore di sfondo dello schermo `"background-color"`
        a `"black"` ed il colore del testo dell'etichetta `"text-color"` a `"white"`.

        **Sei bloccato? Clicca qui:** ![expandable](https://images.code.org/020b1d9b465aaf35967a528a92961c13-image-1511281772276.gif)
      AppLab Intro 7 - playSound_markdown_instruction: "<img src=\"https://images.code.org/28176329f15dea1a863564b069e72aab-image-1511282702534.44.52
        AM.png\" style=\"float:right;height:200px\">\n\n**Obiettivo:** Questa tastiera
        è quasi completa! Esegui l'app per vedere come funziona. Quindi aggiungi un'immagine,
        del teso ed il relativo suono.\n\n**Come:** \n* Aggiungi un blocco `onEvent()`
        al programma ed imposta l'\"id\" a `\"button4\"`. Trascina un blocco `playSound()`
        nel blocco `onEvent()` e scegli un suono dalla libreria.\n* Aggiungi un blocco
        `setProperty()` (al di fuori del precedente `onEvent()`) per cambiare la proprietà
        `\"image\"` del pulsante. Scegli quindi un'immagine usando il terzo elenco
        a discesa.\n* Aggiungi ancora un blocco `setProperty()` per modificare il
        testo `\"text\"` del pulsante.\n\n**Sei bloccato? Clicca qui:** ![expandable](https://images.code.org/a3fdcb8954c5e8d585bef64df1ec5b1a-image-1511285408512.gif)"
      AppLab Intro 7 - thisOrThatAddButton_markdown_instruction: |-
        <img src="https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00 PM.png" style="float:right;height:200px">

        **Obiettivo:** Aggiungi un secondo pulsante alla schermata con scritto "Right!" (*destra*) con identificativo `"id"` impostato a `"rightButton"`.

        **Come:** In Modalità Interfaccia trascina un nuovo pulsante. Posizionalo e dimensionalo correttamente. Quindi imposta il suo identificativo `"id"`, il testo `"text"`, il colore di sfondo `"background color"` e la dimensione del testo `"font size"`.

        **Sei bloccato? Clicca qui:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)
      AppLab Intro 7 - thisOrThatAddScreen_markdown_instruction: |-
        <img src="https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59 PM.png" style="float:right;height:200px">

        **Obiettivo:** Crea una nuova schermata denominata `"rightScreen"` (schermata di destra). Aggiungi un'etichetta con il testo "Sei arrivato a destra!".

        **Come:** In Modalità Interfaccia trascina un nuovo elemento Schermata. Cambia il suo identificativo `"id"` in `"rightScreen"`. Quindi trascina un'etichetta sulla nuova schermata e cambia il testo in "Sei arrivato a destra!".

        **Sei bloccato? Clicca qui:** ![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)
      AppLab Intro 7 - thisOrThatPersonalize_markdown_instruction: |-
        <a href="https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ" target="_blank"><img src="https://images.code.org/ba6c0db48cc1c3c28c135f1c2f67f361-image-1511244802597.10.18 PM.png" style="float:right;height:200px"></a>
        <a href="https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q" target="_blank"><img src="https://images.code.org/284b55697d786e0cd64350d0967c5dda-image-1511244806272.11.05 PM.png" style="float:right;height:200px"></a>
        <a href="https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg" target="_blank"><img src="https://images.code.org/445181ff8d84861919512ba9b8e09586-image-1511244809994.12.40 PM.png" style="float:right;height:200px"></a>

        **Obiettivo:** Costruisci la tua app ampliando questo progetto. Poi condividila con i tuoi amici!

        **Come:** Decidi che tipo di app vuoi costruire. Quindi procedi aggiungendo alla tua app schermate, pulsanti, etichette di testo, suoni e interazioni con l'utente. Nella cassetta degli attrezzi ora ci sono alcuni blocchi in più con i quali ti puoi esercitare. Quando hai finito, clicca sul pulsante "Termina" per condividere la tua nuova app con i tuoi amici.

        <details><summary><b>Idee "Scegli la tua avventura"</b></summary>

        Prova questo esempio di app <a href="https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg"
        target="_blank">Scegli la tua avventura</a> così puoi vedere come funziona. Ecco alcune idee per aiutarti a tirar fuori la tua storia.

        <li>Crea una storia basata sul tuo personaggio preferito, reale o immaginario.</li>
        <li>Crea un'avventura che racconti la storia del tuo libro o film preferito, oppure un storia totalmente inventata da te.</li>
        <li>Crea un'avventura che abbia molti colpi di scena o difficili scelte cruciali.</li>
        <br></details>

        <details><summary><b>Idee "Biglietto di auguri"</b></summary>

        Prova questo esempio di app <a href="https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q"
        target="_blank">Biglietto di auguri</a> così puoi vedere come funziona. Ecco alcune idee per aiutarti a tirar fuori il tuo biglietto.

        <li>Pensa ad un compleanno, ad una vacanza o ad altri giorni speciali in arrivo. Crea un biglietto per festeggiarlo!</li>
        <li>Prepara un biglietto di ringraziamento per qualcuno a cui sei grato.</li>
        <li> Crea un invito per un evento in arrivo.</li>
        <br></details>

        <details><summary><b>Idee "Quiz della personalità"</b></summary>

        Prova questo esempio di app <a href="https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ"
        target="_blank">Quiz della personalità</a> così puoi vedere come funziona. Ecco alcune idee per aiutarti a tirar fuori il tuo quiz.

        <li>Crea un quiz su un argomento in cui una persona possa appassionarsi, per esempio un pasto, una squadra, un libro o un posto.</li>
        <li>Crea un quiz per "predire il futuro" in base alle risposte dell'utente.</li>
        <li>Crea un quiz per aiutare le persone a prendere decisioni importanti.</li>
        </details>
      AppLab Intro 7 - thisOrThatSetScreen_markdown_instruction: |-
        <img src="https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop (1).gif" style="float:right;height:200px">

        **Obiettivo:** Lo schermo deve commutare su `"rightScreen"` quando l'utente clicca il pulsante `"rightButton"`.

        **Come:** In Modalità Codice aggiungi un nuovo blocco `onEvent()` al tuo programma relativo al pulsante "Right!" (*destra*). Poi aggiungi al suo interno un blocco `setScreen()` che permetta di commutare alla schermata `"rightScreen"`.

        **Sei bloccato? Clicca qui:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)
      Artist Inspiration_markdown_instruction: |-
        <img src="https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      Bergeron Robot Maze1_markdown_instruction: |-
        Puoi aiutarmi a catturare il maialino cattivo? Metti due blocchi `vai avanti`, uno sotto l'altro, sotto il blocco `quando si clicca su "Esegui"`. Poi clicca a sinistra sul pulsante "Esegui", sotto al labirinto. <br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-3#VIDEO" target="_blank">Video doppiato in italiano</a>
      CSDU2 Color Blindness_markdown_instruction: "# Filtro daltonici\r\n\r\n\r\n\r\n\n"
      Color Blindness Filter_markdown_instruction: "# Filtro daltonici\r\n\r\n\r\n\r\n\n"
      Course 4 Artist 10_markdown_instruction: |-
        <img src="https://images.code.org/c876143212d195192013582f57c6df04-image-1445625392518.36.18.png"
        width="150px;" style="mix-blend-mode: multiply;" /><br>
        Ecco il codice per una figura interessante.<br>
        <br>
        Che cosa succede se la ripeti più volte? Nota che il codice per disegnarla fa ruotare l'artista di <i>420 gradi</i> in totale. Ciò significa che, una volta completata la figura, l'artista sarà rivolto in una direzione differente rispetto a quando ha iniziato. Questa nuova direzione sarà esattamente <i>60 gradi a destra</i> rispetto alla direzione iniziale.<br>
        <br>
        Se ripeti per 6 volte questo codice così com'è, ottieni una rotazione totale pari a 6x60, ossia un giro completo di 360 gradi.<br>
        <img
        src="https://images.code.org/b79f96b87097ce3afe8a6a5608d04e36-image-1440132287456.44.27.png"  width="500px;"  style="mix-blend-mode:
        multiply;" /><br>
        <a href="https://studio.code.org/c/105644852" target="_blank">Vedi la soluzione</a>.<br>
        <br>
        Se vuoi fare un giro completo con solo 4 ripetizioni, l'artista deve ruotare di 360 gradi/4 = 90 gradi ogni volta. Puoi farlo aggiungendo un blocco `gira a destra di 30 gradi` prima di ripetere la figura (dato che 60+30 = 90).<br>
        <img src="https://programmailfuturo.it/images/codeorg/4-3-11-a.png"
        width="500px;" style="mix-blend-mode: multiply;" /><br>
        <a href="https://studio.code.org/c/120106816" target="_blank">Vedi la soluzione</a>.<br>
        <br>
        Se vuoi invece ripetere la figura 12 volte, l'artista deve effettuare una rotazione di 360 gradi/12 = 30 gradi ad ogni ripetizione. Ciò significa che, prima di ripetere la figura, l'artista deve tornare un po' indietro con un blocco `gira a sinistra di 30 gradi` (infatti 60-30 = 30).<br>
        <img src="https://programmailfuturo.it/images/codeorg/4-3-11-b.png"
        width="500px;" style="mix-blend-mode: multiply;" />
        <br>
        <a href="https://studio.code.org/c/120106805" target="_blank">Vedi la soluzione</a>.
      Course 4 Artist 11_markdown_instruction: |-
        <img src="https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png"
        width="200px"/><br>
        <br>
        E ora una piccola sfida!<br>
        <br>
        Per ottenere la figura che vedi devi usare solo blocchi che ti sono già stati mostrati. Riesci a capire come ricrearla? Sentiti libero di fare più tentativi e di commettere errori. Nessuno si aspetta che tu ci riesca perfettamente al primo tentativo. <br>
        <br>
        <b>Suggerimento</b>: La figura che viene ripetuta è quasi identica a quella del <a href="https://studio.code.org/s/course4/stage/3/puzzle/11" target="_blank">precedente esercizio</a>, l'unica differenza consiste nel fatto che il primo ciclo disegna tratti di lunghezza leggermente diversa.
      Course 4 Artist 12_markdown_instruction: |-
        <img src="https://images.code.org/70795d84048767ae7fb65883f476b27c-image-1440050836837.01.09.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      Course 4 Artist 13_markdown_instruction: Hai ancora voglia di giocare? Ecco
        una tela bianca su cui puoi disegnare qualunque cosa tu voglia!
      Course 4 Artist 2_markdown_instruction: Riesci ad inserire questo codice in
        un ciclo per disegnare il quadrato in grigio? Ogni lato è lungo 300 pixel.
      Course 4 Artist 20_markdown_instruction: Hai ancora voglia di giocare? Ecco
        una tela bianca su cui puoi disegnare qualunque cosa tu voglia!
      Course 4 Artist 3_markdown_instruction: Cerca di immaginare cosa succede se
        si eseguono questi blocchi di codice già pronti (o premi "Esegui" per verificarlo).
        Poi, ripetili una quantità di volte sufficiente a completare il disegno.
      Course 4 Artist 4_markdown_instruction: Quanti gradi ci sono in un cerchio?  Inserisci
        questo valore nel blocco `ripeti ... volte` in modo da disegnare un cerchio
        tutto colorato.
      Course 4 Artist 5_markdown_instruction: |-
        Disegna l'altra metà in modo che il disegno sia simmetrico. I triangoli sono equilateri e con il lato di 50 pixel.<br>
        Suggerimento: può essere necessario eseguire il codice più volte per capire quali blocchi devi aggiungere.
      Course 4 Artist 6_markdown_instruction: |-
        Completa il codice per disegnare questi 3 triangoli equilateri.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-11#VIDEO" target="_blank">Video doppiato in italiano</a>
      Course 4 Artist 7_markdown_instruction: "Ora inserisci le istruzioni già presenti
        (che contengono un ciclo) all'interno di un altro ciclo, in modo da disegnare
        10 triangoli. Un ciclo inserito all'interno di un altro ciclo viene detto
        \"ciclo annidato\".<br>\nSuggerimento: il disegno dei 10 triangoli richiede
        una rotazione complessiva di 360 gradi. "
      Course 4 Artist 8_markdown_instruction: Per disegnare questo sole devi ripetere
        più volte tutte le istruzioni che trovi già pronte.
      Course 4 Artist 8a_markdown_instruction: Ricordi questa figura? Ora prova a
        disegnarla senza avere nessun aiuto!
      Course 4 Artist 9_markdown_instruction: Ripeti 10 volte la figura disegnata
        dal codice che trovi già pronto e assicurati di ruotare un po' tra una figura
        e l'altra. Di quanti gradi devi ruotare ad ogni ripetizione?
      Course 4 Artist Binary 1_markdown_instruction: |-
        La funzione `draw binary` (<i>disegna in binario</i>) prende in ingresso una stringa binaria, cioè fatta di caratteri "1" e "0", e fa sì che l'artista – mentre va da sinistra verso destra e dall'alto verso il basso – accenda o spenga i quadrati in base ai caratteri della stringa.<br>
        <br>
        L'artista quindi colora di bianco i quadrati quando incontra un "1" mentre non li colora quando incontra uno "0".<br>
        <br>
        Clicca su "Esegui" per vedere come l'artista usa le stringhe binarie per disegnare questa figura.
      Course 4 Artist Binary 1a_markdown_instruction: La funzione `draw binary` (<i>disegna
        in binario</i>) prende in ingresso una stringa binaria, cioè fatta di caratteri
        "1" e "0", e fa sì che l'artista – mentre va da sinistra verso destra e dall'alto
        verso il basso – accenda o spenga i quadrati in base ai caratteri della stringa.
        L'artista quindi colora di bianco i quadrati quando incontra un "1" mentre
        non li colora quando incontra uno "0". Clicca su "Esegui" per vedere come
        l'artista usa le stringhe binarie per disegnare questa figura.
      Course 4 Artist Binary Free Play 2b_markdown_instruction: |-
        <img src="https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      Course 4 Artist Binary pre1_markdown_instruction: |-
        La codifica binaria è una modalità di rappresentazione delle informazioni usando solo due valori. In questa lezione usiamo i valori "spento" (rappresentato dal numero 0 e visualizzato in nero) e "acceso" (rappresentato dal numero 1 e visualizzato in verde scuro).<br>
        Hai a disposizione una griglia di quadrati con cui puoi giocare e creare dei disegni semplicemente accendendo e spegnendo i vari quadrati. Ogni quadrato è quindi analogo ad un pixel dello schermo.<br>
        Riesci a far produrre all'artista il disegno mostrato nella prima riga, la cui codifica binaria è "01010101"?
      Course 4 Artist For Loops 1_markdown_instruction: Usa il blocco `ripeti ...
        volte` per disegnare un triangolo equilatero con i lati di 50 pixel.
      Course 4 Artist For Loops 11_markdown_instruction: Ricordi che nella lezione
        6 (<a href="https://studio.code.org/s/course4/stage/6/puzzle/10" target="_blank">esercizio
        10</a> e seguenti) abbiamo usato la variabile `sides` (<i>lati</i>) per rappresentare
        il numero dei lati di un poligono? Ora devi fare la stessa cosa con la variabile
        `counter` (<i>contatore</i>). La figura di questo esercizio inizia con un
        triangolo ed aggiunge un lato per volta fino ad arrivare a disegnare un decagono
        (poligono con 10 lati). Ogni lato è lungo 100 pixel. Come puoi usare la variabile
        `counter` (<i>contatore</i>) presente nel <i>ciclo con contatore</i> per disegnare
        questa figura?
      Course 4 Artist For Loops 11a_markdown_instruction: Cerchiamo di mettere tutto
        insieme!  Usando le conoscenze che hai acquisito sui <i>cicli con contatore</i>
        e sulla variabile `counter` (<i>contatore</i>), prova a creare questo disegno
        in cui ogni figura ha due lati in più della precedente. Accertati che ogni
        lato sia 10 volte più lungo del numero di lati del poligono.
      Course 4 Artist For Loops 13_markdown_instruction: Hmmm, queste forme stanno
        diventando sempre più grandi! Non avevamo già risolto questo problema usando
        le variabili? Come possiamo usare la variabile "contatore" per rendere i lati
        più piccoli man mano che ce ne sono sempre di più? Invece di spostarti in
        avanti di una quantità sempre fissa, prova a spostarti di una quantità di
        pixel pari a  (100 / contatore).
      Course 4 Artist For Loops 14_markdown_instruction: Se ruoti un po' di più, o
        un po' di meno, di quanto fai di solito, puoi ottenere un effetto diverso.
        Per creare questa spirale quadrata avvitata, prova ad usare il codice del
        precedente esercizio ruotando di 89 gradi, invece di 90 gradi.
      Course 4 Artist For Loops 2_markdown_instruction: |-
        In questo esercizio il codice per disegnare un triangolo è stato inserito in un ciclo con contatore che conta da 50 a 100 con <i>passo</i> di 10.<br>
        <b>Attenzione</b>: assicurati di aver guardato bene il codice prima di cliccare su "Esegui".<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-10#VIDEO" target="_blank">Video doppiato in italiano</a>
      Course 4 Artist For Loops 3_markdown_instruction: Per disegnare questa figura
        usa come riferimento il codice del precedente esercizio. Il triangolo più
        piccolo ha i lati di 20 pixel, il triangolo più grande ha i lati di 200 pixel
        ed ogni triangolo, rispetto al precedente, ha il lato di 20 pixel più grande.
      Course 4 Artist For Loops 4_markdown_instruction: Come puoi modificare quello
        che hai imparato sui triangoli per disegnare questi quadrati? Il quadrato
        più piccolo ha i lati di 15 pixel, il quadrato più grande ha i lati di 300
        pixel ed ogni quadrato, rispetto al precedente, ha il lato di 15 pixel più
        grande.
      Course 4 Artist For Loops 6_markdown_instruction: Spazio Libero! Prova ad usare
        un ciclo FOR per disegnare un modello di forma crescente a piacere.
      Course 4 Artist For Loops 6a_markdown_instruction: Per ottenere questo disegno
        bastano solo tre piccole modifiche al codice del precedente esercizio!
      Course 4 Artist For Loops 8_markdown_instruction: |-
        Per disegnare questa figura devi fare solo un piccolo cambiamento al codice del precedente esercizio. Riesci a capire di quale cambiamento si tratta?<br>
        <b>Suggerimento</b>: devi eliminare qualcosa!
      Course 4 Artist For Loops 8a_markdown_instruction: Per disegnare questa figura
        devi fare solo un piccolo cambiamento al codice del precedente esercizio.
        Riesci a capire di quale cambiamento si tratta?
      Course 4 Artist For Loops Challenge_markdown_instruction: |-
        <b>Sfida:</b> Riesci a capire come utilizzare tutte le cose che hai imparato finora per disegnare questa immagine composta di poligoni, tutti con lato di 40 pixel?<br>
        <br>
        Ricorda che per creare una spirale non devi chiudere il poligono. Questo significa che ogni forma deve avere un lato in meno del solito.
      Course 4 Artist For Loops Challenge_a_markdown_instruction: |
        <b>Sfida:</b> Riesci a capire come utilizzare tutte le cose che hai imparato finora per disegnare questa immagine composta di poligoni, tutti con lato di 40 pixel?<br>
        <br>
        Ricorda che per creare una spirale non devi chiudere il poligono. Questo significa che ogni forma deve avere un lato in meno del solito.
      Course 4 Artist For Loops inspire_markdown_instruction: |-
        <img
        src="https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      Course 4 Artist Functions Inspiration_markdown_instruction: |-
        <img src="https://images.code.org/cf373e03bede480ae54aec72ce823454-image-1442951867535.54.11.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      Course 4 Artist Functions challenge_markdown_instruction: |-
        <img src="https://images.code.org/69f1c2b415f907c86aaa6ed2534c3682-image-1442870371171.13.38.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo.
      Course 4 Artist Inspire_markdown_instruction: |-
        <img src="https://images.code.org/b5e28b084cb331ee030ea3853ed921bd-image-1440060815818.51.21.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      Course 4 Artist Vars 1_markdown_instruction: |-
        Disegniamo un triangolo equilatero. <br>
        <br>
        Ogni lato deve essere lungo esattamente 100 pixel.
      Course 4 Artist Vars 11_markdown_instruction: |-
        Quello che vedi è un codice che utilizza, in maniera più complessa, gli stessi concetti del precedente esercizio. Quale valore devi assegnare alla variabile `sides` (<i>lati</i>) per disegnare questa immagine composta da quadrati?<br>
        <br>
        <i>Divertiti: prova con diversi numeri di `sides` (<i>lati</i>) per vedere come si modifica la figura!</i>
      Course 4 Artist Vars 12_markdown_instruction: Per disegnare la figura che vedi,
        la variabile `sides` (<i>lati</i>) va impostata a 5. Se usi valori più grandi
        disegni poligoni con più lati ed ottieni una figura più grande! Nota che,
        oltre alla variabile `sides` (<i>lati</i>), c'è un'altra variabile chiamata
        `length` (<i>lunghezza</i>). Puoi utilizzare questa variabile ogni volta che
        devi `spostarti in avanti`. Per disegnare questa figura la variabile `length`
        (<i>lunghezza</i>) va impostata a 75.
      Course 4 Artist Vars 13_markdown_instruction: |-
        Quando una figura ha molti lati, ogni lato deve essere più corto se desideri che l'intero modello si adatti allo schermo.<br>
        Ricrea l'algoritmo per questo bellissimo modello, ma anziché impostare manualmente la variabile `length` (<i>lunghezza</i>), usa un blocco matematico con all'interno la variabile `sides` (<i>lati</i>) per assicurarti che ogni forma si adatti correttamente. Il perimetro di ciascun poligono è 300 pixel.
      Course 4 Artist Vars 14_markdown_instruction: |-
        Tempo di giocare: Guarda! Ora l'algoritmo precedente è annidato all'interno di un altro ciclo. Fai degli esperimenti modificando i valori delle due variabili per disegnare delle figure fantastiche.<br><br>
        Per disegni ancora più belli, prova a giocare con i colori! Assegna dei colori a caso all'interno di ogni ciclo e osserva come cambia la figura che ottieni.
      Course 4 Artist Vars 2_markdown_instruction: |-
        Adesso nel blocco `vai avanti ...`, invece di usare un valore esplicito di pixel, si fa riferimento ad una variabile di nome `length` (<i>lunghezza</i>). Puoi impostare la variabile `length` a 150 per disegnare questo nuovo triangolo?<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-6#VIDEO" target="_blank">Video doppiato in italiano</a>
      Course 4 Artist Vars 3_markdown_instruction: 'Il ciclo proposto disegna un quadrato,
        ma manca qualcosa. Correggi in modo che utilizzi la variabile "lunghezza"
        per capire quanto lungo deve essere ogni lato? '
      Course 4 Artist Vars 4_markdown_instruction: Vorrei disegnare un rettangolo
        che sia alto il doppio di quanto è largo. C'è una variabile denominata `width`
        (<i>larghezza</i>) che deve essere impostata a 100. Riesci ad utilizzare il
        blocco matematico con le operazioni per risolvere questo esercizio?
      Course 4 Artist Vars 6_markdown_instruction: Ecco del codice che ti consente
        di disegnare un qualsiasi poligono regolare. C'è una nuova variabile denominata
        `sides` (<i>lati</i>) che è impostata a 4. Riesci ad usare la variabile `sides`
        (insieme al blocco matematico) per girare del giusto numero di gradi a prescindere
        da quanti lati ci sono nel poligono?
      Course 4 Artist Vars 7_markdown_instruction: |-
        Utilizza ciò che hai imparato nel precedente esercizio per disegnare questo esagono usando la variabile `sides` (<i>lati</i>).<br>
        <br>
        Hai notato che è possibile modificare un solo valore per disegnare un triangolo, un quadrato, un pentagono o un ottagono?
      Course 4 Artist Vars 8_markdown_instruction: 'Tempo di giocare: facciamo un
        esperimento con il numero di `sides`(<i>lati</i>) delle figure. Riesci a modificare
        l''algoritmo affinché la dimensione complessiva della figura disegnata rimanga
        la stessa, indipendentemente dal numero dei suoi lati?'
      Course 4 Bee 1_markdown_instruction: |-
        L'ape non sa cosa si nasconde dietro la nuvola! <br>
        Usa un blocco `se` per verificare se si tratta di un fiore oppure di un favo. <br>
        Poi, se c'è un fiore, raccogli una dose di nettare.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-2#VIDEO" target="_blank">Video doppiato in italiano</a>
      Course 4 Bee 2_markdown_instruction: Usa il blocco `se-altrimenti` per controllare
        ogni oggetto e verificare se si tratta di un fiore oppure di un favo. <b>Se</b>
        è un fiore, raccogli una dose di nettare ... <b>altrimenti</b>, produci una
        dose di miele!
      Course 4 Bee 3_markdown_instruction: |-
        L'oggetto nascosto può essere un fiore oppure un favo. Usa il blocco `se-altrimenti` per raccogliere il nettare <b>se</b> si tratta di un fiore, <b>altrimenti</b> per produrre il miele (dato che, in questo caso, si tratta sicuramente di un favo).
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-2#VIDEO" target="_blank">Video doppiato in italiano</a>
      Course 4 Bee 7_markdown_instruction: Utilizzate tutto quanto avete imparato
        finora per raccogliere tutto il nettare. Il fiore viola può avere 3, 2 o 1
        di nettare.
      Course 4 Bee For Loops 11_markdown_instruction: Che cosa è sbagliato con questo
        ciclo (loop)? Vedi se puoi risolvere il problema e fare in modo che l'ape
        raccolga tutto il nettare.
      Course 4 Bee Params 1_markdown_instruction: Esamina la funzione `get 3 nectars`
        (<i>prendi 3 dosi di nettare</i>) che fa ruotare e spostare l'ape per raccogliere
        il nettare e riportarla alla posizione di partenza. Poi usala in una sequenza
        di blocchi per raccogliere tutto il nettare.
      Course 4 Bee Params 2_markdown_instruction: Modifica la funzione `get 3 nectar`
        (<i>prendi 3 dosi di nettare</i>) per girare a destra, invece che a sinistra,
        così l'ape può arrivare ai fiori.
      Course 4 Bee Params 3_markdown_instruction: |-
        Ora ci sono fiori su entrambi i lati!<br>
        <br>
        Abbiamo aggiunto un parametro denominato `direction` (<i>direzione</i>) alla funzione `get 3 nectar` (<i>prendi 3 dosi di nettare</i>). Abbiamo anche aggiunto due variabili `left` (<i>sinistra</i>) e `right` (<i>destra</i>) per chiamare ogni volta la funzione con la direzione giusta.<br>
        <br>
        Modifica il codice della funzione in modo che l'ape giri nella direzione indicata dal parametro passato alla funzione.
      Course 4 Bee Params 5_markdown_instruction: Partiamo da zero! Riesci a creare
        una nuova funzione chiamata `get 5 nectar` (<i>prendi 5 dosi di nettare</i>)
        che usa un nuovo parametro chiamato `direction` (<i>direzione </i>)?
      Course 4 Bee Params 6_markdown_instruction: |-
        In questo esercizio, sui fiori si trovano quantità differenti di nettare e il codice che trovi già pronto non risolve l'esercizio. Non sarebbe bello se potessimo raccogliere tutto il nettare con una sola funzione? <br>
        <br>
        Modifica la funzione `get 5 nectar` (<i>prendi 5 dosi di nettare</i>) aggiungendo un nuovo parametro, chiamato `nectar units` (<i>dosi di nettare</i>), che specifica la quantità di nettare da raccogliere.<br>
        <br>
        Probabilmente sarà meglio cambiare anche nome alla funzione e, se vuoi, puoi cambiare il nome anche ai parametri.
      Course 4 Bee Params 7_markdown_instruction: 'Usa la nuova funzione `get many
        nectar` (<i>prendi molte dosi di nettare</i>) per raccogliere tutto il nettare.

'
      Course 4 Bee Params 8_markdown_instruction: |-
        Una piccola sfida: ora c'è anche il miele di cui occuparsi!<br>
        <br>
        Adesso la funzione `get nectar make honey` (<i>raccogli nettare - produci miele</i>), oltre ai parametri `direction` (<i>direzione</i>) e `nectar_units` (<i>dosi di nettare</i>), ha anche il nuovo parametro `honey_units` (<i>dosi di miele</i>).<br>
        <br>
        Come devi modificare il codice della funzione in modo da usare i valori di questi parametri per decidere cosa fare?
      Course 4 EC 1a_markdown_instruction: Nessuna istruzione. Nessun suggerimento.
        Solo la sfida!
      Course 4 EC 1b_markdown_instruction: Nessuna istruzione. Nessun suggerimento.
        Solo la sfida!
      Course 4 EC 2a_markdown_instruction: Nessuna istruzione. Nessun suggerimento.
        Solo la sfida!
      Course 4 EC 2b_markdown_instruction: Nessuna istruzione. Nessun suggerimento.
        Solo la sfida!
      Course 4 EC 2c_markdown_instruction: Nessuna istruzione. Nessun suggerimento.
        Solo la sfida!
      Course 4 EC 2d_markdown_instruction: Nessuna istruzione. Nessun suggerimento.
        Solo la sfida!
      Course 4 Maze 4_markdown_instruction: |-
        Prova ad usare il blocco `ripeti 5 volte` per risolvere l'esercizio con meno blocchi.<br>
        <br>
        Ricorda che il blocco `ripeti ... volte` (detto anche <i>ciclo</i>) fa <b>ripetere</b> le azioni che si trovano all'interno del blocco per un numero di volte pari a quello che hai impostato.
      Course 4 Play Lab Params 1_markdown_instruction: |-
        In questo esercizio c'è una funzione chiamata `jump` (<i>salta</i>) che consente al cane di saltare in alto di 100 pixel.<br>
        <br>
        Clicca su "Esegui" ed utilizza questa nuova funzione per raccogliere tutte le bandierine muovendo il cane con i tasti freccia.
      Course 4 Play Lab Params 10_markdown_instruction: |-
        Abbiamo aggiunto al gioco ancora un'altra funzione che puoi usare.<br>
        <br>
        Programma il tuo gioco in modo tale da chiamare la funzione `level_up` (<i>sali di un livello</i>) se la variabile `player_score` (<i>punteggio</i>) diventa maggiore di un certo valore (per esempio: `player_score` > 6).<br>
        <br>
        Clicca su "Esegui" per giocare e arriva al livello 3 per passare al prossimo esercizio.<br>
        <br>
        Nota: nella funzione `level_up` viene usata la variabile `enemy_speed` che significa <i>velocità del nemico</i>.
      Course 4 Play Lab Params 2_markdown_instruction: |-
        Ora le bandierine sono troppo in alto per poterle raggiungere con la funzione `jump` (<i>salta</i>)! Dovresti associare alle frecce `verso l'alto` e `verso il basso` una funzione che consenta di avere salti di diverse altezze.<br>
        <br>
        Per far questo devi modificare la funzione `jump` (<i>salta</i>): clicca su "modifica" e poi aggiungile un parametro `height` (<i>altezza</i>): scrivi il nome che vuoi dargli e clicca su "Aggiungi un parametro".<br>
        <br>
        - La freccia verso l'alto dovrebbe permettere al cane di fare un salto in alto di 200 pixel,<br>
        - la freccia verso il basso un salto in alto di soli 100 pixel.
      Course 4 Play Lab Params 3_markdown_instruction: "Nella funzione `jump` (<i>salta</i>)
        è stato aggiunto un ulteriore parametro in modo da poterla usare con diversi
        personaggi. Ogni `actor` (</i>personaggio</i>) è rappresentato da un numero,
        a partire da uno.<br>\n<br>\nModifica la funzione `jump` (<i>salta</i>) in
        modo che il suo codice usi il parametro `actor` (</i>personaggio</i>), oltre
        al parametro `height` (<i>altezza</i>). "
      Course 4 Play Lab Params 4_markdown_instruction: In questo esercizio c'è una
        funzione chiamata `patrol` (<i>pattuglia</i>) in cui devi inserire il codice
        che serve per far muovere il gatto prima in su e poi in giù di 400 pixel.
      Course 4 Play Lab Params 5_markdown_instruction: |-
        Modifica la funzione `patrol` (<i>pattuglia</i>) aggiungendo un parametro `actor` (<i>personaggio</i>), in modo tale da poterla eseguire per i diversi personaggi. Ricorda che sono identificati dai numeri 1, 2 e 3.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-14#VIDEO" target="_blank">Video doppiato in italiano</a>
      Course 4 Play Lab Params 6_markdown_instruction: |-
        Aggiungi un altro parametro chiamato `speed` (<i>velocità</i>)
        alla funzione `patrol` (<i>pattuglia</i>). Prova ad utilizzare il blocco `imposta il personaggio ... velocità ...` con il nuovo parametro `speed` (<i>velocità</i>) per aiutare il pinguino (personaggio 2) a prendere entrambe le bandierine prima che gli altri prendano la loro.
      Course 4 Play Lab Params 7_markdown_instruction: |-
        Esamina il codice che trovi già pronto per vedere se riesci a capire cosa fa ogni blocco.<br>
        <br>
        Quando hai finito, utilizza i tasti freccia per far muovere il cane e raccogliere tutte le bandierine.<br>
        <br>
        <b>Nota</b>: non è necessario modificare il codice.
      Course 4 Play Lab Params 8_markdown_instruction: Utilizza il blocco `quando
        il personaggio ... tocca ...` per collocare il cane (personaggio 1) in alto
        a sinistra SOLO quando tocca uno qualunque degli altri personaggi.
      Course 4 Play Lab Params 9_markdown_instruction: "Ecco un gioco usato in una
        precedente lezione, ma con la maggior parte del codice nascosta. C'è una nuova
        funzione `score_points` (<i>segna il punteggio</i>).<br>\n<br>\nModifica questa
        funzione in modo che aggiunga alla variabile  `player_score` (<i>punteggio</i>)
        il valore di un nuovo parametro `points` (<i>punti</i>).<br>\n<br>\nLa variabile
        `player_score` (<i>punteggio</i>) deve essere incrementata ogni volta che
        il cane colpisce il gatto con una fetta di torta e decrementata ogni volta
        che il gatto colpisce il cane con un sandwich.<br>\n<br>\nUna volta concluse
        queste modifiche clicca su \"Esegui\" per giocare. Quando il punteggio arriva
        a 6 si passa all'esercizio successivo. "
      Course 4 Play Lab Vars 1_markdown_instruction: In questo esercizio non devi
        scrivere alcun codice. Devi solo premere "Esegui" per giocare! <br> <br> Qui
        sei il cane che sta cercando di raccogliere più bandierine del gatto. Utilizza
        la freccia verso il basso per muovere il cane. Premi "Termina" quando hai
        finito di giocare.
      Course 4 Play Lab Vars 2_markdown_instruction: |-
        Quella del precedente esercizio non è stata un bella gara! Modifica la variabile denominata `dog_speed` (<i>velocità del cane</i>) per essere sicuro di poter raccogliere più bandierine del gatto. Il primo che raccoglie 10 bandierine, vince!
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      Course 4 Play Lab Vars 3_markdown_instruction: Ecco un nuovo tipo di gioco!<br><br>Non
        devi modificare niente in questo esercizio.<br><br>Utilizza le frecce verso
        sinistra e verso destra per muoverti, e la freccia verso l'alto per saltare.
        Riesci a raccogliere tutte le bandierine?
      Course 4 Play Lab Vars 4_markdown_instruction: Ora c'è una nuova variabile chiamata
        `height` (<i>altezza</i>) che serve a controllare quanto in alto il cane può
        arrivare con un salto. Modifica il valore a cui viene impostata `height`,
        in modo che il cane possa saltare abbastanza in alto da arrivare a raggiungere
        tutte le bandierine.
      Course 4 Play Lab Vars 6_markdown_instruction: |-
        Utilizza la freccia verso destra per far lanciare al cane una fetta di torta.<br>
        <br>
        Come vengono assegnati i punti? <br>
        Bisogna aggiungere 1 alla variabile `points` (<i>punteggio</i>) ogni volta che il cane (personaggio 1) colpisce il gatto (personaggio 2) con una fetta di torta.<br>
        <br>
        Per ottenere questo risultato, usa l'evento `quando il personaggio 2 tocca una cosa qualunque` così da attivare un aggiornamento del tuo punteggio ogni volta che l'evento accade. Per incrementare il <i>punteggio</i>, `imposta points a points + 1`<br>
        <br>
        Fai salire il tuo punteggio fino a 10 (un punto alla volta!) per risolvere l'esercizio.
      Course 4 Play Lab Vars 7_markdown_instruction: |-
        Bello! Ora facciamo in modo che il gioco non sia troppo facile.<br>
        <br>
        Modifica il codice in modo da perdere un punto ogni volta che il cane (personaggio 1) viene colpito da un sandwich lanciato dal gatto (personaggio 2).<br>
        <br>
        Iniziamo con 10 punti così non è troppo difficile. Lascia che il punteggio scenda da 10 fino a 0 per risolvere l'esercizio.
      Course 4 Play Lab Vars 9_markdown_instruction: "Tempo di giocare: qui ci sono
        tutte le variabili con cui abbiamo giocato finora, e anche qualcuna in più
        in caso ti serva.<br>\n<br>\n<b>Attenzione</b>: se vuoi, puoi cambiare nome
        alle variabili esistenti o introdurne di nuove. Clicca sul triangolino con
        la punta verso il basso accanto al nome della variabile.<br>\n<br>\nOra ci
        sono così tanti blocchi nella cassetta degli attrezzi che li abbiamo organizzati
        in diverse categorie. Prenditi un po' di tempo per esaminare tutto ciò che
        è a tua disposizione. Scorri verso il basso per vedere tutti i comandi nell'area
        di lavoro.<br>\n<br>\n<i>Scorri verso il basso per vedere tutti i comandi
        presenti nell'area di lavoro.</i><br>\nQuando hai finito la tua esplorazione,
        prova a creare un gioco oppure una storia usando i cicli, le variabili e gli
        eventi. "
      Course 4 Play Labs For Loops 1_markdown_instruction: Fai in modo che il cane
        dica tutti i numeri da 1 a 100. Utilizza un <i>ciclo con contatore</i> e il
        blocco `counter` (<i>contatore</i>) per far dire al cane il valore della variabile
        contatore ogni volta che il ciclo viene ripetuto.
      Course 4 Playlab For Loop Freeplay_markdown_instruction: 'Tempo di giocare:
        usa tutto quello che hai imparato finora per creare un gioco che includa un
        <i>ciclo con contatore</i>!'
      Course 4 Playlab For Loops 4b_markdown_instruction: |-
        Ognuno di questi due personaggi si sposta ad ogni ripetizione di una distanza pari al valore della variabile  `counter` (<i>contatore</i>) nel proprio <i>ciclo con contatore</i> (`Actor_1_counter` = <i>contatore del personaggio 1</i>). Nei loro cicli i contatori cambiano con un passo differente.<br>
        Puoi modificare il passo di incremento di uno dei <i>cicli con contatore</i> in modo che entrambi i personaggi riescano ad arrivare alla propria bandierina?
      Course 4 Playlab For Loops 5b_markdown_instruction: Modifica il passo di questi
        due <i>cicli con contatore</i> in modo che i due personaggi si fermino nello
        stesso punto.
      Course 4 Playlab For Loops 6b_markdown_instruction: "In questo esercizio il
        <i>ciclo con contatore</i> viene usato per realizzare un gioco che diventa
        via via più difficile perché il personaggio rimane visibile per sempre meno
        tempo!<br>\nModifica i valori usati nel <i>ciclo con contatore</i> (e, se
        vuoi, anche il personaggio) per creare il gioco che preferisci! <br>\nPremi
        \"Esegui\" e clicca più volte possibile sul personaggio. Ce la fai a raggiungere
        il nostro record di 24? "
      Course 4 SCF 1_markdown_instruction: |-
        <b>Super Sfida sulle funzioni:</b> Usa le funzioni suggerite per disegnare quattro file di tre esagoni l'una (`draw a line of hexagons` = "disegna una fila di esagoni"). Osserva che le file di numero pari vengono disegnate spostate a destra.<br>
        <b>Nota</b>: `shift down/forward` = "scivola in basso e avanti"; `shift down/backward` = "scivola in basso e indietro".
      Course 4 SCF 1a_markdown_instruction: "<b>Super Sfida sulle funzioni:</b> Riesci
        a capire come raccogliere tutto questo nettare con il minor numero possibile
        di blocchi?"
      Course 4 SCF 1b_markdown_instruction: "<b>Super Sfida sulle funzioni:</b> Riesci
        a capire come produrre tutto questo miele?"
      Course 4 SCF 2_markdown_instruction: |-
        <b>Super Sfida sulle funzioni:</b> Usa quello che hai imparato nell'esercizio precedente per disegnare un'immagine come quella mostrata in questo esercizio.<br>
        <b>Nota</b>: Il codice diventa più semplice se usi le funzioni con parametri.
      Course 4 SCF 3_markdown_instruction: |-
        <b>Super Sfida sulle funzioni:</b> Usa quello che hai imparato nell'esercizio precedente per disegnare un'immagine come questa.<br>
        <br><i>Nota: Il codice diventa più semplice se usi le funzioni con parametri.</i><br>
        <img
        src="https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png"
        width="300px"/>
      Course 4 SCFL 1_markdown_instruction: "<b>Super Sfida sui cicli con contatore:</b>
        Risolvi questo esercizio usando il minor numero possibile di blocchi."
      Course 4 SCFL 1a_markdown_instruction: "<b>Super Sfida sui cicli con contatore:</b>
        Puoi far arrivare Scrat alla sua ghianda usando il minor numero possibile
        di blocchi?"
      Course 4 SCFL 2_markdown_instruction: "<b>Super Sfida sui cicli con contatore:</b>
        Risolvi questo esercizio usando il minor numero di blocchi possibile."
      Course 4 SCFL 3_markdown_instruction: |-
        <b>Super Sfida sui cicli con contatore:</b> Riesci a ricreare questo disegno?<br>
        <img src="https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png"
        width="350px"/>
      Course 4 SCFL 4_markdown_instruction: |-
        <b>Super Sfida sui cicli con contatore:</b> Riesci a ricreare questo disegno?<br>
        <img src="https://images.code.org/407f502735beec686187451bdf67aada-image-1446002848700.59.34.png"
        width="350px"/>
      Course 4 SCFL 6_markdown_instruction: |-
        <b>Super Sfida sui cicli con contatore:</b> Riesci a ricreare questo disegno usando un solo ciclo?<br>
        <img
        src="https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png"
        width="350px"/>
      Course 4 SCFL 7_markdown_instruction: |-
        <b>Super Sfida sui cicli con contatore:</b> L'artista vuole disegnare qualche onda! Riesci ad aiutarlo ricreando questo disegno?<br>
        <img src="https://images.code.org/fba3423f2e9a405d4d3859de32cdb0f3-image-1446102880655.13.36.png"
        width="350px"/>
      Course 4 SCFP 1_markdown_instruction: Crea una funzione con parametri che permetta
        all'artista di saltare all'indietro e in avanti di x pixel e anche su e giù
        di y pixel (con numeri positivi e negativi).
      Course 4 SCV 1_markdown_instruction: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png"
        width="250px"/><br>
        <b>Super Sfida sulle variabili:</b> ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Questo esercizio è fatto apposta per essere difficile da risolvere! Riesci a lavorarci su fino a capire come si fa?
      Course 4 SCV 2_markdown_instruction: |-
        <img src="https://images.code.org/85f0b27009edd86eff78692004b9ed52-image-1444712655590.02.32.png"
        width="250px"/><br>
        <b>Super Sfida sulle variabili:</b> ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Questo esercizio è fatto apposta per essere difficile da risolvere! Riesci a lavorarci su fino a capire come si fa?
      Course 4 SCV 3_markdown_instruction: |-
        <b>Super Sfida sulle variabili:</b> ora hai imparato tutto quello che devi sapere per risolvere un esercizio difficile come questo! Il gioco che ti proponiamo di realizzare è complicato. Ce la fai a perseverare fino a trovare la soluzione?<br>
        <hr>
        Questo è un gioco di inseguimenti!  Muovendo il cane, tocca il gatto per ottenere 2 punti e il pinguino per ottenere 3 punti.  Arriva <u>esattamente</u> a 10 punti per vincere! Ma fai attenzione, quando il gatto e il pinguino si toccano, perdi 1 punto.<br>
        <b>
        Aggiungi i blocchi necessari per far funzionare il gioco nel modo in cui è stato spiegato.<br>
        - Come puoi muovere il cane (personaggio 1) in tutte le direzioni utilizzando i tasti freccia?<br>
        - Come puoi aggiungere punti quando il cane tocca il gatto (personaggio 2) o il pinguino (personaggio 3)?<br>
        - Come puoi togliere un punto quando il gatto ed il pinguino si toccano?</b>
      Course 4 SCV 4_markdown_instruction: "<b>Super Sfida sulle variabili:</b> risolvi
        questo esercizio con il minore numero possibile di blocchi!"
      Course 4 SCV 5_markdown_instruction: "<b>Super Sfida sulle variabili:</b> risolvi
        questo esercizio con il minore numero possibile di blocchi!"
      Course 4 SCV 6_markdown_instruction: |-
        <img src="https://images.code.org/499fc71a0a06bacb68a9789ad57f8148-image-1445574373673.16.44.png"
        width="250px"/><br>
        <b>Super Sfida sulle variabili:</b> ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Questo esercizio è fatto apposta per essere difficile da risolvere! Riesci a lavorarci su fino a capire come si fa?
      Course 4 SCVP 1_markdown_instruction: Crea una funzione con parametri che permetta
        all'artista di saltare all'indietro e in avanti di x pixel e anche su e giù
        di y pixel (con numeri positivi e negativi).
      CourseF_PlayLab_vars10_markdown_instruction: "Tempo di giocare: qui ci sono
        tutte le variabili con cui abbiamo giocato finora, e anche qualcuna in più
        in caso ti serva.<br>\n<br>\n<b>Attenzione</b>: se vuoi, puoi cambiare nome
        alle variabili esistenti o introdurne di nuove. Clicca sul triangolino con
        la punta verso il basso accanto al nome della variabile.<br>\n<br>\nOra ci
        sono così tanti blocchi nella cassetta degli attrezzi che li abbiamo organizzati
        in diverse categorie. Prenditi un po' di tempo per esaminare tutto ciò che
        è a tua disposizione. Scorri verso il basso per vedere tutti i comandi nell'area
        di lavoro.<br>\n<br>\n<i>Scorri verso il basso per vedere tutti i comandi
        presenti nell'area di lavoro.</i><br>\nQuando hai finito la tua esplorazione,
        prova a creare un gioco oppure una storia usando i cicli, le variabili e gli
        eventi. "
      CourseF_PlayLab_vars2_markdown_instruction: |-
        Quella del precedente esercizio non è stata un bella gara! Modifica la variabile denominata `dog_speed` (<i>velocità del cane</i>) per essere sicuro di poter raccogliere più bandierine del gatto. Il primo che raccoglie 10 bandierine, vince!
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      CourseF_PlayLab_vars3_markdown_instruction: Ecco un nuovo tipo di gioco!<br><br>Non
        devi modificare niente in questo esercizio.<br><br>Utilizza le frecce verso
        sinistra e verso destra per muoverti, e la freccia verso l'alto per saltare.
        Riesci a raccogliere tutte le bandierine?
      CourseF_PlayLab_vars6_markdown_instruction: |-
        Utilizza la freccia verso destra per far lanciare al cane una fetta di torta.<br>
        <br>
        Come vengono assegnati i punti? <br>
        Bisogna aggiungere 1 alla variabile `points` (<i>punteggio</i>) ogni volta che il cane (personaggio 1) colpisce il gatto (personaggio 2) con una fetta di torta.<br>
        <br>
        Per ottenere questo risultato, usa l'evento `quando il personaggio 2 tocca una cosa qualunque` così da attivare un aggiornamento del tuo punteggio ogni volta che l'evento accade. Per incrementare il <i>punteggio</i>, `imposta points a points + 1`<br>
        <br>
        Fai salire il tuo punteggio fino a 10 (un punto alla volta!) per risolvere l'esercizio.
      CourseF_PlayLab_vars7_markdown_instruction: |-
        Utilizza la freccia verso destra per far lanciare al cane una fetta di torta.<br>
        <br>
        Come vengono assegnati i punti? <br>
        Bisogna aggiungere 1 alla variabile `points` (<i>punteggio</i>) ogni volta che il cane (personaggio 1) colpisce il gatto (personaggio 2) con una fetta di torta.<br>
        <br>
        Per ottenere questo risultato, usa l'evento `quando il personaggio 2 tocca una cosa qualunque` così da attivare un aggiornamento del tuo punteggio ogni volta che l'evento accade. Per incrementare il <i>punteggio</i>, `imposta points a points + 1`<br>
        <br>
        Fai salire il tuo punteggio fino a 10 (un punto alla volta!) per risolvere l'esercizio.
      CourseF_PlayLab_vars8_markdown_instruction: |-
        Utilizza la freccia verso destra per far lanciare al cane una fetta di torta.<br>
        <br>
        Come vengono assegnati i punti? <br>
        Bisogna aggiungere 1 alla variabile `points` (<i>punteggio</i>) ogni volta che il cane (personaggio 1) colpisce il gatto (personaggio 2) con una fetta di torta.<br>
        <br>
        Per ottenere questo risultato, usa l'evento `quando il personaggio 2 tocca una cosa qualunque` così da attivare un aggiornamento del tuo punteggio ogni volta che l'evento accade. Per incrementare il <i>punteggio</i>, `imposta points a points + 1`<br>
        <br>
        Fai salire il tuo punteggio fino a 10 (un punto alla volta!) per risolvere l'esercizio.
      CourseF_PlayLab_vars9_markdown_instruction: |-
        Bello! Ora facciamo in modo che il gioco non sia troppo facile.<br>
        <br>
        Modifica il codice in modo da perdere un punto ogni volta che il cane (personaggio 1) viene colpito da un sandwich lanciato dal gatto (personaggio 2).<br>
        <br>
        Iniziamo con 10 punti così non è troppo difficile. Lascia che il punteggio scenda da 10 fino a 0 per risolvere l'esercizio.
      D_Frozen_nested3_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Trasformiamo la figura in un fiocco di neve."_

        Ora usa il blocco `salta a 200 avanti 200 in basso` per far saltare di nuovo Elsa al centro e farla girare intorno per disegnare la fila di figure in diverse direzioni.

        Che fiocchi spettacolari che puoi realizzare!
        <hr/>
        Guarda questi esempi con diversi poligoni:
        ![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)
        ![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)
        ![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)

        Delle forme astratte potrebbero rendere il fiocco di neve più simile a uno di questi:
        ![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)
        ![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)
        ![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)
      D_Frozen_nested4_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Cosa succede se disegniamo i fiocchi di neve uno sopra l'altro?"_

        Prova a sovrapporre due diverse figure di fiocchi di neve una sopra l'altra con una piccola rotazione tra le due - guarda cosa ottieni!
      D_Frozen_nested5_markdown_instruction: '![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _"Dai spazio alla tua creatività, divertiti con forme e angoli per disegnare
        nuovi fiocchi di neve! "_'
      D_Frozen_nested6_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Proviamo qualcosa di nuovo. Questa volta, pattina a  zig-zag"_


        <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" style="float: left; margin: 0 15px 15px 0;" />
        Disegna uno schema a scalinata che utilizza angoli compresi tra 75 e 105 gradi -- ma assicurati che le curve a sinistra e a destra utilizzino lo stesso angolo.
        (Dopo scoprirai perché.)
      D_Frozen_nested7_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Ora girati e torna da dove siamo venuti."_

        Ruota di 180 gradi e disegna di nuovo lo stesso schema a scalinata!

        - Il resto di questa lezione sarà più facile se metti tutto il codice dentro ad un ciclo per far disegnare Elsa: ruota di 180 gradi, disegna, quindi ruota di nuovo di 180 gradi.

        <hr/>

        Ecco un esempio di scale che usa un angolo di 76 gradi:

        ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)
      D_Frozen_nested8_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Gira e trasforma la figura in un fiocco di neve."_

        Fai ruotare questa figura 5 o 6 volte fino a formare un cerchio.
        - Se scegli di farla ruotare 5 volte, usa angoli di 72 gradi.
        - Se scegli di farla ruotare 6 volte, usa angoli di 60 gradi.
        <hr/>

        Ecco un esempio di Elsa che fa ruotare uno schema 6 volte:

        ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)
      D_Frozen_nested9_markdown_instruction: |
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _"E adesso, cosa possiamo ancora fare? Esploriamo e creiamo le nostre meraviglie invernali! "_

        Fai qualche prova con ciò che hai creato. Disegna quello che vuoi!
        - Cosa succede se usi due angoli diversi nello schema a scalinata?
        - Cosa succede se rendi lo schema a rombo più lungo o più corto?
        - Cosa sembra ciò che ottieni disegnando due fiocchi di neve uno sopra l'altro?
      Fish Tank 1-validated_markdown_instruction: "**Fai una previsione**: Che cosa
        pensi accadrà quando eseguirai questo codice?"
      Fish Tank 1_markdown_instruction: "**Fai una previsione**: Che cosa pensi accadrà
        quando eseguirai questo codice?"
      Fish Tank 5-validated_markdown_instruction: Il nostro pesce si sente un po'
        solo. Aggiungi un altro personaggio nell'acquario.
      Fish Tank Predict_markdown_instruction: "**Fai una previsione**: Che cosa pensi
        accadrà quando eseguirai questo codice?"
      Food Fight!_markdown_instruction: |-
        Abbiamo aggiunto al gioco ancora un'altra funzione che puoi usare.<br>
        <br>
        Programma il tuo gioco in modo tale da chiamare la funzione `level_up` (<i>sali di un livello</i>) se la variabile `player_score` (<i>punteggio</i>) diventa maggiore di un certo valore (per esempio: `player_score` > 6).<br>
        <br>
        Clicca su "Esegui" per giocare e arriva al livello 3 per passare al prossimo esercizio.<br>
        <br>
        Nota: nella funzione `level_up` viene usata la variabile `enemy_speed` che significa <i>velocità del nemico</i>.
      Function intro Ryan_markdown_instruction: "Nella tua area di lavoro c'è una
        **funzione** chiamata \"costruisci ponte\".  Tutto il codice che ti serve
        per attraversare il fiume è lì dentro! \r\n \r\nAffianca due volte il piccolo
        blocco verde nell'area di lavoro per aggiustare il sentiero e condurre {currentPlayerName}
        alla torcia di pietrarossa [redstone_torch]."
      Geometric Pattern_markdown_instruction: "**Idea per un progetto:** Crea un modello
        utilizzando idee geometriche come forme. Realizzarlo richiede pianificazione
        e persistenza!"
      Geometric Sun_markdown_instruction: "**Idea per un progetto:** Crea un modello
        utilizzando idee geometriche come forme. Realizzarlo richiede pianificazione
        e persistenza!"
      Geometric Sun_2018_markdown_instruction: "**Idea per un progetto:** Crea un
        modello utilizzando idee geometriche come forme. Realizzarlo richiede pianificazione
        e persistenza!"
      Inspirational Artwork_markdown_instruction: |-
        <img src="https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      K-1 Bee Loops 2_markdown_instruction: |-
        Usa un blocco `ripeti` (detto anche <i>ciclo</i>) per muoverti, quindi raccogli il nettare e produci il miele!<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-1/lezione-14#VIDEO" target="_blank">Video doppiato in italiano</a>
      K-1 Bee Loops 3_markdown_instruction: Usa i blocchi `ripeti` (detti anche <i>cicli</i>)
        per prendere il nettare e fare il miele!
      K-1 Bee Loops 4_markdown_instruction: Usa i blocchi `ripeti` (detti anche <i>cicli</i>)
        per prendere il nettare, fare il miele e spostarti!
      K-1 Bee Loops 5_markdown_instruction: Usa i blocchi `ripeti` (detti anche <i>cicli</i>)
        per prendere il nettare e fare il miele!
      K-1 Bee Loops 6_markdown_instruction: Usa i blocchi `ripeti` (detti anche <i>cicli</i>)
        per prendere il nettare, fare il miele e spostarti!
      K-1 Maze Loops 11_markdown_instruction: Fammi arrivare al maialino! È più facile,
        se usi il blocco `ripeti`.
      K-1 Maze Loops 12_markdown_instruction: Fammi arrivare al maialino! È più facile,
        se usi il blocco `ripeti`.
      K-1 Maze Loops 2_markdown_instruction: Prova ad usare il nuovo blocco `ripeti`
        (detto anche <i>ciclo</i>) per farmi arrivare al maialino! Esso mi farà "ripetere",
        per il numero di volte che hai impostato, tutte le azioni all'interno del
        blocco.
      K-1 Maze Loops 8_markdown_instruction: Usa il blocco `ripeti` per farmi arrivare
        al maialino!
      MC Agent Freeplay_markdown_instruction: "**Tempo di giocare:** ora tocca a te!
        Programma l'Agente per farti aiutare ad esplorare questo mondo."
      MC_HOC_2017 Agent Test_markdown_instruction: "Clicca \"Esegui\" per muovere
        il giocatore usando le **frecce**.  \r\n\r\nPer superare questo livello, dovrai
        arrivare alla porta e aprirla (usando la **barra spaziatrice**) per raggiungere
        la casella arancione che si trova all'interno."
      MC_HOC_2017_01_markdown_instruction: "Clicca \"Esegui\" per muovere il giocatore
        usando le **frecce**.  \r\n\r\nPer superare questo livello, dovrai arrivare
        alla porta e aprirla (usando la **barra spaziatrice**) per raggiungere la
        casella arancione che si trova all'interno."
      MC_HOC_2017_01_Cole_markdown_instruction: Devi raccogliere tutti gli attrezzi
        in questo viaggio. Muoviti usando le **frecce** e raggiungi la cassa presente
        sul sentiero per vincere.
      MC_HOC_2017_01_Kiki_markdown_instruction: 'Per giocare questo livello, clicca
        il pulsante arancione "Esegui" sotto all''area di gioco, poi muovi il giocatore
        usando le **frecce**.  '
      MC_HOC_2017_01_RETRY_markdown_instruction: "{currentPlayerName} è bloccato in
        casa, ma l'Agent è qui per aiutarlo!   \r\n \r\n   \r\nAffianca un blocco
        \"muovi avanti\" al blocco \"quando esegui\" per portare l'Agent sulla pedana
        a pressione [PressurePlate_Up], poi premi \"Esegui\" e usa le frecce per far
        uscire {currentPlayerName} dalla casa e raccogliere la **cassa** [chest].
        \ \n"
      MC_HOC_2017_02_markdown_instruction: Il giocatore deve entrare in quel Bosco
        Segreto.  Aiuta l'Agent ad aprire il cancello scrivendo il codice necessario
        a farlo arrivare alla pedana a pressione.
      MC_HOC_2017_02_Cole_markdown_instruction: "{currentPlayerName} sta per partire
        per un'avventura! Per aiutarlo, prendi la **mappa** [map_empty] che si trova
        oltre la porta chiusa a destra. \r\n \r\nAffianca il codice nell'area di lavoro
        per muovere l'Agent sulla pedana a pressione [PressurePlate_Up] in modo che
        {currentPlayerName} possa passare. "
      MC_HOC_2017_02_Kiki_markdown_instruction: "Il giocatore sta per partire per
        un'avventura, ma prima deve ottenere la torcia nascosta al di là di quella
        porta chiusa. \r\n\r\nProgramma l'Agent affinché vada avanti due volte lungo
        il sentiero bianco fino alla pedana a pressione che apra la porta per il giocatore."
      MC_HOC_2017_02_Will_markdown_instruction: "Per terminare questo livello, il
        giocatore deve raggiungere la casella arancione nel Bosco Segreto che si trova
        oltre la porta chiusa.  \r\n\r\nIl codice nell'area di lavoro farà muovere
        l'Agent in avanti due volte per fargli raggiungere la pedana a pressione e
        aprire la porta per Alex o Steve."
      MC_HOC_2017_03_Cole_markdown_instruction: "{currentPlayerName} prosegue la sua
        avventura e ha bisogno della **bussola** [compass] per prepararsi per il viaggio.
        \ \r\n   \r\nProgramma l'Agente per far aprire il cancello."
      MC_HOC_2017_03_Kiki_markdown_instruction: "L'avventura del giocatore inizierà
        al di là della porta chiusa, nel Bosco Segreto!  \r\n\r\n\r\nAiuta l'Agent
        ad aprire la porta scrivendo il codice per farlo arrivare alla pedana a pressione."
      MC_HOC_2017_04_markdown_instruction: Modifica il ciclo dell'ultimo rompicapo
        per aiutare l'Agent a creare un sentiero sulla parte più larga di questo fiume.
      MC_HOC_2017_04POINT5_Cole_markdown_instruction: "Sei riuscito a uscire dalla
        palude!  Ora conduci il giocatore in salvo fino alla casella arancione. \n\n\nAiuta
        l'Agent a liberare il sentiero trovando uno schema semplice e usando i cicli
        per passare sulle prime due pedane a pressione."
      MC_HOC_2017_04POINT5_RYAN_markdown_instruction: "Sei riuscito a passare! \r\n\r\nOra
        aiuta {currentPlayerName} a superare sano e salvo il labirinto e a raccogliere
        l'**ascia** [diamond_axe]"
      MC_HOC_2017_04_Cole_markdown_instruction: "L'Agente può muoversi sull'acqua!
        \ \r\n \r\nUsa un ciclo `ripeti ... volte` per risolvere questo esercizio
        e aiuta {currentPlayerName} a raggiungere il **secchio** [bucket_empty] oltre
        la porta. "
      MC_HOC_2017_04_Kiki_markdown_instruction: "L'ingresso del Bosco Segreto ha condotto
        a questa stupenda oasi!  Per superare questo livello, il giocatore deve raggiungere
        la casella arancione nella capanna.  \r\n\r\nUsa un ciclo \"ripetizione\"
        per aiutare l'Agent ad arrivare alla pedana a pressione che apre la porta
        della capanna."
      MC_HOC_2017_05_markdown_instruction: "I cicli non sono sempre utili. \n\n\nQuesti
        cactus non stanno crescendo con uno schema normale, perciò un ciclo non li
        eliminerebbe correttamente.  Per questo motivo, ti abbiamo dato una funzione
        chiamata \"distruggi e muoviti\" che farà il lavoro sporco per te ogni volta
        che l'Agent incontra un ostacolo."
      MC_HOC_2017_05_Cole_markdown_instruction: "Oh no, non c'è più il ponte! \r\n\r\nProgramma
        l'Agente per ricostruire il ponte usando il blocco `metti assi di quercia`
        in modo che {currentPlayerName} possa raggiungere la **pala** [diamond_shovel]."
      MC_HOC_2017_05_Josh_markdown_instruction: "Oh no, il ponte è fuori uso! \n\n\nAiuta
        l'Agent a ricostruire il ponte in modo che il giocatore possa raggiungere
        la **pala**."
      MC_HOC_2017_05_Kiki_markdown_instruction: "È ora che il giocatore lasci il bosco
        segreto e prosegua la sua avventura, ma il ponte è fuori uso! \r\n\r\nAiuta
        l'Agent a ricostruire il ponte, poi raggiungi l'asse di legno in modo che
        il giocatore possa arrivare alla casella arancione."
      MC_HOC_2017_06_Cole_markdown_instruction: "Un altro fiume, ma questo è molto
        più largo! \r\n \r\nCorreggi questo codice per aiutare l'Agente a costruire
        un ponte in modo che {currentPlayerName} possa raggiungere la **piccozza**
        [diamond_pickaxe]."
      MC_HOC_2017_06_Josh_markdown_instruction: "Un altro fiume, ma questo è molto
        più largo!  \r\n\r\nCorreggi questo codice per aiutare l'Agent a costruire
        un ponte sul fiume."
      MC_HOC_2017_06_Kiki_markdown_instruction: "Un altro fiume, ma questo è molto
        più largo!  \r\n\r\nCorreggi questo codice per aiutare l'Agent a costruire
        un ponte sull'acqua."
      MC_HOC_2017_07_Cole_markdown_instruction: "C'è del ghiaccio che blocca il percorso!
        \ \r\n \r\nLa funzione `clear path` (*libera il passaggio*) può aiutarti a
        rimuovere il ghiaccio e far arrivare {currentPlayerName} fino al vagonetto
        [minecart_normal]! "
      MC_HOC_2017_07_Kiki_markdown_instruction: "I cicli non sono l'unico modo per
        ripetere il codice!  \r\n\r\nGuarda, ti abbiamo preparato una funzione chiamata
        \"elimina i cactus\" che farà il lavoro sporco e rimuoverà i cactus ogni volta
        che la userai. Usa due blocchi \"elimina i cactus\" per liberare il sentiero
        fino alla casella arancione. "
      MC_HOC_2017_07a_Kiki_markdown_instruction: Ora modifica questo ciclo per aiutare
        l'Agent a liberare un sentiero fino alla casella arancione.
      MC_HOC_2017_08_Cole_markdown_instruction: "Ora non dovrai distruggere prima
        di spostarti, bensì posizionare un blocco.  \r\n\r\nModifica la funzione fornita
        affinché funzioni per il deserto."
      MC_HOC_2017_08_Kiki_markdown_instruction: "Ora, invece di distruggere i cactus,
        dovrai posizionare una pietra sulla lava, per poi distruggere l'arenaria.
        \ \r\n\r\nModifica la funzione affinché funzioni per questo livello."
      MC_HOC_2017_08_RY_markdown_instruction: "Ora hai **DUE** funzioni tra cui scegliere!
        \n\n\nUsa queste funzioni per costruire rapidamente un ponte sulla lava per
        {currentPlayerName}."
      MC_HOC_2017_08_Will_markdown_instruction: "Ora hai **DUE** funzioni tra cui
        scegliere! \n\n\nUsa queste funzioni per costruire rapidamente un ponte sulla
        lava per il giocatore."
      MC_HOC_2017_09_Cole_markdown_instruction: Usa le funzioni per aiutare l'Agent
        a distruggere i giganteschi blocchi di terra che bloccano il sentiero del
        giocatore fino alla pedana a pressione.
      MC_HOC_2017_09_Kiki_markdown_instruction: "Questo codice iniziale non può essere
        rimosso.\r\n\r\nAggiungi i comandi alla funzione \"metti binario\" in modo
        che il programma nell'area di lavoro aiuti l'Agent a raggiungere la pedana
        a pressione. "
      MC_HOC_2017_09_RS_CLONE_markdown_instruction: Correggi questa funzione per riempire
        le buche, poi cammina sulla pedana a pressione per liberare un sentiero fino
        alla torcia.
      MC_HOC_2017_10_Cole_markdown_instruction: Usa le funzioni per liberare un sentiero
        per il vagonetto, poi entra nel Sottoportale.
      MC_HOC_2017_10_Cole_old_markdown_instruction: Prova a costruire dal principio
        una funzione che aiuti l'Agent a terminare questo vagonetto e a portare il
        giocatore fino alla casella arancione.
      MC_HOC_2017_10_Kiki_markdown_instruction: Prova a costruire dal principio una
        funzione che aiuti l'Agent a terminare questo vagonetto e a portare il giocatore
        fino alla casella arancione.
      MC_HOC_2017_10_RETRY_markdown_instruction: "Riesci a trovare la differenza tra
        le due funzioni nell'area di lavoro? \r\n \r\n`fix short path` = *prepara
        un percorso breve* `fix long path` = *prepara un percorso lungo* \r\n \r\nUsa
        queste funzioni insieme ad altri blocchi presi dalla cassetta degli attrezzi
        per liberare il passaggio per il vagonetto, poi raccogli **Pietra focaia e
        acciarino** [flint_and_steel]."
      MC_HOC_2017_10_RYAN_markdown_instruction: Prova a costruire dal principio delle
        funzioni che aiutino l'Agent a terminare questo vagonetto e a portare il giocatore
        fino alla casella arancione.
      MC_HOC_2017_10_RYAN2_markdown_instruction: Prova a costruire dal principio delle
        funzioni che aiutino l'Agent a terminare questo vagonetto e a portare il giocatore
        fino alla casella arancione.
      MC_HOC_2017_11_Kiki_markdown_instruction: Ora tocca a te! Guarda cosa riesci
        a creare attorno a questo lago congelato.
      MC_HOC_2017_13_Cole_markdown_instruction: "**Tempo di giocare:** ora tocca a
        te! Programma l'Agente per farti aiutare ad esplorare questo mondo."
      MC_HOC_2017_4.5v2_markdown_instruction: "Sei riuscito a uscire dalla palude!
        \ Ora conduci il giocatore in salvo fino alla casella arancione. \n\n\nAiuta
        l'Agent a liberare il sentiero trovando uno schema semplice e usando i cicli
        per passare sulle prime due pedane a pressione."
      MC_HOC_2017_Ali_markdown_instruction: "Guarda queste funzioni.  Come puoi usarle
        per evitare i Ghast e aiutare {currentPlayerName} a raggiungere sano e salvo
        il **Libro incantato** [book_enchanted]? \n\r\n`build short bridge` = *costruisci
        un ponte corto* `build long bridge` = *costruisci un ponte lungo* "
      MC_HOC_2017_FP10x10_markdown_instruction: "**Tempo di giocare:** ora tocca a
        te! Riesci a superare te stesso raccogliendo tutti i diamanti di questo livello?"
      MC_HOC_2017_FP10x10_RE_markdown_instruction: "**Tempo di giocare:** ora tocca
        a te! Riesci a superare te stesso raccogliendo tutti i diamanti di questo
        livello?"
      MC_HOC_2017_FP20x20_markdown_instruction: "**Tempo di giocare:** ora tocca a
        te! Programma l'Agente per farti aiutare ad esplorare questo mondo."
      MC_HOC_2017_Ryan_03_markdown_instruction: "Sapevi che puoi mettere più pezzi
        di codice in un ciclo?  \r\n\r\nUsa un ciclo \"ripetizione\" per aiutare l'Agent
        a costruire un ponte sul fiume posizionando dei blocchi nell'acqua."
      MC_HOC_2017_Ryan_05_markdown_instruction: "A volte devi eliminare degli oggetti
        che intralciano la via al tuo giocatore.  \r\nUsa il blocco \"distruggi\"
        per eliminare tutti i cactus presenti tra l'Agent e la pedana a pressione."
      MC_HOC_Kiki_02_markdown_instruction: Qualcuno deve stare sulla pedana a pressione
        perché la porta laterale si apra.  Aiuta l'Agent a raggiungere la pedana in
        modo che il giocatore possa lasciare la casa.
      Mike Test Bee Conditionals 1_markdown_instruction: |-
        La nuvola impedisce all'ape di sapere se dietro c'è un fiore oppure no. Verifica se c'è un fiore e solo in questo caso raccogli il nettare. Attenzione, ciò che trovi dietro la nuvola può cambiare di volta in volta!<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      Mike Test Bee Conditionals 2_markdown_instruction: Questo è un esercizio di
        riepilogo -- Raccogli tutto il nettare. Fai attenzione a non raccogliere il
        nettare dai fiori viola se non ne hanno.
      NEW Course 4 Artist Functions 1_markdown_instruction: Riesci a disegnare un
        quadrato con i lati di 100 pixel, usando un ciclo `ripeti ... volte`?
      NEW Course 4 Artist Functions 10.1_markdown_instruction: "Utilizzate le funzioni
        i puzzle precedente \nper disegnare questo modello."
      NEW Course 4 Artist Functions 11_markdown_instruction: |-
        Ora vogliamo creare una nuova funzione chiamata `draw a line of squares` (<i>disegna una fila di quadrati</i>) che disegna 6 quadrati uno di seguito all'altro. Riesci a costruire questa funzione usando la funzione `draw a square 20` (<i>disegna un quadrato di lato 20</i>) che trovi già pronta?<br>
        <br>
        Nota che adesso la penna disegna con un tratto più sottile. Clicca su "modifica" nella funzione `draw a square 20`per capire come si fa!
      NEW Course 4 Artist Functions 12_markdown_instruction: Utilizza la funzione
        "disegna una fila di quadrati" (<i>draw a line of squares</i>) del precedente
        esercizio per disegnare questa figura.
      NEW Course 4 Artist Functions 13_markdown_instruction: |-
        Riesci a disegnare una stella usando la funzione `draw a line of squares` (<i>disegna una fila di quadrati</i>)?<br>
        <br>
        Attenzione: ad ogni ripetizione, dovresti spostarti avanti di 60 pixel e ruotare di 144 gradi.
      NEW Course 4 Artist Functions 14_markdown_instruction: 'Tempo di giocare: disegna
        qualunque cosa ti piaccia. '
      NEW Course 4 Artist Functions 2_markdown_instruction: Sai disegnare tre quadrati
        a distanza di 20 pixel l'uno dall'altro? Ogni quadrato ha il lato di 100 pixel.
      NEW Course 4 Artist Functions 3_markdown_instruction: |-
        Quello in verde è un nuovo tipo di blocco. Si chiama <i>funzione</i>. Clicca su "modifica" per inserire in questo blocco <i>funzione</i> il codice per disegnare un quadrato con i lati di 100 pixel. Se vuoi, cambia anche il nome (`draw a square` significa <i>disegna un quadrato</i>) e scrivi una descrizione di cosa fa.<br>
        Quando hai finito di modificare la funzione clicca su "Chiudi" per tornare al programma. Adesso puoi usare la <i>funzione</i> come un qualunque altro blocco.
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-12#VIDEO" target="_blank">Video doppiato in italiano</a> (solo la seconda parte)
      NEW Course 4 Artist Functions 4_markdown_instruction: Usa la funzione `draw
        a square` (<i>disegna un quadrato</i>) per disegnare questa figura.
      NEW Course 4 Artist Functions 7_markdown_instruction: |-
        Stai imparando ad usare i blocchi funzione? Prova a modificare la funzione `draw a square` (<i>disegna un quadrato</i>) in modo che disegni un quadrato con i lati di 200 pixel.<br>
        <br>
        <b>Suggerimento</b>: clicca su "modifica" per cambiare il codice della funzione. Se vuoi, puoi cambiare anche il nome e la descrizione della funzione. Alla fine, clicca su "Chiudi" per salvare le modifiche.
      NEW Course 4 Artist Functions 8_markdown_instruction: |-
        Abbiamo inserito una nuova funzione chiamata `draw a triangle` (<i>disegna un triangolo</i>) ma non c'è ancora il codice. Riesci a modificare la definizione della funzione per disegnare un triangolo con i lati di 100 pixel?<br>
        <br><b>Suggerimento</b>: clicca su "modifica" ed inserisci il codice necessario all'interno del blocco `draw a triangle` (<i>disegna un triangolo</i>). Se vuoi, puoi cambiare anche il nome e la descrizione della funzione. Clicca su "Chiudi" per salvare le modifiche.
      NEW Course 4 Artist Functions 9_markdown_instruction: Riesci a risolvere questo
        esercizio aggiungendo un solo blocco?
      NEW Course 4 Artist Params 1_markdown_instruction: |-
        Riesci a definire il codice per la funzione `draw a square` (<i>disegna un quadrato</i>) in modo che disegni un quadrato con i lati di 50 pixel?<br>
        <br>
        Fai clic su "modifica" per iniziare. Se vuoi, puoi cambiare anche il nome e la descrizione della funzione.
      NEW Course 4 Artist Params 10_markdown_instruction: Crea un blocco funzione
        `draw a hexagon` (<i>disegna un esagono</i>) con un parametro per la lunghezza
        dei lati (denominata <i>length</i>) e poi disegna un esagono con i lati di
        100 pixel.
      NEW Course 4 Artist Params 11_markdown_instruction: Riesci a capire come disegnare
        questa figura? Modifica la funzione `draw a polygon` (<i>disegna un poligono</i>)
        per utilizzare il parametro `sides` (<i>lati</i>).
      NEW Course 4 Artist Params 12_markdown_instruction: Riesci a completare questo
        disegno? I lati di tutte le figure sono lunghi 100 pixel.
      NEW Course 4 Artist Params 13_markdown_instruction: |-
        In questo esercizio devi modificare la funzione `draw a polygon` (<i>disegna un poligono</i>).<br>
        <br>
        Ha già un parametro `sides` (<i>lati</i>) per disegnare un poligono con un numero di lati ogni volta diverso. Adesso aggiungi un parametro `length` (<i>lunghezza</i>) e modifica la funzione così da farle disegnare un poligono che abbia un perimetro sempre della stessa lunghezza indipendentemente dal numero di lati.<br>
        <br>
        Il perimetro di ogni poligono è lungo 200 pixel. Ti ricordi quale equazione ti consente di ottenere figure di uguale perimetro in base al numero di lati?
      NEW Course 4 Artist Params 14_markdown_instruction: |-
        Modifica la funzione `draw a spiral edge` (<i>disegna una spirale</i>) per aggiungere i parametri `length` (<i>lunghezza</i>) e `sides` (<i>lati</i>) di cui hai bisogno per ricreare queste figure. Tieni presente che:<br>
        <br>
        - il lato più corto della spirale quadrata è lungo 5 pixel,<br>
        - il lato più corto della spirale triangolare è lungo 10 pixel,<br>
        - il lato più corto della spirale esagonale è lungo 2 pixel,<br>
        - il lato più lungo per tutte le spirali è 100 pixel.
      NEW Course 4 Artist Params 15_markdown_instruction: |-
        Tempo di giocare: qui ci sono tutte le funzioni che hai scritto e anche qualcuna in più con cui puoi giocare: `draw a pinwheel` (<i>disegna una girandola</i>), `draw a shape` (<i>disegna un poligono</i>).<br>
        <br>
        Disegna qualcosa di incredibile!<br>
        <br>
        Prova a cambiare lo spessore della penna per vedere come cambiano i tuoi disegni!
      NEW Course 4 Artist Params 2_markdown_instruction: |-
        Crea da zero la funzione `draw triangle` (<i>disegna un triangolo</i>) che disegna un triangolo con lati di 50 pixel.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-14#VIDEO" target="_blank">Video doppiato in italiano</a>
      NEW Course 4 Artist Params 3_markdown_instruction: |-
        Ora usa la funzione che hai creato nel precedente esercizio (`draw a triangle`, <i>disegna un triangolo</i>) per disegnare 5 triangoli di seguito.<br>
        <br>
        Ogni triangolo dista 30 pixel dal precedente.
      NEW Course 4 Artist Params 4_markdown_instruction: |-
        Cosa c'è di diverso in questi blocchi funzione? Clicca su "Esegui" per vedere cosa succede.<br>
        <br>
        <b>Nota</b>: `draw a triangle with length` = <i>disegna un triangolo con lunghezza</i>.
      NEW Course 4 Artist Params 5_markdown_instruction: "La funzione `draw a pentagon`
        (<i>disegna un pentagono</i>) contiene il codice per disegnare un pentagono
        con i lati di lunghezza stabilita dal valore assegnato a `length` (<i>lunghezza</i>).<br>\n<br>\nInserisci,
        al posto di `???` nel blocco accanto a `length`, il valore da assegnare per
        disegnare un pentagono con i lati di 100 pixel. "
      NEW Course 4 Artist Params 6_markdown_instruction: Assegna i valori che il parametro
        `length` (<i>lunghezza</i>) deve assumere per disegnare (<i>draw</i>) queste
        figure, sostituendo ai diversi `???` i numeri corretti. Il quadrato (<i>square</i>)
        e il triangolo (<i>triangle</i>) hanno i lati di 100 pixel, mentre l'esagono
        (<i>hexagon</i>) ha i lati di 75 pixel.
      NEW Course 4 Artist Params 7_markdown_instruction: |-
        Riesci a completare questo disegno?<br>
        <br>
        Ogni triangolo ha i lati di 25 pixel più lunghi rispetto al precedente. Il primo triangolo ha i lati di 25 pixel.
      NEW Course 4 Artist Params 8_markdown_instruction: |-
        In questo esercizio il codice della funzione `draw a triangle with length` (<i>disegna un triangolo con lunghezza</i>) non è corretto.<br>
        Riesci a modificarlo per risolvere il problema e quindi disegnare dei triangoli con i lati di lunghezza pari a 25, 50 e 75 pixel?<br>
        <b>Nota</b>: riesci a capire come modificare ulteriormente la funzione per risolvere l'esercizio con soli 16 blocchi in totale?
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-14#VIDEO" target="_blank">Video doppiato in italiano</a>
      NEW Course 4 Artist Params 9_markdown_instruction: |-
        Clicca su "modifica" per completare la definizione della funzione `draw a square` (<i>disegna un quadrato</i>) ed aggiungere un parametro alla sua definizione. Come per il triangolo, il parametro da aggiungere rappresenta la lunghezza dei lati: puoi dargli il nome che preferisci (devi cliccare sul triangolino con la punta verso il basso) e puoi cambiare anche il nome della funzione.<br>
        <br>
        Poi usa la funzione così definita per disegnare 3 quadrati con i lati di 25, 50 e 75 pixel: in ognuno di essi l'angolo in basso a sinistra è a distanza di 100 pixel da quello del precedente.<br>
        <br>
        <b>Nota</b>: riesci a capire come modificare ulteriormente la funzione per risolvere l'esercizio con soli 15 blocchi in totale?
      NEW Course 4 Artist Params inspire_markdown_instruction: |-
        <img src="https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      NEW Course 4 Artist Vars 12_markdown_instruction: Riutilizza adesso l'algoritmo
        dell'esercizio precedente e scrivi il codice per disegnare un pentagono con
        i lati lunghi 150 pixel.
      NEW Course 4 Artist Vars 2_markdown_instruction: Inserisci il blocco numerico
        `???` nei blocchi `imposta length a` (<i>imposta lunghezza a</i>) e `ripeti
        ... volte` e scrivi al posto dei punti interrogativi i valori necessari per
        disegnare questo insieme di triangoli equilateri aventi i lati lunghi 50 pixel.
      NEW Course 4 Artist Vars 4_markdown_instruction: |-
        Proviamo di nuovo. <br>
        <br>
        Puoi impostare il valore della variabile `length` (<i>lunghezza</i>) a 60, così da disegnare questa accattivante figura con esagoni?
      NEW Course 4 Artist Vars 6_markdown_instruction: |-
        Questa figura è formata da pentagoni con il lato da 100 pixel. Riesci a disegnarla mettendo la variabile `length` (<i>lunghezza</i>) nei posti corretti ed impostandone il giusto valore? <br>
        <br>
        Hai notato che è sufficiente impostare il valore di `length` (<i>lunghezza</i>) una sola volta e il codice utilizza il valore giusto dappertutto?
      NEW Course 4 Bee For Loops 2_markdown_instruction: Aggiungi il codice necessario
        per esser sicuro che l'ape raccolga tutto il nettare. Osserva di quanto codice
        hai bisogno per risolvere questo esercizio! (Vedremo una soluzione più semplice
        nel prossimo esercizio.)
      NEW Course 4 Bee For Loops 3_markdown_instruction: |-
        Ecco, il blocco `ripeti con counter` (counter = <i>contatore</i>), detto anche <i>ciclo con contatore</i>, rende tutto molto più semplice! Questo è tutto il codice di cui hai bisogno: osserva bene come sono combinati i blocchi e poi clicca su "Esegui" per vedere come funziona. Puoi anche cliccare su "Fai un passo" per osservare l'esecuzione del codice un passo per volta.
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-9#VIDEO" target="_blank">Video doppiato in italiano</a>
      NEW Course 4 Bee For Loops 4 4_markdown_instruction: Ora bisogna spostarsi in
        avanti di `counter` (<i>contatore</i>) volte, e poi raccogliere il nettare
        `counter` volte. Riesci a svolgere questo compito usando due cicli?
      NEW Course 4 Bee For Loops 4_markdown_instruction: 'Nel blocco `ripeti con counter`
        (counter=<i>contatore</i>), detto anche <i>ciclo con contatore</i>, scrivi
        al posto di `???` la massima quantità di nettare che l''ape deve raccogliere. '
      NEW Course 4 Bee For Loops 5_markdown_instruction: Puoi usare un <i>ciclo con
        contatore</i> anche per contare all'indietro. In questo esercizio, prova a
        raccogliere il nettare contando all'indietro da 5 ad 1 a passi di 1.
      NEW Course 4 Bee For Loops 6_markdown_instruction: Il valore più a destra nel
        ciclo con contatore viene chiamato <i>passo</i>. Ogni volta che il ciclo viene
        eseguito, la variabile `counter` (<i>contatore</i>) cambia del valore indicato
        dal <i>passo</i>. Prova a raccogliere il nettare da questi fiori usando un
        passo di 2.
      NEW Course 4 Bee For Loops 7_markdown_instruction: |-
        Cosa devi fare in questo esercizio per raccogliere 3, 6, 9, 12, 15 dosi di nettare mentre ti sposti nel giardino? Il segreto è nella variabile `counter` (<i>contatore</i>)! Combina la variabile `counter` e un blocco matematico per spostarti e contemporaneamente raccogliere la giusta quantità di nettare.<br>
        Ricordati che se il ciclo deve contare "a crescere" il valore del passo deve corrispondere ad un incremento (quindi un numero positivo).
      NEW Course 4 Bee For Loops 8_markdown_instruction: Questo codice è da completare!
        Quale deve essere il passo in questo ciclo con contatore per raccogliere 3,
        6, 9, 12, 15 dosi di nettare?
      NEW Course 4 Play Lab Params 11_markdown_instruction: 'Tempo di giocare: divertiti
        a creare il gioco che preferisci. Ecco <a href="http://programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-15"
        target="_blank">alcune idee</a>. Puoi usare tutti i blocchi che trovi nella
        cassetta degli attrezzi.'
      New Minecraft Hero Project_markdown_instruction: "**Tempo di giocare:** ora
        tocca a te! Programma l'Agente per farti aiutare ad esplorare questo mondo."
      Overworld Chop Tree_markdown_instruction: 'Il legno è una risorsa molto importante:
        serve per costruire molte cose. Raggiungi l''albero e usa l''istruzione `distruggi`
        per abbatterlo.'
      Overworld Chop Tree_2018_markdown_instruction: 'Il legno è una risorsa molto
        importante: serve per costruire molte cose. Raggiungi l''albero e usa l''istruzione
        `distruggi` per abbatterlo.'
      Overworld House Frame Chosen_markdown_instruction: Costruisci il resto della
        casa con qualunque materiale ti piace. Devi usare più volte il blocco `ripeti
        ... volte`.
      Overworld House Frame Chosen_2018_markdown_instruction: Costruisci il resto
        della casa con qualunque materiale ti piace. Devi usare più volte il blocco
        `ripeti ... volte`.
      Overworld Move to Sheep_markdown_instruction: Aggiungi un secondo blocco `vai
        avanti` per raggiungere la pecora.
      Overworld Move to Sheep_2018_markdown_instruction: Aggiungi un secondo blocco
        `vai avanti` per raggiungere la pecora.
      Overworld Place Wall_markdown_instruction: Per costruire una casa devi iniziare
        con le mura. Costruisci la prima parte della tua casa mettendo le istruzioni
        `metti assi di ...` e `vai avanti` all'interno di un ciclo `ripeti … volte`.
      Overworld Place Wall_2018_markdown_instruction: Per costruire una casa devi
        iniziare con le mura. Costruisci la prima parte della tua casa mettendo le
        istruzioni `metti assi di ...` e `vai avanti` all'interno di un ciclo `ripeti
        … volte`.
      Overworld Shear Sheep_markdown_instruction: E' il momento di tosare le pecore!
        Usa l'istruzione `tosa` per raccogliere la lana da entrambe le pecore.
      Overworld Shear Sheep_2018_markdown_instruction: E' il momento di tosare le
        pecore! Usa l'istruzione `tosa` per raccogliere la lana da entrambe le pecore.
      PS copy 2-3 Bee Conditionals 5_markdown_instruction: |-
        I fiori viola possono avere una quantità di nettare pari a 0 oppure 1, ma tu non lo sai! Fai attenzione a non raccogliere nettare da un fiore viola se ne ha una quantità pari a 0.<br>
        Usa il blocco `se` per controllare se la quantità è 0 oppure 1.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-13#VIDEO" target="_blank">Video doppiato in italiano</a>
      Pizza on a Plate_markdown_instruction: "**Idea per un progetto:** Crea un'immagine
        di qualcosa del mondo reale che conosci bene. Realizzarlo richiede pianificazione
        e persistenza!"
      Robot Doodle_markdown_instruction: "**Idea per un progetto:** Crea un'immagine
        di qualcosa del mondo reale che conosci bene. Realizzarlo richiede pianificazione
        e persistenza!"
      Robot Doodle_2018_markdown_instruction: "**Idea per un progetto:** Crea un'immagine
        di qualcosa del mondo reale che conosci bene. Realizzarlo richiede pianificazione
        e persistenza!"
      Robot Drawing_markdown_instruction: "**Idea per un progetto:** Crea un'immagine
        di qualcosa del mondo reale che conosci bene. Realizzarlo richiede pianificazione
        e persistenza!"
      Robot_markdown_instruction: "**Idea per un progetto:** Crea un'immagine di qualcosa
        del mondo reale che conosci bene. Realizzarlo richiede pianificazione e persistenza!"
      Standalone_Artist_1_markdown_instruction: Benvenuto all'Artista! Prima di tutto,
        cerchiamo di disegnare un semplice quadrato utilizzando il blocco "gira a
        destra" e il blocco "vai avanti". Ogni lato è lungo 100 pixel.
      Standalone_Artist_2_markdown_instruction: 'Disegna questo rombo che ha i lati
        lunghi 150 pixel.<br><br><b>Attenzione</b>: un rombo ha gli angoli di 60 e
        120 gradi, ma i gradi dell’istruzione “gira” sono misurati rispetto al percorso
        davanti all’Artista. Vedi anche le spiegazioni del video del <a href="https://studio.code.org/s/course2/stage/4/puzzle/1">primo
        esercizio dell''Artista nel Corso 2</a>.'
      Standalone_Artist_3_markdown_instruction: 'Come fai a disegnare questo esagono
        che ha i lati lunghi 100 pixel? <br><br><b>Attenzione</b>: un esagono ha gli
        angoli di 120 gradi, ma i gradi dell’istruzione “gira” sono misurati rispetto
        al percorso davanti all’Artista. Vedi anche le spiegazioni del video del <a
        href="https://studio.code.org/s/course2/stage/4/puzzle/1">primo esercizio
        dell''Artista nel Corso 2</a>.'
      Standalone_Artist_4_markdown_instruction: Adesso c'è il nuovo blocco "ripeti
        6 volte". Questo blocco di ripetizione, detto anche "ciclo", ripete 6 volte
        quello che si trova al suo interno. Cosa succede se si ripete 6 volte il codice
        in grigio che trovi già pronto?
      Standalone_Artist_5.5_markdown_instruction: 'Osserva come abbiamo semplificato
        il codice utilizzando il blocco "ripeti ... volte" (ciclo). Per disegnare
        un fiore devi adesso ripetere per 12 volte tutta la sequenza di blocchi in
        grigio. Attenzione: ruota di 30 gradi dopo ogni ciclo del rombo altrimenti
        disegni sempre la stessa figura.'
      Standalone_Artist_5_markdown_instruction: Quante volte è necessario ripetere
        il codice che trovi già pronto per disegnare il fiore?
      Standalone_Artist_6_markdown_instruction: 'Ripeti 6 volte il codice che trovi
        già pronto (che disegna un esagono) per realizzare l''intera figura. Di quanti
        gradi devi girare ogni volta? Suggerimento: dividi il numero di gradi di un
        cerchio per il numero di ripetizioni.'
      Standalone_Artist_7_markdown_instruction: 'Una funzione è un altro strumento
        di programmazione che aiuta ad evitare inutili ripetizioni. Questa funzione
        disegna un fiore, e puoi usarla ogni volta che vuoi disegnare un fiore. Usala
        insieme al nuovo blocco "salta" per disegnare questi fiori. Suggerimento:
        i fiori sono distanti tra loro 150 pixel.'
      Standalone_Artist_8_markdown_instruction: Qui trovi la funzione "draw a shape"
        (<i>disegna una forma</i>) che è stata costruita in modo che disegni degli
        esagoni. Clicca su "Esegui" per vedere cosa fa il codice che trovi già pronto
        e poi fai degli esperimenti per vedere cosa succede. Puoi variare la funzione
        in modo che disegni una composizione di quadrati, triangoli o ottagoni? Cosa
        succede se vari anche altri valori?
      Standalone_Artist_9_markdown_instruction: Ora continua e realizza qualsiasi
        figura desideri! Hai anche una funzione vuota che puoi riempire a tuo piacere!
      Testing Quantum Farmer_markdown_instruction: |-
        Wow, ho trovato una buca davvero profonda! Non so quante palate di terra saranno necessarie per riempirla completamente. Riesci a scrivere un programma che la riempie fino a quando il terreno è livellato?<br>
        <br>
        <b>Suggerimento</b>: usa le opzioni nel menu a discesa del blocco `mentre`.
      Underground Avoiding Lava_markdown_instruction: Sotto alcuni di questi blocchi
        c'è la lava, che devi coprire per poter andare avanti. L'istruzione `se` ti
        è utile in questi casi. Aggiungi un istruzione `vai avanti` nel posto giusto
        per estrarre tutte le risorse disponibili.
      Underground Avoiding Lava_2018_markdown_instruction: Sotto alcuni di questi
        blocchi c'è la lava, che devi coprire per poter andare avanti. L'istruzione
        `se` ti è utile in questi casi. Aggiungi un istruzione `vai avanti` nel posto
        giusto per estrarre tutte le risorse disponibili.
      Underground If Statements_markdown_instruction: Ora la situazione si fa un po'
        più difficile. Estrai tre blocchi di pietrarossa, ma non cadere nella lava.
        Usa un'istruzione `se` per posizionare dei ciottoli se scopri la lava.
      Underground If Statements_2018_markdown_instruction: Ora la situazione si fa
        un po' più difficile. Estrai tre blocchi di pietrarossa, ma non cadere nella
        lava. Usa un'istruzione `se` per posizionare dei ciottoli se scopri la lava.
      beeDebugVideo1_markdown_instruction: Raccogli tutto il nettare.
      conditionals_forvideo_harvester_markdown_instruction: Raccogli tutte le pannocchie
        e le lattughe, poi conquista la zucca finale.
      course1_artist_loops_challenge4_markdown_instruction: '*"È il momento di lanciare
        i dadi! Mi aiuti a disegnarli?"*'
      course1_maze_debugging_challenge1_markdown_instruction: Correggi gli errori
        in questo programma. Togli i blocchi di troppo e aggiungi quelli che mancano.
        Fai arrivare l'uccellino fino al maialino!
      course1_maze_debugging_challenge2_markdown_instruction: Correggi questo esercizio.
        Ci sono già tutti i blocchi giusti, ma sono nell'ordine sbagliato!
      course2_maze_programming_challenge2_markdown_instruction: Alcune volte ci sono
        diversi modi per risolvere lo stesso problema. Alcune volte è più veloce andare
        all'indietro, piuttosto che muoversi in avanti!
      course3_artist_concept_challenge1_markdown_instruction: |-
        <img src="https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png"
        width="200px"/><br>
        <br>
        E ora una piccola sfida!<br>
        <br>
        Per ottenere la figura che vedi devi usare solo blocchi che ti sono già stati mostrati. Riesci a capire come ricrearla? Sentiti libero di fare più tentativi e di commettere errori. Nessuno si aspetta che tu ci riesca perfettamente al primo tentativo. <br>
        <br>
        <b>Suggerimento</b>: La figura che viene ripetuta è quasi identica a quella del <a href="https://studio.code.org/s/course4/stage/3/puzzle/11" target="_blank">precedente esercizio</a>, l'unica differenza consiste nel fatto che il primo ciclo disegna tratti di lunghezza leggermente diversa.
      course3_artist_functions_challenge1_markdown_instruction: Dopo aver definito
        una funzione, la puoi richiamare più e più volte - quando e dove vuoi! Prova
        questo codice per scoprire come funziona, dopo di che modificalo per creare
        un disegno tutto tuo!
      course3_artist_functions_challenge2_markdown_instruction: |-
        Puoi anche saltare in posizioni diverse dagli angoli della tela. Usando il blocco `salta a ... avanti ... in basso` puoi raggiungere assolutamente qualsiasi punto! Prova ad eseguire questo codice per vedere come funziona, poi personalizzalo e rendilo tuo!
        <xml>
        <block type="jump_to_xy">
        <title name="XPOS">???</title>
        <title name="YPOS">???</title>
        </block></xml>
      course3_bee_functions_challenge1_markdown_instruction: Dovrai cavartela da solo
        in questa sfida. Potrebbe essere più difficile di quanto sembri!
      course3_playLab_challenge1_markdown_instruction: |-
        *Gli **scoiattoli** sono terrorizzati all'idea che un **dinosauro** sia capitato in città! Riuscirà il coraggioso **cavaliere** a tranquillizzarli?*

        Regole:
        1. *Toccare gli scoiattoli fa aumentare il punteggio.*
        2. *Toccare il dinosauro riduce di molto il punteggio.*

        Ecco un gioco già impostato! Giocaci un po' per vedere come funziona.

        Bisognerebbe far succedere qualcosa di particolare quando superi un certo punteggio e quando vai sotto zero. Aggiungi del codice alle funzioni `win game` (*vittoria*) e `lose game` (*sconfitta*) per far funzionare il gioco come si deve. Fai clic sui suggerimenti per avere qualche idea!
      course4_artist_concept_challenge2_markdown_instruction: Crea cinque girandole
        usando il codice riportato di seguito.
      course4_artist_functions_challenge2_markdown_instruction: |-
        Puoi anche saltare in posizioni diverse dagli angoli della tela. Usando il blocco `salta a ... avanti ... in basso` puoi raggiungere assolutamente qualsiasi punto! Prova ad eseguire questo codice per vedere come funziona, poi personalizzalo e rendilo tuo!
        <xml>
        <block type="jump_to_xy">
        <title name="XPOS">???</title>
        <title name="YPOS">???</title>
        </block></xml>
      course4_artist_fwp_challenge1_markdown_instruction: Prova ad eseguire questo
        programma e ad apportare modifiche per vedere cosa succede. Riesci a capire
        come funziona? (Oppure cancellalo e sostituiscilo con qualcosa di totalmente
        diverso)
      course4_artist_variables_challenge2_markdown_instruction: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png" width="250px"/>

        Ora hai imparato tutto quello che ti serve per realizzare un disegno come questo! Questo esercizio è fatto apposta per essere difficile da risolvere! Riesci a lavorarci su fino a capire come si fa?
      courseA_artist_loops10_markdown_instruction: |-
        ## È ora di tornare a terra. Aiutami a posizionare le pietre così non cado in acqua!

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops10_2018_markdown_instruction: |-
        ## È ora di tornare a terra. Aiutami a posizionare le pietre così non cado in acqua!

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops11_markdown_instruction: "## Aiutami a costruire i gradini
        per vedere la barca che salpa.\r \n\r \n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)"
      courseA_artist_loops11_2018_markdown_instruction: "## Aiutami a costruire i
        gradini per vedere la barca che salpa.\r \n\r \n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)"
      courseA_artist_loops12_markdown_instruction: |-
        L'artista ha visto qualcosa di divertente al largo. Disegna ciò che pensi abbia visto. Quando sei soddisfatto, premi "Termina" per completare la lezione.

        ___
        ### Alcune idee:

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops12_2018_markdown_instruction: |-
        L'artista ha visto qualcosa di divertente al largo. Disegna ciò che pensi abbia visto. Quando sei soddisfatto, premi "Termina" per completare la lezione.

        ___
        ### Alcune idee:

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops2_markdown_instruction: |-
        Aiuta l'artista a disegnare questa linea: due volte avanti.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2018_markdown_instruction: |-
        Aiuta l'artista a disegnare questa linea: due volte avanti.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops3_markdown_instruction: |-
        Il nostro artista sta cercando di disegnare cinque volte una linea in avanti, ma non riesce a farlo correttamente. Puoi aiutarlo?

        ![expandable] (https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops3_2018_markdown_instruction: |-
        Il nostro artista sta cercando di disegnare cinque volte una linea in avanti, ma non riesce a farlo correttamente. Puoi aiutarlo?

        ![expandable] (https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops4_markdown_instruction: |-
        Ora usa un ciclo <xml><block type="controls_repeat_simplified_dropdown"><title
        name="TIMES" config="2-6">5</title></block></xml> per disegnare questa linea cinque volte!

        ![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops4_2018_markdown_instruction: |-
        Ora usa un ciclo <xml><block type="controls_repeat_simplified_dropdown"><title
        name="TIMES" config="2-6">5</title></block></xml> per disegnare questa linea cinque volte!

        ![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops5_markdown_instruction: "## Disegna una linea composta da
        sette segmenti. Questo diventerà il nostro orizzonte. \n\n![expandable] (https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)"
      courseA_artist_loops5_2018_markdown_instruction: "## Disegna una linea composta
        da sette segmenti. Questo diventerà il nostro orizzonte. \n\n![expandable]
        (https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)"
      courseA_artist_loops6_markdown_instruction: |-
        ## Mettiamo una bella collina sullo sfondo.

        ![expandable] (https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops6_2018_markdown_instruction: |-
        ## Mettiamo una bella collina sullo sfondo.

        ![expandable] (https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops7_markdown_instruction: |-
        ## Usa il ciclo <xml><block type="controls_repeat_simplified_dropdown"><title
        name="TIMES" config="3-10">???</title></block></xml> per aggiungere le onde all'acqua.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_2018_markdown_instruction: |-
        ## Usa il ciclo <xml><block type="controls_repeat_simplified_dropdown"><title
        name="TIMES" config="3-10">???</title></block></xml> per aggiungere le onde all'acqua.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_forVideo_markdown_instruction: |-
        ## Usa il ciclo <xml><block type="controls_repeat_simplified_dropdown"><title
        name="TIMES" config="3-10">???</title></block></xml> per aggiungere le onde all'acqua.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops8_markdown_instruction: |-
        ## Ci serve una scala per salire sulla barca.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2018_markdown_instruction: |-
        ## Ci serve una scala per salire sulla barca.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops9_markdown_instruction: "**Sfida:** la scaletta per scendere
        al molo è rotta, aiutami a ripararla.\r \n\r \n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)"
      courseA_artist_loops9_2018_markdown_instruction: "**Sfida:** la scaletta per
        scendere al molo è rotta, aiutami a ripararla.\r \n\r \n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)"
      courseA_artist_loops_challenge1_markdown_instruction: |-
        Puoi usare un ciclo per disegnare molte linee di seguito.

        Riesci a disegnare una casa? Falla proprio come ti piace! Prova a cercare schemi che si ripetono!

        Ecco qualche idea:

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge1_2018_markdown_instruction: |-
        Puoi usare un ciclo per disegnare molte linee di seguito.

        Riesci a disegnare una casa? Falla proprio come ti piace! Prova a cercare schemi che si ripetono!

        Ecco qualche idea:

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge2a_markdown_instruction: |-
        *"Aiutami a preparare il campeggio!"*

        Usa i blocchi nella cassetta degli attrezzi per disegnare queste tre tende.
      courseA_artist_loops_challenge2a_2018_markdown_instruction: |-
        *"Aiutami a preparare il campeggio!"*

        Usa i blocchi nella cassetta degli attrezzi per disegnare queste tre tende.
      courseA_bee_seq10_markdown_instruction: Prova tu! Raccogli tutto il nettare.
      courseA_bee_seq4_markdown_instruction: Prova da solo!
      courseA_bee_seq6_markdown_instruction: Adesso l'ape deve raccogliere il nettare
        da due fiori!
      courseA_bee_seq7_markdown_instruction: Aggiungi due blocchi per competare l'esercizio!
      courseA_collector_loops1_markdown_instruction: |-
        **Tempo di giocare:** questa è Laura l'Avventuriera! Muovila per farle raccogliere più diamanti che puoi.

        Trascina i blocchi nell'area di lavoro e cerca di capire come prendere i diamanti. Raccogli almeno un diamante per completare questo esercizio.

        (Se non sei riuscito a raccogliere tutti i diamanti, ma sei soddisfatto, premi il pulsante "Termina")
      courseA_collector_loops12_markdown_instruction: |-
        *"Evviva! Raccogli più diamanti che puoi!"*
        (Se non sei riuscito a raccogliere tutti i diamanti, ma sei soddisfatto, premi il pulsante "Termina")
      courseA_collector_loops12_2018_markdown_instruction: |-
        *"Evviva! Raccogli più diamanti che puoi!"*
        (Se non sei riuscito a raccogliere tutti i diamanti, ma sei soddisfatto, premi il pulsante "Termina")
      courseA_collector_loops1_2018_markdown_instruction: |-
        **Tempo di giocare:** questa è Laura l'Avventuriera! Muovila per farle raccogliere più diamanti che puoi.

        Trascina i blocchi nell'area di lavoro e cerca di capire come prendere i diamanti. Raccogli almeno un diamante per completare questo esercizio.

        (Se non sei riuscito a raccogliere tutti i diamanti, ma sei soddisfatto, premi il pulsante "Termina")
      courseA_collector_loops2_markdown_instruction: "Raccogli tutte e tre le perle!
        Muovi Laurel su ogni pezzo del tesoro e poi usa questo blocco:\r\n <xml><block
        type=\"collector_collect\"/></xml>\n"
      courseA_collector_loops2_2018_markdown_instruction: "Raccogli tutte e tre le
        perle! Muovi Laurel su ogni pezzo del tesoro e poi usa questo blocco:\r\n
        <xml><block type=\"collector_collect\"/></xml>\n"
      courseA_collector_loops3_markdown_instruction: |-
        Come può Laura raccogliere tutti e cinque i diamanti usando un solo blocco?
        <xml><block type="maze_moveEast"/></xml>
      courseA_collector_loops3_2018_markdown_instruction: |-
        Come può Laura raccogliere tutti e cinque i diamanti usando un solo blocco?
        <xml><block type="maze_moveEast"/></xml>
      courseA_collector_preLoops7_markdown_instruction: "Raccogli tutte e tre le perle!
        Muovi Laurel su ogni pezzo del tesoro e poi usa questo blocco:\r\n <xml><block
        type=\"collector_collect\"/></xml>\n"
      courseA_harvester_forVideo_markdown_instruction: Riesci a raccogliere tutte
        le pannocchie usando **un** solo blocco di movimento?
      courseA_harvester_loops1_markdown_instruction: Aiuta la contadina a raccogliere
        tutte le pannocchie!
      courseA_harvester_loops10_markdown_instruction: Aiuta la contadina a raccogliere
        tutte e cinque le pannocchie!
      courseA_harvester_loops11_markdown_instruction: 'Provane un altro da solo! '
      courseA_harvester_loops2_markdown_instruction: La contadina deve raccogliere
        tutte le pannocchie! Riesci ad individuare il percorso?
      courseA_harvester_loops3_markdown_instruction: Riesci a raccogliere tutte le
        pannocchie usando **un** solo blocco di movimento?
      courseA_harvester_loops4_markdown_instruction: |-
        *"Ho bisogno di aiuto per capire cosa c'è di sbagliato!"*

        Puoi aiutare la contadina a trovare l'errore nel programma?
      courseA_harvester_loops5_markdown_instruction: Prova da solo! Riesci a raccogliere
        anche l'ultima pannocchia?
      courseA_harvester_loops5a_markdown_instruction: Dai un'occhiata a tutte queste
        pannocchie! Riusciresti a raccoglierle tutte da solo?
      courseA_harvester_loops5b_markdown_instruction: Puoi modificare il programma
        per fare in modo che la contadina raccolga tutte le pannocchie?
      courseA_harvester_loops6_markdown_instruction: Avrai bisogno di **un** blocco
        <xml><block type="maze_moveWest"></block></xml> e di **un** blocco <xml><block
        type="maze_moveNorth"></block></xml> per finire questo esercizio!
      courseA_harvester_loops7_markdown_instruction: Prova da solo!
      courseA_harvester_loops9_markdown_instruction: Riesci a capire come raccogliere
        *tutte* le pannocchie?
      courseA_harvester_seq1_markdown_instruction: Aiuta la contadina a raccogliere
        la pannocchia!
      courseA_harvester_seq10_markdown_instruction: La contadina deve raccogliere
        tutte le pannocchie! Riesci ad individuare il percorso?
      courseA_harvester_seq11_markdown_instruction: Prova da solo! Raccogli tutte
        le pannocchie.
      courseA_harvester_seq12_markdown_instruction: |-
        *Grazie dell'aiuto!*

        Raccogli tutte le pannocchie.
      courseA_harvester_seq13_markdown_instruction: Aiuta la contadina a raccogliere
        le pannocchie!
      courseA_harvester_seq2_markdown_instruction: Usa **tre** volte il blocco <xml><block
        type="maze_moveWest"/></xml> per far arrivare la contadina fino alla pannocchia!
      courseA_harvester_seq3_markdown_instruction: Usa **tre** volte il blocco <xml><block
        type="maze_moveNorth"/></xml> per fare in modo che la contadina raggiunga
        la pannocchia! E alla fine non dimenticare di raccogliere la pannocchia.
      courseA_harvester_seq4_markdown_instruction: Aggiungi *un* blocco per aiutare
        la contadina a raccogliere la pannocchia.
      courseA_harvester_seq5_markdown_instruction: Riesci a capire cosa c'è di sbagliato
        in questo programma? Aiuta la contadina a raccogliere la pannocchia!
      courseA_harvester_seq6_markdown_instruction: Prova da solo!
      courseA_harvester_seq7_markdown_instruction: Bisogna muoversi in due direzioni
        per raggiungere la pannocchia! Aiuta la contadina a prendere la direzione
        giusta.
      courseA_harvester_seq8_markdown_instruction: Ora la contadina dovrà raccogliere
        pannocchie due volte!
      courseA_harvester_seq9_markdown_instruction: Aggiungi due blocchi per competare
        l'esercizio!
      courseA_maze_ramp2_2018_markdown_instruction: "Per completare l'esercizio, connetti
        entrambi i blocchi <xml><block type=\"maze_moveEast\"/></xml> al blocco <xml><block
        type=\"when_run\"/></xml>, quindi clicca su  \"▶ Esegui\".  \n\n\n---\n"
      courseA_maze_ramp3_2018_markdown_instruction: |-
        *"Questo maialino mi fa arricciare le penne."*

        C'è un blocco di troppo che fa andare a sbattere l'uccellino.
        Buttalo via sganciandolo dagli altri blocchi grigi e trascinandolo nella cassetta degli attrezzi.
      courseA_maze_ramp3a_2018_markdown_instruction: "Per completare il programma,
        trascina un blocco <xml><block type=\"maze_moveNorth\"/></xml> dalla cassetta
        degli attrezzi e aggiungilo sotto a tutti gli altri, poi clicca su \"▶ Esegui\".
        \n\n---\n"
      courseA_maze_ramp3b_2018_markdown_instruction: |-
        C'è un blocco di troppo alla fine di questo codice!

        Per eliminarlo, trascinarlo nella cassetta degli attrezzi.
      courseA_maze_ramp4_2018_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseA_maze_ramp4a_2018_markdown_instruction: Riesci a capire quale blocco
        devi aggiungere alla fine di questo programma per completare l'esercizio?
      courseA_maze_ramp5_2018_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseA_maze_ramp5a_2018_markdown_instruction: Questo esercizio prova a risolverlo
        completamente da solo!
      courseA_maze_seq1_markdown_instruction: '*"Gioca con questi blocchi e cerca
        di farmi arrivare fino a quel cattivone di un maiale!"*'
      courseA_maze_seq10_markdown_instruction: "**Sfida:** aggira la dinamite (TNT)
        per far arrivare l'uccellino fino al maialino!\r\n\r\n![expandable](https://images.code.org/a656e421bc90e530a7e1ce636e507752-image-1497996976195.gif)"
      courseA_maze_seq10_2018_markdown_instruction: "**Sfida:** Evita la dinamite
        (TNT) per far arrivare l'uccellino fino al maialino! "
      courseA_maze_seq11_markdown_instruction: "E ora un esercizio più breve! Muovi
        in una direzione, poi in un'altra, per far arrivare l'uccellino fino al maialino.\r\n\r\n![expandable]
        (https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)"
      courseA_maze_seq11_2018_markdown_instruction: E ora un esercizio più breve!
        Muovi in una direzione, poi in un'altra, per far arrivare l'uccellino fino
        al maialino.
      courseA_maze_seq12_markdown_instruction: "Prendi quel maialino! \r\n\r\n![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)"
      courseA_maze_seq12_2018_markdown_instruction: "Prendi quel maialino! \r\n\r\n![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)"
      courseA_maze_seq1_2018_markdown_instruction: '*"Gioca con questi blocchi e cerca
        di farmi arrivare fino a quel cattivone di un maiale!"*'
      courseA_maze_seq2_markdown_instruction: "*\"C'è un errore! Correggi il codice
        per farmi arrivare fino al maialino.\"*\r\n\r\n\r\n![expandable](https://images.code.org/4af4959874b3ca1fdd3008dc4f77add4-image-1497994904322.gif)"
      courseA_maze_seq2_2018_markdown_instruction: "*\"C'è un errore! Correggi il
        codice per farmi arrivare fino al maialino.\"*\r\n\r\n\r\n![expandable](https://images.code.org/4af4959874b3ca1fdd3008dc4f77add4-image-1497994904322.gif)"
      courseA_maze_seq3_markdown_instruction: "*\"Modifica il codice per farmi arrivare
        al maialino!\"*\r\n\r\n![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)"
      courseA_maze_seq3_2018_markdown_instruction: "*\"Modifica il codice per farmi
        arrivare al maialino!\"*\r\n\r\n![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)"
      courseA_maze_seq4_markdown_instruction: "*\"C'è qualcosa di sbagliato.\"*\n\r\n\r\nELIMINA
        un blocco per far arrivare l'uccellino fino al maialino!\r\n\r\n![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)"
      courseA_maze_seq4_2018_markdown_instruction: "*\"C'è qualcosa di sbagliato.\"*\n\r\n\r\nELIMINA
        un blocco per far arrivare l'uccellino fino al maialino!\r\n\r\n![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)"
      courseA_maze_seq5_markdown_instruction: "Prova questo da solo dall'inizio.\r\n\r\n![expandable](https://images.code.org/e4ef591b4580db478330c298d1af756f-image-1497997080163.gif)"
      courseA_maze_seq5_2018_markdown_instruction: Fai un tentativo.
      courseA_maze_seq5a_2018_markdown_instruction: |-
        *"Maialino, maialino, aspettami che arrivo!"*

        Cosa puoi aggiungere alla fine di questo codice per far arrivare l'uccellino fino al maialino?
      courseA_maze_seq6_markdown_instruction: "Muovi in una direzione, poi in un'altra
        per far arrivare l'uccellino fino al maialino!\r\n\r\n![expandable](https://images.code.org/8f71c406afa60c6898937d950c670205-image-1497996506419.gif)"
      courseA_maze_seq6_2018_markdown_instruction: Muovi in una direzione, poi in
        un'altra per far arrivare l'uccellino fino al maialino!
      courseA_maze_seq7_markdown_instruction: "Cerca di capire cosa manca, quindi
        aggiungi i blocchi necessari per far arrivare l'uccellino fino al maialino!\r\n\r\n![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)"
      courseA_maze_seq7_2018_markdown_instruction: "Cerca di capire cosa manca, quindi
        aggiungi i blocchi necessari per far arrivare l'uccellino fino al maialino!\r\n\r\n![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)"
      courseA_maze_seq8_markdown_instruction: "Risolvi questo esercizio per far arrivare
        l'uccellino fino al maialino!\r\n\r\n![expandable] (https://images.code.org/fb4735244f74a4e001d1fa7b5c6028f9-image-1497998330218.gif)"
      courseA_maze_seq8_2018_markdown_instruction: Risolvi questo esercizio per far
        arrivare l'uccellino fino al maialino!
      courseA_maze_seq9_markdown_instruction: "**Sfida:** Correggi gli errori in questo
        esercizio, aggiungendo i blocchi necessari per far arrivare l'uccellino fino
        al maialino!\r\n\r\n![expandable] (https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)"
      courseA_maze_seq9_2018_markdown_instruction: "**Sfida:** Correggi gli errori
        in questo esercizio, aggiungendo i blocchi necessari per far arrivare l'uccellino
        fino al maialino!\r\n\r\n![expandable] (https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)"
      courseA_maze_seq_challenge1_markdown_instruction: Correggi gli errori in questo
        programma. Togli i blocchi di troppo e aggiungi quelli che mancano. Fai arrivare
        l'uccellino fino al maialino!
      courseA_maze_seq_challenge1_2018_markdown_instruction: Correggi gli errori in
        questo programma. Togli i blocchi di troppo e aggiungi quelli che mancano.
        Fai arrivare l'uccellino fino al maialino!
      courseA_playLab_events3_markdown_instruction: |
        Aiuta il cane a muoversi unendo il blocco <xml><block type="studio_move">
            <title name="SPRITE">1</title>
            <title
        name="DIR">8</title>
          </block></xml> al blocco evento <xml><block type="studio_whenArrow">
            <title
        name="VALUE">left</title>
          </block></xml> che si trova già nell'area di lavoro.

        Fai arrivare il cane alla bandierina per completare l'esercizio!
      courseA_playLab_events3_2018_markdown_instruction: |
        Aiuta il cane a muoversi unendo il blocco <xml><block type="studio_move">
            <title name="SPRITE">1</title>
            <title
        name="DIR">8</title>
          </block></xml> al blocco evento <xml><block type="studio_whenArrow">
            <title
        name="VALUE">left</title>
          </block></xml> che si trova già nell'area di lavoro.

        Fai arrivare il cane alla bandierina per completare l'esercizio!
      courseA_playLab_events4_markdown_instruction: Ora fai muovere il cane a destra
        quando si preme la freccia a destra.
      courseA_playLab_events4_2018_markdown_instruction: Ora fai muovere il cane a
        destra quando si preme la freccia a destra.
      courseA_playLab_events5_markdown_instruction: Aggiungi gli eventi per far muovere
        il cane su e giù quando si premono le frecce in su e in giù.
      courseA_playLab_events5_2018_markdown_instruction: Aggiungi gli eventi per far
        muovere il cane su e giù quando si premono le frecce in su e in giù.
      courseA_playLab_events7_2018_markdown_instruction: '*Tempo di giocare:* Aggiungi
        ciò che vuoi a questo gioco. Riesci a fare in modo che il dinosauro scompaia
        quando il cane sbatte contro di lui? (Quando sei soddisfatto, premi "Termina"
        per completare il corso.)'
      courseA_playlab_events_challenge1_markdown_instruction: |-
        Cliccando sul gatto apparirà l'uccellino! Puoi scrivere un programma per mostrare anche gli altri personaggi?

        In questo esercizio, clicca sui suggerimenti: ci troverai delle belle idee per realizzare questo progetto passo dopo passo.

        ![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)
      courseA_playlab_events_challenge1_2018_markdown_instruction: |-
        Cliccando sul gatto apparirà l'uccellino! Puoi scrivere un programma per mostrare anche gli altri personaggi?

        In questo esercizio, clicca sui suggerimenti: ci troverai delle belle idee per realizzare questo progetto passo dopo passo.

        ![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)
      courseA_playlab_events_challenge2_markdown_instruction: |-
        Dai ad ognuno di loro qualcosa da fare quando ci clicchi sopra. Cosa diranno gli animali? Cos'altro succederà?

        In questo esercizio, clicca sui suggerimenti: ci troverai delle belle idee!

        ![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)
      courseA_playlab_events_challenge2_2018_markdown_instruction: |-
        Dai ad ognuno di loro qualcosa da fare quando ci clicchi sopra. Cosa diranno gli animali? Cos'altro succederà?

        In questo esercizio, clicca sui suggerimenti: ci troverai delle belle idee!

        ![](https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png)
      courseB_Scrat_ramp1_2018_markdown_instruction: "Per far arrivare Scrat fino
        alla ghianda, trascina il blocco <xml><block type=\"maze_moveEast\"/></xml>
        sotto al blocco <xml><block type=\"when_run\"/></xml>, poi premi \"▶ Esegui\"!
        \ \n\n\n---\n"
      courseB_Scrat_ramp2_2018_markdown_instruction: "Per completare l'esercizio,
        connetti entrambi i blocchi <xml><block type=\"maze_moveEast\"/></xml> al
        blocco <xml><block type=\"when_run\"/></xml>, quindi clicca su  \"▶ Esegui\".
        \ \n\n\n---\n"
      courseB_Scrat_ramp3a_2018_markdown_instruction: "Per completare il programma,
        trascina un blocco <xml><block type=\"maze_moveNorth\"/></xml> dalla cassetta
        degli attrezzi e aggiungilo sotto a tutti gli altri, poi clicca su \"▶ Esegui\".
        \n\n---\n"
      courseB_Scrat_ramp3b_2018_markdown_instruction: |-
        C'è un blocco di troppo alla fine di questo codice!

        Per eliminarlo, trascinarlo nella cassetta degli attrezzi.
      courseB_Scrat_ramp4a_2018_markdown_instruction: Riesci a capire quale blocco
        devi aggiungere alla fine di questo programma per completare l'esercizio?
      courseB_Scrat_ramp5a_2018_markdown_instruction: Questo esercizio prova a risolverlo
        completamente da solo!
      courseB_artist_loops10_markdown_instruction: |-
        Usa tutto quello che hai imparato per disegnare ciò che pensi che l'artista vedrà quando arriverà a casa.

        ___
        ### Idee:

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseB_artist_loops10_2018_markdown_instruction: |-
        Usa tutto quello che hai imparato per disegnare ciò che pensi che l'artista vedrà quando arriverà a casa.

        ___
        ### Idee:

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseB_artist_loops6_markdown_instruction: Dietro i cespugli c'è una bellissima
        pianta rampicante fiorita. Riesci ad salire e capire dove va a finire?
      courseB_artist_loops6_2018_markdown_instruction: Dietro i cespugli c'è una bellissima
        pianta rampicante fiorita. Riesci ad salire e capire dove va a finire?
      courseB_artist_loops7_markdown_instruction: "**Sfida:** C'è un giardino segreto!
        Facci un giro intorno."
      courseB_artist_loops7_2018_markdown_instruction: "**Sfida:** C'è un giardino
        segreto! Facci un giro intorno."
      courseB_artist_loops_challenge1_markdown_instruction: '*"È il momento di lanciare
        i dadi! Mi aiuti a disegnarli?"*'
      courseB_artist_loops_challenge1_2018_markdown_instruction: '*"È il momento di
        lanciare i dadi! Mi aiuti a disegnarli?"*'
      courseB_artist_loops_challenge2_markdown_instruction: Disegna più X che puoi.
        Riesci a disegnarne tre in fila... e fare TRIS?
      courseB_artist_loops_challenge2_2018_markdown_instruction: Disegna più X che
        puoi. Riesci a disegnarne tre in fila... e fare TRIS?
      courseB_collector_loops1_markdown_instruction: |-
        **Tempo di giocare:** questa è Laura l'Avventuriera! Muovila per farle raccogliere più diamanti che puoi.

        Trascina i blocchi nell'area di lavoro e cerca di capire come prendere i diamanti. Raccogli almeno un diamante per completare questo esercizio.

        (Se non sei riuscito a raccogliere tutti i diamanti, ma sei soddisfatto, premi il pulsante "Termina")
      courseB_collector_loops1_2018_markdown_instruction: |-
        **Tempo di giocare:** questa è Laura l'Avventuriera! Muovila per farle raccogliere più diamanti che puoi. Raccogli almeno un diamante per completare questo esercizio.

        ---

        Trascina i blocchi nell'area di lavoro e cerca di capire come prendere i diamanti.

        (Se non sei riuscito a raccogliere tutti i diamanti, ma sei soddisfatto, premi il pulsante "Termina")
      courseB_collector_loops2_markdown_instruction: |-
        Muovi Laura lungo i diamanti e usa il blocco <xml><block type="collector_collect"/></xml> per racccoglierlo.

        Raccogli tutti e quattro i diamanti per completare l'esercizio.
      courseB_collector_loops2_2018_markdown_instruction: |-
        Muovi Laura lungo i diamanti e usa il blocco <xml><block type="collector_collect"/></xml> per racccoglierlo.

        Raccogli tutti e quattro i diamanti per completare l'esercizio.
      courseB_collector_loops3_markdown_instruction: |-
        Come può Laura raccogliere tutti e cinque i diamanti usando un solo blocco?
        <xml><block type="maze_moveEast"/></xml>
      courseB_collector_loops3_2018_markdown_instruction: |-
        Come può Laura raccogliere tutti e cinque i diamanti usando un solo blocco?
        <xml><block type="maze_moveEast"/></xml>
      courseB_collector_loops_challenge2a_markdown_instruction: |-
        *"Prendiamo i diamanti!"*

        Aiuta Laura a raccogliere almeno **5** diamanti per completare questo esercizio.
      courseB_collector_loops_challenge2a_2018_markdown_instruction: |-
        *"Prendiamo i diamanti!"*

        Aiuta Laura a raccogliere almeno **5** diamanti per completare questo esercizio.
      courseB_iceage_loops1_markdown_instruction: Aiuta Scrat a raggiungere la ghianda
        attraversando queste lastre di ghiaccio!
      courseB_iceage_loops10_markdown_instruction: Aiuta Scrat a percorrere tutto
        il tragitto fino alla ghianda!
      courseB_iceage_loops11_markdown_instruction: Aiuta Scrat a raggiungere la ghianda!
      courseB_iceage_loops11_forVideo_markdown_instruction: Aiuta Scrat a raggiungere
        la ghianda!
      courseB_iceage_loops12_markdown_instruction: Prendi quella ghianda in qualunque
        modo!
      courseB_iceage_loops2_markdown_instruction: Use sia il blocco <xml><block type="maze_moveWest"/></xml>
        sia quello <xml><block type="maze_moveSouth"/></xml> per raggiungere la ghianda!
      courseB_iceage_loops3_markdown_instruction: Riesci a raggiungere la ghianda
        con un solo blocco <xml><block type="maze_moveWest"/></xml>? Prova con un
        ciclo!
      courseB_iceage_loops4_markdown_instruction: Aggiungi un blocco per far percorrere
        a Scrat tutto il tragitto per raggiungere la ghianda!
      courseB_iceage_loops6_markdown_instruction: Puoi aggiungere un ciclo per raggiungere
        la ghianda?
      courseB_iceage_loops7_markdown_instruction: Scrat vuole proprio quella ghianda!
      courseB_iceage_loops8_markdown_instruction: Potresti correggere questo programma?
      courseB_iceage_loops9_markdown_instruction: La ghianda è così lontana! Riesci
        ad aiutare Scrat ad arrivarci usando i cicli?
      courseB_maze_seq3_markdown_instruction: '*"Correggi il programma per farmi arrivare
        fino al maialino!"*'
      courseB_maze_seq9_markdown_instruction: "**Sfida**: Evita la dinamite (TNT)
        per far arrivare l'uccellino fino al maialino."
      courseB_maze_seq9_2018_markdown_instruction: "**Sfida:** Aggira il ghiaccio
        rotto per far arrivare Scrat fino alla ghianda."
      courseB_maze_seq_challenge1_markdown_instruction: Hai solo quattro esemplari
        per ogni tipo di blocco. Riesci a trovare un percorso che ti faccia arrivare
        fino al maialino prima di terminare tutti i blocchi a disposizione?
      courseB_maze_seq_challenge1_2018_markdown_instruction: Hai solo quattro esemplari
        per ogni tipo di blocco. Riesci a trovare un percorso che ti faccia arrivare
        fino al maialino prima di terminare tutti i blocchi a disposizione?
      courseB_playLab_events1_markdown_instruction: |-
        Questo ambiente si chiama Laboratorio.

        Cerca di capire cosa fa ogni blocco.
      courseB_playLab_events1_2018_markdown_instruction: |-
        Questo ambiente si chiama Laboratorio.

        Cerca di capire cosa fa ogni blocco.
      courseB_playlab_events3_markdown_instruction: Usa un evento per fare in modo
        che il drago cambi umore in modo casuale ![](https://images.code.org/c365e065614fea592612264f33624c09-image-1475698889081.17.53.png)
        quando clicchi su di lei.
      courseB_playlab_events3_2018_markdown_instruction: Usa un evento per fare in
        modo che il drago cambi umore in modo casuale ![](https://images.code.org/c365e065614fea592612264f33624c09-image-1475698889081.17.53.png)
        quando clicchi su di lei.
      courseB_playlab_events4_markdown_instruction: |-
        È il momento del cavaliere!

        Aggiungi un evento per fare in modo che il cavaliere vada verso il drago quando clicchi sulla freccia sinistra.
      courseB_playlab_events4_2018_markdown_instruction: |-
        È il momento del cavaliere!

        Aggiungi un evento per fare in modo che il cavaliere vada verso il drago quando clicchi sulla freccia sinistra.
      courseB_playlab_events6_markdown_instruction: |-
        Aiuta il tuo cavaliere a raggiungere tutte le bandierine!

        Per far questo, devi aggiungere gli eventi che permettono di muovere il cavaliere in su, in giù, a sinistra e a destra.
      courseB_playlab_events6_2018_markdown_instruction: |-
        Aiuta il tuo cavaliere a raggiungere tutte le bandierine!

        Per far questo, devi aggiungere gli eventi che permettono di muovere il cavaliere in su, in giù, a sinistra e a destra.
      courseB_playlab_events7_markdown_instruction: |-
        Rendi questo gioco divertente facendo svanire il cavaliere quando si scontra con il drago mentre cerca di raggiungere le bandierine!

        Riproduci anche un suono quando lo colpisce, così sembra più reale.

        Tocca tutte le bandierine, quindi vai contro il drago per completare l'esercizio.
      courseB_playlab_events7_2018_markdown_instruction: |-
        Rendi questo gioco divertente con qualche aggiunta!

        1) Fai svanire il cavaliere quando si scontra con il drago.
        2) Riproduci anche un suono quando si colpiscono, così sembra più reale.
        Tocca tutte le bandierine, quindi vai contro il drago per completare l'esercizio.

        ---

        Tocca tutte le bandierine, quindi vai contro il drago per completare l'esercizio.
      courseB_playlab_events_challenge1_markdown_instruction: |-
        È il momento della Grande Gara degli Animali! Fai in modo che gli animali si muovano verso il basso quando premi la freccia verso il basso (▼).

        Chi sarà il più veloce?
      courseB_playlab_events_challenge1_2018_markdown_instruction: |-
        È il momento della Grande Gara degli Animali! Fai in modo che gli animali si muovano verso il basso quando premi la freccia verso il basso (▼).

        Chi sarà il più veloce?
      courseB_playlab_events_challenge2_markdown_instruction: |-
        Facciamo in modo che gli animali scompaiano quando si clicca su di loro.
        Esegui il programma già pronto e prova a giocare con il cane, poi associa questo divertente effetto anche agli altri animali. Puoi anche aggiungere dei suoni e un punteggio per rendere più realistica la gara tra animali!

        ![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)
      courseB_playlab_events_challenge2_2018_markdown_instruction: |-
        Facciamo in modo che gli animali scompaiano quando si clicca su di loro.
        Esegui il programma già pronto e prova a giocare con il cane, poi associa questo divertente effetto anche agli altri animali. Puoi anche aggiungere dei suoni e un punteggio per rendere più realistica la gara tra animali!

        ![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)
      courseB_starWars_prog1_markdown_instruction: |-
        ![Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_"Vai a recuperare i rottami metallici, BB-8!"_

        Stai attento alle barriere e alle casse. Il rottame metallico assomiglia a questo: ![picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)
      courseB_starWars_prog10_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Riesci a raccoglierli tutti?"_'
      courseB_starWars_prog10_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Riesci a raccoglierli tutti?"_'
      courseB_starWars_prog11_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Continua!"_'
      courseB_starWars_prog11_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Continua!"_'
      courseB_starWars_prog1_2018_markdown_instruction: |-
        ![Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_"Vai a recuperare i rottami metallici, BB-8!"_

        Stai attento alle barriere e alle casse. Il rottame metallico assomiglia a questo: ![picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)
      courseB_starWars_prog2_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Recupera tutto il metallo."_'
      courseB_starWars_prog2_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Recupera tutto il metallo."_'
      courseB_starWars_prog3_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Continua, BB-8!"_'
      courseB_starWars_prog3_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Continua, BB-8!"_'
      courseB_starWars_prog4_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Prendili, BB-8!"_'
      courseB_starWars_prog4_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Prendili, BB-8!"_'
      courseB_starWars_prog5_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Riesci a raccoglierli tutti?"_'
      courseB_starWars_prog5_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Riesci a raccoglierli tutti?"_'
      courseB_starWars_prog6_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Ce la puoi fare!"_'
      courseB_starWars_prog6_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Ce la puoi fare!"_'
      courseB_starWars_prog7_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Vai a prenderli!"_'
      courseB_starWars_prog7_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Vai a prenderli!"_'
      courseB_starWars_prog8_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Contina così, BB-8."_

        **Sfida:** Recupera tutti i rottami metallici.
      courseB_starWars_prog8_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Contina così, BB-8."_

        **Sfida:** Recupera tutti i rottami metallici.
      courseB_starWars_prog9_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Ce la puoi fare!"_'
      courseB_starWars_prog9_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Ce la puoi fare!"_'
      courseC_PlayLab_events7_markdown_instruction: |-
        Il blocco `ripeti per sempre` ti permette di ripetere del codice per sempre. Usa questo blocco per muovere ripetutamente il dinosauro (personaggio 2) in alto e in basso di 400 pixel.

        ![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)
      courseC_PlayLab_events7_2018_markdown_instruction: |-
        Il blocco `ripeti per sempre` ti permette di ripetere del codice per sempre. Usa questo blocco per muovere ripetutamente il dinosauro (personaggio 2) in alto e in basso di 400 pixel.

        ![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)
      courseC_PlayLab_events8_markdown_instruction: |-
        Puoi fare in modo che il pinguino (personaggio 1) riproduca il suono di "un colpo" e dica "Ahi!" quando sbatte contro il dinosauro?

        Quando hai finito, esegui il gioco e falli scontrare.

        ![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)
      courseC_PlayLab_events8_2018_markdown_instruction: |-
        Puoi fare in modo che il pinguino (personaggio 1) riproduca il suono di "un colpo" e dica "Ahi!" quando sbatte contro il dinosauro?

        Quando hai finito, esegui il gioco e falli scontrare.

        ![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)
      courseC_artist_loop1_markdown_instruction: |-
        Fantastico!

        Aggiungiamo un po' di stile modificando il pennello con il blocco `imposta lo schema` prima che inizi il ciclo.
      courseC_artist_loop1_2018_markdown_instruction: |-
        Fantastico!

        Aggiungiamo un po' di stile modificando il pennello con il blocco `imposta lo schema` prima che inizi il ciclo.
      courseC_artist_loops1a_markdown_instruction: |-
        **Tempo di giocare:** Facciamo qualcosa di più intrigante, un passo alla volta! Puoi creare ciò che preferisci, ma se vuoi ti mostriamo come fare un disegno come questo!

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)

        Usa il blocco `salta a 200 avanti 200 in basso` per portarti al centro dell'area di gioco, quindi usa il blocco `disegna un adesivo` per far apparire un uccello.

        ---

        Premi "Termina" quando sei soddisfatto di ciò che hai creato.
      courseC_artist_loops2a_markdown_instruction: Ora usa un ciclo per disegnare
        l'uccello 12 volte con un angolo di 30 gradi.
      courseC_artist_loops2a_2018_markdown_instruction: Ora usa un ciclo per disegnare
        l'uccello 12 volte con un angolo di 30 gradi.
      courseC_artist_loops3a_markdown_instruction: |-
        Troppo divertente!

        Ora aggiungi l'adesivo di un pipistrello subito dopo l'uccello per ottenere un'immagine come quella qui sotto.
        ___

        ![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)
      courseC_artist_loops3a_2018_markdown_instruction: |-
        Troppo divertente!

        Ora aggiungi l'adesivo di un pipistrello subito dopo l'uccello per ottenere un'immagine come quella qui sotto.
        ___

        ![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)
      courseC_artist_loops4a_markdown_instruction: |-
        Aggiungi un blocco al tuo codice in modo che l'artista faccia un salto avanti di 75 pixel tra la stampa dell'uccello e quella del pipistrello. In questo esercizio assicurati di avere il blocco `salta a 200 avanti 200 in basso` all'interno del ciclo, in modo da rimanere al centro dello schermo.
        __

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)
      courseC_artist_loops5a_markdown_instruction: |-
        Cosa accade se sostituisci uno o entrambi gli adesivi con creature differenti?
        ___
        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5a_2018_markdown_instruction: |-
        Cosa accade se sostituisci uno o entrambi gli adesivi con creature differenti?
        ___
        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5b_markdown_instruction: |-
        Cosa accade quando `vai avanti` e poi `vai indietro` di 100, 200 o 400 pixel all'interno del ciclo?
        - Per realizzare un'opera d'arte, prova ad usare il blocco `imposta lo schema` prima di iniziare il ciclo!
        ___
        ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)
      courseC_artist_loops5b_2018_markdown_instruction: |-
        Cosa accade quando `vai avanti` e poi `vai indietro` di 100, 200 o 400 pixel all'interno del ciclo?
        - Per realizzare un'opera d'arte, prova ad usare il blocco `imposta lo schema` prima di iniziare il ciclo!
        ___
        ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)
      courseC_artist_loops6a_markdown_instruction: |-
        Aggiungi un terzo adesivo dove preferisci all'interno del ciclo! Come ti sembra adesso?
        - Per avere ancora più varietà, cambia anche lo schema del pennello!
        ___

        ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)
      courseC_artist_loops6a_2018_markdown_instruction: |-
        Aggiungi un terzo adesivo dove preferisci all'interno del ciclo! Come ti sembra adesso?
        - Per avere ancora più varietà, cambia anche lo schema del pennello!
        ___

        ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)
      courseC_artist_loops7a_markdown_instruction: |-
        Prova a modificare il ciclo `ripeti ... volte` in modo che venga eseguito un differente numero di volte. Di quanto devi far girare l'artista per continuare a compiere un giro completo?
        - Prova a cambiare il numero di rotazioni
        - Prova curve di 60 gradi per 6 volte
        - Prova curve di 20 gradi per 18 volte
        ___
        Questa immagine usa un pirata, un ninja e una giraffa. Il ciclo si ripete 18 volte con curve di 20 gradi ciascuna.

        ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)
      courseC_artist_loops7a_2018_markdown_instruction: |-
        Prova a modificare il ciclo `ripeti ... volte` in modo che venga eseguito un differente numero di volte. Di quanto devi far girare l'artista per continuare a compiere un giro completo?
        - Prova a cambiare il numero di rotazioni
        - Prova curve di 60 gradi per 6 volte
        - Prova curve di 20 gradi per 18 volte
        ___
        Questa immagine usa un pirata, un ninja e una giraffa. Il ciclo si ripete 18 volte con curve di 20 gradi ciascuna.

        ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)
      courseC_artist_loops8a_markdown_instruction: |-
        Ora crea qualcosa di tuo. Cosa accade se realizzi due cerchi distinti con adesivi diversi?
        ___
        Ti serve un'idea? Prova a fare un disegno come questo.

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loops8a_2018_markdown_instruction: |-
        Ora crea qualcosa di tuo. Cosa accade se realizzi due cerchi distinti con adesivi diversi?
        ___
        Ti serve un'idea? Prova a fare un disegno come questo.

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loopsPre1a_markdown_instruction: |-
        Ora, metti questo codice in un ciclo `ripeti` è fallo ripetere per **6** volte.
        - Nota che abbiamo aggiunto una curva di 60 gradi alla fine del codice all'interno del ciclo per ottenere una rotazione completa.
      courseC_artist_loopsPre1a_2018_markdown_instruction: |-
        Ora, metti questo codice in un ciclo `ripeti` è fallo ripetere per **6** volte.
        - Nota che abbiamo aggiunto una curva di 60 gradi alla fine del codice all'interno del ciclo per ottenere una rotazione completa.
      courseC_artist_loopsPrePre1a_markdown_instruction: |-
        Usa il blocco <xml><block type="jump_to_xy" id="callMe"><title name="XPOS">200</title><title name="YPOS">200</title></block></xml> per portare l'artista al centro dell'area di gioco.
        Quindi disegna una linea lunga 50 pixel con il blocco  <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">50</title></block></xml>
      courseC_artist_loopsPrePre1a_2018_markdown_instruction: |-
        Usa il blocco <xml><block type="jump_to_xy" id="callMe"><title name="XPOS">200</title><title name="YPOS">200</title></block></xml> per portare l'artista al centro dell'area di gioco.
        Quindi disegna una linea lunga 50 pixel con il blocco  <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">50</title></block></xml>
      courseC_artist_prog1_markdown_instruction: |-
        *"Ciao, sono un artista. puoi scrivere del codice per farmi disegnare quasi qualunque cosa."*

        Gioca con i blocchi nella cassetta degli attrezzi per capire cosa fanno!
      courseC_artist_prog1_2018_markdown_instruction: |-
        *"Ciao, sono un artista. puoi scrivere del codice per farmi disegnare quasi qualunque cosa."*

        Gioca con i blocchi nella cassetta degli attrezzi per capire cosa fanno!
      courseC_artist_prog2_markdown_instruction: |-
        *"Fammi costruire una gabbia per il mio mostriciattolo domestico!"*

        Trascina i blocchi dalla cassetta degli attrezzi per far in modo che l'artista disegni lungo le linee grige della figura. (Ogni linea è lunga 100 pixel.)
      courseC_artist_prog2_2018_markdown_instruction: |-
        *"Fammi costruire una gabbia per il mio mostriciattolo domestico!"*

        Trascina i blocchi dalla cassetta degli attrezzi per far in modo che l'artista disegni lungo le linee grige della figura. (Ogni linea è lunga 100 pixel.)
      courseC_artist_prog3_markdown_instruction: |-
        *"A questa astronave serve un finestrino!"*

        Ogni lato del quadrato interno è lungo 100 pixel e tutti gli angoli sono di 90 gradi.
      courseC_artist_prog3_2018_markdown_instruction: |-
        *"A questa astronave serve un finestrino!"*

        Ogni lato del quadrato interno è lungo 100 pixel e tutti gli angoli sono di 90 gradi.
      courseC_artist_prog4_markdown_instruction: |-
        *"Oh no! Il mostriciattolo domestico è volato via! Aiuta l'alieno!"*

        Completa il razzo in modo che l'alieno possa seguire il suo animale domestico.
        (Ogni lato del triangolo è lungo 100 pixel ed ha angoli esterni di 120 gradi.)
      courseC_artist_prog4_2018_markdown_instruction: |-
        *"Oh no! Il mostriciattolo domestico è volato via! Aiuta l'alieno!"*

        Completa il razzo in modo che l'alieno possa seguire il suo animale domestico.
        (Ogni lato del triangolo è lungo 100 pixel ed ha angoli esterni di 120 gradi.)
      courseC_artist_prog5_markdown_instruction: |-
        *"Forse dovremmo costruire una targhetta per ciascuno dei nostri animali domestici nel caso in cui si perdano."*

        Completa questa targhetta disegnando un rettangolo sul contorno.
        (I lati lunghi sono di 200 pixel ognuno e quelli corti di 100 pixel)
      courseC_artist_prog5_2018_markdown_instruction: |-
        *"Forse dovremmo costruire una targhetta per ciascuno dei nostri animali domestici nel caso in cui si perdano."*

        Completa questa targhetta disegnando un rettangolo sul contorno.
        (I lati lunghi sono di 200 pixel ognuno e quelli corti di 100 pixel)
      courseC_artist_prog6_markdown_instruction: |-
        *"Ora una targhetta per Belle!"*

        Disegna questo rombo con i lati di 200 pixel.
      courseC_artist_prog6_2018_markdown_instruction: |-
        *"Ora una targhetta per Belle!"*

        Disegna questo rombo con i lati di 200 pixel.
      courseC_artist_prog7_markdown_instruction: |-
        **Sfida:** Questa è una targhetta speciale!

        Riesci a capire come disegnare il contorno?
        (I lati lunghi sono di 150 pixel e quelli corti di 75 pixel.)
      courseC_artist_prog7_2018_markdown_instruction: |-
        **Sfida:** Questa è una targhetta speciale!

        Riesci a capire come disegnare il contorno?
        (I lati lunghi sono di 150 pixel e quelli corti di 75 pixel.)
      courseC_artist_prog8_markdown_instruction: |-
        Ancora una targhetta. Questa volta triangolare.
        (Ogni lato è di 150 pixel)
      courseC_artist_prog8_2018_markdown_instruction: |-
        Ancora una targhetta. Questa volta triangolare.
        (Ogni lato è di 150 pixel)
      courseC_artist_prog_challenge1_markdown_instruction: Disegna una stanza per
        ogni animale. Ci sono molti modi per risolvere questo esercizio, quindi ti
        serve anche un po' di fortuna! Ogni quadrato ha i lati da 100 pixel.
      courseC_artist_prog_challenge1_2018_markdown_instruction: Disegna una stanza
        per ogni animale. Ci sono molti modi per risolvere questo esercizio, quindi
        ti serve anche un po' di fortuna! Ogni quadrato ha i lati da 100 pixel.
      courseC_artist_prog_challenge2a_markdown_instruction: |-
        *"Aiutami a disegnare la linea gialla di questa strada!"*

        I tre segmenti della linea hanno lunghezza di 150, 100 e 200 pixel!
      courseC_artist_prog_challenge2a_2018_markdown_instruction: |-
        *"Aiutami a disegnare la linea gialla di questa strada!"*

        I tre segmenti della linea hanno lunghezza di 150, 100 e 200 pixel!
      courseC_collector_prog1_markdown_instruction: |-
        **Tempo di giocare:** questa è Laura l'Avventuriera! Muovila per farle raccogliere più diamanti che puoi.

        Trascina i blocchi nell'area di lavoro e cerca di capire come prendere i diamanti. Raccogli almeno un diamante per completare questo esercizio.

        (Se non sei riuscito a raccogliere tutti i diamanti, ma sei soddisfatto, premi il pulsante "Termina")
      courseC_collector_prog1_2018_markdown_instruction: |-
        **Tempo di giocare:** questa è Laura l'Avventuriera! Muovila per farle raccogliere più diamanti che puoi.

        Trascina i blocchi nell'area di lavoro e cerca di capire come prendere i diamanti. Raccogli almeno un diamante per completare questo esercizio.

        (Se non sei riuscito a raccogliere tutti i diamanti, ma sei soddisfatto, premi il pulsante "Termina")
      courseC_collector_prog2_markdown_instruction: Fai muovere Laura fino al diamante,
        quindi usa il blocco <xml><block type="collector_collect"/></xml> per prenderlo.
      courseC_collector_prog2_2018_markdown_instruction: Fai muovere Laura fino al
        diamante, quindi usa il blocco <xml><block type="collector_collect"/></xml>
        per prenderlo.
      courseC_collector_prog3_markdown_instruction: "*\"L'ordine conta!\"* \n\nTrovi
        già nell'area di lavoro tutti i blocchi di cui hai bisogno, ma non sono collegati
        tra loro. Riordina questi blocchi per raccogliere tutti i diamanti e risolvere
        l'esercizio."
      courseC_collector_prog3_2018_markdown_instruction: "*\"L'ordine conta!\"* \n\nTrovi
        già nell'area di lavoro tutti i blocchi di cui hai bisogno, ma non sono collegati
        tra loro. Riordina questi blocchi per raccogliere tutti i diamanti e risolvere
        l'esercizio."
      courseC_collector_prog4_markdown_instruction: "*\"L'ordine conta!\"* \n\nTrovi
        già nell'area di lavoro tutti i blocchi di cui hai bisogno, ma non sono collegati
        tra loro. Riordina questi blocchi per raccogliere tutti i diamanti e risolvere
        l'esercizio."
      courseC_collector_prog4_2018_markdown_instruction: "*\"L'ordine conta!\"* \n\nTrovi
        già nell'area di lavoro tutti i blocchi di cui hai bisogno, ma non sono collegati
        tra loro. Riordina questi blocchi per raccogliere tutti i diamanti e risolvere
        l'esercizio."
      courseC_collector_prog5_markdown_instruction: |-
        *"Aiutami a raccogliere ogni diamante"!*

        Questi blocchi sono nell'ordine sbagliato. Riesci a riordinarli?
      courseC_collector_prog5_2018_markdown_instruction: |-
        *"Aiutami a raccogliere ogni diamante"!*

        Questi blocchi sono nell'ordine sbagliato. Riesci a riordinarli?
      courseC_collector_prog6_markdown_instruction: |-
        *"Aiutami a raccogliere tutti i diamanti!!"*

        Questi blocchi sono nell'ordine sbagliato. Riordinarli per raccogliere tutti i diamanti.
      courseC_collector_prog6_2018_markdown_instruction: |-
        *"Aiutami a raccogliere tutti i diamanti!!"*

        Questi blocchi sono nell'ordine sbagliato. Riordinarli per raccogliere tutti i diamanti.
      courseC_collector_prog7_markdown_instruction: |-
        **Sfida:** *Cosa sta succedendo qui?*

        Anche dopo che avrai messo i blocchi nell'ordine giusto, mancherà ancora qualcosa.
        Usa nuovi blocchi dalla cassetta degli attrezzi per raccogliere tutti i diamanti.
      courseC_collector_prog7_2018_markdown_instruction: |-
        **Sfida:** *Cosa sta succedendo qui?*

        Anche dopo che avrai messo i blocchi nell'ordine giusto, mancherà ancora qualcosa.
        Usa nuovi blocchi dalla cassetta degli attrezzi per raccogliere tutti i diamanti.
      courseC_collector_prog8_markdown_instruction: '*"Continua alla grande! Aiutami
        a collezionare tutti i diamanti."*'
      courseC_collector_prog8_2018_markdown_instruction: '*"Continua alla grande!
        Aiutami a collezionare tutti i diamanti."*'
      courseC_collector_prog9_markdown_instruction: '*"Prendiamoli tutti ''sti diamanti!"*'
      courseC_collector_prog9_2018_markdown_instruction: '*"Prendiamoli tutti ''sti
        diamanti!"*'
      courseC_collector_progA_markdown_instruction: Aiuto Laura a raccogliere tutti
        i diamanti.
      courseC_flappy_events1_markdown_instruction: |-
        Collega il blocco `sbatti le ali per un numero di volte normale` all'evento `quando ci clicca`, quindi premi "Esegui".

        ---

        Clicca o tocca nello spazio di gioco per far volare Flappy verso la sua destinazione.
      courseC_flappy_events10_markdown_instruction: |-
        Crea la tua versione del gioco Flappy.

        Puoi cambiare le immagini e le regole, persino la forza di gravità!
        Quando hai finito, clicca su "Termina" per far provare agli amici il gioco sui loro smartphone (devi inviargli il link sotto alla scritta "Condividi il tuo gioco:").
      courseC_flappy_events10_2018_markdown_instruction: |-
        Crea la tua versione del gioco Flappy.

        Puoi cambiare le immagini e le regole, persino la forza di gravità!
        Quando hai finito, clicca su "Termina" per far provare agli amici il gioco sui loro smartphone (devi inviargli il link sotto alla scritta "Condividi il tuo gioco:").
      courseC_flappy_events1_2018_markdown_instruction: |-
        Collega il blocco `sbatti le ali per un numero di volte normale` all'evento `quando ci clicca`, quindi premi "Esegui".

        ---

        Clicca o tocca nello spazio di gioco per far volare Flappy verso la sua destinazione.
      courseC_flappy_events2_markdown_instruction: "L'evento `quando si clicca su
        \"Esegui\"` ti permette di eseguire del codice all'inizio del gioco.\n\nProva
        ad aggiungere un blocco che imposti la velocità quando viene premuto il pulsante
        \"Esegui\". \n\n---\n\nGioca volando fino a destinazione per continuare."
      courseC_flappy_events2_2018_markdown_instruction: "L'evento `quando si clicca
        su \"Esegui\"` ti permette di eseguire del codice all'inizio del gioco.\n\nProva
        ad aggiungere un blocco che imposti la velocità quando viene premuto il pulsante
        \"Esegui\". \n\n---\n\nGioca volando fino a destinazione per continuare."
      courseC_flappy_events3_markdown_instruction: |-
        Ora abbiamo aggiunto il terreno.

        Collega il blocco `fine del gioco` all'evento `quando precipita a terra`.

        ---

        Gioca facendo precipitare a terra l'uccellino per continuare.
      courseC_flappy_events3_2018_markdown_instruction: |-
        Ora abbiamo aggiunto il terreno.

        Collega il blocco `fine del gioco` all'evento `quando precipita a terra`.

        ---

        Gioca facendo precipitare a terra l'uccellino per continuare.
      courseC_flappy_events4_markdown_instruction: |-
        Flappy volerà attraverso gli ostacoli, a meno che tu scriva del codice che lo fa schiantare.

        Collega un blocco all'evento `quando colpisce un ostacolo` in modo che il gioco finisca quando Flappy si schianta contro la prima serie di tubi.
      courseC_flappy_events4_2018_markdown_instruction: |-
        Flappy volerà attraverso gli ostacoli, a meno che tu scriva del codice che lo fa schiantare.

        Collega un blocco all'evento `quando colpisce un ostacolo` in modo che il gioco finisca quando Flappy si schianta contro la prima serie di tubi.
      courseC_flappy_events5_markdown_instruction: |-
        Ora guadagnerai dei punti quando Flappy oltrepasserà gli ostacoli.

        Aggiungi un blocco all'evento `quando supera un ostacolo`, quindi premi "Esegui" per segnare un punto facendo volare Flappy oltre la prima serie di tubi.
      courseC_flappy_events5_2018_markdown_instruction: |-
        Ora guadagnerai dei punti quando Flappy oltrepasserà gli ostacoli.

        Aggiungi un blocco all'evento `quando supera un ostacolo`, quindi premi "Esegui" per segnare un punto facendo volare Flappy oltre la prima serie di tubi.
      courseC_flappy_events6_markdown_instruction: |-
        Clicca la freccia in giù che trovi all'interno del blocco `sbatti le ali per un numero di volte normale` per scegliere una diversa potenza di volo.

        Vedi se, cambiando di quanto Flappy sbatte le ali ogni volta che clicchi, riesci ancora a segnare un punto.
      courseC_flappy_events6_2018_markdown_instruction: |-
        Clicca la freccia in giù che trovi all'interno del blocco `sbatti le ali per un numero di volte normale` per scegliere una diversa potenza di volo.

        Vedi se, cambiando di quanto Flappy sbatte le ali ogni volta che clicchi, riesci ancora a segnare un punto.
      courseC_flappy_events7_markdown_instruction: Adesso, prova a cambiare la scena
        attaccando un blocco all'evento `quando si clicca su "Esegui"`.
      courseC_flappy_events7_2018_markdown_instruction: Adesso, prova a cambiare la
        scena attaccando un blocco all'evento `quando si clicca su "Esegui"`.
      courseC_flappy_events8_markdown_instruction: |-
        Puoi cambiare lo sfondo in seguito a qualsiasi evento, non solo quando il gioco inizia.

        Prova a impostare una scena **casuale** quando si verificano altri eventi... per esempio, quando si supera un ostacolo.
      courseC_flappy_events8_2018_markdown_instruction: |-
        Puoi cambiare lo sfondo in seguito a qualsiasi evento, non solo quando il gioco inizia.

        Prova a impostare una scena **casuale** quando si verificano altri eventi... per esempio, quando si supera un ostacolo.
      courseC_flappy_events9_markdown_instruction: Per cambiare le cose, invece di
        finire il gioco quando Flappy colpisce un ostacolo, prova ad impostare di
        nuovo il punteggio a 0.
      courseC_flappy_events9_2018_markdown_instruction: Per cambiare le cose, invece
        di finire il gioco quando Flappy colpisce un ostacolo, prova ad impostare
        di nuovo il punteggio a 0.
      courseC_harvester_loops1_markdown_instruction: |-
        I cicli possono essere usati per ripetere più mosse.

        Usa i cicli per raccogliere tutte e quattro le zucche.
      courseC_harvester_loops10_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops10_2018_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops11_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops11_2018_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops1_2018_markdown_instruction: |-
        I cicli possono essere usati per ripetere più mosse.

        Usa i cicli per raccogliere tutte e quattro le zucche.
      courseC_harvester_loops2_markdown_instruction: Riesci a combinare due diversi
        cicli per muoverti verso le zucche e poi raccoglierle tutte?
      courseC_harvester_loops2_2018_markdown_instruction: Riesci a combinare due diversi
        cicli per muoverti verso le zucche e poi raccoglierle tutte?
      courseC_harvester_loops3_markdown_instruction: Raccogli tutte le zucche.
      courseC_harvester_loops3_2018_markdown_instruction: Raccogli tutte le zucche.
      courseC_harvester_loops4_markdown_instruction: |-
        Ora crescono anche le pannocchie!

        Raccogli tutte le pannocchie e tutte le zucche.
      courseC_harvester_loops4_2018_markdown_instruction: |-
        Ora crescono anche le pannocchie!

        Raccogli tutte le pannocchie e tutte le zucche.
      courseC_harvester_loops5_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops5_2018_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops6_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops6_2018_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops7_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops7_2018_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops8_markdown_instruction: |-
        **Sfida:** Raccogli tutte le pannocchie e tutte le zucche.

        Puoi completare questa sfida in qualunque modo preferisci, ma ci vorrà molto lavoro o molto ragionamento!
      courseC_harvester_loops8_2018_markdown_instruction: |-
        **Sfida:** Raccogli tutte le pannocchie e tutte le zucche.

        Puoi completare questa sfida in qualunque modo preferisci, ma ci vorrà molto lavoro o molto ragionamento!
      courseC_harvester_loops9_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops9_2018_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_harvester_loops_forVid_markdown_instruction: Raccogli tutte le pannocchie
        e tutte le zucche.
      courseC_maze_debugging1_markdown_instruction: |-
        Questo programma è sbagliato!

        Correggilo per aiutare Scrat a raggiungere la ghianda.
      courseC_maze_debugging1_2018_markdown_instruction: |-
        Questo programma è sbagliato!

        Correggilo per aiutare Scrat a raggiungere la ghianda.
      courseC_maze_debugging3_markdown_instruction: |-
        C'è ancora qualcosa di sbagliato.

        Rimuovi dei blocchi per far arrivare Scrat fino alla ghianda!
      courseC_maze_debugging3_2018_markdown_instruction: |-
        C'è ancora qualcosa di sbagliato.

        Rimuovi dei blocchi per far arrivare Scrat fino alla ghianda!
      courseC_maze_loops8_markdown_instruction: "**Sfida:** Metti a frutto ciò che
        hai imparato negli ultimi esercizi per completare questo livello."
      courseC_maze_programming1_markdown_instruction: Per risolvere questo esercizio,
        collega tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      courseC_maze_programming1_2018_markdown_instruction: Per risolvere questo esercizio,
        collega tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      courseC_maze_programming2_markdown_instruction: Trascina ancora un blocco <xml><block
        type="maze_moveForward"/></xml> fuori dalla cassetta degli attrezzi per completare
        il programma.
      courseC_maze_programming2_2018_markdown_instruction: Trascina ancora un blocco
        <xml><block type="maze_moveForward"/></xml> fuori dalla cassetta degli attrezzi
        per completare il programma.
      courseC_maze_programming3_markdown_instruction: |-
        *"Questo maialino mi fa arricciare le penne."*

        C'è un blocco di troppo che fa andare a sbattere l'uccellino.
        Buttalo via sganciandolo dai blocchi grigi e trascinandolo nella cassetta degli attrezzi.
      courseC_maze_programming3_2018_markdown_instruction: |-
        *"Questo maialino mi fa arricciare le penne."*

        C'è un blocco di troppo che fa andare a sbattere l'uccellino.
        Buttalo via sganciandolo dai blocchi grigi e trascinandolo nella cassetta degli attrezzi.
      courseC_maze_programming4_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseC_maze_programming4_2018_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseC_maze_programming5_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseC_maze_programming5_2018_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseC_maze_programming6_markdown_instruction: |-
        *"Mantieni la calma e aiutami a trovare quel cattivone di un maialino. Altrimenti potrei arrabbiarmi!"*

        Fai arrivare l'uccellino fino a maialino evitando la dinamite (TNT).
      courseC_maze_programming6_2018_markdown_instruction: |-
        *"Mantieni la calma e aiutami a trovare quel cattivone di un maialino. Altrimenti potrei arrabbiarmi!"*

        Fai arrivare l'uccellino fino a maialino evitando la dinamite (TNT).
      courseC_maze_programming7_markdown_instruction: |-
        *"È ora di arrabbiarsi!"*

        **Sfida:** Questo programma ha molti errori. Dovrai eliminare dei blocchi ed aggiungerne altri.
      courseC_maze_programming7_2018_markdown_instruction: |-
        *"È ora di arrabbiarsi!"*

        **Sfida:** Questo programma ha molti errori. Dovrai eliminare dei blocchi ed aggiungerne altri.
      courseC_maze_programming8_markdown_instruction: '*"Mantieni la calma e aiutami
        a trovare il maialino cattivo."*'
      courseC_maze_programming8_2018_markdown_instruction: '*"Mantieni la calma e
        aiutami a trovare il maialino cattivo."*'
      courseC_maze_programming8_predict1_markdown_instruction: '*"Mantieni la calma
        e aiutami a trovare il maialino cattivo."*'
      courseC_maze_programming8_predict1_2018_markdown_instruction: '*"Mantieni la
        calma e aiutami a trovare il maialino cattivo."*'
      courseC_maze_programming9_markdown_instruction: '*"Ora aiutami a sorprendere
        il maiale nel modo che preferisci!"*'
      courseC_maze_programming9_2018_markdown_instruction: '*"Ora aiutami a sorprendere
        il maiale nel modo che preferisci!"*'
      courseC_maze_programming_challenge2_markdown_instruction: Alcune volte ci sono
        diversi modi per risolvere lo stesso problema. Alcune volte è più veloce andare
        all'indietro, piuttosto che muoversi in avanti!
      courseC_maze_programming_challenge2_2018_markdown_instruction: Alcune volte
        ci sono diversi modi per risolvere lo stesso problema. Alcune volte è più
        veloce andare all'indietro, piuttosto che muoversi in avanti!
      courseC_puppy_loops8_markdown_instruction: "**Sfida:** Metti a frutto ciò che
        hai imparato negli ultimi esercizi per completare questo livello."
      courseC_puppy_loops8courseC_maze_loops8_markdown_instruction: "**Sfida:** Metti
        a frutto ciò che hai imparato negli ultimi esercizi per completare questo
        livello."
      courseC_starWars_loops1_markdown_instruction: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _\"Vai a recuperare i rottami metallici, BB-8!\"_ \n\nUsa cinque blocchi uguali
        per recuperare i rottami metallici che brillano come questo: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops10_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Vai BB-8!"_

        Stai andando alla grande! Continua così!
      courseC_starWars_loops10_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Vai BB-8!"_

        Stai andando alla grande! Continua così!
      courseC_starWars_loops11_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Continua, BB-8!"_

        Ci sei quasi! Questa volta scegli il percorso che preferisci!
      courseC_starWars_loops11_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Continua, BB-8!"_

        Ci sei quasi! Questa volta scegli il percorso che preferisci!
      courseC_starWars_loops1_2018_markdown_instruction: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _\"Vai a recuperare i rottami metallici, BB-8!\"_ \n\nUsa cinque blocchi uguali
        per recuperare i rottami metallici che brillano come questo: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops2_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Vai BB-8!"_

        Per recuperare tutti i rottami metallici, prova a creare un ciclo con un solo blocco all'interno del blocco `ripeti ... volte`.
      courseC_starWars_loops2_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Vai BB-8!"_

        Per recuperare tutti i rottami metallici, prova a creare un ciclo con un solo blocco all'interno del blocco `ripeti ... volte`.
      courseC_starWars_loops4_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Continua così, BB-8."_

        In questo esercizio, due cicli `ripeti ... volte` ti aiuteranno a far in modo che BB-8 recuperi tutti i rottami metallici con il minor numero di blocchi possibile!
      courseC_starWars_loops4_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Continua così, BB-8."_

        In questo esercizio, due cicli `ripeti ... volte` ti aiuteranno a far in modo che BB-8 recuperi tutti i rottami metallici con il minor numero di blocchi possibile!
      courseC_starWars_loops5_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Vai BB-8!"_'
      courseC_starWars_loops5_2018_markdown_instruction: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Vai BB-8!"_'
      courseC_starWars_loops6_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Riesci a prenderli tutti?"_

        I cicli funzionano anche con più di un blocco al loro interno!  Puoi far ripetere questa sequenza?
      courseC_starWars_loops6_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Riesci a prenderli tutti?"_

        I cicli funzionano anche con più di un blocco al loro interno!  Puoi far ripetere questa sequenza?
      courseC_starWars_loops7_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Puoi farcela!"_

        Riesci a recuperare tutti i rottami metallici usando un solo ciclo? Prova a programmare tutto con blocchi singoli, poi cerca il codice ripetuto da mettere nel ciclo.
      courseC_starWars_loops7_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Puoi farcela!"_

        Riesci a recuperare tutti i rottami metallici usando un solo ciclo? Prova a programmare tutto con blocchi singoli, poi cerca il codice ripetuto da mettere nel ciclo.
      courseC_starWars_loops8_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Continua così, BB-8."_

        **Sfida:** Metti a frutto ciò che hai imparato negli ultimi esercizi per completare questo livello.
      courseC_starWars_loops8_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Continua così, BB-8."_

        **Sfida:** Metti a frutto ciò che hai imparato negli ultimi esercizi per completare questo livello.
      courseC_starWars_loops9_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Continua!"_

        Sfrutta ciò che hai imparato per recuperare tutti i rottami metallici!
      courseC_starWars_loops9_2018_markdown_instruction: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Continua!"_

        Sfrutta ciò che hai imparato per recuperare tutti i rottami metallici!
      courseD_Frozen_nested1_markdown_instruction: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)_\"Ciao,
        sono Elsa di Arendelle. Aiutami a disegnare una forma.\"_\n\nDisegna una piccola
        figura, larga tra **20 e 50 pixel**.  Può avere la forma che preferisci.\n<hr/>\n\nPotresti
        realizzare un poligono, come uno di questi:\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \n\n\nO anche una figura astratta, come una di queste:\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\n"
      courseD_Frozen_nested2_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Ora, ne disegniamo più di una."_

        Ora parti dalla tua figura e disegnane due o tre di fila saltando in avanti un certo numero di pixel.

        - Se salti in avanti **meno** della larghezza della tua figura, le immagini potrebbero sovrapporsi.
        - Se salti in avanti **più** della larghezza della tua figura, otterrai uno spazio vuoto.

        <hr/>

        La tua fila potrebbe venire come una di queste:

        ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)
        ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)
        ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)
        <br/>  <br/>

        Oppure, le tue figure potrebbero distribuirsi come una di queste:

        ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)
        ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)
        ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)
      courseD_Frozen_nested3_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Trasformiamo la figura in un fiocco di neve."_

        Ora usa il blocco `salta a 200 avanti 200 in basso` per far saltare di nuovo Elsa al centro e farla girare intorno per disegnare la fila di figure in diverse direzioni.

        Che fiocchi spettacolari che puoi realizzare!
        <hr/>
        Guarda questi esempi con diversi poligoni:
        ![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)
        ![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)
        ![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)

        Delle forme astratte potrebbero rendere il fiocco di neve più simile a uno di questi:
        ![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)
        ![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)
        ![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)
      courseD_Frozen_nested4_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Cosa succede se disegniamo i fiocchi di neve uno sopra l'altro?"_

        Prova a sovrapporre due diverse figure di fiocchi di neve una sopra l'altra con una piccola rotazione tra le due - guarda cosa ottieni!
      courseD_Frozen_nested5_markdown_instruction: '![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _"Dai spazio alla tua creatività, divertiti con forme e angoli per disegnare
        nuovi fiocchi di neve! "_'
      courseD_Frozen_nested6_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Proviamo qualcosa di nuovo. Questa volta, pattina a  zig-zag"_


        <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" style="float: left; margin: 0 15px 15px 0;" />
        Disegna uno schema a scalinata che utilizza angoli compresi tra 75 e 105 gradi -- ma assicurati che le curve a sinistra e a destra utilizzino lo stesso angolo.
        (Dopo scoprirai perché.)
      courseD_Frozen_nested7_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Ora girati e torna da dove siamo venuti."_

        Ruota di 180 gradi e disegna di nuovo lo stesso schema a scalinata!

        - Il resto di questa lezione sarà più facile se metti tutto il codice dentro ad un ciclo per far disegnare Elsa: ruota di 180 gradi, disegna, quindi ruota di nuovo di 180 gradi.

        <hr/>

        Ecco un esempio di scale che usa un angolo di 76 gradi:

        ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)
      courseD_Frozen_nested8_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Gira e trasforma la figura in un fiocco di neve."_

        Fai ruotare questa figura 5 o 6 volte fino a formare un cerchio.
        - Se scegli di farla ruotare 5 volte, usa angoli di 72 gradi.
        - Se scegli di farla ruotare 6 volte, usa angoli di 60 gradi.
        <hr/>

        Ecco un esempio di Elsa che fa ruotare uno schema 6 volte:

        ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)
      courseD_Frozen_nested9_markdown_instruction: |
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _"E adesso, cosa possiamo ancora fare? Esploriamo e creiamo le nostre meraviglie invernali! "_

        Fai qualche prova con ciò che hai creato. Disegna quello che vuoi!
        - Cosa succede se usi due angoli diversi nello schema a scalinata?
        - Cosa succede se rendi lo schema a rombo più lungo o più corto?
        - Cosa sembra ciò che ottieni disegnando due fiocchi di neve uno sopra l'altro?
      courseD_artist_7_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Ora girati e torna da dove siamo venuti."_

        Ruota di 180 gradi e disegna di nuovo lo stesso schema a scalinata!

        - Il resto di questa lezione sarà più facile se metti tutto il codice dentro ad un ciclo per far disegnare Elsa: ruota di 180 gradi, disegna, quindi ruota di nuovo di 180 gradi.

        <hr/>

        Ecco un esempio di scale che usa un angolo di 76 gradi:

        ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)
      courseD_artist_8_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Gira e trasforma la figura in un fiocco di neve."_

        Fai ruotare questa figura 5 o 6 volte fino a formare un cerchio.
        - Se scegli di farla ruotare 5 volte, usa angoli di 72 gradi.
        - Se scegli di farla ruotare 6 volte, usa angoli di 60 gradi.
        <hr/>

        Ecco un esempio di Elsa che fa ruotare uno schema 6 volte:

        ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)
      courseD_artist_9_2018_markdown_instruction: |
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _"E adesso, cosa possiamo ancora fare? Esploriamo e creiamo le nostre meraviglie invernali! "_

        Fai qualche prova con ciò che hai creato. Disegna quello che vuoi!
        - Cosa succede se usi due angoli diversi nello schema a scalinata?
        - Cosa succede se rendi lo schema a rombo più lungo o più corto?
        - Cosa sembra ciò che ottieni disegnando due fiocchi di neve uno sopra l'altro?
      courseD_artist_binary1_markdown_instruction: |-
        Hai a disposizione una griglia di quadrati con cui puoi giocare e creare dei disegni semplicemente accendendo e spegnendo i vari quadrati. Ogni quadrato è quindi analogo ad un pixel dello schermo.

        Usa i blocchi qui sotto per far produrre all'artista nella prima riga il disegno la cui codifica binaria è "01010101".
      courseD_artist_binary1_2018_markdown_instruction: |-
        Hai a disposizione una griglia di quadrati con cui puoi giocare e creare dei disegni semplicemente accendendo e spegnendo i vari quadrati. Ogni quadrato è quindi analogo ad un pixel dello schermo.

        Usa i blocchi qui sotto per far produrre all'artista nella prima riga il disegno la cui codifica binaria è "01010101".
      courseD_artist_binary2_markdown_instruction: |-
        La funzione `draw binary` (*disegna in binario*) prende in ingresso una sequenza binaria, cioè fatta di caratteri "1" e "0" e fa sì che l'artista – mentre va da sinistra verso destra e dall'alto verso il basso – accenda o spenga i quadrati in base ai caratteri della stringa.
        ___
        L'artista quindi colora di bianco i quadrati quando incontra un "1" mentre non li colora quando incontra uno "0".
        ___
        **Clicca su "Esegui" per vedere come l'artista usa le sequenze binarie per disegnare questa figura.**
      courseD_artist_binary2_2018_markdown_instruction: |-
        La funzione `draw binary` (*disegna in binario*) prende in ingresso una sequenza binaria, cioè fatta di caratteri "1" e "0" e fa sì che l'artista – mentre va da sinistra verso destra e dall'alto verso il basso – accenda o spenga i quadrati in base ai caratteri della stringa.
        ___
        L'artista quindi colora di bianco i quadrati quando incontra un "1" mentre non li colora quando incontra uno "0".
        ___
        **Clicca su "Esegui" per vedere come l'artista usa le sequenze binarie per disegnare questa figura.**
      courseD_artist_functions2_markdown_instruction: |-
        Le funzioni ti permettono di definire nuovi blocchi!

        Abbiamo spostato i blocchi per disegnare un quadrato all'interno di una funzione chiamata `draw a square` (*disegna un quadrato*). Puoi usare la funzione `draw a square` per creare gli occhiali?
        ___

        I quadrati sono distanti 75 pixel.
      courseD_artist_functions3_markdown_instruction: |-
        Torneremo alle funzioni tra poco. Ora facciamo una breve pausa esercitandoci a disegnare questa stella.

        Puoi realizzare questo disegno aggiungendo un blocco `ripeti ... volte`.
      courseD_artist_functions4_markdown_instruction: |-
        Ora che sai disegnare una stella, prova a disegnarne quattro!

        - Ogni raggio della stella è lungo 25 pixel.
        - Gira di 45 gradi tra un raggio e l'altro.
        - Salta avanti di 100 pixel tra una stella e l'altra.
      courseD_artist_functions5_markdown_instruction: |-
        In che caso è più difficile disegnare tre stelle invece di quattro? Quando devi anche saltare oltre la luna!

        Devi disegnare solo queste tre stelle per completare questo esercizio.
      courseD_artist_functions6_markdown_instruction: |-
        Stai andando alla grande!

        Crea questa finestra disegnando un quadrato e ruotandolo di 90 gradi prima di disegnarne un altro e così via.
      courseD_artist_functions7_markdown_instruction: "Sposta il codice che disegna
        la finestra all'interno del blocco che definisce la funzione `draw a window`
        (*disegna una finestra*). Ora, potremo richiamare la funzione ogni volta che
        ci serve disegnare una finestra senza dover scrivere nuovamente il codice.\n\n<img
        src=\"https://images.code.org/57c016bcafe697e6ddb196e0f13c9ef9-image-1468602046641.gif\"
        width=\"450px\"/>\n<br/> \n\nProva a risolvere questo esercizio creando la
        funzione `draw a window` (*disegna una finestra*) e richiamandola cinque volte.
        Stai attento alla porta!\n\n- Le finestre del piano di sopra distano 50 pixel
        una dall'altra.\n- Le finestre del piano terra si trovano 100 pixel al di
        sotto delle precedenti."
      courseD_artist_functions9_markdown_instruction: |-
        Crea questa immagine usando solo i blocchi disponibili nella cassetta degli attrezzi.

        - Per disegnare un rombo, dovrai alternare svolte a 60 gradi con svolte a 120 gradi.
      courseD_artist_nestedLoops1a_markdown_instruction: |-
        Ora disegna il triangolo 6 volte.

        Dopo ogni triangolo, devi girarti di 60 gradi prima di disegnare il successivo.
      courseD_artist_nestedLoops1a_2018_markdown_instruction: |-
        Ora disegna il triangolo 6 volte.

        Dopo ogni triangolo, devi girarti di 60 gradi prima di disegnare il successivo.
      courseD_artist_nestedLoops2_markdown_instruction: |-
        Questa volta, completa l'esercizio con il minor numero possibile di blocchi.

        Dopo ogni triangolo, devi girare di 60 gradi prima di disegnare il successivo.
        Hai visto come è più facile usando i **cicli annidati**?
      courseD_artist_nestedLoops2_2018_markdown_instruction: |-
        Questa volta, completa l'esercizio con il minor numero possibile di blocchi.

        Dopo ogni triangolo, devi girare di 60 gradi prima di disegnare il successivo.
        Hai visto come è più facile usando i **cicli annidati**?
      courseD_artist_nestedLoops4_markdown_instruction: |-
        Grande! Fai la stessa cosa con questi cerchi.

        - Ogni cerchio è realizzato andando avanti di 1 pixel prima di girare di 1 grado, per 360 volte.
        - Ogni cerchio inizia a 50 pixel di distanza da dove si è concluso l'ultimo cerchio.
      courseD_artist_nestedLoops4_2018_markdown_instruction: |-
        Grande! Fai la stessa cosa con questi cerchi.

        - Ogni cerchio è realizzato andando avanti di 1 pixel prima di girare di 1 grado, per 360 volte.
        - Ogni cerchio inizia a 50 pixel di distanza da dove si è concluso l'ultimo cerchio.
      courseD_artist_nestedLoops5_markdown_instruction: |-
        Cosa succede se giri di 90 gradi anche tra un cerchio e l'altro?

        (Per ottenere questa immagine, devi saltare di 50 pixel tra un cerchio e l'altro, come nell'esercizio precedente)
      courseD_artist_nestedLoops5_2018_markdown_instruction: |-
        Cosa succede se giri di 90 gradi anche tra un cerchio e l'altro?

        (Per ottenere questa immagine, devi saltare di 50 pixel tra un cerchio e l'altro, come nell'esercizio precedente)
      courseD_artist_nestedLoops7_markdown_instruction: |-
        Usa ciò che hai imparato per fare questo disegno.

        - Ogni quadrato ha **lati di 100 pixel** e **angoli di 90 gradi**.
        - Dovrai girare di **60 gradi tra un quadrato e l'altro**. Perché? Perché per fare un giro completo servono 360 gradi e se devi distribuire 6 quadrati in un giro completo, devi dividere i 360 gradi in 6 parti, quindi 360:6=60.
        - Assicurati di saltare ** 50 pixel per raggiungere il quadrato successivo**.
      courseD_artist_nestedLoops7_2018_markdown_instruction: |-
        Usa ciò che hai imparato per fare questo disegno.

        - Ogni quadrato ha **lati di 100 pixel** e **angoli di 90 gradi**.
        - Dovrai girare di **60 gradi tra un quadrato e l'altro**. Perché? Perché per fare un giro completo servono 360 gradi e se devi distribuire 6 quadrati in un giro completo, devi dividere i 360 gradi in 6 parti, quindi 360:6=60.
        - Assicurati di saltare ** 50 pixel per raggiungere il quadrato successivo**.
      courseD_artist_nestedLoops8_markdown_instruction: |-
        Usa ciò che hai imparato nell'ultimo paio di esercizi per costruire dall'inizio quest'immagine.

        - Ogni esagono ha **lati di 50 pixel** e **svolte di 60 gradi**.
      courseD_artist_nestedLoops8_2018_markdown_instruction: |-
        Usa ciò che hai imparato nell'ultimo paio di esercizi per costruire dall'inizio quest'immagine.

        - Ogni esagono ha **lati di 50 pixel** e **svolte di 60 gradi**.
      courseD_artist_nestedLoops9_markdown_instruction: |-
        **Sfida:** Riesci a scoprire come realizzare un'immagine come questa?

        - Entrambe le forme hanno **lati di 50 pixel**.
        - Tra ogni coppia di immagini, dovrai saltare in avanti della lunghezza di un lato e girare di 45 gradi.
      courseD_artist_nestedLoops9_2018_markdown_instruction: |-
        **Sfida:** Riesci a scoprire come realizzare un'immagine come questa?

        - Entrambe le forme hanno **lati di 50 pixel**.
        - Tra ogni coppia di immagini, dovrai saltare in avanti della lunghezza di un lato e girare di 45 gradi.
      courseD_artist_nestedLoopsFP_markdown_instruction: |-
        Adesso è il tuo turno. Usa le tecniche che hai imparato per realizzare qualcosa che ti piaccia!

        Hai bisogno di un'idea? Prova a realizzare uno di questi:

        ![expandable](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)
        ![expandable](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)
        ![expandable](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)
      courseD_artist_nestedLoopsFP_2018_markdown_instruction: |-
        Adesso è il tuo turno. Usa le tecniche che hai imparato per realizzare qualcosa che ti piaccia!

        Hai bisogno di un'idea? Prova a realizzare uno di questi:

        ![expandable](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)
        ![expandable](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)
        ![expandable](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)
      courseD_artist_project1_markdown_instruction: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)_\"Ciao,
        sono Elsa di Arendelle. Aiutami a disegnare una forma.\"_\n\nDisegna una piccola
        figura, larga tra **20 e 50 pixel**.  Può avere la forma che preferisci.\n<hr/>\n\nPotresti
        realizzare un poligono, come uno di questi:\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \n\n\nO anche una figura astratta, come una di queste:\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\n"
      courseD_artist_project1_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)_"Ciao, sono Elsa di Arendelle. Aiutami a disegnare una forma."_

        Disegna una piccola figura, larga tra **20 e 50 pixel**.  Può avere la forma che preferisci.
        <hr/>

        Potresti realizzare un poligono, come uno di questi:
        ![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)
        ![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)
        ![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)


        O anche una figura astratta, come una di queste:
        ![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)
        ![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)
        ![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)
      courseD_artist_project1a_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Proviamo qualcosa di nuovo. Questa volta, pattina a  zig-zag"_


        <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" style="float: left; margin: 0 15px 15px 0;" />
        Disegna uno schema a scalinata che utilizza angoli compresi tra 75 e 105 gradi -- ma assicurati che le curve a sinistra e a destra utilizzino lo stesso angolo.
        (Dopo scoprirai perché.)
      courseD_artist_project1a_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Proviamo qualcosa di nuovo. Questa volta, pattina a  zig-zag"_


        <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" style="float: left; margin: 0 15px 15px 0;" />
        Disegna uno schema a scalinata che utilizza angoli compresi tra 75 e 105 gradi -- ma assicurati che le curve a sinistra e a destra utilizzino lo stesso angolo.
        (Dopo scoprirai perché.)
      courseD_artist_project2_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Ora, ne disegniamo più di una."_

        Ora parti dalla tua figura e disegnane due o tre di fila saltando in avanti un certo numero di pixel.

        - Se salti in avanti **meno** della larghezza della tua figura, le immagini potrebbero sovrapporsi.
        - Se salti in avanti **più** della larghezza della tua figura, otterrai uno spazio vuoto.

        <hr/>

        La tua fila potrebbe venire come una di queste:

        ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)
        ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)
        ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)
        <br/>  <br/>

        Oppure, le tue figure potrebbero distribuirsi come una di queste:

        ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)
        ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)
        ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)
      courseD_artist_project2_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Ora, ne disegniamo più di una."_

        Ora parti dalla tua figura e disegnane due o tre di fila saltando in avanti un certo numero di pixel.

        - Se salti in avanti **meno** della larghezza della tua figura, le immagini potrebbero sovrapporsi.
        - Se salti in avanti **più** della larghezza della tua figura, otterrai uno spazio vuoto.

        <hr/>

        La tua fila potrebbe venire come una di queste:

        ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)
        ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)
        ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)
        <br/>  <br/>

        Oppure, le tue figure potrebbero distribuirsi come una di queste:

        ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)
        ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)
        ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)
      courseD_artist_project2a_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Ora girati e torna da dove siamo venuti."_

        Ruota di 180 gradi e disegna di nuovo lo stesso schema a scalinata!

        - Il resto di questa lezione sarà più facile se metti tutto il codice dentro ad un ciclo per far disegnare Elsa: ruota di 180 gradi, disegna, quindi ruota di nuovo di 180 gradi.

        <hr/>

        Ecco un esempio di scale che usa un angolo di 76 gradi:

        ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)
      courseD_artist_project2a_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Ora girati e torna da dove siamo venuti."_

        Ruota di 180 gradi e disegna di nuovo lo stesso schema a scalinata!

        - Il resto di questa lezione sarà più facile se metti tutto il codice dentro ad un ciclo per far disegnare Elsa: ruota di 180 gradi, disegna, quindi ruota di nuovo di 180 gradi.

        <hr/>

        Ecco un esempio di scale che usa un angolo di 76 gradi:

        ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)
      courseD_artist_project3_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Trasformiamo la figura in un fiocco di neve."_

        Ora usa il blocco `salta a 200 avanti 200 in basso` per far saltare di nuovo Elsa al centro e farla girare intorno per disegnare la fila di figure in diverse direzioni.

        Che fiocchi spettacolari che puoi realizzare!
        <hr/>
        Guarda questi esempi con diversi poligoni:
        ![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)
        ![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)
        ![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)

        Delle forme astratte potrebbero rendere il fiocco di neve più simile a uno di questi:
        ![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)
        ![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)
        ![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)
      courseD_artist_project3_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Trasformiamo la figura in un fiocco di neve."_

        Ora usa il blocco `salta a 200 avanti 200 in basso` per far saltare di nuovo Elsa al centro e farla girare intorno per disegnare la fila di figure in diverse direzioni.

        Che fiocchi spettacolari che puoi realizzare!
        <hr/>
        Guarda questi esempi con diversi poligoni:
        ![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)
        ![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)
        ![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)

        Delle forme astratte potrebbero rendere il fiocco di neve più simile a uno di questi:
        ![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)
        ![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)
        ![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)
      courseD_artist_project3a_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Gira e trasforma la figura in un fiocco di neve."_

        Fai ruotare questa figura 5 o 6 volte fino a formare un cerchio.
        - Se scegli di farla ruotare 5 volte, usa angoli di 72 gradi.
        - Se scegli di farla ruotare 6 volte, usa angoli di 60 gradi.
        <hr/>

        Ecco un esempio di Elsa che fa ruotare uno schema 6 volte:

        ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)
      courseD_artist_project3a_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Gira e trasforma la figura in un fiocco di neve."_

        Fai ruotare questa figura 5 o 6 volte fino a formare un cerchio.
        - Se scegli di farla ruotare 5 volte, usa angoli di 72 gradi.
        - Se scegli di farla ruotare 6 volte, usa angoli di 60 gradi.
        <hr/>

        Ecco un esempio di Elsa che fa ruotare uno schema 6 volte:

        ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)
      courseD_artist_project4_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Cosa succede se disegniamo i fiocchi di neve uno sopra l'altro?"_

        Prova a sovrapporre due diverse figure di fiocchi di neve una sopra l'altra con una piccola rotazione tra le due - guarda cosa ottieni!
      courseD_artist_project4_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"Cosa succede se disegniamo i fiocchi di neve uno sopra l'altro?"_

        Prova a sovrapporre due diverse figure di fiocchi di neve una sopra l'altra con una piccola rotazione tra le due - guarda cosa ottieni!
      courseD_artist_project4a_markdown_instruction: |
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _"E adesso, cosa possiamo ancora fare? Esploriamo e creiamo le nostre meraviglie invernali! "_

        Fai qualche prova con ciò che hai creato. Disegna quello che vuoi!
        - Cosa succede se usi due angoli diversi nello schema a scalinata?
        - Cosa succede se rendi lo schema a rombo più lungo o più corto?
        - Cosa sembra ciò che ottieni disegnando due fiocchi di neve uno sopra l'altro?
      courseD_artist_project4a_2018_markdown_instruction: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _"E adesso, cosa possiamo ancora fare? Esploriamo e creiamo le nostre meraviglie invernali! "_

        Fai qualche prova con ciò che hai creato. Disegna quello che vuoi!
        - Cosa succede se usi due angoli diversi nello schema a scalinata?
        - Cosa succede se rendi lo schema a rombo più lungo o più corto?
        - Cosa sembra ciò che ottieni disegnando due fiocchi di neve uno sopra l'altro?
      courseD_artist_project5_markdown_instruction: '![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _"Dai spazio alla tua creatività, divertiti con forme e angoli per disegnare
        nuovi fiocchi di neve! "_'
      courseD_artist_project5_2018_markdown_instruction: '![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _"Dai spazio alla tua creatività, divertiti con forme e angoli per disegnare
        nuovi fiocchi di neve! "_'
      courseD_artist_ramp11_markdown_instruction: |-
        Grande! Ora facciamo un quadrato usando l'Artista! I blocchi sono leggermente diversi, ma l'idea è la stessa.
        ___
        Ogni lato del quadrato ha una lunghezza di 200 pixel e sarà necessario ruotare di 90 gradi ad ogni angolo.
      courseD_artist_ramp12_markdown_instruction: |-
        Usa ciò che hai imparato per disegnare questo triangolo all'interno di un quadrato.
        ___
        ##### Ogni lato è lungo 200 pixel. Devi girare di 90 gradi per disegnare un quadrato e di 120 gradi per disegnare un triangolo.
      courseD_bee_conditionals10_markdown_instruction: |-
        Le istruzioni condizionali posso essere utili anche quando sai esattamente cosa c'è in ogni casella.

        Raccogli tutto il nettare o fai tutto il miele.
      courseD_bee_conditionals10_2018_markdown_instruction: |-
        Le istruzioni condizionali posso essere utili anche quando sai esattamente cosa c'è in ogni casella.

        Raccogli tutto il nettare o fai tutto il miele.
      courseD_bee_conditionals2_markdown_instruction: |-
        Ancora più nuvole!

        Prima di prendere il nettare, controlla sotto ogni nuvola se sta nascondendo un fiore. Se sotto la nuvola c'è un fiore, l'ape deve prendere *una* dose di nettare.

        Ricorda: le nuvole non nascondono sempre la stessa cosa!
      courseD_bee_conditionals2_2018_markdown_instruction: |-
        Ancora più nuvole!

        Prima di prendere il nettare, controlla sotto ogni nuvola se sta nascondendo un fiore. Se sotto la nuvola c'è un fiore, l'ape deve prendere *una* dose di nettare.

        Ricorda: le nuvole non nascondono sempre la stessa cosa!
      courseD_bee_conditionals2_test_markdown_instruction: |-
        Ancora più nuvole!

        Prima di prendere il nettare, controlla sotto ogni nuvola se sta nascondendo un fiore. Se sotto la nuvola c'è un fiore, l'ape deve prendere *una* dose di nettare.

        Ricorda: le nuvole non nascondono sempre la stessa cosa!
      courseD_bee_conditionals3_markdown_instruction: Visto che puoi raccogliere il
        nettare solo dai fiori, devi prima controllare in ogni casella se c'è un fiore.
        Se sotto ognuna di queste nuvole c'è un fiore, l'ape dovrà raccogliere *una
        dose* di nettare.
      courseD_bee_conditionals3_2018_markdown_instruction: Visto che puoi raccogliere
        il nettare solo dai fiori, devi prima controllare in ogni casella se c'è un
        fiore. Se sotto ognuna di queste nuvole c'è un fiore, l'ape dovrà raccogliere
        *una dose* di nettare.
      courseD_bee_conditionals4_markdown_instruction: |-
        In questo esercizio, sappiamo che ogni fiore ha esattamente una dose di nettare, ma i fiori non sono distanziati in modo uniforme.

        Raccogli tutto il nettare usando il minor numero possibile di blocchi.
      courseD_bee_conditionals4_2018_markdown_instruction: |-
        In questo esercizio, sappiamo che ogni fiore ha esattamente una dose di nettare, ma i fiori non sono distanziati in modo uniforme.

        Raccogli tutto il nettare usando il minor numero possibile di blocchi.
      courseD_bee_conditionals6_markdown_instruction: |-
        *"Adesso voglio solo fare il miele."*

        Alcune di queste nubi potrebbero nascondere dei favi. Controlla sotto ogni nuvola se c'è un favo! Se c'è, l'ape deve semplicemente fare *una* dose di miele.
      courseD_bee_conditionals6_2018_markdown_instruction: |-
        *"Adesso voglio solo fare il miele."*

        Alcune di queste nubi potrebbero nascondere dei favi. Controlla sotto ogni nuvola se c'è un favo! Se c'è, l'ape deve semplicemente fare *una* dose di miele.
      courseD_bee_conditionals7_markdown_instruction: |-
        A volte una nuvola può coprire un fiore, altre volte nasconde un favo!

        Usa il blocco `se/altrimenti` per raccogliere il nettare dai fiori e fare il miele nei favi. Ricorda: se c'è un fiore, l'ape deve raccogliere solo *una* dose di nettare. E se c'è un favo, l'ape deve produrre *una* sola dose di miele.
      courseD_bee_conditionals7_2018_markdown_instruction: |-
        A volte una nuvola può coprire un fiore, altre volte nasconde un favo!

        Usa il blocco `se/altrimenti` per raccogliere il nettare dai fiori e fare il miele nei favi. Ricorda: se c'è un fiore, l'ape deve raccogliere solo *una* dose di nettare. E se c'è un favo, l'ape deve produrre *una* sola dose di miele.
      courseD_bee_conditionals8_markdown_instruction: |-
        **Sfida:** C'è sicuramente un fiore o un favo sotto ad ognuna di quelle nuvole!

        Se c'è un fiore, raccogli il nettare. In caso contrario, fai il miele perché c'è sicuramente un favo.
      courseD_bee_conditionals8_2018_markdown_instruction: |-
        **Sfida:** C'è sicuramente un fiore o un favo sotto ad ognuna di quelle nuvole!

        Se c'è un fiore, raccogli il nettare. In caso contrario, fai il miele perché c'è sicuramente un favo.
      courseD_bee_conditionals_challenge1_markdown_instruction: Raccogli tutto il
        nettare o fai tutto il miele. Puoi raccogliere il nettare solo dai fiori e
        fare il miele solo nei favi. Controlla sotto ogni nuvola se c'è un fiore o
        un favo.
      courseD_bee_conditionals_challenge1_2018_markdown_instruction: Raccogli tutto
        il nettare o fai tutto il miele. Puoi raccogliere il nettare solo dai fiori
        e fare il miele solo nei favi. Controlla sotto ogni nuvola se c'è un fiore
        o un favo.
      courseD_bee_nestedLoops1_markdown_instruction: |-
        *"Ora facciamo qualcosa di grandioso!"*

        Aiuta l'ape a raccogliere tutto il nettare.
      courseD_bee_nestedLoops1_2018_markdown_instruction: |-
        *"Ora facciamo qualcosa di grandioso!"*

        Aiuta l'ape a raccogliere tutto il nettare.
      courseD_bee_nestedLoops1a_markdown_instruction: |-
        *"Ora facciamo qualcosa di grandioso!"*

        Aiuta l'ape a raccogliere tutto il nettare.
      courseD_bee_nestedLoops1a_2018_markdown_instruction: |-
        *"Ora facciamo qualcosa di grandioso!"*

        Aiuta l'ape a raccogliere tutto il nettare.
      courseD_bee_nestedLoops2_markdown_instruction: Questa volta, aiuta l'ape a raccogliere
        tutto il nettare usando il minor numero possibile di blocchi.
      courseD_bee_nestedLoops2_2018_markdown_instruction: Questa volta, aiuta l'ape
        a raccogliere tutto il nettare usando il minor numero possibile di blocchi.
      courseD_bee_nestedLoops2_predict1_markdown_instruction: Questa volta, aiuta
        l'ape a raccogliere tutto il nettare usando il minor numero possibile di blocchi.
      courseD_bee_nestedLoops2_predict1_2018_markdown_instruction: Questa volta, aiuta
        l'ape a raccogliere tutto il nettare usando il minor numero possibile di blocchi.
      courseD_bee_nestedLoops3_markdown_instruction: |-
        *"Puoi passare su tutti questi fiori?"*

        Raccogli tutto il nettare da questi fiori.
      courseD_bee_nestedLoops5_markdown_instruction: Raccogli tutto il nettare da
        ogni fiore e produci il miele in ogni favo. Usa un ciclo annidato.
      courseD_bee_nestedLoops6_2018_markdown_instruction: |-
        *"Dovere mangiare girasole!"*

        Fai arrivare lo zombie fino al girasole usando solo i blocchi disponibili.
      courseD_bee_nestedLoops7_markdown_instruction: "**Sfida:** Scopri come raccogliere
        tutto il nettare usando solo i blocchi disponibili."
      courseD_bee_nestedLoops7_2018_markdown_instruction: "**Sfida:** Scopri come
        raccogliere tutto il nettare usando solo i blocchi disponibili."
      courseD_bee_nestedLoops8_markdown_instruction: Raccogli tutto il nettare da
        ogni fiore e produci il miele in ogni favo. Usa un ciclo annidato.
      courseD_bee_nestedLoops8_2018_markdown_instruction: Raccogli tutto il nettare
        da ogni fiore e produci il miele in ogni favo. Usa un ciclo annidato.
      courseD_bee_nestedLoops9_markdown_instruction: Fai tutto il miele.
      courseD_bee_nestedLoops9_2018_markdown_instruction: Fai tutto il miele.
      courseD_bee_nestedLoops9_predict2_markdown_instruction: Fai tutto il miele.
      courseD_bee_nestedLoops9_predict2_2018_markdown_instruction: Fai tutto il miele.
      courseD_bounce_events1_markdown_instruction: |-
        Attacca un blocco al blocco verde `quando si preme sulla freccia verso sinistra` e premi "Esegui". <br>
        Poi sposta il giocatore usando la freccia verso sinistra per raggiungere la bandierina.
      courseD_collector_debugging1_markdown_instruction: |-
        *"Oh no! C'è un problema."*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging10_predict1_markdown_instruction: |-
        *E' l'isola dei diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging10_predict1_2018_markdown_instruction: |-
        *E' l'isola dei diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging1_2018_markdown_instruction: |-
        *"Oh no! C'è un problema."*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging1a_markdown_instruction: |-
        *"Oh no! C'è un problema."*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging1a_2018_markdown_instruction: |-
        *"Oh no! C'è un problema."*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging2_markdown_instruction: |-
        *"Puoi farcela!"*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging2_2018_markdown_instruction: |-
        *"Puoi farcela!"*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging2a_markdown_instruction: |-
        *"Puoi farcela!"*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging2a_2018_markdown_instruction: |-
        *"Puoi farcela!"*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging4_markdown_instruction: |-
        *"Non ti scoraggiare. Puoi farcela!"*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging4_2018_markdown_instruction: |-
        *"Non ti scoraggiare. Puoi farcela!"*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging4a_markdown_instruction: |-
        *"Non ti scoraggiare. Puoi farcela!"*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging4a_2018_markdown_instruction: |-
        *"Non ti scoraggiare. Puoi farcela!"*

        Correggi gli errori per raccogliere tutti i diamanti.
      courseD_collector_debugging6_markdown_instruction: "**Sfida:** Tutti i blocchi
        di cui hai bisogno sono già pronti... Sfrutta tutte le tue abilità di debugging
        per correggere gli errori e raccogliere tutti i diamanti."
      courseD_collector_debugging6_2018_markdown_instruction: "**Sfida:** Tutti i
        blocchi di cui hai bisogno sono già pronti... Sfrutta tutte le tue abilità
        di debugging per correggere gli errori e raccogliere tutti i diamanti."
      courseD_collector_debugging8_markdown_instruction: |-
        *"Quanti diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging8_2018_markdown_instruction: |-
        *"Quanti diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging8a_markdown_instruction: |-
        *"Quanti diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging8a_2018_markdown_instruction: |-
        *"Quanti diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging9_markdown_instruction: |-
        *E' l'isola dei diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging9_2018_markdown_instruction: |-
        *E' l'isola dei diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging9a_markdown_instruction: |-
        *E' l'isola dei diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_debugging9a_2018_markdown_instruction: |-
        *E' l'isola dei diamanti!"*

        Aiuta Laura a correggere il codice per raccogliere tutti i diamanti.
      courseD_collector_ramp10_markdown_instruction: Fai camminare Laura intorno a
        questo quadrato per raccogliere i diamanti che trova.
      courseD_collector_ramp8_markdown_instruction: |
        Questo esercizio è molto simile al precedente, ma ora la protagonista è Laura l'avventuriera!

        ___

        Segui lo stesso percorso di prima, ma ora usa il ciclo `ripeti ... volte` per raccogliere i diamanti man mano che ci passi sopra.
      courseD_collector_ramp9_markdown_instruction: Ora ci sono diamanti in più di
        una casella. Riesci ad aiutare Laura a raccoglierli tutti?
      courseD_farmer_condLoops1_markdown_instruction: |-
        *"Puoi aiutarmi nel raccolto oggi?"*

        Aiuta la contadina a controllare la fila di mais per vedere se qualche pannocchia è pronta per essere raccolta. Usa le istruzioni condizionali per controllare ogni germoglio. Ogni pianta può avere **0 o 1** pannocchia pronta per la raccolta.
      courseD_farmer_condLoops1_2018_markdown_instruction: |-
        *"Puoi aiutarmi nel raccolto oggi?"*

        Aiuta la contadina a controllare la fila di mais per vedere se qualche pannocchia è pronta per essere raccolta. Usa le istruzioni condizionali per controllare ogni germoglio. Ogni pianta può avere **0 o 1** pannocchia pronta per la raccolta.
      courseD_farmer_condLoops2_markdown_instruction: |-
        *"Raccogliamo entrambi gli ortaggi da questa fila di piante!"*

        Questo orto è tutto mischiato, contiene **sia pannocchie che lattughe**!

        Aiuta la contadina a prendere tutto ciò che è pronto per il raccolto. Ogni pianta può avere **una** pannocchia o **una** lattuga.
      courseD_farmer_condLoops2_2018_markdown_instruction: |-
        *"Raccogliamo entrambi gli ortaggi da questa fila di piante!"*

        Questo orto è tutto mischiato, contiene **sia pannocchie che lattughe**!

        Aiuta la contadina a prendere tutto ciò che è pronto per il raccolto. Ogni pianta può avere **una** pannocchia o **una** lattuga.
      courseD_farmer_condLoops3_markdown_instruction: |-
        *"Pannocchie, lattughe e zucche! Aiutami a raccogliere tutto."*


        Ogni pianta può avere: una pannocchia, una lattuga o una zucca.
      courseD_farmer_condLoops3_2018_markdown_instruction: |-
        *"Pannocchie, lattughe e zucche! Aiutami a raccogliere tutto."*


        Ogni pianta può avere: una pannocchia, una lattuga o una zucca.
      courseD_farmer_condLoops4_markdown_instruction: |-
        *"Caspita! Ora crescono più lattughe da ogni pianta!"*

        La contadina vuole raccogliere tutte le lattughe disponibili. In corrispondenza di ogni pianta, c'è più di una lattuga, quindi la contadina deve continuare a raccogliere mentre c'è ancora lattuga disponibile.

        ##### (Ricorda: in questo orto ci sono solo lattughe!)
      courseD_farmer_condLoops5_markdown_instruction: |-
        *"Che raccolto abbondante!"*

        In questo campo si alternano piante multiple di lattuga e di mais (pannocchie) -- con una zucca alla fine. Puoi raccogliere tutto?
      courseD_farmer_condLoops5_2018_markdown_instruction: |-
        *"Che raccolto abbondante!"*

        In questo campo si alternano piante multiple di lattuga e di mais (pannocchie) -- con una zucca alla fine. Puoi raccogliere tutto?
      courseD_farmer_condLoops6_markdown_instruction: |-
        *"Facciamo un altro passo avanti!"*

        Riesci a scoprire come conquistare la zucca? Assicurati di raccogliere anche tutte le pannocchie lungo il tragitto!
      courseD_farmer_condLoops6_2018_markdown_instruction: |-
        *"Facciamo un altro passo avanti!"*

        Riesci a scoprire come conquistare la zucca? Assicurati di raccogliere anche tutte le pannocchie lungo il tragitto!
      courseD_farmer_condLoops7_markdown_instruction: "**Sfida:** Raccogli tutte le
        pannocchie e le lattughe, poi conquista la zucca finale."
      courseD_farmer_condLoops7_2018_markdown_instruction: "**Sfida:** Raccogli tutte
        le pannocchie e le lattughe, poi conquista la zucca finale."
      courseD_farmer_condLoops8_markdown_instruction: Raccogli tutte le pannocchie
        e le lattughe, poi conquista la zucca finale.
      courseD_farmer_condLoops8_2018_markdown_instruction: Raccogli tutte le pannocchie
        e le lattughe, poi conquista la zucca finale.
      courseD_farmer_condLoops9_markdown_instruction: Raccogli tutte le pannocchie
        e le lattughe, poi conquista la zucca finale.
      courseD_farmer_condLoops9_2018_markdown_instruction: Raccogli tutte le pannocchie
        e le lattughe, poi conquista la zucca finale.
      courseD_farmer_condLoops9_predict1_markdown_instruction: Raccogli tutte le pannocchie
        e le lattughe, poi conquista la zucca finale.
      courseD_farmer_condLoops9_predict1_2018_markdown_instruction: Raccogli tutte
        le pannocchie e le lattughe, poi conquista la zucca finale.
      courseD_farmer_conditionals1_markdown_instruction: |-
        *"Ciao, sono una contadina. Ho bisogno del tuo aiuto per livellare il terreno nella mia fattoria, in modo che sia pronto per la semina."*

        Spostami verso i mucchi di terra e usa il blocco `rimuovi 1` per rimuoverli.
      courseD_farmer_conditionals3_markdown_instruction: |-
        *"Portami fino al mucchio di terra e fammi dare tutte le palate che servono per rimuoverlo."*

        Usa il minor numero possibile di blocchi per risolvere questo esercizio.
      courseD_farmer_conditionals4_markdown_instruction: |-
        *"Non so quanta terra c'è in questo mucchio!"*

        Aiuta la contadina a rimuovere tutto questo mucchio usando un ciclo `mentre`.
      courseD_farmer_conditionals6_markdown_instruction: |-
        Guarda tutte queste buche!  Ognuna ha bisogno di una diversa quantità di terra.

        È possibile usare il ciclo `mentre` per riempirle tutte facilmente!
      courseD_farmer_conditionals8_markdown_instruction: "**Sfida:** Riempi tutte
        queste buche usando il minor numero possibile di blocchi."
      courseD_farmer_while1_markdown_instruction: |-
        *"Ciao, sono una contadina. Ho bisogno del tuo aiuto per livellare il terreno nella mia fattoria, in modo che sia pronto per la semina."*

        Spostami verso i mucchi di terra e usa il blocco `rimuovi 1` per rimuoverli.
      courseD_farmer_while1_2018_markdown_instruction: |-
        *"Ciao, sono una contadina. Ho bisogno del tuo aiuto per livellare il terreno nella mia fattoria, in modo che sia pronto per la semina."*

        Spostami verso i mucchi di terra e usa il blocco `rimuovi 1` per rimuoverli.
      courseD_farmer_while3_markdown_instruction: |-
        *"Portami fino al mucchio di terra e fammi dare tutte le palate che servono per rimuoverlo."*

        Usa il minor numero possibile di blocchi per risolvere questo esercizio.
      courseD_farmer_while3_2018_markdown_instruction: |-
        *"Portami fino al mucchio di terra e fammi dare tutte le palate che servono per rimuoverlo."*

        Usa il minor numero possibile di blocchi per risolvere questo esercizio.
      courseD_farmer_while4_markdown_instruction: |-
        *"Non so quanta terra c'è in questo mucchio!"*

        Aiuta la contadina a rimuovere tutto questo mucchio usando un ciclo `mentre`.
      courseD_farmer_while4_2018_markdown_instruction: |-
        *"Non so quanta terra c'è in questo mucchio!"*

        Aiuta la contadina a rimuovere tutto questo mucchio usando un ciclo `mentre`.
      courseD_farmer_while4_predict1_markdown_instruction: |-
        *"Non so quanta terra c'è in questo mucchio!"*

        Aiuta la contadina a rimuovere tutto questo mucchio usando un ciclo `mentre`.
      courseD_farmer_while4_predict1_2018_markdown_instruction: |-
        *"Non so quanta terra c'è in questo mucchio!"*

        Aiuta la contadina a rimuovere tutto questo mucchio usando un ciclo `mentre`.
      courseD_farmer_while6_markdown_instruction: |-
        Guarda tutte queste buche!  Ognuna ha bisogno di una diversa quantità di terra.

        È possibile usare il ciclo `mentre` per riempirle tutte facilmente!
      courseD_farmer_while6_2018_markdown_instruction: |-
        Guarda tutte queste buche!  Ognuna ha bisogno di una diversa quantità di terra.

        È possibile usare il ciclo `mentre` per riempirle tutte facilmente!
      courseD_farmer_while8_markdown_instruction: "**Sfida:** Riempi tutte queste
        buche usando il minor numero possibile di blocchi."
      courseD_farmer_while8_2018_markdown_instruction: "**Sfida:** Riempi tutte queste
        buche usando il minor numero possibile di blocchi."
      courseD_farmer_while_challenge1_markdown_instruction: Riempi tutte le buche
        e rimuovi tutti i mucchi.
      courseD_farmer_while_challenge1_2018_markdown_instruction: Riempi tutte le buche
        e rimuovi tutti i mucchi.
      courseD_farmer_while_challenge2_markdown_instruction: Riempi tutte le buche
        e rimuovi tutti i mucchi.
      courseD_farmer_while_challenge2_2018_markdown_instruction: Riempi tutte le buche
        e rimuovi tutti i mucchi.
      courseD_iceage_loops1_markdown_instruction: Aiuta Scrat a raggiungere la ghianda
        attraversando queste lastre di ghiaccio!
      courseD_iceage_loops10_markdown_instruction: Aiuta Scrat a percorrere tutto
        il tragitto fino alla ghianda!
      courseD_iceage_loops11_markdown_instruction: Aiuta Scrat a raggiungere la ghianda!
      courseD_iceage_loops12_markdown_instruction: Prendi quella ghianda in qualunque
        modo!
      courseD_iceage_loops4_markdown_instruction: Aggiungi un blocco per far percorrere
        a Scrat tutto il tragitto per raggiungere la ghianda!
      courseD_iceage_loops6_markdown_instruction: Puoi aggiungere un ciclo per raggiungere
        la ghianda?
      courseD_iceage_loops7_markdown_instruction: Scrat vuole proprio quella ghianda!
      courseD_iceage_loops8_markdown_instruction: Potresti correggere questo programma?
      courseD_iceage_loops9_markdown_instruction: La ghianda è così lontana! Riesci
        ad aiutare Scrat ad arrivarci usando i cicli?
      courseD_maze_nestedLoops3_markdown_instruction: |-
        *"Zombie affamato!"*

        Fai arrivare lo zombie fino al girasole usando il minor numero possibile di blocchi.
      courseD_maze_nestedLoops3_2018_markdown_instruction: |-
        *"Zombie affamato!"*

        Fai arrivare lo zombie fino al girasole usando il minor numero possibile di blocchi.
      courseD_maze_nestedLoops4_markdown_instruction: |-
        Fammi arrivare al girasole usando il minor numero possibile di blocchi!<br><br>
        Prova ad usare un blocco "ripeti ... volte" (ciclo) all'interno di un altro ciclo, per diminuire il numero di blocchi che usi.
      courseD_maze_nestedLoops4_2018_markdown_instruction: |-
        Fammi arrivare al girasole usando il minor numero possibile di blocchi!<br><br>
        Prova ad usare un blocco "ripeti ... volte" (ciclo) all'interno di un altro ciclo, per diminuire il numero di blocchi che usi.
      courseD_maze_nestedLoops6_markdown_instruction: |-
        *"Dovere mangiare girasole!"*

        Fai arrivare lo zombie fino al girasole usando solo i blocchi disponibili.
      courseD_maze_nestedLoops6_2018_markdown_instruction: |-
        *"Dovere mangiare girasole!"*

        Fai arrivare lo zombie fino al girasole usando solo i blocchi disponibili.
      courseD_maze_ramp1_markdown_instruction: Per risolvere questo esercizio, collega
        tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      courseD_maze_ramp1_2018_markdown_instruction: Per risolvere questo esercizio,
        collega tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      courseD_maze_ramp2_markdown_instruction: Trascina ancora un blocco `vai avanti`
        fuori dalla cassetta degli attrezzi e, per completare il programma, attacca
        tutti i blocchi al blocco arancione `quando si clicca su "Esegui"`.
      courseD_maze_ramp2_2018_markdown_instruction: Trascina ancora un blocco `vai
        avanti` fuori dalla cassetta degli attrezzi e, per completare il programma,
        attacca tutti i blocchi al blocco arancione `quando si clicca su "Esegui"`.
      courseD_maze_ramp3_markdown_instruction: |-
        *"Questo maialino mi fa arricciare le penne."*

        C'è un blocco di troppo che fa andare a sbattere l'uccellino.
        Buttalo via sganciandolo dagli altri blocchi grigi e trascinandolo nella cassetta degli attrezzi.
      courseD_maze_ramp3_2018_markdown_instruction: |-
        *"Questo maialino mi fa arricciare le penne."*

        C'è un blocco di troppo che fa andare a sbattere l'uccellino.
        Buttalo via sganciandolo dagli altri blocchi grigi e trascinandolo nella cassetta degli attrezzi.
      courseD_maze_ramp4_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseD_maze_ramp4_2018_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseD_maze_ramp5_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseD_maze_ramp5_2018_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseD_maze_ramp5a_markdown_instruction: Fai attenzione alla sequenza e vedi
        se riesci a capire come arrivare fino al maialino!
      courseD_maze_ramp5a_2018_markdown_instruction: Fai attenzione alla sequenza
        e vedi se riesci a capire come arrivare fino al maialino!
      courseD_maze_ramp5b_markdown_instruction: "**Sfida: ** Aiuta l'uccellino a trovare
        il maialino in questo labirinto!"
      courseD_maze_ramp5b_2018_markdown_instruction: "**Sfida: ** Aiuta l'uccellino
        a trovare il maialino in questo labirinto!"
      courseD_maze_ramp5c_markdown_instruction: Aiuta l'uccellino a raggiungere il
        maialino.
      courseD_maze_ramp5c_2018_markdown_instruction: Aiuta l'uccellino a raggiungere
        il maialino.
      courseD_maze_ramp5d_markdown_instruction: Fai arrivare l'uccellino fino al maialino.
      courseD_maze_ramp5d_2018_markdown_instruction: Fai arrivare l'uccellino fino
        al maialino.
      courseD_maze_ramp6_markdown_instruction: |-
        *"Mantieni la calma e aiutami a trovare quel cattivone di un maiale. Altrimenti potrei arrabbiarmi!"*

        Quando hai parecchi blocchi uguali di seguito, prova a sostituirli usando un blocco `ripeti ... volte`. Così potrai fare la stessa cosa usando meno blocchi!
      courseD_maze_ramp7_markdown_instruction: |-
        *"È il momento di arrabbiarsi!"*


        Usa ciò che hai imparato per far arrivare l'uccellino fino al maialino!
      courseD_maze_until10_markdown_instruction: Aiuta lo zombie ad arrivare fino
        al girasole.
      courseD_maze_until10_2018_markdown_instruction: Aiuta lo zombie ad arrivare
        fino al girasole.
      courseD_maze_until10_predict2_markdown_instruction: Aiuta lo zombie ad arrivare
        fino al girasole.
      courseD_maze_until10_predict2_2018_markdown_instruction: Aiuta lo zombie ad
        arrivare fino al girasole.
      courseD_maze_until4_markdown_instruction: |-
        *"Cara persona. Io zombie. Io affamato. Devo... arrivare... girasole..."*

        Puoi fare in modo che lo zombie arrivi fino al girasole usando solo i blocchi disponibili?
      courseD_maze_until4_2018_markdown_instruction: |-
        *"Cara persona. Io zombie. Io affamato. Devo... arrivare... girasole..."*

        Puoi fare in modo che lo zombie arrivi fino al girasole usando solo i blocchi disponibili?
      courseD_maze_until5_markdown_instruction: Usa il blocco `se` per aiutare lo
        zombi a decidere quando girare, quindi fai arrivare lo zombie fino al girasole.
      courseD_maze_until5_2018_markdown_instruction: Usa il blocco `se` per aiutare
        lo zombi a decidere quando girare, quindi fai arrivare lo zombie fino al girasole.
      courseD_maze_until6_markdown_instruction: Aiuta lo zombie ad arrivare fino al
        girasole.
      courseD_maze_until6_2018_markdown_instruction: Aiuta lo zombie ad arrivare fino
        al girasole.
      courseD_maze_until7_markdown_instruction: Aiuta lo zombie ad arrivare fino al
        girasole.
      courseD_maze_until7_2018_markdown_instruction: Aiuta lo zombie ad arrivare fino
        al girasole.
      courseD_maze_until8_markdown_instruction: Aiuta lo zombie ad arrivare fino al
        girasole.
      courseD_maze_until8_2018_markdown_instruction: Aiuta lo zombie ad arrivare fino
        al girasole.
      courseD_maze_until9_markdown_instruction: "**Sfida:** Evita le piante carnivore
        e aiuta gli zombie ad arrivare fino al girasole."
      courseD_maze_until9_2018_markdown_instruction: "**Sfida:** Evita le piante carnivore
        e aiuta gli zombie ad arrivare fino al girasole."
      courseD_playLab_cond1_markdown_instruction: |-
        Per iniziare il gioco, il pirata (personaggio 1) deve essere in grado di muoversi in tutte le direzioni. Collega i blocchi agli eventi corretti per permettere di muovere il pirata.

        ---
        Aiuta il pirata a raggiungere tutte le bandierine per risolvere questo esercizio.
      courseD_playLab_cond1_2018_markdown_instruction: |-
        Per iniziare il gioco, il pirata (personaggio 1) deve essere in grado di muoversi in tutte le direzioni. Collega i blocchi agli eventi corretti per permettere di muovere il pirata.

        ---
        Aiuta il pirata a raggiungere tutte le bandierine per risolvere questo esercizio.
      courseD_playLab_cond2_markdown_instruction: |-
        E adesso aggiungiamo il punteggio!

        Modifica il programma in modo da assegnare un punto al pirata (personaggio 1) ogni volta che riesce a raggiungere il drago (personaggio 2).
      courseD_playLab_cond2_2018_markdown_instruction: |-
        E adesso aggiungiamo il punteggio!

        Modifica il programma in modo da assegnare un punto al pirata (personaggio 1) ogni volta che riesce a raggiungere il drago (personaggio 2).
      courseD_playLab_cond3_markdown_instruction: Usa un ciclo `ripeti per sempre`
        per fare in modo che ogni secondo il drago (attore 2) cambi umore in modo
        casuale.
      courseD_playLab_cond3_2018_markdown_instruction: Usa un ciclo `ripeti per sempre`
        per fare in modo che ogni secondo il drago (attore 2) cambi umore in modo
        casuale.
      courseD_playLab_cond3a_markdown_instruction: |-
        È ora di sfruttare ciò che abbiamo imparato sulle istruzioni condizionali per rendere questo gioco fantastico.

        Aggiungi del codice per fare in modo che quando il pirata raggiunge il drago, guadagni due punti solo *se* il drago è felice. In caso contrario, egli si vedrà incrementare il punteggio solo di un punto.
      courseD_playLab_cond3a_2018_markdown_instruction: |-
        È ora di sfruttare ciò che abbiamo imparato sulle istruzioni condizionali per rendere questo gioco fantastico.

        Aggiungi del codice per fare in modo che quando il pirata raggiunge il drago, guadagni due punti solo *se* il drago è felice. In caso contrario, egli si vedrà incrementare il punteggio solo di un punto.
      courseD_playLab_cond4_markdown_instruction: |-
        Il gioco si fa interessante!

        Aggiungi del codice affinché, appena il gioco comincia, il ninja (personaggio 3) si metta a inseguire il pirata. Se il ninja lo prende, il gioco termina con una sconfitta.
      courseD_playLab_cond4_2018_markdown_instruction: |-
        Il gioco si fa interessante!

        Aggiungi del codice affinché, appena il gioco comincia, il ninja (personaggio 3) si metta a inseguire il pirata. Se il ninja lo prende, il gioco termina con una sconfitta.
      courseD_playLab_cond5_markdown_instruction: |-
        Ora dobbiamo definire un modo per vincere.

        Aggiungi un ciclo `ripeti per sempre` che controlli in continuazione il punteggio: se è maggiore di 5, allora termina il gioco con una vittoria.
      courseD_playLab_cond5_2018_markdown_instruction: |-
        Ora dobbiamo definire un modo per vincere.

        Aggiungi un ciclo `ripeti per sempre` che controlli in continuazione il punteggio: se è maggiore di 5, allora termina il gioco con una vittoria.
      courseD_playLab_cond6_markdown_instruction: "Wow, è proprio difficile vincere
        a questo gioco!\n\nProviamo a personalizzarlo in modo da renderlo più divertente.
        Questa sfida è composta da due parti:\n___\n\n1) Rallenta il ninja (personaggio
        3) prima di fargli inseguire il pirata.\n2) Usa un ciclo `ripeti per sempre`
        per controllare se il pirata è nella \"zona di sicurezza\" al di sotto dei
        polpi (più in basso di 225 pixel). \nSe lo è, imposta il ninja per farlo **fuggire**
        dal pirata. Altrimenti, imposta il ninja affinché **insegua** il pirata."
      courseD_playLab_cond6_2018_markdown_instruction: "Wow, è proprio difficile vincere
        a questo gioco!\n\nProviamo a personalizzarlo in modo da renderlo più divertente.
        Questa sfida è composta da due parti:\n___\n\n1) Rallenta il ninja (personaggio
        3) prima di fargli inseguire il pirata.\n2) Usa un ciclo `ripeti per sempre`
        per controllare se il pirata è nella \"zona di sicurezza\" al di sotto dei
        polpi (più in basso di 225 pixel). \nSe lo è, imposta il ninja per farlo **fuggire**
        dal pirata. Altrimenti, imposta il ninja affinché **insegua** il pirata."
      courseD_playLab_cond6a_markdown_instruction: |-
        Non vogliamo che il pirata stia troppo a lungo nella "zona di sicurezza"!

        Aggiungi del codice all'istruzione condizionale `se` in modo che, se il pirata (personaggio 1) è nella "zona di sicurezza", il programma aspetti un secondo, poi tolga un punto ogni secondo che il pirata trascorre al di sotto della linea dei polpi.
      courseD_playLab_cond6a_2018_markdown_instruction: |-
        Non vogliamo che il pirata stia troppo a lungo nella "zona di sicurezza"!

        Aggiungi del codice all'istruzione condizionale `se` in modo che, se il pirata (personaggio 1) è nella "zona di sicurezza", il programma aspetti un secondo, poi tolga un punto ogni secondo che il pirata trascorre al di sotto della linea dei polpi.
      courseD_scrat_ramp1_markdown_instruction: Per risolvere questo esercizio, collega
        tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      courseD_scrat_ramp1_2018_markdown_instruction: Per risolvere questo esercizio,
        collega tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      courseD_scrat_ramp2_markdown_instruction: Trascina ancora un blocco `vai avanti`
        fuori dalla cassetta degli attrezzi e, per completare il programma, attacca
        tutti i blocchi al blocco arancione `quando si clicca su "Esegui"`.
      courseD_scrat_ramp2_2018_markdown_instruction: Trascina ancora un blocco `vai
        avanti` fuori dalla cassetta degli attrezzi e, per completare il programma,
        attacca tutti i blocchi al blocco arancione `quando si clicca su "Esegui"`.
      courseD_scrat_ramp3_markdown_instruction: |-
        C'è un blocco di troppo che fa andare a sbattere Scrat.
        Buttalo via sganciandolo dagli altri blocchi grigi e trascinandolo nella cassetta degli attrezzi.
      courseD_scrat_ramp3_2018_markdown_instruction: |-
        C'è un blocco di troppo che fa andare a sbattere Scrat.
        Buttalo via sganciandolo dagli altri blocchi grigi e trascinandolo nella cassetta degli attrezzi.
      courseD_scrat_ramp4_markdown_instruction: Se ti sta a cuore la salute di Scrat,
        evita il ghiaccio crepato!
      courseD_scrat_ramp4_2018_markdown_instruction: Se ti sta a cuore la salute di
        Scrat, evita il ghiaccio crepato!
      courseD_scrat_ramp5_markdown_instruction: Evita il ghiaccio crepato!
      courseD_scrat_ramp5_2018_markdown_instruction: Evita il ghiaccio crepato!
      courseD_scrat_ramp6_markdown_instruction: Aiuta Scrat a raggiungere la ghianda
        utilizzando un ciclo!
      courseD_scrat_ramp6_2018_markdown_instruction: Aiuta Scrat a raggiungere la
        ghianda utilizzando un ciclo!
      courseD_scrat_ramp7_markdown_instruction: Aiuta Scrat a raggiungere la ghianda!
      courseD_scrat_ramp7_2018_markdown_instruction: Aiuta Scrat a raggiungere la
        ghianda!
      courseD_scrat_ramp8_markdown_instruction: "**Sfida:** Usa ciò che hai imparato
        per fare in modo che Scrat raggiunga la ghianda!"
      courseD_scrat_ramp8_2018_markdown_instruction: "**Sfida:** Usa ciò che hai imparato
        per fare in modo che Scrat raggiunga la ghianda!"
      courseE_artist_concept1_markdown_instruction: |-
        Disegna questa immagine.

        - Gli esagoni hanno lati di 50 pixel.
        - Gli esagoni sono traslati di 100 pixel.
        - Lo spessore della penna è di 1 pixel per il primo esagono, 4 pixel per il secondo e 8 per il terzo.
      courseE_artist_concept1_2018_markdown_instruction: |-
        Disegna questa immagine.

        - Gli esagoni hanno lati di 50 pixel.
        - Gli esagoni sono traslati di 100 pixel.
        - Lo spessore della penna è di 1 pixel per il primo esagono, 4 pixel per il secondo e 8 per il terzo.
      courseE_artist_concept4_markdown_instruction: |-
        Riproduci questo disegno.

        Ogni quadrato ha lati di **20 pixel** e ci sono **15 quadrati per riga**.
      courseE_artist_concept4_2018_markdown_instruction: |-
        Riproduci questo disegno.

        Ogni quadrato ha lati di **20 pixel** e ci sono **15 quadrati per riga**.
      courseE_artist_concept_challenge1_markdown_instruction: |-
        <img src="https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png" width="200px"/>

        E ora una sfida!

        Per ottenere la figura che vedi, devi usare solo blocchi che ti sono già stati mostrati. Riesci a capire come ricrearla? Sentiti libero di fare più tentativi e di commettere errori. Nessuno si aspetta che tu ci riesca perfettamente al primo tentativo.
      courseE_artist_concept_challenge1_2018_markdown_instruction: |-
        <img src="https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png" width="200px"/>

        E ora una sfida!

        Per ottenere la figura che vedi, devi usare solo blocchi che ti sono già stati mostrati. Riesci a capire come ricrearla? Sentiti libero di fare più tentativi e di commettere errori. Nessuno si aspetta che tu ci riesca perfettamente al primo tentativo.
      courseE_artist_concept_challenge2_markdown_instruction: Crea cinque girandole
        usando il codice riportato di seguito.
      courseE_artist_concept_challenge2_2018_markdown_instruction: Crea cinque girandole
        usando il codice riportato di seguito.
      courseE_artist_functions1_markdown_instruction: |-
        *"Io zombie artista. Io amare disegnare!"*

        Aiuta lo zombie a disegnare questi occhiali usando dei quadrati con i lati di 100 pixel.
        L'asta tra le lenti è lunga 75 pixel.
      courseE_artist_functions10_markdown_instruction: |-
        Questa volta, usa file di 8 esagoni con lati da 25 pixel.

        - Per fare ogni esagono, ripeti il lato 6 volte, girando di 60 gradi.
        - Salta in avanti di 25 pixel tra un esagono e l'altro.
        - Per disegnare il rombo, dovrai alternare svolte a 60 gradi con svolte a 120 gradi.
      courseE_artist_functions10_2018_markdown_instruction: |-
        Questa volta, usa file di 8 esagoni con lati da 25 pixel.

        - Per fare ogni esagono, ripeti il lato 6 volte, girando di 60 gradi.
        - Salta in avanti di 25 pixel tra un esagono e l'altro.
        - Per disegnare il rombo, dovrai alternare svolte a 60 gradi con svolte a 120 gradi.
      courseE_artist_functions1_2018_markdown_instruction: |-
        *"Io zombie artista. Io amare disegnare!"*

        Aiuta lo zombie a disegnare questi occhiali usando dei quadrati con i lati di 100 pixel.
        L'asta tra le lenti è lunga 75 pixel.
      courseE_artist_functions2_markdown_instruction: |-
        Le funzioni ti permettono di definire nuovi blocchi!

        Abbiamo spostato i blocchi per disegnare un quadrato all'interno di una funzione chiamata `draw a square` (*disegna un quadrato*). Puoi usare la funzione `draw a square` per creare gli occhiali?
        ___

        I quadrati sono distanti 75 pixel.
      courseE_artist_functions3_markdown_instruction: |-
        Torneremo alle funzioni tra poco. Ora facciamo una breve pausa esercitandoci a disegnare questa stella.

        Puoi realizzare questo disegno aggiungendo un blocco `ripeti ... volte`.
      courseE_artist_functions4_markdown_instruction: |-
        Ora che sai disegnare una stella, prova a disegnarne quattro!

        - Ogni raggio della stella è lungo 25 pixel.
        - Gira di 45 gradi tra un raggio e l'altro.
        - Salta avanti di 100 pixel tra una stella e l'altra.
      courseE_artist_functions4_2018_markdown_instruction: |-
        Ora che sai disegnare una stella, prova a disegnarne quattro!

        - Ogni raggio della stella è lungo 25 pixel.
        - Gira di 45 gradi tra un raggio e l'altro.
        - Salta avanti di 100 pixel tra una stella e l'altra.
      courseE_artist_functions5_markdown_instruction: |-
        In che caso è più difficile disegnare tre stelle invece di quattro? Quando devi anche saltare oltre la luna!

        Devi disegnare solo queste tre stelle per completare questo esercizio.
      courseE_artist_functions5_2018_markdown_instruction: |-
        In che caso è più difficile disegnare tre stelle invece di quattro? Quando devi anche saltare oltre la luna!

        Devi disegnare solo queste tre stelle per completare questo esercizio.

        ___

        - Il salto tra la prima e la seconda stella è di **200** pixel.
        - Il salto tra la seconda e la terza stella è di **100** pixel.
      courseE_artist_functions6_markdown_instruction: |-
        Stai andando alla grande!

        Crea questa finestra disegnando un quadrato e ruotandolo di 90 gradi prima di disegnarne un altro e così via.
      courseE_artist_functions6_2018_markdown_instruction: |-
        Stai andando alla grande!

        Crea questa finestra disegnando un quadrato e ruotandolo di 90 gradi prima di disegnarne un altro e così via.
      courseE_artist_functions7_markdown_instruction: |-
        Sposta il codice che disegna la finestra all'interno del blocco che definisce la funzione `draw a window` (*disegna una finestra*). Ora, potremo richiamare la funzione ogni volta che ci serve disegnare una finestra senza dover scrivere nuovamente il codice.

        ![](https://images.code.org/615a5e93abdaffeed438a976a56fc1f5-image-1497998528859.gif)

        Prova a risolvere questo esercizio creando la funzione `draw a window` (*disegna una finestra*) e richiamandola cinque volte. Stai attento alla porta!

        - Le finestre del piano di sopra distano 50 pixel una dall'altra.
        - Le finestre del piano terra si trovano 100 pixel al di sotto delle precedenti.
      courseE_artist_functions8_markdown_instruction: |-
        **Sfida:** Sai che puoi anche richiamare le funzioni *dall'interno* di altre funzioni?

        Crea tutte le funzioni che ritieni necessarie per realizzare questo disegno fatto da quadrati di 50 pixel.
      courseE_artist_functions9_markdown_instruction: |-
        Crea questa immagine usando solo i blocchi disponibili nella cassetta degli attrezzi.

        - Ogni triangolo ha i lati lunghi **50 pixel**.
        - Per disegnare un rombo, dovrai alternare svolte a 60 gradi con svolte a 120 gradi.
      courseE_artist_functions9_2018_markdown_instruction: |-
        **Sfida:** Crea questa immagine usando solo i blocchi disponibili nella cassetta degli attrezzi.

        - Ogni triangolo ha i lati lunghi **50 pixel**.
        - Per disegnare un rombo, dovrai alternare svolte a 60 gradi con svolte a 120 gradi.
      courseE_artist_functions_challenge_markdown_instruction: Dopo aver definito
        una funzione, la puoi richiamare più e più volte - quando e dove vuoi! Prova
        questo codice per scoprire come funziona, dopo di che modificalo per creare
        un disegno tutto tuo!
      courseE_artist_functions_challenge1_markdown_instruction: Dopo aver definito
        una funzione, la puoi richiamare più e più volte - quando e dove vuoi! Prova
        questo codice per scoprire come funziona, dopo di che modificalo per creare
        un disegno tutto tuo!
      courseE_artist_functions_challenge1_2018_markdown_instruction: Dopo aver definito
        una funzione, la puoi richiamare più e più volte - quando e dove vuoi! Prova
        questo codice per scoprire come funziona, dopo di che modificalo per creare
        un disegno tutto tuo!
      courseE_artist_functions_challenge2_markdown_instruction: |-
        Puoi anche saltare in posizioni diverse dagli angoli della tela. Usando il blocco `salta a ... avanti ... in basso` puoi raggiungere assolutamente qualsiasi punto! Prova ad eseguire questo codice per vedere come funziona, poi personalizzalo e rendilo tuo!
        <xml>
        <block type="jump_to_xy">
        <title name="XPOS">???</title>
        <title name="YPOS">???</title>
        </block></xml>
      courseE_artist_functions_challenge2_2018_markdown_instruction: |-
        Puoi anche saltare in posizioni diverse dagli angoli della tela. Usando il blocco `salta a ... avanti ... in basso` puoi raggiungere assolutamente qualsiasi punto! Prova ad eseguire questo codice per vedere come funziona, poi personalizzalo e rendilo tuo!
        <xml>
        <block type="jump_to_xy">
        <title name="XPOS">???</title>
        <title name="YPOS">???</title>
        </block></xml>
      courseE_artist_ramp8_markdown_instruction: |-
        Grande! Ora usiamo un blocco `ripeti ... volte` per far fare un quadrato all'Artista! I blocchi dell'artista sono leggermente diversi, ma l'idea è la stessa.
        ___
        ##### Ogni lato del quadrato ha una lunghezza di 200 pixel e sarà necessario ruotare di 90 gradi ad ogni angolo.
      courseE_artist_ramp8_2_markdown_instruction: |-
        Grande! Ora usiamo un blocco `ripeti ... volte` per far fare un quadrato all'Artista! I blocchi dell'artista sono leggermente diversi, ma l'idea è la stessa.
        ___
        ##### Ogni lato del quadrato ha una lunghezza di 200 pixel e sarà necessario ruotare di 90 gradi ad ogni angolo.
      courseE_artist_ramp8_2018_markdown_instruction: |-
        Grande! Ora usiamo un blocco `ripeti ... volte` per far fare un quadrato all'Artista! I blocchi dell'artista sono leggermente diversi, ma l'idea è la stessa.
        ___
        ##### Ogni lato del quadrato ha una lunghezza di 200 pixel e sarà necessario ruotare di 90 gradi ad ogni angolo.
      courseE_artist_ramp8_2_2018_markdown_instruction: |-
        Grande! Ora usiamo un blocco `ripeti ... volte` per far fare un quadrato all'Artista! I blocchi dell'artista sono leggermente diversi, ma l'idea è la stessa.
        ___
        ##### Ogni lato del quadrato ha una lunghezza di 200 pixel e sarà necessario ruotare di 90 gradi ad ogni angolo.
      courseE_artist_ramp9_markdown_instruction: |-
        Usa ciò che hai imparato per disegnare questo triangolo.
        ___
        ##### Ogni lato è lungo 100 pixel. Dovrai girare di 120 gradi ad ogni angolo.
      courseE_artist_ramp9_2_markdown_instruction: |-
        Usa ciò che hai imparato per disegnare questo triangolo.
        ___
        ##### Ogni lato è lungo 100 pixel. Dovrai girare di 120 gradi ad ogni angolo.
      courseE_artist_ramp9_2018_markdown_instruction: |-
        Usa ciò che hai imparato per disegnare questo triangolo.
        ___
        ##### Ogni lato è lungo 100 pixel. Dovrai girare di 120 gradi ad ogni angolo.
      courseE_artist_ramp9_2_2018_markdown_instruction: |-
        Usa ciò che hai imparato per disegnare questo triangolo.
        ___
        ##### Ogni lato è lungo 100 pixel. Dovrai girare di 120 gradi ad ogni angolo.
      courseE_bee_concept1_markdown_instruction: |-
        *"Puoi passare su tutti questi fiori?"*

        Raccogli tutto il nettare da questi fiori.
      courseE_bee_concept1_2018_markdown_instruction: |-
        *"Puoi passare su tutti questi fiori?"*

        Raccogli tutto il nettare da questi fiori.
      courseE_bee_concept2_markdown_instruction: |-
        Aiuta l'ape a produrre tutto il miele.

        Visto che puoi fare il miele solo sui favi, devi prima controllare in ogni casella se c'è un favo.
      courseE_bee_concept2_2018_markdown_instruction: |-
        Aiuta l'ape a produrre tutto il miele.

        Visto che puoi fare il miele solo sui favi, devi prima controllare in ogni casella se c'è un favo.
      courseE_bee_functions10_markdown_instruction: |-
        *"Vai con il MIELE!"*

        Risolvi l'esercizio creando una funzione che induca l'ape a:
        - girare verso il percorso laterale,
        - andare avanti,
        - produrre tutto il miele,
        - ritornare al percorso principale,
        - orientarsi nella direzione iniziale.
      courseE_bee_functions10_2018_markdown_instruction: |-
        *"Vai con il MIELE!"*

        Risolvi l'esercizio creando una funzione che induca l'ape a:
        - girare verso il percorso laterale,
        - andare avanti,
        - produrre tutto il miele,
        - ritornare al percorso principale,
        - orientarsi nella direzione iniziale.
      courseE_bee_functions2_markdown_instruction: |-
        Una funzione è una sequenza di blocchi di codice che esegue un compito. Usa la funzione `get 2 nectar` (<i>prendi 2 dosi di nettare</i>) per raccogliere il nettare da ogni fiore.
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-6#VIDEO" target="_blank">Video doppiato in italiano</a> (solo la seconda parte)
      courseE_bee_functions2_2018_markdown_instruction: |-
        Una funzione è una sequenza di blocchi di codice che esegue un compito. Usa la funzione `get 2 nectar` (<i>prendi 2 dosi di nettare</i>) per raccogliere il nettare da ogni fiore.
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-6#VIDEO" target="_blank">Video doppiato in italiano</a> (solo la seconda parte)
      courseE_bee_functions3_markdown_instruction: Definisci la funzione `get 5` (*prendi
        5 dosi di nettare*) da usare in questo esercizio.
      courseE_bee_functions3_2018_markdown_instruction: Definisci la funzione `get
        5` (*prendi 5 dosi di nettare*) da usare in questo esercizio.
      courseE_bee_functions4_markdown_instruction: |-
        La funzione `move and get nectar` (*vai a prendere il nettare*) sposta l'ape sul fiore, le fa raccogliere il nettare e la fa tornare dove si trovava.

        Usa questa funzione per raccogliere tutto il nettare.
      courseE_bee_functions4_2018_markdown_instruction: |-
        La funzione `move and get nectar` (*vai a prendere il nettare*) sposta l'ape sul fiore, le fa raccogliere il nettare e la fa tornare dove si trovava.

        Usa questa funzione per raccogliere tutto il nettare.
      courseE_bee_functions8_markdown_instruction: |-
        **Sfida:** Questi fiori possono avere una diversa quantità di nettare ogni volta che esegui il programma.

        Definisci una funzione che raccolga tutto il nettare da ogni fiore.
      courseE_bee_functions8_2018_markdown_instruction: |-
        **Sfida:** Questi fiori possono avere una diversa quantità di nettare ogni volta che esegui il programma.

        Definisci una funzione che raccolga tutto il nettare da ogni fiore.
      courseE_bee_functions_challenge1_markdown_instruction: Dovrai cavartela da solo
        in questa sfida. Potrebbe essere più difficile di quanto sembri!
      courseE_bee_functions_challenge1_2018_markdown_instruction: Dovrai cavartela
        da solo in questa sfida. Potrebbe essere più difficile di quanto sembri!
      courseE_farmer_concept4_markdown_instruction: Andiamo ancora più a fondo! Abbiamo
        annidato il ciclo che disegna una cella della griglia all'interno di un altro
        ciclo, per disegnare così tutta la riga di celle. Per completare la griglia,
        devi far tornare l'artista indietro in modo tale da disegnare le righe successive.
        Quale sequenza di blocchi devi posizionare alla fine del ciclo più esterno
        per raggiungere questo obiettivo?
      courseE_farmer_functions1_markdown_instruction: |-
        *"Ci siamo già incontrati? Sono la contadina!"*

        Aiuta la contadina a raggiungere la zucca e raccoglierla.
      courseE_farmer_functions10b_markdown_instruction: Se metti il codice dell'esercizio
        precedente in una funzione, poi potrai usarla due volte per risolvere questo
        esercizio.
      courseE_farmer_functions10b_2018_markdown_instruction: Se metti il codice dell'esercizio
        precedente in una funzione, poi potrai usarla due volte per risolvere questo
        esercizio.
      courseE_farmer_functions1_2018_markdown_instruction: |-
        *"Ci siamo già incontrati? Sono la contadina!"*

        Aiuta la contadina a raggiungere la zucca e raccoglierla.
      courseE_farmer_functions1a_markdown_instruction: |-
        *"Oooh, ci sono ortaggi pronti ovunque!"*

        Ora aiuta la contadina a raccogliere tutte le pannocchie lungo il percorso **e** la zucca finale.
        ___
        ##### Nota: In ogni casella del percorso che porta alla zucca possiamo avere *una* o nessuna pannocchia. Prima di provare a raccogliere, dovrai usare un'istruzione condizionale `se` per controllare se sei su una pannocchia!
      courseE_farmer_functions2b_markdown_instruction: |-
        Aiuta la contadina a raccogliere pannocchie e zucche.
        ___
        ##### Ogni germoglio contiene *una* o nessuna pannocchia.
      courseE_farmer_functions2ba_markdown_instruction: |-
        *"Oggi mi sento molto funzionale!"*

        Hai notato che nell'esercizio precedente c'era del codice ripetuto? Per evitare questo, non è possibile usare un ciclo, ma **possiamo** usare le funzioni.

        In questo esercizio, abbiamo spostato il codice ripetuto in una funzione denominata `corn and pumpkin` (*pannocchie e zucca*). Ora basta mettere il piccolo blocco verde che richiama la funzione `corn and pumpkin` ovunque ti serva.
        ___
        ##### Ogni germoglio farà crescere *una* o nessuna pannocchia.
      courseE_farmer_functions3c_markdown_instruction: |-
        Ora, inserisci tu il codice all'interno della funzione, trascinando i blocchi dal programma principale e rilasciandoli nel blocco verde che **definisce la funzione**.

        Dopo di che, non dimenticarti di aggiungere il piccolo blocco verde che **richiama la funzione** per usarla dove ti serve.
      courseE_farmer_functions4b_markdown_instruction: Usa la tua nuova funzione per
        risolvere questo esercizio.
      courseE_farmer_functions4b_2018_markdown_instruction: Usa la tua nuova funzione
        per risolvere questo esercizio.
      courseE_farmer_functions5c_markdown_instruction: La tua funzione sarà proprio
        utile qui.
      courseE_farmer_functions5c_2018_markdown_instruction: La tua funzione sarà proprio
        utile qui.
      courseE_farmer_functions6c_markdown_instruction: |-
        *"Portiamo via tutto il raccolto!"*

        Ora i germogli possono essere di mais **o** di lattuga. Cos'è necessario aggiungere a questo programma per verificare ogni germoglio prima di raccoglierlo?

        ___
        ##### Nota: Ogni germoglio può racchiudere **una** pannocchia o **una** lattuga.
      courseE_farmer_functions6c_2018_markdown_instruction: |-
        *"Portiamo via tutto il raccolto!"*

        Ora i germogli possono essere di mais **o** di lattuga. Cos'è necessario aggiungere a questo programma per verificare ogni germoglio prima di raccoglierlo?

        ___
        ##### Nota: Ogni germoglio può racchiudere **una** pannocchia o **una** lattuga.
      courseE_farmer_functions7b_markdown_instruction: |-
        *"Questo raccolto è un labirinto!"*

        Aiuta la contadina a trovare un percorso in questa confusione: bisogna arrivare alla zucca svoltando a **sinistra** in corrispondenza delle pannocchie e a **destra** quando c'è una lattuga.

        *(Non dimenticare di raccogliere tutti gli ortaggi che trovi lungo il percorso!)*
      courseE_farmer_functions7b_2018_markdown_instruction: |-
        *"Questo raccolto è un labirinto!"*

        Aiuta la contadina a trovare un percorso in questa confusione: bisogna arrivare alla zucca svoltando a **sinistra** in corrispondenza delle pannocchie e a **destra** quando c'è una lattuga.

        *(Non dimenticare di raccogliere tutti gli ortaggi che trovi lungo il percorso!)*
      courseE_farmer_functions8b_markdown_instruction: |-
        **Sfida:** Le curve dopo le zucche non sono nella stessa direzione, quindi dovrai usare più di una volta il codice dell'esercizio precedente.

        Riesci a scoprire cosa fare?
      courseE_farmer_functions8b_2018_markdown_instruction: |-
        **Sfida:** Le curve dopo le zucche non sono nella stessa direzione, quindi dovrai usare più di una volta il codice dell'esercizio precedente.

        Riesci a scoprire cosa fare?
      courseE_farmer_functions9b_markdown_instruction: Dai un'occhiata a questo esercizio.
        Riesci a capire lo schema per risolverlo nel modo migliore?
      courseE_farmer_functions9b_2018_markdown_instruction: Dai un'occhiata a questo
        esercizio. Riesci a capire lo schema per risolverlo nel modo migliore?
      courseE_farmer_functions9b_clone_markdown_instruction: Dai un'occhiata a questo
        esercizio. Riesci a capire lo schema per risolverlo nel modo migliore?
      courseE_farmer_ramp11a_markdown_instruction: |-
        Accidenti! Questo mucchio è davvero grande ed è difficile immaginare quante palate di terra contenga.

        ___

        Abbiamo aggiunto un nuovo blocco alla cassetta degli attrezzi chiamato `mentre c'è un mucchio`. Usalo per rimuovere la terra solo mentre ce n'è da raccogliere!
      courseE_farmer_ramp11a_2018_markdown_instruction: |-
        Accidenti! Questo mucchio è davvero grande ed è difficile immaginare quante palate di terra contenga.

        ___

        Abbiamo aggiunto un nuovo blocco alla cassetta degli attrezzi chiamato `mentre c'è un mucchio`. Usalo per rimuovere la terra solo mentre ce n'è da raccogliere!
      courseE_farmer_ramp11b_markdown_instruction: Proviamoci ancora, ma con più mucchi!
      courseE_farmer_ramp11b_2018_markdown_instruction: Proviamoci ancora, ma con
        più mucchi!
      courseE_farmer_ramp12_markdown_instruction: Raccogli tutte le lattughe.
      courseE_farmer_ramp12_2018_markdown_instruction: Raccogli tutte le lattughe.
      courseE_farmer_ramp12_forswap_markdown_instruction: Raccogli tutte le lattughe.
      courseE_farmer_ramp12_forswap_2018_markdown_instruction: Raccogli tutte le lattughe.
      courseE_farmer_ramp12b_markdown_instruction: Ora la contadina ha bisogno di
        raccogliere tutte le lattughe. Usa il ciclo `mentre sei su una lattuga` all'interno
        di un ciclo `ripeti ... volte` per raccogliere tutto!
      courseE_farmer_ramp12b_2018_markdown_instruction: Ora la contadina ha bisogno
        di raccogliere tutte le lattughe. Usa il ciclo `mentre sei su una lattuga`
        all'interno di un ciclo `ripeti ... volte` per raccogliere tutto!
      courseE_farmer_ramp12c_markdown_instruction: Ora la lattuga è solo alla fine
        del percorso. Percorri il sentiero **fino a che** la raggiungi, quindi raccogli
        di continuo **mentre** ce n'è.
      courseE_farmer_ramp12c_2018_markdown_instruction: Ora la lattuga è solo alla
        fine del percorso. Percorri il sentiero **fino a che** la raggiungi, quindi
        raccogli di continuo **mentre** ce n'è.
      courseE_farmer_ramp12d_markdown_instruction: Le lattughe sono sparpagliate per
        tutto il giardino. Percorri ogni tratto del sentiero **fino a che** ne raggiungi
        una, quindi raccogli di continuo **mentre** ce n'è.
      courseE_farmer_ramp12d_2018_markdown_instruction: Le lattughe sono sparpagliate
        per tutto il giardino. Percorri ogni tratto del sentiero **fino a che** ne
        raggiungi una, quindi raccogli di continuo **mentre** ce n'è.
      courseE_farmer_ramp12e_markdown_instruction: Le lattughe sono sparpagliate per
        tutto il giardino. Percorri ogni tratto del sentiero **fino a che** ne raggiungi
        una, quindi raccogli di continuo **mentre** ce n'è.
      courseE_farmer_ramp12e_2018_markdown_instruction: Le lattughe sono sparpagliate
        per tutto il giardino. Percorri ogni tratto del sentiero **fino a che** ne
        raggiungi una, quindi raccogli di continuo **mentre** ce n'è.
      courseE_farmer_ramp12f_markdown_instruction: "**Sfida:** L'unico modo di raccogliere
        tutti gli ortaggi, è di andare avanti fino a che raggiungi la lattuga, poi
        gira a sinistra **se** c'è strada a sinistra. In caso contrario, gira a destra."
      courseE_farmer_ramp12f_2018_markdown_instruction: "**Sfida:** L'unico modo di
        raccogliere tutti gli ortaggi, è di andare avanti fino a che raggiungi la
        lattuga, poi gira a sinistra **se** c'è strada a sinistra. In caso contrario,
        gira a destra."
      courseE_farmer_ramp12g_markdown_instruction: Vai avanti fino a che raggiungi
        la lattuga, poi gira a sinistra **se** c'è strada a sinistra. In caso contrario,
        gira a destra.
      courseE_farmer_ramp12g_2018_markdown_instruction: Vai avanti fino a che raggiungi
        la lattuga, poi gira a sinistra **se** c'è strada a sinistra. In caso contrario,
        gira a destra.
      courseE_maze_ramp1_markdown_instruction: Per risolvere questo esercizio, collega
        tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      courseE_maze_ramp1_2018_markdown_instruction: Per risolvere questo esercizio,
        collega tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      courseE_maze_ramp2_markdown_instruction: Trascina ancora un blocco `vai avanti`
        fuori dalla cassetta degli attrezzi e, per completare il programma, attacca
        tutti i blocchi al blocco arancione `quando si clicca su "Esegui"`.
      courseE_maze_ramp2_2018_markdown_instruction: Trascina ancora un blocco `vai
        avanti` fuori dalla cassetta degli attrezzi e, per completare il programma,
        attacca tutti i blocchi al blocco arancione `quando si clicca su "Esegui"`.
      courseE_maze_ramp4_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseE_maze_ramp4_2018_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseE_maze_ramp5_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseE_maze_ramp5_2018_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseE_multi_maze_ramp5_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseE_playLab_challenge1_markdown_instruction: |-
        *Gli **scoiattoli** sono terrorizzati all'idea che un **dinosauro** sia capitato in città! Riuscirà il coraggioso **cavaliere** a tranquillizzarli?*

        Regole:
        1. *Toccare gli scoiattoli fa aumentare il punteggio.*
        2. *Toccare il dinosauro riduce di molto il punteggio.*

        Ecco un gioco già impostato! Giocaci un po' per vedere come funziona.

        Bisognerebbe far succedere qualcosa di particolare quando superi un certo punteggio e quando vai sotto zero. Aggiungi del codice alle funzioni `win game` (*vittoria*) e `lose game` (*sconfitta*) per far funzionare il gioco come si deve. Fai clic sui suggerimenti per avere qualche idea!
      courseE_playLab_challenge1_2018_markdown_instruction: |-
        *Gli **scoiattoli** sono terrorizzati all'idea che un **dinosauro** sia capitato in città! Riuscirà il coraggioso **cavaliere** a tranquillizzarli?*

        Regole:
        1. *Toccare gli scoiattoli fa aumentare il punteggio.*
        2. *Toccare il dinosauro riduce di molto il punteggio.*

        Ecco un gioco già impostato! Giocaci un po' per vedere come funziona.

        Bisognerebbe far succedere qualcosa di particolare quando superi un certo punteggio e quando vai sotto zero. Aggiungi del codice alle funzioni `win game` (*vittoria*) e `lose game` (*sconfitta*) per far funzionare il gioco come si deve. Fai clic sui suggerimenti per avere qualche idea!
      courseE_playLab_scaffold1_markdown_instruction: |-
        È sorprendente quanto tu abbia imparato! Ora creiamo insieme un vero videogioco.

        Usando i nuovi blocchi che trovi nella cassetta degli attrezzi, scegli un nuovo sfondo e un personaggio per il tuo gioco.
      courseE_playLab_scaffold1_2018_markdown_instruction: |-
        È sorprendente quanto tu abbia imparato! Ora creiamo insieme un vero videogioco.

        Usando i nuovi blocchi che trovi nella cassetta degli attrezzi, scegli un nuovo sfondo e un personaggio per il tuo gioco.
      courseE_playLab_scaffold2_markdown_instruction: |-
        Collega le azioni da svolgere ai blocchi verdi dei gestori di eventi per far muovere il tuo giocatore con le frecce della tastiera (o cliccando su quelle arancioni poste sotto all'area di gioco).

        Per completare l'esercizio, fai in modo che il protagonista raggiunga tutte le bandierine.
      courseE_playLab_scaffold2_2018_markdown_instruction: |-
        Collega le azioni da svolgere ai blocchi verdi dei gestori di eventi per far muovere il tuo giocatore con le frecce della tastiera (o cliccando su quelle arancioni poste sotto all'area di gioco).

        Per completare l'esercizio, fai in modo che il protagonista raggiunga tutte le bandierine.
      courseE_playLab_scaffold3_markdown_instruction: |-
        Aggiungiamo altri personaggi al tuo gioco!

        Usa il blocco `imposta il personaggio ... come` per aggiungere altri personaggi, poi sposta il personaggio 1 fino alla bandierina.
      courseE_playLab_scaffold3_2018_markdown_instruction: |-
        Aggiungiamo altri personaggi al tuo gioco!

        Usa il blocco `imposta il personaggio ... come` per aggiungere altri personaggi, poi sposta il personaggio 1 fino alla bandierina.
      courseE_playLab_scaffold4_markdown_instruction: |-
        Usare diversi personaggi e farli muovere è un ottimo inizio, ma dobbiamo fare di più per farlo diventare un vero videogioco. Aggiungiamo un punteggio!

        Usa dei blocchi verdi gestori di eventi come `quando il personaggio ... tocca ...` per modificare il punteggio. Per completare l'esercizio, fai in modo che giocando il punteggio diventi uguale a 10 e vai a toccare la bandierina.
      courseE_playLab_scaffold4_2018_markdown_instruction: |-
        Usare diversi personaggi e farli muovere è un ottimo inizio, ma dobbiamo fare di più per farlo diventare un vero videogioco. Aggiungiamo un punteggio!

        Usa dei blocchi verdi gestori di eventi come `quando il personaggio ... tocca ...` per modificare il punteggio. Per completare l'esercizio, fai in modo che giocando il punteggio diventi uguale a 10 e vai a toccare la bandierina.
      courseE_playLab_scaffold5_markdown_instruction: |-
        Ottimo lavoro! Hai tutto il necessario per far funzionare bene il gioco.
        Ora dedica un po' di tempo a controllare che il gioco funzioni proprio come desideravi. Aggiungi un modo per vincere e perdere, quindi gioca fino a raggiungere una di queste due condizioni.
      courseE_playLab_scaffold5_2018_markdown_instruction: |-
        Ottimo lavoro! Hai tutto il necessario per far funzionare bene il gioco.
        Ora dedica un po' di tempo a controllare che il gioco funzioni proprio come desideravi. Aggiungi un modo per vincere e perdere, quindi gioca fino a raggiungere una di queste due condizioni.
      courseE_playLab_scaffold6_markdown_instruction: Hai finito! Ora puoi giocare
        con il tuo videogioco o condividerlo con i tuoi amici e compagni di classe!
      courseE_playLab_scaffold6_2018_markdown_instruction: Hai finito! Ora puoi giocare
        con il tuo videogioco o condividerlo con i tuoi amici e compagni di classe!
      courseF_IceAge_1_markdown_instruction: |-
        Sid (personaggio 1) vuole riunire tutti per una nuova avventura. Puoi aiutarlo a dire "Ciao" trascinando il blocco `il personaggio 1 dice ...` nell'area di lavoro e collegandolo sotto all'evento `Quando si clicca su "Esegui"`?<br>
        <br>
        Non dimenticare di digitare la parola "Ciao" al suo interno!
      courseF_IceAge_10_markdown_instruction: Sid vuol far sapere a sua nonna, la
        Nonnina, che la ama. Usa l'istruzione `il personaggio lancia` per far lanciare
        a Sid (il personaggio 1) dei cuori alla Nonnina (il personaggio 2)! Imposta
        l'umore della Nonnina a felice quando viene colpita dai cuori.
      courseF_IceAge_11_markdown_instruction: È il momento di creare un gioco o una
        storia per conto tuo. Quando hai finito, clicca su "Termina" e poi "Pubblica"
        per condividere e far provare il gioco ai tuoi amici sui loro smartphone,
        tablet o computer! Non sai cosa fare? Clicca sulla lampadina per avere qualche
        suggerimento.
      courseF_IceAge_2_markdown_instruction: Manny (il personaggio 2) incontra Sid
        (il personaggio 1) e vuole invitarlo ad unirsi all'avventura. Aiutali a salutarsi
        a vicenda usando due volte il blocco `il personaggio ... dice`.
      courseF_IceAge_3_markdown_instruction: Scrat è alla ricerca della sua ghianda!
        Puoi aiutarlo a percorrere gli ultimi 200 pixel?
      courseF_IceAge_4_markdown_instruction: Diego (il personaggio 1) è alla ricerca
        di Manny (il personaggio 2). Puoi aiutarli ad incontrarsi? Collega un blocco
        all'evento `quando il personaggio tocca` per emettere un suono quando si incontrano.
      courseF_IceAge_5_markdown_instruction: Il blocco `ripeti per sempre` permette
        di eseguire il codice senza fermarsi mai. Puoi attaccare ad esso dei blocchi
        per aiutare la Nonnina a fare un po' di esercizio muovendosi in continuazione
        a destra e a sinistra?
      courseF_IceAge_6_markdown_instruction: Puoi aiutare Sid a chiamare i suoi amici
        quando si clicca su di lui? Quando hai finito, premi "Esegui" e clicca su
        Sid per vedere il tuo codice al lavoro!
      courseF_IceAge_7_markdown_instruction: Scrat è ancora alla ricerca di ghiande!
        Aiutalo a scorrazzare in giro attaccando il blocco `sposta ...` a ciascuno
        degli eventi e cambiando la direzione di marcia in base al tasto freccia.
        Quando hai finito, clicca su "Esegui" per raccogliere tutte le ghiande.
      courseF_IceAge_8_markdown_instruction: Qui trovi il codice del precedente esercizio
        unito a quello per muovere la Nonnina a destra e sinistra. Puoi completare
        questo codice per fare in modo che si riproduca un suono e si guadagni un
        punto quando Sid e la Nonnina si scontrano? Clicca su "Esegui" per lanciare
        il gioco.
      courseF_IceAge_9_markdown_instruction: Tutti devono muoversi più velocemente
        perché l'era glaciale sta arrivando! Cambia lo sfondo impostandone uno con
        ghiaccio e imposta la velocità di Sid (personaggio 1) a veloce, quindi premi
        "Esegui" per farlo correre da Diego ad avvertirlo.
      courseF_IceAge_template_markdown_instruction: Scrat è ancora alla ricerca di
        ghiande! Aiutalo a scorrazzare in giro attaccando il blocco `sposta ...` a
        ciascuno degli eventi e cambiando la direzione di marcia in base al tasto
        freccia. Quando hai finito, clicca su "Esegui" per raccogliere tutte le ghiande.
      courseF_artist_for1_markdown_instruction: "**Tempo di giocare:** Sperimenta
        con il *ciclo con contatore*  e la variabile `countrer` (*contatore*).  \n\nTrascina
        qualche blocco e vedi cosa succede.  \n"
      courseF_artist_for10_markdown_instruction: |-
        **Tempo di giocare:** Prova ad usare la variabile `counter` (*contatore*) con altri elementi grafici per creare immagini magiche come questa.

        ![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)
      courseF_artist_for10_2018_markdown_instruction: |-
        **Tempo di giocare:** Prova ad usare la variabile `counter` (*contatore*) con altri elementi grafici per creare immagini magiche come questa.

        ![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)
      courseF_artist_for1_2018_markdown_instruction: "**Tempo di giocare:** Sperimenta
        con il *ciclo con contatore*  e la variabile `countrer` (*contatore*).  \n\nTrascina
        qualche blocco e vedi cosa succede.  \n"
      courseF_artist_for2_markdown_instruction: Usa un ciclo `ripeti ... volte` all'interno
        di un il *ciclo con contatore* per creare questa pila di triangoli, i lati
        misurano da 50 a 100 pixel.
      courseF_artist_for2_2018_markdown_instruction: Usa un ciclo `ripeti ... volte`
        all'interno di un il *ciclo con contatore* per creare questa pila di triangoli,
        i lati misurano da 50 a 100 pixel.
      courseF_artist_for3_markdown_instruction: Crea questi triangoli i cui lati misurano
        da 20 a 200 pixel e ogni triangolo è largo 20 pixel più del precedente.
      courseF_artist_for3_2018_markdown_instruction: Crea questi triangoli i cui lati
        misurano da 20 a 200 pixel e ogni triangolo è largo 20 pixel più del precedente.
      courseF_artist_for5_markdown_instruction: |-
        Per disegnare questa figura devi fare solo un piccolo cambiamento al codice del precedente esercizio. Riesci a capire di quale cambiamento si tratta?
        ___
        Suggerimento: devi eliminare qualcosa!
      courseF_artist_for5_2018_markdown_instruction: |-
        Per disegnare questa figura devi fare solo un piccolo cambiamento al codice del precedente esercizio. Riesci a capire di quale cambiamento si tratta?
        ___
        Suggerimento: devi eliminare qualcosa!
      courseF_artist_for6_markdown_instruction: Se ruoti un po' di più, o un po' di
        meno, di quanto fai di solito, puoi ottenere un effetto diverso. Per creare
        questa spirale quadrata avvitata, prova ad usare il codice del precedente
        esercizio ruotando di 89 gradi.
      courseF_artist_for6_2018_markdown_instruction: Se ruoti un po' di più, o un
        po' di meno, di quanto fai di solito, puoi ottenere un effetto diverso. Per
        creare questa spirale quadrata avvitata, prova ad usare il codice del precedente
        esercizio ruotando di 89 gradi.
      courseF_artist_for7_markdown_instruction: Per ottenere questo disegno bastano
        solo tre piccole modifiche al codice del precedente esercizio!
      courseF_artist_for7_2018_markdown_instruction: Per ottenere questo disegno bastano
        solo tre piccole modifiche al codice del precedente esercizio!
      courseF_artist_for_challenge1_markdown_instruction: |-
        Riesci a ricreare questo disegno?

        <img src="https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png" width="350px"/>
      courseF_artist_for_challenge1_2018_markdown_instruction: |-
        Riesci a ricreare questo disegno?

        <img src="https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png" width="350px"/>
      courseF_artist_for_challenge2_markdown_instruction: |-
        Riesci a ricreare questo disegno usando un solo ciclo?

        <img src="https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png" width="350px"/>
      courseF_artist_for_challenge2_2018_markdown_instruction: |-
        Riesci a ricreare questo disegno usando un solo ciclo?

        <img src="https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png" width="350px"/>
      courseF_artist_ramp9_markdown_instruction: |-
        Usa ciò che hai imparato per disegnare questo triangolo.
        ___
        ##### Ogni lato è lungo 100 pixel. Dovrai girare di 120 gradi ad ogni angolo.
      courseF_artist_ramp9_2018_markdown_instruction: |-
        Usa ciò che hai imparato per disegnare questo triangolo.
        ___
        ##### Ogni lato è lungo 100 pixel. Dovrai girare di 120 gradi ad ogni angolo.
      courseF_artist_variables10_markdown_instruction: |-
        Ecco il codice dell'esercizio precedente. Prova a modificare la variabile `length` (*lunghezza*) in altri modi.
        - Cosa succede se inizi con `length` minore di 150?
        - Cosa succede se moltiplichi la variabile per 1,25 ogni volta?
        - Cosa farà il tuo programma se giri di 119 gradi?
      courseF_artist_variables10_2018_markdown_instruction: |-
        Ecco il codice dell'esercizio precedente. Prova a modificare la variabile `length` (*lunghezza*) in altri modi.
        - Cosa succede se inizi con `length` minore di 150?
        - Cosa succede se moltiplichi la variabile per 1,25 ogni volta?
        - Cosa farà il tuo programma se giri di 119 gradi?
      courseF_artist_variables2_markdown_instruction: "Ora usa un altro ciclo per
        disegnare tre di quei triangoli uno accanto all'altro.   \n\nPuoi annidare
        il codice del tuo ultimo esercizio all'interno."
      courseF_artist_variables2_2018_markdown_instruction: "Ora usa un altro ciclo
        per disegnare tre di quei triangoli uno accanto all'altro.   \n\nPuoi annidare
        il codice del tuo ultimo esercizio all'interno."
      courseF_artist_variables3_markdown_instruction: "Prima che le cose si complichino,
        puoi spostare la lunghezza di 50 in una variabile (`length`) , in modo da
        poterla usare nei prossimi esercizi? \n\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables3_2018_markdown_instruction: "Prima che le cose si complichino,
        puoi spostare la lunghezza di 50 in una variabile (`length`) , in modo da
        poterla usare nei prossimi esercizi? \n\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables4_markdown_instruction: Ora, usa la variabile `length`
        (*lunghezza*) per fare in modo che l'artista disegni i vari triangoli spostati
        ognuno in avanti di `length` pixel e verso il basso di `length` pixel.
      courseF_artist_variables4_2018_markdown_instruction: Ora, usa la variabile `length`
        (*lunghezza*) per fare in modo che l'artista disegni i vari triangoli spostati
        ognuno in avanti di `length` pixel e verso il basso di `length` pixel.
      courseF_artist_variables6a_markdown_instruction: Usa ciò che hai imparato per
        costruire questo progetto in cui i quadrati hanno lati di 80 pixel e l'artista
        salta di 80 pixel in avanti e altrettanti verso il basso tra uno e l'altro.
      courseF_artist_variables6a_2018_markdown_instruction: Usa ciò che hai imparato
        per costruire questo progetto in cui i quadrati hanno lati di 80 pixel e l'artista
        salta di 80 pixel in avanti e altrettanti verso il basso tra uno e l'altro.
      courseF_artist_variables7_markdown_instruction: "Disegniamo un triangolo con
        lati di 150 pixel. \n\nAssicurati di usare la variabile `length` (*lunghezza*)
        e un ciclo `ripeti ... volte`."
      courseF_artist_variables7_2018_markdown_instruction: "Disegniamo un triangolo
        con lati di 150 pixel. \n\nAssicurati di usare la variabile `length` (*lunghezza*)
        e un ciclo `ripeti ... volte`."
      courseF_artist_variables8_markdown_instruction: |-
        Ricostruisci il codice del triangolo dall'esercizio precedente, ma questa volta usa il blocco `imposta length a` per reimpostare il valore della variabile `length` (*lunghezza*)  a `length+10` alla fine di ogni interazione del ciclo.

        <xml>
        <block type="variables_set" inline="false">
        <title name="VAR">length</title>
        <value name="VALUE">
        <block type="math_arithmetic" inline="true">
        <title name="OP">ADD</title>
        <value name="A">
        <block type="variables_get">
        <title name="VAR">length</title>
        </block>
        </value>
        <value name="B">
        <block type="math_number">
        <title name="NUM">10</title>
        </block>
        </value>
        </block>
        </value>
        </block>
        </xml>

        La lunghezza del primo lato del triangolo è di 150 pixel.
      courseF_artist_variables8_2018_markdown_instruction: |-
        Ricostruisci il codice del triangolo dall'esercizio precedente, ma questa volta usa il blocco `imposta length a` per reimpostare il valore della variabile `length` (*lunghezza*)  a `length+10` alla fine di ogni interazione del ciclo.

        <xml>
        <block type="variables_set" inline="false">
        <title name="VAR">length</title>
        <value name="VALUE">
        <block type="math_arithmetic" inline="true">
        <title name="OP">ADD</title>
        <value name="A">
        <block type="variables_get">
        <title name="VAR">length</title>
        </block>
        </value>
        <value name="B">
        <block type="math_number">
        <title name="NUM">10</title>
        </block>
        </value>
        </block>
        </value>
        </block>
        </xml>

        La lunghezza del primo lato del triangolo è di 150 pixel.
      courseF_artist_variables9_markdown_instruction: |-
        È il momento di essere artistici!

        Guarda cosa succede quando ripeti il codice dell'esercizio precedente **30** volte invece di 3!

        Per aggiungere un tocco di fantasia, sentiti libero di creare linee di qualsiasi colore o schema.
      courseF_artist_variables9_2018_markdown_instruction: |-
        È il momento di essere artistici!

        Guarda cosa succede quando ripeti il codice dell'esercizio precedente **30** volte invece di 3!

        Per aggiungere un tocco di fantasia, sentiti libero di creare linee di qualsiasi colore o schema.
      courseF_artist_variablesFP_markdown_instruction: "**Tempo di giocare:** Usa
        ciò che hai imparato e crea il tuo disegno. \n\nCome puoi usare le variabili
        con quadrati, pentagoni o esagoni?"
      courseF_artist_variablesFP_2018_markdown_instruction: "**Tempo di giocare:**
        Usa ciò che hai imparato e crea il tuo disegno. \n\nCome puoi usare le variabili
        con quadrati, pentagoni o esagoni?"
      courseF_artist_variables_10_markdown_instruction: |-
        Ecco il codice dell'esercizio precedente. Prova a modificare la variabile `length` (*lunghezza*) in altri modi.
        - Cosa succede se inizi con `length` minore di 150?
        - Cosa succede se moltiplichi la variabile per 1,25 ogni volta?
        - Cosa farà il tuo programma se giri di 119 gradi?
      courseF_artist_variables_2_markdown_instruction: "Ora usa un altro ciclo per
        disegnare tre di quei triangoli uno accanto all'altro.   \n\nPuoi annidare
        il codice del tuo ultimo esercizio all'interno."
      courseF_artist_variables_4_markdown_instruction: Ora, usa la variabile `length`
        (*lunghezza*) per fare in modo che l'artista disegni i vari triangoli spostati
        ognuno in avanti di `length` pixel e verso il basso di `length` pixel.
      courseF_artist_variables_5_markdown_instruction: Aggiungi un'altra serie di
        cicli alla fine del programma per aggiungere tre triangoli. Questa volta,
        vai avanti e verso l'alto!
      courseF_artist_variables_6a_markdown_instruction: Usa ciò che hai imparato per
        costruire questo progetto in cui i quadrati hanno lati di 80 pixel e l'artista
        salta di 80 pixel in avanti e altrettanti verso il basso tra uno e l'altro.
      courseF_artist_variables_FP_markdown_instruction: "**Tempo di giocare:** Usa
        ciò che hai imparato e crea il tuo disegno. \n\nCome puoi usare le variabili
        con quadrati, pentagoni o esagoni?"
      courseF_artist_variables_challenge1_markdown_instruction: Questa è un sfida!
        Riesci a creare una variabile `length` (*lunghezza*) e usarla per creare questo
        schema?
      courseF_artist_variables_challenge1_2018_markdown_instruction: Questa è un sfida!
        Riesci a creare una variabile `length` (*lunghezza*) e usarla per creare questo
        schema?
      courseF_artist_variables_challenge1a_markdown_instruction: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png" width="250px"/>

        Ora hai imparato tutto quello che ti serve per realizzare un disegno come questo! Questo esercizio è fatto apposta per essere difficile da risolvere! Riesci a lavorarci su fino a capire come si fa?
      courseF_artist_variables_challenge2_markdown_instruction: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png" width="250px"/>

        Ora hai imparato tutto quello che ti serve per realizzare un disegno come questo! Questo esercizio è fatto apposta per essere difficile da risolvere! Riesci a lavorarci su fino a capire come si fa?
      courseF_artist_variables_challenge2_2018_markdown_instruction: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png" width="250px"/>

        Ora hai imparato tutto quello che ti serve per realizzare un disegno come questo! Questo esercizio è fatto apposta per essere difficile da risolvere! Riesci a lavorarci su fino a capire come si fa?
      courseF_artistembed_variables9_markdown_instruction: |-
        È il momento di essere artistici!

        Guarda cosa succede quando ripeti il codice dell'esercizio precedente **30** volte invece di 3!

        Per aggiungere un tocco di fantasia, sentiti libero di creare linee di qualsiasi colore o schema.
      courseF_bee_conditionals10_markdown_instruction: |-
        Le istruzioni condizionali posso essere utili anche quando sai esattamente cosa c'è in ogni casella.

        Raccogli tutto il nettare o fai tutto il miele.
      courseF_bee_conditionals10_2018_markdown_instruction: |-
        Le istruzioni condizionali posso essere utili anche quando sai esattamente cosa c'è in ogni casella.

        Raccogli tutto il nettare o fai tutto il miele.
      courseF_bee_conditionals4_markdown_instruction: |-
        In questo esercizio, sappiamo che ogni fiore ha esattamente una dose di nettare, ma i fiori non sono distanziati in modo uniforme.

        Raccogli tutto il nettare usando il minor numero possibile di blocchi.
      courseF_bee_conditionals4_2018_markdown_instruction: |-
        In questo esercizio, sappiamo che ogni fiore ha esattamente una dose di nettare, ma i fiori non sono distanziati in modo uniforme.

        Raccogli tutto il nettare usando il minor numero possibile di blocchi.
      courseF_bee_for10_markdown_instruction: "**Sfida:** Usa ciò che hai imparato
        sui `cicli con contatore` e cerca si risolvere questo problema. \n\nRicordati:
        molto probabilmente avrai bisogno di più tentativi prima di riuscire a capire
        tutti i passaggi necessari."
      courseF_bee_for10_2018_markdown_instruction: "**Sfida:** Usa ciò che hai imparato
        sui `cicli con contatore` e cerca si risolvere questo problema. \n\nRicordati:
        molto probabilmente avrai bisogno di più tentativi prima di riuscire a capire
        tutti i passaggi necessari."
      courseF_bee_for11_markdown_instruction: "Se il tuo ciclo conta alla rovescia,
        il valore del passo viene **sottratto** dalla variabile `counter` (*contatore*)
        ogni volta. \n\nQuale dovrebbe essere il valore del passo per raccogliere
        prima 15, poi 12, poi 9, 6, 3 dosi di nettare?"
      courseF_bee_for11_2018_markdown_instruction: "Se il tuo ciclo conta alla rovescia,
        il valore del passo viene **sottratto** dalla variabile `counter` (*contatore*)
        ogni volta. \n\nQuale dovrebbe essere il valore del passo per raccogliere
        prima 15, poi 12, poi 9, 6, 3 dosi di nettare?"
      courseF_bee_for2_markdown_instruction: |-
        Scrivi il codice per aiutare l'ape a raccogliere tutto il nettare.

        Avrai bisogno di molti blocchi per questa sfida, ma imparerai un modo più semplice nel prossimo esercizio.
      courseF_bee_for2_2018_markdown_instruction: |-
        Scrivi il codice per aiutare l'ape a raccogliere tutto il nettare.

        Avrai bisogno di molti blocchi per questa sfida, ma imparerai un modo più semplice nel prossimo esercizio.
      courseF_bee_for6_markdown_instruction: "Puoi usare un `ciclo con contatore`
        anche per contare alla rovescia. \n\nProva a raccogliere il nettare contando
        alla rovescia da **5** a **1** a passi di **1**."
      courseF_bee_for6_2018_markdown_instruction: "Puoi usare un `ciclo con contatore`
        anche per contare alla rovescia. \n\nProva a raccogliere il nettare contando
        alla rovescia da **5** a **1** a passi di **1**."
      courseF_bee_for7_markdown_instruction: |-
        L'ultimo numero del  `ciclo con contatore` viene chiamato **"passo"**. Ogni volta che il ciclo viene eseguito, la variabile `counter` (*contatore*) si modifica del valore indicato  dal  **"passo"**.

        Prova a raccogliere questi fiori usando un  **"passo"** di 2.
      courseF_bee_for7_2018_markdown_instruction: |-
        L'ultimo numero del  `ciclo con contatore` viene chiamato **"passo"**. Ogni volta che il ciclo viene eseguito, la variabile `counter` (*contatore*) si modifica del valore indicato  dal  **"passo"**.

        Prova a raccogliere questi fiori usando un  **"passo"** di 2.
      courseF_bee_for8_markdown_instruction: |-
        Questo codice è da completare!

        Quale deve essere il **passo** in questo ciclo con contatore per raccogliere 3, 6, 9, 12, 15 dosi di nettare?
      courseF_bee_for8_2018_markdown_instruction: |-
        Questo codice è da completare!

        Quale deve essere il **passo** in questo ciclo con contatore per raccogliere 3, 6, 9, 12, 15 dosi di nettare?
      courseF_bee_for_challenge2_markdown_instruction: "<b>Super Sfida sulle variabili:</b>
        risolvi questo esercizio con il minore numero possibile di blocchi!"
      courseF_bee_for_challenge2_2018_markdown_instruction: "<b>Super Sfida sulle
        variabili:</b> risolvi questo esercizio con il minore numero possibile di
        blocchi!"
      courseF_bee_for_challenge3_markdown_instruction: "<b>Super Sfida sui cicli con
        contatore:</b> Risolvi questo esercizio usando il minor numero possibile di
        blocchi."
      courseF_bee_variables_4_2018_markdown_instruction: |-
        "Incredibile!"

        Modifica il codice in modo che funzioni per questo esercizio.
      courseF_maze_ramp4_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseF_maze_ramp4_2018_markdown_instruction: |-
        *"Fammi fare il percorso per arrivare a quello sciocco maiale."*

        Evita la dinamite (TNT) o ci lascio le penne!
      courseF_maze_ramp5_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      courseF_maze_ramp5_2018_markdown_instruction: |-
        *"Segui questo percorso per farmi arrivare fino al maialino!"*

        Evita la dinamite (TNT).
      coursea_maze_ramp1_2018_markdown_instruction: "Per far arrivare l'uccellino
        fino al maialino, trascina il blocco <xml><block type=\"maze_moveEast\"/></xml>
        sotto al blocco <xml><block type=\"when_run\"/></xml>, poi premi \"▶ Esegui\"!
        \ \n\n\n---\n"
      frozen circle function in circle_markdown_instruction: Ora disegniamo 20 cerchi
        sovrapposti, girando di 18 gradi tra un cerchio e l'altro. Di quanto devi
        saltare in avanti?
      frozen circle function with parameter_markdown_instruction: In questo esercizio
        il blocco "disegna un cerchio" può creare cerchi di diverse dimensioni. Usalo
        per disegnare un cerchio piccolo di dimensione 5 e un cerchio più grande di
        dimensione 10.
      frozen circle function_markdown_instruction: Usa il nuovo blocco "disegna un
        cerchio" per disegnare 10 cerchi sovrapposti. Devi capire di quanto saltare
        in avanti tra un cerchio e l'altro.
      frozen circle_markdown_instruction: Il cerchio è una forma speciale. Riesci
        a capire che numero sostituire al posto dei punti interrogativi per disegnare
        un cerchio?
      frozen cross rotate dense_markdown_instruction: 'Adesso ripetiamolo 90 volte!
        Quante volte 90 sta in 360? Suggerimento: È un numero molto piccolo.'
      frozen cross rotate_markdown_instruction: Adesso prova a ripetere il disegno
        avanti e indietro per 10 volte. Di quanti gradi devi girare tra ogni linea?
      frozen cross_markdown_instruction: Aggiungi un blocco "Ripeti" intorno a questi
        comandi per creare un segno più. Hai notato che Elsa può andare avanti e indietro?
      frozen diamond mini snowflake_markdown_instruction: Lo sapevi che ogni fiocco
        di neve ha una forma diversa? Disegniamo un altro fiocco di neve usando un
        altro blocco "ripeti" per ripetere il parallelogramma 4 volte, girando ogni
        volta a destra di 90 gradi tra ogni parallelogramma.
      frozen diamond snowflake_markdown_instruction: Adesso, disegniamo un altro fiocco
        di neve usando il blocco "ripeti" per ripetere il rombo 10 volte, girando
        a destra di 36 gradi dopo ognuno di essi.
      frozen diamond_markdown_instruction: Utilizza una ripetizione intorno a questi
        blocchi per creare un parallelogramma. È proprio come un rettangolo ma ha
        angoli diversi. Questo ha angoli di 60 e 120 gradi invece che tutti gli angoli
        di 90 gradi.
      frozen freeplay_markdown_instruction: Sei ufficialmente diventato un maestro
        artista! Crea un meraviglioso paesaggio invernale.
      frozen perpendicular_markdown_instruction: Adesso vediamo se possiamo disegnare
        due linee con un angolo di 90 gradi tra loro. Devi usare il blocco "gira a
        ..." e anche il blocco "vai ...".
      frozen snowflake branch_markdown_instruction: Usa il blocco "disegna un ramo
        di un fiocco di neve" per disegnare tre rami, così da ottenere l'inizio di
        un vero fiocco di neve.
      frozen snowflake full_markdown_instruction: Adesso ripetiamo il disegno di un
        ramo per 8 volte per ottenere un magnifico fiocco di neve!
      frozen snowflower_markdown_instruction: Fiocchi di neve di aspetto complesso
        possono essere ottenuti usando forme molto semplici. Riesci a disegnare questo,
        ripetendo 5 cerchi di dimensione 5 e 5 cerchi di dimensione 10?
      frozen square iterative_markdown_instruction: I blocchi che trovi già pronti
        sono l'inizio del disegno di un quadrato. Continua per completarlo (servono
        4 linee per disegnarlo tutto).
      frozen square loop 3x_markdown_instruction: Disegniamo tre quadrati, girando
        dopo ognuno di essi. Assicurati di girare di 120 gradi ogni volta.
      frozen square loop_markdown_instruction: Ciao, sono Anna di Arendelle! Disegniamo
        un quadrato usando il blocco "ripeti ... volte", così da utilizzare il minor
        numero possibile di blocchi. Quante volte il blocco "ripeti ... volte" deve
        ripetere i blocchi al suo interno per ottenere il quadrato?
      frozen square snowflake_markdown_instruction: Riesci a creare un fiocco di neve
        usando il blocco "ripeti ... volte" per disegnare 10 volte un quadrato, e
        il blocco "gira a ..." per girare di 36 gradi tra un quadrato e l'altro?
      grade1_artist_loops6_markdown_instruction: "**Sfida:** C'è un giardino segreto!
        Facci un giro intorno."
      grade1_artist_loopsFP_markdown_instruction: |
        Usa tutto quello che hai imparato per disegnare ciò che pensi che l'artista vedrà quando arriverà a casa.

        <hr/>
        <h3>Idee:</h3>
        <table>
        <tr>
        <td>
        <img src="https://images.code.org/8f4f2a68dae2cf0aa82cc0a49ea4df04-image-1466787750475.gif" width="150"/><br/>
        <h4>Una chiocciola</h4><br/><br/>
        </td>

        <td>
        <img src="https://images.code.org/732ce5dd91c7f49f06e88da1a9f664f3-image-1466794904255.gif" width="150"/><br/>
        <h4>Una città</h4><br/><br/>
        </td>

        <td>
        <img src="https://images.code.org/37fdd6fdd761df09fd4949d5e43f0a7f-image-1466795165642.gif" width="150"/><br/>
        <h4>Un concerto</h4><br/><br/>
        </td>

        <td>
        <img src="https://images.code.org/f7bf86b0f86669d82ee2c1565738b9cb-image-1466794447737.gif" width="150"/><br/>
        <h4>Una torta di compleanno</h4><br/><br/>
        </td>

        </tr>
        </table>
      grade1_playlab_eventsFP_markdown_instruction: |-
        Usa la tua immaginazione. Come puoi rendere questo gioco ancora più divertente?<br/>

        <h5>
        <details>
        <summary><b>Ti serve qualche idea?</b></summary>
        \t<br/>
        \t<h5>
        \t\t<ul>
                \t<li><strong>Quattro chiacchiere</strong> - Aggiungi dei blocchi per far dire "Ciao!" ai due personaggi quando si scontrano.</li>

                    <li><strong>Dov'è la Draghetta?</strong> - Fai svanire la draghetta quando si preme la freccia in su.</li>
                    <li><strong>Super Draghetta</strong> - Fai muovere la draghetta ad una velocità maggiore e cerca di fare in modo che il cavaliere la raggiunga. </li>
                </ul>
        \t</h5>
        </details>
        </h5>
      grade2_CaringForNewPet_0_markdown_instruction: Per risolvere questo esercizio,
        collega tutti i blocchi e clicca su "Esegui" per vederlo in funzione!
      grade2_CaringForNewPet_1_markdown_instruction: Per completare il programma,
        trascina ancora un blocco `vai avanti` fuori dalla cassetta degli attrezzi.
      grade2_CaringForNewPet_11_markdown_instruction: '*"Mantieni la calma e aiutami
        a trovare il maialino cattivo."*'
      grade2_CaringForNewPet_4_markdown_instruction: '"Mantieni la calma e aiutami
        a trovare quel cattivone di un maiale. Altrimenti potrei arrabbiarmi!"'
      grade2_MakeDogTag_1_markdown_instruction: |-
        *"Fammi costruire una gabbia per il mio mostriciattolo domestico!"*

        Trascina i blocchi dalla cassetta degli attrezzi per far in modo che l'artista disegni lungo le linee grige della figura. (Ogni linea è lunga 100 pixel.)
      grade2_MakeDogTag_2_markdown_instruction: |-
        *"A questa astronave serve un finestrino!"*

        Ogni lato del quadrato interno è lungo 100 pixel e tutti gli angoli sono di 90 gradi.
      grade2_MakeDogTag_4_markdown_instruction: |-
        *"Forse dovremmo costruire una targhetta per ciascuno dei nostri animali domestici nel caso in cui si perdano."*

        Completa questa targhetta disegnando un rettangolo sul contorno.
        (I lati lunghi sono di 200 pixel ognuno e quelli corti di 100 pixel)
      grade2_MakeDogTag_5_markdown_instruction: |-
        *"Ora una targhetta per Belle!"*

        Disegna questo rombo con i lati di 200 pixel.
      grade2_MakeDogTag_6_markdown_instruction: |-
        **Sfida:** Questa è una targhetta speciale!

        Riesci a capire come disegnare il contorno?
        (I lati lunghi sono di 150 pixel e quelli corti di 75 pixel.)
      grade2_MakeDogTag_7_markdown_instruction: |-
        Ancora una targhetta. Questa volta triangolare.
        (Ogni lato è di 150 pixel)
      grade2_MakeDogTag_8_markdown_instruction: Cerca adesso di disegnare una serie
        di V collegate, usando un ciclo.
      grade2_MakeDogTag_9_markdown_instruction: Riscrivi il codice del precedente
        esercizio, ma questa volta aggiungi il blocco `gira a sinistra di 30 gradi`
        all'interno del blocco `ripeti ... volte`. Poi, ripeti il ciclo 24 volte invece
        che 8.
      grade2_MakeDogTag_BFP_markdown_instruction: |-
        *"Ciao, sono un artista. puoi scrivere del codice per farmi disegnare quasi qualunque cosa."*

        Gioca con i blocchi nella cassetta degli attrezzi per capire cosa fanno!
      grade2_PuppyLoops_10_markdown_instruction: La mia girandola non è finita. Riesci
        ad aiutarmi?
      grade2_PuppyLoops_2_markdown_instruction: |-
        Adesso è disponibile un nuovo blocco! Con il blocco `ripeti ... volte` (detto anche <i>ciclo</i>) puoi ripetere più volte un insieme di blocchi.<br>
        <br>
        Riesci a farmi arrivare al maialino creando un ciclo che usa solo un blocco `vai avanti` all'interno di un blocco `ripeti ... volte`?
      grade2_PuppyLoops_4_markdown_instruction: Usa due blocchi `ripeti ... volte`
        (detti anche <i>cicli</i>) per arrivare al maialino usando meno blocchi possibile.
      grade2_PuppyLoops_8_markdown_instruction: |-
        Il codice che disegna i tre baffi a destra è sbagliato, correggilo.<br><br>
        <b>Suggerimento</b>: tutti i baffi hanno la stessa lunghezza.
      grade2_PuppyLoops_9_markdown_instruction: |-
        Questo codice disegna la C al contrario nella parola "CODE".<br>
        Riesci a farla disegnare correttamente?
      grade2_collector_10_markdown_instruction: È quasi fatta! Colleziona più diamanti
        che puoi per completare la lezione!
      grade2_collector_10_2018_markdown_instruction: È quasi fatta! Colleziona più
        diamanti che puoi per completare la lezione!
      grade2_collector_5_markdown_instruction: |-
        *"Aiutami a raccogliere ogni moneta d'oro"!*

        Questi blocchi sono nell'ordine sbagliato. Riesci a riordinarli?
      grade2_collector_A_markdown_instruction: Aiuto Laura a raccogliere tutti i diamanti.
      grade2_collector_A_2018_markdown_instruction: Aiuto Laura a raccogliere tutti
        i diamanti.
      grade2_maze_debuggingFP_markdown_instruction: '*"Ora aiutami a sorprendere il
        maiale nel modo che preferisci!"*'
      grade2_playlab_project_3_markdown_instruction: |-
        Puoi fare in modo che il pinguino (personaggio 1) riproduca il suono di "un colpo" e dica "Ahi!" quando sbatte contro il dinosauro?

        Quando hai finito, esegui il gioco e falli scontrare.

        ![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)
      grade2_puppy_loops2_markdown_instruction: |-
        Adesso è disponibile un nuovo blocco! Con il blocco `ripeti ... volte` (detto anche <i>ciclo</i>) puoi ripetere più volte un insieme di blocchi.<br>
        <br>
        Riesci a farmi arrivare al maialino creando un ciclo che usa solo un blocco `vai avanti` all'interno di un blocco `ripeti ... volte`?
      grade2_puppy_loops4_markdown_instruction: Usa due blocchi `ripeti ... volte`
        (detti anche <i>cicli</i>) per arrivare al maialino usando meno blocchi possibile.
      grade3_ConditionalsElse_1_markdown_instruction: |-
        La nuvola impedisce all'ape di sapere se dietro c'è un fiore oppure no. Verifica se c'è un fiore e solo in questo caso raccogli il nettare. Attenzione, ciò che trovi dietro la nuvola può cambiare di volta in volta!<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade3_ConditionalsElse_2_markdown_instruction: |-
        Adesso ci sono più nuvole!<br><br>
        Controlla ognuna di esse e verifica se c'è un fiore. Solo in tal caso raccogli il nettare.<br><br>
        Ricordati che le diverse nuvole possono nascondere oggetti diversi!
      grade3_ConditionalsElse_4_markdown_instruction: L'oggetto nascosto può essere
        un fiore oppure un favo. Usa il blocco `se-altrimenti` per raccogliere il
        nettare <i>se</i> si tratta di un fiore, <i>altrimenti</i> per produrre il
        miele (dato che, in questo caso, si tratta sicuramente di un favo).
      grade3_ConditionalsElse_5_markdown_instruction: Potrebbe esserci un fiore oppure
        un favo dietro quelle nuvole. Usa un blocco `se-altrimenti` per raccogliere
        il nettare <i>se</i> si tratta di un fiore, <i>altrimenti</i> per produrre
        il miele (dato che, in questo caso, si tratta sicuramente di un favo).
      grade3_ConditionalsElse_6_markdown_instruction: |-
        Un fiore viola può avere 1, 2 o 3 dosi di nettare, ma tu non sai quante ne ha! <br>
        <br>
        Come puoi usare i blocchi `se` o `se-altrimenti` per raccogliere esattamente la quantità di nettare che ha il fiore?<br>
        <br>
        Ricordati che ad ogni esecuzione la quantità di nettare del fiore viola può essere diversa.
      grade3_ConditionalsElse_7_markdown_instruction: |-
        Ricordati che un fiore viola può avere 1, 2, 3 dosi di nettare.<br>
        <br>
        Completa la funzione `check purple flower` (<i>controlla fiore viola</i>) ed usala per raccogliere tutto il nettare dai fiori.
      grade3_ConditionalsElse_8_markdown_instruction: |-
        Scrivi la funzione `check flower - make honey` (<i>controlla fiore - fai miele</i>).<br>
        <br>
        La funzione deve controllare quanto nettare c'è in ogni fiore viola e raccoglierlo tutto, poi andare avanti e produrre una sola dose di miele.
      grade3_ConditionalsElse_9_markdown_instruction: |-
        Questo è un esercizio di riepilogo -- Questa nuvola nasconde un fiore con una dose di nettare oppure un favo che richiede una dose di miele.<br>
        <br>
        Scrivi la funzione `get nectar or make honey` (<i>prendi il nettare o fai il miele</i>), poi usala per raccogliere il nettare o produrre il miele.
      grade3_ConditionalsElse_TeacherIDo_markdown_instruction: Potrebbe esserci un
        fiore oppure un favo dietro quelle nuvole. Usa un blocco `se-altrimenti` per
        raccogliere il nettare <i>se</i> si tratta di un fiore, <i>altrimenti</i>
        per produrre il miele (dato che, in questo caso, si tratta sicuramente di
        un favo).
      grade3_Conditionals_1_markdown_instruction: |-
        Ciao, sono un'ape!<br>
        Aiutami a raccogliere tutto il nettare dai fiori, usando il minor numero possibile di blocchi.<br><br>
        <b>Suggerimento</b>: Usa il blocco `ripeti ... volte` (<i>ciclo</i>).
      grade3_Conditionals_10_markdown_instruction: |-
        Qui ci sono diverse cose da fare!<br>
        Usa ciò che hai imparato per raccogliere tutto il nettare e poi fare il miele.<br><br>
        <b>Suggerimenti</b><br>
        - Cosa succede se usi un blocco condizionale `se nettare` su un fiore rosso?<br>
        - Puoi risolvere questo esercizio usando il <i>ciclo</i>`ripeti ... volte`?
      grade3_Conditionals_11 BAD_markdown_instruction: Questo è un esercizio di riepilogo
        -- Usa un ciclo `mentre` per raccogliere tutto il nettare da questi fiori.
      grade3_Conditionals_11_markdown_instruction: |-
        Metti insieme tutto ciò che hai imparato!<br>
        Raccogli il nettare solo dai fiori che ne hanno, usando il minor numero possibile di blocchi. Non dimenticarti di fare il miele alla fine.
      grade3_Conditionals_12_markdown_instruction: |-
        Questo percorso a gradini ormai dovrebbe essere familiare.<br>
        Raccogli il nettare solo dai fiori che ne hanno, usando il minor numero possibile di blocchi.
      grade3_Conditionals_13_markdown_instruction: Questo è un esercizio di riepilogo
        -- Raccogli tutto il nettare. Fai attenzione a non raccogliere il nettare
        dai fiori viola se non ne hanno.
      grade3_Conditionals_2_markdown_instruction: |-
        Aiutami a raccogliere tutto il nettare dai fiori e a produrre tutto il miele, usando il minor numero possibile di blocchi.<br><br>
        <b>Suggerimento</b>: usa il blocco `ripeti ... volte` (<i>ciclo</i>).
      grade3_Conditionals_3_markdown_instruction: |-
        I fiori viola possono avere una quantità di nettare pari a 0 oppure 1, ma tu non lo sai! Fai attenzione a non raccogliere nettare da un fiore viola se ne ha una quantità pari a 0.<br>
        Usa il blocco `se` per controllare se la quantità è 0 oppure 1.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-13#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade3_Conditionals_8_markdown_instruction: Fammi volare nel giardino per raccogliere
        il nettare solo dai fiori che ne hanno.
      grade3_Debugging_1_markdown_instruction: |-
        Questi blocchi sbagliati mi fanno perdere tempo. Correggi gli errori per raccogliere tutto il nettare.<br>
        Clicca su "Fai un passo" per eseguire il programma un blocco alla volta.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-2/lezione-10#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade3_Debugging_5_markdown_instruction: |-
        Questo fiore sembra saporito!<br>
        Correggi gli errori per raccogliere tutto il nettare.<br>
        Da ora in avanti puoi usare, oltre al comando "Fai un passo", anche il comando "Esegui" per eseguire tutti i blocchi.
      grade3_Debugging_6_markdown_instruction: |-
        Che dolce sfida!<br>
        Correggi gli errori per raccogliere tutto il nettare.<br>
        Ricorda che cliccando su "Fai un passo" puoi eseguire il programma un blocco alla volta.
      grade3_Debugging_9_markdown_instruction: |-
        Questi blocchi sbagliati mi fanno perdere tempo. Correggi gli errori per raccogliere tutto il nettare e produrre tutto il miele.<br><br>
        Ricorda che cliccando su "Fai un passo" puoi eseguire il programma un blocco alla volta.
      grade3_Loops_10_markdown_instruction: |-
        Quest'ape ha molto da fare!<br>
        Aiutala a raccogliere tutto il nettare e produrre tutto il miele, usando il minor numero possibile di blocchi.<br><br>
        <b>Suggerimento</b>: usa un ciclo simile a quello del precedente esercizio, aggiungendo l'istruzione `gira a ...`.
      grade3_Loops_11_markdown_instruction: Usa un ciclo per scendere la scala e raccogliere
        tutto il nettare.
      grade3_Loops_3_markdown_instruction: Riesci ad usare un <i>ciclo</i> `ripeti
        ... volte` per raccogliere tutto il nettare?
      grade3_Loops_4_markdown_instruction: Adesso usa il blocco `ripeti ... volte`
        sia per raccogliere tutto il nettare che per produrre tutto il miele.
      grade3_Loops_6_markdown_instruction: |-
        Usa i cicli per risolvere quest'esercizio col minor numero possibile di blocchi.<br><br>
        Non dimenticarti di produrre il miele alla fine!
      grade3_Loops_7_markdown_instruction: Raccogli il nettare da ogni fiore, usando
        il minor numero possibile di blocchi.
      grade3_Loops_TeacherIDo_markdown_instruction: Raccogli il nettare da ogni fiore,
        usando il minor numero possibile di blocchi.
      grade3_RunningFarm_10_markdown_instruction: Raccogli tutte le pannocchie e le
        lattughe, poi conquista la zucca finale.
      grade3_RunningFarm_11a_markdown_instruction: Raccogli tutte le pannocchie e
        le lattughe, poi conquista la zucca finale.
      grade3_RunningFarm_6_markdown_instruction: |-
        *"Facciamo un altro passo avanti!"*

        Riesci a scoprire come conquistare la zucca? Assicurati di raccogliere anche tutte le pannocchie lungo il tragitto!
      grade3_RunningFarm_7_markdown_instruction: "**Sfida:** Raccogli tutte le pannocchie
        e le lattughe, poi conquista la zucca finale."
      grade3_bee_conditionals_new2a_markdown_instruction: |-
        In questo esercizio, sappiamo che ogni fiore ha esattamente una dose di nettare, ma i fiori non sono distanziati in modo uniforme.

        Raccogli tutto il nettare usando il minor numero possibile di blocchi.
      grade3_bee_conditionals_new3b_markdown_instruction: |-
        Le istruzioni condizionali posso essere utili anche quando sai esattamente cosa c'è in ogni casella.

        Raccogli tutto il nettare o fai tutto il miele.
      grade3_bee_conditionals_quantum2_markdown_instruction: |-
        Adesso ci sono più nuvole!<br><br>
        Controlla ognuna di esse e verifica se c'è un fiore. Solo in tal caso raccogli il nettare.<br><br>
        Ricordati che le diverse nuvole possono nascondere oggetti diversi!
      grade3_bee_conditionals_quantum3_markdown_instruction: |-
        *"Adesso voglio solo fare il miele."*

        Alcune di queste nubi potrebbero nascondere dei favi. Controlla sotto ogni nuvola se c'è un favo!
      grade3_maze_loops2_markdown_instruction: |-
        Fammi arrivare al girasole usando il minor numero possibile di blocchi!<br><br>
        Prova ad usare un blocco "ripeti ... volte" (ciclo) all'interno di un altro ciclo, per diminuire il numero di blocchi che usi.
      grade3_maze_loops2a_markdown_instruction: |-
        *"Zombie affamato!"*

        Fai arrivare lo zombie fino al girasole usando il minor numero possibile di blocchi.
      grade3_maze_loops3_markdown_instruction: |-
        *"Dovere mangiare girasole!"*

        Fai arrivare lo zombie fino al girasole usando solo i blocchi disponibili.
      grade3_maze_nestedLoops2_markdown_instruction: |-
        Adesso è disponibile un nuovo blocco! Con il blocco `ripeti ... volte` (detto anche <i>ciclo</i>) puoi ripetere più volte un insieme di blocchi.<br>
        <br>
        Riesci a farmi arrivare al maialino creando un ciclo che usa solo un blocco `vai avanti` all'interno di un blocco `ripeti ... volte`?
      grade3_maze_nestedLoops3_markdown_instruction: Fammi arrivare al maialino! Questa
        volta puoi usare un solo blocco`vai avanti`.
      grade3_maze_nestedLoops4_markdown_instruction: Usa due blocchi `ripeti ... volte`
        (detti anche <i>cicli</i>) per arrivare al maialino usando meno blocchi possibile.
      grade4_arist_nested_loop_circles1_markdown_instruction: Questo è un esercizio
        di riepilogo -- Usa un ciclo annidato per completare il disegno.
      grade4_arist_nested_loop_flags1_markdown_instruction: Inserisci in un ciclo
        il codice che trovi già pronto, così da disegnare un mulino a vento.
      grade4_arist_nested_loop_polygons1_markdown_instruction: Ripeti 10 volte la
        figura disegnata dal codice che trovi già pronto. Di quanti gradi devi ruotare
        ad ogni ripetizione?
      grade4_arist_nested_loop_polygons2_markdown_instruction: 'Ripeti 6 volte la
        figura disegnata dal codice che trovi già pronto. Di quanti gradi devi ruotare
        ad ogni ripetizione?

'
      grade4_arist_nested_loop_squares1_markdown_instruction: Riesci a disegnare i
        10 quadrati di questo marciapiede utilizzando un ciclo annidato? Ogni quadrato
        ha il lato di 30 pixel.
      grade4_arist_nested_loop_triangles2_markdown_instruction: |-
        Ora inserisci le istruzioni già presenti (che contengono un ciclo) all'interno di un altro ciclo, in modo da disegnare 10 triangoli. Un ciclo inserito all'interno di un altro ciclo viene detto "ciclo annidato".<br>
        <b>Suggerimento</b>: il disegno dei 10 triangoli richiede in totale una rotazione complessiva di 360 gradi.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-11#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade4_arist_nested_loop_triangles3_markdown_instruction: Riesci a disegnare
        un esagono inserendo in un ciclo le istruzioni per disegnare un triangolo?
      grade4_arist_nested_loop_triangles4_markdown_instruction: Finisci di disegnare
        i denti del coccodrillo!
      grade4_arist_nested_loop_triangles5_markdown_instruction: |-
        Disegna un sole inserendo in un ciclo il codice (che è un ciclo) che trovi già pronto. <br><br>
        Un ciclo inserito in un altro ciclo si chiama "ciclo annidato".<br><br>
        <b>Suggerimento</b>: al termine del disegno di ogni triangolo ti devi spostare PRIMA di girare.
      grade4_arist_nested_loop_triangles6_markdown_instruction: Riesci a disegnare
        questi 36 triangoli utilizzando un ciclo annidato?
      grade4_artist_functions1_markdown_instruction: |-
        *"Io zombie artista. Io amare disegnare!"*

        Aiuta lo zombie a disegnare questi occhiali usando dei quadrati con i lati di 100 pixel.
        L'asta tra le lenti è lunga 75 pixel.
      grade4_artist_functions2_markdown_instruction: |-
        Le funzioni ti permettono di definire nuovi blocchi!<br>
        <br>
        Abbiamo spostato i blocchi per disegnare un quadrato all'interno di una funzione chiamata `draw a square` (<i>disegna un quadrato</i>). Puoi usare la funzione `draw a square` per creare gli occhiali?<br>
        <br>
        I quadrati sono distanti 75 pixel.
      grade4_artist_functions2a_markdown_instruction: |-
        Crea questa immagine usando solo i blocchi disponibili nella cassetta degli attrezzi.

        - Per disegnare un rombo, dovrai alternare svolte a 60 gradi con svolte a 120 gradi.
      grade4_artist_functions3a_markdown_instruction: |-
        Crea questa immagine usando solo i blocchi disponibili nella cassetta degli attrezzi.

        - Per disegnare un rombo, dovrai alternare svolte a 60 gradi con svolte a 120 gradi.
      grade4_artist_functions_challenge_markdown_instruction: |-
        <b>Super Sfida sulle funzioni:</b> Usa le funzioni suggerite per disegnare quattro file di tre esagoni l'una (`draw a line of hexagons` = "disegna una fila di esagoni"). Osserva che le file di numero pari vengono disegnate spostate a destra.<br>
        <b>Nota</b>: `shift down/forward` = "scivola in basso e avanti"; `shift down/backward` = "scivola in basso e indietro".
      grade4_artist_functions_challenge2_markdown_instruction: |-
        <b>Super Sfida sulle funzioni:</b> Usa le funzioni suggerite per disegnare quattro file di tre esagoni l'una (`draw a line of hexagons` = "disegna una fila di esagoni"). Osserva che le file di numero pari vengono disegnate spostate a destra.<br>
        <b>Nota</b>: `shift down/forward` = "scivola in basso e avanti"; `shift down/backward` = "scivola in basso e indietro".
      grade4_artist_functions_stars0_markdown_instruction: |-
        Torneremo alle funzioni tra poco. Ora facciamo una breve pausa esercitandoci a disegnare questa stella.

        Puoi realizzare questo disegno aggiungendo un blocco `ripeti ... volte`.
      grade4_artist_functions_stars1_markdown_instruction: |-
        Ora che sai disegnare una stella, prova a disegnarne quattro!

        - Ogni raggio della stella è lungo 25 pixel.
        - Gira di 45 gradi tra un raggio e l'altro.
        - Salta avanti di 100 pixel tra una stella e l'altra.
      grade4_artist_functions_stars2_markdown_instruction: |-
        In che caso è più difficile disegnare tre stelle invece di quattro? Quando devi anche saltare oltre la luna!

        Devi disegnare solo queste tre stelle per completare questo esercizio.
      grade4_artist_functions_windows0_markdown_instruction: |-
        Stai andando alla grande!

        Crea questa finestra disegnando un quadrato e ruotandolo di 90 gradi prima di disegnarne un altro e così via.
      grade4_artist_functions_windows2_markdown_instruction: "Sposta il codice che
        disegna la finestra all'interno del blocco che definisce la funzione `draw
        a window` (*disegna una finestra*). Ora, potremo richiamare la funzione ogni
        volta che ci serve disegnare una finestra senza dover scrivere nuovamente
        il codice.\n\n<img src=\"https://images.code.org/57c016bcafe697e6ddb196e0f13c9ef9-image-1468602046641.gif\"
        width=\"450px\"/>\n<br/> \n\nProva a risolvere questo esercizio creando la
        funzione `draw a window` (*disegna una finestra*) e richiamandola cinque volte.
        Stai attento alla porta!\n\n- Le finestre del piano di sopra distano 50 pixel
        una dall'altra.\n- Le finestre del piano terra si trovano 100 pixel al di
        sotto delle precedenti."
      grade4_artist_nestedLoops_challenge_markdown_instruction: |-
        <img src="https://images.code.org/c876143212d195192013582f57c6df04-image-1445625392518.36.18.png"
        width="150px;" style="mix-blend-mode: multiply;" /><br>
        Ecco il codice per una figura interessante.<br>
        <br>
        Che cosa succede se la ripeti più volte? Nota che il codice per disegnarla fa ruotare l'artista di <i>420 gradi</i> in totale. Ciò significa che, una volta completata la figura, l'artista sarà rivolto in una direzione differente rispetto a quando ha iniziato. Questa nuova direzione sarà esattamente <i>60 gradi a destra</i> rispetto alla direzione iniziale.<br>
        <br>
        Se ripeti per 6 volte questo codice così com'è, ottieni una rotazione totale pari a 6x60, ossia un giro completo di 360 gradi.<br>
        <img
        src="https://images.code.org/b79f96b87097ce3afe8a6a5608d04e36-image-1440132287456.44.27.png"  width="500px;"  style="mix-blend-mode:
        multiply;" /><br>
        <a href="https://studio.code.org/c/105644852" target="_blank">Vedi la soluzione</a>.<br>
        <br>
        Se vuoi fare un giro completo con solo 4 ripetizioni, l'artista deve ruotare di 360 gradi/4 = 90 gradi ogni volta. Puoi farlo aggiungendo un blocco `gira a destra di 30 gradi` prima di ripetere la figura (dato che 60+30 = 90).<br>
        <img src="https://programmailfuturo.it/images/codeorg/4-3-11-a.png"
        width="500px;" style="mix-blend-mode: multiply;" /><br>
        <a href="https://studio.code.org/c/120106816" target="_blank">Vedi la soluzione</a>.<br>
        <br>
        Se vuoi invece ripetere la figura 12 volte, l'artista deve effettuare una rotazione di 360 gradi/12 = 30 gradi ad ogni ripetizione. Ciò significa che, prima di ripetere la figura, l'artista deve tornare un po' indietro con un blocco `gira a sinistra di 30 gradi` (infatti 60-30 = 30).<br>
        <img src="https://programmailfuturo.it/images/codeorg/4-3-11-b.png"
        width="500px;" style="mix-blend-mode: multiply;" />
        <br>
        <a href="https://studio.code.org/c/120106805" target="_blank">Vedi la soluzione</a>.
      grade4_artist_nestedLoops_challenge2_markdown_instruction: |-
        <img src="https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png"
        width="200px"/><br>
        <br>
        E ora una piccola sfida!<br>
        <br>
        Per ottenere la figura che vedi devi usare solo blocchi che ti sono già stati mostrati. Riesci a capire come ricrearla? Sentiti libero di fare più tentativi e di commettere errori. Nessuno si aspetta che tu ci riesca perfettamente al primo tentativo. <br>
        <br>
        <b>Suggerimento</b>: La figura che viene ripetuta è quasi identica a quella del <a href="https://studio.code.org/s/course4/stage/3/puzzle/11" target="_blank">precedente esercizio</a>, l'unica differenza consiste nel fatto che il primo ciclo disegna tratti di lunghezza leggermente diversa.
      grade4_artist_nested_loop_circles1_markdown_instruction: Questo è un esercizio
        di riepilogo -- Usa un ciclo annidato per completare il disegno.
      grade4_artist_nested_loop_flags1_markdown_instruction: Inserisci in un ciclo
        il codice che trovi già pronto, così da disegnare un mulino a vento.
      grade4_artist_nested_loop_polygons1_markdown_instruction: Ripeti 10 volte la
        figura disegnata dal codice che trovi già pronto. Di quanti gradi devi ruotare
        ad ogni ripetizione?
      grade4_artist_nested_loop_squares1_markdown_instruction: Riesci a disegnare
        i 10 quadrati di questo marciapiede utilizzando un ciclo annidato? Ogni quadrato
        ha il lato di 30 pixel.
      grade4_artist_nested_loop_triangles1_markdown_instruction: 'Completa il codice
        per disegnare questi triangoli. Le istruzioni per disegnare il primo sono
        già pronte. Suggerimento: il disegno dei 3 triangoli richiede in totale una
        rotazione complessiva di 360 gradi.'
      grade4_artist_nested_loop_triangles5_markdown_instruction: |-
        Disegna un sole inserendo in un ciclo il codice (che è un ciclo) che trovi già pronto. <br><br>
        Un ciclo inserito in un altro ciclo si chiama "ciclo annidato".<br><br>
        <b>Suggerimento</b>: al termine del disegno di ogni triangolo ti devi spostare PRIMA di girare.
      grade4_artist_nested_loop_triangles6_markdown_instruction: Riesci a disegnare
        questi 36 triangoli utilizzando un ciclo annidato?
      grade4_artist_parameters_squares1_markdown_instruction: |-
        Clicca su "modifica" per completare la definizione della funzione `draw a square` (<i>disegna un quadrato</i>) ed aggiungere un parametro alla sua definizione. Come per il triangolo, il parametro da aggiungere rappresenta la lunghezza dei lati: puoi dargli il nome che preferisci (devi cliccare sul triangolino con la punta verso il basso) e puoi cambiare anche il nome della funzione.<br>
        <br>
        Poi usa la funzione così definita per disegnare 3 quadrati con i lati di 25, 50 e 75 pixel: in ognuno di essi l'angolo in basso a sinistra è a distanza di 100 pixel da quello del precedente.<br>
        <br>
        <b>Nota</b>: riesci a capire come modificare ulteriormente la funzione per risolvere l'esercizio con soli 15 blocchi in totale?
      grade4_artist_parameters_triangles2_markdown_instruction: |-
        Cosa c'è di diverso in questi blocchi funzione? Clicca su "Esegui" per vedere cosa succede.<br>
        <br>
        <b>Nota</b>: `draw a triangle with length` = <i>disegna un triangolo con lunghezza</i>.
      grade4_artist_parameters_triangles2b_markdown_instruction: |-
        Riesci a completare questo disegno?<br>
        <br>
        Ogni triangolo ha i lati di 25 pixel più lunghi rispetto al precedente. Il primo triangolo ha i lati di 25 pixel.
      grade4_artist_parameters_triangles3_markdown_instruction: |-
        Riesci a completare questo disegno?<br>
        <br>
        Ogni triangolo ha i lati di 25 pixel più lunghi rispetto al precedente. Il primo triangolo ha i lati di 25 pixel.
      grade4_artist_parameters_triangles4_markdown_instruction: |-
        In questo esercizio il codice della funzione `draw a triangle with length` (<i>disegna un triangolo con lunghezza</i>) non è corretto.<br>
        Riesci a modificarlo per risolvere il problema e quindi disegnare dei triangoli con i lati di lunghezza pari a 25, 50 e 75 pixel?<br>
        <b>Nota</b>: riesci a capire come modificare ulteriormente la funzione per risolvere l'esercizio con soli 16 blocchi in totale?
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-14#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade4_artist_parameters_trianglesx_markdown_instruction: |-
        Riesci a completare questo disegno?<br>
        <br>
        Ogni triangolo ha i lati di 25 pixel più lunghi rispetto al precedente. Il primo triangolo ha i lati di 25 pixel.
      grade4_bee_conditionals_nested_loops_markdown_instruction: Questo è un esercizio
        di riepilogo -- Raccogli tutto il nettare. Fai attenzione a non raccogliere
        il nettare dai fiori viola se non ne hanno.
      grade4_bee_conditionals_new1_markdown_instruction: Questo è un esercizio di
        riepilogo -- Raccogli tutto il nettare. Fai attenzione a non raccogliere il
        nettare dai fiori viola se non ne hanno.
      grade4_bee_conditionals_quantum1_markdown_instruction: |-
        La nuvola impedisce all'ape di sapere se dietro c'è un fiore oppure no. Verifica se c'è un fiore e solo in questo caso raccogli il nettare. Attenzione, ciò che trovi dietro la nuvola può cambiare di volta in volta!<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade4_bee_conditionals_quantum2_markdown_instruction: |-
        Adesso ci sono più nuvole!<br><br>
        Controlla ognuna di esse e verifica se c'è un fiore. Solo in tal caso raccogli il nettare.<br><br>
        Ricordati che le diverse nuvole possono nascondere oggetti diversi!
      grade4_bee_conditionals_quantum4_markdown_instruction: L'oggetto nascosto può
        essere un fiore oppure un favo. Usa il blocco `se-altrimenti` per raccogliere
        il nettare <i>se</i> si tratta di un fiore, <i>altrimenti</i> per produrre
        il miele (dato che, in questo caso, si tratta sicuramente di un favo).
      grade4_bee_conditionals_quantum5_markdown_instruction: Potrebbe esserci un fiore
        oppure un favo dietro quelle nuvole. Usa un blocco `se-altrimenti` per raccogliere
        il nettare <i>se</i> si tratta di un fiore, <i>altrimenti</i> per produrre
        il miele (dato che, in questo caso, si tratta sicuramente di un favo).
      grade4_bee_functions2_markdown_instruction: |-
        Una funzione è una sequenza di blocchi di codice che esegue un compito. Usa la funzione `get 2 nectar` (<i>prendi 2 dosi di nettare</i>) per raccogliere il nettare da ogni fiore.
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-3/lezione-6#VIDEO" target="_blank">Video doppiato in italiano</a> (solo la seconda parte)
      grade4_bee_functions3_markdown_instruction: Definisci la funzione `get 5` (*prendi
        5 dosi di nettare*) da usare in questo esercizio.
      grade4_bee_functions4_markdown_instruction: |-
        La funzione `move and get nectar` (*vai a prendere il nettare*) sposta l'ape sul fiore, le fa raccogliere il nettare e la fa tornare dove si trovava.

        Usa questa funzione per raccogliere tutto il nettare.
      grade4_bee_functions9_markdown_instruction: |-
        **Sfida:** Questi fiori possono avere una diversa quantità di nettare ogni volta che esegui il programma.

        Definisci una funzione che raccolga tutto il nettare da ogni fiore.
      grade4_bee_nestedLoops1_markdown_instruction: |-
        *"Puoi passare su tutti questi fiori?"*

        Raccogli tutto il nettare da questi fiori.
      grade4_bee_nestedLoops2_markdown_instruction: "**Sfida:** Scopri come raccogliere
        tutto il nettare usando solo i blocchi disponibili."
      grade4_bee_nestedLoops4_markdown_instruction: Raccogli tutto il nettare da ogni
        fiore e produci il miele in ogni favo. Usa un ciclo annidato.
      grade4_frozen_freeplay_markdown_instruction: Sei ufficialmente diventato un
        maestro artista! Crea un meraviglioso paesaggio invernale.
      grade4_frozen_functions0_markdown_instruction: Il cerchio è una forma speciale.
        Riesci a capire che numero sostituire al posto dei punti interrogativi per
        disegnare un cerchio?
      grade4_frozen_functions1a_markdown_instruction: Usa il nuovo blocco "disegna
        un cerchio" per disegnare 10 cerchi sovrapposti. Devi capire di quanto saltare
        in avanti tra un cerchio e l'altro.
      grade4_frozen_functions2_markdown_instruction: Ora disegniamo 20 cerchi sovrapposti,
        girando di 18 gradi tra un cerchio e l'altro. Di quanto devi saltare in avanti?
      grade4_frozen_functions3_markdown_instruction: In questo esercizio il blocco
        "disegna un cerchio" può creare cerchi di diverse dimensioni. Usalo per disegnare
        un cerchio piccolo di dimensione 5 e un cerchio più grande di dimensione 10.
      grade4_frozen_functions4_markdown_instruction: Fiocchi di neve di aspetto complesso
        possono essere ottenuti usando forme molto semplici. Riesci a disegnare questo,
        ripetendo 5 cerchi di dimensione 5 e 5 cerchi di dimensione 10?
      grade4_frozen_nested_loop_diamonds2_markdown_instruction: Lo sapevi che ogni
        fiocco di neve ha una forma diversa? Disegniamo un altro fiocco di neve usando
        un altro blocco "ripeti" per ripetere il parallelogramma 4 volte, girando
        ogni volta a destra di 90 gradi tra ogni parallelogramma.
      grade4_frozen_nested_loop_diamonds3_markdown_instruction: Adesso, disegniamo
        un altro fiocco di neve usando il blocco "ripeti" per ripetere il rombo 10
        volte, girando a destra di 36 gradi dopo ognuno di essi.
      grade4_frozen_square_markdown_instruction: Ciao, sono Anna di Arendelle! Disegniamo
        un quadrato usando il blocco "ripeti ... volte", così da utilizzare il minor
        numero possibile di blocchi. Quante volte il blocco "ripeti ... volte" deve
        ripetere i blocchi al suo interno per ottenere il quadrato?
      grade4_frozen_square_loop1_markdown_instruction: Ciao, sono Anna di Arendelle!
        Disegniamo un quadrato usando il blocco "ripeti ... volte", così da utilizzare
        il minor numero possibile di blocchi. Quante volte il blocco "ripeti ... volte"
        deve ripetere i blocchi al suo interno per ottenere il quadrato?
      grade4_frozen_square_loop2_markdown_instruction: Disegniamo tre quadrati, girando
        dopo ognuno di essi. Assicurati di girare di 120 gradi ogni volta.
      grade4_frozen_square_loop3_markdown_instruction: Riesci a creare un fiocco di
        neve usando il blocco "ripeti ... volte" per disegnare 10 volte un quadrato,
        e il blocco "gira a ..." per girare di 36 gradi tra un quadrato e l'altro?
      grade4_playlab_freeplay_markdown_instruction: 'Tempo di giocare: divertiti a
        creare il gioco che preferisci. Ecco <a href="http://programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-15"
        target="_blank">alcune idee</a>. Puoi usare tutti i blocchi che trovi nella
        cassetta degli attrezzi.'
      grade4_playlab_test_markdown_instruction: |-
        Utilizza la freccia verso destra per far lanciare al cane una fetta di torta.<br>
        <br>
        Come vengono assegnati i punti? <br>
        Bisogna aggiungere 1 alla variabile `points` (<i>punteggio</i>) ogni volta che il cane (personaggio 1) colpisce il gatto (personaggio 2) con una fetta di torta.<br>
        <br>
        Per ottenere questo risultato, usa l'evento `quando il personaggio 2 tocca una cosa qualunque` così da attivare un aggiornamento del tuo punteggio ogni volta che l'evento accade. Per incrementare il <i>punteggio</i>, `imposta points a points + 1`<br>
        <br>
        Fai salire il tuo punteggio fino a 10 (un punto alla volta!) per risolvere l'esercizio.
      grade4_playlab_test2_markdown_instruction: |-
        In questo esercizio c'è una funzione chiamata `jump` (<i>salta</i>) che consente al cane di saltare in alto di 100 pixel.<br>
        <br>
        Clicca su "Esegui" ed utilizza questa nuova funzione per raccogliere tutte le bandierine muovendo il cane con i tasti freccia.
      grade4_review_artist2_markdown_instruction: |-
        Questa casa ha bisogno di un tetto! Disegna un triangolo.<br>
        <b>Suggerimento</b>: tutti e tre i lati hanno la stessa lunghezza.<br>

        <img src="https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif"
        width="300"/>
      grade4_review_artist3_markdown_instruction: Il blocco "salta" consente di muovere
        l'artista senza disegnare. Disegna la linea tratteggiata usando sia i blocchi
        "salta" che quelli per disegnare. Ogni linea è lunga 50 pixel.
      grade4_review_bee1_markdown_instruction: Adesso usa il blocco `ripeti ... volte`
        sia per raccogliere tutto il nettare che per produrre tutto il miele.
      grade4_review_bee3_markdown_instruction: |-
        Quest'ape ha molto da fare!<br>
        Aiutala a raccogliere tutto il nettare e produrre tutto il miele, usando il minor numero possibile di blocchi.<br><br>
        <b>Suggerimento</b>: usa un ciclo simile a quello del precedente esercizio, aggiungendo l'istruzione `gira a ...`.
      grade4_scaffolded_project6_markdown_instruction: Hai finito! Ora puoi giocare
        con il tuo videogioco o condividerlo con i tuoi amici e compagni di classe!
      grade5_artist_binary10_markdown_instruction: |-
        <img src="https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      grade5_artist_binary2_markdown_instruction: |-
        La funzione `draw binary` (<i>disegna in binario</i>) prende in ingresso una stringa binaria, cioè fatta di caratteri "1" e "0", e fa sì che l'artista – mentre va da sinistra verso destra e dall'alto verso il basso – accenda o spenga i quadrati in base ai caratteri della stringa.<br>
        <br>
        L'artista quindi colora di bianco i quadrati quando incontra un "1" mentre non li colora quando incontra uno "0".<br>
        <br>
        Clicca su "Esegui" per vedere come l'artista usa le stringhe binarie per disegnare questa figura.
      grade5_artist_for_loops1_markdown_instruction: Usa il blocco "ripeti ... volte"
        per disegnare un triangolo equilatero con i lati di 50 pixel.
      grade5_artist_for_loops10_markdown_instruction: Clicca qui per vedere i suggerimenti.
      grade5_artist_for_loops5_markdown_instruction: |-
        Per disegnare questa figura devi fare solo un piccolo cambiamento al codice del precedente esercizio. Riesci a capire di quale cambiamento si tratta?<br>
        <b>Suggerimento</b>: devi eliminare qualcosa!
      grade5_artist_for_loops7a_markdown_instruction: Riduci l'angolo a 72 gradi per
        ottenere questa spirale pentagonale.
      grade5_artist_for_loops8_markdown_instruction: Ricordi che nella lezione 6 (<a
        href="https://studio.code.org/s/course4/stage/6/puzzle/10" target="_blank">esercizio
        10</a> e seguenti) abbiamo usato la variabile `sides` (<i>lati</i>) per rappresentare
        il numero dei lati di un poligono? Ora devi fare la stessa cosa con la variabile
        `counter` (<i>contatore</i>). La figura di questo esercizio inizia con un
        triangolo ed aggiunge un lato per volta fino ad arrivare a disegnare un decagono
        (poligono con 10 lati). Ogni lato è lungo 100 pixel. Come puoi usare la variabile
        `counter` (<i>contatore</i>) presente nel <i>ciclo con contatore</i> per disegnare
        questa figura?
      grade5_artist_for_loops9_markdown_instruction: Cerchiamo di mettere tutto insieme!  Usando
        le conoscenze che hai acquisito sui <i>cicli con contatore</i> e sulla variabile
        `counter` (<i>contatore</i>), prova a creare questo disegno in cui ogni figura
        ha due lati in più della precedente. Accertati che ogni lato sia 10 volte
        più lungo del numero di lati del poligono.
      grade5_artist_for_loopsfreeplay11_markdown_instruction: |-
        <img
        src="https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      grade5_artist_functionparameters10_markdown_instruction: |-
        <img src="https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      grade5_artist_parameters_squares1_markdown_instruction: |-
        Clicca su "modifica" per completare la definizione della funzione `draw a square` (<i>disegna un quadrato</i>) ed aggiungere un parametro alla sua definizione. Come per il triangolo, il parametro da aggiungere rappresenta la lunghezza dei lati: puoi dargli il nome che preferisci (devi cliccare sul triangolino con la punta verso il basso) e puoi cambiare anche il nome della funzione.<br>
        <br>
        Poi usa la funzione così definita per disegnare 3 quadrati con i lati di 25, 50 e 75 pixel: in ognuno di essi l'angolo in basso a sinistra è a distanza di 100 pixel da quello del precedente.<br>
        <br>
        <b>Nota</b>: riesci a capire come modificare ulteriormente la funzione per risolvere l'esercizio con soli 15 blocchi in totale?
      grade5_artist_parameters_triangles2_markdown_instruction: |-
        Riesci a completare questo disegno?<br>
        <br>
        Ogni triangolo ha i lati di 25 pixel più lunghi rispetto al precedente. Il primo triangolo ha i lati di 25 pixel.
      grade5_artist_parameters_triangles2a_markdown_instruction: |-
        Cosa c'è di diverso in questi blocchi funzione? Clicca su "Esegui" per vedere cosa succede.<br>
        <br>
        <b>Nota</b>: `draw a triangle with length` = <i>disegna un triangolo con lunghezza</i>.
      grade5_artist_parameters_triangles4_markdown_instruction: |-
        In questo esercizio il codice della funzione `draw a triangle with length` (<i>disegna un triangolo con lunghezza</i>) non è corretto.<br>
        Riesci a modificarlo per risolvere il problema e quindi disegnare dei triangoli con i lati di lunghezza pari a 25, 50 e 75 pixel?<br>
        <b>Nota</b>: riesci a capire come modificare ulteriormente la funzione per risolvere l'esercizio con soli 16 blocchi in totale?
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-14#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade5_artist_variables_freeplay10_markdown_instruction: 'Tempo di giocare:
        facciamo un esperimento con il numero di `sides`(<i>lati</i>) delle figure.
        Riesci a modificare l''algoritmo affinché la dimensione complessiva della
        figura disegnata rimanga la stessa, indipendentemente dal numero dei suoi
        lati?'
      grade5_artist_variables_freeplay14_markdown_instruction: |-
        Tempo di giocare: Guarda! Ora l'algoritmo precedente è annidato all'interno di un altro ciclo. Fai degli esperimenti modificando i valori delle due variabili per disegnare delle figure fantastiche.<br><br>
        Per disegni ancora più belli, prova a giocare con i colori! Assegna dei colori a caso all'interno di ogni ciclo e osserva come cambia la figura che ottieni.
      grade5_artist_variables_freeplay15_markdown_instruction: |-
        <img src="https://images.code.org/b5e28b084cb331ee030ea3853ed921bd-image-1440060815818.51.21.png"
        width="250px"/><br>
        Ora hai imparato tutto quello che devi sapere per realizzare un disegno come questo! Se la figura ti ispira, prova a realizzare qualcosa di simile. In caso contrario, crea qualcosa di tuo.
      grade5_artist_variables_hexagons1_markdown_instruction: |-
        Proviamo di nuovo. <br>
        <br>
        Puoi impostare il valore della variabile `length` (<i>lunghezza</i>) a 60, così da disegnare questa accattivante figura con esagoni?
      grade5_artist_variables_letterT11_markdown_instruction: |-
        Quello che vedi è un codice che utilizza, in maniera più complessa, gli stessi concetti del precedente esercizio. Quale valore devi assegnare alla variabile `sides` (<i>lati</i>) per disegnare questa immagine composta da quadrati?<br>
        <br>
        <i>Divertiti: prova con diversi numeri di `sides` (<i>lati</i>) per vedere come si modifica la figura!</i>
      grade5_artist_variables_octagons13_markdown_instruction: |-
        Quando una figura ha molti lati, ogni lato deve essere più corto se desideri che l'intero modello si adatti allo schermo.<br>
        Ricrea l'algoritmo per questo bellissimo modello, ma anziché impostare manualmente la variabile `length` (<i>lunghezza</i>), usa un blocco matematico con all'interno la variabile `sides` (<i>lati</i>) per assicurarti che ogni forma si adatti correttamente. Il perimetro di ciascun poligono è 300 pixel.
      grade5_artist_variables_pentagon8_markdown_instruction: |-
        Utilizza ciò che hai imparato nel precedente esercizio per disegnare questo esagono usando la variabile `sides` (<i>lati</i>).<br>
        <br>
        Hai notato che è possibile modificare un solo valore per disegnare un triangolo, un quadrato, un pentagono o un ottagono?
      grade5_artist_variables_pentagon9_markdown_instruction: Riutilizza adesso l'algoritmo
        dell'esercizio precedente e scrivi il codice per disegnare un pentagono con
        i lati lunghi 150 pixel.
      grade5_artist_variables_pentagons1_markdown_instruction: |-
        Questa figura è formata da pentagoni con il lato da 100 pixel. Riesci a disegnarla mettendo la variabile `length` (<i>lunghezza</i>) nei posti corretti ed impostandone il giusto valore? <br>
        <br>
        Hai notato che è sufficiente impostare il valore di `length` (<i>lunghezza</i>) una sola volta e il codice utilizza il valore giusto dappertutto?
      grade5_artist_variables_pentagons12_markdown_instruction: Per disegnare la figura
        che vedi, la variabile `sides` (<i>lati</i>) va impostata a 5. Se usi valori
        più grandi disegni poligoni con più lati ed ottieni una figura più grande!
        Nota che, oltre alla variabile `sides` (<i>lati</i>), c'è un'altra variabile
        chiamata `length` (<i>lunghezza</i>). Puoi utilizzare questa variabile ogni
        volta che devi `spostarti in avanti`. Per disegnare questa figura la variabile
        `length` (<i>lunghezza</i>) va impostata a 75.
      grade5_artist_variables_rectangle6_markdown_instruction: Vorrei disegnare un
        rettangolo che sia alto il doppio di quanto è largo. C'è una variabile denominata
        `width` (<i>larghezza</i>) che deve essere impostata a 100. Riesci ad utilizzare
        il blocco matematico con le operazioni per risolvere questo esercizio?
      grade5_artist_variables_square7_markdown_instruction: Ecco del codice che ti
        consente di disegnare un qualsiasi poligono regolare. C'è una nuova variabile
        denominata `sides` (<i>lati</i>) che è impostata a 4. Riesci ad usare la variabile
        `sides` (insieme al blocco matematico) per girare del giusto numero di gradi
        a prescindere da quanti lati ci sono nel poligono?
      grade5_artist_variables_triangles1_markdown_instruction: |-
        Disegniamo un triangolo equilatero.

        Ogni lato deve essere lungo esattamente 50 pixel.
      grade5_artist_variables_triangles1_2018_markdown_instruction: |-
        Disegniamo un triangolo equilatero.

        Ogni lato deve essere lungo esattamente 50 pixel.
      grade5_artist_variables_triangles2_markdown_instruction: |-
        Adesso nel blocco `vai avanti ...`, invece di usare un valore esplicito di pixel, si fa riferimento ad una variabile di nome `length` (<i>lunghezza</i>). Puoi impostare la variabile `length` a 150 per disegnare questo nuovo triangolo?<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-6#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade5_artist_variables_triangles3_markdown_instruction: Inserisci il blocco
        numerico `???` nei blocchi `imposta length a` (<i>imposta lunghezza a</i>)
        e `ripeti ... volte` e scrivi al posto dei punti interrogativi i valori necessari
        per disegnare questo insieme di triangoli equilateri aventi i lati lunghi
        50 pixel.
      grade5_bee_for_loops10_markdown_instruction: "Se il tuo ciclo conta alla rovescia,
        il valore del passo viene **sottratto** dalla variabile `counter` (*contatore*)
        ogni volta. \n\nQuale dovrebbe essere il valore del passo per raccogliere
        prima 15, poi 12, poi 9, 6, 3 dosi di nettare?"
      grade5_bee_for_loops5_markdown_instruction: Ora bisogna spostarsi in avanti
        di `counter` (<i>contatore</i>) volte, e poi raccogliere il nettare `counter`
        volte. Riesci a svolgere questo compito usando due cicli?
      grade5_bee_for_loops6_markdown_instruction: Puoi usare un <i>ciclo con contatore</i>
        anche per contare all'indietro. In questo esercizio, prova a raccogliere il
        nettare contando all'indietro da 5 ad 1 a passi di 1.
      grade5_bee_for_loops8_markdown_instruction: Questo codice è da completare! Quale
        deve essere il passo in questo ciclo con contatore per raccogliere 3, 6, 9,
        12, 15 dosi di nettare?
      grade5_playlab_freeplay_markdown_instruction: 'Tempo di giocare: divertiti a
        creare il gioco che preferisci. Ecco <a href="http://programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-15"
        target="_blank">alcune idee</a>. Puoi usare tutti i blocchi che trovi nella
        cassetta degli attrezzi.'
      grade5_playlab_variables1_markdown_instruction: In questo esercizio non devi
        scrivere alcun codice. Devi solo premere "Esegui" per giocare! <br> <br> Qui
        sei il cane che sta cercando di raccogliere più bandierine del gatto. Utilizza
        la freccia verso il basso per muovere il cane. Premi "Termina" quando hai
        finito di giocare.
      grade5_playlab_variables10_markdown_instruction: |-
        Modifica la funzione `patrol` (<i>pattuglia</i>) aggiungendo un parametro `actor` (<i>personaggio</i>), in modo tale da poterla eseguire per i diversi personaggi. Ricorda che sono identificati dai numeri 1, 2 e 3.<br>
        <a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-14#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade5_playlab_variables11_markdown_instruction: |-
        Aggiungi un altro parametro chiamato `speed` (<i>velocità</i>)
        alla funzione `patrol` (<i>pattuglia</i>). Prova ad utilizzare il blocco `imposta il personaggio ... velocità ...` con il nuovo parametro `speed` (<i>velocità</i>) per aiutare il pinguino (personaggio 2) a prendere entrambe le bandierine prima che gli altri prendano la loro.
      grade5_playlab_variables12_markdown_instruction: |-
        Esamina il codice che trovi già pronto per vedere se riesci a capire cosa fa ogni blocco.<br>
        <br>
        Quando hai finito, utilizza i tasti freccia per far muovere il cane e raccogliere tutte le bandierine.<br>
        <br>
        <b>Nota</b>: non è necessario modificare il codice.
      grade5_playlab_variables13_markdown_instruction: Utilizza il blocco `quando
        il personaggio ... tocca ...` per collocare il cane (personaggio 1) in alto
        a sinistra SOLO quando tocca uno qualunque degli altri personaggi.
      grade5_playlab_variables14_markdown_instruction: 'Tempo di giocare: divertiti
        a creare il gioco che preferisci. Ecco <a href="http://programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-15"
        target="_blank">alcune idee</a>. Puoi usare tutti i blocchi che trovi nella
        cassetta degli attrezzi.'
      grade5_playlab_variables2_markdown_instruction: |-
        Quella del precedente esercizio non è stata un bella gara! Modifica la variabile denominata `dog_speed` (<i>velocità del cane</i>) per essere sicuro di poter raccogliere più bandierine del gatto. Il primo che raccoglie 10 bandierine, vince!
        <br><a href="https://www.programmailfuturo.it/come/lezioni-tecnologiche/corso-4/lezione-7#VIDEO" target="_blank">Video doppiato in italiano</a>
      grade5_playlab_variables3_markdown_instruction: Ecco un nuovo tipo di gioco!<br><br>Non
        devi modificare niente in questo esercizio.<br><br>Utilizza le frecce verso
        sinistra e verso destra per muoverti, e la freccia verso l'alto per saltare.
        Riesci a raccogliere tutte le bandierine?
      grade5_playlab_variables4_markdown_instruction: Ora c'è una nuova variabile
        chiamata `height` (<i>altezza</i>) che serve a controllare quanto in alto
        il cane può arrivare con un salto. Modifica il valore a cui viene impostata
        `height`, in modo che il cane possa saltare abbastanza in alto da arrivare
        a raggiungere tutte le bandierine.
      grade5_playlab_variables71_markdown_instruction: "Ecco un gioco usato in una
        precedente lezione, ma con la maggior parte del codice nascosta. C'è una nuova
        funzione `score_points` (<i>segna il punteggio</i>).<br>\n<br>\nModifica questa
        funzione in modo che aggiunga alla variabile  `player_score` (<i>punteggio</i>)
        il valore di un nuovo parametro `points` (<i>punti</i>).<br>\n<br>\nLa variabile
        `player_score` (<i>punteggio</i>) deve essere incrementata ogni volta che
        il cane colpisce il gatto con una fetta di torta e decrementata ogni volta
        che il gatto colpisce il cane con un sandwich.<br>\n<br>\nUna volta concluse
        queste modifiche clicca su \"Esegui\" per giocare. Quando il punteggio arriva
        a 6 si passa all'esercizio successivo. "
      grade5_playlab_variables81_markdown_instruction: |-
        Abbiamo aggiunto al gioco ancora un'altra funzione che puoi usare.<br>
        <br>
        Programma il tuo gioco in modo tale da chiamare la funzione `level_up` (<i>sali di un livello</i>) se la variabile `player_score` (<i>punteggio</i>) diventa maggiore di un certo valore (per esempio: `player_score` > 6).<br>
        <br>
        Clicca su "Esegui" per giocare e arriva al livello 3 per passare al prossimo esercizio.<br>
        <br>
        Nota: nella funzione `level_up` viene usata la variabile `enemy_speed` che significa <i>velocità del nemico</i>.
      grade5_playlab_variables9_markdown_instruction: In questo esercizio c'è una
        funzione chiamata `patrol` (<i>pattuglia</i>) in cui devi inserire il codice
        che serve per far muovere il gatto prima in su e poi in giù di 400 pixel.
      grade5_playlab_variables_freeplay_markdown_instruction: "Tempo di giocare: qui
        ci sono tutte le variabili con cui abbiamo giocato finora, e anche qualcuna
        in più in caso ti serva.<br>\n<br>\n<b>Attenzione</b>: se vuoi, puoi cambiare
        nome alle variabili esistenti o introdurne di nuove. Clicca sul triangolino
        con la punta verso il basso accanto al nome della variabile.<br>\n<br>\nOra
        ci sono così tanti blocchi nella cassetta degli attrezzi che li abbiamo organizzati
        in diverse categorie. Prenditi un po' di tempo per esaminare tutto ciò che
        è a tua disposizione. Scorri verso il basso per vedere tutti i comandi nell'area
        di lavoro.<br>\n<br>\n<i>Scorri verso il basso per vedere tutti i comandi
        presenti nell'area di lavoro.</i><br>\nQuando hai finito la tua esplorazione,
        prova a creare un gioco oppure una storia usando i cicli, le variabili e gli
        eventi. "
      gradek_artist_loops1_markdown_instruction: |-
        Aiuta l'artista a disegnare questa linea: due volte avanti.

        ![](https://images.code.org/7ddc7b43ef27197559c7defb0af56d03-image-1470776934855.gif)
      gradek_artist_loops2_markdown_instruction: |-
        Il nostro artista sta cercando di disegnare cinque volte una linea in avanti, ma non riesce a farlo correttamente. Puoi aiutarlo?

        ![](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      gradek_playlab_events1c_markdown_instruction: Il cane, vuole dire "Ciao". Riesci
        ad aiutarlo?
      iceage_click_hello_markdown_instruction: Puoi aiutare Sid a chiamare i suoi
        amici quando si clicca su di lui? Quando hai finito, premi "Esegui" e clicca
        su Sid per vedere il tuo codice al lavoro!
      iceage_click_hello_2018_markdown_instruction: Puoi aiutare Sid a chiamare i
        suoi amici quando si clicca su di lui? Quando hai finito, premi "Esegui" e
        clicca su Sid per vedere il tuo codice al lavoro!
      iceage_free_play_markdown_instruction: È il momento di creare un gioco o una
        storia per conto tuo. Quando hai finito, clicca su "Termina" e poi "Pubblica"
        per condividere e far provare il gioco ai tuoi amici sui loro smartphone,
        tablet o computer! Non sai cosa fare? Clicca sulla lampadina per avere qualche
        suggerimento.
      iceage_free_play_2018_markdown_instruction: È il momento di creare un gioco
        o una storia per conto tuo. Quando hai finito, clicca su "Termina" e poi "Pubblica"
        per condividere e far provare il gioco ai tuoi amici sui loro smartphone,
        tablet o computer! Non sai cosa fare? Clicca sulla lampadina per avere qualche
        suggerimento.
      iceage_free_playcourseF_IceAge_11_markdown_instruction: È il momento di creare
        un gioco o una storia per conto tuo. Quando hai finito, clicca su "Termina"
        e poi "Pubblica" per condividere e far provare il gioco ai tuoi amici sui
        loro smartphone, tablet o computer! Non sai cosa fare? Clicca sulla lampadina
        per avere qualche suggerimento.
      iceage_hello1_markdown_instruction: |-
        Sid (personaggio 1) vuole riunire tutti per una nuova avventura. Puoi aiutarlo a dire "Ciao" trascinando il blocco `il personaggio 1 dice ...` nell'area di lavoro e collegandolo sotto all'evento `Quando si clicca su "Esegui"`?<br>
        <br>
        Non dimenticare di digitare la parola "Ciao" al suo interno!
      iceage_hello1_2018_markdown_instruction: |-
        Sid (personaggio 1) vuole riunire tutti per una nuova avventura. Puoi aiutarlo a dire "Ciao" trascinando il blocco `il personaggio 1 dice ...` nell'area di lavoro e collegandolo sotto all'evento `Quando si clicca su "Esegui"`?<br>
        <br>
        Non dimenticare di digitare la parola "Ciao" al suo interno!
      iceage_hello2_markdown_instruction: Manny (il personaggio 2) incontra Sid (il
        personaggio 1) e vuole invitarlo ad unirsi all'avventura. Aiutali a salutarsi
        a vicenda usando due volte il blocco `il personaggio ... dice`.
      iceage_hello2_2018_markdown_instruction: Manny (il personaggio 2) incontra Sid
        (il personaggio 1) e vuole invitarlo ad unirsi all'avventura. Aiutali a salutarsi
        a vicenda usando due volte il blocco `il personaggio ... dice`.
      iceage_move_events_markdown_instruction: Scrat è ancora alla ricerca di ghiande!
        Aiutalo a scorrazzare in giro attaccando il blocco `sposta ...` a ciascuno
        degli eventi e cambiando la direzione di marcia in base al tasto freccia.
        Quando hai finito, clicca su "Esegui" per raccogliere tutte le ghiande.
      iceage_move_events_2018_markdown_instruction: Scrat è ancora alla ricerca di
        ghiande! Aiutalo a scorrazzare in giro attaccando il blocco `sposta ...` a
        ciascuno degli eventi e cambiando la direzione di marcia in base al tasto
        freccia. Quando hai finito, clicca su "Esegui" per raccogliere tutte le ghiande.
      iceage_move_to_actor_markdown_instruction: Diego (il personaggio 1) è alla ricerca
        di Manny (il personaggio 2). Puoi aiutarli ad incontrarsi? Collega un blocco
        all'evento `quando il personaggio tocca` per emettere un suono quando si incontrano.
      iceage_move_to_actor_2018_markdown_instruction: Diego (il personaggio 1) è alla
        ricerca di Manny (il personaggio 2). Puoi aiutarli ad incontrarsi? Collega
        un blocco all'evento `quando il personaggio tocca` per emettere un suono quando
        si incontrano.
      iceage_move_to_flag_markdown_instruction: Scrat è alla ricerca della sua ghianda!
        Puoi aiutarlo a percorrere gli ultimi 200 pixel?
      iceage_move_to_flag_2018_markdown_instruction: Scrat è alla ricerca della sua
        ghianda! Puoi aiutarlo a percorrere gli ultimi 200 pixel?
      iceage_repeat_markdown_instruction: Il blocco `ripeti per sempre` permette di
        eseguire il codice senza fermarsi mai. Puoi attaccare ad esso dei blocchi
        per aiutare la Nonnina a fare un po' di esercizio muovendosi in continuazione
        a destra e a sinistra?
      iceage_repeat_2018_markdown_instruction: Il blocco `ripeti per sempre` permette
        di eseguire il codice senza fermarsi mai. Puoi attaccare ad esso dei blocchi
        per aiutare la Nonnina a fare un po' di esercizio muovendosi in continuazione
        a destra e a sinistra?
      iceage_sound_and_points_markdown_instruction: Qui trovi il codice del precedente
        esercizio unito a quello per muovere la Nonnina a destra e sinistra. Puoi
        completare questo codice per fare in modo che si riproduca un suono e si guadagni
        un punto quando Sid e la Nonnina si scontrano? Clicca su "Esegui" per lanciare
        il gioco.
      iceage_sound_and_points_2018_markdown_instruction: Qui trovi il codice del precedente
        esercizio unito a quello per muovere la Nonnina a destra e sinistra. Puoi
        completare questo codice per fare in modo che si riproduca un suono e si guadagni
        un punto quando Sid e la Nonnina si scontrano? Clicca su "Esegui" per lanciare
        il gioco.
      iceage_throw_hearts_markdown_instruction: Sid vuol far sapere a sua nonna, la
        Nonnina, che la ama. Usa l'istruzione `il personaggio lancia` per far lanciare
        a Sid (il personaggio 1) dei cuori alla Nonnina (il personaggio 2)! Imposta
        l'umore della Nonnina a felice quando viene colpita dai cuori.
      iceage_throw_hearts_2018_markdown_instruction: Sid vuol far sapere a sua nonna,
        la Nonnina, che la ama. Usa l'istruzione `il personaggio lancia` per far lanciare
        a Sid (il personaggio 1) dei cuori alla Nonnina (il personaggio 2)! Imposta
        l'umore della Nonnina a felice quando viene colpita dai cuori.
      iceage_warn_ice_age_markdown_instruction: Tutti devono muoversi più velocemente
        perché l'era glaciale sta arrivando! Cambia lo sfondo impostandone uno con
        ghiaccio e imposta la velocità di Sid (personaggio 1) a veloce, quindi premi
        "Esegui" per farlo correre da Diego ad avvertirlo.
      iceage_warn_ice_age_2018_markdown_instruction: Tutti devono muoversi più velocemente
        perché l'era glaciale sta arrivando! Cambia lo sfondo impostandone uno con
        ghiaccio e imposta la velocità di Sid (personaggio 1) a veloce, quindi premi
        "Esegui" per farlo correre da Diego ad avvertirlo.
      level 'grade3_Loops_10_markdown_instruction: |-
        Quest'ape ha molto da fare!<br>
        Aiutala a raccogliere tutto il nettare e produrre tutto il miele, usando il minor numero possibile di blocchi.<br><br>
        <b>Suggerimento</b>: usa un ciclo simile a quello del precedente esercizio, aggiungendo l'istruzione `gira a ...`.
      level 'grade3_Loops_11_markdown_instruction: Usa un ciclo per scendere la scala
        e raccogliere tutto il nettare.
      level 'grade3_Loops_3_markdown_instruction: Riesci ad usare un <i>ciclo</i>
        `ripeti ... volte` per raccogliere tutto il nettare?
      level 'grade3_Loops_4_markdown_instruction: Adesso usa il blocco `ripeti ...
        volte` sia per raccogliere tutto il nettare che per produrre tutto il miele.
      level 'grade3_Loops_5_markdown_instruction: |-
        Quanti fiori! Aiuta l'ape a visitarli tutti.<br><br>
        Riesci a farlo con <b>meno</b> di 7 blocchi?
      level 'grade3_Loops_6_markdown_instruction: |-
        Usa i cicli per risolvere quest'esercizio col minor numero possibile di blocchi.<br><br>
        Non dimenticarti di produrre il miele alla fine!
      level 'grade3_Loops_7_markdown_instruction: Raccogli il nettare da ogni fiore,
        usando il minor numero possibile di blocchi.
      ramp_artist_loops1_markdown_instruction: |-
        Che bella giornata!

        Aiuta l'Artista a coprire i suoi fiori prima dell'inverno andando avanti di 60 pixel.
      ramp_artist_loops1_2018_markdown_instruction: |-
        Che bella giornata!

        Aiuta l'Artista a coprire i suoi fiori prima dell'inverno andando avanti di 60 pixel.
      ramp_artist_loops2_markdown_instruction: Aggiungi un tocco di eleganza ripetendo
        cinque volte il precedente movimento, modificando il colore in modo casuale
        tra una mossa e l'altra.
      ramp_artist_loops2_2018_markdown_instruction: Aggiungi un tocco di eleganza
        ripetendo cinque volte il precedente movimento, modificando il colore in modo
        casuale tra una mossa e l'altra.
      ramp_artist_loops3_markdown_instruction: Disegna 5 volte la linea colorata,
        ma adesso usa il ciclo `ripeti ... volte`.
      ramp_artist_loops3_2018_markdown_instruction: Disegna 5 volte la linea colorata,
        ma adesso usa il ciclo `ripeti ... volte`.
      ramp_artist_loops4_markdown_instruction: Cosa succede se aggiungi una svolta
        di 72 gradi a destra come ultima istruzione all'interno del ciclo?
      ramp_artist_loops4_2018_markdown_instruction: Cosa succede se aggiungi una svolta
        di 72 gradi a destra come ultima istruzione all'interno del ciclo?
      ramp_artist_loops5_markdown_instruction: |-
        I cicli rendono sicuramente più semplice la scrittura dei programmi!

        Usa i cicli per disegnare questa scalinata.
        - Ogni scalino è lungo 50 pixel e alto 50 pixel.
        - Dovrai girare di 90 gradi in ogni direzione.
      ramp_artist_loops5_2018_markdown_instruction: |-
        I cicli rendono sicuramente più semplice la scrittura dei programmi!

        Usa i cicli per disegnare questa scalinata.
        - Ogni scalino è lungo 50 pixel e alto 50 pixel.
        - Dovrai girare di 90 gradi in ogni direzione.
      ramp_artist_loops6_markdown_instruction: |-
        Questa scalinata è molto più lunga, ma per realizzarla basta lo stesso numero di istruzioni della precedente!

        Modifica questo ciclo per completare l'esercizio.
      ramp_artist_loops6_2018_markdown_instruction: |-
        Questa scalinata è molto più lunga, ma per realizzarla basta lo stesso numero di istruzioni della precedente!

        Modifica questo ciclo per completare l'esercizio.
      ramp_artist_loops7_markdown_instruction: Cerca uno schema che si ripete e rendi
        questo programma più breve usando un ciclo!
      ramp_artist_loops7_2018_markdown_instruction: Cerca uno schema che si ripete
        e rendi questo programma più breve usando un ciclo!
      ramp_artist_loops8_markdown_instruction: "**Sfida:** Cerca uno schema che si
        ripete e rendi questo programma più breve usando un ciclo."
      ramp_artist_loops8_2018_markdown_instruction: "**Sfida:** Cerca uno schema che
        si ripete e rendi questo programma più breve usando un ciclo."
      ramp_artist_loops8_clone_markdown_instruction: "**Sfida:** Cerca uno schema
        che si ripete e rendi questo programma più breve usando un ciclo."
      ramp_artist_loops9_markdown_instruction: Risolvi questo esercizio disegnando
        un quadrato con i lati di 200 pixel.
      ramp_artist_loops9_2018_markdown_instruction: Risolvi questo esercizio disegnando
        un quadrato con i lati di 200 pixel.
