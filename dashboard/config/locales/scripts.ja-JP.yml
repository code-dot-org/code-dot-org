---
ja:
  data:
    script:
      category:
        csd_category_name: コンピューター サイエンス 発見 ('17～'18)
        csd_2018_category_name: コンピューター サイエンス 発見 ('18～'19)
        csd_2019_category_name: コンピューター サイエンス 発見 ('19～'20)
        csd_2020_category_name: コンピューター サイエンス 発見 ('20～'21)
        csd_2021_category_name: コンピューター サイエンス 発見 ('21～'22)
        csf_category_name: コンピューター・サイエンスの基礎
        csf_2018_category_name: CS 入門 ('18-'19)
        csf_2019_category_name: CS 入門 ('19-'20)
        csf_2020_category_name: CS 入門 ('20-'21)
        csf_2021_category_name: CS 入門 ('21-'22)
        csf_international_category_name: コンピューター サイエンス 国際
        csf2_draft_category_name: '開発中: コース A - F'
        csp_category_name: コンピューターサイエンス 入門 ('15~16)
        csp_2018_category_name: コンピューター サイエンス 原理 ('18～'19)
        csp_2019_category_name: コンピューター サイエンス 原則 ('19～'20)
        csp_2020_category_name: CS原則 ('20-'21)
        csp_2021_category_name: CS原則 ('21-'22)
        cspexams_category_name: コンピューター・サイエンス原理実習テスト
        csp17_category_name: コンピューターサイエンス 入門 ('17~18)
        full_course_category_name: すべてのコース
        hoc_category_name: Hour of Code（アワー オブ コード）
        math_category_name: 計算(けいさん)
        research_studies_category_name: 調査・研究
        twenty_hour_category_name: 20時間
        other_category_name: その他
      name:
        course1:
          title: コース1
          description: コース 1 は、初心者でも作れるようにデザインされています。他の人とのコラボレーションを行う、問題解決スキルを育てる、難しいタスクをやり続ける、といったことを学びます。このコースを終えると、子供達は、個性にあふれたゲームやストーリーを作り、シェアできるようになるでしょう。小学
            1 年生 (5-7才) におすすめのコースです。
          description_short: コース1はコンピューター サイエンスの初心者向けです。
          description_audience: 4-6 才
          lessons:
            'Artist: Loops':
              name: アーティスト：ループ
            'Artist: Sequence':
              name: 'アーティスト: シーケンス'
            'Artist: Shapes':
              name: アーティスト：いろいろなかたち
            'Bee: Loops':
              name: 'みつばち: ループ'
            'Bee: Sequence':
              name: 'みつばち: シーケンス'
            Building a Foundation:
              name: ピラミッドをたてよう
            Getting Loopy:
              name: ルーピーをゲット
            Going Places Safely:
              name: 安全な道を通って行く
            Happy Maps:
              name: ハッピーマップ
            'Jigsaw: Learn to drag and drop':
              name: ジグソーパズル：ドラッグ＆ドロップを学びましょう
            'Maze: Debugging':
              name: '迷路: デバッグ'
            'Maze: Loops':
              name: '迷路: ループ'
            'Maze: Sequence':
              name: '迷路: シーケンス'
            Move it, Move it:
              name: 動かせ！動かせ！
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            Spelling Bee:
              name: つづりみつばち
            'Studio: Create a Story':
              name: プレイラボ：お話を作りましょう
            The Big Event:
              name: ビッグイベント
          student_description: コース 1 は、初心者でも作れるようにデザインされています。他の人とのコラボレーションを行う、問題解決スキルを育てる、難しいタスクをやり続ける、といったことを学びます。このコースを終えると、子供達は、個性にあふれたゲームやストーリーを作り、シェアできるようになるでしょう。小学
            1 年生 (5-7才) におすすめのコースです。
        course2:
          title: コース2
          description: コース2は、読み書きができてプログラミング経験のない生徒のためのコースです。このコースでは、問題を解くプログラムやインタラクティブなゲームや物語を作ってシェアします。2年生〜5年生向け。
          description_short: コース2は読み書きができる生徒のためのコースです。
          description_audience: 6才以上(読み書きができる)
          lessons:
            'Artist: Debugging':
              name: アーティスト：デバッグ
            'Artist: Loops':
              name: アーティスト：ループ
            'Artist: Nested Loops':
              name: アーティスト：入れ子のループ
            'Artist: Sequence':
              name: 'アーティスト: シーケンス'
            'Bee: Conditionals':
              name: ビー：条件文
            'Bee: Debugging':
              name: 'みつばち: デバッグ'
            'Bee: Loops':
              name: 'みつばち: ループ'
            Binary Bracelets:
              name: バイナリ ブレスレット
            Conditionals:
              name: 条件
            Flappy:
              name: フラッピー
            Getting Loopy:
              name: ルーピーをゲット
            Graph Paper Programming:
              name: グラフ用紙のプログラミング
            'Maze: Loops':
              name: '迷路: ループ'
            'Maze: Sequence':
              name: '迷路: シーケンス'
            'Real-life Algorithms: Paper Planes':
              name: '現実世界のアルゴリズム: 紙飛行機'
            Relay programming:
              name: リレー プログラミング
            'Studio: Create a Story':
              name: プレイラボ：お話を作りましょう
            The Big Event:
              name: ビッグイベント
            Your Digital Footprint:
              name: デジタル フットプリント
          student_description: コース2は、読み書きができてプログラミング経験のない生徒のためのコースです。このコースでは、問題を解くプログラムやインタラクティブなゲームや物語を作ってシェアします。2年生〜5年生向け。
        course3:
          title: コース3
          description: コース3は、コース2を終えた生徒向けに作られています。生徒は、前のコースで紹介されたプログラミング トピックを深く掘り下げ、より複雑な問題の解決策を見つけます。このコースの最後には、生徒は皆と共有できるインタラクティブなストーリーとゲームを作成します。このコースは小学4～5年生向けです。
          description_short: コース3はコース2を学習した人のためのコースです。
          description_audience: 8-18 才
          lessons:
            Artist:
              name: アーティスト
            'Artist: Functions':
              name: アーティスト：関数
            'Artist: Nested Loops':
              name: アーティスト：入れ子のループ
            'Artist: Patterns':
              name: アーティスト：法則（ほうそく）
            'Bee: Conditionals':
              name: ビー：条件文
            'Bee: Debugging':
              name: 'みつばち: デバッグ'
            'Bee: Functions':
              name: 'みつばち: 関数'
            'Bee: Nested Loops':
              name: みつばち：入れ子のループ
            Bounce:
              name: バウンド
            Computational Thinking:
              name: コンピュテーショナル・シンキング（コンピューターの様に考える）
            Crowdsourcing:
              name: クラウドソーシング
            Dice Race:
              name: 言うレース
            Digital Citizenship:
              name: デジタル シティズンシップ
            'Farmer: While Loops':
              name: '農夫: While Loops'
            Functional Suncatchers:
              name: 関数サンキャッチャー
            Internet:
              name: インターネット
            Maze:
              name: 迷路
            'Maze: Conditionals':
              name: 迷路：条件文
            Songwriting:
              name: 作詞作曲
            'Studio: Create a Game':
              name: プレイラボ：ゲームを作りましょう
            'Studio: Create a Story':
              name: プレイラボ：お話を作りましょう
          student_description: コース3は、コース2を終えた生徒向けに作られています。生徒は、前のコースで紹介されたプログラミング トピックを深く掘り下げ、より複雑な問題の解決策を見つけます。このコースの最後には、生徒は皆と共有できるインタラクティブなストーリーとゲームを作成します。このコースは小学4～5年生向けです。
        playlab:
          title: プレイラボ
          description: プレイラボでお話やゲームを作りましょう！
          description_short: プレイラボでお話やゲームを作りましょう！
          lessons:
            Play Lab:
              name: プレイラボ
          student_description: プレイラボでお話やゲームを作りましょう！
        artist:
          title: アーティスト
          description: アーティストでかっこいい絵やデザインを描きましょう！
          description_short: アーティストでかっこいい絵やデザインを描きましょう！
          lessons:
            Artist:
              name: アーティスト
              description_student: "「アーティスト」をプログラミングして美しい画像を作成しましょう。"
              description_teacher: このレッスンでは、生徒がアーティストを制御して、画面上で絵を完成させます。このアーティストステージでは、「100ピクセルずつ前進」や「90度右に回転」などの新しいブロックを使って、より複雑な画像を作成していきます。
          student_description: アーティストでかっこいい絵やデザインを描きましょう！
        hourofcode:
          title: 古典的な迷路
          description: アングリーバード、植物対ゾンビ、アイス・エイジのスクラットなどのキャラクターを使って、コンピューター サイエンスの基礎を試してみよう！
          description_short: いろいろなキャラクターでコンピューター サイエンスの基礎を試してみよう！
          lessons:
            Maze:
              name: 迷路
          student_description: アングリーバード、植物対ゾンビ、アイス・エイジのスクラットなどのキャラクターを使って、コンピューター
            サイエンスの基礎を試してみよう！
        frozen:
          title: アナとエルザとコーディング
          description: コードを使って、アナとエルサの氷の魔法を試しましょう。アイススケートをしながら雪の結晶を作って、友だちとも共有しよう！
          description_short: コードを使って、アナとエルサと一緒に魔法と氷の美しさを探検しましょう
          lessons:
            Artist:
              name: アナとエルザとコーディング
          student_description: コードを使って、アナとエルサの氷の魔法を試しましょう。アイススケートをしながら雪の結晶を作って、友だちとも共有しよう！
        course4:
          title: コース4
          description: コース 4は、 コース 2 と 3 を終了した学生向けです。彼らは、それぞれの挑戦を解決するときにいくつかの概念を結合する方法を学ぶように高められた複雑なパズルに取り組む方法を学びます。このコースを完了した時、学生は、ループのパラメーターを持つ関数を含む、複数なスキルを必要とされるプログラムが作れるようになります。4～8年生にお勧めです。
          description_short: forループやパラメータ付き関数などの概念を使って、より複雑なプログラムを構築しましょう。これはコース3のフォローアップです。
          description_audience: 9-18 才
          lessons:
            Artist:
              name: アーティスト
            Artist Binary:
              name: アーティスト：バイナリ
            'Artist: For Loops':
              name: アーティスト：ループ
            'Artist: Functions':
              name: アーティスト：関数
            'Artist: Functions with Parameters':
              name: アーティスト：関数とパラメータ
            'Artist: Variables':
              name: アーティスト：変数（へんすう）
            'Bee: For Loops':
              name: みつばち：ループ
            'Bee: Functions with Parameters':
              name: みつばち：パラメーター付き関数
            Extreme Challenge - Comprehensive:
              name: エクストリーム チャレンジ - 総合
            Maze and Bee:
              name: 迷路とみつばち
            'Play Lab: For Loops':
              name: プレイラボ：ループ
            'Play Lab: Functions with Parameters':
              name: プレイラボ：関数とパラメータ
            'Play Lab: Variables':
              name: プレイラボ：変数
            Super Challenge - For Loops:
              name: スーパー チャレンジ - ループ
            Super Challenge - Functions and Parameters:
              name: スーパー チャレンジ - 関数とパラメーター
            Super Challenge - Variables:
              name: スーパー チャレンジ - 変数
            'Unplugged: Binary':
              name: 'アンプラグド: バイナリ'
            'Unplugged: Envelope Variables':
              name: 'アンプラグド: 変数'
            'Unplugged: For Loop Fun':
              name: アンプラグド：ループ
            'Unplugged: Madlibs':
              name: 'アンプラグド: マドリブス'
            'Unplugged: Songwriting with Parameters':
              name: 'アンプラグド: 作曲'
            'Unplugged: Tangrams':
              name: 'アンプラグド: タングラム'
          student_description: コース 4は、 コース 2 と 3 を終了した学生向けです。彼らは、それぞれの挑戦を解決するときにいくつかの概念を結合する方法を学ぶように高められた複雑なパズルに取り組む方法を学びます。このコースを完了した時、学生は、ループのパラメーターを持つ関数を含む、複数なスキルを必要とされるプログラムが作れるようになります。4～8年生にお勧めです。
        Course4pre:
          title: コース 4 を始める前に
          description: コース 2 と 3 を終えていない生徒のための、概念の簡単な復習。
          description_short: コース 2 と 3 を終えていない生徒のための、概念の簡単な復習。
          lessons:
            'Artist: Functions':
              name: アーティスト：関数
            'Artist: Loops':
              name: アーティスト：ループ
            'Artist: Nested Loops':
              name: アーティスト：入れ子のループ
            'Artist: Sequence':
              name: 'アーティスト: シーケンス'
            'Bee: Conditionals':
              name: ビー：条件文
            'Bee: Debugging':
              name: 'みつばち: デバッグ'
            'Bee: Nested Loops':
              name: みつばち：入れ子のループ
            'Farmer: While Loops':
              name: '農夫: While Loops'
            'Maze: Sequence':
              name: '迷路: シーケンス'
          student_description: コース 2 と 3 を終えていない生徒のための、概念の簡単な復習。
        usability:
          lessons:
            Binary:
              name: ２しんすう
            For Loops:
              name: ループ用
            Functions and Functions with Parameters:
              name: 関数（かんすう）・ひきすう付きの関数（かんすう）
            Intro:
              name: イントロ
            Variables:
              name: 変数（へんすう）
        algebra:
          title: 算数とコンピュータサイエンス
          description: 代数を通じて関数型プログラミングを学習する.
          description_short: 代数を通じて関数型プログラミングを学習する.
          lessons:
            'Calc: Defining Variables':
              name: 変数と置換の定義
            'Calc: Evaluation Blocks':
              name: 評価ブロックと算術式
            'Eval: Boolean Operators':
              name: ブール演算子
            'Eval: Conditionals':
              name: 条件
            'Eval: Defining Functions':
              name: 複合関数
            'Eval: Functions':
              name: デザインレシピを使って単語問題を解決する
            'Eval: Strings and Images':
              name: 文字列と画像
            'Eval: Writing Contracts':
              name: 契約を書く
            'Play Lab: Animation (Big Game)':
              name: ビッグゲーム - アニメーション
            'Play Lab: Boolean (Big Game)':
              name: ビッグゲーム - ブール
            'Play Lab: Booleans':
              name: サム・ザ・バット
            'Play Lab: Collision Detection (Big Game)':
              name: ビッグゲーム - 衝突検出
            'Play Lab: Defining Functions':
              name: ロケットの高さ
            'Play Lab: Defining Variables (Big Game)':
              name: ビッグゲーム - 変数
            'Unplugged: Booleans':
              name: 'オフライン: ブールとロジック'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'オフライン: 衝突検出とピタゴラスの定理'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'オフライン: 条件文と区分的関数'
            'Unplugged: Contracts':
              name: 'オフライン: 契約、ドメイン、範囲'
            'Unplugged: The Design Recipe':
              name: 'オフライン: デザインレシピ'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'オフライン: ビデオゲームと座標面'
          student_description: 代数を通じて関数型プログラミングを学習する.
        infinity:
          title: ディズニー インフィニティ プレイラボ
          description: プレイラボで、ディズニー インフィニティ キャラクターが登場するストーリーやゲームを作成しましょう。
          description_short: プレイラボで、ディズニー インフィニティ キャラクターが登場するストーリーやゲームを作成しましょう。
          lessons:
            Infinity:
              name: ディズニー インフィニティ プレイラボ
          student_description: プレイラボで、ディズニー インフィニティ キャラクターが登場するストーリーやゲームを作成しましょう。
        algebrademo:
          lessons:
            Defining Simple Functions:
              name: 単純な関数の定義
            Defining Variables:
              name: 変数の定義
            Evaluation Blocks:
              name: 評価ブロック
            Making Pictures:
              name: 写真を作る
            The Design Recipe:
              name: 設計レシピ
        K5PD:
          lessons:
            Computer Science Pedagogy:
              name: コンピューター サイエンス教育学
            Introduction to PD:
              name: PD入門
            K-5 Courses:
              name: K - 5コース
            Next Steps:
              name: 次の手順
            'Programming Concept: Conditionals':
              name: 'プログラミングの概念: 条件文'
            'Programming Concept: Events':
              name: 'プログラミングの概念: イベント'
            'Programming Concept: Functions':
              name: 'プログラミングの概念: 関数'
            'Programming Concept: Loops':
              name: 'プログラミングの概念: ループ'
            Reflection:
              name: 復習
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Unplugged lessons:
              name: オフラインレッスン
            Writing computer programs:
              name: コンピューター プログラムを書く
            new stage:
              name: 新しいステージ
        netsim:
          title: インターネット シミュレータ
          lessons:
            Automatic DNS node:
              name: 自動DNSノード
            Broadcasting messages:
              name: メッセージのブロードキャスト
            Internet Simulator Freeplay:
              name: インターネット シミュレーター フリープレイ
            Manual DNS:
              name: 手動DNS
            Overview and Setup Instructions:
              name: 概要とセットアップ手順
            Packets and Reliability:
              name: パケットと信頼性
            Peer to Peer - Sending Ascii:
              name: ピアツーピア - Asciiの送信
            Peer to Peer - Sending Bits on a Shared Wire:
              name: ピアツーピア - 共有ワイヤーでビットを送信する
            Peer to Peer - Sending Numbers:
              name: ピアツーピア - 番号の送信
            Routers and addresses:
              name: ルーターとアドレス
        pixelation:
          lessons:
            Black & White Pixelation Freeplay:
              name: 白黒ピクセレーション フリープレイ
            Black & White Pixelation Tutorial:
              name: 白黒ピクセレーション チュートリアル
            Color Pixelation Examples:
              name: カラーピクセレーションの例
            Color Pixelation Freeplay:
              name: カラーピクセレーション フリープレイ
            Color Pixelation Tutorial:
              name: カラーピクセレーション チュートリアル
        20-hour:
          title: 集中CSコース入門
          description: この20時間コースではコンピューターサイエンスの核となる部分やプログラミングの概念について紹介します。このコースは等級K-8用の授業に使われることを考慮して設計されました。しかし、ご安心ください全年齢を対象としており、楽しくプログラミングを学ぶことができます。
          description_short: この20時間のコースでは、コース2～4のコアコンピューター サイエンスおよびプログラミングの概念について扱います。
          description_audience: 10-18 才
          lessons:
            Abstraction:
              name: 抽象化
            Algorithms:
              name: アルゴリズム
            Computational Thinking:
              name: コンピュテーショナル・シンキング（コンピューターの様に考える）
            Conditionals:
              name: 条件
            Functions:
              name: 関数(かんすう)
            Graph Paper Programming:
              name: グラフ用紙のプログラミング
            Introduction to Computer Science:
              name: コンピューター・サイエンス入門
            Relay Programming:
              name: プログラミングをリレーする
            Song Writing:
              name: 作曲する
            The Artist:
              name: アーティスト
            The Artist 2:
              name: アーティスト 2
            The Artist 3:
              name: アーティスト 3
            The Artist 4:
              name: アーティスト 4
            The Artist 5:
              name: アーティスト 5
            The Farmer:
              name: 農家
            The Farmer 2:
              name: 農家 2
            The Farmer 3:
              name: 農家 3
            The Internet:
              name: インターネット
            The Maze:
              name: 迷路
            Wrap-up:
              name: ラップアップ
          student_description: この20時間コースではコンピューターサイエンスの核となる部分やプログラミングの概念について紹介します。このコースは等級K-8用の授業に使われることを考慮して設計されました。しかし、ご安心ください全年齢を対象としており、楽しくプログラミングを学ぶことができます。
        edit-code:
          title: コードを編集します。
          description: コードを編集します。
          description_short: コードを編集します。
          lessons:
            Applab:
              name: アプリラボ
            Play Lab:
              name: プレイラボ
            The Artist:
              name: アーティスト
            The Maze:
              name: 迷路
          student_description: コードを編集します。
        events:
          title: イベント
          description: イベント
          description_short: イベント
          lessons:
            Bounce:
              name: バウンド
            Calc:
              name: 計算
            Eval:
              name: 評価
            Studio:
              name: スタジオ
          student_description: イベント
        flappy:
          title: フラッピー コード
          description: 10分以内で自分だけのゲームを作ってみませんか？Flappy Codeを試す
          description_short: 独自のフラッピーゲームを書いてみましょう！
          lessons:
            Flappy Code:
              name: フラッピー コード
          student_description: 10分以内で自分だけのゲームを作ってみませんか？Flappy Codeを試す
        jigsaw:
          title: ジグソーパズル
          description: ジグソーチュートリアルをお試しください。
          description_short: ジグソーチュートリアルをお試しください。
          lessons:
            Jigsaw:
              name: ジグソーパズル
              description_student: クリックしてドラッグし、パズルを完成させましょう。
              description_teacher: このレッスンでは、生徒がコンピューターラボに進むときに何が起こるかを理解します。まずはコンピューターラボのマナーを紹介する簡単なディスカッションから始まり、次にコンピューターを使ってオンラインパズルを完成させます。
          student_description: ジグソーチュートリアルをお試しください。
        step:
          title: ステップ
          description: ステップチュートリアル
          description_short: ステップチュートリアル
          lessons:
            Step:
              name: ステップ
          student_description: ステップチュートリアル
        Hour of Code:
          title: Hour of Code 2013
          description: 基礎試してくださいコンピュータと科学を文字ゾンビ対怒っている鳥や植物から！
          description_short: いろいろなキャラクターでコンピューター サイエンスの基礎を試してみよう！
          lessons:
            Hour of Code 2013:
              name: Hour of Code 2013
          student_description: 基礎試してくださいコンピュータと科学を文字ゾンビ対怒っている鳥や植物から！
        CodeStudioPuzzleChallenge:
          lessons:
            Puzzles:
              name: パズル
        Tutorial Video - Code Studio Puzzle Challenge:
          lessons:
            Puzzles:
              name: パズル
        cspunit1:
          lessons:
            Binary Numbers:
              name: 2進数
            Bytes and File Sizes:
              name: バイトとファイルサイズ
            Encode a Complex Thing:
              name: エクスペリエンスをエンコード
            Encoding B&W Images:
              name: 白黒画像のエンコード
            Encoding Color Images:
              name: カラー画像のエンコード
            Encoding Numbers in the Real World:
              name: 実世界での数値をエンコード
            Encoding and Sending Text:
              name: テキストのエンコードと送信
            Lossy Compression and File Formats:
              name: 非可逆圧縮とファイル形式
            Number Systems:
              name: 番号システム
            Personal Innovations:
              name: パーソナル イノベーション
            Sending Binary Messages:
              name: バイナリ メッセージを送信
            Sending Binary Messages with the Internet Simulator:
              name: インターネット シミュレータを使用してバイナリ メッセージを送信
            Sending Bits in the Real World:
              name: 現実世界でのビットの送信
            Sending Complex Messages:
              name: 複雑なメッセージの送信
            Sending Formatted Text:
              name: フォーマットされたテキストの送信
            Sending Numbers:
              name: 番号を送信する
            Text Compression:
              name: テキスト圧縮
        algebraPD:
          lessons:
            Course Overview:
              name: コースの概要
            Evaluation Blocks:
              name: 評価ブロック
            Introduction to PD:
              name: PD入門
            Preparing for in-person PD:
              name: 対面PDを準備
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Why Computer Science belongs in Algebra:
              name: コンピューター サイエンスが代数に属する理由
        algPDmiami:
          lessons:
            Booleans:
              name: ブール
            Design Recipe Practice:
              name: デザインレシピの実践
            Evaluation Blocks:
              name: 評価ブロック
            Luigi's Pizza:
              name: ルイージのピザ
            Rocket-Height:
              name: ロケットの高さ
            Sam the Bat:
              name: サム・ザ・バット
            Strings and Images:
              name: 文字列と画像
            Your Game - Animation:
              name: あなたのゲーム - アニメーション
            Your Game - Booleans:
              name: あなたのゲーム - ブール
            Your Game - Collision Detection:
              name: あなたのゲーム - 衝突検出
            Your Game - Player Movement:
              name: あなたのゲーム - プレイヤーの動き
        text-compression:
          title: テキスト圧縮
          lessons:
            Text Compression:
              name: テキスト圧縮
        CSPPD:
          lessons:
            Exploring CSP Instructional Materials:
              name: CSP教材の探索
            Growth Mindset:
              name: 成長マインドセット
            Impact of Computer Science:
              name: コンピューター サイエンスの影響
            Introduction to PD:
              name: PD入門
            Preparing for in-person PD:
              name: 対面PDを準備
            Teaching Strategies:
              name: 指導戦略
            What is CSP?:
              name: CSPとは？
        CSPLessonSamples:
          lessons:
            Lesson 14:
              name: レッスン14
            Lesson 15:
              name: レッスン15
        ECSPD:
          lessons:
            Growth Mindset:
              name: 成長マインドセット
            Impact of Computer Science:
              name: コンピューター サイエンスの影響
            Introduction to PD:
              name: PD入門
            Preparing for in-person PD:
              name: 対面PDを準備
            Teaching Strategies:
              name: 指導戦略
            What is ECS?:
              name: ECSとは？
        sciencePD:
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 複雑な適応システムのエージェントベースのモデリング
            Computational Thinking And The Framework For K-12 Science Education:
              name: コンピュテーショナル・シンキングと幼稚園から高校までの科学教育のフレームワーク
            Dispositions and Classroom Culture:
              name: 性質と教室文化
            Introduction to Complex Adaptive Systems:
              name: 複雑な適応システム入門
            Introduction to Computational Science:
              name: コンピュテーショナル・サイエンス入門
            Introduction to PD:
              name: PD入門
            Introduction to StarLogo Nova:
              name: StarLogo Nova入門
            Post-Survey:
              name: 調査後
            The Tutorial:
              name: チュートリアル
            Using Computer Models in Science:
              name: 科学におけるコンピューターモデルの使用
            Using Models in the Classroom:
              name: 教室でのモデルの使用
            What to Expect:
              name: 期待事項
        rbo-reference:
          lessons:
            reference:
              name: 参照
        Test Wednesday:
          lessons:
            PDK5 Intro:
              name: PDK5入門
        cspunit3:
          lessons:
            APIs and Function Parameters:
              name: APIと関数パラメータ
            Beyond Buttons Toward Apps:
              name: アプリへのボタンを超えて
            Canvas and Arrays in Apps:
              name: アプリのキャンバスと配列
            Compound Conditional Logic:
              name: 複合条件文ロジック
            Controlling Memory with Variables:
              name: 複合条件文ロジック
            Creating Functions:
              name: 関数の作成
            Creating functions with Parameters:
              name: パラメータ付き関数の作成
            Digital Assistant Project:
              name: デジタル アシスタント プロジェクト
            Event-Driven Programming and Debugging:
              name: イベント駆動型プログラミングとデバッグ
            Events Unplugged:
              name: オフラインイベント
            Functions and Top-Down Design:
              name: 関数とトップダウン設計
            Functions with Return Values:
              name: 戻り値付き関数
            Image Scroller with Key Events:
              name: キーイベント付き画像スクローラー
            Introducing Design Mode:
              name: デザインモード入門
            Introduction to Arrays:
              name: Introduction to Arrays
            Introduction to Conditional Logic:
              name: 条件文ロジック入門
            Introduction to Digital Assistants:
              name: デジタルアシスタント入門
            Looping and Random Numbers:
              name: ループと乱数
            Loops and Simulations:
              name: ループとシミュレーション
            Multi-screen Apps:
              name: マルチスクリーンアプリ
            Practice PT - Design a Digital Scene:
              name: PTの練習 - デジタルシーンのデザイン
            'Practice PT: Create':
              name: 'PTの練習: 作成'
            Processing Arrays:
              name: 配列の処理
            The Need For Programming Languages:
              name: プログラミング言語の必要性
            Understanding Program Flow and Logic:
              name: プログラムの流れとロジックを理解する
            User Input and Strings:
              name: ユーザー入力と文字列
            Using Simple Commands:
              name: 単純なコマンドの使用
            Using Variables in Apps:
              name: アプリでの変数の使用
            While Loops:
              name: Whileループ
            Creating Functions with Parameters:
              name: パラメータ付き関数の作成
        algebraPD3:
          lessons:
            Computer Science Pedagogy:
              name: コンピューター サイエンス教育学
            Course Overview:
              name: コースの概要
            Evaluation Blocks:
              name: 評価ブロック
            Next Steps:
              name: 次の手順
            Strings and Images:
              name: 文字列と画像
            Teacher Dashboard:
              name: 先生用のダッシュボード
            The Big Game:
              name: ビッグゲーム
            The Design Recipe:
              name: 設計レシピ
        ECSPD-NexTech:
          lessons:
            Growth Mindset:
              name: 成長マインドセット
            Impact of Computer Science:
              name: コンピューター サイエンスの影響
            Introduction to PD:
              name: PD入門
            Preparing for in-person PD:
              name: 対面PDを準備
            Teaching Strategies:
              name: 指導戦略
            What is ECS?:
              name: ECSとは？
        ECSPD-iZone:
          lessons:
            Growth Mindset:
              name: 成長マインドセット
            Impact of Computer Science:
              name: コンピューター サイエンスの影響
            Introduction to PD:
              name: PD入門
            Preparing for in-person PD:
              name: 対面PDを準備
            Teaching Strategies:
              name: 指導戦略
            What is ECS?:
              name: ECSとは？
        algebraPD-NexTech:
          lessons:
            Course Overview:
              name: コースの概要
            Evaluation Blocks:
              name: 評価ブロック
            Introduction to PD:
              name: PD入門
            Preparing for in-person PD:
              name: 対面PDを準備
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Why Computer Science belongs in Algebra:
              name: コンピューター サイエンスが代数に属する理由
        algebraPD-iZone:
          lessons:
            Course Overview:
              name: コースの概要
            Evaluation Blocks:
              name: 評価ブロック
            Introduction to PD:
              name: PD入門
            Preparing for in-person PD:
              name: 対面PDを準備
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Why Computer Science belongs in Algebra:
              name: コンピューター サイエンスが代数に属する理由
        sciencePD-NexTech:
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 複雑な適応システムのエージェントベースのモデリング
            Computational Thinking And The Framework For K-12 Science Education:
              name: コンピュテーショナル・シンキングと幼稚園から高校までの科学教育のフレームワーク
            Dispositions and Classroom Culture:
              name: 性質と教室文化
            Introduction to Complex Adaptive Systems:
              name: 複雑な適応システム入門
            Introduction to Computational Science:
              name: コンピュテーショナル・サイエンス入門
            Introduction to PD:
              name: PD入門
            Introduction to StarLogo Nova:
              name: StarLogo Nova入門
            Post-Survey:
              name: 調査後
            The Tutorial:
              name: チュートリアル
            Using Computer Models in Science:
              name: 科学におけるコンピューターモデルの使用
            Using Models in the Classroom:
              name: 教室でのモデルの使用
            What to Expect:
              name: 期待事項
        sciencePD-iZone:
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 複雑な適応システムのエージェントベースのモデリング
            Computational Thinking And The Framework For K-12 Science Education:
              name: コンピュテーショナル・シンキングと幼稚園から高校までの科学教育のフレームワーク
            Dispositions and Classroom Culture:
              name: 性質と教室文化
            Introduction to Complex Adaptive Systems:
              name: 複雑な適応システム入門
            Introduction to Computational Science:
              name: コンピュテーショナル・サイエンス入門
            Introduction to PD:
              name: PD入門
            Introduction to StarLogo Nova:
              name: StarLogo Nova入門
            Post-Survey:
              name: 調査後
            The Tutorial:
              name: チュートリアル
            Using Computer Models in Science:
              name: 科学におけるコンピューターモデルの使用
            Using Models in the Classroom:
              name: 教室でのモデルの使用
            What to Expect:
              name: 期待事項
        sciencePD2:
          lessons:
            Creating Breeds in Starlogo Nova:
              name: Starlogo Novaで品種を作成する
            Epidemic Model Extensions:
              name: 流行モデル拡張
            Review StarLogo Nova:
              name: StarLogo Novaのレビュー
            Revisiting Agent Movement:
              name: エージェントの動きを再考する
            Thinking Ahead to Implementation:
              name: 実装に向けて考える
            Welcome!:
              name: ようこそ!
            Wrap-Up:
              name: まとめ
        sciencePD3:
          lessons:
            Decode and Share:
              name: デコードして共有
            Mystery Model:
              name: ミステリーモデル
            Welcome Back!:
              name: お帰りなさい！
        cspunit2:
          lessons:
            Algorithms Detour - Hard Problems TSP:
              name: 難しい問題 - 旅行中の営業担当者の問題
            Algorithms Detour - How Routers Learn:
              name: ルーターの学習方法
            Algorithms Detour - Minimum Spanning Tree:
              name: アルゴリズムの回り道 - 最小スパニングツリー
            Algorithms Detour - Shortest Path:
              name: アルゴリズムの回り道 - 最短経路
            Alice and Bob and Asymmetric Keys:
              name: 非対称キー - カップと豆
            Cracking the Code:
              name: コードを解読する
            DNS in the Real World:
              name: 現実世界のDNS
            Encryption Algorithms:
              name: キーとパスワード
            HTTP and Abstraction:
              name: インターネット上のHTTPと抽象化
            Invent an Addressing Protocol:
              name: アドレス指定プロトコルを発明する
            One Way Functions - Ice Cream Vans:
              name: 一方向関数 - WiFiホットスポットの問題
            Packets and Making a Reliable Internet:
              name: パケットと信頼できるインターネットの作成
            Practice PT - Cybersecurity Innovations:
              name: PTの実践 - サイバーセキュリティのイノベーション
            Practice PT - The Internet and Society:
              name: PTの実践 - インターネットと社会
            Public Key Crypto:
              name: パブリックキー暗号
            Routers and Redundancy:
              name: ルーターと冗長性
            Tell Me a Secret - Encrypting Text:
              name: 暗号化の必要性
            The Need for Addressing:
              name: 対処の必要性
            The Need for DNS:
              name: DNSの必要性
        algebraPD2a:
          lessons:
            Big Game - Animation:
              name: ビッグゲーム - アニメーション
            Big Game - Booleans:
              name: ビッグゲーム - ブール
            Big Game - Collision Detection:
              name: ビッグゲーム - 衝突検出
            Big Game - Player Movement:
              name: ビッグゲーム - プレイヤーの動き
            Big Game - Variables:
              name: ビッグゲーム - 変数
            Booleans:
              name: ブール
            Defining Variables:
              name: 変数の定義
            Evaluation Blocks:
              name: 評価ブロック
            Free Play:
              name: じゆうあそび
            Luigi's Pizza:
              name: ルイージのピザ
            Rocket-Height:
              name: ロケットの高さ
            Sam the Bat:
              name: サム・ザ・バット
            Strings and Images:
              name: 文字列と画像
            The Design Recipe:
              name: 設計レシピ
            Big GAme - Collision Detection:
              name: ビッグゲーム - 衝突検出
        allthethings:
          lessons:
            Anonymous student survey:
              name: 匿名の生徒アンケート
            Anonymous student survey 2:
              name: 匿名の生徒アンケート 2
            AppLab:
              name: アプリラボ
            Artist:
              name: アーティスト
            Bee:
              name: みつばち
            Bounce:
              name: バウンド
            Farmer:
              name: 農家
            Flappy:
              name: フラッピー
            Free Response:
              name: 無料回答
            Gamelab:
              name: ゲームラボ
            Jigsaw:
              name: ジグソーパズル
            Long assessment:
              name: 長期評価
            Markdown Details:
              name: マークダウンの詳細
            Match:
              name: 一致
            Maze:
              name: 迷路
            Minecraft:
              name: マインクラフト
            Multi:
              name: マルチ
            Multi2:
              name: マルチ2
            Odometer:
              name: オドメーター
            Online PD:
              name: オンラインPD
            PlayLab:
              name: プレイラボ
            Public Key Cryptography:
              name: パブリックキー暗号
            Rich long assessment:
              name: 豊富な長期評価
            Sample PLC Assessment:
              name: PLC評価例
            Star wars:
              name: スター・ウォーズ
            Studio:
              name: スタジオ
            Swapped Levels:
              name: スワップされたレベル
            Text Compression:
              name: テキスト圧縮
            Web Lab:
              name: ウェッブ ラボ
            Multi page assessment:
              name: 複数ページの評価
            Single page assessment:
              name: 単一ページの評価
            Standalone video:
              name: スタンドアロン動画
            Curriculum Reference:
              name: カリキュラム参考資料
            Sprite Lab:
              name: スプライト ラボ
            Dance Lab:
              name: ダンスラボ
            Mini Rubric:
              name: ミニルーブリック
            Pluralsight Test:
              name: Pluralsightテスト
            Externals Optionally Displayed as Unplugged:
              name: オプションでオフラインとして表示される外観
            Bubble Choice:
              name: バブルチョイス
            Contained Levels:
              name: 含まれるレベル
            ML Fish:
              name: MLフィッシュ
            Java Lab:
              name: Javaラボ
        algebraPD2b:
          lessons:
            Best Practices for Teaching Computer Science:
              name: コンピューター サイエンスを教えるためのベストプラクティス
            Booleans:
              name: ブール
            Course Overview:
              name: コースの概要
            Defining Functions:
              name: 関数の定義
            Defining Variables:
              name: 変数の定義
            'Eval: Conditionals':
              name: '評価: 条件文'
            Evaluation Blocks:
              name: 評価ブロック
            Next Steps:
              name: 次の手順
            Rocket-Height:
              name: ロケットの高さ
            Strings and Images:
              name: 文字列と画像
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Writing Contracts:
              name: 契約を書く
        cspfacilitator:
          lessons:
            App Lab:
              name: アプリ ラボ
            Broadcast Lesson:
              name: 放送レッスン
            Internet Simulator:
              name: インターネット シミュレータ
            Pixelation Widget:
              name: ピクセレーションウィジェット
            Text Compression Lesson:
              name: テキスト圧縮レッスン
            Text Compression Widget:
              name: テキスト圧縮ウィジェット
            Welcome!:
              name: ようこそ!
        K5-OnlinePD:
          lessons:
            Best Practices for Teaching Computer Science:
              name: コンピューター サイエンスを教えるためのベストプラクティス
            Computer Science Fundamentals:
              name: コンピュータ サイエンス入門
            Getting Started:
              name: 使用開始
            Looking Ahead:
              name: 先を見る
            'Mastering the Basics: Conditionals':
              name: '基本をマスターする: 条件文'
            'Mastering the Basics: Events':
              name: '基本をマスターする: イベント'
            'Mastering the Basics: Functions':
              name: '基本をマスターする: 関数'
            'Mastering the Basics: Loops':
              name: '基本をマスターする: ループ'
            'Mastering the Basics: Sequencing':
              name: '基本をマスターする: シーケンス'
            Next Steps:
              name: 次の手順
            Planning:
              name: 計画
        ECSPD2:
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: ユニット1、10日目 データでストーリーを伝える
            Unit 1, Day 11-14 Data Modeling and Design:
              name: ユニット1、11～14日目 データのモデリングと設計
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: ユニット1、15～16日目 コンピューター プログラムと指示の順守
            Unit 1, Day 17-19 What Is Intelligence?:
              name: ユニット1、17～19日目 インテリジェンスとは？
            Unit 1, Days 3-4 Buying a Computer:
              name: ユニット1、3～4日目 コンピューターの購入
            Unit 1, Days 5-7 Searching and Web 2:
              name: ユニット1、5～7日目 検索およびウェブ 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: ユニット1、8～9日目 コンピューターと通信の影響
            Welcome!:
              name: ようこそ!
            Wrap-up:
              name: ラップアップ
            Unit 1, Days 1-2 What Is a Computer?:
              name: ユニット1、1～2日コンピューターとは？
        equityPD:
          lessons:
            Equity PD:
              name: エクイティPD
            Necessary Background:
              name: 必要な背景
        algebraPD2:
          lessons:
            Lesson Prep:
              name: レッスン準備
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Teaching with Puzzles:
              name: パズルで教える
            Teaching with the Design Recipe:
              name: デザインレシピで教える
            The Design Recipe:
              name: 設計レシピ
            Welcome!:
              name: ようこそ!
        sciencePD2b:
          lessons:
            Advanced StarLogo Nova:
              name: 高度なStarLogo Nova
            Remixing Phases 1 and 2:
              name: フェーズ1と2の再混合
            Review StarLogo Nova:
              name: StarLogo Novaのレビュー
            Reviewing the Modules:
              name: モジュールのおさらい
            Thinking Ahead to Implementation:
              name: 実装に向けて考える
            Welcome!:
              name: ようこそ!
            Wrap-Up:
              name: まとめ
        equity-pd:
          lessons:
            Code.org Equity PD:
              name: Code.org エクイティPD
            Necessary Background:
              name: 必要な背景
        science-PD2:
          lessons:
            Advanced StarLogo Nova:
              name: 高度なStarLogo Nova
            Remixing Phases 1 and 2:
              name: フェーズ1と2の再混合
            Review StarLogo Nova:
              name: StarLogo Novaのレビュー
            Reviewing the Modules:
              name: モジュールのおさらい
            Thinking Ahead to Implementation:
              name: 実装に向けて考える
            Welcome!:
              name: ようこそ!
            Wrap-Up:
              name: まとめ
        Equity-OnlinePD:
          lessons:
            Creating Equitable Learning Environments:
              name: 公平な学習環境の構築
            Getting Started:
              name: 使用開始
            Introduction to Equity:
              name: エクイティ入門
            Next Steps:
              name: 次の手順
        sciencePD2b-iZone:
          lessons:
            Advanced StarLogo Nova:
              name: 高度なStarLogo Nova
            Remixing Phases 1 and 2:
              name: フェーズ1と2の再混合
            Review StarLogo Nova:
              name: StarLogo Novaのレビュー
            Reviewing the Modules:
              name: モジュールのおさらい
            Thinking Ahead to Implementation:
              name: 実装に向けて考える
            Welcome!:
              name: ようこそ!
            Wrap-Up:
              name: まとめ
        ECSPD2-iZone:
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: ユニット1、10日目 データでストーリーを伝える
            Unit 1, Day 11-14 Data Modeling and Design:
              name: ユニット1、11～14日目 データのモデリングと設計
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: ユニット1、15～16日目 コンピューター プログラムと指示の順守
            Unit 1, Day 17-19 What Is Intelligence?:
              name: ユニット1、17～19日目 インテリジェンスとは？
            Unit 1, Days 3-4 Buying a Computer:
              name: ユニット1、3～4日目 コンピューターの購入
            Unit 1, Days 5-7 Searching and Web 2:
              name: ユニット1、5～7日目 検索およびウェブ 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: ユニット1、8～9日目 コンピューターと通信の影響
            Welcome!:
              name: ようこそ!
            Wrap-up:
              name: ラップアップ
            Unit 1, Days 1-2 What Is a Computer?:
              name: ユニット1、1～2日コンピューターとは？
        ECSPD2-NexTech:
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: ユニット1、10日目 データでストーリーを伝える
            Unit 1, Day 11-14 Data Modeling and Design:
              name: ユニット1、11～14日目 データのモデリングと設計
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: ユニット1、15～16日目 コンピューター プログラムと指示の順守
            Unit 1, Day 17-19 What Is Intelligence?:
              name: ユニット1、17～19日目 インテリジェンスとは？
            Unit 1, Days 3-4 Buying a Computer:
              name: ユニット1、3～4日目 コンピューターの購入
            Unit 1, Days 5-7 Searching and Web 2:
              name: ユニット1、5～7日目 検索およびウェブ 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: ユニット1、8～9日目 コンピューターと通信の影響
            Welcome!:
              name: ようこそ!
            Wrap-up:
              name: ラップアップ
            Unit 1, Days 1-2 What Is a Computer?:
              name: ユニット1、1～2日コンピューターとは？
        CSPPD2:
          lessons:
            Getting Started:
              name: 使用開始
            Lesson Chunk 1- Sending Binary Messages:
              name: レッスンチャンク1 - バイナリメッセージの送信
            Lesson Chunk 2- Encoding and Sending Numbers:
              name: レッスンチャンク2 - 番号のエンコードと送信
            Lesson Chunk 3- Encoding and Sending Text:
              name: レッスンチャンク3 - テキストのエンコードと送信
            Lesson Chunk 4- Compressing and Storing Information:
              name: レッスンチャンク4 - 情報の圧縮と保存
            Practice PT:
              name: PTの練習
            Welcome to the Course!:
              name: コースへようこそ！
            Wrap Up and Next Steps:
              name: まとめと次の手順
        asUnplugged:
          description_audience: 6才-13才
          lessons:
            Binary Bracelets:
              name: バイナリ ブレスレット
            Building a Foundation:
              name: ピラミッドをたてよう
            Getting Loopy:
              name: ルーピーをゲット
            Graph Paper Programming:
              name: グラフ用紙のプログラミング
            Happy Maps:
              name: ハッピーマップ
            Move it, Move it:
              name: 動かせ！動かせ！
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            Songwriting:
              name: 作詞作曲
            The Big Event:
              name: ビッグイベント
        afterschool1:
          description_audience: 7才-13才
        vigenere:
          description: ヴィジュネル暗号ウィジェットを使って、ヴィジュネル暗号でのメッセージの暗号化と復号化を詳しく見てみましょう。
          description_short: ヴィジュネル暗号ウィジェットを使って、ヴィジュネル暗号でのメッセージの暗号化と復号化を詳しく見てみましょう。
          lessons:
            Vigenere:
              name: ヴィジュネル暗号
          student_description: ヴィジュネル暗号ウィジェットを使って、ヴィジュネル暗号でのメッセージの暗号化と復号化を詳しく見てみましょう。
        algebraPD3a:
          lessons:
            Lesson Prep:
              name: レッスン準備
            Updates - The Big Game and Projects:
              name: アップデート - ビッグゲームとプロジェクト
            Updates - The Design Recipe:
              name: アップデート - デザインレシピ
            Updates - Tweaks and Polish:
              name: アップデート - 微調整と微修正
        sciencePD3_pre1:
          lessons:
            Prep With Your Modules:
              name: モジュールを準備する
            The TLO:
              name: TLO
            Welcome Back!:
              name: お帰りなさい！
        frequency_analysis:
          description_short: 頻度分析ウィジェットを使って、予想される頻度と比較したテキスト内の文字頻度を分析します。クラックシフトと換字式暗号。
          lessons:
            Frequency Analysis:
              name: 周波数分析
        ECSPD3-Unit2:
          lessons:
            Close & Next Steps:
              name: 閉じると次の手順
            Getting Started:
              name: 使用開始
            Intro to Unit 2:
              name: ユニット2の紹介
            Lesson Overviews:
              name: レッスンの概要
            Teaching Strategies:
              name: 指導戦略
            Unit 2 Challenge:
              name: ユニット2 チャレンジ
        ECSPD3-Unit3:
          lessons:
            Close & Next Steps:
              name: 閉じると次の手順
            Getting Started:
              name: 使用開始
            Intro to Unit 3:
              name: ユニット3の紹介
            Teaching Strategies:
              name: 指導戦略
            Unit 3 Challenge:
              name: ユニット3 チャレンジ
            Unit 3 Day-by-Day:
              name: ユニット3 毎日
        ECSPD3-Unit4:
          lessons:
            Close & Next Steps:
              name: 閉じると次の手順
            Getting Started:
              name: 使用開始
            Intro to Unit 4:
              name: ユニット4の紹介
            Teaching Strategies:
              name: 指導戦略
            Unit 4 Challenge:
              name: ユニット4 チャレンジ
            Unit 4 Day-by-Day:
              name: ユニット4 毎日
        ECSPD3-Unit5:
          lessons:
            Complete the Challenge:
              name: チャレンジを完了する
            Getting Started:
              name: 使用開始
            Introduction to the Unit 5 Challenge:
              name: ユニット5チャレンジの紹介
            Share out and Submit:
              name: 共有して送信
            Unit 5 Overview:
              name: ユニット5 概要
            Unit 5 lessons:
              name: ユニット5 レッスン
        ECSPD3-Unit6:
          lessons:
            Alternative Ideas for Unit 6:
              name: ユニット6の代替案
            Getting Started:
              name: 使用開始
            Share out and Submit:
              name: 共有して送信
            Unit 6 Challenge:
              name: ユニット6 チャレンジ
            Unit 6 Overview:
              name: ユニット6 概要
            Unit 6 lessons:
              name: ユニット6 レッスン
        cspunit4draft:
          description_short: データ
          lessons:
            Check Your Assumptions:
              name: 仮定を確認
            Cleaning Data:
              name: データのクリーニング
            Compiling Data:
              name: データのコンパイル
            Creating Javascript Objects:
              name: JavaScriptオブジェクトの作成
            Creating Summary Tables:
              name: サマリーテーブルの作成
            Data, Security, and Privacy:
              name: データ、セキュリティ、プライバシー
            Designing Data Collection:
              name: データ収集の設計
            Designing for Your User:
              name: ユーザー向けの設計
            Discover a Data Story:
              name: データストーリーの発見
            Finding Trends with Visualizations:
              name: 視覚化でトレンドを見つける
            Good and Bad Data Visualizations:
              name: 良いデータと悪いデータの視覚化
            How is Data Collected?:
              name: データはどのように収集されるか？
            Import, Export, and Visualize Data:
              name: データのインポート、エクスポート、視覚化
            Interpreting Data Visualizations:
              name: データの視覚化の解釈
            Making Data Visualizations:
              name: データの視覚化
            Permanent Data Storage:
              name: 永続的なデータストレージ
            Permanent Data Storage and Clicker Completion:
              name: 永続的なデータストレージとクリッカー完了
            'Practice Create PT: Data App':
              name: 'PTの練習の作成: データアプリ'
            Privacy in a Digital World:
              name: デジタル世界のプライバシー
            Privacy vs Utility:
              name: プライバシーとユーティリティ
            Rapid Research - Data Innovations:
              name: 迅速な研究 - データイノベーション
            Reading Records:
              name: レコードを読む
            Search Terms:
              name: ワードの検索
            Unique IDs, Delete and Update Records:
              name: 一意のID、レコードの削除と更新
            Using Data in the Real World:
              name: 実世界でのデータの使用
            Web Requests and APIs:
              name: ウェブリクエストとAPI
            What Data Can Tell Us:
              name: データからわかること
            Why Make Apps?:
              name: " アプリを作成する理由"
        ScienceP3OLPT2:
          lessons:
            Earth Science Challenges:
              name: 地球科学の課題
            Life Science Challenges:
              name: ライフサイエンスの課題
            Physical Science Challenges:
              name: 物理科学の課題
            Thinking About Implementation:
              name: 実装について考える
            Welcome!:
              name: ようこそ!
            Wrap-Up:
              name: まとめ
        algebraPD3b:
          lessons:
            Close and Next Steps:
              name: 閉じると次の手順
            Getting Started:
              name: 使用開始
            Teaching Support - Lessons 1-3:
              name: 指導サポート - レッスン1～3
            Teaching Support - Lessons 13-16:
              name: 指導サポート - レッスン13～16
            Teaching Support - Lessons 17-20:
              name: 指導サポート - レッスン17～20
            Teaching Support - Lessons 4-7:
              name: 指導サポート - レッスン4～7
            Teaching Support - Lessons 8-12:
              name: 指導サポート - レッスン8～12
        CSPPD3-Unit2:
          lessons:
            Challenge Overview:
              name: チャレンジの概要
            Complete the Challenge:
              name: チャレンジを完了する
            Getting Started:
              name: 使用開始
            Share out and Submit:
              name: 共有して送信
            Unit 2 Overview:
              name: ユニット2 概要
        duino:
          lessons:
            Basic Circuits:
              name: 基本回路
            Blinky Lights:
              name: 点滅ライト
            JunkBot:
              name: ジャンクボット
        Special Fun:
          description_audience: 10-18 才
          lessons:
            Halloween 2015:
              name: 2015年ハロウィーン
        SpecialSeries:
          description_audience: 10-18 才
          lessons:
            Spring 2016:
              name: 2016年春
            Halloween 2015:
              name: 2015年ハロウィーン
        iceage:
          title: アイスエイジ プレイラボ
          description: アイスエイジ プレイラボでストーリーを作成したり、ゲームを作ったりしましょう！
          description_short: アイスエイジ プレイラボでストーリーを作成したり、ゲームを作ったりしましょう！
          lessons:
            Ice Age Play Lab:
              name: アイスエイジ プレイラボ
          student_description: アイスエイジ プレイラボでストーリーを作成したり、ゲームを作ったりしましょう！
        CSPPD3-Unit3:
          lessons:
            Challenge Overview:
              name: チャレンジの概要
            Chunk 1 Overview:
              name: チャンク1 概要
            Chunk 2 Overview:
              name: チャンク2 概要
            Chunk 3 Overview:
              name: チャンク3 概要
            Chunk 4 Overview:
              name: チャンク4 概要
            Chunk 5 Overview:
              name: チャンク5 概要
            Complete the Challenge:
              name: チャレンジを完了する
            Getting Started:
              name: 使用開始
            Practice Performance Task:
              name: パフォーマンスタスクを練習する
            Share out and Submit:
              name: 共有して送信
            Unit 3 Overview:
              name: ユニット3 概要
        cspunit3temp:
          lessons:
            Canvas and Arrays in Apps:
              name: アプリのキャンバスと配列
            Functions with Return Values:
              name: 戻り値付き関数
            Image Scroller with Key Events:
              name: キーイベント付き画像スクローラー
            Introduction to Arrays:
              name: Introduction to Arrays
            Loops and Simulations:
              name: ループとシミュレーション
            'Practice PT: Create':
              name: 'PTの練習: 作成'
            Processing Arrays:
              name: 配列の処理
            While Loops:
              name: Whileループ
        CSP-Unit3-Support:
          lessons:
            Chunk 1 Overview:
              name: チャンク1 概要
            Chunk 2 Overview:
              name: チャンク2 概要
            Chunk 3 Overview:
              name: チャンク3 概要
            Chunk 4 Overview:
              name: チャンク4 概要
            Chunk 5 Overview:
              name: チャンク5 概要
            Practice Performance Task:
              name: パフォーマンスタスクを練習する
            Unit 3 Overview:
              name: ユニット3 概要
        gumball:
          title: ガムボール プレイラボ
          description: ガムボール プレイラボでストーリーを作ったり、ゲームを作ったりしましょう！
          description_short: ガムボール プレイラボでストーリーを作ったり、ゲームを作ったりしましょう！
          lessons:
            Gumball Play Lab:
              name: ガムボール プレイラボ
          student_description: ガムボール プレイラボでストーリーを作ったり、ゲームを作ったりしましょう！
        starwars:
          description: ドロイドをプログラムで動かす方法を学んで、あなただけのスターウォーズのゲームを開発しよう！
          description_short: ドロイドをプログラムで動かす方法を学んで、あなただけのスターウォーズのゲームを開発しよう！
          lessons:
            Hour of Code 2015:
              name: Hour of Code 2015　（コードの時間　２０１５）
          student_description: ドロイドをプログラムで動かす方法を学んで、あなただけのスターウォーズのゲームを開発しよう！
        starwarsblocks:
          description: ドロイドをプログラムで動かす方法を学んで、あなただけのスターウォーズのゲームを開発しよう！
          description_short: ドロイドをプログラムで動かす方法を学んで、あなただけのスターウォーズのゲームを開発しよう！
          student_description: ドロイドをプログラムで動かす方法を学んで、あなただけのスターウォーズのゲームを開発しよう！
        mc:
          title: Minecraft Hour of Code プログラミング入門
          description: コードのブロックを使って、スティーブかアレックスにMinecraftの世界を冒険させよう！
          description_short: プログラムを通して、Minecraftの世界を探検しましょう。
          lessons:
            Hour of Code 2015:
              name: Hour of Code 2015　（コードの時間　２０１５）
          student_description: コードのブロックを使って、スティーブかアレックスにMinecraftの世界を冒険させよう！
        oceans:
          title: 海洋のためのAI
          description: AIと機械学習を使ってどのように世界の問題に対処するかを学びましょう。
          description_short: AIと機械学習を使ってどのように世界の問題に対処するかを学びましょう。
          lessons:
            Oceans:
              name: 海
              description_student: チュートリアルの概要：まず、生徒は、オブジェクトを「魚」または「魚ではない」に分類して、海からゴミを取り除く試みを行います。次に、トレーニング
                データセットを拡張して、水中に属するその他の海洋生物を含めなくてはなりません。アクティビティの後半では、生徒はランダムに生成された魚のイメージに適用する独自のラベルを選択します。このトレーニング
                データは、新しいイメージに自動的にラベルを付けることができる機械学習モデルに使用されます。
          student_description: AIと機械学習を使ってどのように世界の問題に対処するかを学びましょう。
        CSPPD3-Unit3-pt2:
          lessons:
            Challenge Overview:
              name: チャレンジの概要
            Complete the Challenge:
              name: チャレンジを完了する
            Share out and Submit:
              name: 共有して送信
        ScienceP3OLPT3:
          lessons:
            "(optional) Refresh your connection to Complex Adaptive Systems":
              name: "(オプション) 複雑な適応システムへの接続を更新します"
            Assessing Computer Models:
              name: コンピューターモデルの評価
            Welcome!:
              name: ようこそ!
            Wrap-Up:
              name: まとめ
        cspunit5:
          lessons:
            Create PT:
              name: PTを作成
            Create PT Prep:
              name: PT準備を作成
            Explore PT:
              name: PTを探索
            Explore PT Prep:
              name: PT準備を探索
        cspunit4:
          lessons:
            Check Your Assumptions:
              name: 仮定を確認
            Cleaning Data:
              name: データのクリーニング
            Creating Summary Tables:
              name: サマリーテーブルの作成
            Discover a Data Story:
              name: データストーリーの発見
            Finding Trends with Visualizations:
              name: 視覚化でトレンドを見つける
            Good and Bad Data Visualizations:
              name: 良いデータと悪いデータの視覚化
            Identifying People with Data:
              name: データで人を識別する
            Intro to Data:
              name: データの紹介
            Making Data Visualizations:
              name: データの視覚化
            Practice PT - Propose an Innovation:
              name: PTの練習 - イノベーションの提案
            Practice PT - Tell a Data Story:
              name: PTの練習 - データストーリーの伝達
            Rapid Research - Data Innovations:
              name: 迅速な研究 - データイノベーション
            The Cost of Free:
              name: 無料のコスト
            What is Big Data?:
              name: ビッグデータとは？
        CSPPD3-Unit4:
          lessons:
            Challenge Overview:
              name: チャレンジの概要
            Chapter 1 Overview:
              name: 第1章 概要
            Chapter 2 Overview:
              name: 第2 章 概要
            Complete the Challenge:
              name: チャレンジを完了する
            Getting Started:
              name: 使用開始
            Practice Performance Tasks:
              name: パフォーマンスタスクの練習
            Share out and Submit:
              name: 共有して送信
            Unit 4 Overview:
              name: ユニット4 概要
        cspunit6draft:
          lessons:
            Creating Javascript Objects:
              name: JavaScriptオブジェクトの作成
            Deleting Records:
              name: レコードの削除
            Final Project:
              name: 最終プロジェクト
            Importing and Exporting Data:
              name: データのインポートとエクスポート
            Permanent Data Storage:
              name: 永続的なデータストレージ
            Reading Records:
              name: レコードを読む
            Sample Apps:
              name: サンプルアプリ
            Updating Records:
              name: レコードの更新
            Visualizing Data:
              name: データの視覚化
        CSPPD3-Unit5:
          lessons:
            Challenge Overview:
              name: チャレンジの概要
            Complete the Challenge:
              name: チャレンジを完了する
            Create PT Breakdown:
              name: PTの内訳を作成
            Explore PT Breakdown:
              name: PTの内訳を詳しく見る
            Getting Started:
              name: 使用開始
            Share out and Submit:
              name: 共有して送信
            Unit 5 Overview:
              name: ユニット5 概要
        cspunit6:
          description_short: アプリラボ アプリでデータを収集して使用する方法を学びましょう。
          lessons:
            Creating Javascript Objects:
              name: JavaScriptオブジェクトの作成
            Deleting Records:
              name: レコードの削除
            Final Project:
              name: 最終プロジェクト
            Importing and Exporting Data:
              name: データのインポートとエクスポート
            Permanent Data Storage:
              name: 永続的なデータストレージ
            Reading Records:
              name: レコードを読む
            Sample Apps:
              name: サンプルアプリ
            Updating Records:
              name: レコードの更新
            Visualizing Data:
              name: データの視覚化
        AlgebraA:
          description: 代数を通じて関数型プログラミングを学習する
          description_short: 代数を通じて関数型プログラミングを学習する
          lessons:
            'Calc: Defining Variables':
              name: '計算: 変数の定義'
            'Calc: Evaluation Blocks':
              name: '計算: 評価ブロック'
            'Eval: Defining Functions':
              name: '評価: 関数の定義'
            'Eval: Functions':
              name: '評価: 関数'
            'Eval: Strings and Images':
              name: '評価: 文字列と画像'
            'Eval: Writing Contracts':
              name: '評価: 契約の作成'
            'Play Lab: Defining Functions':
              name: 'プレイラボ: 関数の定義'
            'Unplugged: Contracts':
              name: 'オフライン: 契約'
            'Unplugged: Fast Functions':
              name: 'オフライン: 高速関数'
            'Unplugged: The Design Recipe':
              name: 'オフライン: デザインレシピ'
          student_description: 代数を通じて関数型プログラミングを学習する
        AlgebraB:
          title: '代数学のコンピューター サイエンス: コースB'
          description: 代数を通じて関数型プログラミングを学習する
          description_short: 代数を通じて関数型プログラミングを学習する
          lessons:
            'Eval: Boolean Operators':
              name: '評価: ブール演算子'
            'Eval: Conditionals':
              name: '評価: 条件文'
            'Play Lab: Animation (Big Game)':
              name: 'プレイラボ: アニメーション (ビッグゲーム)'
            'Play Lab: Boolean (Big Game)':
              name: 'プレイラボ: ブール (ビッグゲーム)'
            'Play Lab: Booleans':
              name: 'プレイラボ: ブール'
            'Play Lab: Collision Detection (Big Game)':
              name: 'プレイラボ: 衝突検出 (ビッグゲーム)'
            'Play Lab: Defining Variables (Big Game)':
              name: 'プレイラボ: 変数の定義 (ビッグゲーム)'
            'Unplugged: Booleans':
              name: 'オフライン: ブール'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'オフライン: 衝突検出と距離式'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'オフライン: 条件文と区分的関数'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'オフライン: ビデオゲームと座標面'
          student_description: 代数を通じて関数型プログラミングを学習する
        gamelab-hackathon:
          lessons:
            Middle_School_Hackathon:
              name: 中学ハッカソン
        algebraPD1:
          lessons:
            Course Overview:
              name: コースの概要
            Evaluation Blocks:
              name: 評価ブロック
            Introduction to PD:
              name: PD入門
            Preparing for in-person PD:
              name: 対面PDを準備
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Why Computer Science belongs in Algebra:
              name: コンピューター サイエンスが代数に属する理由
        algebraPD3c:
          lessons:
            Getting Started:
              name: 使用開始
            Planning For the Future:
              name: 将来の計画
            Sharing Student Work:
              name: 生徒の作品の共有
        csp1-2017:
          title: CSPユニット1 - インターネット ('17～'18)
          description: このユニットでは、コンピューターでデジタル情報を表現し、それを人と計算装置の間で転送する必要性から生じる技術的な課題と問題について検討します。次に、このユニットでは、インターネットの構造と設計、および設計で行った決定が与える影響について詳しく見ていきます。
          description_short: 情報をビットとして表現することに関する課題と、そのビットをある場所から別の場所に移す方法を探ります。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csp1_1:
              display_name: '第1章: 情報の表現と送信'
            csp1_2:
              display_name: '第2章: インターネットの発明'
          lessons:
            Binary Numbers:
              name: 2進数
            CS Principles Pre-survey:
              name: CS原則の事前アンケート
            Encoding and Sending Formatted Text:
              name: フォーマットされたテキストのエンコードと送信
            HTTP and Abstraction:
              name: HTTPと抽象化
            Number Systems:
              name: 番号システム
            Packets and Making a Reliable Internet:
              name: パケットと信頼できるインターネットの作成
            Personal Innovations:
              name: パーソナル イノベーション
            Practice PT - The Internet and Society:
              name: PTの実践 - インターネットと社会
            Routers and Redundancy:
              name: ルーターと冗長性
            Sending Binary Messages:
              name: バイナリ メッセージを送信
            Sending Binary Messages with the Internet Simulator:
              name: インターネット シミュレータを使用してバイナリ メッセージを送信
            Sending Numbers:
              name: 番号を送信する
            The Internet:
              name: インターネット
            The Need for Addressing:
              name: 対処の必要性
            The Need for DNS:
              name: DNSの必要性
            Unit 1 Chapter 1 Assessment:
              name: ユニット1 第1章 評価
            Unit 1 Chapter 2 Assessment:
              name: ユニット1 第2章 評価
            CSP Student Post Survey Staging:
              name: CSP 生徒の調査後のステージング
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            CSP Student Post-Course Survey:
              name: CSP生徒向けコース後アンケート
            Post-Course Survey:
              name: コース終了後アンケート
          student_description: このユニットでは、コンピューターでデジタル情報を表現し、それを人と計算装置の間で転送する必要性から生じる技術的な課題と問題について検討します。次に、このユニットでは、インターネットの構造と設計、および設計で行った決定が与える影響について詳しく見ていきます。
        csp2-2017:
          title: CSPユニット2 - デジタル情報 ('17～'18)
          description: このユニットでは、デジタル情報をエンコード、表現、操作する方法をさらに探ります。データをデジタルで操作して視覚化し、パターン、傾向、および潜在的な意味をつかむスキルは、コンピューター
            サイエンティストが毎日使っている重要な実践的スキルです。ユニットでは主に、データの出所を理解し、そこから何を学んだり抽出したりできるかを直観的に理解し、計算ツールを使ってデータを操作および伝達するスキルについて学びます。
          description_short: より複雑なデジタル情報をどのように表現し、計算と視覚化によって操作するかを詳しく見ていきましょう。
          lesson_groups:
            csp2_1:
              display_name: '第1章: 複雑な情報のエンコードと圧縮'
            csp2_2:
              display_name: '第2章: データの操作と視覚化'
            cspSurvey:
              display_name: アンケート
          lessons:
            Bytes and File Sizes:
              name: バイトとファイルサイズ
            Check Your Assumptions:
              name: 仮定を確認
            Cleaning Data:
              name: データのクリーニング
            Creating Summary Tables:
              name: サマリーテーブルの作成
            Discover a Data Story:
              name: データストーリーの発見
            Encode a Complex Thing:
              name: 複雑なものをエンコードする
            Encoding B&W Images:
              name: 白黒画像のエンコード
            Encoding Color Images:
              name: カラー画像のエンコード
            Finding Trends with Visualizations:
              name: 視覚化でトレンドを見つける
            Good and Bad Data Visualizations:
              name: 良いデータと悪いデータの視覚化
            Intro to Data:
              name: データ入門
            Lossy Compression and File Formats:
              name: 非可逆圧縮とファイル形式
            Making Data Visualizations:
              name: データの視覚化
            Practice PT - Tell a Data Story:
              name: PTの練習 - データストーリーの伝達
            Text Compression:
              name: テキスト圧縮
            Unit 2 Chapter 1 Assessment:
              name: ユニット2 第1章 評価
            Unit 2 Chapter 2 Assessment:
              name: ユニット2 第2章 評価
            CSP Student Post Survey Staging:
              name: CSP 生徒の調査後のステージング
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            CSP Student Post-Course Survey:
              name: CSP生徒向けコース後アンケート
            Practice PT - Encode an Experience:
              name: PTの実践 - エクスペリエンスのエンコード
            Post-Course Survey:
              name: コース終了後アンケート
          student_description: このユニットでは、デジタル情報をエンコード、表現、操作する方法をさらに探ります。データをデジタルで操作して視覚化し、パターン、傾向、および潜在的な意味をつかむスキルは、コンピューター
            サイエンティストが毎日使っている重要な実践的スキルです。ユニットでは主に、データの出所を理解し、そこから何を学んだり抽出したりできるかを直観的に理解し、計算ツールを使ってデータを操作および伝達するスキルについて学びます。
        csp3-2017:
          title: CSPユニット3 - プログラミング入門 ('17～'18)
          description_short: 古典的な亀の絵を使ったトップダウンの設計アプローチを通じて、JavaScriptのプログラミングの基本を学びます。
          lesson_groups:
            csp3_1:
              display_name: '章 1: プログラミング言語とアルゴリズム'
            cspAssessment:
              display_name: 章の評価
            cspSurvey:
              display_name: アンケート
          lessons:
            APIs and Function Parameters:
              name: APIと関数パラメータ
            Creating Functions:
              name: 関数の作成
            Creating functions with Parameters:
              name: パラメータを使って関数を作成する
            Creativity in Algorithms:
              name: アルゴリズムの創造性
            Functions and Top-Down Design:
              name: 関数とトップダウン設計
            Looping and Random Numbers:
              name: ループと乱数
            Practice PT - Design a Digital Scene:
              name: PTの練習 - デジタルシーンのデザイン
            The Need For Programming Languages:
              name: プログラミング言語の必要性
            The Need for Algorithms:
              name: アルゴリズムの必要性
            Using Simple Commands:
              name: 単純なコマンドの使用
            Unit 3 Chapter 1 Assessment:
              name: ユニット3 第1章 評価
            'Anonymous student survey: Taking the AP exam':
              name: '生徒向け匿名アンケート: AP試験を受ける'
            CSP Student Post Survey Staging:
              name: CSP 生徒の調査後のステージング
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            CSP Student Post-Course Survey:
              name: CSP生徒向けコース後アンケート
            Creating Functions with Parameters:
              name: パラメータ付き関数の作成
            CSP End-of-Semester Mid-course survey:
              name: CSP学期末中間アンケート
            CSP Mid-course survey:
              name: CSP中間アンケート
            Please complete the CSP Mid-course survey!:
              name: CSP中間アンケートにご記入ください！
            Post-Course Survey:
              name: コース終了後アンケート
        csp4-2017:
          title: CSPユニット4 - ビッグデータとプライバシー ('17～'18)
          description_short: 私たちが住んでいるデータが豊富な世界を探索し、データが公共政策、個人のプライバシー、セキュリティ、法律、倫理にどのように影響するかを探ります。
          lesson_groups:
            csp4_1:
              display_name: '第1章: ビッグデータと暗号化の世界'
            cspAssessment:
              display_name: 章の評価
            cspSurvey:
              display_name: アンケート
          lessons:
            Alice and Bob and Asymmetric Keys:
              name: アリスとボブと非対称キー
            Cracking the Code:
              name: コードを解読する
            Encryption with Keys and Passwords:
              name: キーとパスワードによる暗号化
            Identifying People with Data:
              name: データで人を識別する
            Practice PT - Cybersecurity Innovations:
              name: PTの実践 - サイバーセキュリティのイノベーション
            Practice PT - Propose an Innovation:
              name: PTの練習 - イノベーションの提案
            Public Key Crypto:
              name: パブリックキー暗号
            Rapid Research - Data Innovations:
              name: 迅速な研究 - データイノベーション
            Simple Encryption:
              name: 単純な暗号化
            The Cost of Free:
              name: 無料のコスト
            What is Big Data?:
              name: ビッグデータとは？
            Rapid Research - Cybercrime:
              name: 迅速な研究 - サイバー犯罪
            Practice PT - Big Data and Security Dilemmas:
              name: 実践PT - ビッグデータとセキュリティのジレンマ
            Unit 4 Chapter 1 Assessment:
              name: ユニット4 第1章 評価
            CSP Student Post Survey Staging:
              name: CSP 生徒の調査後のステージング
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            CSP Student Post-Course Survey:
              name: CSP生徒向けコース後アンケート
            Post-Course Survey:
              name: コース終了後アンケート
            Student Post-Course Survey:
              name: コース後の生徒たちの調査
        csp5-2017:
          title: CSPユニット5 - アプリの構築 ('17～'18)
          description: このユニットでは、コンピュータープログラミングの基本的な概念の紹介を続けます。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このコースでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
          description_short: リッチでインタラクティブなアプリを作成することにより、JavaScriptでのコンピュータープログラミングの基本的な概念を引き続き学習します。
          lesson_groups:
            csp5_1:
              display_name: '第1章: イベント駆動型プログラミング'
            csp5_2:
              display_name: '第2章: データ構造を使用したプログラミング'
            cspSurvey:
              display_name: アンケート
          lessons:
            Beyond Buttons Toward Apps:
              name: アプリへのボタンを超えて
            Canvas and Arrays in Apps:
              name: アプリのキャンバスと配列
            Compound Conditional Logic:
              name: 複合条件文ロジック
            Controlling Memory with Variables:
              name: 複合条件文ロジック
            Digital Assistant Project:
              name: デジタル アシスタント プロジェクト
            Event-Driven Programming and Debugging:
              name: イベント駆動型プログラミングとデバッグ
            Events Unplugged:
              name: オフラインイベント
            Functions with Return Values:
              name: 戻り値付き関数
            Image Scroller with Key Events:
              name: キーイベント付き画像スクローラー
            Introducing Design Mode:
              name: デザインモード入門
            Introduction to Arrays:
              name: Introduction to Arrays
            Introduction to Conditional Logic:
              name: 条件文ロジック入門
            Introduction to Digital Assistants:
              name: デジタルアシスタント入門
            Loops and Simulations:
              name: ループとシミュレーション
            Multi-screen Apps:
              name: マルチスクリーンアプリ
            'Practice PT: Create':
              name: 'PTの練習: 作成'
            Processing Arrays:
              name: 配列の処理
            Understanding Program Flow and Logic:
              name: プログラムの流れとロジックを理解する
            User Input and Strings:
              name: ユーザー入力と文字列
            Using Variables in Apps:
              name: アプリでの変数の使用
            While Loops:
              name: Whileループ
            Edited lessons ABOVE this line:
              name: この行の上の編集されたレッスン
            Buttons and Events:
              name: ボタンとイベント
            Make Your Own Multi-Screen App:
              name: 独自のマルチスクリーンアプリを作成する
            Unit 5 Assessment 1:
              name: ユニット5 評価1
            Unit 5 Assessment 2:
              name: ユニット5 評価2
            "'If' Statements Unplugged":
              name: オフラインで学ぶ「If」文
            '"If" Statements Unplugged':
              name: オフラインで学ぶ「If」文
            Getting started with If Statements:
              name: if文の使用開始
            Unit 3 Chapter 1 Assessment 3:
              name: ユニット3 第1章 評価3
            If statements:
              name: if文
            Unit 3 Assessment 3:
              name: ユニット3 評価3
            Unit 3 Assessment 4:
              name: ユニット3 評価4
            If-else-if and Conditional Logic:
              name: if - else - ifと条件付きロジック
            'Building an App: Color Sleuth':
              name: 'アプリの構築: Color Sleuth'
            Possibly use later:
              name: おそらく後で使用
            Unit 5 Assessment 3:
              name: ユニット5 評価3
            Unit 5 Assessment 4:
              name: ユニット5 評価4
            Boolean Expressions and "If" Statements:
              name: ブール式と「if」文
            '"if-else-if" and Conditional Logic':
              name: "「if - else - if」と条件付きロジック"
            'Building an App: Multi-Screen App':
              name: 'アプリの構築: マルチスクリーンアプリ'
            'Building an App: Clicker Game':
              name: 'アプリの構築: クリッカーゲーム'
            'Building an App: Image Scroller':
              name: 'アプリの構築: 画像スクローラー'
            'Building an App: Canvas Painter':
              name: 'アプリの構築: カンバス ペインター'
            Unit 5 Assessment 5 - Practice AP questions:
              name: ユニット5 評価5 - APの問題の練習
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: ユニット5 評価5 - AP疑似コードの練習問題
            CSP Student Post Survey Staging:
              name: CSP 生徒の調査後のステージング
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            CSP Student Post-Course Survey:
              name: CSP生徒向けコース後アンケート
            '"if" Statements Unplugged':
              name: オフラインで学ぶ「If」文
            Boolean Expressions and "if" Statements:
              name: ブール式と「If」文
            Post-Course Survey:
              name: コース終了後アンケート
          student_description: このユニットでは、コンピュータープログラミングの基本的な概念の紹介を続けます。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このコースでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
        csp6:
          lessons:
            Create PT:
              name: PTを作成
            Create PT Prep:
              name: PT準備を作成
            Explore PT:
              name: PTを探索
            Explore PT Prep:
              name: PT準備を探索
            Create PT Prep - Reviewing the Task:
              name: PT準備の作成 - タスクの確認
            Create PT Prep - Making a Plan:
              name: PT準備の作成 - 計画の作成
            Create PT - Complete the Task:
              name: PTの作成 - タスクの完了
            Explore PT Prep - Reviewing the Task:
              name: PT準備の調査 - タスクの確認
            Explore PT - Making a Plan:
              name: PTの探索 - 計画の立案
            Explore PT - Complete the Task:
              name: PTの探索 - タスクの完了
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - APデジタルポートフォリオとその他のツール
            CSP Student Post Survey Staging:
              name: CSP 生徒の調査後のステージング
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            CSP Student Post-Course Survey:
              name: CSP生徒向けコース後アンケート
        CSDU3-Draft:
          description_short: プログラミング
          lessons:
            Booleans and Conditionals:
              name: ブールと条件文
            Collisions:
              name: 衝突
            Complex Conditionals:
              name: 複雑な条件文
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
            Conditionals and Keyboard Input:
              name: 条件文とキーボード入力
            Draw Loop and Randomization:
              name: ループの描画とランダム化
            Drawing in Game Lab:
              name: ゲームラボでの描画
            'Project: Interactive Card':
              name: 'プロジェクト: インタラクティブカード'
            Sprite Movement Methods:
              name: スプライトの移動方法
            Sprites and Images:
              name: スプライトと画像
            Sprites and Properties:
              name: スプライトとプロパティ
            Variables Unplugged:
              name: オフライン変数
            Variables and Animation:
              name: 変数とアニメーション
            Functions:
              name: 関数(かんすう)
            Platform Jumper:
              name: プラットフォーム ジャンパー
            Defender:
              name: ディフェンダー
            'Project: Build a Game':
              name: 'プロジェクト: ゲームの構築'
            Velocity:
              name: 速度
            The Game Design Process:
              name: ゲームデザインプロセス
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
        2016_sciencePD_phase1:
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 複雑な適応システムのエージェントベースのモデリング
            Computational Thinking And The Framework For K-12 Science Education:
              name: コンピュテーショナル・シンキングと幼稚園から高校までの科学教育のフレームワーク
            Dispositions and Classroom Culture:
              name: 性質と教室文化
            Introduction to Complex Adaptive Systems:
              name: 複雑な適応システム入門
            Introduction to Computational Science:
              name: コンピュテーショナル・サイエンス入門
            Introduction to PD:
              name: PD入門
            Introduction to StarLogo Nova:
              name: StarLogo Nova入門
            Post-Survey:
              name: 調査後
            The Tutorial:
              name: チュートリアル
            Using Computer Models in Science:
              name: 科学におけるコンピューターモデルの使用
            Using Models in the Classroom:
              name: 教室でのモデルの使用
            What to Expect:
              name: 期待事項
        TEMP CSD Unit 3:
          description_short: プログラミング
          lessons:
            Drawing in Game Lab:
              name: ゲームラボでの描画
        CSF_Secret_Sample:
          description_audience: 8-18 才
          lessons:
            Sample Stage:
              name: サンプルステージ
        ECSPD1:
          lessons:
            Background and Context:
              name: 背景とコンテキスト
            'Classroom and Workshop Style ':
              name: 教室とワークショップのスタイル
            ECS Curriculum:
              name: ECSカリキュラム
            Welcome to Phase 1!:
              name: フェーズ1へようこそ！
            Wrap Up:
              name: まとめ
            Classroom and workshop style:
              name: 教室とワークショップのスタイル
            'Classroom and workshop style ':
              name: 教室とワークショップのスタイル
        algebraFacilitator:
          lessons:
            Evaluation Blocks:
              name: 評価ブロック
            Introduction to PD:
              name: PD入門
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Why Computer Science belongs in Algebra:
              name: コンピューター サイエンスが代数に属する理由
        sciencePD1:
          lessons:
            Agent Based Modeling of Complex Adaptive Systems:
              name: 複雑な適応システムのエージェントベースのモデリング
            Computational Thinking And The Framework For K-12 Science Education:
              name: コンピュテーショナル・シンキングと幼稚園から高校までの科学教育のフレームワーク
            Dispositions and Classroom Culture:
              name: 性質と教室文化
            Introduction to Complex Adaptive Systems:
              name: 複雑な適応システム入門
            Introduction to Computational Science:
              name: コンピュテーショナル・サイエンス入門
            Introduction to PD:
              name: PD入門
            Introduction to StarLogo Nova:
              name: StarLogo Nova入門
            Post-Survey:
              name: 調査後
            The Tutorial:
              name: チュートリアル
            Using Computer Models in Science:
              name: 科学におけるコンピューターモデルの使用
            Using Models in the Classroom:
              name: 教室でのモデルの使用
            What to Expect:
              name: 期待事項
        cspoptional:
          description_short: オプション
          lessons:
            Algorithms Detour - How Routers Learn:
              name: アルゴリズムの回り道 - ルーターの学習方法
            Algorithms Detour - Minimum Spanning Tree:
              name: アルゴリズムの回り道 - 最小スパニングツリー
            Algorithms Detour - Shortest Path:
              name: アルゴリズムの回り道 - 最短経路
            Unit 1 - Encoding Numbers in the Real World:
              name: ユニット1 - 実世界での数値のエンコード
            Unit 1 - Sending Bits in the Real World:
              name: ユニット1 - 実世界でのビットの送信
            Unit 1 - Algorithms Detour - Minimum Spanning Tree:
              name: ユニット1 - アルゴリズムの回り道 - 最小スパニングツリー
            Unit 1 - Algorithms Detour - Shortest Path:
              name: ユニット1 - アルゴリズムの回り道 - 最短経路
            Unit 1 - How Routers Learn:
              name: ユニット1 - ルーターの学習方法
            Unit 4 - Hard Problems - The Traveling Salesperson Problem:
              name: ユニット4 - 難しい問題 - 出張中の販売員の問題
            Unit 4 - One-Way Functions - The WiFi Hotspot Problem:
              name: ユニット4 - 一方向関数 - WiFiホットスポットの問題
        cspunit1-support:
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Chapter Overviews:
              name: 章の概要
            Encoding and Sending Numbers:
              name: 数値のエンコードと送信
            Intro to the Unit:
              name: ユニットの紹介
            Running a Constructive Classroom:
              name: 建設的な教室を運営する
            Sending Binary Messages:
              name: バイナリ メッセージを送信
            Strategies for Student Writing:
              name: 生徒の記述の戦略
            Supporting Peer Learning:
              name: ピアラーニングのサポート
            'Tool Talk: Intro to Netsim':
              name: 'ツールトーク: NetSimの紹介'
        test-teaching-ap-cs-unit-1:
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            test Unit 1 content module Alpha:
              name: テストユニット1 コンテンツモジュール Alpha
            test Unit 1 content module Bravo:
              name: テストユニット1 コンテンツモジュール Bravo
            test Unit 1 content module Charlie:
              name: テストユニット1 コンテンツモジュール Charlie
            test Unit 1 practice module Delta:
              name: テストユニット1 演習モジュール Delta
            test Unit 1 practice module Echo:
              name: テストユニット1 練習モジュール Echo
            test Unit 1 practice module Foxtrot:
              name: テストユニット1 演習モジュール Foxtrot
            test Unit 1 required reading:
              name: テストユニット1 読み取りが必要
        allthehiddenthings:
          lessons:
            Contained Levels:
              name: 含まれるレベル
            Game Lab:
              name: ゲーム ラボ
        cspunit1-support-test:
          lessons:
            Unit 1 Overview:
              name: ユニット1 概要
        cspunit1-tools:
          lessons:
            netsim:
              name: Netsim
        csp-facilitators:
          lessons:
            Introduction to Events:
              name: イベントの紹介
            Introduction to Text Compression:
              name: テキスト圧縮の紹介
        cspassessment:
          lessons:
            CS Principles Culminating Assessment:
              name: CS原則 最終評価
            CSP Student Post Survey Staging:
              name: CSP 生徒の調査後のステージング
            CSP Longitudinal Contact Request:
              name: CSP 長期的連絡リクエスト
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            "[Deprecated - teacher cannot see results] CSP Culminating Assessment":
              name: "[非推奨 - 先生は結果を見ることができません] CSP最終評価"
            'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment':
              name: '注: 非推奨 - 先生は結果を見ることができません。CSP最終評価'
            'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment':
              name: '注: 非推奨。先生は結果を見ることができません。CSP最終評価'
            RQB Questions test:
              name: RQB質問テスト
        cspexam1-mWU7ilDYM9:
          description_short: この多肢選択式の評価では、コンピューター サイエンスの7つの大きなアイデアにわたる質問を扱います。これは、2部構成の50問試験の第1部です。
          lessons:
            CS Principles Culminating Assessment Part 1:
              name: CS原則 最終評価 パート1
        cspexam2-AKwgAh1ac5:
          description_short: この多肢選択式の評価では、コンピューター サイエンスの7つの大きなアイデアにわたる質問を扱います。これは、2部構成の50問試験の第2部です。
          lessons:
            CS Principles Culminating Assessment Part 2:
              name: CS原則 最終評価 パート2
        CSDU4-Draft:
          lessons:
            Adding Functionality (optional):
              name: 機能の追加 (オプション)
            Design Mode:
              name: 設計モード
            Making it Interactive:
              name: インタラクティブにする
            Analysis of Design:
              name: デザインの分析
            Understanding Your User:
              name: ユーザーを理解する
            Discovering Users:
              name: ユーザーを発見する
            UCD Micro Activity:
              name: UCDマイクロアクティビティ
            Designing for Social Impact:
              name: 社会的影響のための設計
            Conducting User-Centered Interviews:
              name: ユーザー中心のインタビューの実施
            Analyzing Interviews:
              name: インタビューの分析
            Re-designing a Space:
              name: スペースの再設計
            Presenting Your Design:
              name: デザインの提示
            Designing Apps for Good:
              name: 優れたアプリの設計
            Market Research:
              name: 市場調査
            User Research:
              name: ユーザー調査
            Low Fidelity Prototyping:
              name: 低忠実度プロトタイピング
            Preparing for Prototype Testing:
              name: プロトタイプテストの準備
            Prototype Testing:
              name: " プロトタイプテスト"
            Preparing for App Testing:
              name: アプリテストの準備
            App Testing:
              name: アプリのテスト
            Planning for Improvements:
              name: 改善のための計画
            Improving and Iterating:
              name: 改善とイテレーション
            App Presentation Prep:
              name: アプリプレゼンテーションの準備
            App Presentation:
              name: アプリのプレゼンテーション
        CSDU1-Draft:
          description_short: 問題解決
          lessons:
            Exploring Apps:
              name: アプリを探索
            Processing Information:
              name: 処理情報
        CSDU2-Draft:
          lessons:
            Clean Code and Debugging:
              name: クリーンなコードとデバッグ
            Describing Webpages:
              name: ウェブページの説明
            Designing Code for Computers:
              name: コンピューターのコードの設計
            Digital Footprint:
              name: デジタルフットプリント
            Images on the Web:
              name: ウェブ上の画像
            'Personal Website: Finalizing Site':
              name: '個人ウェブサイト: サイトの完成'
            Quality Websites:
              name: 高品質のウェブサイト
            Text on the Web:
              name: ウェブ上のテキスト
            Website Design:
              name: ウェブサイトデザイン
            Intellectual Property:
              name: 知的財産
            Introduction to Styling with CSS:
              name: CSSによるスタイル設定の紹介
            'Personal Website: Connecting Pages':
              name: '個人ウェブサイト: ページの接続'
            Classes and External Style Sheets:
              name: クラスと外部スタイルシート
            Box Model and Page Layout:
              name: ボックスモデルとページレイアウト
            'Personal Website: Midway Check':
              name: '個人ウェブサイト: ミッドウェイチェック'
            Publishing a Website:
              name: ウェブサイトの公開
            Sources and Search Engines:
              name: ソースと検索エンジン
            Introduction to HTML:
              name: HTMLの紹介
            Headers and Lists:
              name: ヘッダーとリスト
            Designing Web Pages:
              name: ウェブページの設計
            Holding:
              name: ホールディング
            Describing Web pages:
              name: ウェブページの説明
            Multi-Page Websites:
              name: マルチページのウェブサイト
            Classes:
              name: クラス
            External Style Sheets:
              name: 外部スタイルシート
            Usability and Accessibility:
              name: 使いやすさとアクセシビリティ
            Peer Review:
              name: ピア ・ レビュー
            Describing Web Pages:
              name: ウェブページの説明
        CSDU5-Draft:
          description_short: データ
        CSF_Secret_Sample_Story:
          description_audience: 8-18 才+
          lessons:
            Sample Stage:
              name: サンプルステージ
        MikeTest:
          description_audience: 8-98 才
          lessons:
            Artist Functions:
              name: アーティスト関数
            Sample Stage:
              name: サンプルステージ
            The same thing with named levels:
              name: 名前付きレベルと同じ
            You are a coding STAR:
              name: あなたはプログラミングスターです
        artistExemplar:
          description_audience: 8-18 才
        teachercon:
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Balancing Teachers and Tools:
              name: 先生とツールのバランスを取る
            Discovery Learning:
              name: 発見学習
            Group Work and Peer Learning:
              name: グループワークとピアラーニング
            Introduction to Teachercon:
              name: Teacherconの紹介
            Lesson 1,10:
              name: 'レッスン1.10: ルーターと冗長性'
            Lesson 1,11:
              name: 'レッスン1.11: パケットと信頼性の高いインターネットの作成'
            Lesson 1,4:
              name: 'レッスン1.4: 数値体系 (円、三角、四角)'
            Lesson 1,6:
              name: 'レッスン1.6: 数値の送信'
            Lesson 1,9:
              name: 'レッスン1.9: インターネットアドレス指定 (戦艦)'
            Lesson 2,10:
              name: 'レッスン2.10: 良いデータと悪いデータの視覚化'
            Lesson 2,2:
              name: 'レッスン2.2: テキスト圧縮'
            Lesson 2,3:
              name: 'レッスン2.3: 白黒のピクセレーション'
            Measuring Student Learning:
              name: 生徒の学習の測定
        kinderTest:
          lessons:
            'Bee: Conditionals':
              name: ビー：条件文
            Kindergarten Stage 1:
              name: 幼稚園ステージ1
        gradeKinder:
          description_audience: 5-18 才
          lessons:
            Being Safe Online:
              name: 安全なオンライン
            Debugging:
              name: デバッギング
            Events:
              name: イベント
            Events Unplugged:
              name: オフラインイベント
            Fuzz Fiesta:
              name: ファズフィエスタ
            'Jigsaw: Learn to drag and drop':
              name: ジグソーパズル：ドラッグ＆ドロップを学びましょう
            Loops:
              name: くりかえし
            Loops Intro:
              name: ループ入門
            Persistence & Frustration:
              name: パーシステンスとフラストレーション
            Programming:
              name: プログラミング
            Programming Unplugged:
              name: オフラインのプログラミング
            Sequences & Algorithms:
              name: シーケンスとアルゴリズム
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            'Programming Unplugged: Happy Maps':
              name: 'オフラインプログラミング: ハッピーマップ'
        grade4:
          description_audience: 9才-99才
          lessons:
            'Bee: Determine the Concept':
              name: 'みつばち: コンセプトを決定する'
            'Bee: Functions (Course 3)':
              name: 'みつばち: 関数 (コース3)'
            Build a Star Wars Game!:
              name: スター・ウォーズのゲームを作ろう！
            Digital Citizenship:
              name: デジタル シティズンシップ
            Explore project ideas:
              name: プロジェクトのアイデアを探す
            'Farmer: Functions (New)':
              name: '農夫: 関数 (新規)'
            Final Project - Presentation Day:
              name: 最終プロジェクト - プレゼンテーションの日
            'Final Project - Unplugged: Design Process':
              name: '最終プロジェクト - オフライン: 設計プロセス'
            'Final Project - Work Day: Build Project Online':
              name: '最終プロジェクト - 作業日: オンラインでプロジェクトを構築'
            More Programming with Scratch:
              name: Scratchでもっとプログラミング
            'New Artist: Functions':
              name: '新しいアーティスト: 関数'
            Scaffolded Project Stage (Loops, Events, Conditionals, Functions):
              name: 足場プロジェクトステージ (ループ、イベント、条件、関数)
            Songwriting:
              name: 作詞作曲
            'Unplugged: Funky Functions':
              name: 'オフライン: ファンキーな関数'
        grade1:
          description_audience: 5-18 才
          lessons:
            Being Safe Online:
              name: 安全なオンライン
            Debugging:
              name: デバッギング
            Events:
              name: イベント
            Events Unplugged:
              name: オフラインイベント
            'Jigsaw: Learn to drag and drop':
              name: ジグソーパズル：ドラッグ＆ドロップを学びましょう
            Loops:
              name: くりかえし
            Loops Intro:
              name: ループ入門
            More Computer Science:
              name: その他のコンピューター サイエンス
            Persistence & Frustration:
              name: パーシステンスとフラストレーション
            Programming:
              name: プログラミング
            Programming Unplugged:
              name: オフラインのプログラミング
            Sequences & Algorithms:
              name: シーケンスとアルゴリズム
            Unspotted Bugs:
              name: 気づかれていないバグ
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
            'Events Unplugged: The Big Event':
              name: 'オフラインイベント: ビッグイベント'
        grade5:
          description_audience: 10才-110才
          lessons:
            'Artist: For Loops':
              name: アーティスト：ループ
            'Artist: Functions with Parameters':
              name: アーティスト：関数とパラメータ
            'Artist: Variables':
              name: アーティスト：変数（へんすう）
            'Bee: For Loops':
              name: みつばち：ループ
            'Bee: Functions with Parameters':
              name: みつばち：パラメーター付き関数
            Digital Citizenship:
              name: デジタル シティズンシップ
            Explore project ideas:
              name: プロジェクトのアイデアを探す
            Final Project - Presentation Day:
              name: 最終プロジェクト - プレゼンテーションの日
            Final Project - Review/Revise Day:
              name: 最終プロジェクト - レビュー/改訂日
            'Final Project - Unplugged: Design Process':
              name: '最終プロジェクト - オフライン: 設計プロセス'
            'Final Project - Work Day: Build Project Online':
              name: '最終プロジェクト - 作業日: オンラインでプロジェクトを構築'
            'Play Lab: Variables':
              name: プレイラボ：変数
            Try programming with Khan Academy:
              name: カーンアカデミーでプログラミングを試す
            'Unplugged: Envelope Variables':
              name: 'アンプラグド: 変数'
            'Unplugged: For Loop Fun':
              name: アンプラグド：ループ
            'Unplugged: Songwriting with Parameters':
              name: 'アンプラグド: 作曲'
        ecs-unit1:
          lessons:
            Unit 1, Day 10 Telling a Story with Data:
              name: ユニット1、10日目 データでストーリーを伝える
            Unit 1, Day 11-14 Data Modeling and Design:
              name: ユニット1、11～14日目 データのモデリングと設計
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: ユニット1、15～16日目 コンピューター プログラムと指示の順守
            Unit 1, Day 17-19 What Is Intelligence?:
              name: ユニット1、17～19日目 インテリジェンスとは？
            Unit 1, Days 3-4 Buying a Computer:
              name: ユニット1、3～4日目 コンピューターの購入
            Unit 1, Days 5-7 Searching and Web 2:
              name: ユニット1、5～7日目 検索およびウェブ 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: ユニット1、8～9日目 コンピューターと通信の影響
            Welcome!:
              name: ようこそ!
            Wrap-up:
              name: ラップアップ
            Unit 1, Days 1-2 What Is a Computer?:
              name: ユニット1、1～2日コンピューターとは？
        ecs-unit2:
          lessons:
            Close & Next Steps:
              name: 閉じると次の手順
            Getting Started:
              name: 使用開始
            Intro to Unit 2:
              name: ユニット2の紹介
            Lesson Overviews:
              name: レッスンの概要
            Teaching Strategies:
              name: 指導戦略
            Unit 2 Challenge:
              name: ユニット2 チャレンジ
        ecs-unit3:
          lessons:
            Close & Next Steps:
              name: 閉じると次の手順
            Getting Started:
              name: 使用開始
            Intro to Unit 3:
              name: ユニット3の紹介
            Teaching Strategies:
              name: 指導戦略
            Unit 3 Challenge:
              name: ユニット3 チャレンジ
            Unit 3 Day-by-Day:
              name: ユニット3 毎日
        ecs-unit4:
          description: "(old) Unit 4: プログラミング"
          description_short: "(old) Unit 4: プログラミング"
          lessons:
            Close & Next Steps:
              name: 閉じると次の手順
            Getting Started:
              name: 使用開始
            Intro to Unit 4:
              name: ユニット4の紹介
            Teaching Strategies:
              name: 指導戦略
            Unit 4 Challenge:
              name: ユニット4 チャレンジ
            Unit 4 Day-by-Day:
              name: ユニット4 毎日
          student_description: "(old) Unit 4: プログラミング"
        ecs-unit5:
          lessons:
            Complete the Challenge:
              name: チャレンジを完了する
            Getting Started:
              name: 使用開始
            Introduction to the Unit 5 Challenge:
              name: ユニット5チャレンジの紹介
            Share out and Submit:
              name: 共有して送信
            Unit 5 Overview:
              name: ユニット5 概要
            Unit 5 lessons:
              name: ユニット5 レッスン
            Unit 5 Challenge:
              name: ユニット5 チャレンジ
            Close & Next Steps:
              name: 閉じると次の手順
        ecs-unit6:
          lessons:
            Alternative Ideas for Unit 6:
              name: ユニット6の代替案
            Getting Started:
              name: 使用開始
            Share out and Submit:
              name: 共有して送信
            Unit 6 Challenge:
              name: ユニット6 チャレンジ
            Unit 6 Overview:
              name: ユニット6 概要
            Unit 6 lessons:
              name: ユニット6 レッスン
            Close & Next Steps:
              name: 閉じると次の手順
        grade3:
          description_audience: 5-18 才
          lessons:
            " Bee: Conditionals":
              name: 'みつばち: 条件文'
            'Artist: Nested Loops':
              name: アーティスト：入れ子のループ
            Bee Debugging:
              name: みつばち デバッグ
            Bounce:
              name: バウンド
            Build a Game:
              name: ゲームの構築
            Farmer Conditional with Cards:
              name: カードを使った農夫の条件文
            Farmer Debug Relay Programming:
              name: 農夫デバッグリレープログラミング
            Farmer Graph Paper Programming:
              name: 農夫グラフ用紙プログラミング
            Farmer Impacts of Computing:
              name: コンピューティングの農夫への影響
            'Farmer: While Loops':
              name: '農夫: While Loops'
            'Maze: Conditionals with Loops':
              name: '迷路: 条件文とループ'
            'Maze: Nested Loops':
              name: '迷路: 入れ子のループ'
            More Programming with CS4FN:
              name: CS4FNによるその他のプログラミング
            Robot Running the Farm:
              name: 農場を動かすロボット
            Unplugged Conditionals with Loops:
              name: オフラインの条件文とループ
        alltheplcthings:
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Balancing Teachers and Tools:
              name: 先生とツールのバランスを取る
            Group Work and Peer Learning:
              name: グループワークとピアラーニング
            Introduction to Teachercon:
              name: Teacherconの紹介
            Lesson 1,10:
              name: レッスン1,10
            Lesson 1,11:
              name: レッスン1,11
            Lesson 1,4:
              name: レッスン1,4
            Lesson 1,6:
              name: レッスン1,6
            Lesson 1,9:
              name: レッスン1,9
            Lesson 2,10:
              name: レッスン2,10
            Lesson 2,2:
              name: レッスン2,2
            Lesson 2,3:
              name: レッスン2,3
            Test stage with bubbles:
              name: バブルのテスト段階
        csd3-2017:
          title: CSDユニット3 - アニメーションとゲーム ('17～'18)
          description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
          lesson_groups:
            csd3_1:
              display_name: '第 1 章: 画像とアニメーション'
            csd3_2:
              display_name: '第2章: ゲームを作る'
            cspSurvey:
              display_name: アンケート
            csd_survey:
              display_name: コース終了後アンケート
          lessons:
            Booleans and Conditionals:
              name: ブールと条件文
            Complex Conditionals:
              name: 複雑な条件文
            Conditionals and Keyboard Input:
              name: 条件文とキーボード入力
            Draw Loop and Randomization:
              name: ループの描画とランダム化
            Drawing in Game Lab:
              name: ゲームラボでの描画
              description_student: このクラスは、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。このレッスンでは、シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンの最後に、クラスは前のレッスンで設計したイメージのオンラインバージョンを作成します。
              description_teacher: 生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。
            'Project: Interactive Card':
              name: 'プロジェクト: インタラクティブカード'
            Sprites and Images:
              name: スプライトと画像
            Sprites and Properties:
              name: スプライトとプロパティ
            Variables Unplugged:
              name: オフライン変数
            Variables and Animation:
              name: 変数とアニメーション
            Velocity:
              name: 速度
              description_student: カウンターパターンを使ってスプライトを移動させる方法を簡単に確認した後、クラスは速度と回転速度を直接設定するプロパティを学びます。生徒はさまざまな方法でこの新しいプロパティを使用しながら、基本的な横スクロールゲームを作成するために必要なスキルを身につけていきます。
              description_teacher: 前のレッスンで学んだ、カウンターパターンを使ってスプライトを移動させる方法を簡単に確認した後、生徒は速度と回転速度を直接設定するプロパティを学びます。生徒はさまざまな方法でこの新しいプロパティを使用しながら、基本的な横スクロールゲームを作成するために必要なスキルを身につけていきます。
            Collision Detection:
              description_student: このクラスでは、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、クラスはisTouching()ブロックを使って、サウンドの再生など、スプライトが衝突した時に生み出されるさまざまな効果を作成します。最後に、新しいスキルを使って、前回のレッスンで作成を開始したサイドスクローラーゲームを改善します。
              description_teacher: 生徒は、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、生徒は「isTouching()」ブロックを使って、サウンドの再生など、スプライトが衝突した時に生み出されるさまざまな効果を作成します。最後に、新しいスキルを使って、前回のレッスンで作成を開始したサイドスクローラーゲームを改善します。
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
              description_student: このクラスでは、スプライトの速度プロパティをカウンターパターンと組み合わせて、重力をシミュレートしたり、スプライトをジャンプさせたり、スプライトが左または右へ浮かせたりする、より複雑なスプライトの動きを作成する方法を学習します。最終レベルでは、クラスはこれらの動きを組み合わせて1つのスプライトをアニメーション化して制御し、キャラクターが飛び回ってコインを収集するシンプルなゲームを作成します。
              description_teacher: 生徒は、スプライトの速度プロパティをカウンターパターンと組み合わせて、より複雑なスプライトの動きを作成する方法を学びます。特に、重力をシミュレートし、スプライトをジャンプさせ、スプライトを左または右に浮かせる方法を学びます。Code
                Studioの最終レベルでは、生徒はこれらの動きを組み合わせて1つのスプライトをアニメーション化して制御し、キャラクターが飛び回ってコインを収集するシンプルなゲームを作成します。生徒は、最終レベルで、ゲームに自分なりの工夫を加えるよう促されます。
            Collisions:
              name: 衝突
              description_student: クラスは、新しい方法で相互作用するようにスプライトをプログラムします。 isTouchingブロックの使用方法を簡単に確認した後、クラスは2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (collide、displace、bounce、bounceOff) を使う練習をします。
              description_teacher: 生徒は、新しい方法で相互作用するようにスプライトをプログラムします。 「isTouching」ブロックの使用方法を簡単に確認した後、生徒は2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (「collide」、「displace」、「bounce」、「bounceOff」) を使う練習をします。
            Functions:
              name: 関数(かんすう)
              description_student: このレッスンでは、プログラムを整理して読みやすくする方法として関数を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。クラスは、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。レッスンの最後に、クラスはこれらのスキルを使って、サイドスクローラーゲームの最終バージョンを用意し、機能を追加します。
              description_teacher: 生徒は、プログラムを整理して読みやすくするための関数を作成する方法を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。オフラインで行うウォームアップでは、コンテキストに応じて、さまざまな詳細レベルの指示がどのように役立つかを探ります。生徒は、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。生徒は関数を使って、コードの長いブロックを描画ループから削除し、繰り返しのコードを1つの関数に置き換えます。レッスンの終わりに、生徒はこれらのスキルを使って、サイドスクローラーゲームの最終バージョンを用意し、機能を追加します。
            The Game Design Process:
              name: ゲームデザインプロセス
              description_student: このレッスンでは、クラスはユニットの残りの部分のためのゲームを設計するのに使うプロセスを紹介します。クラスは、このプロセスを一連のレベルで学習します。このレッスンの一環として、クラスはゲームラボでマルチフレームアニメーションの使い方を簡単に学びます。レッスンの最後に、ゲームを改良して独自のゲームにする機会があります。
              description_teacher: このレッスンでは、ユニットの残りの部分のためのゲームを設計するのに使うプロセスを生徒に紹介します。このプロセスはプロジェクトガイドを中心に据え、生徒はゲームのプログラミングを始める前に、スプライト、変数、関数を定義するように求められます。このレッスンでは、プログラムが非表示になっているゲームラボでゲームをプレイすることから始め、ゲームを作成するためにどのようなスプライト、変数、関数が必要と考えるかについて話し合います。次に、配布される完全なプロジェクトガイドには、ゲームを実装する方法が1つ示されています。そして、生徒はこのプロセスを一連のレベルで学習します。このレッスンの一環として、生徒はゲームラボでマルチフレームアニメーションの使い方を簡単に学びます。レッスンの最後に、生徒はゲームを改良して独自のものにする機会があります。
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
              description_student: この2日以上かけて行うレッスンでは、クラスはユニット1の問題解決プロセスを使って、プラットフォーム
                ジャンパーゲームを作成します。サンプルゲームを見た後、クラスはどのようなゲームにしたいかを明確にし、構造化されたプロセスを使ってゲームを構築します。最後に、クラスはゲームをどのように改善できるかを考え、変更を加えていきます。
              description_teacher: この2日以上かけて行うレッスンでは、ユニット1の問題解決プロセスを使って、プラットフォーム ジャンパーゲームを作成します。まず、プラットフォーム
                ジャンパーの例を見てから、どのようなゲームにしたいかを明確にします。次に、構造化されたプロセスを使って、ゲームの実装に必要な背景、変数、スプライト、関数を計画します。ゲームのプログラムを書いた後、生徒はゲームをどのように改善できるかを振り返り、変更を加えていきます。
            'Project: Build a Game':
              name: 'プロジェクト: ゲームの構築'
            'Project: Design a Game':
              name: 'プロジェクト: ゲームを設計する'
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
              description_student: クラスは退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。
              description_teacher: 生徒は退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。
            Plotting Shapes:
              name: 形状のプロット
              description_student: 生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。
              description_teacher: 生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。
            Shapes and Randomness:
              name: 形状とランダム性
              description_student: このレッスンでは、描画スキルを高めて幅と高さを取り入れ、乱数生成の概念を説明します。このクラスでは、幅と高さのパラメータを含むellipse()
                とrect() のバージョンを使って描画し、background() ブロックを使って画面を色で塗りつぶすことを学習します。レッスンの最後に、randomNumber()
                ブロックを学習し、新しいブロックを使ってランダム化された虹色のヘビを描画します。
              description_teacher: このレッスンでは、生徒は描画スキルを引き続き磨きます。レッスンの始めに、先生が主導する形でディスカッションを行い、ブロック機能
                (たとえば、異なるサイズの形状) を拡張するには、なぜブロック入力 (または「パラメータ」) がもっと必要になるのかを考えます。生徒は、幅と高さのパラメータを含む「ellipse()」と「rect()」のバージョンで描画する方法を学び、さらに「background()」ブロックの使い方も学びます。レッスンの終わりに、「randomNumber()」ブロックを学習し、これらのスキルをすべて組み合わせて、ランダム化された虹色のヘビを描画します。
            Variables:
              name: 変数（へんすう）
              description_student: このレッスンでは、プログラムで数値にラベルを付ける方法、またはランダムに生成された値を保存する方法として変数を導入します。クラスは、変数の目的の非常に基本的な説明と新しいブロックの使用方法からレッスンを開始します。その後、クラスは変数を使って乱数を保存し、プログラムが同じ乱数を複数回使用できるようにします。
              description_teacher: このレッスンでは、変数を使ってプログラム内の数値にラベルを付ける方法、またはランダムに生成された値を保存する方法を学習します。生徒は、変数の目的の非常に基本的な説明からレッスンを始めます。次のレベルでは、生徒は、変数を数値のラベルまたは名前を付ける方法とするモデルを学習します。生徒は変数を使って乱数を保存し、変数が実際に値を保存することを確認します。これにより、プログラム内で同じ乱数を複数回使用できるようになります。
            Sprites:
              name: スプライト
              description_student: より興味深く、詳細な画像を作成するために、クラスはスプライトオブジェクトの説明を受けます。すべてのスプライトに表示する画像を割り当てることができ、スプライトは自身に関する複数の値も追跡するため、アニメーションを作成するときに便利です。レッスンの終わりに、全員がスプライトを使ってシーンを作成します。
              description_teacher: より興味深く、詳細な画像を作成するために、生徒はスプライトオブジェクトの説明を受けます。すべてのスプライトに表示する画像を割り当てることができ、スプライトは自身に関する複数の値も追跡するため、アニメーションを作成するときに便利です。
            The Draw Loop:
              description_student: このレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。このクラスは、描画ループと乱数を組み合わせて、いくつかの単純なアニメーションをドットで、次にスプライトで操作します。その後、学習した内容を使って、前のレッスンのスプライトシーンを更新します。
              description_teacher: このレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。レッスンを開始するために、生徒はパラパラ漫画を見て、さまざまなイメージを持つフレームが数多くあると、動いているかのような印象が生まれることを確認します。次に、生徒は、ゲームラボの描画ループが、プログラムでこれと同じ印象を生み出すのにどのように役立つかを説明するビデオを視聴します。生徒は、描画ループと乱数を組み合わせて、単純なアニメーションをドットで、次にスプライトで操作します。レッスンの最後に、生徒は学習した内容を使って、前のレッスンのスプライトシーンを更新します。
            The Counter Pattern Unplugged:
              name: オフラインのカウンターパターン
              description_student: このオフラインレッスンでは、変数の基本的な働きを探ります。ノートカードと文字列を使ってプログラム内の変数をシミュレートすることにより、クラスは短いプログラムをいくつか実装します。この構文に慣れたら、クラスは同じプロセスをスプライトプロパティで使って、画面全体のスプライトの進行状況を追跡します。
              description_teacher: 生徒は、オフラインアクティビティを通じて変数の基本的な働きを探ります。プログラム内の変数をシミュレートするためにノートカードと文字列を使って、生徒は短いプログラムをいくつか実装します。この構文に慣れたら、生徒はスプライトプロパティで同じプロセスを使って、画面全体でスプライトの進行状況を追跡します。
            Sprite Movement:
              name: スプライトの動き
              description_student: 描画ループとカウンターパターンを組み合わせることにより、クラスはスプライトを画面上で移動させたり、他のスプライトプロパティをアニメーション化したりするプログラムを作成します。
              description_teacher: 描画ループとカウンターパターンを組み合わせることにより、生徒はスプライトを画面上で移動させたり、他のスプライトプロパティをアニメーション化したりするプログラムを作成します。
            Conditionals:
              name: 条件
              description_student: クラスは、ブール値を使ってスプライトプロパティの現在の値をターゲット値と比較し、その比較結果を使って、スプライトが画面上のある地点に達したか、指定されたサイズになったか、またはカウンターパターンを使って値に達したかを判断します。ブール値を直接使って値またはスプライトプロパティを調べた後、クラスはif条件文を追加して、このブール値の比較に応答するプログラムを作成します。
              description_teacher: 生徒は、ブール値を使ってスプライトプロパティの現在の値をターゲット値と比較し、その比較結果を使って、スプライトが画面上のある地点に達したか、指定されたサイズになったか、またはカウンターパターンを使って値に達したかを判断します。ブール値を直接使って値またはスプライトプロパティを調べた後、生徒はif条件文を追加して、このブール値の比較に応答するプログラムを作成します。
            Keyboard Input:
              name: キーボード入力
              description_student: 前のレッスンのブール文と条件文の紹介に続いて、keyDown() という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。
              description_teacher: 前のレッスンのブール文と条件文の紹介に続いて、「keyDown()」という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。
            Other Forms of Input:
              name: その他の入力形式
              description_student: このクラスでは、条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純なkeyDown()
                コマンドに加えて、クラスは他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
              description_teacher: このレッスンでは、生徒は条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純な「keyDown()」コマンドに加えて、生徒は他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
            Booleans Unplugged:
              name: オフラインのブール
              description_student: このレッスンでは、ブール値と論理、および条件文を紹介します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。次に、クラスは、ますます複雑になるブール文に基づいてオブジェクトをグループ化し、条件文がプログラムのフローにどのように影響するかを調べます。
              description_teacher: このレッスンでは、ブール値と論理、および条件文について学習します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。これにより、生徒は複数の潜在的な値
                (年齢など) を持つプロパティをバイナリ質問でどのように構成できるかについて考えます。次に生徒には、類似しているが変化する物理的特性を持つオブジェクトのグループが示されます。パートナーと一緒に、ますます複雑になるブール文
                (ANDおよびORを使用した複合ブールを含む) に基づいてこのようなオブジェクトをグループ化します。最後に、ツールとしての条件文を説明し、ブール文を入力情報にして、プログラムの流れを決定したり、影響を与えたりします。
            Project - Interactive Card:
              name: プロジェクト - インタラクティブカード
              description_student: 第1章のこのまとめプロジェクトでは、クラスは、これまでに学んだすべてのプログラミング手法を使って、インタラクティブなグリーティングカードを計画および開発します。
              description_teacher: 第1章のこのまとめプロジェクトでは、生徒は、これまでに学んだすべてのプログラミング手法を使って、インタラクティブなグリーティングカードを計画および開発します。
            Project - Design a Game:
              name: プロジェクト - ゲームの設計
              description_student: クラスでは、前の2つのレッスンのプロジェクトガイドを使って、オリジナルのゲームを計画および構築します。個別またはペアで作業して、クラスはゲームの計画、開発し、フィードバックを行います。ピアフィードバックをゲーム組み込んだ後、クラスは完成したゲームを共有します。
              description_teacher: 生徒は、前の2つのレッスンのプロジェクトガイドを手引きに使って独自のゲームを計画および構築します。生徒は個別にまたはペアで作業し、サンプルゲームのセットからインスピレーションを得て、構築するゲームの種類を最初に決定します。次に、空白のプロジェクトガイドを記入します。その中で、ゲームの動作を説明し、作成する必要がある変数、スプライト、関数を詳しく調べます。Code
                Studioでは、一連のレベルで、この計画を実装するために使用できる一般的なシーケンスを示します。プロセスの途中で、生徒は自分のプロジェクトを共有してピアレビューに回し、ゲームを完成させながらフィードバックを組み込みます。レッスンの最後に、生徒は完成したゲームをクラスメートと共有します。このプロジェクトは複数のクラスにまたがり、3～5クラス分の時間がかかることも多々あります。
            Parameters and Randomization:
              name: パラメータとランダム化
            Shapes and Randomization:
              name: 形状とランダム化
            CS Discoveries End of Semester Survey:
              name: CS発見期末アンケート
            CSD Post-Course Survey:
              name: CSDコース後アンケート
          student_description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
        grade2:
          description_audience: 5-18 才
          lessons:
            At The Dog Park:
              name: ドッグパークにて
            Caring for My New Pet:
              name: 新しいペットの世話
            Exploring the Neighborhood:
              name: 近所を探索
            Flappy:
              name: フラッピー
            Getting Loopy with Puppy:
              name: 子犬でルーピーをゲット
            Make a Dog Tag:
              name: ドッグタグを作る
            More CS with Run Marco:
              name: 走れマルコで学ぶその他のCS
            New Home for My Pet:
              name: ペットのための新しい家
            Online Internet Safety:
              name: オンラインインターネットの安全性
            Online My New Pet Jigsaw:
              name: オンライン新しいペットのジグソーパズル
            Puppy Event:
              name: 子犬イベント
            Puppy Introduction:
              name: 子犬紹介
            Puppy Loops:
              name: 子犬ループ
            How to behave in the lab_How to use Code_org puzzles:
              name: ラボでの振る舞い方/Code.orgパズルの使用方法
            Programming at home with my pet:
              name: ペットと一緒に自宅でプログラミング
            Binary Bracelets:
              name: バイナリ ブレスレット
            'Real-life Algorithms: Paper Planes':
              name: '現実世界のアルゴリズム: 紙飛行機'
            The Big Event:
              name: ビッグイベント
        transferring-over:
          lessons:
            20-hr Stage 2:
              name: 20時間のステージ2
            20-hr Stage 9:
              name: 20時間のステージ9
            Course 2 Stage 17:
              name: コース2 ステージ17
            Course 3 Stage 16:
              name: コース3 ステージ16
            Course 3 Stage 17:
              name: コース3ステージ17
        k5concepts:
          lessons:
            Binary:
              name: ２しんすう
            Conditionals:
              name: 条件
            Events:
              name: イベント
            For Loops:
              name: ループ用
            Functions:
              name: 関数(かんすう)
            Functions with Parameters:
              name: パラメーター付き関数
            Loops:
              name: くりかえし
            Nested Loops:
              name: 入れ子のループ
            Variables:
              name: 変数（へんすう）
            While Loops:
              name: Whileループ
        algebrapdnext:
          lessons:
            Lesson Prep:
              name: レッスン準備
            Teacher Dashboard:
              name: 先生用のダッシュボード
            Teaching with Puzzles:
              name: パズルで教える
            Teaching with the Design Recipe:
              name: デザインレシピで教える
            The Design Recipe:
              name: 設計レシピ
            Welcome!:
              name: ようこそ!
        csp-pre-survey:
          lessons:
            Anonymous student pre-survey:
              name: 生徒向け匿名事前アンケート
            NEW Unit 1 Chapter 1 Assessment:
              name: 新 ユニット1 第1章 評価
            Unit 1 Chapter 1 Assessment:
              name: ユニット1 第1章 評価
            Unit 3 Chapter 1 Assessment:
              name: ユニット3 第1章 評価
            Unit 4 Chapter 1 Assessment:
              name: ユニット4 第1章 評価
            'Anonymous student survey: Taking the AP exam':
              name: '生徒向け匿名アンケート: AP試験を受ける'
        csd1-2017:
          title: CSDユニット1 - 問題解決 ('17～'18)
          description_short: 人が問題を解決するためにコンピューターを使ってどのように作業をするかを学びます。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csd1_1:
              display_name: '第 1章: 問題解決プロセス'
            csd1_2:
              display_name: 第 2 章コンピューターと問題解決
          lessons:
            Intro to Problem Solving:
              name: 問題解決入門
              description_student: クラスはグループで作業し、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。
              description_teacher: このレッスンでは、生徒がグループで作業して、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。ボートの設計は2ラウンドあり、ラウンド1よりも多くのコインを載せることを目指します。アクティビティは、以降のレッスンで問題解決プロセスのさまざまな手順をより詳細に学ぶことが分かるように組み立てられています。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: このレッスンでは、クラスが年間を通して使用する正式な問題解決プロセスである、定義 - 準備 -
                試行 - 反映を紹介します。クラスは、この手順を前のレッスンのアルミ製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。
              description_teacher: このレッスンでは、生徒が年間を通して使用する正式な問題解決プロセスである、定義 - 準備 -
                試行 - 反映を紹介します。レッスンは、生徒が日常生活で遭遇するさまざまな種類の問題すべてについてブレインストーミングを行うように求めることから始まります。次に、生徒は問題解決プロセスの4つの手順を示し、協力してこの抽象的な手順を問題解決の実際の経験に関連付けます。最初の生徒は、この手順を前のレッスンのアルミニウム製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。
            Exploring Problem Solving:
              name: 問題解決の探求
              description_student: このレッスンでは、クラスは問題解決プロセスを、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。
              description_teacher: "このレッスンでは、各手順の重要性をよりよく理解するために、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に問題解決プロセスを適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。レッスンは、生徒たちが問題解決プロセスでの経験を振り返って締めくくります。往々にしてこれは最も重要な手順であるため、各手順をなぜ含めるのかを考え、自由回答式の問題により良く対処するのに役立つ戦略や問題についてブレインストーミングします。\\\r\\\r最初の2つの問題は2クラス分に収まるかもしれませんが、3番目の問題は2日目に取り組む必要があるでしょう。"
            What is a Computer?:
              description_student: このレッスンでは、クラスでコンピューターの予備的な定義を作成します。コンピューターの考えられる定義についてブレインストーミングを行った後、クラスはグループで作業し、ポスター用紙で写真を「コンピューターである」または「コンピューターではない」に分類し、最も難しいカテゴリのいくつかを選択する動機を説明します。次に、先生はコンピューターの定義を導入し、グループが新しい定義に従ってポスターを修正できるようにします。
              description_teacher: このレッスンでは、生徒は「コンピューター」とは何かを考えます。レッスンを開始したら、コンピューターの考えられる定義をブレインストーミングし、このブレインストーミングの結果をボードに配置します。次に、生徒はグループで作業して、ポスター用紙で写真を「コンピューター」か「コンピューターではない」かに分類します。グループはポスターを部屋の周りに配置し、なぜそのように分類したかを簡単に説明します。次に、先生はコンピューターの定義を紹介し、生徒に新しい定義に従ってポスターを修正してもらいます。
            Representing Information:
              name: 情報の表現
            Processing with Bits:
              name: ビットによる処理
            Human vs. Computer Processing:
              name: 人間対コンピューター処理
            Processing with Apps:
              name: アプリを使った処理
            'Project: Apps and Problem Solving':
              name: 'プロジェクト: アプリと問題解決'
            Human vs Computer Processing:
              name: 人間対コンピューター処理
            Input and Output:
              name: 入出力
              description_student: 生徒はこのクラスで、いくつものコンピューティングデバイスについて考え、使用する入力と出力のタイプを決定します。グループには1つのコンピューティングデバイスが割り当てられ、先生が示す入力と出力の定義に基づいて、デバイスの入力と出力をリストします。レッスンの最後に、コンピューティングデバイスで一般的にどのような操作をするかを検討し、その操作に使用する入力と出力をグラフから選択します。
              description_teacher: 生徒はこのレッスンで、いくつものコンピューティングデバイスについて考え、使用する入力と出力のタイプを決定します。グループには1つのコンピューティングデバイスが割り当てられ、先生が示す入力と出力の定義に基づいて、デバイスの入力と出力をリストします。アクティビティの前半では、より明白な物理的な入力と出力
                (たとえば、入力としてのキーボードまたは出力としての画面) に注目するように促されますが、後半の話し合いでは、あまり明白でない例 (たとえば、タッチスクリーンは入力であると同時に出力でもあること、またはインターネットが入力と出力の両方として機能できるという事実)
                を検討していきます。レッスン全体を通じて、先生は教壇に掲げたTチャートに、特定した入力と出力を記録していきます。レッスンの最後に、コンピューティングデバイスで一般的にどのような操作をするかを検討し、その操作に使用する入力と出力をグラフから選択します。
            Processing:
              name: 処理
              description_student: このレッスンでは、コンピューターの定義の一部として紹介した「処理」について詳しく説明します。ペアになって力を合わせて、情報処理の1つの形式になるよう一連のカードを順番に並べます。最後に、クラスは、情報の問題を解決する文脈の中で、処理が何を意味するかについて話し合います。
              description_teacher: 生徒は、オフラインで行う2つのカード分類アクティビティを行い、処理の意味と問題解決との関係を探ります。最初のアクティビティには制約がほとんどなく、「処理」を大まかに定義するのに用います。次により多くの制約を付け、生徒に常にカードを正常に処理するアルゴリズムを開発してもらいます。生徒はアルゴリズムを繰り返し開発、テスト、クラスメートと共有します。最後のディスカッションでは、アクティビティで使用したさまざまな種類の問題解決法を振り返り、問題解決にアルゴリズムを作成することの意義について考えます。
            Storage:
              name: ストレージ
              description_student: このレッスンでは、情報処理のうち、コンピューターの定義の「ストレージコンポーネント」に焦点を当てます。このクラスでは、情報を処理するアルゴリズムを開発および共有することにレッスンの大部分を費やします。その際、特定のアルゴリズムにどれだけのストレージが必要かに重点を置きます。このレッスンの最後に、情報を処理する際のストレージの重要性について話し合います。
              description_teacher: 生徒は、コンピューターの入力 - ストレージ - 処理 - 出力モデルの中で、ストレージの重要性について詳しく見ていきます。ウォームアップアクティビティでは、ドキュメント、写真、ビデオなど、コンピューターが過去に保存した情報の種類について考えます。オフラインメインのアクティビティでは、デッキ内の特定のカードを求めてカードの小さな山を処理するアルゴリズムを開発してもらいます。生徒がカードを移動させる際に制約があることから、デッキを処理する間でも、ストレージの重要性を考えることになります。レッスンの最後に、このレッスンで生徒が見た2種類のストレージと、情報を処理する際のストレージの重要性について話し合います。
            Apps and Problem Solving:
              name: アプリと問題解決
              description_student: このレッスンでは、生徒にとって身近なコンピューターに関連するコンテキスト（つまりアプリ) で、コンピューターの入力と出力の側面について説明します。このクラスでは、さまざまなウェブアプリケーションを評価して、解決できるように設計された特定の問題、アプリが機能するために必要な入力、およびアプリからユーザーに示される出力を詳しく見ていきます。クラスの最後には、アプリを観察して、アプリが社会に与える影響について先生が主導する形で話し合います。
              description_teacher: このレッスンでは、生徒にとって身近なコンピューターに関連するコンテキスト（つまりアプリ) で、コンピューターの入力と出力の側面について説明します。生徒はペアになって、さまざまなウェブアプリケーションを評価して、解決できるように設計された特定の問題、アプリが機能するために必要な入力、およびアプリからユーザーに示される出力を詳しく見ていきます。クラスの最後には、アプリを観察して、アプリが社会に与える影響について先生が主導する形で話し合います。
            Project - Propose an App:
              name: プロジェクト - アプリの提案
              description_student: 問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、このクラスでは、実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、各アプリの機能を紹介するポスターのプレゼンテーションでクライマックスを迎えます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。
              description_teacher: 問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、生徒は実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、アプリの機能を紹介するポスターを作成して、クラスメートに示します。プロジェクトガイドにはステップバイステップの指示が示され、生徒が自分の考えを整理するのに役立ちます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。
            CS Discoveries Pre-survey:
              name: CS発見の事前アンケート
            CS Discoveries Rapid Survey:
              name: CS発見 手短なアンケート
        csp-online-test:
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Unit 1 Overview:
              name: ユニット1 概要
            'Lessons 2-3: Binary Messages':
              name: 'レッスン2-3: バイナリメッセージ'
            Group Work and Peer Learning:
              name: グループワークとピアラーニング
            Balancing Teachers and Tools:
              name: 先生とツールのバランスを取る
            Discovery Learning:
              name: 発見学習
            Measuring Student Learning:
              name: 生徒の学習の測定
            'Lessons 4-6: Encoding and Sending Numbers':
              name: 'レッスン4～6: 数値のエンコードと送信'
            'Lesson 7: Encoding and Sending Text':
              name: 'レッスン7: テキストのエンコードと送信'
            'lessons 9: Internet Addressing':
              name: 'レッスン9: インターネットのアドレス指定'
            'lessons 10: Routers and Redundancy':
              name: 'レッスン10: ルーターと冗長性'
            'lessons 11-12: Protocols and Abstraction':
              name: 'レッスン11～12: プロトコルと抽象化'
            'Lessons 2 - 3: Binary Messages':
              name: 'レッスン2～3: バイナリメッセージ'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'レッスン4～6: 数値のエンコードと送信'
            'Lesson 9: Internet Addressing':
              name: 'レッスン9: インターネットのアドレス指定'
            'Lessons 10 - 11: Redundancy and Packets':
              name: 'レッスン10～11: 冗長性とパケット'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'レッスン12～13: インターネット上の抽象化'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'レッスン10～11: ルーター、冗長性、パケット'
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'レッスン1～2: バイト、ファイルサイズ、テキスト圧縮'
            'Lessons 3 - 4 : Encoding Images':
              name: 'レッスン3～4: 画像のエンコード'
            'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'レッスン5～6: 圧縮形式と独自のエンコーディングスキームの開発'
            'Lessons 7 - 11: Interpreting Visual Data':
              name: 'レッスン7～11: 視覚データの解釈'
            'Lessons 12 - 15: Communicating with Visualizations':
              name: 'レッスン12～15: コミュニケーションと視覚化'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'レッスン7～10: 視覚データの解釈'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'レッスン11～15: コミュニケーションと視覚化'
            Unit 2 Overview:
              name: ユニット2 概要
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'レッスン5～6: 圧縮形式と独自のエンコーディングスキームの開発'
            Unit 3 Overview:
              name: ユニット3 概要
            'Lessons 1 - 3: Algorithms':
              name: 'レッスン1～3: アルゴリズム'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'レッスン4～6: 手続型の抽象化とトップダウン設計'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'レッスン7～9: ドキュメンテーション、単純なループ、および乱数'
            Event Driven Programming:
              name: イベント駆動型プログラミング
            Variables and Strings:
              name: 変数と文字列
            Conditionals and Boolean Logic:
              name: 条件文とブール論理
            While Loops and Introduction to Arrays:
              name: whileループと配列の紹介
            Processing Arrays and Functions with Return Values:
              name: 戻り値を持つ配列と関数の処理
            Unit 5 Overview:
              name: ユニット5 概要
        csp1-support:
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Unit 1 Overview:
              name: ユニット1 概要
            'Lessons 2 - 3: Binary Messages':
              name: 'レッスン2～3: バイナリメッセージ'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'レッスン4～6: 数値のエンコードと送信'
            'Lesson 7: Encoding and Sending Text':
              name: 'レッスン7: テキストのエンコードと送信'
            'Lesson 9: Internet Addressing':
              name: 'レッスン9: インターネットのアドレス指定'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'レッスン10～11: ルーター、冗長性、パケット'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'レッスン12～13: インターネット上の抽象化'
            Group Work and Peer Learning:
              name: グループワークとピアラーニング
            Balancing Teachers and Tools:
              name: 先生とツールのバランスを取る
            Discovery Learning:
              name: 発見学習
            Measuring Student Learning:
              name: 生徒の学習の測定
            AP Preparation and Support:
              name: APの準備とサポート
        basketball:
          title: チームをえらんで、バスケットボールのゲームを作る
          description_short: チームをえらんで、バスケットボールのゲームを作る
          description: チームをえらんで、バスケットボールのゲームを作る
          lessons:
            Bounce:
              description_student: 学校でビデオゲームをプレイできたらと夢見たことはありませんか？このレッスンでは、ゲームを自作できます！
              description_teacher: このオンラインアクティビティでは、生徒はイベントとは何か、コンピューターがビデオゲームなどのプログラムでイベントをどのように使用するかを学びます。生徒はパズルに取り組み、プログラムがイベント
                (矢印ボタンが押されるなど) に反応するようにします。パズルの最後に、生徒はさまざまな速度と音でゲームをカスタマイズする機会があります。
          student_description: チームをえらんで、バスケットボールのゲームを作る
        sample-csp5:
          lessons:
            Controlling Memory with Variables:
              name: 複合条件文ロジック
        hoc-encryption:
          lessons:
            Simple Encryption:
              name: 単純な暗号化
        csd2-2017:
          title: CSDユニット2 - ウェブ開発 ('17～'18)
          description_short: ウェブラボで独自のウェブサイトを構築する方法を学びましょう。
          description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章： Web コンテンツと HTML
            csd2_2:
              display_name: 第 2 章：スタイルと CSS
            csd_survey:
              display_name: コース終了後アンケート
          lessons:
            new stage:
              name: 新しいステージ
            Quality Websites:
              name: 高品質のウェブサイト
            Website Design:
              name: ウェブサイトデザイン
            Describing Web pages:
              name: ウェブページの説明
            Text on the Web:
              name: ウェブ上のテキスト
            Images on the Web:
              name: ウェブ上の画像
            Clean Code and Debugging:
              name: クリーンなコードとデバッグ
              description_student: このレッスンでは、HTMLでウェブページを設計するときに発生する一般的な問題について説明します。クラスは、Code
                Studioで見つかったより複雑になる一連のウェブページのエラーを修正し、ウェブページを読みやすくするためのツールとしてのコメント、空白、インデントの重要性を学習します。
              description_teacher: 生徒は、HTMLでウェブページを設計するときに発生する一般的な問題に対処し、より複雑になる一連のウェブページのエラーを修正します。その過程で、ウェブページを読みやすくするためのツールとしてのコメント、空白、インデントの重要性を学びます。レッスンの最後に、生徒はウェブページをデバッグし、読みやすくメンテナンスしやすいようにするための戦略のリストを作成します。
            Introduction to Styling with CSS:
              name: CSSによるスタイル設定の紹介
            Multi-Page Websites:
              name: マルチページのウェブサイト
            Classes:
              name: クラス
            External Style Sheets:
              name: 外部スタイルシート
            Peer Review:
              name: ピア ・ レビュー
            Box Model and Page Layout:
              name: ボックスモデルとページレイアウト
            Digital Footprint:
              name: デジタルフットプリント
              description_student: このレッスンでは、個人のウェブサイトを作成する作業から一歩下がり、デジタルで共有する個人情報について説明します。クラスでは、他の人と共有するのに適した情報の種類について話し合い、次にソーシャルメディアページの例をいくつか見て、意図的にまたは意図せずに共有する可能性がある個人情報の種類を確認します。最後に、クラスは、情報をオンラインに上げるときに従うべき一連のガイドラインについて考えます。
              description_teacher: "生徒は最近のレッスンで、自分の個人用ウェブサイトに掲載する実際のコンテンツについて時間を取って検討しました。このレッスンでは、ユニットで扱うプロジェクト
                (個人のウェブサイトの公開) から一歩下がって、生徒がどのような個人情報を誰とオンラインで共有するかについて考えられるようにします。また、生徒がオンラインで共有することにした情報の多くは、リリースされた瞬間に自らのコントロールから外れるという考えをしっかりと持てるようにします。\\\r
                \\\r生徒は、特定の個人情報を共有するのに適切な対象者を個別に特定することから始めます。次に、いくつかのソーシャルメディアページを見て、人々が自分自身またはお互いについてどのような情報を共有しているかを判断します。最後に、オンラインで情報を投稿するのに適切だと考えるガイドラインについて考えます。\\\r
                \\\rこのレッスンの究極のポイントは、生徒を怖がらせることではなく、情報をウェブに公開する際に、生徒がどこからどこまでがコントロールできる、どこから先がコントロールできないかを体験してもらうことです。"
            Publishing a Website:
              name: ウェブサイトの公開
            Sources and Search Engines:
              name: ソースと検索エンジン
              description_student: 最初にウェブ検索の借り物競争を完了した後、クラスは検索エンジン内部の仕組みについて学び、分析スキルを使って奇妙な真偽不明の動物を探す機会があります。
              description_teacher: このレッスンでは、ウェブ検索の仕組みや、関連性があり信頼できる情報をオンラインで見つける方法について、生徒がより批判的に考えるように促します。検索エンジンがどのように機能するかについてのビデオを見て議論した後、生徒は真偽不明の動物に関する情報を検索します。生徒は、どの動物が実際にデマであるかを特定するために、見つけたサイトを分析して信頼できるものであることを確かめる必要があります。
            Intellectual Property:
              name: 知的財産
            'Personal Website: Finalizing Site':
              name: '個人ウェブサイト: サイトの完成'
            'Project: Personal Portfolio Website':
              name: 'プロジェクト: 個人ポートフォリオウェブサイト'
            Styling Text with CSS:
              name: CSSを使用したテキストのスタイル設定
              description_student: このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。このクラスは、CSSルールセットの基本的な構文を学習してから、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。最後に、全員でテキストスタイルを自身のウェブサイトに適用します。
              description_teacher: "このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。生徒は、CSSルールセットの基本的な構文を学び、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。生徒はギネス世界記録保持者に関するHTMLページで作業し、指定されたページに独自のスタイルを追加します。最後のレベルでは、生徒はテキスト要素のスタイルについて学んだことを自分のウェブページに適用します。\\\r
                \\\r"
            Styling Elements with CSS:
              name: CSSを使用した要素のスタイル設定
              description_student: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。クラスは、新しいCSSスタイルを調査して、「世界のデザート」ページを変更することから始めます。その後、全員でこの新しい知識を自身のウェブサイトに適用します。
              description_teacher: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。生徒は、このレッスンの最初に、世界のデザートに関するウェブサイトを見ます。そして、このウェブサイトのCSSスタイルを調べて新たに変更を加え、独自のスタイルをこのページに追加します。
                デザートページで作業した後、生徒は新しいCSSプロパティの知識を利用して、自身のウェブサイトのスタイルをさらに充実させます。
            Exploring Websites:
              name: ウェブサイトを探索する
              description_student: このレッスンでは、ユーザーと作成者の両者のために、ウェブサイトが果たす目的について説明します。このクラスでは、米国で最もよく使用されているいくつかのウェブサイトを調べ、各サイトがユーザーにとってどのように役立つか、またどのようにその作成者のためにもなっているかについて話し合います。
              description_teacher: どのウェブサイトにも目的があり、作成者には作成した理由が、そしてそれを使うユーザーには使用する理由があります。このレッスンでは、ウェブサイトがユーザーとクリエイターの両者に資する目的を検討し始めます。生徒は、米国で最もよく使用されているいくつかのウェブサイトを調べ、各サイトがユーザーにとってどのように役立つか、またどのようにその作成者のためにもなっているかについて考えます。
            'Websites for Expression ':
              name: 表現のためのウェブサイト
              description_student: このレッスンでは、個人的な表現の手段としてウェブサイトを紹介します。このクラスでは、まず人々が興味や考えを表現して共有するさまざまな方法について話し合い、次に前のコースで生徒が作成した模範的なウェブサイトをいくつか見ていきます。最後に、全員でブレインストーミングを行い、作成するウェブサイトに含めるトピックと興味のリストを共有し、ユニットの残りの部分で個人のウェブサイトを開発するためのリソースを作成します。
              description_teacher: このレッスンでは、生徒は個人的な表現の手段としてウェブサイトを使用する方法を調査し、個人的なウェブサイトに含めたいトピックと興味のリストを作成します。レッスンを開始するに当たり、生徒は人々が興味や考えを表現して共有するさまざまな方法を話し合います。次に、以前のCS発見コースで生徒が作成したいくつかの模範的なウェブサイトを見て、アイデアを表現する方法を明らかにします。最後に、生徒はブレーンストーミングを行い、個人的なウェブサイトに含めたいと思うトピックや興味のリストを共有し、ユニットを進めながら参照して着想に役立てられるようにします。
            Intro to HTML:
              name: HTML入門
              description_student: このレッスンでは、ウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを紹介します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。クラスはウェブラボでHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかについて話し合ってから、HTMLを使ってユニットの最初のウェブページを作成します。
              description_teacher: このレッスンでは、生徒はウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを学習します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。次に、生徒はウェブラボの模範的なHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかをクラスメートと話し合います。次に、生徒は最初のHTMLを記述します。まとめのディスカッションは、このレッスンを通じて開発したコンテンツと構造の理解を深めるのに役立ちます。
            Headers:
              name: ヘッダー
              description_student: このレッスンでは、HTMLタグの説明を続けますが、今回はヘッダーを使用します。このクラスでは、ヘッダータグを使ってページとセクションのタイトルを作成し、さまざまなヘッダー要素がデフォルトでどのように表示されるかを学習します。次に、クラス全体で、ユニットを通じて構築する個人のウェブページでコンテンツをどのように配置するかを計画し、プロジェクトの最初のページの作成を開始します。
              description_teacher: このレッスンでは、生徒は引き続きHTMLを使ってウェブページ上のテキストを構成しますが、今回は見出しを使用します。生徒は、さまざまな見出し要素がデフォルトでどのように表示されるかを学び、それを使ってページとセクションのタイトルを作成する練習をします。次に、生徒は自分の個人のウェブページでコンテンツをどのように配置するかを決定していきます。最後のレベルでは、生徒は以降のユニットにかけて取り組むプロジェクトを開始します。
            Lists:
              name: リスト
              description_student: このレッスンでは、順序付きリストと順序なしリスト、および関連する<ul>、<ol>、<li>
                のHTMLタグを紹介します。クラスはタグの使用を練習してから、個人のウェブページプロジェクトに戻って、新しいタグを含む新しいHTMLページを追加します。
              description_teacher: 生徒はHTMLの順序付きリストと順序なしリストの説明を受け、いくつかのレベルで<ul>、<ol>、<li>タグを使用する方法を学習します。その後、プロジェクトに戻り、新しいHTMLページを追加します。新しいページ内では、HTMLを記述して、レシピ、トップ10リスト、または学習した新しいタグを使用するその他のコンテンツを表示します。
            Intellectual Property and Images:
              name: 知的財産と画像
              description_student: このレッスンでは、他のウェブサイトで作成された画像、ビデオ、音楽などのメディアを、そのメディアの作成者の権利を尊重しながら使用する方法について説明します。クリエイティブ
                コモンズ ライセンスを最初に学習した後、クラスはウェブページに画像を追加する方法と、そうするときに適切な著作権表示をする方法を学びます。
              description_teacher: 他の人が作品をどのように使用できるかについて個人の意見を述べ合うところから始めて、クラスは、創造的なコンテンツの作成者とユーザーにとっての著作権の目的と役割を探ります。次のアクティビティでは、著作権の扱いの難しさの解決策として、さまざまなクリエイティブ
                コモンズ ライセンスを詳しく見ていきます。最後に、さまざまなクリエイティブ コモンズ ライセンスの制限について共通の理解を得て、生徒は<img>タグを使ってウェブページに画像を追加する方法を学びます。
            Project - Multi-Page Websites:
              name: プロジェクト - マルチページウェブサイト
              description_student: このレッスンでは、ハイパーリンクについて説明します。ハイパーリンクを使うことで、デベロッパーは複数のページを1つのウェブサイトにつなげることができます。クラスは、以前のすべてのページを1つのプロジェクトにリンクし、各ページへのナビゲーションバーを作成してから、サイト全体をウェブに公開します。
              description_teacher: "ウェブページを相互にリンクする方法を学習した後、生徒はついに自分が取り組んでいるウェブサイトを公開することができます。このレッスンでは、以前に作成したすべてのページを1つのプロジェクトにリンクし、新しいページを作成して、ページ間のナビゲーションを追加してから、サイト全体をウェブに公開します。
                \\\r \\\r"
            RGB Colors and Classes:
              name: RGBの色とクラス
              description_student: このレッスンでは、クラスとカスタムカラーについて説明します。このクラスは、まずRGB (赤、緑、青)
                値を使ってカスタムカラーを指定する方法を学び、次にCSSクラスを使用する新しいFour Seasons ウェブページにこれらのカラーを適用します。クラスを使ってFour
                Seasons ウェブページにスタイルを追加し、さらに自身のウェブサイトのスタイルを設定します。
              description_teacher: このレッスンでは、まず、RGB (赤、緑、青) 値を使ってカスタムカラーを指定する方法を学習します。次に、CSSクラスを使用する新しいFour
                Seasons ウェブページにこれらのカラーを適用します。CSSクラスにより、ウェブデベロッパーは同じタイプの他の要素とは異なるスタイル要素のグループを扱うことができます。クラスを使って、生徒はFour
                Seasons ウェブページにスタイルを追加し、さらに自身のウェブサイトのスタイルを設定します。
            Project - Personal Portfolio Website:
              name: プロジェクト - 個人ポートフォリオウェブサイト
              description_student: ユニットの最後の数日で、クラスは自身のウェブサイトを完成させ、仲間と協力してフィードバックを出し合い、ルーブリック
                (評価基準) を確認し、サイトに最後の仕上げを行います。最後に、全員が自身のプロジェクトとその開発方法を共有してユニットを締めくくります。
              description_teacher: "生徒は、ユニットを通して多くの時間を費やして自身のウェブサイトを開発してきました。最後の2日間で、生徒はウェブサイトを完成させます。さらに同僚と協力してフィードバックを出し合い、ウェブサイトに最後の仕上げを行い、ルーブリック
                (評価基準) を確認し、プロセスを振り返ります。最後に、プロジェクトを共有し、さらに最終的な設計に至るまでにたどったプロセスの概要を示してユニットを締めくくります。\\\r"
            Headings:
              name: 見出し
              description_student: このレッスンでは、HTMLタグの説明を続けますが、今回はヘッダーを使用します。このクラスでは、ヘッダータグを使ってページとセクションのタイトルを作成し、さまざまなヘッダー要素がデフォルトでどのように表示されるかを学習します。次に、クラス全体で、ユニットを通じて構築する個人のウェブページでコンテンツをどのように配置するかを計画し、プロジェクトの最初のページの作成を開始します。
              description_teacher: このレッスンでは、生徒は引き続きHTMLを使ってウェブページ上のテキストを構成しますが、今回は見出しを使用します。生徒は、さまざまな見出し要素がデフォルトでどのように表示されるかを学び、それを使ってページとセクションのタイトルを作成する練習をします。次に、生徒は自分の個人のウェブページでコンテンツをどのように配置するかを決定していきます。最後のレベルでは、生徒は以降のユニットにかけて取り組むプロジェクトを開始します。
            CSD Post-Course Survey:
              name: CSDコース後アンケート
          student_description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
        csp2-support:
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Unit 2 Overview:
              name: ユニット2 概要
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'レッスン1～2: バイト、ファイルサイズ、テキスト圧縮'
            'Lessons 3 - 4 : Encoding Images':
              name: 'レッスン3～4: 画像のエンコード'
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'レッスン5～6: 圧縮形式と独自のエンコーディングスキームの開発'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'レッスン7～10: 視覚データの解釈'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'レッスン11～15: コミュニケーションと視覚化'
            Group Work and Peer Learning:
              name: グループワークとピアラーニング
            Balancing Teachers and Tools:
              name: 先生とツールのバランスを取る
            Discovery Learning:
              name: 発見学習
            Measuring Student Learning:
              name: 生徒の学習の測定
            AP Preparation and Support:
              name: APの準備とサポート
        csd4-2017:
          title: CSDユニット4 - 設計プロセス ('17～'18)
          description_short: ユーザーのニーズを満たすプログラムを設計する方法を学びましょう。
          description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：ユーザーを中心にしたデザイン
            csd4_2:
              display_name: 第 2 章：アプリのプロトタイピング
            csd_survey:
              display_name: コース終了後アンケート
          lessons:
            Analysis of Design:
              name: デザインの分析
              description_student: このクラスでは、さまざまなティーポットのデザインを探り、デザインの選択と作成、それにその理由を考えます。ティーポットを例として使って、クラスはユーザー間の関係、ユーザーのニーズ、およびユーザーが使用するオブジェクトのデザインを探ります。
              description_teacher: グループで問題を解決し、他のユーザーのための製品を開発することに取り組むユニットを始めるに当たり、生徒はさまざまなティーポットのデザインを調査することから取りかかります。生徒は各ティーポットを分析し、特定のユーザーのニーズがその設計にどのように影響を与えているかをつかみます。設計をどうするかについて考え、各ティーポットを潜在的なユーザーのニーズに合わせようと試みて、製品
                (物理的およびデジタルの両方) の設計にユーザー中心のアプローチをとるで製品の有用さと使いやすさがどのように向上するかを見ていきます。アクティビティの終わりに、いずれかのティーポットをより便利に、または使いやすくするようにティーポットに変更提案を行うように生徒に求めます。
            Understanding Your User:
              name: ユーザーを理解する
              description_student: このクラスでは、ユーザープロファイルを使って、さまざまなユーザーが各種製品にどのように反応するかを探ります。クラスのメンバーはそれぞれ違う人としてロールプレイングし、他者の目を通してデザインを体験します。
              description_teacher: "設計者は、有用な製品を作成するためにユーザーのニーズを理解する必要があります。このレッスンでは、ユーザープロファイルを使って他者としてロールプレイングし、そのユーザーとして一連の製品を使って確かめることによって、他者のためにデザインするにはどうしたらよいかを考えるように生徒を促します。各生徒には、あるユーザープロファイルが割り当てられ、そこにはその個人の情報が記載されています。そのユーザープロファイルを使って、適切な製品を選択し、製品設計をレビューし、設計をどう改善したらよいかを提案します。\\\r"
            Discovering Users:
              name: ユーザーを発見する
            User-Centered Design Micro Activity:
              name: ユーザー中心のデザインマイクロアクティビティ
              description_student: 少人数のグループになり、設計プロセスを使って、スマートな服のアイデアを考え出します。ブレーンストーミングからユーザーの特定、最終的な設計の提案まで、このレッスンはこのユニットで他者のニーズに合わせたソリューションの設計を行う最初の機会になります。
              description_teacher: このレッスンでは、ユニット全体で生徒が目にすることになる設計プロセスの簡略版を見ていきます。生徒はまず、スマートな服の潜在的なユーザーを念頭にブレインストーミングします。クラスとしてアイデアを幅広いカテゴリにグループ化し、各グループはユーザーのカテゴリを1つ選択します。グループはこのプロセスを繰り返して、ユーザーのニーズや懸念をブレインストーミングし、最終的にニーズを分類して、重点的に取り組む対象を選択します。最後に、生徒は、意思決定を促すためにブレインストーミングして導き出された特定のニーズと懸念を使って、スマートな服を設計します。クラスの終わりに、生徒は意思決定プロセスをすばやく共有し、選択したユーザーのニーズに製品がどれだけうまく対応しているかについてフィードバックを受け取ります。
            Designing for Social Impact:
              name: 社会的影響のための設計
            Conducting User-Centered Interviews:
              name: ユーザー中心のインタビューの実施
            Analyzing Interviews:
              name: インタビューの分析
            Redesigning a Space:
              name: スペースの再設計
            Presenting Your Design:
              name: デザインの提示
            Designing Apps for Good:
              name: 優れたアプリの設計
              description_student: アプリの設計プロジェクトを開始するに当たってクラスをチームに編成され、アプリのトピックについて詳しく見ていきます。社会に影響を与えるアプリ例をいくつか示すことで、プロジェクトに取り組むインスピレーションが得られます。
              description_teacher: ユニットの最後まで続けていくアプリ設計プロジェクトを開始するに当たり、生徒は先ず、他の生徒が社会に影響を与えようと設計したアプリを見ていきます。次に、クラスは、問題解決プロセスの定義、準備、試行、反映の各手順をレビューしながら、社会的な影響力を持つ独自のアプリのアイデアを練ります。最後に、生徒はプロジェクトチームを編成し、アプリの開発過程全体を通じてチームでどのように作業を進めるかについて話をまとめます。
            Market Research:
              name: 市場調査
              description_student: 似たようなユーザーに役立つ可能性のある既存のアプリを探索して、アプリ開発に飛び込みましょう。各グループは、取り組んでいる同じトピックに対処するアプリをいくつか特定し、それらのアプリを使って、追求するアプリのアイデアを洗練させていきます。
              description_teacher: このレッスンでは、生徒は、ユーザーのニーズをよりよく理解するために、作成しようとしているアプリと同じ様なアプリを調査します。生徒はチーム内で他のアプリをインターネットで検索し、興味深いアプリを評価します。レッスンが終わる頃までに、各チームは作成したいアプリのタイプについてより明確なアイデアを持ち、ターゲットユーザーが誰であるかをさらに絞り込みるようになっていることでしょう。各チームは、調査したすべてのアプリの引用リストを用意します。これは、最終的なプレゼンテーションで使います。
            Paper Prototypes:
              name: 紙のプロトタイプ
              description_student: 紙のプロトタイプを使うと、多くの時間をかけてプログラムを書く前に、デベロッパーはアイデアをすばやくテストできます。このレッスンでは、チームはアプリラボで作成されたサンプルアプリをいくつか見て、それらのアプリを使って得た情報に基づき、アプリの最初のプロトタイプを紙で作成します。
              description_teacher: "アプリを設計し始める前に、生徒が期待事項の範囲を決められるようにする必要があります。生徒は最終的にアプリラボでアプリのプロトタイプを作成するため、持っているアイデアがアプリラボで簡単にプロトタイプが作成できる種類のアプリと一致すれば、作業しやすくなります。チームは、アプリラボで作成できるアプリのデモとして設計されたサンプルアプリを調べて、範囲の決定を開始します。その後、チームは1つ
                (または複数) のアプリを自分のアプリのベースとして選択します。そして時間をとってアプリの基本的な機能について話し合ってから、3x5のインデックスカードを使って紙のプロトタイプを作成します。\\\r"
            Prototype Testing:
              name: " プロトタイプテスト"
              description_student: このレッスンでは、チームはクラスの他のメンバーと一緒に紙のプロトタイプをテストします。1人の生徒がコンピューターを演じ、1人がナレーションを行い、残りのメンバーは観察することで、チームはアプリのデザインに関するフィードバックをすぐに受け取れ、アプリのプロトタイプの次のバージョンを作成する際の参考にできます。
              description_teacher: 紙のプロトタイプを作成する主な目的は、プログラムを作成する前に、テストとイテレーションを素早く行えるようにすることにあります。このレッスンのポイントは、アプリラボに移る前にチームにプロトタイプをテストする機会を与えることにあります。チームは、アプリをユーザーとテストする計画を立ててから、クラス内
                (場合によってはクラス外) の他の複数の生徒にプロトタイプをテストしてもらいます。ユーザーがプロトタイプをテストできるように、生徒はテストでの役割
                (「ナレーター」、「コンピューター」、および「オブザーバー」) を割り当て、さらにいくつかの質問を用意してテスト完了後にユーザーに回答してもらいます。
            Digital Design:
              name: デジタルデザイン
              description_student: 紙のプロトタイプの開発、テスト、フィードバックが完了したチームは、アプリラボに移動して、アプリの次のイテレーションを構築します。ドラッグ・アンド・ドロップの設計モードを使って、各チームメンバーはチームのアプリの少なくとも1ページ分を作成し、前回のテストラウンドで受け取ったフィードバックに応えます。
              description_teacher: 紙のプロトタイプのアプリを共同で開発した後、グループは手分けして、紙のプロトタイプに基づいてインタラクティブなデジタルバージョンの作成に向けて作業し始めます。アプリラボのドラッグ・アンド・ドロップ設計モードを使って、生徒は作業しながらスキル開発レベルの段階をステップアップし、紙のプロトタイプからデジタルバージョンを構築する方法を学びます。そこから、各グループメンバーはアプリラボでアプリの少なくとも1ページ分を作成し、後で結合して1つのアプリにします。
            Event Driven Programming:
              name: イベント駆動型プログラミング
              description_student: 前のレッスンでクラスが設計した画面を基に、チームは画面を1つのアプリに統合します。単純なプログラムを追加して、ボタンをクリックすると適切な画面に切り替わるようにすることもできます。
              description_teacher: このレッスンでは、チームは前のレッスンで設計した画面を1つのアプリに結合し、シンプルなイベントを使ってプログラミングを開始します。生徒は、ユーザーがボタンをクリックする動作に反応する小さなアプリを複数作成することにより、イベント駆動型の基本的なプログラミングを学びます。その後、グループメンバーは開発した画面を共有し、各グループメンバーはすべての画面を自身のアプリのコピーにインポートします。アプリは、ボタンをイベントに関連付けてインタラクティブにします。
            Basic App Functionality:
              name: 基本的なアプリの機能
              description_student: チームは、テストする前に、アプリにもう少し洗練された機能を追加します。いくつかの例を示し、クールな機能を加えた単純なプログラムを紹介します。
              description_teacher: 開発プロセスのこの時点で、各生徒には紙のプロトタイプをデジタルにしたバージョン (つまり、ボタンでリンクされた静的な画面)
                があるはずです。多くのアプリでは、これだけあればユーザーとのテストを始めることができますが、このレッスンでは、テスト段階に進む前に、アプリに簡単にもう少し機能を追加する方法を学ぶ機会を設けます。このレッスンで紹介するプログラミングの概念は、プロジェクトを正常に完了するために**必要なものではなく**、任意に省略できます。
            Testing the App:
              name: アプリのテスト
              description_student: チームは、今度はインタラクティブなプロトタイプを使って、別のユーザーテストを実行します。この一連のテストから収集したフィードバックは、アプリのプロトタイプの最終反復に反映させます。
              description_teacher: 前のレッスンの終わりまでに、各チームはアプリの実行可能な最小限のプロトタイプが出来ているはずです。このレッスンの主な目的は、チームが実際に他の人と一緒にアプリをテストすることにあります。他の人はできればアプリの対象となる対象ユーザーから、またはクラスの異なるチームから選びます。チームのオブザーバーはテスト結果を計画段階で使用したワークシートに記録します。紙のプロトタイプをテストしたときと同様に、チームは、テストを実行して観察する前に、特定のシナリオを計画することから始めます。
            Improving and Iterating:
              name: 改善とイテレーション
              description_student: テストの最終ラウンドで受け取ったフィードバックを使って、チームはユーザーのニーズに対応する変更を実装します。各チームは、追加したい機能と修正が必要なバグを追跡して、優先順位を付けます。
              description_teacher: チームはこの時点で、複数のイテレーションとユーザーテストのラウンドを経たアプリのプロトタイプを開発しています。最後のユーザーテストで得られた情報とガイダンスを活用して、各生徒はチームアプリの改善を計画して実装する機会を得ます。使える時間と生徒の興味に応じて、テストとイテレーションのサイクルを必要な回数だけ実行してもいいでしょう。
            App Presentation:
              name: アプリのプレゼンテーション
              description_student: 各チームは、開発したアプリを「売り込む」ためのプレゼンテーションを準備します。ここで、どの点に苦労したか、何が上手くいったか、そして将来の計画を皆に披露します。
              description_teacher: この時点までに、チームは個人的および社会的に重要なトピックを調査し、紙のプロトタイプとデジタルプロトタイプの両方を開発およびテストし、最初のアプリのイテレーションを複数作成して新しい機能とバグ修正を組み込んだことでしょう。ここでは、何をしたかを振り返り、一貫したプレゼンテーションをまとめて、開発プロセスを披露します。チームは、指定されたプレゼンテーションテンプレートを使って、アプリ開発のプロセスについてプレゼンテーションを行う準備をします。プレゼンテーションには、解決しようとした問題、テストからのフィードバックを組み込んだ方法、および将来の計画などを話してもいいでしょう。
            User Interface and Prototype Testing:
              name: ユーザーインターフェイスとプロトタイプテスト
              description_student: プログラムを書く前に、紙のプロトタイプを使ってソフトウェアをどのようにテストしてフィードバックを受け取るかを確認します。デベロッパーのアイデア出しを手伝うために、クラスは紙で作られたアプリのプロトタイプをテストして意見を出します。
              description_teacher: ミニデザインプロジェクトに続いて、生徒はデザインの次のフェーズ、つまりユーザーのニーズに対応する製品のプロトタイプを作成することに目を向けます。チームで、生徒は「Txt
                Ur Grndkdz」と呼ばれるチャットアプリの紙のプロトタイプを調べます。生徒は、コンピューターを使う前に、この紙のプロトタイプを使うことで、アイデアと仮定をすばやくテストする方法を確認できます。提供されたプロトタイプを「使用」した後、生徒は次のイテレーションを改善する方法をつかんでいきます。
            Feedback and Prototypes:
              name: フィードバックとプロトタイプ
              description_student: ユーザーはアプリをテストしており、デベロッパーに伝えたいフィードバックが数多くあります。クラスは、このフィードバックをすべて整理し、共通のテーマとニーズを特定し、プロトタイプを修正し始めて、ユーザーのニーズによりよく適合するようにする必要があります。
              description_teacher: このレッスンでは、生徒は前のレッスンの紙のプロトタイプを作成したアプリの「ユーザー」からのフィードバックを使って、その紙のプロトタイプのユーザーインターフェイスの改善を行います。このレッスンは、設計者がテクノロジーを使って人のニーズをユーザーインターフェイスまたはエクスペリエンスに変える必要があるということを考えるところから始まります。その後、生徒は前のレッスンで扱ったアプリのユーザーから一連のフィードバックとリクエストを受け取ります。生徒はグループになってフィードバックを分類し、アプリのインターフェイスをどのように変更するとフィードバックで寄せられたニーズを満たすことができるかを探ります。次に、生徒はグループで、特定したニーズの1つを満たせるように、この変更の一部を実装します。
            Identifying User Needs:
              name: ユーザーのニーズの特定
              description_student: ここまで、クラスが検討したユーザーはすべてリモートで、ユーザーから得られた情報はすべてテキストまたはロールプレイを通じて得られました。これで、クラスはお互い潜在的なユーザーとしてフィードバックを出し合い、ペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることができます。
              description_teacher: ここまで、生徒はある程度離れたユーザーのための設計に集中してきました。ブレーンストーミング、プロファイル、テキストによるフィードバックなど、エンドユーザーとの接点は直接的なものではありませんでした。これは、ユーザーについて考えるときに自分の考えから一歩抜け出るのを助けるために設けられた距離ですが、実際のユーザーから直接情報を取得するには、クラスメートに頼る必要があります。このレッスンでは、生徒はペアになってお互いにユーザー
                (および設計者) になるので、誰でもエンドユーザーに直接インタビューし、質問をしてより詳しい情報に基づいた設計が行えます。生徒はペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることを試みます。
            Project - Paper Prototype:
              name: プロジェクト - 紙のプロトタイプ
              description_student: 前のレッスンのインタビュー情報を使って、クラスはユーザーのニーズに対処するためのアプリのアイデアを思いつきます。そのアイデアを表現し、それが効果的であることをテストするために、各自で紙のプロトタイプを作成してテストします。
              description_teacher: 前のレッスンのピアインタビューに基づいて、各生徒はユーザーの問題に対処するアプリのアイデアを思いつきます。次に、生徒は個々のノートカードに「画面」を描くことにより、考えたアプリの紙のプロトタイプを作成します。プロジェクトガイドが、アプリの作成やテストを含むプロセスを通じて手引きになります。ユーザーとテストすることで、作成したユーザーインターフェイスに関する想定が正確だったかを確認できます。
            Linking Screens:
              name: 画面のリンク
              description_student: 前のレッスンでクラスが設計した画面を基に、チームは画面を1つのアプリに統合します。単純なプログラムを追加して、ボタンをクリックすると適切な画面に切り替わるようにすることもできます。
              description_teacher: このレッスンでは、チームは前のレッスンで設計した画面を1つのアプリに結合し、プログラムを使ってそれらをリンクできます。生徒は、前のレッスンで開始したモデルアプリを組み上げることで、イベント駆動型の基本的なプログラミングを学びます。生徒が昨日設計した画面に加えて、追加の画面を作成する方法や、他の人が作成した画面をインポートする方法についても学びます。
            User Interfaces:
              name: ユーザーインターフェイス
              description_student: プログラムを書く前に、紙のプロトタイプを使ってソフトウェアをどのようにテストしてフィードバックを受け取るかを確認します。デベロッパーのアイデア出しを手伝うために、クラスは紙で作られたアプリのプロトタイプをテストして意見を出します。
              description_teacher: ミニデザインプロジェクトに続いて、生徒はデザインの次のフェーズ、つまりユーザーのニーズに対応する製品のプロトタイプを作成することに目を向けます。チームで、生徒は「Txt
                Ur Grndkdz」と呼ばれるチャットアプリの紙のプロトタイプを調べます。生徒は、コンピューターを使う前に、この紙のプロトタイプを使うことで、アイデアと仮定をすばやくテストする方法を確認できます。提供されたプロトタイプを「使用」した後、生徒は次のイテレーションを改善する方法をつかんでいきます。
            Feedback and Testing:
              name: フィードバックとテスト
              description_student: ユーザーはアプリをテストしており、デベロッパーに伝えたいフィードバックが数多くあります。クラスは、このフィードバックをすべて整理し、共通のテーマとニーズを特定し、プロトタイプを修正し始めて、ユーザーのニーズによりよく適合するようにする必要があります。
              description_teacher: このレッスンでは、生徒は前のレッスンの紙のプロトタイプを作成したアプリの「ユーザー」からのフィードバックを使って、その紙のプロトタイプのユーザーインターフェイスの改善を行います。このレッスンは、設計者がテクノロジーを使って人のニーズをユーザーインターフェイスまたはエクスペリエンスに変える必要があるということを考えるところから始まります。その後、生徒は前のレッスンで扱ったアプリのユーザーから一連のフィードバックとリクエストを受け取ります。生徒はグループになってフィードバックを分類し、アプリのインターフェイスをどのように変更するとフィードバックで寄せられたニーズを満たすことができるかを探ります。次に、生徒はグループで、特定したニーズの1つを満たせるように、この変更の一部を実装します。
            Project - App Presentation:
              name: プロジェクト - アプリのプレゼンテーション
              description_student: 各チームは、開発したアプリを「売り込む」ためのプレゼンテーションを準備します。ここで、どの点に苦労したか、何が上手くいったか、そして将来の計画を皆に披露します。
              description_teacher: この時点までに、チームは個人的および社会的に重要なトピックを調査し、紙のプロトタイプとデジタルプロトタイプの両方を開発およびテストし、最初のアプリのイテレーションを複数作成して新しい機能とバグ修正を組み込んだことでしょう。ここでは、何をしたかを振り返り、一貫したプレゼンテーションをまとめて、開発プロセスを披露します。チームは、指定されたプレゼンテーションテンプレートを使って、アプリ開発のプロセスについてプレゼンテーションを行う準備をします。プレゼンテーションには、解決しようとした問題、テストからのフィードバックを組み込んだ方法、および将来の計画などを話してもいいでしょう。
            CSD Post-Course Survey:
              name: CSDコース後アンケート
          student_description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
        minecraft:
          title: Minecraft Hour of Code デザイナー
          description_short: ニワトリ、羊、クリーパー、ゾンビをプログラムして、自分だけのオリジナルなMinecraftを作ろう。
          description: ニワトリ、羊、クリーパー、ゾンビをプログラムして、自分だけのオリジナルなMinecraftを作ろう。
          lessons:
            Minecraft Hour of Code Designer:
              name: Minecraft Hour of Code デザイナー
          student_description: ニワトリ、羊、クリーパー、ゾンビをプログラムして、自分だけのオリジナルなMinecraftを作ろう。
        flappy-impact-study:
          lessons:
            Pre Hour of Code Survey:
              name: Hour of Code事前アンケート
            Flappy Code:
              name: フラッピー コード
            Post Hour of Code Survey:
              name: Hour of Code事後アンケート
        coursea-draft:
          description_short: 低学年向けのコンピューター サイエンス入門
          lessons:
            'Debugging: Bugs in Codeville':
              name: 'デバッグ: Codevilleのバグ'
            'Persistence & Frustration: Stevie and the Marbles':
              name: スティービーとビーだま
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
            'Programming: Happy Maps':
              name: プログラミング：ハッピー マップ
            Programming in Maze:
              name: めいろ のプログラミング
            Being Safe Online:
              name: 安全なオンライン
            'Loops: Happy Loops':
              name: くりかえし：ハッピー ループ
            Loops in Collector:
              name: くりかえし あつめる
            Loops in Artist:
              name: アーティストくりかえし
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Events in Play Lab:
              name: プレイ ラボのイベント
            Fuzz Fiesta:
              name: ファズフィエスタ
            Going Places Safely:
              name: 安全な道を通って行く
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
        courseb-draft:
          description_short: 低学年向けのコンピューター サイエンス入門
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
            'Persistence & Frustration: Stevie and the Marbles':
              name: スティービーとビーだま
            Sequence & Algorithms:
              name: シーケンスとアルゴリズム
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
            Being Safe Online:
              name: 安全なオンライン
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Programming in Maze:
              name: めいろ のプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Collector:
              name: くりかえし あつめる
            Loops in Artist:
              name: アーティストくりかえし
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Events in Play Lab:
              name: プレイ ラボのイベント
            More Computer Science:
              name: その他のコンピューター サイエンス
            Keep it Private:
              name: 非公開にしておく
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            Your Digital Footprint:
              name: デジタル フットプリント
        coursec-draft:
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          lessons:
            Programming in Maze:
              name: めいろ のプログラミング
            'Real-life Algorithms: Paper Planes':
              name: '現実世界のアルゴリズム: 紙飛行機'
            Programming in Collector:
              name: コレクターで学ぶプログラミング
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: Getting Loopy':
              name: 'ループ: ルーピーをゲット'
            Loops in Maze:
              name: 迷路で学ぶループ
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Puppy Introduction:
              name: 子犬紹介
            Online Internet Safety:
              name: オンラインインターネットの安全性
            Build a Flappy Game:
              name: フラッピーゲームを構築する
            More CS with Run Marco:
              name: 走れマルコで学ぶその他のCS
            Binary Bracelets:
              name: バイナリ ブレスレット
            Events in Play Lab:
              name: プレイ ラボのイベント
            Your Digital Footprint:
              name: デジタル フットプリント
            Building a Foundation:
              name: ピラミッドをたてよう
            Screen Out the Mean:
              name: 平均をスクリーンアウト
            Debugging in Maze:
              name: 迷路で学ぶデバッグ
            Loops in Harvester:
              name: Loops in Harvester
        coursed-draft:
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'アルゴリズム: グラフ用紙プログラミング'
            Events in Bounce:
              name: バウンスで学ぶイベント
            Nested Loops in Maze:
              name: 迷路で学ぶ入れ子のループ
            Nested Loops in Artist:
              name: アーティストと学ぶ入れ子のループ
            'Algorithms: Relay Programming':
              name: 'アルゴリズム: リレープログラミング'
            Debugging in Bee:
              name: みつばちと学ぶデバッグ
            While Loops in Farmer:
              name: ファーマーの「while」ループ
            Conditionals with Cards:
              name: カードと条件
            Conditionals with Bee:
              name: みつばちと学ぶ条件文
            Conditionals & Loops in Maze:
              name: 迷路で学ぶ条件文とループ
            Conditionals & Loops in Farmer:
              name: 農夫と学ぶ条件文とループ
            Impacts of Computing:
              name: コンピューティングの影響
            More Programming with CS4FN:
              name: CS4FNによるその他のプログラミング
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
            Conditionals in Bee:
              name: みつばちと学ぶ条件文
            Digital Citizenship:
              name: デジタル シティズンシップ
            'Unplugged: Binary':
              name: 'アンプラグド: バイナリ'
            Artist Binary:
              name: アーティスト：バイナリ
            Nested Loops in Bee:
              name: みつばちでの入れ子のループ
            Nested Loops:
              name: 入れ子のループ
            Introduction:
              name: はじめに
            Nested Loops Project in Artist:
              name: アーティストでの入れ子のループプロジェクト
            Debugging in Collector:
              name: コレクターでのデバッグ
        coursee-draft:
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          lesson_groups:
            content:
              display_name: 内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
            extra_course_content:
              display_name: 追加のコース内容
          lessons:
            Digital Citizenship:
              name: デジタル シティズンシップ
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
            'Functions: Songwriting':
              name: '関数: 作曲'
            Functions in Artist:
              name: アーティストと学ぶ関数
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions in Farmer:
              name: 農夫と学ぶ関数
            Determine the Concept in Bee:
              name: みつばちと学ぶコンセプトの決定
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Present Your Project:
              name: プロジェクトの発表
            More Programming with Scratch:
              name: Scratchでもっとプログラミング
            Internet:
              name: インターネット
            Crowdsourcing:
              name: クラウドソーシング
            Determine the Concept:
              name: コンセプトの決定
            Introduction:
              name: はじめに
            Conditionals:
              name: 条件
            'Algorithms: Dice Race':
              name: 'アルゴリズム: ダイスレース'
        coursef-draft:
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          lesson_groups:
            content:
              display_name: 内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            Digital Citizenship:
              name: デジタル シティズンシップ
            Envelope Variables:
              name: エンベロープ変数
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
            Variables in Artist:
              name: アーティストと学ぶ変数
            For Loop Fun:
              name: Forループを楽しむ
            For Loops in Bee:
              name: みつばちと学ぶループ
            For Loops in Artist:
              name: アーティストと学ぶループ
            'Functions with Parameters: Songwriting with Parameters':
              name: 'パラメータ付きの関数: パラメータで作曲'
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Revise Your Project:
              name: プロジェクトを修正する
            Presentation Your Project:
              name: プロジェクトの発表
            Try programming with Khan Academy:
              name: カーンアカデミーでプログラミングを試す
            The Power of Words:
              name: 言葉の力
            Songwriting with Parameters:
              name: パラメーターで歌や曲をつくる
            Introduction:
              name: はじめに
            Ice Age Play Lab:
              name: アイスエイジ プレイラボ
            Conditionals and Functions in Bee:
              name: みつばちの条件文と関数
            'Algorithms: Tangrams':
              name: 'アルゴリズム: タングラム'
        classic-hoc-impact-study:
          description_short: いろいろなキャラクターでコンピューター サイエンスの基礎を試してみよう！
          lessons:
            Pre Hour of Code Survey:
              name: Hour of Code事前アンケート
            Hour of Code 2013:
              name: Hour of Code 2013
            Post Hour of Code Survey:
              name: Hour of Code事後アンケート
        hoc-impact-study:
          description_short: いろいろなキャラクターでコンピューター サイエンスの基礎を試してみよう！
          lessons:
            Pre Hour of Code Survey:
              name: Hour of Code事前アンケート
            Hour of Code 2013:
              name: Hour of Code 2013
            Post Hour of Code Survey:
              name: Hour of Code事後アンケート
        sports:
          title: 独自のスポーツゲームをプログラミングしましょう
          description_short: スポーツ全体を混ぜて一致させましょう
          description: スポーツ全体を混ぜて一致させましょう
          lessons:
            Sports:
              description_student: 学校でビデオゲームをプレイできたらと夢見たことはありませんか？このレッスンでは、ゲームを自作できます！
              description_teacher: このオンラインアクティビティでは、生徒はイベントとは何か、コンピューターがビデオゲームなどのプログラムでイベントをどのように使用するかを学びます。生徒はパズルに取り組み、プログラムがイベント
                (矢印ボタンが押されるなど) に反応するようにします。パズルの最後に、生徒はさまざまな速度と音でゲームをカスタマイズする機会があります。
          student_description: スポーツ全体を混ぜて一致させましょう
        2016_sciencePD-phase2b:
          lessons:
            Welcome!:
              name: ようこそ!
            Review StarLogo Nova:
              name: StarLogo Novaのレビュー
            Reviewing the Modules:
              name: モジュールのおさらい
            Advanced StarLogo Nova:
              name: 高度なStarLogo Nova
            Remixing Phases 1 and 2:
              name: フェーズ1と2の再混合
            Thinking Ahead to Implementation:
              name: 実装に向けて考える
            Wrap-Up:
              name: まとめ
        2016_sciencePD_phase2b:
          lessons:
            Welcome!:
              name: ようこそ!
            Review StarLogo Nova:
              name: StarLogo Novaのレビュー
            Reviewing the Modules:
              name: モジュールのおさらい
            Advanced StarLogo Nova:
              name: 高度なStarLogo Nova
            Remixing Phases 1 and 2:
              name: フェーズ1と2の再混合
            Thinking Ahead to Implementation:
              name: 実装に向けて考える
            Wrap-Up:
              name: まとめ
        sciencepd3-2016:
          lessons:
            Welcome Back!:
              name: お帰りなさい！
            The TLO:
              name: TLO
            Prep With Your Modules:
              name: モジュールを準備する
        csp3-support:
          description_short: CSPユニット3の教師用専門学習コース
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Unit 3 Overview:
              name: ユニット3 概要
            'Lessons 1 - 3: Algorithms':
              name: 'レッスン1～3: アルゴリズム'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'レッスン4～6: 手続型の抽象化とトップダウン設計'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'レッスン7～9: ドキュメンテーション、単純なループ、および乱数'
            Group Work and Peer Learning:
              name: グループワークとピアラーニング
            Balancing Teachers and Tools:
              name: 先生とツールのバランスを取る
            Discovery Learning:
              name: 発見学習
            Measuring Student Learning:
              name: 生徒の学習の測定
            AP Preparation and Support:
              name: APの準備とサポート
        csdgraveyard:
          lessons:
            new stage:
              name: 新しいステージ
            Introduction to Styling with CSS (2.7):
              name: CSSを使用したスタイルの紹介 (2.7)
            Introduction to Styling with CSS:
              name: CSSによるスタイル設定の紹介
            External Style Sheets:
              name: 外部スタイルシート
        csp4-support:
          description_short: CSPユニット4の教師用専門学習コース
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Unit 3 Overview:
              name: ユニット3 概要
            'Lessons 1 - 2: Data in the Real World':
              name: 'レッスン1～2: 実世界のデータ'
            'Lessons 1 - 4: Data in the Real World':
              name: 'レッスン1～4: 実世界のデータ'
            'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption':
              name: 'レッスン5～7: セキュリティ、対称、非対称暗号化'
            'Lessons 8 - 9: Practice PT':
              name: 'レッスン8～9: PTの練習'
            Group Work and Peer Learning:
              name: グループワークとピアラーニング
            Balancing Teachers and Tools:
              name: 先生とツールのバランスを取る
            Discovery Learning:
              name: 発見学習
            Measuring Student Learning:
              name: 生徒の学習の測定
            Unit 4 Overview:
              name: ユニット4 概要
        sciencepd4:
          lessons:
            Welcome!:
              name: ようこそ!
            Revisiting Complex Adaptive Systems:
              name: 複雑な適応システムの再検討
            Thinking About Implementation:
              name: 実装について考える
            Wrap-Up:
              name: まとめ
        csp-ca-a:
          lessons:
            Commutative Assessment A:
              name: 可換性評価A
        science-pd-ol-pt-5:
          lessons:
            Welcome!:
              name: ようこそ!
            Earth Science Challenges:
              name: 地球科学の課題
            Life Science Challenges:
              name: ライフサイエンスの課題
            Physical Science Challenges:
              name: 物理科学の課題
            Wrap-Up:
              name: まとめ
        csf2harvey:
          lesson_groups:
            end_of_course_project:
              display_name: コース最後のプロジェクト
            content:
              display_name: 内容
          lessons:
            'Functions: Songwriting':
              name: '関数: 作曲'
            Functions in Artist:
              name: アーティストと学ぶ関数
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions in Farmer:
              name: 農夫と学ぶ関数
            Determine the Concept:
              name: コンセプトの決定
            Prepare your snowflake for 3D printing:
              name: 3Dプリント用にスノーフレークを準備する
            Binary:
              name: ２しんすう
            Snowflakes:
              name: スノーフレーク
        sciencepd5:
          lessons:
            Welcome!:
              name: ようこそ!
            Earth Science Challenges:
              name: 地球科学の課題
            Life Science Challenges:
              name: ライフサイエンスの課題
            Physical Science Challenges:
              name: 物理科学の課題
            Wrap-Up:
              name: まとめ
        csp5-support:
          description_short: CSPユニット5の教師用専門学習コース
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
            practice:
              display_name: 授業実践
          lessons:
            Unit 5 Overview:
              name: ユニット5 概要
            Event Driven Programming:
              name: イベント駆動型プログラミング
            Variables and Strings:
              name: 変数と文字列
            Conditionals and Boolean Logic:
              name: 条件文とブール論理
            While Loops and Introduction to Arrays:
              name: whileループと配列の紹介
            Processing Arrays and Functions with Return Values:
              name: 戻り値を持つ配列と関数の処理
            Group Work and Peer Learning:
              name: グループワークとピアラーニング
            Balancing Teachers and Tools:
              name: 先生とツールのバランスを取る
            Discovery Learning:
              name: 発見学習
            Measuring Student Learning:
              name: 生徒の学習の測定
        csppostap-2017:
          title: CSPポストAP - データベースと、アプリでのデータの使用 ('17～'18)
          description_short: アプリラボ アプリでデータを収集して使用する方法を学びましょう。
          lesson_groups:
            content:
              display_name: 内容
            cspSurvey:
              display_name: アンケート
          lessons:
            Creating Javascript Objects:
              name: JavaScriptオブジェクトの作成
            Permanent Data Storage:
              name: 永続的なデータストレージ
            Reading Records:
              name: レコードを読む
            Deleting Records:
              name: レコードの削除
            Updating Records:
              name: レコードの更新
            Importing and Exporting Data:
              name: データのインポートとエクスポート
            Visualizing Data:
              name: データの視覚化
            Sample Apps:
              name: サンプルアプリ
            Final Project:
              name: 最終プロジェクト
            Post-Course Survey:
              name: コース終了後アンケート
        unit6-csd-draft:
          lessons:
            UI and Input:
              name: UIと入力
            Computing Innovations:
              name: コンピューティングイノベーション
            Input Unplugged:
              name: オフラインで入力
        gamelab-demo:
          lessons:
            Simple Sprite Movement:
              name: 単純なスプライトの動き
        csd6-draft:
          title: CSDユニット6復習ドラフト
          lesson_groups:
            csd6_1:
              display_name: '第 1 章: ハードウェアを使ったプログラミング'
            csd6_2:
              display_name: '第 2 章: 物理プロパティの構築'
          lessons:
            UI and Input:
              name: UIと入力
            Computing Innovations:
              name: コンピューティングイノベーション
            Input Uplugged:
              name: オフラインで入力
            The Circuit Playground:
              name: サーキット プレイグラウンド
            Foo:
              name: フー
            Lists:
              name: リスト
            Lights:
              name: ライト
            Getters and Setters:
              name: ゲッターとセッター
            Input Unplugged:
              name: オフラインで入力
            Timed Loop:
              name: タイミングループ
            Timed Loops:
              name: タイミングループ
            For Loops:
              name: ループ用
            Physical Input:
              name: 物理的な入力
            List and For Loops:
              name: リストとforループ
            'Project: Board Output':
              name: 'プロジェクト: ボード出力'
            For Loops with UI and Board:
              name: UIとボードを備えたforループ
            Lists and For Loops:
              name: リストとforループ
            Analog Input:
              name: アナログ入力
            Sensor Applications:
              name: センサーアプリケーション
            'Project: Prototype an Innovation':
              name: 'プロジェクト: イノベーションのプロトタイプ'
            Map:
              name: マップ
            Board Events:
              name: ボードイベント
            'Project: Make a Game':
              name: 'プロジェクト: ゲームを作る'
            Getting and Setting Properties:
              name: プロパティの取得と設定
            The Program Design Process:
              name: プログラム設計プロセス
            Getters:
              name: ゲッター
            Getting Properties:
              name: プロパティの取得
            Arrays and For Loops:
              name: 配列とforループ
            Circuits and Physical Prototypes:
              name: 回路と物理プロトタイプ
            Accelerometer:
              name: 加速度計
            Functions with Parameters:
              name: パラメーター付き関数
        workshop-gamelab:
          lessons:
            Introduction:
              name: はじめに
            Sprites:
              name: スプライト
            Input:
              name: 入力
            'Project: Interactive Card':
              name: 'プロジェクト: インタラクティブカード'
        csd5-draft:
          title: CSD5のドラフト
          lesson_groups:
            csd5_1:
              display_name: 第1章：情報を表現する
            csd5_2:
              display_name: 第 2 章：データ問題を解決
          lessons:
            new stage:
              name: 新しいステージ
            Interpreting Data:
              name: データの解釈
            Data in the Real World:
              name: 現実世界のデータ
            Combining Representations:
              name: 表現を組み合わせる
            Representing Images:
              name: 画像の表現
            Representation Matters:
              name: 表現が重要
            Patterns and Representation:
              name: パターンと表現
            ASCII and Binary Representation:
              name: ASCIIとバイナリ表現
            Representing Numbers Part 1:
              name: 数値の表現 パート1
            Representing Numbers Part 2:
              name: 数値の表現 パート2
            Project - Create a Representation:
              name: プロジェクト - 表現を作成する
            Problem Solving and Data:
              name: 問題解決とデータ
            Making Decisions with Data:
              name: データを使った決定
            Automating Data Decisions:
              name: データ決定の自動化
            Problem Solving with Big Data:
              name: ビッグデータによる問題解決
            Project - Solve a Data Problem:
              name: プロジェクト - データの問題を解決する
            Representing Numbers:
              name: 数値の表現
            8-bit Numbers:
              name: 8ビットの数値
            Encryption:
              name: 暗号化
            Structuring Data:
              name: データの構造化
        applab-1hour:
          title: アプリラボ 1時間ワークショップ
          description_audience: 中高生
          description: このワークショップは、生徒にアプリラボの基本を1時間で紹介することを目的としています。コンピューター サイエンスのさまざまなバックグラウンドを持った生徒が、何かを作ることの楽しみを覚えることができるでしょう。
          lessons:
            App Lab Workshop:
              name: アプリラボ ワークショップ
            Digital Design:
              name: デジタルデザイン
            Event Driven Programming:
              name: イベント駆動型プログラミング
            Basic App Functionality:
              name: 基本的なアプリの機能
            Getters and Setters:
              name: ゲッターとセッター
            Room Escape:
              name: 部屋から脱出
            Extra:
              name: 追加
          student_description: このワークショップは、生徒にアプリラボの基本を1時間で紹介することを目的としています。コンピューター
            サイエンスのさまざまなバックグラウンドを持った生徒が、何かを作ることの楽しみを覚えることができるでしょう。
        applab-2hour:
          title: アプリラボ 2時間ワークショップ
          description_audience: 中高生
          description: このワークショップは、生徒にアプリラボの基本を2時間で紹介することを目的としています。コンピューター サイエンスのさまざまなバックグラウンドを持った生徒が、何かを作ることの楽しみを覚えることができるでしょう。
          lessons:
            new stage:
              name: 新しいステージ
            Digital Design:
              name: デジタルデザイン
            Event Driven Programming:
              name: イベント駆動型プログラミング
            Basic App Functionality:
              name: 基本的なアプリの機能
            Getters and Setters:
              name: ゲッターとセッター
          student_description: このワークショップは、生徒にアプリラボの基本を2時間で紹介することを目的としています。コンピューター
            サイエンスのさまざまなバックグラウンドを持った生徒が、何かを作ることの楽しみを覚えることができるでしょう。
        coursed-ramp:
          lessons:
            Introduction:
              name: はじめに
        workshop-maker:
          title: メーカーツールキットワークショップ
          description_audience: 対面のメーカーツールキット ワークショップに参加する先生
          description_short: 対面のメーカーツールキット ワークショップに合わせたレベルの進行
          description: このレベルは、対面のメーカーツールキット ワークショップに合わせて進行することを意図しています。これは、ツールやCSの概念を教えることを目的としたものではなく、ワークショップのファシリテーターが参加者にアプリラボとメーカーツールキットの幅広さを紹介する際の一助になることを目的としています。
          lessons:
            App Lab Basics:
              name: アプリラボの基本
            The Circuit Playground:
              name: サーキット プレイグラウンド
            Physical Input:
              name: 物理的な入力
            Analog Input:
              name: アナログ入力
          student_description: このレベルは、対面のメーカーツールキット ワークショップに合わせて進行することを意図しています。これは、ツールやCSの概念を教えることを目的としたものではなく、ワークショップのファシリテーターが参加者にアプリラボとメーカーツールキットの幅広さを紹介する際の一助になることを目的としています。
        coursee-ramp:
          title: コースランプ
          lessons:
            Introduction:
              name: はじめに
            Conditionals:
              name: 条件
            'Real Life Algorithms: Dice Race':
              name: '実生活アルゴリズム: サイコロレース'
        csd6-2017:
          title: CSDユニット6 - フィジカルコンピューティング ('17～'18)
          description_short: 物理デバイスでプログラミングする方法を学びます。
          description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
          lesson_groups:
            csd6_1:
              display_name: '第 1 章: ハードウェアを使ったプログラミング'
            csd6_2:
              display_name: '第 2 章: 物理プロパティの構築'
            csd_survey:
              display_name: コース終了後アンケート
          lessons:
            Computing Innovations:
              name: コンピューティングイノベーション
              description_student: コンピューターの可能性についての理解を深めながら、さまざまな新しい革新的なコンピューティングプラットフォームを探索してください。
              description_teacher: このコースの最後のユニットを開始するに当たり、生徒はコンピューティングの興味深い革新性について調査します。このレッスンでは、さまざまなコンピューティングフォームファクター
                (コンピューターはどのようなものか) と、コンピューティングの影響を受けるフィールドについて生徒に説明します。このユニットの後半では、生徒は自分の物理的なコンピューティングデバイスを開発しながら、このレッスンで触れたデバイスを振り返ります。
            Input Unplugged:
              name: オフラインで入力
              description_student: アプリラボで使用するイベント駆動型プログラミングモデルの詳細を学びながら、アプリがユーザーから入力を受け取る2つの方法を体験します。
              description_teacher: アプリラボでプログラミングをさらに深く掘り下げるための準備として、ゲームラボとアプリラボで記述したさまざまなプログラムが、ユーザーの入力をどのように処理するかを学習します。サンプルアプリで見たアプローチを比較対照した後、生徒はグループになって入力のための2つのモデル
                (無限ループの条件文と非同期イベント) を実行し、それらがどのように機能するかをよりよく理解します。
            Event Types:
              description_student: アプリラボでプログラミングの基本を確認し、プログラムで使える新しいイベントタイプを探索します。
              description_teacher: このレッスンでは、このユニットでアプリラボに戻る準備を行うため、ユニット4においてアプリラボでアプリを作成する方法について学習した資料をレビューします。このレビューは、生徒のニーズと、アプリラボでのプログラミングの経験と知識に最も適合するように変更する必要があります。レビューに加えて、生徒はこれまでに見たこともないようなさまざまな新しいイベントタイプを試します。
            Getters and Setters:
              name: ゲッターとセッター
              description_student: アプリの画面上のコンテンツを読み取って変更することにより、クラスは、1つの画面のみを必要とするアプリの構築を開始します。画面が1つしかない場合でも、紹介する手法により、多くのユーザーが操作して機能を使用することができます。
              description_teacher: ユニット4では、アプリラボでアプリを開発するための非常にシンプルなアプローチを学びました。このアプローチでは、ほとんどの操作に個別の画面が必要でした。生徒が作成できるアプリの種類を拡大し、ユーザーのアプリの操作の仕方について新しい方法で考えるように促すために、「getter」と「setter」の概念を紹介します。これらは、さまざまな設計要素のコンテンツとプロパティを取得および設定
                (または変更) できるコマンドです。このレッスンでは、1つの画面のみを必要とするシンプルなアプリを作成し、getterとsetterを使ってコンテンツを変更します。
            The Circuit Playground:
              name: サーキット プレイグラウンド
              description_student: このユニットの残りの部分全体で使うサーキットボードであるサーキット プレイグラウンドについて学びましょう。
                アプリラボを使って、出力にサーキット プレイグラウンドを使用するプログラムを開発します。
              description_teacher: このレッスンでは、生徒はサーキット プレイグラウンドを使ったプログラムを作成する最初の機会が得られます。最初にボードを視覚的に見て、どのように機能するかの仮説を立てた後、生徒はオンラインでLEDを制御するアプリケーションの作成方法を学びます。
                アプリラボの画面をサーキット プレイグラウンドと組み合わせることで、生徒はユーザー入力にアプリラボを利用しながら、ボードの要素を出力デバイスとして徐々に統合し始めることができます。
            Lists:
              name: リスト
              description_student: リストを使って複数の値を1つの変数名に格納する方法を学びましょう。
              description_teacher: 一般に配列とも呼ばれるリストは、一度に多くの値を格納できる変数の一種です。このレッスンでは、関連する一連の値を1つの変数に格納するリストを作成する方法を学習します。生徒は独自のリストを作成した後、インデックスを使ってリストから特定の値またはランダムな値を抽出する方法を学びます。
            Lights:
              name: ライト
              description_student: 前のレッスンのリストの概念を使って、クラスはサーキット プレイグラウンドで10色のLEDを制御するプログラムを作成します。
              description_teacher: サーキット プレイグラウンドには、外縁の周囲にリング状に10個のカラーLEDがあります。これらのLEDは、「colorLeds」と呼ばれるリストとしてプログラムでアクセスできます。前のレッスンのリストの理解に基づいて、生徒はリストからカラーLEDにアクセスしてそれを制御するプログラムを作成します。
            For Loops:
              name: ループ用
              description_student: クラスは、_forループ_を使って、最初にグリッドを介して「ロボット」を制御し、次にアプリラボで指示を繰り返すことを学びます。
              description_teacher: このレッスンでは、いくつかのプログラムを特定の回数繰り返す方法として、_forループ_を生徒に紹介します。生徒は、forループを使ってグリッド上でロボットをナビゲートするオフラインアクティビティから始めます。完了したら、生徒は知識をアプリラボで活かし、_forループ_を使って反復を行うプログラムを作成します。
            Lists and For Loops:
              name: リストとforループ
              description_student: _Lists_と_forループ_を組み合わせることで、リストの長さに関係なく、リストのすべての要素に影響を与えるプログラムを書くことができます。クラスはこの構造を使って、リスト
                (カラーLEDのリストを含む) 内のすべての要素を処理するプログラムを作成します。
              description_teacher: _forループ_を使って配列内のすべての要素を反復処理することは、ほとんどのプログラミング言語で非常に便利な構成です。このレッスンでは、リストとforループについて学習した内容を組み合わせて、このパターンの学習を開始します。生徒は各要素のプログラムを記述することなく、forループを使ってリストの各要素を1つずつ処理します。レッスンの終盤では、生徒はボードの「colorLed」リストを使ってこれを適用します。
            Timed Loops:
              name: タイミングループ
              description_student: このレッスンでは、forループについての理解を深め、タイミングループと呼ばれるより洗練された構造について学習します。
                forループとは異なり、タイミングループは繰り返し速度を制御でき、ループが反復する間に他のプログラム (イベントハンドラーなど) を実行できます。これにより、他のプログラムを一緒に実行しながら、無限に繰り返される興味深いアニメーションを創り出すことができます。
              description_teacher: このレッスンでは、forループについての理解を深め、タイミングループと呼ばれるより洗練された構造について学習します。
                forループとは異なり、タイミングループは繰り返し速度を制御でき、ループが反復する間に他のプログラム (イベントハンドラーなど) を実行できます。これにより、他のプログラムを一緒に実行しながら、無限に繰り返される興味深いアニメーションを創り出すことができます。
            'Project: Board Output':
              name: 'プロジェクト: ボード出力'
              description_student: 生徒は第1章で学んだことを取り入れ、ボードを使って情報を出力する独自設計のアプリを開発します。
              description_teacher: 生徒は第1章で学んだことを取り入れ、ボードを使って情報を出力する独自設計のアプリを開発します。
            Physical Input:
              name: 物理的な入力
              description_student: クラスはハードウェアボタンとスイッチを使って、サーキット プレイグラウンドを入力として使うプログラムを作成します。
              description_teacher: このレッスンでは、サーキット プレイグラウンドを厳密に出力デバイスとして捉える段階から、それを入力と出力の両方のツールとして使用する段階へ移行します。ハードウェアボタンとスイッチから始めて、「onEvent()」に類似した「onBoardEvent()\`の使い方を学びます。これにより、生徒は、サーキット
                プレイグラウンドから入力を取得します。
            Analog Input:
              name: アナログ入力
              description_student: サーキット プレイグラウンドのアナログ入力を探索し、センサーを介して環境に応答するプログラムを作成します。
              description_teacher: このレッスンでは、3つのアナログセンサー (音、光、温度) を使って、環境の変化に対応するプログラムを作成する方法を学習します。これらのセンサーの使用は、ユーザーがプログラムとどのように対話するかという点でステージが1つ上がります。センサーを入力として使用することで、アプリのユーザーはアプリと直接やり取りする必要がまったくないか、実際にそうしていることに気づかずにやり取りできます。
            Sensor Applications:
              name: センサーアプリケーション
              description_student: 3つの小さなアプリに取り組み、前のレッスンのセンサーの使い方をよりよく理解します。
              description_teacher: 生徒が前のレッスンで学習したセンサーをフォローアップするために、3つのアプリについて説明します。それぞれのアプリは異なるセンサーを利用しています。これらの3つのアプリは、次の最終的なプロジェクトで生徒の出発点になります。
            'Project: Prototype an Innovation':
              name: 'プロジェクト: イノベーションのプロトタイプ'
              description_student: このコースで学習したことをすべて使って、独自設計の革新的なコンピューティングデバイスを開発します。
              description_teacher: コースのこの最終プロジェクトでは、生徒チームが、サーキット プレイグラウンドに基づく革新的なコンピューティングデバイスのプロトタイプを開発およびテストします。ボードで利用できる入力と出力を使って、グループは興味深いユニークなユーザーインタラクションを可能にするプログラムを作成します。
            Designing Screens with Code:
              description_student: アプリの画面上のコンテンツを読み取って変更することにより、クラスは、1つの画面のみを必要とするアプリの構築を開始します。画面が1つしかない場合でも、紹介する手法により、多くのユーザーが操作して機能を使用することができます。
              description_teacher: ユニット4では、アプリラボでアプリを開発するための非常にシンプルなアプローチを学びました。このアプローチでは、ほとんどの操作に個別の画面が必要でした。生徒が作成できるアプリの種類を拡大し、ユーザーのアプリの操作の仕方について新しい方法で考えるように促すために、｢setProperty()｣ブロックを紹介します。このコマンドを使って、さまざまなUI要素のコンテンツとプロパティを設定できます。これにより、生徒は、重複した画面を手動で作成するのではなく､1つの画面で情報を更新するプログラムを作成できます。このレッスンでは、1つの画面のみを必要とするシンプルなアプリを作成し、｢setProperty()｣を使ってコンテンツを変更します。
            Board Events:
              name: ボードイベント
              description_student: クラスはハードウェアボタンとスイッチを使って、サーキット プレイグラウンドを入力として使うプログラムを作成します。
              description_teacher: このレッスンでは、サーキット プレイグラウンドを厳密に出力デバイスとして捉える段階から、それを入力と出力の両方のツールとして使用する段階へ移行します。ハードウェアボタンとスイッチから始めて、「onEvent()」に類似した「onBoardEvent()\`の使い方を学びます。これにより、生徒は、サーキット
                プレイグラウンドから入力を取得します。
            Getting Properties:
              name: プロパティの取得
              description_student: このレッスンでは、プログラムを使ってさまざまな要素のプロパティにアクセスできるgetPropertyブロックを紹介します。生徒はまず、このブロックを使って、ユーザーがさまざまなユーザーインターフェイス要素に入力した内容を確認する練習をします。生徒は後でgetPropertyとsetPropertyをカウンターパターンと一緒に使って、要素を画面上で移動させます。新しい画面要素、スライダー、新しいイベントトリガーonChangeも紹介します｡
              description_teacher: このレッスンでは、プログラムを使ってさまざまな要素のプロパティにアクセスできる｢getProperty｣ブロックを紹介します。生徒はまず、このブロックを使って、ユーザーがさまざまなユーザーインターフェイス要素に入力した内容を確認する練習をします。生徒は後で｢getProperty｣と｢setProperty｣をカウンターパターンと一緒に使って、要素を画面上で移動させます。新しい画面要素、スライダー、新しいイベントトリガー｢onChange｣も紹介します｡
            The Program Design Process:
              name: プログラム設計プロセス
              description_student: このレッスンでは、このユニットを通じて独自のプログラムを設計するために使用するプロセスを説明します。このプロセスは、生徒に画面のスケッチ、使用するサーキット
                プレイグラウンドの要素の識別、変数の定義、プログラミングを開始する前のイベントの説明を求めるプロジェクトガイドを柱にしています。このプロセスは、ユニット3で使用したゲームデザインプロセスと似ています。このレッスンでは、綱引きのようなゲーム
                (この中で、プログラムが非表示になっています) から始めます。生徒は、プログラムを作成するために､ボードコンポーネント、イベント、変数はどうあるべきと考えるかについて話し合います。次に、プロジェクトを実装する方法が1つ示された完全なプロジェクトガイドが示されます。次に、生徒はこのプロセスを一連のレベルを通して学習します。レッスンの最後に、生徒はプログラムを改善して独自のものにする機会があります。
              description_teacher: このレッスンでは、このユニットを通じて独自のプログラムを設計するために使用するプロセスを説明します。このプロセスは、生徒に画面のスケッチ、使用するサーキット
                プレイグラウンドの要素の識別、変数の定義、プログラミングを開始する前のイベントの説明を求めるプロジェクトガイドを柱にしています。このプロセスは、ユニット3で使用したゲームデザインプロセスと似ています。このレッスンでは、綱引きのようなゲーム
                (この中で、プログラムが非表示になっています) から始めます。生徒は、プログラムを作成するために､ボードコンポーネント、イベント、変数はどうあるべきと考えるかについて話し合います。次に、プロジェクトを実装する方法が1つ示された完全なプロジェクトガイドが示されます。次に、生徒はこのプロセスを一連のレベルを通して学習します。レッスンの最後に、生徒はプログラムを改善して独自のものにする機会があります。
            'Project: Make a Game':
              name: 'プロジェクト: ゲームを作る'
              description_student: 生徒は第1章で学んだことを取り入れ、ボードを使って情報を出力する独自設計のアプリを開発します。
              description_teacher: 生徒は第1章で学んだことを取り入れ、ボードを使って情報を出力する独自設計のアプリを開発します。
            Arrays:
              description_student: リストを使って複数の値を1つの変数名に格納する方法を学びましょう。
              description_teacher: 配列は、通常は同じタイプの項目を順序を付けて集めたものです。このレッスンでは、インデックスを使ってリストから特定の値またはランダムな値にアクセスする方法を学習します。次に、サーキット
                プレイグラウンドのカラーLEDの動作を制御するカラーLED配列を利用する方法を学びます。生徒は各LEDの色と輝度を制御し、学習した内容を使って光のパターンをプログラムし、サーキット
                プレイグラウンドでライトショーを作成します。
            Making Music:
              description_student: このレッスンでは、ブザーを使って音、音符、歌を生成することにより、生徒はブザーを最大限に使用します。生徒はブザーの頻度と継続時間のパラメータの簡単な復習から始めて、次に音符の概念に移ります。音符を使うことで、生徒は西洋音楽で使用される音域に制限され、さらに抽象化の層がもたらされてどの音域を合わせると良い音を出すことができるかを理解するのに役立ちます。生徒がブザーで曲を奏でることができるようになると、配列を使って一連の音符を保持および再生し、簡単な曲になります。
              description_teacher: このレッスンでは、ブザーを使って音、音符、歌を生成することにより、生徒はブザーを最大限に使用します。生徒はブザーの頻度と継続時間のパラメータの簡単な復習から始めて、次に音符の概念に移ります。音符を使うことで、生徒は西洋音楽で使用される音域に制限され、さらに抽象化の層がもたらされてどの音域を合わせると良い音を出すことができるかを理解するのに役立ちます。生徒がブザーで曲を奏でることができるようになると、配列を使って一連の音符を保持および再生し、簡単な曲になります。
            Arrays and For Loops:
              name: 配列とforループ
              description_student: _Lists_と_forループ_を組み合わせることで、リストの長さに関係なく、リストのすべての要素に影響を与えるプログラムを書くことができます。クラスはこの構造を使って、リスト
                (カラーLEDのリストを含む) 内のすべての要素を処理するプログラムを作成します。
              description_teacher: _forループ_を使って配列内のすべての要素を反復処理することは、ほとんどのプログラミング言語で非常に便利な構成です。このレッスンでは、_for
                loop_を使ってプログラムを繰り返す方法の基本を学び、さらに配列についてすでに学んだことと組み合わせて、配列内のすべての要素を処理するプログラムを作成します。生徒は各要素のプログラムを記述することなく、forループを使ってリストの各要素を1つずつ処理します。レッスンの終盤では、生徒はこれをボードの「colorLed」リストに適用して、ボタンがクリックされるたびにすべてのLEDを変更するアプリを作成します。
            Accelerometer:
              name: 加速度計
              description_student: このレッスンでは、加速度計とその機能について学習します。生徒はそのイベントやプロパティに慣れるだけでなく、実際のユースケースで遭遇する可能性のあるものと同様の加速度計を利用して複数のプログラムを作成します。
              description_teacher: このレッスンでは、加速度計とその機能について学習します。生徒はそのイベントやプロパティに慣れるだけでなく、実際のユースケースで遭遇する可能性のあるものと同様の加速度計を利用して複数のプログラムを作成します。
            Functions with Parameters:
              name: パラメーター付き関数
              description_student: レッスンは、生徒が最近見たアプリラボのブロックのコンテキストで、パラメータの簡単な復習から始まります。次に、生徒はアプリラボでユーザーが作成した関数内のパラメータの例を見て、パラメータを使って関数を作成および呼び出し、それを使って画面上の複数の要素を制御します。その後、forループを使って配列を反復処理し、各要素を関数に渡します。最後に、生徒は学んだことを使ってスターキャッチングゲームを作成します。
              description_teacher: レッスンは、生徒が最近見たアプリラボのブロックのコンテキストで、パラメータの簡単な復習から始まります。次に、生徒はアプリラボでユーザーが作成した関数内のパラメータの例を見て、パラメータを使って関数を作成および呼び出し、それを使って画面上の複数の要素を制御します。その後、forループを使って配列を反復処理し、各要素を関数に渡します。最後に、生徒は学んだことを使ってスターキャッチングゲームを作成します。
            Circuits and Physical Prototypes:
              name: 回路と物理プロトタイプ
              description_student: シンプルな回路を組み、安価で見つけやすい材料を使って物理プロトタイプを作成します。
              description_teacher: この章の最終プロジェクトの準備として、生徒は、サーキット プレイグラウンドを含む物理オブジェクトのプロトタイプを開発する方法を学びます。生徒は、モデル化されたプロジェクト計画ガイドを使って、段ボールやダクトテープなどの安価で簡単に見つけられる材料を使って、いくつかの単純な回路を組み、製品の意図した設計を伝えることができるプロトタイプを構築する方法を学びます。
            Innovations in Computing:
              name: コンピューティングにおける革新
            Arrays and Color LEDs:
              name: 配列とカラーLED
            Innovations in Computing_:
              name: コンピューティングにおける革新
              description_student: コンピューターの可能性についての理解を深めながら、さまざまな新しい革新的なコンピューティングプラットフォームを探索してください。
              description_teacher: このコースの最後のユニットを開始するに当たり、生徒はコンピューティングの興味深い革新性について調査します。このレッスンでは、さまざまなコンピューティングフォームファクター
                (コンピューターはどのようなものか) と、コンピューティングの影響を受けるフィールドについて生徒に説明します。このユニットの後半では、生徒は自分の物理的なコンピューティングデバイスを開発しながら、このレッスンで触れたデバイスを振り返ります。
            Designing Screens with Code_:
              description_student: アプリの画面上のコンテンツを読み取って変更することにより、クラスは、1つの画面のみを必要とするアプリの構築を開始します。画面が1つしかない場合でも、紹介する手法により、多くのユーザーが操作して機能を使用することができます。
              description_teacher: ユニット4では、アプリラボでアプリを開発するための非常にシンプルなアプローチを学びました。このアプローチでは、ほとんどの操作に個別の画面が必要でした。生徒が作成できるアプリの種類を拡大し、ユーザーのアプリの操作の仕方について新しい方法で考えるように促すために、｢setProperty()｣ブロックを紹介します。このコマンドを使って、さまざまなUI要素のコンテンツとプロパティを設定できます。これにより、生徒は、重複した画面を手動で作成するのではなく､1つの画面で情報を更新するプログラムを作成できます。このレッスンでは、1つの画面のみを必要とするシンプルなアプリを作成し、｢setProperty()｣を使ってコンテンツを変更します。
            The Circuit Playground_:
              name: サーキット プレイグラウンド
              description_student: このユニットの残りの部分全体で使うサーキットボードであるサーキット プレイグラウンドについて学びましょう。
                アプリラボを使って、出力にサーキット プレイグラウンドを使用するプログラムを開発します。
              description_teacher: このレッスンでは、生徒はサーキット プレイグラウンドを使ったプログラムを作成する最初の機会が得られます。最初にボードを視覚的に見て、どのように機能するかの仮説を立てた後、生徒はオンラインでLEDを制御するアプリケーションの作成方法を学びます。
                アプリラボの画面をサーキット プレイグラウンドと組み合わせることで、生徒はユーザー入力にアプリラボを利用しながら、ボードの要素を出力デバイスとして徐々に統合し始めることができます。
            Input Unplugged_:
              name: オフラインで入力
              description_student: アプリラボで使用するイベント駆動型プログラミングモデルの詳細を学びながら、アプリがユーザーから入力を受け取る2つの方法を体験します。
              description_teacher: アプリラボでプログラミングをさらに深く掘り下げるための準備として、ゲームラボとアプリラボで記述したさまざまなプログラムが、ユーザーの入力をどのように処理するかを学習します。サンプルアプリで見たアプローチを比較対照した後、生徒はグループになって入力のための2つのモデル
                (無限ループの条件文と非同期イベント) を実行し、それらがどのように機能するかをよりよく理解します。
            Board Events_:
              name: ボードイベント
              description_student: クラスはハードウェアボタンとスイッチを使って、サーキット プレイグラウンドを入力として使うプログラムを作成します。
              description_teacher: このレッスンでは、サーキット プレイグラウンドを厳密に出力デバイスとして捉える段階から、それを入力と出力の両方のツールとして使用する段階へ移行します。ハードウェアボタンとスイッチから始めて、「onEvent()」に類似した「onBoardEvent()\`の使い方を学びます。これにより、生徒は、サーキット
                プレイグラウンドから入力を取得します。
            Getting Properties_:
              name: プロパティの取得
              description_student: このレッスンでは、プログラムを使ってさまざまな要素のプロパティにアクセスできるgetPropertyブロックを紹介します。生徒はまず、このブロックを使って、ユーザーがさまざまなユーザーインターフェイス要素に入力した内容を確認する練習をします。生徒は後でgetPropertyとsetPropertyをカウンターパターンと一緒に使って、要素を画面上で移動させます。新しい画面要素、スライダー、新しいイベントトリガーonChangeも紹介します｡
              description_teacher: このレッスンでは、プログラムを使ってさまざまな要素のプロパティにアクセスできる｢getProperty｣ブロックを紹介します。生徒はまず、このブロックを使って、ユーザーがさまざまなユーザーインターフェイス要素に入力した内容を確認する練習をします。生徒は後で｢getProperty｣と｢setProperty｣をカウンターパターンと一緒に使って、要素を画面上で移動させます。新しい画面要素、スライダー、新しいイベントトリガー｢onChange｣も紹介します｡
            Analog Input_:
              name: アナログ入力
              description_student: サーキット プレイグラウンドのアナログ入力を探索し、センサーを介して環境に応答するプログラムを作成します。
              description_teacher: このレッスンでは、3つのアナログセンサー (音、光、温度) を使って、環境の変化に対応するプログラムを作成する方法を学習します。これらのセンサーの使用は、ユーザーがプログラムとどのように対話するかという点でステージが1つ上がります。センサーを入力として使用することで、アプリのユーザーはアプリと直接やり取りする必要がまったくないか、実際にそうしていることに気づかずにやり取りできます。
            The Program Design Process_:
              name: プログラム設計プロセス
              description_student: このレッスンでは、このユニットを通じて独自のプログラムを設計するために使用するプロセスを説明します。このプロセスは、生徒に画面のスケッチ、使用するサーキット
                プレイグラウンドの要素の識別、変数の定義、プログラミングを開始する前のイベントの説明を求めるプロジェクトガイドを柱にしています。このプロセスは、ユニット3で使用したゲームデザインプロセスと似ています。このレッスンでは、綱引きのようなゲーム
                (この中で、プログラムが非表示になっています) から始めます。生徒は、プログラムを作成するために､ボードコンポーネント、イベント、変数はどうあるべきと考えるかについて話し合います。次に、プロジェクトを実装する方法が1つ示された完全なプロジェクトガイドが示されます。次に、生徒はこのプロセスを一連のレベルを通して学習します。レッスンの最後に、生徒はプログラムを改善して独自のものにする機会があります。
              description_teacher: このレッスンでは、このユニットを通じて独自のプログラムを設計するために使用するプロセスを説明します。このプロセスは、生徒に画面のスケッチ、使用するサーキット
                プレイグラウンドの要素の識別、変数の定義、プログラミングを開始する前のイベントの説明を求めるプロジェクトガイドを柱にしています。このプロセスは、ユニット3で使用したゲームデザインプロセスと似ています。このレッスンでは、綱引きのようなゲーム
                (この中で、プログラムが非表示になっています) から始めます。生徒は、プログラムを作成するために､ボードコンポーネント、イベント、変数はどうあるべきと考えるかについて話し合います。次に、プロジェクトを実装する方法が1つ示された完全なプロジェクトガイドが示されます。次に、生徒はこのプロセスを一連のレベルを通して学習します。レッスンの最後に、生徒はプログラムを改善して独自のものにする機会があります。
            Arrays and Color LEDs_:
              name: 配列とカラーLED
            'Project: Make a Game_':
              name: 'プロジェクト: ゲームを作る'
            Making Music_:
              description_student: このレッスンでは、ブザーを使って音、音符、歌を生成することにより、生徒はブザーを最大限に使用します。生徒はブザーの頻度と継続時間のパラメータの簡単な復習から始めて、次に音符の概念に移ります。音符を使うことで、生徒は西洋音楽で使用される音域に制限され、さらに抽象化の層がもたらされてどの音域を合わせると良い音を出すことができるかを理解するのに役立ちます。生徒がブザーで曲を奏でることができるようになると、配列を使って一連の音符を保持および再生し、簡単な曲になります。
              description_teacher: このレッスンでは、ブザーを使って音、音符、歌を生成することにより、生徒はブザーを最大限に使用します。生徒はブザーの頻度と継続時間のパラメータの簡単な復習から始めて、次に音符の概念に移ります。音符を使うことで、生徒は西洋音楽で使用される音域に制限され、さらに抽象化の層がもたらされてどの音域を合わせると良い音を出すことができるかを理解するのに役立ちます。生徒がブザーで曲を奏でることができるようになると、配列を使って一連の音符を保持および再生し、簡単な曲になります。
            Arrays and For Loops_:
              name: 配列とforループ
              description_student: _Lists_と_forループ_を組み合わせることで、リストの長さに関係なく、リストのすべての要素に影響を与えるプログラムを書くことができます。クラスはこの構造を使って、リスト
                (カラーLEDのリストを含む) 内のすべての要素を処理するプログラムを作成します。
              description_teacher: _forループ_を使って配列内のすべての要素を反復処理することは、ほとんどのプログラミング言語で非常に便利な構成です。このレッスンでは、_for
                loop_を使ってプログラムを繰り返す方法の基本を学び、さらに配列についてすでに学んだことと組み合わせて、配列内のすべての要素を処理するプログラムを作成します。生徒は各要素のプログラムを記述することなく、forループを使ってリストの各要素を1つずつ処理します。レッスンの終盤では、生徒はこれをボードの「colorLed」リストに適用して、ボタンがクリックされるたびにすべてのLEDを変更するアプリを作成します。
            Accelerometer_:
              name: 加速度計
              description_student: このレッスンでは、加速度計とその機能について学習します。生徒はそのイベントやプロパティに慣れるだけでなく、実際のユースケースで遭遇する可能性のあるものと同様の加速度計を利用して複数のプログラムを作成します。
              description_teacher: このレッスンでは、加速度計とその機能について学習します。生徒はそのイベントやプロパティに慣れるだけでなく、実際のユースケースで遭遇する可能性のあるものと同様の加速度計を利用して複数のプログラムを作成します。
            Functions with Parameters_:
              name: パラメーター付き関数
              description_student: レッスンは、生徒が最近見たアプリラボのブロックのコンテキストで、パラメータの簡単な復習から始まります。次に、生徒はアプリラボでユーザーが作成した関数内のパラメータの例を見て、パラメータを使って関数を作成および呼び出し、それを使って画面上の複数の要素を制御します。その後、forループを使って配列を反復処理し、各要素を関数に渡します。最後に、生徒は学んだことを使ってスターキャッチングゲームを作成します。
              description_teacher: レッスンは、生徒が最近見たアプリラボのブロックのコンテキストで、パラメータの簡単な復習から始まります。次に、生徒はアプリラボでユーザーが作成した関数内のパラメータの例を見て、パラメータを使って関数を作成および呼び出し、それを使って画面上の複数の要素を制御します。その後、forループを使って配列を反復処理し、各要素を関数に渡します。最後に、生徒は学んだことを使ってスターキャッチングゲームを作成します。
            Circuits and Physical Prototypes_:
              name: 回路と物理プロトタイプ
              description_student: シンプルな回路を組み、安価で見つけやすい材料を使って物理プロトタイプを作成します。
              description_teacher: この章の最終プロジェクトの準備として、生徒は、サーキット プレイグラウンドを含む物理オブジェクトのプロトタイプを開発する方法を学びます。生徒は、モデル化されたプロジェクト計画ガイドを使って、段ボールやダクトテープなどの安価で簡単に見つけられる材料を使って、いくつかの単純な回路を組み、製品の意図した設計を伝えることができるプロトタイプを構築する方法を学びます。
            'Project: Prototype an Innovation_':
              name: 'プロジェクト: イノベーションのプロトタイプ'
              description_student: このコースで学習したことをすべて使って、独自設計の革新的なコンピューティングデバイスを開発します。
              description_teacher: コースのこの最終プロジェクトでは、生徒チームが、サーキット プレイグラウンドに基づく革新的なコンピューティングデバイスのプロトタイプを開発およびテストします。ボードで利用できる入力と出力を使って、グループは興味深いユニークなユーザーインタラクションを可能にするプログラムを作成します。
            'Project: Make a Game__':
              name: 'プロジェクト: ゲームを作る'
              description_student: 生徒は第1章で学んだことを取り入れ、ボードを使って情報を出力する独自設計のアプリを開発します。
              description_teacher: 生徒は第1章で学んだことを取り入れ、ボードを使って情報を出力する独自設計のアプリを開発します。
            Arrays and Color LEDs__:
              name: 配列とカラーLED
              description_student: リストを使って複数の値を1つの変数名に格納する方法を学びましょう。
              description_teacher: 配列は、通常は同じタイプの項目を順序を付けて集めたものです。このレッスンでは、インデックスを使ってリストから特定の値またはランダムな値にアクセスする方法を学習します。次に、サーキット
                プレイグラウンドのカラーLEDの動作を制御するカラーLED配列を利用する方法を学びます。生徒は各LEDの色と輝度を制御し、学習した内容を使って光のパターンをプログラムし、サーキット
                プレイグラウンドでライトショーを作成します。
            CSD Post-Course Survey:
              name: CSDコース後アンケート
          student_description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
        csd3-draft:
          title: 'CSDユニット3 - プログラミング: アニメーションとゲーム'
          description_short: アニメーションとゲーム
          lessons:
            Shapes and Randomess:
              name: 形状とランダム性
            Shapes and Randomness:
              name: 形状とランダム性
            Drawing in Game Lab:
              name: ゲームラボでの描画
            Variables:
              name: 変数（へんすう）
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
            Sprites:
              name: スプライト
            Plotting Shapes:
              name: 形状のプロット
            Sprite Movement:
              name: スプライトの動き
            The Counter Pattern Unplugged:
              name: オフラインのカウンターパターン
            Booleans and Conditionals:
              name: ブールと条件文
            Conditionals:
              name: 条件
            Taking Input:
              name: 入力情報を取得
            Complex Conditionals:
              name: 複雑な条件文
            'Project: Interactive Card':
              name: 'プロジェクト: インタラクティブカード'
            Keyboard Input:
              name: キーボード入力
            Other Forms of Input:
              name: その他の入力形式
            Velocity:
              name: 速度
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
            Collisions:
              name: 衝突
            Functions:
              name: 関数(かんすう)
            The Game Design Process:
              name: ゲームデザインプロセス
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
            'Project: Design a Game':
              name: 'プロジェクト: ゲームを設計する'
        csd5-2017:
          title: CSDユニット5 - データと社会 ('17～'18)
          description_short: コンピューターを使ってデータの問題を解決する方法を学びましょう。
          description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
          lesson_groups:
            csd5_1:
              display_name: 第1章：情報を表現する
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            csd_survey:
              display_name: コース終了後アンケート
          lessons:
            Representation Matters:
              name: 表現が重要
              description_student: この最初のレッスンでは、データとは何か、またデータを使ってどのように問題を解決するかの概要を説明します。グループはデータセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
              description_teacher: この最初のレッスンでは、生徒はデータとは何か、またデータを使ってどのように問題を解決するかの概要を学びます。レッスンの冒頭で、データについての一般的な理解を得るために簡単なディスカッションを行います。次に、グループに別れ、データセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。各グループは、さまざまな方法
                (写真、レシピ、メニュー、栄養) で表される食事から選べ、お勧めの利点が決まります。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
            Patterns and Representation:
              name: パターンと表現
              description_student: このレッスンでは、表現システムを構築するために必要なものは何かを詳しく見ていきます。グループは、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。次に、そのシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。このクラスでは、実用的な解決策が数多くあることを認めながら、稼働中のシステム間に共通点があることについて話し合います。
              description_teacher: このレッスンでは、生徒は情報を表現する独自のシステムを作成します。レッスンの冒頭で、はい/いいえの応答を表すのにすでに使っているさまざまなシステムについてブレインストーミングを行います。次に、小さなグループに別れて作業をし、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。使用するカードには、6種類の絵
                (6匹の動物、6色など) のいずれかが含まれているため、アルファベット全体を表すには、複数のカードのパターンを使って各文字を表す必要があります。生徒は自分のシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。まとめのディスカッションでは、クラスはさまざまなシステムの長所と短所をレビューします。稼働中のシステム間に共通点があることについて話し合い、問題の解決法は数多くあることを認めます。重要なことは、コミュニケーションを行う際、誰もが同じ任意のシステムを使うことです。
            ASCII and Binary Representation:
              name: ASCIIとバイナリ表現
              description_student: このレッスンでは、情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を紹介します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、バイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。
              description_teacher: このレッスンでは、生徒は情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を学習します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、生徒はバイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。レッスンの最後にデブリーフィングを行い、アクティビティの主要な学習目標をまとめるのに役立てます。
            Representing Images:
              name: 画像の表現
              description_student: このレッスンでは、今度は画像を使ってバイナリ表現システムの学習を続け、画像を正方形（または「ピクセル」)
                に分割する概念を説明します。正方形（または「ピクセル」) をそれぞれオンまたはオフにして、画像全体を作成します。ピクセレーションウィジェットを使って短いチャレンジセットを行った後、画像を表現するためのシステムと、前のレッスンで学習したテキストを表現するためのシステムを関連付けます。
              description_teacher: このレッスンでは、コンピューターが画像をどのように表すかを学習します。レッスンを開始するに当たり、複雑なビジョンをバイナリパターンに変える上でどのような課題があるかを検討します。この変換がどのように行われるかを示す一連の画像を通じて、生徒は画像を正方形（または「ピクセル」)
                に分割する概念の説明を受けます。ピクセルそれぞれをオンまたはオフにすると、画像全体を作成できます。次に、生徒はピクセレーションウィジェットを使って短い一連の課題に取り組み、白黒の画像を描画します。パズルは、このように画像を表現する上で直面する課題を取り上げるように設計されています。最後に、生徒は画像を表現するシステムと、前のレッスンで学習したテキストを表現するシステムを関連付けます。
            Representing Numbers Part 1:
              name: 数値の表現 パート1
            Representing Numbers Part 2:
              name: 数値の表現 パート2
            Combining Representations:
              name: 表現を組み合わせる
              description_student: このレッスンでは、3種類のバイナリ表現システム (ASCII文字、2進数、およびイメージ) をすべて組み合わせて、より複雑なタイプの情報を記録にエンコードできるようにします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。
              description_teacher: このレッスンで、学生は3種類のバイナリ表現システム (ASCII文字、2進数、および画像 をすべて組み合わせて、記録中の情報をデコードします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。次に、特定の構造に基づいてペットを表す記録をデコードします。
            Project - Create a Representation:
              name: プロジェクト - 表現を作成する
              description_student: クラスは、この章で学習したバイナリ表現システムを使って、完璧な1日を表す構造を設計します。記録にキャプチャしておく必要のある情報を決定したら、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。その後、誰もが学習したASCII、2進数、および画像形式を使って完璧な1日を表現し、パートナーの完璧な1日がどのようなものであるかを解読することを試みます。
              description_teacher: このレッスンでは、この章で学習したバイナリ表現システムを使って、自分の完璧な1日を表現するための構造を設計します。生徒はまず、自分の完璧な1日の短い説明を書き、次にパートナーと一緒にレビューして、コンピューターがキャプチャできると思われる主要な情報を特定します。そしてクラスとして、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。次に、学習したASCII、2進数、および画像形式を使って、完璧な1日を表現します。さらに、生徒はパンチカードを交換し、他の生徒の完璧な1日がどのようなものかを解読することを試みます。レッスンは最後に学んだことを振り返って終わります。
            Problem Solving and Data:
              name: 問題解決とデータ
              description_student: このレッスンでは、特にデータの問題に対処するために問題解決プロセスをどう調整したらよいかを扱います。クラスは、都市はリソースを何に最も費やす必要があるかを決定するタスクを行います。クラスは、インターネットでその決定をサポートするデータを見つけて用いなければなりません。
              description_teacher: このレッスンでは、コース前半の問題解決プロセスを使って、データの問題を解決します。プロセスを確認した後、都市はライブラリ、ペットシェルター、または消防署のどれを構築すべきかを決定するように求められます。生徒はチームで作業してインターネットで情報を収集することで何を構築すべきかを決定してから、この情報を使って持論を展開し、市議会に選択を認めてもらえるように説得します。次に、行った作業がコース全体で使ってきた問題解決プロセスのどこに位置付けられるかを考え、一般的な問題解決プロセスと比較してをこのデータの問題を解決するプロセスはどうだったかを検討します。
            Making Decisions with Data:
              name: データを使った決定
              description_student: このレッスンでは、前のレッスンで紹介したデータの問題解決プロセスを実践します。すべての質問に正しい答えがあるとは限りません。場合によっては、クラスはさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
              description_teacher: このレッスンでは、中学生に馴染み深い問題に基づいて、データを使って意思決定を行う練習をします。生徒はグループで作業し、提示されたデータを使って意思決定を行う方法について話し合ってから、クラスで最終的な選択について意見をまとめます。すべての問題に正しい答えがあるとは限りません。場合によっては、生徒はさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
            Interpreting Data:
              name: データの解釈
              description_student: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
              description_teacher: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
            Automating Data Decisions:
              name: データ決定の自動化
              description_student: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
              description_teacher: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
            Problem Solving with Big Data:
              name: ビッグデータによる問題解決
              description_student: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかをについて扱います。このクラスでは、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各シナリオには、データを使って同様の問題を解決した実際のサービスに関するビデオも含まれています。
              description_teacher: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかを見ていきます。レッスンは、前のレッスンで調査したデータ問題解決プロセスを簡単におさらいするところから始めます。次に、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各問題は、実在するサービスを反映するように設計されています。ブレインストーミングの後、生徒は実際のサービスに関するビデオを見て、そのサービスによって収集されるデータとその使用方法についてのメモを取ります。レッスンの最後に、データはユーザーが積極的に提供したものか、受動的に記録されたか、またはセンサーによって収集されたものかを記録します。
            Project - Solve a Data Problem:
              name: プロジェクト - データの問題を解決する
              description_student: このユニットを締めくくるに当たり、クラスはデータを使って、問題の解決に役立つ推奨または予測を提供する方法を設計します。最初の手順では、問題をブレインストーミングし、簡単な調査を行い、どの問題に取り組むかを決定します。次に、収集するデータの種類、収集方法、および使用方法を決定した後、フィードバックを出し合って最後のプレゼンテーションを行います。
              description_teacher: このユニットを締めくくるに当たって、生徒はクラスメートから収集して分析したデータに基づいてレコメンデーションエンジンを設計します。レコメンデーションアプリの例を見た後、生徒はプロジェクトガイドに従ってこのアクティビティを数日かけて完了します。最初のいくつかの手順では、ユーザーのどのような選択を支援したいか、また推奨事項を与えるために必要なデータを選択し、アンケートを作成して、クラスメートの選択に関する情報を収集します。次に、データを解釈し、学習した内容を使ってレコメンデーションアルゴリズムを作成します。最後に、アルゴリズムを使って、数人のクラスメートに推奨を行います。生徒はピアレビューを行い、プロジェクトに必要な変更を行った後、クラスでプレゼンテーションを行う準備をします。
            Representing Numbers:
              name: 数値の表現
              description_student: このレッスンでは2進数システムを紹介します。 2進数 (base-2) の数体系で場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、パターンを一般的な4ビットシステムに拡張します。
              description_teacher: このレッスンでは、生徒は2進数システムを学習します。 2進数 (base-2) の数体系でドットを集めて場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、生徒はパターンを一般的な4ビットシステムに拡張します。
            8-bit Numbers:
              name: 8ビットの数値
              description_student: 生徒は2進数の概念を復習し、一連のビットをデコードするために各数値のビット長を知る必要があることについてディスカッションします。次に、紙の仕掛けで8ビットの数値
                (0～255) をエンコードおよびデコードするのに役立つFlippy Doを作成します。生徒はFlippy Doで練習した後、標準化を他のタイプのデータに拡張する方法について話し合います。
              description_teacher: 生徒は2進数の概念を復習し、一連のビットをデコードするために各数値のビット長を知る必要があることについてディスカッションします。次に、紙の仕掛けで8ビットの数値
                (0～255) をエンコードおよびデコードするのに役立つFlippy Doを作成します。生徒はFlippy Doで練習した後、標準化を他のタイプのデータに拡張する方法について話し合います。
            Encryption:
              name: 暗号化
              description_student: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
              description_teacher: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
            Structuring Data:
              name: データの構造化
              description_student: このレッスンでは、生データセットのクリーニングや視覚化など、データの解釈について詳しく見ていきます。クラスはまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べます。クリーニングと視覚化によりより良い意思決定にどのように役立つかを見た後、このプロセスのどの部分を自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
              description_teacher: このレッスンでは、データのクリーニングと視覚化など、データの収集と解釈について学習します。生徒はまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べてから、自分のデータを視覚化します。好きなピザのトッピングに関する調査結果を使って、生徒は選択した視覚化スキームに簡単に適合しないデータをどのように扱うかを決定しなければなりません。最後に、生徒はこのプロセスのどの部分をコンピューターで自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
            Keeping Data Secret:
              name: データの秘密を守る
              description_student: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
              description_teacher: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
            CSD Post-Course Survey:
              name: CSDコース後アンケート
          student_description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
        csd3-old:
          title: CSDユニット3 (非推奨)
          description_short: CSDユニット3の2016/2017ドラフト
          description: これは、2016年秋にリリースされたCSDユニット3のオリジナルドラフトです。現在このコースを使っている生徒がいない限り、代わりにstudio.code.org/s/csd3で入手できるこのユニットの更新バージョンを使ってください
            - このオリジナルドラフトは、2017年7月1日までご利用いただけます。
          lessons:
            Drawing in Game Lab:
              name: ゲームラボでの描画
            Draw Loop and Randomization:
              name: ループの描画とランダム化
            Variables Unplugged:
              name: オフライン変数
            Variables and Animation:
              name: 変数とアニメーション
            Sprites and Properties:
              name: スプライトとプロパティ
            Sprites and Images:
              name: スプライトと画像
            Booleans and Conditionals:
              name: ブールと条件文
            Conditionals and Keyboard Input:
              name: 条件文とキーボード入力
            Complex Conditionals:
              name: 複雑な条件文
            'Project: Interactive Card':
              name: 'プロジェクト: インタラクティブカード'
            Velocity:
              name: 速度
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
            Collisions:
              name: 衝突
            Functions:
              name: 関数(かんすう)
            The Game Design Process:
              name: ゲームデザインプロセス
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
            'Project: Design a Game':
              name: 'プロジェクト: ゲームを設計する'
          student_description: これは、2016年秋にリリースされたCSDユニット3のオリジナルドラフトです。現在このコースを使っている生徒がいない限り、代わりにstudio.code.org/s/csd3で入手できるこのユニットの更新バージョンを使ってください
            - このオリジナルドラフトは、2017年7月1日までご利用いただけます。
        csd1-old:
          title: CSDユニット1 (非推奨)
          description_short: CSDユニット1の2016/2017ドラフト
          description: これは、2016年秋に最初に公開されたCSDユニット1のオリジナルドラフトです。このバージョンは、studio.code.org/s/csd1で入手できる更済みのユニットに置き換えられました。このオリジナルドラフトは、2017年7月1日までご利用いただけます。
          lessons:
            Intro to Problem Solving:
              name: 問題解決入門
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: 問題解決の探求
            Representing Information:
              name: 情報の表現
            Processing with Bits:
              name: ビットによる処理
            Human vs Computer Processing:
              name: 人間対コンピューター処理
            Processing with Apps:
              name: アプリを使った処理
            'Project: Apps and Problem Solving':
              name: 'プロジェクト: アプリと問題解決'
          student_description: これは、2016年秋に最初に公開されたCSDユニット1のオリジナルドラフトです。このバージョンは、studio.code.org/s/csd1で入手できる更済みのユニットに置き換えられました。このオリジナルドラフトは、2017年7月1日までご利用いただけます。
        csd2-draft:
          lessons:
            Text on the Web:
              name: ウェブ上のテキスト
            Digital Footprint:
              name: デジタルフットプリント
            Exploring Websites:
              name: ウェブサイトを探索する
            'Websites for Expression ':
              name: 表現のためのウェブサイト
            Intro to HTML:
              name: HTML入門
            Headers and Lists:
              name: ヘッダーとリスト
            Intellectual Property:
              name: 知的財産
            Images:
              name: 画像
            Clean Code and Debugging:
              name: クリーンなコードとデバッグ
            Project - Multi-Page Websites:
              name: プロジェクト - マルチページウェブサイト
            Styling Text with CSS:
              name: CSSを使用したテキストのスタイル設定
            Styling Elements with CSS:
              name: CSSを使用した要素のスタイル設定
            Sources and Search Engines:
              name: ソースと検索エンジン
            RGB Colors and Classes:
              name: RGBの色とクラス
            Project - Personal Portfolio Website:
              name: プロジェクト - 個人ポートフォリオウェブサイト
            Headers:
              name: ヘッダー
            Intellectual Property and Images:
              name: 知的財産と画像
            Lists:
              name: リスト
        csd1-draft:
          lessons:
            Intro to Problem Solving:
              name: 問題解決入門
            The Problem Solving Process:
              name: The Problem Solving Process
            Exploring Problem Solving:
              name: 問題解決の探求
            Inputs and Outputs:
              name: 入力と出力
            Processing:
              name: 処理
            Storage:
              name: ストレージ
            Apps and Problem Solving:
              name: アプリと問題解決
            Project - Propose an App:
              name: プロジェクト - アプリの提案
            Input and Output:
              name: 入出力
        csd3-chapters:
          lessons:
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
            Plotting Shapes:
              name: 形状のプロット
            Drawing in Game Lab:
              name: ゲームラボでの描画
            Shapes and Randomness:
              name: 形状とランダム性
            Variables:
              name: 変数（へんすう）
            Sprites:
              name: スプライト
            The Counter Pattern Unplugged:
              name: オフラインのカウンターパターン
            Sprite Movement:
              name: スプライトの動き
            Booleans and Conditionals:
              name: ブールと条件文
            Conditionals:
              name: 条件
            Keyboard Input:
              name: キーボード入力
            Other Forms of Input:
              name: その他の入力形式
            'Project: Interactive Card':
              name: 'プロジェクト: インタラクティブカード'
            Velocity:
              name: 速度
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
            Collisions:
              name: 衝突
            Functions:
              name: 関数(かんすう)
            The Game Design Process:
              name: ゲームデザインプロセス
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
            'Project: Design a Game':
              name: 'プロジェクト: ゲームを設計する'
            'Chapter 1: Images and Animation':
              name: '第1章: 画像とアニメーション'
            'null':
              name: ヌル
            temp:
              name: 臨時
        coursef-ramp:
          lessons:
            'Algorithms: Tangrams':
              name: 'アルゴリズム: タングラム'
            Introduction:
              name: はじめに
            Ice Age Play Lab:
              name: アイスエイジ プレイラボ
            Functions in Farmer:
              name: 農夫と学ぶ関数
            Conditionals and Functions in Bee:
              name: みつばちの条件文と関数
        csppostsurvey-staging:
          title: "[非推奨] CSP調査後のステージングエリア"
          description: "/s/csp-post-surveyに移動しました。 17.05.05以降破棄"
          lessons:
            CSP Student Post Survey Staging:
              name: CSP 生徒の調査後のステージング
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
        fmscsd3preview:
          title: CSD - ゲームラボでの描画
          description_audience: ファルマス中学校 (Mike Harvey)
          lessons:
            Plotting Shapes:
              name: 形状のプロット
            Drawing in Game Lab:
              name: ゲームラボでの描画
        csppostsurvey:
          title: CSP生徒向けコース後アンケート
          description_audience: CSP生徒
          description_short: CSP生徒向けコース後の調査
          description: Code.org CS原則コース後アンケートへようこそ。このアンケートの所要時間は約10分です。いただいた回答は匿名形式で保存され、公開されることはありません。
          lessons:
            CSP Student Post-Course Survey:
              name: CSP生徒向けコース後アンケート
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
        csp-post-survey:
          title: CSP生徒向けコース後アンケート (2017～2018)
          description_audience: CSP生徒
          description_short: CSP生徒向けコース後の調査
          description: Code.org CS原則コース後アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
          lessons:
            CSP Student Post-Course Survey:
              name: CSP生徒向けコース後アンケート
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            CSP Post-Course Survey:
              name: CSPコース後アンケート
            CSP post survey 2018 staging:
              name: CSP事後アンケート2018のステージング
            CSP post-course survey:
              name: CSPコース後アンケート
          student_description: Code.org CS原則コース後アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
        public-key-cryptography:
          title: パブリックキー暗号ウィジェット
          lessons:
            Public Key Crypto Widgets:
              name: パブリックキー暗号ウィジェット
        csd2-old:
          title: CSDユニット2 (非推奨)
          lessons:
            Quality Websites:
              name: 高品質のウェブサイト
            Website Design:
              name: ウェブサイトデザイン
            Describing Web pages:
              name: ウェブページの説明
            Text on the Web:
              name: ウェブ上のテキスト
            Clean Code and Debugging:
              name: クリーンなコードとデバッグ
            Styling Text with CSS:
              name: CSSを使用したテキストのスタイル設定
            Styling Elements with CSS:
              name: CSSを使用した要素のスタイル設定
            Multi-Page Websites:
              name: マルチページのウェブサイト
            Classes:
              name: クラス
            Peer Review:
              name: ピア ・ レビュー
            Digital Footprint:
              name: デジタルフットプリント
            Publishing a Website:
              name: ウェブサイトの公開
            Sources and Search Engines:
              name: ソースと検索エンジン
            Intellectual Property:
              name: 知的財産
            'Project: Personal Portfolio Website':
              name: 'プロジェクト: 個人ポートフォリオウェブサイト'
        artist-and-bb8:
          lessons:
            B8 New BB8:
              name: B8新しいBB8
            c8 to BB8:
              name: c8からBB8
            B8 BB8:
              name: B8 BB8
            C9 Artist Loops:
              name: C9アーティストループ
            C8 to BB8:
              name: C8からBB8
            D7 to Laurel:
              name: D7からLaurel
            D6 Frozen Artist:
              name: D6フローズンアーティスト
            F7 add Conditionals:
              name: F7条件文を追加
            F5 Minecraft:
              name: F5 マインクラフト
            Programming with BB-8:
              name: BB-8と学ぶプログラミング
            Loops with BB-8:
              name: Loops with BB-8
            D13 no If/While:
              name: D13 if/whileなし
            Ice Age Play Lab:
              name: アイスエイジ プレイラボ
            Bounce:
              name: バウンド
            F PlayLab Variables:
              name: F プレイラボ変数
        coursea-2017:
          title: コース A
          assignment_family_title: コース A
          description_audience: 4-7 才
          description_short: 低学年向けコンピューター サイエンス入門
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
              description_teacher: このレッスンで、生徒はデバッグ（虫を取り除く、プログラムの間違いを直す）の手順を概観します。生徒は「何が起きたか」「何が起きるべきだったのか」「それは何を意味しているのか」と言った、考え方を学びます。
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'パーシステンス: スティーヴィーと大きなプロジェクト'
              description_teacher: "生徒が質問に答えたりプロジェクトに取り組んだりしているときに障壁にぶつかると、イライラしてあきらめてしまいがちです。このレッスンでは、フラストレーションが学習の要になる可能性があることを生徒に教えます。ここでは、不満は、失敗の兆候ではなく、創造的なプロセスの手順として提示します。\\\r
                \\\rこのレッスンは、1回または2回のクラスセッションで行うことができます。時間があれば、マーブルラン アクティビティの構築フェーズと修正フェーズを自由に取り組んでください。"
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
              description_teacher: "このレッスンでは、実際の種を植えることにより、アルゴリズムの概念を日常の実際の活動に関連付けます。ここでの目標は、実際の状況をオンラインシナリオに、またはその逆に変換するスキルを構築し始めることです。\\\r"
            Learn to Drag and Drop:
              name: ドラッグアンドドロップによるシーケンス
              description_teacher: このレッスンでは、生徒がコンピューターラボに進むときに何が起こるかを理解します。まずはコンピューターラボのマナーを紹介する簡単なディスカッションから始まり、次にコンピューターを使ってオンラインパズルを完成させます。
            'Programming: Happy Maps':
              name: プログラミング：ハッピー マップ
              description_teacher: シーケンスを計画することと、そのシーケンスを適切な言語にエンコードすることの違いを生徒が理解すれば、アルゴリズムからプログラミングへ難なく移れるかもしれません。このアクティビティは、生徒が簡潔にしたプログラムで読み書きする経験を積むのに役立ちます。
            Programming in Maze:
              name: めいろ のプログラミング
              description_teacher: この一連のオンラインパズルは、アルゴリズム、デバッグ、および一般的なコンピューターリテラシーの理解を基に取り組みます。アングリーバードゲームのキャラクターが登場するこのゲームで、生徒は壁やTNTに衝突することなくトリをブタまで飛ばすための順序アルゴリズムを開発します。このステージには、問題解決と批判的思考の練習もできるように、デバッグパズルも含まれています。
            Going Places Safely:
              name: 'デジタル シティズンシップ: 安全にサイトを訪問する'
              description_teacher: このレッスンは、[コモンセンスメディア] と協力して、多くのウェブサイトで非公開の情報が求められることを学び、そのような要求を責任を持って処理する方法について説明します。また、生徒たちはオンラインでエキサイティングな場所に行くことができますが、安全でいるようにするには特定のルールに従う必要があることも学びます。
            'Loops: Happy Loops':
              name: くりかえし：ハッピー ループ
              description_teacher: ループは、プログラミングにおいて非常に役立つ強力なツールです。ループがどのように役立つかを理解するには、生徒は平凡な問題をより簡単に解決する意欲を持つ必要があります。
            Loops in Collector:
              name: くりかえし あつめる
              description_teacher: "「ハッピーループ」からの指示を繰り返すというコンセプトに基づいて、このステージでは、生徒にループを使ってCode.orgでより効率的に宝物を収集してもらいます。"
            Loops in Artist:
              name: アーティストくりかえし
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、ループでパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
              description_teacher: イベントは、事前に作成したアルゴリズムに多様性を加える優れた方法です。プログラムに、ユーザーが希望したタイミングでユーザーの指示に応答してもらいたいことがあります。イベントはそれが行えるようにします。
            Events in Play Lab:
              name: プレイ ラボのイベント
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってストーリーを作りましょう！
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          name: コースa -2017
        courseb-2017:
          title: コース B
          assignment_family_title: コース B
          description_audience: 5-8 才
          description_short: 低学年向けコンピューター サイエンス入門 (コースAとほぼ同じですが、若干高度な内容を加えています)
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'パーシステンス: スティーヴィーと大きなプロジェクト'
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            Learn to Drag and Drop:
              name: ドラッグアンドドロップによるシーケンス
            Your Digital Footprint:
              name: 'デジタル シティズンシップ: デジタルフットプリント'
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Programming in Maze:
              name: めいろ のプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Collector:
              name: くりかえし あつめる
            Loops in Artist:
              name: アーティストくりかえし
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Events in Play Lab:
              name: プレイ ラボのイベント
            More Programming in Maze:
              name: 迷路でさらにプログラミングを学ぶ
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          name: コースb -2017
        coursec-2017:
          title: コース C
          assignment_family_title: コース C
          description_audience: '年齢: 6～10才'
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
          lessons:
            Building a Foundation:
              name: 'パーシステンス: 基盤の構築'
            Programming in Maze:
              name: めいろ のプログラミング
            Debugging in Maze:
              name: 迷路で学ぶデバッグ
            'Real-life Algorithms: Paper Planes':
              name: '現実世界のアルゴリズム: 紙飛行機'
            Programming in Collector:
              name: コレクターで学ぶプログラミング
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: Getting Loopy':
              name: 'ループ: ルーピーをゲット'
            Loops in Maze:
              name: 迷路で学ぶループ
            Loops in Harvester:
              name: Loops in Harvester
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Build a Flappy Game:
              name: フラッピーゲームを構築する
            Events in Play Lab:
              name: プレイ ラボのイベント
            Screen Out the Mean:
              name: 'デジタル シティズンシップ: 平均をスクリーンアウト'
            Binary Bracelets:
              name: 'プログラミングを超えて: バイナリブレスレット'
            Loops in Artist:
              name: アーティストくりかえし
            Loops with Rey and BB-8:
              name: レイとBB-8と学ぶループ
          student_description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
          name: コースc -2017
        coursed-2017:
          title: コース D
          assignment_family_title: コース D
          description_audience: '年齢: 7～11才'
          description_short: コースCのおさらいを簡単にした後に、アルゴリズム、入れ子のループ、条件文などへ進みましょう。
          description: アルゴリズム、入れ子のループ、whileループ、条件、イベントなどの新しいプログラミング概念を学びましょう。独自のゲームやストーリーを作成して人と共有する前に、デジタル
            シティズンシップについて紹介します。
          lessons:
            Introduction:
              name: オンラインパズル入門
              description_student: このレッスンでは、このコースに必要なスキルを練習できます。
              description_teacher: このパズルのセットでは、生徒はCode.orgのオンラインワークスペースの紹介 (またはクラスの経験に応じて復習)
                から始めます。 「実行」、「リセット」、「手順」ボタンなど、ワークスペースの基本的な機能を紹介するビデオがあります。ビデオでは、Blocklyブロックのドラッグ、Blocklyブロックの削除、Blocklyブロックの接続についても説明しています。次に、生徒は迷路で_シーケンス_と_デバッグ_スキルを練習します。そこから、_ループ_の基本を学んだら、コレクター、アーティスト、農夫などの新しいタイプのパズルに進みます。
            'Algorithms: Graph Paper Programming':
              name: 'プログラミング: グラフ用紙プログラミング'
              description_student: このレッスンでは、絵を描くように友だちをプログラムします！
              description_teacher: プログラミングでお互いに絵を描くことによって、生徒はプログラミングがどんなものか本当に理解し始めます。授業では、目の前にある画像を再現できるように、生徒がお互いにグラフ用紙の正方形に色付けするよう指示することで始められます。もし時間があれば、生徒が自分で作成した画像を見せてレッスンを締めくくってもいいでしょう。
            Events in Bounce:
              name: バウンスで学ぶイベント
              description_student: 学校でビデオゲームをプレイできたらと夢見たことはありませんか？このレッスンでは、ゲームを自作できます！
              description_teacher: このオンラインアクティビティでは、生徒はイベントとは何か、コンピューターがビデオゲームなどのプログラムでイベントをどのように使用するかを学びます。生徒はパズルに取り組み、プログラムがイベント
                (矢印ボタンが押されるなど) に反応するようにします。パズルの最後に、生徒はさまざまな速度と音でゲームをカスタマイズする機会があります。
            Nested Loops:
              name: 入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、ループを別のループ内に配置するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Nested Loops in Artist:
              name: アーティストと学ぶ入れ子のループ
              description_student: ここでは、入れ子のループを使って、家族や友人に見せれるようなクールな絵を描きます。
              description_teacher: 生徒はループを重ねる方法を理解したので、非常に多くの美しいものを作成できます。このレッスンでは、生徒は一連の演習を行い、ポートフォリオに対応した独自のイメージを作成できるようにします。
            'Algorithms: Relay Programming':
              name: 'デバッグ: リレープログラミング'
              description_student: コースの最初にプログラムで絵を描いことを覚えていますか？このレッスンでは、チームと協力してこれとよく似た作業を行います。
              description_teacher: このアクティビティは、「グラフ用紙プログラミング」の簡単な復習から始まります。次に、生徒がチームに分かれて一緒にプログラムを1つずつ作成していくにつれ、時間との戦いが始まります。
            Debugging in Bee:
              name: みつばちと学ぶデバッグ
            While Loops in Farmer:
              name: ファーマーの「while」ループ
              description_student: ループはプログラミングで非常に役立ちます。このレッスンでは、新しい種類のループ、whileループについて説明します！
              description_teacher: 生徒がこのレッスンに到達する頃には、「repeat」ループを使って練習をたくさん行ってきているはずなので、ここではそれを発展させていきます。_Whileループ_は、条件が満たされている間、コマンドを繰り返し続けるループです。
                whileループは、プログラマーがコマンドを繰り返す必要がある正確な回数を知らない場合に使われますが、ループを繰り返し続けるためにどの条件がtrueである必要があるかを知っています。たとえば、生徒は農夫のゲームで穴を埋めたり、土を掘ったりする操作を行います。穴の大きさや土の山の高さはわかりませんが、地面が平らにならない限り、穴を埋めて土を掘り続ける必要があることを生徒は知っています。
            Conditionals with Cards:
              name: 'If/Else: カードを使った条件文'
              description_student: 特定の条件下でのみポイントを獲得するゲームをプレイしましょう！
              description_teacher: このレッスンでは、条件文を使ってプログラムを特定の情報にどのように合わせたらよいかを示します。プログラムを作成するときに必要な情報がすべて揃っているとは限りません。プログラムの実行時にどのような状況になるかわからない場合でも、ある状況では他のことを実行したい場合があります。ここが条件文の出番です。条件文は、プログラムの実行時にtrueである情報に基づいて、コンピューターが決定を下せるようにします。
            Conditionals in Bee:
              name: みつばちと学ぶ条件文
              description_student: 条件文を理解したところで、ハチミツとミツを収集するときに条件文を使うようにみつばちをプログラムしましょう。
              description_teacher: ここまで、生徒は実行するたびにまったく同じ操作を実行するプログラムを作成してきました。これは信頼性は高くても、柔軟性があまりありません。このレッスンでは、クラスで条件文を使ったプログラミングを開始し、プログラムが遭遇した特定の条件に応じて対応を異にするプログラムを作成します。
            Conditionals & Loops in Maze:
              name: 迷路で学ぶ条件文とループ
              description_student: 条件文とループを一緒に用いると、驚くべきことができます！
              description_teacher: このレッスンでは、ループと条件の2つの主要な概念を組み合わせることを学習します。ここで行う一連のパズルにより、複数の種類のブロックを使用するパズルで作業するときにどうしたらいいのかわからなくなる状況に対処します。
                2つのアイデアを組み合わせると、生徒はより複雑なプログラムを作成でき、見事な創造性と批判的思考を表現できます！
            Conditionals & Loops in Farmer:
              name: 農夫と学ぶ条件文とループ
              description_student: 各条件文をいつ使用するかが常に明確であるとは限りません。このレッスンは、何をすべきかを決める練習をするのに役立ちます。
              description_teacher: 生徒は「while」ループ、「until」ループ、および「if/else」文を練習します。これらのブロックはすべて条件文を使用します。
                3つすべてを練習することで、生徒は複雑で柔軟なプログラムを書く方法を学びます。
            Digital Citizenship:
              name: 'デジタル シティズンシップ: デジタル シティズンシップの実践'
              description_student: 情報によってはオンラインで共有すると安全ではないものもあります。このレッスンは、公開しても安全な情報と個人情報の違いを学ぶのに役立ちます。
              description_teacher: このレッスンは、Common Sense Educationと連携して、一部のウェブサイトが提供することを要求するか入力する必要があるユーザー情報について批判的に考えることを学ぶのに役立ちます。生徒はプライベート情報と個人情報の違いを学び、オンラインで共有するのに安全か安全でないかを区別します。生徒は、優れたデジタル市民になる方法を学ぶための1つの手順として、オフラインおよびオンラインコミュニティに対して責任を持ち、尊重することの意味を探ります。
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
              description_student: このレッスンでは、独自のビデオゲームを作成する方法を学びます。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
            'Unplugged: Binary':
              name: 'プログラミングを超えて: バイナリイメージ'
              description_student: コンピューターがオンとオフのような単純なアイデアを使ってどのように画像を保存しているかを学びましょう。
              description_teacher: 多くの人はバイナリを厳密に0と1と考えていますが、ここでは情報をさまざまなバイナリオプションで表すことができるという考え方を学びます。さらにこのレッスンではこの考え方を一歩進めて、コンピューターがさらに複雑な情報
                (画像や色など) をバイナリでどう格納するのかも示します。
            Artist Binary:
              name: アーティストと学ぶバイナリ
              description_student: ピクセルをオンまたはオフにするコマンドのみを使って、バイナリイメージを作成するように自分のアーティストに指示しましょう。
              description_teacher: バイナリはコンピューターの世界では非常に重要です。今日のコンピューターの大半は、あらゆる種類の情報をバイナリ形式で格納しています。このレッスンは、実際の生活から何かを取り出し、それをどのようにしたら一連のオンとオフに変換できるかを示します。生徒は、0と1をオフとオン
                (または黒と白) に変換することにより、アーティストでバイナリイメージを作成します。
            Nested Loops Project in Artist:
              name: フローズンで学ぶ入れ子のループ
              description_student: 入れ子のループについてさらに学習します！今回は、入れ子のループを使って素晴らしい絵を描きます。
              description_teacher: 生徒は、今日使うパズルセットでアーティストを使って複雑なデザインを作成します。入れ子のループを新しい目標に向かって練習し続けることにより、生徒は一般的にループをどのように使ったらいいのかをより詳しく学べます。このパズルのセットは、ステージの最後に生徒が独自のデザインを作成する機会を提供し、創造性をより発揮することができます。
            Debugging in Collector:
              name: コレクターでのデバッグ
              description_student: プログラミング中に問題が発生したことはありませんか？このレッスンでは、デバッグの秘密について学びます。デバッグは、プログラム内の問題を見つけて修正するプロセスです。
              description_teacher: このオンラインアクティビティでは、「コレクター」環境でデバッグを練習します。生徒は、プログラムを読んだり編集したりする練習をして、簡単なアルゴリズム、ループ、入れ子のループでパズルを修正します。
          student_description: アルゴリズム、入れ子のループ、whileループ、条件、イベントなどの新しいプログラミング概念を学びましょう。独自のゲームやストーリーを作成して人と共有する前に、デジタル
            シティズンシップについて紹介します。
          name: コースd -2017
        coursee-2017:
          title: コース E
          assignment_family_title: コース E
          description_audience: '年齢: 8～12才'
          description_short: コースCとDのおさらいを簡単にした後、関数へと進みましょう。
          description: アルゴリズム、ループ、条件文、イベントを使ってプログラミングから始めて、関数に移ります。このコースの後半では、友だちや家族と共有できるキャップストーンプロジェクトを設計して作成します。
          lesson_groups:
            csf_e_1:
              display_name: コースEへの強化 (オプション)
            csf_e_2:
              display_name: コースEの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
            extra_course_content:
              display_name: 追加のコース内容
          lessons:
            'Algorithms: Tangrams':
              name: 'アルゴリズム: タングラム'
            Introduction:
              name: オンラインパズル入門
              description_student: このペースの速い紹介では、このコースのパズルを解くために必要なスキルのほとんどを練習する機会があります。
              description_teacher: このレッスンでは、生徒はCode.orgのオンラインワークスペースの紹介 (またはクラスの経験に応じてレビュー)
                から始めます。生徒は、「実行」、「リセット」、「手順」ボタンを含むインターフェイスの基本的な機能を学びます。最初のビデオでは、Blocklyブロックのドラッグ、削除、接続も紹介されています。パズルでは、生徒は迷路とアーティストでシーケンスとデバッグのスキルを練習します。
            The Power of Words:
              name: 言葉の力
            Ice Age Play Lab:
              name: アイスエイジ プレイラボ
            Envelope Variables:
              name: エンベロープ変数
            Variables in Artist:
              name: アーティストと学ぶ変数
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
            For Loop Fun:
              name: Forループを楽しむ
            For Loops in Bee:
              name: みつばちと学ぶループ
            For Loops in Artist:
              name: アーティストと学ぶループ
            Songwriting with Parameters:
              name: パラメーターで歌や曲をつくる
            Conditionals and Functions in Bee:
              name: みつばちの条件文と関数
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
              description_student: ここにいくつかのゲームと絵があります。それを使って遊んで、自分のプロジェクトのアイデアを手に入れよう！
              description_teacher: 次の4つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたって体験してもらうことを意図しています。その中で、ブレーンストーミングの探求、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボで事前に作成されたプロジェクトの例を見て、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティストまたはプレイラボで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。最後に、生徒は完成した作品を仲間に発表することができます。
            The Design Process:
              name: 設計プロセス
              description_student: このように大きなプロジェクトには時間と十分な計画が必要です。ここでは、設計プロセスについて学習し、後で独自の作品を作成するのに使用できるようにします。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトのこの部分では、生徒は設計プロセスと、それを自分のプロジェクトにどのように実装するかについて学びます。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Build Your Project:
              name: プロジェクトの構築
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
              description_teacher: 4つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトをプログラミングする準備をしていきます。ここでは、生徒はアーティストまたはプレイラボでプロジェクトを作成するためのスペースが与えられます。これは、プロジェクトで最長のステージになるかもしれません。プロセスの4つのステージすべてのレッスンガイドについては、このプロジェクトプロセスの最初のステージ[こちら]
                \(<https://curriculum.code.org/csf/coursee/12/>) にあります。
            Revise Your Project:
              name: プロジェクトを修正する
            Presentation Your Project:
              name: プロジェクトのプレゼンテーション
            'Algorithms: Dice Race':
              name: 'アルゴリズム: ダイスレース'
              description_student: このアルゴリズムのレッスンでは、コンピューターの観点からゲームを記述する方法を学びます。
              description_teacher: このレッスンでは、ダイスレースゲームをプレイして、アルゴリズムの概念を実際の活動に関連付けます。ここでの目標は、実際の状況をオンラインシナリオに、またはその逆に変換するスキルの構築し始めることです。
            Conditionals:
              name: 農夫で学ぶ条件文
              description_student: この楽しくてやりがいのあるシリーズでは、特定の条件下でコンピューターに何をすべきかを教えます。
              description_teacher: このレッスンでは、生徒に「while」ループと「if/else」文を紹介します。 「while」ループは、条件が真である限り、コマンドを繰り返し続けるループです。whileループは、プログラマーがコマンドを繰り返す必要がある正確な回数を知らないときに使用しますが、プログラマーは、ループがループを続けるためにどの条件が真である必要があるかを知っています。「If/Else」文は、何かが真である場合にのみプログラムのセクション全体を実行することでプログラミングに柔軟性を提供し、そうでない場合は他の何かを実行します。
            Private and Personal Information:
              name: 'デジタル シティズンシップ: プライベート情報と個人情報'
              description_student: インターネットは楽しくて刺激的ですが、安全を確保することも重要です。このレッスンでは、安全に共有できる情報と非公開の情報の違いを学びます。
              description_teacher: Common Sense Educationが開発したこのレッスンでは、オンラインで共有しても安全な情報とそうでない情報の違いについて学んでいきます。生徒は自分のID情報を要求するサイトを訪問する際、重要な調査プロセスを踏むことを学びます。これにより、自分自身と家族をID情報の盗難から守ることができます。このレッスンでは、一部のウェブサイトが要求するユーザー情報について批判的に考える方法を学びます。また、プライベート情報と個人情報の違い、およびオンラインで共有するのに安全か安全でないかを判別する方法を学びます。
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
              description_student: このレッスンで独自のスター・ウォーズゲームを構築しながら、フォースを感じてください。
              description_teacher: このレッスンでは、イベントを使ってオンラインで共有できるゲームを作成する練習をします。 R2-D2や他のスター・ウォーズのキャラクターが登場し、イベントの案内を一通り受けてから、スペースが与えられて独自のゲームを作成します。
            'Functions: Songwriting':
              name: '関数: 作曲'
              description_student: ロックスターでさえプログラミングのスキルが必要です。このレッスンでは、曲の歌詞を用いた関数について学習します。
              description_teacher: コンピューター サイエンスの世界で最も素晴らしい構造の1つは関数です。関数 (プロシージャと呼ばれることもあります)
                は、大きなプログラムの中で繰り返し使用できるミニプログラムです。このレッスンでは、まとまったコードを関数に合わせることがなぜ役立つのかを生徒が直感的に理解するのに役立ちます。
            Functions in Artist:
              name: アーティストと学ぶ関数
              description_student: 関数で複雑な図面をより簡単に作成！
              description_teacher: 生徒は、Code.orgで関数の使い方を学びます。アーティストと学ぶ関数で、壮大な画像を作成および変更します。より複雑なパターンについては、関数を別の関数の中から呼び出すことにより、入れ子の関数について学びます。
            Functions in Bee:
              name: みつばちと学ぶ関数
              description_student: すべてのミツとハチミツを集めるのに長過ぎるプログラムを書かないようにしましょう。代わりに関数を使ってください！
              description_teacher: 関数の2回目の練習では、生徒は複雑な道を進み、たくさんのミツを集めて、たくさんのハチミツを作ります。
            Functions in Farmer:
              name: 農夫と学ぶ関数
              description_student: ファーマーの収穫を手伝う際、関数が大きな手助けをしてくれます。
              description_teacher: 生徒は、アーティストで印象的なデザインを作成し、みつばちのゲームで迷路をナビゲートすることを練習しましたが、今日は、農夫のゲームで作物を収穫するための関数を用います。このレッスンでは、関数を「while」ループと「if/else」文と組み合わせることで、関数の新しい使用法を学びます。
            Determine the Concept:
              name: コンセプトの決定
              description_student: 秘密は漏らしません！このレッスンでは、これまでに学んだスキルを活用できます。
              description_teacher: このレッスンでは、前のレッスンの概念をまとめ、どの概念を適用するかを伝えずに、各問題をどのように解決するかについて批判的に考える機会を生徒に提供します。生徒は、基本的なアルゴリズム、デバッグ、「repeat」ループ、条件文、「while」ループ、関数についておさらいします。
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
              description_student: ゲームを作成する練習をして、友だちや家族と共有しましょう。
              description_teacher: このレッスンでは、プレイラボを取り上げます。プレイラボは、生徒が独自のゲームを作成し、キャラクターとユーザー入力の間でやり取りが行えるプラットフォームです。生徒はイベントを使って、キーボードコントロールを行います。このパズルのセットは、ゲーム開発を大まかにガイドしますが、自分のアイデアを自由に追加できます。
            Present Your Project:
              name: プロジェクトの発表
              description_student: 人に見てもらう準備はいいですか？完成したプロジェクトを同僚に発表する時が来ました。
              description_teacher: 4つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトをプログラミングする準備をしていきます。最後に、生徒は完成した作品を同僚に発表したり、特別なリンクを使って家族と共有したりできます。プロセスの4つのステージすべてのレッスンガイドは、このプロジェクトプロセスの最初のステージ[こちら]
                \(<https://curriculum.code.org/csf/coursee/12/>) にあります。
            Internet:
              name: 'プログラミングを超えて: インターネット'
              description_student: 情報がインターネット上をどのように移動するのか疑問に思ったことはありませんか？魔法を使っているわけではありません！このレッスンでは、インターネットの仕組みの基本を学びます。
              description_teacher: 多くの人が毎日インターネットを使っていますが、それがどのように機能するかを知っている人はあまりいません。このレッスンでは、接続、URL、IPアドレス、DNSについて学びながら、インターネットの流れを疑似体験します。
            Crowdsourcing:
              name: 'プログラミングを超えて: クラウドソーシング'
              description_student: このレッスンでは、チームでプロジェクトを構築するプロセスであるクラウドソーシングについて学びます。
              description_teacher: コンピューター サイエンスでは、大きな困難な問題に直面します。大きな素数を見つけることやDNAの配列を決定するなどの課題は、個人として行うことはほとんど不可能です。他の人の力を借りると、このようなタスクが扱いやすくなります。このレッスンでは、コンピューター
                サイエンス業界でチームワークがいかに役立つかを説明します。
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee/Zombie:
              name: みつばち/ゾンビと学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            Nested Loops:
              name: 入れ子のループ
            Functions in Harvester:
              name: 農夫と学ぶ関数
          student_description: アルゴリズム、ループ、条件文、イベントを使ってプログラミングから始めて、関数に移ります。このコースの後半では、友だちや家族と共有できるキャップストーンプロジェクトを設計して作成します。
          name: コースe-2017
        coursef-2017:
          title: コース F
          assignment_family_title: コース F
          description_audience: '年齢: 9～13才'
          description_short: コンピューター サイエンス入門のすべての概念を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description: このコースでは、さまざまな種類のループ、イベント、関数、条件文を使用する方法を学びます。さまざまな問題解決手法を調査し、コンピューティングとインターネットの社会的影響について話し合います。このコースの後半では、友人や家族と共有できるキャップストーンプロジェクトを設計して作成します。
          lesson_groups:
            csf_f_1:
              display_name: コースFへの強化 (オプション)
            csf_f_2:
              display_name: コースFの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Algorithms: Tangrams':
              name: 'アルゴリズム: タングラム'
              description_student: ここでは、タングラムと呼ばれるパズルを使用したアルゴリズムについて学びます。
              description_teacher: このレッスンは、アルゴリズムで重要なことを示しています。アルゴリズムを単純に保つ限り、アルゴリズムを使用する方法はたくさんあります。ただし、全員が同じ結果を出すようにしたい場合は、アルゴリズムにさらに詳細を加える必要があります。タングラムで遊んでいる間、生徒は詳細なアルゴリズムと一般的なアルゴリズムの違いを学びます。
            Introduction:
              name: オンラインパズル入門
              description_student: このレッスンでは、このコースで学べる素晴らしいことをいくつか簡単に紹介します。
              description_teacher: このレッスンでは、シーケンス、ループ、入れ子のループを紹介し、コースの後半にかけてより複雑な概念に対応できるようにします。この「徐々にステップアップする」レッスンにより、クラスの上級者と初心者を対等な立場に立たせることができます。
            The Power of Words:
              name: 'デジタル シティズンシップ: 言葉の力'
              description_student: いじめは決して許されません。このレッスンでは、オンラインで何を言ってよいか、何を言ってはいけないかについて説明します。
              description_teacher: お気に入りのウェブサイトを楽しむ一方、他の生徒からのメッセージを読んで怒ったり、傷ついたり、悲しくしたり、恐れたりする可能性があります。生徒はネットいじめに対処する方法と、オンラインで動揺するメッセージに直面した場合に対処する方法を探ります。生徒は、コミュニケーションにテクノロジーをどのように使用しているかについて話し合い、対面コミュニケーションとオンラインコミュニケーションの類似点と相違点を探ります。次に、生徒はネットのいじめに対応する方法についてブレインストーミングを行います。
            Ice Age Play Lab:
              name: アイスエイジで学ぶイベント
              description_student: 好きなビデオゲームを思い浮かべてください。それがどのように作られたのか疑問に思ったことはありませんか？ここで取り組むパズルで、アイスエイジの友だちとあなただけのビデオゲームを開発します。
              description_teacher: このレッスンでは、生徒はアイスエイジのキャラクターが登場するストーリーを通して学習します。生徒はイベントやループを操作して画面上でキャラクターを動かします。ガイド付きのレベルをクリアした後、自分のゲームやストーリーを作成する機会があります。
            Envelope Variables:
              name: '変数: エンベロープ変数'
              description_student: エンベロープと変数には共通点があり、どちらも貴重なものを保持できます。ここでは、変数とは何か、変数が行える素晴らしいことを学びます。
              description_teacher: 変数は、数値や単語などの値のプレースホルダーとして使用します。変数を使用すると、プログラミングの自由度が大幅に向上します。フレーズを何度も入力したり、あいまいな数値を覚えたりすることなく、コンピューター
                サイエンティストは変数を使ってそのようなフレーズや数値を参照できます。このレッスンでは、変数とは何か、どのような方法で変数を用いられるかについて説明します。変数の概念は簡単に理解できる概念ではないため、レッスンの最後に十分な時間をとって話し合うことをお勧めします。
            Variables in Artist:
              name: アーティストと学ぶ変数
              description_student: クラスに創造性の風を吹き込むことを忘れないでください！ここで取り組むパズルでは、変数を使って素晴らしい絵を作成します。
              description_teacher: このレッスンでは、アーティスト環境の変数を使って、反復的なデザインを行う方法ついて学びます。生徒は、変数をどう使うと、プログラムをど簡単に記述し、読みやすくできるかを学びます。ガイド付きパズルを行った後、生徒はフリープレイレベルで終了します。そこで学んだことを示し、独自のデザインを作成します。
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
              description_student: 間もなく、変数を使ってゲーム内でキャラクターをどのように相互作用させるかを学びます！
              description_teacher: このレッスンでは、プレイラボでシーンを作成することで、変数を使った練習をさらに行います。生徒は、ユーザーの入力を受けて変数の値を設定してから、変数を使って独自のミニプロジェクトを作成する時間があります。
            For Loop Fun:
              name: 'Forループ: Forループを楽しむ'
              description_student: "「for」ループを楽しく学習しましょう！"
              description_teacher: ループのおかげで、何度でも繰り返し実行できることがわかっていますが、ここでは、追加の構造が組み込まれたループをどう使うかを学習します。このような新しい構造により、より強力で動的なプログラムを作成できます。
            For Loops in Bee:
              name: みつばちと学ぶループ
              description_student: ブンブンブン。このパズルでは、「for」ループを使ってみつばちをミツとハチミツに導きます。
              description_teacher: みつばちが登場するこのレッスンでは、forループに焦点を合わせ、増分変数を使ってより複雑なパズルを解きます。生徒は前のレッスンのループを復習し、次にforループを使って複雑な問題をより効果的に解決する方法を学習します。
            For Loops in Artist:
              name: アーティストと学ぶループ
              description_student: 次の傑作を作る準備をしてください。ここでは、「for」ループを使って、驚くような画像を作成します。
              description_teacher: このレッスンでは、生徒はforループの練習を続けますが、今回はアーティストと一緒に行います。生徒は、変数、ループ、およびforループのアイデアを組み合わせてパズルを完成させ、複雑なデザインを作成します。最後に、フリープレイレベルで自分の作品を作成する機会があります。
            Songwriting with Parameters:
              name: '関数: パラメータで作曲'
              description_student: 次の大ヒットシングルをリリースするのは、あなたかもしれません！このレッスンでは、パラメータとは何か、それにより素晴らしい曲をどのように作曲できるかを学びます。
              description_teacher: コンピューター サイエンスの世界で最も素晴らしい構造の1つは関数です。関数 (プロシージャと呼ばれることもあります)
                は、大きなプログラムの中で繰り返し使用できるミニプログラムです。このレッスンでは、まとまったコードを関数に合わせることがなぜ役立つのか、そしてまとまったコードがわずかに異なる場合でもその構造をどのように活用できるかを生徒が直感的に理解するのに役立ちます。
            Conditionals and Functions in Bee:
              name: みつばちの条件文と関数
              description_student: みつばちがまたあなたの助けを必要としています！ここでは、ミツを取ってハチミツを作るための関数を使います！
              description_teacher: このレッスンでは、高度な「モーダル」関数エディターを使って簡単な関数を作成する方法を学習し、将来のレッスンにパラメータを組み込んで取り組む準備をします。
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
              description_student: プログラミングを作成する準備してください。ご紹介するパズルでは、パラメータ付きの関数を使って、アーティストで印象的な描画を作成します。
              description_teacher: このレッスンでは、生徒はパラメータありとパラメータなしの関数を引き続き使用します。生徒は、フリープレイレベルで関数を変更する前に、パラメータありまたはパラメータなしの独自の図面を作成する機会があります。
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
              description_student: パラメータ付きの関数を使って少し練習しました。このレッスンでは、みつばちと一緒に練習を続けましょう！
              description_teacher: このレッスンではみつばちの環境を取り上げ、前のアーティストステージのパラメータ付きの関数の概念に沿って続けます。生徒は、複雑な道をたどり、ミツとハチミツのパターンを収集するための関数の記述と使用を練習します。
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
              description_student: インスピレーションをもらう時間です！ご紹介するパズルは、事前に構築されたゲームとイラストをいくつか示し、大きなプロジェクトの計画を立てるのを助けます。
              description_teacher: 次の5つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたるプロジェクトを意図しています。その中で、ブレーンストーミング、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボでプロジェクトの例を見て、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティストまたはプレイラボで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。生徒はテストをして再考した後、プロジェクトを修正します。最後に、生徒は完成した作品を仲間に発表することができます。
            The Design Process:
              name: 設計プロセス
              description_student: このように大きなプロジェクトには時間と十分な計画が必要です。ここでは、設計プロセスについて学習し、後で独自の作品を作成するのに使用できるようにします。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトのこの部分では、生徒は設計プロセスと、それを自分のプロジェクトにどのように実装するかについて学びます。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Build Your Project:
              name: プロジェクトの構築
              description_student: これでようやく、プロジェクトの構築を開始できます。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。ここでは、生徒はアーティストまたはプレイラボでプロジェクトを作成するためのスペースが与えられます。これは、プロジェクトで最長の部分になります。プロセスの5つの部分すべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Revise Your Project:
              name: プロジェクトを修正する
              description_student: ローマは一日にして成らずと言われるように、プロジェクトもすぐに作成できるわけではありません。時間をかけてプロジェクトを編集および修正し、最高のものを手がけてください。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトが構築されたので、生徒は仲間からフィードバックを受けてプロジェクトを修正する機会があります。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Presentation Your Project:
              name: プロジェクトのプレゼンテーション
            Present Your Project:
              name: プロジェクトの発表
              description_student: では、作品を見てもらいましょう！ここでは、手がけた素晴らしいプロジェクトを仲間に見てもらいます。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。最後に、生徒は完成した作品を同僚に発表したり、特別なリンクを使って家族と共有したりできます。プロセスの5つのステージすべてを概説したレッスンガイドは、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Conditionals in Minecraft:
              name: マインクラフトの条件文
              description_student: 溶岩を避けて！ここでは、マインクラフトの世界で条件文について学習します。
              description_teacher: このレッスンでは、条件文を学び、練習する機会があります。マインクラフトのキャラクターと設定が登場し、プログラムを使って採掘や構造物の構築などのタスクを完了します。
            Functions in Bee:
              name: みつばちと学ぶ関数
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee/Zombie:
              name: みつばち/ゾンビと学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
          student_description: このコースでは、さまざまな種類のループ、イベント、関数、条件文を使用する方法を学びます。さまざまな問題解決手法を調査し、コンピューティングとインターネットの社会的影響について話し合います。このコースの後半では、友人や家族と共有できるキャップストーンプロジェクトを設計して作成します。
          name: コースf-2017
        csdnovice:
          title: CS発見 TeacherCon 初心者ファシリテーター
          description_audience: CSD初心者ファシリテーター
          description_short: TeacherConの初心者ファシリテーター向けの復習質問。
          description: 初心者ファシリテーターとしてTeacherConで学んだことを追跡する場所。
          lessons:
            Tuesday:
              name: 火曜日
            Wednesday:
              name: 水曜日
            Thursday:
              name: 木曜日
            Welcome:
              name: ようこそ
            Congrats:
              name: おめでとう
            Wrap Up:
              name: まとめ
          student_description: 初心者ファシリテーターとしてTeacherConで学んだことを追跡する場所。
        csp-explore-task:
          title: CSP PT準備を探索
          description_short: レッスンでは、CS原則APパフォーマンスタスクの探求の準備と完了を扱います。
          description: レッスンでは、CS原則APパフォーマンスタスクの探求の準備と完了を扱います。
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: PT準備の調査 - タスクの確認
            Explore PT - Making a Plan:
              name: PTの探索 - 計画の立案
            Explore PT - Complete the Task:
              name: PTの探索 - タスクの完了
        csp-create-task:
          description_short: レッスンでは、CS原則APパフォーマンスタスクの作成の準備と完了を扱います。
          description: レッスンでは、CS原則APパフォーマンスタスクの作成の準備と完了を扱います。
          lessons:
            Create PT Prep - Reviewing the Task:
              name: PT準備の作成 - タスクの確認
            Create PT Prep - Making a Plan:
              name: PT準備の作成 - 計画の作成
            Create PT - Complete the Task:
              name: PTの作成 - タスクの完了
        csp-ap-tech-setup:
          title: CSP APデジタルポートフォリオとその他のツール
          description: APパフォーマンスタスクの完了と提出に必要なAPデジタルポートフォリオのセットアップとその他の技術ツールについて説明します。
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - APデジタルポートフォリオとその他のツール
        csp-ap:
          title: CSP AP試験とパフォーマンスタスク
          description_short: レッスンでは、AP試験とパフォーマンスタスクに向けた準備と完了方法のガイダンスを生徒に提供します。
          description: レッスンでは、AP試験とパフォーマンスタスクに向けた準備と完了方法のガイダンスを生徒に提供します。
          lesson_groups:
            csp_ap_1:
              display_name: '第1章: AP 技術のセットアップ'
            csp_ap_3:
              display_name: '第3章: AP パフォーマンスタスクの作成'
            csp_ap_2:
              display_name: '第2章: AP パフォーマンスタスクの探索'
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - APデジタルポートフォリオとその他のツール
            Create PT Prep - Reviewing the Task:
              name: PT準備の作成 - タスクの確認
            Create PT Prep - Making a Plan:
              name: PT準備の作成 - 計画の作成
            Create PT - Complete the Task:
              name: PTの作成 - タスクの完了
            Explore PT Prep - Reviewing the Task:
              name: PT準備の調査 - タスクの確認
            Explore PT - Making a Plan:
              name: PTの探索 - 計画の立案
            Explore PT - Complete the Task:
              name: PTの探索 - タスクの完了
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
          student_description: レッスンでは、AP試験とパフォーマンスタスクに向けた準備と完了方法のガイダンスを生徒に提供します。
        cspnovice:
          title: CS原則TeacherCon初心者ファシリテーターの復習
          description_audience: CSP初心者ファシリテーター
          description_short: TeacherConの初心者ファシリテーター向けの復習質問。
          description: 初心者ファシリテーターとしてTeacherConで学んだことを追跡する場所。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Welcome:
              name: ようこそ
            Tuesday:
              name: 火曜日
            Wednesday:
              name: 水曜日
            Thursday:
              name: 木曜日
            Wrap Up:
              name: まとめ
          student_description: 初心者ファシリテーターとしてTeacherConで学んだことを追跡する場所。
        novice-view:
          title: 初心者の回答を見る
          description_audience: ブルック、ダニ、マル
          lessons:
            CSP Tuesday:
              name: CSP火曜日
            CSP Wednesday:
              name: CSP水曜日
            CSP Thursday:
              name: CSP木曜日
            CSD Tuesday:
              name: CSD火曜日
            CSD Wednesday:
              name: CSD水曜日
            CSD Thursday:
              name: CSD木曜日
        csp1-dlp:
          title: CSPユニット1の詳細学習
          description_audience: トレーニング中のCS原則ファシリテーター
          description_short: トレーニング中のCSPファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット1です。ここでは、Code.org
            CSPカリキュラムのユニット1の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete your Deeper Learning:
              name: 詳細学習を完了する
            Complete Unit 1 Deeper Learning Reflections:
              name: ユニット1の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット1です。ここでは、Code.org
            CSPカリキュラムのユニット1の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp2-dlp:
          title: CSPユニット2の詳細学習
          description_audience: トレーニング中のCS原則ファシリテーター
          description_short: レーニング中のCSPファシリテーター向けのユニット2ト詳細学習の資料
          description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット2です。ここでは、Code.org
            CSPカリキュラムのユニット2の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 2 Deeper Learning:
              name: ユニット2の詳細学習を完了する
            Complete Unit 2 Deeper Learning Reflections:
              name: ユニット2の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット2です。ここでは、Code.org
            CSPカリキュラムのユニット2の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp3-dlp:
          title: CSPユニット3の詳細学習
          description_audience: トレーニング中のCS原則ファシリテーター
          description_short: レーニング中のCSPファシリテーター向けのユニット3ト詳細学習の資料
          description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット3です。ここでは、Code.org
            CSPカリキュラムのユニット3の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 3 Deeper Learning Reflections:
              name: ユニット3の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット3です。ここでは、Code.org
            CSPカリキュラムのユニット3の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp4-dlp:
          title: CSPユニット4の詳細学習
          description_audience: トレーニング中のCS原則ファシリテーター
          description_short: トレーニング中のCSPファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット4です。ここでは、Code.org
            CSPカリキュラムのユニット4の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 4 Deeper Learning Reflections:
              name: ユニット4の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット4です。ここでは、Code.org
            CSPカリキュラムのユニット4の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp5-dlp:
          title: CSPユニット5の詳細学習
          description_audience: トレーニング中のCS原則ファシリテーター
          description_short: トレーニング中のCSPファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット5です。ここでは、Code.org
            CSPカリキュラムのユニット5の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 5 Deeper Learning Reflections:
              name: ユニット5の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CSPファシリテーター向けの詳細学習プランのユニット5です。ここでは、Code.org
            CSPカリキュラムのユニット5の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd1-dlp:
          title: CS発見ユニット1の詳細学習
          description_audience: トレーニング中のCS発見ファシリテーター
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット1です。ここでは、Code.org
            CS発見カリキュラムのユニット1の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 1 Deeper Learning Reflections:
              name: ユニット1の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット1です。ここでは、Code.org
            CS発見カリキュラムのユニット1の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd6-dlp:
          title: CS発見ユニット6の詳細学習
          description_audience: トレーニング中のCS発見ファシリテーター
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット6です。ここでは、Code.org
            CS発見カリキュラムのユニット6の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 6 Deeper Learning Reflections:
              name: ユニット6の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット6です。ここでは、Code.org
            CS発見カリキュラムのユニット6の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd5-dlp:
          title: CS発見ユニット5の詳細学習
          description_audience: トレーニング中のCS発見ファシリテーター
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット5です。ここでは、Code.org
            CS発見カリキュラムのユニット5の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 5 Deeper Learning Reflections:
              name: ユニット5の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット5です。ここでは、Code.org
            CS発見カリキュラムのユニット5の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd4-dlp:
          title: CS発見ユニット4の詳細学習
          description_audience: トレーニング中のCS発見ファシリテーター
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット4です。ここでは、Code.org
            CS発見カリキュラムのユニット4の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 4 Deeper Learning Reflections:
              name: ユニット4の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット4です。ここでは、Code.org
            CS発見カリキュラムのユニット4の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd3-dlp:
          title: CS発見ユニット3の詳細学習
          description_audience: トレーニング中のCS発見ファシリテーター
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット3です。ここでは、Code.org
            CS発見カリキュラムのユニット3の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 3 Deeper Learning Reflections:
              name: ユニット3の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット3です。ここでは、Code.org
            CS発見カリキュラムのユニット3の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd2-dlp:
          title: CS発見ユニット2の詳細学習
          description_audience: トレーニング中のCS発見ファシリテーター
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット2です。ここでは、Code.org
            CS発見カリキュラムのユニット2の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 2 Deeper Learning Reflections:
              name: ユニット2の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット2です。ここでは、Code.org
            CS発見カリキュラムのユニット2の習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        express-2017:
          title: エクスプレスコース
          assignment_family_title: エクスプレスコース
          description_audience: '年齢: 9～18才'
          description_short: コンピューター サイエンス入門。小学校の中高学年向けコースの良い所をとりだしました。
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          lesson_groups:
            content:
              display_name: 内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Programming Unplugged: My Robotic Friends':
              name: 'オフラインプログラミング: ロボティック フレンド'
            Introduction:
              name: はじめに
            'Algorithms: Graph Paper Programming':
              name: 'プログラミング: グラフ用紙プログラミング'
            'Algorithms: Relay Programming':
              name: 'デバッグ: リレープログラミング'
            Debugging in Collector:
              name: デバッグ入門
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops Project in Artist:
              name: アーティストでの入れ子のループプロジェクト
            Internet:
              name: インターネット
            Digital Citizenship:
              name: デジタル シティズンシップ
            Screen Out the Mean:
              name: 平均をスクリーンアウト
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
            Events in Bounce:
              name: バウンスで学ぶイベント
            Build a Flappy Game:
              name: フラッピーゲームを構築する
            Conditionals with Cards:
              name: カードと条件
            While Loops in Farmer:
              name: ファーマーの「while」ループ
            Conditionals & Loops in Maze:
              name: 迷路で学ぶ条件文とループ
            Conditionals in Minecraft:
              name: マインクラフトの条件文
            Conditionals & Loops in Farmer:
              name: 農夫と学ぶ条件とループ
            Envelope Variables:
              name: エンベロープ変数
            Variables in Artist:
              name: アーティストと学ぶ変数
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
            For Loop Fun:
              name: Forループを楽しむ
            For Loops in Bee:
              name: みつばちと学ぶループ
            For Loops in Artist:
              name: アーティストと学ぶループ
            Songwriting with Parameters:
              name: パラメーターで歌や曲をつくる
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Revise Your Project:
              name: プロジェクトを修正する
            Present Your Project:
              name: プロジェクトの発表
            Nested Loops Project in Frozen:
              name: フローズンで学ぶ入れ子のループ
            'How it Works: The Internet':
              name: 'プログラミングを超えて: インターネット'
            'Common Sense Education: Digital Citizenship':
              name: 'デジタル シティズンシップ: デジタル シティズンシップの実践'
            'Common Sense Education: Screen Out the Mean':
              name: 'デジタル シティズンシップ: 平均をスクリーンアウト'
            Events in Star Wars:
              name: スター・ウォーズのイベント
            Events with Flappy:
              name: フラッピーと学ぶイベント
            'Conditionals: Conditionals with Cards':
              name: '条件文: カードを使った条件文'
            Conditional Loops in Maze:
              name: 迷路で学ぶ条件文とループ
            'Variables: Envelope Variables':
              name: '変数: エンベロープ変数'
            'For Loops: For Loop Fun':
              name: 'Forループ: Forループを楽しむ'
            'Functions: Songwriting with Parameters':
              name: '関数: パラメータで作曲'
            Building a Foundation:
              name: ピラミッドをたてよう
            Nested Loops:
              name: 入れ子のループ
            Conditionals & Loops in Harvester:
              name: 農夫と学ぶ条件文とループ
            Until Loops in Maze:
              name: 迷路で学ぶUntilループ
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        pre-express-2017:
          title: 低学年エクスプレス
          assignment_family_title: 低学年エクスプレス
          description_audience: '年齢: 4～8才'
          description_short: 低学年向けのコンピュータ サイエンス入門です。幼児向けと小学1年生向けコースの良い所をとりだしました。
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'パーシステンス: スティーヴィーと大きなプロジェクト'
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            Learn to Drag and Drop:
              name: ドラッグアンドドロップによるシーケンス
            'Online Safety: Your Digital Footprint':
              name: 'デジタル シティズンシップ: デジタルフットプリント'
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Programming in Maze:
              name: めいろ のプログラミング
            'Programming: Star Wars':
              name: 'プログラミング: スター・ウォーズ'
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Collector:
              name: くりかえし あつめる
            Loops in Artist:
              name: アーティストくりかえし
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Events in Play Lab:
              name: プレイ ラボのイベント
            Spelling Bee:
              name: つづりみつばち
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        subgoal-labels-opt-in:
          title: サブゴールラベル学習オプトイン
          lessons:
            Subgoal Labels Study Opt-In:
              name: サブゴールラベル学習オプトイン
            deprecated:
              name: 非推奨
            other:
              name: その他
            Thanks:
              name: ありがとう
        csp-pre-survey-test-2017:
          lessons:
            new stage:
              name: 新しいステージ
            test satge:
              name: テストステージ
            CSP pre survey Test:
              name: CSP事前アンケートテスト
            CSD pre survey test:
              name: CSD事前アンケートテスト
            CSD pulse check survey:
              name: CSDパルスチェックアンケート
        csp3-research-mxghyt:
          title: CSPユニット3 - プログラミング入門 (サブゴール)
          description_short: 古典的な亀の絵を使ったトップダウンの設計アプローチを通じて、JavaScriptのプログラミングの基本を学びます。
          lesson_groups:
            csp3_1:
              display_name: '章 1: プログラミング言語とアルゴリズム'
            cspAssessment:
              display_name: 章の評価
            cspSurvey:
              display_name: アンケート
          lessons:
            new stage:
              name: 新しいステージ
            The Need For Programming Languages:
              name: プログラミング言語の必要性
            The Need for Algorithms:
              name: アルゴリズムの必要性
            Creativity in Algorithms:
              name: アルゴリズムの創造性
            Using Simple Commands:
              name: 単純なコマンドの使用
            Creating Functions:
              name: 関数の作成
            Functions and Top-Down Design:
              name: 関数とトップダウン設計
            APIs and Function Parameters:
              name: APIと関数パラメータ
            Creating functions with Parameters:
              name: パラメータを使って関数を作成する
            Looping and Random Numbers:
              name: ループと乱数
            Practice PT - Design a Digital Scene:
              name: PTの練習 - デジタルシーンのデザイン
            Unit 3 Chapter 1 Assessment:
              name: ユニット3 第1章 評価
            foo:
              name: フー
            CSP Mid-course survey:
              name: CSP中間アンケート
            Please complete the CSP Mid-course survey:
              name: CSP中間アンケートにご記入ください
        csd4-draft:
          title: CSDユニット4復習ドラフト
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：ユーザーを中心にしたデザイン
            csd4_2:
              display_name: 第 2 章：アプリのプロトタイピング
          lessons:
            Analysis of Design:
              name: デザインの分析
            Understanding Your User:
              name: ユーザーを理解する
            User-Centered Design Micro Activity:
              name: ユーザー中心のデザインマイクロアクティビティ
            User Interface and Prototype Testing:
              name: ユーザーインターフェイスとプロトタイプテスト
            Feedback and Prototypes:
              name: フィードバックとプロトタイプ
            Identifying User Needs:
              name: ユーザーのニーズの特定
            Project - Paper Prototype:
              name: プロジェクト - 紙のプロトタイプ
            Designing Apps for Good:
              name: 優れたアプリの設計
            Market Research:
              name: 市場調査
            Paper Prototypes:
              name: 紙のプロトタイプ
            Prototype Testing:
              name: " プロトタイプテスト"
            Digital Design:
              name: デジタルデザイン
            Event Driven Programming:
              name: イベント駆動型プログラミング
            Basic App Functionality:
              name: 基本的なアプリの機能
            Testing the App:
              name: アプリのテスト
            Improving and Iterating:
              name: 改善とイテレーション
            App Presentation:
              name: アプリのプレゼンテーション
            Linking Screens:
              name: 画面のリンク
        craft17:
          title: Craft17開発スクリプト
          lessons:
            craft17 stage:
              name: Ｃｒａｆｔ17ステージ
        applab-intro:
          title: アプリラボの紹介
          description_short: ブロックベースのプログラミングまたはテキストを使って、JavaScriptで独自のアプリを作成しましょう。ブロックを使ったプログラミングをある程度すでに完了している場合は、スキルを次のレベルに高めましょう。
          description: ブロックベースのプログラミングまたはテキストを使って、JavaScriptで独自のアプリを作成しましょう。ブロックを使ったプログラミングをある程度すでに完了している場合は、スキルを次のレベルに高めましょう。
          lessons:
            Intro to AppLab - Choose Your Own Adventure:
              name: アプリラボの紹介 - 独自のアドベンチャーを選択
            Intro to AppLab - Choose Your Own Adventure 2:
              name: アプリラボの紹介 - 独自のアドベンチャーを選択 2
            Intro to AppLab - Your First App:
              name: アプリラボの紹介 - 初めてのアプリ
            Intro to AppLab - Your First App 2:
              name: アプリラボの紹介 - 初めてのアプリ 2
            Intro to AppLab - Your First App 3:
              name: アプリラボの紹介 - 初めてのアプリ 3
            Intro to AppLab - Your First App 4:
              name: アプリラボの紹介 - 初めてのアプリ 4
            Intro to AppLab - Getting Started:
              name: アプリラボの紹介 - はじめに
            Intro to App Lab:
              name: アプリラボの紹介
            'Lesson 1: App Lab Intro':
              name: 'レッスン1: アプリラボの紹介'
          student_description: ブロックベースのプログラミングまたはテキストを使って、JavaScriptで独自のアプリを作成しましょう。ブロックを使ったプログラミングをある程度すでに完了している場合は、スキルを次のレベルに高めましょう。
        e-f-ramp:
          title: コースEとF 強化
          lesson_groups:
            csf_e_1:
              display_name: コースEへの強化 (オプション)
            csf_e_2:
              display_name: コースEの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
            extra_course_content:
              display_name: 追加のコース内容
          lessons:
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence and Preview in Maze:
              name: 迷路で学ぶシーケンスとプレビュー
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops:
              name: 入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            Intro to Conditionals with Farmer:
              name: 農夫と学ぶ条件文入門
            'Algorithms: Dice Race':
              name: 'アルゴリズム: ダイスレース'
            Course E Introduction:
              name: コースE 入門
            Conditionals:
              name: 条件
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
            'Functions: Songwriting':
              name: '関数: 作曲'
            Functions in Artist:
              name: アーティストと学ぶ関数
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions in Farmer:
              name: 農夫と学ぶ関数
            Determine the Concept:
              name: コンセプトの決定
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Present Your Project:
              name: プロジェクトの発表
            Internet:
              name: インターネット
            Crowdsourcing:
              name: クラウドソーシング
            Nested Loops in Bee:
              name: みつばちでの入れ子のループ
            Nested Loops in Bee/Zombie:
              name: みつばち/ゾンビと学ぶ入れ子のループ
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
        new-d:
          title: 新しいコースD スクリプト
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'アルゴリズム: グラフ用紙プログラミング'
            Introduction:
              name: はじめに
            Events in Bounce:
              name: バウンスで学ぶイベント
            Nested Loops:
              name: 入れ子のループ
            Nested Loops in Artist:
              name: アーティストと学ぶ入れ子のループ
            Nested Loops Project in Artist:
              name: アーティストでの入れ子のループプロジェクト
            'Algorithms: Relay Programming':
              name: 'アルゴリズム: リレープログラミング'
            Debugging in Collector:
              name: コレクターでのデバッグ
            While Loops in Farmer:
              name: ファーマーの「while」ループ
            Conditionals with Cards:
              name: カードと条件
            Conditionals in Bee:
              name: みつばちと学ぶ条件文
            Conditionals & Loops in Maze:
              name: 迷路で学ぶ条件文とループ
            Conditionals & Loops in Farmer:
              name: 農夫と学ぶ条件とループ
            Digital Citizenship:
              name: デジタル シティズンシップ
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
            'Unplugged: Binary':
              name: 'アンプラグド: バイナリ'
            Artist Binary:
              name: アーティスト：バイナリ
            Building a Foundation:
              name: ピラミッドをたてよう
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee:
              name: みつばちでの入れ子のループ
            Loops in Ice Age:
              name: アイス・エイジのループ
        csp3-a:
          title: CSPユニット3 - サブゴールグループA
          description_short: サブゴールラベル実験グループA向けのCSPユニット3の代替バージョン。
          description: このユニットでは、サブゴールグループAの生徒向けに、コンピュータープログラミングの基本的な概念を紹介します。
          lesson_groups:
            csp3_1:
              display_name: '章 1: プログラミング言語とアルゴリズム'
          lessons:
            new stage:
              name: 新しいステージ
            'CSP3A: Using Simple Commands':
              name: 'CSP3A: 単純なコマンドの使用'
          student_description: このユニットでは、サブゴールグループAの生徒向けに、コンピュータープログラミングの基本的な概念を紹介します。
        new-express:
          title: 新しいExpressスクリプト
          lesson_groups:
            content:
              display_name: 内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'アルゴリズム: グラフ用紙プログラミング'
            Introduction:
              name: はじめに
            'Algorithms: Relay Programming':
              name: 'アルゴリズム: リレープログラミング'
            Debugging in Collector:
              name: コレクターでのデバッグ
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops Project in Frozen:
              name: フローズンでの入れ子のループプロジェクト
            'How it Works: The Internet':
              name: '仕組み: インターネット'
            'Common Sense Education: Digital Citizenship':
              name: '一般教養: デジタル シティズンシップ'
            'Common Sense Education: Screen Out the Mean':
              name: '一般教養: 平均をスクリーンアウトする'
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Events in Star Wars:
              name: スター・ウォーズのイベント
            Events with Flappy:
              name: フラッピーと学ぶイベント
            Events in Bounce:
              name: バウンスで学ぶイベント
            'Conditionals: Conditionals with Cards':
              name: '条件文: カードを使った条件文'
            While Loops in Farmer:
              name: ファーマーの「while」ループ
            Conditional Loops in Maze:
              name: 迷路の条件付きループ
            Conditionals in Minecraft:
              name: マインクラフトの条件文
            Conditionals & Loops in Farmer:
              name: 農夫と学ぶ条件とループ
            'Variables: Envelope Variables':
              name: '変数: エンベロープ変数'
            Variables in Artist:
              name: アーティストと学ぶ変数
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
            'For Loops: For Loop Fun':
              name: 'Forループ: Forループを楽しむ'
            For Loops in Bee:
              name: みつばちと学ぶループ
            For Loops in Artist:
              name: アーティストと学ぶループ
            'Functions: Songwriting with Parameters':
              name: '関数: パラメータで作曲'
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Revise Your Project:
              name: プロジェクトを修正する
            Present Your Project:
              name: プロジェクトの発表
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Nested Loops:
              name: 入れ子のループ
            Loops in Artist (UPDATED!):
              name: アーティストと学ぶループ (更新！)
            Sarah test stage:
              name: サラのテストステージ
        new-stages-sept-2017:
          title: 9/17用の新しいステージ
          lessons:
            Loops in Artist:
              name: アーティストくりかえし
            Sequences with Scrat:
              name: スクラッチと学ぶシーケンス
            Testing Template:
              name: テストテンプレート
        new-e:
          title: E向けの新しいスクリプト
          lesson_groups:
            csf_e_1:
              display_name: コースEへの強化 (オプション)
            csf_e_2:
              display_name: コースEの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
            extra_course_content:
              display_name: 追加のコース内容
          lessons:
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee/Zombie:
              name: みつばち/ゾンビと学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            'Algorithms: Dice Race':
              name: 'アルゴリズム: ダイスレース'
            Course E Introduction:
              name: コースE 入門
            Conditionals:
              name: 条件
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
            'Functions: Songwriting':
              name: '関数: 作曲'
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions in Artist:
              name: アーティストと学ぶ関数
            Functions in Farmer:
              name: 農夫と学ぶ関数
            Determine the Concept:
              name: コンセプトの決定
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Present Your Project:
              name: プロジェクトの発表
            Internet:
              name: インターネット
            Crowdsourcing:
              name: クラウドソーシング
        new-f:
          title: Fの向けの新しいスクリプト
          lesson_groups:
            csf_f_1:
              display_name: コースFへの強化 (オプション)
            csf_f_2:
              display_name: コースFの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee/Zombie:
              name: みつばち/ゾンビと学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            'Algorithms: Tangrams':
              name: 'アルゴリズム: タングラム'
            Course E Introduction:
              name: コースE 入門
            The Power of Words:
              name: 言葉の力
            Ice Age Play Lab:
              name: アイスエイジ プレイラボ
            Conditionals in Minecraft:
              name: マインクラフトの条件文
            Envelope Variables:
              name: エンベロープ変数
            Variables in Artist:
              name: アーティストと学ぶ変数
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
            For Loop Fun:
              name: Forループを楽しむ
            For Loops in Bee:
              name: みつばちと学ぶループ
            For Loops in Artist:
              name: アーティストと学ぶループ
            Songwriting with Parameters:
              name: パラメーターで歌や曲をつくる
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Revise Your Project:
              name: プロジェクトを修正する
            Present Your Project:
              name: プロジェクトの発表
        csd5-old:
          title: CSDユニット5 - データと社会
          description_short: コンピューターを使ってデータの問題を解決する方法を学びましょう。
          description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
          lesson_groups:
            csd5_1:
              display_name: 第1章：情報を表現する
            csd5_2:
              display_name: 第 2 章：データ問題を解決
          lessons:
            Representation Matters:
              name: 表現が重要
            Patterns and Representation:
              name: パターンと表現
            ASCII and Binary Representation:
              name: ASCIIとバイナリ表現
            Representing Images:
              name: 画像の表現
            Representing Numbers:
              name: 数値の表現
            8-bit Numbers:
              name: 8ビットの数値
            Combining Representations:
              name: 表現を組み合わせる
            Project - Create a Representation:
              name: プロジェクト - 表現を作成する
            Problem Solving and Data:
              name: 問題解決とデータ
            Making Decisions with Data:
              name: データを使った決定
            Interpreting Data:
              name: データの解釈
            Automating Data Decisions:
              name: データ決定の自動化
            Problem Solving with Big Data:
              name: ビッグデータによる問題解決
            Project - Solve a Data Problem:
              name: プロジェクト - データの問題を解決する
          student_description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
        subgoals-assessment-staging:
          lessons:
            subgoal assessments:
              name: サブゴール評価
            lg by itself:
              name: lg自体
            test of single level lg:
              name: 単一レベルlgのテスト
            submittable question at end of lessson:
              name: レッスン終了時に提出可能な質問
            all assessment items as standalone assessment levels:
              name: スタンドアロンの評価レベルとしてのすべての評価項目
            all assessment items clustered in levelgroup:
              name: レベルグループにクラスター化されたすべての評価項目
            submittable if last assessment item:
              name: 最後の評価項目の場合は提出可能
            assessment sandwiched between app lab levels:
              name: アプリラボのレベルに挟まれた評価
            all assessment items clustered in levelgroup as a single "test":
              name: 単一の「テスト」としてレベルグループにクラスター化されたすべての評価項目
            dummy:
              name: ダミー
            CSP 3 updates staging ground:
              name: CSP 3はステージンググラウンドを更新します
        hocali:
          lessons:
            new stage:
              name: 新しいステージ
        colehoc2017:
          title: HoC 17 - コール
          lessons:
            colehoc2017 stage:
              name: colehoc2017ステージ
        craft17-kiki:
          lessons:
            craft17 stage:
              name: Ｃｒａｆｔ17ステージ
        csd4-old:
          title: "(非推奨) CSDユニット4 - 設計プロセス"
          description_short: CSDユニット4の2016/17ベータ版
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：ユーザーを中心にしたデザイン
            csd4_2:
              display_name: 第 2 章：アプリのプロトタイピング
          lessons:
            Analysis of Design:
              name: デザインの分析
            Understanding Your User:
              name: ユーザーを理解する
            User-Centered Design Micro Activity:
              name: ユーザー中心のデザインマイクロアクティビティ
            User Interface and Prototype Testing:
              name: ユーザーインターフェイスとプロトタイプテスト
            Feedback and Prototypes:
              name: フィードバックとプロトタイプ
            Identifying User Needs:
              name: ユーザーのニーズの特定
            Project - Paper Prototype:
              name: プロジェクト - 紙のプロトタイプ
            Designing Apps for Good:
              name: 優れたアプリの設計
            Market Research:
              name: 市場調査
            Paper Prototypes:
              name: 紙のプロトタイプ
            Prototype Testing:
              name: " プロトタイプテスト"
            Digital Design:
              name: デジタルデザイン
            Event Driven Programming:
              name: イベント駆動型プログラミング
            Basic App Functionality:
              name: 基本的なアプリの機能
            Testing the App:
              name: アプリのテスト
            Improving and Iterating:
              name: 改善とイテレーション
            App Presentation:
              name: アプリのプレゼンテーション
        csp3-staging:
          title: CSP 3提案された変更の一時的なステージンググラウンド
          description_short: csp3への10月の変更の一時的なステージンググラウンド
          lesson_groups:
            csp3_1:
              display_name: '章 1: プログラミング言語とアルゴリズム'
            cspAssessment:
              display_name: 章の評価
          lessons:
            The Need For Programming Languages:
              name: プログラミング言語の必要性
            The Need for Algorithms:
              name: アルゴリズムの必要性
            Creativity in Algorithms:
              name: アルゴリズムの創造性
            Using Simple Commands:
              name: 単純なコマンドの使用
            Creating Functions:
              name: 関数の作成
            Functions and Top-Down Design:
              name: 関数とトップダウン設計
            APIs and Function Parameters:
              name: APIと関数パラメータ
            Creating functions with Parameters:
              name: パラメータを使って関数を作成する
            Looping and Random Numbers:
              name: ループと乱数
            Practice PT - Design a Digital Scene:
              name: PTの練習 - デジタルシーンのデザイン
            Unit 3 Chapter 1 Assessment:
              name: ユニット3 第1章 評価
        pwc:
          title: PwC's Access Your Potentialカリキュラム
          description: PwCでは、すべての生徒が明日のリーダーになり、テクノロジーに根差した人材になる可能性があると信じています。 Access
            Your Potentialは、若者、特に恵まれないコミュニティの若者に、人生の軌道を変えるために必要な経済的、技術的、キャリア選択のスキルを身に付けてもらうことで、機会のギャップを埋めるための取り組みです。当社の取り組みの一環として、Access
            Your Potential中学校向けテクノロジーおよびキャリアカリキュラムを開始できることを嬉しく思います。
          lessons:
            new stage:
              name: 新しいステージ
            'Problem Solving: Personal Innovations':
              name: '問題解決: 個人のイノベーション'
            'Technology Foundations: What is a Computer?':
              name: 'テクノロジーの基礎: コンピューターとは？'
            'Data Science: Problem Solving with Big Data':
              name: 'データサイエンス: ビッグデータによる問題解決'
            Personal Innovations:
              name: パーソナル イノベーション
            Problem Solving with Big Data:
              name: ビッグデータによる問題解決
            Programming - Hour of Code:
              name: プログラミング - Hour of Code
            Simple Encryption:
              name: 単純な暗号化
            Web Development - Creating Webpages:
              name: ウェブ開発 - ウェブページの作成
            App Development Unplugged - User Interfaces:
              name: オフラインでのアプリ開発 - ユーザーインターフェイス
            App Development - Intro to App Lab:
              name: アプリ開発 - アプリラボの紹介
            Creating Webpages:
              name: ウェブページの作成
            User Interfaces:
              name: ユーザーインターフェイス
            Intro to App Lab:
              name: アプリラボの紹介
            Smart Clothing Design:
              name: スマート服のデザイン
            Intro to App Lab (13+):
              name: アプリラボの紹介 (13+)
          student_description: PwCでは、すべての生徒が明日のリーダーになり、テクノロジーに根差した人材になる可能性があると信じています。
            Access Your Potentialは、若者、特に恵まれないコミュニティの若者に、人生の軌道を変えるために必要な経済的、技術的、キャリア選択のスキルを身に付けてもらうことで、機会のギャップを埋めるための取り組みです。当社の取り組みの一環として、Access
            Your Potential中学校向けテクノロジーおよびキャリアカリキュラムを開始できることを嬉しく思います。
        allthesurveys:
          title: すべてのアンケート
          description_short: Code.orgアンケートをステージングおよびテストする場所
          lessons:
            CSP pre survey Test:
              name: CSP事前アンケートテスト
            CSD pre survey test:
              name: CSD事前アンケートテスト
            CSD pulse check survey:
              name: CSDパルスチェックアンケート
            CSD mid-post survey staging:
              name: CSD中間アンケートのステージング
            CSP pre survey Test 2017:
              name: CSP事前アンケートテスト2017
            CSD mid-post survey 2017 staging:
              name: CSD中間アンケート2017のステージング
            CSP pre survey 2017 staging:
              name: CSP事前アンケート2017のステージング
            CSD pre survey 2017 staging:
              name: CSD事前アンケート2017のステージング
            CSD/P pulse check survey 2017:
              name: CSD/Pパルスチェックアンケート2017
            CSD mid and post survey 2017 staging:
              name: CSD中間および事後アンケート2017のステージング
            CSP mid and post survey 2017 staging:
              name: CSP中間および事後アンケート2017のステージング
            CSP post survey 2018 staging:
              name: CSP事後アンケート2018のステージング
            CSD post survey 2018 staging:
              name: CSD事後アンケート2018のステージング
            CSD pre survey 2018 staging:
              name: CSD事前アンケート2018のステージング
            CSP pre survey 2018 staging:
              name: CSP事前アンケート2018のステージング
            CSP mid survey 2018 stagin:
              name: CSP中間アンケート 2018ステージング
            CSP mid survey 2018 staging:
              name: CSP中間アンケート2018ステージング
            CSP post course survey 2019 staging:
              name: CSPコース後アンケート2019ステージング
            CSD post course survey 2019 staging:
              name: CSDコース後アンケート2019ステージング
            Place for testing crazy stuff:
              name: クレイジーなことをテストする場所
        hero:
          title: 'マインクラフト: ヒーローの旅'
          description_short: Hour of Code向けに、マインクラフトの最新アクティビティができ上がりました！
          description: Hour of Code向けに、マインクラフトの最新アクティビティができ上がりました。プログラミングを使ってマインクラフトの旅へ
          lessons:
            'Minecraft\: Hero''s Journey Hour of Code':
              name: 'マインクラフト: 英雄の旅 Hour of Code'
            Minecraft Hour of Code:
              name: 'マインクラフト: ヒーローの旅'
          student_description: Hour of Code向けに、マインクラフトの最新アクティビティができ上がりました。プログラミングを使ってマインクラフトの旅へ
        applab-intro-staging:
          title: アプリラボ ステージングの紹介
          lessons:
            Intro to AppLab - Choose Your Own Adventure:
              name: アプリラボの紹介 - 独自のアドベンチャーを選択
            Intro to AppLab - Choose Your Own Adventure 2:
              name: アプリラボの紹介 - 独自のアドベンチャーを選択 2
            Intro to AppLab - Your First App:
              name: アプリラボの紹介 - 初めてのアプリ
            Intro to AppLab - Your First App 2:
              name: アプリラボの紹介 - 初めてのアプリ 2
            Intro to AppLab - Your First App 3:
              name: アプリラボの紹介 - 初めてのアプリ 3
            Intro to AppLab - Your First App 4:
              name: アプリラボの紹介 - 初めてのアプリ 4
            Intro to AppLab - Getting Started:
              name: アプリラボの紹介 - はじめに
            Intro to App Lab:
              name: アプリラボの紹介
        csp-explore-2017:
          title: 探索 - APパフォーマンスタスクの準備 ('17～'18)
          description_short: 生徒がAP探索パフォーマンスタスクを準備して完了するのを助けるレッスンとリソース。
          lesson_groups:
            csp_ap_2:
              display_name: '第2章: AP パフォーマンスタスクの探索'
            cspSurvey:
              display_name: アンケート
          lessons:
            new stage:
              name: 新しいステージ
            Explore PT Prep - Reviewing the Task:
              name: PT準備の調査 - タスクの確認
            Explore PT - Making a Plan:
              name: PTの探索 - 計画の立案
            Explore PT - Complete the Task:
              name: PTの探索 - タスクの完了
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - APデジタルポートフォリオとその他のツール
            'Setup: Digital Portfolio and Other Tools':
              name: 'セットアップ: デジタルポートフォリオとその他のツール'
            Post-Course Survey:
              name: コース終了後アンケート
        csp-create-2017:
          title: 作成 - APパフォーマンスタスクの準備 ('17～'18)
          description_short: 生徒がAP作成パフォーマンスタスクを準備して完了するのを助けるレッスンとリソース。
          lesson_groups:
            csp_ap_3:
              display_name: '第3章: AP パフォーマンスタスクの作成'
            cspSurvey:
              display_name: アンケート
          lessons:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: 技術設定 - APデジタルポートフォリオとその他のツール
            Create PT Prep - Reviewing the Task:
              name: PT準備の作成 - タスクの確認
            Create PT Prep - Making a Plan:
              name: PT準備の作成 - 計画の作成
            Create PT - Complete the Task:
              name: PTの作成 - タスクの完了
            Post-Course Survey:
              name: コース終了後アンケート
        csp3-reovery:
          title: csp3アンダーザシー 生徒の作品 リカバリー
          lessons:
            Under the sea recovery:
              name: アンダーザシー リカバリー
        csp3-recovery:
          title: CSP3アンダーザシー 生徒の作品 リカバリー
          lessons:
            Under the sea recovery:
              name: アンダーザシー リカバリー
            standalone template:
              name: スタンドアロン テンプレート
        aws-demo:
          title: AWSデモ
          lessons:
            new stage:
              name: 新しいステージ
        halloween:
          lessons:
            Halloween Artist:
              name: ハロウィンアーティスト
        valentine:
          title: バレンタイン スペシャル
          description_short: バレンタインを作るのをお楽しみください
          lessons:
            special valentine:
              name: スペシャル バレンタイン
            Valentine Puzzles:
              name: バレンタインパズル
        colehoc17:
          lessons:
            new stage:
              name: 新しいステージ
        course-e-2018:
          title: コースE 2018 (旧)
          lesson_groups:
            csf_e_1:
              display_name: コースEへの強化 (オプション)
            csf_e_2:
              display_name: コースEの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
            extra_course_content:
              display_name: 追加のコース内容
          lessons:
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops:
              name: 入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            'Algorithms: Dice Race':
              name: 'アルゴリズム: ダイスレース'
            Introduction:
              name: はじめに
            Conditionals:
              name: 条件
            'Functions: Songwriting':
              name: '関数: 作曲'
            MINECRAFT STAGE GOES HERE:
              name: マインクラフトステージはこちら
            Functions in Artist:
              name: アーティストと学ぶ関数
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions in Farmer:
              name: 農夫と学ぶ関数
            Determine the Concept:
              name: コンセプトの決定
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Present Your Project:
              name: プロジェクトの発表
            Internet:
              name: インターネット
            Crowdsourcing:
              name: クラウドソーシング
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
            Functions in Harvester:
              name: 農夫と学ぶ関数
        course-f-2018:
          title: コースF 2018 (旧)
          lesson_groups:
            csf_f_1:
              display_name: コースFへの強化 (オプション)
            csf_f_2:
              display_name: コースFの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee/Zombie:
              name: みつばち/ゾンビと学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            'Algorithms: Tangrams':
              name: 'アルゴリズム: タングラム'
            Introduction:
              name: はじめに
            The Power of Words:
              name: 言葉の力
            Ice Age Play Lab:
              name: アイスエイジ プレイラボ
            Conditionals in Minecraft:
              name: マインクラフトの条件文
            Envelope Variables:
              name: エンベロープ変数
            Variables in Artist:
              name: アーティストと学ぶ変数
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
            For Loop Fun:
              name: Forループを楽しむ
            For Loops in Bee:
              name: みつばちと学ぶループ
            For Loops in Artist:
              name: アーティストと学ぶループ
            Songwriting with Parameters:
              name: パラメーターで歌や曲をつくる
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Revise Your Project:
              name: プロジェクトを修正する
            Present Your Project:
              name: プロジェクトの発表
        csd6-old:
          title: "(非推奨) CSDユニット6 - 物理コンピューティング"
          lesson_groups:
            csd6_1:
              display_name: '第 1 章: ハードウェアを使ったプログラミング'
            csd6_2:
              display_name: '第 2 章: 物理プロパティの構築'
          lessons:
            Computing Innovations:
              name: コンピューティングイノベーション
            Input Unplugged:
              name: オフラインで入力
            Getters and Setters:
              name: ゲッターとセッター
            The Circuit Playground:
              name: サーキット プレイグラウンド
            Lists:
              name: リスト
            Lights:
              name: ライト
            For Loops:
              name: ループ用
            Lists and For Loops:
              name: リストとforループ
            Timed Loops:
              name: タイミングループ
            'Project: Board Output':
              name: 'プロジェクト: ボード出力'
            Physical Input:
              name: 物理的な入力
            Analog Input:
              name: アナログ入力
            Sensor Applications:
              name: センサーアプリケーション
            'Project: Prototype an Innovation':
              name: 'プロジェクト: イノベーションのプロトタイプ'
        unembeddedlevels:
          title: 埋め込みなしのレベル
          lessons:
            CSD U3 Plotting Shapes Shape Lab - unembed:
              name: CSD U3 形状のプロット 形状ラボ - 埋め込みなし
            CSD U3 Entertainment Sample 1 - unembed:
              name: CSD U3エンターテイメントサンプル1 - 埋め込みなし
            Only Stage:
              name: ステージのみ
        unembedded:
          title: 埋め込みなしのレベル
          lessons:
            Only Stage:
              name: ステージのみ
        csd3-1819draft:
          title: CSDユニット3 - アニメーションとゲーム
          description_short: ゲームラボでアニメーション、インタラクティブアート、ゲームのプログラミングを学びましょう。
          description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
          lesson_groups:
            csd3_1:
              display_name: '第 1 章: 画像とアニメーション'
            csd3_2:
              display_name: '第2章: ゲームを作る'
            cspSurvey:
              display_name: アンケート
          lessons:
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
            Plotting Shapes:
              name: 形状のプロット
            Drawing in Game Lab:
              name: ゲームラボでの描画
            Shapes and Randomization:
              name: 形状とランダム化
            Variables:
              name: 変数（へんすう）
            Sprites:
              name: スプライト
            The Counter Pattern Unplugged:
              name: オフラインのカウンターパターン
            Sprite Movement:
              name: スプライトの動き
            Booleans Unplugged:
              name: オフラインのブール
            Conditionals:
              name: 条件
            Keyboard Input:
              name: キーボード入力
            Other Forms of Input:
              name: その他の入力形式
            Project - Interactive Card:
              name: プロジェクト - インタラクティブカード
            Velocity:
              name: 速度
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
            Collisions:
              name: 衝突
            Functions:
              name: 関数(かんすう)
            The Game Design Process:
              name: ゲームデザインプロセス
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
            Project - Design a Game:
              name: プロジェクト - ゲームの設計
            CS Discoveries End of Semester Survey:
              name: CS発見期末アンケート
          student_description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
        textbook:
          title: CSFテキストブックページ
          lessons:
            Test Map Level:
              name: テストマップレベル
            new stage:
              name: 新しいステージ
        glj-behavior-test:
          title: ゲームラボジュニアテスト - ビヘイビア
          lessons:
            Cats and Dogs:
              name: 猫と犬
        csd3-2018:
          title: CSDユニット3 - アニメーションとゲーム ('18～'19)
          description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
          description_short: ゲームラボでアニメーション、インタラクティブアート、ゲームのプログラミングを学びましょう。
          lesson_groups:
            csd3_1:
              display_name: '第 1 章: 画像とアニメーション'
            csd3_2:
              display_name: '第2章: ゲームを作る'
            cspSurvey:
              display_name: アンケート
          lessons:
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
              description_student: クラスは退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。
              description_teacher: 生徒は退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。
            Plotting Shapes:
              name: 形状のプロット
              description_student: 生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。
              description_teacher: 生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。
            Drawing in Game Lab:
              name: ゲームラボでの描画
              description_student: このクラスは、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。このレッスンでは、シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンの最後に、クラスは前のレッスンで設計したイメージのオンラインバージョンを作成します。
              description_teacher: 生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。
            Shapes and Randomization:
              name: 形状とランダム化
            Variables:
              name: 変数（へんすう）
              description_student: このレッスンでは、プログラムで数値にラベルを付ける方法、またはランダムに生成された値を保存する方法として変数を導入します。クラスは、変数の目的の非常に基本的な説明と新しいブロックの使用方法からレッスンを開始します。その後、クラスは変数を使って乱数を保存し、プログラムが同じ乱数を複数回使用できるようにします。
              description_teacher: このレッスンでは、変数を使ってプログラム内の数値にラベルを付ける方法、またはランダムに生成された値を保存する方法を学習します。生徒は、変数の目的の非常に基本的な説明からレッスンを始めます。次のレベルでは、生徒は、変数を数値のラベルまたは名前を付ける方法とするモデルを学習します。生徒は変数を使って乱数を保存し、変数が実際に値を保存することを確認します。これにより、プログラム内で同じ乱数を複数回使用できるようになります。
            Sprites:
              name: スプライト
              description_student: より興味深く、詳細な画像を作成するために、クラスはスプライトオブジェクトの説明を受けます。すべてのスプライトに表示する画像を割り当てることができ、スプライトは自身に関する複数の値も追跡するため、アニメーションを作成するときに便利です。レッスンの終わりに、全員がスプライトを使ってシーンを作成します。
              description_teacher: より興味深く、詳細な画像を作成するために、生徒はスプライトオブジェクトの説明を受けます。すべてのスプライトに表示する画像を割り当てることができ、スプライトは自身に関する複数の値も追跡するため、アニメーションを作成するときに便利です。
            The Draw Loop:
              description_student: このレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。このクラスは、描画ループと乱数を組み合わせて、いくつかの単純なアニメーションをドットで、次にスプライトで操作します。その後、学習した内容を使って、前のレッスンのスプライトシーンを更新します。
              description_teacher: このレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。レッスンを開始するために、生徒はパラパラ漫画を見て、さまざまなイメージを持つフレームが数多くあると、動いているかのような印象が生まれることを確認します。次に、生徒は、ゲームラボの描画ループが、プログラムでこれと同じ印象を生み出すのにどのように役立つかを説明するビデオを視聴します。生徒は、描画ループと乱数を組み合わせて、単純なアニメーションをドットで、次にスプライトで操作します。レッスンの最後に、生徒は学習した内容を使って、前のレッスンのスプライトシーンを更新します。
            The Counter Pattern Unplugged:
              name: オフラインのカウンターパターン
              description_student: このオフラインレッスンでは、変数の基本的な働きを探ります。ノートカードと文字列を使ってプログラム内の変数をシミュレートすることにより、クラスは短いプログラムをいくつか実装します。この構文に慣れたら、クラスは同じプロセスをスプライトプロパティで使って、画面全体のスプライトの進行状況を追跡します。
              description_teacher: 生徒は、オフラインアクティビティを通じて変数の基本的な働きを探ります。プログラム内の変数をシミュレートするためにノートカードと文字列を使って、生徒は短いプログラムをいくつか実装します。この構文に慣れたら、生徒はスプライトプロパティで同じプロセスを使って、画面全体でスプライトの進行状況を追跡します。
            Sprite Movement:
              name: スプライトの動き
              description_student: 描画ループとカウンターパターンを組み合わせることにより、クラスはスプライトを画面上で移動させたり、他のスプライトプロパティをアニメーション化したりするプログラムを作成します。
              description_teacher: 描画ループとカウンターパターンを組み合わせることにより、生徒はスプライトを画面上で移動させたり、他のスプライトプロパティをアニメーション化したりするプログラムを作成します。
            Booleans Unplugged:
              name: オフラインのブール
              description_student: このレッスンでは、ブール値と論理、および条件文を紹介します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。次に、クラスは、ますます複雑になるブール文に基づいてオブジェクトをグループ化し、条件文がプログラムのフローにどのように影響するかを調べます。
              description_teacher: このレッスンでは、ブール値と論理、および条件文について学習します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。これにより、生徒は複数の潜在的な値
                (年齢など) を持つプロパティをバイナリ質問でどのように構成できるかについて考えます。次に生徒には、類似しているが変化する物理的特性を持つオブジェクトのグループが示されます。パートナーと一緒に、ますます複雑になるブール文
                (ANDおよびORを使用した複合ブールを含む) に基づいてこのようなオブジェクトをグループ化します。最後に、ツールとしての条件文を説明し、ブール文を入力情報にして、プログラムの流れを決定したり、影響を与えたりします。
            Conditionals:
              name: 条件
              description_student: クラスは、ブール値を使ってスプライトプロパティの現在の値をターゲット値と比較し、その比較結果を使って、スプライトが画面上のある地点に達したか、指定されたサイズになったか、またはカウンターパターンを使って値に達したかを判断します。ブール値を直接使って値またはスプライトプロパティを調べた後、クラスはif条件文を追加して、このブール値の比較に応答するプログラムを作成します。
              description_teacher: 生徒は、ブール値を使ってスプライトプロパティの現在の値をターゲット値と比較し、その比較結果を使って、スプライトが画面上のある地点に達したか、指定されたサイズになったか、またはカウンターパターンを使って値に達したかを判断します。ブール値を直接使って値またはスプライトプロパティを調べた後、生徒はif条件文を追加して、このブール値の比較に応答するプログラムを作成します。
            Keyboard Input:
              name: キーボード入力
              description_student: 前のレッスンのブール文と条件文の紹介に続いて、keyDown() という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。
              description_teacher: 前のレッスンのブール文と条件文の紹介に続いて、「keyDown()」という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。
            Other Forms of Input:
              name: その他の入力形式
              description_student: このクラスでは、条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純なkeyDown()
                コマンドに加えて、クラスは他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
              description_teacher: このレッスンでは、生徒は条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純な「keyDown()」コマンドに加えて、生徒は他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
            Project - Interactive Card:
              name: プロジェクト - インタラクティブカード
              description_student: 第1章のこのまとめプロジェクトでは、クラスは、これまでに学んだすべてのプログラミング手法を使って、インタラクティブなグリーティングカードを計画および開発します。
              description_teacher: 第1章のこのまとめプロジェクトでは、生徒は、これまでに学んだすべてのプログラミング手法を使って、インタラクティブなグリーティングカードを計画および開発します。
            Velocity:
              name: 速度
              description_student: カウンターパターンを使ってスプライトを移動させる方法を簡単に確認した後、クラスは速度と回転速度を直接設定するプロパティを学びます。生徒はさまざまな方法でこの新しいプロパティを使用しながら、基本的な横スクロールゲームを作成するために必要なスキルを身につけていきます。
              description_teacher: 前のレッスンで学んだ、カウンターパターンを使ってスプライトを移動させる方法を簡単に確認した後、生徒は速度と回転速度を直接設定するプロパティを学びます。生徒はさまざまな方法でこの新しいプロパティを使用しながら、基本的な横スクロールゲームを作成するために必要なスキルを身につけていきます。
            Collision Detection:
              description_student: このクラスでは、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、クラスはisTouching()ブロックを使って、サウンドの再生など、スプライトが衝突した時に生み出されるさまざまな効果を作成します。最後に、新しいスキルを使って、前回のレッスンで作成を開始したサイドスクローラーゲームを改善します。
              description_teacher: 生徒は、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、生徒は「isTouching()」ブロックを使って、サウンドの再生など、スプライトが衝突した時に生み出されるさまざまな効果を作成します。最後に、新しいスキルを使って、前回のレッスンで作成を開始したサイドスクローラーゲームを改善します。
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
              description_student: このクラスでは、スプライトの速度プロパティをカウンターパターンと組み合わせて、重力をシミュレートしたり、スプライトをジャンプさせたり、スプライトが左または右へ浮かせたりする、より複雑なスプライトの動きを作成する方法を学習します。最終レベルでは、クラスはこれらの動きを組み合わせて1つのスプライトをアニメーション化して制御し、キャラクターが飛び回ってコインを収集するシンプルなゲームを作成します。
              description_teacher: 生徒は、スプライトの速度プロパティをカウンターパターンと組み合わせて、より複雑なスプライトの動きを作成する方法を学びます。特に、重力をシミュレートし、スプライトをジャンプさせ、スプライトを左または右に浮かせる方法を学びます。Code
                Studioの最終レベルでは、生徒はこれらの動きを組み合わせて1つのスプライトをアニメーション化して制御し、キャラクターが飛び回ってコインを収集するシンプルなゲームを作成します。生徒は、最終レベルで、ゲームに自分なりの工夫を加えるよう促されます。
            Collisions:
              name: 衝突
              description_student: クラスは、新しい方法で相互作用するようにスプライトをプログラムします。 isTouchingブロックの使用方法を簡単に確認した後、クラスは2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (collide、displace、bounce、bounceOff) を使う練習をします。
              description_teacher: 生徒は、新しい方法で相互作用するようにスプライトをプログラムします。 「isTouching」ブロックの使用方法を簡単に確認した後、生徒は2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (「collide」、「displace」、「bounce」、「bounceOff」) を使う練習をします。
            Functions:
              name: 関数(かんすう)
              description_student: このレッスンでは、プログラムを整理して読みやすくする方法として関数を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。クラスは、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。レッスンの最後に、クラスはこれらのスキルを使って、サイドスクローラーゲームの最終バージョンを用意し、機能を追加します。
              description_teacher: 生徒は、プログラムを整理して読みやすくするための関数を作成する方法を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。オフラインで行うウォームアップでは、コンテキストに応じて、さまざまな詳細レベルの指示がどのように役立つかを探ります。生徒は、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。生徒は関数を使って、コードの長いブロックを描画ループから削除し、繰り返しのコードを1つの関数に置き換えます。レッスンの終わりに、生徒はこれらのスキルを使って、サイドスクローラーゲームの最終バージョンを用意し、機能を追加します。
            The Game Design Process:
              name: ゲームデザインプロセス
              description_student: このレッスンでは、クラスはユニットの残りの部分のためのゲームを設計するのに使うプロセスを紹介します。クラスは、このプロセスを一連のレベルで学習します。このレッスンの一環として、クラスはゲームラボでマルチフレームアニメーションの使い方を簡単に学びます。レッスンの最後に、ゲームを改良して独自のゲームにする機会があります。
              description_teacher: このレッスンでは、ユニットの残りの部分のためのゲームを設計するのに使うプロセスを生徒に紹介します。このプロセスはプロジェクトガイドを中心に据え、生徒はゲームのプログラミングを始める前に、スプライト、変数、関数を定義するように求められます。このレッスンでは、プログラムが非表示になっているゲームラボでゲームをプレイすることから始め、ゲームを作成するためにどのようなスプライト、変数、関数が必要と考えるかについて話し合います。次に、配布される完全なプロジェクトガイドには、ゲームを実装する方法が1つ示されています。そして、生徒はこのプロセスを一連のレベルで学習します。このレッスンの一環として、生徒はゲームラボでマルチフレームアニメーションの使い方を簡単に学びます。レッスンの最後に、生徒はゲームを改良して独自のものにする機会があります。
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
              description_student: この2日以上かけて行うレッスンでは、クラスはユニット1の問題解決プロセスを使って、プラットフォーム
                ジャンパーゲームを作成します。サンプルゲームを見た後、クラスはどのようなゲームにしたいかを明確にし、構造化されたプロセスを使ってゲームを構築します。最後に、クラスはゲームをどのように改善できるかを考え、変更を加えていきます。
              description_teacher: この2日以上かけて行うレッスンでは、ユニット1の問題解決プロセスを使って、プラットフォーム ジャンパーゲームを作成します。まず、プラットフォーム
                ジャンパーの例を見てから、どのようなゲームにしたいかを明確にします。次に、構造化されたプロセスを使って、ゲームの実装に必要な背景、変数、スプライト、関数を計画します。ゲームのプログラムを書いた後、生徒はゲームをどのように改善できるかを振り返り、変更を加えていきます。
            Project - Design a Game:
              name: プロジェクト - ゲームの設計
              description_student: クラスでは、前の2つのレッスンのプロジェクトガイドを使って、オリジナルのゲームを計画および構築します。個別またはペアで作業して、クラスはゲームの計画、開発し、フィードバックを行います。ピアフィードバックをゲーム組み込んだ後、クラスは完成したゲームを共有します。
              description_teacher: 生徒は、前の2つのレッスンのプロジェクトガイドを手引きに使って独自のゲームを計画および構築します。生徒は個別にまたはペアで作業し、サンプルゲームのセットからインスピレーションを得て、構築するゲームの種類を最初に決定します。次に、空白のプロジェクトガイドを記入します。その中で、ゲームの動作を説明し、作成する必要がある変数、スプライト、関数を詳しく調べます。Code
                Studioでは、一連のレベルで、この計画を実装するために使用できる一般的なシーケンスを示します。プロセスの途中で、生徒は自分のプロジェクトを共有してピアレビューに回し、ゲームを完成させながらフィードバックを組み込みます。レッスンの最後に、生徒は完成したゲームをクラスメートと共有します。このプロジェクトは複数のクラスにまたがり、3～5クラス分の時間がかかることも多々あります。
            CS Discoveries End of Semester Survey:
              name: CS発見期末アンケート
            CS Discoveries Post-Course Survey:
              name: CS発見 コース後アンケート
          student_description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
        csd2-2018:
          title: CSDユニット2 - ウェブ開発 ('18～'19)
          description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
          description_short: ウェブラボで独自のウェブサイトを構築する方法を学びましょう。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章： Web コンテンツと HTML
            csd2_2:
              display_name: 第 2 章：スタイルと CSS
            cspSurvey:
              display_name: アンケート
          lessons:
            Exploring Websites:
              name: ウェブサイトを探索する
              description_student: このレッスンでは、ユーザーと作成者の両者のために、ウェブサイトが果たす目的について説明します。このクラスでは、米国で最もよく使用されているいくつかのウェブサイトを調べ、各サイトがユーザーにとってどのように役立つか、またどのようにその作成者のためにもなっているかについて話し合います。
              description_teacher: どのウェブサイトにも目的があり、作成者には作成した理由が、そしてそれを使うユーザーには使用する理由があります。このレッスンでは、ウェブサイトがユーザーとクリエイターの両者に資する目的を検討し始めます。生徒は、米国で最もよく使用されているいくつかのウェブサイトを調べ、各サイトがユーザーにとってどのように役立つか、またどのようにその作成者のためにもなっているかについて考えます。
            'Websites for Expression ':
              name: 表現のためのウェブサイト
              description_student: このレッスンでは、個人的な表現の手段としてウェブサイトを紹介します。このクラスでは、まず人々が興味や考えを表現して共有するさまざまな方法について話し合い、次に前のコースで生徒が作成した模範的なウェブサイトをいくつか見ていきます。最後に、全員でブレインストーミングを行い、作成するウェブサイトに含めるトピックと興味のリストを共有し、ユニットの残りの部分で個人のウェブサイトを開発するためのリソースを作成します。
              description_teacher: このレッスンでは、生徒は個人的な表現の手段としてウェブサイトを使用する方法を調査し、個人的なウェブサイトに含めたいトピックと興味のリストを作成します。レッスンを開始するに当たり、生徒は人々が興味や考えを表現して共有するさまざまな方法を話し合います。次に、以前のCS発見コースで生徒が作成したいくつかの模範的なウェブサイトを見て、アイデアを表現する方法を明らかにします。最後に、生徒はブレーンストーミングを行い、個人的なウェブサイトに含めたいと思うトピックや興味のリストを共有し、ユニットを進めながら参照して着想に役立てられるようにします。
            Intro to HTML:
              name: HTML入門
              description_student: このレッスンでは、ウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを紹介します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。クラスはウェブラボでHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかについて話し合ってから、HTMLを使ってユニットの最初のウェブページを作成します。
              description_teacher: このレッスンでは、生徒はウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを学習します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。次に、生徒はウェブラボの模範的なHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかをクラスメートと話し合います。次に、生徒は最初のHTMLを記述します。まとめのディスカッションは、このレッスンを通じて開発したコンテンツと構造の理解を深めるのに役立ちます。
            Headings:
              name: 見出し
              description_student: このレッスンでは、HTMLタグの説明を続けますが、今回はヘッダーを使用します。このクラスでは、ヘッダータグを使ってページとセクションのタイトルを作成し、さまざまなヘッダー要素がデフォルトでどのように表示されるかを学習します。次に、クラス全体で、ユニットを通じて構築する個人のウェブページでコンテンツをどのように配置するかを計画し、プロジェクトの最初のページの作成を開始します。
              description_teacher: このレッスンでは、生徒は引き続きHTMLを使ってウェブページ上のテキストを構成しますが、今回は見出しを使用します。生徒は、さまざまな見出し要素がデフォルトでどのように表示されるかを学び、それを使ってページとセクションのタイトルを作成する練習をします。次に、生徒は自分の個人のウェブページでコンテンツをどのように配置するかを決定していきます。最後のレベルでは、生徒は以降のユニットにかけて取り組むプロジェクトを開始します。
            Digital Footprint:
              name: デジタルフットプリント
              description_student: このレッスンでは、個人のウェブサイトを作成する作業から一歩下がり、デジタルで共有する個人情報について説明します。クラスでは、他の人と共有するのに適した情報の種類について話し合い、次にソーシャルメディアページの例をいくつか見て、意図的にまたは意図せずに共有する可能性がある個人情報の種類を確認します。最後に、クラスは、情報をオンラインに上げるときに従うべき一連のガイドラインについて考えます。
              description_teacher: "生徒は最近のレッスンで、自分の個人用ウェブサイトに掲載する実際のコンテンツについて時間を取って検討しました。このレッスンでは、ユニットで扱うプロジェクト
                (個人のウェブサイトの公開) から一歩下がって、生徒がどのような個人情報を誰とオンラインで共有するかについて考えられるようにします。また、生徒がオンラインで共有することにした情報の多くは、リリースされた瞬間に自らのコントロールから外れるという考えをしっかりと持てるようにします。\\\r
                \\\r生徒は、特定の個人情報を共有するのに適切な対象者を個別に特定することから始めます。次に、いくつかのソーシャルメディアページを見て、人々が自分自身またはお互いについてどのような情報を共有しているかを判断します。最後に、オンラインで情報を投稿するのに適切だと考えるガイドラインについて考えます。\\\r
                \\\rこのレッスンの究極のポイントは、生徒を怖がらせることではなく、情報をウェブに公開する際に、生徒がどこからどこまでがコントロールできる、どこから先がコントロールできないかを体験してもらうことです。"
            Lists:
              name: リスト
              description_student: このレッスンでは、順序付きリストと順序なしリスト、および関連する<ul>、<ol>、<li>
                のHTMLタグを紹介します。クラスはタグの使用を練習してから、個人のウェブページプロジェクトに戻って、新しいタグを含む新しいHTMLページを追加します。
              description_teacher: 生徒はHTMLの順序付きリストと順序なしリストの説明を受け、いくつかのレベルで<ul>、<ol>、<li>タグを使用する方法を学習します。その後、プロジェクトに戻り、新しいHTMLページを追加します。新しいページ内では、HTMLを記述して、レシピ、トップ10リスト、または学習した新しいタグを使用するその他のコンテンツを表示します。
            Intellectual Property and Images:
              name: 知的財産と画像
              description_student: このレッスンでは、他のウェブサイトで作成された画像、ビデオ、音楽などのメディアを、そのメディアの作成者の権利を尊重しながら使用する方法について説明します。クリエイティブ
                コモンズ ライセンスを最初に学習した後、クラスはウェブページに画像を追加する方法と、そうするときに適切な著作権表示をする方法を学びます。
              description_teacher: 他の人が作品をどのように使用できるかについて個人の意見を述べ合うところから始めて、クラスは、創造的なコンテンツの作成者とユーザーにとっての著作権の目的と役割を探ります。次のアクティビティでは、著作権の扱いの難しさの解決策として、さまざまなクリエイティブ
                コモンズ ライセンスを詳しく見ていきます。最後に、さまざまなクリエイティブ コモンズ ライセンスの制限について共通の理解を得て、生徒は<img>タグを使ってウェブページに画像を追加する方法を学びます。
            Clean Code and Debugging:
              name: クリーンなコードとデバッグ
              description_student: このレッスンでは、HTMLでウェブページを設計するときに発生する一般的な問題について説明します。クラスは、Code
                Studioで見つかったより複雑になる一連のウェブページのエラーを修正し、ウェブページを読みやすくするためのツールとしてのコメント、空白、インデントの重要性を学習します。
              description_teacher: 生徒は、HTMLでウェブページを設計するときに発生する一般的な問題に対処し、より複雑になる一連のウェブページのエラーを修正します。その過程で、ウェブページを読みやすくするためのツールとしてのコメント、空白、インデントの重要性を学びます。レッスンの最後に、生徒はウェブページをデバッグし、読みやすくメンテナンスしやすいようにするための戦略のリストを作成します。
            Project - Multi-Page Websites:
              name: プロジェクト - マルチページウェブサイト
              description_student: このレッスンでは、ハイパーリンクについて説明します。ハイパーリンクを使うことで、デベロッパーは複数のページを1つのウェブサイトにつなげることができます。クラスは、以前のすべてのページを1つのプロジェクトにリンクし、各ページへのナビゲーションバーを作成してから、サイト全体をウェブに公開します。
              description_teacher: "ウェブページを相互にリンクする方法を学習した後、生徒はついに自分が取り組んでいるウェブサイトを公開することができます。このレッスンでは、以前に作成したすべてのページを1つのプロジェクトにリンクし、新しいページを作成して、ページ間のナビゲーションを追加してから、サイト全体をウェブに公開します。
                \\\r \\\r"
            Styling Text with CSS:
              name: CSSを使用したテキストのスタイル設定
              description_student: このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。このクラスは、CSSルールセットの基本的な構文を学習してから、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。最後に、全員でテキストスタイルを自身のウェブサイトに適用します。
              description_teacher: "このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。生徒は、CSSルールセットの基本的な構文を学び、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。生徒はギネス世界記録保持者に関するHTMLページで作業し、指定されたページに独自のスタイルを追加します。最後のレベルでは、生徒はテキスト要素のスタイルについて学んだことを自分のウェブページに適用します。\\\r
                \\\r"
            Styling Elements with CSS:
              name: CSSを使用した要素のスタイル設定
              description_student: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。クラスは、新しいCSSスタイルを調査して、「世界のデザート」ページを変更することから始めます。その後、全員でこの新しい知識を自身のウェブサイトに適用します。
              description_teacher: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。生徒は、このレッスンの最初に、世界のデザートに関するウェブサイトを見ます。そして、このウェブサイトのCSSスタイルを調べて新たに変更を加え、独自のスタイルをこのページに追加します。
                デザートページで作業した後、生徒は新しいCSSプロパティの知識を利用して、自身のウェブサイトのスタイルをさらに充実させます。
            Sources and Search Engines:
              name: ソースと検索エンジン
              description_student: 最初にウェブ検索の借り物競争を完了した後、クラスは検索エンジン内部の仕組みについて学び、分析スキルを使って奇妙な真偽不明の動物を探す機会があります。
              description_teacher: このレッスンでは、ウェブ検索の仕組みや、関連性があり信頼できる情報をオンラインで見つける方法について、生徒がより批判的に考えるように促します。検索エンジンがどのように機能するかについてのビデオを見て議論した後、生徒は真偽不明の動物に関する情報を検索します。生徒は、どの動物が実際にデマであるかを特定するために、見つけたサイトを分析して信頼できるものであることを確かめる必要があります。
            RGB Colors and Classes:
              name: RGBの色とクラス
              description_student: このレッスンでは、クラスとカスタムカラーについて説明します。このクラスは、まずRGB (赤、緑、青)
                値を使ってカスタムカラーを指定する方法を学び、次にCSSクラスを使用する新しいFour Seasons ウェブページにこれらのカラーを適用します。クラスを使ってFour
                Seasons ウェブページにスタイルを追加し、さらに自身のウェブサイトのスタイルを設定します。
              description_teacher: このレッスンでは、まず、RGB (赤、緑、青) 値を使ってカスタムカラーを指定する方法を学習します。次に、CSSクラスを使用する新しいFour
                Seasons ウェブページにこれらのカラーを適用します。CSSクラスにより、ウェブデベロッパーは同じタイプの他の要素とは異なるスタイル要素のグループを扱うことができます。クラスを使って、生徒はFour
                Seasons ウェブページにスタイルを追加し、さらに自身のウェブサイトのスタイルを設定します。
            Project - Personal Portfolio Website:
              name: プロジェクト - 個人ポートフォリオウェブサイト
              description_student: ユニットの最後の数日で、クラスは自身のウェブサイトを完成させ、仲間と協力してフィードバックを出し合い、ルーブリック
                (評価基準) を確認し、サイトに最後の仕上げを行います。最後に、全員が自身のプロジェクトとその開発方法を共有してユニットを締めくくります。
              description_teacher: "生徒は、ユニットを通して多くの時間を費やして自身のウェブサイトを開発してきました。最後の2日間で、生徒はウェブサイトを完成させます。さらに同僚と協力してフィードバックを出し合い、ウェブサイトに最後の仕上げを行い、ルーブリック
                (評価基準) を確認し、プロセスを振り返ります。最後に、プロジェクトを共有し、さらに最終的な設計に至るまでにたどったプロセスの概要を示してユニットを締めくくります。\\\r"
            CS Discoveries Post-Course Survey:
              name: CS発見 コース後アンケート
          student_description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
        coursea-2018:
          title: コース A (2018)
          assignment_family_title: コース A
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          description_short: 低学年向けコンピューター サイエンス入門
          description_audience: 4-7 才
          lessons:
            'Debugging: Unspotted Bugs':
              name: 気づかれていないバグ
              description_teacher: このレッスンで、生徒はデバッグ（虫を取り除く、プログラムの間違いを直す）の手順を概観します。生徒は「何が起きたか」「何が起きるべきだったのか」「それは何を意味しているのか」と言った、考え方を学びます。
            'Persistence & Frustration: Stevie and the Marbles':
              name: スティーヴィーと大きなプロジェクト
              description_teacher: "生徒が質問に答えたりプロジェクトに取り組んだりしているときに障壁にぶつかると、イライラしてあきらめてしまいがちです。このレッスンでは、フラストレーションが学習の要になる可能性があることを生徒に教えます。ここでは、不満は、失敗の兆候ではなく、創造的なプロセスの手順として提示します。\\\r
                \\\rこのレッスンは、1回または2回のクラスセッションで行うことができます。時間があれば、マーブルラン アクティビティの構築フェーズと修正フェーズを自由に取り組んでください。"
            'Real-life Algorithms: Plant a Seed':
              name: 種を植える
              description_teacher: "このレッスンでは、実際の種を植えることにより、アルゴリズムの概念を日常の実際の活動に関連付けます。ここでの目標は、実際の状況をオンラインシナリオに、またはその逆に変換するスキルを構築し始めることです。\\\r"
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
              description_teacher: このレッスンでは、生徒がコンピューターラボに進むときに何が起こるかを理解します。まずはコンピューターラボのマナーを紹介する簡単なディスカッションから始まり、次にコンピューターを使ってオンラインパズルを完成させます。
            'Programming: Happy Maps':
              name: ハッピーマップ
              description_teacher: シーケンスを計画することと、そのシーケンスを適切な言語にエンコードすることの違いを生徒が理解すれば、アルゴリズムからプログラミングへ難なく移れるかもしれません。このアクティビティは、生徒が簡潔にしたプログラムで読み書きする経験を積むのに役立ちます。
            Programming in Maze:
              name: めいろ のプログラミング
              description_teacher: この一連のオンラインパズルは、アルゴリズム、デバッグ、および一般的なコンピューターリテラシーの理解を基に取り組みます。アングリーバードゲームのキャラクターが登場するこのゲームで、生徒は壁やTNTに衝突することなくトリをブタまで飛ばすための順序アルゴリズムを開発します。このステージには、問題解決と批判的思考の練習もできるように、デバッグパズルも含まれています。
            Going Places Safely:
              name: 安全な道を通って行く
              description_teacher: このレッスンは、[コモンセンスメディア] と協力して、多くのウェブサイトで非公開の情報が求められることを学び、そのような要求を責任を持って処理する方法について説明します。また、生徒たちはオンラインでエキサイティングな場所に行くことができますが、安全でいるようにするには特定のルールに従う必要があることも学びます。
            'Loops: Happy Loops':
              name: くりかえし：ハッピー ループ
              description_teacher: ループは、プログラミングにおいて非常に役立つ強力なツールです。ループがどのように役立つかを理解するには、生徒は平凡な問題をより簡単に解決する意欲を持つ必要があります。
            Loops in Collector:
              name: くりかえし あつめる
              description_teacher: "「ハッピーループ」からの指示を繰り返すというコンセプトに基づいて、このステージでは、生徒にループを使ってCode.orgでより効率的に宝物を収集してもらいます。"
            Loops in Artist:
              name: アーティストくりかえし
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、ループでパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            'Events: The Big Event':
              name: ビッグイベントジュニア
              description_teacher: イベントは、事前に作成したアルゴリズムに多様性を加える優れた方法です。プログラムに、ユーザーが希望したタイミングでユーザーの指示に応答してもらいたいことがあります。イベントはそれが行えるようにします。
            Events in Play Lab:
              name: プレイ ラボのイベント
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってストーリーを作りましょう！
            Programming in Bee:
              name: みつばちと学ぶプログラミング
            Programming in Harvester:
              name: ファーマーと学ぶプログラミング
            Loops in Harvester:
              name: ハーベスターと学ぶループ
            Sequencing in Maze:
              name: アングリーバードと学ぶシーケンス
            'Persistence & Frustration: Stevie and the Big Project':
              name: スティーヴィーと大きなプロジェクト
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        express-2018:
          title: エクスプレスコース
          assignment_family_title: エクスプレスコース
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          description_short: コンピューター サイエンス入門。小学校の中高学年向けコースの良い所をとりだしました。
          description_audience: '年齢: 9～18才'
          lessons:
            'Algorithms: Graph Paper Programming':
              name: グラフ用紙のプログラミング
            Introduction:
              name: はじめに
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging in Collector:
              name: コレクターでのデバッグ
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops:
              name: 入れ子のループ
            Nested Loops Project in Frozen:
              name: フローズンでの入れ子のループプロジェクト
            'How it Works: The Internet':
              name: '仕組み: インターネット'
            'Common Sense Education: Digital Citizenship':
              name: '一般教養: デジタル シティズンシップ'
            'Common Sense Education: Screen Out the Mean':
              name: '一般教養: 平均をスクリーンアウトする'
            'Events: The Big Event':
              name: ビッグイベント
            Events in Star Wars:
              name: スター・ウォーズのイベント
            Events with Flappy:
              name: フラッピーと学ぶイベント
            Events in Bounce:
              name: バウンスで学ぶイベント
            'Conditionals: Conditionals with Cards':
              name: '条件文: カードを使った条件文'
            While Loops in Farmer:
              name: 農夫と学ぶWhileループ
            Conditional Loops in Maze:
              name: 迷路の条件付きループ
            Conditionals in Minecraft:
              name: マインクラフトの条件文
            Conditionals & Loops in Farmer:
              name: 農夫と学ぶ条件とループ
            'Variables: Envelope Variables':
              name: '変数: エンベロープ変数'
            Variables in Artist:
              name: アーティストと学ぶ変数
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
            'For Loops: For Loop Fun':
              name: 'Forループ: Forループを楽しむ'
            For Loops in Bee:
              name: みつばちと学ぶForループ
            For Loops in Artist:
              name: アーティストと学ぶForループ
            'Functions: Songwriting with Parameters':
              name: '関数: パラメータで作曲'
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Revise Your Project:
              name: プロジェクトを修正する
            Present Your Project:
              name: プロジェクトの発表
            Conditionals in Bee:
              name: みつばちと学ぶIf/Else
            Until Loops in Maze:
              name: 迷路で学ぶUntilループ
            Debugging in Maze:
              name: スクラットと学ぶデバッグ
            Programming in Collector:
              name: ローレルと行う宝物の収集
            Programming in Artist:
              name: プログラムでアートを作成
            'Loops: Getting Loopy':
              name: ルーピーをゲット
            Loops with Rey and BB-8:
              name: レイとBB-8と学ぶループ
            Copyright and Creativity:
              name: 著作権と創造性
            'Concept Practice with Minecraft ':
              name: マインクラフトで先を見る
            Nested Loops in Bee:
              name: みつばちでの入れ子のループ
            Nested Loops in Frozen:
              name: アナとエルサの入れ子のループ
            Conditionals with Cards:
              name: カードと条件
            Conditionals & Loops in Harvester:
              name: 条件文を用いる収獲
            'Functions: Songwriting':
              name: 作詞作曲
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
            Functions in Harvester:
              name: 農夫と学ぶ関数
            Functions in Artist:
              name: アーティストと学ぶ関数
            Screen Out the Mean:
              name: 平均をスクリーンアウト
            Determine the Concept:
              name: コンセプトの決定
            Build a Flappy Game:
              name: フラッピーゲームを構築する
            The Power of Words:
              name: 言葉の力
            Envelope Variables:
              name: エンベロープ変数
            Variables as Constant in Artist:
              name: アーティストと学ぶ変数
            Variables that Change in Bee:
              name: みつばちと学ぶ変数の変更
            Variables that Change in Artist:
              name: アーティストと学ぶ変数の変更
            For Loop Fun:
              name: Forループを楽しむ
            Learning Sprites with Sprite Lab:
              name: スプライトラボの学習
            Alien Dance Party with Sprite Lab:
              name: エイリアンダンスパーティー
            Pet Giraffe with Sprite Lab:
              name: ペットのキリン
            Binary Bracelets:
              name: バイナリ ブレスレット
            'Unplugged: Binary':
              name: バイナリ画像
            Internet:
              name: インターネット
            Crowdsourcing:
              name: クラウドソーシング
            Relay Programming:
              name: プログラミングをリレーする
            Graph Paper Programming:
              name: グラフ用紙のプログラミング
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        courseb-2018:
          title: コース B (2018)
          assignment_family_title: コース B
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          description_short: 就学前の児童のためのコンピューター サイエンス入門。コースAと似ていますが、コンセプトが深化しています。
          description_audience: 5-8 才
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
            'Persistence & Frustration: Stevie and the Marbles':
              name: スティービーとビーだま
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
            Your Digital Footprint:
              name: デジタル フットプリント
            'Programming: My Robotic Friends':
              name: 私のロボットの友だち
            Programming in Maze:
              name: めいろ のプログラミング
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: ルーピー ロボティック フレンズ ジュニア
            Loops in Collector:
              name: くりかえし あつめる
            Loops in Artist:
              name: アーティストくりかえし
            'Events: The Big Event':
              name: ビッグイベントジュニア
            Events in Play Lab:
              name: プレイ ラボのイベント
            Programming in Ice Age:
              name: スクラッチと学ぶプログラミング
            Loops in Ice Age:
              name: スクラッチと学ぶループ
            Sequencing with Scrat:
              name: スクラッチと学ぶシーケンス
            Move It, Move It:
              name: 動かせ！動かせ！
            Copyright and Creativity:
              name: 作成してフェアにプレイするのは、素晴らしいことです
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        coursed-2018:
          title: コース D (2018)
          assignment_family_title: コース D
          description: 生徒は、入れ子のループ、whileループ、条件、イベントについての理解を深めます。プログラミング以外に、生徒はデジタル
            シティズンシップについて学びます。
          description_short: 条件文について学び、独自のアート、ストーリー、またはゲームを作成します。
          description_audience: '年齢: 7～11才'
          lessons:
            'Algorithms: Graph Paper Programming':
              name: グラフ用紙のプログラミング
            Introduction:
              name: はじめに
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging in Collector:
              name: ローレルと学ぶデバッグ
            Events in Bounce:
              name: バウンスで学ぶイベント
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee:
              name: 迷路で学ぶ入れ子のループ
            Nested Loops in Artist:
              name: 入れ子のループを使った奇抜な形状
            While Loops in Farmer:
              name: ファーマーの「while」ループ
            Conditionals with Cards:
              name: カードと条件
            Conditionals in Bee:
              name: みつばちと学ぶIf/Else
            Conditionals & Loops in Maze:
              name: 迷路で学ぶ条件文とループ
            Conditionals & Loops in Farmer:
              name: 農夫と学ぶ条件とループ
            Digital Citizenship:
              name: デジタル シティズンシップ
            Build a Play Lab Game:
              name: 忍者対海賊ゲーム
            'Unplugged: Binary':
              name: バイナリ画像
            Loops in Ice Age:
              name: アイス・エイジのループ
            Nested Loops in Frozen:
              name: スノーフレークとアナとエルサ
            Until Loops in Maze:
              name: 迷路で学ぶUntilループ
            Conditionals in Maze:
              name: 迷路で学ぶ条件文
            Conditionals & Loops in Harvester:
              name: 条件文を用いる収獲
            Graph Paper Programming:
              name: グラフ用紙のプログラミング
            Relay Programming:
              name: プログラミングをリレーする
            Introduction to Online Puzzles:
              name: オンラインパズル入門
            Events in Bouncey:
              name: バウンスで学ぶイベント
            Nested Loops in Bees:
              name: みつばちで学ぶ入れ子のループ
            Nested Loops in Maze:
              name: 迷路で学ぶ入れ子のループ
          student_description: 生徒は、入れ子のループ、whileループ、条件、イベントについての理解を深めます。プログラミング以外に、生徒はデジタル
            シティズンシップについて学びます。
        jr-test:
          lessons:
            Programming with Behaviors:
              name: プログラミングとビヘイビア
            Programming with Forever:
              name: プログラミングと永遠
            Using Behaviors:
              name: ビヘイビアの使用
            Using Forever Loops:
              name: Foreverループの使用
            Virtual Pet - Behaviors:
              name: バーチャルペット - 永遠
            Fish Tank:
              name: 水槽
            Virtual Pet - Forever:
              name: バーチャルペット - 永遠
            Alien Dance Party - Input:
              name: エイリアン ダンスパーティー - 入力
            Virtual Pet - Interactions:
              name: バーチャルペット - インタラクション
        petgame:
          lessons:
            pet game:
              name: ペットゲーム
        csp-exam:
          title: CS原則 AP試験準備
          description_short: CS原則 AP試験準備
          description: このページには、コースの1～5ユニットで出題されたすべての多肢選択問題のコピーが含まれています。生徒は、これらのミニテストを再度受けることにより、多肢選択試験の練習ができます。
          lessons:
            Unit 1 - Assessment 1:
              name: ユニット1 - 評価1
            Unit 1 - Assessment 2:
              name: ユニット1 - 評価2
            Unit 2 - Assessment 1:
              name: ユニット2 - 評価1
            Unit 2 - Assessment 2:
              name: ユニット2 - 評価2
            Unit 3 - Assessment 1:
              name: ユニット3 - 評価1
            Unit 4 - Assessment 1:
              name: ユニット4 - 評価1
            Unit 5 - Assessment 1:
              name: ユニット5 - 評価1
            Unit 5 - Assessment 2:
              name: ユニット5 - 評価2
            Unit 2 - Assessment 3:
              name: ユニット2 - 評価3
            Unit 2 - Assessment 4:
              name: ユニット2 - 評価4
            Unit 2 - Assessment 5 - Practice AP Pseudocode Questions:
              name: ユニット2 - 評価5 - APの疑似コード問題の練習
            'Unit 1.1 - Binary and Ascii ':
              name: ユニット1.1 - バイナリとASCII
            Unit 1.2 - Internet Protocols, TCP/IP, DNS, HTTP, etc.:
              name: ユニット1.2 - インターネットプロトコル、TCP/IP、DNS、HTTPなど
            Unit 2 - 1. Bits, Bytes, Hexadecimal and Compression:
              name: ユニット2 - 1.ビット、バイト、16進数、圧縮
            Unit 2 - 2. Interpreting Data & Charts, Big Data, Global Impacts:
              name: ユニット2 - 2.データとチャートの解釈、ビッグデータ、グローバルインパクト
            Unit 3 - 1. Programming - Turtle, Loops, Functions, Abstraction:
              name: ユニット3 - 1.プログラミング - タートル、ループ、関数、抽象化
            Unit 3 - 1 Programming - Turtle, Loops, Functions, Abstraction:
              name: ユニット3 - 1プログラミング - タートル、ループ、関数、抽象化
            'Unit 1 Assessment 1 - Binary and Ascii ':
              name: ユニット1 評価1 - バイナリとASCII
            Unit 1 Assessment 2 - Internet Protocols, TCP/IP, DNS, HTTP, etc:
              name: ユニット1 評価2 - インターネットプロトコル、TCP/IP、DNS、HTTPなど
            Unit 2-1 - Bits, Bytes, Hexadecimal and Compression:
              name: ユニット2-1 - ビット、バイト、16進数、圧縮
            Unit 2-2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: ユニット2-2 - データとチャートの解釈、ビッグデータ、グローバルインパクト
            Unit 3 Quiz 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: ユニット3 クイズ1 - タートルプログラミング、ループ、関数、抽象化
            Unit 2 Assessment 1 - Bits, Bytes, Hexadecimal and Compression:
              name: ユニット2 評価1 - ビット、バイト、16進数、および圧縮
            Unit 2 Assessment 2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: ユニット2 評価2 - データとチャートの解釈、ビッグデータ、グローバルインパクト
            Unit 3 Assessment 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: ユニット3 評価1 - タートルプログラミング、ループ、関数、抽象化
            Unit 4 Assessment 1 - Privacy, Cybersecurity, Encryption:
              name: ユニット4 評価1 - プライバシー、サイバーセキュリティ、暗号化
            Unit 5 Assessment 1 - Events, Variables, Debugging, Arithmetic, Turtle Review:
              name: ユニット5 評価1 - イベント、変数、デバッグ、算術、タートルレビュー
            Unit 5 Assessment 2 - If Statements, Boolean Expressions, Strings:
              name: ユニット5 評価2 - If文、ブール式、文字列
            Unit 5 Assessment 3 - While Loops, Boolean Expressions, Arrays and Lists:
              name: ユニット5 評価3 - whileループ、ブール式、配列、リスト
            Unit 5 Assessment 4 - List Algorithms, Functions with Return Values:
              name: ユニット5 評価4 - リストアルゴリズム、戻り値付き関数
            Unit 5 Assessment 5 - Practice AP Pseudocode Questions (Variables, Procedures, Loops, Conditionals):
              name: ユニット5 評価5 - APの疑似コード問題の練習 (変数、手順、ループ、条件文)
          student_description: このページには、コースの1～5ユニットで出題されたすべての多肢選択問題のコピーが含まれています。生徒は、これらのミニテストを再度受けることにより、多肢選択試験の練習ができます。
        coursec-2018:
          title: コース C (2018)
          assignment_family_title: コース C
          description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description_audience: '年齢: 6～10才'
          lessons:
            Building a Foundation:
              name: ピラミッドをたてよう
            Programming in Maze:
              name: めいろ のプログラミング
            Debugging in Maze:
              name: 迷路で学ぶデバッグ
            'Real-life Algorithms: Paper Planes':
              name: 紙飛行機
            Programming in Collector:
              name: ローレルと行う宝物の収集
            Programming in Artist:
              name: プログラムでアートを作成
            'Loops: Getting Loopy':
              name: ルーピーをゲット
            Loops with Rey and BB-8:
              name: レイとBB-8と学ぶループ
            Loops in Artist:
              name: アーティストくりかえし
            Loops in Harvester:
              name: ループで作物を収穫する
            'Events: The Big Event':
              name: ビッグイベント
            Build a Flappy Game:
              name: フラッピーゲームを構築する
            Events in Play Lab:
              name: プレイ ラボのイベント
            Screen Out the Mean:
              name: 平均をスクリーンアウト
            Binary Bracelets:
              name: バイナリ ブレスレット
            Looking Ahead:
              name: マインクラフトで先を見る
          student_description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
        csd6-2018:
          title: CSDユニット6 - フィジカルコンピューティング ('18～'19)
          description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
          description_short: 物理デバイスでプログラミングする方法を学びます。
          lesson_groups:
            csd6_1:
              display_name: '第 1 章: ハードウェアを使ったプログラミング'
            csd6_2:
              display_name: '第 2 章: 物理プロパティの構築'
            cspSurvey:
              display_name: アンケート
          lessons:
            Innovations in Computing_:
              name: コンピューティングにおける革新\_
            Designing Screens with Code_:
              name: Codeを使用して画面を設計する\_
            The Circuit Playground_:
              name: サーキッ トプレイグラウンド\_
            Input Unplugged_:
              name: オフラインの入力\_
            Board Events_:
              name: ボードイベント\_
            Getting Properties_:
              name: プロパティの取得\_
            Analog Input_:
              name: アナログ入力\_
            The Program Design Process_:
              name: プログラム設計プロセス\_
            'Project: Make a Game__':
              name: 'プロジェクト: ゲームの作成\_\_'
            Arrays and Color LEDs__:
              name: 配列とカラーLED\_\_
            Making Music_:
              name: 作曲\_
            Arrays and For Loops_:
              name: 配列とForループ\_
            Accelerometer_:
              name: 加速度計\_
            Functions with Parameters_:
              name: パラメータ付き関数\_
            Circuits and Physical Prototypes_:
              name: 回路と物理プロトタイプ\_
            'Project: Prototype an Innovation_':
              name: 'プロジェクト: イノベーションのプロトタイプ\_'
            Innovations in Computing:
              name: コンピューティングにおける革新
            The Circuit Playground:
              name: サーキット プレイグラウンド
            Input Unplugged:
              name: オフラインで入力
            Board Events:
              name: ボードイベント
            Getting Properties:
              name: プロパティの取得
            Analog Input:
              name: アナログ入力
            The Program Design Process:
              name: プログラム設計プロセス
            'Project: Make a Game':
              name: 'プロジェクト: ゲームを作る'
            Arrays and Color LEDs:
              name: 配列とカラーLED
            Arrays and For Loops:
              name: 配列とforループ
            Accelerometer:
              name: 加速度計
            Functions with Parameters:
              name: パラメーター付き関数
            Circuits and Physical Prototypes:
              name: 回路と物理プロトタイプ
            'Project: Prototype an Innovation':
              name: 'プロジェクト: イノベーションのプロトタイプ'
            CS Discoveries Post-Course Survey:
              name: CS発見 コース後アンケート
          student_description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
        coursee-2018:
          title: コース E (2018)
          assignment_family_title: コース E
          description: アルゴリズム、ループ、条件文、イベントを使ってプログラミングから始めて、関数に移ります。このコースの後半では、友だちや家族と共有できるキャップストーンプロジェクトを設計して作成します。
          description_short: コースCとDの概念を確認してから、関数を学習してさらに進みます。
          description_audience: '年齢: 8～12才'
          lesson_groups:
            csf_e_1:
              display_name: コースEへの強化 (オプション)
            csf_e_2:
              display_name: コースEの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
            extra_course_content:
              display_name: 追加のコース内容
          lessons:
            'Programming: My Robotic Friends':
              name: 私のロボットの友だち
            Sequence in Maze:
              name: コメント付きプログラミング
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: プログラムでアートを作成
            'Loops: My Loopy Robotic Friends':
              name: ループの達人 ロボットのお友だち
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops:
              name: 迷路で学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            'Algorithms: Dice Race':
              name: 'アルゴリズム: ダイスレース'
              description_student: このアルゴリズムのレッスンでは、コンピューターの観点からゲームを記述する方法を学びます。
              description_teacher: このレッスンでは、ダイスレースゲームをプレイして、アルゴリズムの概念を実際の活動に関連付けます。ここでの目標は、実際の状況をオンラインシナリオに、またはその逆に変換するスキルの構築し始めることです。
            Introduction:
              name: はじめに
              description_student: このペースの速い紹介では、このコースのパズルを解くために必要なスキルのほとんどを練習する機会があります。
              description_teacher: このレッスンでは、生徒はCode.orgのオンラインワークスペースの紹介 (またはクラスの経験に応じてレビュー)
                から始めます。生徒は、「実行」、「リセット」、「手順」ボタンを含むインターフェイスの基本的な機能を学びます。最初のビデオでは、Blocklyブロックのドラッグ、削除、接続も紹介されています。パズルでは、生徒は迷路とアーティストでシーケンスとデバッグのスキルを練習します。
            Conditionals:
              name: ファーマーと学ぶ条件文
              description_student: この楽しくてやりがいのあるシリーズでは、特定の条件下でコンピューターに何をすべきかを教えます。
              description_teacher: このレッスンでは、生徒に「while」ループと「if/else」文を紹介します。 「while」ループは、条件が真である限り、コマンドを繰り返し続けるループです。whileループは、プログラマーがコマンドを繰り返す必要がある正確な回数を知らないときに使用しますが、プログラマーは、ループがループを続けるためにどの条件が真である必要があるかを知っています。「If/Else」文は、何かが真である場合にのみプログラムのセクション全体を実行することでプログラミングに柔軟性を提供し、そうでない場合は他の何かを実行します。
            Private and Personal Information:
              description_student: インターネットは楽しくて刺激的ですが、安全を確保することも重要です。このレッスンでは、安全に共有できる情報と非公開の情報の違いを学びます。
              description_teacher: Common Sense Educationが開発したこのレッスンでは、オンラインで共有しても安全な情報とそうでない情報の違いについて学んでいきます。生徒は自分のID情報を要求するサイトを訪問する際、重要な調査プロセスを踏むことを学びます。これにより、自分自身と家族をID情報の盗難から守ることができます。このレッスンでは、一部のウェブサイトが要求するユーザー情報について批判的に考える方法を学びます。また、プライベート情報と個人情報の違い、およびオンラインで共有するのに安全か安全でないかを判別する方法を学びます。
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
              description_student: このレッスンで独自のスター・ウォーズゲームを構築しながら、フォースを感じてください。
              description_teacher: このレッスンでは、イベントを使ってオンラインで共有できるゲームを作成する練習をします。 R2-D2や他のスター・ウォーズのキャラクターが登場し、イベントの案内を一通り受けてから、スペースが与えられて独自のゲームを作成します。
            'Functions: Songwriting':
              name: 作詞作曲
              description_student: ロックスターでさえプログラミングのスキルが必要です。このレッスンでは、曲の歌詞を用いた関数について学習します。
              description_teacher: コンピューター サイエンスの世界で最も素晴らしい構造の1つは関数です。関数 (プロシージャと呼ばれることもあります)
                は、大きなプログラムの中で繰り返し使用できるミニプログラムです。このレッスンでは、まとまったコードを関数に合わせることがなぜ役立つのかを生徒が直感的に理解するのに役立ちます。
            Functions in Artist:
              name: アーティストと学ぶ関数
              description_student: 関数で複雑な図面をより簡単に作成！
              description_teacher: 生徒は、Code.orgで関数の使い方を学びます。アーティストと学ぶ関数で、壮大な画像を作成および変更します。より複雑なパターンについては、関数を別の関数の中から呼び出すことにより、入れ子の関数について学びます。
            Functions in Bee:
              name: みつばちと学ぶ関数
              description_student: すべてのミツとハチミツを集めるのに長過ぎるプログラムを書かないようにしましょう。代わりに関数を使ってください！
              description_teacher: 関数の2回目の練習では、生徒は複雑な道を進み、たくさんのミツを集めて、たくさんのハチミツを作ります。
            Functions in Harvester:
              name: ファーマーと学ぶ関数
            Determine the Concept:
              name: コンセプトの決定
              description_student: 秘密は漏らしません！このレッスンでは、これまでに学んだスキルを活用できます。
              description_teacher: このレッスンでは、前のレッスンの概念をまとめ、どの概念を適用するかを伝えずに、各問題をどのように解決するかについて批判的に考える機会を生徒に提供します。生徒は、基本的なアルゴリズム、デバッグ、「repeat」ループ、条件文、「while」ループ、関数についておさらいします。
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
              description_student: ゲームを作成する練習をして、友だちや家族と共有しましょう。
              description_teacher: このレッスンでは、プレイラボを取り上げます。プレイラボは、生徒が独自のゲームを作成し、キャラクターとユーザー入力の間でやり取りが行えるプラットフォームです。生徒はイベントを使って、キーボードコントロールを行います。このパズルのセットは、ゲーム開発を大まかにガイドしますが、自分のアイデアを自由に追加できます。
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
              description_student: ここにいくつかのゲームと絵があります。それを使って遊んで、自分のプロジェクトのアイデアを手に入れよう！
              description_teacher: 次の4つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたって体験してもらうことを意図しています。その中で、ブレーンストーミングの探求、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボで事前に作成されたプロジェクトの例を見て、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティストまたはプレイラボで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。最後に、生徒は完成した作品を仲間に発表することができます。
            The Design Process:
              name: 設計プロセス
              description_student: このように大きなプロジェクトには時間と十分な計画が必要です。ここでは、設計プロセスについて学習し、後で独自の作品を作成するのに使用できるようにします。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトのこの部分では、生徒は設計プロセスと、それを自分のプロジェクトにどのように実装するかについて学びます。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Build Your Project:
              name: プロジェクトの構築
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
              description_teacher: 4つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトをプログラミングする準備をしていきます。ここでは、生徒はアーティストまたはプレイラボでプロジェクトを作成するためのスペースが与えられます。これは、プロジェクトで最長のステージになるかもしれません。プロセスの4つのステージすべてのレッスンガイドについては、このプロジェクトプロセスの最初のステージ[こちら]
                \(<https://curriculum.code.org/csf/coursee/12/>) にあります。
            Present Your Project:
              name: プロジェクトの発表
              description_student: 人に見てもらう準備はいいですか？完成したプロジェクトを同僚に発表する時が来ました。
              description_teacher: 4つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトをプログラミングする準備をしていきます。最後に、生徒は完成した作品を同僚に発表したり、特別なリンクを使って家族と共有したりできます。プロセスの4つのステージすべてのレッスンガイドは、このプロジェクトプロセスの最初のステージ[こちら]
                \(<https://curriculum.code.org/csf/coursee/12/>) にあります。
            Internet:
              name: インターネット
              description_student: 情報がインターネット上をどのように移動するのか疑問に思ったことはありませんか？魔法を使っているわけではありません！このレッスンでは、インターネットの仕組みの基本を学びます。
              description_teacher: 多くの人が毎日インターネットを使っていますが、それがどのように機能するかを知っている人はあまりいません。このレッスンでは、接続、URL、IPアドレス、DNSについて学びながら、インターネットの流れを疑似体験します。
            Crowdsourcing:
              name: クラウドソーシング
              description_student: このレッスンでは、チームでプロジェクトを構築するプロセスであるクラウドソーシングについて学びます。
              description_teacher: コンピューター サイエンスでは、大きな困難な問題に直面します。大きな素数を見つけることやDNAの配列を決定するなどの課題は、個人として行うことはほとんど不可能です。他の人の力を借りると、このようなタスクが扱いやすくなります。このレッスンでは、コンピューター
                サイエンス業界でチームワークがいかに役立つかを説明します。
            Conditionals with Cards:
              name: カードと条件
            Minecraft Hour of Code:
              name: Minecraft Hour of Code プログラミング入門
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
            Learning Sprites with Sprite Lab:
              name: スプライトラボの学習
            Alien Dance Party with Sprite Lab:
              name: エイリアンダンスパーティー
            Pet Giraffe with Sprite Lab:
              name: ペットのキリン
            Copyright and Creativity:
              name: デジタル共有
          student_description: アルゴリズム、ループ、条件文、イベントを使ってプログラミングから始めて、関数に移ります。このコースの後半では、友だちや家族と共有できるキャップストーンプロジェクトを設計して作成します。
        coursef-2018:
          title: コース F (2018)
          assignment_family_title: コース F
          description: このコースでは、さまざまな種類のループ、イベント、関数、条件文を使用する方法を学びます。さまざまな問題解決手法を調査し、コンピューティングとインターネットの社会的影響について話し合います。このコースの後半では、友人や家族と共有できるキャップストーンプロジェクトを設計して作成します。
          description_short: コンピューター サイエンス入門のすべての概念を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description_audience: '年齢: 9～13才'
          lesson_groups:
            csf_f_1:
              display_name: コースFへの強化 (オプション)
            csf_f_2:
              display_name: コースFの内容
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Programming: My Robotic Friends':
              name: 私のロボットの友だち
            Sequence in Maze:
              name: コメント付きプログラミング
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: プログラムでアートを作成
            'Loops: My Loopy Robotic Friends':
              name: ループの達人 ロボットのお友だち
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee/Zombie:
              name: 迷路で学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            'Algorithms: Tangrams':
              name: 'アルゴリズム: タングラム'
              description_student: ここでは、タングラムと呼ばれるパズルを使用したアルゴリズムについて学びます。
              description_teacher: このレッスンは、アルゴリズムで重要なことを示しています。アルゴリズムを単純に保つ限り、アルゴリズムを使用する方法はたくさんあります。ただし、全員が同じ結果を出すようにしたい場合は、アルゴリズムにさらに詳細を加える必要があります。タングラムで遊んでいる間、生徒は詳細なアルゴリズムと一般的なアルゴリズムの違いを学びます。
            Introduction:
              name: はじめに
              description_student: このレッスンでは、このコースで学べる素晴らしいことをいくつか簡単に紹介します。
              description_teacher: このレッスンでは、シーケンス、ループ、入れ子のループを紹介し、コースの後半にかけてより複雑な概念に対応できるようにします。この「徐々にステップアップする」レッスンにより、クラスの上級者と初心者を対等な立場に立たせることができます。
            The Power of Words:
              name: 言葉の力
              description_student: いじめは決して許されません。このレッスンでは、オンラインで何を言ってよいか、何を言ってはいけないかについて説明します。
              description_teacher: お気に入りのウェブサイトを楽しむ一方、他の生徒からのメッセージを読んで怒ったり、傷ついたり、悲しくしたり、恐れたりする可能性があります。生徒はネットいじめに対処する方法と、オンラインで動揺するメッセージに直面した場合に対処する方法を探ります。生徒は、コミュニケーションにテクノロジーをどのように使用しているかについて話し合い、対面コミュニケーションとオンラインコミュニケーションの類似点と相違点を探ります。次に、生徒はネットのいじめに対応する方法についてブレインストーミングを行います。
            Ice Age Play Lab:
              name: アイスエイジ プレイラボ
              description_student: 好きなビデオゲームを思い浮かべてください。それがどのように作られたのか疑問に思ったことはありませんか？ここで取り組むパズルで、アイスエイジの友だちとあなただけのビデオゲームを開発します。
              description_teacher: このレッスンでは、生徒はアイスエイジのキャラクターが登場するストーリーを通して学習します。生徒はイベントやループを操作して画面上でキャラクターを動かします。ガイド付きのレベルをクリアした後、自分のゲームやストーリーを作成する機会があります。
            Conditionals in Minecraft:
              name: マインクラフトの条件文
              description_student: 溶岩を避けて！ここでは、マインクラフトの世界で条件文について学習します。
              description_teacher: このレッスンでは、条件文を学び、練習する機会があります。マインクラフトのキャラクターと設定が登場し、プログラムを使って採掘や構造物の構築などのタスクを完了します。
            Envelope Variables:
              name: エンベロープ変数
              description_student: エンベロープと変数には共通点があり、どちらも貴重なものを保持できます。ここでは、変数とは何か、変数が行える素晴らしいことを学びます。
              description_teacher: 変数は、数値や単語などの値のプレースホルダーとして使用します。変数を使用すると、プログラミングの自由度が大幅に向上します。フレーズを何度も入力したり、あいまいな数値を覚えたりすることなく、コンピューター
                サイエンティストは変数を使ってそのようなフレーズや数値を参照できます。このレッスンでは、変数とは何か、どのような方法で変数を用いられるかについて説明します。変数の概念は簡単に理解できる概念ではないため、レッスンの最後に十分な時間をとって話し合うことをお勧めします。
            Variables in Artist:
              name: アーティストと学ぶ変数
              description_student: クラスに創造性の風を吹き込むことを忘れないでください！ここで取り組むパズルでは、変数を使って素晴らしい絵を作成します。
              description_teacher: このレッスンでは、アーティスト環境の変数を使って、反復的なデザインを行う方法ついて学びます。生徒は、変数をどう使うと、プログラムをど簡単に記述し、読みやすくできるかを学びます。ガイド付きパズルを行った後、生徒はフリープレイレベルで終了します。そこで学んだことを示し、独自のデザインを作成します。
            Variables in Play Lab:
              name: プレイラボで学ぶ変数
              description_student: 間もなく、変数を使ってゲーム内でキャラクターをどのように相互作用させるかを学びます！
              description_teacher: このレッスンでは、プレイラボでシーンを作成することで、変数を使った練習をさらに行います。生徒は、ユーザーの入力を受けて変数の値を設定してから、変数を使って独自のミニプロジェクトを作成する時間があります。
            For Loop Fun:
              name: Forループを楽しむ
              description_student: "「for」ループを楽しく学習しましょう！"
              description_teacher: ループのおかげで、何度でも繰り返し実行できることがわかっていますが、ここでは、追加の構造が組み込まれたループをどう使うかを学習します。このような新しい構造により、より強力で動的なプログラムを作成できます。
            For Loops in Bee:
              name: みつばちと学ぶForループ
              description_student: ブンブンブン。このパズルでは、「for」ループを使ってみつばちをミツとハチミツに導きます。
              description_teacher: みつばちが登場するこのレッスンでは、forループに焦点を合わせ、増分変数を使ってより複雑なパズルを解きます。生徒は前のレッスンのループを復習し、次にforループを使って複雑な問題をより効果的に解決する方法を学習します。
            For Loops in Artist:
              name: アーティストと学ぶForループ
              description_student: 次の傑作を作る準備をしてください。ここでは、「for」ループを使って、驚くような画像を作成します。
              description_teacher: このレッスンでは、生徒はforループの練習を続けますが、今回はアーティストと一緒に行います。生徒は、変数、ループ、およびforループのアイデアを組み合わせてパズルを完成させ、複雑なデザインを作成します。最後に、フリープレイレベルで自分の作品を作成する機会があります。
            Songwriting with Parameters:
              name: パラメーターで歌や曲をつくる
              description_student: 次の大ヒットシングルをリリースするのは、あなたかもしれません！このレッスンでは、パラメータとは何か、それにより素晴らしい曲をどのように作曲できるかを学びます。
              description_teacher: コンピューター サイエンスの世界で最も素晴らしい構造の1つは関数です。関数 (プロシージャと呼ばれることもあります)
                は、大きなプログラムの中で繰り返し使用できるミニプログラムです。このレッスンでは、まとまったコードを関数に合わせることがなぜ役立つのか、そしてまとまったコードがわずかに異なる場合でもその構造をどのように活用できるかを生徒が直感的に理解するのに役立ちます。
            Functions in Bee:
              name: みつばちと学ぶ関数
            Functions with Parameters in Artist:
              name: アーティストと学ぶパラメータ付き関数
              description_student: プログラミングを作成する準備してください。ご紹介するパズルでは、パラメータ付きの関数を使って、アーティストで印象的な描画を作成します。
              description_teacher: このレッスンでは、生徒はパラメータありとパラメータなしの関数を引き続き使用します。生徒は、フリープレイレベルで関数を変更する前に、パラメータありまたはパラメータなしの独自の図面を作成する機会があります。
            Functions with Parameters in Bee:
              name: みつばちと学ぶパラメータ付き関数
              description_student: パラメータ付きの関数を使って少し練習しました。このレッスンでは、みつばちと一緒に練習を続けましょう！
              description_teacher: このレッスンではみつばちの環境を取り上げ、前のアーティストステージのパラメータ付きの関数の概念に沿って続けます。生徒は、複雑な道をたどり、ミツとハチミツのパターンを収集するための関数の記述と使用を練習します。
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
              description_student: インスピレーションをもらう時間です！ご紹介するパズルは、事前に構築されたゲームとイラストをいくつか示し、大きなプロジェクトの計画を立てるのを助けます。
              description_teacher: 次の5つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたるプロジェクトを意図しています。その中で、ブレーンストーミング、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボでプロジェクトの例を見て、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティストまたはプレイラボで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。生徒はテストをして再考した後、プロジェクトを修正します。最後に、生徒は完成した作品を仲間に発表することができます。
            The Design Process:
              name: 設計プロセス
              description_student: このように大きなプロジェクトには時間と十分な計画が必要です。ここでは、設計プロセスについて学習し、後で独自の作品を作成するのに使用できるようにします。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトのこの部分では、生徒は設計プロセスと、それを自分のプロジェクトにどのように実装するかについて学びます。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Build Your Project:
              name: プロジェクトの構築
              description_student: これでようやく、プロジェクトの構築を開始できます。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。ここでは、生徒はアーティストまたはプレイラボでプロジェクトを作成するためのスペースが与えられます。これは、プロジェクトで最長の部分になります。プロセスの5つの部分すべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Revise Your Project:
              name: プロジェクトを修正する
              description_student: ローマは一日にして成らずと言われるように、プロジェクトもすぐに作成できるわけではありません。時間をかけてプロジェクトを編集および修正し、最高のものを手がけてください。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトが構築されたので、生徒は仲間からフィードバックを受けてプロジェクトを修正する機会があります。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Present Your Project:
              name: プロジェクトの発表
              description_student: では、作品を見てもらいましょう！ここでは、手がけた素晴らしいプロジェクトを仲間に見てもらいます。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。最後に、生徒は完成した作品を同僚に発表したり、特別なリンクを使って家族と共有したりできます。プロセスの5つのステージすべてを概説したレッスンガイドは、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Conditionals with Cards:
              name: カードと条件
            Conditionals:
              name: ファーマーと学ぶ条件文
            Variables as Constant in Artist:
              name: アーティストと学ぶ変数
            Variables that Change in Bee:
              name: みつばちと学ぶ変数の変更
            Variables that Change in Artist:
              name: アーティストと学ぶ変数の変更
            Learning Sprites with Sprite Lab:
              name: スプライトラボの学習
            Alien Dance Party with Sprite Lab:
              name: エイリアンダンスパーティー
            Pet Giraffe with Sprite Lab:
              name: ペットのキリン
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
            Conditionals in Farmer:
              name: ファーマーと学ぶ条件文
          student_description: このコースでは、さまざまな種類のループ、イベント、関数、条件文を使用する方法を学びます。さまざまな問題解決手法を調査し、コンピューティングとインターネットの社会的影響について話し合います。このコースの後半では、友人や家族と共有できるキャップストーンプロジェクトを設計して作成します。
        csp1-2018:
          title: CSPユニット1 - インターネット ('18～'19)
          description: このユニットでは、コンピューターでデジタル情報を表現し、それを人と計算装置の間で転送する必要性から生じる技術的な課題と問題について検討します。次に、このユニットでは、インターネットの構造と設計、および設計で行った決定が与える影響について詳しく見ていきます。
          description_short: 情報をビットとして表現することに関する課題と、そのビットをある場所から別の場所に移す方法を探ります。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csp1_1:
              display_name: '第1章: 情報の表現と送信'
            csp1_2:
              display_name: '第2章: インターネットの発明'
          lessons:
            CS Principles Pre-survey:
              name: CS原則の事前アンケート
            Personal Innovations:
              name: パーソナル イノベーション
            Sending Binary Messages:
              name: バイナリ メッセージを送信
            Sending Binary Messages with the Internet Simulator:
              name: インターネット シミュレータを使用してバイナリ メッセージを送信
            Number Systems:
              name: 番号システム
            Binary Numbers:
              name: 2進数
            Sending Numbers:
              name: 番号を送信する
            Encoding and Sending Formatted Text:
              name: フォーマットされたテキストのエンコードと送信
            Unit 1 Chapter 1 Assessment:
              name: ユニット1 第1章 評価
            The Internet:
              name: インターネット
            The Need for Addressing:
              name: 対処の必要性
            Routers and Redundancy:
              name: ルーターと冗長性
            Packets and Making a Reliable Internet:
              name: パケットと信頼できるインターネットの作成
            The Need for DNS:
              name: DNSの必要性
            HTTP and Abstraction:
              name: HTTPと抽象化
            Practice PT - The Internet and Society:
              name: PTの実践 - インターネットと社会
            Unit 1 Chapter 2 Assessment:
              name: ユニット1 第2章 評価
            Sending Text:
              name: テキストの送信
          student_description: このユニットでは、コンピューターでデジタル情報を表現し、それを人と計算装置の間で転送する必要性から生じる技術的な課題と問題について検討します。次に、このユニットでは、インターネットの構造と設計、および設計で行った決定が与える影響について詳しく見ていきます。
        csd1-2018:
          title: CSDユニット1 - 問題解決 ('18～'19)
          description_short: 人が問題を解決するためにコンピューターを使ってどのように作業をするかを学びます。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csd1_1:
              display_name: '第 1章: 問題解決プロセス'
            csd1_2:
              display_name: 第 2 章コンピューターと問題解決
          lessons:
            CS Discoveries Pre-survey:
              name: CS発見の事前アンケート
            Intro to Problem Solving:
              name: 問題解決入門
              description_student: クラスはグループで作業し、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。
              description_teacher: このレッスンでは、生徒がグループで作業して、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。ボートの設計は2ラウンドあり、ラウンド1よりも多くのコインを載せることを目指します。アクティビティは、以降のレッスンで問題解決プロセスのさまざまな手順をより詳細に学ぶことが分かるように組み立てられています。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: このレッスンでは、クラスが年間を通して使用する正式な問題解決プロセスである、定義 - 準備 -
                試行 - 反映を紹介します。クラスは、この手順を前のレッスンのアルミ製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。
              description_teacher: このレッスンでは、生徒が年間を通して使用する正式な問題解決プロセスである、定義 - 準備 -
                試行 - 反映を紹介します。レッスンは、生徒が日常生活で遭遇するさまざまな種類の問題すべてについてブレインストーミングを行うように求めることから始まります。次に、生徒は問題解決プロセスの4つの手順を示し、協力してこの抽象的な手順を問題解決の実際の経験に関連付けます。最初の生徒は、この手順を前のレッスンのアルミニウム製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。
            Exploring Problem Solving:
              name: 問題解決の探求
              description_student: このレッスンでは、クラスは問題解決プロセスを、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。
              description_teacher: このレッスンでは、各手順の重要性をよりよく理解するために、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に問題解決プロセスを適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。レッスンは、生徒たちが問題解決プロセスでの経験を振り返って締めくくります。往々にしてこれは最も重要な手順であるため、各手順をなぜ含めるのかを考え、自由回答式の問題により良く対処するのに役立つ戦略や問題についてブレインストーミングします。最初の2つの問題は2クラス分に収まるかもしれませんが、3番目の問題は2日目に取り組む必要があるでしょう。
            What is a Computer?:
              description_student: このレッスンでは、クラスでコンピューターの予備的な定義を作成します。コンピューターの考えられる定義についてブレインストーミングを行った後、クラスはグループで作業し、ポスター用紙で写真を「コンピューターである」または「コンピューターではない」に分類し、最も難しいカテゴリのいくつかを選択する動機を説明します。次に、先生はコンピューターの定義を導入し、グループが新しい定義に従ってポスターを修正できるようにします。
              description_teacher: "このレッスンでは、生徒は「コンピューター」とは何かを考えます。レッスンを開始したら、コンピューターの考えられる定義をブレインストーミングし、このブレインストーミングの結果をボードに配置します。次に、生徒はグループで作業して、ポスター用紙で写真を「コンピューター」か「コンピューターではない」かに分類します。グループはポスターを部屋の周りに配置し、なぜそのように分類したかを簡単に説明します。次に、先生はコンピューターの定義を紹介し、生徒に新しい定義に従ってポスターを修正してもらいます。\\\r"
            Input and Output:
              name: 入出力
              description_student: 生徒はこのクラスで、いくつものコンピューティングデバイスについて考え、使用する入力と出力のタイプを決定します。グループには1つのコンピューティングデバイスが割り当てられ、先生が示す入力と出力の定義に基づいて、デバイスの入力と出力をリストします。レッスンの最後に、コンピューティングデバイスで一般的にどのような操作をするかを検討し、その操作に使用する入力と出力をグラフから選択します。
              description_teacher: 生徒はこのレッスンで、いくつものコンピューティングデバイスについて考え、使用する入力と出力のタイプを決定します。グループには1つのコンピューティングデバイスが割り当てられ、先生が示す入力と出力の定義に基づいて、デバイスの入力と出力をリストします。アクティビティの前半では、より明白な物理的な入力と出力
                (たとえば、入力としてのキーボードまたは出力としての画面) に注目するように促されますが、後半の話し合いでは、あまり明白でない例 (たとえば、タッチスクリーンは入力であると同時に出力でもあること、またはインターネットが入力と出力の両方として機能できるという事実)
                を検討していきます。レッスン全体を通じて、先生は教壇に掲げたTチャートに、特定した入力と出力を記録していきます。レッスンの最後に、コンピューティングデバイスで一般的にどのような操作をするかを検討し、その操作に使用する入力と出力をグラフから選択します。
            Processing:
              name: 処理
              description_student: このレッスンでは、コンピューターの定義の一部として紹介した「処理」について詳しく説明します。ペアになって力を合わせて、情報処理の1つの形式になるよう一連のカードを順番に並べます。最後に、クラスは、情報の問題を解決する文脈の中で、処理が何を意味するかについて話し合います。
              description_teacher: 生徒は、オフラインで行う2つのカード分類アクティビティを行い、処理の意味と問題解決との関係を探ります。最初のアクティビティには制約がほとんどなく、「処理」を大まかに定義するのに用います。次により多くの制約を付け、生徒に常にカードを正常に処理するアルゴリズムを開発してもらいます。生徒はアルゴリズムを繰り返し開発、テスト、クラスメートと共有します。最後のディスカッションでは、アクティビティで使用したさまざまな種類の問題解決法を振り返り、問題解決にアルゴリズムを作成することの意義について考えます。
            Storage:
              name: ストレージ
              description_student: このレッスンでは、情報処理のうち、コンピューターの定義の「ストレージコンポーネント」に焦点を当てます。このクラスでは、情報を処理するアルゴリズムを開発および共有することにレッスンの大部分を費やします。その際、特定のアルゴリズムにどれだけのストレージが必要かに重点を置きます。このレッスンの最後に、情報を処理する際のストレージの重要性について話し合います。
              description_teacher: 生徒は、コンピューターの入力 - ストレージ - 処理 - 出力モデルの中で、ストレージの重要性について詳しく見ていきます。ウォームアップアクティビティでは、ドキュメント、写真、ビデオなど、コンピューターが過去に保存した情報の種類について考えます。オフラインメインのアクティビティでは、デッキ内の特定のカードを求めてカードの小さな山を処理するアルゴリズムを開発してもらいます。生徒がカードを移動させる際に制約があることから、デッキを処理する間でも、ストレージの重要性を考えることになります。レッスンの最後に、このレッスンで生徒が見た2種類のストレージと、情報を処理する際のストレージの重要性について話し合います。
            Apps and Problem Solving:
              name: アプリと問題解決
              description_student: このレッスンでは、生徒にとって身近なコンピューターに関連するコンテキスト（つまりアプリ) で、コンピューターの入力と出力の側面について説明します。このクラスでは、さまざまなウェブアプリケーションを評価して、解決できるように設計された特定の問題、アプリが機能するために必要な入力、およびアプリからユーザーに示される出力を詳しく見ていきます。クラスの最後には、アプリを観察して、アプリが社会に与える影響について先生が主導する形で話し合います。
              description_teacher: このレッスンでは、生徒にとって身近なコンピューターに関連するコンテキスト（つまりアプリ) で、コンピューターの入力と出力の側面について説明します。生徒はペアになって、さまざまなウェブアプリケーションを評価して、解決できるように設計された特定の問題、アプリが機能するために必要な入力、およびアプリからユーザーに示される出力を詳しく見ていきます。クラスの最後には、アプリを観察して、アプリが社会に与える影響について先生が主導する形で話し合います。
            Project - Propose an App:
              name: プロジェクト - アプリの提案
              description_student: 問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、このクラスでは、実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、各アプリの機能を紹介するポスターのプレゼンテーションでクライマックスを迎えます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。
              description_teacher: 問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、生徒は実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、アプリの機能を紹介するポスターを作成して、クラスメートに示します。プロジェクトガイドにはステップバイステップの指示が示され、生徒が自分の考えを整理するのに役立ちます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。
            Apps and Storage:
              name: アプリとストレージ
              description_student: このレッスンでは、生徒にとって身近なコンピューターに関連するコンテキスト（つまりアプリ) で、コンピューターの入力と出力の側面について説明します。このクラスでは、さまざまなウェブアプリケーションを評価して、解決できるように設計された特定の問題、アプリが機能するために必要な入力、およびアプリからユーザーに示される出力を詳しく見ていきます。クラスの最後には、アプリを観察して、アプリが社会に与える影響について先生が主導する形で話し合います。
              description_teacher: このレッスンでは、アプリという、生徒に身近なコンテキストでコンピューターの入力、出力、ストレージ、および処理の側面を確認します。生徒はペアになって、スマートフォンアプリケーションを評価して、解決すべき特定の問題、作業に必要な入力、入力を目的の出力に変換する処理、および後のためにどのような情報を保存したいかを分析します。クラスの最後はディスカッションをして、レッスンを生徒がより身近に感じるアプリに結びつけて終わります。
        csd4-2018:
          title: CSDユニット4 - 設計プロセス ('18～'19)
          description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
          description_short: ユーザーのニーズを満たすプログラムを設計する方法を学びましょう。
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：ユーザーを中心にしたデザイン
            csd4_2:
              display_name: 第 2 章：アプリのプロトタイピング
            cspSurvey:
              display_name: アンケート
          lessons:
            Analysis of Design:
              name: デザインの分析
              description_student: このクラスでは、さまざまなティーポットのデザインを探り、デザインの選択と作成、それにその理由を考えます。ティーポットを例として使って、クラスはユーザー間の関係、ユーザーのニーズ、およびユーザーが使用するオブジェクトのデザインを探ります。
              description_teacher: グループで問題を解決し、他のユーザーのための製品を開発することに取り組むユニットを始めるに当たり、生徒はさまざまなティーポットのデザインを調査することから取りかかります。生徒は各ティーポットを分析し、特定のユーザーのニーズがその設計にどのように影響を与えているかをつかみます。設計をどうするかについて考え、各ティーポットを潜在的なユーザーのニーズに合わせようと試みて、製品
                (物理的およびデジタルの両方) の設計にユーザー中心のアプローチをとるで製品の有用さと使いやすさがどのように向上するかを見ていきます。アクティビティの終わりに、いずれかのティーポットをより便利に、または使いやすくするようにティーポットに変更提案を行うように生徒に求めます。
            Understanding Your User:
              name: ユーザーを理解する
              description_student: このクラスでは、ユーザープロファイルを使って、さまざまなユーザーが各種製品にどのように反応するかを探ります。クラスのメンバーはそれぞれ違う人としてロールプレイングし、他者の目を通してデザインを体験します。
              description_teacher: "設計者は、有用な製品を作成するためにユーザーのニーズを理解する必要があります。このレッスンでは、ユーザープロファイルを使って他者としてロールプレイングし、そのユーザーとして一連の製品を使って確かめることによって、他者のためにデザインするにはどうしたらよいかを考えるように生徒を促します。各生徒には、あるユーザープロファイルが割り当てられ、そこにはその個人の情報が記載されています。そのユーザープロファイルを使って、適切な製品を選択し、製品設計をレビューし、設計をどう改善したらよいかを提案します。\\\r"
            User-Centered Design Micro Activity:
              name: ユーザー中心のデザインマイクロアクティビティ
              description_student: 少人数のグループになり、設計プロセスを使って、スマートな服のアイデアを考え出します。ブレーンストーミングからユーザーの特定、最終的な設計の提案まで、このレッスンはこのユニットで他者のニーズに合わせたソリューションの設計を行う最初の機会になります。
              description_teacher: このレッスンでは、ユニット全体で生徒が目にすることになる設計プロセスの簡略版を見ていきます。生徒はまず、スマートな服の潜在的なユーザーを念頭にブレインストーミングします。クラスとしてアイデアを幅広いカテゴリにグループ化し、各グループはユーザーのカテゴリを1つ選択します。グループはこのプロセスを繰り返して、ユーザーのニーズや懸念をブレインストーミングし、最終的にニーズを分類して、重点的に取り組む対象を選択します。最後に、生徒は、意思決定を促すためにブレインストーミングして導き出された特定のニーズと懸念を使って、スマートな服を設計します。クラスの終わりに、生徒は意思決定プロセスをすばやく共有し、選択したユーザーのニーズに製品がどれだけうまく対応しているかについてフィードバックを受け取ります。
            User Interfaces:
              name: ユーザーインターフェイス
              description_student: プログラムを書く前に、紙のプロトタイプを使ってソフトウェアをどのようにテストしてフィードバックを受け取るかを確認します。デベロッパーのアイデア出しを手伝うために、クラスは紙で作られたアプリのプロトタイプをテストして意見を出します。
              description_teacher: ミニデザインプロジェクトに続いて、生徒はデザインの次のフェーズ、つまりユーザーのニーズに対応する製品のプロトタイプを作成することに目を向けます。チームで、生徒は「Txt
                Ur Grndkdz」と呼ばれるチャットアプリの紙のプロトタイプを調べます。生徒は、コンピューターを使う前に、この紙のプロトタイプを使うことで、アイデアと仮定をすばやくテストする方法を確認できます。提供されたプロトタイプを「使用」した後、生徒は次のイテレーションを改善する方法をつかんでいきます。
            Feedback and Testing:
              name: フィードバックとテスト
              description_student: ユーザーはアプリをテストしており、デベロッパーに伝えたいフィードバックが数多くあります。クラスは、このフィードバックをすべて整理し、共通のテーマとニーズを特定し、プロトタイプを修正し始めて、ユーザーのニーズによりよく適合するようにする必要があります。
              description_teacher: このレッスンでは、生徒は前のレッスンの紙のプロトタイプを作成したアプリの「ユーザー」からのフィードバックを使って、その紙のプロトタイプのユーザーインターフェイスの改善を行います。このレッスンは、設計者がテクノロジーを使って人のニーズをユーザーインターフェイスまたはエクスペリエンスに変える必要があるということを考えるところから始まります。その後、生徒は前のレッスンで扱ったアプリのユーザーから一連のフィードバックとリクエストを受け取ります。生徒はグループになってフィードバックを分類し、アプリのインターフェイスをどのように変更するとフィードバックで寄せられたニーズを満たすことができるかを探ります。次に、生徒はグループで、特定したニーズの1つを満たせるように、この変更の一部を実装します。
            Identifying User Needs:
              name: ユーザーのニーズの特定
              description_student: ここまで、クラスが検討したユーザーはすべてリモートで、ユーザーから得られた情報はすべてテキストまたはロールプレイを通じて得られました。これで、クラスはお互い潜在的なユーザーとしてフィードバックを出し合い、ペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることができます。
              description_teacher: ここまで、生徒はある程度離れたユーザーのための設計に集中してきました。ブレーンストーミング、プロファイル、テキストによるフィードバックなど、エンドユーザーとの接点は直接的なものではありませんでした。これは、ユーザーについて考えるときに自分の考えから一歩抜け出るのを助けるために設けられた距離ですが、実際のユーザーから直接情報を取得するには、クラスメートに頼る必要があります。このレッスンでは、生徒はペアになってお互いにユーザー
                (および設計者) になるので、誰でもエンドユーザーに直接インタビューし、質問をしてより詳しい情報に基づいた設計が行えます。生徒はペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることを試みます。
            Project - Paper Prototype:
              name: プロジェクト - 紙のプロトタイプ
              description_student: 前のレッスンのインタビュー情報を使って、クラスはユーザーのニーズに対処するためのアプリのアイデアを思いつきます。そのアイデアを表現し、それが効果的であることをテストするために、各自で紙のプロトタイプを作成してテストします。
              description_teacher: 前のレッスンのピアインタビューに基づいて、各生徒はユーザーの問題に対処するアプリのアイデアを思いつきます。次に、生徒は個々のノートカードに「画面」を描くことにより、考えたアプリの紙のプロトタイプを作成します。プロジェクトガイドが、アプリの作成やテストを含むプロセスを通じて手引きになります。ユーザーとテストすることで、作成したユーザーインターフェイスに関する想定が正確だったかを確認できます。
            Designing Apps for Good:
              name: 優れたアプリの設計
              description_student: アプリの設計プロジェクトを開始するに当たってクラスをチームに編成され、アプリのトピックについて詳しく見ていきます。社会に影響を与えるアプリ例をいくつか示すことで、プロジェクトに取り組むインスピレーションが得られます。
              description_teacher: ユニットの最後まで続けていくアプリ設計プロジェクトを開始するに当たり、生徒は先ず、他の生徒が社会に影響を与えようと設計したアプリを見ていきます。次に、クラスは、問題解決プロセスの定義、準備、試行、反映の各手順をレビューしながら、社会的な影響力を持つ独自のアプリのアイデアを練ります。最後に、生徒はプロジェクトチームを編成し、アプリの開発過程全体を通じてチームでどのように作業を進めるかについて話をまとめます。
            Market Research:
              name: 市場調査
              description_student: 似たようなユーザーに役立つ可能性のある既存のアプリを探索して、アプリ開発に飛び込みましょう。各グループは、取り組んでいる同じトピックに対処するアプリをいくつか特定し、それらのアプリを使って、追求するアプリのアイデアを洗練させていきます。
              description_teacher: このレッスンでは、生徒は、ユーザーのニーズをよりよく理解するために、作成しようとしているアプリと同じ様なアプリを調査します。生徒はチーム内で他のアプリをインターネットで検索し、興味深いアプリを評価します。レッスンが終わる頃までに、各チームは作成したいアプリのタイプについてより明確なアイデアを持ち、ターゲットユーザーが誰であるかをさらに絞り込みるようになっていることでしょう。各チームは、調査したすべてのアプリの引用リストを用意します。これは、最終的なプレゼンテーションで使います。
            Paper Prototypes:
              name: 紙のプロトタイプ
              description_student: 紙のプロトタイプを使うと、多くの時間をかけてプログラムを書く前に、デベロッパーはアイデアをすばやくテストできます。このレッスンでは、チームはアプリラボで作成されたサンプルアプリをいくつか見て、それらのアプリを使って得た情報に基づき、アプリの最初のプロトタイプを紙で作成します。
              description_teacher: "アプリを設計し始める前に、生徒が期待事項の範囲を決められるようにする必要があります。生徒は最終的にアプリラボでアプリのプロトタイプを作成するため、持っているアイデアがアプリラボで簡単にプロトタイプが作成できる種類のアプリと一致すれば、作業しやすくなります。チームは、アプリラボで作成できるアプリのデモとして設計されたサンプルアプリを調べて、範囲の決定を開始します。その後、チームは1つ
                (または複数) のアプリを自分のアプリのベースとして選択します。そして時間をとってアプリの基本的な機能について話し合ってから、3x5のインデックスカードを使って紙のプロトタイプを作成します。\\\r"
            Prototype Testing:
              name: " プロトタイプテスト"
              description_student: このレッスンでは、チームはクラスの他のメンバーと一緒に紙のプロトタイプをテストします。1人の生徒がコンピューターを演じ、1人がナレーションを行い、残りのメンバーは観察することで、チームはアプリのデザインに関するフィードバックをすぐに受け取れ、アプリのプロトタイプの次のバージョンを作成する際の参考にできます。
              description_teacher: 紙のプロトタイプを作成する主な目的は、プログラムを作成する前に、テストとイテレーションを素早く行えるようにすることにあります。このレッスンのポイントは、アプリラボに移る前にチームにプロトタイプをテストする機会を与えることにあります。チームは、アプリをユーザーとテストする計画を立ててから、クラス内
                (場合によってはクラス外) の他の複数の生徒にプロトタイプをテストしてもらいます。ユーザーがプロトタイプをテストできるように、生徒はテストでの役割
                (「ナレーター」、「コンピューター」、および「オブザーバー」) を割り当て、さらにいくつかの質問を用意してテスト完了後にユーザーに回答してもらいます。
            Digital Design:
              name: デジタルデザイン
              description_student: 紙のプロトタイプの開発、テスト、フィードバックが完了したチームは、アプリラボに移動して、アプリの次のイテレーションを構築します。ドラッグ・アンド・ドロップの設計モードを使って、各チームメンバーはチームのアプリの少なくとも1ページ分を作成し、前回のテストラウンドで受け取ったフィードバックに応えます。
              description_teacher: 紙のプロトタイプのアプリを共同で開発した後、グループは手分けして、紙のプロトタイプに基づいてインタラクティブなデジタルバージョンの作成に向けて作業し始めます。アプリラボのドラッグ・アンド・ドロップ設計モードを使って、生徒は作業しながらスキル開発レベルの段階をステップアップし、紙のプロトタイプからデジタルバージョンを構築する方法を学びます。そこから、各グループメンバーはアプリラボでアプリの少なくとも1ページ分を作成し、後で結合して1つのアプリにします。
            Linking Screens:
              name: 画面のリンク
              description_student: 前のレッスンでクラスが設計した画面を基に、チームは画面を1つのアプリに統合します。単純なプログラムを追加して、ボタンをクリックすると適切な画面に切り替わるようにすることもできます。
              description_teacher: このレッスンでは、チームは前のレッスンで設計した画面を1つのアプリに結合し、プログラムを使ってそれらをリンクできます。生徒は、前のレッスンで開始したモデルアプリを組み上げることで、イベント駆動型の基本的なプログラミングを学びます。生徒が昨日設計した画面に加えて、追加の画面を作成する方法や、他の人が作成した画面をインポートする方法についても学びます。
            Testing the App:
              name: アプリのテスト
              description_student: チームは、今度はインタラクティブなプロトタイプを使って、別のユーザーテストを実行します。この一連のテストから収集したフィードバックは、アプリのプロトタイプの最終反復に反映させます。
              description_teacher: 前のレッスンの終わりまでに、各チームはアプリの実行可能な最小限のプロトタイプが出来ているはずです。このレッスンの主な目的は、チームが実際に他の人と一緒にアプリをテストすることにあります。他の人はできればアプリの対象となる対象ユーザーから、またはクラスの異なるチームから選びます。チームのオブザーバーはテスト結果を計画段階で使用したワークシートに記録します。紙のプロトタイプをテストしたときと同様に、チームは、テストを実行して観察する前に、特定のシナリオを計画することから始めます。
            Improving and Iterating:
              name: 改善とイテレーション
              description_student: テストの最終ラウンドで受け取ったフィードバックを使って、チームはユーザーのニーズに対応する変更を実装します。各チームは、追加したい機能と修正が必要なバグを追跡して、優先順位を付けます。
              description_teacher: チームはこの時点で、複数のイテレーションとユーザーテストのラウンドを経たアプリのプロトタイプを開発しています。最後のユーザーテストで得られた情報とガイダンスを活用して、各生徒はチームアプリの改善を計画して実装する機会を得ます。使える時間と生徒の興味に応じて、テストとイテレーションのサイクルを必要な回数だけ実行してもいいでしょう。
            Project - App Presentation:
              name: プロジェクト - アプリのプレゼンテーション
              description_student: 各チームは、開発したアプリを「売り込む」ためのプレゼンテーションを準備します。ここで、どの点に苦労したか、何が上手くいったか、そして将来の計画を皆に披露します。
              description_teacher: この時点までに、チームは個人的および社会的に重要なトピックを調査し、紙のプロトタイプとデジタルプロトタイプの両方を開発およびテストし、最初のアプリのイテレーションを複数作成して新しい機能とバグ修正を組み込んだことでしょう。ここでは、何をしたかを振り返り、一貫したプレゼンテーションをまとめて、開発プロセスを披露します。チームは、指定されたプレゼンテーションテンプレートを使って、アプリ開発のプロセスについてプレゼンテーションを行う準備をします。プレゼンテーションには、解決しようとした問題、テストからのフィードバックを組み込んだ方法、および将来の計画などを話してもいいでしょう。
            CS Discoveries Post-Course Survey:
              name: CS発見 コース後アンケート
          student_description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
        csd5-2018:
          title: CSDユニット5 - データと社会 ('18～'19)
          description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
          description_short: コンピューターを使ってデータの問題を解決する方法を学びましょう。
          lesson_groups:
            csd5_1:
              display_name: 第1章：情報を表現する
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
          lessons:
            Representation Matters:
              name: 表現が重要
              description_student: この最初のレッスンでは、データとは何か、またデータを使ってどのように問題を解決するかの概要を説明します。グループはデータセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
              description_teacher: この最初のレッスンでは、生徒はデータとは何か、またデータを使ってどのように問題を解決するかの概要を学びます。レッスンの冒頭で、データについての一般的な理解を得るために簡単なディスカッションを行います。次に、グループに別れ、データセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。各グループは、さまざまな方法
                (写真、レシピ、メニュー、栄養) で表される食事から選べ、お勧めの利点が決まります。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
            Patterns and Representation:
              name: パターンと表現
              description_student: このレッスンでは、表現システムを構築するために必要なものは何かを詳しく見ていきます。グループは、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。次に、そのシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。このクラスでは、実用的な解決策が数多くあることを認めながら、稼働中のシステム間に共通点があることについて話し合います。
              description_teacher: このレッスンでは、生徒は情報を表現する独自のシステムを作成します。レッスンの冒頭で、はい/いいえの応答を表すのにすでに使っているさまざまなシステムについてブレインストーミングを行います。次に、小さなグループに別れて作業をし、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。使用するカードには、6種類の絵
                (6匹の動物、6色など) のいずれかが含まれているため、アルファベット全体を表すには、複数のカードのパターンを使って各文字を表す必要があります。生徒は自分のシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。まとめのディスカッションでは、クラスはさまざまなシステムの長所と短所をレビューします。稼働中のシステム間に共通点があることについて話し合い、問題の解決法は数多くあることを認めます。重要なことは、コミュニケーションを行う際、誰もが同じ任意のシステムを使うことです。
            ASCII and Binary Representation:
              name: ASCIIとバイナリ表現
              description_student: このレッスンでは、情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を紹介します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、バイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。
              description_teacher: このレッスンでは、生徒は情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を学習します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、生徒はバイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。レッスンの最後にデブリーフィングを行い、アクティビティの主要な学習目標をまとめるのに役立てます。
            Representing Images:
              name: 画像の表現
              description_student: このレッスンでは、今度は画像を使ってバイナリ表現システムの学習を続け、画像を正方形（または「ピクセル」)
                に分割する概念を説明します。正方形（または「ピクセル」) をそれぞれオンまたはオフにして、画像全体を作成します。ピクセレーションウィジェットを使って短いチャレンジセットを行った後、画像を表現するためのシステムと、前のレッスンで学習したテキストを表現するためのシステムを関連付けます。
              description_teacher: このレッスンでは、コンピューターが画像をどのように表すかを学習します。レッスンを開始するに当たり、複雑なビジョンをバイナリパターンに変える上でどのような課題があるかを検討します。この変換がどのように行われるかを示す一連の画像を通じて、生徒は画像を正方形（または「ピクセル」)
                に分割する概念の説明を受けます。ピクセルそれぞれをオンまたはオフにすると、画像全体を作成できます。次に、生徒はピクセレーションウィジェットを使って短い一連の課題に取り組み、白黒の画像を描画します。パズルは、このように画像を表現する上で直面する課題を取り上げるように設計されています。最後に、生徒は画像を表現するシステムと、前のレッスンで学習したテキストを表現するシステムを関連付けます。
            Representing Numbers:
              name: 数値の表現
              description_student: このレッスンでは2進数システムを紹介します。 2進数 (base-2) の数体系で場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、パターンを一般的な4ビットシステムに拡張します。
              description_teacher: このレッスンでは、生徒は2進数システムを学習します。 2進数 (base-2) の数体系でドットを集めて場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、生徒はパターンを一般的な4ビットシステムに拡張します。
            Keeping Data Secret:
              name: データの秘密を守る
              description_student: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
              description_teacher: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
            Combining Representations:
              name: 表現を組み合わせる
              description_student: このレッスンでは、3種類のバイナリ表現システム (ASCII文字、2進数、およびイメージ) をすべて組み合わせて、より複雑なタイプの情報を記録にエンコードできるようにします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。
              description_teacher: このレッスンで、学生は3種類のバイナリ表現システム (ASCII文字、2進数、および画像 をすべて組み合わせて、記録中の情報をデコードします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。次に、特定の構造に基づいてペットを表す記録をデコードします。
            Project - Create a Representation:
              name: プロジェクト - 表現を作成する
              description_student: クラスは、この章で学習したバイナリ表現システムを使って、完璧な1日を表す構造を設計します。記録にキャプチャしておく必要のある情報を決定したら、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。その後、誰もが学習したASCII、2進数、および画像形式を使って完璧な1日を表現し、パートナーの完璧な1日がどのようなものであるかを解読することを試みます。
              description_teacher: このレッスンでは、この章で学習したバイナリ表現システムを使って、自分の完璧な1日を表現するための構造を設計します。生徒はまず、自分の完璧な1日の短い説明を書き、次にパートナーと一緒にレビューして、コンピューターがキャプチャできると思われる主要な情報を特定します。そしてクラスとして、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。次に、学習したASCII、2進数、および画像形式を使って、完璧な1日を表現します。さらに、生徒はパンチカードを交換し、他の生徒の完璧な1日がどのようなものかを解読することを試みます。レッスンは最後に学んだことを振り返って終わります。
            Problem Solving and Data:
              name: 問題解決とデータ
              description_student: このレッスンでは、特にデータの問題に対処するために問題解決プロセスをどう調整したらよいかを扱います。クラスは、都市はリソースを何に最も費やす必要があるかを決定するタスクを行います。クラスは、インターネットでその決定をサポートするデータを見つけて用いなければなりません。
              description_teacher: このレッスンでは、コース前半の問題解決プロセスを使って、データの問題を解決します。プロセスを確認した後、都市はライブラリ、ペットシェルター、または消防署のどれを構築すべきかを決定するように求められます。生徒はチームで作業してインターネットで情報を収集することで何を構築すべきかを決定してから、この情報を使って持論を展開し、市議会に選択を認めてもらえるように説得します。次に、行った作業がコース全体で使ってきた問題解決プロセスのどこに位置付けられるかを考え、一般的な問題解決プロセスと比較してをこのデータの問題を解決するプロセスはどうだったかを検討します。
            Problem Solving with Big Data:
              name: ビッグデータによる問題解決
              description_student: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかをについて扱います。このクラスでは、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各シナリオには、データを使って同様の問題を解決した実際のサービスに関するビデオも含まれています。
              description_teacher: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかを見ていきます。レッスンは、前のレッスンで調査したデータ問題解決プロセスを簡単におさらいするところから始めます。次に、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各問題は、実在するサービスを反映するように設計されています。ブレインストーミングの後、生徒は実際のサービスに関するビデオを見て、そのサービスによって収集されるデータとその使用方法についてのメモを取ります。レッスンの最後に、データはユーザーが積極的に提供したものか、受動的に記録されたか、またはセンサーによって収集されたものかを記録します。
            Structuring Data:
              name: データの構造化
              description_student: このレッスンでは、生データセットのクリーニングや視覚化など、データの解釈について詳しく見ていきます。クラスはまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べます。クリーニングと視覚化によりより良い意思決定にどのように役立つかを見た後、このプロセスのどの部分を自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
              description_teacher: このレッスンでは、データのクリーニングと視覚化など、データの収集と解釈について学習します。生徒はまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べてから、自分のデータを視覚化します。好きなピザのトッピングに関する調査結果を使って、生徒は選択した視覚化スキームに簡単に適合しないデータをどのように扱うかを決定しなければなりません。最後に、生徒はこのプロセスのどの部分をコンピューターで自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
            Making Decisions with Data:
              name: データを使った決定
              description_student: このレッスンでは、前のレッスンで紹介したデータの問題解決プロセスを実践します。すべての質問に正しい答えがあるとは限りません。場合によっては、クラスはさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
              description_teacher: このレッスンでは、中学生に馴染み深い問題に基づいて、データを使って意思決定を行う練習をします。生徒はグループで作業し、提示されたデータを使って意思決定を行う方法について話し合ってから、クラスで最終的な選択について意見をまとめます。すべての問題に正しい答えがあるとは限りません。場合によっては、生徒はさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
            Interpreting Data:
              name: データの解釈
              description_student: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
              description_teacher: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
            Automating Data Decisions:
              name: データ決定の自動化
              description_student: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
              description_teacher: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
            Project - Solve a Data Problem:
              name: プロジェクト - データの問題を解決する
              description_student: このユニットを締めくくるに当たり、クラスはデータを使って、問題の解決に役立つ推奨または予測を提供する方法を設計します。最初の手順では、問題をブレインストーミングし、簡単な調査を行い、どの問題に取り組むかを決定します。次に、収集するデータの種類、収集方法、および使用方法を決定した後、フィードバックを出し合って最後のプレゼンテーションを行います。
              description_teacher: このユニットを締めくくるに当たって、生徒はクラスメートから収集して分析したデータに基づいてレコメンデーションエンジンを設計します。レコメンデーションアプリの例を見た後、生徒はプロジェクトガイドに従ってこのアクティビティを数日かけて完了します。最初のいくつかの手順では、ユーザーのどのような選択を支援したいか、また推奨事項を与えるために必要なデータを選択し、アンケートを作成して、クラスメートの選択に関する情報を収集します。次に、データを解釈し、学習した内容を使ってレコメンデーションアルゴリズムを作成します。最後に、アルゴリズムを使って、数人のクラスメートに推奨を行います。生徒はピアレビューを行い、プロジェクトに必要な変更を行った後、クラスでプレゼンテーションを行う準備をします。
            CS Discoveries Post-Course Survey:
              name: CS発見 コース後アンケート
          student_description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
        csp2-2018:
          title: CSPユニット2 - デジタル情報 ('18～'19)
          description: このユニットでは、デジタル情報をエンコード、表現、操作する方法をさらに探ります。データをデジタルで操作して視覚化し、パターン、傾向、および潜在的な意味をつかむスキルは、コンピューター
            サイエンティストが毎日使っている重要な実践的スキルです。ユニットでは主に、データの出所を理解し、そこから何を学んだり抽出したりできるかを直観的に理解し、計算ツールを使ってデータを操作および伝達するスキルについて学びます。
          description_short: より複雑なデジタル情報をどのように表現し、計算と視覚化によって操作するかを詳しく見ていきましょう。
          lesson_groups:
            csp2_1_2018:
              display_name: '第 2 章: デジタル情報'
            cspAssessment:
              display_name: 章の評価
          lessons:
            Bytes and File Sizes:
              name: バイトとファイルサイズ
            Text Compression:
              name: テキスト圧縮
            Encoding B&W Images:
              name: 白黒画像のエンコード
            Encoding Color Images:
              name: カラー画像のエンコード
            Lossy Compression and File Formats:
              name: 非可逆圧縮とファイル形式
            Practice PT - Encode an Experience:
              name: PTの実践 - エクスペリエンスのエンコード
            Unit 2 Chapter 1 Assessment:
              name: ユニット2 第1章 評価
            Intro to Data:
              name: データ入門
            Finding Trends with Visualizations:
              name: 視覚化でトレンドを見つける
            Check Your Assumptions:
              name: 仮定を確認
            Good and Bad Data Visualizations:
              name: 良いデータと悪いデータの視覚化
            Making Data Visualizations:
              name: データの視覚化
            Discover a Data Story:
              name: データストーリーの発見
            Cleaning Data:
              name: データのクリーニング
            Creating Summary Tables:
              name: サマリーテーブルの作成
            Practice PT - Tell a Data Story:
              name: PTの練習 - データストーリーの伝達
            Unit 2 Chapter 2 Assessment:
              name: ユニット2 第2章 評価
            Lossy vs. Lossless Compression:
              name: 非可逆圧縮と可逆圧縮
            Rapid Research - Format Showdown:
              name: 迅速な調査 - フォーマットの対決
            Lossy vs Lossless Compression:
              name: 非可逆圧縮と可逆圧縮
            Unit 2 Assessment:
              name: ユニット2 評価
          student_description: このユニットでは、デジタル情報をエンコード、表現、操作する方法をさらに探ります。データをデジタルで操作して視覚化し、パターン、傾向、および潜在的な意味をつかむスキルは、コンピューター
            サイエンティストが毎日使っている重要な実践的スキルです。ユニットでは主に、データの出所を理解し、そこから何を学んだり抽出したりできるかを直観的に理解し、計算ツールを使ってデータを操作および伝達するスキルについて学びます。
        csp3-2018:
          title: CSPユニット3 - プログラミング入門 ('18～'19)
          description_short: 古典的な亀の絵を使ったトップダウンの設計アプローチを通じて、JavaScriptのプログラミングの基本を学びます。
          lesson_groups:
            csp3_1_2018:
              display_name: 'ユニット3: プログラミング入門'
            cspAssessment:
              display_name: 章の評価
            cspSurvey:
              display_name: アンケート
          lessons:
            The Need For Programming Languages:
              name: プログラミング言語の必要性
            The Need for Algorithms:
              name: アルゴリズムの必要性
            Creativity in Algorithms:
              name: アルゴリズムの創造性
            Using Simple Commands:
              name: 単純なコマンドの使用
            Creating Functions:
              name: 関数の作成
            Functions and Top-Down Design:
              name: 関数とトップダウン設計
            APIs and Function Parameters:
              name: APIと関数パラメータ
            Creating functions with Parameters:
              name: パラメータを使って関数を作成する
            Looping and Random Numbers:
              name: ループと乱数
            Practice PT - Design a Digital Scene:
              name: PTの練習 - デジタルシーンのデザイン
            Unit 3 Chapter 1 Assessment:
              name: ユニット3 第1章 評価
            Please complete the CSP Mid-course survey!:
              name: CSP中間アンケートにご記入ください！
            Creating Functions with Parameters:
              name: パラメータ付き関数の作成
            Mid-Year Survey:
              name: 中間アンケート
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp-explore-2018:
          title: 探索 - APパフォーマンスタスクの準備 ('18～'19)
          description: 'このレッスンは、AP探索パフォーマンスタスクを理解し、準備し、実行するのに役立ちます。各「レッスン」には役に立つドキュメントへのリンクが含まれており、先生が説明して理解するのを助けてくれます。注:
            最初のレッスンの2番目の項目は、PTの探索に直接関連していませんが、探索タスクと作成タスクのさまざまな要素に必要な一般的な技術的な設定とツールについて説明しています。'
          description_short: 生徒がAP探索パフォーマンスタスクを準備して完了するのを助けるレッスンとリソース。
          lesson_groups:
            csp_ap_2:
              display_name: '第2章: AP パフォーマンスタスクの探索'
            cspSurvey:
              display_name: アンケート
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: PT準備の調査 - タスクの確認
            Explore PT - Making a Plan:
              name: PTの探索 - 計画の立案
            Explore PT - Complete the Task:
              name: PTの探索 - タスクの完了
            Mid-Year Survey:
              name: 中間アンケート
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
          student_description: 'このレッスンは、AP探索パフォーマンスタスクを理解し、準備し、実行するのに役立ちます。各「レッスン」には役に立つドキュメントへのリンクが含まれており、先生が説明して理解するのを助けてくれます。注:
            最初のレッスンの2番目の項目は、PTの探索に直接関連していませんが、探索タスクと作成タスクのさまざまな要素に必要な一般的な技術的な設定とツールについて説明しています。'
        csp-create-2018:
          title: 作成 - APパフォーマンスタスクの準備 ('18～'19)
          description: 'このレッスンは、AP作成パフォーマンスタスクを理解し、準備し、実行するのに役立ちます。各「レッスン」には役に立つドキュメントへのリンクが含まれており、先生が説明して理解するのを助けてくれます。注:
            最初のレッスンの1番目の項目は、PTの探索に直接関連していませんが、作成タスクと作成タスクのさまざまな要素に必要な一般的な技術的な設定とツールについて説明しています。'
          description_short: 生徒がAP作成パフォーマンスタスクを準備して完了するのを助けるレッスンとリソース。
          lesson_groups:
            csp_ap_3:
              display_name: '第3章: AP パフォーマンスタスクの作成'
            cspSurvey:
              display_name: アンケート
          lessons:
            Create PT Prep - Reviewing the Task:
              name: PT準備の作成 - タスクの確認
            Create PT Prep - Making a Plan:
              name: PT準備の作成 - 計画の作成
            Create PT - Complete the Task:
              name: PTの作成 - タスクの完了
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
          student_description: 'このレッスンは、AP作成パフォーマンスタスクを理解し、準備し、実行するのに役立ちます。各「レッスン」には役に立つドキュメントへのリンクが含まれており、先生が説明して理解するのを助けてくれます。注:
            最初のレッスンの1番目の項目は、PTの探索に直接関連していませんが、作成タスクと作成タスクのさまざまな要素に必要な一般的な技術的な設定とツールについて説明しています。'
        csp4-2018:
          title: CSPユニット4 - ビッグデータとプライバシー ('18～'19)
          description: 私たちが住んでいるデータが豊富な世界では、公共政策、法律、倫理、社会的影響に関する複雑な問題が数多く横たわっています。このユニットの目標は、データのプラスとマイナスの影響を含め、世界のデータに関してバランスの取れた見方を養い、最新の暗号化がなぜ・どのように機能するかの基本を理解することにあります。
          description_short: 私たちが住んでいるデータが豊富な世界を探索し、データが公共政策、個人のプライバシー、セキュリティ、法律、倫理にどのように影響するかを探ります。
          lesson_groups:
            csp4_1_2018:
              display_name: 'ユニット4: ビッグデータとプライバシー'
            cspAssessment:
              display_name: 章の評価
            cspSurvey:
              display_name: アンケート
          lessons:
            What is Big Data?:
              name: ビッグデータとは？
            Rapid Research - Data Innovations:
              name: 迅速な研究 - データイノベーション
            Identifying People with Data:
              name: データで人を識別する
            The Cost of Free:
              name: 無料のコスト
            Simple Encryption:
              name: 単純な暗号化
            Encryption with Keys and Passwords:
              name: キーとパスワードによる暗号化
            Public Key Crypto:
              name: パブリックキー暗号
            Rapid Research - Cybercrime:
              name: 迅速な研究 - サイバー犯罪
            Practice PT - Big Data and Security Dilemmas:
              name: 実践PT - ビッグデータとセキュリティのジレンマ
            Unit 4 Chapter 1 Assessment:
              name: ユニット4 第1章 評価
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            Finding Trends with Visualizations:
              name: 視覚化でトレンドを見つける
            Check Your Assumptions:
              name: 仮定を確認
            Unit 4 Assessment:
              name: ユニット4 評価
            Mid-Year Survey:
              name: 中間アンケート
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
          student_description: 私たちが住んでいるデータが豊富な世界では、公共政策、法律、倫理、社会的影響に関する複雑な問題が数多く横たわっています。このユニットの目標は、データのプラスとマイナスの影響を含め、世界のデータに関してバランスの取れた見方を養い、最新の暗号化がなぜ・どのように機能するかの基本を理解することにあります。
        csp5-2018:
          title: CSPユニット5 - アプリの構築 ('18～'19)
          description: このユニットでは、コンピュータープログラミングの基本的な概念の紹介を続けます。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このコースでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
          description_short: リッチでインタラクティブなアプリを作成することにより、JavaScriptでのコンピュータープログラミングの基本的な概念を引き続き学習します。
          lesson_groups:
            csp5_1:
              display_name: '第1章: イベント駆動型プログラミング'
            csp5_2:
              display_name: '第2章: データ構造を使用したプログラミング'
            cspSurvey:
              display_name: アンケート
          lessons:
            Buttons and Events:
              name: ボタンとイベント
            Multi-screen Apps:
              name: マルチスクリーンアプリ
            'Building an App: Multi-Screen App':
              name: 'アプリの構築: マルチスクリーンアプリ'
            Controlling Memory with Variables:
              name: 複合条件文ロジック
            'Building an App: Clicker Game':
              name: 'アプリの構築: クリッカーゲーム'
            Unit 5 Assessment 1:
              name: ユニット5 評価1
            User Input and Strings:
              name: ユーザー入力と文字列
            '"If" Statements Unplugged':
              name: オフラインで学ぶ「If」文
            Boolean Expressions and "If" Statements:
              name: ブール式と「if」文
            '"if-else-if" and Conditional Logic':
              name: "「if - else - if」と条件付きロジック"
            'Building an App: Color Sleuth':
              name: 'アプリの構築: Color Sleuth'
            Unit 5 Assessment 2:
              name: ユニット5 評価2
            While Loops:
              name: Whileループ
            Loops and Simulations:
              name: ループとシミュレーション
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'アプリの構築: 画像スクローラー'
            Unit 5 Assessment 3:
              name: ユニット5 評価3
            Processing Arrays:
              name: 配列の処理
            Functions with Return Values:
              name: 戻り値付き関数
            'Building an App: Canvas Painter':
              name: 'アプリの構築: カンバス ペインター'
            Unit 5 Assessment 4:
              name: ユニット5 評価4
            'Practice PT: Create':
              name: 'PTの練習: 作成'
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: ユニット5 評価5 - AP疑似コードの練習問題
            Participate in a longitudinal study!:
              name: 長期的研究にご参加ください！
            Mid-Year Survey:
              name: 中間アンケート
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
          student_description: このユニットでは、コンピュータープログラミングの基本的な概念の紹介を続けます。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このコースでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
        csppostap-2018:
          title: AP後 - データツール ('18～'19)
          description_short: アプリラボ アプリでデータを収集して使用する方法を学びましょう。
          lesson_groups:
            csp_postap_1:
              display_name: '第1章: データの操作と視覚化'
            csp_postap_2:
              display_name: '第2章: アプリとデータベース'
            cspSurvey:
              display_name: アンケート
          lessons:
            Creating Javascript Objects:
              name: JavaScriptオブジェクトの作成
            Permanent Data Storage:
              name: 永続的なデータストレージ
            Reading Records:
              name: レコードを読む
            Deleting Records:
              name: レコードの削除
            Updating Records:
              name: レコードの更新
            Importing and Exporting Data:
              name: データのインポートとエクスポート
            Visualizing Data:
              name: データの視覚化
            Sample Apps:
              name: サンプルアプリ
            Final Project:
              name: 最終プロジェクト
            Intro to Data:
              name: データ入門
            Finding Trends with Visualizations:
              name: 視覚化でトレンドを見つける
            Check Your Assumptions:
              name: 仮定を確認
            Good and Bad Data Visualizations:
              name: 良いデータと悪いデータの視覚化
            Making Data Visualizations:
              name: データの視覚化
            Discover a Data Story:
              name: データストーリーの発見
            Cleaning Data:
              name: データのクリーニング
            Creating Summary Tables:
              name: サマリーテーブルの作成
            Project - Tell a Data Story:
              name: プロジェクト - データストーリーを伝える
            Unit 2 Chapter 2 Assessment:
              name: ユニット2 第2章 評価
            Chapter 1 Assessment:
              name: 第1章 評価
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        spritelab:
          title: スプライトラボ (PILOT) 入門
          description_audience: コースE/Fの生徒
          description_short: これは、Code.orgのコースEおよびFの生徒用の新しいスプライトラボツールのパイロットコースです。
          description: これは、Code.orgのコースEおよびFの生徒用の新しいスプライトラボツールのパイロットコースです。
          lessons:
            'Fish Tank: Creating Sprites':
              name: '水槽: スプライトの作成'
            Fish Tank - Creating Sprites:
              name: 水槽 - スプライトの作成
            Alien Dance Party - Input:
              name: エイリアン ダンスパーティー - 入力
            Virtual Pet - Interactions:
              name: バーチャルペット - インタラクション
          student_description: これは、Code.orgのコースEおよびFの生徒用の新しいスプライトラボツールのパイロットコースです。
        csd1-dlp-18:
          title: CS発見 ユニット1 詳細学習 2018～2019
          description_audience: CS発見 トレーニング中のファシリテーター 2018～2019
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット1です。ここでは、Code.org
            CS発見カリキュラムのユニット1のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 1 Deeper Learning Reflections:
              name: ユニット1の詳細学習の考察を完了する
            Complete Unit 2 Deeper Learning Reflections:
              name: ユニット2の詳細学習の考察を完了する
            Complete Unit 3 Deeper Learning Reflections:
              name: ユニット3の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット1です。ここでは、Code.org
            CS発見カリキュラムのユニット1のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd2-dlp-18:
          title: CS発見 ユニット2 詳細学習 2018～2019
          description_audience: CS発見 トレーニング中のファシリテーター 2018～2019
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット2です。ここでは、Code.org
            CS発見カリキュラムのユニット2のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 2 Deeper Learning Reflections:
              name: ユニット2の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット2です。ここでは、Code.org
            CS発見カリキュラムのユニット2のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd3-dlp-18:
          title: CS発見 ユニット3 詳細学習 2018～2019
          description_audience: CS発見 トレーニング中のファシリテーター 2018～2019
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット3です。ここでは、Code.org
            CS発見カリキュラムのユニット3のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 3 Deeper Learning Reflections:
              name: ユニット3の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット3です。ここでは、Code.org
            CS発見カリキュラムのユニット3のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd4-dlp-18:
          title: CS発見 ユニット4 詳細学習 2018～2019
          description_audience: CS発見 トレーニング中のファシリテーター 2018～2019
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット4です。ここでは、Code.org
            CS発見カリキュラムのユニット4のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 2 Deeper Learning Reflections:
              name: ユニット2の詳細学習の考察を完了する
            Complete Unit 4 Deeper Learning Reflections:
              name: ユニット4の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット4です。ここでは、Code.org
            CS発見カリキュラムのユニット4のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd5-dlp-18:
          title: CS発見 ユニット5 詳細学習 2018～2019
          description_audience: CS発見 トレーニング中のファシリテーター 2018～2019
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット5です。ここでは、Code.org
            CS発見カリキュラムのユニット5のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 5 Deeper Learning Reflections:
              name: ユニット5の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット5です。ここでは、Code.org
            CS発見カリキュラムのユニット5のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd6-dlp-18:
          title: CS発見 ユニット6 詳細学習 2018～2019
          description_audience: CS発見 トレーニング中のファシリテーター 2018～2019
          description_short: トレーニング中のCS発見ファシリテーター向けの詳細学習の資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット6です。ここでは、Code.org
            CS発見カリキュラムのユニット6のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 5 Deeper Learning Reflections:
              name: ユニット5の詳細学習の考察を完了する
            Complete Unit 6 Deeper Learning Reflections:
              name: ユニット6の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのユニット6です。ここでは、Code.org
            CS発見カリキュラムのユニット6のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp1-dlp-18:
          title: CS原則 ユニット1 詳細学習 2018 - 2019
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS原則 トレーニング中のファシリテーター向けの詳細学習資料
          description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット1です。ここでは、Code.org
            CS原則カリキュラムのユニット1のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 1 Deeper Learning Reflections:
              name: ユニット1の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット1です。ここでは、Code.org
            CS原則カリキュラムのユニット1のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp2-dlp-18:
          title: CS原則 ユニット2 詳細学習 2018 - 2019
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS原則 トレーニング中のファシリテーター向けの詳細学習資料
          description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット2です。ここでは、Code.org
            CS原則カリキュラムのユニット2のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 2 Deeper Learning Reflections:
              name: ユニット2の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット2です。ここでは、Code.org
            CS原則カリキュラムのユニット2のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp3-dlp-18:
          title: CS原則 ユニット3 詳細学習 2018 - 2019
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS原則 トレーニング中のファシリテーター向けの詳細学習資料
          description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット3です。ここでは、Code.org
            CS原則カリキュラムのユニット3のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 3 Deeper Learning Reflections:
              name: ユニット3の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット3です。ここでは、Code.org
            CS原則カリキュラムのユニット3のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp4-dlp-18:
          title: CS原則 ユニット4 詳細学習 2018 - 2019
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS原則 トレーニング中のファシリテーター向けの詳細学習資料
          description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット4です。ここでは、Code.org
            CS原則カリキュラムのユニット4のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 3 Deeper Learning Reflections:
              name: ユニット3の詳細学習の考察を完了する
            Complete Unit 4 Deeper Learning Reflections:
              name: ユニット4の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット4です。ここでは、Code.org
            CS原則カリキュラムのユニット4のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp5-dlp-18:
          title: CS原則 ユニット5 詳細学習 2018 - 2019
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS原則 トレーニング中のファシリテーター向けの詳細学習資料
          description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット5です。ここでは、Code.org
            CS原則カリキュラムのユニット5のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 5 Deeper Learning Reflections:
              name: ユニット5の詳細学習の考察を完了する
          student_description: これは、トレーニング中のCode.org CS原則ファシリテーター向けの詳細学習プランのユニット5です。ここでは、Code.org
            CS原則カリキュラムのユニット5のファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp-explore-dlp-18:
          title: 'CS原則: 詳細学習の探求 2018～2019'
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS原則 トレーニング中のファシリテーター向けの詳細学習資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのAPの探索ユニットです。ここでは、Code.org
            CS発見カリキュラムのAPの探索ユニットのファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Unit 6 Deeper Learning Reflections:
              name: ユニット6の詳細学習の考察を完了する
            Complete Explore AP Unit Deeper Learning Reflections:
              name: 完全な探求 APユニット 詳細学習の省察
            Complete Explore Deeper Learning Reflections:
              name: 完全な探究 詳細学習の考察
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのAPの探索ユニットです。ここでは、Code.org
            CS発見カリキュラムのAPの探索ユニットのファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csp-create-dlp-18:
          title: CS原則 詳細学習の作成 2018～2019
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS原則 トレーニング中のファシリテーター向けの詳細学習資料
          description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのAPの作成ユニットです。ここでは、Code.org
            CS発見カリキュラムのAPの作成ユニットのファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Create Deeper Learning Reflections:
              name: 完全な詳細学習の作成に関する省察
          student_description: これは、トレーニング中のCode.org CS発見ファシリテーター向けの詳細学習プランのAPの作成ユニットです。ここでは、Code.org
            CS発見カリキュラムのAPの作成ユニットのファシリテーターとしての習熟度を示すためのおさらいプロンプトとガイダンスが見つかります。このユニットの感想を提出すると、このページの下部にあるピアレビュー項目が利用できるようになります。
        csd-post-survey:
          title: CSD生徒 コース後アンケート ('18～'19)
          description_audience: CSD生徒
          description_short: CSD生徒 コース後アンケート
          description: Code.org CS発見コース後アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
          lesson_groups:
            csd_survey:
              display_name: コース終了後アンケート
          lessons:
            CSD post-course survey:
              name: CSD コース後アンケート
          student_description: Code.org CS発見コース後アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
        csd-novice-18:
          title: CS発見 初心者の省察 2018 - 2019
          description_audience: CS発見 トレーニング中のファシリテーター 2018～2019
          description_short: CS発見 トレーニング中のファシリテーター用の初心者の省察の資料
          description: ここでは、5日間かけて行われる夏のワークショップの間に行われる、Code.orgのCS発見のトレーニング中のファシリテーター向けの初心者の一連の省察を扱います。また、対面式の5日間の夏のワークショップの各日向けの省察のプロンプトが表示されます。この質問は、ファシリテーター
            トレーニング ウィークエンドで行う作業の基礎となります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Novice Reflections Overview:
              name: 初心者の省察の概要
            Welcome:
              name: ようこそ
            Tuesday:
              name: 火曜日
            Wednesday:
              name: 水曜日
            Thursday:
              name: 木曜日
            Wrap Up:
              name: まとめ
            Friday:
              name: 金曜日
            Novice Reflection Overview:
              name: 初心者の省察の概要
            Monday:
              name: 月曜日
            Day 1:
              name: 1日目
            Day 2:
              name: 2日目
            Day 3:
              name: 3日目
            Day 4:
              name: 4日目
          student_description: ここでは、5日間かけて行われる夏のワークショップの間に行われる、Code.orgのCS発見のトレーニング中のファシリテーター向けの初心者の一連の省察を扱います。また、対面式の5日間の夏のワークショップの各日向けの省察のプロンプトが表示されます。この質問は、ファシリテーター
            トレーニング ウィークエンドで行う作業の基礎となります。
        csd-apprentice-18:
          title: CS発見 見習いの省察 2018～2019
          description_audience: CS発見 トレーニング中のファシリテーター 2018～2019
          description_short: CS発見 トレーニング中のファシリテーター用の見習いの省察の資料
          description: ここでは、5日間かけて行われる夏のワークショップの間に行われる、Code.orgのCS発見のトレーニング中のファシリテーター向けの見習いの一連の省察を扱います。また、対面式の5日間の夏のワークショップの各日向けの省察のプロンプトが表示されます。この質問は、ファシリテーター
            トレーニング ウィークエンドで行う作業の基礎となります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Novice Reflection Overview:
              name: 初心者の省察の概要
            Tuesday:
              name: 火曜日
            Wednesday:
              name: 水曜日
            Thursday:
              name: 木曜日
            Wrap Up:
              name: まとめ
            Apprentice Reflection Overview:
              name: 見習いの省察の概要
            Day 1:
              name: 1日目
            Day 2:
              name: 2日目
            Day 3:
              name: 3日目
            Day 4:
              name: 4日目
          student_description: ここでは、5日間かけて行われる夏のワークショップの間に行われる、Code.orgのCS発見のトレーニング中のファシリテーター向けの見習いの一連の省察を扱います。また、対面式の5日間の夏のワークショップの各日向けの省察のプロンプトが表示されます。この質問は、ファシリテーター
            トレーニング ウィークエンドで行う作業の基礎となります。
        csp-novice-18:
          title: CS原則 初心者の省察 2018～2019
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS原則 トレーニング中のファシリテーター向けの初心者の省察に関する資料
          description: ここでは、5日間かけて行われる夏のワークショップの間に行われる、Code.orgのCS原則のトレーニング中のファシリテーター向けの初心者の一連の省察を扱います。また、対面式の5日間の夏のワークショップの各日向けの省察のプロンプトが表示されます。この質問は、ファシリテーター
            トレーニング ウィークエンドで行う作業の基礎となります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Novice Reflection Overview:
              name: 初心者の省察の概要
            Tuesday:
              name: 火曜日
            Wednesday:
              name: 水曜日
            Thursday:
              name: 木曜日
            Wrap Up:
              name: まとめ
            Monday:
              name: 月曜日
            Day 1:
              name: 1日目
            Day 2:
              name: 2日目
            Day 3:
              name: 3日目
            Day 4:
              name: 4日目
          student_description: ここでは、5日間かけて行われる夏のワークショップの間に行われる、Code.orgのCS原則のトレーニング中のファシリテーター向けの初心者の一連の省察を扱います。また、対面式の5日間の夏のワークショップの各日向けの省察のプロンプトが表示されます。この質問は、ファシリテーター
            トレーニング ウィークエンドで行う作業の基礎となります。
        csp-apprentice-18:
          title: Cs原則 見習いの省察 2018～2019
          description_audience: CS原則 トレーニング中のファシリテーター 2018～2019
          description_short: CS発見 トレーニング中のファシリテーター用の見習いの省察の資料
          description: ここでは、5日間かけて行われる夏のワークショップの間に行われる、Code.orgのCS原則のトレーニング中のファシリテーター向けの見習いの一連の省察を扱います。また、対面式の5日間の夏のワークショップの各日向けの省察のプロンプトが表示されます。この質問は、ファシリテーター
            トレーニング ウィークエンドで行う作業の基礎となります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Novice Reflection Overview:
              name: 初心者の省察の概要
            Tuesday:
              name: 火曜日
            Wednesday:
              name: 水曜日
            Thursday:
              name: 木曜日
            Wrap Up:
              name: まとめ
            Apprentice Reflection Overview:
              name: 見習いの省察の概要
            Day 1:
              name: 1日目
            Day 2:
              name: 2日目
            Day 3:
              name: 3日目
            Day 4:
              name: 4日目
          student_description: ここでは、5日間かけて行われる夏のワークショップの間に行われる、Code.orgのCS原則のトレーニング中のファシリテーター向けの見習いの一連の省察を扱います。また、対面式の5日間の夏のワークショップの各日向けの省察のプロンプトが表示されます。この質問は、ファシリテーター
            トレーニング ウィークエンドで行う作業の基礎となります。
        pre-express-2018:
          title: 就学前エクスプレス (2018)
          assignment_family_title: 低学年エクスプレス
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          description_short: 低学年向けのコンピュータ サイエンス入門です。幼児向けと小学1年生向けコースの良い所をとりだしました。
          description_audience: '年齢: 4～8才'
          lessons:
            'Debugging: Unspotted Bugs':
              name: 気づかれていないバグ
            'Persistence & Frustration: Stevie and the Marbles':
              name: スティーヴィーと大きなプロジェクト
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
            'Online Safety: Your Digital Footprint':
              name: 'オンラインの安全性: デジタルフットプリント'
            'Programming: My Robotic Friends':
              name: 私のロボットの友だち
            Programming in Maze:
              name: めいろ のプログラミング
            'Programming: Star Wars':
              name: 'プログラミング: スター・ウォーズ'
            'Loops: My Loopy Robotic Friends':
              name: ルーピー ロボティック フレンズ ジュニア
            Loops in Collector:
              name: くりかえし あつめる
            Loops in Artist:
              name: アーティストくりかえし
            'Events: The Big Event':
              name: ビッグイベントジュニア
            Events in Play Lab:
              name: プレイ ラボのイベント
            Spelling Bee:
              name: つづりみつばち
            Move It, Move It:
              name: 動かせ！動かせ！
            Sequencing with Scrat:
              name: スクラッチと学ぶシーケンス
            Your Digital Footprint:
              name: デジタル フットプリント
            Programming in Ice Age:
              name: スクラッチと学ぶプログラミング
            Copyright and Creativity:
              name: 作成してフェアにプレイするのは、素晴らしいことです
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
            Loops in Ice Age:
              name: スクラッチと学ぶループ
            'Persistence & Frustration: Stevie and the Big Project':
              name: スティーヴィーと大きなプロジェクト
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        spritelab-validated:
          lessons:
            Fish Tank - Creating Sprites:
              name: 水槽 - スプライトの作成
            Alien Dance Party - Input:
              name: エイリアン ダンスパーティー - 入力
            Virtual Pet - Interactions:
              name: バーチャルペット - インタラクション
        2018hoc-ab:
          lessons:
            Labyrinth:
              name: ラビリンス
        deepdive-debugging:
          title: 教育者向けのデバッグレッスン
          lessons:
            Debugging for AB Educators:
              name: AB教育者向けのデバッグ
            Debugging for CDEF Educators:
              name: CDEF教育者向けのデバッグ
        fit-test:
          title: FITトレーニング 練習PLCコース
          description_audience: トレーニングのファシリテーター
          description_short: FITトレーニングコース
          description: PLCコースの仕組みを示すために使用します。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Complete Practice Question:
              name: 完全な練習問題
          student_description: PLCコースの仕組みを示すために使用します。
        spritelab-simple:
          title: スプライトラボ (EE) 入門
          description: これは、Code.orgのコースEおよびFの生徒用の新しいスプライトラボツールのパイロットコースです。
          description_short: これは、Code.orgのコースEおよびFの生徒用の新しいスプライトラボツールのパイロットコースです。
          description_audience: コースE/Fの生徒
          lessons:
            Fish Tank - Creating Sprites:
              name: 水槽 - スプライトの作成
            Alien Dance Party - Input:
              name: エイリアン ダンスパーティー - 入力
            Virtual Pet - Interactions:
              name: バーチャルペット - インタラクション
          student_description: これは、Code.orgのコースEおよびFの生徒用の新しいスプライトラボツールのパイロットコースです。
        spritelab-ee:
          title: スプライトラボ (EE) 入門
          lessons:
            Fish Tank - Creating Sprites:
              name: 水槽 - スプライトの作成
            Alien Dance Party - Input:
              name: エイリアン ダンスパーティー - 入力
            Virtual Pet - Interactions:
              name: バーチャルペット - インタラクション
        craft18:
          title: craft18テストスクリプト
          lessons:
            craft18 levels:
              name: craft18レベル
        frozen-2018:
          title: 新しいフローズンスクリプト
          lessons:
            Artist:
              name: アーティスト
        frozen-2018-test:
          title: 新しいフローズンスクリプト
          lessons:
            Artist:
              name: アーティスト
        dance:
          title: ダンスパーティー (2018)
          description_short: ケイティ・ペリー、マドンナ、J. バルヴィン、Sia、キース・アーバン、シアラ、その他25の楽曲を収載!
          description: 自分だけのダンスパーティーをプログラムして友達と共有しましょう。
          lessons:
            new stage:
              name: 新しいステージ
            Dance Party:
              name: ダンスパーティー
          student_description: 自分だけのダンスパーティーをプログラムして友達と共有しましょう。
        frozen-2018-test-b:
          title: 新しいフローズンスクリプト
          lessons:
            Artist:
              name: アーティスト
        aquatic:
          title: 'マインクラフト: ボヤージュ アクアティック'
          description_short: 創造性と問題解決スキルを発揮して、プログラムで水中世界を探検し構築しましょう！
          description: Minecraftに新しいアクティビティができました！創造性と問題解決スキルを発揮して、プログラムで水中世界を探検し構築しましょう。
          lessons:
            Aquatic:
              name: 'マインクラフト: ボヤージュ アクアティック'
          student_description: Minecraftに新しいアクティビティができました！創造性と問題解決スキルを発揮して、プログラムで水中世界を探検し構築しましょう。
        sconyers:
          title: トレーシーのプレイグラウンド
          lessons:
            Lesson the first:
              name: 最初のレッスン
            Digital Design:
              name: デジタルデザイン
            Linking Screens:
              name: 画面のリンク
            Test Lesson:
              name: テストレッスン
        dance--draft:
          lessons:
            Dance Party:
              name: ダンスパーティー
        dance-draft:
          title: 使用禁止
          lessons:
            Dance Party:
              name: ダンスパーティー
        cspplayground:
          title: CSPプレイグラウンド
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            Hannah's Test Stage:
              name: ハンナのテストステージ
            Hannah Test Stage:
              name: ハンナテストステージ
            U4 L02 Variables Investigate:
              name: U4 L02変数の調査
            Variables Investigate:
              name: 変数 調査
            Variables Explore:
              name: 変数 探索
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey:
              name: 生徒向けアンケート
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Teacher Surveys:
              name: 先生向けアンケート
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
            Lists Explore:
              name: リスト 探索
        dance-extras:
          title: ダンスを続ける (2018)
          description_short: Hour of Codeを超えて、Code.orgのダンスパーティーチュートリアルのフォローアップアクティビティを行いましょう。
          description: 最初の 1 時間を越えて、プロジェクトのアイデアを広げましょう。
          lessons:
            Dance Party - Go Further:
              name: ダンスパーティー - さらに先へ
          student_description: 最初の 1 時間を越えて、プロジェクトのアイデアを広げましょう。
        coursef-2019:
          title: コース F (2019)
          description: このコースでは、さまざまな種類のループ、イベント、関数、条件文を使用する方法を学びます。さまざまな問題解決手法を調査し、コンピューティングとインターネットの社会的影響について話し合います。このコースの後半では、友人や家族と共有できるキャップストーンプロジェクトを設計して作成します。
          description_short: コンピューター サイエンス入門のすべての概念を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description_audience: '年齢: 9～13才'
          lesson_groups:
            ramp_up:
              display_name: ランプアップ
            csf_variables:
              display_name: 変数（へんすう）
            csf_data:
              display_name: データ
            csf_for_loops:
              display_name: ループ用
            csf_internet:
              display_name: インターネット
            csf_sprites:
              display_name: スプライト
            csf_digcit:
              display_name: デジタル シティズンシップ
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee/Zombie:
              name: みつばち/ゾンビと学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            Conditionals with Cards:
              name: カードと条件
            Conditionals in Farmer:
              name: 農夫で学ぶ条件文
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
              description_student: 最も効率的なプログラムで関数を使用するにはどうしたらいいか、考えられますか？
              description_teacher: 生徒たちは、この楽しくインタラクティブなマインクラフトアドベンチャーで関数がどのように役立つかを学習します！
            The Power of Words:
              name: 言葉の力
              description_student: いじめは決して許されません。このレッスンでは、オンラインで何を言ってよいか、何を言ってはいけないかについて説明します。
              description_teacher: "Students consider that while they are enjoying
                their favorite websites they may encounter messages from other kids
                that can make them feel angry, hurt, sad, or fearful. They explore
                ways to handle cyberbullying and how to respond in the face of upsetting
                language online.\\\r\n\\\r\nStudents discuss all the ways they use
                technology for communication and explore the similarities and differences
                between in-person and online communication. Students then brainstorm
                ways to respond to cyberbullying. "
            Envelope Variables:
              name: エンベロープ変数
              description_student: エンベロープと変数には共通点があり、どちらも貴重なものを保持できます。ここでは、変数とは何か、変数が行える素晴らしいことを学びます。
              description_teacher: 変数は、数値や単語などの値のプレースホルダーとして使用します。変数を使用すると、プログラミングの自由度が大幅に向上します。フレーズを何度も入力したり、あいまいな数値を覚えたりすることなく、コンピューター
                サイエンティストは変数を使ってそのようなフレーズや数値を参照できます。このレッスンでは、変数とは何か、どのような方法で変数を用いられるかについて説明します。変数の概念は簡単に理解できる概念ではないため、レッスンの最後に十分な時間をとって話し合うことをお勧めします。
            Variables as Constant in Artist:
              name: アーティストと学ぶ変数
              description_student: クラスに創造性の風を吹き込むことを忘れないでください！ここで取り組むパズルでは、変数を使って素晴らしい絵を作成します。
              description_teacher: このレッスンでは、アーティスト環境の変数を使って、反復的なデザインの作成について学びます。実行時に値が変化しない場合でも、変数を使ってプログラムを簡単に記述し、読みやすくする方法を学習します。
            Variables that Change in Bee:
              name: みつばちと学ぶ変数の変更
              description_student: このみつばちは変数が大好きです！
              description_teacher: このレッスンでは、プログラムの実行中に値を変更できるようにすることで、変数でプログラムを強化する方法を説明します。
            Variables that Change in Artist:
              name: アーティストと学ぶ変数の変更
              description_student: このレッスンでは、プログラムを実行する際に変化する変数を使って絵を描きます。
              description_teacher: このレッスンでは、アーティスト環境の変数を使って、反復的なデザインを行う方法ついて学びます。生徒は、変数をどう使うと、プログラムをど簡単に記述し、読みやすくできるかを学びます。ガイド付きパズルを行った後、生徒はフリープレイレベルで終了します。そこで学んだことを示し、独自のデザインを作成します。
            For Loop Fun:
              name: Forループを楽しむ
              description_student: "「for」ループを楽しく学習しましょう！"
              description_teacher: ループのおかげで、何度でも繰り返し実行できることがわかっていますが、ここでは、追加の構造が組み込まれたループをどう使うかを学習します。このような新しい構造により、より強力で動的なプログラムを作成できます。
            For Loops in Bee:
              name: みつばちと学ぶForループ
              description_student: ブンブンブン。このパズルでは、「for」ループを使ってみつばちをミツとハチミツに導きます。
              description_teacher: みつばちが登場するこのレッスンでは、「for」ループに焦点を合わせ、増分変数を使ってより複雑なパズルを解きます。生徒は前のレッスンのループを復習し、次にforループを使って複雑な問題をより効果的に解決する方法を学習します。
            For Loops in Artist:
              name: アーティストと学ぶForループ
              description_student: 次の傑作を作る準備をしてください。ここでは、「for」ループを使って、驚くような画像を作成します。
              description_teacher: このレッスンでは、生徒は「for」ループの練習を続けますが、今回はアーティストと一緒に行います。生徒は、変数、ループ、および「for」ループのアイデアを組み合わせてパズルを完成させ、複雑なデザインを作成します。最後に、フリープレイレベルで自分の作品を作成する機会があります。
            Learning Sprites with Sprite Lab:
              name: スプライトラボで泳ぐ魚
              description_student: スプライトを作成および編集する方法を学びます。
              description_teacher: このレッスンでは、スプライトラボの中心となる2つの概念、スプライトとビヘイビアについて学びます。スプライトは、生徒が移動、変更、操作できる画面上のキャラクターまたはオブジェクトです。ビヘイビアは、スプライトが停止するまで継続的に実行するアクションです。
            Alien Dance Party with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
            Pet Giraffe with Sprite Lab:
              name: スプライトラボでのペットのキリン
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
              description_student: インスピレーションをもらう時間です！ご紹介するパズルは、事前に構築されたゲームとイラストをいくつか示し、大きなプロジェクトの計画を立てるのを助けます。
              description_teacher: 次の5つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたるプロジェクトを意図しています。その中で、ブレーンストーミング、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボでプロジェクトの例を見て、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティストまたはプレイラボで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。生徒はテストをして再考した後、プロジェクトを修正します。最後に、生徒は完成した作品を仲間に発表することができます。
            The Design Process:
              name: 設計プロセス
              description_student: このように大きなプロジェクトには時間と十分な計画が必要です。ここでは、設計プロセスについて学習し、後で独自の作品を作成するのに使用できるようにします。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトのこの部分では、生徒は設計プロセスと、それを自分のプロジェクトにどのように実装するかについて学びます。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Build Your Project:
              name: プロジェクトの構築
              description_student: これでようやく、プロジェクトの構築を開始できます。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。ここでは、生徒はアーティストまたはプレイラボでプロジェクトを作成するためのスペースが与えられます。これは、プロジェクトで最長の部分になります。プロセスの5つの部分すべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Revise Your Project:
              name: プロジェクトを修正する
              description_student: ローマは一日にして成らずと言われるように、プロジェクトもすぐに作成できるわけではありません。時間をかけてプロジェクトを編集および修正し、最高のものを手がけてください。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトが構築されたので、生徒は仲間からフィードバックを受けてプロジェクトを修正する機会があります。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Present Your Project:
              name: プロジェクトの発表
              description_student: では、作品を見てもらいましょう！ここでは、手がけた素晴らしいプロジェクトを仲間に見てもらいます。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。最後に、生徒は完成した作品を同僚に発表したり、特別なリンクを使って家族と共有したりできます。プロセスの5つのステージすべてを概説したレッスンガイドは、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            The Artist:
              name: アーティスト
            Nested Loops in the Maze:
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、ループを別のループ内に配置するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Sequencing in the Maze:
              name: 迷路で学ぶシーケンス
            Programming and Loops with the Artist:
              name: アーティストと学ぶプログラミングとループ
            Events with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
              description_student: クラスメートと共有できるインタラクティブなプロジェクトを作成しましょう。
              description_teacher: このレッスンでは、生徒がインタラクティブなアニメーションやゲームを作成できるプラットフォームであるスプライトラボを取り上げます。ビヘイビアに加えて、今日はユーザー入力をイベントとして組み込んで、「エイリアンダンスパーティー」を作成します。
            Loops with the Artist:
              name: ループを使った描画
              description_student: このレッスンでは、ループを使用すると、アーティストでさらにクールな画像を簡単に作成できます。
              description_teacher: 生徒がいくつかのブロックとデジタルステッカーを使って独自の素晴らしいデザインを作成すると、表情がパッと明るくなるのが見て取れます！このレッスンは、以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティは、ポートフォリオやPTA会議向け作品を作成するのに最適です。
            Sprite Lab Behaviors:
              name: スプライトラボのビヘイビア
            Editing Behaviors:
              name: スプライトラボで学ぶビヘイビア
              description_student: 独自のスプライトのビヘイビアをプログラムする方法を学びましょう！
              description_teacher: ここでは、生徒はスプライトラボを使って、独自のカスタマイズされたビヘイビアを作成します。
            Virtual Pet:
              name: スプライトラボでのバーチャルペット
              description_student: このレッスンでは、生徒は希望どおりの外観と動作をするインタラクティブなバーチャルペットを作成します。生徒は、スプライトラボの「コスチューム」ツールを使って、ペットの外観をカスタマイズします。その後、学習したイベント、ビヘイビア、その他の概念を使って、ペットに命を吹き込みます。
              description_teacher: このレッスンでは、生徒は希望どおりの外観と動作をするインタラクティブなバーチャルペットを作成します。生徒は、スプライトラボの「コスチューム」ツールを使って、ペットの外観をカスタマイズします。その後、学習したイベント、ビヘイビア、その他の概念を使って、ペットに命を吹き込みます。
            Data from Sprite Lab:
              name: スプライトラボからのデータ
            End of Course Project:
              name: コース最後のプロジェクト
              description_student: 大きなプロジェクトには時間と綿密な計画が必要です。あなたのインスピレーションを見つけ、計画を立て、創造性を解き放ちましょう！
              description_teacher: "次の5つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたるプロジェクトを意図しています。その中で、ブレーンストーミング、設計プロセスの学習、最終的な作品の構築および発表を行います。\\\r\\\r「探索」ステージでは、生徒は事前に作成されたアーティストプログラムとスプライトラボプログラムで遊んでインスピレーションを得ます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。次に、アーティスト、スプライトラボ、その他のインターフェイスで独自のプロジェクトを作成するための時間が与えられます
                (これはおそらくプロジェクトの中で最長のステージです)。次に、生徒はテストとピアレビューの後にプログラムを修正します。最後に、生徒は完成した作品をクラスメートに発表します。"
            Copyright and Creativity:
              name: 著作権と創造性
            Internet:
              name: インターネット
              description_student: 情報がインターネット上をどのように移動するのか疑問に思ったことはありませんか？魔法を使っているわけではありません！このレッスンでは、インターネットの仕組みの基本を学びます。
              description_teacher: 多くの人が毎日インターネットを使っていますが、それがどのように機能するかを知っている人はあまりいません。このレッスンでは、接続、URL、IPアドレス、DNSについて学びながら、インターネットの流れを疑似体験します。
            Crowdsourcing:
              name: クラウドソーシング
              description_student: このレッスンでは、チームでプロジェクトを構築するプロセスであるクラウドソーシングについて学びます。
              description_teacher: コンピューター サイエンスでは、大きな困難な問題に直面します。大きな素数を見つけることやDNAの配列を決定するなどの課題は、個人として行うことはほとんど不可能です。他の人の力を借りると、このようなタスクが扱いやすくなります。このレッスンでは、コンピューター
                サイエンス業界でチームワークがいかに役立つかを説明します。
            Digital Sharing:
              name: デジタル共有
              description_student: このレッスンでは、所有権と著作権の課題と利点について学びます。
              description_teacher: このレッスンは、コンピューター サイエンス入門で使うために著作権および創造性チームから借り受けたもので、特にデジタル環境において、所有権と著作権を尊重することの課題と利点を生徒が理解するのに役立ちます。生徒には、倫理的なデジタル
                シティズンでいることの重要な部分として、アーティストの権利を尊重するような姿勢が必要です。
            Running Simulations:
              name: シミュレーションの実行
            Simulating Experiments:
              name: 実験のシミュレーション
              description_student: コンピュータでシミュレーションを実行し、変数を変更して実験しましょう。
              description_teacher: 生徒はスプライトラボで簡単なシミュレーションを実行することにより、コンピューティングをどのように使うと傾向やパターンを特定するデータを収集できるかを体験します。シミュレーションを複数回実行した後、生徒はシミュレーションで変数を変更すると結果にどのように影響するかについて予測し、その仮説をテストする機会があります。
          student_description: このコースでは、さまざまな種類のループ、イベント、関数、条件文を使用する方法を学びます。さまざまな問題解決手法を調査し、コンピューティングとインターネットの社会的影響について話し合います。このコースの後半では、友人や家族と共有できるキャップストーンプロジェクトを設計して作成します。
        dance-low:
          title: ダンスパーティー (低帯域幅)
          description_short: 自分のダンスパーティーをプログラミングして友だちと共有しましょう！(このバージョンは低速接続用です)
          lessons:
            Dance Party:
              name: ダンスパーティー
        coursed-2019:
          title: コース D (2019)
          description: 生徒はループ、条件、イベントについての理解を深めます。プログラミング以外に、生徒はデジタル シティズンシップについて学びます。
          description_short: 条件文について学び、独自のアート、ゲーム、さらにはダンスパーティーを作成しましょう。
          description_audience: '年齢: 7～11才'
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_events:
              display_name: イベント
            csf_loops:
              display_name: くりかえし
            csf_conditionals:
              display_name: 条件
            csf_binary:
              display_name: ２しんすう
            csf_digcit:
              display_name: デジタル シティズンシップ
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Algorithms: Graph Paper Programming':
              name: グラフ用紙のプログラミング
              description_student: このレッスンでは、クラスメートが絵を描くようにプログラムします。
              description_teacher: プログラミングでお互いに絵を描くことによって、生徒はプログラミングのコアコンセプトを楽しく、理解しやすい方法で経験する機会があります。クラスは、生徒にシンボルを使って、お互いにグラフ用紙上の正方形に色付けして目の前の画像を再現するように指示するところから始まります。もし時間があれば、生徒が自分で画像を作成してレッスンを締めくくってもいいでしょう。
            Introduction to Online Puzzles:
              name: オンラインパズル入門
              description_student: このレッスンでは、このコースに必要なスキルを練習できます。
              description_teacher: このパズルのセットでは、生徒はCode.orgのオンラインワークスペースの紹介 (またはクラスの経験に応じて復習)
                から始めます。 「実行」、「リセット」、「手順」ボタンなど、ワークスペースの基本的な機能を紹介するビデオがあります。ビデオでは、Blocklyブロックのドラッグ、Blocklyブロックの削除、Blocklyブロックの接続についても説明しています。次に、生徒は迷路で_シーケンス_と_デバッグ_スキルを練習します。そこから、_ループ_の基本を学んだら、コレクター、アーティスト、農夫などの新しいタイプのパズルに進みます。
            Relay Programming:
              name: プログラミングをリレーする
              description_student: コースの最初にプログラムで絵を描いことを覚えていますか？このレッスンでは、チームと協力してこれとよく似た作業を行います。
              description_teacher: このアクティビティは、デバッグと永続性に関する短いレッスンから始まります。その後すぐに、生徒はチームに分かれ、一度に1つの命令を受けて一緒にプログラムを作成する時間との戦いに入ります。
            Debugging in Collector:
              name: ローレルと学ぶデバッグ
              description_student: プログラミング中に問題が発生したことはありませんか？このレッスンでは、デバッグの秘密について学びます。デバッグは、プログラム内の問題を見つけて修正するプロセスです。
              description_teacher: このオンラインアクティビティでは、「コレクター」環境でデバッグを練習します。生徒は、プログラムを読んだり編集したりする練習をして、簡単なアルゴリズム、ループ、入れ子のループでパズルを修正します。
            Events in Bounce:
              name: バウンスで学ぶイベント
              description_student: 学校でビデオゲームをプレイできたらと夢見たことはありませんか？このレッスンでは、ゲームを自作できます！
              description_teacher: このオンラインアクティビティでは、生徒はイベントとは何か、コンピューターがビデオゲームなどのプログラムでイベントをどのように使用するかを学びます。生徒はパズルに取り組み、プログラムがイベント
                (矢印ボタンが押されるなど) に反応するようにします。パズルの最後に、生徒はさまざまな速度と音でゲームをカスタマイズする機会があります。
            Loops in Ice Age:
              name: アイス・エイジのループ
              description_student: このレッスンでは、繰り返しブロックを使って、スクラッチがドングリにできるだけ効率的に到達できるようにします。
              description_teacher: ループを使用することの簡単なおさらい (または紹介) として、このステージでは、「繰り返し」ブロックを使ってスクラッチをドングリに効率的に到達させます。
            Loops in Artist:
              name: アーティストくりかえし
              description_student: このレッスンでは、ループを使って、アーティストでクールな画像を簡単に作成できます。
              description_teacher: このレッスンは以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティはデバッグ演習を兼ねており、問題解決をさらに実践できます。
            Nested Loops in Bee:
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、入れ子のループを作成するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Nested Loops in Artist:
              name: アーティストと学ぶ入れ子のループ
            Nested Loops in Frozen:
              name: フローズンで学ぶ入れ子のループ
            While Loops in Farmer:
              name: ファーマーの「while」ループ
              description_student: ループはプログラミングで非常に役立ちます。このレッスンでは、新しい種類のループ、whileループについて説明します！
              description_teacher: 生徒がこのレッスンに到達する頃には、`repeat`ループを使って練習をたくさん行ってきているはずなので、ここではそれを発展させていきます。_Whileループ_は、条件が満たされている間、コマンドを繰り返し続けるループです。「while」ループは、プログラマーがコマンドを繰り返す必要がある正確な回数を知らない場合に使われますが、ループを繰り返し続けるためにどの条件がtrueである必要があるかを知っています。たとえば、生徒は農夫のゲームで穴を埋めたり、土を掘ったりする操作を行います。穴の大きさや土の山の高さはわかりませんが、地面が平らにならない限り、穴を埋めて土を掘り続ける必要があることを生徒は知っています。
            Until Loops in Maze:
              name: 迷路で学ぶUntilループ
              description_student: "「until」ループを使用すると、驚くべきことができます！"
              description_teacher: このレッスンでは、「until」ループについて学習します。生徒は、主人公が停止する目的の地点に「到達する」までアクションを繰り返すプログラムを作成します。
            Conditionals with Cards:
              name: カードと条件
              description_student: 特定の条件下でのみポイントを獲得するゲームをプレイしましょう！
              description_teacher: "このレッスンでは、条件文を使ってプログラムを特定の情報にどのように合わせたらよいかを示します。プログラムを作成するときに必要な情報がすべて揃っているとは限りません。プログラムの実行時にどのような状況になるかわからない場合でも、ある状況では他のことを実行したい場合があります。ここが条件文の出番です。条件文は、プログラムの実行時にtrueである情報に基づいて、コンピューターが決定を下せるようにします。\\\r\\\r"
            Conditionals in Bee:
              name: みつばちと学ぶIf/Else
              description_student: 条件文を理解したところで、ハチミツとミツを収集するときに条件文を使うようにみつばちをプログラムしましょう。
              description_teacher: ここまで、生徒は実行するたびにまったく同じ操作を実行するプログラムを作成してきました。これは信頼性は高くても、柔軟性があまりありません。このレッスンでは、クラスで条件文を使ったプログラミングを開始し、プログラムが遭遇した特定の条件に応じて対応を異にするプログラムを作成します。
            Conditionals & Loops in Harvester:
              name: 条件文を用いる収獲
              description_student: 各条件文をいつ使用するかが常に明確であるとは限りません。このレッスンは、何をすべきかを決める練習をするのに役立ちます。
              description_teacher: 生徒は「while」ループ、「until」ループ、および「if/else」文を練習します。これらのブロックはすべて条件文を使用します。
                3つすべてを練習することで、生徒は複雑で柔軟なプログラムを書く方法を学びます。
            Digital Citizenship:
              name: デジタル シティズンシップ
              description_student: 情報によってはオンラインで共有すると安全ではないものもあります。このレッスンは、公開しても安全な情報と個人情報の違いを学ぶのに役立ちます。
              description_teacher: "このレッスンは、Common Sense Educationと連携して、一部のウェブサイトが提供することを要求するか入力する必要があるユーザー情報について批判的に考えることを学ぶのに役立ちます。生徒はプライベート情報と個人情報の違いを学び、オンラインで共有するのに安全か安全でないかを区別します。\\\r\\\r生徒は、優れたデジタル市民になる方法を学ぶための1つの手順として、オフラインおよびオンラインコミュニティに対して責任を持ち、尊重することの意味を探ります。"
            Build a Play Lab Game:
              name: プレイラボゲームを構築する
            'Unplugged: Binary':
              name: バイナリ画像
              description_student: 2つのオプションのみで、言語を使ってコンピューターが画像をどのように保存するかを学びましょう。
              description_teacher: 多くの人はバイナリを厳密に0と1と考えていますが、ここでは情報をさまざまなバイナリオプションで表すことができるという考え方を学びます。さらにこのレッスンではこの考え方を一歩進めて、コンピューターがさらに複雑な情報
                (画像や色など) をバイナリでどう格納するのかも示します。
            Artist Binary:
              description_student: このレッスンでは、0と1のみを使って画像を作成する方法を学びます。
              description_teacher: この一連のオンラインレッスンでは、生徒はオンとオフを使って画像を作成する方法を学びます。
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
              description_student: このレッスンで独自のスター・ウォーズゲームを構築しながら、フォースを感じてください。
              description_teacher: このレッスンでは、イベントを使ってオンラインで共有できるゲームを作成する練習をします。 R2-D2や他のスター・ウォーズのキャラクターが登場し、イベントの案内を一通り受けてから、スペースが与えられて独自のゲームを作成します。
            Dance Party:
              name: ダンスパーティー
              description_student: お祝いの時間です！このレッスンでは、独自のインタラクティブなダンスパーティーをプログラムします。
              description_teacher: このレッスンでは、生徒が自分のインタラクティブなダンスパーティーをプログラムします。ツールは音楽に応答するように構築されているため、このアクティビティにはサウンドが必要です。
          student_description: 生徒はループ、条件、イベントについての理解を深めます。プログラミング以外に、生徒はデジタル シティズンシップについて学びます。
        coursee-2019:
          title: コース E (2019)
          description: アルゴリズム、ループ、条件文、イベントを使ってプログラミングから始めて、関数に移ります。このコースの後半では、友だちや家族と共有できるキャップストーンプロジェクトを設計して作成します。
          description_short: コースCとDの概念を確認してから、関数を学習してさらに進みます。
          description_audience: '年齢: 8～12才'
          lesson_groups:
            ramp_up:
              display_name: ランプアップ
            csf_sprites:
              display_name: スプライト
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_impacts:
              display_name: コンピューティングの影響
            csf_nested_loops:
              display_name: 入れ子のループ
            csf_functions:
              display_name: 関数(かんすう)
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops:
              name: 入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            Conditionals with Cards:
              name: カードと条件
            Conditionals:
              name: ファーマーと学ぶ条件文
              description_student: この楽しくてやりがいのあるシリーズでは、特定の条件下でコンピューターに何をすべきかを教えます。
              description_teacher: このレッスンでは、生徒に「while」ループと「if/else」文を紹介します。 「while」ループは、条件が真である限り、コマンドを繰り返し続けるループです。whileループは、プログラマーがコマンドを繰り返す必要がある正確な回数を知らないときに使用しますが、プログラマーは、ループがループを続けるためにどの条件が真である必要があるかを知っています。「If/Else」文は、何かが真である場合にのみプログラムのセクション全体を実行することでプログラミングに柔軟性を提供し、そうでない場合は他の何かを実行します。
            Private and Personal Information:
              description_student: インターネットは楽しくて刺激的ですが、安全を確保することも重要です。このレッスンでは、安全に共有できる情報と非公開の情報の違いを学びます。
              description_teacher: Common Sense Educationが開発したこのレッスンでは、オンラインで共有しても安全な情報とそうでない情報の違いについて学んでいきます。生徒は自分のID情報を要求するサイトを訪問する際、重要な調査プロセスを踏むことを学びます。これにより、自分自身と家族をID情報の盗難から守ることができます。このレッスンでは、一部のウェブサイトが要求するユーザー情報について批判的に考える方法を学びます。また、プライベート情報と個人情報の違い、およびオンラインで共有するのに安全か安全でないかを判別する方法を学びます。
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
              description_student: このレッスンで独自のスター・ウォーズゲームを構築しながら、フォースを感じてください。
              description_teacher: このレッスンでは、イベントを使ってオンラインで共有できるゲームを作成する練習をします。 R2-D2や他のスター・ウォーズのキャラクターが登場し、イベントの案内を一通り受けてから、スペースが与えられて独自のゲームを作成します。
            'Functions: Songwriting':
              name: 作詞作曲
              description_student: ロックスターでさえプログラミングのスキルが必要です。このレッスンでは、曲の歌詞を用いた関数について学習します。
              description_teacher: コンピューター サイエンスの世界で最も素晴らしい構造の1つは関数です。関数 (プロシージャと呼ばれることもあります)
                は、大きなプログラムの中で繰り返し使用できるミニプログラムです。このレッスンでは、まとまったコードを関数に合わせることがなぜ役立つのかを生徒が直感的に理解するのに役立ちます。
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
              description_student: 最も効率的なプログラムで関数を使用するにはどうしたらいいか、考えられますか？
              description_teacher: 生徒たちは、この楽しくインタラクティブなマインクラフトアドベンチャーで関数がどのように役立つかを学習します！
            Functions in Harvester:
              name: ファーマーと学ぶ関数
              description_student: ファーマーの収穫を手伝う際、関数が大きな手助けをしてくれます。
              description_teacher: 生徒は、アーティストで印象的なデザインを作成し、みつばちのゲームで迷路をナビゲートすることを練習しましたが、今日は、農夫のゲームで作物を収穫するための関数を用います。このレッスンでは、関数を「while」ループと「if/else」文と組み合わせることで、関数の新しい使用法を学びます。
            Copyright and Creativity:
              name: 著作権と創造性
            Functions in Artist:
              name: アーティストと学ぶ関数
              description_student: 関数で複雑な図面をより簡単に作成！
              description_teacher: 生徒は、アーティストで関数の使い方を学び、壮大な画像を作成および変更します。より複雑なパターンについては、関数を別の関数の中から呼び出すことにより、入れ子の関数について学びます。
            Determine the Concept:
              name: コンセプトの決定
              description_student: 秘密は漏らしません！このレッスンでは、これまでに学んだスキルを活用できます。
              description_teacher: このレッスンでは、前のレッスンの概念をまとめ、どの概念を適用するかを伝えずに、各問題をどのように解決するかについて批判的に考える機会を生徒に提供します。生徒は、基本的なアルゴリズム、デバッグ、「repeat」ループ、条件文、「while」ループ、関数についておさらいします。
            Learning Sprites with Sprite Lab:
              name: スプライトラボで泳ぐ魚
              description_student: スプライトを作成および編集する方法を学びます。
              description_teacher: このレッスンでは、スプライトラボの中心となる2つの概念、スプライトとビヘイビアについて学びます。スプライトは、生徒が移動、変更、操作できる画面上のキャラクターまたはオブジェクトです。ビヘイビアは、スプライトが停止するまで継続的に実行するアクションです。
            Alien Dance Party with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
              description_student: クラスメートと共有できるインタラクティブなプロジェクトを作成しましょう。
              description_teacher: このレッスンでは、生徒がインタラクティブなアニメーションやゲームを作成できるプラットフォームであるスプライトラボを取り上げます。ビヘイビアに加えて、今日はユーザー入力をイベントとして組み込んで、「エイリアンダンスパーティー」を作成します。
            Pet Giraffe with Sprite Lab:
              name: スプライトラボでのペットのキリン
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
              description_student: ここにいくつかのゲームと絵があります。それを使って遊んで、自分のプロジェクトのアイデアを手に入れよう！
              description_teacher: 次の4つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたって体験してもらうことを意図しています。その中で、ブレーンストーミングの探求、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボで事前に作成されたプロジェクトの例を見て、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティストまたはプレイラボで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。最後に、生徒は完成した作品を仲間に発表することができます。
            The Design Process:
              name: 設計プロセス
              description_student: このように大きなプロジェクトには時間と十分な計画が必要です。ここでは、設計プロセスについて学習し、後で独自の作品を作成するのに使用できるようにします。
              description_teacher: 5つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトを作成する準備をしていきます。プロジェクトのこの部分では、生徒は設計プロセスと、それを自分のプロジェクトにどのように実装するかについて学びます。プロセスの5つのステージすべてを概説したレッスンガイドについては、このプロジェクトプロセスの冒頭部分[こちら]
                \(<https://curriculum.code.org/csf/coursef/15/>) にあります。
            Build Your Project:
              name: プロジェクトの構築
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
              description_teacher: 4つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトをプログラミングする準備をしていきます。ここでは、生徒はアーティストまたはプレイラボでプロジェクトを作成するためのスペースが与えられます。これは、プロジェクトで最長のステージになるかもしれません。プロセスの4つのステージすべてのレッスンガイドについては、このプロジェクトプロセスの最初のステージ[こちら]
                \(<https://curriculum.code.org/csf/coursee/12/>) にあります。
            Present Your Project:
              name: プロジェクトの発表
              description_student: 人に見てもらう準備はいいですか？完成したプロジェクトを同僚に発表する時が来ました。
              description_teacher: 4つのレッスンを通じて、生徒はプレイラボまたはアーティストのいずれかをプログラミング環境として使って、独自のデザインのプロジェクトをプログラミングする準備をしていきます。最後に、生徒は完成した作品を同僚に発表したり、特別なリンクを使って家族と共有したりできます。プロセスの4つのステージすべてのレッスンガイドは、このプロジェクトプロセスの最初のステージ[こちら]
                \(<https://curriculum.code.org/csf/coursee/12/>) にあります。
            Internet:
              name: インターネット
              description_student: 情報がインターネット上をどのように移動するのか疑問に思ったことはありませんか？魔法を使っているわけではありません！このレッスンでは、インターネットの仕組みの基本を学びます。
              description_teacher: 多くの人が毎日インターネットを使っていますが、それがどのように機能するかを知っている人はあまりいません。このレッスンでは、接続、URL、IPアドレス、DNSについて学びながら、インターネットの流れを疑似体験します。
            Crowdsourcing:
              name: クラウドソーシング
              description_student: このレッスンでは、チームでプロジェクトを構築するプロセスであるクラウドソーシングについて学びます。
              description_teacher: コンピューター サイエンスでは、大きな困難な問題に直面します。大きな素数を見つけることやDNAの配列を決定するなどの課題は、個人として行うことはほとんど不可能です。他の人の力を借りると、このようなタスクが扱いやすくなります。このレッスンでは、コンピューター
                サイエンス業界でチームワークがいかに役立つかを説明します。
            Nested Loops in Bee:
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、ループを別のループ内に配置するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Nested Loops in Artist:
              name: 入れ子のループを使った奇抜な形状
              description_student: 入れ子のループについてさらに学習します！今回は、入れ子のループを使って素晴らしい絵を描きます。
              description_teacher: 生徒は、今日使うパズルセットでアーティストを使って複雑なデザインを作成します。入れ子のループを新しい目標に向かって練習し続けることにより、生徒は一般的にループをどのように使ったらいいのかをより詳しく学べます。このパズルのセットは、ステージの最後に生徒が独自のデザインを作成する機会を提供し、創造性をより発揮することができます。
            Nested Loops in Frozen:
              name: フローズンで学ぶ入れ子のループ
              description_student: アナとエルサは優れたアイススケートスキルを持っていますが、氷のパターンを作成するにはあなたの助けが必要です。入れ子のループを使って、何かすごくいかしたものを作成しましょう。
              description_teacher: 生徒はループを重ねる方法を理解したので、非常に多くの美しいものを作成できます。このレッスンでは、生徒は一連の演習を行い、アナとエルサの優れたアイススケートスキルを使って、ポートフォリオに対応した独自のイメージを作成できるようにします。
            Sequencing in the Maze:
              name: 迷路で学ぶシーケンス
              description_student: このレッスンでは、独自のプログラムを作成する方法を学びます。
              description_teacher: "このパズルのセットでは、生徒はCode.orgのオンラインワークスペースの紹介 (またはクラスの経験に応じて復習)
                から始めます。 「実行」、「リセット」、「手順」ボタンなど、ワークスペースの基本的な機能を紹介するビデオがあります。ビデオでは、Blocklyブロックのドラッグ、Blocklyブロックの削除、Blocklyブロックの接続についても説明しています。次に、生徒は迷路で_シーケンス_と_デバッグ_スキルを練習します。そこから、_ループ_の基本を学んだら、コレクター、アーティスト、農夫などの新しいタイプのパズルに進みます。\\\rデバッグはプログラミングの学習に不可欠な要素です。生徒は誤って解かれたパズルに取り組みます。ループが不正確だったり、ブロックが欠落していたり、ブロックが余分だったり、ブロックが機能しないなどのエラーを特定するには、既存のプログラムを順に検証する必要があります。"
            Programming and Loops with the Artist:
              name: ループを使った描画
              description_student: このレッスンでは、ループを使用すると、アーティストでさらにクールな画像を簡単に作成できます。
              description_teacher: 生徒がいくつかのブロックとデジタルステッカーを使って独自の素晴らしいデザインを作成すると、表情がパッと明るくなるのが見て取れます！このレッスンは、以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティは、ポートフォリオやPTA会議向け作品を作成するのに最適です。
            End of Course Project:
              name: コース最後のプロジェクト
              description_student: 大きなプロジェクトには時間と綿密な計画が必要です。あなたのインスピレーションを見つけ、計画を立て、創造性を解き放ちましょう！
              description_teacher: 次の4つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたって体験してもらうことを意図しています。その中で、ブレーンストーミングの探求、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボで事前に作成されたプロジェクトの例でプレイして、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティスト、スプライトラボ、または使い慣れたその他のインターフェイスで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。最後に、生徒は完成した作品を仲間に発表することができます。
            Conditionals in Minecraft:
              name: マインクラフトの条件文
            About Me:
              name: スプライトラボについて
              description_student: スプライトラボでインタラクティブなポスターを作成することにより、生徒は個人情報やプライベート情報をウェブ上で共有することについて理解したことを応用します。
              description_teacher: スプライトラボでインタラクティブなポスターを作成することにより、生徒は個人情報やプライベート情報をウェブ上で共有することについて理解したことを応用します。\\
            Aquatic Conditionals in Minecraft:
              name: マインクラフトのアクアティック条件文
            Access Ability:
              name: アクセシビリティのための設計
              description_student: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
              description_teacher: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
            Digital Sharing:
              name: デジタル共有
            Simon Says:
              name: サイモンは言う
              description_student: ゲームをプレイして、正しい結果を得るために必要なコマンドについて考えます。
              description_teacher: このレッスンでは、ゲームをプレイして、正しい結果を出すためにどのようにコマンドを与えたらいいかを生徒に考えてもらいます。これにより、今後のレッスンで、学んだことをスプライトラボに簡単に引き継ぐことができます。
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
              description_student: ここでは、マインクラフトの世界で条件文について学習します。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            Swimming Fish with Sprite Lab:
              name: スプライトラボで泳ぐ魚
            Designing for Accessibility:
              name: アクセシビリティのための設計
            Songwriting:
              name: 作詞作曲
          student_description: アルゴリズム、ループ、条件文、イベントを使ってプログラミングから始めて、関数に移ります。このコースの後半では、友だちや家族と共有できるキャップストーンプロジェクトを設計して作成します。
        express-2019:
          title: エクスプレスコース (2019)
          description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
          description_short: コンピューター サイエンス入門。小学校の中高学年向けコースの良い所をとりだしました。
          description_audience: '年齢: 9～18才'
          lesson_groups:
            csf_warmup:
              display_name: ウォームアップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_conditionals:
              display_name: 条件
            csf_functions:
              display_name: 関数(かんすう)
            csf_variables:
              display_name: 変数（へんすう）
            csf_for_loops:
              display_name: ループ用
            csf_sprites:
              display_name: スプライト
          lessons:
            'Algorithms: Graph Paper Programming':
              name: 'アルゴリズム: グラフ用紙プログラミング'
            Programming in Maze:
              name: めいろ のプログラミング
            Relay Programming:
              name: プログラミングをリレーする
            Debugging in Maze:
              name: スクラットと学ぶデバッグ
            Programming in Collector:
              name: ローレルと行う宝物の収集
            Programming in Artist:
              name: プログラムでアートを作成
            'Loops: Getting Loopy':
              name: 'ループ: ルーピーをゲット'
            Loops with Rey and BB-8:
              name: レイとBB-8と学ぶループ
            Loops in Artist:
              name: アーティストくりかえし
            Copyright and Creativity:
              name: 著作権と創造性
            'Concept Practice with Minecraft ':
              name: マインクラフトで先を見る
            Nested Loops in Bee:
              name: 迷路で学ぶ入れ子のループ
            Nested Loops in Frozen:
              name: スノーフレークとアナとエルサ
            While Loops in Farmer:
              name: 農夫と学ぶWhileループ
            Until Loops in Maze:
              name: 迷路で学ぶUntilループ
            Conditionals with Cards:
              name: カードと条件
            Conditionals in Bee:
              name: みつばちと学ぶIf/Else
            Conditionals & Loops in Harvester:
              name: 条件文を用いる収獲
            'Functions: Songwriting':
              name: '関数: 作曲'
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
            Functions in Harvester:
              name: ファーマーと学ぶ関数
            Functions in Artist:
              name: アーティストと学ぶ関数
            Screen Out the Mean:
              name: 平均をスクリーンアウト
            Determine the Concept:
              name: コンセプトの決定
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Build a Flappy Game:
              name: フラッピーゲームを構築する
            The Power of Words:
              name: 言葉の力
            Envelope Variables:
              name: エンベロープ変数
            Variables as Constant in Artist:
              name: アーティストと学ぶ変数
            Variables that Change in Bee:
              name: みつばちと学ぶ変数の変更
            Variables that Change in Artist:
              name: アーティストと学ぶ変数の変更
            For Loop Fun:
              name: Forループを楽しむ
            For Loops in Bee:
              name: みつばちと学ぶForループ
            For Loops in Artist:
              name: アーティストと学ぶForループ
            Learning Sprites with Sprite Lab:
              name: スプライトラボで泳ぐ魚
            Alien Dance Party with Sprite Lab:
              name: エイリアンダンスパーティー
            Pet Giraffe with Sprite Lab:
              name: スプライトラボでのペットのキリン
            Explore Project Ideas:
              name: プロジェクトのアイデアの探求
            The Design Process:
              name: 設計プロセス
            Build Your Project:
              name: プロジェクトの構築
            Revise Your Project:
              name: プロジェクトを修正する
            Present Your Project:
              name: プロジェクトの発表
            Binary Bracelets:
              name: バイナリ ブレスレット
            'Unplugged: Binary':
              name: 'アンプラグド: バイナリ'
            Artist Binary:
              name: アーティスト：バイナリ
            Internet:
              name: インターネット
            Crowdsourcing:
              name: クラウドソーシング
            Editing Behaviors:
              name: スプライトラボで学ぶビヘイビア
            Virtual Pet with Sprite Lab:
              name: スプライトラボでのバーチャルペット
            Build A Project:
              name: コース最後のプロジェクト
            Dance Party:
              name: ダンスパーティー
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
            Concept Practice with Minecraft:
              name: マインクラフトでコンセプトの実践
          student_description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター
            プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
        csd1-2019:
          title: CSDユニット1 - 問題解決と計算 ('19～'20)
          description_short: 人が問題を解決するためにコンピューターを使ってどのように作業をするかを学びます。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csd1_1:
              display_name: '第 1章: 問題解決プロセス'
            csd1_2:
              display_name: 第 2 章コンピューターと問題解決
          lessons:
            CS Discoveries Pre-survey:
              name: CS発見の事前アンケート
            Intro to Problem Solving:
              name: 問題解決入門
              description_student: クラスはグループで作業し、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。
              description_teacher: このレッスンでは、生徒がグループで作業して、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。ボートの設計は2ラウンドあり、ラウンド1よりも多くのコインを載せることを目指します。アクティビティは、以降のレッスンで問題解決プロセスのさまざまな手順をより詳細に学ぶことが分かるように組み立てられています。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: このレッスンでは、クラスが年間を通して使用する正式な問題解決プロセスである、定義 - 準備 -
                試行 - 反映を紹介します。クラスは、この手順を前のレッスンのアルミ製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。
              description_teacher: このレッスンでは、生徒が年間を通して使用する正式な問題解決プロセスである、定義 - 準備 -
                試行 - 反映を紹介します。レッスンは、生徒が日常生活で遭遇するさまざまな種類の問題すべてについてブレインストーミングを行うように求めることから始まります。次に、生徒は問題解決プロセスの4つの手順を示し、協力してこの抽象的な手順を問題解決の実際の経験に関連付けます。最初の生徒は、この手順を前のレッスンのアルミニウム製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。
            Exploring Problem Solving:
              name: 問題解決の探求
              description_student: このレッスンでは、クラスは問題解決プロセスを、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。
              description_teacher: このレッスンでは、各手順の重要性をよりよく理解するために、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に問題解決プロセスを適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。レッスンは、生徒たちが問題解決プロセスでの経験を振り返って締めくくります。往々にしてこれは最も重要な手順であるため、各手順をなぜ含めるのかを考え、自由回答式の問題により良く対処するのに役立つ戦略や問題についてブレインストーミングします。最初の2つの問題は2クラス分に収まるかもしれませんが、3番目の問題は2日目に取り組む必要があるでしょう。
            What is a Computer?:
              description_student: このレッスンでは、クラスでコンピューターの予備的な定義を作成します。コンピューターの考えられる定義についてブレインストーミングを行った後、クラスはグループで作業し、ポスター用紙で写真を「コンピューターである」または「コンピューターではない」に分類し、最も難しいカテゴリのいくつかを選択する動機を説明します。次に、先生はコンピューターの定義を導入し、グループが新しい定義に従ってポスターを修正できるようにします。
              description_teacher: "このレッスンでは、生徒は「コンピューター」とは何かを考えます。レッスンを開始したら、コンピューターの考えられる定義をブレインストーミングし、このブレインストーミングの結果をボードに配置します。次に、生徒はグループで作業して、ポスター用紙で写真を「コンピューター」か「コンピューターではない」かに分類します。グループはポスターを部屋の周りに配置し、なぜそのように分類したかを簡単に説明します。次に、先生はコンピューターの定義を紹介し、生徒に新しい定義に従ってポスターを修正してもらいます。\\\r"
            Input and Output:
              name: 入出力
              description_student: 生徒はこのクラスで、いくつものコンピューティングデバイスについて考え、使用する入力と出力のタイプを決定します。グループには1つのコンピューティングデバイスが割り当てられ、先生が示す入力と出力の定義に基づいて、デバイスの入力と出力をリストします。レッスンの最後に、コンピューティングデバイスで一般的にどのような操作をするかを検討し、その操作に使用する入力と出力をグラフから選択します。
              description_teacher: 生徒はこのレッスンで、いくつものコンピューティングデバイスについて考え、使用する入力と出力のタイプを決定します。グループには1つのコンピューティングデバイスが割り当てられ、先生が示す入力と出力の定義に基づいて、デバイスの入力と出力をリストします。アクティビティの前半では、より明白な物理的な入力と出力
                (たとえば、入力としてのキーボードまたは出力としての画面) に注目するように促されますが、後半の話し合いでは、あまり明白でない例 (たとえば、タッチスクリーンは入力であると同時に出力でもあること、またはインターネットが入力と出力の両方として機能できるという事実)
                を検討していきます。レッスン全体を通じて、先生は教壇に掲げたTチャートに、特定した入力と出力を記録していきます。レッスンの最後に、コンピューティングデバイスで一般的にどのような操作をするかを検討し、その操作に使用する入力と出力をグラフから選択します。
            Processing:
              name: 処理
              description_student: このレッスンでは、コンピューターの定義の一部として紹介した「処理」について詳しく説明します。ペアになって力を合わせて、情報処理の1つの形式になるよう一連のカードを順番に並べます。最後に、クラスは、情報の問題を解決する文脈の中で、処理が何を意味するかについて話し合います。
              description_teacher: 生徒は、オフラインで行う2つのカード分類アクティビティを行い、処理の意味と問題解決との関係を探ります。最初のアクティビティには制約がほとんどなく、「処理」を大まかに定義するのに用います。次により多くの制約を付け、生徒に常にカードを正常に処理するアルゴリズムを開発してもらいます。生徒はアルゴリズムを繰り返し開発、テスト、クラスメートと共有します。最後のディスカッションでは、アクティビティで使用したさまざまな種類の問題解決法を振り返り、問題解決にアルゴリズムを作成することの意義について考えます。
            Apps and Storage:
              name: アプリとストレージ
              description_student: このレッスンでは、生徒にとって身近なコンピューターに関連するコンテキスト（つまりアプリ) で、コンピューターの入力と出力の側面について説明します。このクラスでは、さまざまなウェブアプリケーションを評価して、解決できるように設計された特定の問題、アプリが機能するために必要な入力、およびアプリからユーザーに示される出力を詳しく見ていきます。クラスの最後には、アプリを観察して、アプリが社会に与える影響について先生が主導する形で話し合います。
              description_teacher: このレッスンでは、アプリという、生徒に身近なコンテキストでコンピューターの入力、出力、ストレージ、および処理の側面を確認します。生徒はペアになって、スマートフォンアプリケーションを評価して、解決すべき特定の問題、作業に必要な入力、入力を目的の出力に変換する処理、および後のためにどのような情報を保存したいかを分析します。クラスの最後はディスカッションをして、レッスンを生徒がより身近に感じるアプリに結びつけて終わります。
            Project - Propose an App:
              name: プロジェクト - アプリの提案
              description_student: 問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、このクラスでは、実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、各アプリの機能を紹介するポスターのプレゼンテーションでクライマックスを迎えます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。
              description_teacher: 問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、生徒は実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、アプリの機能を紹介するポスターを作成して、クラスメートに示します。プロジェクトガイドにはステップバイステップの指示が示され、生徒が自分の考えを整理するのに役立ちます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。
            Post-Project Test:
              name: プロジェクト後のテスト
        andrea-test:
          description_audience: 6-12 トレーニング中のファシリテーター
          description_short: ここでは、コースを作成するスキルをテストします
          description: コースを作成する試みについての長めの説明....概要、コンテンツがどこから来たのかまだ疑問に思っています...
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            new stage:
              name: 新しいステージ
            module1:
              name: モジュール1
            module2:
              name: モジュール2
            'null':
              name: ヌル
            Deeper Learning Overview:
              name: 詳細学習の概要
            Part 1:
              name: パート1
            Part 2:
              name: パート2
            part 3:
              name: パート3
          student_description: コースを作成する試みについての長めの説明....概要、コンテンツがどこから来たのかまだ疑問に思っています...
        dance-extras-gallery:
          title: ダンスを続ける
          description_short: Hour of Codeを超えて、Code.orgのダンスパーティーチュートリアルのフォローアップアクティビティを行いましょう。
          description: 最初の 1 時間を越えて、プロジェクトのアイデアを広げましょう。
          lessons:
            Dance Party - Go Further:
              name: ダンスパーティー - さらに先へ
          student_description: 最初の 1 時間を越えて、プロジェクトのアイデアを広げましょう。
        coursec-2019:
          title: コース C (2019)
          description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description_audience: '年齢: 6～10才'
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_binary:
              display_name: ２しんすう
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
            csf_data:
              display_name: データ
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            Programming in Maze:
              name: めいろ のプログラミング
              description_student: アングリーバードでシーケンスとアルゴリズムについて学びましょう。
              description_teacher: アングリーバードゲームのキャラクターを使って、生徒はトリを迷路の片側から反対側のブタに移動させる一連のアルゴリズムを開発します。これを行うために、コードブロックを線形のシーケンスで積み上げ、トリをまっすぐ移動、左折、または右折させます。
            Debugging in Maze:
              name: 迷路で学ぶデバッグ
              description_student: パズルで問題を見つけ、デバッグスキルを練習しましょう。
              description_teacher: デバッグはプログラミングの学習に不可欠な要素です。このレッスンでは、誤って解かれたパズルに取り組みます。ループが不正確だったり、ブロックが欠落していたり、ブロックが余分だったり、ブロックが機能しないなどのエラーを特定するには、既存のプログラムを順に検証する必要があります。
            'Real-life Algorithms: Paper Planes':
              name: '現実世界のアルゴリズム: 紙飛行機'
            Programming in Collector:
              name: ローレルと行う宝物の収集
              description_student: 冒険家ローレルがたくさんの宝石を集めるのに役立つアルゴリズムを書いてあげましょう！
              description_teacher: この一連のパズルでは、生徒は引き続きアルゴリズムとデバッグについての理解を深めていきます。冒険家のローレルという新しいキャラクターを使って、生徒は順序アルゴリズムを作成して、ローレルが道を歩いているときに宝物を手に入れられるようにします。
            Programming in Artist:
              name: プログラムでアートを作成
              description_student: "「アーティスト」をプログラミングして美しい画像を作成しましょう。"
              description_teacher: このレッスンでは、生徒がアーティストを制御して、画面上で絵を完成させます。このアーティストステージでは、「100ピクセルずつ前進」や「90度右に回転」などの新しいブロックを使って、より複雑な画像を作成していきます。
            'Loops: Getting Loopy':
              name: 'ループ: ルーピーをゲット'
            Loops with Rey and BB-8:
              name: レイとBB-8と学ぶループ
              description_student: ループを使ってBB-8が迷路を通り抜けるのを助けてあげましょう！
              description_teacher: "「ルーピーをゲット」の指示をここでも繰り返すというコンセプトに基づいて、このステージではループを使って、BB-8が以前よりも効率的に迷路を通過できるようにします。"
            Loops in Artist:
              name: アーティストくりかえし
            Loops in Harvester:
              name: ループで作物を収穫する
              description_student: ループを使ってファーマーが野菜を収穫するのを助けてあげましょう！
              description_teacher: "前の段階では、生徒はループを使って素晴らしい絵を作成しました。ここでは、新しいアクションをループして、農夫がたわわに実る野菜を収穫するのを手助けします。\\\r"
            'Events: The Big Event':
              name: ビッグイベント
              description_student: 楽しいゲームをプレイして、イベントについて学びましょう。
              description_teacher: 生徒はこれから、事前に記述されたアルゴリズムに柔軟性をもたらす優れた方法であるイベントについて学びます。時に、ユーザーが望んだその時にプログラムがユーザーに応答してもらいたいことがあります。イベントは、プログラムをより面白くインタラクティブにすることができます。
            Build a Flappy Game:
              name: フラッピーゲームを構築する
              description_student: 自分で好きなようにフラッピーバードゲームを作って、友だちと共有しましょう！
              description_teacher: この特別なステージでは、イベントハンドラーを使ってマウスクリックとオブジェクトの衝突を検出することにより、生徒は独自のフラッピーバードゲームを作成します。レベルの最後に、生徒はビジュアルやルールを変更してゲームをカスタマイズできます。
            Screen Out the Mean:
              name: 平均をスクリーンアウト
              description_student: このレッスンでは、オンライン上の物事で怒り、悲しみ、または恐怖を感じた場合の対処法を学びます。
              description_teacher: "このレッスンは、オンライン上の物事で怒り、悲しみ、または恐怖を感じた場合、信頼できる大人に伝えることが不可欠であることを子供たちに認識してもらうのに役立ちます。\\\r
                \\\r人は、オンラインにいるときはいじめっ子のように振る舞うこともあるということを生徒たちは学び、ネットいじめの意味と、いじめにあったときに何ができるかを探ります。意地の悪いオンライン行動に関するシナリオを読んだ後、生徒はネットいじめとは何か、それにより人々はどのように感じるか、そしていかに対応するかについて話し合います。最後に、生徒は自分の知識を使って、ネットいじめに関する簡単なヒントシートをジャーナルに作成します。\\\r"
            Events in Play Lab:
              name: プレイ ラボのイベント
              description_student: プレイラボでクリエイティブになってゲームを作りましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
            Looking Ahead:
              name: マインクラフトで先を見る
              description_student: 溶岩を避けて！ここでは、マインクラフトの世界で条件文について学習し始めます。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            Binary Bracelets:
              name: バイナリ ブレスレット
              description_student: 自分だけのバイナリブレスレットを作成し、コンピュータがどのように情報を記憶するかを学びましょう！
              description_teacher: バイナリはコンピューターの世界では非常に重要です。今日のコンピューターの大半は、あらゆる種類の情報をバイナリ形式で格納しています。このレッスンは、実際の生活から何かを取り出し、それをどのようにしたら一連のオンとオフに変換できるかを示します。
            Create a Design with Loops:
              name: ループを使ってデザインを作成する
            'End of Course Project: Create a Play Lab Game':
              name: コース最後のプロジェクト
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
              description_teacher: このキャップストーンレッスンでは、生徒が自分のプレイラボプロジェクトを設計、開発、展示するプロセスを紹介します。このプロセスを円滑に進めるために、紙で計画を立てることからウェブサイトでプログラミングするまで段階的な構造を示し、生徒がそれに従って作業できるようにします。さらに、先生がフィナーレを飾るのに役立つアイデアを提供します！
            'Programming: My Robotic Friends':
              name: 私のロボットの友だち
              description_student: このレッスンでは、クラスメートをロボットのように扱い、積み重ねたカップのパターンを構築するようにプログラムします。
              description_teacher: コードの代わりに一連の記号を使って、さまざまなパターンでカップを積み重ねるように「ロボット」に指示するアルゴリズムを設計します。生徒は交代でロボットとして参加し、仲間が定義したアルゴリズムにのみ応答します。このセグメントでは、シンボルとアクションの間のつながり、アルゴリズムとプログラムの違い、およびデバッグの貴重なスキルを学習します。
            'Loops: My Loopy Robotic Friends':
              name: ルーピー ロボティック フレンズ ジュニア
              description_student: このレッスンでは、クラスメートを再度プログラムしますが、ループを使用すると、より大きく複雑な問題を解決できます。
              description_teacher: 最初の「私のロボットの友だち」アクティビティを踏み台にして、生徒はより大きく複雑なデザインに取り組みます。「ロボット」をプログラムしてこのような大きなデザインを完成させるには、ループで置き換えることができる命令の繰り返しのパターンを見極める必要があります。
            Graphing Data:
              name: データのグラフ化
            Powerful Passwords:
              name: 強力なパスワード
              description_student: このレッスンでは、パスワードがどのように情報を保護するか、また適切なパスワードはどのように作成したらよいかについて学習します。
            Sticker Art with Loops:
              name: アーティストくりかえし
              description_student: このレッスンでは、ループを使用すると、アーティストでさらにクールな画像を簡単に作成できます。
              description_teacher: 生徒がいくつかのブロックとデジタルステッカーを使って独自の素晴らしいデザインを作成すると、表情がパッと明るくなるのが見て取れます！このレッスンは、以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティは、ポートフォリオやPTA会議向け作品を作成するのに最適です。
            Picturing Data:
              name: データで予測
              description_student: データは、生徒が自分の世界を理解し、興味深い質問に答えるのに役立ちます。このレッスンでは、生徒はプレイラボプロジェクトからデータを収集し、さまざまな種類のグラフを使って視覚化します。
              description_teacher: データは、生徒が自分の世界を理解し、興味深い質問に答えるのに役立ちます。このレッスンでは、生徒はプレイラボプロジェクトからデータを収集し、さまざまな種類のグラフを使って視覚化します。
          student_description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
        csp-mid-survey:
          title: CSP生徒向け中間アンケート
          description_audience: CSP生徒
          description_short: CSP生徒向け中間アンケート
          description: Code.org CS原則中間アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
          lessons:
            CSP Mid-year survey:
              name: CSP中間アンケート
          student_description: Code.org CS原則中間アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
        gamelab:
          title: ゲーム ラボ
          description: ゲームラボで開発するための先生との対面式チュートリアル。このチュートリアルは、CSDで扱った概念を超えて説明します。
          lessons:
            Start and End Screens:
              name: 開始画面と終了画面
            Start and End Screens2:
              name: 開始画面と終了画面2
          student_description: ゲームラボで開発するための先生との対面式チュートリアル。このチュートリアルは、CSDで扱った概念を超えて説明します。
        coursea-2019:
          title: コース A (2019)
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          description_short: 低学年向けコンピューター サイエンス入門
          description_audience: 4-7 才
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
          lessons:
            Sequencing in Maze:
              name: 迷路で学ぶシーケンス
            'Programming: Happy Maps':
              name: ハッピーマップ
              description_student: フルブが果物にたどり着くための指示を書きましょう。
              description_teacher: このオフラインレッスンは、チームで一緒に「フラブ」を果物にたどり着かせるという単純なタスクに取り組みます。生徒は、指示を示された記号に変換する作業をしながら、正確な指示を書く練習をします。プログラムに問題が発生した場合は、生徒は協力してバグを発見し、ソリューションを構築します。
            Programming in Maze:
              name: めいろ のプログラミング
              description_teacher: この一連のオンラインパズルは、アルゴリズム、デバッグ、および一般的なコンピューターリテラシーの理解を基に取り組みます。アングリーバードゲームのキャラクターが登場するこのゲームで、生徒は壁やTNTに衝突することなくトリをブタまで飛ばすための順序アルゴリズムを開発します。このステージには、問題解決と批判的思考の練習もできるように、デバッグパズルも含まれています。
            Programming in Harvester:
              name: 農夫と学ぶプログラミング
            Going Places Safely:
              name: 安全な道を通って行く
              description_student: オンラインでサイトを安全に訪問するためのルールを学びます。
              description_teacher: このレッスンは、Common Sense Mediaと協力して、多くのウェブサイトで非公開の情報が求められることを学び、そのような要求を責任を持って処理する方法について説明します。また、生徒たちはオンラインでエキサイティングな場所に行くことができますが、安全でいるようにするには特定のルールに従う必要があることも学びます。
            'Loops: Happy Loops':
              name: くりかえし：ハッピー ループ
              description_student: ループを使ってフラブがより大きな問題を解決するのを助けましょう。
              description_teacher: このアクティビティでは、ハッピーマップを再度取り上げます。今回は、生徒は自分のプログラムで大きくてより時間がかかるパズルを解き、長いプログラムを簡単に書くことができる構造の有用性を学びます。
            Loops in Collector:
              name: くりかえし あつめる
              description_student: 冒険家ローレルが地中の宝物を見つけるのを手伝ってあげましょう。
              description_teacher: このレッスンでは、引き続きループの概念を学習します。前のレッスンでは、ループを使って迷路を通り抜けてトウモロコシを摘むことに取り組みました。ここでは、洞窟で宝物を集めるためにループを使います。
            Loops in Artist:
              name: アーティストくりかえし
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、ループでパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            'Events: The Big Event':
              name: ビッグイベントジュニア
              description_student: 先生が巨大なリモコンのボタンを押したら、移動して叫びましょう。
              description_teacher: イベントは、事前に作成したアルゴリズムに多様性を加える優れた方法です。プログラムに、ユーザーが希望したタイミングでユーザーの指示に応答してもらいたいことがあります。イベントはそれが行えるようにします。
            Events in Play Lab:
              name: プレイ ラボのイベント
              description_student: 独自のゲームやストーリーを作成しましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってストーリーを作りましょう！
            Ocean Scene with Loops:
              name: アーティストくりかえし
              description_student: ループとパターンを使って画像を完成させましょう。
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、ループでパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
              description_student: クリックしてドラッグし、パズルを完成させましょう。
              description_teacher: このレッスンでは、生徒がコンピューターラボに進むときに何が起こるかを理解します。まずはコンピューターラボのマナーを紹介する簡単なディスカッションから始まり、次にコンピューターを使ってオンラインパズルを完成させます。
            Loops in Ice Age:
              name: スクラッチと学ぶループ
              description_student: ループを使ってスクラッチがより多くの地面をカバーできるようにします。
              description_teacher: "「ハッピーループ」からの指示を繰り返すというコンセプトに基づいて、このステージでは、ループを使ってCode.orgでより効率的にどんぐりにたどり着けるようにします。"
            Programming in Ice Age:
              name: スクラッチと学ぶプログラミング
              description_student: スクラッチがどんぐりにたどりつくのを助けるプログラムを書いてください。
              description_teacher: アイスエイジのキャラクターを使って、生徒はスクラットを迷路の片側から反対側のどんぐりに移動させる一連のアルゴリズムを開発します。これを行うために、コードブロックを線形のシーケンスで積み上げ、スクラットをまっすぐ移動、左折、または右折させます。
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
              description_student: BB-8がスクラップを集めるのを手伝ってください。
              description_teacher: このレッスンでは、新しく学んだプログラミングスキルをより複雑な方法で使って、BB-8がトリッキーなコースをナビゲートできるようにします。
            Sequencing with Scrat:
              name: スクラッチと学ぶシーケンス
              description_student: どんぐりにたどり着けるようにスクラッチをプログラムします。
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        courseb-2019:
          title: コース B (2019)
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          description_short: 就学前の児童のためのコンピューター サイエンス入門。コースAと似ていますが、コンセプトが深化しています。
          description_audience: 5-8 才
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_impacts:
              display_name: コンピューティングの影響
            csf_events:
              display_name: イベント
          lessons:
            Move It, Move It:
              name: 動かせ！動かせ！
              description_student: クラスメートがある場所から他の場所へと慎重に歩むようにプログラムしましょう。
              description_teacher: このレッスンは、このコースの過程で取り組むプログラミングの演習に向けて準備するのに役立ちます。小さなチームになって、生徒は身体の動きを使ってクラスメートをプログラムし、目標が達成されるまである場所から他の場所へと慎重に進ませます。
            Sequencing with Scrat:
              name: スクラッチと学ぶシーケンス
            Your Digital Footprint:
              name: デジタル フットプリント
              description_student: デジタルフットプリントと、ウェブサイトにアクセスするときに安全を確保する方法について学びましょう。
              description_teacher: "\\*\\* Common Sense Education \\*\\*の協力により、このレッスンでは、現実の世界で安全を保つことと、ウェブサイトにアクセスする際の類似点について学びます。また、オンラインで公開した情報がデジタル
                フットプリントまたは「証跡」を残すことも学びます。この証跡は、管理方法に応じて、大きくても小さくても、役立つ場合もあれば、害を及ぼす場合もあります。"
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Programming in Ice Age:
              name: アイスエイジで学ぶプログラミング
            Copyright and Creativity:
              name: 著作権と創造性
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Ice Age:
              name: アイス・エイジのループ
            Loops in Collector:
              name: くりかえし あつめる
              description_student: "「冒険家ローレル」をプログラムして、洞窟で宝物を集めましょう。"
              description_teacher: このレッスンでは、引き続きループの概念を学習します。ここでは、冒険者のローレルが、ループを使って洞窟で宝物を収集します。ローレルの旅を助けるために、新しい「宝物を手に入れる」
                (get treasure) ブロックを導入しました。
            Loops in Artist:
              name: アーティストくりかえし
              description_student: パターンとループを使って画像を完成させましょう。
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、生徒はループを使ってパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            'Events: The Big Event':
              name: ビッグイベントジュニア
              description_student: 先生が巨大なリモコンのボタンを押したら、移動したり、叫んだりしましょう。
              description_teacher: イベントは、事前に作成したアルゴリズムに多様性を加える優れた方法です。プログラムに、ユーザーが希望したタイミングでユーザーの指示に応答してもらいたいことがあります。イベントはそれが行えるようにします。
            Events in Play Lab:
              name: プレイ ラボのイベント
              description_student: イベントを使って、ストーリーを作成したり、インタラクティブゲームを作成したりしましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
            'Loops: Getting Loopy':
              name: ルーピーをゲット
              description_student: このレッスンでは、繰り返しループを使用してダンスパーティーを行います。
              description_teacher: 長くて面白いプログラムを書き始めると、プログラムには多くの繰り返しが含まれることがよくあります。このレッスンでは、ループを使って、ダンスで繰り返される動きのパターンを見つけることで、繰り返しの多い指示をより簡単に伝達する方法について学習します。
            The Right App:
              description_student: 自分のスマートフォンアプリをスケッチします。
              description_teacher: このレッスンでは、コンピューター サイエンスが実生活の人々を助けることができることを生徒に認識してもらいます。まず、生徒は、架空のスマートフォンユーザーに自分を重ね、その人のニーズに対応する「適切なアプリ」を見つけるのを手伝います。次に、生徒は共感と創造性を発揮して、もう1人のユーザーのニーズに対応する独自のスマートフォンアプリをスケッチします。
            Loops in Harvester:
              name: ハーベスターと学ぶループ
              description_student: ループを使って、ファーマーの収穫を手伝ってあげましょう！
              description_teacher: "「ルーピーをゲット」で学んだ繰り返しの指示のコンセプトに基づいて、このステージではループを使って、Code.orgでより効率的にトウモロコシを収穫してもらいます。"
            Programming in Maze:
              name: めいろ のプログラミング
              description_student: アングリーバードが迷路を移動するのを助けるためにプログラムを作成しましょう。
            Programming in Harvester:
              name: ファーマーと学ぶプログラミング
              description_student: ファーマーが道に沿って野菜を収穫するのを手伝ってあげましょう。
              description_teacher: 生徒は、学習したプログラミングの概念を農夫の収穫に適用します。ここでは、キャラクターをゴールに到達させるだけでなく、新しいブロックを使ってトウモロコシを収穫する必要があります。生徒は引き続き順序アルゴリズムスキルを開発し、デバッグプロセスを使い始めます。
            Sequencing in Maze:
              name: アングリーバードと学ぶシーケンス
              description_student: 赤いアングリーバードがいたずら好きなブタに到達するのを手伝ってあげましょう。
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        pre-express-2019:
          title: 就学前エクスプレス (2019)
          description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
          description_short: 低学年向けのコンピュータ サイエンス入門です。幼児向けと小学1年生向けコースの良い所をとりだしました。
          description_audience: '年齢: 4～8才'
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
            'Persistence & Frustration: Stevie and the Big Project':
              name: 'パーシステンスとフラストレーション: スティービーと大きなプロジェクト'
            Move It, Move It:
              name: 動かせ！動かせ！
            Sequencing with Scrat:
              name: スクラッチと学ぶシーケンス
            Your Digital Footprint:
              name: デジタル フットプリント
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Programming in Ice Age:
              name: アイスエイジで学ぶプログラミング
            Copyright and Creativity:
              name: 著作権と創造性
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Ice Age:
              name: スクラッチと学ぶループ
            Loops in Collector:
              name: くりかえし あつめる
            Loops in Artist:
              name: アーティストくりかえし
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Events in Play Lab:
              name: プレイ ラボのイベント
            Spelling Bee:
              name: つづりみつばち
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
            Programming in Maze:
              name: めいろ のプログラミング
            Programming in Harvester:
              name: ファーマーと学ぶプログラミング
            Tell a Story in Play Lab:
              name: プレイ ラボのイベント
            Make a Game in Play Lab:
              name: プレイ ラボのイベント
            Ocean Scene with Loops:
              name: アーティストくりかえし
          student_description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター
            プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
        removed19:
          title: 2019のCSFから削除されました
          lessons:
            'Debugging: Unspotted Bugs':
              name: 'デバッグ: 気づかれていないバグ'
            'Persistence & Frustration: Stevie and the Big Project':
              name: 'パーシステンスとフラストレーション: スティービーと大きなプロジェクト'
            'Real-life Algorithms: Plant a Seed':
              name: 現実のアルゴリズム：種を植えましょう
        dani-test-script:
          lessons:
            new stage:
              name: 新しいステージ
        csd2-2019:
          title: CSDユニット2 - ウェブ開発 ('19～'20)
          description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
          description_short: ウェブラボで独自のウェブサイトを構築する方法を学びましょう。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章： Web コンテンツと HTML
            csd2_2:
              display_name: 第 2 章：スタイルと CSS
            cspSurvey:
              display_name: アンケート
          lessons:
            Exploring Websites:
              name: ウェブサイトを探索する
              description_student: このレッスンでは、ユーザーと作成者の両者のために、ウェブサイトが果たす目的について説明します。このクラスでは、米国で最もよく使用されているいくつかのウェブサイトを調べ、各サイトがユーザーにとってどのように役立つか、またどのようにその作成者のためにもなっているかについて話し合います。
              description_teacher: どのウェブサイトにも目的があり、作成者には作成した理由が、そしてそれを使うユーザーには使用する理由があります。このレッスンでは、ウェブサイトがユーザーとクリエイターの両者に資する目的を検討し始めます。生徒は、米国で最もよく使用されているいくつかのウェブサイトを調べ、各サイトがユーザーにとってどのように役立つか、またどのようにその作成者のためにもなっているかについて考えます。
            'Websites for Expression ':
              name: 表現のためのウェブサイト
              description_student: このレッスンでは、個人的な表現の手段としてウェブサイトを紹介します。このクラスでは、まず人々が興味や考えを表現して共有するさまざまな方法について話し合い、次に前のコースで生徒が作成した模範的なウェブサイトをいくつか見ていきます。最後に、全員でブレインストーミングを行い、作成するウェブサイトに含めるトピックと興味のリストを共有し、ユニットの残りの部分で個人のウェブサイトを開発するためのリソースを作成します。
              description_teacher: このレッスンでは、生徒は個人的な表現の手段としてウェブサイトを使用する方法を調査し、個人的なウェブサイトに含めたいトピックと興味のリストを作成します。レッスンを開始するに当たり、生徒は人々が興味や考えを表現して共有するさまざまな方法を話し合います。次に、以前のCS発見コースで生徒が作成したいくつかの模範的なウェブサイトを見て、アイデアを表現する方法を明らかにします。最後に、生徒はブレーンストーミングを行い、個人的なウェブサイトに含めたいと思うトピックや興味のリストを共有し、ユニットを進めながら参照して着想に役立てられるようにします。
            Intro to HTML:
              name: HTML入門
              description_student: このレッスンでは、ウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを紹介します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。クラスはウェブラボでHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかについて話し合ってから、HTMLを使ってユニットの最初のウェブページを作成します。
              description_teacher: このレッスンでは、生徒はウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを学習します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。次に、生徒はウェブラボの模範的なHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかをクラスメートと話し合います。次に、生徒は最初のHTMLを記述します。まとめのディスカッションは、このレッスンを通じて開発したコンテンツと構造の理解を深めるのに役立ちます。
            Headings:
              name: 見出し
              description_student: このレッスンでは、HTMLタグの説明を続けますが、今回はヘッダーを使用します。このクラスでは、ヘッダータグを使ってページとセクションのタイトルを作成し、さまざまなヘッダー要素がデフォルトでどのように表示されるかを学習します。次に、クラス全体で、ユニットを通じて構築する個人のウェブページでコンテンツをどのように配置するかを計画し、プロジェクトの最初のページの作成を開始します。
              description_teacher: このレッスンでは、生徒は引き続きHTMLを使ってウェブページ上のテキストを構成しますが、今回は見出しを使用します。生徒は、さまざまな見出し要素がデフォルトでどのように表示されるかを学び、それを使ってページとセクションのタイトルを作成する練習をします。次に、生徒は自分の個人のウェブページでコンテンツをどのように配置するかを決定していきます。最後のレベルでは、生徒は以降のユニットにかけて取り組むプロジェクトを開始します。
            Digital Footprint:
              name: デジタルフットプリント
              description_student: このレッスンでは、個人のウェブサイトを作成する作業から一歩下がり、デジタルで共有する個人情報について説明します。クラスでは、他の人と共有するのに適した情報の種類について話し合い、次にソーシャルメディアページの例をいくつか見て、意図的にまたは意図せずに共有する可能性がある個人情報の種類を確認します。最後に、クラスは、情報をオンラインに上げるときに従うべき一連のガイドラインについて考えます。
              description_teacher: "生徒は最近のレッスンで、自分の個人用ウェブサイトに掲載する実際のコンテンツについて時間を取って検討しました。このレッスンでは、ユニットで扱うプロジェクト
                (個人のウェブサイトの公開) から一歩下がって、生徒がどのような個人情報を誰とオンラインで共有するかについて考えられるようにします。また、生徒がオンラインで共有することにした情報の多くは、リリースされた瞬間に自らのコントロールから外れるという考えをしっかりと持てるようにします。\\\r
                \\\r生徒は、特定の個人情報を共有するのに適切な対象者を個別に特定することから始めます。次に、いくつかのソーシャルメディアページを見て、人々が自分自身またはお互いについてどのような情報を共有しているかを判断します。最後に、オンラインで情報を投稿するのに適切だと考えるガイドラインについて考えます。\\\r
                \\\rこのレッスンの究極のポイントは、生徒を怖がらせることではなく、情報をウェブに公開する際に、生徒がどこからどこまでがコントロールできる、どこから先がコントロールできないかを体験してもらうことです。"
            Lists:
              name: リスト
              description_student: このレッスンでは、順序付きリストと順序なしリスト、および関連する<ul>、<ol>、<li>
                のHTMLタグを紹介します。クラスはタグの使用を練習してから、個人のウェブページプロジェクトに戻って、新しいタグを含む新しいHTMLページを追加します。
              description_teacher: 生徒はHTMLの順序付きリストと順序なしリストの説明を受け、いくつかのレベルで<ul>、<ol>、<li>タグを使用する方法を学習します。その後、プロジェクトに戻り、新しいHTMLページを追加します。新しいページ内では、HTMLを記述して、レシピ、トップ10リスト、または学習した新しいタグを使用するその他のコンテンツを表示します。
            Intellectual Property and Images:
              name: 知的財産と画像
              description_student: このレッスンでは、他のウェブサイトで作成された画像、ビデオ、音楽などのメディアを、そのメディアの作成者の権利を尊重しながら使用する方法について説明します。クリエイティブ
                コモンズ ライセンスを最初に学習した後、クラスはウェブページに画像を追加する方法と、そうするときに適切な著作権表示をする方法を学びます。
              description_teacher: 他の人が作品をどのように使用できるかについて個人の意見を述べ合うところから始めて、クラスは、創造的なコンテンツの作成者とユーザーにとっての著作権の目的と役割を探ります。次のアクティビティでは、著作権の扱いの難しさの解決策として、さまざまなクリエイティブ
                コモンズ ライセンスを詳しく見ていきます。最後に、さまざまなクリエイティブ コモンズ ライセンスの制限について共通の理解を得て、生徒は<img>タグを使ってウェブページに画像を追加する方法を学びます。
            Clean Code and Debugging:
              name: クリーンなコードとデバッグ
              description_student: このレッスンでは、HTMLでウェブページを設計するときに発生する一般的な問題について説明します。クラスは、Code
                Studioで見つかったより複雑になる一連のウェブページのエラーを修正し、ウェブページを読みやすくするためのツールとしてのコメント、空白、インデントの重要性を学習します。
              description_teacher: 生徒は、HTMLでウェブページを設計するときに発生する一般的な問題に対処し、より複雑になる一連のウェブページのエラーを修正します。その過程で、ウェブページを読みやすくするためのツールとしてのコメント、空白、インデントの重要性を学びます。レッスンの最後に、生徒はウェブページをデバッグし、読みやすくメンテナンスしやすいようにするための戦略のリストを作成します。
            Project - Multi-Page Websites:
              name: プロジェクト - マルチページウェブサイト
              description_student: このレッスンでは、ハイパーリンクについて説明します。ハイパーリンクを使うことで、デベロッパーは複数のページを1つのウェブサイトにつなげることができます。クラスは、以前のすべてのページを1つのプロジェクトにリンクし、各ページへのナビゲーションバーを作成してから、サイト全体をウェブに公開します。
              description_teacher: "ウェブページを相互にリンクする方法を学習した後、生徒はついに自分が取り組んでいるウェブサイトを公開することができます。このレッスンでは、以前に作成したすべてのページを1つのプロジェクトにリンクし、新しいページを作成して、ページ間のナビゲーションを追加してから、サイト全体をウェブに公開します。
                \\\r \\\r"
            Styling Text with CSS:
              name: CSSを使用したテキストのスタイル設定
              description_student: このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。このクラスは、CSSルールセットの基本的な構文を学習してから、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。最後に、全員でテキストスタイルを自身のウェブサイトに適用します。
              description_teacher: "このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。生徒は、CSSルールセットの基本的な構文を学び、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。生徒はギネス世界記録保持者に関するHTMLページで作業し、指定されたページに独自のスタイルを追加します。最後のレベルでは、生徒はテキスト要素のスタイルについて学んだことを自分のウェブページに適用します。\\\r
                \\\r"
            Styling Elements with CSS:
              name: CSSを使用した要素のスタイル設定
              description_student: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。クラスは、新しいCSSスタイルを調査して、「世界のデザート」ページを変更することから始めます。その後、全員でこの新しい知識を自身のウェブサイトに適用します。
              description_teacher: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。生徒は、このレッスンの最初に、世界のデザートに関するウェブサイトを見ます。そして、このウェブサイトのCSSスタイルを調べて新たに変更を加え、独自のスタイルをこのページに追加します。
                デザートページで作業した後、生徒は新しいCSSプロパティの知識を利用して、自身のウェブサイトのスタイルをさらに充実させます。
            Sources and Search Engines:
              name: ソースと検索エンジン
              description_student: 最初にウェブ検索の借り物競争を完了した後、クラスは検索エンジン内部の仕組みについて学び、分析スキルを使って奇妙な真偽不明の動物を探す機会があります。
              description_teacher: このレッスンでは、ウェブ検索の仕組みや、関連性があり信頼できる情報をオンラインで見つける方法について、生徒がより批判的に考えるように促します。検索エンジンがどのように機能するかについてのビデオを見て議論した後、生徒は真偽不明の動物に関する情報を検索します。生徒は、どの動物が実際にデマであるかを特定するために、見つけたサイトを分析して信頼できるものであることを確かめる必要があります。
            RGB Colors and Classes:
              name: RGBの色とクラス
              description_student: このレッスンでは、クラスとカスタムカラーについて説明します。このクラスは、まずRGB (赤、緑、青)
                値を使ってカスタムカラーを指定する方法を学び、次にCSSクラスを使用する新しいFour Seasons ウェブページにこれらのカラーを適用します。クラスを使ってFour
                Seasons ウェブページにスタイルを追加し、さらに自身のウェブサイトのスタイルを設定します。
              description_teacher: このレッスンでは、まず、RGB (赤、緑、青) 値を使ってカスタムカラーを指定する方法を学習します。次に、CSSクラスを使用する新しいFour
                Seasons ウェブページにこれらのカラーを適用します。CSSクラスにより、ウェブデベロッパーは同じタイプの他の要素とは異なるスタイル要素のグループを扱うことができます。クラスを使って、生徒はFour
                Seasons ウェブページにスタイルを追加し、さらに自身のウェブサイトのスタイルを設定します。
            Project - Personal Portfolio Website:
              name: プロジェクト - 個人ポートフォリオウェブサイト
              description_student: ユニットの最後の数日で、クラスは自身のウェブサイトを完成させ、仲間と協力してフィードバックを出し合い、ルーブリック
                (評価基準) を確認し、サイトに最後の仕上げを行います。最後に、全員が自身のプロジェクトとその開発方法を共有してユニットを締めくくります。
              description_teacher: "生徒は、ユニットを通して多くの時間を費やして自身のウェブサイトを開発してきました。最後の2日間で、生徒はウェブサイトを完成させます。さらに同僚と協力してフィードバックを出し合い、ウェブサイトに最後の仕上げを行い、ルーブリック
                (評価基準) を確認し、プロセスを振り返ります。最後に、プロジェクトを共有し、さらに最終的な設計に至るまでにたどったプロセスの概要を示してユニットを締めくくります。\\\r"
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
          student_description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
        csd3-2019:
          title: CSDユニット3 - アニメーションとゲーム ('19～'20)
          description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
          description_short: ゲームラボでアニメーション、インタラクティブアート、ゲームのプログラミングを学びましょう。
          lesson_groups:
            csd3_1:
              display_name: '第 1 章: 画像とアニメーション'
            csd3_2:
              display_name: '第2章: ゲームを作る'
            cspSurvey:
              display_name: アンケート
          lessons:
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
              description_student: クラスは退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。
              description_teacher: 生徒は退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。
            Plotting Shapes:
              name: 形状のプロット
              description_student: 生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。
              description_teacher: 生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。
            Drawing in Game Lab:
              name: ゲームラボでの描画
              description_student: このクラスは、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。このレッスンでは、シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンの最後に、クラスは前のレッスンで設計したイメージのオンラインバージョンを作成します。
              description_teacher: 生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。
            Shapes and Randomization:
              name: 形状とランダム化
            Variables:
              name: 変数（へんすう）
              description_student: このレッスンでは、プログラムで数値にラベルを付ける方法、またはランダムに生成された値を保存する方法として変数を導入します。クラスは、変数の目的の非常に基本的な説明と新しいブロックの使用方法からレッスンを開始します。その後、クラスは変数を使って乱数を保存し、プログラムが同じ乱数を複数回使用できるようにします。
              description_teacher: このレッスンでは、変数を使ってプログラム内の数値にラベルを付ける方法、またはランダムに生成された値を保存する方法を学習します。生徒は、変数の目的の非常に基本的な説明からレッスンを始めます。次のレベルでは、生徒は、変数を数値のラベルまたは名前を付ける方法とするモデルを学習します。生徒は変数を使って乱数を保存し、変数が実際に値を保存することを確認します。これにより、プログラム内で同じ乱数を複数回使用できるようになります。
            Sprites:
              name: スプライト
              description_student: より興味深く、詳細な画像を作成するために、クラスはスプライトオブジェクトの説明を受けます。すべてのスプライトに表示する画像を割り当てることができ、スプライトは自身に関する複数の値も追跡するため、アニメーションを作成するときに便利です。レッスンの終わりに、全員がスプライトを使ってシーンを作成します。
              description_teacher: より興味深く、詳細な画像を作成するために、生徒はスプライトオブジェクトの説明を受けます。すべてのスプライトに表示する画像を割り当てることができ、スプライトは自身に関する複数の値も追跡するため、アニメーションを作成するときに便利です。
            The Draw Loop:
              description_student: このレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。このクラスは、描画ループと乱数を組み合わせて、いくつかの単純なアニメーションをドットで、次にスプライトで操作します。その後、学習した内容を使って、前のレッスンのスプライトシーンを更新します。
              description_teacher: このレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。レッスンを開始するために、生徒はパラパラ漫画を見て、さまざまなイメージを持つフレームが数多くあると、動いているかのような印象が生まれることを確認します。次に、生徒は、ゲームラボの描画ループが、プログラムでこれと同じ印象を生み出すのにどのように役立つかを説明するビデオを視聴します。生徒は、描画ループと乱数を組み合わせて、単純なアニメーションをドットで、次にスプライトで操作します。レッスンの最後に、生徒は学習した内容を使って、前のレッスンのスプライトシーンを更新します。
            The Counter Pattern Unplugged:
              name: オフラインのカウンターパターン
              description_student: このオフラインレッスンでは、変数の基本的な働きを探ります。ノートカードと文字列を使ってプログラム内の変数をシミュレートすることにより、クラスは短いプログラムをいくつか実装します。この構文に慣れたら、クラスは同じプロセスをスプライトプロパティで使って、画面全体のスプライトの進行状況を追跡します。
              description_teacher: 生徒は、オフラインアクティビティを通じて変数の基本的な働きを探ります。プログラム内の変数をシミュレートするためにノートカードと文字列を使って、生徒は短いプログラムをいくつか実装します。この構文に慣れたら、生徒はスプライトプロパティで同じプロセスを使って、画面全体でスプライトの進行状況を追跡します。
            Sprite Movement:
              name: スプライトの動き
              description_student: 描画ループとカウンターパターンを組み合わせることにより、クラスはスプライトを画面上で移動させたり、他のスプライトプロパティをアニメーション化したりするプログラムを作成します。
              description_teacher: 描画ループとカウンターパターンを組み合わせることにより、生徒はスプライトを画面上で移動させたり、他のスプライトプロパティをアニメーション化したりするプログラムを作成します。
            Booleans Unplugged:
              name: オフラインのブール
              description_student: このレッスンでは、ブール値と論理、および条件文を紹介します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。次に、クラスは、ますます複雑になるブール文に基づいてオブジェクトをグループ化し、条件文がプログラムのフローにどのように影響するかを調べます。
              description_teacher: このレッスンでは、ブール値と論理、および条件文について学習します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。これにより、生徒は複数の潜在的な値
                (年齢など) を持つプロパティをバイナリ質問でどのように構成できるかについて考えます。次に生徒には、類似しているが変化する物理的特性を持つオブジェクトのグループが示されます。パートナーと一緒に、ますます複雑になるブール文
                (ANDおよびORを使用した複合ブールを含む) に基づいてこのようなオブジェクトをグループ化します。最後に、ツールとしての条件文を説明し、ブール文を入力情報にして、プログラムの流れを決定したり、影響を与えたりします。
            Conditionals:
              name: 条件
              description_student: クラスは、ブール値を使ってスプライトプロパティの現在の値をターゲット値と比較し、その比較結果を使って、スプライトが画面上のある地点に達したか、指定されたサイズになったか、またはカウンターパターンを使って値に達したかを判断します。ブール値を直接使って値またはスプライトプロパティを調べた後、クラスはif条件文を追加して、このブール値の比較に応答するプログラムを作成します。
              description_teacher: 生徒は、ブール値を使ってスプライトプロパティの現在の値をターゲット値と比較し、その比較結果を使って、スプライトが画面上のある地点に達したか、指定されたサイズになったか、またはカウンターパターンを使って値に達したかを判断します。ブール値を直接使って値またはスプライトプロパティを調べた後、生徒はif条件文を追加して、このブール値の比較に応答するプログラムを作成します。
            Keyboard Input:
              name: キーボード入力
              description_student: 前のレッスンのブール文と条件文の紹介に続いて、keyDown() という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。
              description_teacher: 前のレッスンのブール文と条件文の紹介に続いて、「keyDown()」という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。
            Other Forms of Input:
              name: その他の入力形式
              description_student: このクラスでは、条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純なkeyDown()
                コマンドに加えて、クラスは他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
              description_teacher: このレッスンでは、生徒は条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純な「keyDown()」コマンドに加えて、生徒は他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
            Project - Interactive Card:
              name: プロジェクト - インタラクティブカード
              description_student: 第1章のこのまとめプロジェクトでは、クラスは、これまでに学んだすべてのプログラミング手法を使って、インタラクティブなグリーティングカードを計画および開発します。
              description_teacher: 第1章のこのまとめプロジェクトでは、生徒は、これまでに学んだすべてのプログラミング手法を使って、インタラクティブなグリーティングカードを計画および開発します。
            Velocity:
              name: 速度
              description_student: カウンターパターンを使ってスプライトを移動させる方法を簡単に確認した後、クラスは速度と回転速度を直接設定するプロパティを学びます。生徒はさまざまな方法でこの新しいプロパティを使用しながら、基本的な横スクロールゲームを作成するために必要なスキルを身につけていきます。
              description_teacher: 前のレッスンで学んだ、カウンターパターンを使ってスプライトを移動させる方法を簡単に確認した後、生徒は速度と回転速度を直接設定するプロパティを学びます。生徒はさまざまな方法でこの新しいプロパティを使用しながら、基本的な横スクロールゲームを作成するために必要なスキルを身につけていきます。
            Collision Detection:
              description_student: このクラスでは、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、クラスはisTouching()ブロックを使って、サウンドの再生など、スプライトが衝突した時に生み出されるさまざまな効果を作成します。最後に、新しいスキルを使って、前回のレッスンで作成を開始したサイドスクローラーゲームを改善します。
              description_teacher: 生徒は、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、生徒は「isTouching()」ブロックを使って、サウンドの再生など、スプライトが衝突した時に生み出されるさまざまな効果を作成します。最後に、新しいスキルを使って、前回のレッスンで作成を開始したサイドスクローラーゲームを改善します。
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
              description_student: このクラスでは、スプライトの速度プロパティをカウンターパターンと組み合わせて、重力をシミュレートしたり、スプライトをジャンプさせたり、スプライトが左または右へ浮かせたりする、より複雑なスプライトの動きを作成する方法を学習します。最終レベルでは、クラスはこれらの動きを組み合わせて1つのスプライトをアニメーション化して制御し、キャラクターが飛び回ってコインを収集するシンプルなゲームを作成します。
              description_teacher: 生徒は、スプライトの速度プロパティをカウンターパターンと組み合わせて、より複雑なスプライトの動きを作成する方法を学びます。特に、重力をシミュレートし、スプライトをジャンプさせ、スプライトを左または右に浮かせる方法を学びます。Code
                Studioの最終レベルでは、生徒はこれらの動きを組み合わせて1つのスプライトをアニメーション化して制御し、キャラクターが飛び回ってコインを収集するシンプルなゲームを作成します。生徒は、最終レベルで、ゲームに自分なりの工夫を加えるよう促されます。
            Collisions:
              name: 衝突
              description_student: クラスは、新しい方法で相互作用するようにスプライトをプログラムします。 isTouchingブロックの使用方法を簡単に確認した後、クラスは2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (collide、displace、bounce、bounceOff) を使う練習をします。
              description_teacher: 生徒は、新しい方法で相互作用するようにスプライトをプログラムします。 「isTouching」ブロックの使用方法を簡単に確認した後、生徒は2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (「collide」、「displace」、「bounce」、「bounceOff」) を使う練習をします。
            Functions:
              name: 関数(かんすう)
              description_student: このレッスンでは、プログラムを整理して読みやすくする方法として関数を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。クラスは、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。レッスンの最後に、クラスはこれらのスキルを使って、サイドスクローラーゲームの最終バージョンを用意し、機能を追加します。
              description_teacher: 生徒は、プログラムを整理して読みやすくするための関数を作成する方法を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。オフラインで行うウォームアップでは、コンテキストに応じて、さまざまな詳細レベルの指示がどのように役立つかを探ります。生徒は、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。生徒は関数を使って、コードの長いブロックを描画ループから削除し、繰り返しのコードを1つの関数に置き換えます。レッスンの終わりに、生徒はこれらのスキルを使って、サイドスクローラーゲームの最終バージョンを用意し、機能を追加します。
            The Game Design Process:
              name: ゲームデザインプロセス
              description_student: このレッスンでは、クラスはユニットの残りの部分のためのゲームを設計するのに使うプロセスを紹介します。クラスは、このプロセスを一連のレベルで学習します。このレッスンの一環として、クラスはゲームラボでマルチフレームアニメーションの使い方を簡単に学びます。レッスンの最後に、ゲームを改良して独自のゲームにする機会があります。
              description_teacher: このレッスンでは、ユニットの残りの部分のためのゲームを設計するのに使うプロセスを生徒に紹介します。このプロセスはプロジェクトガイドを中心に据え、生徒はゲームのプログラミングを始める前に、スプライト、変数、関数を定義するように求められます。このレッスンでは、プログラムが非表示になっているゲームラボでゲームをプレイすることから始め、ゲームを作成するためにどのようなスプライト、変数、関数が必要と考えるかについて話し合います。次に、配布される完全なプロジェクトガイドには、ゲームを実装する方法が1つ示されています。そして、生徒はこのプロセスを一連のレベルで学習します。このレッスンの一環として、生徒はゲームラボでマルチフレームアニメーションの使い方を簡単に学びます。レッスンの最後に、生徒はゲームを改良して独自のものにする機会があります。
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
              description_student: この2日以上かけて行うレッスンでは、クラスはユニット1の問題解決プロセスを使って、プラットフォーム
                ジャンパーゲームを作成します。サンプルゲームを見た後、クラスはどのようなゲームにしたいかを明確にし、構造化されたプロセスを使ってゲームを構築します。最後に、クラスはゲームをどのように改善できるかを考え、変更を加えていきます。
              description_teacher: この2日以上かけて行うレッスンでは、ユニット1の問題解決プロセスを使って、プラットフォーム ジャンパーゲームを作成します。まず、プラットフォーム
                ジャンパーの例を見てから、どのようなゲームにしたいかを明確にします。次に、構造化されたプロセスを使って、ゲームの実装に必要な背景、変数、スプライト、関数を計画します。ゲームのプログラムを書いた後、生徒はゲームをどのように改善できるかを振り返り、変更を加えていきます。
            Project - Design a Game:
              name: プロジェクト - ゲームの設計
              description_student: クラスでは、前の2つのレッスンのプロジェクトガイドを使って、オリジナルのゲームを計画および構築します。個別またはペアで作業して、クラスはゲームの計画、開発し、フィードバックを行います。ピアフィードバックをゲーム組み込んだ後、クラスは完成したゲームを共有します。
              description_teacher: 生徒は、前の2つのレッスンのプロジェクトガイドを手引きに使って独自のゲームを計画および構築します。生徒は個別にまたはペアで作業し、サンプルゲームのセットからインスピレーションを得て、構築するゲームの種類を最初に決定します。次に、空白のプロジェクトガイドを記入します。その中で、ゲームの動作を説明し、作成する必要がある変数、スプライト、関数を詳しく調べます。Code
                Studioでは、一連のレベルで、この計画を実装するために使用できる一般的なシーケンスを示します。プロセスの途中で、生徒は自分のプロジェクトを共有してピアレビューに回し、ゲームを完成させながらフィードバックを組み込みます。レッスンの最後に、生徒は完成したゲームをクラスメートと共有します。このプロジェクトは複数のクラスにまたがり、3～5クラス分の時間がかかることも多々あります。
            CS Discoveries End of Semester Survey:
              name: CS発見期末アンケート
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
          student_description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
        csd4-2019:
          title: CSDユニット4 - 設計プロセス ('19～'20)
          description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
          description_short: ユーザーのニーズを満たすプログラムを設計する方法を学びましょう。
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：ユーザーを中心にしたデザイン
            csd4_2:
              display_name: 第 2 章：アプリのプロトタイピング
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
          lessons:
            Analysis of Design:
              name: デザインの分析
              description_student: このクラスでは、さまざまなティーポットのデザインを探り、デザインの選択と作成、それにその理由を考えます。ティーポットを例として使って、クラスはユーザー間の関係、ユーザーのニーズ、およびユーザーが使用するオブジェクトのデザインを探ります。
              description_teacher: グループで問題を解決し、他のユーザーのための製品を開発することに取り組むユニットを始めるに当たり、生徒はさまざまなティーポットのデザインを調査することから取りかかります。生徒は各ティーポットを分析し、特定のユーザーのニーズがその設計にどのように影響を与えているかをつかみます。設計をどうするかについて考え、各ティーポットを潜在的なユーザーのニーズに合わせようと試みて、製品
                (物理的およびデジタルの両方) の設計にユーザー中心のアプローチをとるで製品の有用さと使いやすさがどのように向上するかを見ていきます。アクティビティの終わりに、いずれかのティーポットをより便利に、または使いやすくするようにティーポットに変更提案を行うように生徒に求めます。
            Understanding Your User:
              name: ユーザーを理解する
              description_student: このクラスでは、ユーザープロファイルを使って、さまざまなユーザーが各種製品にどのように反応するかを探ります。クラスのメンバーはそれぞれ違う人としてロールプレイングし、他者の目を通してデザインを体験します。
              description_teacher: "設計者は、有用な製品を作成するためにユーザーのニーズを理解する必要があります。このレッスンでは、ユーザープロファイルを使って他者としてロールプレイングし、そのユーザーとして一連の製品を使って確かめることによって、他者のためにデザインするにはどうしたらよいかを考えるように生徒を促します。各生徒には、あるユーザープロファイルが割り当てられ、そこにはその個人の情報が記載されています。そのユーザープロファイルを使って、適切な製品を選択し、製品設計をレビューし、設計をどう改善したらよいかを提案します。\\\r"
            User-Centered Design Micro Activity:
              name: ユーザー中心のデザインマイクロアクティビティ
              description_student: 少人数のグループになり、設計プロセスを使って、スマートな服のアイデアを考え出します。ブレーンストーミングからユーザーの特定、最終的な設計の提案まで、このレッスンはこのユニットで他者のニーズに合わせたソリューションの設計を行う最初の機会になります。
              description_teacher: このレッスンでは、ユニット全体で生徒が目にすることになる設計プロセスの簡略版を見ていきます。生徒はまず、スマートな服の潜在的なユーザーを念頭にブレインストーミングします。クラスとしてアイデアを幅広いカテゴリにグループ化し、各グループはユーザーのカテゴリを1つ選択します。グループはこのプロセスを繰り返して、ユーザーのニーズや懸念をブレインストーミングし、最終的にニーズを分類して、重点的に取り組む対象を選択します。最後に、生徒は、意思決定を促すためにブレインストーミングして導き出された特定のニーズと懸念を使って、スマートな服を設計します。クラスの終わりに、生徒は意思決定プロセスをすばやく共有し、選択したユーザーのニーズに製品がどれだけうまく対応しているかについてフィードバックを受け取ります。
            User Interfaces:
              name: ユーザーインターフェイス
              description_student: プログラムを書く前に、紙のプロトタイプを使ってソフトウェアをどのようにテストしてフィードバックを受け取るかを確認します。デベロッパーのアイデア出しを手伝うために、クラスは紙で作られたアプリのプロトタイプをテストして意見を出します。
              description_teacher: ミニデザインプロジェクトに続いて、生徒はデザインの次のフェーズ、つまりユーザーのニーズに対応する製品のプロトタイプを作成することに目を向けます。チームで、生徒は「Txt
                Ur Grndkdz」と呼ばれるチャットアプリの紙のプロトタイプを調べます。生徒は、コンピューターを使う前に、この紙のプロトタイプを使うことで、アイデアと仮定をすばやくテストする方法を確認できます。提供されたプロトタイプを「使用」した後、生徒は次のイテレーションを改善する方法をつかんでいきます。
            Feedback and Testing:
              name: フィードバックとテスト
              description_student: ユーザーはアプリをテストしており、デベロッパーに伝えたいフィードバックが数多くあります。クラスは、このフィードバックをすべて整理し、共通のテーマとニーズを特定し、プロトタイプを修正し始めて、ユーザーのニーズによりよく適合するようにする必要があります。
              description_teacher: このレッスンでは、生徒は前のレッスンの紙のプロトタイプを作成したアプリの「ユーザー」からのフィードバックを使って、その紙のプロトタイプのユーザーインターフェイスの改善を行います。このレッスンは、設計者がテクノロジーを使って人のニーズをユーザーインターフェイスまたはエクスペリエンスに変える必要があるということを考えるところから始まります。その後、生徒は前のレッスンで扱ったアプリのユーザーから一連のフィードバックとリクエストを受け取ります。生徒はグループになってフィードバックを分類し、アプリのインターフェイスをどのように変更するとフィードバックで寄せられたニーズを満たすことができるかを探ります。次に、生徒はグループで、特定したニーズの1つを満たせるように、この変更の一部を実装します。
            Identifying User Needs:
              name: ユーザーのニーズの特定
              description_student: ここまで、クラスが検討したユーザーはすべてリモートで、ユーザーから得られた情報はすべてテキストまたはロールプレイを通じて得られました。これで、クラスはお互い潜在的なユーザーとしてフィードバックを出し合い、ペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることができます。
              description_teacher: ここまで、生徒はある程度離れたユーザーのための設計に集中してきました。ブレーンストーミング、プロファイル、テキストによるフィードバックなど、エンドユーザーとの接点は直接的なものではありませんでした。これは、ユーザーについて考えるときに自分の考えから一歩抜け出るのを助けるために設けられた距離ですが、実際のユーザーから直接情報を取得するには、クラスメートに頼る必要があります。このレッスンでは、生徒はペアになってお互いにユーザー
                (および設計者) になるので、誰でもエンドユーザーに直接インタビューし、質問をしてより詳しい情報に基づいた設計が行えます。生徒はペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることを試みます。
            Project - Paper Prototype:
              name: プロジェクト - 紙のプロトタイプ
              description_student: 前のレッスンのインタビュー情報を使って、クラスはユーザーのニーズに対処するためのアプリのアイデアを思いつきます。そのアイデアを表現し、それが効果的であることをテストするために、各自で紙のプロトタイプを作成してテストします。
              description_teacher: 前のレッスンのピアインタビューに基づいて、各生徒はユーザーの問題に対処するアプリのアイデアを思いつきます。次に、生徒は個々のノートカードに「画面」を描くことにより、考えたアプリの紙のプロトタイプを作成します。プロジェクトガイドが、アプリの作成やテストを含むプロセスを通じて手引きになります。ユーザーとテストすることで、作成したユーザーインターフェイスに関する想定が正確だったかを確認できます。
            Designing Apps for Good:
              name: 優れたアプリの設計
              description_student: アプリの設計プロジェクトを開始するに当たってクラスをチームに編成され、アプリのトピックについて詳しく見ていきます。社会に影響を与えるアプリ例をいくつか示すことで、プロジェクトに取り組むインスピレーションが得られます。
              description_teacher: ユニットの最後まで続けていくアプリ設計プロジェクトを開始するに当たり、生徒は先ず、他の生徒が社会に影響を与えようと設計したアプリを見ていきます。次に、クラスは、問題解決プロセスの定義、準備、試行、反映の各手順をレビューしながら、社会的な影響力を持つ独自のアプリのアイデアを練ります。最後に、生徒はプロジェクトチームを編成し、アプリの開発過程全体を通じてチームでどのように作業を進めるかについて話をまとめます。
            Market Research:
              name: 市場調査
              description_student: 似たようなユーザーに役立つ可能性のある既存のアプリを探索して、アプリ開発に飛び込みましょう。各グループは、取り組んでいる同じトピックに対処するアプリをいくつか特定し、それらのアプリを使って、追求するアプリのアイデアを洗練させていきます。
              description_teacher: このレッスンでは、生徒は、ユーザーのニーズをよりよく理解するために、作成しようとしているアプリと同じ様なアプリを調査します。生徒はチーム内で他のアプリをインターネットで検索し、興味深いアプリを評価します。レッスンが終わる頃までに、各チームは作成したいアプリのタイプについてより明確なアイデアを持ち、ターゲットユーザーが誰であるかをさらに絞り込みるようになっていることでしょう。各チームは、調査したすべてのアプリの引用リストを用意します。これは、最終的なプレゼンテーションで使います。
            Paper Prototypes:
              name: 紙のプロトタイプ
              description_student: 紙のプロトタイプを使うと、多くの時間をかけてプログラムを書く前に、デベロッパーはアイデアをすばやくテストできます。このレッスンでは、チームはアプリラボで作成されたサンプルアプリをいくつか見て、それらのアプリを使って得た情報に基づき、アプリの最初のプロトタイプを紙で作成します。
              description_teacher: "アプリを設計し始める前に、生徒が期待事項の範囲を決められるようにする必要があります。生徒は最終的にアプリラボでアプリのプロトタイプを作成するため、持っているアイデアがアプリラボで簡単にプロトタイプが作成できる種類のアプリと一致すれば、作業しやすくなります。チームは、アプリラボで作成できるアプリのデモとして設計されたサンプルアプリを調べて、範囲の決定を開始します。その後、チームは1つ
                (または複数) のアプリを自分のアプリのベースとして選択します。そして時間をとってアプリの基本的な機能について話し合ってから、3x5のインデックスカードを使って紙のプロトタイプを作成します。\\\r"
            Prototype Testing:
              name: " プロトタイプテスト"
              description_student: このレッスンでは、チームはクラスの他のメンバーと一緒に紙のプロトタイプをテストします。1人の生徒がコンピューターを演じ、1人がナレーションを行い、残りのメンバーは観察することで、チームはアプリのデザインに関するフィードバックをすぐに受け取れ、アプリのプロトタイプの次のバージョンを作成する際の参考にできます。
              description_teacher: 紙のプロトタイプを作成する主な目的は、プログラムを作成する前に、テストとイテレーションを素早く行えるようにすることにあります。このレッスンのポイントは、アプリラボに移る前にチームにプロトタイプをテストする機会を与えることにあります。チームは、アプリをユーザーとテストする計画を立ててから、クラス内
                (場合によってはクラス外) の他の複数の生徒にプロトタイプをテストしてもらいます。ユーザーがプロトタイプをテストできるように、生徒はテストでの役割
                (「ナレーター」、「コンピューター」、および「オブザーバー」) を割り当て、さらにいくつかの質問を用意してテスト完了後にユーザーに回答してもらいます。
            Digital Design:
              name: デジタルデザイン
              description_student: 紙のプロトタイプの開発、テスト、フィードバックが完了したチームは、アプリラボに移動して、アプリの次のイテレーションを構築します。ドラッグ・アンド・ドロップの設計モードを使って、各チームメンバーはチームのアプリの少なくとも1ページ分を作成し、前回のテストラウンドで受け取ったフィードバックに応えます。
              description_teacher: 紙のプロトタイプのアプリを共同で開発した後、グループは手分けして、紙のプロトタイプに基づいてインタラクティブなデジタルバージョンの作成に向けて作業し始めます。アプリラボのドラッグ・アンド・ドロップ設計モードを使って、生徒は作業しながらスキル開発レベルの段階をステップアップし、紙のプロトタイプからデジタルバージョンを構築する方法を学びます。そこから、各グループメンバーはアプリラボでアプリの少なくとも1ページ分を作成し、後で結合して1つのアプリにします。
            Linking Screens:
              name: 画面のリンク
              description_student: 前のレッスンでクラスが設計した画面を基に、チームは画面を1つのアプリに統合します。単純なプログラムを追加して、ボタンをクリックすると適切な画面に切り替わるようにすることもできます。
              description_teacher: このレッスンでは、チームは前のレッスンで設計した画面を1つのアプリに結合し、プログラムを使ってそれらをリンクできます。生徒は、前のレッスンで開始したモデルアプリを組み上げることで、イベント駆動型の基本的なプログラミングを学びます。生徒が昨日設計した画面に加えて、追加の画面を作成する方法や、他の人が作成した画面をインポートする方法についても学びます。
            Testing the App:
              name: アプリのテスト
              description_student: チームは、今度はインタラクティブなプロトタイプを使って、別のユーザーテストを実行します。この一連のテストから収集したフィードバックは、アプリのプロトタイプの最終反復に反映させます。
              description_teacher: 前のレッスンの終わりまでに、各チームはアプリの実行可能な最小限のプロトタイプが出来ているはずです。このレッスンの主な目的は、チームが実際に他の人と一緒にアプリをテストすることにあります。他の人はできればアプリの対象となる対象ユーザーから、またはクラスの異なるチームから選びます。チームのオブザーバーはテスト結果を計画段階で使用したワークシートに記録します。紙のプロトタイプをテストしたときと同様に、チームは、テストを実行して観察する前に、特定のシナリオを計画することから始めます。
            Improving and Iterating:
              name: 改善とイテレーション
              description_student: テストの最終ラウンドで受け取ったフィードバックを使って、チームはユーザーのニーズに対応する変更を実装します。各チームは、追加したい機能と修正が必要なバグを追跡して、優先順位を付けます。
              description_teacher: チームはこの時点で、複数のイテレーションとユーザーテストのラウンドを経たアプリのプロトタイプを開発しています。最後のユーザーテストで得られた情報とガイダンスを活用して、各生徒はチームアプリの改善を計画して実装する機会を得ます。使える時間と生徒の興味に応じて、テストとイテレーションのサイクルを必要な回数だけ実行してもいいでしょう。
            Project - App Presentation:
              name: プロジェクト - アプリのプレゼンテーション
              description_student: 各チームは、開発したアプリを「売り込む」ためのプレゼンテーションを準備します。ここで、どの点に苦労したか、何が上手くいったか、そして将来の計画を皆に披露します。
              description_teacher: この時点までに、チームは個人的および社会的に重要なトピックを調査し、紙のプロトタイプとデジタルプロトタイプの両方を開発およびテストし、最初のアプリのイテレーションを複数作成して新しい機能とバグ修正を組み込んだことでしょう。ここでは、何をしたかを振り返り、一貫したプレゼンテーションをまとめて、開発プロセスを披露します。チームは、指定されたプレゼンテーションテンプレートを使って、アプリ開発のプロセスについてプレゼンテーションを行う準備をします。プレゼンテーションには、解決しようとした問題、テストからのフィードバックを組み込んだ方法、および将来の計画などを話してもいいでしょう。
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
            Post-Project Test:
              name: プロジェクト後のテスト
          student_description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
        csd5-2019:
          title: CSDユニット5 - データと社会 ('19～'20)
          description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
          description_short: コンピューターを使ってデータの問題を解決する方法を学びましょう。
          lesson_groups:
            csd5_1:
              display_name: 第1章：情報を表現する
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
          lessons:
            Representation Matters:
              name: 表現が重要
              description_student: この最初のレッスンでは、データとは何か、またデータを使ってどのように問題を解決するかの概要を説明します。グループはデータセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
              description_teacher: この最初のレッスンでは、生徒はデータとは何か、またデータを使ってどのように問題を解決するかの概要を学びます。レッスンの冒頭で、データについての一般的な理解を得るために簡単なディスカッションを行います。次に、グループに別れ、データセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。各グループは、さまざまな方法
                (写真、レシピ、メニュー、栄養) で表される食事から選べ、お勧めの利点が決まります。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
            Patterns and Representation:
              name: パターンと表現
              description_student: このレッスンでは、表現システムを構築するために必要なものは何かを詳しく見ていきます。グループは、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。次に、そのシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。このクラスでは、実用的な解決策が数多くあることを認めながら、稼働中のシステム間に共通点があることについて話し合います。
              description_teacher: このレッスンでは、生徒は情報を表現する独自のシステムを作成します。レッスンの冒頭で、はい/いいえの応答を表すのにすでに使っているさまざまなシステムについてブレインストーミングを行います。次に、小さなグループに別れて作業をし、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。使用するカードには、6種類の絵
                (6匹の動物、6色など) のいずれかが含まれているため、アルファベット全体を表すには、複数のカードのパターンを使って各文字を表す必要があります。生徒は自分のシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。まとめのディスカッションでは、クラスはさまざまなシステムの長所と短所をレビューします。稼働中のシステム間に共通点があることについて話し合い、問題の解決法は数多くあることを認めます。重要なことは、コミュニケーションを行う際、誰もが同じ任意のシステムを使うことです。
            ASCII and Binary Representation:
              name: ASCIIとバイナリ表現
              description_student: このレッスンでは、情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を紹介します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、バイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。
              description_teacher: このレッスンでは、生徒は情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を学習します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、生徒はバイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。レッスンの最後にデブリーフィングを行い、アクティビティの主要な学習目標をまとめるのに役立てます。
            Representing Images:
              name: 画像の表現
              description_student: このレッスンでは、今度は画像を使ってバイナリ表現システムの学習を続け、画像を正方形（または「ピクセル」)
                に分割する概念を説明します。正方形（または「ピクセル」) をそれぞれオンまたはオフにして、画像全体を作成します。ピクセレーションウィジェットを使って短いチャレンジセットを行った後、画像を表現するためのシステムと、前のレッスンで学習したテキストを表現するためのシステムを関連付けます。
              description_teacher: このレッスンでは、コンピューターが画像をどのように表すかを学習します。レッスンを開始するに当たり、複雑なビジョンをバイナリパターンに変える上でどのような課題があるかを検討します。この変換がどのように行われるかを示す一連の画像を通じて、生徒は画像を正方形（または「ピクセル」)
                に分割する概念の説明を受けます。ピクセルそれぞれをオンまたはオフにすると、画像全体を作成できます。次に、生徒はピクセレーションウィジェットを使って短い一連の課題に取り組み、白黒の画像を描画します。パズルは、このように画像を表現する上で直面する課題を取り上げるように設計されています。最後に、生徒は画像を表現するシステムと、前のレッスンで学習したテキストを表現するシステムを関連付けます。
            Representing Numbers:
              name: 数値の表現
              description_student: このレッスンでは2進数システムを紹介します。 2進数 (base-2) の数体系で場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、パターンを一般的な4ビットシステムに拡張します。
              description_teacher: このレッスンでは、生徒は2進数システムを学習します。 2進数 (base-2) の数体系でドットを集めて場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、生徒はパターンを一般的な4ビットシステムに拡張します。
            Keeping Data Secret:
              name: データの秘密を守る
              description_student: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
              description_teacher: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
            Combining Representations:
              name: 表現を組み合わせる
              description_student: このレッスンでは、3種類のバイナリ表現システム (ASCII文字、2進数、およびイメージ) をすべて組み合わせて、より複雑なタイプの情報を記録にエンコードできるようにします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。
              description_teacher: このレッスンで、学生は3種類のバイナリ表現システム (ASCII文字、2進数、および画像 をすべて組み合わせて、記録中の情報をデコードします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。次に、特定の構造に基づいてペットを表す記録をデコードします。
            Project - Create a Representation:
              name: プロジェクト - 表現を作成する
              description_student: クラスは、この章で学習したバイナリ表現システムを使って、完璧な1日を表す構造を設計します。記録にキャプチャしておく必要のある情報を決定したら、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。その後、誰もが学習したASCII、2進数、および画像形式を使って完璧な1日を表現し、パートナーの完璧な1日がどのようなものであるかを解読することを試みます。
              description_teacher: このレッスンでは、この章で学習したバイナリ表現システムを使って、自分の完璧な1日を表現するための構造を設計します。生徒はまず、自分の完璧な1日の短い説明を書き、次にパートナーと一緒にレビューして、コンピューターがキャプチャできると思われる主要な情報を特定します。そしてクラスとして、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。次に、学習したASCII、2進数、および画像形式を使って、完璧な1日を表現します。さらに、生徒はパンチカードを交換し、他の生徒の完璧な1日がどのようなものかを解読することを試みます。レッスンは最後に学んだことを振り返って終わります。
            Problem Solving and Data:
              name: 問題解決とデータ
              description_student: このレッスンでは、特にデータの問題に対処するために問題解決プロセスをどう調整したらよいかを扱います。クラスは、都市はリソースを何に最も費やす必要があるかを決定するタスクを行います。クラスは、インターネットでその決定をサポートするデータを見つけて用いなければなりません。
              description_teacher: このレッスンでは、コース前半の問題解決プロセスを使って、データの問題を解決します。プロセスを確認した後、都市はライブラリ、ペットシェルター、または消防署のどれを構築すべきかを決定するように求められます。生徒はチームで作業してインターネットで情報を収集することで何を構築すべきかを決定してから、この情報を使って持論を展開し、市議会に選択を認めてもらえるように説得します。次に、行った作業がコース全体で使ってきた問題解決プロセスのどこに位置付けられるかを考え、一般的な問題解決プロセスと比較してをこのデータの問題を解決するプロセスはどうだったかを検討します。
            Problem Solving with Big Data:
              name: ビッグデータによる問題解決
              description_student: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかをについて扱います。このクラスでは、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各シナリオには、データを使って同様の問題を解決した実際のサービスに関するビデオも含まれています。
              description_teacher: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかを見ていきます。レッスンは、前のレッスンで調査したデータ問題解決プロセスを簡単におさらいするところから始めます。次に、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各問題は、実在するサービスを反映するように設計されています。ブレインストーミングの後、生徒は実際のサービスに関するビデオを見て、そのサービスによって収集されるデータとその使用方法についてのメモを取ります。レッスンの最後に、データはユーザーが積極的に提供したものか、受動的に記録されたか、またはセンサーによって収集されたものかを記録します。
            Structuring Data:
              name: データの構造化
              description_student: このレッスンでは、生データセットのクリーニングや視覚化など、データの解釈について詳しく見ていきます。クラスはまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べます。クリーニングと視覚化によりより良い意思決定にどのように役立つかを見た後、このプロセスのどの部分を自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
              description_teacher: このレッスンでは、データのクリーニングと視覚化など、データの収集と解釈について学習します。生徒はまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べてから、自分のデータを視覚化します。好きなピザのトッピングに関する調査結果を使って、生徒は選択した視覚化スキームに簡単に適合しないデータをどのように扱うかを決定しなければなりません。最後に、生徒はこのプロセスのどの部分をコンピューターで自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
            Making Decisions with Data:
              name: データを使った決定
              description_student: このレッスンでは、前のレッスンで紹介したデータの問題解決プロセスを実践します。すべての質問に正しい答えがあるとは限りません。場合によっては、クラスはさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
              description_teacher: このレッスンでは、中学生に馴染み深い問題に基づいて、データを使って意思決定を行う練習をします。生徒はグループで作業し、提示されたデータを使って意思決定を行う方法について話し合ってから、クラスで最終的な選択について意見をまとめます。すべての問題に正しい答えがあるとは限りません。場合によっては、生徒はさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
            Interpreting Data:
              name: データの解釈
              description_student: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
              description_teacher: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
            Automating Data Decisions:
              name: データ決定の自動化
              description_student: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
              description_teacher: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
            Project - Solve a Data Problem:
              name: プロジェクト - データの問題を解決する
              description_student: このユニットを締めくくるに当たり、クラスはデータを使って、問題の解決に役立つ推奨または予測を提供する方法を設計します。最初の手順では、問題をブレインストーミングし、簡単な調査を行い、どの問題に取り組むかを決定します。次に、収集するデータの種類、収集方法、および使用方法を決定した後、フィードバックを出し合って最後のプレゼンテーションを行います。
              description_teacher: このユニットを締めくくるに当たって、生徒はクラスメートから収集して分析したデータに基づいてレコメンデーションエンジンを設計します。レコメンデーションアプリの例を見た後、生徒はプロジェクトガイドに従ってこのアクティビティを数日かけて完了します。最初のいくつかの手順では、ユーザーのどのような選択を支援したいか、また推奨事項を与えるために必要なデータを選択し、アンケートを作成して、クラスメートの選択に関する情報を収集します。次に、データを解釈し、学習した内容を使ってレコメンデーションアルゴリズムを作成します。最後に、アルゴリズムを使って、数人のクラスメートに推奨を行います。生徒はピアレビューを行い、プロジェクトに必要な変更を行った後、クラスでプレゼンテーションを行う準備をします。
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
          student_description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
        csd6-2019:
          title: CSDユニット6 - フィジカルコンピューティング ('19～'20)
          description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
          description_short: 物理デバイスでプログラミングする方法を学びます。
          lesson_groups:
            csd6_1:
              display_name: '第 1 章: ハードウェアを使ったプログラミング'
            csd6_2:
              display_name: '第 2 章: 物理プロパティの構築'
            cspSurvey:
              display_name: アンケート
          lessons:
            Innovations in Computing:
              name: コンピューティングにおける革新
            The Circuit Playground:
              name: サーキット プレイグラウンド
            Input Unplugged:
              name: オフラインで入力
            Board Events:
              name: ボードイベント
            Getting Properties:
              name: プロパティの取得
            Analog Input:
              name: アナログ入力
            The Program Design Process:
              name: プログラム設計プロセス
            'Project: Make a Game':
              name: 'プロジェクト: ゲームを作る'
            Arrays and Color LEDs:
              name: 配列とカラーLED
            Arrays and For Loops:
              name: 配列とforループ
            Accelerometer:
              name: 加速度計
            Functions with Parameters:
              name: パラメーター付き関数
            Circuits and Physical Prototypes:
              name: 回路と物理プロトタイプ
            'Project: Prototype an Innovation':
              name: 'プロジェクト: イノベーションのプロトタイプ'
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
          student_description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
        csp4-pilot:
          title: CSPユニット4パイロット - 変数、条件文、関数
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
            required:
              display_name: 概要
            optional_stages:
              display_name: オプションのステージ
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey:
              name: 生徒向けアンケート
            Surveys:
              name: アンケート
            Student Surveys:
              name: 生徒向けアンケート
            'Teacher Surveys: HIDE':
              name: '先生向けアンケート: 非表示'
            Teacher Surveys:
              name: 先生向けアンケート
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
            'Lesson 15: Unit 4 Assessment':
              name: 'レッスン15: ユニット4の評価'
            Unit 4 STUDENT Survey:
              name: ユニット4 生徒向けアンケート
            Unit 4 TEACHER Survey:
              name: ユニット4 先生向けアンケート
            'Lesson 15: Assessment Day':
              name: 'レッスン15: 評価日'
            Project - Decision Maker App - Part 1:
              name: プロジェクト - 意思決定アプリ - パート1
            Project - Decision Maker App - Part 2:
              name: プロジェクト - 意思決定アプリ - パート2
            Project - Decision Maker App - Part 3:
              name: プロジェクト - 意思決定アプリ - パート3
            Project - Decision Maker App Part 1:
              name: プロジェクト - 意思決定アプリ パート1
            Project - Decision Maker App Part 2:
              name: プロジェクト - 意思決定アプリ パート2
            Project - Decision Maker App Part 3:
              name: プロジェクト - 意思決定アプリ パート3
            "[OLD] Variables Make":
              name: "[旧] 変数の作成"
            "[OLD] Conditionals Make":
              name: "[旧] 条件文の作成"
            "[OLD] Functions Make":
              name: "[旧] 関数の作成"
        csp1-2019:
          title: CSPユニット1 - インターネット ('19～'20)
          description: このユニットでは、コンピューターでデジタル情報を表現し、それを人と計算装置の間で転送する必要性から生じる技術的な課題と問題について検討します。次に、このユニットでは、インターネットの構造と設計、および設計で行った決定が与える影響について詳しく見ていきます。
          description_short: 情報をビットとして表現することに関する課題と、そのビットをある場所から別の場所に移す方法を探ります。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csp1_1:
              display_name: '第1章: 情報の表現と送信'
            csp1_2:
              display_name: '第2章: インターネットの発明'
          lessons:
            CS Principles Pre-survey:
              name: CS原則の事前アンケート
            Personal Innovations:
              name: パーソナル イノベーション
            Sending Binary Messages:
              name: バイナリ メッセージを送信
            Sending Binary Messages with the Internet Simulator:
              name: インターネット シミュレータを使用してバイナリ メッセージを送信
            Number Systems:
              name: 番号システム
            Binary Numbers:
              name: 2進数
            Sending Numbers:
              name: 番号を送信する
            Sending Text:
              name: テキストの送信
            Unit 1 Chapter 1 Assessment:
              name: ユニット1 第1章 評価
            The Internet:
              name: インターネット
            The Need for Addressing:
              name: 対処の必要性
            Routers and Redundancy:
              name: ルーターと冗長性
            Packets and Making a Reliable Internet:
              name: パケットと信頼できるインターネットの作成
            The Need for DNS:
              name: DNSの必要性
            HTTP and Abstraction:
              name: HTTPと抽象化
            Practice PT - The Internet and Society:
              name: PTの実践 - インターネットと社会
            Unit 1 Chapter 2 Assessment:
              name: ユニット1 第2章 評価
          student_description: このユニットでは、コンピューターでデジタル情報を表現し、それを人と計算装置の間で転送する必要性から生じる技術的な課題と問題について検討します。次に、このユニットでは、インターネットの構造と設計、および設計で行った決定が与える影響について詳しく見ていきます。
        csp2-2019:
          title: CSPユニット2 - デジタル情報 ('19～'20)
          description: このユニットでは、デジタル情報をエンコード、表現、操作する方法をさらに探ります。データをデジタルで操作して視覚化し、パターン、傾向、および潜在的な意味をつかむスキルは、コンピューター
            サイエンティストが毎日使っている重要な実践的スキルです。ユニットでは主に、データの出所を理解し、そこから何を学んだり抽出したりできるかを直観的に理解し、計算ツールを使ってデータを操作および伝達するスキルについて学びます。
          description_short: より複雑なデジタル情報をどのように表現し、計算と視覚化によって操作するかを詳しく見ていきましょう。
          lesson_groups:
            csp2_1_2018:
              display_name: '第 2 章: デジタル情報'
            cspAssessment:
              display_name: 章の評価
            cspSurvey:
              display_name: アンケート
          lessons:
            Bytes and File Sizes:
              name: バイトとファイルサイズ
            Text Compression:
              name: テキスト圧縮
            Encoding B&W Images:
              name: 白黒画像のエンコード
            Encoding Color Images:
              name: カラー画像のエンコード
            Lossy vs Lossless Compression:
              name: 非可逆圧縮と可逆圧縮
            Rapid Research - Format Showdown:
              name: 迅速な調査 - フォーマットの対決
            Unit 2 Assessment:
              name: ユニット2 評価
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
          student_description: このユニットでは、デジタル情報をエンコード、表現、操作する方法をさらに探ります。データをデジタルで操作して視覚化し、パターン、傾向、および潜在的な意味をつかむスキルは、コンピューター
            サイエンティストが毎日使っている重要な実践的スキルです。ユニットでは主に、データの出所を理解し、そこから何を学んだり抽出したりできるかを直観的に理解し、計算ツールを使ってデータを操作および伝達するスキルについて学びます。
        csp3-2019:
          title: CSPユニット3 - プログラミング入門 ('19～'20)
          description_short: 古典的な亀の絵を使ったトップダウンの設計アプローチを通じて、JavaScriptのプログラミングの基本を学びます。
          lesson_groups:
            csp3_1_2018:
              display_name: 'ユニット3: プログラミング入門'
            cspAssessment:
              display_name: 章の評価
            cspSurvey:
              display_name: アンケート
          lessons:
            The Need For Programming Languages:
              name: プログラミング言語の必要性
            The Need for Algorithms:
              name: アルゴリズムの必要性
            Creativity in Algorithms:
              name: アルゴリズムの創造性
            Using Simple Commands:
              name: 単純なコマンドの使用
            Creating Functions:
              name: 関数の作成
            Functions and Top-Down Design:
              name: 関数とトップダウン設計
            APIs and Function Parameters:
              name: APIと関数パラメータ
            Creating functions with Parameters:
              name: パラメータを使って関数を作成する
            Looping and Random Numbers:
              name: ループと乱数
            Practice PT - Design a Digital Scene:
              name: PTの練習 - デジタルシーンのデザイン
            Unit 3 Chapter 1 Assessment:
              name: ユニット3 第1章 評価
            Mid-Year Survey:
              name: 中間アンケート
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
        csp4-2019:
          title: CSPユニット4 - ビッグデータとプライバシー ('19～'20)
          description: 私たちが住んでいるデータが豊富な世界では、公共政策、法律、倫理、社会的影響に関する複雑な問題が数多く横たわっています。このユニットの目標は、データのプラスとマイナスの影響を含め、世界のデータに関してバランスの取れた見方を養い、最新の暗号化がなぜ・どのように機能するかの基本を理解することにあります。
          description_short: 私たちが住んでいるデータが豊富な世界を探索し、データが公共政策、個人のプライバシー、セキュリティ、法律、倫理にどのように影響するかを探ります。
          lesson_groups:
            csp4_1_2018:
              display_name: 'ユニット4: ビッグデータとプライバシー'
            cspAssessment:
              display_name: 章の評価
            optional:
              display_name: オプション
            cspSurvey:
              display_name: アンケート
          lessons:
            What is Big Data?:
              name: ビッグデータとは？
            Finding Trends with Visualizations:
              name: 視覚化でトレンドを見つける
            Check Your Assumptions:
              name: 仮定を確認
            Rapid Research - Data Innovations:
              name: 迅速な研究 - データイノベーション
            Identifying People with Data:
              name: データで人を識別する
            The Cost of Free:
              name: 無料のコスト
            Simple Encryption:
              name: 単純な暗号化
            Encryption with Keys and Passwords:
              name: キーとパスワードによる暗号化
            Public Key Crypto:
              name: パブリックキー暗号
            Rapid Research - Cybercrime:
              name: 迅速な研究 - サイバー犯罪
            Unit 4 Assessment:
              name: ユニット4 評価
            Mid-Year Survey:
              name: 中間アンケート
            'Optional: Data Questions':
              name: 'オプション: データに関する質問'
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
          student_description: 私たちが住んでいるデータが豊富な世界では、公共政策、法律、倫理、社会的影響に関する複雑な問題が数多く横たわっています。このユニットの目標は、データのプラスとマイナスの影響を含め、世界のデータに関してバランスの取れた見方を養い、最新の暗号化がなぜ・どのように機能するかの基本を理解することにあります。
        csp5-2019:
          title: CSPユニット5 - アプリの構築 ('19～'20)
          description: このユニットでは、コンピュータープログラミングの基本的な概念の紹介を続けます。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このコースでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
          description_short: リッチでインタラクティブなアプリを作成することにより、JavaScriptでのコンピュータープログラミングの基本的な概念を引き続き学習します。
          lesson_groups:
            csp5_1:
              display_name: '第1章: イベント駆動型プログラミング'
            csp5_2:
              display_name: '第2章: データ構造を使用したプログラミング'
            cspSurvey:
              display_name: アンケート
          lessons:
            Buttons and Events:
              name: ボタンとイベント
            Multi-screen Apps:
              name: マルチスクリーンアプリ
            'Building an App: Multi-Screen App':
              name: 'アプリの構築: マルチスクリーンアプリ'
            Controlling Memory with Variables:
              name: 複合条件文ロジック
            'Building an App: Clicker Game':
              name: 'アプリの構築: クリッカーゲーム'
            Unit 5 Assessment 1:
              name: ユニット5 評価1
            User Input and Strings:
              name: ユーザー入力と文字列
            '"If" Statements Unplugged':
              name: オフラインで学ぶ「If」文
            Boolean Expressions and "If" Statements:
              name: ブール式と「if」文
            '"if-else-if" and Conditional Logic':
              name: "「if - else - if」と条件付きロジック"
            'Building an App: Color Sleuth':
              name: 'アプリの構築: Color Sleuth'
            Unit 5 Assessment 2:
              name: ユニット5 評価2
            While Loops:
              name: Whileループ
            Loops and Simulations:
              name: ループとシミュレーション
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'アプリの構築: 画像スクローラー'
            Unit 5 Assessment 3:
              name: ユニット5 評価3
            Processing Arrays:
              name: 配列の処理
            Functions with Return Values:
              name: 戻り値付き関数
            'Building an App: Canvas Painter':
              name: 'アプリの構築: カンバス ペインター'
            Unit 5 Assessment 4:
              name: ユニット5 評価4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: ユニット5 評価5 - AP疑似コードの練習問題
            Mid-Year Survey:
              name: 中間アンケート
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
          student_description: このユニットでは、コンピュータープログラミングの基本的な概念の紹介を続けます。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このコースでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
        csp-explore-2019:
          title: 探索 - APパフォーマンスタスクの準備 ('19～'20)
          description: 'このレッスンは、AP探索パフォーマンスタスクを理解し、準備し、実行するのに役立ちます。各「レッスン」には役に立つドキュメントへのリンクが含まれており、先生が説明して理解するのを助けてくれます。注:
            最初のレッスンの2番目の項目は、PTの探索に直接関連していませんが、探索タスクと作成タスクのさまざまな要素に必要な一般的な技術的な設定とツールについて説明しています。'
          description_short: 生徒がAP探索パフォーマンスタスクを準備して完了するのを助けるレッスンとリソース。
          lesson_groups:
            csp_ap_2:
              display_name: '第2章: AP パフォーマンスタスクの探索'
            cspSurvey:
              display_name: アンケート
          lessons:
            Explore PT Prep - Reviewing the Task:
              name: PT準備の調査 - タスクの確認
            Explore PT - Making a Plan:
              name: PTの探索 - 計画の立案
            Explore PT - Complete the Task:
              name: PTの探索 - タスクの完了
            Mid-Year Survey:
              name: 中間アンケート
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
          student_description: 'このレッスンは、AP探索パフォーマンスタスクを理解し、準備し、実行するのに役立ちます。各「レッスン」には役に立つドキュメントへのリンクが含まれており、先生が説明して理解するのを助けてくれます。注:
            最初のレッスンの2番目の項目は、PTの探索に直接関連していませんが、探索タスクと作成タスクのさまざまな要素に必要な一般的な技術的な設定とツールについて説明しています。'
        csp-create-2019:
          title: 作成 - APパフォーマンスタスクの準備 ('19～'20)
          description: 'このレッスンは、AP作成パフォーマンスタスクを理解し、準備し、実行するのに役立ちます。各「レッスン」には役に立つドキュメントへのリンクが含まれており、先生が説明して理解するのを助けてくれます。注:
            最初のレッスンの1番目の項目は、PTの探索に直接関連していませんが、作成タスクと作成タスクのさまざまな要素に必要な一般的な技術的な設定とツールについて説明しています。'
          description_short: 生徒がAP作成パフォーマンスタスクを準備して完了するのを助けるレッスンとリソース。
          lesson_groups:
            csp_ap_3:
              display_name: '第3章: AP パフォーマンスタスクの作成'
            cspSurvey:
              display_name: アンケート
          lessons:
            Create PT Prep - Reviewing the Task:
              name: PT準備の作成 - タスクの確認
            Create PT Prep - Making a Plan:
              name: PT準備の作成 - 計画の作成
            Create PT - Complete the Task:
              name: PTの作成 - タスクの完了
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
          student_description: 'このレッスンは、AP作成パフォーマンスタスクを理解し、準備し、実行するのに役立ちます。各「レッスン」には役に立つドキュメントへのリンクが含まれており、先生が説明して理解するのを助けてくれます。注:
            最初のレッスンの1番目の項目は、PTの探索に直接関連していませんが、作成タスクと作成タスクのさまざまな要素に必要な一般的な技術的な設定とツールについて説明しています。'
        csppostap-2019:
          title: AP後 - データツール ('19～'20)
          description_short: アプリラボ アプリでデータを収集して使用する方法を学びましょう。
          lesson_groups:
            csp_postap_1:
              display_name: '第1章: データの操作と視覚化'
            csp_postap_2:
              display_name: '第2章: アプリとデータベース'
            cspSurvey:
              display_name: アンケート
          lessons:
            Intro to Data:
              name: データ入門
            Good and Bad Data Visualizations:
              name: 良いデータと悪いデータの視覚化
            Making Data Visualizations:
              name: データの視覚化
            Discover a Data Story:
              name: データストーリーの発見
            Cleaning Data:
              name: データのクリーニング
            Creating Summary Tables:
              name: サマリーテーブルの作成
            Project - Tell a Data Story:
              name: プロジェクト - データストーリーを伝える
            Chapter 1 Assessment:
              name: 第1章 評価
            Creating Javascript Objects:
              name: JavaScriptオブジェクトの作成
            Permanent Data Storage:
              name: 永続的なデータストレージ
            Reading Records:
              name: レコードを読む
            Deleting Records:
              name: レコードの削除
            Updating Records:
              name: レコードの更新
            Importing and Exporting Data:
              name: データのインポートとエクスポート
            Visualizing Data:
              name: データの視覚化
            Sample Apps:
              name: サンプルアプリ
            Final Project:
              name: 最終プロジェクト
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
        csp1-pilot:
          title: CSPユニット1パイロット - デジタル情報
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            required:
              display_name: 概要
          lessons:
            new stage:
              name: 新しいステージ
            Number Systems:
              name: 番号システム
            Bit Sending Device:
              name: ビット送信デバイス
            Flippy Do Pt 1:
              name: Flippy Do パート 1
            Flippy Do Pt 2:
              name: Flippy Do パート 2
            Sending Text:
              name: テキストの送信
            Black and White Images:
              name: 白黒画像
            Color Images:
              name: カラー画像
            Lossless Compression:
              name: 可逆圧縮
            Welcome to CSP:
              name: CSPへようこそ
            Sending Binary Messages:
              name: バイナリ メッセージを送信
            Sending Binary Messages with the Internet Simulator:
              name: インターネット シミュレータを使用してバイナリ メッセージを送信
            AB Patterns:
              name: ABパターン
            Flippy Do, pt. 1:
              name: Flippy Do、パート1
            Flippy Do, pt. 2:
              name: Flippy Do、パート2
            Lossy Compression:
              name: 不可逆圧縮
            Intellectual Property:
              name: 知的財産
            'Project: Digital Information Dilemmas, pt. 1':
              name: 'プロジェクト: デジタル情報ジレンマ、パート1'
            'Project: Digital Information Dilemmas, pt. 2':
              name: 'プロジェクト: デジタル情報ジレンマ、パート2'
            Unit Assessment:
              name: ユニット評価
            Flippy Do, pt 1:
              name: Flippy Do、パート1
            Flippy Do, pt 2:
              name: Flippy Do、パート2
            'Project: Digital Information Dilemmas, pt 1':
              name: 'プロジェクト: デジタル情報ジレンマ、パート1'
            'Project: Digital Information Dilemmas, pt 2':
              name: 'プロジェクト: デジタル情報ジレンマ、パート2'
            CS Principles Pre-survey:
              name: CS原則の事前アンケート
            Binary Numbers:
              name: 2進数
            Overflow and Rounding:
              name: オーバーフローと四捨五入
            CS Principles Unit 1 Survey:
              name: CS原則 ユニット1アンケート
            Unit 1 Survey:
              name: ユニット1アンケート
            'Lesson 15: Unit Assessment':
              name: 'レッスン15: ユニットの評価'
            Unit 1 STUDENT Survey:
              name: ユニット1 生徒向けアンケート
            Unit 1 TEACHER Survey:
              name: ユニット1 先生向けアンケート
            'Lesson 14: Unit Assessment':
              name: 'レッスン14: ユニットの評価'
            Representing Information:
              name: 情報の表現
            Representing Text:
              name: テキストの表現
            Circle Square Patterns:
              name: サークルスクエアパターン
            'Lesson 14: Assessment Day':
              name: 'レッスン14: 評価日'
            'Project: Digital Information Dilemmas Part 1':
              name: 'プロジェクト: デジタル情報ジレンマ パート1'
            'Project: Digital Information Dilemmas Part 2':
              name: 'プロジェクト: デジタル情報ジレンマ パート2'
            Project - Digital Information Dilemmas Part 1:
              name: プロジェクト - デジタル情報ジレンマ パート1
            Project - Digital Information Dilemmas Part 2:
              name: プロジェクト - デジタル情報ジレンマ パート2
        csd-tests:
          title: CSDのプロジェクト後テスト
          lessons:
            Computers and Problem Solving:
              name: 章コンピューターと問題解決
            Interactive Animations and Games:
              name: インタラクティブなアニメーションとゲーム
        csd-videos:
          title: CSDビデオ
          description_short: CS発見のすべてのビデオ
          description: CS発見のすべてのビデオ
          lessons:
            new stage:
              name: 新しいステージ
            Problem Solving and Computers:
              name: 問題解決とコンピューター
            Games and Animations:
              name: ゲームとアニメーション
            User Centered Design:
              name: ユーザー中心設計
            Data and Society:
              name: データと社会
            Physical Computing:
              name: 物理コンピューティング
          student_description: CS発見のすべてのビデオ
        time4csdemo:
          title: Time4CS フロリダの多様性
          description_audience: 4年生
          description_short: このモジュールでは、4年生の科学と社会の学習基準に焦点を当てます。科学では、生息地、生態系、在来種、外来種を含む生活水準を見ます。社会科では、生徒はフロリダ州政府の支部と、市民が地域や州の政策にどのように影響を与えることができるかを考えます。
          description: このモジュールでは、4年生の科学と社会の学習基準に焦点を当てます。科学では、生息地、生態系、在来種、外来種を含む生活水準を見ます。社会科では、生徒はフロリダ州政府の支部と、市民が地域や州の政策にどのように影響を与えることができるかを考えます。
          lesson_groups:
            ramp_up:
              display_name: ランプアップ
            csf_sprites:
              display_name: スプライト
            time4cs_c1:
              display_name: 'コレクション1: エバーグレーズとその生態系'
            time4cs_c2:
              display_name: 'コレクション2: 食物連鎖 (エバーグレーズ)'
            time4cs_c3:
              display_name: 'コレクション3: 在来種 (エバーグレーズ)'
            time4cs_c4:
              display_name: 'コレクション4: 外来種の影響 (エバーグレーズ)'
            time4cs_c5:
              display_name: 'コレクション5: 市民が行動する'
          lessons:
            Introduction to the Problem:
              name: 問題の紹介
            Crowdsourcing:
              name: クラウドソーシング
            Everglades Habitats:
              name: エバーグレーズ ハビタット
            Reviewing Projects:
              name: プロジェクトのレビュー
            Food Chains:
              name: 食物連鎖
            Conditionals with Cards:
              name: カードと条件
            Alligator Holes:
              name: アリゲーター ホール
            Conditionals in Sprite Lab:
              name: スプライトラボで学ぶ条件文
            'Programming: My Robotic Friends':
              name: 'プログラミング: ロボティック フレンド'
            Sequence in Maze:
              name: 迷路で学ぶシーケンス
            Building a Foundation:
              name: ピラミッドをたてよう
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee/Zombie:
              name: みつばち/ゾンビと学ぶ入れ子のループ
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            Learning Sprites with Sprite Lab:
              name: スプライトラボで学ぶスプライト
            Alien Dance Party with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
            Pet Giraffe with Sprite Lab:
              name: スプライトラボでのペットのキリン
            Build a Flappy Game:
              name: フラッピーゲームを構築する
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
            Invasive Species:
              name: 外来種
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            I'm in Big Trouble:
              name: 大きなトラブルに巻き込まれています
            Events in Sprite Lab:
              name: スプライトラボで学ぶイベント
            Fishy Business:
              name: うさんくさいビジネス
            Broadcast a Message:
              name: メッセージをブロードキャストする
            Pythons & Mammals:
              name: パイソンとほ乳類
            Broadcast in Scratch:
              name: スクラッチで行うブロードキャスト
            Current Solutions:
              name: 現在のソリューション
            'Functions: Songwriting':
              name: '関数: 作曲'
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
            Functions in Harvester:
              name: 農夫と学ぶ関数
            Functions in Artist:
              name: アーティストと学ぶ関数
            Determine the Concept:
              name: コンセプトの決定
            Debate:
              name: ディベート
            Functions in Sprite Lab:
              name: スプライトラボで学ぶ関数
            I'm in Big Trouble!:
              name: 大きなトラブルに巻き込まれています！
            I am in Big Trouble:
              name: 大きなトラブルに巻き込まれています
          student_description: このモジュールでは、4年生の科学と社会の学習基準に焦点を当てます。科学では、生息地、生態系、在来種、外来種を含む生活水準を見ます。社会科では、生徒はフロリダ州政府の支部と、市民が地域や州の政策にどのように影響を与えることができるかを考えます。
        csp1-pilot-staging:
          title: 'ユニット1: ビットとバイト'
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
        csp2-pilot-staging:
          title: 'ユニット2: インターネット'
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
        csp3-pilot-staging:
          title: 'ユニット3: アプリ開発入門'
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
            Introduction to Apps:
              name: アプリの紹介
            'Project: Designing an App, pt. 1':
              name: 'プロジェクト: アプリの設計、パート1'
            'Project: Designing an App, pt. 2':
              name: 'プロジェクト: アプリの設計、パート2'
            Programs Investigate:
              name: プログラム 調査
            Programs Practice:
              name: プログラム 練習
            'Project: Designing an App, pt. 3':
              name: 'プロジェクト: アプリの設計、パート3'
            'Project: Designing an App, pt. 4':
              name: 'プロジェクト: アプリの設計、パート4'
            'Project: Share Your App':
              name: 'プロジェクト: アプリの共有'
            'Project: Designing an App pt. 1':
              name: 'プロジェクト: アプリの設計 パート1'
            'Project: Designing an App pt. 2':
              name: 'プロジェクト: アプリの設計 パート2'
            Project - Designing an App Part 1:
              name: プロジェクト - アプリの設計 パート1
            Project - Designing an App Part 2:
              name: プロジェクト - アプリの設計 パート2
            Project - Designing an App Part 3:
              name: プロジェクト - アプリの設計 パート3
            Project - Designing an App Part 4:
              name: プロジェクト - アプリの設計 パート4
            The Need for Programming Languages:
              name: プログラミング言語の必要性
        csp4-pilot-staging:
          title: 'ユニット4: 変数、条件文、関数'
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
        csp5-pilot-staging:
          title: 'ユニット5: リスト、ループ、トラバーサル'
          lesson_groups:
            csp_lists:
              display_name: リスト
            csp_loops:
              display_name: くりかえし
            csp_traversals:
              display_name: トラバーサル
            csp_project:
              display_name: プロジェクト
            csp_libraries:
              display_name: ライブラリ
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
            Lists Explore:
              name: リスト 探索
            Lists Investigate:
              name: リスト 調査
            Loops Explore:
              name: ループ 探検
            Traversals Explore:
              name: トラバーサル 探索
            Lists Practice:
              name: リスト 練習
            'Loops Practice: While Loops':
              name: 'ループ 練習: Whileループ'
            'Loops Practice: Simulations':
              name: 'ループ 練習: シミュレーション'
            Lists Make:
              name: リスト 作成
            Traversals Investigate:
              name: トラバーサル 調査
            Traversals Practice:
              name: トラバーサル 練習
            Traversals Make:
              name: トラバーサル 作成
            Unit 5 Mini Assessment:
              name: ユニット5 ミニ評価
            Mini PT:
              name: ミニPT
            Student Survey (Lists):
              name: 生徒向けアンケート (リスト)
            Teacher Survey (Lists):
              name: 先生アンケート (リスト)
            Student Survey (Traversals):
              name: 生徒向けアンケート (トラバーサル)
            Teacher Survey (Traversals):
              name: 先生向けアンケート (トラバーサル)
            Student Survey (Mini PT):
              name: 生徒向けアンケート (ミニPT)
            Loops Investigate and Practice:
              name: ループの調査と練習
            Libraries Explore:
              name: ライブラリ 探索
            Libraries Investigate:
              name: ライブラリ 調査
            Student Survey (Libraries):
              name: 生徒向けアンケート (ライブラリ)
            Teacher Survey (Libraries):
              name: 先生向けアンケート (ライブラリ)
        csp6-pilot-staging:
          title: 'ユニット6: アルゴリズム'
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
        csp7-pilot-staging:
          title: 'ユニット7: 関数とライブラリ'
          lesson_groups:
            csp_parameters_return_values:
              display_name: パラメータと戻り値
            csp_libraries:
              display_name: ライブラリ
          lessons:
            new stage:
              name: 新しいステージ
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
            Functions with Parameters and Return Explore:
              name: パラメータ付きの関数とReturn 探索
            Libraries:
              name: ライブラリ
            Parameters and Return Values Explore:
              name: パラメータと戻り値 探索
            Parameters and Return Values Investigate:
              name: パラメータと戻り値 調査
            Parameters and Return Values Practice:
              name: パラメータと戻り値 練習
            Libraries Explore:
              name: ライブラリ 探索
            Libraries Investigate:
              name: ライブラリ 調査
            Libraries Mini PT:
              name: ライブラリ ミニPT
            Student Survey (Lists):
              name: 生徒向けアンケート (リスト)
            Teacher Survey (Lists):
              name: 先生アンケート (リスト)
            Student Survey (Libraries):
              name: 生徒向けアンケート (ライブラリ)
            Teacher Survey (Libraries):
              name: 先生向けアンケート (ライブラリ)
            Libraries Project:
              name: ライブラリプロジェクト
        csp8-pilot-staging:
          title: 'ユニット8: PTの作成'
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
        csp9-pilot-staging:
          title: 'ユニット9: データ'
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
        csp10-pilot-staging:
          title: 'ユニット10: グローバルインパクト'
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Student Survey (Variables):
              name: 生徒向けアンケート (変数)
            Teacher Surveys (Variables):
              name: 先生向けアンケート (変数)
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Student Survey (Conditionals):
              name: 生徒向けアンケート (条件文)
            Teacher Surveys (Conditionals):
              name: 先生向けアンケート (条件付き)
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            Unit 4 Assessment:
              name: ユニット4 評価
        pluralsight:
          title: Pluralsight Oneにアクセスする
        express-2018-vn:
          title: ベトナム向けエクスプレス (2018)
          lessons:
            Graph Paper Programming:
              name: グラフ用紙のプログラミング
            Programming in Maze:
              name: めいろ のプログラミング
            Loops with Rey and BB-8:
              name: レイとBB-8と学ぶループ
        csd-post-survey-2018:
          title: CSD生徒 コース後アンケート ('18～'19)
          description_audience: CSD生徒
          description_short: CSD生徒向けコース後アンケート2018
          description: "CS発見 コース後アンケートは、お客様からフィードバックを得てコースを改善するための重要なツールです。 \nアンケートは非公開で匿名で行われます。先生はクラス全体の匿名の集計結果を確認できます。結果は、先生とCode.orgがコースを保ち、より良くするために不可欠です。ご協力よろしくお願いします。"
          lesson_groups:
            cspSurvey:
              display_name: アンケート
          lessons:
            CSD post-course survey:
              name: CSD生徒 コース後アンケート ('18～'19)
          student_description: "CS発見 コース後アンケートは、お客様からフィードバックを得てコースを改善するための重要なツールです。
            \nアンケートは非公開で匿名で行われます。先生はクラス全体の匿名の集計結果を確認できます。結果は、先生とCode.orgがコースを保ち、より良くするために不可欠です。ご協力よろしくお願いします。"
        csp-post-survey-2018:
          title: CSP生徒向けコース後アンケート ('18～'19)
          description_audience: CSP生徒
          description_short: CSP生徒向けコース後の調査
          description: Code.org CS原則コース後アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
          lessons:
            CSP post-course survey:
              name: CSP生徒向けコース後アンケート ('18～'19)
          student_description: Code.org CS原則コース後アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
        csp5-pilot:
          title: CSPユニット5パイロット - リスト、ループ、トラバーサル
          lesson_groups:
            csp_lists:
              display_name: リスト
            csp_loops:
              display_name: くりかえし
            csp_traversals:
              display_name: トラバーサル
            csp_project:
              display_name: プロジェクト
            required:
              display_name: 概要
            optional_stages:
              display_name: オプションのステージ
          lessons:
            new stage:
              name: 新しいステージ
            Lists Explore:
              name: リスト 探索
            Lists Investigate:
              name: リスト 調査
            Lists Practice:
              name: リスト 練習
            Lists Make:
              name: リスト 作成
            Loops Explore:
              name: ループ 探検
            'Loops Practice: While Loops':
              name: 'ループ 練習: Whileループ'
            'Loops Practice: Simulations':
              name: 'ループ 練習: シミュレーション'
            Traversals Explore:
              name: トラバーサル 探索
            Traversals Investigate:
              name: トラバーサル 調査
            Traversals Practice:
              name: トラバーサル 練習
            Traversals Make:
              name: トラバーサル 作成
            Student Survey (Lists):
              name: 生徒向けアンケート (リスト)
            Student Survey (Traversals):
              name: 生徒向けアンケート (トラバーサル)
            Unit 5 Mini Assessment:
              name: ユニット5 ミニ評価
            Mini PT:
              name: ミニPT
            Teacher Survey (Lists):
              name: 先生アンケート (リスト)
            Teacher Survey (Traversals):
              name: 先生向けアンケート (トラバーサル)
            Student Survey (Mini PT):
              name: 生徒向けアンケート (ミニPT)
            Loops Investigate and Practice:
              name: ループの調査と練習
            Parameters and Return Values Explore:
              name: パラメータと戻り値 探索
            Parameters and Return Values Investigate:
              name: パラメータと戻り値 調査
            Parameters and Return Values Practice:
              name: パラメータと戻り値 練習
            App Lab Experiments Dashboard:
              name: アプリラボの実験ダッシュボード
            Libraries Explore:
              name: ライブラリ 探索
            Libraries Investigate:
              name: ライブラリ 調査
            Libraries Project:
              name: ライブラリプロジェクト
            Student Survey (Libraries):
              name: 生徒向けアンケート (ライブラリ)
            Teacher Survey (Libraries):
              name: 先生向けアンケート (ライブラリ)
            Loops Investigate:
              name: ループ調査
            Loops Practice:
              name: ループ練習
            Loops Make:
              name: ループの作成
            Semester Hackathon Part 1:
              name: セメスターハッカソン パート1
            Semester Hackathon Part 2:
              name: セメスターハッカソン パート2
            Semester Hackathon Part 3:
              name: セメスターハッカソン パート3
            Semester Hackathon Part 4:
              name: セメスターハッカソン パート4
            Semester Hackathon Part 5:
              name: セメスターハッカソン パート5
            Unit 5 Assessment:
              name: ユニット5 評価
            Semester Exam:
              name: 学期末試験
            'Lesson 13: Assessment Day':
              name: 'レッスン13: 評価日'
            Unit 5 STUDENT Survey:
              name: ユニット5 生徒向けアンケート
            Unit 5 TEACHER Survey:
              name: ユニット5 先生向けアンケート
            'Lesson 18: Assessment Day':
              name: 'レッスン18: 評価日'
            "[OLD] Lists Make":
              name: "[旧] リストの作成"
            "[OLD] Loops Make":
              name: "[旧] ループの作成"
            "[OLD] Traversals Make":
              name: "[旧] トラバーサルの作成"
        fit2019-novice:
          title: 夏のワークショップ2019の初心者用復習資料
          description_audience: 6 - 12トレーニング中の初心者ファシリテーター
          description_short: トレーニング中の2019ファシリテーター向けの初心者用復習資料
          description: これは、Code.orgファシリテーターが5日間の夏のワークショップでトレーニングするための初心者用復習資料です。この中で、対面式の5日間の夏のワークショップの毎日の復習プロンプトが表示されます。これらの質問は、ファシリテータートレーニングワークショップで行う作業の基礎となります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Novice Reflection Overview:
              name: 初心者の省察の概要
            Day 1:
              name: 1日目
            Day 2:
              name: 2日目
            Day 3:
              name: 3日目
            Day 4:
              name: 4日目
            Wrap Up:
              name: まとめ
          student_description: これは、Code.orgファシリテーターが5日間の夏のワークショップでトレーニングするための初心者用復習資料です。この中で、対面式の5日間の夏のワークショップの毎日の復習プロンプトが表示されます。これらの質問は、ファシリテータートレーニングワークショップで行う作業の基礎となります。
        csd-test-saving-state:
          title: オンラインアクティビティのサンプル
          lessons:
            csd digital unplugged WIAC L3:
              name: csdデジタルオフラインWIAC L3
            Problem Solving Process:
              name: 問題解決プロセス
        fit2019-apprentice:
          title: 夏のワークショップ2019の見習い用復習資料
          description_audience: 6 - 12トレーニング中の見習いファシリテーター
          description_short: トレーニング中の2019ファシリテーター向けの見習い用復習資料
          description: これは、Code.orgファシリテーターが5日間の夏のワークショップでトレーニングするための見習い用復習資料です。この中で、対面式の5日間の夏のワークショップの毎日の復習プロンプトが表示されます。これらの質問は、ファシリテータートレーニングワークショップで行う作業の基礎となります。
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Apprentice Reflection Overview:
              name: 見習いの省察の概要
            Day 1:
              name: 1日目
            Day 2:
              name: 2日目
            Day 3:
              name: 3日目
            Day 4:
              name: 4日目
            Wrap Up:
              name: まとめ
          student_description: これは、Code.orgファシリテーターが5日間の夏のワークショップでトレーニングするための見習い用復習資料です。この中で、対面式の5日間の夏のワークショップの毎日の復習プロンプトが表示されます。これらの質問は、ファシリテータートレーニングワークショップで行う作業の基礎となります。
        csd-sample-online:
          title: CS発見のオンラインアクティビティのサンプル
          lessons:
            What is a Computer? - sample progression:
              name: コンピューターとは何か？ - 進行のサンプル
            Problem Solving Process - sample activities:
              name: 問題解決プロセス - サンプルアクティビティ
        csd1-pilot:
          title: CSDユニット1 - 問題解決 (パイロット版)
          description_short: 人が問題を解決するためにコンピューターを使ってどのように作業をするかを学びます。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csd1_1:
              display_name: '第 1章: 問題解決プロセス'
            csd1_2:
              display_name: 第 2 章コンピューターと問題解決
          lessons:
            CS Discoveries Pre-survey:
              name: CS発見の事前アンケート
            Intro to Problem Solving:
              name: 問題解決入門
              description_student: クラスはグループで作業し、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。
              description_teacher: このレッスンでは、生徒がグループで作業して、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。ボートの設計は2ラウンドあり、ラウンド1よりも多くのコインを載せることを目指します。アクティビティは、以降のレッスンで問題解決プロセスのさまざまな手順をより詳細に学ぶことが分かるように組み立てられています。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: このレッスンでは、クラスが年間を通して使用する正式な問題解決プロセスである、定義 - 準備 -
                試行 - 反映を紹介します。クラスは、この手順を前のレッスンのアルミ製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。
              description_teacher: このレッスンでは、生徒が年間を通して使用する正式な問題解決プロセスである、定義 - 準備 -
                試行 - 反映を紹介します。レッスンは、生徒が日常生活で遭遇するさまざまな種類の問題すべてについてブレインストーミングを行うように求めることから始まります。次に、生徒は問題解決プロセスの4つの手順を示し、協力してこの抽象的な手順を問題解決の実際の経験に関連付けます。最初の生徒は、この手順を前のレッスンのアルミニウム製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。
            Exploring Problem Solving:
              name: 問題解決の探求
              description_student: このレッスンでは、クラスは問題解決プロセスを、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。
              description_teacher: このレッスンでは、各手順の重要性をよりよく理解するために、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に問題解決プロセスを適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。レッスンは、生徒たちが問題解決プロセスでの経験を振り返って締めくくります。往々にしてこれは最も重要な手順であるため、各手順をなぜ含めるのかを考え、自由回答式の問題により良く対処するのに役立つ戦略や問題についてブレインストーミングします。最初の2つの問題は2クラス分に収まるかもしれませんが、3番目の問題は2日目に取り組む必要があるでしょう。
            What is a Computer?:
              description_student: このレッスンでは、クラスでコンピューターの予備的な定義を作成します。コンピューターの考えられる定義についてブレインストーミングを行った後、クラスはグループで作業し、ポスター用紙で写真を「コンピューターである」または「コンピューターではない」に分類し、最も難しいカテゴリのいくつかを選択する動機を説明します。次に、先生はコンピューターの定義を導入し、グループが新しい定義に従ってポスターを修正できるようにします。
              description_teacher: "このレッスンでは、生徒は「コンピューター」とは何かを考えます。レッスンを開始したら、コンピューターの考えられる定義をブレインストーミングし、このブレインストーミングの結果をボードに配置します。次に、生徒はグループで作業して、ポスター用紙で写真を「コンピューター」か「コンピューターではない」かに分類します。グループはポスターを部屋の周りに配置し、なぜそのように分類したかを簡単に説明します。次に、先生はコンピューターの定義を紹介し、生徒に新しい定義に従ってポスターを修正してもらいます。\\\r"
            Input and Output:
              name: 入出力
              description_student: 生徒はこのクラスで、いくつものコンピューティングデバイスについて考え、使用する入力と出力のタイプを決定します。グループには1つのコンピューティングデバイスが割り当てられ、先生が示す入力と出力の定義に基づいて、デバイスの入力と出力をリストします。レッスンの最後に、コンピューティングデバイスで一般的にどのような操作をするかを検討し、その操作に使用する入力と出力をグラフから選択します。
              description_teacher: 生徒はこのレッスンで、いくつものコンピューティングデバイスについて考え、使用する入力と出力のタイプを決定します。グループには1つのコンピューティングデバイスが割り当てられ、先生が示す入力と出力の定義に基づいて、デバイスの入力と出力をリストします。アクティビティの前半では、より明白な物理的な入力と出力
                (たとえば、入力としてのキーボードまたは出力としての画面) に注目するように促されますが、後半の話し合いでは、あまり明白でない例 (たとえば、タッチスクリーンは入力であると同時に出力でもあること、またはインターネットが入力と出力の両方として機能できるという事実)
                を検討していきます。レッスン全体を通じて、先生は教壇に掲げたTチャートに、特定した入力と出力を記録していきます。レッスンの最後に、コンピューティングデバイスで一般的にどのような操作をするかを検討し、その操作に使用する入力と出力をグラフから選択します。
            Processing:
              name: 処理
              description_student: このレッスンでは、コンピューターの定義の一部として紹介した「処理」について詳しく説明します。ペアになって力を合わせて、情報処理の1つの形式になるよう一連のカードを順番に並べます。最後に、クラスは、情報の問題を解決する文脈の中で、処理が何を意味するかについて話し合います。
              description_teacher: 生徒は、オフラインで行う2つのカード分類アクティビティを行い、処理の意味と問題解決との関係を探ります。最初のアクティビティには制約がほとんどなく、「処理」を大まかに定義するのに用います。次により多くの制約を付け、生徒に常にカードを正常に処理するアルゴリズムを開発してもらいます。生徒はアルゴリズムを繰り返し開発、テスト、クラスメートと共有します。最後のディスカッションでは、アクティビティで使用したさまざまな種類の問題解決法を振り返り、問題解決にアルゴリズムを作成することの意義について考えます。
            Apps and Storage:
              name: アプリとストレージ
              description_student: このレッスンでは、生徒にとって身近なコンピューターに関連するコンテキスト（つまりアプリ) で、コンピューターの入力と出力の側面について説明します。このクラスでは、さまざまなウェブアプリケーションを評価して、解決できるように設計された特定の問題、アプリが機能するために必要な入力、およびアプリからユーザーに示される出力を詳しく見ていきます。クラスの最後には、アプリを観察して、アプリが社会に与える影響について先生が主導する形で話し合います。
              description_teacher: このレッスンでは、アプリという、生徒に身近なコンテキストでコンピューターの入力、出力、ストレージ、および処理の側面を確認します。生徒はペアになって、スマートフォンアプリケーションを評価して、解決すべき特定の問題、作業に必要な入力、入力を目的の出力に変換する処理、および後のためにどのような情報を保存したいかを分析します。クラスの最後はディスカッションをして、レッスンを生徒がより身近に感じるアプリに結びつけて終わります。
            Project - Propose an App:
              name: プロジェクト - アプリの提案
              description_student: 問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、このクラスでは、実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、各アプリの機能を紹介するポスターのプレゼンテーションでクライマックスを迎えます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。
              description_teacher: 問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、生徒は実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、アプリの機能を紹介するポスターを作成して、クラスメートに示します。プロジェクトガイドにはステップバイステップの指示が示され、生徒が自分の考えを整理するのに役立ちます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。
            Post-Project Test:
              name: プロジェクト後のテスト
        csd2-pilot:
          title: CSDユニット2 - ウェブ開発 (パイロット版)
          description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
          description_short: ウェブラボで独自のウェブサイトを構築する方法を学びましょう。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章： Web コンテンツと HTML
            csd2_2:
              display_name: 第 2 章：スタイルと CSS
            cspSurvey:
              display_name: アンケート
          lessons:
            Exploring Websites:
              name: ウェブサイトを探索する
              description_student: このレッスンでは、ユーザーと作成者の両者のために、ウェブサイトが果たす目的について説明します。このクラスでは、米国で最もよく使用されているいくつかのウェブサイトを調べ、各サイトがユーザーにとってどのように役立つか、またどのようにその作成者のためにもなっているかについて話し合います。
              description_teacher: どのウェブサイトにも目的があり、作成者には作成した理由が、そしてそれを使うユーザーには使用する理由があります。このレッスンでは、ウェブサイトがユーザーとクリエイターの両者に資する目的を検討し始めます。生徒は、米国で最もよく使用されているいくつかのウェブサイトを調べ、各サイトがユーザーにとってどのように役立つか、またどのようにその作成者のためにもなっているかについて考えます。
            'Websites for Expression ':
              name: 表現のためのウェブサイト
              description_student: このレッスンでは、個人的な表現の手段としてウェブサイトを紹介します。このクラスでは、まず人々が興味や考えを表現して共有するさまざまな方法について話し合い、次に前のコースで生徒が作成した模範的なウェブサイトをいくつか見ていきます。最後に、全員でブレインストーミングを行い、作成するウェブサイトに含めるトピックと興味のリストを共有し、ユニットの残りの部分で個人のウェブサイトを開発するためのリソースを作成します。
              description_teacher: このレッスンでは、生徒は個人的な表現の手段としてウェブサイトを使用する方法を調査し、個人的なウェブサイトに含めたいトピックと興味のリストを作成します。レッスンを開始するに当たり、生徒は人々が興味や考えを表現して共有するさまざまな方法を話し合います。次に、以前のCS発見コースで生徒が作成したいくつかの模範的なウェブサイトを見て、アイデアを表現する方法を明らかにします。最後に、生徒はブレーンストーミングを行い、個人的なウェブサイトに含めたいと思うトピックや興味のリストを共有し、ユニットを進めながら参照して着想に役立てられるようにします。
            Intro to HTML:
              name: HTML入門
              description_student: このレッスンでは、ウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを紹介します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。クラスはウェブラボでHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかについて話し合ってから、HTMLを使ってユニットの最初のウェブページを作成します。
              description_teacher: このレッスンでは、生徒はウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを学習します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。次に、生徒はウェブラボの模範的なHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかをクラスメートと話し合います。次に、生徒は最初のHTMLを記述します。まとめのディスカッションは、このレッスンを通じて開発したコンテンツと構造の理解を深めるのに役立ちます。
            Headings:
              name: 見出し
              description_student: このレッスンでは、HTMLタグの説明を続けますが、今回はヘッダーを使用します。このクラスでは、ヘッダータグを使ってページとセクションのタイトルを作成し、さまざまなヘッダー要素がデフォルトでどのように表示されるかを学習します。次に、クラス全体で、ユニットを通じて構築する個人のウェブページでコンテンツをどのように配置するかを計画し、プロジェクトの最初のページの作成を開始します。
              description_teacher: このレッスンでは、生徒は引き続きHTMLを使ってウェブページ上のテキストを構成しますが、今回は見出しを使用します。生徒は、さまざまな見出し要素がデフォルトでどのように表示されるかを学び、それを使ってページとセクションのタイトルを作成する練習をします。次に、生徒は自分の個人のウェブページでコンテンツをどのように配置するかを決定していきます。最後のレベルでは、生徒は以降のユニットにかけて取り組むプロジェクトを開始します。
            Digital Footprint:
              name: デジタルフットプリント
              description_student: このレッスンでは、個人のウェブサイトを作成する作業から一歩下がり、デジタルで共有する個人情報について説明します。クラスでは、他の人と共有するのに適した情報の種類について話し合い、次にソーシャルメディアページの例をいくつか見て、意図的にまたは意図せずに共有する可能性がある個人情報の種類を確認します。最後に、クラスは、情報をオンラインに上げるときに従うべき一連のガイドラインについて考えます。
              description_teacher: "生徒は最近のレッスンで、自分の個人用ウェブサイトに掲載する実際のコンテンツについて時間を取って検討しました。このレッスンでは、ユニットで扱うプロジェクト
                (個人のウェブサイトの公開) から一歩下がって、生徒がどのような個人情報を誰とオンラインで共有するかについて考えられるようにします。また、生徒がオンラインで共有することにした情報の多くは、リリースされた瞬間に自らのコントロールから外れるという考えをしっかりと持てるようにします。\\\r
                \\\r生徒は、特定の個人情報を共有するのに適切な対象者を個別に特定することから始めます。次に、いくつかのソーシャルメディアページを見て、人々が自分自身またはお互いについてどのような情報を共有しているかを判断します。最後に、オンラインで情報を投稿するのに適切だと考えるガイドラインについて考えます。\\\r
                \\\rこのレッスンの究極のポイントは、生徒を怖がらせることではなく、情報をウェブに公開する際に、生徒がどこからどこまでがコントロールできる、どこから先がコントロールできないかを体験してもらうことです。"
            Lists:
              name: リスト
              description_student: このレッスンでは、順序付きリストと順序なしリスト、および関連する<ul>、<ol>、<li>
                のHTMLタグを紹介します。クラスはタグの使用を練習してから、個人のウェブページプロジェクトに戻って、新しいタグを含む新しいHTMLページを追加します。
              description_teacher: 生徒はHTMLの順序付きリストと順序なしリストの説明を受け、いくつかのレベルで<ul>、<ol>、<li>タグを使用する方法を学習します。その後、プロジェクトに戻り、新しいHTMLページを追加します。新しいページ内では、HTMLを記述して、レシピ、トップ10リスト、または学習した新しいタグを使用するその他のコンテンツを表示します。
            Intellectual Property and Images:
              name: 知的財産と画像
              description_student: このレッスンでは、他のウェブサイトで作成された画像、ビデオ、音楽などのメディアを、そのメディアの作成者の権利を尊重しながら使用する方法について説明します。クリエイティブ
                コモンズ ライセンスを最初に学習した後、クラスはウェブページに画像を追加する方法と、そうするときに適切な著作権表示をする方法を学びます。
              description_teacher: 他の人が作品をどのように使用できるかについて個人の意見を述べ合うところから始めて、クラスは、創造的なコンテンツの作成者とユーザーにとっての著作権の目的と役割を探ります。次のアクティビティでは、著作権の扱いの難しさの解決策として、さまざまなクリエイティブ
                コモンズ ライセンスを詳しく見ていきます。最後に、さまざまなクリエイティブ コモンズ ライセンスの制限について共通の理解を得て、生徒は<img>タグを使ってウェブページに画像を追加する方法を学びます。
            Clean Code and Debugging:
              name: クリーンなコードとデバッグ
              description_student: このレッスンでは、HTMLでウェブページを設計するときに発生する一般的な問題について説明します。クラスは、Code
                Studioで見つかったより複雑になる一連のウェブページのエラーを修正し、ウェブページを読みやすくするためのツールとしてのコメント、空白、インデントの重要性を学習します。
              description_teacher: 生徒は、HTMLでウェブページを設計するときに発生する一般的な問題に対処し、より複雑になる一連のウェブページのエラーを修正します。その過程で、ウェブページを読みやすくするためのツールとしてのコメント、空白、インデントの重要性を学びます。レッスンの最後に、生徒はウェブページをデバッグし、読みやすくメンテナンスしやすいようにするための戦略のリストを作成します。
            Project - Multi-Page Websites:
              name: プロジェクト - マルチページウェブサイト
              description_student: このレッスンでは、ハイパーリンクについて説明します。ハイパーリンクを使うことで、デベロッパーは複数のページを1つのウェブサイトにつなげることができます。クラスは、以前のすべてのページを1つのプロジェクトにリンクし、各ページへのナビゲーションバーを作成してから、サイト全体をウェブに公開します。
              description_teacher: "ウェブページを相互にリンクする方法を学習した後、生徒はついに自分が取り組んでいるウェブサイトを公開することができます。このレッスンでは、以前に作成したすべてのページを1つのプロジェクトにリンクし、新しいページを作成して、ページ間のナビゲーションを追加してから、サイト全体をウェブに公開します。
                \\\r \\\r"
            Styling Text with CSS:
              name: CSSを使用したテキストのスタイル設定
              description_student: このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。このクラスは、CSSルールセットの基本的な構文を学習してから、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。最後に、全員でテキストスタイルを自身のウェブサイトに適用します。
              description_teacher: "このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。生徒は、CSSルールセットの基本的な構文を学び、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。生徒はギネス世界記録保持者に関するHTMLページで作業し、指定されたページに独自のスタイルを追加します。最後のレベルでは、生徒はテキスト要素のスタイルについて学んだことを自分のウェブページに適用します。\\\r
                \\\r"
            Styling Elements with CSS:
              name: CSSを使用した要素のスタイル設定
              description_student: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。クラスは、新しいCSSスタイルを調査して、「世界のデザート」ページを変更することから始めます。その後、全員でこの新しい知識を自身のウェブサイトに適用します。
              description_teacher: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。生徒は、このレッスンの最初に、世界のデザートに関するウェブサイトを見ます。そして、このウェブサイトのCSSスタイルを調べて新たに変更を加え、独自のスタイルをこのページに追加します。
                デザートページで作業した後、生徒は新しいCSSプロパティの知識を利用して、自身のウェブサイトのスタイルをさらに充実させます。
            Sources and Search Engines:
              name: ソースと検索エンジン
              description_student: 最初にウェブ検索の借り物競争を完了した後、クラスは検索エンジン内部の仕組みについて学び、分析スキルを使って奇妙な真偽不明の動物を探す機会があります。
              description_teacher: このレッスンでは、ウェブ検索の仕組みや、関連性があり信頼できる情報をオンラインで見つける方法について、生徒がより批判的に考えるように促します。検索エンジンがどのように機能するかについてのビデオを見て議論した後、生徒は真偽不明の動物に関する情報を検索します。生徒は、どの動物が実際にデマであるかを特定するために、見つけたサイトを分析して信頼できるものであることを確かめる必要があります。
            RGB Colors and Classes:
              name: RGBの色とクラス
              description_student: このレッスンでは、クラスとカスタムカラーについて説明します。このクラスは、まずRGB (赤、緑、青)
                値を使ってカスタムカラーを指定する方法を学び、次にCSSクラスを使用する新しいFour Seasons ウェブページにこれらのカラーを適用します。クラスを使ってFour
                Seasons ウェブページにスタイルを追加し、さらに自身のウェブサイトのスタイルを設定します。
              description_teacher: このレッスンでは、まず、RGB (赤、緑、青) 値を使ってカスタムカラーを指定する方法を学習します。次に、CSSクラスを使用する新しいFour
                Seasons ウェブページにこれらのカラーを適用します。CSSクラスにより、ウェブデベロッパーは同じタイプの他の要素とは異なるスタイル要素のグループを扱うことができます。クラスを使って、生徒はFour
                Seasons ウェブページにスタイルを追加し、さらに自身のウェブサイトのスタイルを設定します。
            Project - Personal Portfolio Website:
              name: プロジェクト - 個人ポートフォリオウェブサイト
              description_student: ユニットの最後の数日で、クラスは自身のウェブサイトを完成させ、仲間と協力してフィードバックを出し合い、ルーブリック
                (評価基準) を確認し、サイトに最後の仕上げを行います。最後に、全員が自身のプロジェクトとその開発方法を共有してユニットを締めくくります。
              description_teacher: "生徒は、ユニットを通して多くの時間を費やして自身のウェブサイトを開発してきました。最後の2日間で、生徒はウェブサイトを完成させます。さらに同僚と協力してフィードバックを出し合い、ウェブサイトに最後の仕上げを行い、ルーブリック
                (評価基準) を確認し、プロセスを振り返ります。最後に、プロジェクトを共有し、さらに最終的な設計に至るまでにたどったプロセスの概要を示してユニットを締めくくります。\\\r"
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
            Intellectual Property:
              name: 知的財産
            Project - Planning Layout and Style:
              name: プロジェクト - 計画のレイアウトとスタイル
            Project - Building a Webpage:
              name: プロジェクト - ウェブページの構築
            Purpose of a  Websites:
              name: ウェブサイトの目的
            Images:
              name: 画像
            Exploring Web Pages:
              name: ウェブページの探索
            Searching and Research:
              name: 検索と研究
            Sources and Research:
              name: 出典と調査
            Team Problem Solving:
              name: チームの問題解決
            Wireframes and Planning:
              name: ワイヤーフレームと計画
            Linking Pages:
              name: ページのリンク
            Planning a Multi-page Website:
              name: マルチページウェブサイトの計画
            Linking and Navigation:
              name: リンクとナビゲーション
            Peer Review and Final Touches:
              name: ピアレビューと最後の仕上げ
            Project - Website for a Purpose:
              name: プロジェクト - ある目的のためのウェブサイト
          student_description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
        csd3-pilot:
          title: CSDユニット3 - アニメーションとゲーム (パイロット版)
          description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
          description_short: ゲームラボでアニメーション、インタラクティブアート、ゲームのプログラミングを学びましょう。
          lesson_groups:
            csd3_1:
              display_name: '第 1 章: 画像とアニメーション'
            csd3_2:
              display_name: '第2章: ゲームを作る'
            cspSurvey:
              display_name: アンケート
          lessons:
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
              description_student: クラスは退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。
              description_teacher: 生徒は退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。
            Plotting Shapes:
              name: 形状のプロット
              description_student: 生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。
              description_teacher: 生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。
            Drawing in Game Lab:
              name: ゲームラボでの描画
              description_student: このクラスは、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。このレッスンでは、シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンの最後に、クラスは前のレッスンで設計したイメージのオンラインバージョンを作成します。
              description_teacher: 生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。
            Shapes and Randomization:
              name: 形状とランダム化
            Variables:
              name: 変数（へんすう）
              description_student: このレッスンでは、プログラムで数値にラベルを付ける方法、またはランダムに生成された値を保存する方法として変数を導入します。クラスは、変数の目的の非常に基本的な説明と新しいブロックの使用方法からレッスンを開始します。その後、クラスは変数を使って乱数を保存し、プログラムが同じ乱数を複数回使用できるようにします。
              description_teacher: このレッスンでは、変数を使ってプログラム内の数値にラベルを付ける方法、またはランダムに生成された値を保存する方法を学習します。生徒は、変数の目的の非常に基本的な説明からレッスンを始めます。次のレベルでは、生徒は、変数を数値のラベルまたは名前を付ける方法とするモデルを学習します。生徒は変数を使って乱数を保存し、変数が実際に値を保存することを確認します。これにより、プログラム内で同じ乱数を複数回使用できるようになります。
            Sprites:
              name: スプライト
              description_student: より興味深く、詳細な画像を作成するために、クラスはスプライトオブジェクトの説明を受けます。すべてのスプライトに表示する画像を割り当てることができ、スプライトは自身に関する複数の値も追跡するため、アニメーションを作成するときに便利です。レッスンの終わりに、全員がスプライトを使ってシーンを作成します。
              description_teacher: より興味深く、詳細な画像を作成するために、生徒はスプライトオブジェクトの説明を受けます。すべてのスプライトに表示する画像を割り当てることができ、スプライトは自身に関する複数の値も追跡するため、アニメーションを作成するときに便利です。
            The Draw Loop:
              description_student: このレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。このクラスは、描画ループと乱数を組み合わせて、いくつかの単純なアニメーションをドットで、次にスプライトで操作します。その後、学習した内容を使って、前のレッスンのスプライトシーンを更新します。
              description_teacher: このレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。レッスンを開始するために、生徒はパラパラ漫画を見て、さまざまなイメージを持つフレームが数多くあると、動いているかのような印象が生まれることを確認します。次に、生徒は、ゲームラボの描画ループが、プログラムでこれと同じ印象を生み出すのにどのように役立つかを説明するビデオを視聴します。生徒は、描画ループと乱数を組み合わせて、単純なアニメーションをドットで、次にスプライトで操作します。レッスンの最後に、生徒は学習した内容を使って、前のレッスンのスプライトシーンを更新します。
            The Counter Pattern Unplugged:
              name: オフラインのカウンターパターン
              description_student: このオフラインレッスンでは、変数の基本的な働きを探ります。ノートカードと文字列を使ってプログラム内の変数をシミュレートすることにより、クラスは短いプログラムをいくつか実装します。この構文に慣れたら、クラスは同じプロセスをスプライトプロパティで使って、画面全体のスプライトの進行状況を追跡します。
              description_teacher: 生徒は、オフラインアクティビティを通じて変数の基本的な働きを探ります。プログラム内の変数をシミュレートするためにノートカードと文字列を使って、生徒は短いプログラムをいくつか実装します。この構文に慣れたら、生徒はスプライトプロパティで同じプロセスを使って、画面全体でスプライトの進行状況を追跡します。
            Sprite Movement:
              name: スプライトの動き
              description_student: 描画ループとカウンターパターンを組み合わせることにより、クラスはスプライトを画面上で移動させたり、他のスプライトプロパティをアニメーション化したりするプログラムを作成します。
              description_teacher: 描画ループとカウンターパターンを組み合わせることにより、生徒はスプライトを画面上で移動させたり、他のスプライトプロパティをアニメーション化したりするプログラムを作成します。
            Booleans Unplugged:
              name: オフラインのブール
              description_student: このレッスンでは、ブール値と論理、および条件文を紹介します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。次に、クラスは、ますます複雑になるブール文に基づいてオブジェクトをグループ化し、条件文がプログラムのフローにどのように影響するかを調べます。
              description_teacher: このレッスンでは、ブール値と論理、および条件文について学習します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。これにより、生徒は複数の潜在的な値
                (年齢など) を持つプロパティをバイナリ質問でどのように構成できるかについて考えます。次に生徒には、類似しているが変化する物理的特性を持つオブジェクトのグループが示されます。パートナーと一緒に、ますます複雑になるブール文
                (ANDおよびORを使用した複合ブールを含む) に基づいてこのようなオブジェクトをグループ化します。最後に、ツールとしての条件文を説明し、ブール文を入力情報にして、プログラムの流れを決定したり、影響を与えたりします。
            Conditionals:
              name: 条件
              description_student: クラスは、ブール値を使ってスプライトプロパティの現在の値をターゲット値と比較し、その比較結果を使って、スプライトが画面上のある地点に達したか、指定されたサイズになったか、またはカウンターパターンを使って値に達したかを判断します。ブール値を直接使って値またはスプライトプロパティを調べた後、クラスはif条件文を追加して、このブール値の比較に応答するプログラムを作成します。
              description_teacher: 生徒は、ブール値を使ってスプライトプロパティの現在の値をターゲット値と比較し、その比較結果を使って、スプライトが画面上のある地点に達したか、指定されたサイズになったか、またはカウンターパターンを使って値に達したかを判断します。ブール値を直接使って値またはスプライトプロパティを調べた後、生徒はif条件文を追加して、このブール値の比較に応答するプログラムを作成します。
            Keyboard Input:
              name: キーボード入力
              description_student: 前のレッスンのブール文と条件文の紹介に続いて、keyDown() という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。
              description_teacher: 前のレッスンのブール文と条件文の紹介に続いて、「keyDown()」という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。
            Other Forms of Input:
              name: その他の入力形式
              description_student: このクラスでは、条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純なkeyDown()
                コマンドに加えて、クラスは他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
              description_teacher: このレッスンでは、生徒は条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純な「keyDown()」コマンドに加えて、生徒は他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
            Project - Interactive Card:
              name: プロジェクト - インタラクティブカード
              description_student: 第1章のこのまとめプロジェクトでは、クラスは、これまでに学んだすべてのプログラミング手法を使って、インタラクティブなグリーティングカードを計画および開発します。
              description_teacher: 第1章のこのまとめプロジェクトでは、生徒は、これまでに学んだすべてのプログラミング手法を使って、インタラクティブなグリーティングカードを計画および開発します。
            Velocity:
              name: 速度
              description_student: カウンターパターンを使ってスプライトを移動させる方法を簡単に確認した後、クラスは速度と回転速度を直接設定するプロパティを学びます。生徒はさまざまな方法でこの新しいプロパティを使用しながら、基本的な横スクロールゲームを作成するために必要なスキルを身につけていきます。
              description_teacher: 前のレッスンで学んだ、カウンターパターンを使ってスプライトを移動させる方法を簡単に確認した後、生徒は速度と回転速度を直接設定するプロパティを学びます。生徒はさまざまな方法でこの新しいプロパティを使用しながら、基本的な横スクロールゲームを作成するために必要なスキルを身につけていきます。
            Collision Detection:
              description_student: このクラスでは、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、クラスはisTouching()ブロックを使って、サウンドの再生など、スプライトが衝突した時に生み出されるさまざまな効果を作成します。最後に、新しいスキルを使って、前回のレッスンで作成を開始したサイドスクローラーゲームを改善します。
              description_teacher: 生徒は、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、生徒は「isTouching()」ブロックを使って、サウンドの再生など、スプライトが衝突した時に生み出されるさまざまな効果を作成します。最後に、新しいスキルを使って、前回のレッスンで作成を開始したサイドスクローラーゲームを改善します。
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
              description_student: このクラスでは、スプライトの速度プロパティをカウンターパターンと組み合わせて、重力をシミュレートしたり、スプライトをジャンプさせたり、スプライトが左または右へ浮かせたりする、より複雑なスプライトの動きを作成する方法を学習します。最終レベルでは、クラスはこれらの動きを組み合わせて1つのスプライトをアニメーション化して制御し、キャラクターが飛び回ってコインを収集するシンプルなゲームを作成します。
              description_teacher: 生徒は、スプライトの速度プロパティをカウンターパターンと組み合わせて、より複雑なスプライトの動きを作成する方法を学びます。特に、重力をシミュレートし、スプライトをジャンプさせ、スプライトを左または右に浮かせる方法を学びます。Code
                Studioの最終レベルでは、生徒はこれらの動きを組み合わせて1つのスプライトをアニメーション化して制御し、キャラクターが飛び回ってコインを収集するシンプルなゲームを作成します。生徒は、最終レベルで、ゲームに自分なりの工夫を加えるよう促されます。
            Collisions:
              name: 衝突
              description_student: クラスは、新しい方法で相互作用するようにスプライトをプログラムします。 isTouchingブロックの使用方法を簡単に確認した後、クラスは2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (collide、displace、bounce、bounceOff) を使う練習をします。
              description_teacher: 生徒は、新しい方法で相互作用するようにスプライトをプログラムします。 「isTouching」ブロックの使用方法を簡単に確認した後、生徒は2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (「collide」、「displace」、「bounce」、「bounceOff」) を使う練習をします。
            Functions:
              name: 関数(かんすう)
              description_student: このレッスンでは、プログラムを整理して読みやすくする方法として関数を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。クラスは、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。レッスンの最後に、クラスはこれらのスキルを使って、サイドスクローラーゲームの最終バージョンを用意し、機能を追加します。
              description_teacher: 生徒は、プログラムを整理して読みやすくするための関数を作成する方法を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。オフラインで行うウォームアップでは、コンテキストに応じて、さまざまな詳細レベルの指示がどのように役立つかを探ります。生徒は、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。生徒は関数を使って、コードの長いブロックを描画ループから削除し、繰り返しのコードを1つの関数に置き換えます。レッスンの終わりに、生徒はこれらのスキルを使って、サイドスクローラーゲームの最終バージョンを用意し、機能を追加します。
            The Game Design Process:
              name: ゲームデザインプロセス
              description_student: このレッスンでは、クラスはユニットの残りの部分のためのゲームを設計するのに使うプロセスを紹介します。クラスは、このプロセスを一連のレベルで学習します。このレッスンの一環として、クラスはゲームラボでマルチフレームアニメーションの使い方を簡単に学びます。レッスンの最後に、ゲームを改良して独自のゲームにする機会があります。
              description_teacher: このレッスンでは、ユニットの残りの部分のためのゲームを設計するのに使うプロセスを生徒に紹介します。このプロセスはプロジェクトガイドを中心に据え、生徒はゲームのプログラミングを始める前に、スプライト、変数、関数を定義するように求められます。このレッスンでは、プログラムが非表示になっているゲームラボでゲームをプレイすることから始め、ゲームを作成するためにどのようなスプライト、変数、関数が必要と考えるかについて話し合います。次に、配布される完全なプロジェクトガイドには、ゲームを実装する方法が1つ示されています。そして、生徒はこのプロセスを一連のレベルで学習します。このレッスンの一環として、生徒はゲームラボでマルチフレームアニメーションの使い方を簡単に学びます。レッスンの最後に、生徒はゲームを改良して独自のものにする機会があります。
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
              description_student: この2日以上かけて行うレッスンでは、クラスはユニット1の問題解決プロセスを使って、プラットフォーム
                ジャンパーゲームを作成します。サンプルゲームを見た後、クラスはどのようなゲームにしたいかを明確にし、構造化されたプロセスを使ってゲームを構築します。最後に、クラスはゲームをどのように改善できるかを考え、変更を加えていきます。
              description_teacher: この2日以上かけて行うレッスンでは、ユニット1の問題解決プロセスを使って、プラットフォーム ジャンパーゲームを作成します。まず、プラットフォーム
                ジャンパーの例を見てから、どのようなゲームにしたいかを明確にします。次に、構造化されたプロセスを使って、ゲームの実装に必要な背景、変数、スプライト、関数を計画します。ゲームのプログラムを書いた後、生徒はゲームをどのように改善できるかを振り返り、変更を加えていきます。
            Project - Design a Game:
              name: プロジェクト - ゲームの設計
              description_student: クラスでは、前の2つのレッスンのプロジェクトガイドを使って、オリジナルのゲームを計画および構築します。個別またはペアで作業して、クラスはゲームの計画、開発し、フィードバックを行います。ピアフィードバックをゲーム組み込んだ後、クラスは完成したゲームを共有します。
              description_teacher: 生徒は、前の2つのレッスンのプロジェクトガイドを手引きに使って独自のゲームを計画および構築します。生徒は個別にまたはペアで作業し、サンプルゲームのセットからインスピレーションを得て、構築するゲームの種類を最初に決定します。次に、空白のプロジェクトガイドを記入します。その中で、ゲームの動作を説明し、作成する必要がある変数、スプライト、関数を詳しく調べます。Code
                Studioでは、一連のレベルで、この計画を実装するために使用できる一般的なシーケンスを示します。プロセスの途中で、生徒は自分のプロジェクトを共有してピアレビューに回し、ゲームを完成させながらフィードバックを組み込みます。レッスンの最後に、生徒は完成したゲームをクラスメートと共有します。このプロジェクトは複数のクラスにまたがり、3～5クラス分の時間がかかることも多々あります。
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
            Sprites and Animations:
              name: スプライトとアニメーション
            Create a Scene:
              name: シーンの作成
            Text and Captioned Scenes:
              name: テキストとキャプション付きシーン
          student_description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
        csd-bugs:
          title: CSD教師のバグの例
          lessons:
            Game Lab Bugs:
              name: ゲームラボのバグ
            Immovable Crab:
              name: 不動のカニ
        maddie-test:
          lessons:
            stage 1:
              name: ステージ1
            new stage:
              name: 新しいステージ
        csp3-pilot:
          title: CSPユニット3パイロット - アプリ設計入門
          lesson_groups:
            content:
              display_name: 内容
            required:
              display_name: 概要
          lessons:
            Introduction to Apps:
              name: アプリの紹介
            Project - Designing an App Part 1:
              name: プロジェクト - アプリの設計 パート1
            Project - Designing an App Part 2:
              name: プロジェクト - アプリの設計 パート2
            Programs Investigate:
              name: プログラム 調査
            Programs Practice:
              name: プログラム 練習
            Project - Designing an App Part 3:
              name: プロジェクト - アプリの設計 パート3
            Project - Designing an App Part 4:
              name: プロジェクト - アプリの設計 パート4
            'Project: Share Your App':
              name: 'プロジェクト: アプリの共有'
            The Need for Programming Languages:
              name: プログラミング言語の必要性
            'Project: Finish Your App':
              name: 'プロジェクト: アプリを完成させる'
            Programs Explore:
              name: プログラムの探索
            Unit 3 STUDENT Survey:
              name: ユニット3 生徒向けアンケート
            Unit 3 TEACHER Survey:
              name: ユニット3 先生向けアンケート
            'Lesson 11: Unit Assessment':
              name: 'レッスン11: ユニットの評価'
            'Lesson 11: Assessment Day':
              name: 'レッスン11: 評価日'
            Project - Designing an App Part 5:
              name: プロジェクト - アプリの設計 パート5
            Intro to Programming:
              name: プログラミング入門
            Debugging:
              name: デバッギング
        csl-vn:
          title: ベトナムのコンピューター サイエンスリテラシー
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
          lessons:
            Sequencing with Scrat:
              name: スクラッチと学ぶシーケンス
            Programming in Maze:
              name: めいろ のプログラミング
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
            Loops in Ice Age:
              name: アイス・エイジのループ
            Ocean Scene with Loops:
              name: アーティストくりかえし
            Tell a Story in Play Lab:
              name: プレイラボでストーリーを伝える
        dlp19-csd-mod-fit:
          title: CS発見 詳細学習2019 FiT向けモジュール
          description_audience: CS発見 トレーニング中のファシリテーター2019
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Demonstrating Understanding:
              name: 理解を示す
            Focus Area 1:
              name: カリキュラム
        dlp19-csp-mod-fit:
          title: CS原則 詳細学習 2019 FiTワークショップ
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Deeper Learning Overview:
              name: 詳細学習の概要
            Understanding the Curriculum:
              name: カリキュラムを理解する
            Demonstrating Understanding:
              name: 理解を示す
        pl-csd-bugs:
          title: CSDワークショップ1 バグ
          description_short: ゲームラボでのデバッグ - 学年ワークショップ1
          lessons:
            CSD Workshop 1 Bugs:
              name: CSDワークショップ1 バグ
        dlp19-csd-mod-w1:
          title: CS発見 詳細学習2019 ワークショップ1向けモジュール
          description_audience: CS発見 トレーニング中のファシリテーター2019
          description_short: 学年ワークショップ1
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            Module 1:
              name: モジュール1
            Step 1:
              name: 手順1
            Step 2:
              name: 手順2
            'Step 1: Develop Understanding':
              name: '手順1: 理解を深める'
            'Step 2: Demonstrate Understanding':
              name: '手順2: 理解を示す'
            Deeper Learning Overview:
              name: 詳細学習の概要
        dlp19-csd-mod-w2:
          title: CS発見 詳細学習 ワークショップ2向けモジュール
          description_audience: CS発見 トレーニング中のファシリテーター2019
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            new stage:
              name: 新しいステージ
            CS Discoveries Deeper Learning Module 2:
              name: CS発見 詳細学習 モジュール2
            Deeper Learning Overview:
              name: 詳細学習の概要
            'Step 1: Develop Understanding':
              name: '手順1: 理解を深める'
            'Step 2: Demonstrate Understanding':
              name: '手順2: 理解を示す'
        dlp19-csd-mod-w3:
          title: CS発見 詳細学習 ワークショップ3向けモジュール
          description_audience: CS発見 トレーニング中のファシリテーター2019
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            CS Discoveries Deeper Learning Module 3:
              name: CS発見 詳細学習 モジュール3
            Deeper Learning Overview:
              name: 詳細学習の概要
            'Step 1: Develop Understanding':
              name: '手順1: 理解を深める'
            'Step 2: Demonstrate Understanding':
              name: '手順2: 理解を示す'
        dlp19-csd-mod-w4:
          title: CS発見 詳細学習 ワークショップ4向けモジュール
          description_audience: CS発見 トレーニング中のファシリテーター2019
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            CS Discoveries Deeper Learning Module 4:
              name: CS発見 詳細学習 モジュール4
            Deeper Learning Overview:
              name: 詳細学習の概要
            'Step 1: Develop Understanding':
              name: '手順1: 理解を深める'
            'Step 2: Demonstrate Understanding':
              name: '手順2: 理解を示す'
        dlp19-csp-mod-w1:
          title: CS原則 詳細学習 ワークショップ1向けモジュール
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            CS Principles Deeper Learning Module 1:
              name: CS原則 詳細学習 モジュール1
            'Step 1: Develop Understanding':
              name: '手順1: 理解を深める'
            'Step 2: Demonstrate Understanding':
              name: '手順2: 理解を示す'
            Deeper Learning Overview:
              name: 詳細学習の概要
        dlp19-csp-mod-w2:
          title: CS原則 詳細学習 ワークショップ2向けモジュール
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            CS Principles Deeper Learning Module 2:
              name: CS原則 詳細学習 モジュール2
            Deeper Learning Overview:
              name: 詳細学習の概要
            'Step 1: Develop Understanding':
              name: '手順1: 理解を深める'
            'Step 2: Demonstrate Understanding':
              name: '手順2: 理解を示す'
        dlp19-csp-mod-w3:
          title: CS原則 詳細学習 ワークショップ3向けモジュール
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            CS Principles Deeper Learning Module 3:
              name: CS原則 詳細学習 モジュール3
            Deeper Learning Overview:
              name: 詳細学習の概要
            'Step 1: Develop Understanding':
              name: '手順1: 理解を深める'
            'Step 2: Demonstrate Understanding':
              name: '手順2: 理解を示す'
        dlp19-csp-mod-w4:
          title: CS原則 詳細学習 ワークショップ4向けモジュール
          lesson_groups:
            required:
              display_name: 概要
            content:
              display_name: 内容
          lessons:
            CS Principles Deeper Learning Module 4:
              name: CS原則 詳細学習 モジュール4
            Deeper Learning Overview:
              name: 詳細学習の概要
            'Step 1: Develop Understanding':
              name: '手順1: 理解を深める'
            'Step 2: Demonstrate Understanding':
              name: '手順2: 理解を示す'
        csd-pilot:
          title: CSDパイロットコース
          lessons:
            Pilot Information:
              name: パイロット情報
            Pilot Information 1:
              name: パイロット情報 1
            Pilot Information 2:
              name: パイロット情報 2
            Pilot Information 3:
              name: パイロット情報 3
            Pilot Information 4:
              name: パイロット情報 4
            Pilot Information 5:
              name: パイロット情報 5
            Pilot Information 6:
              name: パイロット情報 6
            Pilot Information 7:
              name: パイロット情報 7
            Pilot Information 8:
              name: パイロット情報 8
            Pilot Information 9:
              name: パイロット情報 9
            Pilot Information 10:
              name: パイロット情報 10
            Pilot Information 11:
              name: パイロット情報 11
            Pilot Information 12:
              name: パイロット情報 12
            Pilot Information 13:
              name: パイロット情報 13
            Pilot Information 14:
              name: パイロット情報 14
            Pilot Information 15:
              name: パイロット情報 15
            Pilot Information 16:
              name: パイロット情報 16
            Pilot Information 17:
              name: パイロット情報 17
            Pilot Information 18:
              name: パイロット情報 18
            Pilot Information 19:
              name: パイロット情報 19
            Pilot Information 20:
              name: パイロット情報 20
            Pilot Information 21:
              name: パイロット情報 21
            Pilot Information 22:
              name: パイロット情報 22
            Pilot Information 23:
              name: パイロット情報23
            Pilot Information 24:
              name: パイロット情報24
            Pilot Information 25:
              name: パイロット情報25
            Pilot Information 26:
              name: パイロット情報26
            Pilot Information 27:
              name: パイロット情報27
            Pilot Information 28:
              name: パイロット情報28
            Pilot Information 29:
              name: パイロット情報29
        csd4-pilot:
          title: コンピューティングと問題解決
          lesson_groups:
            csd1_2:
              display_name: 第 2 章コンピューターと問題解決
          lessons:
            Input and Output:
              name: 入出力
            Processing:
              name: 処理
            Apps and Storage:
              name: アプリとストレージ
            Project - Propose an App:
              name: プロジェクト - アプリの提案
            Post-Project Test:
              name: プロジェクト後のテスト
        csp2-pilot:
          lesson_groups:
            content:
              display_name: 内容
            required:
              display_name: 概要
          lessons:
            new stage:
              name: 新しいステージ
            Building a Network:
              name: ネットワークの構築
            IP Addresses:
              name: IPアドレス
            Routers and Redundancy:
              name: ルーターと冗長性
            Packets:
              name: パケット
            The Growing Internet:
              name: 成長するインターネット
            Internet Dilemmas pt 1:
              name: インターネットのジレンマ パート1
            Internet Dilemmas, pt 2:
              name: インターネットのジレンマ、パート2
            Unit 2 Assessment:
              name: ユニット2 評価
            Unit Assessment:
              name: ユニット評価
            'Lesson 8: Unit Assessment':
              name: 'レッスン8: ユニットの評価'
            Unit 2 STUDENT Survey:
              name: ユニット2 生徒向けアンケート
            Unit 2 TEACHER Survey:
              name: ユニット2 先生向けアンケート
            DNS and HTTP:
              name: DNSとHTTP
            Welcome to the Internet:
              name: インターネットへようこそ
            'Lesson 9: Assessment Day':
              name: 'レッスン9: 評価日'
            The Need for Addressing:
              name: 対処の必要性
            Project - Internet Dilemmas Part 1:
              name: プロジェクト - インターネットのジレンマ パート1
            Project - Internet Dilemmas Part 2:
              name: プロジェクト - インターネットのジレンマ パート2
        denny-science:
          title: 地震探知機
          lessons:
            Earthquake Detector:
              name: 地震探知機
            'Earthquake Detector: Designing Screens':
              name: '地震探知機: 画面の設計'
            'Earthquake Detector: Processing with Events':
              name: '地震検出器: イベントを使った処理'
        peru-2019:
          lessons:
            new stage:
              name: 新しいステージ
            Introduction:
              name: はじめに
            Debugging in Collector:
              name: コレクターでのデバッグ
            'Loops: My Loopy Robotic Friends':
              name: 'ループ: ルーピー ロボティック フレンド'
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops:
              name: 入れ子のループ
            Nested Loops Project in Frozen:
              name: フローズンでの入れ子のループプロジェクト
            Events in Star Wars:
              name: スター・ウォーズのイベント
            Introduction to Debugging:
              name: デバッグ入門
            Nested Loops in Frozen:
              name: フローズンで学ぶ入れ子のループ
        csp6-pilot:
          lesson_groups:
            content:
              display_name: 内容
            required:
              display_name: 概要
          lessons:
            Algorithms Solve Problems:
              name: アルゴリズムが問題を解決する
            Algorithm Efficiency:
              name: アルゴリズムの効率性
            Unreasonable Time:
              name: 不合理な時間
            Traveling Salesman:
              name: 出張セールスマン
            Parallel and Distributed Algorithms:
              name: 並列分散アルゴリズム
            The Limits of Algorithms:
              name: アルゴリズムの限界
            Unit 6 STUDENT Survey:
              name: ユニット6 生徒向けアンケート
            Unit 6 TEACHER Survey:
              name: ユニット6 先生向けアンケート
            'Lesson 6: Assessment Day':
              name: 'レッスン6: 評価日'
        denny-science-8:
          title: 衝突検知器
          lessons:
            'Earthquake Detector: Designing Screens':
              name: '地震探知機: 画面の設計'
            'Earthquake Detector: Processing with Events':
              name: '地震検出器: イベントを使った処理'
            'Collision Detector: Designing Screens':
              name: '衝突検知器: 画面の設計'
            'Collision Detector: Processing with Events':
              name: '衝突検知器: イベントを使った処理'
        denny-science-copy:
          lessons:
            'Collision Detector: Designing Screens':
              name: '衝突検知器: 画面の設計'
            'Collision Detector: Processing with Events':
              name: '衝突検知器: イベントを使った処理'
        dance-2019:
          title: ダンスパーティー (2019)
          description: 自分だけのダンスパーティーをプログラムして友達と共有しましょう。
          lessons:
            Dance Party:
              name: ダンスパーティー
          student_description: 自分だけのダンスパーティーをプログラムして友達と共有しましょう。
        k5-onlinepd-2019:
          description: Code.orgのコンピューター サイエンス入門のこの無料セルフペースオンラインコースで、コンピューター サイエンスを教える方法を学びましょう！
          lesson_groups:
            k5_getting_started:
              display_name: 使用開始
            k5_basic_concepts:
              display_name: 基本的なプログラミングの概念と教授法
            k5_diving_deeper:
              display_name: '発展: コースEおよびF'
            k5_next_steps:
              display_name: 次の手順
          lessons:
            Getting Started:
              name: 使用開始
            Computer Science Fundamentals:
              name: コンピュータ サイエンス入門
            Looking Ahead:
              name: 先を見る
            'Mastering the Basics: Sequencing':
              name: '基本をマスターする: シーケンス'
            'Mastering the Basics: Loops':
              name: '基本をマスターする: ループ'
            'Mastering the Basics: Conditionals':
              name: '基本をマスターする: 条件文'
            'Mastering the Basics: Functions':
              name: '基本をマスターする: 関数'
            'Mastering the Basics: Events':
              name: '基本をマスターする: イベント'
            Best Practices for Teaching Computer Science:
              name: コンピューター サイエンスを教えるためのベストプラクティス
            Planning:
              name: 計画
            Next Steps:
              name: 次の手順
            Understanding the Computer Science Fundamentals Courses:
              name: コンピューター サイエンス入門コースを理解する
            extra:
              name: エキストラ
            Welcome to this online course:
              name: このオンラインコースへようこそ
            Understanding the Computer Science Fundamentals courses:
              name: コンピューター サイエンス入門コースについて
            Best practices for teaching computer science:
              name: コンピューター サイエンスを教えるためのベストプラクティス
            Sequencing:
              name: シークエンス
            Loops:
              name: くりかえし
            Conditionals:
              name: 条件
            Events:
              name: イベント
            Functions:
              name: 関数(かんすう)
            Diving Deeper:
              name: 発展
            Next steps:
              name: 次の手順
            Diving deeper:
              name: 発展
            Diving deeper (for Courses E and F):
              name: 発展 (コースEおよびF)
            Welcome to "Teaching Computer Science Fundamentals":
              name: "「コンピュータ サイエンスを教える」へようこそ"
            Diving Deeper (for Courses E and F):
              name: 発展 (コースEおよびF)
            'Diving Deeper: Courses E and F':
              name: '発展: コースEおよびF'
            Sprite Lab:
              name: スプライト ラボ
            Variables:
              name: 変数（へんすう）
            For Loops:
              name: ループ用
            End-of-course projects:
              name: コース最後のプロジェクト
            Who is this section for?:
              name: このセクションは誰のためのものですか？
            Reviewing reflections:
              name: 復習内容をレビューする
            Reviewing your reflections:
              name: 復習内容をレビューする
            End of Course projects:
              name: コース最後のプロジェクト
          student_description: Code.orgのコンピューター サイエンス入門のこの無料セルフペースオンラインコースで、コンピューター
            サイエンスを教える方法を学びましょう！
        dance-extras-2019:
          title: ダンスを続ける (2019)
          description: 最初の 1 時間を越えて、プロジェクトのアイデアを広げましょう。
          description_short: Hour of Codeを超えて、Code.orgのダンスパーティーチュートリアルのフォローアップアクティビティを行いましょう。
          lessons:
            Dance Party - Go Further:
              name: ダンスパーティー - さらに先へ
          student_description: 最初の 1 時間を越えて、プロジェクトのアイデアを広げましょう。
        csp10-pilot:
          title: サイバーセキュリティとグローバルインパクト
          lessons:
            new stage:
              name: 新しいステージ
            'Project: Innovation Simulation Part 1':
              name: 'プロジェクト: イノベーションシミュレーションパート1'
            'Project: Innovation Simulation Part 2':
              name: 'プロジェクト: イノベーションシミュレーションパート2'
            Security Risks Part 1:
              name: セキュリティリスク パート1
            Security Risks Part 2:
              name: セキュリティリスク パート2
            Data Policies and Privacy:
              name: データポリシーとプライバシー
            The Value of Privacy:
              name: プライバシーの価値
            'Project: Innovation Simulation Part 3':
              name: 'プロジェクト: イノベーションシミュレーションパート3'
            Protecting Data Part 1:
              name: データの保護 パート1
            Protecting Data Part 2:
              name: データの保護 パート2
            'Lesson 14: Unit Assessment Day':
              name: 'レッスン14: ユニット評価日'
            'Project: Innovation Simulation Part 4':
              name: 'プロジェクト: イノベーションシミュレーションパート4'
            'Project: Innovation Simulation Part 5':
              name: 'プロジェクト: イノベーションシミュレーションパート5'
            'Project: Innovation Simulation Part 6':
              name: 'プロジェクト: イノベーションシミュレーションパート6'
            'Project: Innovation Simulation Part 7':
              name: 'プロジェクト: イノベーションシミュレーションパート7'
            Project - Innovation Simulation Part 1:
              name: プロジェクト - イノベーションシミュレーション パート1
            Project - Innovation Simulation Part 2:
              name: プロジェクト - イノベーションシミュレーション パート2
            Project - Innovation Simulation Part 3:
              name: プロジェクト - イノベーションシミュレーション パート3
            Project - Innovation Simulation Part 4:
              name: プロジェクト - イノベーションシミュレーション パート4
            Project - Innovation Simulation Part 6:
              name: プロジェクト - イノベーションシミュレーション パート6
            Project - Innovation Simulation Part 7:
              name: プロジェクト - イノベーションシミュレーション パート7
        csp4-preview:
          title: 'CSPプレビュー: 変数、条件文、関数'
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
          lessons:
            new stage:
              name: 新しいステージ
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Practice PT Part 1:
              name: PTの練習 パート1
            Practice PT Part 2:
              name: PTの練習 パート2
            Practice PT Part 3:
              name: PTの練習 パート3
            'Lesson 15: Unit 4 Assessment':
              name: 'レッスン15: ユニット4の評価'
            'Lesson 15: Assessment Day':
              name: 'レッスン15: 評価日'
        time4cs-original-unit-1:
          title: Time4CS オリジナルユニット1
          lessons:
            Sequencing in Maze:
              name: 迷路で学ぶシーケンス
            Programming and Loops with the Artist:
              name: アーティストと学ぶプログラミングとループ
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
            Conditionals:
              name: 条件
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Simon Says:
              name: サイモンは言う
            Learning Sprites with Sprite Lab:
              name: スプライトラボで学ぶスプライト
            Alien Dance Party with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
            About Me:
              name: 私について
            Access Ability:
              name: アクセシビリティ
            Conditionals Review:
              name: 条件文のレビュー
            Drawing with Loops:
              name: ループを使った描画
        time4cs-control-unit-2:
          title: Time4CS コントロールユニット2
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_conditionals:
              display_name: 条件
            csf_nested_loops:
              display_name: 入れ子のループ
            csf_functions:
              display_name: 関数(かんすう)
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            Crowdsourcing:
              name: クラウドソーシング
            Conditionals with Cards:
              name: カードと条件
            Nested Loops in Bee:
              name: みつばちでの入れ子のループ
            Nested Loops in Artist:
              name: アーティストと学ぶ入れ子のループ
            Nested Loops in Frozen:
              name: フローズンで学ぶ入れ子のループ
            'Functions: Songwriting':
              name: '関数: 作曲'
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
            Functions in Harvester:
              name: 農夫と学ぶ関数
            Functions in Artist:
              name: アーティストと学ぶ関数
            End of Course Project:
              name: コース最後のプロジェクト
            Nested Loops in the Maze:
              name: 迷路で学ぶ入れ子のループ
        time4cs-experiment-unit-2:
          title: Time4CS 実験ユニット2
          description_short: "[説明を追加]"
          description: "[説明を追加]"
          lesson_groups:
            time4cs_c1:
              display_name: 'コレクション1: エバーグレーズとその生態系'
            time4cs_c2:
              display_name: 'コレクション2: 食物連鎖 (エバーグレーズ)'
            time4cs_c3:
              display_name: 'コレクション3: 在来種 (エバーグレーズ)'
            time4cs_c4:
              display_name: 'コレクション4: 外来種の影響 (エバーグレーズ)'
            time4cs_c5:
              display_name: 'コレクション5: 市民が行動する'
          lessons:
            Introduction to the Problem:
              name: 問題の紹介
            Crowdsourcing (Integrated lesson):
              name: クラウドソーシング (統合レッスン)
            Everglades Habitats:
              name: エバーグレーズ ハビタット
            Evaluating a Project in Sprite Lab:
              name: スプライトラボでプロジェクトを評価する
            Food Chains:
              name: 食物連鎖
            Conditionals with Cards (Integrated Lesson)- Part 1:
              name: カードで条件文 (統合レッスン) - パート1
            Alligator Holes:
              name: アリゲーター ホール
            Food Chain Game:
              name: 食物連鎖ゲーム
            Invasive Species:
              name: 外来種
            Conditionals with Cards (Integrated Lesson)- Part 2:
              name: カードで条件文 (統合レッスン) - パート2
            I am in Big Trouble:
              name: 大きなトラブルに巻き込まれています
            Conditionals in Sprite Lab:
              name: スプライトラボで学ぶ条件文
            Nested Loops in Maze:
              name: 迷路で学ぶ入れ子のループ
            Fancy Shapes using Nested Loops:
              name: 入れ子のループを使った奇抜な形状
            Nested Loops with Frozen:
              name: フローズンで学ぶ入れ子のループ
            Fishy Business:
              name: うさんくさいビジネス
            Songwriting (Integrated Lesson):
              name: ソングライティング (統合レッスン)
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
            Functions with Harvester:
              name: ファーマーと学ぶ関数
            Functions with Artist:
              name: アーティストと学ぶ関数
            Pythons impacting native populations:
              name: ネイティブ人口に影響を与えるPython
            Functions in Sprite Lab:
              name: スプライトラボで学ぶ関数
            Python Problem- Current Solutions:
              name: Pythonの問題 - 現在の解決策
            End of Course Project (integrated- project planning lesson):
              name: コース最後のプロジェクト (統合プロジェクト計画レッスン)
            Debate- Pythons impacting native populations:
              name: ディベート - ネイティブ人口に影響を与えるPython
            Work on Project:
              name: プロジェクトに取り組む
          student_description: "[説明を追加]"
        time4cs-control-unit-1:
          title: Time4CS コントロールユニット1
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_conditionals:
              display_name: 条件
            csf_events:
              display_name: イベント
            csf_sprites:
              display_name: スプライト
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_impacts:
              display_name: コンピューティングの影響
            ramp_up:
              display_name: ランプアップ
          lessons:
            Sequencing in Maze:
              name: 迷路で学ぶシーケンス
            Programming and Loops with the Artist:
              name: アーティストと学ぶプログラミングとループ
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
            Conditionals:
              name: 条件
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Simon Says:
              name: サイモンは言う
            Learning Sprites with Sprite Lab:
              name: スプライトラボで学ぶスプライト
            Alien Dance Party with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
            About Me:
              name: 私について
            Access Ability:
              name: アクセシビリティ
            Conditionals Review:
              name: 条件文のレビュー
        time4cs-experiment-unit-1:
          title: Time4CS 実験ユニット1
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_conditionals:
              display_name: 条件
            csf_events:
              display_name: イベント
            csf_sprites:
              display_name: スプライト
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_impacts:
              display_name: コンピューティングの影響
            ramp_up:
              display_name: ランプアップ
          lessons:
            Sequencing in Maze:
              name: 迷路で学ぶシーケンス
            Programming and Loops with the Artist:
              name: アーティストと学ぶプログラミングとループ
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
            Conditionals:
              name: 条件
            'Events: The Big Event':
              name: 'イベント: おおきなイベント'
            Simon Says:
              name: サイモンは言う
            Learning Sprites with Sprite Lab:
              name: スプライトラボで学ぶスプライト
            Alien Dance Party with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
            About Me:
              name: 私について
            Access Ability:
              name: アクセシビリティ
            Conditionals Review:
              name: 条件文のレビュー
        csp7-pilot:
          title: CSPユニット7パイロット - パラメータ、戻り値、ライブラリ
          lesson_groups:
            csp_parameters_return_values:
              display_name: パラメータと戻り値
            csp_libraries:
              display_name: ライブラリ
            required:
              display_name: 概要
            optional_stages:
              display_name: オプションのステージ
          lessons:
            Parameters and Returns Explore:
              name: パラメータと戻り値 探索
            Parameters and Returns Investigate:
              name: パラメータと戻り値 調査
            Parameters and Returns Practice:
              name: パラメータと戻り値 練習
            Parameters and Returns Make:
              name: パラメータと戻り値 作成
            Libraries Explore:
              name: ライブラリ 探索
            Libraries Investigate:
              name: ライブラリ 調査
            Libraries Practice:
              name: ライブラリ 練習
            Libraries Make:
              name: ライブラリ 作成
            Project - Libraries Part 1:
              name: プロジェクト - ライブラリ パート1
            Project - Libraries Part 2:
              name: プロジェクト - ライブラリ パート2
            Project - Libraries Part 3:
              name: プロジェクト - ライブラリ パート3
            Assessment Day:
              name: 評価日
            Parameters and Return Explore:
              name: パラメータと戻り値 探索
            Parameters and Return Investigate:
              name: パラメータと戻り値 調査
            Parameters and Return Practice:
              name: パラメータと戻り値 練習
            Parameters and Return Make:
              name: パラメータと戻り値 作成
            Libraries Make Part 1:
              name: ライブラリ 作成 パート1
            Libraries Make Part  2:
              name: ライブラリ 作成 パート2
            Libraries Make Part 3:
              name: ライブラリ 作成 パート3
            Project - Make a Library Part 1:
              name: プロジェクト - ライブラリの作成 パート1
            Project - Make a Library Part 2:
              name: プロジェクト - ライブラリの作成 パート2
            Project - Make a Library Part 3:
              name: プロジェクト - ライブラリの作成 パート3
            Variables Make Demo:
              name: 変数作成デモ
            Unit 7 STUDENT Survey:
              name: ユニット7 生徒向けアンケート
            Unit 7 TEACHER Survey:
              name: ユニット7 先生向けアンケート
            'Lesson 11: Assessment Day':
              name: 'レッスン11: 評価日'
            "[OLD] Parameters and Return Make":
              name: "[旧]パラメータと戻り値 作成"
        csp8-pilot:
          title: CSPユニット8パイロット - PT作成の準備
          lessons:
            new stage:
              name: 新しいステージ
            Create PT - Review the Task:
              name: PTの作成 - タスクの確認
            Create PT - Make a Plan:
              name: PTの作成 - 計画の立案
            Create PT - Complete the Task:
              name: PTの作成 - タスクの完了
        csp4-2020:
          title: CSPユニット4 - 変数、条件文、関数 ('20～'21)
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            Variables Explore:
              name: 変数 探索
            Variables Investigate:
              name: 変数 調査
            Variables Practice:
              name: 変数 練習
            Variables Make:
              name: 変数 作成
            Conditionals Explore:
              name: 条件文 探索
            Conditionals Investigate:
              name: 条件文 調査
            Conditionals Practice:
              name: 条件文 練習
            Conditional Make:
              name: 条件文 作成
            Functions Explore / Investigate:
              name: 関数 探索/調査
            Functions Practice:
              name: 関数 練習
            Functions Make:
              name: 関数 作成
            Project - Decision Maker App Part 1:
              name: プロジェクト - 意思決定アプリ パート1
            Project - Decision Maker App Part 2:
              name: プロジェクト - 意思決定アプリ パート2
            Project - Decision Maker App Part 3:
              name: プロジェクト - 意思決定アプリ パート3
            'Lesson 15: Assessment Day':
              name: 評価日
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp5-2020:
          title: CSPユニット5 - リスト、ループ、トラバーサル ('20 - '21)
          lesson_groups:
            csp_lists:
              display_name: リスト
            csp_loops:
              display_name: くりかえし
            csp_traversals:
              display_name: トラバーサル
            csp_project:
              display_name: プロジェクト
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            Lists Explore:
              name: リスト 探索
            Lists Investigate:
              name: リスト 調査
            Lists Practice:
              name: リスト 練習
            Lists Make:
              name: リスト 作成
            Loops Explore:
              name: ループ 探検
            Loops Investigate:
              name: ループ調査
            Loops Practice:
              name: ループ練習
            Loops Make:
              name: ループの作成
            Traversals Explore:
              name: トラバーサル 探索
            Traversals Investigate:
              name: トラバーサル 調査
            Traversals Practice:
              name: トラバーサル 練習
            Traversals Make:
              name: トラバーサル 作成
            Semester Hackathon Part 1:
              name: セメスターハッカソン パート1
            Semester Hackathon Part 2:
              name: セメスターハッカソン パート2
            Semester Hackathon Part 3:
              name: セメスターハッカソン パート3
            Semester Hackathon Part 4:
              name: セメスターハッカソン パート4
            Semester Hackathon Part 5:
              name: セメスターハッカソン パート5
            'Lesson 18: Assessment Day':
              name: 評価日
            Unit 5 STUDENT Survey:
              name: ユニット5 生徒向けアンケート
            Unit 5 TEACHER Survey:
              name: ユニット5 先生向けアンケート
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp7-2020:
          lesson_groups:
            csp_parameters_return_values:
              display_name: パラメータと戻り値
            csp_libraries:
              display_name: ライブラリ
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            Parameters and Return Explore:
              name: パラメータと戻り値 探索
            Parameters and Return Investigate:
              name: パラメータと戻り値 調査
            Parameters and Return Practice:
              name: パラメータと戻り値 練習
            Parameters and Return Make:
              name: パラメータと戻り値 作成
            Libraries Explore:
              name: ライブラリ 探索
            Libraries Investigate:
              name: ライブラリ 調査
            Libraries Practice:
              name: ライブラリ 練習
            Project - Make a Library Part 1:
              name: プロジェクト - ライブラリの作成 パート1
            Project - Make a Library Part 2:
              name: プロジェクト - ライブラリの作成 パート2
            Project - Make a Library Part 3:
              name: プロジェクト - ライブラリの作成 パート3
            Assessment Day:
              name: 評価日
            Unit 7 STUDENT Survey:
              name: ユニット7 生徒向けアンケート
            Unit 7 TEACHER Survey:
              name: ユニット7 先生向けアンケート
            Variables Make Demo:
              name: 変数作成デモ
            'Lesson 11: Assessment Day':
              name: 評価日
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csd2-projects-temp:
          title: CSD ウェブプロジェクト - 一時
          description: CSD ウェブ開発のための新しいミニプロジェクトを開催する一時的な場所
          lessons:
            HTML  Project:
              name: HTMLプロジェクト
            CSS Project:
              name: CSSプロジェクト
          student_description: CSD ウェブ開発のための新しいミニプロジェクトを開催する一時的な場所
        csp9-pilot:
          title: CSPユニット9パイロット - データ
          lessons:
            new stage:
              name: 新しいステージ
            Learning From Data:
              name: データから学ぶ
            Exploring One Column:
              name: 1列の探索
            Filtering and Cleaning Data:
              name: データのフィルタリングとクリーニング
            Exploring Two Columns - Discrete:
              name: 2列の探索 - 分離
            Exploring Two Columns - Continuous:
              name: 2列の探索 - 連続
            Big Data, Crowdsourcing, and Machine Learning:
              name: ビッグデータ、クラウドソーシング、機械学習
            Machine Learning and Bias:
              name: 機械学習とバイアス
            Project - Tell a Data Story - Part 1:
              name: プロジェクト - データストーリーを伝える - パート1
            Project - Tell a Data Story - Part 2:
              name: プロジェクト - データストーリーを伝える - パート2
            'Lesson 10: Assessment Day':
              name: 'レッスン10: 評価日'
            Exploring Two Columns:
              name: 2列の探索
            'Lesson 9: Assessment Day':
              name: 'レッスン9: 評価日'
        csd2-2020:
          title: CSDユニット2 - ウェブ開発
          description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグ、リソースの使用、チームワークなどの貴重なプログラミングスキルも練習します。
          description_short: ウェブラボで独自のウェブサイトを構築する方法を学びましょう。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章： Web コンテンツと HTML
            csd2_2:
              display_name: 第 2 章：スタイルと CSS
            cspSurvey:
              display_name: アンケート
            csd2_1v2:
              display_name: '第1章: ウェブページの作成'
            csd2_2v2:
              display_name: '第2章: マルチページのウェブサイト'
          lessons:
            Exploring Web Pages:
              name: ウェブページの探索
            Intro to HTML:
              name: HTML入門
              description_student: "**今日の質問: ウェブページに_何_を載せ、_どのように_整理するかをコンピュータに伝えるにはどうしたらいいでしょうか？**
                \\\r \\\r \\\rこのレッスンでは、ウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを紹介します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。クラスはウェブラボでHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかについて話し合ってから、HTMLを使ってユニットの最初のウェブページを作成します。"
              description_teacher: "**今日の質問: ウェブページに_何_を載せ、_どのように_整理するかをコンピュータに伝えるにはどうしたらいいでしょうか？**
                \\\r \\\rこのレッスンでは、生徒はウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを学習します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。次に、生徒はウェブラボの模範的なHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかをクラスメートと話し合います。次に、生徒は最初のHTMLを記述します。まとめのディスカッションは、このレッスンを通じて開発したコンテンツと構造の理解を深めるのに役立ちます。"
            Headings:
              name: 見出し
              description_student: "**今日の質問: ウェブサイトの問題を解決するために協力するにはどうしたらいいでしょうか？**
                \\\r \\\r \\\rこのレッスンでは、HTMLタグの説明を続けますが、今回はヘッダーを使用します。このクラスでは、ヘッダータグを使ってページとセクションのタイトルを作成し、さまざまなヘッダー要素がデフォルトでどのように表示されるかを学習します。"
              description_teacher: "**今日の質問: ウェブサイトの問題を解決するために協力するにはどうしたらいいでしょうか？**
                \\\r\\\rこのレッスンでは、生徒は引き続きHTMLを使ってウェブページ上のテキストを構成しますが、今回は見出しを使用します。生徒は、さまざまな見出し要素がデフォルトでどのように表示されるかを学び、それを使ってページとセクションのタイトルを作成する練習をします。生徒は、さまざまな見出し要素がデフォルトでどのように表示されるかを学び、それを使ってページとセクションのタイトルを作成する練習をします。"
            Digital Footprint:
              name: デジタルフットプリント
              description_student: "**今日の質問: 個人情報が公開されないようにするにはどうしたらよいですか？** \\\r
                \\\rこのレッスンでは、個人のウェブサイトを作成する作業から一歩下がり、デジタルで共有する個人情報について説明します。クラスでは、各種のウェブサイトで共有した情報の種類について話し合い、次にソーシャルメディアページの例をいくつか見て、意図的にまたは意図せずに共有する可能性がある個人情報の種類を確認します。最後に、クラスは、情報をオンラインに上げるときに従うべき一連のガイドラインについて考えます。"
              description_teacher: "**今日の質問: 個人情報が公開されないようにするにはどうしたらよいですか？** \\\r
                \\\rこのレッスンでは、ウェブページの作成から一歩下がって、生徒がどのような個人情報を誰とオンラインで共有するかについて考えられるようにします。また、生徒がオンラインで共有することにした情報の多くは、リリースされた瞬間に自らのコントロールから外れるという考えをしっかりと持てるようにします。\\\r
                \\\r生徒は、いくつかのソーシャルメディアページを見て、人々が自分自身またはお互いについてどのような情報を共有しているかを判断します。最後に、オンラインで情報を投稿するのに適切だと考えるガイドラインについて考えます。\\\r
                \\\rこのレッスンの究極のポイントは、生徒を怖がらせることではなく、情報をウェブに公開する際に、生徒がどこからどこまでがコントロールできる、どこから先がコントロールできないかを体験してもらうことです。"
            Styling Text with CSS:
              name: CSSを使用したテキストのスタイル設定
              description_student: "**今日の質問: ウェブページのテキストのスタイルを変更するにはどうすればよいですか？**
                \\\r \\\r \\\rこのレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。このクラスは、CSSルールセットの基本的な構文を学習してから、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。次に、続いて、個人のウェブページを作成する際のコンテンツ、構造、スタイルの違いについて話し合います。"
              description_teacher: "**今日の質問: ウェブページのテキストのスタイルを変更するにはどうすればよいですか？**
                \\\r \\\r \\\rこのレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。生徒は、CSSルールセットの基本的な構文を学び、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。生徒はギネス世界記録保持者に関するHTMLページで作業し、指定されたページに独自のスタイルを追加します。"
            Intellectual Property:
              name: 知的財産
            Images:
              name: 画像
            'Websites for Expression ':
              name: 表現のためのウェブサイト
              description_student: "**今日の質問: ウェブサイトを使って自分を表現するにはどうすればよいですか？**\\\r
                \\\rこのレッスンでは、個人的な表現の手段としてウェブサイトを紹介します。このクラスでは、まず人々が興味や考えを表現して共有するさまざまな方法について話し合い、次に前のコースで生徒が作成した模範的なウェブサイトをいくつか見ていきます。最後に、全員でブレインストーミングを行い、作成するウェブサイトに含めるトピックと興味のリストを共有し、ユニットの残りの部分で個人のウェブサイトを開発するためのリソースを作成します。"
              description_teacher: "**今日の質問: ウェブサイトを使って自分を表現するにはどうすればよいですか？**\\\r\\\rこのレッスンでは、生徒は個人的な表現の手段としてウェブサイトを使用する方法を調査し、個人的なウェブサイトに含めたいトピックと興味のリストを作成します。レッスンを開始するに当たり、生徒は人々が興味や考えを表現して共有するさまざまな方法を話し合います。次に、いくつかの模範的なウェブサイトを見て、アイデアを表現する方法を明らかにします。最後に、生徒はブレーンストーミングを行い、個人的なウェブサイトに含めたいと思うトピックや興味のリストを共有し、ユニットを進めながら参照して着想に役立てられるようにします。"
            Styling Elements with CSS:
              name: CSSを使用した要素のスタイル設定
              description_student: "**今日の質問: ページの画像とレイアウトにスタイルを設定するにはどうすればよいですか？**\\\r
                \\\rこのレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。クラスは、新しいCSSスタイルを調査して、「世界のデザート」ページを変更することから始めます。その後、全員でこの新しい知識を自身のウェブサイトに適用します。"
              description_teacher: "**今日の質問: ページの画像とレイアウトにスタイルを設定するにはどうすればよいですか？**\\\r
                \\\rこのレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。生徒は、このレッスンの最初に、世界のデザートに関するウェブサイトを見ます。そして、このウェブサイトのCSSスタイルを調べて新たに変更を加え、独自のスタイルをこのページに追加します。
                デザートページで作業した後、生徒は新しいCSSプロパティの知識を自身のウェブサイトに活かします。"
            Project - Planning Layout and Style:
              name: プロジェクト - 計画のレイアウトとスタイル
            Project - Building a Webpage:
              name: プロジェクト - ウェブページの構築
            Purpose of a  Websites:
              name: ウェブサイトの目的
            Team Problem Solving:
              name: チームの問題解決
            Sources and Research:
              name: 出典と調査
            Planning a Multi-page Website:
              name: マルチページウェブサイトの計画
            Linking and Navigation:
              name: リンクとナビゲーション
            Project - Website for a Purpose:
              name: プロジェクト - ある目的のためのウェブサイト
            Peer Review and Final Touches:
              name: ピアレビューと最後の仕上げ
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
            'Mini-Project: HTML Web Page':
              name: 'ミニプロジェクト: HTML ウェブページ'
              description_student: "**今日の質問: HTMLを使って個人的な価値を表現するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、好みの設計トピックに関する個人的なウェブページを作成します。レッスンは、HTMLタグの復習から始まります。次にウェブページを設計し、それを実装するために必要なタグを見定めて、ウェブラボでページを作成します。"
              description_teacher: "**今日の質問: HTMLを使って個人的な価値を表現するにはどうすればよいですか？** \\\r
                \\\rこのオプションのミニプロジェクトでは、生徒は学んだことを使って、好みのトピックに関する独自の個人用ウェブページを作成します。レッスンは、生徒が学んだHTMLの復習から始まります。次に、ウェブページを設計し、実装に使用するタグを見定めてプロジェクトを開始します。次に、ウェブラボでウェブページを作成し、クラスと共有します。オプションとして、正式なフィードバックプロセスを行った後、ウェブサイトに最終的な変更を行ってから、プロセスについて考えてサイト自体を提出し、設計と考えを披露してもいいでしょう。このプロジェクトは、クラスのスケジュールに合わせて1日で完了することも、数日かけて行うこともできます。"
            'Mini-Project: Your Personal Style':
              name: 'ミニプロジェクト: 個人的なスタイル'
              description_student: "**今日の質問: ウェブページで自分のスタイルを表現するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、クラスが独自のスタイルのウェブページを作成します。レッスンはCSSの復習から始まります。次に、クラスはウェブページを設計し、必要なCSSプロパティを特定して、ウェブラボでウェブページを作成します。"
              description_teacher: "\\*\\* ウェブページを使って自分のスタイルを表現するにはどうすればよいですか？\\*\\*
                \\\r \\\rこのオプションのミニプロジェクトでは、生徒は学んだことを使って、好みのトピックに関する独自スタイルのウェブページを作成します。レッスンは、生徒が学んだCSSの復習から始まります。次に、ウェブページを設計し、実装に使用するプロパティを見定めてプロジェクトを開始します。次に、ウェブラボでウェブページを作成し、クラスと共有します。正式なフィードバックプロセスを行った後、ウェブサイトに最終的な変更を行ってから、プロセスについて考えてサイト自体を提出し、設計と考えを披露します。このプロジェクトは、クラスのスケジュールに合わせて1日で完了することも、数日かけて行うこともできます。"
            'Your Web Page - Define ':
              name: ウェブページ - 定義
            Your Web Page - Prepare:
              name: ウェブページ - 準備
              description_student: "**今日の質問: ウェブページを作成するための準備に何をする必要がありますか？** \\\r
                \\\rこのレッスンでは、クラスは問題解決プロセスの「準備」段階に取り組み、ウェブページのスタイルと要素をどうするかを決定します。クラスはさまざまなHTML、CSS、およびデジタル
                シティズンシップのガイドラインを確認してから、ページを設計および計画し、必要な画像をダウンロードしてページに組み込みます。その後、計画することでどうしてウェブサイトを思い通りに設計できるようになるかを考えます。"
              description_teacher: "**今日の質問: ウェブページを作成するための準備に何をする必要がありますか？** \\\r
                \\\rこのレッスンでは、生徒は問題解決プロセスの「準備」段階に取り組み、ウェブページのスタイルと要素をどうするかを決定します。まず、ウェブページの構築に必要なさまざまなHTML、CSS、およびデジタル
                シティズンシップのガイドラインを確認します。次に、ページを説明およびスケッチし、決定したレイアウトと設計を実現するために使用するタグとスタイルをリストします。次に、オンラインに移動して、ページに必要な画像を見つけてダウンロードします。その後、計画することでどうしてウェブサイトを思い通りに設計できるようになるかを考えます。"
            Project - Personal Web Page:
              name: プロジェクト - 個人ウェブページ
            Websites for a Purpose:
              name: ある目的のためのウェブサイト
            Linking Pages:
              name: ページのリンク
            Using Images:
              name: 画像の使用
          student_description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグ、リソースの使用、チームワークなどの貴重なプログラミングスキルも練習します。
        csd1-2020:
          title: CSDユニット1 - 問題の解決とコンピューティング
          description_short: 人が問題を解決するためにコンピューターを使ってどのように作業をするかを学びます。
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csd1_1:
              display_name: '第 1章: 問題解決プロセス'
            csd1_2:
              display_name: 第 2 章コンピューターと問題解決
            csd1_3:
              display_name: 代替レッスン
          lessons:
            CS Discoveries Pre-survey:
              name: CS発見の事前アンケート
            Intro to Problem Solving:
              name: 問題解決入門
              description_student: "**今日の質問: チームとして協力して問題を解決するために何が役立つでしょうか？**\\\r
                \\\rクラスはグループで作業し、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。"
              description_teacher: "**今日の質問: チームとして協力して問題を解決するために何が役立つでしょうか？** \\\r
                \\\rこのレッスンでは、生徒がグループで作業して、できるだけ多くのコインを載せたアルミホイル製のボートを設計します。ボートの設計は2ラウンドあり、ラウンド1よりも多くのコインを載せることを目指します。アクティビティは、以降のレッスンで問題解決プロセスのさまざまな手順をより詳細に学ぶことが分かるように組み立てられています。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。\\\r**このレッスンの別バージョンもあります。**
                \\\r\\\r\\* [新聞表](../4/)\\\r\\* [スパゲッティ ブリッジ](../5/)\\\r\\* [ペーパータワー](../6/)"
            The Problem Solving Process:
              name: The Problem Solving Process
              description_student: "**今日の質問: さまざまなタイプの問題を解決するのに使える共通の手順は何ですか？** \\\r
                \\\rこのレッスンでは、クラスが年間を通して使用する正式な問題解決プロセスである、定義 - 準備 - 試行 - 反映を紹介します。クラスは、この手順を前のレッスンのアルミ製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。"
              description_teacher: "**今日の質問: さまざまなタイプの問題を解決するのに使える共通の手順は何ですか？** \\\r
                \\\rこのレッスンでは、生徒が年間を通して使用する正式な問題解決プロセスである、定義 - 準備 - 試行 - 反映を紹介します。レッスンは、生徒が日常生活で遭遇するさまざまな種類の問題すべてについてブレインストーミングを行うように求めることから始まります。次に、生徒は問題解決プロセスの4つの手順を示し、協力してこの抽象的な手順を問題解決の実際の経験に関連付けます。最初の生徒は、この手順を前のレッスンのアルミニウム製のボートの問題、次に上手く解決できる問題、そして上手く解決できるように改善していきたい問題に関連付けます。レッスンの最後に、クラスは、ユニットと年間を通して使用するポスターを貼るプロセスの各手順について、一般的に役立つ戦略のリストを収集します。"
            Exploring Problem Solving:
              name: 問題解決の探求
              description_student: "**今日の質問: 問題解決プロセスをさまざまな問題に適用するにはどうすればいいですか？**
                \\\r \\\rこのレッスンでは、クラスは問題解決プロセスを、単語の検索、誕生日パーティの座席配置、旅行の計画という3つの異なる問題に適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。"
              description_teacher: "**今日の質問: 問題解決プロセスをさまざまな問題に適用するにはどうすればいいですか？**
                \\\r \\\rこのレッスンでは、各手順の重要性をよりよく理解するために、単語の検索、誕生日パーティの座席配置、クラスルームの再設計という3つの異なる問題に問題解決プロセスを適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。レッスンは、生徒たちが問題解決プロセスでの経験を振り返って締めくくります。往々にしてこれは最も重要な手順であるため、各手順をなぜ含めるのかを考え、自由回答式の問題により良く対処するのに役立つ戦略や問題についてブレインストーミングします。\\\r\\\r最初の2つの問題は2クラス分に収まるかもしれませんが、3番目の問題は2日目に取り組む必要があるでしょう。"
            What is a Computer?:
              description_student: "**今日の質問: コンピューターとは何ですか？** \\\r \\\rこのレッスンでは、クラスでコンピューターの予備的な定義を作成します。コンピューターの考えられる定義についてブレインストーミングを行った後、クラスはグループで作業し、ポスター用紙で写真を「コンピューターである」または「コンピューターではない」に分類し、最も難しいカテゴリのいくつかを選択する動機を説明します。次に、先生はコンピューターの定義を導入し、グループが新しい定義に従ってポスターを修正できるようにします。"
              description_teacher: "**今日の質問: コンピューターとは何ですか？** \\\r \\\rこのレッスンでは、生徒は「コンピューター」とは何かを考えます。レッスンを開始したら、コンピューターの考えられる定義をブレインストーミングし、このブレインストーミングの結果をボードに配置します。次に、生徒はグループで作業して、ポスター用紙で写真を「コンピューター」か「コンピューターではない」かに分類します。グループはポスターを部屋の周りに配置し、なぜそのように分類したかを簡単に説明します。次に、先生はコンピューターの定義を紹介し、生徒に新しい定義に従ってポスターを修正してもらいます。\\\\"
            Input and Output:
              name: 入出力
              description_student: "**今日の質問: コンピューターは入力と出力をどのように使って、問題解決に必要な情報を取得および提供しているのでしょうか？**
                \\\r \\\r \\\rこのレッスンでは、コンピューターが入力と出力を介してユーザーから情報を取得および提供する方法をクラスで検討します。
                「思考の問題」を解決するために必要な情報を最初に検討した後、クラスはそのプロセスとの間の入力と出力を具体的に見ていきます。その後、一連のアプリを詳しく見て、各アプリの入出力を見定めます。"
              description_teacher: "**今日の質問: コンピューターは入力と出力をどのように使って、問題解決に必要な情報を取得および提供しているのでしょうか？**
                \\\r \\\r このレッスンでは、コンピューターが入力と出力を通じてユーザーから情報を取得および提供する方法を検討します。生徒はまず、「思考の問題」を解決するために必要な情報を検討し、その情報を使って推奨事項を作成します。次に、そのプロセスへの入力と出力を識別します。その後、同じプロセスを使うアプリを取り上げ、そのアプリが情報を入出力する方法を見定めます。最後に、コンピューターが問題解決するのに使える他のタイプの入力と出力を検討します。"
            Processing:
              name: 処理
              description_student: "**今日の質問: コンピューターは情報をどのように処理できるでしょうか？** \\\r \\\rこのレッスンでは、クラスがこのコースを通じて使用する4つのタイプの処理を紹介します。一連のアプリを通じて、クラスは処理を使って入力を出力に変換する方法を探ります。最後に、クラスは他にどのような種類のアプリの処理が役に立つかをブレインストーミングします。"
              description_teacher: "**今日の質問: コンピューターが情報を処理する方法にはどのようなものがありますか？** \\\r
                \\\rこのレッスンでは、if/then (条件)、一致の発見 (検索)、カウント、そして比較という4つの一般的な処理タイプを生徒に紹介します。まず、サンプルアプリを通じて処理タイプについて説明します。次に、より多くのアプリを調査して、各アプリが使用する処理タイプを決定します。そして自分のアプリについて考え、アプリが機能するために必要な処理タイプを決定します。最後に、他の処理タイプについてブレインストーミングを行います。これは、役立つかもしれないけれどもレッスンの中心テーマとしては扱われなかったものです。"
            Apps and Storage:
              name: アプリとストレージ
              description_student: "**今日の質問: ストレージがコンピューティングプロセスの重要な部分である理由** \\\r
                \\\rこのレッスンでは、この章のコンピューティングモデルの最後の部分であるストレージについて説明します。クラスはいくつかのアプリに触れ、後のために保存しておく情報とその理由を決定します。次に、コンピューティングの入力-出力-ストレージ-処理モデルを提示し、クラスは、さまざまなアプリが各コンポーネントをどのように使用しているか、またそれが何かがコンピューターと見なされるべきかどうかにどのように影響するかを考えます。"
              description_teacher: "**今日の質問: ストレージがコンピューティングプロセスの重要な部分である理由** \\\r
                \\\rこのレッスンでは、ユニットのコンピューティングモデルの最後のコンポーネントであるストレージについて説明します。 「服のピッカー」アプリを試した後、生徒はアプリを実行するたびにどの情報をアプリに保存するか、また何を入力するかについて話し合います。次に、一連のアプリを調べ、どの情報を格納するかについて決定したことを使って、格納する情報を決めるためのガイドラインを作成します。次に、この章のコンピューティングモデルの4つのコンポーネント
                (入力、出力、ストレージ、処理) を確認します。その後、章の前半の「コンピューター」として分類すべきアイテムについての決定を修正する最後のチャンスがあります。レッスンの最後には、独自のアプリのアイデアと、ストレージをどのように活用できるかを振り返ります。"
            Project - Propose an App:
              name: プロジェクト - アプリの提案
              description_student: "**今日の質問: IOSPモデルは、問題を解決するアプリの設計にどのように役立つでしょうか？**
                \\\r \\\r問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、このクラスでは、実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、各アプリの機能を紹介するポスターのプレゼンテーションでクライマックスを迎えます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。"
              description_teacher: "**今日の質問: IOSPモデルは、問題を解決するアプリの設計にどのように役立つでしょうか？**
                \\\r \\\r問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、生徒は実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、アプリの機能を紹介するポスターを作成して、クラスメートに示します。プロジェクトガイドにはステップバイステップの指示が示され、生徒が自分の考えを整理するのに役立ちます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。"
            Post-Project Test:
              name: プロジェクト後のテスト
            'Alternate Versions of Lesson 1: Intro to Problem Solving':
              name: 'レッスン1の代替バージョン: 問題解決入門'
            'Alternate Versions of Lesson 3: Exploring Problem Solving':
              name: 'レッスン3の代替バージョン: 問題解決の探索'
            'Lesson 1: Intro to Problem Solving - Newspaper Table':
              name: 'レッスン1: 問題解決入門 - 新聞の表'
            'Lesson 1: Intro to Problem Solving - Spaghetti Bridge':
              name: 'レッスン1: 問題解決入門 - スパゲッティ ブリッジ'
            'Lesson 1: Intro to Problem Solving - Paper Tower':
              name: 'レッスン1: 問題解決入門 - ペーパータワー'
            'Lesson 3: Exploring Problem Solving - Games Theme':
              name: 'レッスン3: 問題解決の探索 - ゲームのテーマ'
            'Lesson 3: Exploring Problem Solving - Animals Theme':
              name: 'レッスン3: 問題解決の探索 - 動物のテーマ'
            'Alt Lesson 1: Intro to Problem Solving - Spaghetti Bridge':
              name: '代替レッスン1: 問題解決入門 - スパゲッティ ブリッジ'
            '"Alt Lesson 1:" Intro to Problem Solving - Newspaper Table':
              name: "\\\\「代替レッスン1:\\\\」問題解決入門 - 新聞の表"
            " Newspaper Table (Alt Lesson 1: Intro to Problem Solving -)":
              name: 'Newspaper Table (Alt Lesson 1: Intro to Problem Solving -)'
            'Spaghetti Bridge - "Alt Lesson 1: Intro to Problem Solving "':
              name: 'スパゲッティ ブリッジ - 「代替レッスン1: 問題解決入門」'
            " Newspaper Table (Alternative Lesson 1: Intro to Problem Solving)":
              name: 'Newspaper Table (Alternative Lesson 1: Intro to Problem Solving)'
            'Spaghetti Bridge - (Alt Lesson 1: Intro to Problem Solving)':
              name: 'スパゲッティ ブリッジ - (代替レッスン1: 問題解決入門)'
            'Spaghetti Bridge (Alt Lesson 1: Intro to Problem Solving)':
              name: 'スパゲッティ ブリッジ (代替レッスン1: 問題解決入門)'
            'Paper Tower (Lesson 1: Intro to Problem Solving)':
              name: 'ペーパータワー (レッスン1: 問題解決入門)'
            " Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)":
              name: '新聞の表 (代替レッスン1: 問題解決入門)'
            'Spaghetti Bridge (Alt. Lesson 1: Intro to Problem Solving)':
              name: 'スパゲッティ ブリッジ (代替レッスン1: 問題解決入門)'
            'Games Theme (Lesson 3: Exploring Problem Solving)':
              name: 'ゲームのテーマ (レッスン3: 問題解決の探索)'
            'Exploring Problem Solving (Lesson 3: Exploring Problem Solving)':
              name: '問題解決の探索 (レッスン3: 問題解決の探索)'
            'Newspaper Table (Alternate Lesson 1: Intro to Problem Solving)':
              name: '新聞の表 (代替レッスン1: 問題解決入門)'
            'Spaghetti Bridge (Alternate Lesson 1: Intro to Problem Solving)':
              name: 'スパゲッティ ブリッジ (代替レッスン1: 問題解決入門)'
            'Games Theme (Alternate Lesson 3: Exploring Problem Solving)':
              name: 'ゲームのテーマ (代替レッスン3: 問題解決の探索)'
            'Exploring Problem Solving (Alternate Lesson 3: Exploring Problem Solving)':
              name: '問題解決の探索 (代替レッスン3: 問題解決の探索)'
            'Paper Tower (Alternate Lesson 1: Intro to Problem Solving)':
              name: 'ペーパータワー (代替レッスン1: 問題解決入門)'
            'Animals Theme (Alternate Lesson 3: Exploring Problem Solving)':
              name: '動物のテーマ (代替レッスン3: 問題解決の探索)'
            Intro to Problem Solving - Newspaper Table (Alternate Lesson 1):
              name: 問題解決入門 - 新聞の表 (代替レッスン1)
              description_student: "**今日の質問: チームとして協力して問題を解決するために何が役立つでしょうか？**\\\r
                \\\rクラスはグループで作業し、できるだけ多くの本を持つ新聞の表を設計します。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。"
              description_teacher: "**今日の質問: チームとして協力して問題を解決するために何が役立つでしょうか？** \\\r
                \\\rこのレッスンでは、生徒がグループで作業して、できるだけ多くの本を支えるスパゲッティ ブリッジを設計します。ブリッジの設計は2ラウンドあり、ラウンド1よりも多くの本を支えることを目指します。アクティビティは、以降のレッスンで問題解決プロセスのさまざまな手順をより詳細に学ぶことが分かるように組み立てられています。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。\\\r**これは[問題解決入門-アルミホイール製のボート]（../1/）の代替アクティビティです**"
            Spaghetti Bridge (Alternate Lesson 1):
              name: スパゲッティ ブリッジ (代替レッスン1)
            Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1):
              name: 問題解決入門 - スパゲッティ ブリッジ (代替レッスン1)
              description_student: "**今日の質問: チームとして協力して問題を解決するために何が役立つでしょうか？**\\\r
                \\\rクラスはグループで作業し、できるだけ多くの本を支えるスパゲッティ ブリッジを設計します。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。"
              description_teacher: "**今日の質問: チームとして協力して問題を解決するために何が役立つでしょうか？** \\\r
                \\\rこのレッスンでは、生徒がグループで作業して、できるだけ多くの本を支えるスパゲッティ ブリッジを設計します。ブリッジの設計は2ラウンドあり、ラウンド1よりも多くの本を支えることを目指します。アクティビティは、以降のレッスンで問題解決プロセスのさまざまな手順をより詳細に学ぶことが分かるように組み立てられています。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。\\\r**これは[問題解決入門-アルミホイール製のボート]（../1/）の代替アクティビティです**"
            Intro to Problem Solving - Paper Tower (Alternate Lesson 1):
              name: 問題解決入門 - ペーパータワー (代替レッスン1)
              description_student: "**今日の質問: チームとして協力して問題を解決するために何が役立つでしょうか？**\\\r
                \\\rクラスはグループで作業し、できるだけ多くの本を持つ新聞の表を設計します。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。"
              description_teacher: "**今日の質問: チームとして協力して問題を解決するために何が役立つでしょうか？** \\\r
                \\\rこのレッスンでは、生徒がグループで作業して、できるだけ多くの本を持つ新聞の表を設計します。表の設計は2ラウンドあり、最初のラウンドよりも多くの本を持てるようにすることを目指します。アクティビティは、以降のレッスンで問題解決プロセスのさまざまな手順をより詳細に学ぶことが分かるように組み立てられています。レッスンの最後に、グループはアクティビティでの経験を振り返り、残りのコースで行う問題解決のタイプに慣れるようにしていきます。\\\r**これは[問題解決入門-アルミホイール製のボート]（../1/）の代替アクティビティです**"
            Exploring Problem Solving - Games Theme (Alternate Lesson 3):
              name: 問題解決の探索 - ゲームのテーマ (代替レッスン3)
              description_student: "**今日の質問: 問題解決プロセスをさまざまな問題に適用するにはどうすればいいですか？**
                \\\r \\\rこのレッスンでは、クラスは問題解決プロセスを、迷路、論理パズル、運動会の計画という3つの異なる問題に適用します。です。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。"
              description_teacher: "**今日の質問: 問題解決プロセスをさまざまな問題に適用するにはどうすればいいですか？**
                \\\r \\\rこのレッスンでは、各手順の重要性をよりよく理解するために、迷路、チームをまとめて行う徒競走、ゲームの設計という3つの異なる問題に問題解決プロセスを適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。レッスンは、生徒たちが問題解決プロセスでの経験を振り返って締めくくります。往々にしてこれは最も重要な手順であるため、各手順をなぜ含めるのかを考え、自由回答式の問題により良く対処するのに役立つ戦略や問題についてブレインストーミングします。\\\r\\\r最初の2つの問題は2クラス分に収まるかもしれませんが、3番目の問題は2日目に取り組む必要があるでしょう。"
            Exploring Problem Solving - Animals Theme (Alternate Lesson 3):
              name: 問題解決の探索 - 動物のテーマ (代替レッスン3)
              description_student: "**今日の質問: 問題解決プロセスをさまざまな問題に適用するにはどうすればいいですか？**
                \\\r \\\rこのレッスンでは、クラスは問題解決プロセスを、タングラムパズル、基準に従ったペットの選択、およびペットを飼うイベントの計画という3つの異なる問題に適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。"
              description_teacher: "**今日の質問: 問題解決プロセスをさまざまな問題に適用するにはどうすればいいですか？**
                \\\r \\\rこのレッスンでは、各手順の重要性をよりよく理解するために、タングラム、複数の人のためのペットの選択、およびペットを飼うイベントの計画という3つの異なる問題に問題解決プロセスを適用します。問題の複雑さは徐々に上がり、定義が不十分になっていきます。そして問題解決プロセスがこれらのタイプの問題に取り組むときに特にどのように役立つかを取り上げます。レッスンは、生徒たちが問題解決プロセスでの経験を振り返って締めくくります。往々にしてこれは最も重要な手順であるため、各手順をなぜ含めるのかを考え、自由回答式の問題により良く対処するのに役立つ戦略や問題についてブレインストーミングします。\\\r\\\r最初の2つの問題は2クラス分に収まるかもしれませんが、3番目の問題は2日目に取り組む必要があるでしょう。"
            Storage:
              name: ストレージ
        csd4-2020:
          title: CSDユニット4 - 設計プロセス
          description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
          description_short: ユーザーのニーズを満たすプログラムを設計する方法を学びましょう。
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：ユーザーを中心にしたデザイン
            csd4_2:
              display_name: 第 2 章：アプリのプロトタイピング
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
          lessons:
            Analysis of Design:
              name: デザインの分析
              description_student: このクラスでは、さまざまなティーポットのデザインを探り、デザインの選択と作成、それにその理由を考えます。ティーポットを例として使って、クラスはユーザー間の関係、ユーザーのニーズ、およびユーザーが使用するオブジェクトのデザインを探ります。
              description_teacher: グループで問題を解決し、他のユーザーのための製品を開発することに取り組むユニットを始めるに当たり、生徒はさまざまなティーポットのデザインを調査することから取りかかります。生徒は各ティーポットを分析し、特定のユーザーのニーズがその設計にどのように影響を与えているかをつかみます。設計をどうするかについて考え、各ティーポットを潜在的なユーザーのニーズに合わせようと試みて、製品
                (物理的およびデジタルの両方) の設計にユーザー中心のアプローチをとるで製品の有用さと使いやすさがどのように向上するかを見ていきます。アクティビティの終わりに、いずれかのティーポットをより便利に、または使いやすくするようにティーポットに変更提案を行うように生徒に求めます。
            Understanding Your User:
              name: ユーザーを理解する
              description_student: このクラスでは、ユーザープロファイルを使って、さまざまなユーザーが各種製品にどのように反応するかを探ります。クラスのメンバーはそれぞれ違う人としてロールプレイングし、他者の目を通してデザインを体験します。
              description_teacher: "設計者は、有用な製品を作成するためにユーザーのニーズを理解する必要があります。このレッスンでは、ユーザープロファイルを使って他者としてロールプレイングし、そのユーザーとして一連の製品を使って確かめることによって、他者のためにデザインするにはどうしたらよいかを考えるように生徒を促します。各生徒には、あるユーザープロファイルが割り当てられ、そこにはその個人の情報が記載されています。そのユーザープロファイルを使って、適切な製品を選択し、製品設計をレビューし、設計をどう改善したらよいかを提案します。\\\r"
            User-Centered Design Micro Activity:
              name: ユーザー中心のデザインマイクロアクティビティ
              description_student: 少人数のグループになり、設計プロセスを使って、スマートな服のアイデアを考え出します。ブレーンストーミングからユーザーの特定、最終的な設計の提案まで、このレッスンはこのユニットで他者のニーズに合わせたソリューションの設計を行う最初の機会になります。
              description_teacher: このレッスンでは、ユニット全体で生徒が目にすることになる設計プロセスの簡略版を見ていきます。生徒はまず、スマートな服の潜在的なユーザーを念頭にブレインストーミングします。クラスとしてアイデアを幅広いカテゴリにグループ化し、各グループはユーザーのカテゴリを1つ選択します。グループはこのプロセスを繰り返して、ユーザーのニーズや懸念をブレインストーミングし、最終的にニーズを分類して、重点的に取り組む対象を選択します。最後に、生徒は、意思決定を促すためにブレインストーミングして導き出された特定のニーズと懸念を使って、スマートな服を設計します。クラスの終わりに、生徒は意思決定プロセスをすばやく共有し、選択したユーザーのニーズに製品がどれだけうまく対応しているかについてフィードバックを受け取ります。
            User Interfaces:
              name: ユーザーインターフェイス
              description_student: プログラムを書く前に、紙のプロトタイプを使ってソフトウェアをどのようにテストしてフィードバックを受け取るかを確認します。デベロッパーのアイデア出しを手伝うために、クラスは紙で作られたアプリのプロトタイプをテストして意見を出します。
              description_teacher: ミニデザインプロジェクトに続いて、生徒はデザインの次のフェーズ、つまりユーザーのニーズに対応する製品のプロトタイプを作成することに目を向けます。チームで、生徒は「Txt
                Ur Grndkdz」と呼ばれるチャットアプリの紙のプロトタイプを調べます。生徒は、コンピューターを使う前に、この紙のプロトタイプを使うことで、アイデアと仮定をすばやくテストする方法を確認できます。提供されたプロトタイプを「使用」した後、生徒は次のイテレーションを改善する方法をつかんでいきます。
            Feedback and Testing:
              name: フィードバックとテスト
              description_student: ユーザーはアプリをテストしており、デベロッパーに伝えたいフィードバックが数多くあります。クラスは、このフィードバックをすべて整理し、共通のテーマとニーズを特定し、プロトタイプを修正し始めて、ユーザーのニーズによりよく適合するようにする必要があります。
              description_teacher: このレッスンでは、生徒は前のレッスンの紙のプロトタイプを作成したアプリの「ユーザー」からのフィードバックを使って、その紙のプロトタイプのユーザーインターフェイスの改善を行います。このレッスンは、設計者がテクノロジーを使って人のニーズをユーザーインターフェイスまたはエクスペリエンスに変える必要があるということを考えるところから始まります。その後、生徒は前のレッスンで扱ったアプリのユーザーから一連のフィードバックとリクエストを受け取ります。生徒はグループになってフィードバックを分類し、アプリのインターフェイスをどのように変更するとフィードバックで寄せられたニーズを満たすことができるかを探ります。次に、生徒はグループで、特定したニーズの1つを満たせるように、この変更の一部を実装します。
            Identifying User Needs:
              name: ユーザーのニーズの特定
              description_student: ここまで、クラスが検討したユーザーはすべてリモートで、ユーザーから得られた情報はすべてテキストまたはロールプレイを通じて得られました。これで、クラスはお互い潜在的なユーザーとしてフィードバックを出し合い、ペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることができます。
              description_teacher: ここまで、生徒はある程度離れたユーザーのための設計に集中してきました。ブレーンストーミング、プロファイル、テキストによるフィードバックなど、エンドユーザーとの接点は直接的なものではありませんでした。これは、ユーザーについて考えるときに自分の考えから一歩抜け出るのを助けるために設けられた距離ですが、実際のユーザーから直接情報を取得するには、クラスメートに頼る必要があります。このレッスンでは、生徒はペアになってお互いにユーザー
                (および設計者) になるので、誰でもエンドユーザーに直接インタビューし、質問をしてより詳しい情報に基づいた設計が行えます。生徒はペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることを試みます。
            Project - Paper Prototype:
              name: プロジェクト - 紙のプロトタイプ
              description_student: 前のレッスンのインタビュー情報を使って、クラスはユーザーのニーズに対処するためのアプリのアイデアを思いつきます。そのアイデアを表現し、それが効果的であることをテストするために、各自で紙のプロトタイプを作成してテストします。
              description_teacher: 前のレッスンのピアインタビューに基づいて、各生徒はユーザーの問題に対処するアプリのアイデアを思いつきます。次に、生徒は個々のノートカードに「画面」を描くことにより、考えたアプリの紙のプロトタイプを作成します。プロジェクトガイドが、アプリの作成やテストを含むプロセスを通じて手引きになります。ユーザーとテストすることで、作成したユーザーインターフェイスに関する想定が正確だったかを確認できます。
            Designing Apps for Good:
              name: 優れたアプリの設計
              description_student: アプリの設計プロジェクトを開始するに当たってクラスをチームに編成され、アプリのトピックについて詳しく見ていきます。社会に影響を与えるアプリ例をいくつか示すことで、プロジェクトに取り組むインスピレーションが得られます。
              description_teacher: ユニットの最後まで続けていくアプリ設計プロジェクトを開始するに当たり、生徒は先ず、他の生徒が社会に影響を与えようと設計したアプリを見ていきます。次に、クラスは、問題解決プロセスの定義、準備、試行、反映の各手順をレビューしながら、社会的な影響力を持つ独自のアプリのアイデアを練ります。最後に、生徒はプロジェクトチームを編成し、アプリの開発過程全体を通じてチームでどのように作業を進めるかについて話をまとめます。
            Market Research:
              name: 市場調査
              description_student: 似たようなユーザーに役立つ可能性のある既存のアプリを探索して、アプリ開発に飛び込みましょう。各グループは、取り組んでいる同じトピックに対処するアプリをいくつか特定し、それらのアプリを使って、追求するアプリのアイデアを洗練させていきます。
              description_teacher: このレッスンでは、生徒は、ユーザーのニーズをよりよく理解するために、作成しようとしているアプリと同じ様なアプリを調査します。生徒はチーム内で他のアプリをインターネットで検索し、興味深いアプリを評価します。レッスンが終わる頃までに、各チームは作成したいアプリのタイプについてより明確なアイデアを持ち、ターゲットユーザーが誰であるかをさらに絞り込みるようになっていることでしょう。各チームは、調査したすべてのアプリの引用リストを用意します。これは、最終的なプレゼンテーションで使います。
            Paper Prototypes:
              name: 紙のプロトタイプ
              description_student: 紙のプロトタイプを使うと、多くの時間をかけてプログラムを書く前に、デベロッパーはアイデアをすばやくテストできます。このレッスンでは、チームはアプリラボで作成されたサンプルアプリをいくつか見て、それらのアプリを使って得た情報に基づき、アプリの最初のプロトタイプを紙で作成します。
              description_teacher: "アプリを設計し始める前に、生徒が期待事項の範囲を決められるようにする必要があります。生徒は最終的にアプリラボでアプリのプロトタイプを作成するため、持っているアイデアがアプリラボで簡単にプロトタイプが作成できる種類のアプリと一致すれば、作業しやすくなります。チームは、アプリラボで作成できるアプリのデモとして設計されたサンプルアプリを調べて、範囲の決定を開始します。その後、チームは1つ
                (または複数) のアプリを自分のアプリのベースとして選択します。そして時間をとってアプリの基本的な機能について話し合ってから、3x5のインデックスカードを使って紙のプロトタイプを作成します。\\\r"
            Prototype Testing:
              name: " プロトタイプテスト"
              description_student: このレッスンでは、チームはクラスの他のメンバーと一緒に紙のプロトタイプをテストします。1人の生徒がコンピューターを演じ、1人がナレーションを行い、残りのメンバーは観察することで、チームはアプリのデザインに関するフィードバックをすぐに受け取れ、アプリのプロトタイプの次のバージョンを作成する際の参考にできます。
              description_teacher: 紙のプロトタイプを作成する主な目的は、プログラムを作成する前に、テストとイテレーションを素早く行えるようにすることにあります。このレッスンのポイントは、アプリラボに移る前にチームにプロトタイプをテストする機会を与えることにあります。チームは、アプリをユーザーとテストする計画を立ててから、クラス内
                (場合によってはクラス外) の他の複数の生徒にプロトタイプをテストしてもらいます。ユーザーがプロトタイプをテストできるように、生徒はテストでの役割
                (「ナレーター」、「コンピューター」、および「オブザーバー」) を割り当て、さらにいくつかの質問を用意してテスト完了後にユーザーに回答してもらいます。
            Digital Design:
              name: デジタルデザイン
              description_student: 紙のプロトタイプの開発、テスト、フィードバックが完了したチームは、アプリラボに移動して、アプリの次のイテレーションを構築します。ドラッグ・アンド・ドロップの設計モードを使って、各チームメンバーはチームのアプリの少なくとも1ページ分を作成し、前回のテストラウンドで受け取ったフィードバックに応えます。
              description_teacher: 紙のプロトタイプのアプリを共同で開発した後、グループは手分けして、紙のプロトタイプに基づいてインタラクティブなデジタルバージョンの作成に向けて作業し始めます。アプリラボのドラッグ・アンド・ドロップ設計モードを使って、生徒は作業しながらスキル開発レベルの段階をステップアップし、紙のプロトタイプからデジタルバージョンを構築する方法を学びます。そこから、各グループメンバーはアプリラボでアプリの少なくとも1ページ分を作成し、後で結合して1つのアプリにします。
            Linking Screens:
              name: 画面のリンク
              description_student: 前のレッスンでクラスが設計した画面を基に、チームは画面を1つのアプリに統合します。単純なプログラムを追加して、ボタンをクリックすると適切な画面に切り替わるようにすることもできます。
              description_teacher: このレッスンでは、チームは前のレッスンで設計した画面を1つのアプリに結合し、プログラムを使ってそれらをリンクできます。生徒は、前のレッスンで開始したモデルアプリを組み上げることで、イベント駆動型の基本的なプログラミングを学びます。生徒が昨日設計した画面に加えて、追加の画面を作成する方法や、他の人が作成した画面をインポートする方法についても学びます。
            Testing the App:
              name: アプリのテスト
              description_student: チームは、今度はインタラクティブなプロトタイプを使って、別のユーザーテストを実行します。この一連のテストから収集したフィードバックは、アプリのプロトタイプの最終反復に反映させます。
              description_teacher: 前のレッスンの終わりまでに、各チームはアプリの実行可能な最小限のプロトタイプが出来ているはずです。このレッスンの主な目的は、チームが実際に他の人と一緒にアプリをテストすることにあります。他の人はできればアプリの対象となる対象ユーザーから、またはクラスの異なるチームから選びます。チームのオブザーバーはテスト結果を計画段階で使用したワークシートに記録します。紙のプロトタイプをテストしたときと同様に、チームは、テストを実行して観察する前に、特定のシナリオを計画することから始めます。
            Improving and Iterating:
              name: 改善とイテレーション
              description_student: テストの最終ラウンドで受け取ったフィードバックを使って、チームはユーザーのニーズに対応する変更を実装します。各チームは、追加したい機能と修正が必要なバグを追跡して、優先順位を付けます。
              description_teacher: チームはこの時点で、複数のイテレーションとユーザーテストのラウンドを経たアプリのプロトタイプを開発しています。最後のユーザーテストで得られた情報とガイダンスを活用して、各生徒はチームアプリの改善を計画して実装する機会を得ます。使える時間と生徒の興味に応じて、テストとイテレーションのサイクルを必要な回数だけ実行してもいいでしょう。
            Project - App Presentation:
              name: プロジェクト - アプリのプレゼンテーション
              description_student: 各チームは、開発したアプリを「売り込む」ためのプレゼンテーションを準備します。ここで、どの点に苦労したか、何が上手くいったか、そして将来の計画を皆に披露します。
              description_teacher: この時点までに、チームは個人的および社会的に重要なトピックを調査し、紙のプロトタイプとデジタルプロトタイプの両方を開発およびテストし、最初のアプリのイテレーションを複数作成して新しい機能とバグ修正を組み込んだことでしょう。ここでは、何をしたかを振り返り、一貫したプレゼンテーションをまとめて、開発プロセスを披露します。チームは、指定されたプレゼンテーションテンプレートを使って、アプリ開発のプロセスについてプレゼンテーションを行う準備をします。プレゼンテーションには、解決しようとした問題、テストからのフィードバックを組み込んだ方法、および将来の計画などを話してもいいでしょう。
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
          student_description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
        csd5-2020:
          title: CSDユニット5 - データと社会 ('20～'21)
          description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
          description_short: コンピューターを使ってデータの問題を解決する方法を学びましょう。
          lesson_groups:
            csd5_1:
              display_name: 第1章：情報を表現する
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
          lessons:
            Representation Matters:
              name: 表現が重要
              description_student: この最初のレッスンでは、データとは何か、またデータを使ってどのように問題を解決するかの概要を説明します。グループはデータセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
              description_teacher: この最初のレッスンでは、生徒はデータとは何か、またデータを使ってどのように問題を解決するかの概要を学びます。レッスンの冒頭で、データについての一般的な理解を得るために簡単なディスカッションを行います。次に、グループに別れ、データセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。各グループは、さまざまな方法
                (写真、レシピ、メニュー、栄養) で表される食事から選べ、お勧めの利点が決まります。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
            Patterns and Representation:
              name: パターンと表現
              description_student: このレッスンでは、表現システムを構築するために必要なものは何かを詳しく見ていきます。グループは、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。次に、そのシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。このクラスでは、実用的な解決策が数多くあることを認めながら、稼働中のシステム間に共通点があることについて話し合います。
              description_teacher: このレッスンでは、生徒は情報を表現する独自のシステムを作成します。レッスンの冒頭で、はい/いいえの応答を表すのにすでに使っているさまざまなシステムについてブレインストーミングを行います。次に、小さなグループに別れて作業をし、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。使用するカードには、6種類の絵
                (6匹の動物、6色など) のいずれかが含まれているため、アルファベット全体を表すには、複数のカードのパターンを使って各文字を表す必要があります。生徒は自分のシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。まとめのディスカッションでは、クラスはさまざまなシステムの長所と短所をレビューします。稼働中のシステム間に共通点があることについて話し合い、問題の解決法は数多くあることを認めます。重要なことは、コミュニケーションを行う際、誰もが同じ任意のシステムを使うことです。
            ASCII and Binary Representation:
              name: ASCIIとバイナリ表現
              description_student: このレッスンでは、情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を紹介します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、バイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。
              description_teacher: このレッスンでは、生徒は情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を学習します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、生徒はバイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。レッスンの最後にデブリーフィングを行い、アクティビティの主要な学習目標をまとめるのに役立てます。
            Representing Images:
              name: 画像の表現
              description_student: このレッスンでは、今度は画像を使ってバイナリ表現システムの学習を続け、画像を正方形（または「ピクセル」)
                に分割する概念を説明します。正方形（または「ピクセル」) をそれぞれオンまたはオフにして、画像全体を作成します。ピクセレーションウィジェットを使って短いチャレンジセットを行った後、画像を表現するためのシステムと、前のレッスンで学習したテキストを表現するためのシステムを関連付けます。
              description_teacher: このレッスンでは、コンピューターが画像をどのように表すかを学習します。レッスンを開始するに当たり、複雑なビジョンをバイナリパターンに変える上でどのような課題があるかを検討します。この変換がどのように行われるかを示す一連の画像を通じて、生徒は画像を正方形（または「ピクセル」)
                に分割する概念の説明を受けます。ピクセルそれぞれをオンまたはオフにすると、画像全体を作成できます。次に、生徒はピクセレーションウィジェットを使って短い一連の課題に取り組み、白黒の画像を描画します。パズルは、このように画像を表現する上で直面する課題を取り上げるように設計されています。最後に、生徒は画像を表現するシステムと、前のレッスンで学習したテキストを表現するシステムを関連付けます。
            Representing Numbers:
              name: 数値の表現
              description_student: このレッスンでは2進数システムを紹介します。 2進数 (base-2) の数体系で場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、パターンを一般的な4ビットシステムに拡張します。
              description_teacher: このレッスンでは、生徒は2進数システムを学習します。 2進数 (base-2) の数体系でドットを集めて場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、生徒はパターンを一般的な4ビットシステムに拡張します。
            Keeping Data Secret:
              name: データの秘密を守る
              description_student: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
              description_teacher: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
            Combining Representations:
              name: 表現を組み合わせる
              description_student: このレッスンでは、3種類のバイナリ表現システム (ASCII文字、2進数、およびイメージ) をすべて組み合わせて、より複雑なタイプの情報を記録にエンコードできるようにします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。
              description_teacher: このレッスンで、学生は3種類のバイナリ表現システム (ASCII文字、2進数、および画像 をすべて組み合わせて、記録中の情報をデコードします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。次に、特定の構造に基づいてペットを表す記録をデコードします。
            Project - Create a Representation:
              name: プロジェクト - 表現を作成する
              description_student: クラスは、この章で学習したバイナリ表現システムを使って、完璧な1日を表す構造を設計します。記録にキャプチャしておく必要のある情報を決定したら、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。その後、誰もが学習したASCII、2進数、および画像形式を使って完璧な1日を表現し、パートナーの完璧な1日がどのようなものであるかを解読することを試みます。
              description_teacher: このレッスンでは、この章で学習したバイナリ表現システムを使って、自分の完璧な1日を表現するための構造を設計します。生徒はまず、自分の完璧な1日の短い説明を書き、次にパートナーと一緒にレビューして、コンピューターがキャプチャできると思われる主要な情報を特定します。そしてクラスとして、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。次に、学習したASCII、2進数、および画像形式を使って、完璧な1日を表現します。さらに、生徒はパンチカードを交換し、他の生徒の完璧な1日がどのようなものかを解読することを試みます。レッスンは最後に学んだことを振り返って終わります。
            Problem Solving and Data:
              name: 問題解決とデータ
              description_student: このレッスンでは、特にデータの問題に対処するために問題解決プロセスをどう調整したらよいかを扱います。クラスは、都市はリソースを何に最も費やす必要があるかを決定するタスクを行います。クラスは、インターネットでその決定をサポートするデータを見つけて用いなければなりません。
              description_teacher: このレッスンでは、コース前半の問題解決プロセスを使って、データの問題を解決します。プロセスを確認した後、都市はライブラリ、ペットシェルター、または消防署のどれを構築すべきかを決定するように求められます。生徒はチームで作業してインターネットで情報を収集することで何を構築すべきかを決定してから、この情報を使って持論を展開し、市議会に選択を認めてもらえるように説得します。次に、行った作業がコース全体で使ってきた問題解決プロセスのどこに位置付けられるかを考え、一般的な問題解決プロセスと比較してをこのデータの問題を解決するプロセスはどうだったかを検討します。
            Problem Solving with Big Data:
              name: ビッグデータによる問題解決
              description_student: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかをについて扱います。このクラスでは、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各シナリオには、データを使って同様の問題を解決した実際のサービスに関するビデオも含まれています。
              description_teacher: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかを見ていきます。レッスンは、前のレッスンで調査したデータ問題解決プロセスを簡単におさらいするところから始めます。次に、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各問題は、実在するサービスを反映するように設計されています。ブレインストーミングの後、生徒は実際のサービスに関するビデオを見て、そのサービスによって収集されるデータとその使用方法についてのメモを取ります。レッスンの最後に、データはユーザーが積極的に提供したものか、受動的に記録されたか、またはセンサーによって収集されたものかを記録します。
            Structuring Data:
              name: データの構造化
              description_student: このレッスンでは、生データセットのクリーニングや視覚化など、データの解釈について詳しく見ていきます。クラスはまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べます。クリーニングと視覚化によりより良い意思決定にどのように役立つかを見た後、このプロセスのどの部分を自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
              description_teacher: このレッスンでは、データのクリーニングと視覚化など、データの収集と解釈について学習します。生徒はまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べてから、自分のデータを視覚化します。好きなピザのトッピングに関する調査結果を使って、生徒は選択した視覚化スキームに簡単に適合しないデータをどのように扱うかを決定しなければなりません。最後に、生徒はこのプロセスのどの部分をコンピューターで自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
            Making Decisions with Data:
              name: データを使った決定
              description_student: このレッスンでは、前のレッスンで紹介したデータの問題解決プロセスを実践します。すべての質問に正しい答えがあるとは限りません。場合によっては、クラスはさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
              description_teacher: このレッスンでは、中学生に馴染み深い問題に基づいて、データを使って意思決定を行う練習をします。生徒はグループで作業し、提示されたデータを使って意思決定を行う方法について話し合ってから、クラスで最終的な選択について意見をまとめます。すべての問題に正しい答えがあるとは限りません。場合によっては、生徒はさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
            Interpreting Data:
              name: データの解釈
              description_student: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
              description_teacher: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
            Automating Data Decisions:
              name: データ決定の自動化
              description_student: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
              description_teacher: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
            Project - Solve a Data Problem:
              name: プロジェクト - データの問題を解決する
              description_student: このユニットを締めくくるに当たり、クラスはデータを使って、問題の解決に役立つ推奨または予測を提供する方法を設計します。最初の手順では、問題をブレインストーミングし、簡単な調査を行い、どの問題に取り組むかを決定します。次に、収集するデータの種類、収集方法、および使用方法を決定した後、フィードバックを出し合って最後のプレゼンテーションを行います。
              description_teacher: このユニットを締めくくるに当たって、生徒はクラスメートから収集して分析したデータに基づいてレコメンデーションエンジンを設計します。レコメンデーションアプリの例を見た後、生徒はプロジェクトガイドに従ってこのアクティビティを数日かけて完了します。最初のいくつかの手順では、ユーザーのどのような選択を支援したいか、また推奨事項を与えるために必要なデータを選択し、アンケートを作成して、クラスメートの選択に関する情報を収集します。次に、データを解釈し、学習した内容を使ってレコメンデーションアルゴリズムを作成します。最後に、アルゴリズムを使って、数人のクラスメートに推奨を行います。生徒はピアレビューを行い、プロジェクトに必要な変更を行った後、クラスでプレゼンテーションを行う準備をします。
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
            Project - Make a Recommendation:
              name: プロジェクト - 推奨事項の作成
          student_description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
        csd6-2020:
          title: CSDユニット6 - フィジカルコンピューティング ('20～'21)
          description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
          description_short: 物理デバイスでプログラミングする方法を学びます。
          lesson_groups:
            csd6_1:
              display_name: '第 1 章: ハードウェアを使ったプログラミング'
            csd6_2:
              display_name: '第 2 章: 物理プロパティの構築'
            cspSurvey:
              display_name: アンケート
          lessons:
            Innovations in Computing:
              name: コンピューティングにおける革新
            The Circuit Playground:
              name: サーキット プレイグラウンド
            Input Unplugged:
              name: オフラインで入力
            Board Events:
              name: ボードイベント
            Getting Properties:
              name: プロパティの取得
            Analog Input:
              name: アナログ入力
            The Program Design Process:
              name: プログラム設計プロセス
            'Project: Make a Game':
              name: 'プロジェクト: ゲームを作る'
            Arrays and Color LEDs:
              name: 配列とカラーLED
            Arrays and For Loops:
              name: 配列とforループ
            Accelerometer:
              name: 加速度計
            Functions with Parameters:
              name: パラメーター付き関数
            Circuits and Physical Prototypes:
              name: 回路と物理プロトタイプ
            'Project: Prototype an Innovation':
              name: 'プロジェクト: イノベーションのプロトタイプ'
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
          student_description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
        csd3-2020:
          title: CSDユニット3 - インタラクティブなアニメーションとゲーム
          description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
          description_short: ゲームラボでアニメーション、インタラクティブアート、ゲームのプログラミングを学びましょう。
          lesson_groups:
            csd3_1:
              display_name: '第 1 章: 画像とアニメーション'
            csd3_2:
              display_name: '第2章: ゲームを作る'
            cspSurvey:
              display_name: アンケート
          lessons:
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
              description_student: "**今日の質問: コンピューター サイエンスはエンターテイメントでどのように活用されているでしょうか？**
                \\\r \\\rクラスは退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。"
              description_teacher: "**今日の質問: コンピューター サイエンスはエンターテイメントでどのように活用されているでしょうか？**
                \\\r \\\r生徒は退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。"
            Plotting Shapes:
              name: 形状のプロット
              description_student: "**今日の質問: 画面に何かを描画する方法を明確に伝えるにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。クラスはゲームラボツールを使って、形状をゲームラボの400
                x 400グリッドにインタラクティブに配置します。次に、パートナーは交互に、このツールを使って非表示の画像を描画する方法をお互いに指示します。これは、ゲームラボでのプログラミングの課題の多くを物語っています。"
              description_teacher: "**今日の質問: 画面に何かを描画する方法を明確に伝えるにはどうすればよいですか？** \\\r
                \\\r生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。"
            Drawing in Game Lab:
              name: ゲームラボでの描画
              description_student: "**今日の質問: 画面に図形を描画する方法をコンピューターに伝えるにはどうすればよいですか？**
                \\\r \\\r生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。"
              description_teacher: "**今日の質問: 画面に図形を描画する方法をコンピューターに伝えるにはどうすればよいですか？**
                \\\r \\\r生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。"
            Variables:
              name: 変数（へんすう）
              description_student: "**今日の質問: 変数を使ってプログラムに情報を格納するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、プログラムで数値にラベルを付ける方法、またはランダムに生成された値を保存する方法として変数を導入します。クラスは、変数の目的の非常に基本的な説明と新しいブロックの使用方法からレッスンを開始します。次のレベルでは、生徒は、変数を数値のラベルまたは名前を付ける方法とするモデルを学習します。"
              description_teacher: "**今日の質問: 変数を使ってプログラムに情報を格納するにはどうすればよいですか？**このレッスンでは、変数を使って数値にラベルを付ける方法を学習します。生徒は、入力-出力-ストレージ-処理モデルのストレージコンポーネントの文脈の中で、変数の目的の非常に基本的な説明からレッスンを始めます。次のレベルでは、生徒は、変数を数値のラベルまたは名前を付ける方法とするモデルを学習します。"
            Sprites and Animations:
              name: スプライトとアニメーション
            Text and Captioned Scenes:
              name: テキストとキャプション付きシーン
            The Draw Loop:
              description_student: "**今日の質問: ゲームラボで画像をアニメーション化するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。このクラスは、描画ループと乱数を組み合わせて、いくつかの単純なアニメーションをドットで、次にスプライトで操作します。"
              description_teacher: "**今日の質問: ゲームラボで画像をアニメーション化するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。レッスンを開始するために、生徒はパラパラ漫画を見て、さまざまなイメージを持つフレームが数多くあると、動いているかのような印象が生まれることを確認します。次に、生徒は、ゲームラボの描画ループが、プログラムでこれと同じ印象を生み出すのにどのように役立つかを説明するビデオを視聴します。生徒は、描画ループと乱数を組み合わせて、単純なアニメーションをドットで、次にスプライトで操作します。"
            The Counter Pattern Unplugged:
              name: オフラインのカウンターパターン
              description_student: このオフラインレッスンでは、変数の基本的な働きを探ります。ノートカードと文字列を使ってプログラム内の変数をシミュレートすることにより、クラスは短いプログラムをいくつか実装します。この構文に慣れたら、クラスは同じプロセスをスプライトプロパティで使って、画面全体のスプライトの進行状況を追跡します。
              description_teacher: 生徒は、オフラインアクティビティを通じて変数の基本的な働きを探ります。プログラム内の変数をシミュレートするためにノートカードと文字列を使って、生徒は短いプログラムをいくつか実装します。この構文に慣れたら、生徒はスプライトプロパティで同じプロセスを使って、画面全体でスプライトの進行状況を追跡します。
            Sprite Movement:
              name: スプライトの動き
              description_student: "**今日の質問: ゲームラボでスプライトの動きをどのように制御できますか？** \\\r \\\rこのレッスンでは、スプライトのプロパティを増分的に変更するカウンターパターンと呼ばれる構造を使って、スプライトの動きを制御する方法を学習します。プロパティを制御してスプライトをアニメーション化するさまざまな方法をブレインストーミングした後、クラスはCode
                Studioでカウンターパターンを詳しく見て、カウンターパターンを使ってさまざまなタイプのスプライトの動きを作成します。"
              description_teacher: "**今日の質問: ゲームラボでスプライトの動きをどのように制御できますか？** \\\r \\\rこのレッスンでは、スプライトのプロパティを増分的に変更するカウンターパターンと呼ばれる構造を使って、生徒がスプライトの動きを制御する方法を学習します。生徒はまずプロパティを制御してスプライトをアニメーション化するさまざまな方法をブレインストーミングしてから、Code
                Studioでカウンターパターンを探索します。稼働中のプログラムを詳しく見た後、カウンターパターンを使ってさまざまなタイプのスプライトの動きを作成します。"
            Booleans Unplugged:
              name: オフラインのブール
              description_student: このレッスンでは、ブール値と論理、および条件文を紹介します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。次に、クラスは、ますます複雑になるブール文に基づいてオブジェクトをグループ化し、条件文がプログラムのフローにどのように影響するかを調べます。
              description_teacher: このレッスンでは、ブール値と論理、および条件文について学習します。クラスは、「スタンドアップ、シットダウン」の単純なゲームをプレイすることから始まります。このゲームでは、ブール
                (true/false) 文が個人のプロパティ (髪または目の色、服のタイプ、年齢など) を記述します。これにより、生徒は複数の潜在的な値
                (年齢など) を持つプロパティをバイナリ質問でどのように構成できるかについて考えます。次に生徒には、類似しているが変化する物理的特性を持つオブジェクトのグループが示されます。パートナーと一緒に、ますます複雑になるブール文
                (ANDおよびORを使用した複合ブールを含む) に基づいてこのようなオブジェクトをグループ化します。最後に、ツールとしての条件文を説明し、ブール文を入力情報にして、プログラムの流れを決定したり、影響を与えたりします。
            Conditionals:
              name: 条件
              description_student: "**今日の質問: プログラムは実行中に変更にどのように反応するでしょうか？** \\\r \\\rこのレッスンでは、ブールと条件文を紹介します。これにより、条件が真であるかどうかに応じてプログラムを異なる方法で実行できます。クラスは、特定の条件が満たされているかどうかに応じて応答する短いゲームをプレイすることから始まります。次に、Code
                Studioに移動し、コンピューターがブール式を評価する方法と、プログラムを構築するためにそれを活用する方法を学びます。"
              description_teacher: "**今日の質問: プログラムは実行中に変更にどのように反応するでしょうか？** \\\r \\\rこのレッスンでは、ブールと条件文を紹介します。これにより、条件が真であるかどうかに応じてプログラムを異なる方法で実行できます。生徒は、特定の条件が満たされているかどうかに応じて応答する短いゲームをプレイすることから始まります。次に、Code
                Studioに移動し、コンピューターがブール式を評価する方法と、プログラムを構築するためにそれを活用する方法を学びます。"
            Keyboard Input:
              name: キーボード入力
              description_student: "**今日の質問: プログラムはユーザー入力にどのように反応するでしょうか？** \\\r \\\r前のレッスンのブール文と条件文の紹介に続いて、「keyDown()」という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、クラスはキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。"
              description_teacher: "**今日の質問: プログラムはユーザー入力にどのように反応するでしょうか？** \\\r \\\r前のレッスンのブール文と条件文の紹介に続いて、「keyDown()」という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。"
            Other Forms of Input:
              name: その他の入力形式
              description_student: このクラスでは、条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純なkeyDown()
                コマンドに加えて、クラスは他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
              description_teacher: このレッスンでは、生徒は条件文を使ってユーザー入力を取り入れる方法を引き続き見ていきます。昨日学習した単純な「keyDown()」コマンドに加えて、生徒は他のキーボード入力コマンドおよびマウス入力を取り入れる方法をいくつか学習します。
            Project - Interactive Card:
              name: プロジェクト - インタラクティブカード
              description_student: "**今日の質問: インタラクティブプログラムを作成するときに物を言うスキルと実践は何ですか？**
                \\\r \\\r第1章のこのまとめプロジェクトでは、クラスはこれまで学んだプログラミング手法をすべて使ってインタラクティブグリーティングカードを計画および作成します。"
              description_teacher: "**今日の質問: インタラクティブプログラムを作成するときに物を言うスキルと実践は何ですか？**
                \\\r \\\r第1章のこのまとめプロジェクトでは、クラスはこれまで学んだプログラミング手法をすべて使ってインタラクティブグリーティングカードを計画および作成します。"
            Velocity:
              name: 速度
              description_student: "**今日の質問: プログラミング言語で複雑なパターンを隠して、簡単にプログラミングできるようにするにはどうすればよいですか？**
                \\\r \\\rカウンターパターンを使用してどのようにスプライトを移動させるかを簡単に確認した後、プログラムの複雑さを抑えられるように、このようなパターンを1つのブロックに隠す方法を紹介します。次に、Code
                Studioに移動して、スプライトの速度を直接設定する新しいブロックを試し、スプライトでより複雑な動作をプログラミングするさまざまな方法を見ていきます。"
              description_teacher: "**今日の質問: プログラミング言語で複雑なパターンを隠して、簡単にプログラミングできるようにするにはどうすればよいですか？**
                \\\r \\\r前のレッスンでカウンターパターンを使用してどのようにスプライトを移動させたかを簡単に確認した後、このようなパターンを1つのブロックに隠す方法を紹介します。次に、生徒はCode
                Studioに移動して、スプライトの速度を直接設定する新しいブロックを試し、スプライトでより複雑な動作をプログラミングするさまざまな方法を見ていきます。"
            Collision Detection:
              description_student: "**今日の質問: プログラミングはどのようにして複雑な問題をより簡単にすることができますか？**
                \\\r \\\rクラスは、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、生徒は「isTouching()」ブロックを使ってスプライトが衝突した時に生み出されるさまざまな効果を作成し、ブロックを使ってさまざまな相互作用をモデル化する練習をします。"
              description_teacher: "**今日の質問: プログラミングはどのようにして複雑な問題をより簡単にすることができますか？**
                \\\r \\\r生徒は、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、生徒は「isTouching()」ブロックを使ってスプライトが衝突した時に生み出されるさまざまな効果を作成し、ブロックを使ってさまざまな相互作用をモデル化する練習をします。"
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
              description_student: "**今日の質問: 以前のブロックを新しいパターンに組み合わせて興味深い動きを作るにはどうすればよいですか？**
                \\\r \\\rクラスは、スプライトの速度プロパティをカウンターパターンと組み合わせて、スプライトがより複雑な動きをする方法を学びます。
                2つの概念を確認した後、カウンターパターンで速度が使用されるさまざまなシナリオを詳しく見て、結果として生まれるさまざまな種類の動きを観察します。特に、クラスは重力をシミュレートする方法を学びます。次に、すでに知っているブロックとパターンを組み合わせることで、新しい動作を取得する方法について考えます。"
              description_teacher: "**今日の質問: 以前のブロックを新しいパターンに組み合わせて興味深い動きを作るにはどうすればよいですか？**
                \\\r \\\r生徒は、スプライトの速度プロパティをカウンターパターンと組み合わせて、スプライトがより複雑な動きをする方法を学びます。
                2つの概念を確認した後、カウンターパターンで速度が使用されるさまざまなシナリオを詳しく見て、結果として生まれるさまざまな種類の動きを観察します。特に、生徒は重力をシミュレートする方法を学びます。次に、すでに知っているブロックとパターンを組み合わせることで、新しい動作を取得する方法について考えます。"
            Collisions:
              name: 衝突
              description_student: "**今日の質問: プログラマーはどのようにして抽象化を基にさらに抽象化できるのですか？**
                \\\r \\\r生徒は、新しい方法で相互作用するようにスプライトをプログラムします。 「isTouching」ブロックの使用方法を簡単に確認した後、生徒は2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (「collide」、「displace」、「bounce」、「bounceOff」) を使う練習をします。"
              description_teacher: "**今日の質問: プログラマーはどのようにして抽象化を基にさらに抽象化できるのですか？**
                \\\r \\\rこのレッスンで生徒は、新しい方法で相互作用するようにスプライトをプログラムします。 「isTouching」ブロックの使用方法を簡単に確認した後、生徒は2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (「collide」、「displace」、「bounce」、「bounceOff」) を使う練習をします。"
            Functions:
              name: 関数(かんすう)
              description_student: "**今日の質問: プログラマーが関数を使って独自の抽象化を行うにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、プログラムを整理して読みやすくする方法として関数を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。クラスは、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。"
              description_teacher: "**今日の質問: プログラマーはどのように関数を使って独自の抽象概念を作成できますか？**
                \\\r \\\r生徒は、プログラムを整理して読みやすくするための関数を作成する方法を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。生徒はまず、ゲームラボでどのような種類の新しいブロックが必要か、そのブロックにどのようなプログラムが含まれるかを考えます。次に、ゲームラボで関数の作成を開始します。生徒は関数を使って、コードの長いブロックを描画ループから削除し、繰り返しのコードを1つの関数に置き換えます。"
            The Game Design Process:
              name: ゲームデザインプロセス
              description_student: "**今日の質問: 計画を立てることで、大規模なプロジェクトをどのようにより簡単にできるのでしょうか？**
                \\\r \\\r \\\rこのレッスンでは、ユニットの残りの部分のためのゲームを設計するのに使うプロセスを生徒に紹介します。このプロセスはプロジェクトガイドを中心に据え、生徒はゲームのプログラミングを始める前に、スプライト、変数、関数を定義するように求められます。クラスはこのプロセスを一連のレベルで学んでいきます。レッスンの最後には、ゲームを改良して独自のものにする機会があります。"
              description_teacher: "**今日の質問: 計画を立てることで、大規模なプロジェクトをどのようにより簡単にできるのでしょうか？**
                \\\r \\\r このレッスンでは、ユニットの残りの部分のためのゲームを設計するのに使うプロセスを生徒に紹介します。このプロセスはプロジェクトガイドを中心に据え、生徒はゲームのプログラミングを始める前に、スプライト、変数、関数を定義するように求められます。このレッスンでは、プログラムが非表示になっているゲームラボでゲームをプレイすることから始め、ゲームを作成するためにどのようなスプライト、変数、関数が必要と考えるかについて話し合います。次に、配布される完全なプロジェクトガイドには、ゲームを実装する方法が1つ示されています。そして、生徒はこのプロセスを一連のレベルで学習します。レッスンの最後に、生徒はゲームを改良して独自のものにする機会があります。"
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
              description_student: "**今日の質問: 問題解決プロセスは、プログラマーが大規模なプロジェクトを管理するのにどのように役立つのでしょうか？**
                \\\r \\\r \\\rこの2日以上かけて行うレッスンでは、クラスはユニット1の問題解決プロセスを使って、プラットフォーム ジャンパーゲームを作成します。サンプルゲームを見た後、クラスはどのようなゲームにしたいかを明確にし、構造化されたプロセスを使ってゲームを構築します。最後に、クラスはゲームをどのように改善できるかを考え、変更を加えていきます。"
              description_teacher: "**今日の質問: 問題解決プロセスは、プログラマーが大規模なプロジェクトを管理するのにどのように役立ちますか？**
                \\\r \\\rこの2日以上かけて行うレッスンでは、ユニット1の問題解決プロセスを使って、プラットフォーム ジャンパーゲームを作成します。まず、プラットフォーム
                ジャンパーの例を見てから、どのようなゲームにしたいかを明確にします。次に、構造化されたプロセスを使って、ゲームの実装に必要な背景、変数、スプライト、関数を計画します。ゲームのプログラムを書いた後、生徒はゲームをどのように改善できるかを振り返り、変更を加えていきます。"
            Project - Design a Game:
              name: プロジェクト - ゲームの設計
              description_student: "**今日の質問: 5つのCSプラクティス (問題解決、パーシステンス、コミュニケーション、コラボレーション、および創造性)
                は、プログラマーが大規模なプロジェクトを完了するのにどのように役立つでしょうか？** \\\r \\\rクラスでは、前の2つのレッスンのプロジェクトガイドを使って、オリジナルのゲームを計画および構築します。個別またはペアで作業して、クラスはゲームの計画、開発し、フィードバックを行います。ピアフィードバックをゲーム組み込んだ後、クラスは完成したゲームを共有します。"
              description_teacher: "**今日の質問: 5つのCSプラクティス (問題解決、パーシステンス、コミュニケーション、コラボレーション、および創造性)
                は、プログラマーが大規模なプロジェクトを完了するのにどのように役立つでしょうか？** \\\r \\\r生徒は、前の2つのレッスンのプロジェクトガイドを手引きに使って独自のゲームを計画および構築します。生徒は個別にまたはペアで作業し、サンプルゲームのセットからインスピレーションを得て、構築するゲームの種類を最初に決定します。次に、空白のプロジェクトガイドを記入します。その中で、ゲームの動作を説明し、作成する必要がある変数、スプライト、関数を詳しく調べます。Code
                Studioでは、一連のレベルで、この計画を実装するために使用できる一般的なシーケンスを示します。プロセスの途中で、生徒は自分のプロジェクトを共有してピアレビューに回し、ゲームを完成させながらフィードバックを組み込みます。レッスンの最後に、生徒は完成したゲームをクラスメートと共有します。このプロジェクトは複数のクラスにまたがり、3～5クラス分の時間がかかることも多々あります。"
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
            Text:
              name: テキスト
              description_student: "**今日の質問: テキストを使ってシーンとアニメーションを改善するにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、ゲームラボのテキストコマンドを紹介し、座標平面とパラメータを使用する練習をさらに行います。レッスンの初めに、クラスはゲームラボで作成された漫画にキャプションを付けるよう求められます。次に、Code
                Studioに移動して、画面にテキストを配置したり、サイズなどの他のテキストプロパティを制御したりします。"
              description_teacher: "**今日の質問: テキストを使ってシーンとアニメーションを改善するにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、ゲームラボのテキストコマンドを紹介し、座標平面とパラメータを使用する練習をさらに行います。レッスンの初めに、生徒はゲームラボで作成された漫画にキャプションを付けるよう求められます。次に、Code
                Studioに移動して、画面にテキストを配置したり、サイズなどの他のテキストプロパティを制御したりします。評価を早めに完了した生徒は、より難易度の高いテキストのプロパティに関連するブロックを学んでもいいでしょう。"
            'Mini-Project: Captioned Scenes':
              name: 'ミニプロジェクト: キャプション付きシーン'
              description_student: "**今日の質問: ゲームラボを使って創造性を表現するにはどうすればよいですか？** \\\r
                \\\rこれまでに学習したプログラムを簡単に確認した後、クラスはユニットの最初のクリエイティブプロジェクトの説明を受けます。問題解決プロセスをモデルとして使って、生徒は作成したいシーンを定義し、必要なさまざまなプログラムを考えて準備し、ゲームラボで計画を試し、作成した内容を振り返ります。最後に、作成したものを仲間と共有する機会があります。"
              description_teacher: "**今日の質問: ゲームラボを使って創造性を表現するにはどうすればよいですか？** \\\r
                \\\rこれまでに学習したプログラムを簡単に確認した後、生徒はユニットの最初のクリエイティブプロジェクトの説明を受けます。問題解決プロセスをモデルとして使って、生徒は作成したいシーンを定義し、必要なさまざまなプログラムを考えて準備し、ゲームラボで計画を試し、作成した内容を振り返ります。最後に、作成したものを仲間と共有する機会があります。"
            'Mini-Project: Animation':
              name: 'ミニプロジェクト: アニメーション'
              description_student: "**今日の質問: さまざまなプログラミングパターンを組み合わせて完全なアニメーションを作成するにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、前のレッスンのさまざまなメソッドを組み合わせてアニメーションのシーンを作成するように求められます。最初に、学習した動きとアニメーションの種類を確認し、その動きが必要なシーンはどのようなシーンかについてブレインストーミングを行います。その後、ゲームラボで作成した独自のアニメーションシーンの計画を練り始めます。"
              description_teacher: "**今日の質問: さまざまなプログラミングパターンを組み合わせて完全なアニメーションを作成するにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、前のレッスンのさまざまなメソッドを組み合わせてアニメーションのシーンを作成するように求められます。最初に、学習した動きとアニメーションの種類を確認し、その動きが必要なシーンはどのようなシーンかについてブレインストーミングを行います。その後、ゲームラボで作成した独自のアニメーションシーンの計画を練り始めます。"
            Mouse Input:
              name: マウスの入力
              description_student: "**今日の質問: コンピューターがユーザー入力に反応する方法は他にどのようなものがありますか？**
                \\\r \\\rクラスは条件文を使ってユーザー入力を取得する方法の学習し続けます。昨日学習したキーボードコマンドに加えて、マウスの入力を取得する方法を学習します。また、条件文の理解を広げて「else」も扱います。これにより、コンピューターは、条件が真の場合にプログラムの特定のセクションを実行し、そうでない場合に別のプログラムのセクションを実行できるようになります。"
              description_teacher: "**今日の質問: コンピューターがユーザー入力に反応する方法は他にどのようなものがありますか？**
                \\\r \\\rこのレッスンで、生徒は条件文を使ってユーザー入力を取得する方法の学習し続けます。昨日学習したキーボードコマンドに加えて、マウスの入力を取得する方法を学習します。また、条件文の理解を広げて「else」も扱います。これにより、コンピューターは、条件が真の場合にプログラムの特定のセクションを実行し、そうでない場合に別のプログラムのセクションを実行できるようになります。"
            'Mini-Project: Side Scroller':
              name: 'ミニプロジェクト: サイドスクローラー'
              description_student: "**今日の質問: ゲームを作成するのに、新しいタイプのスプライトの動きと衝突検出はどのように使えばのいいでしょうか？**
                \\\r \\\rクラスは、衝突検出と速度の設定について学習したことを使って、単純なサイドスクローラーゲームを作成します。サンプルのサイドスクローラーゲームを見た後、生徒はどのようなサイドスクローラーを希望するかをブレインストーミングし、構造化されたプロセスを使ってコードスタジオでゲームをプログラミングします。"
              description_teacher: "**今日の質問: ゲームを作成するのに、新しいタイプのスプライトの動きと衝突検出はどのように使えばのいいでしょうか？**
                \\\r \\\r生徒は、衝突検出と速度の設定について学習したことを使って、単純なサイドスクローラーゲームを作成します。サンプルのサイドスクローラーゲームを見た後、生徒はどのようなサイドスクローラーを希望するかをブレインストーミングし、構造化されたプロセスを使ってコードスタジオでゲームをプログラミングします。"
            'Mini-Project: Platform Jumper':
              name: 'ミニプロジェクト: プラットフォーム ジャンパー'
            'Mini-Project: Flyer Game':
              name: 'ミニプロジェクト: フライヤーゲーム'
              description_student: "**今日の質問: ゲームを作成するのに、新しいタイプの衝突とモデリングの動きをどのように使えばいいのでしょうか？**
                \\\r \\\rクラスは、重力のシミュレーションについて学習したこととさまざまなタイプの衝突を使って、単純なフライヤーゲームを作成します。フライヤーゲームのサンプルを見た後、生徒はどのようなフライヤーが欲しいかをブレインストーミングし、構造化されたプロセスを使ってコードスタジオでゲームをプログラミングします。"
              description_teacher: "**今日の質問: ゲームを作成するのに、新しいタイプの衝突とモデリングの動きをどのように使えばいいのでしょうか？**
                \\\r \\\r生徒は、重力のシミュレーションについて学習したこととさまざまなタイプの衝突を使って、単純なフライヤーゲームを作成します。フライヤーゲームのサンプルを見た後、生徒はどのようなフライヤーが欲しいかをブレインストーミングし、構造化されたプロセスを使ってコードスタジオでゲームをプログラミングします。"
            Sprites:
              name: スプライト
          student_description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
        coursea-2020:
          title: コース A (2020)
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          description_short: 低学年向けコンピューター サイエンス入門
          description_audience: 4-7 才
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
          lessons:
            Going Places Safely:
              name: 安全な道を通って行く
              description_student: オンラインでサイトを安全に訪問するためのルールを学びます。
              description_teacher: このレッスンは、Common Sense Mediaと協力して、多くのウェブサイトで非公開の情報が求められることを学び、そのような要求を責任を持って処理する方法について説明します。また、生徒たちはオンラインでエキサイティングな場所に行くことができますが、安全でいるようにするには特定のルールに従う必要があることも学びます。
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
              description_student: クリックしてドラッグし、パズルを完成させましょう。
              description_teacher: このレッスンでは、生徒がコンピューターラボに進むときに何が起こるかを理解します。まずはコンピューターラボのマナーを紹介する簡単なディスカッションから始まり、次にコンピューターを使ってオンラインパズルを完成させます。
            'Programming: Happy Maps':
              name: ハッピーマップ
              description_student: フルブが果物にたどり着くための指示を書きましょう。
              description_teacher: このオフラインレッスンは、チームで一緒に「フラブ」を果物にたどり着かせるという単純なタスクに取り組みます。生徒は、指示を示された記号に変換する作業をしながら、正確な指示を書く練習をします。プログラムに問題が発生した場合は、生徒は協力してバグを発見し、ソリューションを構築します。
            Sequencing with Scrat:
              name: スクラッチと学ぶシーケンス
              description_student: どんぐりにたどり着けるようにスクラッチをプログラムします。
            Programming in Ice Age:
              name: スクラッチと学ぶプログラミング
              description_student: スクラッチがどんぐりにたどりつくのを助けるプログラムを書いてください。
              description_teacher: アイスエイジのキャラクターを使って、生徒はスクラットを迷路の片側から反対側のどんぐりに移動させる一連のアルゴリズムを開発します。これを行うために、コードブロックを線形のシーケンスで積み上げ、スクラットをまっすぐ移動、左折、または右折させます。
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
              description_student: BB-8がスクラップを集めるのを手伝ってください。
              description_teacher: このレッスンでは、新しく学んだプログラミングスキルをより複雑な方法で使って、BB-8がトリッキーなコースをナビゲートできるようにします。
            'Loops: Happy Loops':
              name: くりかえし：ハッピー ループ
              description_student: ループを使ってフラブがより大きな問題を解決するのを助けましょう。
              description_teacher: このアクティビティでは、ハッピーマップを再度取り上げます。今回は、生徒は自分のプログラムで大きくてより時間がかかるパズルを解き、長いプログラムを簡単に書くことができる構造の有用性を学びます。
            Loops in Ice Age:
              name: スクラッチと学ぶループ
              description_student: ループを使ってスクラッチがより多くの地面をカバーできるようにします。
              description_teacher: "「ハッピーループ」からの指示を繰り返すというコンセプトに基づいて、このステージでは、ループを使ってCode.orgでより効率的にどんぐりにたどり着けるようにします。"
            Loops in Collector:
              name: くりかえし あつめる
              description_student: 冒険家ローレルが地中の宝物を見つけるのを手伝ってあげましょう。
              description_teacher: このレッスンでは、引き続きループの概念を学習します。前のレッスンでは、ループを使って迷路を通り抜けてトウモロコシを摘むことに取り組みました。ここでは、洞窟で宝物を集めるためにループを使います。
            Ocean Scene with Loops:
              name: アーティストくりかえし
              description_student: ループとパターンを使って画像を完成させましょう。
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、ループでパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            'Events: The Big Event':
              name: ビッグイベントジュニア
              description_student: 先生が巨大なリモコンのボタンを押したら、移動して叫びましょう。
              description_teacher: イベントは、事前に作成したアルゴリズムに多様性を加える優れた方法です。プログラムに、ユーザーが希望したタイミングでユーザーの指示に応答してもらいたいことがあります。イベントはそれが行えるようにします。
            Events in Play Lab:
              name: プレイ ラボのイベント
              description_student: 独自のゲームやストーリーを作成しましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってストーリーを作りましょう！
            Safety in My Online Neighborhood:
              name: オンラインネイバーフッドの安全
              description_student: オンラインで安全にいろいろな場所に行く方法を学びます。
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        courseb-2020:
          title: コース B (2020)
          description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
          description_short: 就学前の児童のためのコンピューター サイエンス入門。コースAと似ていますが、コンセプトが深化しています。
          description_audience: 5-8 才
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_impacts:
              display_name: コンピューティングの影響
            csf_events:
              display_name: イベント
          lessons:
            Your Digital Footprint:
              name: デジタル フットプリント
              description_student: デジタルフットプリントと、ウェブサイトにアクセスするときに安全を確保する方法について学びましょう。
              description_teacher: このレッスンは、[Common Sense Media] と協力して、現実の世界で安全でいるのと、ウェブサイトにアクセスするときに安全でいるのとの間の類似点について学習します。生徒はまた、オンラインに上げた情報がデジタルフットプリントまたは「トレイル」を残すことも学びます。このトレイルは大きくも小さくもなり、管理方法によっては役に立ったり、害を及ぼしたりすることもあります。
            Move It, Move It:
              name: 動かせ！動かせ！
              description_student: クラスメートがある場所から他の場所へと慎重に歩むようにプログラムしましょう。
              description_teacher: このレッスンは、このコースの過程で取り組むプログラミングの演習に向けて準備するのに役立ちます。小さなチームになって、生徒は身体の動きを使ってクラスメートをプログラムし、目標が達成されるまである場所から他の場所へと慎重に進ませます。
            Sequencing in Maze:
              name: アングリーバードと学ぶシーケンス
              description_student: 赤いアングリーバードがいたずら好きなブタに到達するのを手伝ってあげましょう。
            Programming in Maze:
              name: めいろ のプログラミング
              description_student: アングリーバードが迷路を移動するのを助けるためにプログラムを作成しましょう。
            Programming in Harvester:
              name: ファーマーと学ぶプログラミング
              description_student: ファーマーが道に沿って野菜を収穫するのを手伝ってあげましょう。
              description_teacher: 生徒は、学習したプログラミングの概念を農夫の収穫に適用します。ここでは、キャラクターをゴールに到達させるだけでなく、新しいブロックを使ってトウモロコシを収穫する必要があります。生徒は引き続き順序アルゴリズムスキルを開発し、デバッグプロセスを使い始めます。
            'Loops: Getting Loopy':
              name: ルーピーをゲット
              description_student: このレッスンでは、繰り返しループを使用してダンスパーティーを行います。
              description_teacher: 長くて面白いプログラムを書き始めると、プログラムには多くの繰り返しが含まれることがよくあります。このレッスンでは、ループを使って、ダンスで繰り返される動きのパターンを見つけることで、繰り返しの多い指示をより簡単に伝達する方法について学習します。
            Loops in Harvester:
              name: ハーベスターと学ぶループ
              description_student: ループを使って、ファーマーの収穫を手伝ってあげましょう！
              description_teacher: "「ルーピーをゲット」で学んだ繰り返しの指示のコンセプトに基づいて、このステージではループを使って、Code.orgでより効率的にトウモロコシを収穫してもらいます。"
            Loops in Collector:
              name: くりかえし あつめる
              description_student: "「冒険家ローレル」をプログラムして、洞窟で宝物を集めましょう。"
              description_teacher: このレッスンでは、引き続きループの概念を学習します。ここでは、冒険者のローレルが、ループを使って洞窟で宝物を収集します。ローレルの旅を助けるために、新しい「宝物を手に入れる」
                (get treasure) ブロックを導入しました。
            Loops in Artist:
              name: アーティストくりかえし
              description_student: パターンとループを使って画像を完成させましょう。
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、生徒はループを使ってパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            The Right App:
              description_student: 自分のスマートフォンアプリをスケッチします。
              description_teacher: このレッスンでは、コンピューター サイエンスが実生活の人々を助けることができることを生徒に認識してもらいます。まず、生徒は、架空のスマートフォンユーザーに自分を重ね、その人のニーズに対応する「適切なアプリ」を見つけるのを手伝います。次に、生徒は共感と創造性を発揮して、もう1人のユーザーのニーズに対応する独自のスマートフォンアプリをスケッチします。
            'Events: The Big Event':
              name: ビッグイベントジュニア
              description_student: 先生が巨大なリモコンのボタンを押したら、移動したり、叫んだりしましょう。
              description_teacher: イベントは、事前に作成したアルゴリズムに多様性を加える優れた方法です。プログラムに、ユーザーが希望したタイミングでユーザーの指示に応答してもらいたいことがあります。イベントはそれが行えるようにします。
            Events in Play Lab:
              name: プレイ ラボのイベント
              description_student: イベントを使って、ストーリーを作成したり、インタラクティブゲームを作成したりしましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
            Digital Trails:
              name: デジタルトレイル
              description_student: デジタルフットプリントと、ウェブサイトにアクセスするときに安全を確保する方法について学びましょう。
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        coursec-2020:
          title: コース C (2020)
          description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description_audience: '年齢: 6～10才'
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_binary:
              display_name: ２しんすう
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
            csf_data:
              display_name: データ
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            Screen Out the Mean:
              name: 平均をスクリーンアウト
              description_student: このレッスンでは、オンライン上の物事で怒り、悲しみ、または恐怖を感じた場合の対処法を学びます。
              description_teacher: "このレッスンは、オンライン上の物事で怒り、悲しみ、または恐怖を感じた場合、信頼できる大人に伝えることが不可欠であることを子供たちに認識してもらうのに役立ちます。\\\r
                \\\r人は、オンラインにいるときはいじめっ子のように振る舞うこともあるということを生徒たちは学び、ネットいじめの意味と、いじめにあったときに何ができるかを探ります。意地の悪いオンライン行動に関するシナリオを読んだ後、生徒はネットいじめとは何か、それにより人々はどのように感じるか、そしていかに対応するかについて話し合います。最後に、生徒は自分の知識を使って、ネットいじめに関する簡単なヒントシートをジャーナルに作成します。\\\r"
            Powerful Passwords:
              name: 強力なパスワード
              description_student: このレッスンでは、パスワードがどのように情報を保護するか、また適切なパスワードはどのように作成したらよいかについて学習します。
              description_teacher: "生徒は、パスワードを使うのはなぜかを探り、それを使う利点を学び、強力で安全なパスワードを作成して維持するための戦略を発見します。\\\r\\\r生徒はパスワード設定のコツを学び、インタラクティブなゲームで現在のパスワードをテストし、ガイドラインに沿って強力なパスワードになるように新しいパスワードを作成します。\\\r"
            'Programming: My Robotic Friends':
              name: 私のロボットの友だち
              description_student: このレッスンでは、クラスメートをロボットのように扱い、積み重ねたカップのパターンを構築するようにプログラムします。
              description_teacher: コードの代わりに一連の記号を使って、さまざまなパターンでカップを積み重ねるように「ロボット」に指示するアルゴリズムを設計します。生徒は交代でロボットとして参加し、仲間が定義したアルゴリズムにのみ応答します。このセグメントでは、シンボルとアクションの間のつながり、アルゴリズムとプログラムの違い、およびデバッグの貴重なスキルを学習します。
            Programming in Maze:
              name: めいろ のプログラミング
              description_student: アングリーバードでシーケンスとアルゴリズムについて学びましょう。
              description_teacher: アングリーバードゲームのキャラクターを使って、生徒はトリを迷路の片側から反対側のブタに移動させる一連のアルゴリズムを開発します。これを行うために、コードブロックを線形のシーケンスで積み上げ、トリをまっすぐ移動、左折、または右折させます。
            Debugging in Maze:
              name: 迷路で学ぶデバッグ
              description_student: パズルで問題を見つけ、デバッグスキルを練習しましょう。
              description_teacher: デバッグはプログラミングの学習に不可欠な要素です。このレッスンでは、誤って解かれたパズルに取り組みます。ループが不正確だったり、ブロックが欠落していたり、ブロックが余分だったり、ブロックが機能しないなどのエラーを特定するには、既存のプログラムを順に検証する必要があります。
            Programming in Collector:
              name: ローレルと行う宝物の収集
              description_student: 冒険家ローレルがたくさんの宝石を集めるのに役立つアルゴリズムを書いてあげましょう！
              description_teacher: この一連のパズルでは、生徒は引き続きアルゴリズムとデバッグについての理解を深めていきます。冒険家のローレルという新しいキャラクターを使って、生徒は順序アルゴリズムを作成して、ローレルが道を歩いているときに宝物を手に入れられるようにします。
            Programming in Artist:
              name: プログラムでアートを作成
              description_student: "「アーティスト」をプログラミングして美しい画像を作成しましょう。"
              description_teacher: このレッスンでは、生徒がアーティストを制御して、画面上で絵を完成させます。このアーティストステージでは、「100ピクセルずつ前進」や「90度右に回転」などの新しいブロックを使って、より複雑な画像を作成していきます。
            Binary Bracelets:
              name: バイナリ ブレスレット
              description_student: 自分だけのバイナリブレスレットを作成し、コンピュータがどのように情報を記憶するかを学びましょう！
              description_teacher: バイナリはコンピューターの世界では非常に重要です。今日のコンピューターの大半は、あらゆる種類の情報をバイナリ形式で格納しています。このレッスンは、実際の生活から何かを取り出し、それをどのようにしたら一連のオンとオフに変換できるかを示します。
            'Loops: My Loopy Robotic Friends':
              name: ルーピー ロボティック フレンズ ジュニア
              description_student: このレッスンでは、クラスメートを再度プログラムしますが、ループを使用すると、より大きく複雑な問題を解決できます。
              description_teacher: 最初の「私のロボットの友だち」アクティビティを踏み台にして、生徒はより大きく複雑なデザインに取り組みます。「ロボット」をプログラムしてこのような大きなデザインを完成させるには、ループで置き換えることができる命令の繰り返しのパターンを見極める必要があります。
            Loops with Rey and BB-8:
              name: レイとBB-8と学ぶループ
              description_student: ループを使ってBB-8が迷路を通り抜けるのを助けてあげましょう！
              description_teacher: "「ルーピーをゲット」の指示をここでも繰り返すというコンセプトに基づいて、このステージではループを使って、BB-8が以前よりも効率的に迷路を通過できるようにします。"
            Loops in Harvester:
              name: ループで作物を収穫する
              description_student: ループを使ってファーマーが野菜を収穫するのを助けてあげましょう！
              description_teacher: "前の段階では、生徒はループを使って素晴らしい絵を作成しました。ここでは、新しいアクションをループして、農夫がたわわに実る野菜を収穫するのを手助けします。\\\r"
            Looking Ahead:
              name: マインクラフトで先を見る
              description_student: 溶岩を避けて！ここでは、マインクラフトの世界で条件文について学習し始めます。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            Sticker Art with Loops:
              name: アーティストくりかえし
              description_student: このレッスンでは、ループを使用すると、アーティストでさらにクールな画像を簡単に作成できます。
              description_teacher: 生徒がいくつかのブロックとデジタルステッカーを使って独自の素晴らしいデザインを作成すると、表情がパッと明るくなるのが見て取れます！このレッスンは、以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティは、ポートフォリオやPTA会議向け作品を作成するのに最適です。
            'Events: The Big Event':
              name: ビッグイベント
              description_student: 楽しいゲームをプレイして、イベントについて学びましょう。
              description_teacher: 生徒はこれから、事前に記述されたアルゴリズムに柔軟性をもたらす優れた方法であるイベントについて学びます。時に、ユーザーが望んだその時にプログラムがユーザーに応答してもらいたいことがあります。イベントは、プログラムをより面白くインタラクティブにすることができます。
            Build a Flappy Game:
              name: フラッピーゲームを構築する
              description_student: 自分で好きなようにフラッピーバードゲームを作って、友だちと共有しましょう！
              description_teacher: この特別なステージでは、イベントハンドラーを使ってマウスクリックとオブジェクトの衝突を検出することにより、生徒は独自のフラッピーバードゲームを作成します。レベルの最後に、生徒はビジュアルやルールを変更してゲームをカスタマイズできます。
            Events in Play Lab:
              name: プレイ ラボのイベント
              description_student: プレイラボでクリエイティブになってゲームを作りましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
            Picturing Data:
              name: データで予測
              description_student: データは、生徒が自分の世界を理解し、興味深い質問に答えるのに役立ちます。このレッスンでは、生徒はプレイラボプロジェクトからデータを収集し、さまざまな種類のグラフを使って視覚化します。
              description_teacher: データは、生徒が自分の世界を理解し、興味深い質問に答えるのに役立ちます。このレッスンでは、生徒はプレイラボプロジェクトからデータを収集し、さまざまな種類のグラフを使って視覚化します。
            'End of Course Project: Create a Play Lab Game':
              name: コース最後のプロジェクト
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
              description_teacher: このキャップストーンレッスンでは、生徒が自分のプレイラボプロジェクトを設計、開発、展示するプロセスを紹介します。このプロセスを円滑に進めるために、紙で計画を立てることからウェブサイトでプログラミングするまで段階的な構造を示し、生徒がそれに従って作業できるようにします。さらに、先生がフィナーレを飾るのに役立つアイデアを提供します！
            Putting a STOP to Online Meanness:
              name: ネットの迷惑行為を防止する
              description_student: このレッスンでは、意地悪な行為と、それをネット上で目撃した場合の対処方法について学習します。
            Password Power-Up:
              name: パスワードの強化
              description_student: このレッスンでは、パスワードがどのように情報を保護するか、また適切なパスワードはどのように作成したらよいかについて学習します。
          student_description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
        coursed-2020:
          title: コース D (2020)
          description: 生徒はループ、条件、イベントについての理解を深めます。プログラミング以外に、生徒はデジタル シティズンシップについて学びます。
          description_short: 条件文について学び、独自のアート、ゲーム、さらにはダンスパーティーを作成しましょう。
          description_audience: '年齢: 7～11才'
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_events:
              display_name: イベント
            csf_loops:
              display_name: くりかえし
            csf_conditionals:
              display_name: 条件
            csf_binary:
              display_name: ２しんすう
            csf_digcit:
              display_name: デジタル シティズンシップ
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            'Algorithms: Graph Paper Programming':
              name: グラフ用紙のプログラミング
              description_student: このレッスンでは、クラスメートが絵を描くようにプログラムします。
              description_teacher: プログラミングでお互いに絵を描くことによって、生徒はプログラミングのコアコンセプトを楽しく、理解しやすい方法で経験する機会があります。クラスは、生徒にシンボルを使って、お互いにグラフ用紙上の正方形に色付けして目の前の画像を再現するように指示するところから始まります。もし時間があれば、生徒が自分で画像を作成してレッスンを締めくくってもいいでしょう。
            Introduction to Online Puzzles:
              name: オンラインパズル入門
              description_student: このレッスンでは、このコースに必要なスキルを練習できます。
              description_teacher: このパズルのセットでは、生徒はCode.orgのオンラインワークスペースの紹介 (またはクラスの経験に応じて復習)
                から始めます。 「実行」、「リセット」、「手順」ボタンなど、ワークスペースの基本的な機能を紹介するビデオがあります。ビデオでは、Blocklyブロックのドラッグ、Blocklyブロックの削除、Blocklyブロックの接続についても説明しています。次に、生徒は迷路で_シーケンス_と_デバッグ_スキルを練習します。そこから、_ループ_の基本を学んだら、コレクター、アーティスト、農夫などの新しいタイプのパズルに進みます。
            Relay Programming:
              name: プログラミングをリレーする
              description_student: コースの最初にプログラムで絵を描いことを覚えていますか？このレッスンでは、チームと協力してこれとよく似た作業を行います。
              description_teacher: このアクティビティは、デバッグと永続性に関する短いレッスンから始まります。その後すぐに、生徒はチームに分かれ、一度に1つの命令を受けて一緒にプログラムを作成する時間との戦いに入ります。
            Debugging in Collector:
              name: ローレルと学ぶデバッグ
              description_student: プログラミング中に問題が発生したことはありませんか？このレッスンでは、デバッグの秘密について学びます。デバッグは、プログラム内の問題を見つけて修正するプロセスです。
              description_teacher: このオンラインアクティビティでは、「コレクター」環境でデバッグを練習します。生徒は、プログラムを読んだり編集したりする練習をして、簡単なアルゴリズム、ループ、入れ子のループでパズルを修正します。
            Events in Bounce:
              name: バウンスで学ぶイベント
              description_student: 学校でビデオゲームをプレイできたらと夢見たことはありませんか？このレッスンでは、ゲームを自作できます！
              description_teacher: このオンラインアクティビティでは、生徒はイベントとは何か、コンピューターがビデオゲームなどのプログラムでイベントをどのように使用するかを学びます。生徒はパズルに取り組み、プログラムがイベント
                (矢印ボタンが押されるなど) に反応するようにします。パズルの最後に、生徒はさまざまな速度と音でゲームをカスタマイズする機会があります。
            Build a Star Wars Game:
              name: スター・ウォーズゲームを構築する
              description_student: このレッスンで独自のスター・ウォーズゲームを構築しながら、フォースを感じてください。
              description_teacher: このレッスンでは、イベントを使ってオンラインで共有できるゲームを作成する練習をします。 R2-D2や他のスター・ウォーズのキャラクターが登場し、イベントの案内を一通り受けてから、スペースが与えられて独自のゲームを作成します。
            Loops in Ice Age:
              name: アイス・エイジのループ
              description_student: このレッスンでは、繰り返しブロックを使って、スクラッチがドングリにできるだけ効率的に到達できるようにします。
              description_teacher: ループを使用することの簡単なおさらい (または紹介) として、このステージでは、「繰り返し」ブロックを使ってスクラッチをドングリに効率的に到達させます。
            Loops in Artist:
              name: アーティストくりかえし
              description_student: このレッスンでは、ループを使って、アーティストでクールな画像を簡単に作成できます。
              description_teacher: このレッスンは以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティはデバッグ演習を兼ねており、問題解決をさらに実践できます。
            Nested Loops in Bee:
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、入れ子のループを作成するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Conditionals with Cards:
              name: カードと条件
              description_student: 特定の条件下でのみポイントを獲得するゲームをプレイしましょう！
              description_teacher: "このレッスンでは、条件文を使ってプログラムを特定の情報にどのように合わせたらよいかを示します。プログラムを作成するときに必要な情報がすべて揃っているとは限りません。プログラムの実行時にどのような状況になるかわからない場合でも、ある状況では他のことを実行したい場合があります。ここが条件文の出番です。条件文は、プログラムの実行時にtrueである情報に基づいて、コンピューターが決定を下せるようにします。\\\r\\\r"
            Conditionals in Bee:
              name: みつばちと学ぶIf/Else
              description_student: 条件文を理解したところで、ハチミツとミツを収集するときに条件文を使うようにみつばちをプログラムしましょう。
              description_teacher: ここまで、生徒は実行するたびにまったく同じ操作を実行するプログラムを作成してきました。これは信頼性は高くても、柔軟性があまりありません。このレッスンでは、クラスで条件文を使ったプログラミングを開始し、プログラムが遭遇した特定の条件に応じて対応を異にするプログラムを作成します。
            While Loops in Farmer:
              name: ファーマーの「while」ループ
              description_student: ループはプログラミングで非常に役立ちます。このレッスンでは、新しい種類のループ、whileループについて説明します！
              description_teacher: 生徒がこのレッスンに到達する頃には、`repeat`ループを使って練習をたくさん行ってきているはずなので、ここではそれを発展させていきます。_Whileループ_は、条件が満たされている間、コマンドを繰り返し続けるループです。「while」ループは、プログラマーがコマンドを繰り返す必要がある正確な回数を知らない場合に使われますが、ループを繰り返し続けるためにどの条件がtrueである必要があるかを知っています。たとえば、生徒は農夫のゲームで穴を埋めたり、土を掘ったりする操作を行います。穴の大きさや土の山の高さはわかりませんが、地面が平らにならない限り、穴を埋めて土を掘り続ける必要があることを生徒は知っています。
            Until Loops in Maze:
              name: 迷路で学ぶUntilループ
              description_student: "「until」ループを使用すると、驚くべきことができます！"
              description_teacher: このレッスンでは、「until」ループについて学習します。生徒は、主人公が停止する目的の地点に「到達する」までアクションを繰り返すプログラムを作成します。
            Conditionals & Loops in Harvester:
              name: 条件文を用いる収獲
              description_student: 各条件文をいつ使用するかが常に明確であるとは限りません。このレッスンは、何をすべきかを決める練習をするのに役立ちます。
              description_teacher: 生徒は「while」ループ、「until」ループ、および「if/else」文を練習します。これらのブロックはすべて条件文を使用します。
                3つすべてを練習することで、生徒は複雑で柔軟なプログラムを書く方法を学びます。
            'Unplugged: Binary':
              name: バイナリ画像
              description_student: 2つのオプションのみで、言語を使ってコンピューターが画像をどのように保存するかを学びましょう。
              description_teacher: 多くの人はバイナリを厳密に0と1と考えていますが、ここでは情報をさまざまなバイナリオプションで表すことができるという考え方を学びます。さらにこのレッスンではこの考え方を一歩進めて、コンピューターがさらに複雑な情報
                (画像や色など) をバイナリでどう格納するのかも示します。
            Artist Binary:
              description_student: このレッスンでは、0と1のみを使って画像を作成する方法を学びます。
              description_teacher: この一連のオンラインレッスンでは、生徒はオンとオフを使って画像を作成する方法を学びます。
            Digital Citizenship:
              name: デジタル シティズンシップ
              description_student: 情報によってはオンラインで共有すると安全ではないものもあります。このレッスンは、公開しても安全な情報と個人情報の違いを学ぶのに役立ちます。
              description_teacher: "このレッスンは、Common Sense Educationと連携して、一部のウェブサイトが提供することを要求するか入力する必要があるユーザー情報について批判的に考えることを学ぶのに役立ちます。生徒はプライベート情報と個人情報の違いを学び、オンラインで共有するのに安全か安全でないかを区別します。\\\r\\\r生徒は、優れたデジタル市民になる方法を学ぶための1つの手順として、オフラインおよびオンラインコミュニティに対して責任を持ち、尊重することの意味を探ります。"
            Dance Party:
              name: ダンスパーティー
              description_student: お祝いの時間です！このレッスンでは、独自のインタラクティブなダンスパーティーをプログラムします。
              description_teacher: このレッスンでは、生徒が自分のインタラクティブなダンスパーティーをプログラムします。ツールは音楽に応答するように構築されているため、このアクティビティにはサウンドが必要です。
            Dance Part:
              name: ダンスパート
            End of Course Project:
              name: コース最後のプロジェクト
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
            Be A Super Digital Citizen:
              name: スーパーデジタルシティズンになる
              description_student: ネットいじめを見たときに、立派な態度がとれる方法を学びます。
          student_description: 生徒はループ、条件、イベントについての理解を深めます。プログラミング以外に、生徒はデジタル シティズンシップについて学びます。
        coursee-2020:
          title: コース E (2020)
          description: アルゴリズム、ループ、条件文、イベントを使ってプログラミングから始めて、関数に移ります。このコースの後半では、友だちや家族と共有できるキャップストーンプロジェクトを設計して作成します。
          description_short: コースCとDの概念を確認してから、関数を学習してさらに進みます。
          description_audience: '年齢: 8～12才'
          lesson_groups:
            ramp_up:
              display_name: ランプアップ
            csf_sprites:
              display_name: スプライト
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_nested_loops:
              display_name: 入れ子のループ
            csf_functions:
              display_name: 関数(かんすう)
            csf_impacts:
              display_name: コンピューティングの影響
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            Sequencing in the Maze:
              name: 迷路で学ぶシーケンス
              description_student: このレッスンでは、独自のプログラムを作成する方法を学びます。
              description_teacher: "このパズルのセットでは、生徒はCode.orgのオンラインワークスペースの紹介 (またはクラスの経験に応じて復習)
                から始めます。 「実行」、「リセット」、「手順」ボタンなど、ワークスペースの基本的な機能を紹介するビデオがあります。ビデオでは、Blocklyブロックのドラッグ、Blocklyブロックの削除、Blocklyブロックの接続についても説明しています。次に、生徒は迷路で_シーケンス_と_デバッグ_スキルを練習します。そこから、_ループ_の基本を学んだら、コレクター、アーティスト、農夫などの新しいタイプのパズルに進みます。\\\rデバッグはプログラミングの学習に不可欠な要素です。生徒は誤って解かれたパズルに取り組みます。ループが不正確だったり、ブロックが欠落していたり、ブロックが余分だったり、ブロックが機能しないなどのエラーを特定するには、既存のプログラムを順に検証する必要があります。"
            Programming and Loops with the Artist:
              name: ループを使った描画
              description_student: このレッスンでは、ループを使用すると、アーティストでさらにクールな画像を簡単に作成できます。
              description_teacher: 生徒がいくつかのブロックとデジタルステッカーを使って独自の素晴らしいデザインを作成すると、表情がパッと明るくなるのが見て取れます！このレッスンは、以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティは、ポートフォリオやPTA会議向け作品を作成するのに最適です。
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
              description_student: ここでは、マインクラフトの世界で条件文について学習します。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            Conditionals:
              name: ファーマーと学ぶ条件文
              description_student: この楽しくてやりがいのあるシリーズでは、特定の条件下でコンピューターに何をすべきかを教えます。
              description_teacher: このレッスンでは、生徒に「while」ループと「if/else」文を紹介します。 「while」ループは、条件が真である限り、コマンドを繰り返し続けるループです。whileループは、プログラマーがコマンドを繰り返す必要がある正確な回数を知らないときに使用しますが、プログラマーは、ループがループを続けるためにどの条件が真である必要があるかを知っています。「If/Else」文は、何かが真である場合にのみプログラムのセクション全体を実行することでプログラミングに柔軟性を提供し、そうでない場合は他の何かを実行します。
            Simon Says:
              name: サイモンは言う
              description_student: ゲームをプレイして、正しい結果を得るために必要なコマンドについて考えます。
              description_teacher: このレッスンでは、ゲームをプレイして、正しい結果を出すためにどのようにコマンドを与えたらいいかを生徒に考えてもらいます。これにより、今後のレッスンで、学んだことをスプライトラボに簡単に引き継ぐことができます。
            Learning Sprites with Sprite Lab:
              name: スプライトラボで泳ぐ魚
              description_student: スプライトを作成および編集する方法を学びます。
              description_teacher: このレッスンでは、スプライトラボの中心となる2つの概念、スプライトとビヘイビアについて学びます。スプライトは、生徒が移動、変更、操作できる画面上のキャラクターまたはオブジェクトです。ビヘイビアは、スプライトが停止するまで継続的に実行するアクションです。
            Alien Dance Party with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
              description_student: クラスメートと共有できるインタラクティブなプロジェクトを作成しましょう。
              description_teacher: このレッスンでは、生徒がインタラクティブなアニメーションやゲームを作成できるプラットフォームであるスプライトラボを取り上げます。ビヘイビアに加えて、今日はユーザー入力をイベントとして組み込んで、「エイリアンダンスパーティー」を作成します。
            Private and Personal Information:
              description_student: インターネットは楽しくて刺激的ですが、安全を確保することも重要です。このレッスンでは、安全に共有できる情報と非公開の情報の違いを学びます。
            About Me:
              name: スプライトラボについて
              description_student: スプライトラボでインタラクティブなポスターを作成することにより、生徒は個人情報やプライベート情報をウェブ上で共有することについて理解したことを応用します。
              description_teacher: スプライトラボでインタラクティブなポスターを作成することにより、生徒は個人情報やプライベート情報をウェブ上で共有することについて理解したことを応用します。\\
            Access Ability:
              name: アクセシビリティのための設計
              description_student: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
              description_teacher: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
            Nested Loops in Bee:
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、ループを別のループ内に配置するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Nested Loops in Artist:
              name: 入れ子のループを使った奇抜な形状
              description_student: 入れ子のループについてさらに学習します！今回は、入れ子のループを使って素晴らしい絵を描きます。
              description_teacher: 生徒は、今日使うパズルセットでアーティストを使って複雑なデザインを作成します。入れ子のループを新しい目標に向かって練習し続けることにより、生徒は一般的にループをどのように使ったらいいのかをより詳しく学べます。このパズルのセットは、ステージの最後に生徒が独自のデザインを作成する機会を提供し、創造性をより発揮することができます。
            Nested Loops in Frozen:
              name: フローズンで学ぶ入れ子のループ
              description_student: アナとエルサは優れたアイススケートスキルを持っていますが、氷のパターンを作成するにはあなたの助けが必要です。入れ子のループを使って、何かすごくいかしたものを作成しましょう。
              description_teacher: 生徒はループを重ねる方法を理解したので、非常に多くの美しいものを作成できます。このレッスンでは、生徒は一連の演習を行い、アナとエルサの優れたアイススケートスキルを使って、ポートフォリオに対応した独自のイメージを作成できるようにします。
            'Functions: Songwriting':
              name: 作詞作曲
              description_student: ロックスターでさえプログラミングのスキルが必要です。このレッスンでは、曲の歌詞を用いた関数について学習します。
              description_teacher: コンピューター サイエンスの世界で最も素晴らしい構造の1つは関数です。関数 (プロシージャと呼ばれることもあります)
                は、大きなプログラムの中で繰り返し使用できるミニプログラムです。このレッスンでは、まとまったコードを関数に合わせることがなぜ役立つのかを生徒が直感的に理解するのに役立ちます。
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
              description_student: 最も効率的なプログラムで関数を使用するにはどうしたらいいか、考えられますか？
              description_teacher: 生徒たちは、この楽しくインタラクティブなマインクラフトアドベンチャーで関数がどのように役立つかを学習します！
            Functions in Harvester:
              name: ファーマーと学ぶ関数
              description_student: ファーマーの収穫を手伝う際、関数が大きな手助けをしてくれます。
              description_teacher: 生徒は、アーティストで印象的なデザインを作成し、みつばちのゲームで迷路をナビゲートすることを練習しましたが、今日は、農夫のゲームで作物を収穫するための関数を用います。このレッスンでは、関数を「while」ループと「if/else」文と組み合わせることで、関数の新しい使用法を学びます。
            Functions in Artist:
              name: アーティストと学ぶ関数
              description_student: 関数で複雑な図面をより簡単に作成！
              description_teacher: 生徒は、アーティストで関数の使い方を学び、壮大な画像を作成および変更します。より複雑なパターンについては、関数を別の関数の中から呼び出すことにより、入れ子の関数について学びます。
            End of Course Project:
              name: コース最後のプロジェクト
              description_student: 大きなプロジェクトには時間と綿密な計画が必要です。あなたのインスピレーションを見つけ、計画を立て、創造性を解き放ちましょう！
              description_teacher: 次の4つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたって体験してもらうことを意図しています。その中で、ブレーンストーミングの探求、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボで事前に作成されたプロジェクトの例でプレイして、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティスト、スプライトラボ、または使い慣れたその他のインターフェイスで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。最後に、生徒は完成した作品を仲間に発表することができます。
            Digital Sharing:
              name: デジタル共有
              description_student: このレッスンでは、所有権と著作権の課題と利点について学びます。
              description_teacher: このレッスンは、コンピューター サイエンス入門で使うために著作権および創造性チームから借り受けたもので、特にデジタル環境において、所有権と著作権を尊重することの課題と利点を生徒が理解するのに役立ちます。生徒には、倫理的なデジタル
                シティズンでいることの重要な部分として、アーティストの権利を尊重するような姿勢が必要です。
            Designing for Accessibility:
              name: アクセシビリティのための設計
              description_student: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
              description_teacher: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
          student_description: アルゴリズム、ループ、条件文、イベントを使ってプログラミングから始めて、関数に移ります。このコースの後半では、友だちや家族と共有できるキャップストーンプロジェクトを設計して作成します。
        coursef-2020:
          title: コース F (2020)
          description: このコースでは、さまざまな種類のループ、イベント、関数、条件文を使用する方法を学びます。さまざまな問題解決手法を調査し、コンピューティングとインターネットの社会的影響について話し合います。このコースの後半では、友人や家族と共有できるキャップストーンプロジェクトを設計して作成します。
          description_short: コンピューター サイエンス入門のすべての概念を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description_audience: '年齢: 9～13才'
          lesson_groups:
            ramp_up:
              display_name: ランプアップ
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_variables:
              display_name: 変数（へんすう）
            csf_data:
              display_name: データ
            csf_for_loops:
              display_name: ループ用
            csf_sprites:
              display_name: スプライト
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
              description_student: 最も効率的なプログラムで関数を使用するにはどうしたらいいか、考えられますか？
              description_teacher: 生徒たちは、この楽しくインタラクティブなマインクラフトアドベンチャーで関数がどのように役立つかを学習します！
            Learning Sprites with Sprite Lab:
              name: スプライトラボで泳ぐ魚
              description_student: スプライトを作成および編集する方法を学びます。
              description_teacher: このレッスンでは、スプライトラボの中心となる2つの概念、スプライトとビヘイビアについて学びます。スプライトは、生徒が移動、変更、操作できる画面上のキャラクターまたはオブジェクトです。ビヘイビアは、スプライトが停止するまで継続的に実行するアクションです。
            Events with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
              description_student: クラスメートと共有できるインタラクティブなプロジェクトを作成しましょう。
              description_teacher: このレッスンでは、生徒がインタラクティブなアニメーションやゲームを作成できるプラットフォームであるスプライトラボを取り上げます。ビヘイビアに加えて、今日はユーザー入力をイベントとして組み込んで、「エイリアンダンスパーティー」を作成します。
            Loops with the Artist:
              name: ループを使った描画
              description_student: このレッスンでは、ループを使用すると、アーティストでさらにクールな画像を簡単に作成できます。
              description_teacher: 生徒がいくつかのブロックとデジタルステッカーを使って独自の素晴らしいデザインを作成すると、表情がパッと明るくなるのが見て取れます！このレッスンは、以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティは、ポートフォリオやPTA会議向け作品を作成するのに最適です。
            Nested Loops in the Maze:
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、ループを別のループ内に配置するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Envelope Variables:
              name: エンベロープ変数
              description_student: エンベロープと変数には共通点があり、どちらも貴重なものを保持できます。ここでは、変数とは何か、変数が行える素晴らしいことを学びます。
              description_teacher: 変数は、数値や単語などの値のプレースホルダーとして使用します。変数を使用すると、プログラミングの自由度が大幅に向上します。フレーズを何度も入力したり、あいまいな数値を覚えたりすることなく、コンピューター
                サイエンティストは変数を使ってそのようなフレーズや数値を参照できます。このレッスンでは、変数とは何か、どのような方法で変数を用いられるかについて説明します。変数の概念は簡単に理解できる概念ではないため、レッスンの最後に十分な時間をとって話し合うことをお勧めします。
            Variables as Constant in Artist:
              name: アーティストと学ぶ変数
              description_student: クラスに創造性の風を吹き込むことを忘れないでください！ここで取り組むパズルでは、変数を使って素晴らしい絵を作成します。
              description_teacher: このレッスンでは、アーティスト環境の変数を使って、反復的なデザインの作成について学びます。実行時に値が変化しない場合でも、変数を使ってプログラムを簡単に記述し、読みやすくする方法を学習します。
            Variables that Change in Bee:
              name: みつばちと学ぶ変数の変更
              description_student: このみつばちは変数が大好きです！
              description_teacher: このレッスンでは、プログラムの実行中に値を変更できるようにすることで、変数でプログラムを強化する方法を説明します。
            Variables that Change in Artist:
              name: アーティストと学ぶ変数の変更
              description_student: このレッスンでは、プログラムを実行する際に変化する変数を使って絵を描きます。
              description_teacher: このレッスンでは、アーティスト環境の変数を使って、反復的なデザインを行う方法ついて学びます。生徒は、変数をどう使うと、プログラムをど簡単に記述し、読みやすくできるかを学びます。ガイド付きパズルを行った後、生徒はフリープレイレベルで終了します。そこで学んだことを示し、独自のデザインを作成します。
            Simulating Experiments:
              name: 実験のシミュレーション
              description_student: コンピュータでシミュレーションを実行し、変数を変更して実験しましょう。
              description_teacher: 生徒はスプライトラボで簡単なシミュレーションを実行することにより、コンピューティングをどのように使うと傾向やパターンを特定するデータを収集できるかを体験します。シミュレーションを複数回実行した後、生徒はシミュレーションで変数を変更すると結果にどのように影響するかについて予測し、その仮説をテストする機会があります。
            For Loop Fun:
              name: Forループを楽しむ
              description_student: "「for」ループを楽しく学習しましょう！"
              description_teacher: ループのおかげで、何度でも繰り返し実行できることがわかっていますが、ここでは、追加の構造が組み込まれたループをどう使うかを学習します。このような新しい構造により、より強力で動的なプログラムを作成できます。
            For Loops in Bee:
              name: みつばちと学ぶForループ
              description_student: ブンブンブン。このパズルでは、「for」ループを使ってみつばちをミツとハチミツに導きます。
              description_teacher: みつばちが登場するこのレッスンでは、「for」ループに焦点を合わせ、増分変数を使ってより複雑なパズルを解きます。生徒は前のレッスンのループを復習し、次にforループを使って複雑な問題をより効果的に解決する方法を学習します。
            For Loops in Artist:
              name: アーティストと学ぶForループ
              description_student: 次の傑作を作る準備をしてください。ここでは、「for」ループを使って、驚くような画像を作成します。
              description_teacher: このレッスンでは、生徒は「for」ループの練習を続けますが、今回はアーティストと一緒に行います。生徒は、変数、ループ、および「for」ループのアイデアを組み合わせてパズルを完成させ、複雑なデザインを作成します。最後に、フリープレイレベルで自分の作品を作成する機会があります。
            Internet:
              name: インターネット
              description_student: 情報がインターネット上をどのように移動するのか疑問に思ったことはありませんか？魔法を使っているわけではありません！このレッスンでは、インターネットの仕組みの基本を学びます。
              description_teacher: 多くの人が毎日インターネットを使っていますが、それがどのように機能するかを知っている人はあまりいません。このレッスンでは、接続、URL、IPアドレス、DNSについて学びながら、インターネットの流れを疑似体験します。
            Editing Behaviors:
              name: スプライトラボで学ぶビヘイビア
              description_student: 独自のスプライトのビヘイビアをプログラムする方法を学びましょう！
              description_teacher: ここでは、生徒はスプライトラボを使って、独自のカスタマイズされたビヘイビアを作成します。
            Virtual Pet:
              name: スプライトラボでのバーチャルペット
              description_student: このレッスンでは、生徒は希望どおりの外観と動作をするインタラクティブなバーチャルペットを作成します。生徒は、スプライトラボの「コスチューム」ツールを使って、ペットの外観をカスタマイズします。その後、学習したイベント、ビヘイビア、その他の概念を使って、ペットに命を吹き込みます。
              description_teacher: このレッスンでは、生徒は希望どおりの外観と動作をするインタラクティブなバーチャルペットを作成します。生徒は、スプライトラボの「コスチューム」ツールを使って、ペットの外観をカスタマイズします。その後、学習したイベント、ビヘイビア、その他の概念を使って、ペットに命を吹き込みます。
            The Power of Words:
              name: 言葉の力
              description_student: いじめは決して許されません。このレッスンでは、オンラインで何を言ってよいか、何を言ってはいけないかについて説明します。
            Crowdsourcing:
              name: クラウドソーシング
              description_student: このレッスンでは、チームでプロジェクトを構築するプロセスであるクラウドソーシングについて学びます。
              description_teacher: コンピューター サイエンスでは、大きな困難な問題に直面します。大きな素数を見つけることやDNAの配列を決定するなどの課題は、個人として行うことはほとんど不可能です。他の人の力を借りると、このようなタスクが扱いやすくなります。このレッスンでは、コンピューター
                サイエンス業界でチームワークがいかに役立つかを説明します。
            Digital Sharing:
              name: デジタル共有
              description_student: このレッスンでは、所有権と著作権の課題と利点について学びます。
              description_teacher: このレッスンは、コンピューター サイエンス入門で使うために著作権および創造性チームから借り受けたもので、特にデジタル環境において、所有権と著作権を尊重することの課題と利点を生徒が理解するのに役立ちます。生徒には、倫理的なデジタル
                シティズンでいることの重要な部分として、アーティストの権利を尊重するような姿勢が必要です。
            End of Course Project:
              name: コース最後のプロジェクト
              description_student: 大きなプロジェクトには時間と綿密な計画が必要です。あなたのインスピレーションを見つけ、計画を立て、創造性を解き放ちましょう！
              description_teacher: "次の5つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたるプロジェクトを意図しています。その中で、ブレーンストーミング、設計プロセスの学習、最終的な作品の構築および発表を行います。\\\r\\\r「探索」ステージでは、生徒は事前に作成されたアーティストプログラムとスプライトラボプログラムで遊んでインスピレーションを得ます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。次に、アーティスト、スプライトラボ、その他のインターフェイスで独自のプロジェクトを作成するための時間が与えられます
                (これはおそらくプロジェクトの中で最長のステージです)。次に、生徒はテストとピアレビューの後にプログラムを修正します。最後に、生徒は完成した作品をクラスメートに発表します。"
            AI for Oceans:
              name: 海洋のためのAI
              description_student: チュートリアルの概要：まず、生徒は、オブジェクトを「魚」または「魚ではない」に分類して、海からゴミを取り除く試みを行います。次に、トレーニング
                データセットを拡張して、水中に属するその他の海洋生物を含めなくてはなりません。アクティビティの後半では、生徒はランダムに生成された魚のイメージに適用する独自のラベルを選択します。このトレーニング
                データは、新しいイメージに自動的にラベルを付けることができる機械学習モデルに使用されます。
          student_description: このコースでは、さまざまな種類のループ、イベント、関数、条件文を使用する方法を学びます。さまざまな問題解決手法を調査し、コンピューティングとインターネットの社会的影響について話し合います。このコースの後半では、友人や家族と共有できるキャップストーンプロジェクトを設計して作成します。
        express-2020:
          title: エクスプレスコース (2020)
          description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
          description_short: コンピューター サイエンス入門。小学校の中高学年向けコースの良い所をとりだしました。
          description_audience: '年齢: 9～18才'
          lesson_groups:
            csf_warmup:
              display_name: ウォームアップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_conditionals:
              display_name: 条件
            csf_functions:
              display_name: 関数(かんすう)
            csf_variables:
              display_name: 変数（へんすう）
            csf_for_loops:
              display_name: ループ用
            csf_sprites:
              display_name: スプライト
            end_of_course_project:
              display_name: コース最後のプロジェクト
          lessons:
            Dance Party:
              name: ダンスパーティー
            Programming in Maze:
              name: めいろ のプログラミング
            Debugging in Maze:
              name: 迷路で学ぶデバッグ
            Programming in Collector:
              name: コレクターで学ぶプログラミング
            Programming in Artist:
              name: アーティストと学ぶプログラミング
            Loops with Rey and BB-8:
              name: レイとBB-8と学ぶループ
            Loops in Artist:
              name: アーティストくりかえし
            Nested Loops in Bee:
              name: みつばちでの入れ子のループ
            Nested Loops in Frozen:
              name: フローズンで学ぶ入れ子のループ
            'Concept Practice with Minecraft ':
              name: マインクラフトでコンセプトの実践
            Conditionals in Bee:
              name: みつばちと学ぶ条件文
            While Loops in Farmer:
              name: ファーマーの「while」ループ
            'Conditionals in Minecraft: Voyage Aquatic':
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
            Until Loops in Maze:
              name: 迷路で学ぶUntilループ
            Conditionals & Loops in Harvester:
              name: 農夫と学ぶ条件文とループ
            Functions in Minecraft:
              name: マインクラフトで学ぶ関数
            Functions in Harvester:
              name: 農夫と学ぶ関数
            Functions in Artist:
              name: アーティストと学ぶ関数
            Variables as Constant in Artist:
              name: アーティストと学ぶ定数としての変数
            Variables that Change in Bee:
              name: みつばちと学ぶ変化する変数
            Variables that Change in Artist:
              name: アーティストと学ぶ変化する変数
            For Loops in Bee:
              name: みつばちと学ぶループ
            For Loops in Artist:
              name: アーティストと学ぶループ
            Learning Sprites with Sprite Lab:
              name: スプライトラボで学ぶスプライト
            Alien Dance Party with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
            Editing Behaviors:
              name: ビヘイビアの編集
            Virtual Pet with Sprite Lab:
              name: スプライトラボでのバーチャルペット
            Build A Project:
              name: プロジェクトを構築する
            Swimming Fish with Sprite Lab:
              name: スプライトラボで泳ぐ魚
            End of Course Project:
              name: コース最後のプロジェクト
            Programming with Angry Birds:
              name: めいろ のプログラミング
            Debugging with Scrat:
              name: スクラットと学ぶデバッグ
            Collecting Treasure with Laurel:
              name: ローレルと行う宝物の収集
            Creating Art with Code:
              name: プログラムでアートを作成
            Sticker Art with Loops:
              name: アーティストくりかえし
            Nested Loops in Maze:
              name: 迷路で学ぶ入れ子のループ
            Snowflakes with Anna and Elsa:
              name: スノーフレークとアナとエルサ
            'Looking Ahead with Minecraft ':
              name: マインクラフトで先を見る
            If/Else with Bee:
              name: みつばちと学ぶIf/Else
            While Loops with the Farmer:
              name: 農夫と学ぶWhileループ
            Harvesting with Conditionals:
              name: 条件文を用いる収獲
            Functions with Harvester:
              name: ファーマーと学ぶ関数
            Functions with Artist:
              name: アーティストと学ぶ関数
            Variables with Artist:
              name: アーティストと学ぶ変数
            Changing Variables with Bee:
              name: みつばちと学ぶ変数の変更
            Changing Variables with Artist:
              name: アーティストと学ぶ変数の変更
            For Loops with Bee:
              name: みつばちと学ぶForループ
            For Loops with Artist:
              name: アーティストと学ぶForループ
            Swimming Fish in Sprite Lab:
              name: スプライトラボで泳ぐ魚
            Alien Dance Party:
              name: エイリアンダンスパーティー
            Behaviors in Sprite Lab:
              name: スプライトラボで学ぶビヘイビア
          student_description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター
            プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
        pre-express-2020:
          title: 就学前エクスプレス (2020)
          description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
          description_short: 低学年向けのコンピュータ サイエンス入門です。幼児向けと小学1年生向けコースの良い所をとりだしました。
          description_audience: '年齢: 4～8才'
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
          lessons:
            Learn to Drag and Drop:
              name: ドラッグ＆ドロップ
              description_teacher: このレッスンでは、生徒がコンピューターラボに進むときに何が起こるかを理解します。まずはコンピューターラボのマナーを紹介する簡単なディスカッションから始まり、次にコンピューターを使ってオンラインパズルを完成させます。
            Sequencing with Scrat:
              name: スクラッチと学ぶシーケンス
            Programming in Maze:
              name: めいろ のプログラミング
            Programming with Rey and BB-8:
              name: レイとBB-8と学ぶプログラミング
              description_teacher: このレッスンでは、新しく学んだプログラミングスキルをより複雑な方法で使って、BB-8がトリッキーなコースをナビゲートできるようにします。
            Programming in Harvester:
              name: 農夫と学ぶプログラミング
              description_teacher: 生徒は、学習したプログラミングの概念を農夫の収穫に適用します。ここでは、キャラクターをゴールに到達させるだけでなく、新しいブロックを使ってトウモロコシを収穫する必要があります。生徒は引き続き順序アルゴリズムスキルを開発し、デバッグプロセスを使い始めます。
            Spelling Bee:
              name: つづりみつばち
            Loops in Ice Age:
              name: アイス・エイジのループ
            Loops in Collector:
              name: くりかえし あつめる
              description_teacher: このレッスンでは、引き続きループの概念を学習します。ここでは、冒険者のローレルが、ループを使って洞窟で宝物を収集します。ローレルの旅を助けるために、新しい「宝物を手に入れる」
                (get treasure) ブロックを導入しました。
            Ocean Scene with Loops:
              name: アーティストくりかえし
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、ループでパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            Loops in Artist:
              name: アーティストくりかえし
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、生徒はループを使ってパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            Tell a Story in Play Lab:
              name: プレイラボでストーリーを伝える
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってストーリーを作りましょう！
            Make a Game in Play Lab:
              name: プレイラボでゲームを作成する
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
            Loops with Scrat:
              name: スクラッチと学ぶループ
            Loops with Laurel:
              name: くりかえし あつめる
            Drawing Gardens with Loops:
              name: アーティストくりかえし
            On the Move with Events:
              name: プレイ ラボのイベント
            A Royal Battle with Events:
              name: プレイ ラボのイベント
          student_description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター
            プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
        csp1-2020:
          title: CSPユニット1 - デジタル情報 ('20～'21)
          lesson_groups:
            csp_unit1_2020:
              display_name: 'ユニット1: デジタル情報'
            cspSurvey:
              display_name: アンケート
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            new stage:
              name: 新しいステージ
            Welcome to CSP:
              name: CSPへようこそ
            Representing Information:
              name: 情報の表現
            Circle Square Patterns:
              name: サークルスクエアパターン
            Binary Numbers:
              name: 2進数
            Overflow and Rounding:
              name: オーバーフローと四捨五入
            Representing Text:
              name: テキストの表現
            Black and White Images:
              name: 白黒画像
            Color Images:
              name: カラー画像
            Lossless Compression:
              name: 可逆圧縮
            Lossy Compression:
              name: 不可逆圧縮
            Intellectual Property:
              name: 知的財産
            Project - Digital Information Dilemmas Part 1:
              name: プロジェクト - デジタル情報ジレンマ パート1
            Project - Digital Information Dilemmas Part 2:
              name: プロジェクト - デジタル情報ジレンマ パート2
            'Lesson 14: Assessment Day':
              name: 評価日
            CS Principles Pre-survey:
              name: CS原則の事前アンケート
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp2-2020:
          title: CSPユニット2 - インターネット ('20～'21)
          lesson_groups:
            csp_unit2_2020:
              display_name: 'ユニット2: インターネット'
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            new stage:
              name: 新しいステージ
            Welcome to the Internet:
              name: インターネットへようこそ
            Building a Network:
              name: ネットワークの構築
            The Need for Addressing:
              name: 対処の必要性
            Routers and Redundancy:
              name: ルーターと冗長性
            Packets:
              name: パケット
            DNS and HTTP:
              name: DNSとHTTP
            Project - Internet Dilemmas Part 1:
              name: プロジェクト - インターネットのジレンマ パート1
            Project - Internet Dilemmas Part 2:
              name: プロジェクト - インターネットのジレンマ パート2
            'Lesson 9: Assessment Day':
              name: 評価日
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp3-2020:
          title: CSPユニット3 - アプリ設計入門 ('20 - '21)
          lesson_groups:
            csp_unit3_2020:
              display_name: 'ユニット3: アプリ設計入門'
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            new stage:
              name: 新しいステージ
            Introduction to Apps:
              name: アプリの紹介
            Project - Designing an App Part 1:
              name: プロジェクト - アプリの設計 パート1
            Project - Designing an App Part 2:
              name: プロジェクト - アプリの設計 パート2
            The Need for Programming Languages:
              name: プログラミング言語の必要性
            Intro to Programming:
              name: プログラミング入門
            Debugging:
              name: デバッギング
            Project - Designing an App Part 3:
              name: プロジェクト - アプリの設計 パート3
            Project - Designing an App Part 4:
              name: プロジェクト - アプリの設計 パート4
            Project - Designing an App Part 5:
              name: プロジェクト - アプリの設計 パート5
            'Lesson 11: Assessment Day':
              name: 評価日
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp6-2020:
          title: CSPユニット6 - アルゴリズム ('20～21)
          lesson_groups:
            csp_unit6_2020:
              display_name: 'ユニット6: アルゴリズム'
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            new stage:
              name: 新しいステージ
            Algorithms Solve Problems:
              name: アルゴリズムが問題を解決する
            Algorithm Efficiency:
              name: アルゴリズムの効率性
            Unreasonable Time:
              name: 不合理な時間
            The Limits of Algorithms:
              name: アルゴリズムの限界
            Parallel and Distributed Algorithms:
              name: 並列分散アルゴリズム
            'Lesson 6: Assessment Day':
              name: 評価日
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp8-2020:
          title: CSPユニット8 - PT準備の作成 ('20～'21)
          lessons:
            new stage:
              name: 新しいステージ
            Create PT - Review the Task:
              name: PTの作成 - タスクの確認
            Create PT - Make a Plan:
              name: PTの作成 - 計画の立案
            Create PT - Complete the Task:
              name: PTの作成 - タスクの完了
        csp9-2020:
          title: CSPユニット9 - データ ('20～'21)
          lesson_groups:
            csp_unit9_2020:
              display_name: 'ユニット9: データ'
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            new stage:
              name: 新しいステージ
            Learning From Data:
              name: データから学ぶ
            Exploring One Column:
              name: 1列の探索
            Filtering and Cleaning Data:
              name: データのフィルタリングとクリーニング
            Exploring Two Columns:
              name: 2列の探索
            Big Data, Crowdsourcing, and Machine Learning:
              name: ビッグデータ、クラウドソーシング、機械学習
            Machine Learning and Bias:
              name: 機械学習とバイアス
            Project - Tell a Data Story - Part 1:
              name: プロジェクト - データストーリーを伝える - パート1
            Project - Tell a Data Story - Part 2:
              name: プロジェクト - データストーリーを伝える - パート2
            'Lesson 9: Assessment Day':
              name: 評価日
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp10-2020:
          title: CSPユニット10 - サイバーセキュリティとグローバルインパクト ('20～'21)
          lesson_groups:
            csp_unit10_2020:
              display_name: 'ユニット10: サイバーセキュリティとグローバルインパクト'
            cspSurvey2020:
              display_name: コース終了後アンケート
          lessons:
            new stage:
              name: 新しいステージ
            Project - Innovation Simulation Part 1:
              name: プロジェクト - イノベーションシミュレーション パート1
            Project - Innovation Simulation Part 2:
              name: プロジェクト - イノベーションシミュレーション パート2
            Project - Innovation Simulation Part 3:
              name: プロジェクト - イノベーションシミュレーション パート3
            Data Policies and Privacy:
              name: データポリシーとプライバシー
            The Value of Privacy:
              name: プライバシーの価値
            Project - Innovation Simulation Part 4:
              name: プロジェクト - イノベーションシミュレーション パート4
            Security Risks Part 1:
              name: セキュリティリスク パート1
            Security Risks Part 2:
              name: セキュリティリスク パート2
            'Project: Innovation Simulation Part 4':
              name: 'プロジェクト: イノベーションシミュレーションパート4'
            Project - Innovation Simulation Part 6:
              name: プロジェクト - イノベーションシミュレーション パート6
            Project - Innovation Simulation Part 7:
              name: プロジェクト - イノベーションシミュレーション パート7
            Protecting Data Part 1:
              name: データの保護 パート1
            Protecting Data Part 2:
              name: データの保護 パート2
            'Project: Innovation Simulation Part 5':
              name: 'プロジェクト: イノベーションシミュレーションパート5'
            'Project: Innovation Simulation Part 6':
              name: 'プロジェクト: イノベーションシミュレーションパート6'
            'Project: Innovation Simulation Part 7':
              name: 'プロジェクト: イノベーションシミュレーションパート7'
            CS Principles Post-Course Survey:
              name: CS原則 のコース後アンケート
        csp-march-virtual:
          title: CS原則 20～21 ファシリテーター向けカリキュラムトレーニング
          lessons:
            Kick-off:
              name: キックオフ
            Changes:
              name: 変化
            Curriculum Investigations:
              name: カリキュラム調査
            Wrap up:
              name: まとめ
            new stage:
              name: 新しいステージ
            Pre-work:
              name: プレワーク
            Reflections:
              name: 復習
            Part 1:
              name: パート1
            Part 2:
              name: パート2
            Getting Familiar with Traversals EIPM:
              name: トラバーサルEIPMに慣れる
            Comparing Make Lessons:
              name: メイクの比較レッスン
            Prework and Saturday Session Resources:
              name: プレワークと土曜日のセッションのリソース
            Saturday Session Resources:
              name: 土曜日のセッションのリソース
        csp3-virtual:
          title: アプリラボでの自習型のタートルプログラミング入門
          description_short: 古典的な亀の絵を使ったトップダウンの設計アプローチを通じて、JavaScriptのプログラミングの基本を学びます。
          lesson_groups:
            csp3_1_2018:
              display_name: 'ユニット3: プログラミング入門'
          lessons:
            The Need For Programming Languages:
              name: プログラミング言語の必要性
            The Need for Algorithms:
              name: アルゴリズムの必要性
            Creativity in Algorithms:
              name: アルゴリズムの創造性
            Using Simple Commands:
              name: 単純なコマンドの使用
            Creating Functions:
              name: 関数の作成
            Functions and Top-Down Design:
              name: 関数とトップダウン設計
            APIs and Function Parameters:
              name: APIと関数パラメータ
            Creating functions with Parameters:
              name: パラメータを使って関数を作成する
            Looping and Random Numbers:
              name: ループと乱数
            Practice PT - Design a Digital Scene:
              name: PTの練習 - デジタルシーンのデザイン
            Unit 3 Chapter 1 Assessment:
              name: ユニット3 第1章 評価
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
            Make your own Digital Scene:
              name: 自分だけのデジタルシーンを作成する
        jess-test-script:
          title: ジェスのスクリプト
          lessons:
            Our First Stage:
              name: 最初のステージ
            new stage:
              name: 新しいステージ
            newer stage:
              name: 新しいステージ
            Welcome to CSD Virtual Professional Learning:
              name: CSD 仮想専門学習へようこそ
            Introduction to CSD:
              name: CSD入門
            Tools:
              name: ツール
            Curriculum Components:
              name: カリキュラムのコンポーネント
            Course Resources:
              name: コースリソース
            Debugging:
              name: デバッギング
            Module 1:
              name: モジュール1
            Module 2:
              name: モジュール2
            Module 3:
              name: モジュール3
            Module 4:
              name: モジュール4
            Module 5:
              name: モジュール5
            Module 6:
              name: モジュール6
            Module 8:
              name: モジュール8
            Module 7:
              name: モジュール7
        csd2-virtual:
          title: 自習型のウェブラボ入門
          description: ここではコンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
          description_short: ウェブラボで独自のウェブサイトを構築する方法を学びましょう。
          lesson_groups:
            csd2_1:
              display_name: 第 1 章： Web コンテンツと HTML
            csd2_2:
              display_name: 第 2 章：スタイルと CSS
          lessons:
            Exploring Web Pages:
              name: ウェブページの探索
            Intro to HTML:
              name: HTML入門
              description_student: このレッスンでは、ウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを紹介します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。クラスはウェブラボでHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかについて話し合ってから、HTMLを使ってユニットの最初のウェブページを作成します。
              description_teacher: このレッスンでは、生徒はウェブサイトのコンテンツと構造をコンピューターにどのように伝達するかの問題のソリューションとして、HTMLを学習します。このレッスンでは、簡単なオフラインアクティビティから開始し、ウェブページの構造を効果的に伝達する上で直面する課題に取り組みます。次に、生徒はウェブラボの模範的なHTMLページを見て、HTMLタグがこの問題の解決にどのように役立つかをクラスメートと話し合います。次に、生徒は最初のHTMLを記述します。まとめのディスカッションは、このレッスンを通じて開発したコンテンツと構造の理解を深めるのに役立ちます。
            Headings:
              name: 見出し
              description_student: このレッスンでは、HTMLタグの説明を続けますが、今回はヘッダーを使用します。このクラスでは、ヘッダータグを使ってページとセクションのタイトルを作成し、さまざまなヘッダー要素がデフォルトでどのように表示されるかを学習します。次に、クラス全体で、ユニットを通じて構築する個人のウェブページでコンテンツをどのように配置するかを計画し、プロジェクトの最初のページの作成を開始します。
              description_teacher: このレッスンでは、生徒は引き続きHTMLを使ってウェブページ上のテキストを構成しますが、今回は見出しを使用します。生徒は、さまざまな見出し要素がデフォルトでどのように表示されるかを学び、それを使ってページとセクションのタイトルを作成する練習をします。次に、生徒は自分の個人のウェブページでコンテンツをどのように配置するかを決定していきます。最後のレベルでは、生徒は以降のユニットにかけて取り組むプロジェクトを開始します。
            Digital Footprint:
              name: デジタルフットプリント
              description_student: このレッスンでは、個人のウェブサイトを作成する作業から一歩下がり、デジタルで共有する個人情報について説明します。クラスでは、他の人と共有するのに適した情報の種類について話し合い、次にソーシャルメディアページの例をいくつか見て、意図的にまたは意図せずに共有する可能性がある個人情報の種類を確認します。最後に、クラスは、情報をオンラインに上げるときに従うべき一連のガイドラインについて考えます。
              description_teacher: "生徒は最近のレッスンで、自分の個人用ウェブサイトに掲載する実際のコンテンツについて時間を取って検討しました。このレッスンでは、ユニットで扱うプロジェクト
                (個人のウェブサイトの公開) から一歩下がって、生徒がどのような個人情報を誰とオンラインで共有するかについて考えられるようにします。また、生徒がオンラインで共有することにした情報の多くは、リリースされた瞬間に自らのコントロールから外れるという考えをしっかりと持てるようにします。\\\r
                \\\r生徒は、特定の個人情報を共有するのに適切な対象者を個別に特定することから始めます。次に、いくつかのソーシャルメディアページを見て、人々が自分自身またはお互いについてどのような情報を共有しているかを判断します。最後に、オンラインで情報を投稿するのに適切だと考えるガイドラインについて考えます。\\\r
                \\\rこのレッスンの究極のポイントは、生徒を怖がらせることではなく、情報をウェブに公開する際に、生徒がどこからどこまでがコントロールできる、どこから先がコントロールできないかを体験してもらうことです。"
            Styling Text with CSS:
              name: CSSを使用したテキストのスタイル設定
              description_student: このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。このクラスは、CSSルールセットの基本的な構文を学習してから、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。最後に、全員でテキストスタイルを自身のウェブサイトに適用します。
              description_teacher: "このレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。生徒は、CSSルールセットの基本的な構文を学び、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。生徒はギネス世界記録保持者に関するHTMLページで作業し、指定されたページに独自のスタイルを追加します。最後のレベルでは、生徒はテキスト要素のスタイルについて学んだことを自分のウェブページに適用します。\\\r
                \\\r"
            Intellectual Property:
              name: 知的財産
            Images:
              name: 画像
            'Websites for Expression ':
              name: 表現のためのウェブサイト
              description_student: このレッスンでは、個人的な表現の手段としてウェブサイトを紹介します。このクラスでは、まず人々が興味や考えを表現して共有するさまざまな方法について話し合い、次に前のコースで生徒が作成した模範的なウェブサイトをいくつか見ていきます。最後に、全員でブレインストーミングを行い、作成するウェブサイトに含めるトピックと興味のリストを共有し、ユニットの残りの部分で個人のウェブサイトを開発するためのリソースを作成します。
              description_teacher: このレッスンでは、生徒は個人的な表現の手段としてウェブサイトを使用する方法を調査し、個人的なウェブサイトに含めたいトピックと興味のリストを作成します。レッスンを開始するに当たり、生徒は人々が興味や考えを表現して共有するさまざまな方法を話し合います。次に、以前のCS発見コースで生徒が作成したいくつかの模範的なウェブサイトを見て、アイデアを表現する方法を明らかにします。最後に、生徒はブレーンストーミングを行い、個人的なウェブサイトに含めたいと思うトピックや興味のリストを共有し、ユニットを進めながら参照して着想に役立てられるようにします。
            Styling Elements with CSS:
              name: CSSを使用した要素のスタイル設定
              description_student: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。クラスは、新しいCSSスタイルを調査して、「世界のデザート」ページを変更することから始めます。その後、全員でこの新しい知識を自身のウェブサイトに適用します。
              description_teacher: このレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。生徒は、このレッスンの最初に、世界のデザートに関するウェブサイトを見ます。そして、このウェブサイトのCSSスタイルを調べて新たに変更を加え、独自のスタイルをこのページに追加します。
                デザートページで作業した後、生徒は新しいCSSプロパティの知識を利用して、自身のウェブサイトのスタイルをさらに充実させます。
            Project - Planning Layout and Style:
              name: プロジェクト - 計画のレイアウトとスタイル
            Project - Building a Webpage:
              name: プロジェクト - ウェブページの構築
            Purpose of a  Websites:
              name: ウェブサイトの目的
            Team Problem Solving:
              name: チームの問題解決
            Sources and Research:
              name: 出典と調査
            Planning a Multi-page Website:
              name: マルチページウェブサイトの計画
            Linking and Navigation:
              name: リンクとナビゲーション
            Project - Website for a Purpose:
              name: プロジェクト - ある目的のためのウェブサイト
            Peer Review and Final Touches:
              name: ピアレビューと最後の仕上げ
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
            Purpose of a Websites:
              name: ウェブサイトの目的
          student_description: ここではコンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグやコメントなどの貴重なプログラミングスキルも練習します。ユニットの終わりまでに、インターネットに公開できる個人用ウェブサイトが完成していることでしょう。
        csp5-virtual:
          title: アプリラボのイベント駆動型プログラミング
          description: この自習型モジュールでは、コンピュータープログラミングの基本的な概念を紹介します。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このコースでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
          description_short: リッチでインタラクティブなアプリを作成することにより、JavaScriptでのコンピュータープログラミングの基本的な概念を学習します。
          lessons:
            Buttons and Events:
              name: ボタンとイベント
            Multi-screen Apps:
              name: マルチスクリーンアプリ
            'Building an App: Multi-Screen App':
              name: 'アプリの構築: マルチスクリーンアプリ'
            Controlling Memory with Variables:
              name: 複合条件文ロジック
            'Building an App: Clicker Game':
              name: 'アプリの構築: クリッカーゲーム'
            Unit 5 Assessment 1:
              name: ユニット5 評価1
            User Input and Strings:
              name: ユーザー入力と文字列
            '"If" Statements Unplugged':
              name: オフラインで学ぶ「If」文
            Boolean Expressions and "If" Statements:
              name: ブール式と「if」文
            '"if-else-if" and Conditional Logic':
              name: "「if - else - if」と条件付きロジック"
            'Building an App: Color Sleuth':
              name: 'アプリの構築: Color Sleuth'
            Unit 5 Assessment 2:
              name: ユニット5 評価2
            While Loops:
              name: Whileループ
            Loops and Simulations:
              name: ループとシミュレーション
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'アプリの構築: 画像スクローラー'
            Unit 5 Assessment 3:
              name: ユニット5 評価3
            Processing Arrays:
              name: 配列の処理
            Functions with Return Values:
              name: 戻り値付き関数
            'Building an App: Canvas Painter':
              name: 'アプリの構築: カンバス ペインター'
            Unit 5 Assessment 4:
              name: ユニット5 評価4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: ユニット5 評価5 - AP疑似コードの練習問題
            CS Principles Post Course survey:
              name: CS原則 コース後アンケート
            Intro to App Lab:
              name: アプリラボの紹介
            Console.log and Multi-screen Apps:
              name: Console.logとマルチスクリーンアプリ
            Variables:
              name: 変数（へんすう）
            Moving Memory Challenges:
              name: 移動するメモリの課題
            If-Statements:
              name: if文
            Keep Going:
              name: そのままがんばれ
            Keep Going!:
              name: そのままがんばれ！
          student_description: この自習型モジュールでは、コンピュータープログラミングの基本的な概念を紹介します。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このコースでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
        virtual-holding-place:
          lesson_groups:
            content:
              display_name: 内容
            csd3_2:
              display_name: '第2章: ゲームを作る'
          lessons:
            Example Projects:
              name: プロジェクトの例
            Velocity:
              name: 速度
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
            Collisions:
              name: 衝突
            Functions:
              name: 関数(かんすう)
            The Game Design Process:
              name: ゲームデザインプロセス
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
            Project - Design a Game:
              name: プロジェクト - ゲームの設計
        code-break:
          title: コードブレイク
          lessons:
            new stage:
              name: 新しいステージ
            Beginner Challenges:
              name: 初心者の課題
            Intermediate Challenges:
              name: 中級者の課題
            'Episode 1: Algorithms':
              name: 'エピソード1: アルゴリズム'
            'Episode 2: Events':
              name: 'エピソード2: イベント'
            Algorithms:
              name: アルゴリズム
            Events:
              name: イベント
            'Episode 1: Algorithms with Hill Harper':
              name: 'エピソード1: ヒル・ハーパーと学ぶアルゴリズム'
            'Episode 2: Events with Ciara':
              name: 'エピソード2: シアラと学ぶイベント'
            Episode 1 - Algorithms with Hill Harper:
              name: エピソード1 - ヒル・ハーパーと学ぶアルゴリズム
            Episode 2 - Placeholder:
              name: エピソード2 - プレースホルダー
            Episode 2 - Coming Soon!:
              name: エピソード2 - 近日公開！
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: エピソード2 - マーク・キューバンとリンゼイ・スコットと物事を構築する
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: エピソード2 - マーク・キューバンとリンゼイ・スコットと学ぶプロトタイプ
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: エピソード3 - アシュトン・カッチャーとミア・ギル・エプナーと学ぶ暗号化
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: エピソード4 - アリス・キーラーとマイク・クリーガーと学ぶデジタル情報
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: エピソード4 - マイク・クリーガーとアリス・キーラーと学ぶデジタル情報
            Episode 5 - Simulations & Data with Bill Gates:
              name: エピソード5 - ビル・ゲイツと学ぶシミュレーションとデータ
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: キーガン・マイケル・キーとヴィント・サーフと学ぶインターネット
            Conditionals with Sal Khan and Flo Vaughn:
              name: サル・カーンとフロ・ボーンと学ぶ条件文
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: ヤラ・シャヒディとファジー・コスロシャヒと学ぶ変数
            Conditionals with Sal Khan & Flo Vaughn:
              name: サル・カーンとフロ・ボーンと学ぶ条件文
            Events with Macklemore & Scott Forstall:
              name: マックルモアーとスコット・フォーストールと学ぶイベント
            AI with Kat Graham & Cody Simpson:
              name: カテリーナ・グレアムとコーディー・シンプソンと学ぶAI
            AI with Kat Graham & Kate Park:
              name: カテリーナ・グレアムとケイト・パークと学ぶAI
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: スーザン・ウォジスキとチャイナ・アン・マクレーンと学ぶ抽象化
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: アロー・ブラック、ブレット・テイラー、パオラ・メジア・ミネヤと学ぶハードウェア
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia:
              name: アロー・ブラック、ブレット・テイラー、パオラ・メジアのハードウェア
        code-break-staging:
          title: コードブレイク ステージング
          lessons:
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: エピソード2 - マーク・キューバンとリンゼイ・スコットと物事を構築する
            Episode 1 - Algorithms with Hill Harper:
              name: エピソード1 - ヒル・ハーパーと学ぶアルゴリズム
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: エピソード2 - マーク・キューバンとリンゼイ・スコットと学ぶプロトタイプ
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epson:
              name: エピソード3 - アシュトン・カッチャーとミア・ギル・エプソンと学ぶ暗号化
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: エピソード3 - アシュトン・カッチャーとミア・ギル・エプナーと学ぶ暗号化
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: エピソード4 - アリス・キーラーとマイク・クリーガーと学ぶデジタル情報
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: エピソード4 - マイク・クリーガーとアリス・キーラーと学ぶデジタル情報
            Episode 5 - Simulations & Data with Bill Gates:
              name: エピソード5 - ビル・ゲイツと学ぶシミュレーションとデータ
            Episode 6 - The Internet with Vint Cerf and Keegan-Michael Key:
              name: エピソード6 - ヴィント・サーフとキーガン・マイケル・キーと学ぶインターネット
            Episode 6 - The Internet with Keegan-Michael Key & Vint Cerf:
              name: エピソード6 - キーガン・マイケル・キーとヴィント・サーフと学ぶインターネット
            Algorithms with Hill Harper:
              name: ヒル・ハーパーと学ぶアルゴリズム
            Prototypes with Mark Cuban & Lyndsey Scott:
              name: マーク・キューバンとリンゼイ・スコットと学ぶプロトタイプ
            Encryption with Ashton Kutcher & Mia Gil Epner:
              name: アシュトン・カッチャーとミア・ギル・エプナーと学ぶ暗号化
            Digital Information with Mike Krieger & Alice Keeler:
              name: マイク・クリーガーとアリス・キーラーと学ぶデジタル情報
            Simulations & Data with Bill Gates:
              name: ビル・ゲイツと学ぶシミュレーションとデータ
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: キーガン・マイケル・キーとヴィント・サーフと学ぶインターネット
            Conditionals with Sal Khan and Flo Vaughn:
              name: サル・カーンとフロ・ボーンと学ぶ条件文
            Conditionals with Sal Khan & Flo Vaughn:
              name: サル・カーンとフロ・ボーンと学ぶ条件文
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: ヤラ・シャヒディとファジー・コスロシャヒと学ぶ変数
            Events with Macklemore & Scott Forstall:
              name: マックルモアーとスコット・フォーストールと学ぶイベント
            AI with Kat Graham & Cody Simpson:
              name: カテリーナ・グレアムとコーディー・シンプソンと学ぶAI
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: スーザン・ウォジスキとチャイナ・アン・マクレーンと学ぶ抽象化
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: アロー・ブラック、ブレット・テイラー、パオラ・メジア・ミネヤと学ぶハードウェア
        code-break-younger-staging:
          title: コードブレイクの低学年向けステージング
          lessons:
            Episode 1 - Algorithms with Hill Harper:
              name: エピソード1 - ヒル・ハーパーと学ぶアルゴリズム
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: エピソード2 - マーク・キューバンとリンゼイ・スコットと物事を構築する
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: エピソード2 - マーク・キューバンとリンゼイ・スコットと学ぶプロトタイプ
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: エピソード3 - アシュトン・カッチャーとミア・ギル・エプナーと学ぶ暗号化
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: エピソード4 - アリス・キーラーとマイク・クリーガーと学ぶデジタル情報
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: エピソード4 - マイク・クリーガーとアリス・キーラーと学ぶデジタル情報
            Episode 5 - Simulations & Data with Bill Gates:
              name: エピソード5 - ビル・ゲイツと学ぶシミュレーションとデータ
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: キーガン・マイケル・キーとヴィント・サーフと学ぶインターネット
            Conditionals with Sal Khan and Flo Vaughn:
              name: サル・カーンとフロ・ボーンと学ぶ条件文
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: ヤラ・シャヒディとファジー・コスロシャヒと学ぶ変数
            Events with Macklemore & Scott Forstall:
              name: マックルモアーとスコット・フォーストールと学ぶイベント
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: スーザン・ウォジスキとチャイナ・アン・マクレーンと学ぶ抽象化
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: アロー・ブラック、ブレット・テイラー、パオラ・メジア・ミネヤと学ぶハードウェア
        code-break-younger:
          title: 低学年向けコードブレイク
          description: '学校が閉鎖され、数千万人の生徒が自宅にいるため、Code.orgはコードブレイクを開始します。これは、学校が休校中に当社のチームが自宅で子供たちに教える週1回のインタラクティブな教室です。毎週受けられ、生徒の能力を問わずご参加いただけます。コンピューターがない生徒も受けられます。詳細については、Code.org/breakをご覧ください。対象年齢:
            6～12才。'
          lessons:
            Episode 1 - Algorithms with Hill Harper:
              name: エピソード1 - ヒル・ハーパーと学ぶアルゴリズム
            Episode 2 - Coming Soon!:
              name: エピソード2 - 近日公開！
            Episode 2 - Building Things with Mark Cuban & Lyndsey Scott:
              name: エピソード2 - マーク・キューバンとリンゼイ・スコットと物事を構築する
            Episode 2 - Prototypes with Mark Cuban & Lyndsey Scott:
              name: エピソード2 - マーク・キューバンとリンゼイ・スコットと学ぶプロトタイプ
            Episode 3 - Encryption with Ashton Kutcher & Mia Gil Epner:
              name: エピソード3 - アシュトン・カッチャーとミア・ギル・エプナーと学ぶ暗号化
            Episode 4 - Digital Information with Alice Keeler & Mike Krieger:
              name: エピソード4 - アリス・キーラーとマイク・クリーガーと学ぶデジタル情報
            Episode 4 - Digital Information with Mike Krieger & Alice Keeler:
              name: エピソード4 - マイク・クリーガーとアリス・キーラーと学ぶデジタル情報
            Episode 5 - Simulations & Data with Bill Gates:
              name: エピソード5 - ビル・ゲイツと学ぶシミュレーションとデータ
            The Internet with Keegan-Michael Key & Vint Cerf:
              name: キーガン・マイケル・キーとヴィント・サーフと学ぶインターネット
            Conditionals with Sal Khan and Flo Vaughn:
              name: サル・カーンとフロ・ボーンと学ぶ条件文
            Variables with Yara Shahidi & Fuzzy Khosrowshahi:
              name: ヤラ・シャヒディとファジー・コスロシャヒと学ぶ変数
            Events with Macklemore & Scott Forstall:
              name: マックルモアーとスコット・フォーストールと学ぶイベント
            AI with Kat Graham & Cody Simpson:
              name: カテリーナ・グレアムとコーディー・シンプソンと学ぶAI
            AI with Kat Graham & Kate Park:
              name: カテリーナ・グレアムとケイト・パークと学ぶAI
            Abstraction with Susan Wojcicki & China Anne McClain:
              name: スーザン・ウォジスキとチャイナ・アン・マクレーンと学ぶ抽象化
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia Mineya:
              name: アロー・ブラック、ブレット・テイラー、パオラ・メジア・ミネヤと学ぶハードウェア
            Hardware with Aloe Blacc, Bret Taylor, & Paola Mejia:
              name: アロー・ブラック、ブレット・テイラー、パオラ・メジアのハードウェア
          student_description: '学校が閉鎖され、数千万人の生徒が自宅にいるため、Code.orgはコードブレイクを開始します。これは、学校が休校中に当社のチームが自宅で子供たちに教える週1回のインタラクティブな教室です。毎週受けられ、生徒の能力を問わずご参加いただけます。コンピューターがない生徒も受けられます。詳細については、Code.org/breakをご覧ください。対象年齢:
            6～12才。'
        no-lg:
          lessons:
            new stage:
              name: 新しいステージ
        csp5-virtual-part2:
          title: 自習型のアプリラボ入門
          description_short: リッチでインタラクティブなアプリを作成することにより、JavaScriptでのコンピュータープログラミングの基本的な概念を学習します。
          description: このユニットでは、コンピュータープログラミングの基本的な概念を紹介します。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このユニットでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
          lesson_groups:
            csp5_1:
              display_name: '第1章: イベント駆動型プログラミング'
            csp5_2:
              display_name: '第2章: データ構造を使用したプログラミング'
          lessons:
            Unit 5 Assessment 2:
              name: ユニット5 評価2
            While Loops:
              name: Whileループ
            Loops and Simulations:
              name: ループとシミュレーション
            Introduction to Arrays:
              name: Introduction to Arrays
            'Building an App: Image Scroller':
              name: 'アプリの構築: 画像スクローラー'
            Unit 5 Assessment 3:
              name: ユニット5 評価3
            Processing Arrays:
              name: 配列の処理
            Functions with Return Values:
              name: 戻り値付き関数
            'Building an App: Canvas Painter':
              name: 'アプリの構築: カンバス ペインター'
            Unit 5 Assessment 4:
              name: ユニット5 評価4
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: ユニット5 評価5 - AP疑似コードの練習問題
          student_description: このユニットでは、コンピュータープログラミングの基本的な概念を紹介します。これにより、リッチでインタラクティブなアプリを作成する力がつきます。このユニットでは、プログラミング言語としてJavaScriptを使用し、アプリを構築するためのプログラミング環境としてアプリラボを使用しますが、レッスンで学習するコンセプトは、どのプログラミング言語とツールにも通用します。
        k5-onlinepd-2020:
          description: Code.orgのコンピューター サイエンス入門のこの無料セルフペースオンラインコースで、コンピューター サイエンスを教える方法を学びましょう！
          lessons:
            Welcome to "Teaching Computer Science Fundamentals":
              name: "「コンピュータ サイエンスを教える」へようこそ"
            Understanding the Computer Science Fundamentals Courses:
              name: コンピューター サイエンス入門コースを理解する
            Sequencing:
              name: シークエンス
            Loops:
              name: くりかえし
            Events:
              name: イベント
            Conditionals:
              name: 条件
            End of Course projects:
              name: コース最後のプロジェクト
            Functions:
              name: 関数(かんすう)
            Variables:
              name: 変数（へんすう）
            For Loops:
              name: ループ用
            Sprite Lab:
              name: スプライト ラボ
            Reviewing your reflections:
              name: 復習内容をレビューする
            Next steps:
              name: 次の手順
          lesson_groups:
            k5_getting_started_1:
              display_name: 使用開始
            k5_basic_concepts_1:
              display_name: 基本的なプログラミングの概念と教授法
            k5_diving_deeper_1:
              display_name: '発展: コースEおよびF'
            k5_next_steps_1:
              display_name: 次の手順
          student_description: Code.orgのコンピューター サイエンス入門のこの無料セルフペースオンラインコースで、コンピューター
            サイエンスを教える方法を学びましょう！
        dani-june-2020-test:
          lessons:
            lesson 2:
              name: レッスン2
            CS Principles Pre-survey:
              name: CS原則の事前アンケート
            Buttons and Events:
              name: ボタンとイベント
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csp5_1:
              display_name: '第1章: イベント駆動型プログラミング'
        csd3-virtual:
          title: 自習型のゲームラボ入門
          description: ここではゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングします。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
          description_short: ゲームラボでアニメーション、インタラクティブアート、ゲームのプログラミングを学びましょう。
          lessons:
            Programming for Entertainment:
              name: 娯楽のためのプログラミング
              description_student: "**今日の質問: コンピューター サイエンスはエンターテイメントでどのように活用されているでしょうか？**
                \\\r \\\rクラスは退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。"
              description_teacher: "**今日の質問: コンピューター サイエンスはエンターテイメントでどのように活用されているでしょうか？**
                \\\r \\\r生徒は退屈「問題」と自己表現の方法を検討し、生活の中でその問題にどのように取り組んでいるかについて考えるように求められます。考えた後、コンピューター
                サイエンス全般、具体的にはプログラミングが、特定の形式のエンターテインメントまたは自己表現の手段としてどのような役割を果たすかを見ていきます。"
            Plotting Shapes:
              name: 形状のプロット
              description_student: "**今日の質問: 画面に何かを描画する方法を明確に伝えるにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。クラスはゲームラボツールを使って、形状をゲームラボの400
                x 400グリッドにインタラクティブに配置します。次に、パートナーは交互に、このツールを使って非表示の画像を描画する方法をお互いに指示します。これは、ゲームラボでのプログラミングの課題の多くを物語っています。"
              description_teacher: "**今日の質問: 画面に何かを描画する方法を明確に伝えるにはどうすればよいですか？** \\\r
                \\\r生徒は、図形を使って描画する方法を学び、ツールを使ってゲームラボでこの問題に対処する課題に挑戦します。ウォームアップアクティビティは、共通の基準点なしに位置を伝えるという課題を手短に示します。メインアクティビティでは、生徒はゲームラボの400
                x 400グリッドにインタラクティブに図形を配置できるゲームラボツールを詳しく見ていきます。次に、このツールを使って隠し画像を描画する方法をパートナーに順番に指示し、ゲームラボでプログラミングするときに生徒が直面するさまざまな課題を説明します。生徒は任意で、独自のイメージを作成して、デブリーフィングセッションの前に示してもいいでしょう。"
            Drawing in Game Lab:
              name: ゲームラボでの描画
              description_student: "**今日の質問: 画面に図形を描画する方法をコンピューターに伝えるにはどうすればよいですか？**
                \\\r \\\r生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。"
              description_teacher: "**今日の質問: 画面に図形を描画する方法をコンピューターに伝えるにはどうすればよいですか？**
                \\\r \\\r生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。"
            Variables:
              name: 変数（へんすう）
              description_student: "**今日の質問: 変数を使ってプログラムに情報を格納するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、プログラムで数値にラベルを付ける方法、またはランダムに生成された値を保存する方法として変数を導入します。クラスは、変数の目的の非常に基本的な説明と新しいブロックの使用方法からレッスンを開始します。次のレベルでは、生徒は、変数を数値のラベルまたは名前を付ける方法とするモデルを学習します。"
              description_teacher: "**今日の質問: 変数を使ってプログラムに情報を格納するにはどうすればよいですか？**このレッスンでは、変数を使って数値にラベルを付ける方法を学習します。生徒は、入力-出力-ストレージ-処理モデルのストレージコンポーネントの文脈の中で、変数の目的の非常に基本的な説明からレッスンを始めます。次のレベルでは、生徒は、変数を数値のラベルまたは名前を付ける方法とするモデルを学習します。"
            Sprites:
              name: スプライト
            Text:
              name: テキスト
              description_student: "**今日の質問: テキストを使ってシーンとアニメーションを改善するにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、ゲームラボのテキストコマンドを紹介し、座標平面とパラメータを使用する練習をさらに行います。レッスンの初めに、クラスはゲームラボで作成された漫画にキャプションを付けるよう求められます。次に、Code
                Studioに移動して、画面にテキストを配置したり、サイズなどの他のテキストプロパティを制御したりします。"
              description_teacher: "**今日の質問: テキストを使ってシーンとアニメーションを改善するにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、ゲームラボのテキストコマンドを紹介し、座標平面とパラメータを使用する練習をさらに行います。レッスンの初めに、生徒はゲームラボで作成された漫画にキャプションを付けるよう求められます。次に、Code
                Studioに移動して、画面にテキストを配置したり、サイズなどの他のテキストプロパティを制御したりします。評価を早めに完了した生徒は、より難易度の高いテキストのプロパティに関連するブロックを学んでもいいでしょう。"
            'Mini-Project: Captioned Scenes':
              name: 'ミニプロジェクト: キャプション付きシーン'
              description_student: "**今日の質問: ゲームラボを使って創造性を表現するにはどうすればよいですか？** \\\r
                \\\rこれまでに学習したプログラムを簡単に確認した後、クラスはユニットの最初のクリエイティブプロジェクトの説明を受けます。問題解決プロセスをモデルとして使って、生徒は作成したいシーンを定義し、必要なさまざまなプログラムを考えて準備し、ゲームラボで計画を試し、作成した内容を振り返ります。最後に、作成したものを仲間と共有する機会があります。"
              description_teacher: "**今日の質問: ゲームラボを使って創造性を表現するにはどうすればよいですか？** \\\r
                \\\rこれまでに学習したプログラムを簡単に確認した後、生徒はユニットの最初のクリエイティブプロジェクトの説明を受けます。問題解決プロセスをモデルとして使って、生徒は作成したいシーンを定義し、必要なさまざまなプログラムを考えて準備し、ゲームラボで計画を試し、作成した内容を振り返ります。最後に、作成したものを仲間と共有する機会があります。"
            The Draw Loop:
              description_student: "**今日の質問: ゲームラボで画像をアニメーション化するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。このクラスは、描画ループと乱数を組み合わせて、いくつかの単純なアニメーションをドットで、次にスプライトで操作します。"
              description_teacher: "**今日の質問: ゲームラボで画像をアニメーション化するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。レッスンを開始するために、生徒はパラパラ漫画を見て、さまざまなイメージを持つフレームが数多くあると、動いているかのような印象が生まれることを確認します。次に、生徒は、ゲームラボの描画ループが、プログラムでこれと同じ印象を生み出すのにどのように役立つかを説明するビデオを視聴します。生徒は、描画ループと乱数を組み合わせて、単純なアニメーションをドットで、次にスプライトで操作します。"
            Sprite Movement:
              name: スプライトの動き
              description_student: "**今日の質問: ゲームラボでスプライトの動きをどのように制御できますか？** \\\r \\\rこのレッスンでは、スプライトのプロパティを増分的に変更するカウンターパターンと呼ばれる構造を使って、スプライトの動きを制御する方法を学習します。プロパティを制御してスプライトをアニメーション化するさまざまな方法をブレインストーミングした後、クラスはCode
                Studioでカウンターパターンを詳しく見て、カウンターパターンを使ってさまざまなタイプのスプライトの動きを作成します。"
              description_teacher: "**今日の質問: ゲームラボでスプライトの動きをどのように制御できますか？** \\\r \\\rこのレッスンでは、スプライトのプロパティを増分的に変更するカウンターパターンと呼ばれる構造を使って、生徒がスプライトの動きを制御する方法を学習します。生徒はまずプロパティを制御してスプライトをアニメーション化するさまざまな方法をブレインストーミングしてから、Code
                Studioでカウンターパターンを探索します。稼働中のプログラムを詳しく見た後、カウンターパターンを使ってさまざまなタイプのスプライトの動きを作成します。"
            'Mini-Project: Animation':
              name: 'ミニプロジェクト: アニメーション'
              description_student: "**今日の質問: さまざまなプログラミングパターンを組み合わせて完全なアニメーションを作成するにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、前のレッスンのさまざまなメソッドを組み合わせてアニメーションのシーンを作成するように求められます。最初に、学習した動きとアニメーションの種類を確認し、その動きが必要なシーンはどのようなシーンかについてブレインストーミングを行います。その後、ゲームラボで作成した独自のアニメーションシーンの計画を練り始めます。"
              description_teacher: "**今日の質問: さまざまなプログラミングパターンを組み合わせて完全なアニメーションを作成するにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、前のレッスンのさまざまなメソッドを組み合わせてアニメーションのシーンを作成するように求められます。最初に、学習した動きとアニメーションの種類を確認し、その動きが必要なシーンはどのようなシーンかについてブレインストーミングを行います。その後、ゲームラボで作成した独自のアニメーションシーンの計画を練り始めます。"
            Conditionals:
              name: 条件
              description_student: "**今日の質問: プログラムは実行中に変更にどのように反応するでしょうか？** \\\r \\\rこのレッスンでは、ブールと条件文を紹介します。これにより、条件が真であるかどうかに応じてプログラムを異なる方法で実行できます。クラスは、特定の条件が満たされているかどうかに応じて応答する短いゲームをプレイすることから始まります。次に、Code
                Studioに移動し、コンピューターがブール式を評価する方法と、プログラムを構築するためにそれを活用する方法を学びます。"
              description_teacher: "**今日の質問: プログラムは実行中に変更にどのように反応するでしょうか？** \\\r \\\rこのレッスンでは、ブールと条件文を紹介します。これにより、条件が真であるかどうかに応じてプログラムを異なる方法で実行できます。生徒は、特定の条件が満たされているかどうかに応じて応答する短いゲームをプレイすることから始まります。次に、Code
                Studioに移動し、コンピューターがブール式を評価する方法と、プログラムを構築するためにそれを活用する方法を学びます。"
            Keyboard Input:
              name: キーボード入力
              description_student: "**今日の質問: プログラムはユーザー入力にどのように反応するでしょうか？** \\\r \\\r前のレッスンのブール文と条件文の紹介に続いて、「keyDown()」という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、クラスはキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。"
              description_teacher: "**今日の質問: プログラムはユーザー入力にどのように反応するでしょうか？** \\\r \\\r前のレッスンのブール文と条件文の紹介に続いて、「keyDown()」という新しいブロックを紹介します。これは、ブールを返し、条件文で使用して、画面上でスプライトを移動させることができるブロックです。このレッスンの終わりまでに、生徒はキーボード入力をユーザーから受け取り、画面上のスプライトを制御するプログラムを作成します。"
            Mouse Input:
              name: マウスの入力
              description_student: "**今日の質問: コンピューターがユーザー入力に反応する方法は他にどのようなものがありますか？**
                \\\r \\\rクラスは条件文を使ってユーザー入力を取得する方法の学習し続けます。昨日学習したキーボードコマンドに加えて、マウスの入力を取得する方法を学習します。また、条件文の理解を広げて「else」も扱います。これにより、コンピューターは、条件が真の場合にプログラムの特定のセクションを実行し、そうでない場合に別のプログラムのセクションを実行できるようになります。"
              description_teacher: "**今日の質問: コンピューターがユーザー入力に反応する方法は他にどのようなものがありますか？**
                \\\r \\\rこのレッスンで、生徒は条件文を使ってユーザー入力を取得する方法の学習し続けます。昨日学習したキーボードコマンドに加えて、マウスの入力を取得する方法を学習します。また、条件文の理解を広げて「else」も扱います。これにより、コンピューターは、条件が真の場合にプログラムの特定のセクションを実行し、そうでない場合に別のプログラムのセクションを実行できるようになります。"
            Project - Interactive Card:
              name: プロジェクト - インタラクティブカード
              description_student: "**今日の質問: インタラクティブプログラムを作成するときに物を言うスキルと実践は何ですか？**
                \\\r \\\r第1章のこのまとめプロジェクトでは、クラスはこれまで学んだプログラミング手法をすべて使ってインタラクティブグリーティングカードを計画および作成します。"
              description_teacher: "**今日の質問: インタラクティブプログラムを作成するときに物を言うスキルと実践は何ですか？**
                \\\r \\\r第1章のこのまとめプロジェクトでは、クラスはこれまで学んだプログラミング手法をすべて使ってインタラクティブグリーティングカードを計画および作成します。"
            Velocity:
              name: 速度
              description_student: "**今日の質問: プログラミング言語で複雑なパターンを隠して、簡単にプログラミングできるようにするにはどうすればよいですか？**
                \\\r \\\rカウンターパターンを使用してどのようにスプライトを移動させるかを簡単に確認した後、プログラムの複雑さを抑えられるように、このようなパターンを1つのブロックに隠す方法を紹介します。次に、Code
                Studioに移動して、スプライトの速度を直接設定する新しいブロックを試し、スプライトでより複雑な動作をプログラミングするさまざまな方法を見ていきます。"
              description_teacher: "**今日の質問: プログラミング言語で複雑なパターンを隠して、簡単にプログラミングできるようにするにはどうすればよいですか？**
                \\\r \\\r前のレッスンでカウンターパターンを使用してどのようにスプライトを移動させたかを簡単に確認した後、このようなパターンを1つのブロックに隠す方法を紹介します。次に、生徒はCode
                Studioに移動して、スプライトの速度を直接設定する新しいブロックを試し、スプライトでより複雑な動作をプログラミングするさまざまな方法を見ていきます。"
            Collision Detection:
              description_student: "**今日の質問: プログラミングはどのようにして複雑な問題をより簡単にすることができますか？**
                \\\r \\\rクラスは、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、生徒は「isTouching()」ブロックを使ってスプライトが衝突した時に生み出されるさまざまな効果を作成し、ブロックを使ってさまざまな相互作用をモデル化する練習をします。"
              description_teacher: "**今日の質問: プログラミングはどのようにして複雑な問題をより簡単にすることができますか？**
                \\\r \\\r生徒は、コンピューターでの衝突検出について学習します。ペアになって、コンピューターがスプライトの位置とサイズのプロパティおよび数学を使って、2つのスプライトが接触しているかどうかを検出する方法を探ります。次に、生徒は「isTouching()」ブロックを使ってスプライトが衝突した時に生み出されるさまざまな効果を作成し、ブロックを使ってさまざまな相互作用をモデル化する練習をします。"
            'Mini-Project: Side Scroller':
              name: 'ミニプロジェクト: サイドスクローラー'
              description_student: "**今日の質問: ゲームを作成するのに、新しいタイプのスプライトの動きと衝突検出はどのように使えばのいいでしょうか？**
                \\\r \\\rクラスは、衝突検出と速度の設定について学習したことを使って、単純なサイドスクローラーゲームを作成します。サンプルのサイドスクローラーゲームを見た後、生徒はどのようなサイドスクローラーを希望するかをブレインストーミングし、構造化されたプロセスを使ってコードスタジオでゲームをプログラミングします。"
              description_teacher: "**今日の質問: ゲームを作成するのに、新しいタイプのスプライトの動きと衝突検出はどのように使えばのいいでしょうか？**
                \\\r \\\r生徒は、衝突検出と速度の設定について学習したことを使って、単純なサイドスクローラーゲームを作成します。サンプルのサイドスクローラーゲームを見た後、生徒はどのようなサイドスクローラーを希望するかをブレインストーミングし、構造化されたプロセスを使ってコードスタジオでゲームをプログラミングします。"
            Complex Sprite Movement:
              name: 複雑なスプライトの動き
              description_student: "**今日の質問: 以前のブロックを新しいパターンに組み合わせて興味深い動きを作るにはどうすればよいですか？**
                \\\r \\\rクラスは、スプライトの速度プロパティをカウンターパターンと組み合わせて、スプライトがより複雑な動きをする方法を学びます。
                2つの概念を確認した後、カウンターパターンで速度が使用されるさまざまなシナリオを詳しく見て、結果として生まれるさまざまな種類の動きを観察します。特に、クラスは重力をシミュレートする方法を学びます。次に、すでに知っているブロックとパターンを組み合わせることで、新しい動作を取得する方法について考えます。"
              description_teacher: "**今日の質問: 以前のブロックを新しいパターンに組み合わせて興味深い動きを作るにはどうすればよいですか？**
                \\\r \\\r生徒は、スプライトの速度プロパティをカウンターパターンと組み合わせて、スプライトがより複雑な動きをする方法を学びます。
                2つの概念を確認した後、カウンターパターンで速度が使用されるさまざまなシナリオを詳しく見て、結果として生まれるさまざまな種類の動きを観察します。特に、生徒は重力をシミュレートする方法を学びます。次に、すでに知っているブロックとパターンを組み合わせることで、新しい動作を取得する方法について考えます。"
            Collisions:
              name: 衝突
              description_student: "**今日の質問: プログラマーはどのようにして抽象化を基にさらに抽象化できるのですか？**
                \\\r \\\r生徒は、新しい方法で相互作用するようにスプライトをプログラムします。 「isTouching」ブロックの使用方法を簡単に確認した後、生徒は2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (「collide」、「displace」、「bounce」、「bounceOff」) を使う練習をします。"
              description_teacher: "**今日の質問: プログラマーはどのようにして抽象化を基にさらに抽象化できるのですか？**
                \\\r \\\rこのレッスンで生徒は、新しい方法で相互作用するようにスプライトをプログラムします。 「isTouching」ブロックの使用方法を簡単に確認した後、生徒は2つのスプライトが他に相互作用できる方法はないかブレインストーミングします。次に、isTouchingを使って、画面上で1つのスプライトが別のスプライトを押すようにさせてから、4つの衝突ブロック
                (「collide」、「displace」、「bounce」、「bounceOff」) を使う練習をします。"
            'Mini-Project: Flyer Game':
              name: 'ミニプロジェクト: フライヤーゲーム'
              description_student: "**今日の質問: ゲームを作成するのに、新しいタイプの衝突とモデリングの動きをどのように使えばいいのでしょうか？**
                \\\r \\\rクラスは、重力のシミュレーションについて学習したこととさまざまなタイプの衝突を使って、単純なフライヤーゲームを作成します。フライヤーゲームのサンプルを見た後、生徒はどのようなフライヤーが欲しいかをブレインストーミングし、構造化されたプロセスを使ってコードスタジオでゲームをプログラミングします。"
              description_teacher: "**今日の質問: ゲームを作成するのに、新しいタイプの衝突とモデリングの動きをどのように使えばいいのでしょうか？**
                \\\r \\\r生徒は、重力のシミュレーションについて学習したこととさまざまなタイプの衝突を使って、単純なフライヤーゲームを作成します。フライヤーゲームのサンプルを見た後、生徒はどのようなフライヤーが欲しいかをブレインストーミングし、構造化されたプロセスを使ってコードスタジオでゲームをプログラミングします。"
            Functions:
              name: 関数(かんすう)
              description_student: "**今日の質問: プログラマーが関数を使って独自の抽象化を行うにはどうすればよいですか？**
                \\\r \\\rこのレッスンでは、プログラムを整理して読みやすくする方法として関数を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。クラスは、より高いレベルの手順またはより抽象的な手順を使うことで、手順の理解と推論が容易になることを学んだ後、ゲームラボで関数の作成を開始します。"
              description_teacher: "**今日の質問: プログラマーはどのように関数を使って独自の抽象概念を作成できますか？**
                \\\r \\\r生徒は、プログラムを整理して読みやすくするための関数を作成する方法を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。生徒はまず、ゲームラボでどのような種類の新しいブロックが必要か、そのブロックにどのようなプログラムが含まれるかを考えます。次に、ゲームラボで関数の作成を開始します。生徒は関数を使って、コードの長いブロックを描画ループから削除し、繰り返しのコードを1つの関数に置き換えます。"
            The Game Design Process:
              name: ゲームデザインプロセス
              description_student: "**今日の質問: 計画を立てることで、大規模なプロジェクトをどのようにより簡単にできるのでしょうか？**
                \\\r \\\r \\\rこのレッスンでは、ユニットの残りの部分のためのゲームを設計するのに使うプロセスを生徒に紹介します。このプロセスはプロジェクトガイドを中心に据え、生徒はゲームのプログラミングを始める前に、スプライト、変数、関数を定義するように求められます。クラスはこのプロセスを一連のレベルで学んでいきます。レッスンの最後には、ゲームを改良して独自のものにする機会があります。"
              description_teacher: "**今日の質問: 計画を立てることで、大規模なプロジェクトをどのようにより簡単にできるのでしょうか？**
                \\\r \\\r このレッスンでは、ユニットの残りの部分のためのゲームを設計するのに使うプロセスを生徒に紹介します。このプロセスはプロジェクトガイドを中心に据え、生徒はゲームのプログラミングを始める前に、スプライト、変数、関数を定義するように求められます。このレッスンでは、プログラムが非表示になっているゲームラボでゲームをプレイすることから始め、ゲームを作成するためにどのようなスプライト、変数、関数が必要と考えるかについて話し合います。次に、配布される完全なプロジェクトガイドには、ゲームを実装する方法が1つ示されています。そして、生徒はこのプロセスを一連のレベルで学習します。レッスンの最後に、生徒はゲームを改良して独自のものにする機会があります。"
            Using the Game Design Process:
              name: ゲームデザインプロセスの使用
              description_student: "**今日の質問: 問題解決プロセスは、プログラマーが大規模なプロジェクトを管理するのにどのように役立つのでしょうか？**
                \\\r \\\r \\\rこの2日以上かけて行うレッスンでは、クラスはユニット1の問題解決プロセスを使って、プラットフォーム ジャンパーゲームを作成します。サンプルゲームを見た後、クラスはどのようなゲームにしたいかを明確にし、構造化されたプロセスを使ってゲームを構築します。最後に、クラスはゲームをどのように改善できるかを考え、変更を加えていきます。"
              description_teacher: "**今日の質問: 問題解決プロセスは、プログラマーが大規模なプロジェクトを管理するのにどのように役立ちますか？**
                \\\r \\\rこの2日以上かけて行うレッスンでは、ユニット1の問題解決プロセスを使って、プラットフォーム ジャンパーゲームを作成します。まず、プラットフォーム
                ジャンパーの例を見てから、どのようなゲームにしたいかを明確にします。次に、構造化されたプロセスを使って、ゲームの実装に必要な背景、変数、スプライト、関数を計画します。ゲームのプログラムを書いた後、生徒はゲームをどのように改善できるかを振り返り、変更を加えていきます。"
            Project - Design a Game:
              name: プロジェクト - ゲームの設計
              description_student: "**今日の質問: 5つのCSプラクティス (問題解決、パーシステンス、コミュニケーション、コラボレーション、および創造性)
                は、プログラマーが大規模なプロジェクトを完了するのにどのように役立つでしょうか？** \\\r \\\rクラスでは、前の2つのレッスンのプロジェクトガイドを使って、オリジナルのゲームを計画および構築します。個別またはペアで作業して、クラスはゲームの計画、開発し、フィードバックを行います。ピアフィードバックをゲーム組み込んだ後、クラスは完成したゲームを共有します。"
              description_teacher: "**今日の質問: 5つのCSプラクティス (問題解決、パーシステンス、コミュニケーション、コラボレーション、および創造性)
                は、プログラマーが大規模なプロジェクトを完了するのにどのように役立つでしょうか？** \\\r \\\r生徒は、前の2つのレッスンのプロジェクトガイドを手引きに使って独自のゲームを計画および構築します。生徒は個別にまたはペアで作業し、サンプルゲームのセットからインスピレーションを得て、構築するゲームの種類を最初に決定します。次に、空白のプロジェクトガイドを記入します。その中で、ゲームの動作を説明し、作成する必要がある変数、スプライト、関数を詳しく調べます。Code
                Studioでは、一連のレベルで、この計画を実装するために使用できる一般的なシーケンスを示します。プロセスの途中で、生徒は自分のプロジェクトを共有してピアレビューに回し、ゲームを完成させながらフィードバックを組み込みます。レッスンの最後に、生徒は完成したゲームをクラスメートと共有します。このプロジェクトは複数のクラスにまたがり、3～5クラス分の時間がかかることも多々あります。"
            Post-Project Test:
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              name: CS発見 コース後アンケート
          lesson_groups:
            csd3_1:
              display_name: 内容
            csd3_2:
              display_name: 内容
            cspSurvey:
              display_name: 内容
          student_description: ここではゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングします。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
        ui-test-script-in-course-2017:
          lessons:
            Lesson:
              name: レッスン
          lesson_groups:
            lg_1:
              display_name: 内容
        ui-test-script-in-course-2019:
          lessons:
            Lesson:
              name: レッスン
          lesson_groups:
            lg_1:
              display_name: 内容
        ui-test-versioned-script-2017:
          lessons:
            Lesson:
              name: レッスン
          lesson_groups:
            lg_1:
              display_name: 内容
        ui-test-versioned-script-2019:
          lessons:
            Lesson:
              name: レッスン
          lesson_groups:
            lg_1:
              display_name: 内容
        kaitie-test-script:
          lessons:
            Module 1:
              name: モジュール1
            Module 2:
              name: モジュール2
            Module 3:
              name: モジュール3
            Module 4:
              name: モジュール4
            Module 5:
              name: モジュール5
            Module 6:
              name: モジュール6
            Module 7:
              name: モジュール7
            Module 8:
              name: モジュール8
        vpl-csd-2020:
          lessons:
            Module 1:
              name: モジュール1
            Module 2:
              name: モジュール2
            Module 3:
              name: モジュール3
            Module 4:
              name: モジュール4
            Module 5:
              name: モジュール5
            Module 6:
              name: モジュール6
            Module 7:
              name: モジュール7
            Module 8:
              name: モジュール8
        curriculum-sandbox-levels:
          lessons:
            Course A:
              name: コース A
            Course B:
              name: コース B
            Course E/F:
              name: コースE/F
            CS Discoveries:
              name: コンピューターサイエンス 発展
            Course E:
              name: コース E
            Course F:
              name: コース F
            csf:
              name: コンピューター・サイエンスの基礎
        ml-playground:
          lessons:
            AI for Oceans:
              name: 海洋のためのAI
            visualizing:
              name: データの視覚化
            project:
              name: 最終プロジェクト
            Project:
              name: 最終プロジェクト
        outbreak:
          lessons:
            Outbreak:
              description_student: モンスタータウンにウイルスが広がっています！ ウイルスシミュレーターを作成し、モンスターが健康を取り戻す手助けをする方法を学びます。
              description_teacher: このレッスンでは、イベントに関する**スキル構築**と**ミニプロジェクト**を組み合わせて、スプライトラボで独自のコンピュータシミュレーションを作成します。生徒にシミュレーションをじっくり調べてもらい、ウイルスがどれだけ早く広がるか、スピードを弱めるには何ができるかを理解してもらいます。
        2021drafting:
          lessons:
            Course F Introduction:
              name: スプライトラボの紹介
            lesson-2:
              name: テキストとプロンプト
            lesson-3:
              name: ミニプロジェクト：ユーザーインプットプログラム
            Making Sprites:
              name: スプライトを作る
            Sprites in Action:
              name: 実行中のスプライト
            blank space stories:
              name: ブランクスペースストーリー
            End of Course Project:
              name: コース最後のプロジェクト
          lesson_groups:
            introduction:
              display_name: はじめに
            lessonGroup-3:
              display_name: 変数（へんすう）
            debugging:
              display_name: デバッギング
        csd1-2021:
          description_short: 人が問題を解決するためにコンピューターを使ってどのように作業をするかを学びます。
          lessons:
            CS Discoveries Pre-survey:
              key: CS発見の事前アンケート
              name: CS発見の事前アンケート
            Intro to Problem Solving:
              key: 問題解決入門
              name: 問題解決入門
            The Problem Solving Process:
              key: The Problem Solving Process
              name: The Problem Solving Process
            Exploring Problem Solving:
              key: 問題解決の探求
              name: 問題解決の探求
            What is a Computer?:
              description_teacher: "**今日の質問: コンピューターとは何ですか？** \\\r \\\rこのレッスンでは、生徒は「コンピューター」とは何かを考えます。レッスンを開始したら、コンピューターの考えられる定義をブレインストーミングし、このブレインストーミングの結果をボードに配置します。次に、生徒はグループで作業して、ポスター用紙で写真を「コンピューター」か「コンピューターではない」かに分類します。グループはポスターを部屋の周りに配置し、なぜそのように分類したかを簡単に説明します。次に、先生はコンピューターの定義を紹介し、生徒に新しい定義に従ってポスターを修正してもらいます。\\\\"
            Input and Output:
              key: 入出力
              name: 入出力
            Processing:
              key: 処理
              name: 処理
              description_teacher: "**今日の質問: コンピューターが情報を処理する方法にはどのようなものがありますか？** \\\r
                \\\rこのレッスンでは、if/then (条件)、一致の発見 (検索)、カウント、そして比較という4つの一般的な処理タイプを生徒に紹介します。まず、サンプルアプリを通じて処理タイプについて説明します。次に、より多くのアプリを調査して、各アプリが使用する処理タイプを決定します。そして自分のアプリについて考え、アプリが機能するために必要な処理タイプを決定します。最後に、他の処理タイプについてブレインストーミングを行います。これは、役立つかもしれないけれどもレッスンの中心テーマとしては扱われなかったものです。"
            Storage:
              key: ストレージ
              name: ストレージ
            Project - Propose an App:
              key: プロジェクト - アプリの提案
              name: プロジェクト - アプリの提案
              description_teacher: "**今日の質問: IOSPモデルは、問題を解決するアプリの設計にどのように役立つでしょうか？**
                \\\r \\\r問題解決プロセスとコンピューターの入力/出力/保存/処理モデルの学習の締めくくりとして、生徒は実際の問題を解決するために設計されたアプリに取り組みます。このプロジェクトの完了には数日間を要し、アプリの機能を紹介するポスターを作成して、クラスメートに示します。プロジェクトガイドにはステップバイステップの指示が示され、生徒が自分の考えを整理するのに役立ちます。プロジェクトは各人で完了することもできますが、ペアで完了するように設計されています。"
            Post-Project Test:
              key: プロジェクト後のテスト
              name: プロジェクト後のテスト
            Intro to Problem Solving - Newspaper Table (Alternate Lesson 1):
              key: 問題解決入門 - 新聞の表 (代替レッスン1)
              name: 問題解決入門 - 新聞の表 (代替レッスン1)
            Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1):
              key: 問題解決入門 - スパゲッティ ブリッジ (代替レッスン1)
              name: 問題解決入門 - スパゲッティ ブリッジ (代替レッスン1)
            Intro to Problem Solving - Paper Tower (Alternate Lesson 1):
              key: 問題解決入門 - ペーパータワー (代替レッスン1)
              name: 問題解決入門 - ペーパータワー (代替レッスン1)
            Exploring Problem Solving - Animals Theme (Alternate Lesson 3):
              key: 問題解決の探索 - 動物のテーマ (代替レッスン3)
              name: 問題解決の探索 - 動物のテーマ (代替レッスン3)
            Exploring Problem Solving - Games Theme (Alternate Lesson 3):
              key: 問題解決の探索 - ゲームのテーマ (代替レッスン3)
              name: 問題解決の探索 - ゲームのテーマ (代替レッスン3)
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csd1_1:
              display_name: '第 1章: 問題解決プロセス'
            csd1_2:
              display_name: 第 2 章コンピューターと問題解決
            csd1_3:
              display_name: 代替レッスン
        csd2-2021:
          description_short: ウェブラボで独自のウェブサイトを構築する方法を学びましょう。
          lessons:
            Exploring Web Pages:
              key: ウェブページの探索
              name: ウェブページの探索
            Intro to HTML:
              key: HTML入門
              name: HTML入門
            Headings:
              key: 見出し
              name: 見出し
            'Mini-Project: HTML Web Page':
              key: 'ミニプロジェクト: HTML ウェブページ'
              name: 'ミニプロジェクト: HTML ウェブページ'
            Digital Footprint:
              key: デジタルフットプリント
              name: デジタルフットプリント
            Styling Text with CSS:
              key: CSSを使用したテキストのスタイル設定
              name: CSSを使用したテキストのスタイル設定
              description_teacher: "**今日の質問: ウェブページのテキストのスタイルを変更するにはどうすればよいですか？**
                \\\r \\\r \\\rこのレッスンでは、ページにスタイル要素を盛り込む方法としてCSSを紹介します。生徒は、CSSルールセットの基本的な構文を学び、HTMLテキスト要素に影響を与えるプロパティを詳しく見ます。生徒はギネス世界記録保持者に関するHTMLページで作業し、指定されたページに独自のスタイルを追加します。"
            'Mini-Project: Your Personal Style':
              key: 'ミニプロジェクト: 個人的なスタイル'
              name: 'ミニプロジェクト: 個人的なスタイル'
            Intellectual Property:
              key: 知的財産
              name: 知的財産
            Using Images:
              key: 画像の使用
              name: 画像の使用
            'Websites for Expression ':
              key: 表現のためのウェブサイト
              name: 表現のためのウェブサイト
            Styling Elements with CSS:
              key: CSSを使用した要素のスタイル設定
              name: CSSを使用した要素のスタイル設定
              description_teacher: "**今日の質問: ページの画像とレイアウトにスタイルを設定するにはどうすればよいですか？**\\\r
                \\\rこのレッスンでは、CSSスタイルプロパティの説明を続けます。今回は、テキスト以外の要素に重点を置きます。生徒は、このレッスンの最初に、世界のデザートに関するウェブサイトを見ます。そして、このウェブサイトのCSSスタイルを調べて新たに変更を加え、独自のスタイルをこのページに追加します。
                デザートページで作業した後、生徒は新しいCSSプロパティの知識を自身のウェブサイトに活かします。"
            Your Web Page - Prepare:
              key: ウェブページ - 準備
              name: ウェブページ - 準備
            Project - Personal Web Page:
              key: プロジェクト - 個人ウェブページ
              name: プロジェクト - 個人ウェブページ
            Websites for a Purpose:
              key: ある目的のためのウェブサイト
              name: ある目的のためのウェブサイト
            Team Problem Solving:
              key: チームの問題解決
              name: チームの問題解決
            Sources and Research:
              key: 出典と調査
              name: 出典と調査
            Planning a Multi-page Website:
              key: マルチページウェブサイトの計画
            Linking Pages:
              key: ページのリンク
              name: ページのリンク
            Project - Website for a Purpose:
              key: プロジェクト - ある目的のためのウェブサイト
              name: プロジェクト - ある目的のためのウェブサイト
            Peer Review and Final Touches:
              key: ピアレビューと最後の仕上げ
              name: ピアレビューと最後の仕上げ
            Post-Project Test:
              key: プロジェクト後のテスト
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              key: CS発見 コース後アンケート
              name: CS発見 コース後アンケート
          lesson_groups:
            csd2_1v2:
              display_name: '第1章: ウェブページの作成'
            csd2_2v2:
              display_name: '第2章: マルチページのウェブサイト'
            cspSurvey:
              display_name: アンケート
          student_description: ユニット2では、コンテンツを作成して自分のウェブページで共有する方法を学びます。世界と共有したいコンテンツを決定したら、HTMLとCSSを使ってページを構造化およびスタイル設定する方法を学びます。また、デバッグ、リソースの使用、チームワークなどの貴重なプログラミングスキルも練習します。
        csd3-2021:
          description_short: ゲームラボでアニメーション、インタラクティブアート、ゲームのプログラミングを学びましょう。
          lessons:
            Programming for Entertainment:
              key: 娯楽のためのプログラミング
              name: 娯楽のためのプログラミング
            Plotting Shapes:
              key: 形状のプロット
              name: 形状のプロット
            Drawing in Game Lab:
              key: ゲームラボでの描画
              name: ゲームラボでの描画
              description_teacher: "**今日の質問: 画面に図形を描画する方法をコンピューターに伝えるにはどうすればよいですか？**
                \\\r \\\r生徒は、このユニットのプログラミング環境であるゲームラボに取りかかり、それを使って画面上に図形を配置することを始めます。シーケンスとデバッグの基本、およびいくつかの簡単なコマンドを学びます。レッスンが終わる頃には、生徒は前のレッスンで描画ツールを使って作成したような画像をプログラムできるようになっていることでしょう。"
            Variables:
              key: 変数（へんすう）
              name: 変数（へんすう）
            Sprites:
              key: スプライト
              name: スプライト
            Text:
              key: テキスト
              name: テキスト
            'Mini-Project: Captioned Scenes':
              key: 'ミニプロジェクト: キャプション付きシーン'
            The Draw Loop:
              description_teacher: "**今日の質問: ゲームラボで画像をアニメーション化するにはどうすればよいですか？** \\\r
                \\\rこのレッスンでは、ゲームラボのコアプログラミングパラダイムの1つである描画ループを紹介します。レッスンを開始するために、生徒はパラパラ漫画を見て、さまざまなイメージを持つフレームが数多くあると、動いているかのような印象が生まれることを確認します。次に、生徒は、ゲームラボの描画ループが、プログラムでこれと同じ印象を生み出すのにどのように役立つかを説明するビデオを視聴します。生徒は、描画ループと乱数を組み合わせて、単純なアニメーションをドットで、次にスプライトで操作します。"
            Sprite Movement:
              key: スプライトの動き
              name: スプライトの動き
            'Mini-Project: Animation':
              key: 'ミニプロジェクト: アニメーション'
              name: ミニプロジェクト- アニメーション
            Conditionals:
              key: 条件
              name: 条件
            Keyboard Input:
              key: キーボード入力
              name: キーボード入力
            Mouse Input:
              key: マウスの入力
              name: マウスの入力
            Project - Interactive Card:
              key: プロジェクト - インタラクティブカード
              name: プロジェクト - インタラクティブカード
            Velocity:
              key: 速度
              name: 速度
              description_teacher: "**今日の質問: プログラミング言語で複雑なパターンを隠して、簡単にプログラミングできるようにするにはどうすればよいですか？**
                \\\r \\\r前のレッスンでカウンターパターンを使用してどのようにスプライトを移動させたかを簡単に確認した後、このようなパターンを1つのブロックに隠す方法を紹介します。次に、生徒はCode
                Studioに移動して、スプライトの速度を直接設定する新しいブロックを試し、スプライトでより複雑な動作をプログラミングするさまざまな方法を見ていきます。"
            'Mini-Project: Side Scroller':
              key: 'ミニプロジェクト: サイドスクローラー'
              name: ミニプロジェクト- サイドスクローラー
            Complex Sprite Movement:
              key: 複雑なスプライトの動き
              name: 複雑なスプライトの動き
            Collisions:
              key: 衝突
              name: 衝突
            'Mini-Project: Flyer Game':
              key: 'ミニプロジェクト: フライヤーゲーム'
              name: ミニプロジェクト- フライヤーゲーム
            Functions:
              key: 関数(かんすう)
              name: 関数(かんすう)
              description_teacher: "**今日の質問: プログラマーはどのように関数を使って独自の抽象概念を作成できますか？**
                \\\r \\\r生徒は、プログラムを整理して読みやすくするための関数を作成する方法を学びます。関数により、プログラムのブロックを繰り返し用いる作業を省くことができます。生徒はまず、ゲームラボでどのような種類の新しいブロックが必要か、そのブロックにどのようなプログラムが含まれるかを考えます。次に、ゲームラボで関数の作成を開始します。生徒は関数を使って、コードの長いブロックを描画ループから削除し、繰り返しのコードを1つの関数に置き換えます。"
            The Game Design Process:
              key: ゲームデザインプロセス
              name: ゲームデザインプロセス
            Using the Game Design Process:
              key: ゲームデザインプロセスの使用
              name: ゲームデザインプロセスの使用
            Project - Design a Game:
              key: プロジェクト - ゲームの設計
              name: プロジェクト - ゲームの設計
            Post-Project Test:
              key: プロジェクト後のテスト
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              key: CS発見 コース後アンケート
              name: CS発見 コース後アンケート
          lesson_groups:
            csd3_1:
              display_name: '第 1 章: 画像とアニメーション'
            csd3_2:
              display_name: '第2章: ゲームを作る'
            cspSurvey:
              display_name: アンケート
          student_description: ユニット3では、ゲームラボでアニメーション、インタラクティブアート、ゲームをプログラミングしながら、プログラミングエクスペリエンスを構築します。ユニットは、単純な形状から始まり、コンピューター
            サイエンティストが日常的に使用するのと同じプログラミング概念と設計プロセスを使って、より洗練されたスプライトベースのゲームを構築していきます。最終プロジェクトでは、パーソナライズされたインタラクティブなプログラムを開発します。
        csd4-2021:
          description_short: ユーザーのニーズを満たすプログラムを設計する方法を学びましょう。
          lessons:
            Analysis of Design:
              key: デザインの分析
            Understanding Your User:
              key: ユーザーを理解する
              name: ユーザーを理解する
            User-Centered Design Micro Activity:
              key: ユーザー中心のデザインマイクロアクティビティ
              name: ユーザー中心のデザインマイクロアクティビティ
            User Interfaces:
              key: ユーザーインターフェイス
              name: ユーザーインターフェイス
            Feedback and Testing:
              key: フィードバックとテスト
              name: フィードバックとテスト
            Identifying User Needs:
              key: ユーザーのニーズの特定
              name: ユーザーのニーズの特定
            Project - Paper Prototype:
              key: プロジェクト - 紙のプロトタイプ
              name: プロジェクト - 紙のプロトタイプ
            Designing Apps for Good:
              key: 優れたアプリの設計
              name: 優れたアプリの設計
            Market Research:
              key: 市場調査
              name: 市場調査
            Paper Prototypes:
              key: 紙のプロトタイプ
            Prototype Testing:
              key: " プロトタイプテスト"
              name: " プロトタイプテスト"
            Digital Design:
              key: デジタルデザイン
            Linking Screens:
              key: 画面のリンク
            Testing the App:
              key: アプリのテスト
              name: アプリのテスト
            Improving and Iterating:
              key: 改善とイテレーション
              name: 改善とイテレーション
            Project - App Presentation:
              key: プロジェクト - アプリのプレゼンテーション
              name: プロジェクト - アプリのプレゼンテーション
            Post-Project Test:
              key: プロジェクト後のテスト
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              key: CS発見 コース後アンケート
              name: CS発見 コース後アンケート
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：ユーザーを中心にしたデザイン
            csd4_2:
              display_name: 第 2 章：アプリのプロトタイピング
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
          student_description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
        csd5-2021:
          description_short: コンピューターを使ってデータの問題を解決する方法を学びましょう。
          lessons:
            Representation Matters:
              key: 表現が重要
              name: 表現が重要
            Patterns and Representation:
              key: パターンと表現
              name: パターンと表現
            ASCII and Binary Representation:
              key: ASCIIとバイナリ表現
              name: ASCIIとバイナリ表現
            Representing Images:
              key: 画像の表現
              name: 画像の表現
            Representing Numbers:
              key: 数値の表現
              name: 数値の表現
            Keeping Data Secret:
              key: データの秘密を守る
              name: データの秘密を守る
            Combining Representations:
              key: 表現を組み合わせる
              name: 表現を組み合わせる
            Project - Create a Representation:
              key: プロジェクト - 表現を作成する
            Problem Solving and Data:
              key: 問題解決とデータ
              name: 問題解決とデータ
            Problem Solving with Big Data:
              key: ビッグデータによる問題解決
              name: ビッグデータによる問題解決
            Structuring Data:
              key: データの構造化
              name: データの構造化
            Making Decisions with Data:
              key: データを使った決定
              name: データを使った決定
            Interpreting Data:
              key: データの解釈
              name: データの解釈
            Automating Data Decisions:
              key: データ決定の自動化
              name: データ決定の自動化
            Project - Make a Recommendation:
              key: プロジェクト - 推奨事項の作成
              name: プロジェクト - 推奨事項の作成
            Post-Project Test:
              key: プロジェクト後のテスト
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              key: CS発見 コース後アンケート
              name: CS発見 コース後アンケート
          lesson_groups:
            csd5_1:
              display_name: 第1章：情報を表現する
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
          student_description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
        csd6-2021:
          description_short: 物理デバイスでプログラミングする方法を学びます。
          lessons:
            Innovations in Computing:
              key: コンピューティングにおける革新
              name: コンピューティングにおける革新
              description_teacher: このコースの最後のユニットを開始するに当たり、生徒はコンピューティングの興味深い革新性について調査します。このレッスンでは、さまざまなコンピューティングフォームファクター
                (コンピューターはどのようなものか) と、コンピューティングの影響を受けるフィールドについて生徒に説明します。このユニットの後半では、生徒は自分の物理的なコンピューティングデバイスを開発しながら、このレッスンで触れたデバイスを振り返ります。
            The Circuit Playground:
              key: サーキット プレイグラウンド
              name: サーキット プレイグラウンド
              description_teacher: このレッスンでは、生徒はサーキット プレイグラウンドを使ったプログラムを作成する最初の機会が得られます。最初にボードを視覚的に見て、どのように機能するかの仮説を立てた後、生徒はオンラインでLEDを制御するアプリケーションの作成方法を学びます。
                アプリラボの画面をサーキット プレイグラウンドと組み合わせることで、生徒はユーザー入力にアプリラボを利用しながら、ボードの要素を出力デバイスとして徐々に統合し始めることができます。
            Input Unplugged:
              key: オフラインで入力
              name: オフラインで入力
              description_teacher: アプリラボでプログラミングをさらに深く掘り下げるための準備として、ゲームラボとアプリラボで記述したさまざまなプログラムが、ユーザーの入力をどのように処理するかを学習します。サンプルアプリで見たアプローチを比較対照した後、生徒はグループになって入力のための2つのモデル
                (無限ループの条件文と非同期イベント) を実行し、それらがどのように機能するかをよりよく理解します。
            Board Events:
              key: ボードイベント
              name: ボードイベント
            Getting Properties:
              key: プロパティの取得
              name: プロパティの取得
            Analog Input:
              key: アナログ入力
              name: アナログ入力
              description_teacher: このレッスンでは、3つのアナログセンサー (音、光、温度) を使って、環境の変化に対応するプログラムを作成する方法を学習します。これらのセンサーの使用は、ユーザーがプログラムとどのように対話するかという点でステージが1つ上がります。センサーを入力として使用することで、アプリのユーザーはアプリと直接やり取りする必要がまったくないか、実際にそうしていることに気づかずにやり取りできます。
            The Program Design Process:
              key: プログラム設計プロセス
              name: プログラム設計プロセス
              description_teacher: このレッスンでは、このユニットを通じて独自のプログラムを設計するために使用するプロセスを説明します。このプロセスは、生徒に画面のスケッチ、使用するサーキット
                プレイグラウンドの要素の識別、変数の定義、プログラミングを開始する前のイベントの説明を求めるプロジェクトガイドを柱にしています。このプロセスは、ユニット3で使用したゲームデザインプロセスと似ています。このレッスンでは、綱引きのようなゲーム
                (この中で、プログラムが非表示になっています) から始めます。生徒は、プログラムを作成するために､ボードコンポーネント、イベント、変数はどうあるべきと考えるかについて話し合います。次に、プロジェクトを実装する方法が1つ示された完全なプロジェクトガイドが示されます。次に、生徒はこのプロセスを一連のレベルを通して学習します。レッスンの最後に、生徒はプログラムを改善して独自のものにする機会があります。
            'Project: Make a Game':
              key: 'プロジェクト: ゲームを作る'
            Arrays and Color LEDs:
              key: 配列とカラーLED
              name: 配列とカラーLED
              description_teacher: 配列は、通常は同じタイプの項目を順序を付けて集めたものです。このレッスンでは、インデックスを使ってリストから特定の値またはランダムな値にアクセスする方法を学習します。次に、サーキット
                プレイグラウンドのカラーLEDの動作を制御するカラーLED配列を利用する方法を学びます。生徒は各LEDの色と輝度を制御し、学習した内容を使って光のパターンをプログラムし、サーキット
                プレイグラウンドでライトショーを作成します。
            Arrays and For Loops:
              key: 配列とforループ
              name: 配列とforループ
              description_teacher: _forループ_を使って配列内のすべての要素を反復処理することは、ほとんどのプログラミング言語で非常に便利な構成です。このレッスンでは、_for
                loop_を使ってプログラムを繰り返す方法の基本を学び、さらに配列についてすでに学んだことと組み合わせて、配列内のすべての要素を処理するプログラムを作成します。生徒は各要素のプログラムを記述することなく、forループを使ってリストの各要素を1つずつ処理します。レッスンの終盤では、生徒はこれをボードの「colorLed」リストに適用して、ボタンがクリックされるたびにすべてのLEDを変更するアプリを作成します。
            Accelerometer:
              key: 加速度計
              name: 加速度計
              description_teacher: このレッスンでは、加速度計とその機能について学習します。生徒はそのイベントやプロパティに慣れるだけでなく、実際のユースケースで遭遇する可能性のあるものと同様の加速度計を利用して複数のプログラムを作成します。
            Functions with Parameters:
              key: パラメーター付き関数
              name: パラメーター付き関数
              description_teacher: レッスンは、生徒が最近見たアプリラボのブロックのコンテキストで、パラメータの簡単な復習から始まります。次に、生徒はアプリラボでユーザーが作成した関数内のパラメータの例を見て、パラメータを使って関数を作成および呼び出し、それを使って画面上の複数の要素を制御します。その後、forループを使って配列を反復処理し、各要素を関数に渡します。最後に、生徒は学んだことを使ってスターキャッチングゲームを作成します。
            Circuits and Physical Prototypes:
              key: 回路と物理プロトタイプ
              name: 回路と物理プロトタイプ
              description_teacher: この章の最終プロジェクトの準備として、生徒は、サーキット プレイグラウンドを含む物理オブジェクトのプロトタイプを開発する方法を学びます。生徒は、モデル化されたプロジェクト計画ガイドを使って、段ボールやダクトテープなどの安価で簡単に見つけられる材料を使って、いくつかの単純な回路を組み、製品の意図した設計を伝えることができるプロトタイプを構築する方法を学びます。
            'Project: Prototype an Innovation':
              key: 'プロジェクト: イノベーションのプロトタイプ'
              description_teacher: コースのこの最終プロジェクトでは、生徒チームが、サーキット プレイグラウンドに基づく革新的なコンピューティングデバイスのプロトタイプを開発およびテストします。ボードで利用できる入力と出力を使って、グループは興味深いユニークなユーザーインタラクションを可能にするプログラムを作成します。
            Post-Project Test:
              key: プロジェクト後のテスト
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              key: CS発見 コース後アンケート
              name: CS発見 コース後アンケート
          lesson_groups:
            csd6_1:
              display_name: '第 1 章: ハードウェアを使ったプログラミング'
            csd6_2:
              display_name: '第 2 章: 物理プロパティの構築'
            cspSurvey:
              display_name: アンケート
          student_description: ユニット6では、コンピューティングにおけるハードウェアプラットフォームの役割と、従来のキーボード、マウス、モニターと比べてさまざまなセンサーによりどのように効果的な入力と出力が行えるかを探ります。アプリラボとAdafruitのサーキット
            プレイグラウンドを使って、スマートデバイスで見られるのと同じハードウェア入力と出力を利用するプログラムを開発し、単純な粗いプロトタイプがどのようにして完成品につながるかを見ていきます。ユニットの最後には、独自の革新的な設計を行う基礎としてサーキット
            プレイグラウンドを使用するというデザインチャレンジが用意されています。
        csp1-2021:
          lessons:
            CS Principles Pre-survey:
              key: CS原則の事前アンケート
              name: CS原則の事前アンケート
            Welcome to CSP:
              key: CSPへようこそ
              name: CSPへようこそ
            Representing Information:
              key: 情報の表現
              name: 情報の表現
            Circle Square Patterns:
              key: サークルスクエアパターン
              name: サークルスクエアパターン
            Binary Numbers:
              key: 2進数
              name: 2進数
            Overflow and Rounding:
              key: オーバーフローと四捨五入
              name: オーバーフローと四捨五入
            Representing Text:
              key: テキストの表現
              name: テキストの表現
            Black and White Images:
              key: 白黒画像
              name: 白黒画像
            Color Images:
              key: カラー画像
              name: カラー画像
            Lossless Compression:
              key: 可逆圧縮
              name: 可逆圧縮
            Lossy Compression:
              key: 不可逆圧縮
              name: 不可逆圧縮
            Intellectual Property:
              key: 知的財産
              name: 知的財産
            Project - Digital Information Dilemmas Part 1:
              key: プロジェクト - デジタル情報ジレンマ パート1
              name: プロジェクト  デジタル情報ジレンマ パート1
            Project - Digital Information Dilemmas Part 2:
              key: プロジェクト - デジタル情報ジレンマ パート2
              name: プロジェクト  デジタル情報ジレンマ パート2
            'Lesson 14: Assessment Day':
              key: 'レッスン14: 評価日'
              name: 評価日
          lesson_groups:
            cspSurvey:
              display_name: アンケート
            csp_unit1_2020:
              display_name: 'ユニット1: デジタル情報'
        csp2-2021:
          lessons:
            Welcome to the Internet:
              key: インターネットへようこそ
              name: インターネットへようこそ
            Building a Network:
              key: ネットワークの構築
              name: ネットワークの構築
            The Need for Addressing:
              key: 対処の必要性
              name: 対処の必要性
            Routers and Redundancy:
              key: ルーターと冗長性
              name: ルーターと冗長性
            Packets:
              key: パケット
              name: パケット
            DNS and HTTP:
              key: DNSとHTTP
            Project - Internet Dilemmas Part 1:
              key: プロジェクト - インターネットのジレンマ パート1
              name: プロジェクト  インターネットのジレンマ パート1
            Project - Internet Dilemmas Part 2:
              key: プロジェクト - インターネットのジレンマ パート2
              name: プロジェクト  インターネットのジレンマ パート2
            'Lesson 9: Assessment Day':
              key: 'レッスン9: 評価日'
              name: 評価日
            lesson-1:
              name: CS原則 のコース後アンケート
          lesson_groups:
            csp_unit2_2020:
              display_name: 'ユニット2: インターネット'
            lessonGroup-2:
              display_name: アンケート
        csp3-2021:
          lessons:
            Introduction to Apps:
              key: アプリの紹介
              name: アプリの紹介
            Project - Designing an App Part 1:
              key: プロジェクト - アプリの設計 パート1
            Project - Designing an App Part 2:
              key: プロジェクト - アプリの設計 パート2
            The Need for Programming Languages:
              key: プログラミング言語の必要性
              name: プログラミング言語の必要性
            Intro to Programming:
              key: プログラミング入門
              name: プログラミング入門
            Debugging:
              key: デバッギング
              name: デバッギング
            Project - Designing an App Part 3:
              key: プロジェクト - アプリの設計 パート3
            Project - Designing an App Part 4:
              key: プロジェクト - アプリの設計 パート4
              name: プロジェクト  アプリの設計 パート4
            Project - Designing an App Part 5:
              key: プロジェクト - アプリの設計 パート5
              name: プロジェクト  アプリの設計 パート5
            'Lesson 11: Assessment Day':
              key: 'レッスン11: 評価日'
              name: 評価日
          lesson_groups:
            csp_unit3_2020:
              display_name: 'ユニット3: アプリ設計入門'
        csp4-2021:
          lessons:
            Variables Explore:
              key: 変数 探索
              name: 変数 探索
            Variables Investigate:
              key: 変数 調査
              name: 変数 調査
            Variables Practice:
              key: 変数 練習
              name: 変数 練習
            Variables Make:
              key: 変数 作成
              name: 変数 作成
            Conditionals Explore:
              key: 条件文 探索
              name: 条件文 探索
            Conditionals Investigate:
              key: 条件文 調査
              name: 条件文 調査
            Conditionals Practice:
              key: 条件文 練習
              name: 条件文 練習
            Conditional Make:
              key: 条件文 作成
              name: 条件文の作成
            Functions Explore / Investigate:
              key: 関数 探索/調査
              name: 関数 探索/調査
            Functions Practice:
              key: 関数 練習
              name: 関数 練習
            Functions Make:
              key: 関数 作成
              name: 関数 作成
            Project - Decision Maker App Part 1:
              key: プロジェクト - 意思決定アプリ パート1
              name: プロジェクト  意思決定アプリ  パート1
            Project - Decision Maker App Part 2:
              key: プロジェクト - 意思決定アプリ パート2
              name: プロジェクト  意思決定アプリ  パート2
            Project - Decision Maker App Part 3:
              key: プロジェクト - 意思決定アプリ パート3
              name: プロジェクト  意思決定アプリ  パート3
            'Lesson 15: Assessment Day':
              key: 'レッスン15: 評価日'
              name: 評価日
          lesson_groups:
            csp_variables:
              display_name: 変数（へんすう）
            csp_conditionals:
              display_name: 条件
            csp_functions:
              display_name: 関数(かんすう)
            csp_project:
              display_name: プロジェクト
        csp5-2021:
          lessons:
            Lists Explore:
              key: リスト 探索
              name: リスト 探索
            Lists Investigate:
              key: リスト 調査
              name: リスト 調査
            Lists Practice:
              key: リスト 練習
              name: リスト 練習
            Lists Make:
              key: リスト 作成
              name: リスト 作成
            Loops Explore:
              key: ループ 探検
              name: ループ 探検
            Loops Investigate:
              key: ループ調査
              name: ループ調査
            Loops Practice:
              key: ループ練習
              name: ループ練習
            Loops Make:
              key: ループの作成
              name: ループの作成
            Traversals Explore:
              key: トラバーサル 探索
              name: トラバーサル 探索
            Traversals Investigate:
              key: トラバーサル 調査
              name: トラバーサル 調査
            Traversals Practice:
              key: トラバーサル 練習
              name: トラバーサル 練習
            Traversals Make:
              key: トラバーサル 作成
              name: トラバーサル 作成
            Semester Hackathon Part 1:
              key: セメスターハッカソン パート1
            Semester Hackathon Part 2:
              key: セメスターハッカソン パート2
            Semester Hackathon Part 3:
              key: セメスターハッカソン パート3
            Semester Hackathon Part 4:
              key: セメスターハッカソン パート4
            Semester Hackathon Part 5:
              key: セメスターハッカソン パート5
            'Lesson 18: Assessment Day':
              key: 'レッスン18: 評価日'
              name: 評価日
          lesson_groups:
            csp_lists:
              display_name: リスト
            csp_loops:
              display_name: くりかえし
            csp_traversals:
              display_name: トラバーサル
            csp_project:
              display_name: プロジェクト
        csp6-2021:
          lessons:
            Algorithms Solve Problems:
              key: アルゴリズムが問題を解決する
              name: アルゴリズムが問題を解決する
            Algorithm Efficiency:
              key: アルゴリズムの効率性
              name: アルゴリズムの効率性
            Unreasonable Time:
              key: 不合理な時間
              name: 不合理な時間
            The Limits of Algorithms:
              key: アルゴリズムの限界
              name: アルゴリズムの限界
            Parallel and Distributed Algorithms:
              key: 並列分散アルゴリズム
              name: 並列分散アルゴリズム
            'Lesson 6: Assessment Day':
              key: 'レッスン6: 評価日'
              name: 評価日
          lesson_groups:
            csp_unit6_2020:
              display_name: 'ユニット6: アルゴリズム'
        csp7-2021:
          lessons:
            Parameters and Return Explore:
              key: パラメータと戻り値 探索
              name: パラメータと戻り値 探索
            Parameters and Return Investigate:
              key: パラメータと戻り値 調査
              name: パラメータと戻り値 調査
            Parameters and Return Practice:
              key: パラメータと戻り値 練習
              name: パラメータと戻り値 練習
            Parameters and Return Make:
              key: パラメータと戻り値 作成
              name: パラメータと戻り値 作成
            Libraries Explore:
              key: ライブラリ 探索
              name: ライブラリ 探索
            Libraries Investigate:
              key: ライブラリ 調査
              name: ライブラリ 調査
            Libraries Practice:
              key: ライブラリ 練習
              name: ライブラリ 練習
            Project - Make a Library Part 1:
              key: プロジェクト - ライブラリの作成 パート1
              name: プロジェクト  ライブラリの作成 パート1
            Project - Make a Library Part 2:
              key: プロジェクト - ライブラリの作成 パート2
              name: プロジェクト  ライブラリの作成 パート2
            Project - Make a Library Part 3:
              key: プロジェクト - ライブラリの作成 パート3
              name: プロジェクト  ライブラリの作成 パート3
            'Lesson 11: Assessment Day':
              key: 'レッスン11: 評価日'
              name: 評価日
          lesson_groups:
            csp_parameters_return_values:
              display_name: パラメータと戻り値
            csp_libraries:
              display_name: ライブラリ
        csp8-2021:
          lessons:
            Create PT - Review the Task:
              key: PTの作成 - タスクの確認
            Create PT - Make a Plan:
              key: PTの作成 - 計画の立案
            Create PT - Complete the Task:
              key: PTの作成 - タスクの完了
              name: PTの作成-タスクの完了（12時間）
        csp9-2021:
          lessons:
            Learning From Data:
              key: データから学ぶ
            Exploring One Column:
              key: 1列の探索
              name: 1列の探索
            Filtering and Cleaning Data:
              key: データのフィルタリングとクリーニング
              name: データのフィルタリングとクリーニング
            Exploring Two Columns:
              key: 2列の探索
              name: 2列の探索
            Big Data, Crowdsourcing, and Machine Learning:
              key: ビッグデータ、クラウドソーシング、機械学習
            Machine Learning and Bias:
              key: 機械学習とバイアス
              name: 機械学習
            Project - Tell a Data Story - Part 1:
              key: プロジェクト - データストーリーを伝える - パート1
            Project - Tell a Data Story - Part 2:
              key: プロジェクト - データストーリーを伝える - パート2
            'Lesson 9: Assessment Day':
              key: 'レッスン9: 評価日'
              name: 評価日
          lesson_groups:
            csp_unit9_2020:
              display_name: 'ユニット9: データ'
        csp10-2021:
          lessons:
            Project - Innovation Simulation Part 1:
              key: プロジェクト - イノベーションシミュレーション パート1
            Project - Innovation Simulation Part 2:
              key: プロジェクト - イノベーションシミュレーション パート2
              name: プロジェクト  イノベーションシミュレーション パート2
            Data Policies and Privacy:
              key: データポリシーとプライバシー
              name: データポリシーとプライバシー
            The Value of Privacy:
              key: プライバシーの価値
              name: プライバシーの価値
            Project - Innovation Simulation Part 3:
              key: プロジェクト - イノベーションシミュレーション パート3
              name: プロジェクト  イノベーションシミュレーション パート3
            Security Risks Part 1:
              key: セキュリティリスク パート1
              name: セキュリティリスク パート1
            Security Risks Part 2:
              key: セキュリティリスク パート2
              name: セキュリティリスク パート2
            'Project: Innovation Simulation Part 4':
              key: 'プロジェクト: イノベーションシミュレーションパート4'
              name: プロジェクト  イノベーションシミュレーション パート4
            Protecting Data Part 1:
              key: データの保護 パート1
              name: データの保護 パート1
            Protecting Data Part 2:
              key: データの保護 パート2
              name: データの保護 パート2
            'Project: Innovation Simulation Part 5':
              key: 'プロジェクト: イノベーションシミュレーションパート5'
              name: プロジェクト  イノベーションシミュレーション パート5
            'Project: Innovation Simulation Part 6':
              key: 'プロジェクト: イノベーションシミュレーションパート6'
              name: プロジェクト  イノベーションシミュレーション パート6
            'Project: Innovation Simulation Part 7':
              key: 'プロジェクト: イノベーションシミュレーションパート7'
              name: プロジェクト  イノベーションシミュレーション パート7
            'Lesson 14: Unit Assessment Day':
              key: 'レッスン14: ユニット評価日'
              name: 評価日
          lesson_groups:
            csp_unit10_2020:
              display_name: 'ユニット10: サイバーセキュリティとグローバルインパクト'
        coursea-2021:
          title: コース A (2021)
          description_short: 低学年向けコンピューター サイエンス入門
          description_audience: 4-7 才
          lessons:
            Safety in My Online Neighborhood:
              key: オンラインネイバーフッドの安全
              name: オンラインネイバーフッドの安全
              description_student: オンラインで安全にいろいろな場所に行く方法を学びます。
            Learn to Drag and Drop:
              key: ドラッグ＆ドロップ
              name: ドラッグ＆ドロップ
              description_student: クリックしてドラッグし、パズルを完成させましょう。
              description_teacher: このレッスンでは、生徒がコンピューターラボに進むときに何が起こるかを理解します。まずはコンピューターラボのマナーを紹介する簡単なディスカッションから始まり、次にコンピューターを使ってオンラインパズルを完成させます。
            'Programming: Happy Maps':
              key: プログラミング：ハッピー マップ
              name: ハッピーマップ
              description_student: フルブが果物にたどり着くための指示を書きましょう。
              description_teacher: このオフラインレッスンは、チームで一緒に「フラブ」を果物にたどり着かせるという単純なタスクに取り組みます。生徒は、指示を示された記号に変換する作業をしながら、正確な指示を書く練習をします。プログラムに問題が発生した場合は、生徒は協力してバグを発見し、ソリューションを構築します。
            Sequencing with Scrat:
              key: スクラッチと学ぶシーケンス
              name: スクラッチと学ぶシーケンス
              description_student: どんぐりにたどり着けるようにスクラッチをプログラムします。
              description_teacher: この**スキル構築**レッスンでは、生徒は鳥を迷路の片側から反対側の豚のいるところまで移動させるためのシーケンスアルゴリズムを開発します。
                これを行うには、線形のシーケンスでコードブロックを積み上げます。
            Programming in Ice Age:
              key: アイスエイジで学ぶプログラミング
              name: スクラッチと学ぶプログラミング
              description_student: スクラッチがどんぐりにたどりつくのを助けるプログラムを書いてください。
              description_teacher: この**スキル構築**レッスンでは、生徒は引き続きシーケンスアルゴリズムを開発します。
            Programming with Rey and BB-8:
              key: レイとBB-8と学ぶプログラミング
              name: レイとBB-8と学ぶプログラミング
              description_student: BB-8がスクラップを集めるのを手伝ってください。
              description_teacher: この**スキル構築**レッスンでは、新しく学んだプログラミングスキルをより複雑な方法で使って、BB-8がトリッキーなコースをナビゲートできるようにします。
            'Loops: Happy Loops':
              key: くりかえし：ハッピー ループ
              name: くりかえし：ハッピー ループ
              description_student: ループを使ってフラブがより大きな問題を解決するのを助けましょう。
              description_teacher: このアクティビティでは、ハッピーマップを再度取り上げます。今回は、生徒は自分のプログラムで大きくてより時間がかかるパズルを解き、長いプログラムを簡単に書くことができる構造の有用性を学びます。
            Loops in Ice Age:
              key: アイス・エイジのループ
              name: スクラッチと学ぶループ
              description_student: ループを使ってスクラッチがより多くの地面をカバーできるようにします。
              description_teacher: この**スキル構築**レッスンでは、リスがドングリに到達するのを助けることを目標とするプログラミングパズルでループを練習します。
            Loops in Collector:
              key: くりかえし あつめる
              name: くりかえし あつめる
              description_student: 冒険家ローレルが地中の宝物を見つけるのを手伝ってあげましょう。
              description_teacher: この**スキル構築**レッスンでは、生徒はループの概念を学び続けます。 ここでは、生徒はループを使用して、洞窟に宝物を集めます。
            Ocean Scene with Loops:
              key: アーティストくりかえし
              name: アーティストくりかえし
              description_student: ループとパターンを使って画像を完成させましょう。
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、ループでパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            'Events: The Big Event':
              key: 'イベント: おおきなイベント'
              name: ビッグイベントジュニア
              description_student: 先生が巨大なリモコンのボタンを押したら、移動して叫びましょう。
              description_teacher: イベントは、事前に作成したアルゴリズムに多様性を加える優れた方法です。プログラムに、ユーザーが希望したタイミングでユーザーの指示に応答してもらいたいことがあります。イベントはそれが行えるようにします。
            Events in Play Lab:
              key: プレイ ラボのイベント
              description_student: 独自のゲームやストーリーを作成しましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってストーリーを作りましょう！
            lesson-1:
              name: コース最後のプロジェクト
              description_student: "「アーティスト」でストーリーを語りましょう！"
              description_teacher: この**プロジェクト**のレッスンでは、アーティストでシーケンスとループについて学んだことを適用します。
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
            lessonGroup-5:
              display_name: コース最後のプロジェクト
          name: コースa -2021
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        courseb-2021:
          description_short: 就学前の児童のためのコンピューター サイエンス入門。コースAと似ていますが、コンセプトが深化しています。
          description_audience: 5-8 才
          lessons:
            Digital Trails:
              key: デジタルトレイル
              name: デジタルトレイル
              description_student: デジタルフットプリントと、ウェブサイトにアクセスするときに安全を確保する方法について学びましょう。
            Move It, Move It:
              key: 動かせ！動かせ！
              name: 動かせ！動かせ！
              description_student: クラスメートがある場所から他の場所へと慎重に歩むようにプログラムしましょう。
              description_teacher: このレッスンは、このコースの過程で取り組むプログラミングの演習に向けて準備するのに役立ちます。小さなチームになって、生徒は身体の動きを使ってクラスメートをプログラムし、目標が達成されるまである場所から他の場所へと慎重に進ませます。
            Sequencing in Maze:
              key: 迷路で学ぶシーケンス
              name: アングリーバードと学ぶシーケンス
              description_student: 赤いアングリーバードがいたずら好きなブタに到達するのを手伝ってあげましょう。
              description_teacher: この**スキル構築**レッスンでは、生徒は鳥を迷路の片側から反対側の豚のいるところまで移動させるためのシーケンスアルゴリズムを開発します。
                これを行うには、線形のシーケンスでコードブロックを積み上げます。
            Programming in Maze:
              key: めいろ のプログラミング
              name: めいろ のプログラミング
              description_student: アングリーバードが迷路を移動するのを助けるためにプログラムを作成しましょう。
              description_teacher: この**スキル構築**レッスンでは、生徒は引き続きシーケンスアルゴリズムを開発します。
            Programming in Harvester:
              key: 農夫と学ぶプログラミング
              name: ファーマーと学ぶプログラミング
              description_student: ファーマーが道に沿って野菜を収穫するのを手伝ってあげましょう。
              description_teacher: 生徒は、学習したプログラミングの概念をファーマーの収穫に適用します。ここでは、キャラクターをゴールに到達させるだけでなく、新しいブロックを使ってトウモロコシを収穫する必要があります。生徒は引き続き順序アルゴリズムスキルを開発し、デバッグプロセスを使い始めます。
            'Loops: Getting Loopy':
              key: 'ループ: ルーピーをゲット'
              name: ルーピーをゲット
              description_student: このレッスンでは、繰り返しループを使用してダンスパーティーを行います。
              description_teacher: 長くて面白いプログラムを書き始めると、プログラムには多くの繰り返しが含まれることがよくあります。このレッスンでは、ループを使って、ダンスで繰り返される動きのパターンを見つけることで、繰り返しの多い指示をより簡単に伝達する方法について学習します。
            Loops in Harvester:
              key: Loops in Harvester
              name: ハーベスターと学ぶループ
              description_student: ループを使って、ファーマーの収穫を手伝ってあげましょう！
              description_teacher: この**スキル構築**のレッスンでは、生徒はファーマーがループを使用して作物を収穫するのを手伝います。
            Loops in Collector:
              key: くりかえし あつめる
              name: くりかえし あつめる
              description_student: "「冒険家ローレル」をプログラムして、洞窟で宝物を集めましょう。"
              description_teacher: この**スキル構築**レッスンでは、引き続きループの概念を学習します。ここでは、冒険家ローレルが、ループを使って洞窟に宝物を収集します。
            Loops in Artist:
              key: アーティストくりかえし
              name: アーティストくりかえし
              description_student: パターンとループを使って画像を完成させましょう。
              description_teacher: この**スキル構築**のレッスンでは、生徒は簡単な一連の指示をループして画像を描くことを学びます。
                ここでは、生徒はループを使用してパターンを作成します。
            The Right App:
              description_student: 自分のスマートフォンアプリをスケッチします。
              description_teacher: このレッスンでは、コンピュータサイエンスが実生活の人々を助けることができることを生徒に認識してもらいます。まず、生徒は、架空のスマートフォンユーザーに自分を重ね、その人のニーズに対応する「適切なアプリ」を見つけるのを手伝います。次に、生徒は共感と創造性を発揮して、もう1人のユーザーのニーズに対応する独自のスマートフォンアプリをスケッチします。
            'Events: The Big Event':
              key: 'イベント: おおきなイベント'
              name: ビッグイベントジュニア
              description_student: 先生が巨大なリモコンのボタンを押したら、移動したり、叫んだりしましょう。
              description_teacher: イベントは、事前に作成したアルゴリズムに多様性を加える優れた方法です。プログラムに、ユーザーが希望したタイミングでユーザーの指示に応答してもらいたいことがあります。イベントはそれが行えるようにします。
            Events in Play Lab:
              key: プレイ ラボのイベント
              description_student: イベントを使って、ストーリーを作成したり、インタラクティブゲームを作成したりしましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
            lesson-1:
              name: コース最後のプロジェクト
              description_student: 自分だけのストーリーやゲームを作りましょう！
              description_teacher: この**プロジェクト**のレッスンでは、プレイラボを使用したオープンエンドプロジェクトでシーケンスとイベントについて学んだことを適用します。
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_impacts:
              display_name: コンピューティングの影響
            csf_events:
              display_name: イベント
            lessonGroup-6:
              display_name: コース最後のプロジェクト
          student_description: 本コースではコンピューター サイエンスとインターネットの安全性の基礎を学びます。コースの最後に、共有できる独自のゲームやストーリーを作成します。
        coursec-2021:
          description_short: コンピューター サイエンスの基礎を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description_audience: '年齢: 6～10才'
          lessons:
            Putting a STOP to Online Meanness:
              key: ネットの迷惑行為を防止する
              name: ネットの迷惑行為を防止する
              description_student: このレッスンでは、意地悪な行為と、それをネット上で目撃した場合の対処方法について学習します。
            Password Power-Up:
              key: パスワードの強化
              name: パスワードの強化
            'Programming: My Robotic Friends':
              key: 'プログラミング: ロボティック フレンド'
              name: 私のロボットの友だち
              description_student: このレッスンでは、クラスメートをロボットのように扱い、積み重ねたカップのパターンを構築するようにプログラムします。
              description_teacher: コードの代わりに一連の記号を使って、さまざまなパターンでカップを積み重ねるように「ロボット」に指示するアルゴリズムを設計します。生徒は交代でロボットとして参加し、仲間が定義したアルゴリズムにのみ応答します。このセグメントでは、シンボルとアクションの間のつながり、アルゴリズムとプログラムの違い、およびデバッグの貴重なスキルを学習します。
            Programming in Maze:
              key: めいろ のプログラミング
              name: めいろ のプログラミング
              description_student: アングリーバードでシーケンスとアルゴリズムについて学びましょう。
              description_teacher: アングリーバードゲームのキャラクターを使って、生徒はトリを迷路の片側から反対側のブタに移動させる一連のアルゴリズムを開発します。これを行うために、コードブロックを線形のシーケンスで積み上げ、トリをまっすぐ移動、左折、または右折させます。
            Debugging in Maze:
              key: 迷路で学ぶデバッグ
              name: 迷路で学ぶデバッグ
              description_student: パズルで問題を見つけ、デバッグスキルを練習しましょう。
              description_teacher: デバッグはプログラミングの学習に不可欠な要素です。このレッスンでは、誤って解かれたパズルに取り組みます。ループが不正確だったり、ブロックが欠落していたり、ブロックが余分だったり、ブロックが機能しないなどのエラーを特定するには、既存のプログラムを順に検証する必要があります。
            Programming in Collector:
              key: コレクターで学ぶプログラミング
              name: ローレルと行う宝物の収集
              description_student: 冒険家ローレルがたくさんの宝石を集めるのに役立つアルゴリズムを書いてあげましょう！
              description_teacher: この**スキル構築**レッスンでは、生徒は引き続きアルゴリズムとデバッグについての理解を深めていきます。_冒険家ローレル_という新しいキャラクターを使って、生徒はシーケンスアルゴリズムを作成して、_ローレル_が道を歩いているときに宝物を手に入れられるようにします。
            Programming in Artist:
              key: アーティストと学ぶプログラミング
              name: プログラムでアートを作成
              description_student: "「アーティスト」をプログラミングして美しい画像を作成しましょう。"
              description_teacher: このレッスンでは、生徒がアーティストを制御して、画面上で絵を完成させます。このアーティストステージでは、「100ピクセルずつ前進」や「90度右に回転」などの新しいブロックを使って、より複雑な画像を作成していきます。
            Binary Bracelets:
              key: バイナリ ブレスレット
              name: バイナリ ブレスレット
              description_student: 自分だけのバイナリブレスレットを作成し、コンピュータがどのように情報を記憶するかを学びましょう！
              description_teacher: バイナリはコンピュータの世界では非常に重要です。今日のコンピュータの大半は、あらゆる種類の情報をバイナリ形式で格納しています。このレッスンは、実際の生活から何かを取り出し、それをどのようにしたら一連のオンとオフに変換できるかを示します。
            'Loops: My Loopy Robotic Friends':
              key: 'ループ: ルーピー ロボティック フレンド'
              name: ルーピー ロボティック フレンズ ジュニア
              description_student: このレッスンでは、クラスメートを再度プログラムしますが、ループを使用すると、より大きく複雑な問題を解決できます。
              description_teacher: 最初の「ロボットのお友だち」アクティビティを踏み台にして、生徒はより大きく複雑なデザインに取り組みます。「ロボット」をプログラムしてこのような大きなデザインを完成させるには、ループで置き換えることができる命令の繰り返しのパターンを見極める必要があります。
            Loops with Rey and BB-8:
              key: レイとBB-8と学ぶループ
              name: レイとBB-8と学ぶループ
              description_student: ループを使ってBB-8が迷路を通り抜けるのを助けてあげましょう！
              description_teacher: "「ルーピーをゲット」の指示をここでも繰り返すというコンセプトに基づいて、このステージではループを使って、BB-8が以前よりも効率的に迷路を通過できるようにします。"
            Loops in Harvester:
              key: Loops in Harvester
              name: ループで作物を収穫する
              description_student: ループを使ってファーマーが野菜を収穫するのを助けてあげましょう！
              description_teacher: この**スキル構築**レッスンでは、ハーベスターが大きく成長している複数の野菜を収獲するのに役立つ新しいアクションをくり返します。
            Looking Ahead:
              key: 先を見る
              name: マインクラフトで先を見る
              description_student: 溶岩を避けて！ここでは、マインクラフトの世界で条件文について学習し始めます。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            Sticker Art with Loops:
              key: アーティストくりかえし
              description_student: このレッスンでは、ループを使用すると、アーティストでさらにクールな画像を簡単に作成できます。
            'Events: The Big Event':
              key: 'イベント: おおきなイベント'
              name: ビッグイベント
              description_student: 楽しいゲームをプレイして、イベントについて学びましょう。
              description_teacher: 生徒はこれから、事前に記述されたアルゴリズムに柔軟性をもたらす優れた方法であるイベントについて学びます。時に、ユーザーが望んだその時にプログラムがユーザーに応答してもらいたいことがあります。イベントは、プログラムをより面白くインタラクティブにすることができます。
            Build a Flappy Game:
              key: フラッピーゲームを構築する
              name: フラッピーゲームを構築する
              description_student: 自分で好きなようにフラッピーバードゲームを作って、友だちと共有しましょう！
              description_teacher: この特別なステージでは、イベントハンドラーを使ってマウスクリックとオブジェクトの衝突を検出することにより、生徒は独自のフラッピーバードゲームを作成します。レベルの最後に、生徒はビジュアルやルールを変更してゲームをカスタマイズできます。
            Events in Play Lab:
              key: プレイ ラボのイベント
              description_student: プレイラボでクリエイティブになってゲームを作りましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
            Picturing Data:
              key: データで予測
              name: データで予測
              description_student: データは、生徒が自分の世界を理解し、興味深い質問に答えるのに役立ちます。このレッスンでは、生徒はプレイラボプロジェクトからデータを収集し、さまざまな種類のグラフを使って視覚化します。
              description_teacher: データは、生徒が自分の世界を理解し、興味深い質問に答えるのに役立ちます。このレッスンでは、生徒はプレイラボプロジェクトからデータを収集し、さまざまな種類のグラフを使って視覚化します。
            'End of Course Project: Create a Play Lab Game':
              name: コース最後のプロジェクト
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
              description_teacher: このキャップストーンレッスンでは、生徒が自分のプレイラボプロジェクトを設計、開発、展示するプロセスを紹介します。このプロセスを円滑に進めるために、紙で計画を立てることからウェブサイトでプログラミングするまで段階的な構造を示し、生徒がそれに従って作業できるようにします。さらに、先生がフィナーレを飾るのに役立つアイデアを提供します！
          lesson_groups:
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_sequencing:
              display_name: シークエンス
            csf_binary:
              display_name: ２しんすう
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
            csf_data:
              display_name: データ
            end_of_course_project:
              display_name: コース最後のプロジェクト
          name: コースc -2021
          student_description: シーケンス、ループ、イベントを含むプログラムを作成します。イニシャルをバイナリに変換し、さまざまな問題解決手法を調査し、ネット上のいじめに対処する方法を学びます。コースの最後に、独自のゲームやストーリーを作成して共有しましょう！
        coursed-2021:
          title: コース D (2021)
          description_short: 条件文について学び、独自のアート、ゲーム、さらにはダンスパーティーを作成しましょう。
          description_audience: '年齢: 7～11才'
          lessons:
            'Algorithms: Graph Paper Programming':
              key: 'アルゴリズム: グラフ用紙プログラミング'
              name: グラフ用紙のプログラミング
              description_student: このレッスンでは、クラスメートが絵を描くようにプログラムします。
              description_teacher: プログラミングでお互いに絵を描くことによって、生徒はプログラミングのコアコンセプトを楽しく、理解しやすい方法で経験する機会があります。クラスは、生徒にシンボルを使って、お互いにグラフ用紙上の正方形に色付けして目の前の画像を再現するように指示するところから始まります。もし時間があれば、生徒が自分で画像を作成してレッスンを締めくくってもいいでしょう。
            Introduction to Online Puzzles:
              key: オンラインパズル入門
              name: オンラインパズル入門
              description_student: このレッスンでは、このコースに必要なスキルを練習できます。
              description_teacher: この**スキル構築**レッスンでは、生徒は迷路パズルで_シーケンス_とデバッグのスキルを練習します。
            Relay Programming:
              key: プログラミングをリレーする
              name: プログラミングをリレーする
              description_student: コースの最初にプログラムで絵を描いことを覚えていますか？このレッスンでは、チームと協力してこれとよく似た作業を行います。
              description_teacher: この**コンテキスト設定**は、デバッグと粘り強さについての短いレッスンから始まります。その後すぐに、生徒はチームに分かれ、一度に1つの命令を受けて一緒にプログラムを作成する時間との戦いに入ります。
            Debugging in Collector:
              key: コレクターでのデバッグ
              name: ローレルと学ぶデバッグ
              description_student: プログラミング中に問題が発生したことはありませんか？このレッスンでは、デバッグの秘密について学びます。デバッグは、プログラム内の問題を見つけて修正するプロセスです。
              description_teacher: このオンラインアクティビティでは、「コレクター」環境でデバッグを練習します。生徒は、プログラムを読んだり編集したりする練習をして、簡単なアルゴリズム、ループ、入れ子のループでパズルを修正します。
            Events in Bounce:
              key: バウンスで学ぶイベント
              name: バウンスで学ぶイベント
              description_student: 学校でビデオゲームをプレイできたらと夢見たことはありませんか？このレッスンでは、ゲームを自作できます！
              description_teacher: この**コンテキスト設定**/**スキル構築**レッスンでは、生徒はイベントとは何か、コンピュータがビデオゲームなどのプログラムでイベントをどのように使用するかを学びます。生徒は、さまざまな速度と音でカスタマイズできるゲームを作成します。
            Build a Star Wars Game:
              key: スター・ウォーズゲームを構築する
              name: スター・ウォーズゲームを構築する
              description_student: このレッスンで独自のスター・ウォーズゲームを構築しながら、フォースを感じてください。
              description_teacher: このレッスンでは、イベントを使ってオンラインで共有できるゲームを作成する練習をします。 R2-D2や他のスター・ウォーズのキャラクターが登場し、イベントの案内を一通り受けてから、スペースが与えられて独自のゲームを作成します。
            Dance Party:
              key: ダンスパーティー
              name: ダンスパーティー
              description_student: お祝いの時間です！このレッスンでは、独自のインタラクティブなダンスパーティーをプログラムします。
              description_teacher: このレッスンでは、生徒が自分のインタラクティブなダンスパーティーをプログラムします。ツールは音楽に応答するように構築されているため、このアクティビティにはサウンドが必要です。
            Loops in Ice Age:
              key: アイス・エイジのループ
              name: アイス・エイジのループ
              description_student: このレッスンでは、繰り返しブロックを使って、スクラッチがドングリにできるだけ効率的に到達できるようにします。
              description_teacher: ループを使用することの簡単なおさらい (または紹介) として、このステージでは、「繰り返し」ブロックを使ってスクラッチをドングリに効率的に到達させます。
            Loops in Artist:
              key: アーティストくりかえし
              name: アーティストくりかえし
              description_student: このレッスンでは、ループを使って、アーティストでクールな画像を簡単に作成できます。
              description_teacher: このレッスンは以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティはデバッグ演習を兼ねており、問題解決をさらに実践できます。
            Nested Loops in Bee:
              key: みつばちでの入れ子のループ
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、入れ子のループを作成するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Conditionals with Cards:
              key: カードと条件
              name: カードと条件
              description_student: 特定の条件下でのみポイントを獲得するゲームをプレイしましょう！
            Conditionals in Bee:
              key: みつばちと学ぶ条件文
              name: みつばちと学ぶIf/Else
              description_student: 条件文を理解したところで、ハチミツとミツを収集するときに条件文を使うようにみつばちをプログラムしましょう。
              description_teacher: ここまで、生徒は実行するたびにまったく同じ操作を実行するプログラムを作成してきました。これは信頼性は高くても、柔軟性があまりありません。このレッスンでは、クラスで条件文を使ったプログラミングを開始し、プログラムが遭遇した特定の条件に応じて対応を異にするプログラムを作成します。
            While Loops in Farmer:
              key: ファーマーの「while」ループ
              name: ファーマーの「while」ループ
              description_student: ループはプログラミングで非常に役立ちます。このレッスンでは、新しい種類のループ、whileループについて説明します！
              description_teacher: この**スキル構築**のレッスンでは、生徒はファーマーで穴を埋めて土を掘る作業を行いますが、穴のサイズや土の山の高さはわかりません。これらのパズルを解くために、新しい種類のループを使用することになります。
            Until Loops in Maze:
              key: 迷路で学ぶUntilループ
              name: 迷路で学ぶUntilループ
              description_student: "「until」ループを使用すると、驚くべきことができます！"
              description_teacher: このレッスンでは、「until」ループについて学習します。生徒は、主人公が停止する目的の地点に「到達する」までアクションを繰り返すプログラムを作成します。
            Conditionals & Loops in Harvester:
              key: 農夫と学ぶ条件文とループ
              description_student: 各条件文をいつ使用するかが常に明確であるとは限りません。このレッスンは、何をすべきかを決める練習をするのに役立ちます。
              description_teacher: 生徒は「while」ループ、「until」ループ、および「if/else」文を練習します。これらのブロックはすべて条件文を使用します。
                3つすべてを練習することで、生徒は複雑で柔軟なプログラムを書く方法を学びます。
            'Unplugged: Binary':
              key: 'アンプラグド: バイナリ'
              name: バイナリ画像
              description_student: 2つのオプションのみで、言語を使ってコンピューターが画像をどのように保存するかを学びましょう。
              description_teacher: 多くの人はバイナリを厳密に0と1と考えていますが、ここでは情報をさまざまなバイナリオプションで表すことができるという考え方を学びます。さらにこのレッスンではこの考え方を一歩進めて、コンピューターがさらに複雑な情報
                (画像や色など) をバイナリでどう格納するのかも示します。
            Artist Binary:
              key: アーティスト：バイナリ
              description_student: このレッスンでは、0と1のみを使って画像を作成する方法を学びます。
              description_teacher: この一連のオンラインレッスンでは、生徒はオンとオフを使って画像を作成する方法を学びます。
            Be A Super Digital Citizen:
              key: スーパーデジタルシティズンになる
              description_student: ネットいじめを見たときに、立派な態度がとれる方法を学びます。
            End of Course Project:
              key: コース最後のプロジェクト
              name: コース最後のプロジェクト
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
              description_teacher: この**プロジェクト**レッスンでは、新しいプロジェクトの設計、開発、披露のプロセスを生徒に説明します。
            lesson-6:
              name: マインクラフトで先を見る
              description_student: 溶岩を避けて！ここでは、マインクラフトの世界で条件文について学習し始めます。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            lesson-5:
              name: パスワードの強化
              description_student: このレッスンでは、パスワードがどのように情報を保護するか、また適切なパスワードはどのように作成したらよいかについて学習します。
            lesson-1:
              name: 言葉の力
              description_student: いじめは決して許されません。このレッスンでは、オンラインで何を言ってよいか、何を言ってはいけないかについて説明します。
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_events:
              display_name: イベント
            csf_loops:
              display_name: くりかえし
            csf_conditionals:
              display_name: 条件
            csf_binary:
              display_name: ２しんすう
            csf_digcit:
              display_name: デジタル シティズンシップ
            end_of_course_project:
              display_name: コース最後のプロジェクト
            lessonGroup-6:
              display_name: デジタル シティズンシップ
          name: コースd -2021
        coursee-2021:
          description_audience: '年齢: 8～12才'
          lessons:
            Sequencing in the Maze:
              key: 迷路で学ぶシーケンス
              name: 迷路で学ぶシーケンス
              description_student: このレッスンでは、独自のプログラムを作成する方法を学びます。
              description_teacher: "このパズルのセットでは、生徒はCode.orgのオンラインワークスペースの紹介 (またはクラスの経験に応じて復習)
                から始めます。 「実行」、「リセット」、「手順」ボタンなど、ワークスペースの基本的な機能を紹介するビデオがあります。ビデオでは、Blocklyブロックのドラッグ、Blocklyブロックの削除、Blocklyブロックの接続についても説明しています。次に、生徒は迷路で_シーケンス_と_デバッグ_スキルを練習します。そこから、_ループ_の基本を学んだら、コレクター、アーティスト、農夫などの新しいタイプのパズルに進みます。\\\rデバッグはプログラミングの学習に不可欠な要素です。生徒は誤って解かれたパズルに取り組みます。ループが不正確だったり、ブロックが欠落していたり、ブロックが余分だったり、ブロックが機能しないなどのエラーを特定するには、既存のプログラムを順に検証する必要があります。"
            Programming and Loops with the Artist:
              key: アーティストと学ぶプログラミングとループ
              name: ループを使った描画
              description_student: このレッスンでは、ループを使用して、アーティストでさらにクールな画像を簡単に作成します。
              description_teacher: 生徒がいくつかのブロックとデジタルステッカーを使って独自の素晴らしいデザインを作成すると、表情がパッと明るくなるのが見て取れます！このレッスンは、以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティは、ポートフォリオやPTA会議向け作品を作成するのに最適です。
            'Conditionals in Minecraft: Voyage Aquatic':
              key: 'マインクラフトの条件文: ボヤージュ アクアティック'
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
              description_student: ここでは、マインクラフトの世界で条件文について学習します。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            Conditionals:
              key: 条件
              name: ファーマーと学ぶ条件文
              description_student: ファーマーが作物を植えるために畑を耕すのを手伝って、条件についてもっと学びましょう！
              description_teacher: この**スキル構築**レッスンでは、作物を植えるために畑を準備する必要があるファーマーを中心に、新しいタイプのプログラミングパズルに焦点を当てています。
            Simon Says:
              key: サイモンは言う
              name: Follow the Algorithm
              description_student: ゲームをプレイして、正しい結果を得るために必要なコマンドについて考えます。
              description_teacher: このレッスンでは、ゲームをプレイして、正しい結果を出すためにどのようにコマンドを与えたらいいかを生徒に考えてもらいます。これにより、今後のレッスンで、学んだことをスプライトラボに簡単に引き継ぐことができます。
            Learning Sprites with Sprite Lab:
              key: スプライトラボで学ぶスプライト
              name: スプライトラボで泳ぐ魚
              description_student: スプライトを作成および編集する方法を学びます。
              description_teacher: このレッスンでは、スプライトラボの中心となる2つの概念、スプライトとビヘイビアについて学びます。スプライトは、生徒が移動、変更、操作できる画面上のキャラクターまたはオブジェクトです。ビヘイビアは、スプライトが停止するまで継続的に実行するアクションです。
            Alien Dance Party with Sprite Lab:
              key: スプライトラボでのエイリアンダンスパーティー
              name: スプライトラボでのエイリアンダンスパーティー
              description_student: クラスメートと共有できるインタラクティブなプロジェクトを作成しましょう。
              description_teacher: このレッスンでは、生徒がインタラクティブなアニメーションやゲームを作成できるプラットフォームであるスプライトラボを取り上げます。ビヘイビアに加えて、今日はユーザー入力をイベントとして組み込んで、「エイリアンダンスパーティー」を作成します。
            Private and Personal Information:
              description_student: インターネットは楽しくて刺激的ですが、安全を確保することも重要です。このレッスンでは、安全に共有できる情報と非公開の情報の違いを学びます。
            About Me:
              key: 私について
              name: スプライトラボについて
              description_student: スプライトラボでインタラクティブなポスターを作成することにより、生徒は個人情報やプライベート情報をウェブ上で共有することについて理解したことを応用します。
            Digital Sharing:
              key: デジタル共有
              name: デジタル共有
              description_student: このレッスンでは、所有権と著作権の課題と利点について学びます。
              description_teacher: この**探索**レッスンでは、特にインターネット環境で 所有権と著作権を尊重することの課題と利点について学びます。
            Nested Loops in Bee:
              key: みつばちでの入れ子のループ
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、ループを別のループ内に配置するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Nested Loops in Artist:
              key: アーティストと学ぶ入れ子のループ
              name: 入れ子のループを使った奇抜な形状
              description_student: 入れ子のループについてさらに学習します！今回は、入れ子のループを使って素晴らしい絵を描きます。
              description_teacher: この**スキル構築**レッスンでは、アーティストを使用して複雑なデザインを作成します。レッスンの最後で、生徒は独自のデザインを作成します。
            Nested Loops in Frozen:
              key: フローズンで学ぶ入れ子のループ
              description_student: アナとエルサは優れたアイススケートスキルを持っていますが、氷のパターンを作成するにはあなたの助けが必要です。入れ子のループを使って、何かすごくいかしたものを作成しましょう。
            'Functions: Songwriting':
              key: '関数: 作曲'
              name: 作詞作曲
              description_student: ロックスターでさえプログラミングのスキルが必要です。このレッスンでは、曲の歌詞を用いた関数について学習します。
              description_teacher: コンピュータサイエンスの世界で最も素晴らしい構造の1つは関数です。関数 (プロシージャと呼ばれることもあります)
                は、大きなプログラムの中で繰り返し使用できるミニプログラムです。このレッスンでは、まとまったコードを関数に合わせることがなぜ役立つのかを生徒が直感的に理解するのに役立ちます。
            Functions in Minecraft:
              key: マインクラフトで学ぶ関数
              name: マインクラフトで学ぶ関数
              description_student: 最も効率的なプログラムで関数を使用するにはどうしたらいいか、考えられますか？
              description_teacher: 生徒たちは、この楽しくインタラクティブなマインクラフトアドベンチャーで関数がどのように役立つかを学習します！
            Functions in Harvester:
              key: 農夫と学ぶ関数
              name: ファーマーと学ぶ関数
              description_student: ファーマーの収穫を手伝う際、関数が大きな手助けをしてくれます。
              description_teacher: この**スキル構築**レッスンでは、生徒は_ハーベスター_で作物を収穫するための関数を備えた条件文を使用します。
            Functions in Artist:
              key: アーティストと学ぶ関数
              name: アーティストと学ぶ関数
              description_student: 関数で複雑な図面をより簡単に作成！
              description_teacher: 生徒は、アーティストで関数の使い方を学び、壮大な画像を作成および変更します。より複雑なパターンについては、関数を別の関数の中から呼び出すことにより、入れ子の関数について学びます。
            Designing for Accessibility:
              key: アクセシビリティのための設計
              name: アクセシビリティのための設計
              description_student: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
              description_teacher: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
            End of Course Project:
              key: コース最後のプロジェクト
              name: コース最後のプロジェクト
              description_student: 大きなプロジェクトには時間と綿密な計画が必要です。あなたのインスピレーションを見つけ、計画を立て、創造性を解き放ちましょう！
              description_teacher: 次の4つのレッスンでは、生徒はプログラミングスキルをキャップストーンプロジェクトで使用する機会があります。このプロジェクトでは、個人がプログラミングの経験を積み、仲間や家族と共有する見本を作成することができます。レッスンは複数回または数週週にわたって体験してもらうことを意図しています。その中で、ブレーンストーミングの探求、設計プロセスの学習、最終的な作品の構築および発表を行います。探求ステージでは、生徒はアーティストとプレイラボで事前に作成されたプロジェクトの例でプレイして、インスピレーションを得ることができます。次に、生徒は設計プロセスと、それを自分のプロジェクトに実装する方法について学びます。その後、アーティスト、スプライトラボ、または使い慣れたその他のインターフェイスで独自のプロジェクトを作成するためのスペースが与えられます
                (これはおそらくプロジェクトで最長のステージです)。最後に、生徒は完成した作品を仲間に発表することができます。
            lesson-4:
              name: スーパーデジタルシティズンになる
              description_student: ネットいじめを見たときに、立派な態度がとれる方法を学びます。
            lesson-1:
              name: アクセシビリティのための設計
              description_student: '架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。 '
              description_teacher: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
          lesson_groups:
            ramp_up:
              display_name: 入れ子のループ
            csf_sprites:
              display_name: スプライト
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_nested_loops:
              display_name: 条件
            csf_functions:
              display_name: 関数(かんすう)
            csf_impacts:
              display_name: コンピューティングの影響
            end_of_course_project:
              display_name: コース最後のプロジェクト
            lessonGroup-7:
              display_name: コンピューティングの影響
          name: コースe -2021
        coursef-2021:
          title: コース F (2021)
          description_short: コンピューター サイエンス入門のすべての概念を学び、独自のアート、ストーリー、ゲームを作成しましょう。
          description_audience: '年齢: 9～13才'
          lessons:
            Functions in Minecraft:
              key: マインクラフトで学ぶ関数
              name: マインクラフトで学ぶ関数
              description_student: 最も効率的なプログラムで関数を使用するにはどうしたらいいか、考えられますか？
              description_teacher: 生徒たちは、この楽しくインタラクティブなマインクラフトアドベンチャーで関数がどのように役立つかを学習します！
            Learning Sprites with Sprite Lab:
              key: スプライトラボで学ぶスプライト
              name: スプライトラボで泳ぐ魚
              description_student: スプライトを作成および編集する方法を学びます。
              description_teacher: このレッスンでは、スプライトラボの中心となる2つの概念、スプライトとビヘイビアについて学びます。スプライトは、生徒が移動、変更、操作できる画面上のキャラクターまたはオブジェクトです。ビヘイビアは、スプライトが停止するまで継続的に実行するアクションです。
            Events with Sprite Lab:
              name: スプライトラボでのエイリアンダンスパーティー
              description_student: クラスメートと共有できるインタラクティブなプロジェクトを作成しましょう。
              description_teacher: このレッスンでは、生徒がインタラクティブなアニメーションやゲームを作成できるプラットフォームであるスプライトラボを取り上げます。ビヘイビアに加えて、今日はユーザー入力をイベントとして組み込んで、「エイリアンダンスパーティー」を作成します。
            Loops with the Artist:
              key: アーティストで学ぶループ
              name: ループを使った描画
              description_student: このレッスンでは、ループを使用して、アーティストでさらにクールな画像を簡単に作成します。
              description_teacher: この**スキル構築**レッスンは、焦点をブライトラボからアーティストに移します。これは、生徒がコースの残りの部分で探索する新しいツールとなります。
            Nested Loops in the Maze:
              key: 迷路で学ぶ入れ子のループ
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、ループを別のループ内に配置するとどうなるかを学びます。
              description_teacher: この**スキル構築**レッスンでは、ループのわずかな変更がプログラムにどのような影響を与えるかを理解するように生徒に促します。
            The Power of Words:
              key: 言葉の力
              name: 言葉の力
              description_student: いじめは決して許されません。このレッスンでは、オンラインで何を言ってよいか、何を言ってはいけないかについて説明します。
            Envelope Variables:
              key: エンベロープ変数
              name: エンベロープ変数
              description_student: エンベロープと変数には共通点があり、どちらも貴重なものを保持できます。ここでは、変数とは何か、変数が行える素晴らしいことを学びます。
              description_teacher: 変数は、数値や単語などの値のプレースホルダーとして使用します。変数を使用すると、プログラミングの自由度が大幅に向上します。フレーズを何度も入力したり、あいまいな数値を覚えたりすることなく、コンピューター
                サイエンティストは変数を使ってそのようなフレーズや数値を参照できます。このレッスンでは、変数とは何か、どのような方法で変数を用いられるかについて説明します。変数の概念は簡単に理解できる概念ではないため、レッスンの最後に十分な時間をとって話し合うことをお勧めします。
            Variables as Constant in Artist:
              key: アーティストと学ぶ定数としての変数
              name: アーティストと学ぶ変数
              description_student: クラスに創造性の風を吹き込むことを忘れないでください！ここで取り組むパズルでは、変数を使って素晴らしい絵を作成します。
              description_teacher: このレッスンでは、アーティスト環境の変数を使って、反復的なデザインの作成について学びます。実行時に値が変化しない場合でも、変数を使ってプログラムを簡単に記述し、読みやすくする方法を学習します。
            Variables that Change in Bee:
              key: みつばちと学ぶ変化する変数
              name: みつばちと学ぶ変数の変更
              description_student: このみつばちは変数が大好きです！
              description_teacher: このレッスンでは、プログラムの実行中に値を変更できるようにすることで、変数でプログラムを強化する方法を説明します。
            Variables that Change in Artist:
              key: アーティストと学ぶ変化する変数
              description_student: このレッスンでは、プログラムを実行する際に変化する変数を使って絵を描きます。
              description_teacher: この**スキル構築**レッスンでは、アーティスト環境の変数を使って、反復的なデザインを行う方法ついて学びます。生徒は、変数をどう使うと、プログラムをど簡単に記述し、読みやすくできるかを学びます。ガイド付きパズルを行った後、生徒はじゆうあそびレベルで終了します。そこで学んだことを示し、独自のデザインを作成します。
            Simulating Experiments:
              key: 実験のシミュレーション
              name: 実験のシミュレーション
              description_student: コンピュータでシミュレーションを実行し、変数を変更して実験しましょう。
              description_teacher: 生徒はスプライトラボで簡単なシミュレーションを実行することにより、コンピューティングをどのように使うと傾向やパターンを特定するデータを収集できるかを体験します。シミュレーションを複数回実行した後、生徒はシミュレーションで変数を変更すると結果にどのように影響するかについて予測し、その仮説をテストする機会があります。
            AI for Oceans:
              key: 海洋のためのAI
              name: 海洋のためのAI
              description_student: 物体を「魚」または「魚ではない」のいずれかに分類して、海からゴミを取り除くことに挑戦します。次に、トレーニングデータセットを拡張して、水中にいる他の海の生き物も含めます。アクティビティの2番目のセクションでは、ランダムに生成された魚の画像に適用する独自のラベルを選びます。このトレーニングデータは機械学習モデルに使用され、これにより、新しい画像に独自のラベルがつけられます。
              description_teacher: この**探索**のレッスンでは、生徒は魚やその他の物体を分類して、機械学習モデルをトレーニングします。
            Internet:
              key: インターネット
              name: インターネット
              description_student: 情報がインターネット上をどのように移動するのか疑問に思ったことはありませんか？魔法を使っているわけではありません！このレッスンでは、インターネットの仕組みの基本を学びます。
              description_teacher: 多くの人が毎日インターネットを使っていますが、それがどのように機能するかを知っている人はあまりいません。このレッスンでは、接続、URL、IPアドレス、DNSについて学びながら、インターネットの流れを疑似体験します。
            For Loop Fun:
              key: Forループを楽しむ
              name: Forループを楽しむ
              description_student: "「for」ループを楽しく学習しましょう！"
              description_teacher: この**スキル構築**レッスンでは、生徒は強力な新しい構造のループを使用します。
            For Loops in Bee:
              key: みつばちと学ぶループ
              name: みつばちと学ぶForループ
              description_student: ブンブンブン。このパズルでは、「for」ループを使ってみつばちをミツとハチミツに導きます。
              description_teacher: この**スキル構築**レッスンでは、「for」ループと増分変数を使って、より複雑なパズルを解くことに焦点を当てています。
            For Loops in Artist:
              key: アーティストと学ぶループ
              name: アーティストと学ぶForループ
              description_student: 次の傑作を作る準備をしてください。ここでは、「for」ループを使って、驚くような画像を作成します。
              description_teacher: このレッスンでは、生徒は「for」ループの練習を続けますが、今回はアーティストと一緒に行います。生生徒はパズルを完成させて、複雑なデザインとユニークなアートを作成します。
            Editing Behaviors:
              key: ビヘイビアの編集
              name: スプライトラボで学ぶビヘイビア
              description_student: 独自のスプライトのビヘイビアをプログラムする方法を学びましょう！
              description_teacher: ここでは、生徒はスプライトラボを使って、独自のカスタマイズされたビヘイビアを作成します。
            Virtual Pet:
              key: バーチャルペット
              name: " バーチャルペット"
              description_student: このレッスンでは、生徒は希望どおりの外観と動作をするインタラクティブなバーチャルペットを作成します。生徒は、スプライトラボの「コスチューム」ツールを使って、ペットの外観をカスタマイズします。その後、学習したイベント、ビヘイビア、その他の概念を使って、ペットに命を吹き込みます。
              description_teacher: このレッスンでは、生徒は希望どおりの外観と動作をするインタラクティブなバーチャルペットを作成します。生徒は、スプライトラボの「コスチューム」ツールを使って、ペットの外観をカスタマイズします。その後、学習したイベント、ビヘイビア、その他の概念を使って、ペットに命を吹き込みます。
            End of Course Project:
              key: コース最後のプロジェクト
              name: コース最後のプロジェクト
              description_student: 大きなプロジェクトには時間と綿密な計画が必要です。あなたのインスピレーションを見つけ、計画を立て、創造性を解き放ちましょう！
              description_teacher: この**プロジェクト**レッスンでは、新しいプロジェクトの設計、開発、披露のプロセスを生徒に説明します。
            lesson-1:
              name: アクセシビリティのための設計
              description_student: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
              description_teacher: このレッスンでは、生徒は架空のアプリのアクセシビリティソリューションをブレインストーミングおよび設計することで、アクセシビリティと共感の価値について学びます。
            lesson-6:
              name: スプライトラボの紹介
              description_student: アプリやツールでどのような使用方法が選択肢としてユーザーに与えられているのか、ということに焦点を当てて、生活におけるコンピュータやテクノロジーの役割について説明します。
            lesson-7:
              name: スプライトを作る
              description_teacher: この**スキル構築**レッスンでは、生徒はコンピュータで一連のプログラミングレベルを実行し、最後に、好きなものを構築できる自由形式の「じゆうあそび」タスクを完了します。
                生徒はプログラムを作成し、スプライトラボの中心となる2つの概念、スプライトと行動について学びます。
            lesson-8:
              name: 実行中のスプライト
              description_student: プログラミングの各レベルをこなしてから、最後に自由形式の「じゆうあそび」タスクを行います。このタスクでは、好きなものを作れます。
              description_teacher: この**スキル構築**レッスンでは、生徒はコンピュータで一連のプログラミングレベルを実行し、最後に、好きなものを構築できる自由形式の「じゆうあそび」タスクを完了します。
                生徒は、時限式イベントとユーザー入力に応答するプログラムを作成します。
            lesson-9:
              name: ブランクスペースストーリー
              description_student: このアクティビティでは、コンピュータがユーザーが入力したものをどのように取得して保存するか理解するため、ブランクを埋めるストーリー（Mad
                Libs®と同様）を使用して、後でそれをプログラムで実行します。
              description_teacher: この**コンテキスト設定**レッスンでは、コンピュータがユーザーが入力したものをどのように取得して保存するか理解するためのコンテキストとして、ブランクを埋めるストーリー（Mad
                Libs®と同様）を使用して、後でそれをプログラムで実行します。
            lesson-10:
              name: テキストとプロンプト
              description_student: このレッスンでは、スプライトラボで変数を使って練習します。
              description_teacher: この**スキル構築**レッスンでは、スプライトラボで変数を使った実践を行います。
            lesson-5:
              name: 大流行
              description_student: モンスタータウンにウイルスが広がっています！ ウイルスシミュレーターを作成し、モンスターが健康を取り戻す手助けをする方法を学びます。
              description_teacher: このレッスンでは、イベントに関する**スキル構築**と**ミニプロジェクト**を組み合わせて、スプライトラボで独自のコンピュータシミュレーションを作成します。生徒にシミュレーションをじっくり調べてもらい、ウイルスがどれだけ早く広がるか、スピードを弱めるには何ができるかを理解してもらいます。
            lesson-2:
              name: 言葉の力
              description_student: いじめは決して許されません。このレッスンでは、オンラインで何を言ってよいか、何を言ってはいけないかについて説明します。
            lesson-11:
              name: ミニプロジェクト：ユーザーインプットプログラム
              description_student: 変数を使用した新しいスキルを、3つのオープンエンドプロジェクトの1つに適用します。
              description_teacher: 生徒は、変数を使用して新しいスキルを3つのオープンエンドの**ミニプロジェクト**の1つに適用します。サンプルプログラムを探索して、自分のプロジェクトの計画を作成し、それをゼロからプログラムします。
          lesson_groups:
            ramp_up:
              display_name: スプライト
            csf_digcit:
              display_name: デジタル シティズンシップ
            csf_variables:
              display_name: ループ用
            csf_for_loops:
              display_name: ループ用
            csf_sprites:
              display_name: コンピューティングの影響
            end_of_course_project:
              display_name: コース最後のプロジェクト
            lessonGroup-8:
              display_name: 変数（へんすう）
            lessonGroup-9:
              display_name: へらす
            lessonGroup-7:
              display_name: デジタル シティズンシップ
          name: コースf -2021
        express-2021:
          description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
          description_short: コンピューター サイエンス入門。小学校の中高学年向けコースの良い所をとりだしました。
          description_audience: '年齢: 9～18才'
          lessons:
            Dance Party:
              key: ダンスパーティー
              name: ダンスパーティー
              description_student: このレッスンでは、生徒が自分のインタラクティブなダンスパーティーをプログラムします。ツールは音楽に応答するように構築されているため、このアクティビティにはサウンドが必要です。
              description_teacher: このレッスンでは、生徒が自分のインタラクティブなダンスパーティーをプログラムします。ツールは音楽に応答するように構築されているため、このアクティビティにはサウンドが必要です。
            Programming with Angry Birds:
              key: めいろ のプログラミング
              name: めいろ のプログラミング
              description_student: アングリーバードでシーケンスとアルゴリズムについて学びましょう。
              description_teacher: アングリーバードゲームのキャラクターを使って、生徒はトリを迷路の片側から反対側のブタに移動させる一連のアルゴリズムを開発します。これを行うために、コードブロックを線形のシーケンスで積み上げ、トリをまっすぐ移動、左折、または右折させます。
            Debugging with Scrat:
              key: スクラットと学ぶデバッグ
              name: 迷路で学ぶデバッグ
              description_student: パズルで問題を見つけ、デバッグスキルを練習しましょう。
              description_teacher: デバッグはプログラミングの学習に不可欠な要素です。このレッスンでは、誤って解かれたパズルに取り組みます。ループが不正確だったり、ブロックが欠落していたり、ブロックが余分だったり、ブロックが機能しないなどのエラーを特定するには、既存のプログラムを順に検証する必要があります。
            Collecting Treasure with Laurel:
              key: ローレルと行う宝物の収集
              name: ローレルと行う宝物の収集
            Creating Art with Code:
              key: プログラムでアートを作成
              name: プログラムでアートを作成
              description_student: "「アーティスト」をプログラミングして美しい画像を作成しましょう。"
              description_teacher: このレッスンでは、生徒がアーティストを制御して、画面上で絵を完成させます。このアーティストステージでは、「100ピクセルずつ前進」や「90度右に回転」などの新しいブロックを使って、より複雑な画像を作成していきます。
            Loops with Rey and BB-8:
              key: レイとBB-8と学ぶループ
              name: レイとBB-8と学ぶループ
              description_student: ループを使ってBB-8が迷路を通り抜けるのを助けてあげましょう！
            Sticker Art with Loops:
              key: アーティストくりかえし
              description_student: このレッスンでは、ループを使用すると、アーティストでさらにクールな画像を簡単に作成できます。
              description_teacher: 生徒がいくつかのブロックとデジタルステッカーを使って独自の素晴らしいデザインを作成すると、表情がパッと明るくなるのが見て取れます！このレッスンは、以前のレッスンのループの理解に基づいて構築されており、生徒に真にクリエイティブになる機会を提供します。このアクティビティは、ポートフォリオやPTA会議向け作品を作成するのに最適です。
            Nested Loops in Maze:
              key: 迷路で学ぶ入れ子のループ
              name: 迷路で学ぶ入れ子のループ
              description_student: ループ内のループ内のループ。これはどういう意味でしょうか？このレッスンでは、入れ子のループを作成するとどうなるかを学びます。
              description_teacher: このオンラインアクティビティでは、ループの理解をまったく新しいレベルに引き上げる機会があります。みつばちや植物対ゾンビで遊んで、生徒はループを別のループの内側に記述する方法を学びます。また、どちらかのループにわずかな変更を加えただけでも、[実行]
                をクリックしたときにプログラムにどのような影響を与えるかを把握できるようにします。
            Snowflakes with Anna and Elsa:
              key: スノーフレークとアナとエルサ
              name: スノーフレークとアナとエルサ
              description_student: アナとエルサは優れたアイススケートスキルを持っていますが、氷のパターンを作成するにはあなたの助けが必要です。入れ子のループを使って、何かすごくいかしたものを作成しましょう。
              description_teacher: 生徒はループを重ねる方法を理解したので、非常に多くの美しいものを作成できます。このレッスンでは、生徒は一連の演習を行い、アナとエルサの優れたアイススケートスキルを使って、ポートフォリオに対応した独自のイメージを作成できるようにします。
            'Looking Ahead with Minecraft ':
              key: マインクラフトで先を見る
              name: マインクラフトで先を見る
              description_student: 溶岩を避けて！ここでは、マインクラフトの世界で条件文について学習し始めます。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            If/Else with Bee:
              key: みつばちと学ぶIf/Else
              name: みつばちと学ぶIf/Else
              description_student: 条件文を理解したところで、ハチミツとミツを収集するときに条件文を使うようにみつばちをプログラムしましょう。
              description_teacher: ここまで、生徒は実行するたびにまったく同じ操作を実行するプログラムを作成してきました。これは信頼性は高くても、柔軟性があまりありません。このレッスンでは、クラスで条件文を使ったプログラミングを開始し、プログラムが遭遇した特定の条件に応じて対応を異にするプログラムを作成します。
            While Loops with the Farmer:
              key: 農夫と学ぶWhileループ
              name: ファーマーの「while」ループ
              description_student: ループはプログラミングで非常に役立ちます。このレッスンでは、新しい種類のループ、whileループについて説明します！
              description_teacher: この**スキル構築**のレッスンでは、生徒はファーマーで穴を埋めて土を掘る作業を行いますが、穴のサイズや土の山の高さはわかりません。これらのパズルを解くために、新しい種類のループを使用することになります。
            'Conditionals in Minecraft: Voyage Aquatic':
              key: 'マインクラフトの条件文: ボヤージュ アクアティック'
              name: 'マインクラフトの条件文: ボヤージュ アクアティック'
              description_student: ここでは、マインクラフトの世界で条件文について学習します。
              description_teacher: このレッスンは、マインクラフトチームの協力の下、Hour of Codeのために作成されたものです。生徒は、これまでに学習したアイデアを実践する機会を得て、条件文に触れることができます。
            Until Loops in Maze:
              key: 迷路で学ぶUntilループ
              name: 迷路で学ぶUntilループ
              description_student: "「until」ループを使用すると、驚くべきことができます！"
              description_teacher: このレッスンでは、「until」ループについて学習します。生徒は、主人公が停止する目的の地点に「到達する」までアクションを繰り返すプログラムを作成します。
            Harvesting with Conditionals:
              key: 条件文を用いる収獲
              name: 条件文を用いる収獲
              description_student: 各条件文をいつ使用するかが常に明確であるとは限りません。このレッスンは、何をすべきかを決める練習をするのに役立ちます。
              description_teacher: 生徒は「while」ループ、「until」ループ、および「if/else」文を練習します。これらのブロックはすべて条件文を使用します。
                3つすべてを練習することで、生徒は複雑で柔軟なプログラムを書く方法を学びます。
            Functions in Minecraft:
              key: マインクラフトで学ぶ関数
              name: マインクラフトで学ぶ関数
              description_student: 最も効率的なプログラムで関数を使用するにはどうしたらいいか、考えられますか？
              description_teacher: 生徒たちは、この楽しくインタラクティブなマインクラフトアドベンチャーで関数がどのように役立つかを学習します！
            Functions with Harvester:
              key: ファーマーと学ぶ関数
              name: ファーマーと学ぶ関数
              description_student: ファーマーの収穫を手伝う際、関数が大きな手助けをしてくれます。
              description_teacher: 生徒は、アーティストで印象的なデザインを作成し、ミツバチのゲームで迷路をナビゲートすることを練習しましたが、今日は、ファーマーのゲームで作物を収穫するための関数を用います。このレッスンでは、関数を「while」ループと「if/else」文と組み合わせることで、関数の新しい使用法を学びます。
            Functions with Artist:
              key: アーティストと学ぶ関数
              name: アーティストと学ぶ関数
              description_student: 関数で複雑な図面をより簡単に作成！
              description_teacher: 生徒は、アーティストで関数の使い方を学び、壮大な画像を作成および変更します。より複雑なパターンについては、関数を別の関数の中から呼び出すことにより、入れ子の関数について学びます。
            Variables with Artist:
              key: アーティストと学ぶ変数
              description_student: このレッスンでは、プログラムを実行する際に変化する変数を使って絵を描きます。
              description_teacher: この**スキル構築**レッスンでは、アーティスト環境の変数を使って、反復的なデザインを行う方法ついて学びます。生徒は、変数をどう使うと、プログラムをど簡単に記述し、読みやすくできるかを学びます。ガイド付きパズルを行った後、生徒はじゆうあそびレベルで終了します。そこで学んだことを示し、独自のデザインを作成します。
            Changing Variables with Bee:
              key: みつばちと学ぶ変数の変更
              name: みつばちと学ぶ変数の変更
              description_student: このみつばちは変数が大好きです！
              description_teacher: このレッスンでは、プログラムの実行中に値を変更できるようにすることで、変数でプログラムを強化する方法を説明します。
            Changing Variables with Artist:
              key: アーティストと学ぶ変数の変更
              name: アーティストと学ぶ変数の変更
              description_student: このレッスンでは、プログラムを実行する際に変化する変数を使って絵を描きます。
            For Loops with Bee:
              key: みつばちと学ぶForループ
              name: みつばちと学ぶForループ
              description_student: ブンブンブン。このパズルでは、「for」ループを使ってみつばちをミツとハチミツに導きます。
              description_teacher: この**スキル構築**レッスンでは、「for」ループと増分変数を使って、より複雑なパズルを解くことに焦点を当てています。
            For Loops with Artist:
              key: アーティストと学ぶForループ
              name: アーティストと学ぶForループ
              description_student: 次の傑作を作る準備をしてください。ここでは、「for」ループを使って、驚くような画像を作成します。
              description_teacher: このレッスンでは、生徒は「for」ループの練習を続けますが、今回はアーティストと一緒に行います。生生徒はパズルを完成させて、複雑なデザインとユニークなアートを作成します。
            Swimming Fish in Sprite Lab:
              key: スプライトラボで泳ぐ魚
              name: スプライトラボで泳ぐ魚
              description_student: スプライトを作成および編集する方法を学びます。
              description_teacher: このレッスンでは、スプライトラボの中心となる2つの概念、スプライトとビヘイビアについて学びます。スプライトは、生徒が移動、変更、操作できる画面上のキャラクターまたはオブジェクトです。ビヘイビアは、スプライトが停止するまで継続的に実行するアクションです。
            Alien Dance Party:
              key: エイリアンダンスパーティー
              name: エイリアンダンスパーティー
              description_student: クラスメートと共有できるインタラクティブなプロジェクトを作成しましょう。
              description_teacher: このレッスンでは、生徒がインタラクティブなアニメーションやゲームを作成できるプラットフォームであるスプライトラボを取り上げます。ビヘイビアに加えて、今日はユーザー入力をイベントとして組み込んで、「エイリアンダンスパーティー」を作成します。
            Behaviors in Sprite Lab:
              key: スプライトラボで学ぶビヘイビア
              name: スプライトラボで学ぶビヘイビア
              description_student: 独自のスプライトのビヘイビアをプログラムする方法を学びましょう！
              description_teacher: ここでは、生徒はスプライトラボを使って、独自のカスタマイズされたビヘイビアを作成します。
            Virtual Pet with Sprite Lab:
              key: スプライトラボでのバーチャルペット
              name: スプライトラボでのバーチャルペット
              description_student: このレッスンでは、生徒は希望どおりの外観と動作をするインタラクティブなバーチャルペットを作成します。生徒は、スプライトラボの「コスチューム」ツールを使って、ペットの外観をカスタマイズします。その後、学習したイベント、ビヘイビア、その他の概念を使って、ペットに命を吹き込みます。
              description_teacher: このレッスンでは、生徒は希望どおりの外観と動作をするインタラクティブなバーチャルペットを作成します。生徒は、スプライトラボの「コスチューム」ツールを使って、ペットの外観をカスタマイズします。その後、学習したイベント、ビヘイビア、その他の概念を使って、ペットに命を吹き込みます。
            End of Course Project:
              key: コース最後のプロジェクト
              name: コース最後のプロジェクト
              description_student: プログラミングをたくさん行う準備をしましょう！プロジェクトの構築を開始する時が来ました。
              description_teacher: この**プロジェクト**レッスンでは、新しいプロジェクトの設計、開発、披露のプロセスを生徒に説明します。
            lesson-1:
              name: ダンスパーティー
              description_student: お祝いの時間です！このレッスンでは、独自のインタラクティブなダンスパーティーをプログラムします。
              description_teacher: このレッスンでは、生徒が自分のインタラクティブなダンスパーティーをプログラムします。ツールは音楽に応答するように構築されているため、このアクティビティにはサウンドが必要です。
            lesson-2:
              name: スプライトを作る
              description_student: このレッスンでは、プログラムを作成し、スプライトと行動について学習します。
              description_teacher: この**スキル構築**レッスンでは、生徒はコンピュータで一連のプログラミングレベルを実行し、最後に、好きなものを構築できる自由形式の「じゆうあそび」タスクを完了します。
                生徒はプログラムを作成し、スプライトラボの中心となる2つの概念、スプライトと行動について学びます。
            lesson-3:
              name: 実行中のスプライト
              description_student: プログラミングの各レベルをこなしてから、最後に自由形式の「じゆうあそび」タスクを行います。このタスクでは、好きなものを作れます。
              description_teacher: この**スキル構築**レッスンでは、生徒はコンピュータで一連のプログラミングレベルを実行し、最後に、好きなものを構築できる自由形式の「じゆうあそび」タスクを完了します。
                生徒は、時限式イベントとユーザー入力に応答するプログラムを作成します。
            lesson-4:
              name: テキストとプロンプト
              description_student: このレッスンでは、スプライトラボで変数を使って練習します。
              description_teacher: この**スキル構築**レッスンでは、スプライトラボで変数を使った実践を行います。
          lesson_groups:
            csf_warmup:
              display_name: ウォームアップ
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_conditionals:
              display_name: 条件
            csf_functions:
              display_name: 関数(かんすう)
            csf_variables:
              display_name: 変数（へんすう）
            csf_for_loops:
              display_name: ループ用
            csf_sprites:
              display_name: スプライト
            end_of_course_project:
              display_name: コース最後のプロジェクト
            lessonGroup-9:
              display_name: イベント
          student_description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター
            プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
        pre-express-2021:
          description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
          description_short: 低学年向けのコンピュータ サイエンス入門です。幼児向けと小学1年生向けコースの良い所をとりだしました。
          description_audience: '年齢: 4～8才'
          lessons:
            Learn to Drag and Drop:
              key: ドラッグ＆ドロップ
              name: ドラッグ＆ドロップ
              description_student: クリックしてドラッグし、パズルを完成させましょう。
              description_teacher: このレッスンでは、生徒がコンピューターラボに進むときに何が起こるかを理解します。まずはコンピューターラボのマナーを紹介する簡単なディスカッションから始まり、次にコンピューターを使ってオンラインパズルを完成させます。
            Sequencing with Scrat:
              key: スクラッチと学ぶシーケンス
              name: スクラッチと学ぶシーケンス
              description_student: どんぐりにたどり着けるようにスクラッチをプログラムします。
              description_teacher: この**スキル構築**レッスンでは、生徒は鳥を迷路の片側から反対側の豚のいるところまで移動させるためのシーケンスアルゴリズムを開発します。
                これを行うには、線形のシーケンスでコードブロックを積み上げます。
            Programming in with Angry Birds:
              name: めいろ のプログラミング
              description_teacher: この**スキル構築**レッスンでは、生徒は引き続きシーケンスアルゴリズムを開発します。
            Programming with Rey and BB-8:
              key: レイとBB-8と学ぶプログラミング
              name: レイとBB-8と学ぶプログラミング
              description_teacher: このレッスンでは、新しく学んだプログラミングスキルをより複雑な方法で使って、BB-8がトリッキーなコースをナビゲートできるようにします。
            Programming in Harvester:
              key: 農夫と学ぶプログラミング
              name: ファーマーと学ぶプログラミング
              description_student: ファーマーが道に沿って野菜を収穫するのを手伝ってあげましょう。
              description_teacher: この**スキル構築**レッスンでは、生徒は、学習したプログラミングの概念をハーベスターの環境に適用します。生徒は引き続きシーケンスアルゴリズムスキルを展開し、デバッグプロセスを使い始めます。
            Loops with Scrat:
              key: スクラッチと学ぶループ
              name: スクラッチと学ぶループ
              description_student: ループを使ってスクラッチがより多くの地面をカバーできるようにします。
              description_teacher: この**スキル構築**レッスンでは、リスがドングリのところに着くのを助けることを目指して、パズルのプログラミングにおけるループの概念を実践に移します。
            Loops with Laurel:
              key: くりかえし あつめる
              name: くりかえし あつめる
              description_teacher: このレッスンでは、引き続きループの概念を学習します。ここでは、冒険者のローレルが、ループを使って洞窟で宝物を収集します。ローレルの旅を助けるために、新しい「宝物を手に入れる」
                (get treasure) ブロックを導入しました。
            Ocean Scene with Loops:
              key: アーティストくりかえし
              name: アーティストくりかえし
              description_student: ループとパターンを使って画像を完成させましょう。
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、ループでパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            Drawing Gardens with Loops:
              key: アーティストくりかえし
              name: アーティストくりかえし
              description_student: パターンとループを使って画像を完成させましょう。
              description_teacher: ループに戻って、生徒は一連の簡単な指示をループすることで画像を描く方法を学びます。前のオンラインレッスンでは、ループを使って迷路を進み、宝物を収集しました。ここでは、生徒はループを使ってパターンを作成します。この段階の最後に、生徒はループを使って自分の画像を作成する機会があります。
            On the Move with Events:
              key: プレイ ラボのイベント
              name: プレイ ラボのイベント
              description_student: 独自のゲームやストーリーを作成しましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってストーリーを作りましょう！
            A Royal Battle with Events:
              key: プレイ ラボのイベント
              name: プレイ ラボのイベント
              description_student: イベントを使って、ストーリーを作成したり、インタラクティブゲームを作成したりしましょう。
              description_teacher: このオンラインアクティビティでは、生徒はプレイラボでイベントを使用する方法を学び、学習したすべてのプログラミングスキルを適用してアニメーションゲームを作成します。プレイラボでクリエイティブになってゲームを作りましょう！
          lesson_groups:
            csf_sequencing:
              display_name: シークエンス
            csf_loops:
              display_name: くりかえし
            csf_events:
              display_name: イベント
          student_description: 自分のペースで以下のレッスンを試して、コンピューター サイエンスを学びましょう。そしてコンピューター
            プログラムの作成方法、問題解決スキルの開発方法、楽しい課題への取り組み方を学びましょう。ゲームやクリエイティブプロジェクトを手がけて、友人、家族、先生と共有しましょう。
        csf-2021-pilot:
          lessons:
            Learning Sprites with Sprite Lab:
              name: スプライトラボで泳ぐ魚
            Course F Introduction:
              name: スプライトラボの紹介
            Making Sprites:
              name: スプライトを作る
            Sprites in Action:
              name: 実行中のスプライト
            blank space stories:
              name: ブランクスペースストーリー
            texts-and-prompts:
              name: テキストとプロンプト
            introducing-spritelab:
              name: スプライトラボの紹介
            blank-space-stories:
              name: ブランクスペースストーリー
            user-input-programs:
              name: ミニプロジェクト：ユーザーインプットプログラム
          lesson_groups:
            ramp_up:
              display_name: はじめに
            introduction:
              display_name: スプライトラボ 入門
            lessonGroup-3:
              display_name: 変数（へんすう）
            Sprites:
              display_name: スプライト
            variables:
              display_name: 変数（へんすう）
        csd4-preview-2021:
          description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
          description_short: ユーザーのニーズを満たすプログラムを設計する方法を学びましょう。
          lessons:
            Analysis of Design:
              key: デザインの分析
              name: デザインの分析
              description_student: このクラスでは、さまざまなティーポットのデザインを探り、デザインの選択と作成、それにその理由を考えます。ティーポットを例として使って、クラスはユーザー間の関係、ユーザーのニーズ、およびユーザーが使用するオブジェクトのデザインを探ります。
              description_teacher: グループで問題を解決し、他のユーザーのための製品を開発することに取り組むユニットを始めるに当たり、生徒はさまざまなティーポットのデザインを調査することから取りかかります。生徒は各ティーポットを分析し、特定のユーザーのニーズがその設計にどのように影響を与えているかをつかみます。設計をどうするかについて考え、各ティーポットを潜在的なユーザーのニーズに合わせようと試みて、製品
                (物理的およびデジタルの両方) の設計にユーザー中心のアプローチをとるで製品の有用さと使いやすさがどのように向上するかを見ていきます。アクティビティの終わりに、いずれかのティーポットをより便利に、または使いやすくするようにティーポットに変更提案を行うように生徒に求めます。
            Understanding Your User:
              key: ユーザーを理解する
              name: ユーザーを理解する
              description_student: このクラスでは、ユーザープロファイルを使って、さまざまなユーザーが各種製品にどのように反応するかを探ります。クラスのメンバーはそれぞれ違う人としてロールプレイングし、他者の目を通してデザインを体験します。
              description_teacher: "設計者は、有用な製品を作成するためにユーザーのニーズを理解する必要があります。このレッスンでは、ユーザープロファイルを使って他者としてロールプレイングし、そのユーザーとして一連の製品を使って確かめることによって、他者のためにデザインするにはどうしたらよいかを考えるように生徒を促します。各生徒には、あるユーザープロファイルが割り当てられ、そこにはその個人の情報が記載されています。そのユーザープロファイルを使って、適切な製品を選択し、製品設計をレビューし、設計をどう改善したらよいかを提案します。\\\r"
            User-Centered Design Micro Activity:
              key: ユーザー中心のデザインマイクロアクティビティ
              name: ユーザー中心のデザインマイクロアクティビティ
              description_student: 少人数のグループになり、設計プロセスを使って、スマートな服のアイデアを考え出します。ブレーンストーミングからユーザーの特定、最終的な設計の提案まで、このレッスンはこのユニットで他者のニーズに合わせたソリューションの設計を行う最初の機会になります。
              description_teacher: このレッスンでは、ユニット全体で生徒が目にすることになる設計プロセスの簡略版を見ていきます。生徒はまず、スマートな服の潜在的なユーザーを念頭にブレインストーミングします。クラスとしてアイデアを幅広いカテゴリにグループ化し、各グループはユーザーのカテゴリを1つ選択します。グループはこのプロセスを繰り返して、ユーザーのニーズや懸念をブレインストーミングし、最終的にニーズを分類して、重点的に取り組む対象を選択します。最後に、生徒は、意思決定を促すためにブレインストーミングして導き出された特定のニーズと懸念を使って、スマートな服を設計します。クラスの終わりに、生徒は意思決定プロセスをすばやく共有し、選択したユーザーのニーズに製品がどれだけうまく対応しているかについてフィードバックを受け取ります。
            User Interfaces:
              key: ユーザーインターフェイス
              name: ユーザーインターフェイス
              description_student: プログラムを書く前に、紙のプロトタイプを使ってソフトウェアをどのようにテストしてフィードバックを受け取るかを確認します。デベロッパーのアイデア出しを手伝うために、クラスは紙で作られたアプリのプロトタイプをテストして意見を出します。
              description_teacher: ミニデザインプロジェクトに続いて、生徒はデザインの次のフェーズ、つまりユーザーのニーズに対応する製品のプロトタイプを作成することに目を向けます。チームで、生徒は「Txt
                Ur Grndkdz」と呼ばれるチャットアプリの紙のプロトタイプを調べます。生徒は、コンピューターを使う前に、この紙のプロトタイプを使うことで、アイデアと仮定をすばやくテストする方法を確認できます。提供されたプロトタイプを「使用」した後、生徒は次のイテレーションを改善する方法をつかんでいきます。
            Feedback and Testing:
              key: フィードバックとテスト
              name: フィードバックとテスト
              description_student: ユーザーはアプリをテストしており、デベロッパーに伝えたいフィードバックが数多くあります。クラスは、このフィードバックをすべて整理し、共通のテーマとニーズを特定し、プロトタイプを修正し始めて、ユーザーのニーズによりよく適合するようにする必要があります。
              description_teacher: このレッスンでは、生徒は前のレッスンの紙のプロトタイプを作成したアプリの「ユーザー」からのフィードバックを使って、その紙のプロトタイプのユーザーインターフェイスの改善を行います。このレッスンは、設計者がテクノロジーを使って人のニーズをユーザーインターフェイスまたはエクスペリエンスに変える必要があるということを考えるところから始まります。その後、生徒は前のレッスンで扱ったアプリのユーザーから一連のフィードバックとリクエストを受け取ります。生徒はグループになってフィードバックを分類し、アプリのインターフェイスをどのように変更するとフィードバックで寄せられたニーズを満たすことができるかを探ります。次に、生徒はグループで、特定したニーズの1つを満たせるように、この変更の一部を実装します。
            Identifying User Needs:
              key: ユーザーのニーズの特定
              name: ユーザーのニーズの特定
              description_student: ここまで、クラスが検討したユーザーはすべてリモートで、ユーザーから得られた情報はすべてテキストまたはロールプレイを通じて得られました。これで、クラスはお互い潜在的なユーザーとしてフィードバックを出し合い、ペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることができます。
              description_teacher: ここまで、生徒はある程度離れたユーザーのための設計に集中してきました。ブレーンストーミング、プロファイル、テキストによるフィードバックなど、エンドユーザーとの接点は直接的なものではありませんでした。これは、ユーザーについて考えるときに自分の考えから一歩抜け出るのを助けるために設けられた距離ですが、実際のユーザーから直接情報を取得するには、クラスメートに頼る必要があります。このレッスンでは、生徒はペアになってお互いにユーザー
                (および設計者) になるので、誰でもエンドユーザーに直接インタビューし、質問をしてより詳しい情報に基づいた設計が行えます。生徒はペアになってお互いにインタビューを行い、ニーズを特定してアプリの開発につなげることを試みます。
            Project - Paper Prototype:
              key: プロジェクト - 紙のプロトタイプ
              name: プロジェクト - 紙のプロトタイプ
              description_student: 前のレッスンのインタビュー情報を使って、クラスはユーザーのニーズに対処するためのアプリのアイデアを思いつきます。そのアイデアを表現し、それが効果的であることをテストするために、各自で紙のプロトタイプを作成してテストします。
              description_teacher: 前のレッスンのピアインタビューに基づいて、各生徒はユーザーの問題に対処するアプリのアイデアを思いつきます。次に、生徒は個々のノートカードに「画面」を描くことにより、考えたアプリの紙のプロトタイプを作成します。プロジェクトガイドが、アプリの作成やテストを含むプロセスを通じて手引きになります。ユーザーとテストすることで、作成したユーザーインターフェイスに関する想定が正確だったかを確認できます。
            Designing Apps for Good:
              key: 優れたアプリの設計
              name: 優れたアプリの設計
              description_student: アプリの設計プロジェクトを開始するに当たってクラスをチームに編成され、アプリのトピックについて詳しく見ていきます。社会に影響を与えるアプリ例をいくつか示すことで、プロジェクトに取り組むインスピレーションが得られます。
              description_teacher: ユニットの最後まで続けていくアプリ設計プロジェクトを開始するに当たり、生徒は先ず、他の生徒が社会に影響を与えようと設計したアプリを見ていきます。次に、クラスは、問題解決プロセスの定義、準備、試行、反映の各手順をレビューしながら、社会的な影響力を持つ独自のアプリのアイデアを練ります。最後に、生徒はプロジェクトチームを編成し、アプリの開発過程全体を通じてチームでどのように作業を進めるかについて話をまとめます。
            Market Research:
              key: 市場調査
              name: 市場調査
              description_student: 似たようなユーザーに役立つ可能性のある既存のアプリを探索して、アプリ開発に飛び込みましょう。各グループは、取り組んでいる同じトピックに対処するアプリをいくつか特定し、それらのアプリを使って、追求するアプリのアイデアを洗練させていきます。
              description_teacher: このレッスンでは、生徒は、ユーザーのニーズをよりよく理解するために、作成しようとしているアプリと同じ様なアプリを調査します。生徒はチーム内で他のアプリをインターネットで検索し、興味深いアプリを評価します。レッスンが終わる頃までに、各チームは作成したいアプリのタイプについてより明確なアイデアを持ち、ターゲットユーザーが誰であるかをさらに絞り込みるようになっていることでしょう。各チームは、調査したすべてのアプリの引用リストを用意します。これは、最終的なプレゼンテーションで使います。
            Paper Prototypes:
              key: 紙のプロトタイプ
              name: 紙のプロトタイプ
              description_student: 紙のプロトタイプを使うと、多くの時間をかけてプログラムを書く前に、デベロッパーはアイデアをすばやくテストできます。このレッスンでは、チームはアプリラボで作成されたサンプルアプリをいくつか見て、それらのアプリを使って得た情報に基づき、アプリの最初のプロトタイプを紙で作成します。
              description_teacher: "アプリを設計し始める前に、生徒が期待事項の範囲を決められるようにする必要があります。生徒は最終的にアプリラボでアプリのプロトタイプを作成するため、持っているアイデアがアプリラボで簡単にプロトタイプが作成できる種類のアプリと一致すれば、作業しやすくなります。チームは、アプリラボで作成できるアプリのデモとして設計されたサンプルアプリを調べて、範囲の決定を開始します。その後、チームは1つ
                (または複数) のアプリを自分のアプリのベースとして選択します。そして時間をとってアプリの基本的な機能について話し合ってから、3x5のインデックスカードを使って紙のプロトタイプを作成します。\\\r"
            Prototype Testing:
              key: " プロトタイプテスト"
              name: " プロトタイプテスト"
              description_student: このレッスンでは、チームはクラスの他のメンバーと一緒に紙のプロトタイプをテストします。1人の生徒がコンピューターを演じ、1人がナレーションを行い、残りのメンバーは観察することで、チームはアプリのデザインに関するフィードバックをすぐに受け取れ、アプリのプロトタイプの次のバージョンを作成する際の参考にできます。
              description_teacher: 紙のプロトタイプを作成する主な目的は、プログラムを作成する前に、テストとイテレーションを素早く行えるようにすることにあります。このレッスンのポイントは、アプリラボに移る前にチームにプロトタイプをテストする機会を与えることにあります。チームは、アプリをユーザーとテストする計画を立ててから、クラス内
                (場合によってはクラス外) の他の複数の生徒にプロトタイプをテストしてもらいます。ユーザーがプロトタイプをテストできるように、生徒はテストでの役割
                (「ナレーター」、「コンピューター」、および「オブザーバー」) を割り当て、さらにいくつかの質問を用意してテスト完了後にユーザーに回答してもらいます。
            Digital Design:
              key: デジタルデザイン
              name: デジタルデザイン
              description_student: 紙のプロトタイプの開発、テスト、フィードバックが完了したチームは、アプリラボに移動して、アプリの次のイテレーションを構築します。ドラッグ・アンド・ドロップの設計モードを使って、各チームメンバーはチームのアプリの少なくとも1ページ分を作成し、前回のテストラウンドで受け取ったフィードバックに応えます。
              description_teacher: 紙のプロトタイプのアプリを共同で開発した後、グループは手分けして、紙のプロトタイプに基づいてインタラクティブなデジタルバージョンの作成に向けて作業し始めます。アプリラボのドラッグ・アンド・ドロップ設計モードを使って、生徒は作業しながらスキル開発レベルの段階をステップアップし、紙のプロトタイプからデジタルバージョンを構築する方法を学びます。そこから、各グループメンバーはアプリラボでアプリの少なくとも1ページ分を作成し、後で結合して1つのアプリにします。
            Linking Screens:
              key: 画面のリンク
              name: 画面のリンク
              description_student: 前のレッスンでクラスが設計した画面を基に、チームは画面を1つのアプリに統合します。単純なプログラムを追加して、ボタンをクリックすると適切な画面に切り替わるようにすることもできます。
              description_teacher: このレッスンでは、チームは前のレッスンで設計した画面を1つのアプリに結合し、プログラムを使ってそれらをリンクできます。生徒は、前のレッスンで開始したモデルアプリを組み上げることで、イベント駆動型の基本的なプログラミングを学びます。生徒が昨日設計した画面に加えて、追加の画面を作成する方法や、他の人が作成した画面をインポートする方法についても学びます。
            Testing the App:
              key: アプリのテスト
              name: アプリのテスト
              description_student: チームは、今度はインタラクティブなプロトタイプを使って、別のユーザーテストを実行します。この一連のテストから収集したフィードバックは、アプリのプロトタイプの最終反復に反映させます。
              description_teacher: 前のレッスンの終わりまでに、各チームはアプリの実行可能な最小限のプロトタイプが出来ているはずです。このレッスンの主な目的は、チームが実際に他の人と一緒にアプリをテストすることにあります。他の人はできればアプリの対象となる対象ユーザーから、またはクラスの異なるチームから選びます。チームのオブザーバーはテスト結果を計画段階で使用したワークシートに記録します。紙のプロトタイプをテストしたときと同様に、チームは、テストを実行して観察する前に、特定のシナリオを計画することから始めます。
            Improving and Iterating:
              key: 改善とイテレーション
              name: 改善とイテレーション
              description_student: テストの最終ラウンドで受け取ったフィードバックを使って、チームはユーザーのニーズに対応する変更を実装します。各チームは、追加したい機能と修正が必要なバグを追跡して、優先順位を付けます。
              description_teacher: チームはこの時点で、複数のイテレーションとユーザーテストのラウンドを経たアプリのプロトタイプを開発しています。最後のユーザーテストで得られた情報とガイダンスを活用して、各生徒はチームアプリの改善を計画して実装する機会を得ます。使える時間と生徒の興味に応じて、テストとイテレーションのサイクルを必要な回数だけ実行してもいいでしょう。
            Project - App Presentation:
              key: プロジェクト - アプリのプレゼンテーション
              name: プロジェクト - アプリのプレゼンテーション
              description_student: 各チームは、開発したアプリを「売り込む」ためのプレゼンテーションを準備します。ここで、どの点に苦労したか、何が上手くいったか、そして将来の計画を皆に披露します。
              description_teacher: この時点までに、チームは個人的および社会的に重要なトピックを調査し、紙のプロトタイプとデジタルプロトタイプの両方を開発およびテストし、最初のアプリのイテレーションを複数作成して新しい機能とバグ修正を組み込んだことでしょう。ここでは、何をしたかを振り返り、一貫したプレゼンテーションをまとめて、開発プロセスを披露します。チームは、指定されたプレゼンテーションテンプレートを使って、アプリ開発のプロセスについてプレゼンテーションを行う準備をします。プレゼンテーションには、解決しようとした問題、テストからのフィードバックを組み込んだ方法、および将来の計画などを話してもいいでしょう。
            Post-Project Test:
              key: プロジェクト後のテスト
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              key: CS発見 コース後アンケート
              name: CS発見 コース後アンケート
          lesson_groups:
            csd4_1:
              display_name: 第 1 章：ユーザーを中心にしたデザイン
            csd4_2:
              display_name: 第 2 章：アプリのプロトタイピング
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
            csdSurvey:
              display_name: アンケート
          student_description: ユニット4では、コンピューティングの幅広い社会的影響を紹介します。一連の設計課題を通じて、問題の解決策を開発しながら、他の人のニーズをよりよく理解する方法を学びます。ユニットの後半は、反復して行うチームプロジェクトで構成されています。このプロジェクトでは、チームが関心のあるニーズを特定し、紙とアプリラボの両方でソリューションのプロトタイプを作成し、実際のユーザーでテストして、フィードバックを得てさらに反復を行います。
        csd5-preview-2021:
          description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
          description_short: コンピューターを使ってデータの問題を解決する方法を学びましょう。
          lessons:
            Representation Matters:
              key: 表現が重要
              name: 表現が重要
              description_student: この最初のレッスンでは、データとは何か、またデータを使ってどのように問題を解決するかの概要を説明します。グループはデータセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
              description_teacher: この最初のレッスンでは、生徒はデータとは何か、またデータを使ってどのように問題を解決するかの概要を学びます。レッスンの冒頭で、データについての一般的な理解を得るために簡単なディスカッションを行います。次に、グループに別れ、データセットを使って、さまざまな好みを持つ人々に食事のお勧めを行います。各グループは、さまざまな方法
                (写真、レシピ、メニュー、栄養) で表される食事から選べ、お勧めの利点が決まります。その後、グループは得られた反応を比較して、食事データの表現の仕方により、さまざまな問題の解決法にどのように影響したかについて話し合います。
            Patterns and Representation:
              key: パターンと表現
              name: パターンと表現
              description_student: このレッスンでは、表現システムを構築するために必要なものは何かを詳しく見ていきます。グループは、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。次に、そのシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。このクラスでは、実用的な解決策が数多くあることを認めながら、稼働中のシステム間に共通点があることについて話し合います。
              description_teacher: このレッスンでは、生徒は情報を表現する独自のシステムを作成します。レッスンの冒頭で、はい/いいえの応答を表すのにすでに使っているさまざまなシステムについてブレインストーミングを行います。次に、小さなグループに別れて作業をし、1束のカードのみを使ってアルファベットの任意の文字を表すことができるシステムを作成します。使用するカードには、6種類の絵
                (6匹の動物、6色など) のいずれかが含まれているため、アルファベット全体を表すには、複数のカードのパターンを使って各文字を表す必要があります。生徒は自分のシステムでメッセージを作成し、他のグループとメッセージを交換することで、システムが意図したとおりに機能していることを確認します。まとめのディスカッションでは、クラスはさまざまなシステムの長所と短所をレビューします。稼働中のシステム間に共通点があることについて話し合い、問題の解決法は数多くあることを認めます。重要なことは、コミュニケーションを行う際、誰もが同じ任意のシステムを使うことです。
            ASCII and Binary Representation:
              key: ASCIIとバイナリ表現
              name: ASCIIとバイナリ表現
              description_student: このレッスンでは、情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を紹介します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、バイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。
              description_teacher: このレッスンでは、生徒は情報をエンコードするための正式なバイナリシステム（文字やその他の文字を表すためのASCIIシステム)
                を学習します。レッスンの初めに、コンピューターは「オン」または「オフ」のいずれかを使って情報を表す必要があることを説明します。次に、生徒はバイナリシンボルを使ってテキストを表すためのASCIIシステムの説明を受けて、このシステムを使う練習をしてから、ASCIIを使って独自のメッセージをエンコードします。レッスンの最後にデブリーフィングを行い、アクティビティの主要な学習目標をまとめるのに役立てます。
            Representing Images:
              key: 画像の表現
              name: 画像の表現
              description_student: このレッスンでは、今度は画像を使ってバイナリ表現システムの学習を続け、画像を正方形（または「ピクセル」)
                に分割する概念を説明します。正方形（または「ピクセル」) をそれぞれオンまたはオフにして、画像全体を作成します。ピクセレーションウィジェットを使って短いチャレンジセットを行った後、画像を表現するためのシステムと、前のレッスンで学習したテキストを表現するためのシステムを関連付けます。
              description_teacher: このレッスンでは、コンピューターが画像をどのように表すかを学習します。レッスンを開始するに当たり、複雑なビジョンをバイナリパターンに変える上でどのような課題があるかを検討します。この変換がどのように行われるかを示す一連の画像を通じて、生徒は画像を正方形（または「ピクセル」)
                に分割する概念の説明を受けます。ピクセルそれぞれをオンまたはオフにすると、画像全体を作成できます。次に、生徒はピクセレーションウィジェットを使って短い一連の課題に取り組み、白黒の画像を描画します。パズルは、このように画像を表現する上で直面する課題を取り上げるように設計されています。最後に、生徒は画像を表現するシステムと、前のレッスンで学習したテキストを表現するシステムを関連付けます。
            Representing Numbers:
              key: 数値の表現
              name: 数値の表現
              description_student: このレッスンでは2進数システムを紹介します。 2進数 (base-2) の数体系で場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、パターンを一般的な4ビットシステムに拡張します。
              description_teacher: このレッスンでは、生徒は2進数システムを学習します。 2進数 (base-2) の数体系でドットを集めて場所の値を表すカードセットを使って、カードを表と裏にめくることでビットを「オン」または「オフ」にしてから、異なるパターンから得られる数値を観察します。最後に、生徒はパターンを一般的な4ビットシステムに拡張します。
            Keeping Data Secret:
              key: データの秘密を守る
              name: データの秘密を守る
              description_student: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
              description_teacher: 生徒は、個人データに対してどのような水準のセキュリティを設定したいかについて話し合います。クラスがプライバシーの重要性について理解を深めたら、情報を暗号化するプロセスについて学びます。これは、パートナー向けのメモを暗号化し、パートナーのメモを解読することによって学習します。最後に、物理的セキュリティとデジタルセキュリティの重要性について話し合います。
            Combining Representations:
              key: 表現を組み合わせる
              name: 表現を組み合わせる
              description_student: このレッスンでは、3種類のバイナリ表現システム (ASCII文字、2進数、およびイメージ) をすべて組み合わせて、より複雑なタイプの情報を記録にエンコードできるようにします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。
              description_teacher: このレッスンで、学生は3種類のバイナリ表現システム (ASCII文字、2進数、および画像 をすべて組み合わせて、記録中の情報をデコードします。一連のビットを見てそれらをデコードするように求められたら、バイナリ情報を理解するには、使用しているシステムとエンコードされた情報の両方の意味を理解する必要があることを学びます。次に、特定の構造に基づいてペットを表す記録をデコードします。
            Project - Create a Representation:
              key: プロジェクト - 表現を作成する
              name: プロジェクト - 表現を作成する
              description_student: クラスは、この章で学習したバイナリ表現システムを使って、完璧な1日を表す構造を設計します。記録にキャプチャしておく必要のある情報を決定したら、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。その後、誰もが学習したASCII、2進数、および画像形式を使って完璧な1日を表現し、パートナーの完璧な1日がどのようなものであるかを解読することを試みます。
              description_teacher: このレッスンでは、この章で学習したバイナリ表現システムを使って、自分の完璧な1日を表現するための構造を設計します。生徒はまず、自分の完璧な1日の短い説明を書き、次にパートナーと一緒にレビューして、コンピューターがキャプチャできると思われる主要な情報を特定します。そしてクラスとして、そのような情報を表すために情報のパンチカードをどのように解釈するかを決定します。次に、学習したASCII、2進数、および画像形式を使って、完璧な1日を表現します。さらに、生徒はパンチカードを交換し、他の生徒の完璧な1日がどのようなものかを解読することを試みます。レッスンは最後に学んだことを振り返って終わります。
            Problem Solving and Data:
              key: 問題解決とデータ
              name: 問題解決とデータ
              description_student: このレッスンでは、特にデータの問題に対処するために問題解決プロセスをどう調整したらよいかを扱います。クラスは、都市はリソースを何に最も費やす必要があるかを決定するタスクを行います。クラスは、インターネットでその決定をサポートするデータを見つけて用いなければなりません。
              description_teacher: このレッスンでは、コース前半の問題解決プロセスを使って、データの問題を解決します。プロセスを確認した後、都市はライブラリ、ペットシェルター、または消防署のどれを構築すべきかを決定するように求められます。生徒はチームで作業してインターネットで情報を収集することで何を構築すべきかを決定してから、この情報を使って持論を展開し、市議会に選択を認めてもらえるように説得します。次に、行った作業がコース全体で使ってきた問題解決プロセスのどこに位置付けられるかを考え、一般的な問題解決プロセスと比較してをこのデータの問題を解決するプロセスはどうだったかを検討します。
            Problem Solving with Big Data:
              key: ビッグデータによる問題解決
              name: ビッグデータによる問題解決
              description_student: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかをについて扱います。このクラスでは、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各シナリオには、データを使って同様の問題を解決した実際のサービスに関するビデオも含まれています。
              description_teacher: このレッスンでは、組織はデータをどのように収集して利用することで実際の問題を解決するかを見ていきます。レッスンは、前のレッスンで調査したデータ問題解決プロセスを簡単におさらいするところから始めます。次に、データを使って解決できる3つのシナリオを検討し、問題解決に使用したいデータの種類と、データを収集する方法についてブレインストーミングを行います。各問題は、実在するサービスを反映するように設計されています。ブレインストーミングの後、生徒は実際のサービスに関するビデオを見て、そのサービスによって収集されるデータとその使用方法についてのメモを取ります。レッスンの最後に、データはユーザーが積極的に提供したものか、受動的に記録されたか、またはセンサーによって収集されたものかを記録します。
            Structuring Data:
              key: データの構造化
              name: データの構造化
              description_student: このレッスンでは、生データセットのクリーニングや視覚化など、データの解釈について詳しく見ていきます。クラスはまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べます。クリーニングと視覚化によりより良い意思決定にどのように役立つかを見た後、このプロセスのどの部分を自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
              description_teacher: このレッスンでは、データのクリーニングと視覚化など、データの収集と解釈について学習します。生徒はまず、さまざまな方法でデータを提示することで、データの理解にどのように役立つかを調べてから、自分のデータを視覚化します。好きなピザのトッピングに関する調査結果を使って、生徒は選択した視覚化スキームに簡単に適合しないデータをどのように扱うかを決定しなければなりません。最後に、生徒はこのプロセスのどの部分をコンピューターで自動化できるか、そしてどのプロセスに人の手が必要かを検討します。
            Making Decisions with Data:
              key: データを使った決定
              name: データを使った決定
              description_student: このレッスンでは、前のレッスンで紹介したデータの問題解決プロセスを実践します。すべての質問に正しい答えがあるとは限りません。場合によっては、クラスはさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
              description_teacher: このレッスンでは、中学生に馴染み深い問題に基づいて、データを使って意思決定を行う練習をします。生徒はグループで作業し、提示されたデータを使って意思決定を行う方法について話し合ってから、クラスで最終的な選択について意見をまとめます。すべての問題に正しい答えがあるとは限りません。場合によっては、生徒はさらに多くのデータを収集する必要があると判断することもあるでしょう。このレッスンの最後に、人によって同じデータから異なる結論がどのように導き出されるのか、他のデータを収集することで決定にどのように影響を与える可能性があったかについて話し合います。
            Interpreting Data:
              key: データの解釈
              name: データの解釈
              description_student: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
              description_teacher: レッスンの始めに、生徒はケーキの好みのアンケート調査の結果を調べます。アンケート調査では、回答者はケーキとアイシングのフレーバーの好みを回答できるようになっています。生徒は、ケーキとアイシングの好みの関係を知ることで、お勧めする組み合わせを決定する際にどのように役立つかについて話し合います。次に、さまざまな好みとの関係をグラフ化できるクロス集計の説明を受けます。生徒はこの手法を使って好みに関するアンケート調査の中で関連性を見つけ、このプロセスを使って他にどのような問題を解決できるかをブレインストーミングします。
            Automating Data Decisions:
              key: データ決定の自動化
              name: データ決定の自動化
              description_student: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
              description_teacher: このレッスンでは、コンピューターを使ってどのようにデータの問題解決プロセスを決定するかについて、簡単な例を見ていきます。生徒には、休暇をどこで過ごしたらいいかを提案するアルゴリズムを作成するタスクが与えられます。次に、コンピューターがこの決定を自動的に行うために使用できるルール
                (またはアルゴリズム) を作成します。生徒は自分のルールと、クラスのデータを使って自分のルールによりどのような選択が行われるかをクラスに発表します。次に、ルールをクラスメートからもらったデータに適用して、ルールが他の人と同じ決定を行うかどうかをテストします。レッスンの最後に、コンピューターを使ってデータの問題解決プロセスを自動化することの利点と欠点について話し合います。
            Project - Make a Recommendation:
              key: プロジェクト - 推奨事項の作成
              name: プロジェクト - 推奨事項の作成
            Post-Project Test:
              key: プロジェクト後のテスト
              name: プロジェクト後のテスト
            CS Discoveries Post Course survey:
              key: CS発見 コース後アンケート
              name: CS発見 コース後アンケート
          lesson_groups:
            csd5_1:
              display_name: 第1章：情報を表現する
            csd5_2:
              display_name: 第 2 章：データ問題を解決
            cspSurvey:
              display_name: アンケート
          student_description: ユニット5では、問題の解決におけるデータの重要性について説明し、このプロセスでコンピューターがどのように役立つかに脚光を浴びせます。最初の章では、コンピューターで情報を表現するために使用するさまざまなシステムと、それらを使用することによってもたらされる課題とトレードオフについて詳しく見ていきます。第2章では、データのコレクションを使って問題を解決する方法と、コンピューターがこのプロセスの手順をどのように自動化しているかを学びます。この章は、データの問題解決プロセスを選択した領域にどのように適用できるかを検討して締めくくります。
        csa1-pilot:
          lessons:
            lesson-20:
              name: 評価日
            lesson-24:
              name: Javaラボ
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csa2-pilot:
          lessons:
            lesson-15:
              name: 評価日
            lesson-16:
              name: Javaラボ
          lesson_groups:
            lesson group:
              display_name: 内容
        csa3-pilot:
          lessons:
            lesson-15:
              name: 評価日
            lesson-17:
              name: Javaラボ
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csa4-pilot:
          lessons:
            lesson-15:
              name: 評価日
            lesson-16:
              name: Javaラボ
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csa5-pilot:
          lessons:
            lesson-15:
              name: 評価日
            Java Lab:
              name: Javaラボ
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        k5-onlinepd-2021:
          lessons:
            Welcome to "Teaching Computer Science Fundamentals":
              key: "「コンピュータ サイエンスを教える」へようこそ"
            Understanding the Computer Science Fundamentals Courses:
              key: コンピューター サイエンス入門コースを理解する
            Sequencing:
              key: シークエンス
              name: シークエンス
            Loops:
              key: くりかえし
              name: くりかえし
            Events:
              key: イベント
              name: イベント
            Conditionals:
              key: 条件
              name: 条件
            End of Course projects:
              key: コース最後のプロジェクト
              name: コース最後のプロジェクト
            Functions:
              key: 関数(かんすう)
              name: 関数(かんすう)
            Variables:
              key: 変数（へんすう）
              name: 変数（へんすう）
            For Loops:
              key: ループ用
              name: ループ用
            Sprite Lab:
              key: スプライト ラボ
            Reviewing your reflections:
              key: 復習内容をレビューする
              name: 復習内容をレビューする
            Next steps:
              key: 次の手順
            Module 1:
              name: モジュール1
            Getting Started:
              name: 使用開始
          lesson_groups:
            k5_getting_started_1:
              display_name: はじめに
            k5_diving_deeper_1:
              display_name: '発展: コースEおよびF'
            Introduction:
              display_name: はじめに
        haikubot-pilot:
          lesson_groups:
            Lesson 3:
              display_name: レッスン3
            Lesson 4:
              display_name: レッスン4
            Lesson 5:
              display_name: レッスン5
        csp-post-survey-2020:
          lessons:
            CSP post-course survey:
              name: CSPコース後アンケート
          lesson_groups:
            cspSurvey2020:
              display_name: アンケート
          description_audience: CSP生徒
          description_short: CSP生徒向けコース後の調査
          description: Code.org CS原則コース後アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
          student_description: Code.org CS原則コース後アンケートへようこそ。このアンケートの所要時間は約15分です。いただいた回答は匿名形式で保存され、公開されることはありません
            - 先生はクラス全体の匿名の集計結果を見ることができます。結果は、先生とCode.orgがコースを維持および改善するために不可欠です。よろしくお願いします。
        aiml-2021:
          lessons:
            lesson-22:
              name: データ収集の設計
          lesson_groups:
            lessonGroup-4:
              display_name: アンケート
        csd7-2021:
          lessons:
            Survey Planning:
              name: データ収集の設計
          lesson_groups:
            lessonGroup-4:
              display_name: アンケート
        kodea-pd-2021:
          lessons:
            Getting Started:
              key: 使用開始
              name: 使用開始
            Computer Science Fundamentals:
              key: コンピュータ サイエンス入門
              name: コンピュータ サイエンス入門
            Looking Ahead:
              key: 先を見る
              name: 先を見る
            'Mastering the Basics: Sequencing':
              key: '基本をマスターする: シーケンス'
              name: '基本をマスターする: シーケンス'
            'Mastering the Basics: Loops':
              key: '基本をマスターする: ループ'
              name: '基本をマスターする: ループ'
            'Mastering the Basics: Conditionals':
              key: '基本をマスターする: 条件文'
              name: '基本をマスターする: 条件文'
            'Mastering the Basics: Functions':
              key: '基本をマスターする: 関数'
              name: '基本をマスターする: 関数'
            'Mastering the Basics: Events':
              key: '基本をマスターする: イベント'
              name: '基本をマスターする: イベント'
            Best Practices for Teaching Computer Science:
              key: コンピューター サイエンスを教えるためのベストプラクティス
              name: コンピューター サイエンスを教えるためのベストプラクティス
            Planning:
              key: 計画
              name: 計画
            Next Steps:
              key: 次の手順
              name: 次の手順
        vpl-csd-2021:
          lessons:
            Module 1:
              key: モジュール1
              name: モジュール1
            Module 2:
              key: モジュール2
              name: モジュール2
            Module 3:
              key: モジュール3
              name: モジュール3
            Module 4:
              key: モジュール4
              name: モジュール4
            Module 5:
              key: モジュール5
              name: モジュール5
            Module 6:
              key: モジュール6
              name: モジュール6
            Module 7:
              key: モジュール7
              name: モジュール7
            Module 8:
              key: モジュール8
              name: モジュール8
          lesson_groups:
            CSD_Module 1:
              display_name: モジュール1
            CSD_Module 2:
              display_name: モジュール2
            CSD_Module 3:
              display_name: モジュール3
            CSD_Module 4:
              display_name: モジュール4
            CSD_Module 5:
              display_name: モジュール5
            CSD_Module 6:
              display_name: モジュール6
            CSD_Module 7:
              display_name: モジュール7
            CSD_Module 8:
              display_name: モジュール8
        vpl-csp-2021:
          lessons:
            Module 1:
              key: モジュール1
              name: モジュール1
            Module 2:
              key: モジュール2
              name: モジュール2
            Module 3:
              key: モジュール3
              name: モジュール3
            Module 4:
              key: モジュール4
              name: モジュール4
            Module 5:
              key: モジュール5
            Module 6:
              key: モジュール6
            Module 7:
              key: モジュール7
            Module 8:
              key: モジュール8
        self-paced-pl-csd1-2021:
          lessons:
            lesson-4:
              name: ようこそ
          lesson_groups:
            lessonGroup-2:
              display_name: ようこそ
        self-paced-pl-csd2-2021:
          lessons:
            lesson-9:
              name: 先生のコミュニティ
        self-paced-pl-csd5-2021:
          lessons:
            lesson-3:
              name: インタラクティブなアニメーションとゲーム
            lesson-4:
              name: 設計プロセス
            lesson-5:
              name: データと社会
            lesson-6:
              name: 物理コンピューティング
        self-paced-pl-csd6-2021:
          lessons:
            lesson-3:
              name: 'ユニット2: ウェブ開発'
            lesson-6:
              name: データと社会
        outbreak-module:
          title: 大流行
        csa1-exemplars:
          lessons:
            lesson-20:
              name: 評価日
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csa2-exemplars:
          lessons:
            lesson-15:
              name: 評価日
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csa-videos:
          lesson_groups:
            lessonGroup-3:
              display_name: リソース
            lessonGroup-2:
              display_name: ユニット 1
            lessonGroup-4:
              display_name: ユニット 2
            lessonGroup-5:
              display_name: ユニット 3
            lessonGroup-6:
              display_name: ユニット 4
            lessonGroup-7:
              display_name: ユニット 5
        csa3-exemplars:
          lessons:
            lesson-15:
              name: 評価日
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        ai-lab:
          lessons:
            lesson-3:
              name: テスト
        dlp21-csp-mod4:
          lesson_groups:
            lessonGroup-2:
              display_name: ステージ 1
            lessonGroup-3:
              display_name: ステージ 2
        dlp21-csp-mod1:
          title: CS原則 詳細学習 モジュール1
        dlp21-csd:
          lesson_groups:
            lessonGroup-2:
              display_name: モジュール1
              description: テスト
            lessonGroup-3:
              display_name: モジュール2
            lessonGroup-4:
              display_name: モジュール3
            lessonGroup-5:
              display_name: モジュール4
        dlp21-csd-overview:
          lessons:
            lesson-1:
              name: 概要
        dlp21-csp-overview:
          lessons:
            lesson-1:
              name: 概要
        csa-u6-dev:
          lessons:
            lesson-12:
              name: ツール
            lesson-17:
              name: コンソール
            lesson-18:
              name: ウィジェット
          lesson_groups:
            lessonGroup-2:
              display_name: レッスン
            lessonGroup-3:
              display_name: プロジェクト
        csa1-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評価日
            lesson-1:
              name: Javaラボ
            lesson-20:
              name: 評価日
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csa2-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評価日
            lesson-15:
              name: 評価日
            lesson-1:
              name: Javaラボ
          lesson_groups:
            lesson group:
              display_name: 内容
        csa3-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評価日
            lesson-1:
              name: Javaラボ
            lesson-15:
              name: 評価日
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csa4-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評価日
            lesson-1:
              name: Javaラボ
            lesson-15:
              name: 評価日
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csa5-pilot-facilitator:
          lessons:
            Assessment Day:
              name: 評価日
            lesson-15:
              name: 評価日
            Java Lab:
              name: Javaラボ
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
        csdu6-playground:
          lessons:
            lesson-2:
              name: コンピューティングにおける革新
            lesson-9:
              name: カラーLED
            lesson-13:
              name: 加速度計
            lesson-19:
              name: プロジェクト
        csa-u7-dev:
          lessons:
            lesson-2:
              name: ウィジェット
            lesson-3:
              name: ツール
          lesson_groups:
            lessonGroup-2:
              display_name: レッスン
            lessonGroup-3:
              display_name: プロジェクト
        csa4-exemplars:
          lessons:
            lesson-15:
              name: 評価日
          lesson_groups:
            lesson group:
              display_name: 内容
            content:
              display_name: 内容
            lesson_group:
              display_name: 内容
            lessonGroup-2:
              display_name: 内容
        dance-unplugged:
          lessons:
            lesson-1:
              name: ダンスパーティー：アンプラグド
        csa-u8-dev:
          lessons:
            lesson-1:
              name: ウィジェット
            lesson-2:
              name: ツール
        poetry:
          lessons:
            lesson-3:
              name: 変数（へんすう）
        spelling-bee:
          lessons:
            lesson-1:
              name: つづりみつばち
          title: つづりみつばち
        outbreak-csc:
          title: 大流行
        csa5-exemplars:
          lessons:
            lesson-14:
              name: 評価日
          lesson_groups:
            lessonGroup-2:
              display_name: 内容
