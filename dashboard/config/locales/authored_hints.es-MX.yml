---
es-MX:
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: Si utilizas un bloque que me ayude a "avanzar 100 pixeles".
          Dibujaré una línea automáticamente.
        2-3_Artist_1_new_b: ¿Tienes problemas para girar en la esquina? Utiliza el
          bloque "girar a la derecha 90 grados".
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: "¿Tienes problemas con los ángulos? Necesitas realizar un
          giro de 360 grados en 8 vueltas. ¿Qué es un 360/8? "
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: Existen 360 grados en un círculo, por lo que, si el artista
          gira 1 grado cada vez que pasa por el ciclo. Entonces tendrá que ir a través
          de el 360 veces.
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: Parece que el artista no está apuntando en la dirección
          correcta. ¿Podrías hacerlo que gire antes de que dibuje la línea?
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: "¿Qué es un 100-70? Basado en la descripción del problema,
          ¡indica lo alto que debe ser el sombrero!"
        2-3_Artist_3new_b: Parece que el artista no está apuntando en la dirección
          correcta. ¿Podrías hacerlo que gire antes de que dibuje la línea?
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: Para terminar la casa, lo que necesitamos hacer es ¡dibujar
          un cuadrado!
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: 'Para hacer esos pequeños ángulos, tienes que girar _más allá_
          cada vez como lo hiciste con el cuadrado.   '
        2-3_Artist_6_b: Como ya estoy mirando hacia la derecha, es más fácil empezar
          por avanzar, y luego hacer vueltas a la izquierda para crear el triángulo.
        2-3_Artist_6_c: Cada lado del triángulo tiene la misma longitud que cada lado
          del cuadrado... 100 pixeles!
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: La forma más sencilla de resolver este rompecabezas es dibujar
          el primer cuadrado y acabar con el artista apuntando hacia abajo antes de
          comenzar el segundo cuadrado.
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: Si cortas 200 por la mitad,¿de cuántos pixeles de ancho necesita
          ser cada cuadrado?
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: Este diamante es realmente sólo un cuadrado de lado
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: Cada paso tiene 100 pixeles de ancho y 100 pixeles de alto.
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: Este diamante es realmente un cuadrado girado 45 grados.
        2-3_Artist_9_b: No olvides girar al artista hacia la izquierda 45 grados antes
          de comenzar a dibujar tu cuadrado
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: Recuerda que si deseas que el panel de control
          sea 10 pixeles _más ancho_...asegúrate de **sumarle** 10 al número que cambies.
        2-3_Artist_Debugging_10_b: |-
          **Ensayo y error está permitido!**

          Comienza por cambiar un número a la vez.

          ¿Qué números hacen qué?

          Si te pierdes, haz clic en "Start over" y tu código se restablecerá.
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: 'Pista: Cada bigote tiene 75 pixeles de largo.'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: Uno de los giros es 15 grados demasiado pequeños.
        2-3_Artist_Debugging_3_b: Si el programa se ejecuta muy rápido para ver lo
          que ocurre, intente ir disminuyendo con el control deslizar.
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: "¿Qué pasa si haces que el artista se mueva o salte
          hacia atrás después de que dibuje la primera línea?"
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          ¿Cuántas veces se repitió mi forma?

          ¿Cuántas veces se _debería_ repetir la forma?

          ¿Dónde puedes modificar eso en el programa?
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: "¡El artista tiene que girar 60 grados más a la
          izquierda antes de empezar a dibujar!"
        2-3_Artist_Debugging_9_b: "¡No necesitas añadir otro bloque para que puedas
          girar completamente, solo añade 60 grados 'a la izquierda' al bloque que
          ya tienes ahí!"
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: Los cuadrados tienen 100 pixeles por lado cada uno,
          eso significa que tendrás que moverte hacia adelante 175 pixeles antes de
          dibujar tu segundo cuadrado.
        2-3_Artist_Functions_1_b: Está correcto dibujar líneas superpuestas para hacer
          tus anteojos.
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: Los cuadrados tienen 100 pixeles por lado cada uno,
          eso significa que tendrás que moverte hacia adelante 175 pixeles antes de
          dibujar tu segundo cuadrado.
        2-3_Artist_Functions_1_b: Está correcto dibujar líneas superpuestas para hacer
          tus anteojos.
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: Deberás cambiar no sólo el número y longitud de
          los lados dentro de la función, sino que también en ángulo con que el artista
          gira entre cada lado.
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: Deberás cambiar no sólo el número y longitud de
          los lados dentro de la función, sino que también en ángulo con que el artista
          gira entre cada lado.
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: Intenta ejecutar el código primero para ver qué
          necesitas agregar.
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: Intenta ejecutar el código primero para ver qué
          necesitas agregar.
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: |-
          El programa debe:

          -   Usar la función
          -   Avanzar 100 + 75 pixeles
          -   Usar la función
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          El programa debe:

          -   Usar la función
          -   Avanzar 100 + 75 pixeles
          -   Usar la función
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: El artista debe girar 120 grados entre cada cuadrado
          para completar este diseño.
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: El artista debe girar 120 grados entre cada cuadrado
          para completar este diseño.
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Recuerda que el código del rompecabezas pasado era:

          ![](https://images.code.org/15288d042780242ec5edeed5204c6ebb-image-1469640792081.png)
        2-3_Artist_Loops_New_11_b: Tu nuevo giro deberá ir al **final** del código
          dentro del loop.
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: Antes de empezar el diamante, el artista necesita
          girar 60 grados a la izquierda para estar en el camino correcto.
        2-3_Artist Loops_New_12_b: Luego que el artista avance 100 pixeles, necesitará
          girar 120 grados a la derecha para formar una esquina cerrada.
        2-3_Artist Loops_New_12_c: El artista solamente deberá girar 60 grados a la
          derecha para crear una esquina amplia.
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: |-
          Al final de cada diamante, el artista ya se encuentra en la dirección correcta para iniciar la que sigue.

          Debido a esto, no necesitamos agregar un bloque extra de 'gira a la izquierda'  antes de que comenzar de nuevo.
        2-3_Artist_Loops_New_13_b: |-
          Para hacer cada diamante, el artista necesita:

          -   moverse
          -   girar a la derecha 120 grados
          -   moverse
          -   girar a la derecha 60 grados

          ¡Luego todo de nuevo!
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: El artista necesita girar 45 grados a la derecha
          antes de empezar a dibujar.
        2-3_Artist_Loops_New_9_b: Esta V solo es la mitad del cuadrado. ¿Cuál sería
          el código para dibujar la mitad del cuadrado?
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: Recuerda colocar todos los bloques de color gris
          dentro del loop.
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: |-
          ¿Necesitas ayuda con los ángulos?
          **360/12 = 30**
        2-3_Artist_Nested_Loops_3_b: Recuerda colocar el código gris completo y tu
          bloque de giro dentro de un loop.
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: |-
          ¿Necesitas ayuda con los ángulos?
          **360/12 = 30**
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: |-
          Intenta usar el bloque "saltar adelante" para ir desde la parte superior de un cuadrado hasta el lugar donde comenzarás el siguiente.
          Si tus cuadrados tienen 20 pixeles de alto y están separados 20 pixeles, ¿cuánto necesitas saltar?
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: |-
          ¿Qué tan lejos deberías girar en cada loop?

          ¿Qué significa 360/10?
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: "¿Necesita ayuda para encontrar el ángulo correcto?
          \\*\\* 360 / 12 = 30 \\*\\*"
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: "¿Tienes problema en resolver cómo bajar los bloques?
          ¡Intenta tratar a la flor roja de la misma manera que la flor morada!"
        2-3_Bee_Conditionals_14_b: Si la flor roja fuese morada, podrías imaginar
          cómo usar un extra "repeat" loop para acortar el código?
        2-3_Bee_Conditionals_14_c: "Intenta separar esto en dos partes : \n\n![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)\n\n1.
          \ Tomar néctar 3 veces\n\n2.  Mueve adelante 5 veces\n\n3.  Verifica si
          hay néctar, si hay: cógelo\n\n4.  Gira a la izquierda\n\n5.  Fabricar miel
          \n\n6.  Mueve adelante una vez\n\n7.  Fabrica dos de miel"
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Recuerda: las flores moradas solo tienen 0 o 1
          de néctar, y pueden cambiar cada vez que ejecutes el programa.'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: El código se acortará si usas un loop cada vez que
          avanzas, otro loop para juntar néctar, y otro para hacer miel.
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Recuerda: las flores de color morado cambian entre
          0 y 1 néctar al ejecutar tu programa!'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: Una vez que encuentres y corrijas el bloque incorrecto,
          ¿ves algún patrón que se pueda hacer más simple usando un loop 'repetir'?
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: Una vez que encuentres y corrijas el bloque incorrecto,
          ¿ves algún patrón que se pueda hacer más simple usando un loop 'repetir'?
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: "¿Hay algún lugar donde la abeja haga algo que no tiene
          sentido? ¿Qué pasa cuando cambias ese bloque?"
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: No tienes que usar un loop con una función. Intenta
          moverte usando la función, luego moverte y usar la función otra vez.
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: No tienes que usar un loop con una función. Intenta
          moverte usando la función, luego moverte y usar la función otra vez.
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: "Si el desafío parece difícil, intenta crear tu función
          de a poco.   \n\nAgrega algunos bloques y luego pruébala. Agrega más y vuelve
          a intentarlo. ¡Pronto lograrás resultados!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        2-3_Bee_Functions_8_b: "Recuerda crear tu código dentro del bloque de función
          verde. \n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: Deberías finalizar con cuatro bloques dentro de tu loop.
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu loop.
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: Vas a necesitar dos "repeat" loops diferentes, uno después
          del otro.
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_4A_b: La última parte del programa se puede terminar escribiendo
          el código al final del programa fuera de su loop.
        2-3_Bee_Loops_4A_c: Si aún no puedes detectar los loop, intenta codificar
          primero, luego identifica lo que puedes combinar en un "repeat" loop.
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: Si no puedes detectar los bloques para colocarlos en "repeat"
          de inmediato, comienza a codificar cada movimiento y busca un patrón.
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: Si no puedes decir qué debería ir dentro del loop "repeat",
          intenta arrastrar los bloques uno por uno y trata de encontrar un patrón.
        2-3_Bee_Loops_6_b: Deberían haber 6 bloques dentro del loop "repeat" una vez
          que hayas finalizado.
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_7_b: 'Si no puedes imaginarte el loop desde el principio, intenta
          codificarlo y luego busca un patrón.  '
      2-3 Maze 1_authored_hint:
        2-3_Maze_1_a: Para usar un bloque "avanzar", arrástralo desde el área de barra
          de herramientas al lugar de trabajo y conéctalo al bloque "cuando ejecutar".
      2-3 Maze 16_authored_hint:
        2-3_Maze_16_a: Si el patrón es difícil de ver, intenta codificar todo primero
          e identifica qué es lo que se repite una y otra vez antes de colocar los
          loops.
        2-3_Maze_16_b: |-
          Para poner muchos bloques en un "repeat" loop, solamente arrastra un loop hacia el espacio de trabajo y luego arrastra todos los bloques desde el programa de inicio dentro de él.

          Conecta todo al bloque "when run" y estarás listo!
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: "¡Hay dos formas de resolver este desafío!"
      2-3 Maze Loops 17_authored_hint:
        2-3_Maze_Loops_17_a: Si el patrón es difícil de ver, intenta codificar todo
          primero e identifica qué es lo que se repite una y otra vez antes de colocar
          los loops.
        2-3_Maze_Loops_17_b: ¿Se borró el código de inicio? ¡Has clic en "start over"
          para volver a empezar!
      2-3 Maze Loops 18_authored_hint:
        2-3_Maze_Loops_18_a: Si el patrón es difícil de ver, intenta codificar todo
          primero e identifica qué es lo que se repite una y otra vez antes de colocar
          los loops.
      2-3 Maze Loops 19_authored_hint:
        2-3_Maze_Loops_19_a: Si estás atascado, intenta escribir el código sin loops
          primero y busca patrones.
        2-3_Maze_Loops_19_b: Colocar un loop "repeat" dentro de otro le ayudará a
          reducir el número de bloques utilizados.
      2-3 Maze Loops 20_authored_hint:
        2-3_Maze_Loops_20_a: Busca un patrón de escalera en este laberinto para encontrar
          en qué lugar se puede utilizar un loop.
      2-3 Maze Loops 21_authored_hint:
        2-3_Maze_Loops_21_a: Si tienes problemas para encontrar el patrón de escalera,
          intenta cubrir los caminos bloqueados con tu dedo.
      4-5 Artist 1_authored_hint:
        4-5_Artist_1_a: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      4-5 Artist 11_authored_hint:
        4-5_Artist_11_a: Dentro de tu loop, asegúrate que el artista salte hacia atrás
          y hacia arriba luego de dibujar cada linea.
      4-5 Artist 3_authored_hint:
        4-5_Artist_3_a: |-
          Si el lecho de flores mide 600 píxeles y dos de los lados tienen 200 píxeles de largo, aquí se explica cómo se suman los lados cortos:
          **600 - 200 - 200 = 200**
          Eso significa que ambos lados cortos suman hasta 200 píxeles.
          \*\* ¿Qué es 200/2? \*\*
        4-5_Artist_3_b: Si no puedes ver donde está el loop "repetir", intenta codificar
          la solución completa y busca un patrón.
      4-5 Artist 4_authored_hint:
        4-5_Artist_4_a: |-
          ¡Hay 360 grados en un circulo!

          ¡Ese es el número de veces que necesitas repetir este código (girando un grado a la vez) antes de que se termine el circulo!
      4-5 Artist 5_authored_hint:
        4-5_Artist_5_a: Prueba y error es un gran método, pero también puedes resolver
          el problema dividiendo el ángulo de 90 grados en tercios. \*\* 90/3 = **\_**
          \*\*
      4-5 Artist 7_authored_hint:
        4-5_Artist_7_a: "¿Qué ángulo es el más pequeño? ¿En qué ángulo está parado
          el artista? "
      4-5 Artist 8_authored_hint:
        4-5_Artist_8_a: "Los lados largos son de 240 pixeles cada uno. Eso significa
          que los lados cortos deben sumar: \n\n**800 - 240 - 240 = 320**\n\n¿Qué
          significa **320/2** ? "
        4-5_Artist_8_b: "¡Esta imagen se puede hacer de 2 maneras!   \n\n-   Dibuja
          dos rectángulos que son \\*\\* 120 \\*\\* de largo y \\*\\* 160 \\*\\* de
          alto, con un lado superpuesto \n\n-   Dibuja un rectángulo que es \\*\\*
          240 \\*\\* de largo y \\*\\* 160 \\*\\* de alto, luego agrega una línea
          en el medio."
      4-5 Artist 9_authored_hint:
        4-5_Artist_9_a: Cuando un triángulo es equilátero, todos sus lados y todos
          sus ángulos son iguales.
        4-5_Artist_9_b: Tendrás que dibujar tres triángulos del mismo tamaño. No olvides
          saltar a tu nueva posición después de cada uno.
      4-5 Artist Assessment 1_authored_hint:
        4-5_Artist_Assessment_1_a: Solo necesitas dibujar el triángulo exterior para
          completar este rompecabezas.
      4-5 Artist Patterns 11_authored_hint:
        4-5_Artist_Patterns_11_a: Si hay 360 grados en un círculo y cada loop gira
          3 grados, cuántas veces necesitas hacer un loop para dibujar la mitad de
          un círculo?
      4-5 Artist Patterns 2_authored_hint:
        4-5_Artist_Patterns_2_a: Ten en cuenta que dado que los cuadrados tienen 20
          píxeles de largo, tendrás que saltar 20 píxeles antes de comenzar tu siguiente
          cuadrado.
      4-5 Artist Patterns 3_authored_hint:
        4-5_Artist_Patterns_3_a: Ten cuidado de sacar el bloque completo de código
          de la barra de herramientas cada vez que pruebes uno nuevo.
        4-5_Artist_Patterns_3_b: Si su código se vuelve demasiado confuso, siempre
          puede hacer clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      4-5 Artist Patterns 5_authored_hint:
        4-5_Artist_Patterns_5_a: "Ahora, cuando el artista termine cada diamante,
          se encontrará en la dirección opuesta a la que necesita para comenzar la
          siguiente.   \n\n¿Cuántos grados necesita cambiar para ponerse en línea
          recta?"
      4-5 Bee Conditionals 4_authored_hint:
        remember_quantum: "\\*\\* Recuerde: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /si
          no`) para resolver el desafío."
      4-5 Bee Conditionals 5_authored_hint:
        remember_quantum: "\\*\\* Recuerde: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /si
          no`) para resolver el desafío."
      4-5 Bee Conditionals 6_authored_hint:
        4-5 Bee Conditionals 6_a: Puede resolver este rompecabezas usando solo los
          bloques en el espacio de trabajo. ¿En qué orden deberían ir?
        4-5 Bee Conditionals 6_b: Asegúrate de verificar si la flor tiene más de \*\*
          0 \*\* néctar al menos \*\* 3 \*\* veces para resolver este rompecabezas.
      4-5 Bee Debugging 1_authored_hint:
        4-5_Bee_Debugging_1_a: Si tienes problema para descubrir lo que no está correcto,
          intenta ejecutarlo para ver donde están los errores.
      4-5 Bee Nested Loops Rows_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Intente tratar este rompecabezas como un rectángulo
          largo donde la abeja necesita avanzar, luego gire a la izquierda varias
          veces para completar el camino.
      4-5 Maze 10_authored_hint:
        4-5_Maze_10_a: |-
          Si no puedes ver cómo usar los loops para resolver el rompecabezas, intenta resolverlo primero y luego busca un patrón.

          ¿Deberías poner un "repetir" para acortar el código?
      4-5 Maze 4_authored_hint:
        4-5_Maze_4_a: Si tienes dificultad para colocar la repetición, intenta codificar
          todo y busca un patrón.
      4-5 Maze 5_authored_hint:
        4-5_Maze_5_a: Intenta usar un loop "repetir" cada vez que necesites "avanzar"
          más de dos pasos.
        4-5_Maze_5_b: Puedes usar más de un loop "repetir" en un rompecabezas.
      4-5 Maze 6_authored_hint:
        4-5_Maze_6_a: "Intenta trazar un camino con tu dedo.  \n¿Es el camino más
          corto que puedes encontrar?"
      4-5 Maze 7_authored_hint:
        4-5_Maze_7_a: |-
          **¿Quieres que tu código sea lo más reducido posible?**

          Busca patrones en tus bloques. ¿Ves algo que se repita? Intenta colocar un loop en su lugar!
      4-5 Nested Loops 12_authored_hint:
        4-5_Nested_Loops_12_a: "\\*\\* 360/36 =? \\*\\*"
      4-5 Nested Loops 6_authored_hint:
        4-5_Nested_Loops_6_a: "No olvides girar luego de tu loop interno.\n\nEstarás
          haciendo un loop de 6 triángulos de 360 grados. \n\n**360 / 6 = ?**"
      4-5 Nested Loops 7_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este diseño hará un loop 10 veces sobre 360 grados.

          **360 / 10 = ?**
      4-5 Nested Loops 8_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Estarás haciendo 6 loops en esta figura por sobre los 360 grados.

          **360 / 6 = ?**
      4-5 While Loops 8_authored_hint:
        4-5_While_Loops_8_a: Cada elemento necesitará su propio "while" loop.
      Artist Autorun Test_authored_hint:
        2-3_Artist_Functions_4_a: El artista debe girar 120 grados entre cada cuadrado
          para completar este diseño.
      Artist Inspiration_authored_hint:
        brush_width: Establecemos el grosor del pincel a 1, luego el color azul antes
          de hacer cualquier otra cosa.
        double_loop: Trate de poner un "for loop" dentro de un loop de "repetición".
        specifics: |-
          El "for loop" se ejecuta de tres a diecisiete para cada uno de los 6 "pétalos" antes de crear el siguiente, dibujando figuras sólo con un número impar de lados.

          El bloque "set alpha" utiliza la división para ir atenuando el color a medida que el contador aumenta.
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20
          píxeles antes de hacer una rotación de 60 grados.
        solution: "\\*\\* Solución \\*\\*! [ Imagen de Bloques de Solución ] \\(<https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc->
          image -1469641375258.png)"
      Bergeron Robot Maze1_authored_hint:
        2-3_Maze_1_a: Para usar un bloque "avanzar", arrástralo desde el área de barra
          de herramientas al lugar de trabajo y conéctalo al bloque "cuando ejecutar".
      CoureE_HOC 2018 Level_7a_authored_hint:
        aquatic7: Puedes usar el bloque de ruta if para ayudarte a hacer los giros
          correctos.
      Course 4 Artist 11_authored_hint:
        Course_4_Artist_11_a: 'El semi-hexágono tiene una \*\* longitud de 30 \*\*
          y gira a la derecha por \*\* 60 grados \*\*.  '
        Course_4_Artist_11_b: 'El triángulo 2/3 tiene una **longitud de 80** y gira
          a la derecha por **120 grados**. '
      Course 4 Artist 12_authored_hint:
        Course_4_Artist_12_a: 'Cada forma repetida es la combinación de \*\* la mitad
          de un hexágono \*\*, seguida de \*\* 2/3 de un triángulo \*\*. '
        Course_4_Artist_12_b: 'La forma de la unidad es casi la misma que en el último
          acertijo, excepto que el medio hexágono es un poco más grande. '
        Course_4_Artist_12_c: "1.  Las primeras tres líneas tienen 60 píxeles de largo
          y necesitas girar 60 grados.\n     2) Las siguientes dos líneas tienen 80
          píxeles de largo y necesitas girar 120 grados "
        Course_4_Artist_12_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">6</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">3</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">60</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">60</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">80</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">120</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6_authored_hint:
        Course_4_Artist_6_a: Hay 3 triángulos dentro de la rotación de 360 grados...
          ¿Cuántas veces entran 3 en 360?
      Course 4 Artist 8a_authored_hint:
        Course_4_Artist_8a: |-
          ¿Necesitas ayuda para calcular qué tan lejos girar?

          Hay 3 triángulos dentro de la rotación de 360 grados.

          ¿Cuántas veces entra 3 en 360?
      Course 4 Artist 9_authored_hint:
        Course_4_Artist_9_a: |-
          ¿Necesitas saber cuánto girar?

          ¿Cuanto es 360 dividido por 10?
      Course 4 Artist Binary Free Play 2b_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Este código utiliza dos "for loops".
          Uno cuenta de 1 a 8, el otro cuenta de 8 a 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Cada "for loop" tiene tres repeticiones.
          La primera dibuja el conjunto de más a la izquierda de 1s, el segundo dibuja
          el 0s en el medio, y el tercero dibuja el 1s a la derecha.
        Course_4_Artist_Binary_Free_Play_2b_c: En cada repetición necesitas `contador`
          para 1s y`16- (contador 2x)`para 0s.
        Course_4_Artist_Binary_Free_Play_2b_d: "\\*\\* Solución: \\*\\* \n\n<xml><block
          type=\"when_run\" deletable=\"false\" movable=\"false\"> <next><block type=\"controls_for_counter\"
          inline=\"true\"> <mutation counter=\"counter\"></mutation> <value name=\"FROM\">
          <block type=\"math_number\"> <title name=\"NUM\"> 1</title></block></value>
          <value name=\"TO\"> <block type=\"math_number\"> <title name=\"NUM\"> 8</title></block></value>
          <value name=\"BY\"> <block type=\"math_number\"> <title name=\"NUM\"> 1</title></block></value>
          <statement name=\"DO\"> <block type=\"controls_repeat_ext\" inline=\"true\">
          <value name=\"TIMES\"> <block type=\"variables_get\"> <title name=\"VAR\">
          contador de</title></block></value> <statement name=\"DO\"> <block type=\"procedures_callnoreturn\"
          inline=\"true\"> <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation>
          <value name=\"ARG0\"> <block type=\"text\"> <title name=\"TEXT\"> 1</title></block></value></block></statement>
          <next><block type=\"controls_repeat_ext\" inline=\"true\"> <value name=\"TIMES\">
          <block type=\"math_arithmetic\" inline=\"true\"> <title name=\"OP\"> menos</title>
          <value name=\"A\"> <block type=\"math_number\"> <title name=\"NUM\"> 16</title></block></value>
          <value name=\"B\"> <block type=\"math_arithmetic\" inline=\"true\"> <title
          name=\"OP\"> multiplicar</title> <value name=\"A\"> <block type=\"variables_get\">
          <title name=\"VAR\"> contador</title></block></value> <value name=\"B\">
          <block type=\"math_number\"> <title name=\"NUM\"> 2</title></block></value></block></value></block></value>
          <statement name=\"DO\"> <block type=\"procedures_callnoreturn\" inline=\"true\">
          <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation> <value name=\"ARG0\">
          <block type=\"text\"> <title name=\"TEXT\"> 0</title></block></value></block></statement>
          <next><block type=\"controls_repeat_ext\" inline=\"true\"> <value name=\"TIMES\">
          <block type=\"variables_get\"> <title name=\"VAR\"> contador de</title></block></value>
          <statement name=\"DO\"> <block type=\"procedures_callnoreturn\" inline=\"true\">
          <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation> <value name=\"ARG0\">
          <block type=\"text\"> <title name=\"TEXT\"> 1</title></block></value></block></statement></block></next></block></next></block></statement>
          <next><block type=\"controls_for_counter\" inline=\"true\"> <mutation counter=\"counter\"></mutation>
          <value name=\"FROM\"> <block type=\"math_number\"> <title name=\"NUM\">
          8</title></block></value> <value name=\"TO\"> <block type=\"math_number\">
          <title name=\"NUM\"> 1</title></block></value> <value name=\"BY\"> <block
          type=\"math_number\"> <title name=\"NUM\"> 1</title></block></value> <statement
          name=\"DO\"> <block type=\"controls_repeat_ext\" inline=\"true\"> <value
          name=\"TIMES\"> <block type=\"variables_get\"> <title name=\"VAR\"> contador
          de</title></block></value> <statement name=\"DO\"> <block type=\"procedures_callnoreturn\"
          inline=\"true\"> <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation>
          <value name=\"ARG0\"> <block type=\"text\"> <title name=\"TEXT\"> 1</title></block></value></block></statement>
          <next><block type=\"controls_repeat_ext\" inline=\"true\"> <value name=\"TIMES\">
          <block type=\"math_arithmetic\" inline=\"true\"> <title name=\"OP\"> menos</title>
          <value name=\"A\"> <block type=\"math_number\"> <title name=\"NUM\"> 16</title></block></value>
          <value name=\"B\"> <block type=\"math_arithmetic\" inline=\"true\"> <title
          name=\"OP\"> se multiplican</title> <value name=\"A\"> <block type=\"variables_get\">
          <title name=\"VAR\"> contador</title></block></value> <value name=\"B\">
          <block type=\"math_number\"> <title name=\"NUM\"> 2</title></block></value></block></value></block></value>
          <statement name=\"DO\"> <block type=\"procedures_callnoreturn\" inline=\"true\">
          <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation> <value name=\"ARG0\">
          <block type=\"text\"> <title name=\"TEXT\"> 0</title></block></value></block></statement>
          <next><block type=\"controls_repeat_ext\" inline=\"true\"> <value name=\"TIMES\">
          <block type=\"variables_get\"> <title name=\"VAR\"> contador de</title></block></value>
          <statement name=\"DO\"> <block type=\"procedures_callnoreturn\" inline=\"true\">
          <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation> <value name=\"ARG0\">
          <block type=\"text\"> <title name=\"TEXT\"> 1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block>
          </xml>"
      Course 4 Artist For Loops 11_authored_hint:
        Course_4_Artist_For_Loops_11_a: "¡El ángulo de giro cambiará con cada forma!\n\nUse
          el bloque matemático para ingresar 360 dividido por el número de lados que
          tiene la forma para obtener el ángulo correcto. "
      Course 4 Artist For Loops 11a_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 dividido por el número de lados que
          tiene una forma es la cantidad de grados que deberá girar. '
        Course_4_Artist_For_Loops_11a_b: 'Cada vez, deberá avanzar 10 veces la longitud
          del número actual de lados. '
      Course 4 Artist For Loops 3_authored_hint:
        Course_4_Artist_For_Loops_3_a: Para que el loop "for" conduzca su movimiento,
          asegúrese que está usando el "contador" como distancia.
      Course 4 Artist For Loops 4_authored_hint:
        Course_4_Artist_For_Loops_4_a: |-
          **¿Cuál es el número más pequeño que necesitarás?
          ¿Cuál es el número más grande?
          ¿Qué tanto aumenta cada vez?**

          Esas son las preguntas que te tienes que hacer para completar los espacios del loop "para".
      Course 4 Artist For Loops Challenge_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: La forma más grande tiene 19 lados.
          El más pequeño tiene solo dos.
        Course_4_Artist_For_Loops_Challenge_b: El loop "for" cuenta hasta por dos
          cada vez que se ejecuta.
      Course 4 Artist For Loops Challenge_a_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: El polígono más grande tiene 19 lados.
        Course_4_Artist_For_Loops_Challenge_b: Cada polígono está incompleto, con
          un lado menos de lo que debería tener.
      Course 4 Artist For Loops inspire_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: La base de este código es la misma que
          la solución al desafío anterior... con un par de cambios.
        Course_4_Artist_For_Loops_inspire_b: Intenta un loop "for" que va de 3 a 10
          con un incremento de 1.
        Course_4_Artist_For_Loops_inspire_c: Hay dos iteraciones del mismo bucle de
          repetición dentro del bucle 'for', pero la segunda repetición gira en la
          dirección opuesta.
        Course_4_Artist_For_Loops_inspire_d: "**Solución:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration_authored_hint:
        Course_4_Artist_Functions_Inspiration_a: Comienza con el código del último
          acertijo y agrega un extra "girar a la derecha" de tres grados dentro de
          cada loop de repetición.
        Course_4_Artist_Functions_Inspiration_b: Intenta girar más de 90 grados dentro
          de cada "loop de repetición", pero permanezca dentro del "for loop".
        Course_4_Artist_Functions_Inspiration_c: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">14</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a square 20"></mutation>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">20</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">3</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">100</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Functions challenge_authored_hint:
        Course_4_Artist_Functions_challenge_a: Parte de entender cómo usar funciones
          es averiguar cuáles necesita y cuáles no.
        Course_4_Artist_Functions_challenge_b: Utilice un "for loop", luego use su
          variable de contador dentro de un loop de "repetición" anidado.
        Course_4_Artist_Functions_challenge_c: En cada iteración, debe dibujar un
          cuadrado y luego saltar hacia adelante.
        Course_4_Artist_Functions_challenge_d: Necesitarás girar a la izquierda 90
          grados fuera de su "repetición", pero aún dentro del "for loop".
      Course 4 Artist Inspire_authored_hint:
        Course_4_Artist_Inspire_a: Después de completar un cuadrado, intente saltar
          hacia adelante la mitad de su longitud antes de girar y hacer otro.
        Course_4_Artist_Inspire_b: Cada cuadrado y salto se repite cuatro veces (usar
          un giro a la izquierda en el medio) para formar una unidad completa similar
          a un molinete.
        Course_4_Artist_Inspire_c: Cada molinete también se repite cuatro veces, con
          un giro a la derecha de \*\* 360 / lados \*\*.
        Course_4_Artist_Inspire_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Vars 13_authored_hint:
        Course_4_Artist_Vars_13_a: Necesita dos loops de repetición (uno dentro de
          otro) ambos repitiendo "lados" veces.
        Course_4_Artist_Vars_13_b: |-
          El loop de repetición interno dibuja un octágono (girando a la izquierda).

          Luego, necesita avanzar y girar a la derecha sólo en el loop externo.
        Course_4_Artist_Vars_13_c: Para ajustar la forma para que permanezca del mismo
          tamaño cuando cambia el número de lados, use el bloque matemático para dividir
          la longitud en píxeles por el número de lados.
      Course 4 Artist Vars 6_authored_hint:
        Course_4_Artist_Vars_6_a: Para dibujar un polígono regular, gire \*\* 360
          / lados \*\* cada vez.
      Course 4 Artist Vars 8_authored_hint:
        Course_4_Artist_Vars_8_a: Si divide su longitud inicial por el número de lados,
          la longitud de cada lado se acortará a medida que el número de lados aumente.
      Course 4 Bee Params 7_authored_hint:
        notice_pattern: "¿Ves un patrón en cómo cambia la cantidad de néctar? "
        count_with_for: Tenga en cuenta que el néctar se incrementa en pasos. ¿Qué
          tipo de bloque puede usar para hacer lo mismo?
      Course 4 Bee Params 8_authored_hint:
        Course_4_Bee_Params_8_a: Está bien pedir un número de miel y un número de
          néctar cada vez. Si no hay nada de algo, el número puede ser 0.
      Course 4 Play Lab Params 2_authored_hint:
        Course_4_Play_Lab_Params_2_a: Debes hacer clic en "editar" en la función de
          salto y actualizarla para que uses el parámetro 'altura'.
      Course 4 Play Lab Vars 2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Asegúrese de establecer el número de `velocidad_perro`a
          algo más grande que`velocidad_gato`.
      Course 4 Play Labs For Loops 2_authored_hint:
        Course_4_Play_Labs_For_Loops_2_a: ¿Qué agregarías a tu "for" loop cada vez
          para omitir los números pares?
      Course 4 Playlab For Loops 4b_authored_hint:
        Course_4_Playlab_For_Loops_4b_a: Las banderas están a unos 330 píxeles de
          distancia de los personajes.
        Course_4_Playlab_For_Loops_4b_b: "¿Cómo se puede hacer que cada personaje
          alcance 330 píxeles en el mismo número de movimientos con diferentes números
          de inicio y parada?"
        Course_4_Playlab_For_Loops_4b_c: Recuerde, no importa cuánto se pase un personaje
          de la bandera en su último paso, siempre que le tome a cada personaje el
          mismo número de pasos para llegar a la bandera.
      Course 4 Playlab For Loops 5b_authored_hint:
        Course_4_Playlab_For_Loops_5b_a: Los personajes están a unos 175 píxeles del
          centro.
        Course_4_Playlab_For_Loops_5b_b: Recuerde, el próximo paso de un personaje
          será más largo que el anterior, ya que el contador sigue creciendo.
      Course 4 SCF 1_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tiene lados de 40 pixeles.
        Course_4_SCF_1_b: Hay un salto de 120 píxeles entre cada hexágono en cada
          línea horizontal.
        Course_4_SCF_1_c: |-
          Antes de dibujar la segunda fila de hexágonos, debe girar a la derecha 60 grados y avanzar 40 píxeles.

          Una vez que estás en la ubicación vertical correcta, debes volver a girar a tu artista y retroceder 320 píxeles hacia atrás.
        Course_4_SCF_1_d: 'Antes de dibujar la tercera fila de hexágonos, debes girar
          a la derecha 60 grados y avanzar 40 píxeles. Una vez que estás en la ubicación
          vertical correcta, debes volver a girar en tu artista y retroceder 440 píxeles
          (120 píxeles más que tu función de desplazamiento ''hacia abajo / adelante''). '
        Course_4_SCF_1_e: "\\*\\* Solución: \\*\\*\n\n <xml> \n<block type = \"when_run\"
          deletable = \"false\" movible = \"false\"> \n<next> \n<block type = \"controls_repeat_ext\"
          inline = \"true\"> \n<value name = \"TIMES\" > \n<block type = \"math_number\">
          \n<title name = \"NUM\"> 2 </ title> \n</ block> \n</ value> \n<statement
          name = \"DO\"> \n<block type = \"procedures_callnoreturn\"> \n<mutation
          name = \"dibujar una línea de hexágonos\"> </ mutation> \n<siguiente> \n<block
          type = \"procedures_callnoreturn\"> \n<mutation name = \"shift down / forward\"></
          mutation> \n<next> \n<block type = \"procedures_callnoreturn\"> \n<mutation
          name = \"dibuja una línea de hexágonos\"> </ mutation> \n<next>\n<block
          type = \"procedures_callnoreturn\"> \n<nombre de la mutación = \"shift down
          / backward\"> </ mutation> \n</ block> \n</ next> \n</ block> \n</ next>
          \n</ block> \n</ next> \n</ block > \n</ statement> \n</ block> \n</ next>
          \n</ block> \n<block type = \"procedures_defnoreturn\"> \n<mutation> </
          mutation> \n<title name = \"NAME\"> dibuja un hexágono </ title> \n<nombre
          de la declaración = \"STACK\"> \n<block type = \"controls_repeat_ext\" inline
          = \"true\"> \n<value name = \"TIMES\">\n<block type = \"math_number\"> \n<title
          name = \"NUM\"> 6 </ title> \n</ block> \n</ value> \n<statement name =
          \"DO\">\n<block type = \"draw_move\" inline = \"true\"> \n<title name =
          \"DIR\"> moveForward </ title> \n<value name = \"VALUE\"> \n<block type
          = \"math_number\"> \n<title name = \"NUM\"> 40 </ title> \n</ block> \n</
          value> \n<next> \n<block type = \"draw_turn\" inline = \"true\"> \n<title
          name = \"DIR\"> turnRight </ title> \n<value name = \"VALUE\"> \n<block
          type = \"math_number\"> \n<title name = \"NUM\"> 60 </ title> \n</ block>
          \n</ value> \n</ block>\n</ next> \n</ block> \n</ statement> \n</ block>
          \n</ statement> \n</ block> \n<block type = \"procedures_defnoreturn\">
          \n<mutation></ mutation> \n<title name = \"NAME\"> shift down / backward
          </ title> \n<statement name = \"STACK\"> \n<block type = \"draw_turn\" inline
          = \"true\"> \n<title name = \"DIR\"> turnRight </ title> \n<value name =
          \"VALUE\"> \n<block type = \"math_number\"> \n<title name = \"NUM\"> 60
          </ title> \n</ block> \n</ value> \n<next> \n<block type = \"jump \"inline
          =\" true \"> \n<title name =\" DIR \"> jumpForward </ title> \n<value name
          =\" VALUE \"> \n<block type =\"math_number \"> \n<title name =\" NUM \">
          40 </ title> \n</ block> \n</ value> \n<next> \n<block type =\" draw_turn
          \"inline =\" true \">\n<title name = \"DIR\"> turnLeft </ title> \n<value
          name = \"VALUE\"> \n<block type = \"math_number\"> \n<title name = \"NUM\">
          60 </ title> \n</ block> \n</ value> \n<siguiente> \n<block type = \"jump\"
          inline = \"true\"> \n<title name = \"DIR\"> jumpBackward </ title> \n<value
          name = \"VALUE\"> \n<block type = \"math_number\"> \n<title name = \" NUM
          \"> 440 </ title> \n</ block> \n</ value> \n</ block> \n</ next> \n</ block>
          \n</ next>\n</ block> \n</ next> \n</ block> \n</ statement> \n</ block>
          \n<block type = \"procedures_defnoreturn\"> \n<mutation></ mutation> \n<title
          name = \"NAME\"> dibujar una línea de hexágonos </ title> \n<statement name
          = \"STACK\"> \n<block type = \"controls_repeat_ext\" inline = \"true\">
          \n<value name = \"TIMES\"> \n<block type = \"math_number\"> \n<title name
          = \"NUM\"> 3 </ title> \n</ block> \n</ value> \n<statement name = \"DO\">
          \n<block type = \"procedures_callnoreturn\"> \n<mutation name = \" dibujar
          un hexágono \"> </ mutation> \n<siguiente> \n<tipo de bloque =\" saltar
          \"en línea =\" verdadero \"> \n<nombre del título =\" DIR \">jumpForward
          </ title> \n<value name = \"VALUE\"> \n<block type = \"math_number\"> \n<title
          name = \"NUM\"> 120 </ title> \n</ block>\n</ value> \n</ block> \n</ next>
          \n</ block> \n</ statement> \n</ block> \n</ statement> \n</ block> \n<block
          type = \"procedures_defnoreturn\"> \n<mutation> </ mutation> \n<title name
          = \"NAME\"> shift hacia abajo / adelante </ title> \n<statement name = \"STACK\">
          \n<block type = \"draw_turn\" inline = \"true\"> \n<title name = \"DIR\">
          turnRight </ title> \n<value name = \"VALOR\"> \n<block type = \"math_number\">
          \n<title name = \"NUM\"> 60 </ title> \n</ block> \n</ value> \n<next> \n<block
          type = \"jump\" inline = \"true\"> \n<title name = \"DIR\"> jumpForward
          </ title>\n<value name = \"VALUE\"> \n<block type = \"math_number\"> \n<title
          name = \"NUM\"> 40 </ title> \n</ block> \n</ value> \n<next> \n<block type
          = \"draw_turn\" inline = \" true \"> \n<title name =\" DIR \"> turnLeft
          </ title> \n<value name =\" VALUE \"> \n<block type =\" math_number \">
          \n<title name =\" NUM \"> 60 </ title> \n</ block> \n< / value> \n<next>
          \n<block type = \"jump\" inline = \"true\"> \n<title name = \"DIR\"> jumpBackward
          </ title>\n<value name = \"VALUE\"> \n<block type = \"math_number\"> \n<title
          name = \"NUM\"> 320 </ title> \n</ block> \n</ value> \n</ block>\n</ next>
          \n</ block> \n</ next> \n</ block> \n</ next> \n</ block> \n</ statement>
          \n</ block> \n</ xml>"
      Course 4 SCF 1a_authored_hint:
        Course_4_SCF_1a_a: Recuerde sus funciones desde la etapa 16.
        Course_4_SCF_1a_b: |-
          Mira este camino como tu ruta principal:

          ![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)
        Course_4_SCF_1a_c: Deberías considerar usar un "for loop". No para los pasos,
          sino para el parámetro de la función,.
        Course_4_SCF_1a_d: "\\*\\* Solución: \\*\\*\n\n <xml> \n<block type = \"when_run\"
          deletable = \"false\" movible = \"false\" uservisible = \"false\" y = \"14\">
          \n<next> \n<block type = \"variables_set\" inline = \" falso \"uservisible
          =\" false \"> \n<title name =\" VAR \"> left </ title> \n<value name =\"
          VALUE \"> \n<block type =\" math_number \"uservisible =\" false \"> \n<title
          name =\" NUM \"> 1 </ title> \n</ block> \n</ value> \n<next> \n<block type
          = \"variables_set\" inline = \"false\" uservisible = \"false\"> \n<title
          name = \"VAR\"> derecha </ title> \n<value name = \"VALUE\"> \n<block type
          = \"math_number\" uservisible = \"false\"> \n<title name = \"NUM\"> 0 </
          title> \n</ block>\n</ value> \n</ block> \n</ next> \n</ block> \n</ next>
          \n</ block> \n<block type = \"when_run\" deletable = \"false\" movible =
          \"falso\"> \n<next> \n<block type = \" controls_for \"inline =\" true \">
          \n<title name =\" VAR \"> counter </ title> \n<value name =\" FROM \"> \n<block
          type =\" math_number \"> \n<title name =\" NUM \"> 3 </ title> \n</ block>
          \n</ value> \n<value name = \"TO\"> \n<block type = \"math_number\"> \n<title
          name = \"NUM\"> 21 </ title> \n</ block> \n</ value> \n<value name = \"BY\">
          \n<block type = \"math_number\"> \n<title name = \"NUM\"> 3 </ title> \n</
          block>\n</ value> \n<statement name = \"DO\"> \n<block type = \"maze_move\">
          \n<title name = \"DIR\"> moveForward </ title> \n<next> \n<block type =
          \"maze_if\"> \n<title name = \"DIR \"> isPathLeft </ title> \n<statement
          name =\" DO \"> \n<block type =\" procedures_callnoreturn \"inline =\" false
          \"> \n<nombre de la mutación =\" get nectar \"> \n<arg name =\" dir \">
          </ arg> \n< arg name = \"counter\"> </ arg> \n</ mutation> \n<value name
          = \"ARG0\"> \n<block type = \"variables_get\"> \n<title name = \"VAR\">
          left </ title> \n</ block> \n</ value> \n<value name = \"ARG1\"> \n<block
          type = \"variables_get\"> \n<title name = \"VAR\">contador </ title> \n</
          block> \n</ value> \n</ block> \n</ statement> \n<next> \n<block type =
          \"maze_turn\"> \n<title name = \"DIR\"> turnRight </ title> \n<next> \n<block
          type = \"maze_move\"> \n<title name = \"DIR\"> moveForward </ title> \n<next>
          \n<block type = \"maze_turn\"> \n<title name = \"DIR\"> turnLeft </ title>
          \n<next> \n<block type = \"maze_if\"> \n<title name = \"DIR\"> isPathRight
          </ title> \n<statement name = \"DO \"> \n<block type =\" procedures_callnoreturn
          \"inline =\" false \"> \n<mutation name =\" get néctar \"> \n<arg name =\"
          dir \"> </ arg>\n<arg name = \"counter\"> </ arg> \n</ mutation> \n<value
          name = \"ARG0\"> \n<block type = \"variables_get\"> \n<title name = \"VAR\">
          right </ title> \n</ block> \n< / value> \n<value name = \"ARG1\"> \n<block
          type = \"variables_get\"> \n<title name = \"VAR\"> counter </ title> \n</
          block> \n</ value> \n</ block> \n</ statement> \n</ bloquear> \n</ next>
          \n</ block> \n</ next> \n</ block> \n</ next> \n</ block> \n</ next> \n</
          block> \n</ next> \n</ block> \n</ statement> \n</ block> \n</ next> \n</
          block>\n<block type = \"procedures_defnoreturn\" editable = \"false\" usercreated
          = \"true\"> \n<mutation> \n<arg name = \"dir\"> </ arg> \n<arg name = \"counter\">
          </ arg> \n</ mutation> \n< title name = \"NAME\"> obtener néctar </ title>
          \n<statement name = \"STACK\"> \n<block type = \"controls_if\" inline =
          \"false\"> \n<mutation else = \"1\"> </ mutation> \n<value name = \"IF0\">
          \n<block type = \"logical_compare\" inline = \"true\" movible = \"falso\">
          \n<title name = \"OP\"> EQ </ title> \n<value name = \"A\"> \n<block type
          = \"parameters_get\"> \n<title name = \"VAR\"> dir </ title> \n</ block>
          \n</ value> \n<value name = \"B\">\n<block type = \"variables_get\"> \n<title
          name = \"VAR\"> left </ title> \n</ block> \n</ value> \n</ block> \n</
          value> \n<statement name = \"DO0\"> \n<block type = \" maze_turn \"> \n<title
          name =\" DIR \"> turnLeft </ title> \n</ block> \n</ statement> \n<statement
          name =\" ELSE \"> \n<block type =\" maze_turn \"> \n<title name =\" DIR
          \"> turnRight < / title> \n</ block> \n</ statement> \n<next> \n<block type
          = \"controls_repeat_ext\" inline = \"true\">\n<value name = \"TIMES\"> \n<block
          type = \"math_number\"> \n<title name = \"NUM\"> 3 </ title> \n</ block>
          \n</ value>\n<statement name = \"DO\"> \n<block type = \"maze_move\"> \n<title
          name = \"DIR\"> moveForward </ title> \n</ block> \n</ statement> \n<next>
          \n<block type = \"controls_repeat_ext\" inline = \" true \"> \n<value name
          =\" TIMES \"> \n<block type =\" parameters_get \"> \n<title name =\" VAR
          \"> contador </ title> \n</ block> \n</ value> \n<statement name =\" DO
          \"> \n<block type = \"maze_nectar\"> </ block> \n</ statement> \n<next>
          \n<block type = \"controls_repeat_ext\" inline = \"true \"> \n<value name
          =\" TIMES \"> \n<block type =\" math_number \"> \n<title name =\" NUM \">
          3 </ title> \n</ block> \n</ value>\n<statement name = \"DO\"> \n<block
          type = \"maze_move\"> \n<title name = \"DIR\"> moveBackward </ title> \n</
          block> \n</ statement> \n<next> \n<block type = \"controls_if\" inline =
          \" falso \"> \n<mutation else =\" 1 \"> </ mutation> \n<value name =\" IF0
          \"> \n<block type =\" logical_compare \"inline =\" true \"movible =\" falso
          \"> \n<title name =\" OP \"> EQ </ title> \n<value name = \"A\"> \n<block
          type = \"parameters_get\"> \n<title name = \"VAR\"> dir </ title> \n</ block>
          \n</ value> \n<value name = \"B\"> \n<block type = \"variables_get\"> \n<title
          name = \"VAR\"> left </ title> \n</ block> \n</ value>\n</ block> \n</ value>
          \n<statement name = \"DO0\"> \n<block type = \"maze_turn\"> \n<title name
          = \"DIR\"> turnRight </ title> \n</ block> \n</ statement> \n<statement
          name = \" ELSE \"> \n<block type =\" maze_turn \"> \n<title name =\" DIR
          \"> turnLeft </ title> \n</ block> \n</ statement> \n</ block> \n</ next>
          \n</ block> \n</ next> \n</ bloquear> \n</ next> \n</ block> \n</ next>
          \n</ block> \n</ statement> \n</ block> \n</ xml>"
      Course 4 SCF 1b_authored_hint:
        Course_4_SCF_1b_a: "Ten en cuenta que la forma de todos los puntos de miel
          es similar.   \n\nBuen lugar para una función!"
        Course_4_SCF_1b_b: "Mire esta idea de cómo podría viajar la abeja:!   \n\n\\[]
          (Https\\://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: Deberías considerar usar un "for loop" para la distancia
          que recorre la abeja.
        Course_4_SCF_1b_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="make honey up and over"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">make honey up and over</title>
          <statement name="STACK">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 2_authored_hint:
        Course_4_SCF_2_a: Cada octágono tiene lados de 40 pixeles.
        Course_4_SCF_2_b: Hay un salto de 136 píxeles entre cada octágono en cada
          línea horizontal.
        Course_4_SCF_2_c: "Antes de dibujar la segunda fila de octágonos, debes girar
          a la derecha 45 grados y avanzar 96 píxeles.   \n\nUna vez que estás en
          la ubicación vertical correcta, debes volver a girar tu artista y retroceder
          408 píxeles. "
        Course_4_SCF_2_d: "Tenga en cuenta que debido a que hay menos octágonos en
          las filas pares, no tiene que retroceder más para llegar al punto de partida
          de las filas impares.   \n\nEsto significa que puede usar la misma función
          \ para todas las filas."
        Course_4_SCF_2_e: |-
          **Solucion:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="numOctagons"></arg>
          </mutation>
          <title name="NAME">draw octagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">numOctagons</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw an octagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">136</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">shift down</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">96</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">408</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 3_authored_hint:
        Course_4_SCF_3_a: "! \\[] (<https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif>)"
        Course_4_SCF_3_b: 'Esta es una serie de octógonos con lados que son ''contador''
          píxeles de largo. '
        Course_4_SCF_3_c: 'Cada octágono se llama desde adentro de un loop "para"
          que va desde 200 hacia abajo de 2 en 2. '
        Course_4_SCF_3_d: 'No olvides dar vuelta por 22.5 grados al final de cada
          repetición. '
        Course_4_SCF_3_e: Tanto el color de cada octágono como el ancho del lápiz
          están controlados por la variable \`contador '.
        Course_4_SCF_3_f: |-
          **Solución:**

          <xml>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="length"></arg>
          </mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw an octagon">
          <arg name="length"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">22.5</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1_authored_hint:
        Course_4_SCFL_1_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_1_b: 'Trata de usar dos loops "para": Uno para escalar y agarrar
          el néctar, y otro para descender y hacer miel.'
        Course_4_SCFL_1_c: |-
          Observa que un loop "para" necesita varios loops regulares dentro del 'contador' de repetición; las veces para hacer aumentar el patrón de escalera.

          El otro loop "para" solo necesita un loop regular para hacer un 'contador' cantidad de miel.
        Course_4_SCFL_1_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a_authored_hint:
        Course_4_SCFL_1a_a: Puede que tenga que viajar más lejos en general para usar
          la menor cantidad de bloques.
        Course_4_SCFL_1a_b: |-
          Echa un vistazo a esta opción de movimiento:
          ![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)
        Course_4_SCFL_1a_c: Un "for loop" le ayudará a ejecutar el mismo patrón, pero
          con un variable número de pasos. Fíjese que el número de pasos requerido
          disminuye de 7 a 5 por 1.
        Course_4_SCFL_1a_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b_authored_hint:
        Course_4_SCFL_1b_a: Intente usar "for loop".
        Course_4_SCFL_1b_b: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)
        Course_4_SCFL_1b_c: '\*\* Solución: \*\* <xml> <block type = "when_run" deletable
          = "false" movible = "false"> <next> <block type = "controls_for" inline
          = "true"> <title name = "VAR" > contador \</ title> <value name = "FROM">
          <block type = "math_number"> <title name = "NUM"> 3 \</ title> \</ block>
          \</ value> <value name = "TO" > <block type = "math_number"> <title name
          = "NUM"> 1 \</ title> \</ block> \</ value> <value name = "BY"> <block type
          = "math_number"> <title name = "NUM"> 1 \</ title> \</ block> \</ value>
          <statement name = "DO"> <block type = "controls_repeat_ext" inline = "true">
          <value name = "TIMES"> <block type = "variables_get"> <title name = "VAR">
          contador \</ title> \</ block> \</ value> <statement name = "DO"> <block
          type = "maze_moveForward "/> \</ statement> <next> <block type =" maze_turn
          "> <title name =" DIR "> turnLeft \</ title> <next> \<block type =" controls_repeat_ext
          "inline =" true "> <value name = "TIMES"> <block type = "variables_get">
          <title name = "VAR"> counter \</ title> \</ block> \</ value> <statement
          name = "DO"> \<block type = "maze_moveForward" / > \</ statement> <next>
          \<block type = "maze_turn"> <title name = "DIR"> turnRight \</ title> \</
          block> \</ next> \</ block> \</ next> \</ block> \</ next> \</ block> \</
          statement> \</ block> \</ next> \</ block> \</ xml>'
      Course 4 SCFL 2_authored_hint:
        Course_4_SCFL_2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)
        Course_4_SCFL_2_b: Observe que hay tres puntos durante cada iteración de este
          loop "for" donde usted se detiene a interactuar con objetos.
        Course_4_SCFL_2_c: Durante cada iteración del loop "for", el número para cada
          objeto se relaciona con la variable "contador" de alguna manera.
        Course_4_SCFL_2_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">POWER</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3_authored_hint:
        Course_4_SCFL_3_a: El "ancho del lápiz" es 1. El primer cuadrado tiene lados
          de 50 pixeles, y cada cuadrado es 50 pixeles más ancho que el anterior.
        Course_4_SCFL_3_b: La opacidad en el pincel siempre es `contador` / 2.
        Course_4_SCFL_3_c: Después de hacer cada cuadrado, no te olvides de saltar
          hacia atrás, girar, saltar de nuevo, ¡y luego retroceder!
        Course_4_SCFL_3_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4_authored_hint:
        Course_4_SCFL_4_a: El cambio de color ocurre usando el bloque `establecer
          color con rojo, verde, azul`. El rojo siempre tiene el valor de 'contador',
          el verde siempre es '255 - contador\`, y el azul permanece constante en
          255 exactamente.
        Course_4_SCFL_4_b: Cada figura es un cuadro con los lados de 'contador' píxeles
          de largo, comenzando con 5px, e incrementándose por 5px todo el camino hasta
          200px.
        Course_4_SCFL_4_c: El artista gira 15 grados entre cada cuadro.
        Course_4_SCFL_4_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6_authored_hint:
        Course_4_SCFL_6_a: El cambio de color se presenta con el bloque 'definir color
          con rojo, verde, azul'. Rojo es la constante definida como 255, verde es
          siempre el valor de 'contador', y azul es siempre '255-contador'.
        Course_4_SCFL_6_b: El código para esto es más simple de lo que piensa. Defina
          el color dentro del "for loop", avance y luego gire.
        Course_4_SCFL_6_c: 'El "loop para" va desde 5 a 250 por 2. '
        Course_4_SCFL_6_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7_authored_hint:
        Course_4_SCFL_7_a: El cambio de color ocurre usando el bloque `establecer
          color con rojo, verde, azul`. El rojo siempre tiene el valor de 'contador',
          el verde siempre es '255 - contador\`, y el azul permanece constante en
          255 exactamente.
        Course_4_SCFL_7_b: 'Este dibujo está hecho usando dos "for loops". Uno que
          va desde 5 a 200 por 2, y el otro que va de 200 a 5 por 2. '
        Course_4_SCFL_7_c: Dentro de cada "for loop" avanzas 5 pixeles antes de girar
          en "360/contador". ¡No olvides poner tu pincel en el "contador" de ancho
          antes de hacerlo!
        Course_4_SCFL_7_d: Tendrás que girar a la izquierda 225 grados entre los dos
          "for loops".
        Course_4_SCFL_7_e: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_number_dropdown">
          <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">225</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1_authored_hint:
        Course_4_SCV_1_a: 'Las variables son útiles porque las puedes agregar cada
          vez mediante un loop. '
        Course_4_SCV_1_b: Este acertijo tiene un loop que crea un polígono, un loop
          que repite el poligono las veces de "lados", y otro loop que hace todo otra
          vez luego de agregar 5 a los "lados".
        Course_4_SCV_1_c: Usar una variable para "lados" y otra para "longitud" hace
          que el código sea más limpio porque puede hacer loop del mismo código varias
          veces, en vez de crear una nueva copia para cada conjunto de números.
        Course_4_SCV_1_d: |-
          **Solucion:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2_authored_hint:
        Course_4_SCV_2_a: "La imagen completa se compone de 10 de estas \"flores\":
          \ \n! \\[] (Https\\://images.code.org/bac2a606dfa59c00409294499540267d-
          imagen -1469641972385.png)\n\n... que se hicieron de 10 de estos decágonos:
          \ \n! \\[] (<https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4->
          image -1469642051512.png)"
        Course_4_SCV_2_b: 'Este diseño utiliza loops anidados (tres profundos). Todos
          los loops se ejecutan "lados" veces. '
        Course_4_SCV_2_c: El artista gira a la izquierda cuando crea cada decágono,
          pero gira a la derecho en los otros dos loops.
        Course_4_SCV_2_d: Para evitar que todas las "flores" de 10 pétalos sean dibujadas
          en el mismo lugar, asegúrese de avanzar por "longitud"/"lados" antes de
          girar 360 grados/"lados" como parte de su loop externo.
        Course_4_SCV_2_e: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">400</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3_authored_hint:
        Course_4_SCV_3_a: 'Utiliza el bloque de matemáticas para sumar y restar puntos
          a la variable ´points´ cuando los sprites choquen. '
        Course_4_SCV_3_b: Puedes cambiar el parámetro de cuán lejos se mueve tu sprite
          cada vez que una de las flechas es presionada.
        Course_4_SCV_3_c: |-
          **Solución:**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">points</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">points</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4_authored_hint:
        Course_4_SCV_4_a: Tres variables le ayudarán aquí. Una para las unidades de
          néctar, una para unidades de miel, y una para cuán lejos la abeja debería
          moverse en cada iteración.
        Course_4_SCV_4_b: 'Será muy útili usar tres loops dentro de su loop principal.
          Uno para avanzar, uno para recolectar néctar y uno para hacer miel. '
        Course_4_SCV_4_c: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)
        Course_4_SCV_4_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5_authored_hint:
        Course_4_SCV_5_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: Cada vez a través del loop, las flores tienen dos veces
          menos néctar y la abeja necesita hacer una miel más.
        Course_4_SCV_5_c: Fíjese que al comienzo del loop externo, la abeja se mueve
          tantas veces como néctar hay en la siguiente flor.
        Course_4_SCV_5_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6_authored_hint:
        Course_4_SCV_6_a: "¡Observe cómo se ve una sola forma completa! \\[] (Https\\://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)"
        Course_4_SCV_6_b: 'Se beneficiará al crear 8 variables: rojo1, verde1, azul1,
          rojo2, verde2, azul2, longitud y lados.'
        Course_4_SCV_6_c: Cada uno de los 5 lados de la forma se divide en pedazos
          de "longitud" / " lados " donde el zig es verde azulado (rgb = 0,175,200)
          y el zag es morado (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'Para zig, gire a la izquierda por ``360` / lados `. Para
          zag, girar a la derecha por`` 360`/ lados`. '
        Course_4_SCV_6_e: 'El resto del programa es muy estándar para hacer una rotación
          completa de 360 ​​grados de esa forma, excepto que estamos superponiendo
          las formas a la mitad, por lo que tenemos que girar a la derecha por `180`
          /`lados`, lo que significa que necesitamos dos veces tantos de ellos como
          de costumbre (repeticiones `lados` \*`2`). '
        Course_4_SCV_6_f: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">100</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">150</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">70</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red1</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green1</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red2</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green2</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">180</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course E MC Conditionals1_authored_hint:
        mc_9_a: "¿Estás frente al camino correcto? El 'bloque destruir' hace explotar
          el bloque en frente tuyo."
        mc_9_b: ¡Las manchas negras en la muralla son carbón! Utiliza "destruir bloque"
          en ellas para minar el carbón.
        mc_9_c: Utilizar 'poner antorcha' para poner una antorcha en el espacio donde
          estás parado.
      CourseD_Dance_Party_01_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Asegúrate de que un bailarín aparece en la pantalla.

          _Este nivel termina después de 4 medidas._
        challenges: |-
          **Retos Opcionales**

          -   Elige una canción diferente para jugar.
          -   ¡Elige uno distinto que parezca un alce!
          -   Cambia el nombre de tu bailarín.
      CourseD_Dance_Party_02_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   El bailarín necesita cambiar a un nuevo movimiento después de 4 medidas.

          _Este nivel termina después de 8 medidas._
      CourseD_Dance_Party_03_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Después de 6 medidas, tu bailarín necesita estar haciendo un baile distinto después de 4 medidas.

          _Este nivel termina después de 12 medidas._
      CourseD_Dance_Party_04_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitas cambiar el efecto de fondo en algún momento de la séptima medida de la canción.

          _Este nivel termina después de 10 medidas._
        challenges: |-
          **Reto Opcional**

          Cambia el efecto de fondo en diferentes puntos durante la canción conectando el nuevo bloque en <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> eventos.
      CourseD_Dance_Party_06_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitarás tener al menos dos bailarines.

          _Este nivel termina después de 6 medidas._
        challenges: |-
          **Reto Opcional**

          -   Añadir un tercer bailarín (o tantos como quieras)
          -   Haz que todos tus bailarines realicen diferentes movimientos en diferentes puntos de la canción.
      CourseD_Dance_Party_08_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Dos bailarines deben tener un tamaño diferente a 100.

          _Este nivel termina después de 6 medidas._
        challenges: |-
          **Reto Opcional**

          -   Experimenta cambiando otras propiedades (ancho, altura, rotación, etcétera.)
      CourseD_Dance_Party_09_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Cambiar el color de al menos un bailarín

          _Este nivel termina después de 8 medidas._
      CourseD_Dance_Party_10_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Las propiedades de dos o más bailarines deben cambiar.

          _Este nivel termina después de 8 medidas._
      CourseD_Dance_Party_11_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Se creativo!

          _Este nivel termina después de 8 medidas._
      CourseD_Dance_Party_11_5_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Se creativo!

          _Este nivel termina después de 8 medidas._
      CourseD_Dance_Party_11b_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Utiliza el bloque 'cuando presiona la flecha izquierda' para hacer que el Robot haga un movimiento de baile cuando lo pulses.

          _Este nivel termina después de 8 medidas._
      CourseE_HOC 2018 Level_10_authored_hint:
        voyage_aquatic_10a: "¿Ves las **linternas marinas** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          ¿Qué condicional usarías con ellas para atravesar el Monumento Oceánico?"
      CourseE_HOC 2018 Level_7a_authored_hint:
        aquatic7: Puedes usar el bloque de ruta if para ayudarte a hacer los giros
          correctos.
      CourseE_HOC 2018 Level_9b_authored_hint:
        voyage_aquatic_9a: "¡Qué hermoso arrecife de coral! El coral azul será tu
          mano **derecha** en este viaje. ¡No te fíes de la **siniestra** presencia
          del coral rojo!"
      CourseF_PlayLab_vars2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Asegúrese de establecer el número de `velocidad_perro`a
          algo más grande que`velocidad_gato`.
      D_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project3_b: "¡Prueba los bucles anidados! \n\nUsa el código
          que creaste para dibujar una línea de formas y anidara dentro de otro bucle.
          En la parte inferior, antes de que termine el bucle exterior, agrega un
          bloque que hará girar a Elsa.   \n\n-   Prueba con 72 grados si repites
          el bucle externo 5 veces \n-   Prueba con 60 grados si repites el bucle
          externo 6 veces"
      D_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: "Este es el copo de nieve pentagonal con un giro
          de 36 grados antes de un copo de nieve triangular:\n\n <img src = \"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\"
          width = \"200px\" /> \n\nEste es un conjunto de hexágonos con cuadrados:\n\n
          <img src = \"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\"
          width = \"200px\" />"
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve,
          gira y luego dibuja un segundo copo de nieve.
      D_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |-
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      D_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |-
          Este escalón utiliza un giro de 76 grados y se repite 4 veces.

          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los escalones
          de otros desafíos, pero usando un ángulo diferente.
      D_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |-
          Este dibujo se hizo anidando un loop de 4 escalones y un bloque `girar a la derecha 180 grados` dentro de un bloque`repetir 2 veces`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      D_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: "¡Puedes elegir diferentes cantidades para rotar
          tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?"
      D_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |-
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      Dance short test 2_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitas cambiar el efecto de fondo en algún momento de la séptima medida de la canción.

          _Este nivel termina después de 10 medidas._
        challenges: |-
          **Reto Opcional**

          Cambia el efecto de fondo en diferentes puntos durante la canción conectando el nuevo bloque en <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> eventos.
      Dance short test_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitas cambiar el efecto de fondo en algún momento de la séptima medida de la canción.

          _Este nivel termina después de 10 medidas._
        challenges: |-
          **Reto Opcional**

          Cambia el efecto de fondo en diferentes puntos durante la canción conectando el nuevo bloque en <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> eventos.
      Dance_Party_01_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Asegúrate de que un bailarín aparece en la pantalla.

          _Este nivel termina después de 4 medidas._
        challenges: |-
          **Retos Opcionales**

          -   Elige una canción diferente para jugar.
          -   ¡Elige uno distinto que parezca un alce!
          -   Cambia el nombre de tu bailarín.
      Dance_Party_01_low_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Asegúrate de que un bailarín aparece en la pantalla.

          _Este nivel termina después de 4 medidas._
        challenges: |-
          **Retos Opcionales**

          -   Elige una canción diferente para jugar.
          -   ¡Elige uno distinto que parezca un alce!
          -   Cambia el nombre de tu bailarín.
      Dance_Party_02_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   El bailarín necesita cambiar a un nuevo movimiento después de 4 medidas.

          _Este nivel termina después de 8 medidas._
      Dance_Party_03_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Después de 6 medidas, tu bailarín necesita estar haciendo un baile distinto después de 4 medidas.

          _Este nivel termina después de 12 medidas._
      Dance_Party_04_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitas cambiar el efecto de fondo en algún momento de la séptima medida de la canción.

          _Este nivel termina después de 10 medidas._
        challenges: |-
          **Reto Opcional**

          Cambia el efecto de fondo en diferentes puntos durante la canción conectando el nuevo bloque en <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> eventos.
      Dance_Party_06_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitarás tener al menos dos bailarines.

          _Este nivel termina después de 6 medidas._
        challenges: |-
          **Reto Opcional**

          -   Añadir un tercer bailarín (o tantos como quieras)
          -   Haz que todos tus bailarines realicen diferentes movimientos en diferentes puntos de la canción.
      Dance_Party_08_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Dos bailarines deben tener un tamaño diferente a 100.

          _Este nivel termina después de 6 medidas._
        challenges: |-
          **Reto Opcional**

          -   Experimenta cambiando otras propiedades (ancho, altura, rotación, etcétera.)
      Dance_Party_09_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Cambiar el color de al menos un bailarín

          _Este nivel termina después de 8 medidas._
      Dance_Party_1_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Asegúrate de que un bailarín aparece en la pantalla.

          _Este nivel termina después de 4 medidas._
        challenges: |-
          **Retos Opcionales**

          -   Elige una canción diferente para jugar.
          -   ¡Elige uno distinto que parezca un alce!
          -   Cambia el nombre de tu bailarín.
      Dance_Party_10_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Las propiedades de dos o más bailarines deben cambiar.

          _Este nivel termina después de 8 medidas._
      Dance_Party_11.5_test_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Se creativo!

          _Este nivel termina después de 8 medidas._
      Dance_Party_11_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Se creativo!

          _Este nivel termina después de 8 medidas._
      Dance_Party_11_5_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Se creativo!

          _Este nivel termina después de 8 medidas._
      Dance_Party_11b_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Utiliza el bloque 'cuando presiona la flecha izquierda' para hacer que el Robot haga un movimiento de baile cuando lo pulses.

          _Este nivel termina después de 8 medidas._
      Dance_Party_2_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   El bailarín necesita cambiar a un nuevo movimiento después de 4 medidas.

          _Este nivel termina después de 8 medidas._
      Dance_Party_3_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Después de 6 medidas, tu bailarín necesita estar haciendo un baile distinto después de 4 medidas.

          _Este nivel termina después de 12 medidas._
      Dance_Party_4_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitas cambiar el efecto de fondo en algún momento de la séptima medida de la canción.

          _Este nivel termina después de 10 medidas._
        challenges: |-
          **Reto Opcional**

          Cambia el efecto de fondo en diferentes puntos durante la canción conectando el nuevo bloque en <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> eventos.
      Dance_Party_5_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Tu baile debe tener movimientos diferentes a lo largo de las 12 primeras medidas de la canción.

          _Este nivel termina después de 12 medidas._
      Dance_Party_6_authored_hint:
        challenges: |-
          **Reto Opcional**

          -   Añadir un tercer bailarín (o tantos como quieras)
          -   Haz que todos tus bailarines realicen diferentes movimientos en diferentes puntos de la canción.
      Dance_Party_8_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Dos bailarines deben tener un tamaño diferente a 100.

          _Este nivel termina después de 6 medidas._
        challenges: |-
          **Reto Opcional**

          -   Experimenta cambiando otras propiedades (ancho, altura, rotación, etcétera.)
      Dance_Party_9_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Cambiar el color de al menos un bailarín

          _Este nivel termina después de 8 medidas._
      Farmer for Authored Hint testing_authored_hint:
        first_hint: Esta es la primera pista. Tiene \* algo de \* \*\* basic \*\*
          \`margen
        second_hint: Esta es la segunda pista . Tiene una imagen . ! \[] (<https://images.code.org/cab43107265a683a6216e18faab2353f->
          image -1452027548372.png)
        last_hint: Esta es la tercera y última pista. No tiene nada especial.
      Farmer for TTS testing_authored_hint:
        first_hint: Esta es la primera pista. Tiene \* algo de \* \*\* basic \*\*
          \`margen
        second_hint: Esta es la segunda pista . Tiene una imagen . ! \[] (<https://images.code.org/cab43107265a683a6216e18faab2353f->
          image -1452027548372.png)
        last_hint: Esta es la tercera y última pista. No tiene nada especial.
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_b: Si llama a las funciones correctamente, este es el
          camino por el que viajará...
        Function_intro_Ryan_a: "¡Puedes usar una función varias veces dentro de tu
          programa!  Trata de usarla dos veces para resolver este acertijo."
      Function intro Ryan_2019_authored_hint:
        Function_intro_Ryan_b: Si llama a las funciones correctamente, este es el
          camino por el que viajará...
        Function_intro_Ryan_a: "¡Puedes usar una función varias veces dentro de tu
          programa!  Trata de usarla dos veces para resolver este acertijo."
      HOC 2018 Level_10_authored_hint:
        voyage_aquatic_10a: "¿Ves las **linternas marinas** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          ¿Qué condicional usarías con ellas para atravesar el Monumento Oceánico?"
      HOC 2018 Level_7a_authored_hint:
        aquatic7: Puedes usar el bloque de ruta if para ayudarte a hacer los giros
          correctos.
      HOC 2018 Level_9b_authored_hint:
        voyage_aquatic_9a: "¡Qué hermoso arrecife de coral! El coral azul será tu
          mano **derecha** en este viaje. ¡No te fíes de la **siniestra** presencia
          del coral rojo!"
      HOC Dance 0_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Asegúrate de que un bailarín aparece en la pantalla.

          _Este nivel termina después de 4 medidas._
        challenges: |-
          **Retos Opcionales**

          -   Elige una canción diferente para jugar.
          -   ¡Elige uno distinto que parezca un alce!
          -   Cambia el nombre de tu bailarín.
      HOC Dance 1_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   El bailarín necesita cambiar a un nuevo movimiento después de 4 medidas.

          _Este nivel termina después de 8 medidas._
      HOC Dance 2_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Después de 6 medidas, tu bailarín necesita estar haciendo un baile distinto después de 4 medidas.

          _Este nivel termina después de 12 medidas._
      HOC Dance 3_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitas cambiar el efecto de fondo en algún momento de la séptima medida de la canción.

          _Este nivel termina después de 10 medidas._
        challenges: |-
          **Reto Opcional**

          Cambia el efecto de fondo en diferentes puntos durante la canción conectando el nuevo bloque en <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> eventos.
      HOC Dance 4_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Tu baile debe tener movimientos diferentes a lo largo de las 12 primeras medidas de la canción.

          _Este nivel termina después de 12 medidas._
      HOC Dance 5_draft_authored_hint:
        challenges: |-
          **Reto Opcional**

          -   Añadir un tercer bailarín (o tantos como quieras)
          -   Haz que todos tus bailarines realicen diferentes movimientos en diferentes puntos de la canción.
      HOC Dance 6_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Dos bailarines deben tener un tamaño diferente a 100.

          _Este nivel termina después de 6 medidas._
        challenges: |-
          **Reto Opcional**

          -   Experimenta cambiando otras propiedades (ancho, altura, rotación, etcétera.)
      HOC Dance 7_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Cambiar el color de al menos un bailarín

          _Este nivel termina después de 8 medidas._
      HOC Dance 8_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Las propiedades de dos o más bailarines deben cambiar.

          _Este nivel termina después de 8 medidas._
      HOC Dance 9_draft_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Se creativo!

          _Este nivel termina después de 8 medidas._
      HOC Dance make group_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Se creativo!

          _Este nivel termina después de 8 medidas._
      Harvesting_authored_hint:
        pointer_harvester_test: "¿Qué tipo de bloque puedo usar para verificar algo
          y tomar una decisión?"
      Inspirational Artwork_authored_hint:
        brush_width: Establecemos el grosor del pincel a 1, luego el color azul antes
          de hacer cualquier otra cosa.
        double_loop: Trate de poner un "for loop" dentro de un loop de "repetición".
        specifics: |-
          El "for loop" se ejecuta de tres a diecisiete para cada uno de los 6 "pétalos" antes de crear el siguiente, dibujando figuras sólo con un número impar de lados.

          El bloque "set alpha" utiliza la división para ir atenuando el color a medida que el contador aumenta.
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20
          píxeles antes de hacer una rotación de 60 grados.
        solution: "\\*\\* Solución \\*\\*! [ Imagen de Bloques de Solución ] \\(<https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc->
          image -1469641375258.png)"
      K2.0 sequence 1_authored_hint:
        K2.0_sequence_1_a: A este programa le falta un bloque. ¿Puedes averiguar cuál?
      K2.0 sequence 10_authored_hint:
        K2.0_sequence_10_a: Si tienes problemas, primero intenta anotar los pasos
          en una hoja de papel.
      K2.0 sequence 2_authored_hint:
        K2.0_sequence_2_a: Uno de los bloques está moviendo al pájaro en la dirección
          incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
      K2.0 sequence 3_authored_hint:
        K2.0_sequence_3_a: Si tiene problemas, intente descubrir cuál es la ruta correcta
          y luego elimine el bloque que no encaja.
      K2.0 sequence 5_authored_hint:
        K2.0_sequence_5: Tu código final debe tener tres bloques de movimiento.
      K2.0 sequence 6_authored_hint:
        K2.0_sequence_6_a: Hay 1 bloque que debes agregar para mover el pájaro al
          cerdo.
        K2.0_sequence_6_b: Si no puede descubrir qué hacer, intente dibujar el rompecabezas
          en papel y use su dedo para descubrir en qué dirección moverse.
      K2.0 sequence 7_authored_hint:
        K2.0_sequence_7_a: Si estás atascado, intenta dibujar la imagen en papel para
          ver cómo se debe mover el pájaro.
      K2.0 sequence 8_authored_hint:
        K2.0_sequence_8_a: "¿Atascado? Intenta trazar el camino del pájaro con tu
          dedo."
      K2.0 sequence 9_authored_hint:
        K2.0_sequence_9_a: Si tienes problemas, primero intenta anotar los pasos en
          una hoja de papel.
      K2.0 sequence FP_authored_hint:
        K2.0_sequence_FP_a: Si el camino que necesita no está claro, use su dedo para
          seguir el camino del pájaro hasta el cerdo.
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: Intenta que el Agent construya algunos caminos minecart
          para que puedas explorar el mundo!
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: Usa las teclas de flecha para dirigir al jugador a
          la casa. Termina en el cuadrado naranja para ganar.
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: Arrastra un bloque de "avanzar" de la caja de herramientas
          al espacio de trabajo y colócalo debajo del bloque de "al ejecutar".
        MC_HOC_2017_01_RETRY_b: Haz clic en "Ejecutar" para ejecutar el código para
          el Agent.
        MC_HOC_2017_01_RETRY_c: "¡Una vez que el Agent haya ejecutado todo su código,
          podrás mover al jugador con las teclas de flecha!"
      MC_HOC_2017_01_RETRY_2019_authored_hint:
        MC_HOC_2017_01_RETRY_a: Arrastra un bloque de "avanzar" de la caja de herramientas
          al espacio de trabajo y colócalo debajo del bloque de "al ejecutar".
        MC_HOC_2017_01_RETRY_b: Haz clic en "Ejecutar" para ejecutar el código para
          el Agent.
        MC_HOC_2017_01_RETRY_c: "¡Una vez que el Agent haya ejecutado todo su código,
          podrás mover al jugador con las teclas de flecha!"
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: Mueve al Agent dos espacios hacia adelante para que
          se pare sobre la placa de presión.  Eso le abrirá la puerta a tu jugador.
        MC_HOC_2017_02_Cole_b: "¡Presiona \"Ejecutar\"! \nPuedes ejecutar tu código
          aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta
          que descubras qué está mal."
        MC_HOC_2017_02_Cole_c: Una vez que el Agent haya abierto la puerta, ¡usa las
          teclas de flecha para mover al jugador hasta el mapa!
        MC_HOC_2017_02_Cole_d: "¡Asegúrate de que el agente esté siguiendo la ruta
          delineada en el mapa!"
      MC_HOC_2017_02_Cole_2019_authored_hint:
        MC_HOC_2017_02_Cole_a: Mueve al Agent dos espacios hacia adelante para que
          se pare sobre la placa de presión.  Eso le abrirá la puerta a tu jugador.
        MC_HOC_2017_02_Cole_b: "¡Presiona \"Ejecutar\"! \nPuedes ejecutar tu código
          aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta
          que descubras qué está mal."
        MC_HOC_2017_02_Cole_c: Una vez que el Agent haya abierto la puerta, ¡usa las
          teclas de flecha para mover al jugador hasta el mapa!
        MC_HOC_2017_02_Cole_d: "¡Asegúrate de que el agente esté siguiendo la ruta
          delineada en el mapa!"
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: Mueve al Agent dos espacios hacia adelante para que
          se pare sobre la placa de presión.  Eso le abrirá la puerta a tu jugador.
        MC_HOC_2017_02_Cole_b: "¡Presiona \"Ejecutar Agent\"! \nPuedes ejecutar tu
          código aunque no sea correcto.  Ejecuta y restablece tu código una y otra
          vez hasta que descubras qué está mal."
        MC_HOC_2017_02_Cole_c: Una vez que el Agent haya abierto la puerta, usa las
          teclas de flecha para mover al jugador al cuadrado naranja.
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: Una vez que lleves al Agent a la placa de presión,
          ¡puedes usar las teclas de flecha para mover al jugador hasta la brújula!
        MC_HOC_2017_03_Cole_b: ¿Crees que el código es demasiado largo? Intenta usar
          el loop "repetir" para ver la manera de acortarlo!
      MC_HOC_2017_03_Cole_2019_authored_hint:
        MC_HOC_2017_03_Cole_a: Una vez que lleves al Agent a la placa de presión,
          ¡puedes usar las teclas de flecha para mover al jugador hasta la brújula!
        MC_HOC_2017_03_Cole_b: ¿Crees que el código es demasiado largo? Intenta usar
          el loop "repetir" para ver la manera de acortarlo!
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: "Cruzar esas dos placas de presión le despejará
          el camino al jugador. \n![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)"
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: Usa el bloque "Girar a la derecha" para cambiar
          la dirección del Agent
        MC_HOC_2017_04POINT5_RYAN_a: El Agent solo necesita llegar a la primera placa
          de presión para permitir que Alex o Steve pasen por el hacha.
      MC_HOC_2017_04POINT5_RYAN_2019_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: Usa el bloque "Girar a la derecha" para cambiar
          la dirección del Agent
        MC_HOC_2017_04POINT5_RYAN_a: El Agent solo necesita llegar a la primera placa
          de presión para permitir que Alex o Steve pasen por el hacha.
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: El Agent necesita "avanzar" 7 veces. ¿Cómo puedes usar
          un loop "repetir" para que esto ocurra?
        MC_HOC_2017_04_Cole_c: "¡Presiona \"Ejecutar\"! \nPuedes ejecutar tu código
          aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta
          que descubras qué está mal."
        MC_HOC_2017_04_Cole_b: Una vez que el Agent llegue a la placa de presión,
          le abrirá la puerta al jugador.
      MC_HOC_2017_04_Cole_2019_authored_hint:
        MC_HOC_2017_04_Cole_a: El Agent necesita "avanzar" 7 veces. ¿Cómo puedes usar
          un loop "repetir" para que esto ocurra?
        MC_HOC_2017_04_Cole_c: "¡Presiona \"Ejecutar\"! \nPuedes ejecutar tu código
          aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta
          que descubras qué está mal."
        MC_HOC_2017_04_Cole_b: Una vez que el Agent llegue a la placa de presión,
          le abrirá la puerta al jugador.
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: ¿Sabías que puedes poner más de una parte de un código
          dento de un loop? Intenta avanzar **y** e ir colocando una placa dentro
          de "repetir" para completar el acertijo.
        MC_HOC_2017_05_Cole_b: Lleva al agente al otro lado del río y construye un
          puente sobre la marcha.
      MC_HOC_2017_05_Cole_2019_authored_hint:
        MC_HOC_2017_05_Cole_a: ¿Sabías que puedes poner más de una parte de un código
          dento de un loop? Intenta avanzar **y** e ir colocando una placa dentro
          de "repetir" para completar el acertijo.
        MC_HOC_2017_05_Cole_b: Lleva al agente al otro lado del río y construye un
          puente sobre la marcha.
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: ¿Sabías que puedes poner más de una parte de un código
          dentro de un loop? Intenta poner una placa **y** avanza dentro de "repetir"
          para completar este acertijo.
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: "¿Cuántas veces se ejecuta este bucle? ¿Cuántas veces
          _debería_ ejecutarse?"
        MC_HOC_2017_06_Cole_b: "¡Ayuda al Agente a construir un puente sobre el agua! "
      MC_HOC_2017_06_Cole_2019_authored_hint:
        MC_HOC_2017_06_Cole_a: "¿Cuántas veces se ejecuta este bucle? ¿Cuántas veces
          _debería_ ejecutarse?"
        MC_HOC_2017_06_Cole_b: "¡Ayuda al Agente a construir un puente sobre el agua! "
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: Intenta poner más de una instrucción dentro de un loop
          "repetir"!
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_c: Todo lo que necesita para que el Agente lo haga es
          abrir el camino hacia Minecart.
        MC_HOC_2017_07_Cole_a: Para completar este acertijo, descubre qué hace la
          función "Despejar camino" y úsala las veces que sean necesarias por medio
          del pequeño bloque verde "despejar camino" de la caja de herramientas.
        MC_HOC_2017_07_Cole_b: Prueba mezclando los bloques de funciones con otros
          bloques de la caja de herramientas para resolver este acertijo.
      MC_HOC_2017_07_Cole_2019_authored_hint:
        MC_HOC_2017_07_Cole_c: Todo lo que necesita para que el Agente lo haga es
          abrir el camino hacia Minecart.
        MC_HOC_2017_07_Cole_a: Para completar este acertijo, descubre qué hace la
          función "Despejar camino" y úsala las veces que sean necesarias por medio
          del pequeño bloque verde "despejar camino" de la caja de herramientas.
        MC_HOC_2017_07_Cole_b: Prueba mezclando los bloques de funciones con otros
          bloques de la caja de herramientas para resolver este acertijo.
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: "¡Presiona \"Ejecutar Agent\"! \nPuedes ejecutar tu código
          aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta
          que descubras qué está mal."
        MC_HOC_2017_08_RY_b: "¡Hay muchas maneras de resolver este acertijo. Intenta
          algunas!"
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: "¡Presiona \"Ejecutar Agent\"! \nPuedes ejecutar tu código
          aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta
          que descubras qué está mal."
        MC_HOC_2017_08_RY_b: "¡Hay muchas maneras de resolver este acertijo. Intenta
          algunas!"
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: "¡Usa funciones para que resolver acertijos sea más
          fácil!"
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_b: "¿No sabes a dónde ir? ¡Vea si puede encontrar la línea
          punteada!"
        MC_HOC_2017_10_Cole_a: "¡Usa funciones para que resolver acertijos sea más
          fácil!"
      MC_HOC_2017_10_RETRY_2019_authored_hint:
        MC_HOC_2017_10_Cole_b: "¿No sabes a dónde ir? ¡Vea si puede encontrar la línea
          punteada!"
        MC_HOC_2017_10_Cole_a: "¡Usa funciones para que resolver acertijos sea más
          fácil!"
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: Haz que el Agent construya algunos puentes para que
          Alex o Steve puedan caminar más allá de los límites del mapa.
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: "Cruzar esas dos placas de presión le despejará
          el camino al jugador. \n![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)"
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: "¡Presiona \"Ejecutar\"! \nPuedes ejecutar tu código
          aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta
          que descubras qué está mal."
        MC_HOC_2017_08_RY_b: "¡Hay muchas maneras de resolver este acertijo. Intenta
          algunas!"
        MC_HOC_2017_08_RY_c: Intenta seguir la línea de puntos para obtener un camino
          simple a través de la lava.
      MC_HOC_2017_Ali_2019_authored_hint:
        MC_HOC_2017_08_RY_a: "¡Presiona \"Ejecutar\"! \nPuedes ejecutar tu código
          aunque no sea correcto.  Ejecuta y restablece tu código una y otra vez hasta
          que descubras qué está mal."
        MC_HOC_2017_08_RY_b: "¡Hay muchas maneras de resolver este acertijo. Intenta
          algunas!"
        MC_HOC_2017_08_RY_c: Intenta seguir la línea de puntos para obtener un camino
          simple a través de la lava.
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: Intenta que el Agent construya algunos caminos minecart
          para que puedas explorar el mundo!
      MC_HOC_2017_FP20x20_2019_authored_hint:
        MC_HOC_2017_13_Cole_a: Intenta que el Agent construya algunos caminos minecart
          para que puedas explorar el mundo!
      NEW Course 4 Artist Functions 13_authored_hint:
        NEW_Course_4_Artist_Functions_13_a: Intenta editar la función de 'dibujar
          una línea de cuadrados' para que no tengas que llamar dos veces.
        NEW_Course_4_Artist_Functions_13_c: "¿Qué código necesitarías si intentaras
          hacer una estrella usando líneas regulares en lugar de cajas?"
      NEW Course 4 Artist Functions 4_authored_hint:
        NEW_Course_4_Artist_Functions_4_a: Tendrás que usar un bloque `girar a la
          derecha por 120 grados` después de cada cuadrado.
      NEW Course 4 Artist Functions 9_authored_hint:
        NEW_Course_4_Artist_Functions_9_a: Intenta ejecutar el código antes de agregar
          cualquier bloque. ¿Qué hace que el dibujo se vea un poco apagado?
        NEW_Course_4_Artist_Functions_9_b: Si no puede ubicar lo que está saliendo
          mal, intente reducir la velocidad del artista moviendo el control deslizante
          hacia la izquierda.
      NEW Course 4 Artist Params 11_authored_hint:
        NEW_Course_4_Artist_Params_11_a: Hay más de un número que necesita ser reemplazado
          por una variable dentro de la función.
      NEW Course 4 Artist Params 13_authored_hint:
        NEW_Course_4_Artist_Params_13_a: 'Tendrá que dividir \* el perímetro \* por
          el número de lados para mantener las formas del mismo tamaño en general. '
      NEW Course 4 Artist Params 14_authored_hint:
        NEW_Course_4_Artist_Params_14_a: Está bien ejecutar el programa unas cuantas
          veces para averiguar cómo funciona la función con parámetros diferentes.
      NEW Course 4 Artist Params inspire_authored_hint:
        brush_width: Establecemos el grosor del pincel a 1, luego el color azul antes
          de hacer cualquier otra cosa.
        double_loop: Trate de poner un "for loop" dentro de un loop de "repetición".
        specifics: |-
          El "for loop" se ejecuta de tres a diecisiete para cada uno de los 6 "pétalos" antes de crear el siguiente, dibujando figuras sólo con un número impar de lados.

          El bloque "set alpha" utiliza la división para ir atenuando el color a medida que el contador aumenta.
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20
          píxeles antes de hacer una rotación de 60 grados.
        solution: |-
          **Solución**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">17</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw a polygon">
          <arg name="length"></arg>
          <arg name="sides"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">30</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">20</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      NEW Course 4 Bee For Loops 10a_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: "¿Puedes encontrar un patrón entre el número
          de pasos que necesitas tomar y el numero de néctares a recolectar?"
        NEW_Course_4_Bee_For_Loops_10a_b: Necesitas 2 repeticiones, una usara un bloque
          de matmáticas.
      NEW Course 4 Bee For Loops 7_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Intenta hacer algunos cálculos con la variable contador.

          ¿Qué tienes que hacerle al contador en cada flor para alcanzar la cantidad de néctar que necesitas recolectar?
      NEW Course 4 Bee For Loops 8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: |-
          Si tu loop cuenta hacia arriba, el incremento es añadido a tu variable de contador cada vez.
          ¿Qué necesitas agregar a cada número para obtener el número que sigue?
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: Haz que el Agent construya algunos puentes para que
          Alex o Steve puedan caminar más allá de los límites del mapa.
      Overworld Avoid Monsters_authored_hint:
        mc_8_a: Hay pocos caminos que puedes tomar. ¿Cuál es el más corto?
        mc_8_b: Use los loops "repetir" para simplificar su código.
        mc_8_c: Tu objetivo es llegar a la entrada de la casa en la parte superior
          de la pantalla.
      Overworld Avoid Monsters_2018_authored_hint:
        mc_8_a: Hay pocos caminos que puedes tomar. ¿Cuál es el más corto?
        mc_8_b: Use los loops "repetir" para simplificar su código.
        mc_8_c: Tu objetivo es llegar a la entrada de la casa en la parte superior
          de la pantalla.
      Overworld Avoid Monsters_2019_authored_hint:
        mc_8_a: Hay pocos caminos que puedes tomar. ¿Cuál es el más corto?
        mc_8_b: Use los loops "repetir" para simplificar su código.
        mc_8_c: Tu objetivo es llegar a la entrada de la casa en la parte superior
          de la pantalla.
      Overworld Chop Tree_authored_hint:
        mc_2_a: Tienes que \`avanzar 'dos ​​veces para pararte frente al árbol.
        mc_2_b: El comando 'destruir bloque' corta el árbol frente a usted.
      Overworld Chop Tree_2018_authored_hint:
        mc_2_a: Tienes que \`avanzar 'dos ​​veces para pararte frente al árbol.
        mc_2_b: El comando 'destruir bloque' corta el árbol frente a usted.
      Overworld Chop Tree_2019_authored_hint:
        mc_2_a: Tienes que \`avanzar 'dos ​​veces para pararte frente al árbol.
        mc_2_b: El comando 'destruir bloque' corta el árbol frente a usted.
      Overworld Chop Trees_authored_hint:
        mc_4_a: Puedes talar árboles en cualquier orden. ¿Qué camino toma el menor
          número de bloques?
        mc_4_b: El comando destruir bloque corta el árbol frente a usted.
      Overworld Chop Trees_2018_authored_hint:
        mc_4_a: Puedes talar árboles en cualquier orden. ¿Qué camino toma el menor
          número de bloques?
        mc_4_b: El comando 'destruir bloque' corta el árbol frente a usted.
      Overworld Chop Trees_2019_authored_hint:
        mc_4_a: Puedes talar árboles en cualquier orden. ¿Qué camino toma el menor
          número de bloques?
        mc_4_b: El comando 'destruir bloque' corta el árbol frente a usted.
      Overworld House Frame Chosen_authored_hint:
        mc_6_a: Haz clic en la flecha en el bloque `colocar` para elegir lo que deseas
          colocar.
        mc_6_b: "¡No tengas miedo de cometer un error! Ejecute el código para ver
          qué sucede, incluso si aún no ha resuelto el acertijo."
        mc_6_c: Puedes colocar más de un bloque en un loop "repetir".
      Overworld House Frame Chosen_2018_authored_hint:
        mc_6_a: Haz clic en la flecha en el bloque `colocar` para elegir lo que deseas
          colocar.
        mc_6_b: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío."
        mc_6_c: Puedes colocar más de un bloque en un loop "repetir".
      Overworld House Frame Chosen_2019_authored_hint:
        mc_6_a: Haz clic en la flecha en el bloque `colocar` para elegir lo que deseas
          colocar.
        mc_6_b: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío."
        mc_6_c: Puedes colocar más de un bloque en un loop "repetir".
      Overworld Move to Sheep_authored_hint:
        mc_1_a: El bloque 'avanzar' está en la parte superior del cuadro de herramientas.
        mc_1_b: Asegúrate de que los bloques se muevan para adelante.
      Overworld Move to Sheep_2018_authored_hint:
        mc_1_a: El bloque 'avanzar' está en la parte superior del cuadro de herramientas.
        mc_1_b: Asegúrate de que los bloques se muevan para adelante.
      Overworld Move to Sheep_2019_authored_hint:
        mc_1_a: El bloque 'avanzar' está en la parte superior del cuadro de herramientas.
        mc_1_b: Asegúrate de que los bloques se muevan para adelante.
      Overworld Place Wall_authored_hint:
        mc_5_a: Utiliza primero el bloque 'colocar', y luego el bloque 'mover'.
        mc_5_b: Asegúrate que ambos bloques dentro del loop de "repetir" ejecuten
          el código más de una vez.
        mc_5_c: "¡No tengas miedo de cometer un error! Ejecute el código para ver
          qué sucede, incluso si aún no ha resuelto el acertijo."
      Overworld Place Wall_2018_authored_hint:
        mc_5_a: Utiliza primero el bloque 'colocar', y luego el bloque 'mover'.
        mc_5_b: Asegúrate que ambos bloques dentro del loop de "repetir" ejecuten
          el código más de una vez.
        mc_5_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío."
      Overworld Place Wall_2019_authored_hint:
        mc_5_a: Utiliza primero el bloque 'colocar', y luego el bloque 'mover'.
        mc_5_b: Asegúrate que ambos bloques dentro del loop de "repetir" ejecuten
          el código más de una vez.
        mc_5_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío."
      Overworld Plant Crops_authored_hint:
        mc_7_a: Utiliza el bloque 'plantar cultivo' para plantar un cultivo en el
          espacio donde estás parado.
        mc_7_b: Ambas franjas de tierra marrón oscura junto al agua deben llenarse
          con cultivos.
        mc_7_c: Puedes poner más de un bloque dentro de un ciclo de repetición.
      Overworld Plant Crops_2018_authored_hint:
        mc_7_a: Utiliza el bloque 'plantar cultivo' para plantar un cultivo en el
          espacio donde estás parado.
        mc_7_b: Ambas franjas de tierra marrón oscura junto al agua deben llenarse
          con cultivos.
        mc_7_c: Puedes colocar más de un bloque en un loop "repetir".
      Overworld Plant Crops_2019_authored_hint:
        mc_7_a: Utiliza el bloque 'plantar cultivo' para plantar un cultivo en el
          espacio donde estás parado.
        mc_7_b: Ambas franjas de tierra marrón oscura junto al agua deben llenarse
          con cultivos.
        mc_7_c: Puedes colocar más de un bloque en un loop "repetir".
      Overworld Powered Minecart_authored_hint:
        mc_13_a: Utiliza 'colocar riel' para colocar un riel en el cuadro en el que
          estás ubicado.
        mc_13_b: Utiliza los loops "repetir" para acortar su código.
      Overworld Powered Minecart_2018_authored_hint:
        mc_13_a: Utiliza 'colocar riel' para colocar un riel en el cuadro en el que
          estás ubicado.
        mc_13_b: Utiliza los loops "repetir" para acortar su código.
      Overworld Powered Minecart_2019_authored_hint:
        mc_13_a: Utiliza 'colocar riel' para colocar un riel en el cuadro en el que
          estás ubicado.
        mc_13_b: Utiliza los loops "repetir" para acortar su código.
      Overworld Shear Sheep_authored_hint:
        mc_3_a: El bloque `esquilar` pone a la oveja enfrente tuyo. ¿Estás frente
          a la oveja?
        mc_3_b: Si necesitas cambiar la dirección en la que mira, utiliza un bloque
          'girar'.
        mc_3_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío.  "
      Overworld Shear Sheep_2018_authored_hint:
        mc_3_a: El bloque `esquilar` pone a la oveja enfrente tuyo. ¿Estás frente
          a la oveja?
        mc_3_b: Si necesitas cambiar la dirección en la que mira, utiliza un bloque
          'girar'.
        mc_3_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío."
      Overworld Shear Sheep_2019_authored_hint:
        mc_3_a: El bloque `esquilar` pone a la oveja enfrente tuyo. ¿Estás frente
          a la oveja?
        mc_3_b: Si necesitas cambiar la dirección en la que mira, utiliza un bloque
          'girar'.
        mc_3_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío."
      Pattern Bee 1_authored_hint:
        conditional_pointer: 'Comience a pensar lo siguiente: ¿cuál es la diferencia
          en cada paso del camino'' ¿Qué tipo de bloque puede usar para _decidir_
          si está en una flor o en un panal'
        turn_at_honeycomb_pointer: Aparte de hacer miel, ¿ves algo diferente que tengas
          que hacer en cada panal?
      Planning Farmer_authored_hint:
        conditional_pointer: 'Comience a pensar lo siguiente: ¿cuál es la diferencia
          en cada paso del camino'' ¿Qué tipo de bloque puede usar para _decidir_
          si está en una flor o en un panal'
        turn_at_honeycomb_pointer: Aparte de hacer miel, ¿ves algo diferente que tengas
          que hacer en cada panal?
      Quantum Bee - Ryan_authored_hint:
        test_hint: Esta es una pista de prueba.
      Ryan_Demo_authored_hint:
        validation: |-
          **¿Cómo paso este nivel?**

          -   El bailarín necesita cambiar a un nuevo movimiento después de 4 medidas.

          _Este nivel termina después de 8 medidas._
      Tortoise and Hare_authored_hint:
        behavior hint: |-
          ¡Intenta editar los comportamientos!

          -   ¿Qué valor controla la velocidad de cada sprite?
      Underground Avoiding Lava_authored_hint:
        mc_11_a: Todo el código está en su lugar para revisar la lava y enfrentarla.
          Todo lo que necesitas hacer es agregar un bloque para moverte.
        mc_11_b: "¿Debería tu comando 'avanzar' estar dentro de la afirmación 'si'
          o después?"
      Underground Avoiding Lava_2018_authored_hint:
        mc_11_a: Todo el código está en su lugar para revisar la lava y enfrentarla.
          Todo lo que necesitas hacer es agregar un bloque para moverte.
        mc_11_b: "¿Debería tu comando 'avanzar' estar dentro de la afirmación 'si'
          o después?"
      Underground Avoiding Lava_2019_authored_hint:
        mc_11_a: Todo el código está en su lugar para revisar la lava y enfrentarla.
          Todo lo que necesitas hacer es agregar un bloque para moverte.
        mc_11_b: "¿Debería tu comando 'avanzar' estar dentro de la afirmación 'si'
          o después?"
      Underground If Statements_authored_hint:
        mc_12_a: Los espacios con puntos rojos son donde encontrarás Redstone.
        mc_12_b: ¿Puedes usar un loop "repetir" para acortar tu código?
        mc_12_c: 'Usa una afirmación "si" para espacios de lava, luego coloca adoquines. '
      Underground If Statements_2018_authored_hint:
        mc_12_a: Los espacios con puntos rojos son donde encontrarás Redstone.
        mc_12_b: ¿Puedes usar un loop "repetir" para acortar tu código?
        mc_12_c: 'Usa una afirmación "si" para espacios de lava, luego coloca adoquines. '
      Underground If Statements_2019_authored_hint:
        mc_12_a: Los espacios con puntos rojos son donde encontrarás Redstone.
        mc_12_b: ¿Puedes usar un loop "repetir" para acortar tu código?
        mc_12_c: 'Usa una afirmación "si" para espacios de lava, luego coloca adoquines. '
      Underground Iron_authored_hint:
        mc_10_a: "¡Los bloques de hierro son espacios manchados detrás de la antorcha!
          ¿Cómo vas a llegar allá?"
        mc_10_b: Cuando está parado el borde de la lava, utiliza 'colocar adoquín
          adelante' para un camino seguro.¡Luego, puedes caminar sobre el!
        mc_10_c: "¡No tengas miedo de cometer un error! Ejecute el código para ver
          qué sucede, incluso si aún no ha resuelto el acertijo."
      Underground Iron_2018_authored_hint:
        mc_10_a: "¡Los bloques de hierro son espacios manchados detrás de la antorcha!
          ¿Cómo vas a llegar allá?"
        mc_10_b: Cuando está parado el borde de la lava, utiliza 'colocar adoquín
          adelante' para un camino seguro.¡Luego, puedes caminar sobre el!
        mc_10_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío."
      Underground Iron_2019_authored_hint:
        mc_10_a: "¡Los bloques de hierro son espacios manchados detrás de la antorcha!
          ¿Cómo vas a llegar allá?"
        mc_10_b: Cuando está parado el borde de la lava, utiliza 'colocar adoquín
          adelante' para un camino seguro.¡Luego, puedes caminar sobre el!
        mc_10_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          qué sucede, incluso si aún no has resuelto el desafío."
      Underground Mining Coal_authored_hint:
        mc_9_a: "¿Estás frente al camino correcto? El 'bloque destruir' hace explotar
          el bloque en frente tuyo."
        mc_9_b: ¡Las manchas negras en la muralla son carbón! Utiliza "destruir bloque"
          en ellas para minar el carbón.
        mc_9_c: Utilizar 'poner antorcha' para poner una antorcha en el espacio donde
          estás parado.
      Underground Mining Coal_2018_authored_hint:
        mc_9_a: "¿Estás frente al camino correcto? El 'bloque destruir' hace explotar
          el bloque en frente tuyo."
        mc_9_b: ¡Las manchas negras en la muralla son carbón! Utiliza "destruir bloque"
          en ellas para minar el carbón.
        mc_9_c: Utilizar 'poner antorcha' para poner una antorcha en el espacio donde
          estás parado.
      Underground Mining Coal_2019_authored_hint:
        mc_9_a: "¿Estás frente al camino correcto? El 'bloque destruir' hace explotar
          el bloque en frente tuyo."
        mc_9_b: ¡Las manchas negras en la muralla son carbón! Utiliza "destruir bloque"
          en ellas para minar el carbón.
        mc_9_c: Utilizar 'poner antorcha' para poner una antorcha en el espacio donde
          estás parado.
      Valentine_artist2_01_authored_hint:
        Valentine_artist2_01_a: Cada lado de la hierba tiene 30 píxeles de largo.
          Intenta usar un patrón de pasos de escalera.
        Valentine_artist2_01_b: '¿Ves algún patrón que se repita? Deberías usar dos
          bloques "avanzar" y dos diferentes bloques de "giros" dentro de un loop. '
        Valentine_artist2_01_c: |-
          Prueba este ciclo
          <xml><block type="controls_repeat">

          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      Valentine_artist_01_authored_hint:
        Valentine_artist_01_a: "¿En qué dirección necesita moverse el artista? ¿Qué
          dirección necesita tener el artista para colocar un nuevo sticker de llama?"
        Valentine_artist_01_b: El artista necesita colocar 10 pegatinas de llamas
          y girar 90 grados en cada turno.
      Valentine_playlab_01_authored_hint:
        Valentine_playlab_01_a: Encaje el actor de `1 tiro corazones rojos abajo`
          bloque en el`cuando el actor 1 hace clic en` evento. ¡No te olvides de cambiar
          `izquierda` a`abajo`!
        Valentine_playlab_01_b: Utiliza el bloque "mover el actor 1 a la izquierda"
          haciendo clic en el lugar abajo de el evento cuando "haga clic en la flecha
          izquierda".
      aE2_authored_hint:
        aE2_a: Considere que como las servilletas tienen 20 pixeles de largo, necesitará
          saltar 20 pixeles antes de iniciar su próximo loop.
      aE3_authored_hint:
        aE3_a: Luego de ejecutar su **loop anidado** desde la última etapa, necesita
          saltar hacia atrás hacia el comienzo de la línea.
        aE3_b: "¡No olvide mover al artista hacia abajo antes de comenzar una nueva
          fila de formas! \n\nPara mover el artista y colocarse frente a él de la
          manera correcta una vez más, asegúrese de hacer: - giro de 90 grados ( boca
          abajo) - Saltar 20 píxeles (para llegar a la nueva fila) - Girar hacia atrás
          90 grados (para hacer frente a la derecha de nuevo)"
        aE3_c: Cuando haya finalizado, sus **loops anidados** deberían tener tres
          repeticiones de profundidad.
        aE3_d: Si su código se vuelve demasiado confuso, siempre puede hacer clic
          en "Comenzar de nuevo" y ¡volver a intentarlo!
      aE3alternate_authored_hint:
        aE3alternate_a: Luego de ejecutar su **loop anidado** desde la última etapa,
          necesita saltar hacia atrás hacia el comienzo de la línea.
        aE3alternate_b: "¡No olvide mover al artista hacia abajo antes de comenzar
          una nueva fila de formas! \n\nPara mover el artista y colocarse frente a
          él de la manera correcta una vez más, asegúrese de hacer: - giro de 90 grados
          ( boca abajo) - Saltar 20 píxeles (para llegar a la nueva fila) - Girar
          hacia atrás 90 grados (para hacer frente a la derecha de nuevo)"
        aE3alternate_c: Cuando haya finalizado, sus **loops anidados** deberían tener
          tres repeticiones de profundidad.
        aE3alternate_d: Si su código se vuelve demasiado confuso, siempre puede hacer
          clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      aE3alternateB_authored_hint:
        aE4alternateB_a: Luego de ejecutar su **loop anidado** desde la última etapa,
          necesita saltar hacia atrás hacia el comienzo de la línea.
        aE4alternateB_b: "¡No olvide mover al artista hacia abajo antes de comenzar
          una nueva fila de formas! \n\nPara mover el artista y colocarse frente a
          él de la manera correcta una vez más, asegúrese de hacer: - giro de 90 grados
          ( boca abajo) - Saltar 20 píxeles (para llegar a la nueva fila) - Girar
          hacia atrás 90 grados (para hacer frente a la derecha de nuevo)"
        aE4alternateB_c: Cuando haya finalizado, sus **loops anidados** deberían tener
          tres repeticiones de profundidad.
        aE4alternateB_d: Si su código se vuelve demasiado confuso, siempre puede hacer
          clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      aE4_authored_hint:
        aE4_a: Luego de ejecutar su **loop anidado** desde la última etapa, necesita
          saltar hacia atrás hacia el comienzo de la línea.
        aE4_b: "¡No olvide mover al artista hacia abajo antes de comenzar una nueva
          fila de formas! \n\nPara mover el artista y colocarse frente a él de la
          manera correcta una vez más, asegúrese de hacer: - giro de 90 grados ( boca
          abajo) - Saltar 20 píxeles (para llegar a la nueva fila) - Girar hacia atrás
          90 grados (para hacer frente a la derecha de nuevo)"
        aE4_c: Cuando haya finalizado, sus **loops anidados** deberían tener tres
          repeticiones de profundidad.
        aE4_d: Si su código se vuelve demasiado confuso, siempre puede hacer clic
          en "Comenzar de nuevo" y ¡volver a intentarlo!
      aE6_authored_hint:
        aE6_a: Si hay 180 grados en un semicírculo y cada loop de artista gira 3 grados,
          ¿cuántas veces necesitarás hacer un loop para dibujar la mitad de un circulo
          completo
      aE7_authored_hint:
        aE7_a: Dibuja la mitad inferior de un círculo y luego la mitad superior de
          un círculo para hacer un segmento.
        aE7_b: Necesitará 4 segmentos para completar este puzzle.
      aE8_authored_hint:
        aE8_a: "Para hacer un cuadrado desde tu línea, necesitarás:  \n\n-   dibujar
          la línea  \n-   usar la esquina con curvas\n    Repita estos pasos 4 veces."
      allHallows2017_authored_hint:
        allHallows2017_a: "¡Cuidado! ¡GT podría seguir detrás de ti en su bicicleta
          y borrar tu línea!"
        allHallows2017_g: 'Sarah dice: "¿Tienes frio? Ven y siéntate en la esquina...
          hay 90 grados!"'
        allHallows2017_c: 'Jordyn dice: "¡No se detengan ahora! ¡Continúen!"'
        allHallows2017_d: 'Josh dice: "¡Tendrá que recurrir a sus habilidades de codificación
          para completar este rompecabezas!"'
        allHallows2017_e: 'Dani dice: "No soy buena con los juegos de palabras. ¡Intente
          usar un bloque ''repetir''!"'
        allHallows2017_b: 'Baker dice: "El crayón Chicago solo funciona en la \* línea
          verde \*"'
        allHallows2017_f: 'Amy dice: "¡Puede hacerlo! Solo piense fuera de la caja"'
      allthethings_ttscsf contained_authored_hint:
        courseE_farmer_ramp12a: No dudes en volver al último acertijo si necesitas
          un recordatorio de cómo recoger cultivos solo **mientras** hay cultivos
          para recoger.
      artistDebugVideo1_authored_hint:
        courseA_artist_loops7_a: "¿No puedes descifrar donde colocar el loop? Intenta
          escribir el código paso a paso y busca un patrón."
      artistLoopsK2_authored_hint:
        artistLoopsK2_a: Si deseas que el loop se repita más de 4 veces, puedes cambiar
          el número en la parte superior del bloque.
      artistLoopsK2gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Si deseas que el loop se repita más de 4 veces, puedes cambiar
          el número en la parte superior del bloque.
      artistLoopsK3_authored_hint:
        artistLoopsK3_a: "¡Intenta usar lo que has aprendido sobre los bloques repetir
          para completar este desafío!"
      artistLoopsK4_authored_hint:
        artistLoopsK4_a: "¿Atascado? Intenta ejecutar el código para ver qué bloque
          es incorrecto."
      artistLoopsK5_authored_hint:
        artistLoopsK5_a: Los 4 bloques iniciales deben ir dentro de tu bloque de repetición
          para resolver este rompecabezas.
      artistLoopsK6_authored_hint:
        artistLoopsK6_a: Intenta ejecutar el código para ver dónde hay un error.
      artistLoopsK7_authored_hint:
        artistLoopsK7_a: "¡Todos los bloques que necesitas para este rompecabezas
          ya están en tu espacio de trabajo!"
      artistLoopsK8_authored_hint:
        artistLoopsK8_a: Intenta ejecutar el código para ver dónde hay un error.
      artistLoopsK9_authored_hint:
        artistLoopsK9_a: "¡Este desafío utiliza CUATRO loops, uno tras otro!"
      artistLoopsKA_authored_hint:
        artistLoopsKA_a: Use el bloque de salto para avanzar sin dibujar una línea.
      artistLoopsKB_authored_hint:
        artistLoopsKB_a: Deberían haber 3 bloques dentro del loop para resolver este
          puzzle.
      behaviors 2_authored_hint:
        behavior hint: |-
          ¡Intenta editar los comportamientos!

          -   ¿En qué dirección necesita moverse el pájaro?
      behaviors 3_authored_hint:
        behavior hint: |-
          ¡Intenta editar los comportamientos!

          -   ¿Qué valor controla la velocidad de cada sprite?
      behaviors 3a_authored_hint:
        behavior hint: |-
          ¡Intenta editar los comportamientos!

          -   ¿Qué valor controla la velocidad de cada sprite?
      behaviors 5_authored_hint:
        target hint: Puedes elegir cualquiera de los cuatro juguetes. ¿Cuál quiere
          la mascota?
        behavior hint: Edita el comportamiento para resolver este desafío. El sprite
          mascota debe moverse en dos direcciones diferentes para terminar yendo en
          diagonal.
      behaviors 5a_authored_hint:
        behavior hint: |-
          ¡Intenta editar los comportamientos!

          -   ¿Qué valor controla la velocidad de cada sprite?
      behaviors 6_authored_hint:
        behavior hint: |-
          ¡Intenta editar los comportamientos!

          -   ¿Qué valor controla la velocidad de cada sprite?
      behaviors 7_authored_hint:
        behavior hint: |-
          ¡Intenta editar los comportamientos!

          -   ¿Qué valor controla la velocidad de cada sprite?
      comment_intro_maze_2018_authored_hint:
        courseC_maze_programming4_a: Los comentarios también son útiles cuando otras
          personas intentan leer su código.
        courseC_maze_programming4_b: 'Agregue un comentario cuando cambie de dirección:
          ¿qué hubiera pasado si hubiera girado en sentido contrario?'
      comment_intro_maze_2018_2019_authored_hint:
        courseC_maze_programming4_a: Los comentarios también son útiles cuando otras
          personas intentan leer su código.
        courseC_maze_programming4_b: 'Agregue un comentario cuando cambie de dirección:
          ¿qué hubiera pasado si hubiera girado en sentido contrario?'
      course1_artist_loops_challenge1_authored_hint:
        courseA_artist_loops_challenge1_a: Puede usar ciclo como este para crear las
          paredes y el techo. Intenta repetir diferentes bloques . ! \[] (<https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png>)
          Diseña el tuyo o haz clic en ! \[] (<https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png>)
          para algunas ideas!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2_authored_hint:
        harvey_tictactoe: Puedes usar bloques `salto` para moverte a otros espacios.
      course1_artist_loops_challenge3_authored_hint:
        courseA_artist_loops_challenge2_a: 'Bloques como este: <xml> <block type="simple_move_up_left"/></xml>
          ¡permitirá que tu artista se mueva de forma inclinada!'
        courseA_artist_loops_challenge2_b: Cuando termines una casa de pájaros, ¡salta
          a la siguiente!
        courseA_artist_loops_challenge2_c: Necesitará MUCHOS bloques dentro del ciclo
          para este desafío.
      course1_artist_loops_challenge4_authored_hint:
        courseB_artist_loops_challenge1_a: '¡Bloques como este: <xml>  <block type="simple_move_up_right"/></xml>
          permitirá que tu artista se mueva de forma inclinada!'
        courseB_artist_loops_challenge1_b: Cuando termines uno de los dados, ¡"salta"
          al próximo!
        courseB_artist_loops_challenge1_c: 'Tendrá que `mover` o`saltar` sobre algunas
          de las mismas líneas dos veces. '
      course1_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada
          loop si algo va mal.
        courseA_collector_loops_challenge1_b: No necesita usar un ciclo si solo está
          haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la
          cueva, pero solo necesitas moverte y recolectar 5 veces. ¿Sabes por qué?
      course1_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: "¡Solo necesita usar un bloque ! \\[]
          (Https\\://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png) para resolver esto."
        courseA_collector_loops_challenge2_a: Puede retroceder por el camino una segunda
          vez antes de ir hacia el sur. ! \[] (<https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21>
          PM.png)
      course1_collector_loops_challenge3_authored_hint:
        courseB_collector_loops_challenge1_b: |-
          Comience haciendo loop en los comandos "mover al sur" y "obtener tesoro".
          <xml>
          <block type="maze_moveSouth"/><next>
          <block type="collector_collect"/></next>
          </xml>
        courseB_collector_loops_challenge1_a: |-
          El patrón norte es un poco diferente que el patrón sur.
          <xml>
          <block type="collector_collect"/><next>
          <block type="maze_moveNorth"/></next>next>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          Muévete hacia el este dos veces entre cada camino.

          <xml>
            <block type="maze_moveEast"/><next>
            <block type="maze_moveEast"/></next>next>
            </xml>

          Puedes hacer esto con solo 14 bloques. Haz clic para obtener una pista más para ver una solución.
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba esto!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">

          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4_authored_hint:
        courseB_collector_loops_challenge2_a: Si algo sale mal, no tengas miedo de
          comenzar de nuevo. No te rindas!
        courseB_collector_loops_challenge2_b: |-
          Si repites este patrón, ¡Laurel no golpeará la pared en el fondo de la cueva!
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: ¡Intenta usar un bloque "repetir" para
          recoger la última pila de tesoros!
        courseB_collector_loops_challenge2_d: |-
          Intenta esta solución:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Algunos caminos te guiarán al TNT, si vas muy
          lejos.
      course1_maze_debugging_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: No necesitas agregar o eliminar bloques para
          resolver este desafío.
        courseB_maze_seq_challenge2_b: Reorganiza los bloques y toma el camino del
          medio.
      course1_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda
          no contar el espacio donde comienzas!
      course1_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta
          vez.
        courseB_maze_seq_challenge1_b: Intenta moverte al oeste para comenzar.
      course1_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles the Penguin se muestre
          al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz el espectáculo de Boo the Ghost
          cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden sea el Show de Fuzzy
          Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre
          cuando haces clic en el monstruo!\n\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finalmente, ¡haz que Wendel el Mago
          se muestre cuando hagas clic en Spiff!.\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "Puedes hacer cantar a un pájaro.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_b: |-
          Puedes hacer un pitido de robot.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml>
        courseA_playlab_events_challenge2_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      course2_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Comience haciendo un loop anidado
          para crear cuatro octágonos. Gire 45 grados para hacer un octágono. Salte,
          luego gire 90 grados después de cada uno.
        courseD_artist_nestedLoops_challenge1_b: Agregue código para dibujar un triángulo
          dentro de su loop anidado. Use giros de 120 grados para su triángulo.
        courseD_artist_nestedLoops_challenge1_c: |-
          Use un loop anidado:
          \-Repita 8 veces
          \-dibuje un octágono
          \-dibuje un triángulo
          \-salte hacia adelante 50 pixeles
          \-gire a la derecha 90 grados
      course2_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Para dibujar un octágono regular,
          el artista debe girar 45 grados 8 veces.
        courseD_artist_nestedLoops_challenge2_b: Para dibujar un cuadrado, el artista
          debe girar 90 grados 4 veces.
      course2_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: 'El rectángulo tiene 200 píxeles de ancho
          y 100 píxeles de alto. '
      course2_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: |-
          Se puede poner en el interior de un ciclo comandos de repetición una y otra vez. ¡Intentalo!
          <xml>

                    <block type="controls_repeat">
                      <title name="TIMES">6</title>
                      <statement name="DO">
                        <block type="draw_move_by_constant_dropdown">
                          <title name="DIR">moveForward</title>
                          <title name="VALUE" config="25,50,100,150,200,300">25</title>
                          <next>
                            <block type="jump_by_constant_dropdown">
                              <title name="DIR">jumpForward</title>
                              <title name="VALUE" config="25,50,100,150,200,300">25</title>
                            </block>
                          </next>
                        </block>
                        </statement></block></xml>
      course2_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: "¿Puedes encontrar un camino que llegue
          a cada flor y panal sin golpear ningún árbol? El mejor camino es una espiral.
          \\*\\* Puedes resolver esto sin girar a la izquierda. \\*\\*"
        courseD_bee_conditionals_challenge1_b: En este rompecabezas, cada espacio
          podría tener una flor, un panal de miel o nada. Eso significa que puedes
          repetir tu condicional `si/si no` en cada cuadrado.
      course2_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques `si en una flor`, el código dentro de un `mientras néctar> 0` solo se ejecutará si la abeja está en una flor. La diferencia es que el código interno se ejecutará una y otra vez hasta que no quede néctar. Prueba este patrón:

          <xml>  <block type="bee_whileNectarAmount">

          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      course2_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: El código original funcionaría muy bien,
          ¡ si hubiera solo una pieza de tesoro en cada pila!
        courseC_maze_loops_challenge2_b: ¡Utiliza los loops de tal manera de no quedarse
          sin los bloques "recoger"!
      course2_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el comando `collect` más
          a menudo para recolectar el tesoro extra.
      course2_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el comando `collect` más
          a menudo para recolectar el tesoro extra.
      course2_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: "¡No piense en intentar ésto sin loops!"
        courseC_harvester_loops_challenge1_b: Puedes repetir 'mover hacia adelante'
          y 'elegir maíz' todas las veces que necesites hacerlo, luego haz 'gira a
          la derecha' en cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor forma de recolectar los cuatro primeros maíces utiliza un bloque `repetir` dentro de otro bloque`repetir`. ¡También puedes usar este patrón para el resto del desafío!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      course2_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: Una forma de resolver esto parece un
          zig-zag. Otra parece un espiral. Hay muchas soluciones distintas para un
          desafío como este. ¡Sé perseverante!
        courseC_harvester_loops_challenge2_b: Puedes repetir "avanzar" y "recoge lechuga"
          cuantas veces necesites, luego gira en cada esquina.
        courseC_harvester_loops_challenge2_c: |-
          ¡Este patrón en zigzag se puede repetir dos veces para finalizar el desafío con solo 20 bloques!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          ¡Este patrón en espiral se puede programar con solo 18 bloques!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      course2_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: Piense en este camino como tres diferentes
          piezas. Cada uno tiene un patrón que se puede repetir.
        courseC_maze_loops_challenge1_b: Entre cada bloque de "repetición", necesitará
          "girar a la izquierda" o "girar a la derecha" para que Scrat esté listo
          para el próximo patrón.
        courseC_maze_loops_challenge1_c: Si hace esto ahora, solo necesita `girar
          a la izquierda`, luego`mover adelante adelante` unas pocas veces. ¡No te
          rindas! ! \[] (<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34>
          PM.png)
      course2_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: "-   ¡Si me envías hacia atrás, sé
          muy cuidadoso de que me dirija al camino correcto! \\*"
        courseC_maze_programming_challenge2_b: "¡La solución más corta usa solo 5
          bloques, pero usa el bloque de 'repetición!"
      course2_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda
          no contar el espacio donde comienzas!
      course2_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta
          vez.
        courseB_maze_seq_challenge1_b: Intenta moverte al oeste para comenzar.
      course3_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una \*\* longitud
          de 30 \*\* y gira a la derecha por \*\* 60 grados \*\*.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una **longitud
          de 80** y gira a la derecha por **120 grados**. '
      course3_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: Si llamas a la función una vez más,
          puedes crear el mismo diseño en la esquina final. ¡También puedes "saltar
          a" otras posiciones o cambiar todo como quieras!
      course3_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n<block type=\"jump_to_xy\">\n<title
          name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nEste
          bloque `saltar a` te permite mover el artista zombie a cualquier pixel en
          la cuadrícula, siempre que lo desees. Para ello, debes moverlo un número
          de pixeles hacia la derecha y otro hacia abajo. Esto siempre se cuenta desde
          la esquina superior izquierda, lo que significa que no importa dónde esté
          el artista zombi _antes_ de que se ejecute el comando. \n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course3_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: "¿Por qué funciona la primera mitad de
          este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto
          néctar recoge la abeja cada vez que se mueve sobre una flor?"
        courseD_bee_debugging_challenge1_b: En el camino de regreso, haz que la abeja
          siga el mismo patrón. ¿Cuánta miel necesita la abeja para hacer cada vez
          que se mueve sobre un panal de miel?
        courseD_bee_debugging_challenge1_c: "Después de que la abeja llegue a la fila
          inferior, haz que repita estos comandos: \n\n-   Repetir 2 veces: \n-   Avanzar
          \n-   Hacer 3 mieles \n-   Retroceder"
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseE_bee_functions_challenge1_b: Recuerda construir tu código dentro del
          bloque de función verde.
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseE_bee_functions_challenge1_b: Recuerda construir tu código dentro del
          bloque de función verde.
      course3_bee_functions_challenge3_authored_hint:
        courseF_bee_functions_challenge1_a: Puedes usar las funciones en la caja de
          herramientas para ayudarlo. ¡Puedes llamar a una función dentro de la definición
          de otra función!
      course3_bee_functions_challenge4_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Si hay un camino a la derecha, deberías hacer lo siguiente:

          -   Obtén cualquier néctar o haz miel.
          -   Gira a la derecha hacia el camino lateral.
          -   Muévete hasta final de la ruta lateral.
          -   Dobla a la derecha.

          Si repites las acciones anteriores dos veces, estarás listo para retroceder por la ruta principal.

          \*\* ¡Solo haz clic para obtener otra sugerencia si deseas ver la solución completa! \*\*
        courseF_bee_functions_challenge2_b: |-
          **Solution:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "Comienza centrándote en recolectar
          DOS gemas de cada una de las dos primeras pilas . ! \\[] (<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04>
          SOY copy.png) Use estos bloques .\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n\n
          \  <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Luego, recoge las gemas restantes
          en esta fila. \n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>) \n\nAgrega estos bloques a tu programa.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n\n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finalmente, recoge el tesoro restante.
          Agrega estos bloques a tu programa.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Aquí está la solución completa para este desafío.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course3_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: El botón de 'PASO' puede ser muy útil
          en este desafío.
        courseD_farmer_condLoops_challenge1_b: Normalmente, tú simplemente "recoge
          calabaza" si estás en una calabaza. ¿Qué más necesitas hacer si estás en
          una calabaza?
      course3_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: La cantidad de cada vegetal en cada
          espacio varía. Usa "while" loops para éstos.
      course3_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: "¿Izquierda o derecha? ¡Es tu decisión!"
        courseC_maze_debugging_challenge1_b: El camino de Scrat es la forma de un
          rectángulo! Necesita girar de la misma manera cada vez!
        courseC_maze_debugging_challenge1_c: Si te quedas atascado, siempre puedes
          volver a empezar, o eliminar todo el código y encontrar tu propio camino!
      course3_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_a: Una forma de resolver esto es agregar
          más pasos hacia adelante entre los giros.
        courseC_maze_debugging_challenge2_b: Si se está atorado, siempre puedes comenzar
          de nuevo o eliminar todo el código y encontrar su propio camino!
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir usando "avanzar", y solamente cuatro giros. Si encuentras una forma de usar el bloque "repetir", podrían haber incluso más!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      course3_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: 'Aquí hay algunas cosas que podría hacer cuando
          el jugador gana el juego: \* Hacer que el dinosaurio desaparezca. \* Detener
          las ardillas. \* Haz felices a las ardillas y al caballero. \* Establecer
          un nuevo fondo. \* Haz que el caballero agradezca al jugador por ayudar.
          \* Haz desaparecer a todos los actores y muestra un "¡Tu ganas!" mensaje.'
        courseE_playLab_challenge1_b: "Estas son algunas cosas que podrías hacer cuando
          el jugador pierde el juego: \n\n-   Hacer desaparecer al caballero. \n-
          \  Hacer que las ardillas estén tristes. \n-   Hacer que el dinosaurio diga
          algo. \n-   Establecer un nuevo fondo. \n-   Hacer desaparecer a todos los
          actores y mostrar un mensaje de \"final del juego\"."
      course3_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          El actor sabe qué decir en función de su estado de ánimo. Intenta jugar con las cosas que la bruja podría decir.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">¡ Concéntrate y pregunta de nuevo!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: |-
          Se sentirá como que el juego comienza si llamas la función `haz una pregunta` de nuevo por debajo de la lista de los condicionales.
          <xml><block type="studio_saySpriteParamsTime" inline="true">

          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"></mutation>
                  </block></block></xml>
        courseE_playlab_challenge2_c: |-
          Tendrás que agregar más declaraciones condicionales para dar a los actores más cosas que decir.
          <xml><block type="studio_ifActorHasEmotionParams" inline="true">
                      <title name="EMOTION">2</title>
                      <value name="SPRITE">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="studio_saySpriteParamsTime" inline="true">
                      <value name="SPRITE">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TEXT">
                        <block type="text">
                          <title name="TEXT">???</title>
                        </block>
                      </value>
                      <value name="TIME">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                        </statement></block></xml>!
        courseE_playlab_challenge2_d: Una vez que entienda todo el código que se refiere
          al Actor 1, puedes tratar de volver a escribir el mismo código, pero esta
          vez para el Actor 2. ¡No te olvides de cambiar las instrucciones dentro
          del bloque 'mostrar pantalla de título' para que aún tenga sentido!
        courseE_playlab_challenge2_e: |-
          Cuando todo esté terminado, deberías poder hacer click en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?

          ¡Haz que un amigo pruebe tu aplicación cuando termines!
      course4_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: El mejor consejo que tengo para ti es
          presionar `⟲ Start Over` si comienza a ponerse realmente desordenado. Solo
          hay unas pocas líneas incorrectas en el programa original. Si falla un enfoque,
          haz una copia de seguridad y vuelve a intentarlo. ¡Hay una solucion!
      course4_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: "¡Una vez que definas una función, puedes
          llamarla una y otra vez, cuando y donde quieras!"
        courseE_artist_concept_challenge2_b: |-
          Puedes saltar a diferentes posiciones en el lienzo usando este comando:

          <xml>  <block type="jump_to">

          <title name="VALUE">???</title>
          </block></xml>
      course4_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n<block type=\"jump_to_xy\">\n<title
          name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nEste
          bloque `saltar a` te permite mover el artista zombie a cualquier pixel en
          la cuadrícula, siempre que lo desees. Para ello, debes moverlo un número
          de pixeles hacia la derecha y otro hacia abajo. Esto siempre se cuenta desde
          la esquina superior izquierda, lo que significa que no importa dónde esté
          el artista zombi _antes_ de que se ejecute el comando. \n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      course4_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: Cada línea vertical tiene una longitud
          de '10'. Cada línea horizontal debe tener una longitud de la 'longitud'.
        courseF_artist_variables_challenge1_b: Querrás aumentar el valor de la 'longitud'
          por 10 \*\* dos veces \*\* dentro del loop.
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberás girar
          a la izquierda dos veces, girar a la derecha dos veces y avanzar un total
          de cuatro veces.
        courseF_artist_variables_challenge1_d: "Este desafío utiliza un solo bucle.
          Sin las variables, un camino similar podría ser un zigzag. \n\n![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36
          PM.png>)\n\nSi tienes problemas, comienza por crear esta imagen, y luego
          trata de ver dónde puedes utilizar las variables para cambiar la longitud
          de las líneas horizontales."
        courseF_artist_variables_challenge1_e: "Aquí está la solución. \n\n<xml>\n<block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n<next>\n<block
          type=\"variables_set\" inline=\"false\">\n<title name=\"VAR\"></title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\"></title>\n10\n</block>\n</value>\n<next>\n<block
          type=\"controls_repeat_ext\" inline=\"true\">\n<value name=\"TIMES\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">18</title>\n</block>\n</value>\n<statement
          name=\"DO\">\n<block type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">turnRight</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\nde
          longitud de\n</block>\n</value>\n<next>\n<block type=\"variables_set\" inline=\"false\">\n<title
          name=\"VAR\"></title>\nAgregar de\n<value name=\"VALUE\">\n<block type=\"math_arithmetic\"
          inline=\"true\">\n<title name=\"OP\"></title>\n<value name=\"A\">\n<block
          type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\n</block>\n</value>\n<value
          name=\"B\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">izquierda</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">izquierda</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\n</block>\n</value>\n<next>\n<block
          type=\"variables_set\" inline=\"false\">\n<title name=\"VAR\">longitud</title>\n<value
          name=\"VALUE\">\n<block type=\"math_arithmetic\" inline=\"true\">\n<title
          name=\"OP\">ADD</title>\n<value name=\"A\">\n<block type=\"variables_get\">\n<title
          name=\"VAR\">longitud</title>\n</block>\n</value>\n<value name=\"B\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">turnRight</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</statement>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>"
      course4_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: 'Las variables son útiles porque las
          puedes agregar cada vez mediante un loop. '
        courseF_artist_variables_challenge2_b: Este acertijo tiene un loop que crea
          un polígono, un loop que repite el poligono las veces de "lados", y otro
          loop que hace todo otra vez luego de agregar 5 a los "lados".
        courseF_artist_variables_challenge2_c: Usar una variable para "lados" y otra
          para "longitud" hace que el código sea más limpio porque puede hacer loop
          del mismo código varias veces, en vez de crear una nueva copia para cada
          conjunto de números.
        courseF_artist_variables_challenge2_d: |-
          **Solución:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      course4_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          El programa principal sería algo como esto:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">

          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: "Mira cuánto maíz hay disponible para cosechar
          en cada espacio. ¿Ves el patrón de contador? El parámetro 'longitud' debe
          ser utilizado para establecer el valor máximo en el loop `para`. \n\n¡No
          olvides que la granjera vuelve al camino principal después de la cosecha!"
        courseF_bee_fwp_challenge1_c: |-
          Pon un loop 'para' dentro de una función y haz que cuente de '1' a 'longitud' por '1'.
          Dentro de este loop deberías avanzar y recoger todo el maíz.

          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: |-
          Dentro del "loop" usted va a querer "avanzar" y después "obtener néctar" **contador veces**.
          Luego del "loop" usted puede "retroceder" **longiutd veces**.
          Puede necesitar esta pista varias veces para comprenderla. La parte en **negrita** es una pista de cómo usar los dos loops "repetir" que necesitará.
        courseF_bee_fwp_challenge1_e: |-
          **Aquí está la solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course4_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Comienza asegurándote de que entiendes cómo _se supone_ que funciona esta función. A medida que la granjera se mueve por cada camino, sólo intentará recolectar maíz. ¿Cómo puedes hacer que busque cada una de las 3 verduras y elegir sólo la que encuentra?

          Agrega afirmaciones condicionales a la función para buscar maíz, calabazas y lechuga.
        courseF_bee_fwp_challenge2_b: "¿Te estás quedando sin bloques de 'avanzar'?
          Trata de usar un \\*segundo \\* `loop para` en tu programa principal. \n\n\\*\\*
          Nota: \\*\\* Ten cuidado de no confundir `contado` con`contador2` en tu
          código."
        courseF_bee_fwp_challenge2_c: |-
          \*\* Así debería verse tu función: \*\*

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>

          <title name="NAME">selección fila</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">izquierda</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">contador</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          longitud de
          <title name="VAR"></title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">contra</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">maíz</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">calabaza</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          lechuga de
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC"></title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">longitud</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Así debería verse tu programa principal:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      course4_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvides que puedes `repetir` un
          solo comando o un patrón más largo. ¡Incluso se puede `` repetir\` un bloque
          'repetir'!
        courseD_bee_nested_loops_challenge2_b: Si quieres obtener las 4 gemas, primero
          usa un bucle para alejarte del centro. Gira a la izquierda o a la derecha,
          y luego usa un bucle anidado para pasar de la primera pila del tesoros a
          la segunda. Si repites el bucle anidado lo suficiente, ¡la recolectora se
          moverá por _toda_ la cueva!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo
          el tesoro usa solo un bloque `colectar` y dos turnos.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: Probablemente ya hayas usado
          un ciclo para crear un patron zig-zag. Si recuerdas ese algoritmo, puedes
          agregarle algunas cosas para usarlo aquí.
      course4_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          Necesitaras bloques adicionales de la caja de herramientras para que los actores hablen.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      course4_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          El actor sabe qué decir porque revisa el valor actual de la variable ´fortuna´.

          <xml><block type="variables_set" inline="false">

          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Pareciera que el juego empieza de nuevo si llamas a la función 'haz una pregunta' después de que el actor dice la fortuna.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: |-
          Tendrás que agregar más declaraciones condicionales para dar a los actores más cosas que decir.

          <xml><block type="studio_ifActorHasEmotionParams" inline="true">
                      <title name="EMOTION">2</title>
                      <value name="SPRITE">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="variables_set" inline="false">
                          <title name="VAR">fortune</title>
                          <value name="VALUE">
                            <block type="text" movable="false">
                              <title name="TEXT">???</title>
                            </block>
                          </value>
                        </block>
                        </statement></block></xml>

          No olvides cambiar los humores que mostrarán los actores dentro del ciclo ´repetir para siempre´. ¡También puedes determinar los humores al azar!
        courseF_playlab_variables_challenge3_d: Una vez que entiendas todo el código
          que se refiere al Actor 1, puedes tratar de volver a escribir el mismo código,
          pero esta vez para el Actor 2. ¡No te olvides de cambiar las instrucciones
          dentro del bloque de 'Mostrar pantalla de título' para que tengan sentido!
        courseF_playlab_variables_challenge3_e: |-
          Cuando todo esté terminado, deberías poder hacer click en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?

          ¡Haz que un amigo pruebe tu aplicación cuando termines!
      courseA_artist_loops2_authored_hint:
        courseA_artist_loops2_a: ¿No sabes cómo dibujar una línea? Comience unir bloques
          a la <xml><block type="when_run"/></xml> para ver qué pasa.
        courseA_artist_loops2_b: Usa este bloque <xml><block type="simple_move_right"/></xml>
          para resolver este desafío.
      courseA_artist_loops2_2018_authored_hint:
        courseA_artist_loops2_a: ¿No sabes cómo dibujar una línea? Comience unir bloques
          a la <xml><block type="when_run"/></xml> para ver qué pasa.
        courseA_artist_loops2_b: Usa este bloque <xml><block type="simple_move_right"/></xml>
          para resolver este desafío.
      courseA_artist_loops2_2019_authored_hint:
        courseA_artist_loops2_a: ¿No sabes cómo dibujar una línea? Comience unir bloques
          a la <xml><block type="when_run"/></xml> para ver qué pasa.
        courseA_artist_loops2_b: Usa este bloque <xml><block type="simple_move_right"/></xml>
          para resolver este desafío.
      courseA_artist_loops3_authored_hint:
        courseA_artist_loops3_a: Delinea lentamente el programa con tu dedo para ver
          dónde esta el error.
        courseA_artist_loops3_b: "Querrás utilizar un bloque como este para resolver
          este desafío. \n\n![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49
          AM.png>)"
      courseA_artist_loops3_2018_authored_hint:
        courseA_artist_loops3_a: Delinea lentamente el programa con tu dedo para ver
          dónde esta el error.
        courseA_artist_loops3_b: "Querrás utilizar un bloque como este para resolver
          este desafío. \n\n![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49
          AM.png>)"
      courseA_artist_loops3_2019_authored_hint:
        courseA_artist_loops3_a: Delinea lentamente el programa con tu dedo para ver
          dónde esta el error.
        courseA_artist_loops3_b: "Querrás utilizar un bloque como este para resolver
          este desafío. \n\n![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49
          AM.png>)"
      courseA_artist_loops4_authored_hint:
        courseA_artist_loops4_a: Si desea que el ciclo se repita más de 4 veces, puede
          cambiar el número en la parte superior del bloque.
        courseA_artist_loops4_b: |-
          Dado que solo puedes utilizar un bloque <xml><block type="simple_move_right"/></xml>
          intenta ponerlo dentro del loop <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block>.
      courseA_artist_loops4_2018_authored_hint:
        courseA_artist_loops4_a: Si deseas que el loop se repita más de 4 veces, puedes
          cambiar el número en la parte superior del bloque.
        courseA_artist_loops4_b: |-
          Dado que solo puede utilizar un bloque <xml><block type="simple_move_right"/></xml>
          trate de poner dentro del ciclo <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block>.
      courseA_artist_loops4_2019_authored_hint:
        courseA_artist_loops4_a: Si deseas que el loop se repita más de 4 veces, puedes
          cambiar el número en la parte superior del bloque.
        courseA_artist_loops4_b: |-
          Dado que solo puedes utilizar un bloque <xml><block type="simple_move_right"/></xml>
          intenta ponerlo dentro del loop <block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block>.
      courseA_artist_loops5_authored_hint:
        courseA_artist_loops5_a: ¡Intenta usar lo que has aprendido sobre los bloques
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> repetir para completar este desafío!
        courseA_artist_loops5_b: Si desea que el ciclo se repita más de 4 veces, puede
          cambiar el número en la parte superior del bloque.
        courseA_artist_loops5_c: |-
          Dado que sólo puedes utilizar un bloque <xml><block type="simple_move_right"/></xml> intenta ponerlo dentro del loop
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>.
      courseA_artist_loops5_2018_authored_hint:
        courseA_artist_loops5_a: ¡Intenta usar lo que has aprendido sobre los bloques
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> repetir para completar este desafío!
        courseA_artist_loops5_b: Si deseas que el loop se repita más de 4 veces, puedes
          cambiar el número en la parte superior del bloque.
        courseA_artist_loops5_c: |-
          Dado que sólo puedes utilizar un bloque <xml><block type="simple_move_right"/></xml> intenta ponerlo dentro del loop
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>.
      courseA_artist_loops5_2019_authored_hint:
        courseA_artist_loops5_a: ¡Intenta usar lo que has aprendido sobre los bloques
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> repetir para completar este desafío!
        courseA_artist_loops5_b: Si deseas que el loop se repita más de 4 veces, puedes
          cambiar el número en la parte superior del bloque.
        courseA_artist_loops5_c: |-
          Dado que sólo puedes utilizar un bloque <xml><block type="simple_move_right"/></xml> intenta ponerlo dentro del loop
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>.
      courseA_artist_loops6_authored_hint:
        courseA_artist_loops6_a: "¿No puedes descifrar cómo hacer la colina? Intenta
          jugar con los bloques para ver qué dibuja cada uno."
        courseA_artist_loops6_b: Necesitarás 2 bloques en 2 direcciones para resolver
          este desafío.
      courseA_artist_loops6_2018_authored_hint:
        courseA_artist_loops6_a: "¿No puedes descifrar cómo hacer la colina? Intenta
          jugar con los bloques para ver qué dibuja cada uno."
        courseA_artist_loops6_b: Necesitarás 2 bloques en 2 direcciones para resolver
          este desafío.
      courseA_artist_loops6_2019_authored_hint:
        courseA_artist_loops6_a: "¿No puedes descifrar cómo hacer la colina? Intenta
          jugar con los bloques para ver qué dibuja cada uno."
        courseA_artist_loops6_b: Necesitarás 2 bloques en 2 direcciones para resolver
          este desafío.
      courseA_artist_loops7_authored_hint:
        courseA_artist_loops7_a: "¿No puedes descifrar donde colocar el loop? Intenta
          escribir el código paso a paso y busca un patrón."
        courseA_artist_loops7_b: Primero escribe el código para una ola y luego repítelo
          para dibujar las otras dos.
        courseA_artist_loops7_c: |-
          Recuerda que puedes poner más de un bloque en un loop <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_2018_authored_hint:
        courseA_artist_loops7_a: "¿No puedes descifrar donde colocar el loop? Intenta
          escribir el código paso a paso y busca un patrón."
        courseA_artist_loops7_b: Primero escribe el código para una ola y luego repítelo
          para dibujar las otras dos.
        courseA_artist_loops7_c: |-
          Recuerda que puedes poner más de un bloque en un loop <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_2019_authored_hint:
        courseA_artist_loops7_a: "¿No puedes descifrar donde colocar el loop? Intenta
          escribir el código paso a paso y busca un patrón."
        courseA_artist_loops7_b: Primero escribe el código para una ola y luego repítelo
          para dibujar las otras dos.
        courseA_artist_loops7_c: |-
          Recuerda que puedes poner más de un bloque en un loop <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_forVideo_authored_hint:
        courseA_artist_loops7_a: "¿No puede averiguar dónde colocar el ciclo? Trate
          de escribir el código paso a paso, y buscar para un patrón."
        courseA_artist_loops7_b: Primero escribe el código para una ola y luego repítelo
          para dibujar las otras dos.
        courseA_artist_loops7_c: |-
          Recuerda que puedes poner más de un bloque en un ciclo <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops8_authored_hint:
        courseA_artist_loops8_a: Intenta ejecutar el código para ver lo que se ha
          escrito para ti.
        courseA_artist_loops8_b: "¿Cómo enlazarías el código que se te ha dado?"
        courseA_artist_loops8_c: "¿Qué hace el código?  \n¿Qué se supone que haga?
          \ \n¿Qué te dice eso?"
      courseA_artist_loops8_2018_authored_hint:
        courseA_artist_loops8_a: Intenta ejecutar el código para ver lo que se ha
          escrito para ti.
        courseA_artist_loops8_b: "¿Cómo enlazarías el código que se te ha dado?"
        courseA_artist_loops8_c: "¿Qué hace el código?  \n¿Qué se supone que haga?
          \ \n¿Qué te dice eso?"
      courseA_artist_loops8_2019_authored_hint:
        courseA_artist_loops8_a: Intenta ejecutar el código para ver lo que se ha
          escrito para ti.
        courseA_artist_loops8_b: "¿Cómo enlazarías el código que se te ha dado?"
        courseA_artist_loops8_c: "¿Qué hace el código?  \n¿Qué se supone que haga?
          \ \n¿Qué te dice eso?"
      courseA_artist_loops9_authored_hint:
        courseA_artist_loops9_a: Agrega otro bloque al código que te dan para dibujar
          el resto de las escaleras.
        courseA_artist_loops9_b: |-
          El bloque que agregues debería ir dentro del loop <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Si no puedes descifrar dónde colocar el loop, intenta
          escribir tu código paso a paso y buscar patrones.
      courseA_artist_loops9_2018_authored_hint:
        courseA_artist_loops9_a: Agrega otro bloque al código que te dan para dibujar
          el resto de las escaleras.
        courseA_artist_loops9_b: |-
          El bloque que agregues debería ir dentro del loop <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Si no puedes descifrar dónde colocar el loop, intenta
          escribir tu código paso a paso y buscar patrones.
      courseA_artist_loops9_2019_authored_hint:
        courseA_artist_loops9_a: Agrega otro bloque al código que te dan para dibujar
          el resto de las escaleras.
        courseA_artist_loops9_b: |-
          El bloque que agregues debería ir dentro del loop <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Si no puedes descifrar dónde colocar el loop, intenta
          escribir tu código paso a paso y buscar patrones.
      courseA_artist_loops_challenge2_authored_hint:
        courseA_artist_loops_challenge2_a: ¡Bloques como este <xml>  <block type="simple_move_up_left"/></xml>
          permitirán que tu artista se mueva de forma inclinada!
        courseA_artist_loops_challenge2_b: Cuando termines una casa de pájaros, ¡salta
          a la siguiente!
        courseA_artist_loops_challenge2_c: Necesitará MUCHOS bloques dentro del ciclo
          para este desafío.
      courseA_artist_loops_challenge2a_authored_hint:
        courseA_artist_loops_challenge2_a: Bloques como este <xml>  <block type="simple_move_up_left"/></xml>
          le permitirán a su artista moverse de forma inclinada!
        courseA_artist_loops_challenge2_b: Cuando termines una tienda, ¡'salta' dos
          veces para pasar a la siguiente!
        courseA_artist_loops_challenge2_c: Todos tus bloques necesitarán estar dentro
          de un loop para terminar este desafío.
      courseA_artist_loops_challenge2a_2018_authored_hint:
        courseA_artist_loops_challenge2_a: ¡Bloques como este <xml>  <block type="simple_move_up_left"/></xml>
          permitirán que tu artista se mueva de forma inclinada!
        courseA_artist_loops_challenge2_b: Cuando termines una tienda, ¡'salta' dos
          veces para pasar a la siguiente!
        courseA_artist_loops_challenge2_c: Todos tus bloques necesitarán estar dentro
          de un loop para terminar este desafío.
      courseA_artist_loops_challenge2a_2019_authored_hint:
        courseA_artist_loops_challenge2_a: ¡Bloques como este <xml>  <block type="simple_move_up_left"/></xml>
          permitirán que tu artista se mueva de forma inclinada!
        courseA_artist_loops_challenge2_b: Cuando termines una tienda, ¡'salta' dos
          veces para pasar a la siguiente!
        courseA_artist_loops_challenge2_c: Todos tus bloques necesitarán estar dentro
          de un loop para terminar este desafío.
      courseA_artist_loops_challenge3_authored_hint:
        harvey_tictactoe: Puede usar bloques `salto` para moverte a otros espacios.
      courseA_bee_seq1_authored_hint:
        courseA_bee_seq1_a: |-
          Usa este bloque para obtener néctar una vez que la abeja encuentre una flor.
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq12_authored_hint:
        courseA_bee_seq1_a: |-
          Usa este bloque para obtener néctar una vez que la abeja encuentre una flor.
          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_collector_loops1_authored_hint:
        courseA_collector_loops1_a: |-
          Luego que se haya movido hacia un cuadrado con tesoro, use este bloque para tomarlo.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Una solución simple sería moverse al este 2 veces,
          luego obtener el tesoro.
      courseA_collector_loops1_2018_authored_hint:
        courseA_collector_loops1_a: |-
          Luego que se haya movido hacia un cuadrado con tesoro, use este bloque para tomarlo.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Una solución simple sería moverse al este 2 veces,
          luego obtener el tesoro.
      courseA_collector_loops1_2019_authored_hint:
        courseA_collector_loops1_a: |-
          Luego que se haya movido hacia un cuadrado con tesoro, use este bloque para tomarlo.
          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Una solución simple sería moverse al este 2 veces,
          luego obtener el tesoro.
      courseA_collector_loops2_authored_hint:
        courseA_collector_loops2_a: Tendrás que moverte antes de poder recolectar
          cualquier tesoro.
        courseA_collector_loops2_b: |-
          Luego que se haya movido hacia un cuadrado con tesoro, use este bloque para tomarlo.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018_authored_hint:
        courseA_collector_loops2_a: Tendrás que moverte antes de poder recolectar
          cualquier tesoro.
        courseA_collector_loops2_b: |-
          Luego que se haya movido hacia un cuadrado con tesoro, use este bloque para tomarlo.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019_authored_hint:
        courseA_collector_loops2_a: Tendrás que moverte antes de poder recolectar
          cualquier tesoro.
        courseA_collector_loops2_b: |-
          Luego que se haya movido hacia un cuadrado con tesoro, use este bloque para tomarlo.
          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3_authored_hint:
        courseA_collector_loops3_a: Intenta usar un loop <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_collector_loops3_b: |-
          Recuerda que puedes poner más de un bloque en un loop <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>.
      courseA_collector_loops3_2018_authored_hint:
        courseA_collector_loops3_a: Intenta usar un loop <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_collector_loops3_b: |-
          Recuerda que puedes poner más de un bloque en un loop <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>.
      courseA_collector_loops3_2019_authored_hint:
        courseA_collector_loops3_a: Intenta usar un loop <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_collector_loops3_b: |-
          Recuerda que puedes poner más de un bloque en un loop <xml><block type="controls_repeat">

          <title name="TIMES">???</title>
          </block></xml>.
      courseA_collector_loops4_authored_hint:
        courseA_collector_loops4_a: Para cambiar qué tan lejos va Laurel, cambia la
          cantidad de veces que se ejecuta el loop.
        courseA_collector_loops4_b: No olvides que Laurel necesita caminar y recoger
          el tesoro después de que ella termine el loop <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
      courseA_collector_loops4_2018_authored_hint:
        courseA_collector_loops4_a: Para cambiar qué tan lejos va Laurel, cambia la
          cantidad de veces que se ejecuta el loop.
        courseA_collector_loops4_b: No olvides que Laurel necesita caminar y recoger
          el tesoro después de que ella termine el loop <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
      courseA_collector_loops4_2019_authored_hint:
        courseA_collector_loops4_a: Para cambiar qué tan lejos va Laurel, cambia la
          cantidad de veces que se ejecuta el loop.
        courseA_collector_loops4_b: No olvides que Laurel necesita caminar y recoger
          el tesoro después de que ella termine el loop <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
      courseA_collector_loops5_authored_hint:
        courseA_collector_loops5_a: Si usted no puede encontrar la respuesta de inmediato,
          trate de usar un trozo de papel para averiguar las flechas que se necesita
          y mirar un patrón.
        courseA_collector_loops5_b: Intente dividir el problema en 2 partes, moviéndose
          de lado y luego hacia abajo.
        courseA_collector_loops5_c: Deberá comenzar con un ciclo <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> que mueve a Laurel
          hacia el oeste y recoge el tesoro.
      courseA_collector_loops5_2018_authored_hint:
        courseA_collector_loops5_a: Si usted no puede encontrar la respuesta de inmediato,
          trate de usar un trozo de papel para averiguar las flechas que se necesita
          y mirar un patrón.
        courseA_collector_loops5_b: Intente dividir el problema en 2 partes, moviéndose
          de lado y luego hacia abajo.
        courseA_collector_loops5_c: Deberá comenzar con un ciclo <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> que mueve a Laurel
          hacia el oeste y recoge el tesoro.
      courseA_collector_loops5_2019_authored_hint:
        courseA_collector_loops5_a: Si usted no puede encontrar la respuesta de inmediato,
          trate de usar un trozo de papel para averiguar las flechas que se necesita
          y mirar un patrón.
        courseA_collector_loops5_b: Intente dividir el problema en 2 partes, moviéndose
          de lado y luego hacia abajo.
        courseA_collector_loops5_c: Deberá comenzar con un ciclo <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> que mueve a Laurel
          hacia el oeste y recoge el tesoro.
      courseA_collector_loops6_authored_hint:
        courseA_collector_loops6_a: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
        courseA_collector_loops6_b: La solución más corta tiene 2 ciclos, <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          uno después del otro.
      courseA_collector_loops6_2018_authored_hint:
        courseA_collector_loops6_a: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
        courseA_collector_loops6_b: La solución más corta tiene 2 ciclos, <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          uno después del otro.
      courseA_collector_loops6_2019_authored_hint:
        courseA_collector_loops6_a: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
        courseA_collector_loops6_b: La solución más corta tiene 2 ciclos, <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          uno después del otro.
      courseA_collector_loops7_authored_hint:
        courseA_collector_loops7_a: Si no puede descubrir qué viene después, intente
          ejecutar el código para ver dónde termina Laurel.
      courseA_collector_loops7_2018_authored_hint:
        courseA_collector_loops7_a: Si no puede descubrir qué viene después, intente
          ejecutar el código para ver dónde termina Laurel.
      courseA_collector_loops7_2019_authored_hint:
        courseA_collector_loops7_a: Si no puede descubrir qué viene después, intente
          ejecutar el código para ver dónde termina Laurel.
      courseA_collector_loops8_authored_hint:
        courseA_collector_loops8_a: Si estás teniendo problemas para descifrar este
          desafío, trata de escribir los movimientos hacia abajo en un pedazo de papel
          y buscar un patrón.
        courseA_collector_loops8_b: Intenta dividir este rompecabezas en 3 problemas
          separados y escribir ciclos para cada uno.
        courseA_collector_loops8_c: Recuerde que puede escribir una parte del código
          a la vez, luego presione "Ejecutar" para descubrir hacia dónde debe dirigirse
          desde allí.
      courseA_collector_loops8_2018_authored_hint:
        courseA_collector_loops8_a: Si estás teniendo problemas para descifrar este
          desafío, trata de escribir los movimientos hacia abajo en un pedazo de papel
          y buscar un patrón.
        courseA_collector_loops8_b: Intenta dividir este rompecabezas en 3 problemas
          separados y escribir ciclos para cada uno.
        courseA_collector_loops8_c: Recuerde que puede escribir una parte del código
          a la vez, luego presione "Ejecutar" para descubrir hacia dónde debe dirigirse
          desde allí.
      courseA_collector_loops8_2019_authored_hint:
        courseA_collector_loops8_a: Si estás teniendo problemas para descifrar este
          desafío, trata de escribir los movimientos hacia abajo en un pedazo de papel
          y buscar un patrón.
        courseA_collector_loops8_b: Intenta dividir este rompecabezas en 3 problemas
          separados y escribir ciclos para cada uno.
        courseA_collector_loops8_c: Recuerde que puede escribir una parte del código
          a la vez, luego presione "Ejecutar" para descubrir hacia dónde debe dirigirse
          desde allí.
      courseA_collector_loops9_authored_hint:
        courseA_collector_loops9_a: 'Si no puede identificar los mejores lugares para
          usar loops, intente codificar paso a paso y encontrar un patrón. '
        courseA_collector_loops9_b: Intenta poner dos de tus ciclos <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> dentro de otro ciclo
          que hacen el código más corto!
      courseA_collector_loops9_2018_authored_hint:
        courseA_collector_loops9_a: 'Si no puede identificar los mejores lugares para
          usar loops, intente codificar paso a paso y encontrar un patrón. '
        courseA_collector_loops9_b: Intenta poner dos de tus ciclos <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> dentro de otro ciclo
          que hacen el código más corto!
      courseA_collector_loops9_2019_authored_hint:
        courseA_collector_loops9_a: 'Si no puede identificar los mejores lugares para
          usar loops, intente codificar paso a paso y encontrar un patrón. '
        courseA_collector_loops9_b: Intenta poner dos de tus ciclos <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> dentro de otro ciclo
          que hacen el código más corto!
      courseA_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada
          loop si algo parece incorrecto.
        courseA_collector_loops_challenge1_b: No necesita usar un ciclo si solo está
          haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la
          cueva cuando comienzas, pero solo necesitas moverte 5 veces al sur para
          obtener el tesoro. ¿Sabes por qué?
        courseA_collector_loops_challenge1_d: |-
          El programa de inicio no recoge las últimas 2 gemas. Intente agregar este código al final: <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2018_authored_hint:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada
          loop si algo parece incorrecto.
        courseA_collector_loops_challenge1_b: No necesita usar un ciclo si solo está
          haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la
          cueva cuando comienzas, pero solo necesitas moverte 5 veces al sur para
          obtener el tesoro. ¿Sabes por qué?
        courseA_collector_loops_challenge1_d: |-
          El programa de inicio no recoge las últimas 2 gemas. Intente agregar este código al final: <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2019_authored_hint:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada
          loop si algo parece incorrecto.
        courseA_collector_loops_challenge1_b: No necesita usar un ciclo si solo está
          haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la
          cueva cuando comienzas, pero solo necesitas moverte 5 veces al sur para
          obtener el tesoro. ¿Sabes por qué?
        courseA_collector_loops_challenge1_d: |-
          El programa de inicio no recoge las últimas 2 gemas. Intente agregar este código al final: <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: Solo necesitas usar 1 bloque para resolver
          esto.
        courseA_collector_loops_challenge2_a: Puede retroceder por el camino una segunda
          vez antes de ir hacia el sur.
      courseA_collector_loops_challenge2kp_authored_hint:
        courseA_collector_loops_challenge2kp_b: Prueba este camino para llegar a una
          solución.
        courseA_collector_loops_challenge2kp_a: "¿Puedes usar loops para resolver
          este puzzle?"
      courseA_collector_loops_challenge2kp_2018_authored_hint:
        courseA_collector_loops_challenge2kp_b: Prueba este camino para llegar a una
          solución.
        courseA_collector_loops_challenge2kp_a: "¿Puedes usar loops para resolver
          este puzzle?"
      courseA_collector_loops_challenge2kp_2019_authored_hint:
        courseA_collector_loops_challenge2kp_b: Prueba este camino para llegar a una
          solución.
        courseA_collector_loops_challenge2kp_a: "¿Puedes usar loops para resolver
          este puzzle?"
      courseA_collector_preLoops4_authored_hint:
        courseA_collector_preLoops4_a: Para agarrar el tesoro, ¡encaje dos! \[] (Https\://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
          ¡ bloques y uno! \[] (Https\://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-
          image-1508904559201.05.30.png) bloquear en la parte inferior del programa
          y haga clic en "Ejecutar"!
      courseA_collector_preLoops5_authored_hint:
        courseA_collector_preLoops5_a: "¡Tendrás que ir en dos direcciones diferentes
          para obtener incluso una gema!"
      courseA_collector_preLoops6_authored_hint:
        courseA_collector_preLoops6_a: "¡Tendrás que utilizar dos! \\[] (Https\\://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          bloques para resolver este desafío."
      courseA_collector_preLoops7_authored_hint:
        courseA_collector_loops2_b: |-
          Luego que se haya movido hacia un cuadrado con tesoro, use este bloque para tomarlo.
          <xml>  <block type="collector_collect"/></xml>
      courseA_data widget_authored_hint:
        courseA_playLab_events7_a: |-
          Usa este bloque para controlar lo que sucede cuando los actores colisionan.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_harvester_forVideo_authored_hint:
        courseA_harvester_loops3_a: |-
          Use un bloque de repetición como este para ayudarlo.
          <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">3</title>
          </block></xml>
      courseA_harvester_loops1_authored_hint:
        courseA_harvester_loops1_a: |-
          ¡Una vez que se mueva hacia el maíz, use este bloque para recogerlo!
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops1_2019_authored_hint:
        courseA_harvester_loops1_a: |-
          ¡Una vez que se mueva hacia el maíz, use este bloque para recogerlo!
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops2_authored_hint:
        courseA_harvester_loops2_a: Tu código tendrá \*\* cuatro \*\* bloques `de
          mover el oeste` y \*\* cuatro \*\* bloques de`selección de maíz`.
        courseA_harvester_loops2_b: 'Si aún tienes problemas, intenta contar los pasos
          en voz alta. '
      courseA_harvester_loops2_2019_authored_hint:
        courseA_harvester_loops2_a: 'Tu código tendrá \*\* cuatro \*\* bloques `de
          mover el oeste` y \*\* cuatro \*\* bloques de`selección de maíz`. '
        courseA_harvester_loops2_b: 'Si aún tienes problemas, intenta contar los pasos
          en voz alta. '
      courseA_harvester_loops3_authored_hint:
        courseA_harvester_loops3_a: |-
          Use un bloque de repetición como este para ayudarlo.
          <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: "Para repetir el código, arrastra un loop ´repetir´
          (<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml> ), luego ubica el bloque que
          quieres dentro de él. "
      courseA_harvester_loops3_2019_authored_hint:
        courseA_harvester_loops3_a: |-
          Use un bloque de repetición como este para ayudarlo.
          <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: "Para repetir el código, arrastra un loop ´repetir´
          (<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml> ), luego ubica el bloque que
          quieres dentro de él. "
      courseA_harvester_loops4_authored_hint:
        courseA_harvester_loops4_a: "¡No tengas miedo de presionar `Ejecutar` para
          ver qué pasa!"
        courseA_harvester_loops4_b: "¿Cuántas piezas de maíz hay? ¿Cuántas veces se
          repite tu código?"
      courseA_harvester_loops4_2019_authored_hint:
        courseA_harvester_loops4_a: "¡No tengas miedo de presionar `Ejecutar` para
          ver qué pasa!"
        courseA_harvester_loops4_b: "¿Cuántas piezas de maíz hay? ¿Cuántas veces se
          repite tu código?"
      courseA_harvester_loops5_authored_hint:
        courseA_harvester_loops5_a: Si te quedas atascado, intenta resolver el rompecabezas
          en 2 partes, una parte antes de la esquina y una parte después de la esquina.
        courseA_harvester_loops5_b: El código final tendrá \*\* un \*\* ciclo, \*\*
          un \*\* bloque de 'mover al sur', y \*\* un \*\* bloque 'mover al Este'.
        courseA_harvester_loops5_c: "¡Utilizar esta ruta para recoger el maíz!"
      courseA_harvester_loops5_2019_authored_hint:
        courseA_harvester_loops5_a: Si te quedas atascado, intenta resolver el rompecabezas
          en 2 partes, una parte antes de la esquina y una parte después de la esquina.
        courseA_harvester_loops5_b: El código final tendrá \*\* un \*\* ciclo, \*\*
          un \*\* bloque de 'mover al sur', y \*\* un \*\* bloque 'mover al Este'.
        courseA_harvester_loops5_c: "¡Utilizar esta ruta para recoger el maíz!"
      courseA_harvester_loops5a_authored_hint:
        courseA_harvester_loops5a_a: |-
          Necesitarás un loop 'repetir' <xml> <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">6</title>
          </block></xml> después de otro.
        courseA_harvester_loops5a_b: Un ciclo repetirá `mover al sur`, y el otro repetirá`mover
          al este`.
        courseA_harvester_loops5a_c: Utilizar este camino para mover una forma y luego
          el otro.
      courseA_harvester_loops5a_2019_authored_hint:
        courseA_harvester_loops5a_a: |-
          Necesitarás un loop 'repetir' <xml> <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">6</title>
          </block></xml> después de otro.
        courseA_harvester_loops5a_b: Un ciclo repetirá `mover al sur`, y el otro repetirá`mover
          al este`.
        courseA_harvester_loops5a_c: Utilizar este camino para mover una forma y luego
          el otro.
      courseA_harvester_loops5b_authored_hint:
        courseA_harvester_loops5b_a: Presiona `Ejecutar` y mira lo que sucede!
        courseA_harvester_loops5b_b: "¿Se repiten sus loops el correcto número de
          veces?"
        courseA_harvester_loops5b_c: Muevete de una forma, luego de la otra con este
          camino.
      courseA_harvester_loops5b_2019_authored_hint:
        courseA_harvester_loops5b_a: Presiona `Ejecutar` y mira lo que sucede!
        courseA_harvester_loops5b_b: "¿Se repiten sus loops el correcto número de
          veces?"
        courseA_harvester_loops5b_c: Muevete de una forma, luego de la otra con este
          camino.
      courseA_harvester_loops6_authored_hint:
        courseA_harvester_loops6_a: Si te estancas, intenta escribir los pasos en
          un papel y busca los patrones que se repiten.
        courseA_harvester_loops6_b: Este es el camino que debes tomar para recoger
          el maíz.
      courseA_harvester_loops6_2019_authored_hint:
        courseA_harvester_loops6_a: Si te estancas, intenta escribir los pasos en
          un papel y busca los patrones que se repiten.
        courseA_harvester_loops6_b: Este es el camino que debes tomar para recoger
          el maíz.
      courseA_harvester_loops7_authored_hint:
        courseA_harvester_loops7_a: Necesitará dos loops de repetición, uno tras otro!
        courseA_harvester_loops7_b: Utiliza dos loops para seguir este camino.
      courseA_harvester_loops7_2019_authored_hint:
        courseA_harvester_loops7_a: Necesitará dos loops de repetición, uno tras otro!
        courseA_harvester_loops7_b: Utiliza dos loops para seguir este camino.
      courseA_harvester_loops9_authored_hint:
        courseA_harvester_loops9_a: Divide este rompecabezas en tres partes diferentes.
          Una parte en la primera esquina, una parte en la segunda esquina y una parte
          hasta el final.
        courseA_harvester_loops9_b: "¡No tengas miedo de ejecutar tu código después
          de cada parte para ver qué pasa!"
        courseA_harvester_loops9_c: "¡Sigue esta ruta para recoger todo el maíz."
      courseA_harvester_loops9_2019_authored_hint:
        courseA_harvester_loops9_a: Divide este rompecabezas en tres partes diferentes.
          Una parte en la primera esquina, una parte en la segunda esquina y una parte
          hasta el final.
        courseA_harvester_loops9_b: "¡No tengas miedo de ejecutar tu código después
          de cada parte para ver qué pasa!"
        courseA_harvester_loops9_c: "¡Sigue esta ruta para recoger todo el maíz."
      courseA_harvester_seq1_authored_hint:
        courseA_harvester_seq1_a: |-
          ¡Usa este bloque para recoger el maíz cuando la cosechadora lo encuentre!
          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          La cosechadora deberá moverse al este tres veces para llegar al maíz. Utilice este bloque:
          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10_authored_hint:
        courseA_harvester_seq10_a: "¿Estás atascado/a? Trata de anotar primero los
          pasos en una hoja de papel."
        courseA_harvester_seq10_b: Necesitas `Mover al este`, luego`Mover al norte`.
          Haz esto dos veces. ¡No te olvides de obtener todo el maíz también!
        courseA_harvester_seq10_c: "¡Utiliza esta ruta para recoger todo el maíz."
      courseA_harvester_seq10_2019_authored_hint:
        courseA_harvester_seq10_a: "¿Estás atascado/a? Trata de anotar primero los
          pasos en una hoja de papel."
        courseA_harvester_seq10_b: Necesitas `Mover al este`, luego`Mover al norte`.
          Haz esto dos veces. ¡No te olvides de obtener todo el maíz también!
        courseA_harvester_seq10_c: "¡Utiliza esta ruta para recoger todo el maíz."
      courseA_harvester_seq13_authored_hint:
        courseA_bee_seq1_a: Utiliza este bloque para recoger maiz una vez que la cosechadora
          llegue ahí
      courseA_harvester_seq13_2019_authored_hint:
        courseA_bee_seq1_a: Utiliza este bloque para recoger maiz una vez que la cosechadora
          llegue ahí
      courseA_harvester_seq1_2019_authored_hint:
        courseA_harvester_seq1_a: |-
          ¡Usa este bloque para recoger el maíz cuando la cosechadora lo encuentre!
          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          La cosechadora deberá moverse al este tres veces para llegar al maíz. Utilice este bloque:
          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq2_authored_hint:
        courseA_harvester_seq2_a: ¡No olvides utilizar <xml><block type="harvester_corn"/></xml>
          para recoger el maíz!
        courseA_harvester_seq2_b: "¡Intenta escribir los pasos en papel para encontrar
          una solución!"
      courseA_harvester_seq2_2019_authored_hint:
        courseA_harvester_seq2_a: ¡No olvides utilizar <xml><block type="harvester_corn"/></xml>
          para recoger el maíz!
        courseA_harvester_seq2_b: "¡Intenta escribir los pasos en papel para encontrar
          una solución!"
      courseA_harvester_seq3_authored_hint:
        courseA_harvester_seq3_a: |-
          ¿Recordaste usar este bloque?
          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Diga los pasos en voz alta y vea si le ayudan a
          encontrar la respuesta.
      courseA_harvester_seq3_2019_authored_hint:
        courseA_harvester_seq3_a: |-
          ¿Recordaste usar este bloque?
          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Diga los pasos en voz alta y vea si le ayudan a
          encontrar la respuesta.
      courseA_harvester_seq4_authored_hint:
        courseA_harvester_seq4_a: "¿Cuántos espacios hay entre el Harvester y el maíz?
          ¿Cuántos bloques hay en tu espacio de trabajo?"
        courseA_harvester_seq4_b: |-
          Necesitará cinco bloques mover al este y un bloque`Tomar maíz`:
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq4_2019_authored_hint:
        courseA_harvester_seq4_a: "¿Cuántos espacios hay entre el Harvester y el maíz?
          ¿Cuántos bloques hay en tu espacio de trabajo?"
        courseA_harvester_seq4_b: |-
          Necesitará cinco bloques mover al este y un bloque`Tomar maíz`:
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5_authored_hint:
        courseA_harvester_seq5_a: "¿Qué bloque mueve a la cosechadora de la manera
          incorrecta?"
        courseA_harvester_seq5_b: Es necesario eliminar un bloque.
        courseA_harvester_seq5_c: |-
          ¡Tira este bloque a la basura!
          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq5_2019_authored_hint:
        courseA_harvester_seq5_a: "¿Qué bloque mueve a la cosechadora de la manera
          incorrecta?"
        courseA_harvester_seq5_b: Es necesario eliminar un bloque.
        courseA_harvester_seq5_c: |-
          ¡Tira este bloque a la basura!
          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6_authored_hint:
        courseA_harvester_seq6_a: Si estás atascado, trata de decir los pasos en voz
          alta. Podría ayudarte a descubrir el camino correcto.
      courseA_harvester_seq6_2019_authored_hint:
        courseA_harvester_seq6_a: Si estás atascado, trata de decir los pasos en voz
          alta. Podría ayudarte a descubrir el camino correcto.
      courseA_harvester_seq7_authored_hint:
        courseA_harvester_seq7_a: Intenta resolver el rompecabezas en 2 partes, una
          parte antes de la esquina y una parte después de la esquina.
        courseA_harvester_seq7_b: "¿Tienes problemas? Este es el camino que debe tomar
          la cosechadora."
      courseA_harvester_seq7_2019_authored_hint:
        courseA_harvester_seq7_a: Intenta resolver el rompecabezas en 2 partes, una
          parte antes de la esquina y una parte después de la esquina.
        courseA_harvester_seq7_b: "¿Tienes problemas? Este es el camino que debe tomar
          la cosechadora."
      courseA_harvester_seq8_authored_hint:
        courseA_harvester_seq8_a: Tu código final debe tener \*\* 4 \*\* bloques de
          movimiento y \*\* 2 \*\* bloques de selección.
      courseA_harvester_seq8_2019_authored_hint:
        courseA_harvester_seq8_a: Tu código final debe tener \*\* 4 \*\* bloques de
          movimiento y \*\* 2 \*\* bloques de selección.
      courseA_harvester_seq9_authored_hint:
        courseA_harvester_seq9_a: Ejecute el código varias veces para ver qué sucede.
          ¿Dónde se detiene la cosechadora?
        courseA_harvester_seq9_b: "¡No te olvides de recoger todo el maíz! Necesitarás
          bloques de maíz \\*\\* \\*\\* \\*\\*."
        courseA_harvester_seq9_c: Sigue esta ruta para recoger todo el maíz.
      courseA_harvester_seq9_2019_authored_hint:
        courseA_harvester_seq9_a: Ejecute el código varias veces para ver qué sucede.
          ¿Dónde se detiene la cosechadora?
        courseA_harvester_seq9_b: "¡No te olvides de recoger todo el maíz! Necesitarás
          bloques de maíz \\*\\* \\*\\* \\*\\*."
        courseA_harvester_seq9_c: Sigue esta ruta para recoger todo el maíz.
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Su código debe verse así:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2_2019_authored_hint:
        '1': |-
          Su código debe verse así:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Ajustar los dos bloques de la parte inferior del bloque "cuando corre".
      courseA_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nPara
          eliminar un bloque en el medio de tu código, arrastra todos los bloques
          debajo de él hacia la derecha y déjalos en el espacio de trabajo por un
          tiempo. \n\nHaz clic en el bloque que deseas eliminar y arrástralo nuevamente
          a la caja de herramientas. \n\nFinalmente, vuelve a poner los otros bloques
          en su lugar."
      courseA_maze_ramp3a_2018_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3a_2019_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2018_authored_hint:
        '1': |-
          Tu código deberia verse asi;

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2019_authored_hint:
        '1': |-
          Tu código deberia verse asi;

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde
          el punto de vista del pájaro. Si estás mirando hacia la derecha, girar a
          la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar al cerdo.
      courseA_maze_ramp4a_2018_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4a_2019_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseA_maze_ramp5a_2018_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5a_2019_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq1_authored_hint:
        courseA_maze_seq1_a: |-
          Si usted está teniendo problemas para conseguir que el pájaro se mueva, asegurar que los bloques encajen en su lugar
          <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          El ave tendrá que moverse hacia el oeste 3 veces para llegar al cerdo. Utilice este bloque:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10_authored_hint:
        courseA_maze_seq10_a: Si tienes problemas, primero intenta anotar los pasos
          en una hoja de papel.
        courseA_maze_seq10_b: Tendrá que ir en 3 direcciones para resolver este rompecabezas.
      courseA_maze_seq10_2018_authored_hint:
        courseA_maze_seq10_a: Si tienes problemas, primero intenta anotar los pasos
          en una hoja de papel.
        courseA_maze_seq10_b: Tendrá que ir en 3 direcciones diferentes para resolver
          este rompecabezas.
      courseA_maze_seq10_2019_authored_hint:
        courseA_maze_seq10_a: Si tienes problemas, primero intenta anotar los pasos
          en una hoja de papel.
        courseA_maze_seq10_b: Tendrá que ir en 3 direcciones diferentes para resolver
          este rompecabezas.
      courseA_maze_seq13_authored_hint:
        courseA_maze_seq13_a: Si el camino que necesita no está claro, use su dedo
          para seguir el camino del pájaro hasta el cerdo.
        courseA_maze_seq13_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá."
        courseA_maze_seq13_c: |-
          Estos bloques <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml> te ayudarán a moverte más cerca del cerdo.
      courseA_maze_seq13_2018_authored_hint:
        courseA_maze_seq13_a: Si el camino que necesita no está claro, use su dedo
          para seguir el camino del pájaro hasta el cerdo.
        courseA_maze_seq13_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá."
        courseA_maze_seq13_c: |-
          Estos bloques <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml> te ayudarán a moverte más cerca del cerdo.
      courseA_maze_seq13_2019_authored_hint:
        courseA_maze_seq13_a: Si el camino que necesita no está claro, use su dedo
          para seguir el camino del pájaro hasta el cerdo.
        courseA_maze_seq13_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá."
        courseA_maze_seq13_c: |-
          Estos bloques <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml> te ayudarán a moverte más cerca del cerdo.
      courseA_maze_seq1_2018_authored_hint:
        courseA_maze_seq1_a: |-
          Si usted está teniendo problemas para conseguir que el pájaro se mueva, asegurar que los bloques encajen en su lugar
          <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          El ave tendrá que moverse hacia el oeste 3 veces para llegar al cerdo. Utilice este bloque:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019_authored_hint:
        courseA_maze_seq1_a: |-
          Si usted está teniendo problemas para conseguir que el pájaro se mueva, asegurar que los bloques encajen en su lugar
          <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          El ave tendrá que moverse hacia el oeste 3 veces para llegar al cerdo. Utilice este bloque:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2_authored_hint:
        courseA_maze_seq2_a: A este programa le falta 1 bloque. ¿Puede averiguar cuál?
        courseA_maze_seq2_b: Intenta ejecutar el código primero, para ver dónde termina
          el pájaro. ¿A dónde necesitar ir desde allí?
      courseA_maze_seq2_2018_authored_hint:
        courseA_maze_seq2_a: A este programa le falta 1 bloque. ¿Puede averiguar cuál?
        courseA_maze_seq2_b: Intenta ejecutar el código primero, para ver dónde termina
          el pájaro. ¿A dónde necesitar ir desde allí?
      courseA_maze_seq3_authored_hint:
        courseA_maze_seq3_a: 1 de los bloques está moviendo al pájaro en la dirección
          incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
        courseA_maze_seq3_b: Intenta usar el botón de paso para encontrar dónde sale
          mal el programa. ¿Es el primer paso? ¿El segundo?
        courseA_maze_seq3_c: Este bloque <xml><block type="maze_moveNorth"/></xml>
          no parece estar moviendo el pájaro en la dirección correcta. ¿Puedes reemplazarlo
          con un bloque diferente?
      courseA_maze_seq3_2018_authored_hint:
        courseA_maze_seq3_a: 1 de los bloques está moviendo al pájaro en la dirección
          incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
        courseA_maze_seq3_b: Intenta usar el botón de paso para encontrar dónde sale
          mal el programa. ¿Es el primer paso? ¿El segundo?
        courseA_maze_seq3_c: Este bloque <xml><block type="maze_moveNorth"/></xml>
          no parece estar moviendo el pájaro en la dirección correcta. ¿Puedes reemplazarlo
          con un bloque diferente?
      courseA_maze_seq4_authored_hint:
        courseA_maze_seq4_a: Si tiene problemas, intente descubrir cuál es la ruta
          correcta y luego elimine el bloque que no encaja.
        courseA_maze_seq4_b: Intenta ejecutar el código tal como está. ¿Algo va mal?
          ¿Qué bloque puedes eliminar? ¿Cómo puedes arreglarlo?
      courseA_maze_seq4_2018_authored_hint:
        courseA_maze_seq4_a: Si tiene problemas, intente descubrir cuál es la ruta
          correcta y luego elimine el bloque que no encaja.
        courseA_maze_seq4_b: Intenta ejecutar el código tal como está. ¿Algo va mal?
          ¿Qué bloque puedes eliminar? ¿Cómo puedes arreglarlo?
      courseA_maze_seq4a_authored_hint:
        courseA_maze_seq4_a: Si tiene problemas, intente usar su dedo para averiguar
          cuál es el camino correcto apuntando al mapa. ¿Qué movimientos hace tu dedo?
      courseA_maze_seq5_authored_hint:
        courseA_maze_seq5_a: "¡Intenta escribir los pasos en papel para encontrar
          una solución!"
        courseA_maze_seq5_b: Necesitarás 2 bloques, apuntando en 2 direcciones.
      courseA_maze_seq5_2018_authored_hint:
        '1': "¡Intenta escribir los pasos en papel para encontrar una solución!"
        '2': "Deberá usar este bloque: \n<xml><block type=\"maze_moveEast\"/></xml>"
      courseA_maze_seq5_2019_authored_hint:
        '1': "¡Intenta escribir los pasos en papel para encontrar una solución!"
        '2': "Deberá usar este bloque: \n<xml><block type=\"maze_moveEast\"/></xml>"
      courseA_maze_seq5a_2018_authored_hint:
        '1': Diga los pasos en voz alta y vea si le ayudan a encontrar la respuesta.
      courseA_maze_seq5a_2019_authored_hint:
        '1': Diga los pasos en voz alta y vea si le ayudan a encontrar la respuesta.
      courseA_maze_seq6_authored_hint:
        courseA_maze_seq6_a: Tu código final debe tener 3 bloques de movimiento.
        courseA_maze_seq6_b: Si te quedas atascado, intenta resolver el rompecabezas
          en 2 partes, una parte antes de la esquina y una parte después de la esquina.
      courseA_maze_seq6_2018_authored_hint:
        courseA_maze_seq6_a: Tu código final debe tener 3 bloques de movimiento.
        courseA_maze_seq6_b: Si te quedas atascado, intenta resolver el rompecabezas
          en 2 partes, una parte antes de la esquina y una parte después de la esquina.
      courseA_maze_seq6_2019_authored_hint:
        courseA_maze_seq6_a: Tu código final debe tener 3 bloques de movimiento.
        courseA_maze_seq6_b: Si te quedas atascado, intenta resolver el rompecabezas
          en 2 partes, una parte antes de la esquina y una parte después de la esquina.
      courseA_maze_seq7_authored_hint:
        courseA_maze_seq7_a: Hay 1 bloque que debes agregar para mover el pájaro al
          cerdo.
        courseA_maze_seq7_b: Si no puede descubrir qué hacer, intente dibujar el rompecabezas
          en papel y use su dedo para descubrir en qué dirección moverse.
      courseA_maze_seq7_2018_authored_hint:
        courseA_maze_seq7_a: Hay 1 bloque que debes agregar para mover el pájaro al
          cerdo.
        courseA_maze_seq7_b: Si no puede descubrir qué hacer, intente dibujar el rompecabezas
          en papel y use su dedo para descubrir en qué dirección moverse.
      courseA_maze_seq8_authored_hint:
        courseA_maze_seq8_a: Si estás atascado, intenta dibujar la imagen en papel
          para ver cómo se debe mover el pájaro.
      courseA_maze_seq8_2018_authored_hint:
        courseA_maze_seq8_a: Si estás atascado, intenta dibujar la imagen en papel
          para ver cómo se debe mover el pájaro.
      courseA_maze_seq8_2019_authored_hint:
        courseA_maze_seq8_a: Si estás atascado, intenta dibujar la imagen en papel
          para ver cómo se debe mover el pájaro.
      courseA_maze_seq9_authored_hint:
        courseA_maze_seq9_a: "¿Atascado? Intenta trazar el camino del pájaro con tu
          dedo."
        courseA_maze_seq9_b: Si no está seguro de qué hacer, intente presionar "Comenzar
          de nuevo" y ejecutar el código para ver qué falla.
        courseA_maze_seq9_c: Tendrá que moverse en 3 direcciones para resolver este
          rompecabezas.
      courseA_maze_seq9_2018_authored_hint:
        courseA_maze_seq9_a: "¿Atascado? Intenta trazar el camino del pájaro con tu
          dedo."
        courseA_maze_seq9_b: Si no está seguro de qué hacer, intente presionar "Comenzar
          de nuevo" y ejecutar el código para ver qué falla.
        courseA_maze_seq9_c: Tendrá que moverse en 3 direcciones para resolver este
          rompecabezas.
      courseA_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Hay dos soluciones para este rompecabezas.
      courseA_maze_seq_challenge1_2018_authored_hint:
        courseA_maze_seq_challenge1_a: Hay dos soluciones para este rompecabezas.
      courseA_maze_seq_challenge1_2019_authored_hint:
        courseA_maze_seq_challenge1_a: Hay dos soluciones para este rompecabezas.
      courseA_maze_seq_challenge2_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda
          no contar el espacio donde comienzas!
      courseA_maze_seq_challenge2_2018_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda
          no contar el espacio donde comienzas!
      courseA_maze_seq_challenge2_2019_authored_hint:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con tu dedo. ¡Recuerda
          no contar el espacio donde comienzas!
      courseA_playLab_events2_authored_hint:
        courseA_playLab_events2_a: Mira el bloque que hace decir algo al perro.
        courseA_playLab_events2_b: |-
          Este es el código que necesita para completar este rompecabezas:
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018_authored_hint:
        courseA_playLab_events2_a: Mira el bloque que hace decir algo al perro.
        courseA_playLab_events2_b: |-
          Este es el código que necesita para completar este rompecabezas:
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2019_authored_hint:
        courseA_playLab_events2_a: Mira el bloque que hace decir algo al perro.
        courseA_playLab_events2_b: |-
          Este es el código que necesita para completar este rompecabezas:
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3_authored_hint:
        courseA_playLab_events3_a: |-
          Arrastra este bloque <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> y ponlo en la parte inferior de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Recuerda usar la tecla de flecha izquierda para
          mover a Jorge hacia la bandera una vez que hayas escrito tu programa. Cuando
          la bandera se pone verde, ¡has terminado!
      courseA_playLab_events3_2018_authored_hint:
        courseA_playLab_events3_a: |-
          Arrastra este bloque <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> y ponlo en la parte inferior de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Recuerda usar la tecla de flecha izquierda para
          mover a Jorge hacia la bandera una vez que hayas escrito tu programa. Cuando
          la bandera se pone verde, ¡has terminado!
      courseA_playLab_events3_2019_authored_hint:
        courseA_playLab_events3_a: |-
          Arrastra este bloque <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> y ponlo en la parte inferior de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Recuerda usar la tecla de flecha izquierda para
          mover a Jorge hacia la bandera una vez que hayas escrito tu programa. Cuando
          la bandera se pone verde, ¡has terminado!
      courseA_playLab_events4_authored_hint:
        courseA_playLab_events4_a: |-
          Aquí está el bloque de eventos que necesitarás para que Jorge se mueva hacia la derecha:

          <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Este es el código que necesitarás para completar este desafío:
          <xml><block type="studio_whenArrow">

          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2018_authored_hint:
        courseA_playLab_events4_a: |-
          Aquí está el bloque de eventos que necesitarás para que Jorge se mueva hacia la derecha:

          <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Este es el código que necesitarás para completar este desafío:
          <xml><block type="studio_whenArrow">

          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2019_authored_hint:
        courseA_playLab_events4_a: |-
          Aquí está el bloque de eventos que necesitarás para que Jorge se mueva hacia la derecha:

          <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Este es el código que necesitarás para completar este desafío:
          <xml><block type="studio_whenArrow">

          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events5_authored_hint:
        courseA_playLab_events5_a: |-
          Aquí están los bloques evento que deberás usar para mover a Jorge arriba y abajo:
          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>
          y
          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: "¿Sabías que puedes cambiar la tecla de la flecha
          del evento haciendo clic en la imagen del bloque y eligiendo una nueva?
          ! \\[] (<https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif>)"
      courseA_playLab_events5_2018_authored_hint:
        courseA_playLab_events5_a: |-
          Aquí están los bloques evento que deberás usar para mover a Jorge arriba y abajo:
          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>
          y
          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: "¿Sabías que puedes cambiar la tecla de la flecha
          del evento haciendo clic en la imagen del bloque y eligiendo una nueva?
          ! \\[] (<https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif>)"
      courseA_playLab_events5_2019_authored_hint:
        courseA_playLab_events5_a: |-
          Aquí están los bloques evento que deberás usar para mover a Jorge arriba y abajo:
          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>
          y
          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: "¿Sabías que puedes cambiar la tecla de la flecha
          del evento haciendo clic en la imagen del bloque y eligiendo una nueva?
          ! \\[] (<https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif>)"
      courseA_playLab_events6_authored_hint:
        courseA_playLab_events6_a: |-
          Aquí está el bloque de eventos que usaría para que Jorge haga algo cuando se haga clic:
          <xml><block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Aquí está el bloque que usarías para cambiar el fondo:
          <xml><block type="studio_setBackground">

          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Aquí está el bloque que usarías para reproducir un sonido aleatorio:
          <xml><block type="studio_playSound">

          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events6_2018_authored_hint:
        courseA_playLab_events6_a: |-
          Aquí está el bloque de eventos que usaría para que Jorge haga algo cuando se haga clic:
          <xml><block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Aquí está el bloque que usarías para cambiar el fondo:
          <xml><block type="studio_setBackground">

          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Aquí está el bloque que usarías para reproducir un sonido aleatorio:
          <xml><block type="studio_playSound">

          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events6_2019_authored_hint:
        courseA_playLab_events6_a: |-
          Aquí está el bloque de eventos que usaría para que Jorge haga algo cuando se haga clic:
          <xml><block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Aquí está el bloque que usarías para cambiar el fondo:
          <xml><block type="studio_setBackground">

          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Aquí está el bloque que usarías para reproducir un sonido aleatorio:
          <xml><block type="studio_playSound">

          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events7_authored_hint:
        courseA_playLab_events7_a: |-
          Usa este bloque para controlar lo que sucede cuando los actores colisionan.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2018_authored_hint:
        courseA_playLab_events7_a: |-
          Usa este bloque para controlar lo que sucede cuando los actores colisionan.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2019_authored_hint:
        courseA_playLab_events7_a: |-
          Usa este bloque para controlar lo que sucede cuando los actores colisionan.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles el Pingüino se muestre
          al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz que Boo el Fantasme se muestre
          cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden realice el Show de Fuzzy
          Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre
          cuando haces clic en el monstruo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: Finalmente, haz que Wendel el Mago se
          muestre cuando haces clic en Spiff
      courseA_playlab_events_challenge1_2018_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles el Pingüino se muestre
          al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz que Boo el Fantasme se muestre
          cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden realice el Show de Fuzzy
          Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre
          cuando haces clic en el monstruo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: Finalmente, haz que Wendel el Mago se
          muestre cuando haces clic en Spiff
      courseA_playlab_events_challenge1_2019_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles el Pingüino se muestre
          al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz que Boo el Fantasme se muestre
          cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden realice el Show de Fuzzy
          Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre
          cuando haces clic en el monstruo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: Finalmente, haz que Wendel el Mago se
          muestre cuando haces clic en Spiff
      courseA_playlab_events_challenge1a_authored_hint:
        courseA_playlab_events_challenge1_a: "Puedes hacer cantar a un pájaro.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge1_b: |-
          Puedes hacer que el robot haga bip.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml>
        courseA_playlab_events_challenge1_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "Puedes hacer cantar a un pájaro.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_b: |-
          Puedes hacer un pitido de robot.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml>
        courseA_playlab_events_challenge2_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2018_authored_hint:
        courseA_playlab_events_challenge2_a: "Puedes hacer cantar a un pájaro.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_b: |-
          Puedes hacer que el robot haga bip.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml>
        courseA_playlab_events_challenge2_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2019_authored_hint:
        courseA_playlab_events_challenge2_a: "Puedes hacer cantar a un pájaro.\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n\n  </block></xml>"
        courseA_playlab_events_challenge2_b: |-
          Puedes hacer que el robot haga bip.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml>
        courseA_playlab_events_challenge2_c: |-
          Puedes hacer gruñir a un monstruo enojado.
          <xml>  <block type="studio_whenSpriteClicked">

          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challengeClone_authored_hint:
        courseA_playlab_events_challenge1_a: "¡Haz que Waddles el Pingüino se muestre
          al hacer clic en Robin!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "¡Haz que Boo el Fantasme se muestre
          cuando haces clic en Waddles!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "¡Haz que Jayden realice el Show de Fuzzy
          Monster cuando haces clic en Boo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "¡Haz que Spiff the Robot se muestre
          cuando haces clic en el monstruo!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Finalmente, ¡haz que Wendel el Mago
          se muestre cuando hagas clic en Spiff!.\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': Si Scrat no está haciendo lo que quieres, asegúrate se has hecho clic
          en ambos bloques al mismo tiempo, luego haz clic en "ejecutar" otra vez.
        '2': "¡No tengas miedo de cometer un error! ¡Prueba algo y si no funciona,
          prueba con algo más!"
      courseB_Scrat_ramp1_2019_authored_hint:
        '1': Si Scrat no está haciendo lo que quieres, asegúrate se has hecho clic
          en ambos bloques al mismo tiempo, luego haz clic en "ejecutar" otra vez.
        '2': "¡No tengas miedo de cometer un error! ¡Prueba algo y si no funciona,
          prueba con algo más!"
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Su código debe verse así:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp2_2019_authored_hint:
        '1': |-
          Su código debe verse así:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2019_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2018_authored_hint:
        '1': |-
          Tu código deberia verse asi;

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2019_authored_hint:
        '1': |-
          Tu código deberia verse asi;

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2019_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2019_authored_hint:
        '1': |-
          Su código debe verse así:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_artist_loops2_authored_hint:
        courseB_artist_loops2_a: Si deseas que el loop se repita más de 4 veces, puedes
          cambiar el número en la parte superior del bloque.
        courseB_artist_loops2_b: Intenta ejecutar el código primero para ver dónde
          termina el artista.
      courseB_artist_loops2_2018_authored_hint:
        courseB_artist_loops2_a: Si deseas que el loop se repita más de 4 veces, puedes
          cambiar el número en la parte superior del bloque.
        courseB_artist_loops2_b: Intenta ejecutar el código primero para ver dónde
          termina el artista.
      courseB_artist_loops2_2019_authored_hint:
        courseB_artist_loops2_a: Si deseas que el loop se repita más de 4 veces, puedes
          cambiar el número en la parte superior del bloque.
        courseB_artist_loops2_b: Intenta ejecutar el código primero para ver dónde
          termina el artista.
      courseB_artist_loops3_authored_hint:
        courseB_artist_loops3_a: ¡Recuerda usar un loop "repetir" para un mejor código!
        courseB_artist_loops3_b: El artista querrá moverse hacia el sur para dibujar
          esta línea.
      courseB_artist_loops3_2018_authored_hint:
        courseB_artist_loops3_a: |-
          ¡Recuerda utilizar un loop "repetir" <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml> para un mejor código!
        courseB_artist_loops3_b: El artista querrá moverse hacia el sur para dibujar
          esta línea.
      courseB_artist_loops3_2019_authored_hint:
        courseB_artist_loops3_a: |-
          ¡Recuerda utilizar un loop "repetir" <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml> para un mejor código!
        courseB_artist_loops3_b: El artista querrá moverse hacia el sur para dibujar
          esta línea.
      courseB_artist_loops4_authored_hint:
        courseB_artist_loops4_a: El bloque saltar te permite avanzar sin dibujar una
          línea.
        courseB_artist_loops4_b: Deberás agregar un bloque dentro del loop repetir
          para resolver este desafío.
        courseB_artist_loops4_c: No olvides cambiar la cantidad de veces que el loop
          se repite.
      courseB_artist_loops4_2018_authored_hint:
        courseB_artist_loops4_a: El bloque saltar te permite avanzar sin dibujar una
          línea.
        courseB_artist_loops4_b: Deberás agregar un bloque dentro del loop repetir
          para resolver este desafío.
        courseB_artist_loops4_c: No olvides cambiar la cantidad de veces que el loop
          se repite.
      courseB_artist_loops4_2019_authored_hint:
        courseB_artist_loops4_a: El bloque saltar te permite avanzar sin dibujar una
          línea.
        courseB_artist_loops4_b: Deberás agregar un bloque dentro del loop repetir
          para resolver este desafío.
        courseB_artist_loops4_c: No olvides cambiar la cantidad de veces que el loop
          se repite.
      courseB_artist_loops5_authored_hint:
        courseB_artist_loops5_a: Arrastre un loop de "repetición", luego coloque los
          otros bloques dentro de él. ¿Cuántas veces necesita repetir?
      courseB_artist_loops5_2018_authored_hint:
        courseB_artist_loops5_a: Arrastre un loop de "repetición", luego coloque otros
          bloques dentro de él. ¿Cuántas veces necesita repetir?
      courseB_artist_loops5_2019_authored_hint:
        courseB_artist_loops5_a: Arrastre un loop de "repetición", luego coloque otros
          bloques dentro de él. ¿Cuántas veces necesita repetir?
      courseB_artist_loops6_authored_hint:
        courseB_artist_loops6_b: Intenta escribir los movimientos en un papel y busca
          un patrón.
      courseB_artist_loops6_2018_authored_hint:
        courseB_artist_loops6_b: Intenta escribir los movimientos en un papel y busca
          un patrón.
      courseB_artist_loops6_2019_authored_hint:
        courseB_artist_loops6_b: Intenta escribir los movimientos en un papel y busca
          un patrón.
      courseB_artist_loops7_authored_hint:
        courseB_artist_loops7_a: Este desafío usa **4** loops, ¡uno tras de otro!
        courseB_artist_loops7_b: "Observa que cada loop hace un patrón de escalera
          que va en una dirección diferente. \n\n ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)"
        courseB_artist_loops7_c: |-
          Los loops deberían hacer esto:
          Loo 1
          \-Derecha
          \-Abajo

          Loop 2
          \-Derecha
          \-Arriba

          Loop 3:
          \-Izquierda
          \-Arriba

          \-Loop 4:
          \-Izquierda
          \-Abajo
      courseB_artist_loops7_2018_authored_hint:
        courseB_artist_loops7_a: Este desafío usa **4** loops, ¡uno tras de otro!
        courseB_artist_loops7_b: "Observa que cada loop hace un patrón de escalera
          que va en una dirección diferente. \n\n ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)"
        courseB_artist_loops7_c: |-
          Los loops deberían hacer esto:
          Loo 1
          \-Derecha
          \-Abajo

          Loop 2
          \-Derecha
          \-Arriba

          Loop 3:
          \-Izquierda
          \-Arriba

          \-Loop 4:
          \-Izquierda
          \-Abajo
      courseB_artist_loops7_2019_authored_hint:
        courseB_artist_loops7_a: Este desafío usa **4** loops, ¡uno tras de otro!
        courseB_artist_loops7_b: "Observa que cada loop hace un patrón de escalera
          que va en una dirección diferente. \n\n ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)"
        courseB_artist_loops7_c: |-
          Los loops deberían hacer esto:
          Loo 1
          \-Derecha
          \-Abajo

          Loop 2
          \-Derecha
          \-Arriba

          Loop 3:
          \-Izquierda
          \-Arriba

          \-Loop 4:
          \-Izquierda
          \-Abajo
      courseB_artist_loops8_authored_hint:
        courseB_artist_loops8_a: "¿Cuántas veces debes repetir el patrón para hacer
          la escalera?"
        courseB_artist_loops8_b: Intenta ejecutar el código que se te ha dado para
          ver lo que hace.
      courseB_artist_loops8_2018_authored_hint:
        courseB_artist_loops8_a: "¿Cuántas veces debes repetir el patrón para hacer
          la escalera?"
        courseB_artist_loops8_b: Intenta ejecutar el código que se te ha dado para
          ver lo que hace.
      courseB_artist_loops8_2019_authored_hint:
        courseB_artist_loops8_a: "¿Cuántas veces debes repetir el patrón para hacer
          la escalera?"
        courseB_artist_loops8_b: Intenta ejecutar el código que se te ha dado para
          ver lo que hace.
      courseB_artist_loops9_authored_hint:
        courseB_artist_loops9_a: Recuerda que los bloques saltar pueden usarse para
          moverse sin dibujar una línea.
        courseB_artist_loops9_b: Querrás usar el bloque W para resolver este desafío.
        courseB_artist_loops9_c: "¿No puedes descifrar donde colocar el loop? Intenta
          escribir el código paso a paso y busca un patrón."
      courseB_artist_loops9_2018_authored_hint:
        courseB_artist_loops9_a: Recuerda que los bloques saltar pueden usarse para
          moverse sin dibujar una línea.
        courseB_artist_loops9_b: Querrás usar el bloque W para resolver este desafío.
        courseB_artist_loops9_c: "¿No puedes descifrar donde colocar el loop? Intenta
          escribir el código paso a paso y busca un patrón."
      courseB_artist_loops9_2019_authored_hint:
        courseB_artist_loops9_a: Recuerda que los bloques saltar pueden usarse para
          moverse sin dibujar una línea.
        courseB_artist_loops9_b: Querrás usar el bloque W para resolver este desafío.
        courseB_artist_loops9_c: "¿No puedes descifrar donde colocar el loop? Intenta
          escribir el código paso a paso y busca un patrón."
      courseB_artist_loops_challenge1_authored_hint:
        courseB_artist_loops_challenge1_a: '¡Bloques como este: <xml>  <block type="simple_move_up_right"/></xml>
          permitirá que tu artista se mueva de forma inclinada!'
        courseB_artist_loops_challenge1_b: Cuando termines uno de los dados, ¡"salta"
          al próximo!
        courseB_artist_loops_challenge1_c: 'Tendrá que `mover` o`saltar` sobre algunas
          de las mismas líneas dos veces. '
      courseB_artist_loops_challenge1_2018_authored_hint:
        courseB_artist_loops_challenge1_a: '¡Bloques como este: <xml>  <block type="simple_move_up_right"/></xml>
          permitirá que tu artista se mueva de forma inclinada!'
        courseB_artist_loops_challenge1_b: Cuando termines uno de los dados, ¡"salta"
          al próximo!
        courseB_artist_loops_challenge1_c: 'Tendrá que `mover` o`saltar` sobre algunas
          de las mismas líneas dos veces. '
      courseB_artist_loops_challenge1_2019_authored_hint:
        courseB_artist_loops_challenge1_a: '¡Bloques como este: <xml>  <block type="simple_move_up_right"/></xml>
          permitirá que tu artista se mueva de forma inclinada!'
        courseB_artist_loops_challenge1_b: Cuando termines uno de los dados, ¡"salta"
          al próximo!
        courseB_artist_loops_challenge1_c: 'Tendrá que `mover` o`saltar` sobre algunas
          de las mismas líneas dos veces. '
      courseB_artist_loops_challenge2_authored_hint:
        courseB_artist_loops_challenge2_a: El código para dibujar una X ya se te ha
          dado. Todo lo que necesitas hacer es repetir la X y "saltar" al siguiente
          punto.
        courseB_artist_loops_challenge2_b: Puede usar los bloques "saltar" para moverse
          a otros espacios sin dibujar.
      courseB_artist_loops_challenge2_2018_authored_hint:
        courseB_artist_loops_challenge2_a: El código para dibujar una X ya se te ha
          dado. Todo lo que necesitas hacer es repetir la X y "saltar" al siguiente
          punto.
        courseB_artist_loops_challenge2_b: Puede usar los bloques "saltar" para moverse
          a otros espacios sin dibujar.
      courseB_artist_loops_challenge2_2019_authored_hint:
        courseB_artist_loops_challenge2_a: El código para dibujar una X ya se te ha
          dado. Todo lo que necesitas hacer es repetir la X y "saltar" al siguiente
          punto.
        courseB_artist_loops_challenge2_b: Puede usar los bloques "saltar" para moverse
          a otros espacios sin dibujar.
      courseB_collector_loops1_authored_hint:
        courseB_collector_loops1_a: El bloque <xml><block type="collector_collect_simplified"/>\</xml
          puede ser usado para tomar el tesoro cuando estés parado en su parte superior.
      courseB_collector_loops10_authored_hint:
        courseB_collector_loops10_a: Si no puedes descifrar dónde poner los loops
          "repetir", escribe paso a paso el código y busca un patrón.
        courseB_collector_loops10_b: Intenta escribir los movimientos en un papel
          tratando de encontrar un patrón.
      courseB_collector_loops10_2018_authored_hint:
        courseB_collector_loops10_a: Si no puedes descifrar dónde poner los loops
          "repetir", escribe paso a paso el código y busca un patrón.
        courseB_collector_loops10_b: Intenta escribir los movimientos en un papel
          tratando de encontrar un patrón.
      courseB_collector_loops10_2019_authored_hint:
        courseB_collector_loops10_a: Si no puedes descifrar dónde poner los loops
          "repetir", escribe paso a paso el código y busca un patrón.
        courseB_collector_loops10_b: Intenta escribir los movimientos en un papel
          tratando de encontrar un patrón.
      courseB_collector_loops1_2018_authored_hint:
        courseB_collector_loops1_a: El bloque <xml><block type="collector_collect_simplified"/>\</xml
          puede ser usado para tomar el tesoro cuando estés parado en su parte superior.
      courseB_collector_loops1_2019_authored_hint:
        courseB_collector_loops1_a: El bloque <xml><block type="collector_collect_simplified"/>\</xml
          puede ser usado para tomar el tesoro cuando estés parado en su parte superior.
      courseB_collector_loops2_authored_hint:
        courseB_collector_loops2_a: Tendrás que moverte antes de poder recolectar
          cualquier tesoro.
        courseB_collector_loops2_b: Cuando hayas llegado a un punto con tesoros, utiliza
          el bloque <xml><block type="collector_collect"/></xml> para recogerlo.
      courseB_collector_loops2_2018_authored_hint:
        courseB_collector_loops2_a: Tendrás que moverte antes de poder recolectar
          cualquier tesoro.
        courseB_collector_loops2_b: Cuando hayas llegado a un punto con tesoros, utiliza
          el bloque <xml><block type="collector_collect"/></xml> para recogerlo.
      courseB_collector_loops2_2019_authored_hint:
        courseB_collector_loops2_a: Tendrás que moverte antes de poder recolectar
          cualquier tesoro.
        courseB_collector_loops2_b: Cuando hayas llegado a un punto con tesoros, utiliza
          el bloque <xml><block type="collector_collect"/></xml> para recogerlo.
      courseB_collector_loops3_authored_hint:
        courseB_collector_prog3_a: Intenta usar un bloque <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block>\</xm para recoger tu tesoro.
        courseB_collector_prog3_b: Recuerda que puedes poner más de un bloque dentro
          de un loop repetir.
      courseB_collector_loops3_2018_authored_hint:
        courseB_collector_prog3_a: Intenta usar un bloque <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block>\</xm para recoger tu tesoro.
        courseB_collector_prog3_b: Recuerda que puedes poner más de un bloque dentro
          de un loop repetir.
      courseB_collector_loops3_2019_authored_hint:
        courseB_collector_prog3_a: Intenta usar un bloque <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block>\</xm para recoger tu tesoro.
        courseB_collector_prog3_b: Recuerda que puedes poner más de un bloque dentro
          de un loop repetir.
      courseB_collector_loops3_predict1_authored_hint:
        courseB_collector_prog3_a: Intenta usar un bloque de repetición para recolectar
          tu oro.
      courseB_collector_loops4_authored_hint:
        courseB_collector_loops4_a: Pruebe usar el botón paso para descubrir dónde
          van las cosas mal.
        courseB_collector_loops4_b: Para cambiar qué tan lejos va Laurel, cambia la
          cantidad de veces que se ejecuta el loop.
        courseB_collector_loops4_c: "¡Laurel necesita caminar hacia abajo y recoger
          el tesoro después de que termine el loop 'repetir'!"
      courseB_collector_loops4_2018_authored_hint:
        courseB_collector_loops4_a: Pruebe usar el botón paso para descubrir dónde
          van las cosas mal.
        courseB_collector_loops4_b: Para cambiar qué tan lejos va Laurel, cambia la
          cantidad de veces que se ejecuta el loop.
        courseB_collector_loops4_c: |-
          ¡Laurel necesita caminar hacia abajo y recoger el tesoro antes de terminar el loop 'repetir' <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>!
      courseB_collector_loops4_2019_authored_hint:
        courseB_collector_loops4_a: Pruebe usar el botón paso para descubrir dónde
          van las cosas mal.
        courseB_collector_loops4_b: Para cambiar qué tan lejos va Laurel, cambia la
          cantidad de veces que se ejecuta el loop.
        courseB_collector_loops4_c: |-
          ¡Laurel necesita caminar hacia abajo y recoger el tesoro antes de terminar el loop 'repetir' <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>!
      courseB_collector_loops5_authored_hint:
        courseB_collector_loops5_a: Use más de un loop para finalizar el trabajo.
        courseB_collector_loops5_b: Intenta ejecutar el código un par de veces para
          ver qué pasa.
      courseB_collector_loops5_2018_authored_hint:
        courseB_collector_loops5_a: Use más de un loop para finalizar el trabajo.
        courseB_collector_loops5_b: Intenta ejecutar el código un par de veces para
          ver qué pasa.
      courseB_collector_loops5_2019_authored_hint:
        courseB_collector_loops5_a: Use más de un loop para finalizar el trabajo.
        courseB_collector_loops5_b: Intenta ejecutar el código un par de veces para
          ver qué pasa.
      courseB_collector_loops6_authored_hint:
        courseB_collector_loops6_a: ¿No puedes descifrar dónde las cosas empiezan
          a fallar? Usa el botón "Paso" para ejecutar tu programa un bloque a la vez.
        courseB_collector_loops6_b: Puedes cambiar el número de veces que el loop
          se repite y ejecutar haciendo clic en el "3" y eligiendo un número distinto.
        courseB_collector_loops6_c: Querrá usar 3 loops 'repetir' para resolver este
          desafío.
        courseB_collector_loops6_d: Si estás confundido/a, intenta dividir este desafío
          en 3 partes.
      courseB_collector_loops6_2018_authored_hint:
        courseB_collector_loops6_a: ¿No puedes descifrar dónde las cosas empiezan
          a fallar? Usa el botón "Paso" para ejecutar tu programa un bloque a la vez.
        courseB_collector_loops6_b: Puedes cambiar el número de veces que el loop
          se repite y ejecutar haciendo clic en el "3" y eligiendo un número distinto.
        courseB_collector_loops6_c: |-
          Querrás utilizar 3 loops de repetición para resolver este desafío <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>.
        courseB_collector_loops6_d: Si estás confundido/a, intenta dividir este desafío
          en 3 partes.
      courseB_collector_loops6_2019_authored_hint:
        courseB_collector_loops6_a: ¿No puedes descifrar dónde las cosas empiezan
          a fallar? Usa el botón "Paso" para ejecutar tu programa un bloque a la vez.
        courseB_collector_loops6_b: Puedes cambiar el número de veces que el loop
          se repite y ejecutar haciendo clic en el "3" y eligiendo un número distinto.
        courseB_collector_loops6_c: |-
          Querrás utilizar 3 loops de repetición para resolver este desafío <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>.
        courseB_collector_loops6_d: Si estás confundido/a, intenta dividir este desafío
          en 3 partes.
      courseB_collector_loops7_authored_hint:
        courseB_collector_loops7_a: Si tienes dificultades con este desafío, intenta
          dibujarlo en un papel para ayudarte a resolverlo.
        courseB_collector_loops7_b: Necesitarás 3 loops 'repetir' para resolver este
          desafío, ¡y no olvides el tesoro extra al final!
      courseB_collector_loops7_2018_authored_hint:
        courseB_collector_loops7_a: Si tienes dificultades con este desafío, intenta
          dibujarlo en un papel para ayudarte a resolverlo.
        courseB_collector_loops7_b: Necesitarás 3 loops 'repetir' para resolver este
          desafío, ¡y no olvides el tesoro extra al final!
      courseB_collector_loops7_2019_authored_hint:
        courseB_collector_loops7_a: Si tienes dificultades con este desafío, intenta
          dibujarlo en un papel para ayudarte a resolverlo.
        courseB_collector_loops7_b: Necesitarás 3 loops 'repetir' para resolver este
          desafío, ¡y no olvides el tesoro extra al final!
      courseB_collector_loops8_authored_hint:
        courseB_collector_loops8_challenge_a: Si no puedes averiguar donde poner los
          loops 'repetir', escribe tu código paso a paso y busca un patrón.
      courseB_collector_loops8_2018_authored_hint:
        courseB_collector_loops8_challenge_a: Si no puedes averiguar donde poner los
          loops 'repetir', escribe tu código paso a paso y busca un patrón.
      courseB_collector_loops8_2019_authored_hint:
        courseB_collector_loops8_challenge_a: Si no puedes averiguar donde poner los
          loops 'repetir', escribe tu código paso a paso y busca un patrón.
      courseB_collector_loops9_authored_hint:
        courseB_collector_loops9_a: "¿Parece esto muy difícil? Divídelo en 3 pequeños
          problemas para que sea más fácil.  "
        courseB_collector_loops9_b: Se necesitan 3 loops repetir, uno después de otro,
          para esta solución.
      courseB_collector_loops9_2018_authored_hint:
        courseB_collector_loops9_a: "¿Parece esto muy difícil? Divídelo en 3 pequeños
          problemas para que sea más fácil.  "
        courseB_collector_loops9_b: Se necesitan 3 loops repetir, uno después de otro,
          para esta solución.
      courseB_collector_loops9_2019_authored_hint:
        courseB_collector_loops9_a: "¿Parece esto muy difícil? Divídelo en 3 pequeños
          problemas para que sea más fácil.  "
        courseB_collector_loops9_b: Se necesitan 3 loops repetir, uno después de otro,
          para esta solución.
      courseB_collector_loops_challenge1_authored_hint:
        courseB_collector_loops_challenge1_b: |-
          Comienza haciendo loop a los siguientes comandos:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Muévete hacia el este dos veces entre
          cada camino.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block
          type=\"maze_moveEast\"></block></next></block>\n  </xml>\n\nPuedes hacer
          esto con solo 14 bloques. Haz clic para obtener una pista más que te permita
          ver una solución. "
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba esto!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">

          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018_authored_hint:
        courseB_collector_loops_challenge1_b: |-
          Comienza haciendo loop a los siguientes comandos:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Muévete hacia el este dos veces entre
          cada camino.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block
          type=\"maze_moveEast\"></block></next></block>\n  </xml>\n\nPuedes hacer
          esto con solo 14 bloques. Haz clic para obtener una pista más que te permita
          ver una solución. "
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba esto!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">

          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2019_authored_hint:
        courseB_collector_loops_challenge1_b: |-
          Comienza haciendo loop a los siguientes comandos:
          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: "Muévete hacia el este dos veces entre
          cada camino.\n\n<xml>\n  <block type=\"maze_moveEast\"><next>\n  <block
          type=\"maze_moveEast\"></block></next></block>\n  </xml>\n\nPuedes hacer
          esto con solo 14 bloques. Haz clic para obtener una pista más que te permita
          ver una solución. "
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba esto!
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">

          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_authored_hint:
        courseB_collector_loops_challenge2_a: Si algo sale mal, no tengas miedo de
          comenzar de nuevo. No te rindas!
        courseB_collector_loops_challenge2_b: |-
          Si repites este patrón, ¡Laurel no golpeará la pared en el fondo de la cueva!
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: ¡Intenta usar un bloque "repetir" para
          recoger la última pila de tesoros!
        courseB_collector_loops_challenge2_d: |-
          Intenta esta solución:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_2018_authored_hint:
        courseB_collector_loops_challenge2_a: Si algo sale mal, no tengas miedo de
          comenzar de nuevo. No te rindas!
        courseB_collector_loops_challenge2_b: |-
          Si repites este patrón, ¡Laurel no golpeará la pared en el fondo de la cueva!
          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: ¡Intenta usar un bloque "repetir" para
          recoger la última pila de tesoros!
        courseB_collector_loops_challenge2_d: |-
          Intenta esta solución:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2a_authored_hint:
        courseB_collector_loops_challenge2a_a: Si algo sale mal, intenta depurarlo.
          ¡No te rindas!
        courseB_collector_loops_challenge2a_b: Mira esta opción para atravesar el
          laberinto. ¿Ves un patrón que puedas repetir?
        courseB_collector_loops_challenge2a_c: Para recoger todo el tesoro, tendrás
          que añadir dos bloques <xml> <block type="collector_collect"/></xml> dentro
          de tu loop, o poner el bloque en el interior de su propio bloque de 'repetir'.
      courseB_collector_loops_challenge2a_2018_authored_hint:
        courseB_collector_loops_challenge2a_a: Si algo sale mal, intenta depurarlo.
          ¡No te rindas!
        courseB_collector_loops_challenge2a_b: Mira esta opción para atravesar el
          laberinto. ¿Ves un patrón que puedas repetir?
        courseB_collector_loops_challenge2a_c: Para recoger todo el tesoro, tendrás
          que añadir dos bloques <xml> <block type="collector_collect"/></xml> dentro
          de tu loop, o poner el bloque en el interior de su propio bloque de 'repetir'.
      courseB_collector_loops_challenge2a_2019_authored_hint:
        courseB_collector_loops_challenge2a_a: Si algo sale mal, intenta depurarlo.
          ¡No te rindas!
        courseB_collector_loops_challenge2a_b: Mira esta opción para atravesar el
          laberinto. ¿Ves un patrón que puedas repetir?
        courseB_collector_loops_challenge2a_c: Para recoger todo el tesoro, tendrás
          que añadir dos bloques <xml> <block type="collector_collect"/></xml> dentro
          de tu loop, o poner el bloque en el interior de su propio bloque de 'repetir'.
      courseB_collector_loops_challenge`_authored_hint:
        courseA_collector_loops_challenge2_b: "¡Solo necesita usar un bloque ! \\[]
          (Https\\://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png) para resolver esto."
        courseA_collector_loops_challenge2_a: Puede retroceder por el camino una segunda
          vez antes de ir hacia el sur. ! \[] (<https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21>
          PM.png)
      courseB_collector_prog3_authored_hint:
        courseB_collector_prog3_a: Intenta usar un bloque de repetición para recolectar
          tu oro.
      courseB_iceage_loops1_authored_hint:
        courseB_iceage_loops1_a: Cuidado con de hielo roto! ¡Scrat caerá a la perfección!
        courseB_iceage_loops1_b: "Deberá usar este bloque: \n<xml><block type=\"maze_moveEast\"/></xml>"
      courseB_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Cuidado con de hielo roto! ¡Scrat caerá al agua!
        courseB_iceage_loops10_b: Intente decir los pasos en voz alta o escríbalos
          en un pedazo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: "¡Este es un acertijo muy largo! Sigue este camino."
      courseB_iceage_loops10_2019_authored_hint:
        courseB_iceage_loops10_a: Cuidado con de hielo roto! ¡Scrat caerá al agua!
        courseB_iceage_loops10_b: Intente decir los pasos en voz alta o escríbalos
          en un pedazo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: "¡Este es un acertijo muy largo! Sigue este camino."
      courseB_iceage_loops1_2019_authored_hint:
        courseB_iceage_loops1_a: Cuidado con de hielo roto! ¡Scrat caerá a la perfección!
        courseB_iceage_loops1_b: "Deberá usar este bloque: \n<xml><block type=\"maze_moveEast\"/></xml>"
      courseB_iceage_loops2_authored_hint:
        courseB_iceage_loops2_a: Rompe este puzzle en dos partes, una antes de la
          esquina y otra después de la esquina.
        courseB_iceage_loops2_b: Si te quedas atascado, trata de decir los pasos en
          voz alta.
        courseB_iceage_loops2_c: Sigue este camino para que Scrat llegue a la bellota.
      courseB_iceage_loops2_2019_authored_hint:
        courseB_iceage_loops2_a: Rompe este puzzle en dos partes, una antes de la
          esquina y otra después de la esquina.
        courseB_iceage_loops2_b: Si te quedas atascado, trata de decir los pasos en
          voz alta.
        courseB_iceage_loops2_c: Sigue este camino para que Scrat llegue a la bellota.
      courseB_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          ¡Usa este nuevo bloque!
          <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: |-
          Para repetir el código, arrastra un loop ´repetir´ <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, luego ubica el bloque que quieres dentro de él.
      courseB_iceage_loops3_2019_authored_hint:
        courseB_iceage_loops3_a: |-
          ¡Usa este nuevo bloque!
          <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: |-
          Para repetir el código, arrastra un loop ´repetir´ <xml><block type="controls_repeat_simplified">

          <title name="TIMES">???</title>
          </block></xml>, luego ubica el bloque que quieres dentro de él.
      courseB_iceage_loops4_authored_hint:
        courseB_iceage_loops4_a: Intente anotar los pasos que Scrat tomaría para llegar
          a la bellota. ¿Ves un patrón?
        courseB_iceage_loops4_b: "¡No tengas miedo de ejecutar tu código y ver qué
          pasa!"
        courseB_iceage_loops4_c: Este es el camino que Scrat deberia tomar.
      courseB_iceage_loops4_2019_authored_hint:
        courseB_iceage_loops4_a: Intente anotar los pasos que Scrat tomaría para llegar
          a la bellota. ¿Ves un patrón?
        courseB_iceage_loops4_b: "¡No tengas miedo de ejecutar tu código y ver qué
          pasa!"
        courseB_iceage_loops4_c: Este es el camino que Scrat deberia tomar.
      courseB_iceage_loops6_authored_hint:
        courseB_iceage_loops6_a: Su código final tendrá \*\* tres \*\* bloques de
          movimiento.
        courseB_iceage_loops6_b: "¡Solo necesita agregar un ciclo más!"
        courseB_iceage_loops6_c: La ruta final debe verse así.
      courseB_iceage_loops6_2019_authored_hint:
        courseB_iceage_loops6_a: Su código final tendrá \*\* tres \*\* bloques de
          movimiento.
        courseB_iceage_loops6_b: "¡Solo necesita agregar un ciclo más!"
        courseB_iceage_loops6_c: La ruta final debe verse así.
      courseB_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: Si te quedas atascado, prueba a escribir pasos en
          una hoja de papel. ¿Ves un patrón?
        courseB_iceage_loops7_b: Este es el camino que Scrat debe tomar para llegar
          a la bellota.
      courseB_iceage_loops7_2019_authored_hint:
        courseB_iceage_loops7_a: Si te quedas atascado, prueba a escribir pasos en
          una hoja de papel. ¿Ves un patrón?
        courseB_iceage_loops7_b: Este es el camino que Scrat debe tomar para llegar
          a la bellota.
      courseB_iceage_loops8_authored_hint:
        courseB_iceage_loops8_a: "¿Los bloques de movimiento son correctos? ¿Qué más
          puedes cambiar?"
        courseB_iceage_loops8_b: El primer ciclo deberia repetirse **3** veces, el
          segundo **5** veces, el cuarto **4** veces, y el último **4** veces.
        courseB_iceage_loops8_c: Utiliza ciclos para ayudar a Scrat a que siga este
          camino.
      courseB_iceage_loops8_2019_authored_hint:
        courseB_iceage_loops8_a: "¿Los bloques de movimiento son correctos? ¿Qué más
          puedes cambiar?"
        courseB_iceage_loops8_b: El primer ciclo deberia repetirse **3** veces, el
          segundo **5** veces, el cuarto **4** veces, y el último **4** veces.
        courseB_iceage_loops8_c: Utiliza ciclos para ayudar a Scrat a que siga este
          camino.
      courseB_iceage_loops9_authored_hint:
        courseB_iceage_loops9_a: "¿Tiene problemas? Intente dividir este puzzle en
          partes más pequeñas. No tema ejecutar su puzzle mientras codifica!"
        courseB_iceage_loops9_b: Su código final debería tner **4** loops.
        courseB_iceage_loops9_c: Scrat deberia seguir esta ruta para llegar a la bellota.
      courseB_iceage_loops9_2019_authored_hint:
        courseB_iceage_loops9_a: "¿Tiene problemas? Intente dividir este puzzle en
          partes más pequeñas. No tema ejecutar su puzzle mientras codifica!"
        courseB_iceage_loops9_b: Su código final debería tner **4** loops.
        courseB_iceage_loops9_c: Scrat deberia seguir esta ruta para llegar a la bellota.
      courseB_maze_seq1_authored_hint:
        courseB_maze_seq1_a: ¡Conecta los bloques para hacer que el ave se mueva <xml><block
          type="when_run"/></xml>!
        courseB_maze_seq1_b: Arrastra tres de estas flechas <xml><block type="maze_moveSouth"/></xml>
          y conéctalas al bloque <xml><block type="when_run"/></xml> para llevar al
          pájaro al cerdo.
      courseB_maze_seq10_authored_hint:
        courseB_maze_seq10_a: Trata de anotar primero los pasos en una hoja de papel.
        courseB_maze_seq10_b: Tendrás que moverte en dos direcciones diferentes para
          llegar al cerdo.
      courseB_maze_seq11_authored_hint:
        courseB_maze_seq11_a: Trate de anotar primero los pasos en una hoja de papel.
        courseB_maze_seq11_b: 'Resuelve el desafío en dos partes: una antes de la
          esquina y otra después de la esquina.'
      courseB_maze_seq1_2018_authored_hint:
        courseB_maze_seq1_a: Conecta los bloques al bloque <xml><block type="when_run"/></xml>
          Scrat hará movimiento!
        courseB_maze_seq1_b: Arrastre tres de estas <xml><block type="maze_moveSouth"/></xml>
          flechas y conectalas al bloque <xml><block type="when_run"/></xml> para
          que Scrat llegue a la bellota.
      courseB_maze_seq1_2019_authored_hint:
        courseB_maze_seq1_a: Conecta los bloques al bloque <xml><block type="when_run"/></xml>
          Scrat hará movimiento!
        courseB_maze_seq1_b: Arrastre tres de estas <xml><block type="maze_moveSouth"/></xml>
          flechas y conectalas al bloque <xml><block type="when_run"/></xml> para
          que Scrat llegue a la bellota.
      courseB_maze_seq2_authored_hint:
        courseB_maze_seq2_a: A este programa le falta un bloque. ¿Puedes averiguar
          cuál?
        courseB_maze_seq2_b: Intenta ejecutar el código que se te da para ver qué
          debe hacer el pájaro a continuación.
      courseB_maze_seq2_2018_authored_hint:
        courseB_maze_seq2_a: A este programa le falta un bloque. ¿Puedes averiguar
          cuál?
        courseB_maze_seq2_b: Intenta ejecutar el código que se te da para ver lo que
          Scrat debe hacer a continuación.
      courseB_maze_seq3_authored_hint:
        courseB_maze_seq3_a: Uno de los bloques está moviendo al pájaro en la dirección
          incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
        courseB_maze_seq3_b: Intenta usar el botón de paso para encontrar dónde falla
          el programa. ¿Es el primer paso? ¿El segundo?
        courseB_maze_seq3_c: El bloque <xml><block type="maze_moveWest"/></xml> parece
          no estar moviendo el pájaro en la dirección correcta.
      courseB_maze_seq3_2018_authored_hint:
        courseB_maze_seq3_a: Uno de los bloques mueve a Scrat en la dirección incorrecta.
          ¿Puedes averiguar cuál y reemplazarlo con el bloque correcto?
        courseB_maze_seq3_b: Intenta usar el botón de paso para encontrar dónde falla
          el programa. ¿Es el primer paso? ¿El segundo?
        courseB_maze_seq3_c: El bloque <xml><block type="maze_moveWest"/></xml> parece
          no estar moviendo el pájaro en la dirección correcta.
      courseB_maze_seq4_authored_hint:
        courseB_maze_seq4_a: Intenta agregar una instrucción a la vez hasta que llegue
          al cerdo.
        courseB_maze_seq4_b: Tendrás que utilizar el <xml><block type="maze_moveEast"/></xml>
          bloque para resolver este desafío.
      courseB_maze_seq4_2018_authored_hint:
        courseB_maze_seq4_a: Intente agregar una instrucción a la vez hasta que llegue
          a la bellota.
        courseB_maze_seq4_b: Tendrás que utilizar el <xml><block type="maze_moveEast"/></xml>
          bloque para resolver este desafío.
      courseB_maze_seq4_2019_authored_hint:
        courseB_maze_seq4_a: Intente agregar una instrucción a la vez hasta que llegue
          a la bellota.
        courseB_maze_seq4_b: Tendrás que utilizar el <xml><block type="maze_moveEast"/></xml>
          bloque para resolver este desafío.
      courseB_maze_seq5_authored_hint:
        courseB_maze_seq5_a: Si te quedas atascado/a, intenta dibujar la ruta en papel.
        courseB_maze_seq5_b: "¡Hay 2 formas de resolver este desafío!"
        courseB_maze_seq5_c: "¿No estás seguro/a de cómo llegar al cerdo? Prueba este
          camino."
      courseB_maze_seq5_2018_authored_hint:
        courseB_maze_seq5_a: Si te quedas atascado/a, intenta dibujar la ruta en papel.
        courseB_maze_seq5_b: "¡Hay 2 formas de resolver este desafío!"
        courseB_maze_seq5_c: "¿No estás seguro de cómo llegar a la bellota? Prueba
          este camino."
      courseB_maze_seq5_2019_authored_hint:
        courseB_maze_seq5_a: Si te quedas atascado/a, intenta dibujar la ruta en papel.
        courseB_maze_seq5_b: "¡Hay 2 formas de resolver este desafío!"
        courseB_maze_seq5_c: "¿No estás seguro de cómo llegar a la bellota? Prueba
          este camino."
      courseB_maze_seq6_authored_hint:
        courseB_maze_seq6_a: Tu código final debe tener tres bloques de movimiento.
        courseB_maze_seq6_b: Si te quedas atascado/a, intenta resolver el rompecabezas
          en dos partes, una hacia los lados y otra hacia arriba y hacia abajo.
        courseB_maze_seq5_c: Hay dos formas de resolver este desafío.
        courseB_maze_seq5_d: "¿No estás seguro/a de cómo llegar al cerdo? ¡Prueba
          este camino!"
      courseB_maze_seq6_2018_authored_hint:
        courseB_maze_seq6_a: Tu código final debe tener tres bloques de movimiento.
        courseB_maze_seq6_b: Si te quedas atascado/a, intenta resolver el rompecabezas
          en dos partes, una hacia los lados y otra hacia arriba y hacia abajo.
        courseB_maze_seq5_c: Hay dos formas de resolver este desafío.
        courseB_maze_seq5_d: "¿No estás seguro de cómo llegar a la bellota? ¡Prueba
          este camino!"
      courseB_maze_seq6_2019_authored_hint:
        courseB_maze_seq6_a: Tu código final debe tener tres bloques de movimiento.
        courseB_maze_seq6_b: Si te quedas atascado/a, intenta resolver el rompecabezas
          en dos partes, una hacia los lados y otra hacia arriba y hacia abajo.
        courseB_maze_seq5_c: Hay dos formas de resolver este desafío.
        courseB_maze_seq5_d: "¿No estás seguro de cómo llegar a la bellota? ¡Prueba
          este camino!"
      courseB_maze_seq7_authored_hint:
        courseB_maze_seq7_a: Agrega 1 bloque para mover el pájaro al cerdo.
        courseB_maze_seq7_b: Intenta ejecutar el código que se te da y ve dónde terminas.
        courseB_maze_seq7_c: "¿No puedes llegar al cerdo? ¡Prueba este camino!"
      courseB_maze_seq7_2018_authored_hint:
        courseB_maze_seq7_a: Agregue 1 bloque para mover Scrat a la bellota.
        courseB_maze_seq7_b: Intenta ejecutar el código que se te da y ve dónde terminas.
        courseB_maze_seq7_c: No se puede llegar a la bellota? ¡Prueba este camino!
      courseB_maze_seq7_2019_authored_hint:
        courseB_maze_seq7_a: Agregue 1 bloque para mover Scrat a la bellota.
        courseB_maze_seq7_b: Intenta ejecutar el código que se te da y ve dónde terminas.
        courseB_maze_seq7_c: No se puede llegar a la bellota? ¡Prueba este camino!
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_a: Intenta agregar un bloque a la vez hasta que resuelvas
          el desafío.
        courseB_maze_seq8_b: "¡Hay dos formas de resolver este desafío!"
        courseB_maze_seq8_c: "¿No sabes qué camino tomar? ¡Prueba este camino!"
      courseB_maze_seq8_2018_authored_hint:
        courseB_maze_seq8_a: Intenta agregar un bloque a la vez hasta que resuelvas
          el desafío.
        courseB_maze_seq8_b: "¡Hay más de una manera para resolver este puzzle!"
        courseB_maze_seq8_c: "¿No sabes qué camino tomar? ¡Prueba este camino!"
      courseB_maze_seq8_2019_authored_hint:
        courseB_maze_seq8_a: Intenta agregar un bloque a la vez hasta que resuelvas
          el desafío.
        courseB_maze_seq8_b: "¡Hay más de una manera para resolver este puzzle!"
        courseB_maze_seq8_c: "¿No sabes qué camino tomar? ¡Prueba este camino!"
      courseB_maze_seq9_authored_hint:
        courseB_maze_seq9_a: Primero intenta escribir todos los pasos en un papel.
        courseB_maze_seq9_b: Construye tu programa de un bloque a la vez y prueba
          a medida que lo construyes.
        courseB_maze_seq9_c: Hay dos formas de resolver este rompecabezas.
        courseB_maze_seq9_d: "¿Atascado/a? ¡Prueba este camino!"
      courseB_maze_seq9_2018_authored_hint:
        courseB_maze_seq9_a: Primero intenta escribir todos los pasos en un papel.
        courseB_maze_seq9_b: Construye tu programa de un bloque a la vez y prueba
          a medida que lo construyes.
        courseB_maze_seq9_c: Hay dos formas de resolver este desafío.
        courseB_maze_seq9_d: "¿Atascado/a? ¡Prueba este camino!"
      courseB_maze_seq9_2019_authored_hint:
        courseB_maze_seq9_a: Primero intenta escribir todos los pasos en un papel.
        courseB_maze_seq9_b: Construye tu programa de un bloque a la vez y prueba
          a medida que lo construyes.
        courseB_maze_seq9_c: Hay dos formas de resolver este desafío.
        courseB_maze_seq9_d: "¿Atascado/a? ¡Prueba este camino!"
      courseB_maze_seqCold_authored_hint:
        courseB_maze_seqCold_a: "¿Atascado? Intenta trazar el camino del pájaro con
          tu dedo."
        courseB_maze_seqCold_b: "¡Los bloques adicionales deben agregarse antes del
          último! \\[] (Https\\://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51
          PM.png)"
      courseB_maze_seqOld_authored_hint:
        courseB_maze_seqOld_a: Si tienes problemas, primero intenta anotar los pasos
          en una hoja de papel.
      courseB_maze_seq_challenge1_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta
          vez.
        courseB_maze_seq_challenge1_b: Trata de usar el bloque <xml><block type="maze_moveWest"/></xml>
          para comenzar.
      courseB_maze_seq_challenge1_2018_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta
          vez.
        courseB_maze_seq_challenge1_b: Trata de usar el bloque <xml><block type="maze_moveWest"/></xml>
          para comenzar.
      courseB_maze_seq_challenge1_2019_authored_hint:
        courseB_maze_seq_challenge1_a: El camino más corto podría no funcionar esta
          vez.
        courseB_maze_seq_challenge1_b: Trata de usar el bloque <xml><block type="maze_moveWest"/></xml>
          para comenzar.
      courseB_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: No necesitas agregar o eliminar bloques para
          resolver este desafío.
        courseB_maze_seq_challenge2_b: Reorganiza los bloques y toma la ruta del patrón
          de la escalera.
      courseB_maze_seq_challenge2_2018_authored_hint:
        courseB_maze_seq_challenge2_a: No necesitas agregar o eliminar bloques para
          resolver este desafío.
        courseB_maze_seq_challenge2_b: Reorganiza los bloques y toma la ruta del patrón
          de la escalera.
      courseB_maze_seq_challenge2_2019_authored_hint:
        courseB_maze_seq_challenge2_a: No necesitas agregar o eliminar bloques para
          resolver este desafío.
        courseB_maze_seq_challenge2_b: Reorganiza los bloques y toma la ruta del patrón
          de la escalera.
      courseB_playlab_events2_authored_hint:
        courseB_playlab_events2_a: |-
          Este es el bloque para que Daisy diga algo:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events2_2018_authored_hint:
        courseB_playlab_events2_a: |-
          Este es el bloque para que Daisy diga algo:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events2_2019_authored_hint:
        courseB_playlab_events2_a: |-
          Este es el bloque para que Daisy diga algo:
          <xml>
          <block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events3_authored_hint:
        courseB_playlab_events3_a: |-
          Este es el bloque que debe usar para agregar el evento:
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Este es el bloque que necesitas para cambiar el estado de ánimo de Daisy:
          <xml>
          <block type="studio_setSpriteEmotion">

          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2018_authored_hint:
        courseB_playlab_events3_a: |-
          Este es el bloque que debe usar para agregar el evento:
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Este es el bloque que necesitas para cambiar el estado de ánimo de Daisy:
          <xml>
          <block type="studio_setSpriteEmotion">

          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2019_authored_hint:
        courseB_playlab_events3_a: |-
          Este es el bloque que debe usar para agregar el evento:
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Este es el bloque que necesitas para cambiar el estado de ánimo de Daisy:
          <xml>
          <block type="studio_setSpriteEmotion">

          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events4_authored_hint:
        courseB_playlab_events4_a: |-
          Este es el evento que controla la flecha izquierda:
          <xml>
          <block type="studio_whenArrow">

          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Este es el bloque que hace que el caballero se mueva a la izquierda

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2018_authored_hint:
        courseB_playlab_events4_a: |-
          Este es el evento que controla la flecha izquierda:
          <xml>
          <block type="studio_whenArrow">

          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Este es el bloque que hace que el caballero se mueva a la izquierda

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2019_authored_hint:
        courseB_playlab_events4_a: |-
          Este es el evento que controla la flecha izquierda:
          <xml>
          <block type="studio_whenArrow">

          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Este es el bloque que hace que el caballero se mueva a la izquierda

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events5_authored_hint:
        courseB_playlab_events5_a: |-
          Este es el bloque de eventos  que controla la flecha derecha:
          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: |-
          Este es el bloque que hace huir al caballero.
          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events5_2018_authored_hint:
        courseB_playlab_events5_a: |-
          Este es el bloque de eventos  que controla la flecha derecha:
          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: |-
          Este es el bloque que hace huir al caballero.
          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events5_2019_authored_hint:
        courseB_playlab_events5_a: |-
          Este es el bloque de eventos  que controla la flecha derecha:
          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: |-
          Este es el bloque que hace huir al caballero.
          <xml>
          <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block>
          </xml>
      courseB_playlab_events6_authored_hint:
        courseB_playlab_events6_a: |-
          Necesitará estos bloques de eventos:
          <xml>
          <block type="studio_whenArrow" id="callMe">

          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Usa las flechas desplegables en el verde \`cuando los bloques de eventos "flecha presionada" para elegir diferentes direcciones.

          ![](https://images.code.org/b4c76f19fc2d269c1f731e5f6e786b8-image-1503990996.gif)
        courseB_playlab_events6_c: "¡Llega a todas las banderas para pasar!"
      courseB_playlab_events6_2018_authored_hint:
        courseB_playlab_events6_a: |-
          Necesitará estos bloques de eventos:
          <xml>
          <block type="studio_whenArrow" id="callMe">

          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Usa las flechas desplegables en el verde \`cuando los bloques de eventos "flecha presionada" para elegir diferentes direcciones.

          ![](https://images.code.org/b4c76f19fc2d269c1f731e5f6e786b8-image-1503990996.gif)
        courseB_playlab_events6_c: "¡Llega a todas las banderas para pasar!"
      courseB_playlab_events6_2019_authored_hint:
        courseB_playlab_events6_a: |-
          Necesitará estos bloques de eventos:
          <xml>
          <block type="studio_whenArrow" id="callMe">

          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Usa las flechas desplegables en el verde \`cuando los bloques de eventos "flecha presionada" para elegir diferentes direcciones.

          ![](https://images.code.org/b4c76f19fc2d269c1f731e5f6e786b8-image-1503990996.gif)
        courseB_playlab_events6_c: "¡Llega a todas las banderas para pasar!"
      courseB_playlab_events7_authored_hint:
        courseB_playlab_events7_a: |-
          Este es el bloque de eventos que necesitarás:
          <xml>
          <block type="studio_whenSpriteCollided">

          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Este es el bloque que necesitas para reproducir un sonido.
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Este es el bloque que necesitas para que el caballero desaparezca:
          <xml>
          <block type="studio_vanish">

          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2018_authored_hint:
        courseB_playlab_events7_a: |-
          Este es el bloque de eventos que necesitarás:
          <xml>
          <block type="studio_whenSpriteCollided">

          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Este es el bloque que necesitas para reproducir un sonido.
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Este es el bloque que necesitas para que el caballero desaparezca:
          <xml>
          <block type="studio_vanish">

          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2019_authored_hint:
        courseB_playlab_events7_a: |-
          Este es el bloque de eventos que necesitarás:
          <xml>
          <block type="studio_whenSpriteCollided">

          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Este es el bloque que necesitas para reproducir un sonido.
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Este es el bloque que necesitas para que el caballero desaparezca:
          <xml>
          <block type="studio_vanish">

          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_eventsToolbox_authored_hint:
        courseB_playlab_events7_a: |-
          Este es el bloque de eventos que necesitarás:

          ![](https://images.code.org/2ed42b3a3108c6affdfc866de57f2eec-image-1475624565390.42.18.png)
        courseB_playlab_events7_b: Este es el bloque que necesitas para reproducir
          un sonido. ! \[] (<https://images.code.org/58e9b9a146a4ca3a8eee25845110b805-image-1475624550269.42.00.png>)
        courseB_playlab_events7_c: Este es el bloque que necesitas para hacer que
          el caballero desaparezca:! \[] (Https\://images.code.org/f468611cbe51e1cb35531334f625395a-image-1475624478204.41.02.png)
      courseB_playlab_events_challenge1_authored_hint:
        courseB_playlab_events_challenge1_a: |-
          Haz que los otros animales se muevan hacia abajo cuando presiones `▼`
          <xml>
            <block type="studio_whenArrow" movable="false">
              <title name="VALUE">down</title>
            </block>
          </xml>
        courseB_playlab_events_challenge1_b: |-
          Cambia la velocidad de los animales usando este bloque:
          <xml>
          <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          ¿Qué dirán todos cuando termine la carrera? Hazlos hablar con este evento:
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2018_authored_hint:
        courseB_playlab_events_challenge1_a: |-
          Haz que los otros animales se muevan hacia abajo cuando presiones `▼`
          <xml>
            <block type="studio_whenArrow" movable="false">
              <title name="VALUE">down</title>
            </block>
          </xml>
        courseB_playlab_events_challenge1_b: |-
          Cambia la velocidad de los animales usando este bloque:
          <xml>
          <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          ¿Qué dirán todos cuando termine la carrera? Hazlos hablar con este evento:
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2019_authored_hint:
        courseB_playlab_events_challenge1_a: |-
          Haz que los otros animales se muevan hacia abajo cuando presiones `▼`
          <xml>
            <block type="studio_whenArrow" movable="false">
              <title name="VALUE">down</title>
            </block>
          </xml>
        courseB_playlab_events_challenge1_b: |-
          Cambia la velocidad de los animales usando este bloque:
          <xml>
          <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          ¿Qué dirán todos cuando termine la carrera? Hazlos hablar con este evento:
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge2_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debería desaparecer
          al hacer clic. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡A mezclarlo!

          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debería desaparecer
          al hacer clic. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡A mezclarlo!

          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_2019_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debería desaparecer
          al hacer clic. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡A mezclarlo!

          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_embed_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debe desaparecer
          cuando se golpea. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡Mezclar!

          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_template_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debe desaparecer
          cuando se golpea. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡Mezclar!

          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_template_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debe desaparecer
          cuando se golpea. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡A mezclarlo!

          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_playlab_events_challenge2_template_2019_authored_hint:
        courseB_playlab_events_challenge2_a: Cada animal en el juego debe desaparecer
          cuando se golpea. ¡También debería volver después de uno o dos segundos!
        courseB_playlab_events_challenge2_b: |-
          Usa otros bloques de eventos para hacer desaparecer a los otros animales.
          <xml>
          <block type="studio_whenSpriteClicked">

          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          ¡Usa comandos adicionales para reproducir sonidos o ganar puntos cuando haces clic en los animales!
          <xml>
          <block type="studio_playSound">

          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          ¡A mezclarlo!

          Haz que algunos animales den más puntos que otros. Usa diferentes sonidos.
          ¡Cambia los estados de ánimo de los animales!
      courseB_starWars_prog1_authored_hint:
        courseB_starWars_prog1_a: Intenta agregar bloques de uno en uno, luego haz
          clic en "Ejecutar" para ver qué sucede.
        courseB_starWars_prog1_b: |-
          Querrás moverte hacia el este para resolver este desafío. ¿Qué tan lejos necesitas moverte?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2018_authored_hint:
        courseB_starWars_prog1_a: Intenta agregar bloques de uno en uno, luego haz
          clic en "Ejecutar" para ver qué sucede.
        courseB_starWars_prog1_b: |-
          Querrás moverte hacia el este para resolver este desafío. ¿Qué tan lejos necesitas moverte?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2019_authored_hint:
        courseB_starWars_prog1_a: Intenta agregar bloques de uno en uno, luego haz
          clic en "Ejecutar" para ver qué sucede.
        courseB_starWars_prog1_b: |-
          Querrás moverte hacia el este para resolver este desafío. ¿Qué tan lejos necesitas moverte?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2_authored_hint:
        courseB_starWars_prog2_a: Divide este problema en dos partes. Consigue una
          sola pila de chatarra y luego descubre cómo llegar a la otra.
      courseB_starWars_prog2_2018_authored_hint:
        courseB_starWars_prog2_a: Divide este problema en dos partes. Consigue una
          sola pila de chatarra y luego descubre cómo llegar a la otra.
      courseB_starWars_prog2_2019_authored_hint:
        courseB_starWars_prog2_a: Divide este problema en dos partes. Consigue una
          sola pila de chatarra y luego descubre cómo llegar a la otra.
      courseB_starWars_prog3_authored_hint:
        courseB_starWars_prog3_a: Necesitarás moverte de 3 maneras para resolver este
          desafío.
        courseB_starWars_prog3_b: Construye una pieza de código a la vez. Ejecútalo
          para descubrir a dónde ir desde allí.
      courseB_starWars_prog3_2018_authored_hint:
        courseB_starWars_prog3_a: Necesitarás moverte de 3 maneras para resolver este
          desafío.
        courseB_starWars_prog3_b: Construye una pieza de código a la vez. Ejecútalo
          para descubrir a dónde ir desde allí.
      courseB_starWars_prog3_2019_authored_hint:
        courseB_starWars_prog3_a: Necesitarás moverte de 3 maneras para resolver este
          desafío.
        courseB_starWars_prog3_b: Construye una pieza de código a la vez. Ejecútalo
          para descubrir a dónde ir desde allí.
      courseB_starWars_prog4_authored_hint:
        courseB_starWars_prog4_a: Construye una pieza de código a la vez. Ejecútelo
          para descubrir a dónde ir desde allí.
        courseB_starWars_prog4_b: |-
          Intenta usar el bloque repetir para un código más corto.

          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2018_authored_hint:
        courseB_starWars_prog4_a: Construye una pieza de código a la vez. Ejecútalo
          para descubrir a dónde ir desde allí.
        courseB_starWars_prog4_b: |-
          Intenta usar el bloque repetir para un código más corto.

          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2019_authored_hint:
        courseB_starWars_prog4_a: Construye una pieza de código a la vez. Ejecútalo
          para descubrir a dónde ir desde allí.
        courseB_starWars_prog4_b: |-
          Intenta usar el bloque repetir para un código más corto.

          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog5_authored_hint:
        courseB_starWars_prog5_a: "¿Este patrón no se parece un poco al último desafío?"
        courseB_starWars_prog5_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog5_c: Traza este patrón con tu dedo. Cuenta las piezas
          de metal mientras te mueves.
        courseB_starWars_prog5_da: Mira lo que sucede si usas la misma solución del
          desafío de la escalera :! \[] (Https\://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018_authored_hint:
        courseB_starWars_prog5_a: "¿Este patrón no se parece un poco al último desafío?"
        courseB_starWars_prog5_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog5_c: Traza este patrón con tu dedo. Cuenta las piezas
          de metal mientras te mueves.
        courseB_starWars_prog5_da: Mira lo que sucede si usas la misma solución del
          desafío de la escalera :! \[] (Https\://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2019_authored_hint:
        courseB_starWars_prog5_a: "¿Este patrón no se parece un poco al último desafío?"
        courseB_starWars_prog5_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog5_c: Traza este patrón con tu dedo. Cuenta las piezas
          de metal mientras te mueves.
        courseB_starWars_prog5_da: Mira lo que sucede si usas la misma solución del
          desafío de la escalera :! \[] (Https\://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6_authored_hint:
        courseB_starWars_prog6_a: "¡Este patrón es solo un paso escalón con dos movimientos
          por dirección!"
        courseB_starWars_prog6_b: |-
          Intenta usar el bloque de repetición para un código más corto.
          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2018_authored_hint:
        courseB_starWars_prog6_a: "¡Este patrón es solo un paso escalón con dos movimientos
          por dirección!"
        courseB_starWars_prog6_b: |-
          Intenta usar el bloque repetir para un código más corto.

          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2019_authored_hint:
        courseB_starWars_prog6_a: "¡Este patrón es solo un paso escalón con dos movimientos
          por dirección!"
        courseB_starWars_prog6_b: |-
          Intenta usar el bloque repetir para un código más corto.

          <xml>  <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog7_authored_hint:
        courseB_starWars_prog7_a: "¿Este patrón no se parece un poco al último rompecabezas?"
        courseB_starWars_prog7_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog7_c: Intenta dibujar el patrón de escalón grande sobre
          este rompecabezas. ¿Cubre todo el metal de desecho?
      courseB_starWars_prog7_2018_authored_hint:
        courseB_starWars_prog7_a: "¿Este patrón no se parece un poco al último desafío?"
        courseB_starWars_prog7_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog7_c: Intenta dibujar el patrón de escalón grande sobre
          este rompecabezas. ¿Cubre todo el metal de desecho?
      courseB_starWars_prog7_2019_authored_hint:
        courseB_starWars_prog7_a: "¿Este patrón no se parece un poco al último desafío?"
        courseB_starWars_prog7_b: BB-8 agarrará la chatarra mientras rueda sobre ella.
        courseB_starWars_prog7_c: Intenta dibujar el patrón de escalón grande sobre
          este rompecabezas. ¿Cubre todo el metal de desecho?
      courseB_starWars_prog8_authored_hint:
        courseB_starWars_prog8_a: Está bien volver sobre un conjunto de espacios por
          los que ya has viajado.
        courseB_starWars_prog8_b: |-
          Intenta usar el bloque repetir para ver qué sucede con el código que pones dentro.
          <xml>
          <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2018_authored_hint:
        courseB_starWars_prog8_a: Está bien volver sobre un conjunto de espacios por
          los que ya has viajado.
        courseB_starWars_prog8_b: |-
          Intenta usar el bloque repetir para ver qué sucede con el código que pones dentro.
          <xml>
          <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2019_authored_hint:
        courseB_starWars_prog8_a: Está bien volver sobre un conjunto de espacios por
          los que ya has viajado.
        courseB_starWars_prog8_b: |-
          Intenta usar el bloque repetir para ver qué sucede con el código que pones dentro.
          <xml>
          <block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog9_authored_hint:
        courseB_starWars_prog9_a: "¡No tengas miedo de cometer un error! Ejecuta el
          código para ver qué sucede, incluso si aún no has resuelto el desafío."
        courseB_starWars_prog9_b: Hay muchas formas de resolver este desafío.
        courseB_starWars_prog9_c: ¿Podría un loop de "repetir" ayudar aquí?
      courseB_starWars_prog9_2018_authored_hint:
        courseB_starWars_prog9_a: "¡No tengas miedo de cometer un error! Ejecuta el
          código para ver qué sucede, incluso si aún no has resuelto el desafío."
        courseB_starWars_prog9_b: Hay muchas formas de resolver este desafío.
        courseB_starWars_prog9_c: |-
          ¿Podría un loop 'repetir' <xml><block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block></xml> ayudar aquí?
      courseB_starWars_prog9_2019_authored_hint:
        courseB_starWars_prog9_a: "¡No tengas miedo de cometer un error! Ejecuta el
          código para ver qué sucede, incluso si aún no has resuelto el desafío."
        courseB_starWars_prog9_b: Hay muchas formas de resolver este desafío.
        courseB_starWars_prog9_c: |-
          ¿Podría un loop 'repetir' <xml><block type="controls_repeat_simplified">

          <title name="TIMES">3</title>
          </block></xml> ayudar aquí?
      courseC19_playLab_EOC1_authored_hint:
        courseE_playLab_scaffold1_a: El bloque 'establecer actor 1 ??? imagen' puede
          usarse para agregar un actor al escenario.
        courseE_playLab_scaffold1_b: Coloca el bloque de 'actor' de 'debajo del' cuando
          'para que su actor aparezca al principio del programa.
        courseE_playLab_scaffold1_c: Usa ¨set ??? Fondo¨para elegir un fondo para
          tu escena.
      courseC19_playLab_EOC2_authored_hint:
        courseE_playLab_scaffold1_a: Abre el menú desplegable del evento 'cuando \_\_\_
          flecha' para cambiar la dirección de los controles de bloqueo.
        courseE_playLab_scaffold1_b: Debes tener cuatro 'cuando flecha' bloques de
          eventos, con una dirección para abrir debajo de cada uno.
        courseE_playLab_scaffold1_c: Cuando hayas terminado, ¡podrás mover a tu héroe
          con las teclas de flecha!
      courseC19_playLab_EOC4_authored_hint:
        courseE_playLab_scaffold4_a: Usa `anotar punto` para agregar un punto, y`quitar
          punto` para restar uno.
      courseC_PlayLab_events1_authored_hint:
        courseC_PlayLab_events1_a: |-
          Fija este bloque al bloque 'cuando corre':

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2018_authored_hint:
        courseC_PlayLab_events1_a: |-
          Fija este bloque al bloque 'cuando corre':

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2019_authored_hint:
        courseC_PlayLab_events1_a: |-
          Fija este bloque al bloque 'cuando corre':

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events2_authored_hint:
        courseC_PlayLab_events2_a: |-
          Adjunta dos de estos bloques al bloque `cuando corre`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Usa el menú desplegable en el segundo bloque `actor
          __ dice` para cambiar qué actor habla.
      courseC_PlayLab_events2_2018_authored_hint:
        courseC_PlayLab_events2_a: |-
          Adjunta dos de estos bloques al bloque `cuando corre`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Usa el menú desplegable en el segundo bloque `actor
          __ dice` para cambiar qué actor habla.
      courseC_PlayLab_events2_2019_authored_hint:
        courseC_PlayLab_events2_a: |-
          Adjunta dos de estos bloques al bloque `cuando corre`:

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Usa el menú desplegable en el segundo bloque `actor
          __ dice` para cambiar qué actor habla.
      courseC_PlayLab_events3_authored_hint:
        courseC_PlayLab_events3_a: Solo necesitas mover a Jorge hacia la derecha unos
          25 píxeles para resolver este rompecabezas.
        courseC_PlayLab_events3_b: "¿Hay un bloque en la caja de herramientas que
          pareciera mover a un actor?"
        courseC_PlayLab_events3_c: |-
          Fija este bloque al bloque`cuando corre`:

          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2018_authored_hint:
        courseC_PlayLab_events3_a: Solo necesitas mover a Jorge hacia la derecha unos
          25 píxeles para resolver este rompecabezas.
        courseC_PlayLab_events3_b: "¿Hay un bloque en la caja de herramientas que
          pareciera mover a un actor?"
        courseC_PlayLab_events3_c: |-
          Fija este bloque al bloque`cuando corre`:

          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2019_authored_hint:
        courseC_PlayLab_events3_a: Solo necesitas mover a Jorge hacia la derecha unos
          25 píxeles para resolver este rompecabezas.
        courseC_PlayLab_events3_b: "¿Hay un bloque en la caja de herramientas que
          pareciera mover a un actor?"
        courseC_PlayLab_events3_c: |-
          Fija este bloque al bloque`cuando corre`:

          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events4_authored_hint:
        courseC_PlayLab_events4_b: Cuando se haga clic en el botón "Ejecutar", Jorge
          se moverá a la derecha \*\* 100 píxeles para llegar al gato.
        courseC_PlayLab_events4_a: Deberás adjuntar un bloque "actor \_\_ decir "
          al evento "cuando el actor toque" para resolver este desafío.
      courseC_PlayLab_events4_2018_authored_hint:
        courseC_PlayLab_events4_b: Cuando se haga clic en el botón "Ejecutar", Jorge
          se moverá a la derecha \*\* 100 píxeles para llegar al gato.
        courseC_PlayLab_events4_a: Deberás adjuntar un bloque "actor \_\_ decir "
          al evento "cuando el actor toque" para resolver este desafío.
      courseC_PlayLab_events4_2019_authored_hint:
        courseC_PlayLab_events4_b: Cuando se haga clic en el botón "Ejecutar", Jorge
          se moverá a la derecha \*\* 100 píxeles para llegar al gato.
        courseC_PlayLab_events4_a: Deberás adjuntar un bloque "actor \_\_ decir "
          al evento "cuando el actor toque" para resolver este desafío.
      courseC_PlayLab_events5_authored_hint:
        courseC_PlayLab_events5_a: Deberás hacer clic en el menú desplegable en el
          bloque `actor decir` para encontrar el texto" ¿Qué hay de nuevo
        courseC_PlayLab_events5_b: "¡Haz clic en Octavia cuando ejecutes tu programa
          para verificar que funcione!"
      courseC_PlayLab_events5_2018_authored_hint:
        courseC_PlayLab_events5_a: Deberás hacer clic en el menú desplegable en el
          bloque `actor decir` para encontrar el texto" ¿Qué hay de nuevo
        courseC_PlayLab_events5_b: "¡Haz clic en Octavia cuando ejecutes tu programa
          para verificar que funcione!"
      courseC_PlayLab_events5_2019_authored_hint:
        courseC_PlayLab_events5_a: Deberás hacer clic en el menú desplegable en el
          bloque `actor decir` para encontrar el texto" ¿Qué hay de nuevo
        courseC_PlayLab_events5_b: "¡Haz clic en Octavia cuando ejecutes tu programa
          para verificar que funcione!"
      courseC_PlayLab_events6_authored_hint:
        courseC_PlayLab_events6_a: Cada bloque verde `cuando flecha` debe tener una
          acción debajo de él.
        courseC_PlayLab_events6_b: Usa el menú desplegable en el bloque `mover actor
          1` para cambiar la dirección en la que se mueve Waddles.
        courseC_PlayLab_events6_c: "¡Cuando hayas terminado, deberías poder mover
          Waddles usando las teclas de flecha en tu computadora!"
      courseC_PlayLab_events6_2018_authored_hint:
        courseC_PlayLab_events6_a: Cada bloque verde `cuando flecha` debe tener una
          acción debajo de él.
        courseC_PlayLab_events6_b: Usa el menú desplegable en el bloque `mover actor
          1` para cambiar la dirección en la que se mueve Waddles.
        courseC_PlayLab_events6_c: "¡Cuando hayas terminado, deberías poder mover
          Waddles usando las teclas de flecha en tu computadora!"
      courseC_PlayLab_events6_2019_authored_hint:
        courseC_PlayLab_events6_a: Cada bloque verde `cuando flecha` debe tener una
          acción debajo de él.
        courseC_PlayLab_events6_b: Usa el menú desplegable en el bloque `mover actor
          1` para cambiar la dirección en la que se mueve Waddles.
        courseC_PlayLab_events6_c: "¡Cuando hayas terminado, deberías poder mover
          Waddles usando las teclas de flecha en tu computadora!"
      courseC_PlayLab_events7_authored_hint:
        courseC_PlayLab_events7_a: 'Utiliza tanto el bloque `mover actor de 2 hasta
          400 píxeles` y el bloque `mover actor 2 por 400 píxeles` dentro del loop
          `repite siempre` para resolver este desafío. '
        courseC_PlayLab_events7_b: El loop "repetir siempre" no necesita estar conectado
          a otro bloque de evento; se ejecutará por si mismo.
      courseC_PlayLab_events7_2018_authored_hint:
        courseC_PlayLab_events7_a: 'Utiliza tanto el bloque `mover actor de 2 hasta
          400 píxeles` y el bloque `mover actor 2 por 400 píxeles` dentro del loop
          `repite siempre` para resolver este desafío. '
        courseC_PlayLab_events7_b: El loop "repetir siempre" no necesita estar conectado
          a otro bloque de evento; se ejecutará por si mismo.
      courseC_PlayLab_events7_2019_authored_hint:
        courseC_PlayLab_events7_a: 'Utiliza tanto el bloque `mover actor de 2 hasta
          400 píxeles` y el bloque `mover actor 2 por 400 píxeles` dentro del loop
          `repite siempre` para resolver este desafío. '
        courseC_PlayLab_events7_b: El loop "repetir siempre" no necesita estar conectado
          a otro bloque de evento; se ejecutará por si mismo.
      courseC_PlayLab_events8_authored_hint:
        courseC_PlayLab_events8_a: Necesitarás conectar bloques en el bloque 'cuando
          el actor toca' para que esto suceda correctamente.
        courseC_PlayLab_events8_b: "¡El bloque 'actor dice' y 'emitir sonido', en
          la caja de herramientas podrían ayudarte!"
      courseC_PlayLab_events8_2018_authored_hint:
        courseC_PlayLab_events8_a: Necesitarás conectar bloques en el bloque 'cuando
          el actor toca' para que esto suceda correctamente.
        courseC_PlayLab_events8_b: "¡El bloque 'actor dice' y 'emitir sonido', en
          la caja de herramientas podrían ayudarte!"
      courseC_PlayLab_events8_2019_authored_hint:
        courseC_PlayLab_events8_a: Necesitarás conectar bloques en el bloque 'cuando
          el actor toca' para que esto suceda correctamente.
        courseC_PlayLab_events8_b: "¡El bloque 'actor dice' y 'emitir sonido', en
          la caja de herramientas podrían ayudarte!"
      courseC_PlayLab_events9_authored_hint:
        courseC_PlayLab_events9_a: El bloque `anotar punto` te ayudará a resolver
          este desafío.
        courseC_PlayLab_events9_b: Asegúrate de que tu nuevo bloque `cuando actor
          toque` dice actor \*\* 1 \*\* y actor \*\* 3 \*\*.
        courseC_PlayLab_events9_c: "¡Puedes tener más de un evento \\`cuando actor
          toque ' en tu espacio de trabajo al mismo tiempo, por lo que no tienes que
          borrar el primero!"
      courseC_PlayLab_events9_2018_authored_hint:
        courseC_PlayLab_events9_a: El bloque `anotar punto` te ayudará a resolver
          este desafío.
        courseC_PlayLab_events9_b: Asegúrate de que tu nuevo bloque `cuando actor
          toque` dice actor \*\* 1 \*\* y actor \*\* 3 \*\*.
        courseC_PlayLab_events9_c: "¡Puedes tener más de un evento \\`cuando actor
          toque ' en tu espacio de trabajo al mismo tiempo, por lo que no tienes que
          borrar el primero!"
      courseC_PlayLab_events9_2019_authored_hint:
        courseC_PlayLab_events9_a: El bloque `anotar punto` te ayudará a resolver
          este desafío.
        courseC_PlayLab_events9_b: Asegúrate de que tu nuevo bloque `cuando actor
          toque` dice actor \*\* 1 \*\* y actor \*\* 3 \*\*.
        courseC_PlayLab_events9_c: "¡Puedes tener más de un evento \\`cuando actor
          toque ' en tu espacio de trabajo al mismo tiempo, por lo que no tienes que
          borrar el primero!"
      courseC_PlayLab_eventsA_authored_hint:
        courseC_PlayLab_eventsA_a: Usa el bloque \` establecer fondo ' y el bloque
          ' establecer agente a una velocidad de**\_** ' para resolver este desafío.
        courseC_PlayLab_eventsA_b: Tendrás que arrastrar específicamente un bloque
          de eventos `cuando se ejecuta` al espacio de trabajo para resolver este
          rompecabezas.
      courseC_PlayLab_eventsA_2018_authored_hint:
        courseC_PlayLab_eventsA_a: Usa el bloque \` establecer fondo ' y el bloque
          ' establecer agente a una velocidad de**\_** ' para resolver este desafío.
        courseC_PlayLab_eventsA_b: Tendrás que arrastrar específicamente un bloque
          de eventos `cuando se ejecuta` al espacio de trabajo para resolver este
          rompecabezas.
      courseC_PlayLab_eventsA_2019_authored_hint:
        courseC_PlayLab_eventsA_a: Usa el bloque \` establecer fondo ' y el bloque
          ' establecer agente a una velocidad de**\_** ' para resolver este desafío.
        courseC_PlayLab_eventsA_b: Tendrás que arrastrar específicamente un bloque
          de eventos `cuando se ejecuta` al espacio de trabajo para resolver este
          rompecabezas.
      courseC_PlayLab_eventsA_embed_2019_authored_hint:
        courseC_PlayLab_eventsA_a: Usa el bloque \` establecer fondo ' y el bloque
          ' establecer agente a una velocidad de**\_** ' para resolver este desafío.
        courseC_PlayLab_eventsA_b: Tendrás que arrastrar específicamente un bloque
          de eventos `cuando se ejecuta` al espacio de trabajo para resolver este
          rompecabezas.
      courseC_PlayLab_eventsFP_authored_hint:
        idea1: "-   ¿Necesitas una idea? \\* \n    **¿Quién está ahí?** Haz que los
          personajes aparezcan con imágenes aleatorias , para que nadie sepa quién
          aparece a continuación. \n\n![](<https: // images .code.org / a56e03479801995d93ad5a4e4384a79e-
          image -1475340154498.gif>)"
        idea2: "-   ¿Necesitas una idea?\\* \n    \\*\\* Ir a una aventura\\*\\* -
          Cambia el fondo, luego haz que los personajes hablen de dónde están ahora.
          \n\n![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)"
        idea3: "_¿Necesitas una idea?_ \n\\*\\* Pinball\\*\\* - Haz que un personaje
          se mueva con las flechas (usa los bloques 'flecha cuando sube' y 'flecha
          cuando baja'), luego reproduce sonido cuando choque con otro personaje en
          la pantalla."
      courseC_PlayLab_eventsFP_2018_authored_hint:
        idea1: "-   ¿Necesitas una idea? \\* \n    **¿Quién está ahí?** Haz que los
          personajes aparezcan con imágenes aleatorias , para que nadie sepa quién
          aparece a continuación. \n\n![](<https: // images .code.org / a56e03479801995d93ad5a4e4384a79e-
          image -1475340154498.gif>)"
        idea2: "-   ¿Necesitas una idea?\\* \n    \\*\\* Ir a una aventura\\*\\* -
          Cambia el fondo, luego haz que los personajes hablen de dónde están ahora.
          \n\n![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)"
        idea3: "_¿Necesitas una idea?_ \n\\*\\* Pinball\\*\\* - Haz que un personaje
          se mueva con las flechas (usa los bloques 'flecha cuando sube' y 'flecha
          cuando baja'), luego reproduce sonido cuando choque con otro personaje en
          la pantalla."
      courseC_PlayLab_eventsFP_2019_authored_hint:
        idea1: "-   ¿Necesitas una idea? \\* \n    **¿Quién está ahí?** Haz que los
          personajes aparezcan con imágenes aleatorias , para que nadie sepa quién
          aparece a continuación. \n\n![](<https: // images .code.org / a56e03479801995d93ad5a4e4384a79e-
          image -1475340154498.gif>)"
        idea2: "-   ¿Necesitas una idea?\\* \n    \\*\\* Ir a una aventura\\*\\* -
          Cambia el fondo, luego haz que los personajes hablen de dónde están ahora.
          \n\n![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)"
        idea3: "_¿Necesitas una idea?_ \n\\*\\* Pinball\\*\\* - Haz que un personaje
          se mueva con las flechas (usa los bloques 'flecha cuando sube' y 'flecha
          cuando baja'), luego reproduce sonido cuando choque con otro personaje en
          la pantalla."
      courseC_PlayLab_events_challenge1_authored_hint:
        courseC_PlayLab_events_challenge_a: |-
          Puedes usar este bloque para mover actores a diferentes lugares en el espacio del juego.

          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Intenta usar \`establecer actor 1 al centro
          de la posición izquierda' cuando toque a cualquiera de los otros actores.
          ¡Esto reiniciará el juego para que el jugador pueda seguir intentándolo!
        courseC_PlayLab_events_challenge_c: |-
          ¡También puedes intentar cambiar la velocidad de los diferentes actores para hacer que el juego sea más fácil o más desafiante!

          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2018_authored_hint:
        courseC_PlayLab_events_challenge_a: |-
          Puedes usar este bloque para mover actores a diferentes lugares en el espacio del juego.

          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Intenta usar \`establecer actor 1 al centro
          de la posición izquierda' cuando toque a cualquiera de los otros actores.
          ¡Esto reiniciará el juego para que el jugador pueda seguir intentándolo!
        courseC_PlayLab_events_challenge_c: |-
          ¡También puedes intentar cambiar la velocidad de los diferentes actores para hacer que el juego sea más fácil o más desafiante!

          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2019_authored_hint:
        courseC_PlayLab_events_challenge_a: |-
          Puedes usar este bloque para mover actores a diferentes lugares en el espacio del juego.

          <xml> <block type="studio_setSpritePosition">

          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Intenta usar \`establecer actor 1 al centro
          de la posición izquierda' cuando toque a cualquiera de los otros actores.
          ¡Esto reiniciará el juego para que el jugador pueda seguir intentándolo!
        courseC_PlayLab_events_challenge_c: |-
          ¡También puedes intentar cambiar la velocidad de los diferentes actores para hacer que el juego sea más fácil o más desafiante!

          <xml>  <block type="studio_setSpriteSpeed">

          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_xy_blocks_authored_hint:
        courseC_PlayLab_events_challenge_a: Los dos valores en este bloque le permiten
          mover un actor a cualquier píxel en el área de juego. Puede elegir cualquier
          número entre 0-400.
        courseC_PlayLab_events_challenge_b: |-
          Puede decidir qué números usar, al pensar qué tan lejos de la esquina superior izquierda desea mover. El primer número es el número de píxeles de la izquierda. El segundo número es el número de píxeles desde la parte superior.

          <xml><block type="studio_setSpriteXY" inline="true">
          <value name="SPRITE">
          <block type="math_number" movable="false">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="XPOS">
          <block type="math_number" movable="false">
          <title name="NUM">37</title>
          </block>
          </value>
          <value name="YPOS">
          <block type="math_number" movable="false">
          <title name="NUM">187</title>
          </block>
          </value>
          </block></xml>
          ![](https://images.code.org/b1559bf476ceb59f880c43271c5e10b2-image-1494111787192.59.49 PM.png)
      courseC_artist_loop1_authored_hint:
        courseC_artist_loop1_a: No necesitas hacer cambios al loop, solamente pon
          un bloque sobre él.
        courseC_artist_loop1_b: |-
          Este es el bloque que necesitarás para establecer un patrón:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          ¡Elige cualquier patrón que desees!
      courseC_artist_loop1_2018_authored_hint:
        courseC_artist_loop1_a: No necesitas hacer cambios al loop, solamente pon
          un bloque sobre él.
        courseC_artist_loop1_b: |-
          Este es el bloque que necesitarás para establecer un patrón:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          ¡Elige cualquier patrón que desees!
      courseC_artist_loop1_2019_authored_hint:
        courseC_artist_loop1_a: No necesitas hacer cambios al loop, solamente pon
          un bloque sobre él.
        courseC_artist_loop1_b: |-
          Este es el bloque que necesitarás para establecer un patrón:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          ¡Elige cualquier patrón que desees!
      courseC_artist_loops1a_authored_hint:
        courseC_artist_loops1a_a: |-
          Este es el primer bloque que necesitarás:

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          ¡Usa este bloque para dibujar la calcomanía!

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2018_authored_hint:
        courseC_artist_loops1a_a: |-
          Este es el primer bloque que necesitarás:

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          ¡Usa este bloque para dibujar la calcomanía!

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2019_authored_hint:
        courseC_artist_loops1a_a: |-
          Este es el primer bloque que necesitarás:

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          ¡Usa este bloque para dibujar la calcomanía!

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1b_2019_authored_hint:
        courseC_artist_loops1b_a: |-
          Este es el primer bloque que necesitarás:

          <xml>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">???</title>
          <title name="VALUE" config="45,60,90,120,180">???</title>
          </block>
          </xml>

          Puedes elegir tanto izquierda como derecha y cualquier número de grados.
      courseC_artist_loops2a_authored_hint:
        courseC_artist_loops2a_a: Dentro del loop, querrás saltar a 200 más de 200,
          luego dibuja la calcomanía del pájaro, y luego gira 30 grados.
        courseC_artist_loops2a_b: Haga clic en el número en la parte superior del
          loop "repetir" para modificar las veces que se repite.
      courseC_artist_loops2a_2018_authored_hint:
        courseC_artist_loops2a_a: Dentro del loop, querrás saltar a 200 más de 200,
          luego dibuja la calcomanía del pájaro, y luego gira 30 grados.
        courseC_artist_loops2a_b: Haga clic en el número en la parte superior del
          loop "repetir" para modificar las veces que se repite.
      courseC_artist_loops2a_2019_authored_hint:
        courseC_artist_loops2a_a: Dentro del loop, querrás saltar a 200 más de 200,
          luego dibuja la calcomanía del pájaro, y luego gira 30 grados.
        courseC_artist_loops2a_b: Haga clic en el número en la parte superior del
          loop "repetir" para modificar las veces que se repite.
      courseC_artist_loops3a_authored_hint:
        courseC_artist_loops3a_a: Deberás agregar un bloque dentro de su loop, después
          de la calcomanía del pájaro.
        courseC_artist_loops3a_b: Use el menú desplegable en el bloque "dibujar calcomanía"
          para encontrar la calcomanía del murciélago.
      courseC_artist_loops3a_2018_authored_hint:
        courseC_artist_loops3a_a: Deberás agregar un bloque dentro de su loop, después
          de la calcomanía del pájaro.
        courseC_artist_loops3a_b: Use el menú desplegable en el bloque "dibujar calcomanía"
          para encontrar la calcomanía del murciélago.
      courseC_artist_loops3a_2019_authored_hint:
        courseC_artist_loops3a_a: Deberás agregar un bloque dentro de su loop, después
          de la calcomanía del pájaro.
        courseC_artist_loops3a_b: Use el menú desplegable en el bloque "dibujar calcomanía"
          para encontrar la calcomanía del murciélago.
      courseC_artist_loops4a_authored_hint:
        courseC_artist_loops4a_a: |-
          Utiliza este bloque para avanzar:

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          ¡No olvides cambiar la distancia del salto!
      courseC_artist_loops4a_2018_authored_hint:
        courseC_artist_loops4a_a: |-
          Utiliza este bloque para avanzar:

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          ¡No olvides cambiar la distancia del salto!
      courseC_artist_loops4a_2019_authored_hint:
        courseC_artist_loops4a_a: |-
          Utiliza este bloque para avanzar:

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          ¡No olvides cambiar la distancia del salto!
        courseC_artist_loops4a_b: |-
          ¡Tu programa debería verse así!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">???</title>
          <statement name="DO">
          <block type="jump_to">
          <title name="VALUE">13</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">???</title>
          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Gato</title>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Perro</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseC_artist_loops5_authored_hint:
        courseC_artist_loops5_a: |-
          Intenta usar el bloque `jump to` para que tu artista vuelva al centro:
          <xml>
          <block type="jump_to_xy">

          <title name="XPOS">100</title>
          <title name="YPOS">100</title>
          </block>
          </xml>
      courseC_artist_loops5a_authored_hint:
        courseC_artist_loops5a_a: Use los menús desplegables en los bloques `dibujar
          pegatina` para cambiar sus imágenes.
      courseC_artist_loops5a_2018_authored_hint:
        courseC_artist_loops5a_a: Use los menús desplegables en los bloques `dibujar
          pegatina` para cambiar sus imágenes.
      courseC_artist_loops5a_2019_authored_hint:
        courseC_artist_loops5a_a: Use los menús desplegables en los bloques `dibujar
          pegatina` para cambiar sus imágenes.
      courseC_artist_loops5b_authored_hint:
        courseC_artist_loops5b_a: |-
          Utiliza este bloque para establecer el patrón de tus líneas:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Para hacer un diseño como el anterior, deberás retroceder
          la misma cantidad que avanzas.
      courseC_artist_loops5b_2018_authored_hint:
        courseC_artist_loops5b_a: |-
          Utiliza este bloque para establecer el patrón de tus líneas:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Para hacer un diseño como el anterior, deberás retroceder
          la misma cantidad que avanzas.
      courseC_artist_loops5b_2019_authored_hint:
        courseC_artist_loops5b_a: |-
          Utiliza este bloque para establecer el patrón de tus líneas:

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Para hacer un diseño como el anterior, deberás retroceder
          la misma cantidad que avanzas.
        courseC_artist_loops5b_c: |-
          ¡Tu programa debería verse así!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_line_style_pattern">
          <title name="VALUE">rainbowLine</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="jump_to">
          <title name="VALUE">13</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">???</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveBackward</title>
          <title name="VALUE">???</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">???</title>
          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Gato</title>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">???</title>
          <next>
          <block type="sticker">
          <title name="VALUE">Perro</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseC_artist_loops6_authored_hint:
        courseC_artist_loops6_a: "Pruebe una flor de triángulo:\n <img src = \"https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png\"
          width = \"150px\" /> \n\nO un pequeño error verde:\n \\<img src = \"https\\:
          //images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png
          \"width =\" 150px \"/>"
      courseC_artist_loops6a_authored_hint:
        courseC_artist_loops6a_a: Para hacer un diseño como el de la parte superior,
          salta hacia adelante menos de 75 pixeles entre cada calcomanía.
      courseC_artist_loops6a_2018_authored_hint:
        courseC_artist_loops6a_a: Para hacer un diseño como el de la parte superior,
          salta hacia adelante menos de 75 pixeles entre cada calcomanía.
      courseC_artist_loops6a_2019_authored_hint:
        courseC_artist_loops6a_a: Para hacer un diseño como el de la parte superior,
          salta hacia adelante menos de 75 pixeles entre cada calcomanía.
      courseC_artist_loops7a_authored_hint:
        courseC_artist_loops7a_a: |-
          Un circulo tiene 360 grados. Multiplique los grados en su giro las veces que el numero se repita. ¿Equivale a 360?
          Chequee las rotaciones sugeridas para ver si funciona!
      courseC_artist_loops7a_2018_authored_hint:
        courseC_artist_loops7a_a: |-
          Un circulo tiene 360 grados. Multiplique los grados en su giro las veces que el numero se repita. ¿Equivale a 360?
          Chequee las rotaciones sugeridas para ver si funciona!
      courseC_artist_loops7a_2019_authored_hint:
        courseC_artist_loops7a_a: |-
          Un circulo tiene 360 grados. Multiplique los grados en su giro las veces que el numero se repita. ¿Equivale a 360?
          Chequee las rotaciones sugeridas para ver si funciona!
      courseC_artist_loopsPre1a_authored_hint:
        courseC_artist_loopsPre1a_a: Recuerda poner el bloque "girar" dentro del loop.
        courseC_artist_loopsPre1a_b: 'Tu loop "repetir" debería tener 3 bloques en
          el interior: "saltar a 200 sobre 200 hacia abajo", "avanzar hasta 50 pixeles",
          y "girar a la derecha a 60 grados".'
      courseC_artist_loopsPre1a_2018_authored_hint:
        courseC_artist_loopsPre1a_a: Recuerda poner el bloque "girar" dentro del loop.
        courseC_artist_loopsPre1a_b: 'Tu loop "repetir" debería tener 3 bloques en
          el interior: "saltar a 200 sobre 200 hacia abajo", "avanzar hasta 50 pixeles",
          y "girar a la derecha a 60 grados".'
      courseC_artist_loopsPre1a_2019_authored_hint:
        courseC_artist_loopsPre1a_a: Recuerda poner el bloque "girar" dentro del loop.
        courseC_artist_loopsPre1a_b: 'Tu loop "repetir" debería tener 3 bloques en
          el interior: "saltar a 200 sobre 200 hacia abajo", "avanzar hasta 50 pixeles",
          y "girar a la derecha a 60 grados".'
      courseC_artist_loopsPrePre1a_authored_hint:
        courseC_artist_loopsPrePre1a_a: "El primer bloque que necesitarás es: \n\n![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14
          AM.png>)"
        courseC_artist_loopsPrePre1a_b: Para avanzar 50 píxeles , utiliza este bloque
          :! \[] (Https\://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27
          AM.png)
      courseC_artist_loopsPrePre1a_2018_authored_hint:
        courseC_artist_loopsPrePre1a_a: El primer bloque que necesitarás es:! \[]
          (Https\://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14
          AM.png)
        courseC_artist_loopsPrePre1a_b: Para avanzar 50 píxeles , utiliza este bloque
          :! \[] (Https\://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27
          AM.png)
      courseC_artist_loopsPrePre1a_2019_authored_hint:
        courseC_artist_loopsPrePre1a_a: El primer bloque que necesitarás es:! \[]
          (Https\://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14
          AM.png)
        courseC_artist_loopsPrePre1a_b: Para avanzar 50 píxeles , utiliza este bloque
          :! \[] (Https\://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27
          AM.png)
      courseC_artist_prog2_authored_hint:
        courseC_artist_prog2_a: '*"Si utilizas el bloque <xml><block type="draw_move_by_constant"><title
          name="DIR">avanzar</title><title name="VALUE">100</title></block></xml>,
          dibujaré una línea"*'
        courseC_artist_prog2_b: ¿Tienes problemas para girar en la esquina? Utiliza
          el bloque <xml><block type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml>.
      courseC_artist_prog2_2018_authored_hint:
        courseC_artist_prog2_a: '*"Si utilizas el bloque <xml><block type="draw_move_by_constant"><title
          name="DIR">avanzar</title><title name="VALUE">100</title></block></xml>,
          dibujaré una línea"*'
        courseC_artist_prog2_b: ¿Tienes problemas para girar en la esquina? Utiliza
          el bloque <xml><block type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml>.
      courseC_artist_prog2_2019_authored_hint:
        courseC_artist_prog2_a: '*"Si utilizas el bloque <xml><block type="draw_move_by_constant"><title
          name="DIR">avanzar</title><title name="VALUE">100</title></block></xml>,
          dibujaré una línea"*'
        courseC_artist_prog2_b: ¿Tienes problemas para girar en la esquina? Utiliza
          el bloque <xml><block type="draw_turn_by_constant_dropdown"><title name="DIR">turnRight</title><title
          name="VALUE" config="45,60,90,120,180">90</title></block></xml>.
      courseC_artist_prog3_authored_hint:
        courseC_artist_prog3_a: |-
          Para crear esta ventana, dibuja un cuadrado de 100 pixeles de lado.

          -   avanzar
          -   girar
          -   avanzar
          -   girar
          -   avanzar
          -   girar
          -   avanzar
        courseC_artist_prog3_b: "¿Quieres acortar el código? Intenta usar un loop
          en este desafío."
      courseC_artist_prog3_2018_authored_hint:
        courseC_artist_prog3_a: |-
          Para crear esta ventana, dibuja un cuadrado de 100 pixeles de lado.

          -   avanzar
          -   girar
          -   avanzar
          -   girar
          -   avanzar
          -   girar
          -   avanzar
        courseC_artist_prog3_b: "¿Quieres acortar el código? Intenta usar un loop
          en este desafío."
      courseC_artist_prog3_2019_authored_hint:
        courseC_artist_prog3_a: |-
          Para crear esta ventana, dibuja un cuadrado de 100 pixeles de lado.

          -   avanzar
          -   girar
          -   avanzar
          -   girar
          -   avanzar
          -   girar
          -   avanzar
        courseC_artist_prog3_b: "¿Quieres acortar el código? Intenta usar un loop
          en este desafío."
      courseC_artist_prog4_authored_hint:
        courseC_artist_prog4_a: Para terminar el cohete, ¡simplemente dibuja el triángulo
          en la parte superior!
        courseC_artist_prog4_b: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseC_artist_prog4_c: "Para dibujar un triángulo, deberás:\n\n-   avanzar
          \n-   girar 120 grados a la izquierda \n-   avanzar \n-   girar 120 grados
          a la izquierda \n-   avanzar"
      courseC_artist_prog4_2018_authored_hint:
        courseC_artist_prog4_a: Para terminar el cohete, ¡simplemente dibuja el triángulo
          en la parte superior!
        courseC_artist_prog4_b: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseC_artist_prog4_c: "Para dibujar un triángulo, deberás:\n\n-   avanzar
          \n-   girar 120 grados a la izquierda \n-   avanzar \n-   girar 120 grados
          a la izquierda \n-   avanzar"
      courseC_artist_prog4_2019_authored_hint:
        courseC_artist_prog4_a: Para terminar el cohete, ¡simplemente dibuja el triángulo
          en la parte superior!
        courseC_artist_prog4_b: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseC_artist_prog4_c: "Para dibujar un triángulo, deberás:\n\n-   avanzar
          \n-   girar 120 grados a la izquierda \n-   avanzar \n-   girar 120 grados
          a la izquierda \n-   avanzar"
      courseC_artist_prog5_authored_hint:
        courseC_artist_prog5_a: Reduce la velocidad del deslizador hasta que puedas
          ejecutar tu código línea por línea para ver dónde van las cosas mal.
        courseC_artist_prog5_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el rompecabezas."
        courseC_artist_prog5_c: "¡Puedes utilizar el menú desplegable en los bloques
          de 'giro' para ver qué ángulo necesitas!"
        courseC_artist_prog5_d: Cada giro debe ser de 90 grados a la derecha.
      courseC_artist_prog5_2018_authored_hint:
        courseC_artist_prog5_a: Reduce la velocidad del deslizador hasta que puedas
          ejecutar tu código línea por línea para ver dónde van las cosas mal.
        courseC_artist_prog5_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
        courseC_artist_prog5_c: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseC_artist_prog5_d: Cada giro debe ser de 90 grados a la derecha.
      courseC_artist_prog5_2019_authored_hint:
        courseC_artist_prog5_a: Reduce la velocidad del deslizador hasta que puedas
          ejecutar tu código línea por línea para ver dónde van las cosas mal.
        courseC_artist_prog5_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
        courseC_artist_prog5_c: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseC_artist_prog5_d: Cada giro debe ser de 90 grados a la derecha.
      courseC_artist_prog6_authored_hint:
        courseC_artist_prog6_a: El artista ya está enfrentando la forma correcta de
          dibujar su primera línea.
        courseC_artist_prog6_b: Este diamante es realmente solo un cuadrado que está
          parado en su esquina.
        courseC_artist_prog6_c: Como este diamante también es cuadrado, asegúrate
          de girar 90 grados en las esquinas.
      courseC_artist_prog6_2018_authored_hint:
        courseC_artist_prog6_a: El artista ya está enfrentando la forma correcta de
          dibujar su primera línea.
        courseC_artist_prog6_b: Este diamante es realmente solo un cuadrado que está
          parado en su esquina.
        courseC_artist_prog6_c: Como este diamante también es cuadrado, asegúrate
          de girar 90 grados en las esquinas.
      courseC_artist_prog6_2019_authored_hint:
        courseC_artist_prog6_a: El artista ya está enfrentando la forma correcta de
          dibujar su primera línea.
        courseC_artist_prog6_b: Este diamante es realmente solo un cuadrado que está
          parado en su esquina.
        courseC_artist_prog6_c: Como este diamante también es cuadrado, asegúrate
          de girar 90 grados en las esquinas.
      courseC_artist_prog7_authored_hint:
        courseC_artist_prog7_a: Cada ángulo es 45 ó 90 grados.
        courseC_artist_prog7_b: "¿Funciona en el primer paso?  \n¿Qué tal el segundo?
          \ \n¿Dónde va mal?"
        courseC_artist_prog7_c: "¡Puedes usar el menú desplegable en los bloques girar
          para ver qué ángulo necesitas!"
        courseC_artist_prog7_d: "Tendrás que: \n\n-   avanzar \n-   girar 45 grados
          a la derecha \n-   avanzar \n-   girar 90 grados a la derecha \n-   avanzar
          \n-   girar 45 grados a la derecha \n\n¡Repite este patrón 2 veces!"
        courseC_artist_prog7_e: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el rompecabezas."
      courseC_artist_prog7_2018_authored_hint:
        courseC_artist_prog7_a: Cada ángulo es 45 ó 90 grados.
        courseC_artist_prog7_b: "¿Funciona en el primer paso?  \n¿Qué tal el segundo?
          \ \n¿Dónde va mal?"
        courseC_artist_prog7_c: "¡Puedes usar el menú desplegable en los bloques girar
          para ver qué ángulo necesitas!"
        courseC_artist_prog7_d: "Tendrás que: \n\n-   avanzar \n-   girar 45 grados
          a la derecha \n-   avanzar \n-   girar 90 grados a la derecha \n-   avanzar
          \n-   girar 45 grados a la derecha \n\n¡Repite este patrón 2 veces!"
        courseC_artist_prog7_e: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
      courseC_artist_prog7_2019_authored_hint:
        courseC_artist_prog7_a: Cada ángulo es 45 ó 90 grados.
        courseC_artist_prog7_b: "¿Funciona en el primer paso?  \n¿Qué tal el segundo?
          \ \n¿Dónde va mal?"
        courseC_artist_prog7_c: "¡Puedes usar el menú desplegable en los bloques girar
          para ver qué ángulo necesitas!"
        courseC_artist_prog7_d: "Tendrás que: \n\n-   avanzar \n-   girar 45 grados
          a la derecha \n-   avanzar \n-   girar 90 grados a la derecha \n-   avanzar
          \n-   girar 45 grados a la derecha \n\n¡Repite este patrón 2 veces!"
        courseC_artist_prog7_e: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
      courseC_artist_prog_challenge1-doghouse_authored_hint:
        courseC_artist_prog7_a: Usa ángulos de 60 grados para hacer el techo.
      courseC_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: "¡Puedes dibujar esto como un rectángulo
          con una línea en el medio o dos cuadrados diferentes!"
      courseC_artist_prog_challenge1_2018_authored_hint:
        courseC_artist_prog_challenge1_a: "¡Puedes dibujar esto como un rectángulo
          con una línea en el medio o dos cuadrados diferentes!"
      courseC_artist_prog_challenge1_2019_authored_hint:
        courseC_artist_prog_challenge1_a: "¡Puedes dibujar esto como un rectángulo
          con una línea en el medio o dos cuadrados diferentes!"
      courseC_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: |-
          Se puede poner en el interior de un ciclo comandos de repetición una y otra vez. ¡Intentalo!
          <xml>

                    <block type="controls_repeat">
                      <title name="TIMES">6</title>
                      <statement name="DO">
                        <block type="draw_move_by_constant_dropdown">
                          <title name="DIR">moveForward</title>
                          <title name="VALUE" config="25,50,100,150,200,300">25</title>
                          <next>
                            <block type="jump_by_constant_dropdown">
                              <title name="DIR">jumpForward</title>
                              <title name="VALUE" config="25,50,100,150,200,300">25</title>
                            </block>
                          </next>
                        </block>
                        </statement></block></xml>
      courseC_artist_prog_challenge2a_authored_hint:
        courseC_artist_prog_challenge2_a: Después de dibujar la primera línea, gira
          a la izquierda antes de dibujar tu segunda línea.
        courseC_artist_prog_challenge2_b: Después de dibujar la segunda línea, gira
          a la derecha antes de dibujar tu tercera línea.
      courseC_artist_prog_challenge2a_2018_authored_hint:
        courseC_artist_prog_challenge2_a: Después de dibujar la primera línea, gira
          a la izquierda antes de dibujar tu segunda línea.
        courseC_artist_prog_challenge2_b: Después de dibujar la segunda línea, gira
          a la derecha antes de dibujar tu tercera línea.
      courseC_artist_prog_challenge2a_2019_authored_hint:
        courseC_artist_prog_challenge2_a: Después de dibujar la primera línea, gira
          a la izquierda antes de dibujar tu segunda línea.
        courseC_artist_prog_challenge2_b: Después de dibujar la segunda línea, gira
          a la derecha antes de dibujar tu tercera línea.
      courseC_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_b: ¡Utiliza los loops de tal manera de no quedarse
          sin los bloques "recoger"!
      courseC_collector_loops_challenge2_2018_authored_hint:
        courseC_maze_loops_challenge2_b: ¡Utiliza los loops de tal manera de no quedarse
          sin los bloques "recoger"!
      courseC_collector_loops_challenge2_2019_authored_hint:
        courseC_maze_loops_challenge2_b: ¡Utiliza los loops de tal manera de no quedarse
          sin los bloques "recoger"!
      courseC_collector_prog1_authored_hint:
        courseC_collector_prog1_a: Cuando usted está parado en un espacio de tesoros,
          utilice el <xml><block type="collector_collect"/></xml> bloque para recogerlo.
        courseC_collector_prog1_b: La solución más simple sería avanzar una vez, luego
          recoger el tesoro.
      courseC_collector_prog1_2018_authored_hint:
        courseC_collector_prog1_a: Cuando usted está parado en un espacio de tesoros,
          utilice el <xml><block type="collector_collect"/></xml> bloque para recogerlo.
        courseC_collector_prog1_b: La solución más simple sería avanzar una vez, luego
          recoger el tesoro.
      courseC_collector_prog1_2019_authored_hint:
        courseC_collector_prog1_a: Cuando usted está parado en un espacio de tesoros,
          utilice el <xml><block type="collector_collect"/></xml> bloque para recogerlo.
        courseC_collector_prog1_b: La solución más simple sería avanzar una vez, luego
          recoger el tesoro.
      courseC_collector_prog2_authored_hint:
        courseC_collector_prog2_a: Puede utilizar cuatro <xml><block type="maze_move"><title
          name="DIR"> mover adelante </title></block></xml> bloques o utilizar el
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          bloque para hacer su programa más corto.
        courseC_collector_prog2_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el rompecabezas."
      courseC_collector_prog2_2018_authored_hint:
        courseC_collector_prog2_a: Puede utilizar cuatro <xml><block type="maze_move"><title
          name="DIR"> mover adelante </title></block></xml> bloques o utilizar el
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          bloque para hacer su programa más corto.
        courseC_collector_prog2_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseC_collector_prog2_2019_authored_hint:
        courseC_collector_prog2_a: Puede utilizar cuatro <xml><block type="maze_move"><title
          name="DIR"> mover adelante </title></block></xml> bloques o utilizar el
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          bloque para hacer su programa más corto.
        courseC_collector_prog2_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseC_collector_prog3_authored_hint:
        courseC_collector_prog3_a: El programa sólo ejecutará los bloques que están
          conectados al bloque <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Intenta usar el botón "Paso" para ejecutar tu código
          una línea a la vez. ¿Ves dónde falla el código?
        courseC_collector_prog3_c: Si tiene problemas para descifrar este enigma,
          intente escribir los movimientos hacia abajo en una hoja de papel.
      courseC_collector_prog3_2018_authored_hint:
        courseC_collector_prog3_a: El programa sólo ejecutará los bloques que están
          conectados al bloque <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Intenta usar el botón "Paso" para ejecutar tu código
          una línea a la vez. ¿Ves dónde falla el código?
        courseC_collector_prog3_c: Si tienes problemas para descifrar este desafío,
          intenta escribir los movimientos en un papel.
      courseC_collector_prog3_2019_authored_hint:
        courseC_collector_prog3_a: El programa sólo ejecutará los bloques que están
          conectados al bloque <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Intenta usar el botón "Paso" para ejecutar tu código
          una línea a la vez. ¿Ves dónde falla el código?
        courseC_collector_prog3_c: Si tienes problemas para descifrar este desafío,
          intenta escribir los movimientos en un papel.
      courseC_collector_prog4_authored_hint:
        courseC_collector_prog4_a: Si te quedas atascado, intenta escribir los pasos
          en una hoja de papel.
        courseC_collector_prog4_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el rompecabezas."
        courseC_collector_prog4_c: Pruebe esta opción para una ruta.
      courseC_collector_prog4_2018_authored_hint:
        courseC_collector_prog4_a: Si te quedas atascado, intenta escribir los pasos
          en una hoja de papel.
        courseC_collector_prog4_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
        courseC_collector_prog4_c: Pruebe esta opción para una ruta.
      courseC_collector_prog4_2019_authored_hint:
        courseC_collector_prog4_a: Si te quedas atascado, intenta escribir los pasos
          en una hoja de papel.
        courseC_collector_prog4_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
        courseC_collector_prog4_c: Pruebe esta opción para una ruta.
      courseC_collector_prog5_authored_hint:
        courseC_collector_prog5_a: "\"¿Funciona en el primer paso? ¿Funciona en el
          segundo paso? \n¿Dónde van las cosas mal?\""
        courseC_collector_prog5_b: Si corregiste un error y el programa todavía no
          funciona, utiliza los pasos de arriba para encontrar más errores.
        courseC_collector_prog5_c: Si te quedas atascado, intenta escribir los pasos
          en una hoja de papel.
        courseC_collector_prog5_d: Sigue el camino para recoger el tesoro.
      courseC_collector_prog5_2018_authored_hint:
        courseC_collector_prog5_a: "\"¿Funciona en el primer paso? ¿Funciona en el
          segundo paso? \n¿Dónde van las cosas mal?\""
        courseC_collector_prog5_b: Si corregiste un error y el programa todavía no
          funciona, utiliza los pasos de arriba para encontrar más errores.
        courseC_collector_prog5_c: Si te quedas atascado, intenta escribir los pasos
          en una hoja de papel.
        courseC_collector_prog5_d: Sigue el camino para recoger el tesoro.
      courseC_collector_prog5_2019_authored_hint:
        courseC_collector_prog5_a: "\"¿Funciona en el primer paso? ¿Funciona en el
          segundo paso? \n¿Dónde van las cosas mal?\""
        courseC_collector_prog5_b: Si corregiste un error y el programa todavía no
          funciona, utiliza los pasos de arriba para encontrar más errores.
        courseC_collector_prog5_c: Si te quedas atascado, intenta escribir los pasos
          en una hoja de papel.
        courseC_collector_prog5_d: Sigue el camino para recoger el tesoro.
      courseC_collector_prog6_authored_hint:
        courseC_collector_prog6_a: "¿Puedes descubrir qué no está funcionando?   \n\nIntenta
          usar el botón \"Paso\" para buscar errores ejecutando su código línea por
          línea."
        courseC_collector_prog6_b: "¿Atascado? Prueba este camino para recolectar
          el tesoro."
      courseC_collector_prog6_2018_authored_hint:
        courseC_collector_prog6_a: "¿Puedes descubrir qué no está funcionando?   \n\nIntenta
          usar el botón \"Paso\" para buscar errores ejecutando su código línea por
          línea."
        courseC_collector_prog6_b: "¿Atascado? Prueba este camino para recolectar
          el tesoro."
      courseC_collector_prog6_2019_authored_hint:
        courseC_collector_prog6_a: "¿Puedes descubrir qué no está funcionando?   \n\nIntenta
          usar el botón \"Paso\" para buscar errores ejecutando su código línea por
          línea."
        courseC_collector_prog6_b: "¿Atascado? Prueba este camino para recolectar
          el tesoro."
      courseC_collector_prog7_authored_hint:
        courseC_collector_prog7_a: 'Ya hay demasiado código en el espacio de trabajo.
          No necesitas eliminar nada para resolver este desafío.  '
        courseC_collector_prog7_b: "¿No ves el bloque que necesitas para que la aventurera
          se mueva en la dirección correcta? Toma uno de la caja de herramientas."
        courseC_collector_prog7_c: "¿Tienes problemas para ver una ruta para recoger
          todo el tesoro? ¡Prueba este camino!"
      courseC_collector_prog7_2018_authored_hint:
        courseC_collector_prog7_a: 'Ya hay demasiado código en el espacio de trabajo.
          No necesitas eliminar nada para resolver este desafío.  '
        courseC_collector_prog7_b: "¿No ves el bloque que necesitas para que la aventurera
          se mueva en la dirección correcta? Toma uno de la caja de herramientas."
        courseC_collector_prog7_c: "¿Tienes problemas para ver una ruta para recoger
          todo el tesoro? ¡Prueba este camino!"
      courseC_collector_prog7_2019_authored_hint:
        courseC_collector_prog7_a: 'Ya hay demasiado código en el espacio de trabajo.
          No necesitas eliminar nada para resolver este desafío.  '
        courseC_collector_prog7_b: "¿No ves el bloque que necesitas para que la aventurera
          se mueva en la dirección correcta? Toma uno de la caja de herramientas."
        courseC_collector_prog7_c: "¿Tienes problemas para ver una ruta para recoger
          todo el tesoro? ¡Prueba este camino!"
      courseC_collector_progA_authored_hint:
        courseC_collector_progA_a: Intente utilizar el botón "Paso" para ir a través
          de su código línea por línea.
      courseC_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el bloque `collect` muchas
          veces para recoger el tesoro extra.
      courseC_collector_prog_challenge1_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el bloque `collect` muchas
          veces para recoger el tesoro extra.
      courseC_collector_prog_challenge1_2019_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar el bloque `collect` muchas
          veces para recoger el tesoro extra.
      courseC_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar más de un bloque `recolectar`
          en cada espacio.
        courseC_collector_prog_challenge1_b: "¿Perdiste tu camino? ¡Prueba este camino
          para resolver el desafío!"
      courseC_collector_prog_challenge2_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar más de un bloque `recolectar`
          en cada espacio.
        courseC_collector_prog_challenge1_b: "¿Perdiste tu camino? ¡Prueba este camino
          para resolver el desafío!"
      courseC_collector_prog_challenge2_2019_authored_hint:
        courseC_collector_prog_challenge1_a: Puedes usar más de un bloque `recolectar`
          en cada espacio.
        courseC_collector_prog_challenge1_b: "¿Perdiste tu camino? ¡Prueba este camino
          para resolver el desafío!"
      courseC_data widget_authored_hint:
        courseA_playLab_events7_a: |-
          Usa este bloque para controlar lo que sucede cuando los actores colisionan.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseC_data wizard_authored_hint:
        courseA_playLab_events7_a: |-
          Usa este bloque para controlar lo que sucede cuando los actores colisionan.
          <xml><block type="studio_whenSpriteCollided">

          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseC_flappy_events1_authored_hint:
        courseC_flappy_events1_a: "! \\[] (<https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif>)"
      courseC_flappy_events1_2018_authored_hint:
        courseC_flappy_events1_a: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      courseC_flappy_events1_2019_authored_hint:
        courseC_flappy_events1_a: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      courseC_flappy_events2_authored_hint:
        courseC_flappy_events2_a: 'El bloque que necesitas agregar se llama `` establecer
          velocidad '' ''. '
        courseC_flappy_events2_b: Conecta el bloque ´establecer velocidad´ al bloque
          ´cuando se ejecuta´ para resolver este desafío.
      courseC_flappy_events2_2018_authored_hint:
        courseC_flappy_events2_a: 'El bloque que necesitas agregar se llama `` establecer
          velocidad '' ''. '
        courseC_flappy_events2_b: Conecta el bloque ´establecer velocidad´ al bloque
          ´cuando se ejecuta´ para resolver este desafío.
      courseC_flappy_events2_2019_authored_hint:
        courseC_flappy_events2_a: 'El bloque que necesitas agregar se llama `` establecer
          velocidad '' ''. '
        courseC_flappy_events2_b: Conecta el bloque ´establecer velocidad´ al bloque
          ´cuando se ejecuta´ para resolver este desafío.
      courseC_flappy_events3_authored_hint:
        courseC_flappy_events3_a: Si algo no está funcionando correctamente, asegúrate
          de que tus bloques estén conectados a los eventos correctos en el espacio
          de trabajo.
      courseC_flappy_events3_2018_authored_hint:
        courseC_flappy_events3_a: Si algo no está funcionando correctamente, asegúrate
          de que tus bloques estén conectados a los eventos correctos en el espacio
          de trabajo.
      courseC_flappy_events3_2019_authored_hint:
        courseC_flappy_events3_a: Si algo no está funcionando correctamente, asegúrate
          de que tus bloques estén conectados a los eventos correctos en el espacio
          de trabajo.
      courseC_flappy_events4_authored_hint:
        courseC_flappy_events4_a: Conecta el bloque `final del juego` a`cuando golpee
          un obstáculo` para resolver este desafío.
      courseC_flappy_events4_2018_authored_hint:
        courseC_flappy_events4_a: Conecta el bloque `final del juego` a`cuando golpee
          un obstáculo` para resolver este desafío.
      courseC_flappy_events4_2019_authored_hint:
        courseC_flappy_events4_a: Conecta el bloque `final del juego` a`cuando golpee
          un obstáculo` para resolver este desafío.
      courseC_flappy_events5_authored_hint:
        courseC_flappy_events5_a: Deberás usar el bloque `marcar un punto` para pasar
          este nivel.
      courseC_flappy_events5_2018_authored_hint:
        courseC_flappy_events5_a: Deberás usar el bloque `marcar un punto` para pasar
          este nivel.
      courseC_flappy_events5_2019_authored_hint:
        courseC_flappy_events5_a: Deberás usar el bloque `marcar un punto` para pasar
          este nivel.
      courseC_flappy_events6_authored_hint:
        courseC_flappy_events6_a: Trata de conectar el bloque 'aletear una cantidad
          \_\_\_' al evento 'cuando haga clic en'.
      courseC_flappy_events6_2018_authored_hint:
        courseC_flappy_events6_a: Trata de conectar el bloque 'aletear una cantidad
          \_\_\_' al evento 'cuando haga clic en'.
      courseC_flappy_events6_2019_authored_hint:
        courseC_flappy_events6_a: Trata de conectar el bloque 'aletear una cantidad
          \_\_\_' al evento 'cuando haga clic en'.
      courseC_flappy_events7_authored_hint:
        courseC_flappy_events7_a: 'Puedes cambiar el fondo usando el bloque "establecer
          escena". '
      courseC_flappy_events7_2018_authored_hint:
        courseC_flappy_events7_a: 'Puedes cambiar el fondo usando el bloque "establecer
          escena". '
      courseC_flappy_events7_2019_authored_hint:
        courseC_flappy_events7_a: 'Puedes cambiar el fondo usando el bloque "establecer
          escena". '
      courseC_flappy_events8_authored_hint:
        courseC_flappy_events8_a: Intente conectar un segundo bloque "establecer escena"
          bajo el evento "cuando pase obstáculo" para pasar este nivel.
      courseC_flappy_events8_2018_authored_hint:
        courseC_flappy_events8_a: Intente conectar un segundo bloque "establecer escena"
          bajo el evento "cuando pase obstáculo" para pasar este nivel.
      courseC_flappy_events8_2019_authored_hint:
        courseC_flappy_events8_a: Intente conectar un segundo bloque "establecer escena"
          bajo el evento "cuando pase obstáculo" para pasar este nivel.
      courseC_flappy_events9_authored_hint:
        courseC_flappy_events9_a: Conecte el bloque "establecer puntaje 0" al evento
          "al chocar con un obstáculo" para pasar este nivel.
      courseC_flappy_events9_2018_authored_hint:
        courseC_flappy_events9_a: Conecte el bloque "establecer puntaje 0" al evento
          "al chocar con un obstáculo" para pasar este nivel.
      courseC_flappy_events9_2019_authored_hint:
        courseC_flappy_events9_a: Conecte el bloque "establecer puntaje 0" al evento
          "al chocar con un obstáculo" para pasar este nivel.
      courseC_harvester_loops1_authored_hint:
        courseC_harvester_loops1_a: Una vez que te hayas mudado a una calabaza, usa
          <xml> <block type = "harvester_pumpkin" /> \</ xml> para recogerla.
        courseC_harvester_loops1_b: Puedes usar un loop con el bloque <xml><block
          type="harvester_pumpkin"/></xml> para seleccionar más de una calabaza de
          un cuadrado.
      courseC_harvester_loops1_2018_authored_hint:
        courseC_harvester_loops1_a: Una vez que te hayas mudado a una calabaza, usa
          <xml> <block type = "harvester_pumpkin" /> \</ xml> para recogerla.
        courseC_harvester_loops1_b: Puedes usar un loop con el bloque <xml><block
          type="harvester_pumpkin"/></xml> para seleccionar más de una calabaza de
          un cuadrado.
      courseC_harvester_loops1_2019_authored_hint:
        courseC_harvester_loops1_a: Una vez que te hayas mudado a una calabaza, usa
          <xml> <block type = "harvester_pumpkin" /> \</ xml> para recogerla.
        courseC_harvester_loops1_b: Puedes usar un loop con el bloque <xml><block
          type="harvester_pumpkin"/></xml> para seleccionar más de una calabaza de
          un cuadrado.
      courseC_harvester_loops2_authored_hint:
        courseC_harvester_loops2_a: Si te estancas, intenta escribir los pasos en
          un papel y busca los patrones que se repiten.
        courseC_harvester_loops2_b: Necesitarás un loop 'repetir' después de otro.
        courseC_harvester_loops2_c: Un loop repetirá el comando "avanzar", y el otro
          repetirá el comando "recoger calabaza".
      courseC_harvester_loops2_2018_authored_hint:
        courseC_harvester_loops2_a: Si te estancas, intenta escribir los pasos en
          un papel y busca los patrones que se repiten.
        courseC_harvester_loops2_b: Necesitarás un loop 'repetir' después de otro.
        courseC_harvester_loops2_c: Un loop repetirá el comando "avanzar", y el otro
          repetirá el comando "recoger calabaza".
      courseC_harvester_loops2_2019_authored_hint:
        courseC_harvester_loops2_a: Si te estancas, intenta escribir los pasos en
          un papel y busca los patrones que se repiten.
        courseC_harvester_loops2_b: Necesitarás un loop 'repetir' después de otro.
        courseC_harvester_loops2_c: Un loop repetirá el comando "avanzar", y el otro
          repetirá el comando "recoger calabaza".
      courseC_harvester_loops3_authored_hint:
        courseC_harvester_loops3_a: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
        courseC_harvester_loops3_b: Para las primeras calabazas, puedes usar un código
          similar al del último desafío. ¿Por cuál camino necesitas girar después?
        courseC_harvester_loops3_c: Si quieres simplificar tu código, ¡puedes poner
          un loop dentro de otro! Esto se llama un \*\* loop anidado \*\*.
      courseC_harvester_loops3_2018_authored_hint:
        courseC_harvester_loops3_a: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
        courseC_harvester_loops3_b: Para las primeras calabazas, puedes usar un código
          similar al del último desafío. ¿Por cuál camino necesitas girar después?
        courseC_harvester_loops3_c: Si quieres simplificar tu código, ¡puedes poner
          un loop dentro de otro! Esto se llama un \*\* loop anidado \*\*.
      courseC_harvester_loops3_2019_authored_hint:
        courseC_harvester_loops3_a: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
        courseC_harvester_loops3_b: Para las primeras calabazas, puedes usar un código
          similar al del último desafío. ¿Por cuál camino necesitas girar después?
        courseC_harvester_loops3_c: Si quieres simplificar tu código, ¡puedes poner
          un loop dentro de otro! Esto se llama un \*\* loop anidado \*\*.
      courseC_harvester_loops4_authored_hint:
        courseC_harvester_loops4_a: Usa el nuevo bloque "recoger maíz" para recolectar
          el maíz.
        courseC_harvester_loops4_b: Puedes usar múltiples loops de repetición en tu
          código, algunos para recoger maíz y otros para recoger calabazas.
        courseC_harvester_loops4_c: Si quieres simplificar tu código, ¡puedes poner
          un ciclo dentro de otro! Esto se llama un \*\* ciclo anidado \*\*.
      courseC_harvester_loops4_2018_authored_hint:
        courseC_harvester_loops4_a: Usa el nuevo bloque "recoger maíz" para recolectar
          el maíz.
        courseC_harvester_loops4_b: Puedes usar múltiples loops de repetición en tu
          código, algunos para recoger maíz y otros para recoger calabazas.
        courseC_harvester_loops4_c: Si quieres simplificar tu código, ¡puedes poner
          un loop dentro de otro! Esto se llama un \*\* loop anidado \*\*.
      courseC_harvester_loops4_2019_authored_hint:
        courseC_harvester_loops4_a: Usa el nuevo bloque "recoger maíz" para recolectar
          el maíz.
        courseC_harvester_loops4_b: Puedes usar múltiples loops de repetición en tu
          código, algunos para recoger maíz y otros para recoger calabazas.
        courseC_harvester_loops4_c: Si quieres simplificar tu código, ¡puedes poner
          un loop dentro de otro! Esto se llama un \*\* loop anidado \*\*.
      courseC_harvester_loops5_authored_hint:
        courseC_harvester_loops5_a: Si quedas atascado, intenta dibujar el programa
          completo y después busca los patrones que se repiten.
        courseC_harvester_loops5_b: "¿Te parece familiar este peldaño de escalera
          al de otros desafíos? Los movimientos deberían ser similares, solamente
          recuerda recoger la cosecha a lo largo del camino."
      courseC_harvester_loops5_2018_authored_hint:
        courseC_harvester_loops5_a: Si quedas atascado, intenta dibujar el programa
          completo y después busca los patrones que se repiten.
        courseC_harvester_loops5_b: "¿Te parece familiar este peldaño de escalera
          al de otros desafíos? Los movimientos deberían ser similares, solamente
          recuerda recoger la cosecha a lo largo del camino."
      courseC_harvester_loops5_2019_authored_hint:
        courseC_harvester_loops5_a: Si quedas atascado, intenta dibujar el programa
          completo y después busca los patrones que se repiten.
        courseC_harvester_loops5_b: "¿Te parece familiar este peldaño de escalera
          al de otros desafíos? Los movimientos deberían ser similares, solamente
          recuerda recoger la cosecha a lo largo del camino."
      courseC_harvester_loops6_authored_hint:
        courseC_harvester_loops6_a: Recuerda que puedes poner más de un bloque dentro
          de un loop de repetición.
        courseC_harvester_loops6_b: No te olvides de girar al final de la fila de
          maíz.
      courseC_harvester_loops6_2018_authored_hint:
        courseC_harvester_loops6_a: Recuerda que puedes poner más de un bloque dentro
          de un loop de repetición.
        courseC_harvester_loops6_b: No te olvides de girar al final de la fila de
          maíz.
      courseC_harvester_loops6_2019_authored_hint:
        courseC_harvester_loops6_a: Recuerda que puedes poner más de un bloque dentro
          de un loop de repetición.
        courseC_harvester_loops6_b: No te olvides de girar al final de la fila de
          maíz.
      courseC_harvester_loops7_authored_hint:
        courseC_harvester_loops7_a: Puedes resolver este desafío de dos maneras, recoger
          el maíz o las calabazas primero.
        courseC_harvester_loops7_b: Necesitarás múltiples loop 'repetir' para resolver
          este desafío.
      courseC_harvester_loops7_2018_authored_hint:
        courseC_harvester_loops7_a: Puedes resolver este desafío de dos maneras, recoger
          el maíz o las calabazas primero.
        courseC_harvester_loops7_b: Necesitarás múltiples loop 'repetir' para resolver
          este desafío.
      courseC_harvester_loops7_2019_authored_hint:
        courseC_harvester_loops7_a: Puedes resolver este desafío de dos maneras, recoger
          el maíz o las calabazas primero.
        courseC_harvester_loops7_b: Necesitarás múltiples loop 'repetir' para resolver
          este desafío.
      courseC_harvester_loops8_authored_hint:
        courseC_harvester_loops8_a: "¿Te parece familiar este peldaño al del desafío
          anterior? Los movimientos deberían ser similares, solamente recuerda recoger
          la cosecha a lo largo del camino."
        courseC_harvester_loops8_b: Si quieres simplificar tu código, ¡puedes poner
          un loop dentro de otro! Esto se llama un \*\* loop anidado \*\*.
      courseC_harvester_loops8_2018_authored_hint:
        courseC_harvester_loops8_a: "¿Te parece familiar este peldaño al del desafío
          anterior? Los movimientos deberían ser similares, solamente recuerda recoger
          la cosecha a lo largo del camino."
        courseC_harvester_loops8_b: Si quieres simplificar tu código, ¡puedes poner
          un loop dentro de otro! Esto se llama un \*\* loop anidado \*\*.
      courseC_harvester_loops8_2019_authored_hint:
        courseC_harvester_loops8_a: "¿Te parece familiar este peldaño al del desafío
          anterior? Los movimientos deberían ser similares, solamente recuerda recoger
          la cosecha a lo largo del camino."
        courseC_harvester_loops8_b: Si quieres simplificar tu código, ¡puedes poner
          un loop dentro de otro! Esto se llama un \*\* loop anidado \*\*.
      courseC_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: "¡Esto es demasiado dificil sin ciclos!"
        courseC_harvester_loops_challenge1_b: Puedes repetir 'avanzar' y 'recoger
          maíz' todas las veces que necesites hacerlo, luego gira a la derecha en
          cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor forma de recolectar los cuatro primeros maíces utiliza un bloque `repetir` dentro de otro bloque`repetir`. ¡También puedes usar este patrón para el resto del desafío!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_authored_hint:
        courseC_harvester_loops_challenge1_a: "¡Esto es demasiado dificil sin ciclos!"
        courseC_harvester_loops_challenge1_b: Puedes repetir 'avanzar' y 'recoger
          maíz' todas las veces que necesites hacerlo, luego gira a la derecha en
          cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor manera de recoger el maíz del centro usa un loop 'repetir' dentro de otro.

          <xml><block type="controls_repeat">

          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge1a_2018_authored_hint:
        courseC_harvester_loops_challenge1_a: "¡Esto es demasiado dificil sin ciclos!"
        courseC_harvester_loops_challenge1_b: Puedes repetir 'avanzar' y 'recoger
          maíz' todas las veces que necesites hacerlo, luego gira a la derecha en
          cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor manera de recoger el maíz del centro usa un loop 'repetir' dentro de otro.

          <xml><block type="controls_repeat">

          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge1a_2019_authored_hint:
        courseC_harvester_loops_challenge1_a: "¡Esto es demasiado dificil sin ciclos!"
        courseC_harvester_loops_challenge1_b: Puedes repetir 'avanzar' y 'recoger
          maíz' todas las veces que necesites hacerlo, luego gira a la derecha en
          cada esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor manera de recoger el maíz del centro usa un loop 'repetir' dentro de otro.

          <xml><block type="controls_repeat">

          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge2_authored_hint:
        courseC_harvester_loops_challenge2_a: Una forma de resolver esto parece un
          zig-zag. Otra parece un espiral. Hay muchas soluciones distintas para un
          desafío como este. ¡Sé perseverante!
        courseC_harvester_loops_challenge2_b: Puedes repetir "avanzar" y "recoge lechuga"
          cuantas veces necesites, luego gira en cada esquina.
        courseC_harvester_loops_challenge2_c: |-
          ¡Este patrón en zigzag se puede repetir dos veces para finalizar el desafío con solo 20 bloques!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          ¡Este patrón en espiral se puede programar con solo 18 bloques!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2018_authored_hint:
        courseC_harvester_loops_challenge2_a: Una forma de resolver esto parece un
          zig-zag. Otra parece un espiral. Hay muchas soluciones distintas para un
          desafío como este. ¡Sé perseverante!
        courseC_harvester_loops_challenge2_b: Puedes repetir "avanzar" y "recoge lechuga"
          cuantas veces necesites, luego gira en cada esquina.
        courseC_harvester_loops_challenge2_c: |-
          ¡Este patrón en zigzag se puede repetir dos veces para finalizar el desafío con solo 20 bloques!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          ¡Este patrón en espiral se puede programar con solo 18 bloques!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2019_authored_hint:
        courseC_harvester_loops_challenge2_a: Una forma de resolver esto parece un
          zig-zag. Otra parece un espiral. Hay muchas soluciones distintas para un
          desafío como este. ¡Sé perseverante!
        courseC_harvester_loops_challenge2_b: Puedes repetir "avanzar" y "recoge lechuga"
          cuantas veces necesites, luego gira en cada esquina.
        courseC_harvester_loops_challenge2_c: |-
          ¡Este patrón en zigzag se puede repetir dos veces para finalizar el desafío con solo 20 bloques!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          ¡Este patrón en espiral se puede programar con solo 18 bloques!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_maze_debugging1_authored_hint:
        courseC_maze_debugging1_a: |-
          -   ¿Funciona todo después del primer paso?
          -   ¿Funciona después del segundo?
          -   ¿Cuándo deja de funcionar?
        courseC_maze_debugging1_b: Hay un bloque que necesitas agregar para completar
          este desafío.
      courseC_maze_debugging1_2018_authored_hint:
        courseC_maze_debugging1_a: |-
          -   ¿Funciona todo después del primer paso?
          -   ¿Funciona después del segundo?
          -   ¿Cuándo deja de funcionar?
        courseC_maze_debugging1_b: Hay un bloque que necesitas agregar para completar
          este desafío.
      courseC_maze_debugging1_2019_authored_hint:
        courseC_maze_debugging1_a: |-
          -   ¿Funciona todo después del primer paso?
          -   ¿Funciona después del segundo?
          -   ¿Cuándo deja de funcionar?
        courseC_maze_debugging1_b: Hay un bloque que necesitas agregar para completar
          este desafío.
      courseC_maze_debugging2_authored_hint:
        courseC_maze_debugging2_a: Hay un montón de código valioso en el espacio de
          trabajo. ¡No lo elimines todo y comienza de nuevo!
        courseC_maze_debugging2_b: |-
          \-¿Funciona todo después del primer paso?
          \-¿Funciona despues del segundo?
          \-¿Dónde deja de funcionar?
        courseC_maze_debugging2_c: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
      courseC_maze_debugging2_2018_authored_hint:
        courseC_maze_debugging2_a: Hay un montón de código valioso en el espacio de
          trabajo. ¡No lo elimines todo y comienza de nuevo!
        courseC_maze_debugging2_b: |-
          -   ¿Funciona todo después del primer paso?
          -   ¿Funciona después del segundo?
          -   ¿Cuándo deja de funcionar?
        courseC_maze_debugging2_c: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
      courseC_maze_debugging2_2019_authored_hint:
        courseC_maze_debugging2_a: Hay un montón de código valioso en el espacio de
          trabajo. ¡No lo elimines todo y comienza de nuevo!
        courseC_maze_debugging2_b: |-
          -   ¿Funciona todo después del primer paso?
          -   ¿Funciona después del segundo?
          -   ¿Cuándo deja de funcionar?
        courseC_maze_debugging2_c: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
      courseC_maze_debugging3_authored_hint:
        courseC_maze_debugging3_a: |-
          Para eliminar un bloque en el medio de tu código, arrastra todos los bloques a otro lugar del espacio de trabajo.

          Arrastra el bloque que deseas eliminar a la caja de herramientas.

          Finalmente, vuelve a poner el resto de los bloques a donde pertenecen.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
      courseC_maze_debugging3_2018_authored_hint:
        courseC_maze_debugging3_a: |-
          Para eliminar un bloque en el medio de tu código, arrastra todos los bloques a otro lugar del espacio de trabajo.

          Arrastra el bloque que deseas eliminar a la caja de herramientas.

          Finalmente, vuelve a poner el resto de los bloques a donde pertenecen.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
      courseC_maze_debugging3_2019_authored_hint:
        courseC_maze_debugging3_a: |-
          Para eliminar un bloque en el medio de tu código, arrastra todos los bloques a otro lugar del espacio de trabajo.

          Arrastra el bloque que deseas eliminar a la caja de herramientas.

          Finalmente, vuelve a poner el resto de los bloques a donde pertenecen.

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: "¿No puede descubrir qué pasa? Intenta ejecutar
          el código un par de veces para ver qué pasa."
      courseC_maze_debugging4_authored_hint:
        courseC_maze_debugging4_a: Usa el botón "Paso" para ejecutar las instrucciones
          una a la vez. ¿Te ayuda ésto a encontrar la línea donde las cosas van mal?
        courseC_maze_debugging4_b: Uno de los giros está haciendo que Scrat vaya en
          la dirección equivocada. ¿Puedes averiguar cuál?
      courseC_maze_debugging4_2018_authored_hint:
        courseC_maze_debugging4_a: Usa el botón "Paso" para ejecutar las instrucciones
          una a la vez. ¿Te ayuda ésto a encontrar la línea donde las cosas van mal?
        courseC_maze_debugging4_b: Uno de los giros está haciendo que Scrat vaya en
          la dirección equivocada. ¿Puedes averiguar cuál?
      courseC_maze_debugging4_2019_authored_hint:
        courseC_maze_debugging4_a: Usa el botón "Paso" para ejecutar las instrucciones
          una a la vez. ¿Te ayuda ésto a encontrar la línea donde las cosas van mal?
        courseC_maze_debugging4_b: Uno de los giros está haciendo que Scrat vaya en
          la dirección equivocada. ¿Puedes averiguar cuál?
      courseC_maze_debugging5_authored_hint:
        courseC_maze_debugging5_a: |-
          Hay muchos bloques útiles en el área de trabajo. ¡No los borres!

          Usa el botón "Paso" para recorrer el código y averiguar donde hay un error.
        courseC_maze_debugging5_b: Intenta decir lo que Scrat debería hacer en voz
          alta. ¿Es lo mismo que el código en el área de trabajo? ¿Dónde falla?
      courseC_maze_debugging5_2018_authored_hint:
        courseC_maze_debugging5_a: |-
          Hay muchos bloques útiles en el área de trabajo. ¡No los borres!

          Usa el botón "Paso" para recorrer el código y averiguar donde hay un error.
        courseC_maze_debugging5_c: Puedes cambiar la dirección del bloque de turno
          haciendo clic en el menú desplegable.
        courseC_maze_debugging5_b: Intenta decir lo que Scrat debería hacer en voz
          alta. ¿Es lo mismo que el código en el área de trabajo? ¿Dónde falla?
      courseC_maze_debugging5_2019_authored_hint:
        courseC_maze_debugging5_a: |-
          Hay muchos bloques útiles en el área de trabajo. ¡No los borres!

          Usa el botón "Paso" para recorrer el código y averiguar donde hay un error.
        courseC_maze_debugging5_c: Puedes cambiar la dirección del bloque de turno
          haciendo clic en el menú desplegable.
        courseC_maze_debugging5_b: Intenta decir lo que Scrat debería hacer en voz
          alta. ¿Es lo mismo que el código en el área de trabajo? ¿Dónde falla?
      courseC_maze_debugging6_authored_hint:
        courseC_maze_debugging6_a: |-
          -   ¿Qué se supone que haga Scrat?
          -   ¿Qué hace Scrat?
          -   ¿Qué te dice eso?
        courseC_maze_debugging6_b: |-
          Una vez que hayas encontrado el primer bug, asegúrate de realizar el proceso de depuración para encontrar el segundo error.

          ¡Repite el proceso hasta que el programa funcione!
      courseC_maze_debugging6_2018_authored_hint:
        courseC_maze_debugging6_a: |-
          -   ¿Qué se supone que haga Scrat?
          -   ¿Qué hace Scrat?
          -   ¿Qué te dice eso?
        courseC_maze_debugging6_b: |-
          Una vez que hayas encontrado el primer bug, asegúrate de realizar el proceso de depuración para encontrar el segundo error.

          ¡Repite el proceso hasta que el programa funcione!
      courseC_maze_debugging6_2019_authored_hint:
        courseC_maze_debugging6_a: |-
          -   ¿Qué se supone que haga Scrat?
          -   ¿Qué hace Scrat?
          -   ¿Qué te dice eso?
        courseC_maze_debugging6_b: |-
          Una vez que hayas encontrado el primer bug, asegúrate de realizar el proceso de depuración para encontrar el segundo error.

          ¡Repite el proceso hasta que el programa funcione!
      courseC_maze_debugging7_authored_hint:
        courseC_maze_debugging7_a: |-
          -   ¿Todo funciona desde el primer paso?
          -   ¿Qué pasa en el segundo?
          -   ¿Dónde está el error?
        courseC_maze_debugging7_b: "¡No olvides usar el botón 'Paso' para ejecutar
          el programa línea por línea!"
        courseC_maze_debugging7_c: |-
          Despues de encontrar y arreglar el primer error, asegurate de usar el proceso de depuración para encontrar el iguiente.

          ¡Repite el proceso de depuración hasta que el programa funcione!
      courseC_maze_debugging7_2018_authored_hint:
        courseC_maze_debugging7_a: |-
          -   ¿Todo funciona desde el primer paso?
          -   ¿Qué pasa en el segundo?
          -   ¿Dónde está el error?
        courseC_maze_debugging7_b: "¡No olvides usar el botón 'Paso' para ejecutar
          el programa línea por línea!"
        courseC_maze_debugging7_c: |-
          Despues de encontrar y arreglar el primer error, asegurate de usar el proceso de depuración para encontrar el iguiente.

          ¡Repite el proceso de depuración hasta que el programa funcione!
      courseC_maze_debugging7_2019_authored_hint:
        courseC_maze_debugging7_a: |-
          -   ¿Todo funciona desde el primer paso?
          -   ¿Qué pasa en el segundo?
          -   ¿Dónde está el error?
        courseC_maze_debugging7_b: "¡No olvides usar el botón 'Paso' para ejecutar
          el programa línea por línea!"
        courseC_maze_debugging7_c: |-
          Despues de encontrar y arreglar el primer error, asegurate de usar el proceso de depuración para encontrar el iguiente.

          ¡Repite el proceso de depuración hasta que el programa funcione!
      courseC_maze_debugging8_authored_hint:
        courseC_maze_debugging8_a: |-
          -   ¿Qué se supone que haga Scrat?
          -   ¿Qué hace Scrat?
          -   ¿Qué te dice eso?
      courseC_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_a: "¿Izquierda o derecha? ¡Es tu decisión!"
        courseC_maze_debugging_challenge1_b: "¡El camino de Scrat tiene la forma de
          un rectángulo! Necesita girar de la misma manera cada vez."
        courseC_maze_debugging_challenge1_c: Si te atoras, siempre puedes comenzar
          de nuevo y encontrar un nuevo camino!
      courseC_maze_debugging_challenge1_2018_authored_hint:
        courseC_maze_debugging_challenge1_a: "¿Izquierda o derecha? ¡Es tu decisión!"
        courseC_maze_debugging_challenge1_b: "¡El camino de Scrat tiene la forma de
          un rectángulo! Necesita girar de la misma manera cada vez."
        courseC_maze_debugging_challenge1_c: Si te atoras, siempre puedes comenzar
          de nuevo y encontrar un nuevo camino!
      courseC_maze_debugging_challenge1_2019_authored_hint:
        courseC_maze_debugging_challenge1_a: "¿Izquierda o derecha? ¡Es tu decisión!"
        courseC_maze_debugging_challenge1_b: "¡El camino de Scrat tiene la forma de
          un rectángulo! Necesita girar de la misma manera cada vez."
        courseC_maze_debugging_challenge1_c: Si te atoras, siempre puedes comenzar
          de nuevo y encontrar un nuevo camino!
      courseC_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_b: Si te estancas, intenta depurar el código.
          ¿Dónde falla?
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir. Solo tienes que avanzar y girar cuatro veces. Si encuentras una forma de usar un bucle, ¡puede haber aún más!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2018_authored_hint:
        courseC_maze_debugging_challenge2_b: Si te estancas, intenta depurar el código.
          ¿Dónde falla?
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir. Solo tienes que avanzar y girar cuatro veces. Si encuentras una forma de usar un bucle, ¡puede haber aún más!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2019_authored_hint:
        courseC_maze_debugging_challenge2_b: Si te estancas, intenta depurar el código.
          ¿Dónde falla?
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir. Solo tienes que avanzar y girar cuatro veces. Si encuentras una forma de usar un bucle, ¡puede haber aún más!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_loops2_authored_hint:
        courseC_maze_loops2_a: Puede resolver este rompecabezas con tres bloques,
          incluyendo 'cuando ejecute'.
        courseC_maze_loops2_b: Intente poner el bloque "avanzar" dentro del bloque
          "repetir" para crear un loop.
        courseC_maze_loops2_c: Tendrá que repetir el comando 'avanzar' 5 veces para
          resolver este rompecabezas.
      courseC_maze_loops2_predict1_authored_hint:
        courseC_maze_loops2_a: Puede resolver este rompecabezas con tres bloques,
          incluyendo 'cuando ejecute'.
        courseC_maze_loops2_b: Intente poner el bloque de 'avanzar' dentro de un bloque
          de 'repetir' para crear un ciclo.
        courseC_maze_loops2_c: Tendrá que repetir el comando 'avanzar' 5 veces para
          resolver este rompecabezas.
      courseC_maze_loops3_authored_hint:
        courseC_maze_loops3_a: Este rompecabezas es muy similar al último.
        courseC_maze_loops3_b: Use el bloque "repetir 5 veces" para crear el loop.
      courseC_maze_loops4_authored_hint:
        courseC_maze_loops4_a: No todos los bloques de comando deben repetirse.
        courseC_maze_loops4_b: Use dos bloques de repetición establecidos en diferentes
          números.
        courseC_maze_loops4_c: '"Gire a la derecha" una vez entre los dos loops.'
      courseC_maze_loops5_authored_hint:
        courseC_maze_loops5_a: La mejor solución usa dos comandos "avanzar" y un loop.
      courseC_maze_loops6_authored_hint:
        courseC_maze_loops6_a: Si el patrón es difícil de ver, intenta programarlo
          todo primero y mira qué cosas se repiten una y otra vez antes de colocar
          los ciclos.
        courseC_maze_loops6_b: |-
          Para poner muchos bloques en un "repeat" loop, solamente arrastra un loop hacia el espacio de trabajo y luego arrastra todos los bloques desde el programa de inicio dentro de él.

          Conecta todo al bloque "when run" y estarás listo!
      courseC_maze_loops7_authored_hint:
        courseC_maze_loops7_a: Si el patrón es difícil de ver, intenta codificar todo
          primero e identifica qué es lo que se repite una y otra vez antes de colocar
          los loops.
      courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Trata de pensar sobre este problema
          en pequeñas partes. Tómate tu tiempo. ¡No es necesario resolverlo en el
          primer intento!
        courseC_puppy_loops8courseC_maze_loops8_b: La primera mitad de este camino
          es similar a las escaleras del rompecabezas del pasado, pero va en una dirección
          diferente.
        courseC_puppy_loops8courseC_maze_loops8_c: |-
          Hay diferentes maneras de resolver esto.
          Necesitarás usar por lo menos dos loops, y repetir un conjunto de acciones en el primero, luego solamente un "avanzar" en el otro.
      courseC_maze_loops9_authored_hint:
        courseC_maze_loops9_1: 'Si tiene problemas en encontrar donde el código debería
          repetirse, intente escribirlo en un papel y busque un patrón. '
      courseC_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_a: Piense en este camino como tres diferentes
          piezas. Cada uno tiene un patrón que se puede repetir.
        courseC_maze_loops_challenge1_b: Entre cada bloque de "repetición", necesitará
          "girar a la izquierda" o "girar a la derecha" para que Scrat esté listo
          para el próximo patrón.
      courseC_maze_loops_challenge1a_authored_hint:
        courseC_maze_loops_challenge1_a: Piensa en este camino como si fueran dos
          partes diferentes. Cada una tiene un patrón que puedes repetir.
        courseC_maze_loops_challenge1_b: "¿Recuerdas cómo usar los loops para repetir
          el patrón de escalera?"
      courseC_maze_loops_challenge1a_2018_authored_hint:
        courseC_maze_loops_challenge1_a: Piensa en este camino como si fueran dos
          partes diferentes. Cada una tiene un patrón que puedes repetir.
        courseC_maze_loops_challenge1_b: "¿Recuerdas cómo usar los loops para repetir
          el patrón de escalera?"
      courseC_maze_loops_challenge1a_2019_authored_hint:
        courseC_maze_loops_challenge1_a: Piensa en este camino como si fueran dos
          partes diferentes. Cada una tiene un patrón que puedes repetir.
        courseC_maze_loops_challenge1_b: "¿Recuerdas cómo usar los loops para repetir
          el patrón de escalera?"
      courseC_maze_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_a: El código original funcionaría muy bien,
          ¡ si hubiera solo una pieza de tesoro en cada pila!
        courseC_maze_loops_challenge2_b: ¡Utiliza los loops de tal manera de no quedarse
          sin los bloques "recoger"!
      courseC_maze_programming1_authored_hint:
        courseC_maze_programming1_0: Asegúrate que todos los bloques se hayan ensamblado
          por completo, luego haz clic en "Ejecutar" nuevamente.
      courseC_maze_programming1_2018_authored_hint:
        courseC_maze_programming1_0: Asegúrate que todos los bloques se hayan ensamblado
          por completo, luego haz clic en "Ejecutar" nuevamente.
      courseC_maze_programming1_2019_authored_hint:
        courseC_maze_programming1_0: Asegúrate que todos los bloques se hayan ensamblado
          por completo, luego haz clic en "Ejecutar" nuevamente.
      courseC_maze_programming2_authored_hint:
        courseC_maze_programming2_a: Para utilizar un bloque <xml><block type="maze_moveForward"/></xml>,
          arrástralo fuera de la caja de herramientas y encájalo al bloque <xml><block
          type="when_run"/></xml>.
        courseC_maze_programming2_b: Asegúrese de que todos los bloques se hayan ensamblado
          por completo, luego haga clic en "Ejecutar" nuevamente.
      courseC_maze_programming2_2018_authored_hint:
        courseC_maze_programming2_a: Para utilizar un bloque <xml><block type="maze_moveForward"/></xml>,
          arrástralo fuera de la caja de herramientas y encájalo al bloque <xml><block
          type="when_run"/></xml>.
        courseC_maze_programming2_b: Asegúrate que todos los bloques se hayan ensamblado
          por completo, luego haz clic en "Ejecutar" nuevamente.
      courseC_maze_programming2_2019_authored_hint:
        courseC_maze_programming2_a: Para utilizar un bloque <xml><block type="maze_moveForward"/></xml>,
          arrástralo fuera de la caja de herramientas y encájalo al bloque <xml><block
          type="when_run"/></xml>.
        courseC_maze_programming2_b: Asegúrate que todos los bloques se hayan ensamblado
          por completo, luego haz clic en "Ejecutar" nuevamente.
      courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: Intenta ejecutar el código primero para ver dónde
          sale mal.
        courseC_maze_programming3_b: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \n\nPara eliminar un bloque del medio de tu código, arrastra todos los bloques
          a otro lugar del espacio de trabajo.\n\nArrastra el bloque deseas eliminar
          nuevamente a la caja de herramientas. \n\nFinalmente, ubica los otros bloques
          de regreso a donde pertenecen."
      courseC_maze_programming3_2018_authored_hint:
        courseC_maze_programming3_a: Intenta ejecutar el código primero para ver dónde
          sale mal.
        courseC_maze_programming3_b: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \n\nPara eliminar un bloque del medio de tu código, arrastra todos los bloques
          a otro lugar del espacio de trabajo.\n\nArrastra el bloque deseas eliminar
          nuevamente a la caja de herramientas. \n\nFinalmente, ubica los otros bloques
          de regreso a donde pertenecen."
      courseC_maze_programming3_2019_authored_hint:
        courseC_maze_programming3_a: Intenta ejecutar el código primero para ver dónde
          sale mal.
        courseC_maze_programming3_b: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \n\nPara eliminar un bloque del medio de tu código, arrastra todos los bloques
          a otro lugar del espacio de trabajo.\n\nArrastra el bloque deseas eliminar
          nuevamente a la caja de herramientas. \n\nFinalmente, ubica los otros bloques
          de regreso a donde pertenecen."
      courseC_maze_programming4_authored_hint:
        courseC_maze_programming4_a: Recuerda que cuando giras, estás girando desde
          el punto de vista del **pájaro**. Si giras a la derecha, el pájaro apuntará
          para abajo.
        courseC_maze_programming4_b: "Para seguir el camino: \n\n-   Avanzar \n-   Girar
          hacia un lado \n-   Avanzar \n-   Devolverse \n-   Avanzar"
      courseC_maze_programming4_2018_authored_hint:
        courseC_maze_programming4_a: Recuerda que cuando giras, estás girando desde
          el punto de vista del **pájaro**. Si giras a la derecha, el pájaro apuntará
          para abajo.
        courseC_maze_programming4_b: "Para seguir el camino: \n\n-   Avanzar \n-   Girar
          hacia un lado \n-   Avanzar \n-   Devolverse \n-   Avanzar"
      courseC_maze_programming4_2019_authored_hint:
        courseC_maze_programming4_a: Recuerda que cuando giras, estás girando desde
          el punto de vista del **pájaro**. Si giras a la derecha, el pájaro apuntará
          para abajo.
        courseC_maze_programming4_b: "Para seguir el camino: \n\n-   Avanzar \n-   Girar
          hacia un lado \n-   Avanzar \n-   Devolverse \n-   Avanzar"
      courseC_maze_programming5_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: El pájaro tendrá que hacer un giro para completar
          este desafío. ¿Puedes descubrir en qué dirección?
        courseC_maze_programming5_c: La solución tendrá dos bloques "avanzar", un
          giro, y dos bloques más "avanzar".
      courseC_maze_programming5_2018_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: El pájaro tendrá que hacer un giro para completar
          este desafío. ¿Puedes descubrir en qué dirección?
        courseC_maze_programming5_c: La solución tendrá dos bloques "avanzar", un
          giro, y dos bloques más "avanzar".
      courseC_maze_programming5_2019_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: El pájaro tendrá que hacer un giro para completar
          este desafío. ¿Puedes descubrir en qué dirección?
        courseC_maze_programming5_c: La solución tendrá dos bloques "avanzar", un
          giro, y dos bloques más "avanzar".
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: "¡Hay dos formas de resolver este desafío!"
        courseC_maze_programming6_b: Sigue con tu dedo desde pájaro al cerdo, ¿qué
          pasos tomó?
        courseC_maze_programming6_c: Recuerda que debes dar la vuelta primero, ya
          que el pájaro comienza mirando hacia una pared.
        courseC_maze_programming6_d: "¿Te sientes atrapado? ¡Mira este camino!"
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: "¡Hay dos formas de resolver este desafío!"
        courseC_maze_programming6_b: Sigue con tu dedo desde pájaro al cerdo, ¿qué
          pasos tomó?
        courseC_maze_programming6_c: Recuerda que debes dar la vuelta primero, ya
          que el pájaro comienza mirando hacia una pared.
        courseC_maze_programming6_d: "¿Te sientes atrapado? ¡Mira este camino!"
      courseC_maze_programming6_2019_authored_hint:
        courseC_maze_programming6_a: "¡Hay dos formas de resolver este desafío!"
        courseC_maze_programming6_b: Sigue con tu dedo desde pájaro al cerdo, ¿qué
          pasos tomó?
        courseC_maze_programming6_c: Recuerda que debes dar la vuelta primero, ya
          que el pájaro comienza mirando hacia una pared.
        courseC_maze_programming6_d: "¿Te sientes atrapado? ¡Mira este camino!"
      courseC_maze_programming7_authored_hint:
        courseC_maze_programming7_a: No te olvides de utilizar el botón "Paso" para
          ir bloque por bloque buscando errores.
        courseC_maze_programming7_b: Si tienes problemas para descifrar este desafío,
          intenta escribir los movimientos en un papel.
      courseC_maze_programming7_2018_authored_hint:
        courseC_maze_programming7_a: No te olvides de utilizar el botón "Paso" para
          ir bloque por bloque buscando errores.
        courseC_maze_programming7_b: Si tienes problemas para descifrar este desafío,
          intenta escribir los movimientos en un papel.
      courseC_maze_programming7_2019_authored_hint:
        courseC_maze_programming7_a: No te olvides de utilizar el botón "Paso" para
          ir bloque por bloque buscando errores.
        courseC_maze_programming7_b: Si tienes problemas para descifrar este desafío,
          intenta escribir los movimientos en un papel.
      courseC_maze_programming8_authored_hint:
        courseC_maze_programming8_a: Recuerda que puedes usar el botón "Paso" para
          revisar tu código línea por línea si te quedas atascado.
        courseC_maze_programming8_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseC_maze_programming8_2018_authored_hint:
        courseC_maze_programming8_a: Recuerda que puedes usar el botón "Paso" para
          revisar tu código línea por línea si te quedas atascado.
        courseC_maze_programming8_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseC_maze_programming8_2019_authored_hint:
        courseC_maze_programming8_a: Recuerda que puedes usar el botón "Paso" para
          revisar tu código línea por línea si te quedas atascado.
        courseC_maze_programming8_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseC_maze_programming_challenge1_authored_hint:
        courseC_maze_programming_challenge1_a: Hay muchas maneras de llegar al cerdo.
          ¡Usa tu dedo para encontrar un camino y luego programarlo!
      courseC_maze_programming_challenge1_2018_authored_hint:
        courseC_maze_programming_challenge1_a: Hay muchas maneras de llegar al cerdo.
          ¡Usa tu dedo para encontrar un camino y luego programarlo!
      courseC_maze_programming_challenge1_2019_authored_hint:
        courseC_maze_programming_challenge1_a: Hay muchas maneras de llegar al cerdo.
          ¡Usa tu dedo para encontrar un camino y luego programarlo!
      courseC_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: _"Si me envías hacia atrás, ¡ten mucho
          cuidado de que gire en la dirección correcta!"_
        courseC_maze_programming_challenge2_b: |-
          La solución más corta usa solo 5 bloques, pero usa este bloque:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018_authored_hint:
        courseC_maze_programming_challenge2_a: _"Si me envías hacia atrás, ¡ten mucho
          cuidado de que gire en la dirección correcta!"_
        courseC_maze_programming_challenge2_b: |-
          La solución más corta usa solo 5 bloques, pero usa este bloque:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019_authored_hint:
        courseC_maze_programming_challenge2_a: _"Si me envías hacia atrás, ¡ten mucho
          cuidado de que gire en la dirección correcta!"_
        courseC_maze_programming_challenge2_b: |-
          La solución más corta usa solo 5 bloques, pero usa este bloque:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_puppy_loops10_authored_hint:
        courseC_puppy_loops9_1: Necesito mover dos o tres veces entre cada giro.
      courseC_puppy_loops8_authored_hint:
        2-3_Maze_Loops_17_a: Trate de pensar sobre este problema en pequeñas partes.
          Tómate tu tiempo. ¡No es necesario resolver en el primer intento!
        2-3_Maze_Loops_17_b: La primera mitad de este camino es similar al paso de
          escalera del último rompecabezas, pero va en una dirección diferente.
        courseC_puppy_loops8_c: Hay diferentes formas de resolver esto. Querrá usar
          al menos dos ciclos y repetir un conjunto de acciones o un solo movimiento.
      courseC_puppy_loops8courseC_maze_loops8_authored_hint:
        courseC_puppy_loops8courseC_maze_loops8_a: Trate de pensar sobre este problema
          en pequeñas partes. Tómate tu tiempo. ¡No es necesario resolver en el primer
          intento!
        courseC_puppy_loops8courseC_maze_loops8_b: La primera mitad de este camino
          es similar a las escaleras del rompecabezas del pasado, pero va en una dirección
          diferente.
        courseC_puppy_loops8courseC_maze_loops8_c: Hay diferentes maneras de solucionar
          esto Tienes que usar al menos dos ciclos y repetir un conjunto de acciones
          en la primera, luego un solo 'avanzar' en la otra.
      courseC_puppy_loops9_authored_hint:
        courseC_puppy_loops9_1: "¡Si repites las primeras acciones, puedes llevarme
          al puerco con solo cuatro bloques más!"
      courseC_starWars_loops1_authored_hint:
        courseC_starWars_loops1_a: Cuando BB-8 rueda sobre metal lo recoge automáticamente.
        courseC_starWars_loops1_b: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
        courseC_starWars_loops1_c: Tendrás que 'avanzar' cinco veces para resolver
          este desafío.
      courseC_starWars_loops10_authored_hint:
        courseC_starWars_loops10_a: "¿Este patrón no te parece una escalera gigante?
          Intenta usar lo que aprendiste de los desafíos anteriores para lograr todos
          los giros."
        courseC_starWars_loops10_b: "Si deseas utilizar menos código, puedes poner
          un loop de 'repetir' dentro de otro.  \nEsto se llama un \\*\\* loop anidado
          \\*\\*."
        courseC_starWars_loops10_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
      courseC_starWars_loops10_2018_authored_hint:
        courseC_starWars_loops10_a: "¿Este patrón no te parece una escalera gigante?
          Intenta usar lo que aprendiste de los desafíos anteriores para lograr todos
          los giros."
        courseC_starWars_loops10_b: "Si deseas utilizar menos código, puedes poner
          un loop de 'repetir' dentro de otro.  \nEsto se llama un \\*\\* loop anidado
          \\*\\*."
        courseC_starWars_loops10_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
      courseC_starWars_loops10_2019_authored_hint:
        courseC_starWars_loops10_a: "¿Este patrón no te parece una escalera gigante?
          Intenta usar lo que aprendiste de los desafíos anteriores para lograr todos
          los giros."
        courseC_starWars_loops10_b: "Si deseas utilizar menos código, puedes poner
          un loop de 'repetir' dentro de otro.  \nEsto se llama un \\*\\* loop anidado
          \\*\\*."
        courseC_starWars_loops10_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
      courseC_starWars_loops1_2018_authored_hint:
        courseC_starWars_loops1_a: Cuando BB-8 rueda sobre metal lo recoge automáticamente.
        courseC_starWars_loops1_b: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
        courseC_starWars_loops1_c: Tendrás que 'avanzar' cinco veces para resolver
          este desafío.
      courseC_starWars_loops1_2019_authored_hint:
        courseC_starWars_loops1_a: Cuando BB-8 rueda sobre metal lo recoge automáticamente.
        courseC_starWars_loops1_b: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
        courseC_starWars_loops1_c: Tendrás que 'avanzar' cinco veces para resolver
          este desafío.
      courseC_starWars_loops2_authored_hint:
        courseC_starWars_loops2_a: Para repetir código, arrastra un ciclo ´repetir´,
          luego coloca dentro el bloque que quieres repetir.
      courseC_starWars_loops2_2018_authored_hint:
        courseC_starWars_loops2_a: Para repetir código, arrastra un ciclo ´repetir´,
          luego coloca dentro el bloque que quieres repetir.
      courseC_starWars_loops2_2019_authored_hint:
        courseC_starWars_loops2_a: Para repetir código, arrastra un ciclo ´repetir´,
          luego coloca dentro el bloque que quieres repetir.
      courseC_starWars_loops4_authored_hint:
        courseC_starWars_loops4_c: Haciendo clic en la flecha pequeña al lado "izquierdo"
          en el bloque girar te permitirá cambiarlo a la "derecha".
        courseC_starWars_loops4_a: Usa dos bloques "repetir".
        courseC_starWars_loops4_b: 'Cada loop ''repetir'' tendrá sólo un comando dentro
          de él: `avanzar`.'
      courseC_starWars_loops4_2018_authored_hint:
        courseC_starWars_loops4_c: Haciendo clic en la flecha pequeña al lado "izquierdo"
          en el bloque girar te permitirá cambiarlo a la "derecha".
        courseC_starWars_loops4_a: Usa dos bloques "repetir".
        courseC_starWars_loops4_b: 'Cada loop ''repetir'' tendrá sólo un comando dentro
          de él: `avanzar`.'
      courseC_starWars_loops4_2019_authored_hint:
        courseC_starWars_loops4_c: Haciendo clic en la flecha pequeña al lado "izquierdo"
          en el bloque girar te permitirá cambiarlo a la "derecha".
        courseC_starWars_loops4_a: Usa dos bloques "repetir".
        courseC_starWars_loops4_b: 'Cada loop ''repetir'' tendrá sólo un comando dentro
          de él: `avanzar`.'
      courseC_starWars_loops5_authored_hint:
        courseC_starWars_loops5_b: Para moverte hacia abajo, debes girar y luego avanzar.
        courseC_starWars_loops5_a: La mejor solución utiliza un giro, luego solo un
          \`avanzar ', otro giro y luego un loop.
      courseC_starWars_loops5_2018_authored_hint:
        courseC_starWars_loops5_b: Para moverte hacia abajo, debes girar y luego avanzar.
        courseC_starWars_loops5_a: La mejor solución utiliza un giro, luego solo un
          \`avanzar ', otro giro y luego un loop.
      courseC_starWars_loops5_2019_authored_hint:
        courseC_starWars_loops5_b: Para moverte hacia abajo, debes girar y luego avanzar.
        courseC_starWars_loops5_a: La mejor solución utiliza un giro, luego solo un
          \`avanzar ', otro giro y luego un loop.
      courseC_starWars_loops6_authored_hint:
        courseC_starWars_loops6_a: Intenta escribir todos los movimientos en un papel
          y busca un patrón.
        courseC_starWars_loops6_b: "Si desea utilizar menos código, puede poner un
          ciclo de repetición dentro de otro.  \nEsto se llama un \\*\\* ciclo anidado
          \\*\\*."
      courseC_starWars_loops6_2018_authored_hint:
        courseC_starWars_loops6_a: Intenta escribir todos los movimientos en un papel
          y busca un patrón.
        courseC_starWars_loops6_b: "Si deseas utilizar menos código, puedes poner
          un loop de 'repetir' dentro de otro.  \nEsto se llama un \\*\\* loop anidado
          \\*\\*."
      courseC_starWars_loops6_2019_authored_hint:
        courseC_starWars_loops6_a: Intenta escribir todos los movimientos en un papel
          y busca un patrón.
        courseC_starWars_loops6_b: "Si deseas utilizar menos código, puedes poner
          un loop de 'repetir' dentro de otro.  \nEsto se llama un \\*\\* loop anidado
          \\*\\*."
      courseC_starWars_loops7_authored_hint:
        courseC_starWars_loops7_a: "¡Este patrón parece más difícil de lo que es!
          Comienza con un simple escalón. ¿Eso cubre toda la chatarra?"
        courseC_starWars_loops7_b: Si tienes problemas con este desafío, intenta escribir
          todos los movimientos en un papel y buscar un patrón.
        courseC_starWars_loops7_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
      courseC_starWars_loops7_2018_authored_hint:
        courseC_starWars_loops7_a: "¡Este patrón parece más difícil de lo que es!
          Comienza con un simple escalón. ¿Eso cubre toda la chatarra?"
        courseC_starWars_loops7_b: Si tienes problemas con este desafío, intenta escribir
          todos los movimientos en un papel y buscar un patrón.
        courseC_starWars_loops7_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
      courseC_starWars_loops7_2019_authored_hint:
        courseC_starWars_loops7_a: "¡Este patrón parece más difícil de lo que es!
          Comienza con un simple escalón. ¿Eso cubre toda la chatarra?"
        courseC_starWars_loops7_b: Si tienes problemas con este desafío, intenta escribir
          todos los movimientos en un papel y buscar un patrón.
        courseC_starWars_loops7_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver qué sucede, incluso si aún no has resuelto el desafío."
      courseC_starWars_loops8_authored_hint:
        course_starWars_loops8_a: Trata de pensar sobre este problema en pequeñas
          partes. Tómate tu tiempo. ¡No es necesario resolverlo en el primer intento!
        course_starWars_loops8_b: Piensa en la primera parte de este problema como
          un problema del escalón. ¿Cómo resolviste eso antes?
        course_starWars_loops8_c: "Echa un vistazo a este camino. \n\n!\\[] (<https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png>)"
      courseC_starWars_loops8_2018_authored_hint:
        course_starWars_loops8_a: Trata de pensar sobre este problema en pequeñas
          partes. Tómate tu tiempo. ¡No es necesario resolverlo en el primer intento!
        course_starWars_loops8_b: Piensa en la primera parte de este problema como
          un problema del escalón. ¿Cómo resolviste eso antes?
        course_starWars_loops8_c: "Echa un vistazo a este camino. \n\n!\\[] (<https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png>)"
      courseC_starWars_loops8_2019_authored_hint:
        course_starWars_loops8_a: Trata de pensar sobre este problema en pequeñas
          partes. Tómate tu tiempo. ¡No es necesario resolverlo en el primer intento!
        course_starWars_loops8_b: Piensa en la primera parte de este problema como
          un problema del escalón. ¿Cómo resolviste eso antes?
        course_starWars_loops8_c: "Echa un vistazo a este camino. \n\n!\\[] (<https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png>)"
      courseC_starWars_loops9_authored_hint:
        course_starWars_loops9_b: Puedes poner más de un bloque dentro de un loop
          'repetir'.
        course_starWars_loops9_c: |-
          No necesitas girar a la izquierda para resolver este rompecabezas . Todos tus giros pueden ser hacia la derecha.

          !\[] (<https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png>)
      courseC_starWars_loops9_2018_authored_hint:
        course_starWars_loops9_b: Puedes poner más de un bloque dentro de un loop
          'repetir'.
        course_starWars_loops9_c: |-
          No necesitas girar a la izquierda para resolver este rompecabezas . Todos tus giros pueden ser hacia la derecha.

          !\[] (<https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png>)
      courseC_starWars_loops9_2019_authored_hint:
        course_starWars_loops9_b: Puedes poner más de un bloque dentro de un loop
          'repetir'.
        course_starWars_loops9_c: |-
          No necesitas girar a la izquierda para resolver este rompecabezas . Todos tus giros pueden ser hacia la derecha.

          !\[] (<https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png>)
      courseD_Frozen_nested1_authored_hint:
        courseD_artist_project1_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project1_b: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
      courseD_Frozen_nested2_authored_hint:
        courseD_artist_project2_a: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
        courseD_artist_project2_b: Después de dibujar y mover la primera vez, puedes
          repetir el código agregando un loop alrededor del exterior.
      courseD_Frozen_nested3_authored_hint:
        courseD_artist_project3_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project3_b: "¡Prueba los bucles anidados! \n\nUsa el código
          que creaste para dibujar una línea de formas y anidara dentro de otro bucle.
          En la parte inferior, antes de que termine el bucle exterior, agrega un
          bloque que hará girar a Elsa.   \n\n-   Prueba con 72 grados si repites
          el bucle externo 5 veces \n-   Prueba con 60 grados si repites el bucle
          externo 6 veces"
      courseD_Frozen_nested4_authored_hint:
        courseD_artist_project4_a: "Este es el copo de nieve pentagonal con un giro
          de 36 grados antes de un copo de nieve triangular:\n\n <img src = \"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\"
          width = \"200px\" /> \n\nEste es un conjunto de hexágonos con cuadrados:\n\n
          <img src = \"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\"
          width = \"200px\" />"
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve,
          gira y luego dibuja un segundo copo de nieve.
      courseD_Frozen_nested5_authored_hint:
        courseD_artist_project4_a: |-
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_Frozen_nested6_authored_hint:
        courseD_artist_project1a_a: |-
          Este escalón utiliza un giro de 76 grados y se repite 4 veces.

          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los escalones
          de otros desafíos, pero usando un ángulo diferente.
      courseD_Frozen_nested7_authored_hint:
        courseD_artist_project2a_a: |-
          Este dibujo se hizo anidando un loop de 4 escalones y un bloque `girar a la derecha 180 grados` dentro de un bloque`repetir 2 veces`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_Frozen_nested8_authored_hint:
        courseD_artist_project3a_a: "¡Puedes elegir diferentes cantidades para rotar
          tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?"
      courseD_Frozen_nested9_authored_hint:
        courseD_artist_project4a_a: |-
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_1_2018_authored_hint:
        courseD_artist_project1_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project1_b: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
      courseD_artist_1_2018_2019_authored_hint:
        courseD_artist_project1_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project1_b: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
      courseD_artist_2_2018_authored_hint:
        courseD_artist_project1_b: Recuerda que "mover" dibuja una linea, mientras
          que "saltar" no.
        courseD_artist_project1_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
      courseD_artist_2_2018_2019_authored_hint:
        courseD_artist_project1_b: Recuerda que "mover" dibuja una linea, mientras
          que "saltar" no.
        courseD_artist_project1_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
      courseD_artist_5_2018_authored_hint:
        '1': "¡Si estás cambiando las formas no olvides que tendrás que cambiar sus
          ángulos también!"
      courseD_artist_5_2018_2019_authored_hint:
        '1': "¡Si estás cambiando las formas no olvides que tendrás que cambiar sus
          ángulos también!"
      courseD_artist_7_2018_authored_hint:
        courseD_artist_project2a_a: |-
          Este dibujo se hizo anidando un loop de 4 escalones y un bloque `girar a la derecha 180 grados` dentro de un bloque`repetir 2 veces`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_8_2018_authored_hint:
        courseD_artist_project3a_a: "¡Puedes elegir diferentes cantidades para rotar
          tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?"
      courseD_artist_9_2018_authored_hint:
        courseD_artist_project4a_a: |-
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_binary1_authored_hint:
        courseD_artist_binary1_a: Reemplace la "???" en el bloque de texto con la
          imagen binaria que quieras, en ceros y unos.
        courseD_artist_binary1_b: El artista dibujará un espacio en blanco por cada
          1 y un espacio en negro por cada 0.
        courseD_artist_binary1_c: |-
          Así es como puedes ingresar tu código binario:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018_authored_hint:
        courseD_artist_binary1_a: Reemplace la "???" en el bloque de texto con la
          imagen binaria que quieras, en ceros y unos.
        courseD_artist_binary1_b: El artista dibujará un espacio en blanco por cada
          1 y un espacio en negro por cada 0.
        courseD_artist_binary1_c: |-
          Así es como puedes ingresar tu código binario:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2019_authored_hint:
        courseD_artist_binary1_a: Reemplace la "???" en el bloque de texto con la
          imagen binaria que quieras, en ceros y unos.
        courseD_artist_binary1_b: El artista dibujará un espacio en blanco por cada
          1 y un espacio en negro por cada 0.
        courseD_artist_binary1_c: |-
          Así es como puedes ingresar tu código binario:

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2_authored_hint:
        courseD_artist_binary2_a: "¡Simplemente haz clic en 'Ejecutar' para ver este
          programa en acción!"
      courseD_artist_binary2_2018_authored_hint:
        courseD_artist_binary2_a: "¡Simplemente haz clic en 'Ejecutar' para ver este
          programa en acción!"
      courseD_artist_binary2_2019_authored_hint:
        courseD_artist_binary2_a: "¡Simplemente haz clic en 'Ejecutar' para ver este
          programa en acción!"
      courseD_artist_binary3_authored_hint:
        courseD_artist_binary3_a: "¡Uno de los cuatro patrones binarios en la caja
          de herramientas resolverá este desafío!"
        courseD_artist_binary3_b: "¡No tengas miedo de cometer un error! Intenta escribir
          binario y ejecuta el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseD_artist_binary3_2018_authored_hint:
        courseD_artist_binary3_a: "¡Uno de los cuatro patrones binarios en la caja
          de herramientas resolverá este desafío!"
        courseD_artist_binary3_b: "¡No tengas miedo de cometer un error! Intenta escribir
          binario y ejecuta el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseD_artist_binary3_2019_authored_hint:
        courseD_artist_binary3_a: "¡Uno de los cuatro patrones binarios en la caja
          de herramientas resolverá este desafío!"
        courseD_artist_binary3_b: "¡No tengas miedo de cometer un error! Intenta escribir
          binario y ejecuta el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseD_artist_binary4_authored_hint:
        courseD_artist_binary4_a: Mira los primeros tres cuadrados en la fila superior.
          ¿Podrías repetir estos tres para obtener el patrón completo?
        courseD_artist_binary4_b: "¡No tengas miedo de cometer un error! Intenta escribir
          código binario y ejecuta el código para ver qué sucederá, incluso si no
          crees que ya has resuelto el enigma."
      courseD_artist_binary4_2018_authored_hint:
        courseD_artist_binary4_a: Mira los primeros tres cuadrados en la fila superior.
          ¿Podrías repetir estos tres para obtener el patrón completo?
        courseD_artist_binary4_b: "¡No tengas miedo de cometer un error! Intenta escribir
          código binario y ejecuta el código para ver qué sucederá, incluso si no
          crees que ya has resuelto el enigma."
      courseD_artist_binary4_2019_authored_hint:
        courseD_artist_binary4_a: Mira los primeros tres cuadrados en la fila superior.
          ¿Podrías repetir estos tres para obtener el patrón completo?
        courseD_artist_binary4_b: "¡No tengas miedo de cometer un error! Intenta escribir
          código binario y ejecuta el código para ver qué sucederá, incluso si no
          crees que ya has resuelto el enigma."
      courseD_artist_binary5_authored_hint:
        courseD_artist_binary5_a: Intenta ejecutar el código primero para ver con
          qué tienes que trabajar.
        courseD_artist_binary5_b: Solo necesitas cambiar dos filas para hacer una
          sonrisa.
        courseD_artist_binary5_c: Si tienes problemas para descifrar este desafío,
          intenta escribir las líneas binarias en un pedazo de papel y busca un patrón.
      courseD_artist_binary5_2018_authored_hint:
        courseD_artist_binary5_a: Intenta ejecutar el código primero para ver con
          qué tienes que trabajar.
        courseD_artist_binary5_b: Solo necesitas cambiar dos filas para hacer una
          sonrisa.
        courseD_artist_binary5_c: Si tienes problemas para descifrar este desafío,
          intenta escribir las líneas binarias en un pedazo de papel y busca un patrón.
      courseD_artist_binary5_2019_authored_hint:
        courseD_artist_binary5_a: Intenta ejecutar el código primero para ver con
          qué tienes que trabajar.
        courseD_artist_binary5_b: Solo necesitas cambiar dos filas para hacer una
          sonrisa.
        courseD_artist_binary5_c: Si tienes problemas para descifrar este desafío,
          intenta escribir las líneas binarias en un pedazo de papel y busca un patrón.
      courseD_artist_binary6_authored_hint:
        courseD_artist_binary6_a: Comienza en la parte superior izquierda. ¿Qué tan
          lejos debes leer antes de que el patrón comience a repetirse?
        courseD_artist_binary6_b: "¡Puedes construir tu cadena binaria un poquito
          a la vez y seguir probando!"
      courseD_artist_binary6_2018_authored_hint:
        courseD_artist_binary6_a: Comienza en la parte superior izquierda. ¿Qué tan
          lejos debes leer antes de que el patrón comience a repetirse?
        courseD_artist_binary6_b: "¡Puedes construir tu cadena binaria un poquito
          a la vez y seguir probando!"
      courseD_artist_binary6_2019_authored_hint:
        courseD_artist_binary6_a: Comienza en la parte superior izquierda. ¿Qué tan
          lejos debes leer antes de que el patrón comience a repetirse?
        courseD_artist_binary6_b: "¡Puedes construir tu cadena binaria un poquito
          a la vez y seguir probando!"
      courseD_artist_binary7_authored_hint:
        courseD_artist_binary7_a: Comience en la parte superior izquierda. ¿Qué tan
          lejos debe leer antes de que el patrón comience a repetirse?
        courseD_artist_binary7_b: "¡No tengas miedo de cometer un error! Intenta escribir
          código binario y ejecuta el código para ver qué sucederá, incluso si no
          crees que ya has resuelto el enigma."
      courseD_artist_binary7_2018_authored_hint:
        courseD_artist_binary7_a: Comienza en la parte superior izquierda. ¿Qué tan
          lejos debes leer antes de que el patrón comience a repetirse?
        courseD_artist_binary7_b: "¡No tengas miedo de cometer un error! Intenta escribir
          código binario y ejecuta el código para ver qué sucederá, incluso si no
          crees que ya has resuelto el enigma."
      courseD_artist_binary7_2019_authored_hint:
        courseD_artist_binary7_a: Comienza en la parte superior izquierda. ¿Qué tan
          lejos debes leer antes de que el patrón comience a repetirse?
        courseD_artist_binary7_b: "¡No tengas miedo de cometer un error! Intenta escribir
          código binario y ejecuta el código para ver qué sucederá, incluso si no
          crees que ya has resuelto el enigma."
      courseD_artist_binary8_authored_hint:
        courseD_artist_binary8_a: La espiral puede ser confusa a veces. Aísla cada
          línea horizontal en tu mente mientras creas este diseño.
        courseD_artist_binary8_b: Intenta ejecutar el código primero para ver con
          qué tienes que trabajar.
        courseD_artist_binary8_c: "¡No tengas miedo de cometer un error! Intenta escribir
          binario y ejecuta el código para ver qué sucederá, incluso si aún no has
          resuelto el acertijo."
      courseD_artist_binary8_2018_authored_hint:
        courseD_artist_binary8_a: La espiral puede ser confusa a veces. Aísla cada
          línea horizontal en tu mente mientras creas este diseño.
        courseD_artist_binary8_b: Intenta ejecutar el código primero para ver con
          qué tienes que trabajar.
        courseD_artist_binary8_c: "¡No tengas miedo de cometer un error! Intenta escribir
          binario y ejecuta el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseD_artist_binary8_2019_authored_hint:
        courseD_artist_binary8_a: La espiral puede ser confusa a veces. Aísla cada
          línea horizontal en tu mente mientras creas este diseño.
        courseD_artist_binary8_b: Intenta ejecutar el código primero para ver con
          qué tienes que trabajar.
        courseD_artist_binary8_c: "¡No tengas miedo de cometer un error! Intenta escribir
          binario y ejecuta el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseD_artist_binary_challenge2_authored_hint:
        courseD_artist_binary_challenge2_a: Solo hay unas pocas líneas incorrectas
          en el programa original.
      courseD_artist_binary_challenge2_2018_authored_hint:
        courseD_artist_binary_challenge2_a: Solo hay unas pocas líneas incorrectas
          en el programa original.
      courseD_artist_binary_challenge2_2019_authored_hint:
        courseD_artist_binary_challenge2_a: Solo hay unas pocas líneas incorrectas
          en el programa original.
      courseD_artist_binary_challenge3_authored_hint:
        courseD_artist_binary_challenge3_a: El mejor consejo que tengo para ti es
          presionar `⟲ Start Over` si comienza a ponerse realmente desordenado. Solo
          hay unas pocas líneas incorrectas en el programa original. Si falla un enfoque,
          haz una copia de seguridad y vuelve a intentarlo. ¡Hay una solucion!
      courseD_artist_functions10_authored_hint:
        courseD_artist_functions10_b: Este dibujo es muy parecido al último, excepto
          que la función dibuja un tipo diferente de línea.
        courseD_artist_functions10_a: Para evitar la necesidad de bloques múltiples
          'avanzar', cree una función de 'dibujar triángulo' y llamar varias veces.
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          El programa debe:

          -   Usar la función
          -   Avanzar 100 + 75 pixeles
          -   Usar la función
      courseD_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          Para resolver este desafío, sólo necesitas agregar un loop que repita el código de inicio 8 veces.

          Si no puedes recordar cuál era el código de inicio, haz clic en "comenzar de nuevo" en la esquina superior derecha del espacio de trabajo.
      courseD_artist_functions4_authored_hint:
        courseD_artist_functions4_a: "¡Intenta usar una función!"
      courseD_artist_functions5_authored_hint:
        courseD_artist_functions5_a: "¡No te rindas! Recuerda lo que has estado aprendiendo."
        courseD_artist_functions5_b: Las funciones facilitan la llamada al código
          guardado en cualquier momento, ¡no solo desde dentro de un loop!
      courseD_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Concéntrate sólo en hacer una ventana
          por ahora. Vamos a crear una función para el siguiente desafío.
        grade4_artist_functions_windows0_b: Intente hacer ciclos anidados, donde el
          ciclo interno hace el cuadrado y el ciclo externo gira el cuadrado cuatro
          veces.
      courseD_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Trata de crear tu función primero y luego agregar
          ventanas una a la vez.
        courseD_artist_functions7_b: No debería necesitar agregar ningún ciclo de
          repetición adicional. Simplemente salta al artista 100 píxeles hacia adelante
          para cada ventana superior, y 150 píxeles hacia abajo para obtener las ventanas
          inferiores.
      courseD_artist_functions8_authored_hint:
        courseD_artist_functions8_a: Comienza haciendo una función para un cuadrado,
          luego intenta hacer una función para una línea de cuadrados. ¿Cómo usarías
          la función `dibujar línea de cuadrados` para hacer esta imagen?
        courseD_artist_functions8_b: Después de su primera línea de cuadrados, debe
          mover al artista hacia abajo y hacia atrás antes de comenzar su segunda
          línea de cuadrados.
        courseD_artist_functions8_c: Debe mover al artista hacia atrás un número de
          píxeles diferente para las líneas pares que para las impares.
      courseD_artist_functions9_authored_hint:
        courseD_artist_functions9_a: Para evitar la necesidad de tener múltiples bloques
          de 'avanzar', crea una función de 'dibujar triángulo' y llámala varias veces.
        courseD_artist_functions9_b: Este dibujo se hace con la creación de una línea
          de triángulos y girando 60 o 120 grados cada vez que dibuja la línea del
          triángulo.
      courseD_artist_nestedLoops1_authored_hint:
        courseD_artist_nestedLoops1_a: La forma más fácil de dibujar esto es avanzar
          y usar giros a la derecha.
        courseD_artist_nestedLoops1_b: Puedes dibujar este triángulo con un loop 'repetir'
          con dos bloques adentro. ¿Qué bloques necesitas?
        courseD_artist_nestedLoops1_c: Trata de escribir los pasos en el papel y buscar
          patrones que se puedan simplificar con loops.
      courseD_artist_nestedLoops1_2018_authored_hint:
        courseD_artist_nestedLoops1_a: La forma más fácil de dibujar esto es avanzar
          y usar giros a la derecha.
        courseD_artist_nestedLoops1_b: Puedes dibujar este triángulo con un loop 'repetir'
          con dos bloques adentro. ¿Qué bloques necesitas?
        courseD_artist_nestedLoops1_c: Trata de escribir los pasos en el papel y buscar
          patrones que se puedan simplificar con loops.
      courseD_artist_nestedLoops1_2019_authored_hint:
        courseD_artist_nestedLoops1_a: La forma más fácil de dibujar esto es avanzar
          y usar giros a la derecha.
        courseD_artist_nestedLoops1_b: Puedes dibujar este triángulo con un loop 'repetir'
          con dos bloques adentro. ¿Qué bloques necesitas?
        courseD_artist_nestedLoops1_c: Trata de escribir los pasos en el papel y buscar
          patrones que se puedan simplificar con loops.
      courseD_artist_nestedLoops1a_authored_hint:
        courseD_artist_nestedLoops1a_a: "Deberás dibujar un total de 6 triángulos.
          Después de terminar cada triángulo, gíra 60 grados y muévete para comenzar
          el siguiente triángulo. \n\n!\\[] (<https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif>)"
        courseD_artist_nestedLoops1a_b: Si creas tu triángulo con un loop, el artista
          debe estar mirando hacia la misma dirección desde que comenzó. Esto hará
          que los giros en 60 grados sean mucho más fáciles.
        courseD_artist_nestedLoops1a_c: Si quieres colores, utiliza el bloque 'establecer
          color' en el código. No es necesario que coincida con los colores de la
          imagen de la plantilla.
      courseD_artist_nestedLoops1a_2018_authored_hint:
        courseD_artist_nestedLoops1a_a: Deberá dibujar un total de 6 triángulos. Después
          de terminar cada triángulo, gírelo 60 grados y muévalo para comenzar el
          siguiente triángulo. ! \[] (<https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif>)
        courseD_artist_nestedLoops1a_b: Si creas tu triángulo con un loop, el artista
          debe estar mirando hacia la misma dirección desde que comenzó. Esto hará
          que los giros en 60 grados sean mucho más fáciles.
        courseD_artist_nestedLoops1a_c: Si quieres colores, utiliza el bloque 'establecer
          color' en el código. No es necesario que coincida con los colores de la
          imagen de la plantilla.
      courseD_artist_nestedLoops1a_2019_authored_hint:
        courseD_artist_nestedLoops1a_a: "Deberás dibujar un total de 6 triángulos.
          Después de terminar cada triángulo, gíra 60 grados y muévete para comenzar
          el siguiente triángulo. \n\n!\\[] (<https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif>)"
        courseD_artist_nestedLoops1a_b: Si creas tu triángulo con un loop, el artista
          debe estar mirando hacia la misma dirección desde que comenzó. Esto hará
          que los giros en 60 grados sean mucho más fáciles.
        courseD_artist_nestedLoops1a_c: Si quieres colores, utiliza el bloque 'establecer
          color' en el código. No es necesario que coincida con los colores de la
          imagen de la plantilla.
      courseD_artist_nestedLoops2_authored_hint:
        courseD_artist_nestedLoops2_a: Anida tus loops rodeando el código de tu triángulo
          con otro loop "repetir".
        courseD_artist_nestedLoops2_b: Recuerde poner el bloque 'girar' dentro del
          loop para que el artista se gire después de cada triángulo.
      courseD_artist_nestedLoops2_2018_authored_hint:
        courseD_artist_nestedLoops2_a: Anida tus loops rodeando el código de tu triángulo
          con otro loop "repetir".
        courseD_artist_nestedLoops2_b: Recuerde poner el bloque 'girar' dentro del
          loop para que el artista se gire después de cada triángulo.
      courseD_artist_nestedLoops2_2019_authored_hint:
        courseD_artist_nestedLoops2_a: Anida tus loops rodeando el código de tu triángulo
          con otro loop "repetir".
        courseD_artist_nestedLoops2_b: Recuerde poner el bloque 'girar' dentro del
          loop para que el artista se gire después de cada triángulo.
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: |-
          Intenta usar el bloque "saltar adelante" para ir desde la parte superior de un cuadrado hasta el lugar donde comenzarás el siguiente.
          Si tus cuadrados tienen 20 pixeles de alto y están separados 20 pixeles, ¿cuánto necesitas saltar?
        courseD_artist_nestedLoops3_b: 'No te olvides de usar un loop anidado para
          resolver este desafío rápidamente. '
        courseD_artist_nestedLoops3_c: 'Comienza usando un loop`repetir` para hacer
          un cuadrado. A continuación, repite ese cuadro 8 veces, saltando 40 píxeles
          en el medio. '
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: |-
          Intenta usar el bloque "saltar adelante" para ir desde la parte superior de un cuadrado hasta el lugar donde comenzarás el siguiente.
          Si tus cuadrados tienen 20 pixeles de alto y están separados 20 pixeles, ¿cuánto necesitas saltar?
        courseD_artist_nestedLoops3_b: 'No te olvides de usar un loop anidado para
          resolver este desafío rápidamente. '
        courseD_artist_nestedLoops3_c: 'Comienza usando un loop`repetir` para hacer
          un cuadrado. A continuación, repite ese cuadro 8 veces, saltando 40 píxeles
          en el medio. '
      courseD_artist_nestedLoops3_2019_authored_hint:
        courseD_artist_nestedLoops3_a: |-
          Intenta usar el bloque "saltar adelante" para ir desde la parte superior de un cuadrado hasta el lugar donde comenzarás el siguiente.
          Si tus cuadrados tienen 20 pixeles de alto y están separados 20 pixeles, ¿cuánto necesitas saltar?
        courseD_artist_nestedLoops3_b: 'No te olvides de usar un loop anidado para
          resolver este desafío rápidamente. '
        courseD_artist_nestedLoops3_c: 'Comienza usando un loop`repetir` para hacer
          un cuadrado. A continuación, repite ese cuadro 8 veces, saltando 40 píxeles
          en el medio. '
      courseD_artist_nestedLoops4_authored_hint:
        courseD_artist_nestedLoops4_d: Para resolver este desafío, necesitarás moverte
          **antes** de girar. De lo contrario, ¡tus círculos se apagarán con la mínima
          cantidad!
        courseD_artist_nestedLoops4_a: "Para hacer un círculo: \n\n-   Repetir 360
          ​​veces \n-   Avanzar 1 píxel \n-   Girar a la izquierda 1 grado"
        courseD_artist_nestedLoops4_b: No te olvides de saltar 50 píxeles entre círculos.
        courseD_artist_nestedLoops4_c: Usa un loop anidado para dibujar sus círculos
          4 veces.
      courseD_artist_nestedLoops4_2018_authored_hint:
        courseD_artist_nestedLoops4_d: Para resolver este desafío, necesitarás moverte
          **antes** de girar. De lo contrario, ¡tus círculos se apagarán con la mínima
          cantidad!
        courseD_artist_nestedLoops4_a: "Para hacer un círculo: \n\n-   Repetir 360
          ​​veces \n-   Avanzar 1 píxel \n-   Girar a la izquierda 1 grado"
        courseD_artist_nestedLoops4_b: No te olvides de saltar 50 píxeles entre círculos.
        courseD_artist_nestedLoops4_c: Usa un loop anidado para dibujar sus círculos
          4 veces.
      courseD_artist_nestedLoops4_2019_authored_hint:
        courseD_artist_nestedLoops4_d: Para resolver este desafío, necesitarás moverte
          **antes** de girar. De lo contrario, ¡tus círculos se apagarán con la mínima
          cantidad!
        courseD_artist_nestedLoops4_a: "Para hacer un círculo: \n\n-   Repetir 360
          ​​veces \n-   Avanzar 1 píxel \n-   Girar a la izquierda 1 grado"
        courseD_artist_nestedLoops4_b: No te olvides de saltar 50 píxeles entre círculos.
        courseD_artist_nestedLoops4_c: Usa un loop anidado para dibujar sus círculos
          4 veces.
      courseD_artist_nestedLoops5_authored_hint:
        courseD_artist_nestedLoops5_a: "Para hacer esto fácilmente: \n\n-   repetir
          4 veces \n-   hacer un círculo \n-   saltar 50 píxeles hacia adelante \n-
          \  girar 90 grados hacia la derecha"
        courseD_artist_nestedLoops5_b: Para hacer un círculo necesitarás establecer
          un loop repetir para repetir 360 veces. Dentro del loop, avanza 1 píxel
          y gira 1 grado.
      courseD_artist_nestedLoops5_2018_authored_hint:
        courseD_artist_nestedLoops5_a: "Para hacer esto fácilmente: \n\n-   repetir
          4 veces \n-   hacer un círculo \n-   saltar 50 píxeles hacia adelante \n-
          \  girar 90 grados hacia la derecha"
        courseD_artist_nestedLoops5_b: Para hacer un círculo necesitarás establecer
          un loop repetir para repetir 360 veces. Dentro del loop, avanza 1 píxel
          y gira 1 grado.
      courseD_artist_nestedLoops5_2019_authored_hint:
        courseD_artist_nestedLoops5_a: "Para hacer esto fácilmente: \n\n-   repetir
          4 veces \n-   hacer un círculo \n-   saltar 50 píxeles hacia adelante \n-
          \  girar 90 grados hacia la derecha"
        courseD_artist_nestedLoops5_b: Para hacer un círculo necesitarás establecer
          un loop repetir para repetir 360 veces. Dentro del loop, avanza 1 píxel
          y gira 1 grado.
      courseD_artist_nestedLoops6_authored_hint:
        courseD_artist_nestedLoops6_a: Tendrá que repetir su ciclo externo 6 veces,
          en lugar de solo 4.
        courseD_artist_nestedLoops6_b: 'Ahora que estás dividiendo 360 grados en seis
          piezas en lugar de cuatro, solo necesitarás girar 60 grados entre círculos. '
      courseD_artist_nestedLoops7_authored_hint:
        courseD_artist_nestedLoops7_a: Tendrás que usar ciclos anidados aquí. Primero,
          usa un ciclo para dibujar un cuadrado. ¿Cómo será el exterior del ciclo
          si el interior del ciclo dibuja un cuadrado?
        courseD_artist_nestedLoops7_b: "Usa un loop anidado, donde el loop interno
          es el código para un cuadrado. \n\n-   repetir 6 veces \n-   hacer cuadrado
          \n-   saltar hacia delante en **50 píxeles** \n-   girar **60 grados**"
      courseD_artist_nestedLoops7_2018_authored_hint:
        courseD_artist_nestedLoops7_a: Tendrás que usar ciclos anidados aquí. Primero,
          usa un ciclo para dibujar un cuadrado. ¿Cómo será el exterior del ciclo
          si el interior del ciclo dibuja un cuadrado?
        courseD_artist_nestedLoops7_b: "Usa un loop anidado, donde el loop interno
          es el código para un cuadrado. \n\n-   repetir 6 veces \n-   hacer cuadrado
          \n-   saltar hacia delante en **50 píxeles** \n-   girar **60 grados**"
      courseD_artist_nestedLoops7_2019_authored_hint:
        courseD_artist_nestedLoops7_a: Tendrás que usar ciclos anidados aquí. Primero,
          usa un ciclo para dibujar un cuadrado. ¿Cómo será el exterior del ciclo
          si el interior del ciclo dibuja un cuadrado?
        courseD_artist_nestedLoops7_b: "Usa un loop anidado, donde el loop interno
          es el código para un cuadrado. \n\n-   repetir 6 veces \n-   hacer cuadrado
          \n-   saltar hacia delante en **50 píxeles** \n-   girar **60 grados**"
      courseD_artist_nestedLoops8_authored_hint:
        courseD_artist_nestedLoops8_a: Para tener 8 hexágonos en tu dibujo, deberá
          girar **45 grados** entre cada uno de ellos. ¿Por qué? Porque 360 ​​grados
          (una vuelta completa) dividido por 8 (el número de hexágonos) es 45 grados.
        courseD_artist_nestedLoops8_b: Si estás atascado, comienza mirando el último
          desafío, luego cambia las cosas que son diferentes.
        courseD_artist_nestedLoops8_c: "Usa un ciclo anidado: \n\n-   Repetir 8 veces
          \n-   dibujar un hexágono \n-   saltar 50 píxeles hacia adelante \n-   girar
          45 grados hacia la derecha"
      courseD_artist_nestedLoops8_2018_authored_hint:
        courseD_artist_nestedLoops8_a: Para tener 8 hexágonos en tu dibujo, deberá
          girar **45 grados** entre cada uno de ellos. ¿Por qué? Porque 360 ​​grados
          (una vuelta completa) dividido por 8 (el número de hexágonos) es 45 grados.
        courseD_artist_nestedLoops8_b: Si estás atascado, comienza mirando el último
          desafío, luego cambia las cosas que son diferentes.
        courseD_artist_nestedLoops8_c: "Usa un ciclo anidado: \n\n-   Repetir 8 veces
          \n-   dibujar un hexágono \n-   saltar 50 píxeles hacia adelante \n-   girar
          45 grados hacia la derecha"
      courseD_artist_nestedLoops8_2019_authored_hint:
        courseD_artist_nestedLoops8_a: Para tener 8 hexágonos en tu dibujo, deberá
          girar **45 grados** entre cada uno de ellos. ¿Por qué? Porque 360 ​​grados
          (una vuelta completa) dividido por 8 (el número de hexágonos) es 45 grados.
        courseD_artist_nestedLoops8_b: Si estás atascado, comienza mirando el último
          desafío, luego cambia las cosas que son diferentes.
        courseD_artist_nestedLoops8_c: "Usa un ciclo anidado: \n\n-   Repetir 8 veces
          \n-   dibujar un hexágono \n-   saltar 50 píxeles hacia adelante \n-   girar
          45 grados hacia la derecha"
      courseD_artist_nestedLoops9_authored_hint:
        courseD_artist_nestedLoops9_a: Comienza usando un loop anidado como lo hiciste
          antes, pero esta vez, hazlo con cuadrados.
        courseD_artist_nestedLoops9_b: Agrega un segundo conjunto de loops anidados
          al final del primer conjunto, pero esta vez usa triángulos.
        courseD_artist_nestedLoops9_c: "Usa dos loops anidados: \n\n-   Repetir 8
          veces \n-   dibujar un cuadrado \n-   saltar 50 píxeles hacia adelante,
          \n-   girar hacia la derecha 45 grados \n-   Repetir 8 veces dibuje un triángulo
          \n-   saltar hacia adelante 50 píxeles \n-   girar a la derecha 45 grados"
      courseD_artist_nestedLoops9_2018_authored_hint:
        courseD_artist_nestedLoops9_a: Comienza usando un loop anidado como lo hiciste
          antes, pero esta vez, hazlo con cuadrados.
        courseD_artist_nestedLoops9_b: Agrega un segundo conjunto de loops anidados
          al final del primer conjunto, pero esta vez usa triángulos.
        courseD_artist_nestedLoops9_c: "Usa dos loops anidados: \n\n-   Repetir 8
          veces \n-   dibujar un cuadrado \n-   saltar 50 píxeles hacia adelante,
          \n-   girar hacia la derecha 45 grados \n-   Repetir 8 veces dibuje un triángulo
          \n-   saltar hacia adelante 50 píxeles \n-   girar a la derecha 45 grados"
      courseD_artist_nestedLoops9_2019_authored_hint:
        courseD_artist_nestedLoops9_a: Comienza usando un loop anidado como lo hiciste
          antes, pero esta vez, hazlo con cuadrados.
        courseD_artist_nestedLoops9_b: Agrega un segundo conjunto de loops anidados
          al final del primer conjunto, pero esta vez usa triángulos.
        courseD_artist_nestedLoops9_c: "Usa dos loops anidados: \n\n-   Repetir 8
          veces \n-   dibujar un cuadrado \n-   saltar 50 píxeles hacia adelante,
          \n-   girar hacia la derecha 45 grados \n-   Repetir 8 veces dibuje un triángulo
          \n-   saltar hacia adelante 50 píxeles \n-   girar a la derecha 45 grados"
      courseD_artist_nestedLoopsFP_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          Esta imagen se hizo utilizando un único loop anidado que repite un hexágono (con 50px lados) 15 veces con un giro de 48 grados.
        courseD_artist_nestedLoopsFP_b: "<img src = \"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\"
          width = \"200px\" /> \n\nEsta imagen se hizo usando un código similar a
          otros niveles que ya has hecho anteriormente, pero con círculos (repita
          360 veces: avance 1, gire 1 grado)."
        courseD_artist_nestedLoopsFP_c: "<img src = \"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\"
          width = \"200px\" /> \n\nEsta imagen se hizo usando un único loop anidado
          que repite un pentágono (con lados de 50px) 15 veces con un giro de 48 grados."
      courseD_artist_nestedLoopsFP_2018_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          Esta imagen se hizo utilizando un único loop anidado que repite un hexágono (con 50px lados) 15 veces con un giro de 48 grados.
        courseD_artist_nestedLoopsFP_b: "<img src = \"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\"
          width = \"200px\" /> \n\nEsta imagen se hizo usando un código similar a
          otros niveles que ya has hecho anteriormente, pero con círculos (repita
          360 veces: avance 1, gire 1 grado)."
        courseD_artist_nestedLoopsFP_c: "<img src = \"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\"
          width = \"200px\" /> \n\nEsta imagen se hizo usando un único loop anidado
          que repite un pentágono (con lados de 50px) 15 veces con un giro de 48 grados."
      courseD_artist_nestedLoopsFP_2019_authored_hint:
        courseD_artist_nestedLoopsFP_a: |-
          <img src="https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png" width="200px"/>

          Esta imagen se hizo utilizando un único loop anidado que repite un hexágono (con 50px lados) 15 veces con un giro de 48 grados.
        courseD_artist_nestedLoopsFP_b: "<img src = \"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\"
          width = \"200px\" /> \n\nEsta imagen se hizo usando un código similar a
          otros niveles que ya has hecho anteriormente, pero con círculos (repita
          360 veces: avance 1, gire 1 grado)."
        courseD_artist_nestedLoopsFP_c: "<img src = \"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\"
          width = \"200px\" /> \n\nEsta imagen se hizo usando un único loop anidado
          que repite un pentágono (con lados de 50px) 15 veces con un giro de 48 grados."
      courseD_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Comienza por cambiar el color a azul,
          luego crea un octágono con lados de 50 píxeles y 45 grados de vuelta a la
          izquierda.
        courseD_artist_nestedLoops_challenge1_b: Agrega el código para cambiar el
          color a verde y haz un triángulo con lados de 50 píxeles y giros a la izquierda
          de 120 grados.
        courseD_artist_nestedLoops_challenge1_c: Después de que hayas dibujado ambas
          formas, tendrás que saltar 50 píxeles hacia delante antes de girar 90 grados
          hacia la derecha.
        courseD_artist_nestedLoops_challenge1_d: Coloca todo tu código dentro de un
          loop `repetir 4 veces` para terminarlo.
      courseD_artist_nestedLoops_challenge1_2018_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Comienza por cambiar el color a azul,
          luego crea un octágono con lados de 50 píxeles y 45 grados de vuelta a la
          izquierda.
        courseD_artist_nestedLoops_challenge1_b: Agrega el código para cambiar el
          color a verde y haz un triángulo con lados de 50 píxeles y giros a la izquierda
          de 120 grados.
        courseD_artist_nestedLoops_challenge1_c: Después de que hayas dibujado ambas
          formas, tendrás que saltar 50 píxeles hacia delante antes de girar 90 grados
          hacia la derecha.
        courseD_artist_nestedLoops_challenge1_d: Coloca todo tu código dentro de un
          loop `repetir 4 veces` para terminarlo.
      courseD_artist_nestedLoops_challenge1_2019_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Comienza por cambiar el color a azul,
          luego crea un octágono con lados de 50 píxeles y 45 grados de vuelta a la
          izquierda.
        courseD_artist_nestedLoops_challenge1_b: Agrega el código para cambiar el
          color a verde y haz un triángulo con lados de 50 píxeles y giros a la izquierda
          de 120 grados.
        courseD_artist_nestedLoops_challenge1_c: Después de que hayas dibujado ambas
          formas, tendrás que saltar 50 píxeles hacia delante antes de girar 90 grados
          hacia la derecha.
        courseD_artist_nestedLoops_challenge1_d: Coloca todo tu código dentro de un
          loop `repetir 4 veces` para terminarlo.
      courseD_artist_nestedLoops_challenge2_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Para dibujar un octágono regular,
          el artista debe girar 45 grados 8 veces.
        courseD_artist_nestedLoops_challenge2_b: Para dibujar un cuadrado, el artista
          debe girar 90 grados 4 veces.
      courseD_artist_nestedLoops_challenge2_2018_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Para dibujar un octágono regular,
          el artista debe girar 45 grados 8 veces.
        courseD_artist_nestedLoops_challenge2_b: Para dibujar un cuadrado, el artista
          debe girar 90 grados 4 veces.
      courseD_artist_nestedLoops_challenge2_2019_authored_hint:
        courseD_artist_nestedLoops_challenge2_a: Para dibujar un octágono regular,
          el artista debe girar 45 grados 8 veces.
        courseD_artist_nestedLoops_challenge2_b: Para dibujar un cuadrado, el artista
          debe girar 90 grados 4 veces.
      courseD_artist_project1_authored_hint:
        courseD_artist_project1_a: Use el menú desplegable en los bloques `turn` para
          elegir el ángulo que necesita!
        courseD_artist_project1_b: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
      courseD_artist_project1_2018_authored_hint:
        courseD_artist_project1_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project1_b: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
      courseD_artist_project1_2019_authored_hint:
        courseD_artist_project1_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project1_b: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
      courseD_artist_project1a_authored_hint:
        courseD_artist_project1a_a: |-
          Este escalón utiliza un giro de 76 grados y se repite 4 veces.

          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los escalones
          de otros desafíos, pero usando un ángulo diferente.
      courseD_artist_project1a_2018_authored_hint:
        courseD_artist_project1a_a: |-
          Este escalón utiliza un giro de 76 grados y se repite 4 veces.

          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los escalones
          de otros desafíos, pero usando un ángulo diferente.
      courseD_artist_project1a_2019_authored_hint:
        courseD_artist_project1a_a: |-
          Este escalón utiliza un giro de 76 grados y se repite 4 veces.

          <img src = "https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width = "200px" />
        courseD_artist_project1a_b: Estos patrones son muy parecidos a los escalones
          de otros desafíos, pero usando un ángulo diferente.
      courseD_artist_project2_authored_hint:
        courseD_artist_project2_a: Recuerda que 'mover adelante' dibuja una línea,
          mientras que 'salta adelante' no.
        courseD_artist_project2_b: Después de dibujar y mover la primera vez, puedes
          repetir el código agregando un loop alrededor del exterior.
      courseD_artist_project2_2018_authored_hint:
        courseD_artist_project2_a: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
        courseD_artist_project2_b: Después de dibujar y mover la primera vez, puedes
          repetir el código agregando un loop alrededor del exterior.
      courseD_artist_project2_2019_authored_hint:
        courseD_artist_project2_a: Recuerda que 'avanzar' dibuja una línea, mientras
          que 'salta adelante' no.
        courseD_artist_project2_b: Después de dibujar y mover la primera vez, puedes
          repetir el código agregando un loop alrededor del exterior.
      courseD_artist_project2a_authored_hint:
        courseD_artist_project2a_a: |-
          Este dibujo se hizo anidando un loop de 4 escalones y un bloque `girar a la derecha 180 grados` dentro de un bloque`repetir 2 veces`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2018_authored_hint:
        courseD_artist_project2a_a: |-
          Este dibujo se hizo anidando un loop de 4 escalones y un bloque `girar a la derecha 180 grados` dentro de un bloque`repetir 2 veces`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2019_authored_hint:
        courseD_artist_project2a_a: |-
          Este dibujo se hizo anidando un loop de 4 escalones y un bloque `girar a la derecha 180 grados` dentro de un bloque`repetir 2 veces`.

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project3_authored_hint:
        courseD_artist_project3_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project3_b: "¡Prueba los bucles anidados! \n\nUsa el código
          que creaste para dibujar una línea de formas y anidara dentro de otro bucle.
          En la parte inferior, antes de que termine el bucle exterior, agrega un
          bloque que hará girar a Elsa.   \n\n-   Prueba con 72 grados si repites
          el bucle externo 5 veces \n-   Prueba con 60 grados si repites el bucle
          externo 6 veces"
      courseD_artist_project3_2018_authored_hint:
        courseD_artist_project3_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project3_b: "¡Prueba los bucles anidados! \n\nUsa el código
          que creaste para dibujar una línea de formas y anidara dentro de otro bucle.
          En la parte inferior, antes de que termine el bucle exterior, agrega un
          bloque que hará girar a Elsa.   \n\n-   Prueba con 72 grados si repites
          el bucle externo 5 veces \n-   Prueba con 60 grados si repites el bucle
          externo 6 veces"
      courseD_artist_project3_2019_authored_hint:
        courseD_artist_project3_a: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_project3_b: "¡Prueba los bucles anidados! \n\nUsa el código
          que creaste para dibujar una línea de formas y anidara dentro de otro bucle.
          En la parte inferior, antes de que termine el bucle exterior, agrega un
          bloque que hará girar a Elsa.   \n\n-   Prueba con 72 grados si repites
          el bucle externo 5 veces \n-   Prueba con 60 grados si repites el bucle
          externo 6 veces"
      courseD_artist_project3a_authored_hint:
        courseD_artist_project3a_a: "¡Puedes elegir diferentes cantidades para rotar
          tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?"
      courseD_artist_project3a_2018_authored_hint:
        courseD_artist_project3a_a: "¡Puedes elegir diferentes cantidades para rotar
          tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?"
      courseD_artist_project3a_2019_authored_hint:
        courseD_artist_project3a_a: "¡Puedes elegir diferentes cantidades para rotar
          tu forma! ¿Qué tal 18 veces con un giro de 20 grados en el medio?"
      courseD_artist_project4_authored_hint:
        courseD_artist_project4_a: "Este es el copo de nieve pentagonal con un giro
          de 36 grados antes de un copo de nieve triangular:\n\n <img src = \"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\"
          width = \"200px\" /> \n\nEste es un conjunto de hexágonos con cuadrados:\n\n
          <img src = \"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\"
          width = \"200px\" />"
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve,
          gira y luego dibuja un segundo copo de nieve.
      courseD_artist_project4_2018_authored_hint:
        courseD_artist_project4_a: "Este es el copo de nieve pentagonal con un giro
          de 36 grados antes de un copo de nieve triangular:\n\n <img src = \"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\"
          width = \"200px\" /> \n\nEste es un conjunto de hexágonos con cuadrados:\n\n
          <img src = \"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\"
          width = \"200px\" />"
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve,
          gira y luego dibuja un segundo copo de nieve.
      courseD_artist_project4_2019_authored_hint:
        courseD_artist_project4_a: "Este es el copo de nieve pentagonal con un giro
          de 36 grados antes de un copo de nieve triangular:\n\n <img src = \"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\"
          width = \"200px\" /> \n\nEste es un conjunto de hexágonos con cuadrados:\n\n
          <img src = \"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\"
          width = \"200px\" />"
        courseD_artist_project4_b: Para probar esto, dibuja tu primer copo de nieve,
          gira y luego dibuja un segundo copo de nieve.
      courseD_artist_project4a_authored_hint:
        courseD_artist_project4a_a: |-
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018_authored_hint:
        courseD_artist_project4a_a: |-
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2019_authored_hint:
        courseD_artist_project4a_a: |-
          Aquí hay dos longitudes diferentes de copo de nieve, dibujadas una tras otra (con un giro de 30 grados en el medio).
          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5_authored_hint:
        courseD_artist_project4_a: |-
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018_authored_hint:
        courseD_artist_project4_a: |-
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2019_authored_hint:
        courseD_artist_project4_a: |-
          Líneas de 2 hexágonos y 4 triángulos:
          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: Para dibujar un lado, utiliza el bloque `avanzar 100
          pixeles`, y cambiar el 100 a un 200.
        courseD_artist_ramp11b: "Para dibujar 4 lados, pon un bloque`avanzar 200 píxeles`
          dentro de un loop repetir y asegúrate que el loop se ajuste a dibujar 4
          veces. \n\n¡No olvides girar después!"
        courseD_artist_ramp11_c: "¡Recuerda colocar el bloque `girar` dentro del loop!"
      courseD_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: "¡Puedes dibujar primero el cuadrado, luego el triángulo
          o hacerlo al revés!"
        courseD_artist_ramp12_b: Intenta dividir el problema en 2 partes y usar 2
          loops.
        courseD_artist_ramp12_c: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
      courseD_autorun_binary2_2019_authored_hint:
        courseD_artist_binary2_a: "¡Simplemente haz clic en 'Ejecutar' para ver este
          programa en acción!"
      courseD_autorun_binary3_2019_authored_hint:
        courseD_artist_binary3_a: "¡Uno de los cuatro patrones binarios en la caja
          de herramientas resolverá este desafío!"
        courseD_artist_binary3_b: "¡No tengas miedo de cometer un error! Intenta escribir
          binario y ejecuta el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseD_autorun_binary4_2019_authored_hint:
        courseD_artist_binary4_a: Mira los primeros tres cuadrados en la fila superior.
          ¿Podrías repetir estos tres para obtener el patrón completo?
        courseD_artist_binary4_b: "¡No tengas miedo de cometer un error! Intenta escribir
          código binario y ejecuta el código para ver qué sucederá, incluso si no
          crees que ya has resuelto el enigma."
      courseD_autorun_binary5_2019_authored_hint:
        courseD_artist_binary5_a: Intenta ejecutar el código primero para ver con
          qué tienes que trabajar.
        courseD_artist_binary5_b: Solo necesitas cambiar dos filas para hacer una
          sonrisa.
        courseD_artist_binary5_c: Si tienes problemas para descifrar este desafío,
          intenta escribir las líneas binarias en un pedazo de papel y busca un patrón.
      courseD_autorun_binary6_2019_authored_hint:
        courseD_artist_binary6_a: Comienza en la parte superior izquierda. ¿Qué tan
          lejos debes leer antes de que el patrón comience a repetirse?
        courseD_artist_binary6_b: "¡Puedes construir tu cadena binaria un poquito
          a la vez y seguir probando!"
      courseD_autorun_binary7_2019_authored_hint:
        courseD_artist_binary7_a: Comienza en la parte superior izquierda. ¿Qué tan
          lejos debes leer antes de que el patrón comience a repetirse?
        courseD_artist_binary7_b: "¡No tengas miedo de cometer un error! Intenta escribir
          código binario y ejecuta el código para ver qué sucederá, incluso si no
          crees que ya has resuelto el enigma."
      courseD_autorun_binary8_2019_authored_hint:
        courseD_artist_binary8_a: La espiral puede ser confusa a veces. Aísla cada
          línea horizontal en tu mente mientras creas este diseño.
        courseD_artist_binary8_b: Intenta ejecutar el código primero para ver con
          qué tienes que trabajar.
        courseD_artist_binary8_c: "¡No tengas miedo de cometer un error! Intenta escribir
          binario y ejecuta el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseD_bee_conditionals1_authored_hint:
        courseD_bee_conditionals1_a: Usted tendrá que utilizar un bloque `si` para
          comprobar si hay una flor debajo de la nube antes de tratar de obtener el
          néctar.
      courseD_bee_conditionals1_predict1_authored_hint:
        courseD_bee_conditionals1_a: Usted tendrá que utilizar un bloque `si` para
          comprobar si hay una flor debajo de la nube antes de tratar de obtener el
          néctar.
      courseD_bee_conditionals1_predict1_2018_authored_hint:
        courseD_bee_conditionals1_a: Usted tendrá que utilizar un bloque `si` para
          comprobar si hay una flor debajo de la nube antes de tratar de obtener el
          néctar.
      courseD_bee_conditionals1_predict1_2019_authored_hint:
        courseD_bee_conditionals1_a: Usted tendrá que utilizar un bloque `si` para
          comprobar si hay una flor debajo de la nube antes de tratar de obtener el
          néctar.
      courseD_bee_conditionals2_authored_hint:
        courseD_bee_conditionals2_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si
          quieres que tu código se ejecute en ambos casos, asegúrate de utilizar una
          afirmación  `si`.
        courseD_bee_conditionals2_b: Puedes usar un loop 'repetir' o un 'mientras
          camino por delante' para moverse a través de este laberinto.
        courseD_bee_conditionals2_c: No tienes buscar panales, solo habrá flores o
          espacios en blanco debajo de las nubes.
        courseD_bee_conditionals2_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals2_2018_authored_hint:
        courseD_bee_conditionals2_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si
          quieres que tu código se ejecute en ambos casos, asegúrate de utilizar una
          afirmación  `si`.
        courseD_bee_conditionals2_b: Puedes usar un loop 'repetir' o un 'mientras
          camino por delante' para moverse a través de este laberinto.
        courseD_bee_conditionals2_c: No tienes buscar panales, solo habrá flores o
          espacios en blanco debajo de las nubes.
        courseD_bee_conditionals2_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals2_2019_authored_hint:
        courseD_bee_conditionals2_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si
          quieres que tu código se ejecute en ambos casos, asegúrate de utilizar una
          afirmación  `si`.
        courseD_bee_conditionals2_b: Puedes usar un loop 'repetir' o un 'mientras
          camino por delante' para moverse a través de este laberinto.
        courseD_bee_conditionals2_c: No tienes buscar panales, solo habrá flores o
          espacios en blanco debajo de las nubes.
        courseD_bee_conditionals2_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals2_test_authored_hint:
        courseD_bee_conditionals2_aa: "¿Necesita ayuda para comenzar? Aquí hay un
          pequeño vídeo de sugerencia."
        courseD_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si
          quieres que tu código se ejecute en ambos casos, asegúrate de utilizar un
          `si` comunicado.
        courseD_bee_conditionals2_b: Puede usar un bucle 'repetición' o un 'mientras
          camino por delante' para moverse a través de este laberinto.
        courseD_bee_conditionals2_c: No hay que comprobar si hay panales, solo habrá
          flores o espacios en blanco debajo de las nubes.
        courseD_bee_conditionals2_d: "¿Necesitas ayuda para terminar las cosas? Mire
          este video de sugerencia."
      courseD_bee_conditionals3_authored_hint:
        courseD_bee_conditionals3_hintVid1: "¿Necesita ayuda para comenzar? ¡Ver el
          vídeo!"
        courseD_bee_conditionals3_a: Asegúrate de usar una afirmación 'si' para verificar
          cada espacio para ver sí tiene una flor o nada.
        courseD_bee_conditionals3_b: Puedes utilizar un loop 'repetir' o un loop 'mientras'
          para que la abeja se mantenga en movimiento. ¡Usa el que más te guste!
        courseD_bee_conditionals3_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
        courseD_bee_conditionals3_hintVid2: Mire este vídeo para ayudar a resolver
          este rompecabezas.
      courseD_bee_conditionals3_2018_authored_hint:
        courseD_bee_conditionals3_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals3_a: Asegúrate de usar una afirmación 'si' para verificar
          cada espacio para ver sí tiene una flor o nada.
        courseD_bee_conditionals3_b: Puedes utilizar un loop 'repetir' o un loop 'mientras'
          para que la abeja se mantenga en movimiento. ¡Usa el que más te guste!
        courseD_bee_conditionals3_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
        courseD_bee_conditionals3_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals3_2019_authored_hint:
        courseD_bee_conditionals3_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals3_a: Asegúrate de usar una afirmación 'si' para verificar
          cada espacio para ver sí tiene una flor o nada.
        courseD_bee_conditionals3_b: Puedes utilizar un loop 'repetir' o un loop 'mientras'
          para que la abeja se mantenga en movimiento. ¡Usa el que más te guste!
        courseD_bee_conditionals3_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
        courseD_bee_conditionals3_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_hintVid1: "¿Necesita ayuda para comenzar? ¡Ver el
          vídeo!"
        courseD_bee_conditionals4_a: Todavía puedes tratar cada espacio como si hubiera
          una nube sobre él, aunque puedas ver todo el camino.
        courseD_bee_conditionals4_b: 'Usa una afirmación \`si'' dentro de tu loop
          para comprobar si hay néctar en cada espacio. '
        courseD_bee_conditionals4_c: Usando un bloque <xml><block type="maze_untilBlocked"/></xml>,
          debes avanzar y comprobar si hay una flor. Si hay una flor, ¿qué debería
          hacer la abeja?
        courseD_bee_conditionals4_hintVid2: Mire este video para ayudar a resolver
          este rompecabezas.
      courseD_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals4_a: Todavía puedes tratar cada espacio como si hubiera
          una nube sobre él, aunque puedas ver todo el camino.
        courseD_bee_conditionals4_b: 'Usa una afirmación \`si'' dentro de tu loop
          para comprobar si hay néctar en cada espacio. '
        courseD_bee_conditionals4_c: Usando un bloque <xml><block type="maze_untilBlocked"/></xml>,
          debes avanzar y comprobar si hay una flor. Si hay una flor, ¿qué debería
          hacer la abeja?
        courseD_bee_conditionals4_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals4_2019_authored_hint:
        courseD_bee_conditionals4_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals4_a: Todavía puedes tratar cada espacio como si hubiera
          una nube sobre él, aunque puedas ver todo el camino.
        courseD_bee_conditionals4_b: 'Usa una afirmación \`si'' dentro de tu loop
          para comprobar si hay néctar en cada espacio. '
        courseD_bee_conditionals4_c: Usando un bloque <xml><block type="maze_untilBlocked"/></xml>,
          debes avanzar y comprobar si hay una flor. Si hay una flor, ¿qué debería
          hacer la abeja?
        courseD_bee_conditionals4_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals5_authored_hint:
        courseD_bee_conditionals5_hintVid1: "¿Necesita ayuda para comenzar? ¡Ver el
          vídeo!"
        courseD_bee_conditionals5_a: Piensa en cada lado de la ruta rectangular como
          un camino en sí mismo. Configura un loop anidado con un bloque `repetir`
          en el exterior y un ciclo`cuando hay un camino por delante` en el interior.
          ¿Cuántos caminos necesita recorrer la abeja si la abeja necesita recorrer
          cada lado con una flor?
        courseD_bee_conditionals5_c: Hay 3 lados del rectángulo con flores, por lo
          que el código se debe `repetir 3 veces`. En cada repetición, la abeja deberá
          continuar por el camino, "mientras haya un camino por delante". Para continuar
          por el camino, la abeja deberá 'avanzar'. Mientras que en el camino, la
          abeja tiene que comprobar si hay una flor. `si hay una flor`, la abeja debería`obtener
          néctar`.
        courseD_bee_conditionals5_b: En el interior del bloque`mientras que hay un
          camino adelante` tendrás que seguir adelante y comprobar si hay una flor.
          ¿Cómo se comprueba si hay una flor? ¿Qué haces si hay una flor?
        courseD_bee_conditionals5_hintVid2: Mire este video para ayudar a resolver
          este rompecabezas.
      courseD_bee_conditionals5_2018_authored_hint:
        courseD_bee_conditionals5_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals5_a: Piensa en cada lado de la ruta rectangular como
          un camino en sí mismo. Configura un loop anidado con un bloque `repetir`
          en el exterior y un ciclo`cuando hay un camino por delante` en el interior.
          ¿Cuántos caminos necesita recorrer la abeja si la abeja necesita recorrer
          cada lado con una flor?
        courseD_bee_conditionals5_c: Hay 3 lados del rectángulo con flores, por lo
          que el código se debe `repetir 3 veces`. En cada repetición, la abeja deberá
          continuar por el camino, "mientras haya un camino por delante". Para continuar
          por el camino, la abeja deberá 'avanzar'. Mientras que en el camino, la
          abeja tiene que comprobar si hay una flor. `si hay una flor`, la abeja debería`obtener
          néctar`.
        courseD_bee_conditionals5_b: En el interior del bloque`mientras que hay un
          camino adelante` tendrás que seguir adelante y comprobar si hay una flor.
          ¿Cómo se comprueba si hay una flor? ¿Qué haces si hay una flor?
        courseD_bee_conditionals5_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals5_2019_authored_hint:
        courseD_bee_conditionals5_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals5_a: Piensa en cada lado de la ruta rectangular como
          un camino en sí mismo. Configura un loop anidado con un bloque `repetir`
          en el exterior y un ciclo`cuando hay un camino por delante` en el interior.
          ¿Cuántos caminos necesita recorrer la abeja si la abeja necesita recorrer
          cada lado con una flor?
        courseD_bee_conditionals5_c: Hay 3 lados del rectángulo con flores, por lo
          que el código se debe `repetir 3 veces`. En cada repetición, la abeja deberá
          continuar por el camino, "mientras haya un camino por delante". Para continuar
          por el camino, la abeja deberá 'avanzar'. Mientras que en el camino, la
          abeja tiene que comprobar si hay una flor. `si hay una flor`, la abeja debería`obtener
          néctar`.
        courseD_bee_conditionals5_b: En el interior del bloque`mientras que hay un
          camino adelante` tendrás que seguir adelante y comprobar si hay una flor.
          ¿Cómo se comprueba si hay una flor? ¿Qué haces si hay una flor?
        courseD_bee_conditionals5_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals6_authored_hint:
        courseD_bee_conditionals6_hintVid1: "¿Necesita ayuda para comenzar? ¡Ver el
          vídeo!"
        courseD_bee_conditionals6_a: Asegúrate de utilizar una afirmación \`si' para
          comprobar si hay panales debajo de cada nube.
        courseD_bee_conditionals6_b: En este caso, no necesitas verificar si hay flores
          debajo de las nubes.
        courseD_bee_conditionals6_c: "¿Hay algún loop que puedas usar para simplificar
          tu código?"
        courseD_bee_conditionals6_hintVid2: Mire este video para ayudar a resolver
          este rompecabezas.
      courseD_bee_conditionals6_2018_authored_hint:
        courseD_bee_conditionals6_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals6_a: Asegúrate de utilizar una afirmación \`si' para
          comprobar si hay panales debajo de cada nube.
        courseD_bee_conditionals6_b: En este caso, no necesitas verificar si hay flores
          debajo de las nubes.
        courseD_bee_conditionals6_c: "¿Hay algún loop que puedas usar para simplificar
          tu código?"
        courseD_bee_conditionals6_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals6_2019_authored_hint:
        courseD_bee_conditionals6_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals6_a: Asegúrate de utilizar una afirmación \`si' para
          comprobar si hay panales debajo de cada nube.
        courseD_bee_conditionals6_b: En este caso, no necesitas verificar si hay flores
          debajo de las nubes.
        courseD_bee_conditionals6_c: "¿Hay algún loop que puedas usar para simplificar
          tu código?"
        courseD_bee_conditionals6_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals7_authored_hint:
        courseD_bee_conditionals7_hintVid1: "¿Necesita ayuda para comenzar? ¡Ver el
          vídeo!"
        courseD_bee_conditionals7_a: "\\*\\* Recuerda: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si / si no`) para resolver el desafío."
        courseD_bee_conditionals7_b: Si no hay una flor debajo de la nube, debe haber
          un panal, por lo que no necesitas pensar en el caso que sea un espacio vacío.
        courseD_bee_conditionals7_hintVid2: Mire este video para ayudar a resolver
          este rompecabezas.
      courseD_bee_conditionals7_2018_authored_hint:
        courseD_bee_conditionals7_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals7_a: "\\*\\* Recuerda: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si / si no`) para resolver el desafío."
        courseD_bee_conditionals7_b: Si no hay una flor debajo de la nube, debe haber
          un panal, por lo que no necesitas pensar en el caso que sea un espacio vacío.
        courseD_bee_conditionals7_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals7_2019_authored_hint:
        courseD_bee_conditionals7_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals7_a: "\\*\\* Recuerda: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si / si no`) para resolver el desafío."
        courseD_bee_conditionals7_b: Si no hay una flor debajo de la nube, debe haber
          un panal, por lo que no necesitas pensar en el caso que sea un espacio vacío.
        courseD_bee_conditionals7_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals7_predict2_authored_hint:
        courseD_bee_conditionals7_a: "\\*\\* Recuerde: \\*\\* Este rompecabezas  cambia
          cada vez que se ejecuta. \nQuerrá   usar un bloque condicional (`if / else`)
          para resolver el desafío."
      courseD_bee_conditionals7_predict2_2018_authored_hint:
        courseD_bee_conditionals7_a: "\\*\\* Recuerda: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si / si no`) para resolver el desafío."
      courseD_bee_conditionals7_predict2_2019_authored_hint:
        courseD_bee_conditionals7_a: "\\*\\* Recuerda: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si / si no`) para resolver el desafío."
      courseD_bee_conditionals8_authored_hint:
        courseD_bee_conditionals8_hintVid1: "¿Necesita ayuda para comenzar? ¡Ver el
          vídeo!"
        courseD_bee_conditionals8_a: "\\*\\* Recuerde: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si /si no`) para resolver el desafío."
        courseD_bee_conditionals8_b: "Este desafío es engañoso, porque no puedes verificar
          cuadrados en blanco, néctar, \\* y \\* miel con sólo un único condicional.
          \n\nSólo comprueba si hay néctar y miel al final de tu camino."
        courseD_bee_conditionals8_c: "¿Cómo puedes asegurarte de viajar al final de
          cada camino, sin importar qué tan largo sea el camino?"
        courseD_bee_conditionals8_d: "Aunque hay una nube justo frente a ti, no tienes
          que visitarla primero. Intenta comenzar con la nube en la parte inferior
          derecha del cuadrado. \n\n!\\[] (<https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png>)"
        courseD_bee_conditionals8_hintVid2: Mire este video para ayudar a resolver
          este rompecabezas.
      courseD_bee_conditionals8_2018_authored_hint:
        courseD_bee_conditionals8_hintVid1: "¿Necesitas ayuda para comenzar? ¡Ve el
          vídeo!"
        courseD_bee_conditionals8_a: "\\*\\* Recuerde: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si /si no`) para resolver el desafío."
        courseD_bee_conditionals8_b: "Este desafío es engañoso, porque no puedes verificar
          cuadrados en blanco, néctar, \\* y \\* miel con sólo un único condicional.
          \n\nSólo comprueba si hay néctar y miel al final de tu camino."
        courseD_bee_conditionals8_c: "¿Cómo puedes asegurarte de viajar al final de
          cada camino, sin importar qué tan largo sea el camino?"
        courseD_bee_conditionals8_d: "Aunque hay una nube justo frente a ti, no tienes
          que visitarla primero. Intenta comenzar con la nube en la parte inferior
          derecha del cuadrado. \n\n!\\[] (<https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png>)"
        courseD_bee_conditionals8_hintVid2: Mire este vídeo para ayudar a resolver
          este desafío.
      courseD_bee_conditionals8_2019_authored_hint:
        courseD_bee_conditionals8_a: "\\*\\* Recuerde: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si /si no`) para resolver el desafío."
        courseD_bee_conditionals8_b: "Este desafío es engañoso, porque no puedes verificar
          cuadrados en blanco, néctar, \\* y \\* miel con sólo un único condicional.
          \n\nSólo comprueba si hay néctar y miel al final de tu camino."
      courseD_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: "¿Puedes encontrar un camino que llegue
          a cada flor y panal sin golpear ningún árbol? El mejor camino es una espiral."
        courseD_bee_conditionals_challenge1_b: En este rompecabezas, cada espacio
          podría tener una flor, un panal de miel o nada. Eso significa que puedes
          repetir tu condicional `si/si no` en cada cuadrado.
      courseD_bee_conditionals_challenge1_2018_authored_hint:
        courseD_bee_conditionals_challenge1_a: "¿Puedes encontrar un camino que llegue
          a cada flor y panal sin golpear ningún árbol? El mejor camino es una espiral."
        courseD_bee_conditionals_challenge1_b: En este rompecabezas, cada espacio
          podría tener una flor, un panal de miel o nada. Eso significa que puedes
          repetir tu condicional `si/si no` en cada cuadrado.
      courseD_bee_conditionals_challenge1_2019_authored_hint:
        courseD_bee_conditionals_challenge1_a: "¿Puedes encontrar un camino que llegue
          a cada flor y panal sin golpear ningún árbol? El mejor camino es una espiral."
        courseD_bee_conditionals_challenge1_b: En este rompecabezas, cada espacio
          podría tener una flor, un panal de miel o nada. Eso significa que puedes
          repetir tu condicional `si/si no` en cada cuadrado.
      courseD_bee_conditionals_challenge2_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques `si en una flor`, el código dentro de un `mientras néctar > 0` solo se ejecutará si la abeja está en una flor. La diferencia es que este código se ejecutará una y otra vez hasta que no quede néctar. Prueba este patrón:

          <xml>  <block type="bee_whileNectarAmount">

          <title name="ARG1">nectarRemaining</title>
          <title name="OP">></title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge2_2018_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques `si en una flor`, el código dentro de un `mientras néctar > 0` solo se ejecutará si la abeja está en una flor. La diferencia es que este código se ejecutará una y otra vez hasta que no quede néctar. Prueba este patrón:

          <xml>  <block type="bee_whileNectarAmount">

          <title name="ARG1">nectarRemaining</title>
          <title name="OP">></title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge2_2019_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques `si en una flor`, el código dentro de un `mientras néctar > 0` solo se ejecutará si la abeja está en una flor. La diferencia es que este código se ejecutará una y otra vez hasta que no quede néctar. Prueba este patrón:

          <xml>  <block type="bee_whileNectarAmount">

          <title name="ARG1">nectarRemaining</title>
          <title name="OP">></title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge3_authored_hint:
        courseD_bee_conditionals_challenge1_b: |-
          Al igual que los bloques `si en una flor`, el código dentro de un `mientras néctar> 0` solo se ejecutará si la abeja está en una flor. La diferencia es que el código interno se ejecutará una y otra vez hasta que no quede néctar. Prueba este patrón:

          <xml>  <block type="bee_whileNectarAmount">

          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_debugging1_authored_hint:
        courseD_bee_debugging1_a: "Usa el botón \"Paso\" para ver si todo está bien
          en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_bee_debugging1_b: "¿Ha observado algunos patrones que podrían ser
          hechos más simple usando un ciclo de repetición?"
      courseD_bee_debugging2_authored_hint:
        courseD_bee_debugging2_a: Use el botón "Paso" para ver si todo está bien en
          el primer paso. ¿Qué tal el segundo? ¿Dónde va mal?
        courseD_bee_debugging2_b: "¿Ves un patrón?  \nIntenta usar loops anidados
          para resolver este desafío. \n\n!\\[] (<https://images.code.org/72fbb8a06937479599b12804f990a0f3-image-1501012383369.50.27.png>)"
      courseD_bee_debugging3_authored_hint:
        courseD_bee_debugging3_a: "¿Hay algún lugar donde la abeja haga algo que no
          tiene sentido? ¿Qué pasa cuando cambias esos bloques?"
        courseD_bee_debugging3_b: Intenta simplificar el código utilizando loops anidados.
      courseD_bee_debugging4_authored_hint:
        courseD_bee_debugging4_a: "Intenta utilizar el proceso de depuración varias
          veces seguidas. \n\n¿Qué causa el primer problema? \n\nUna vez que se resuelve
          ese problema, ¿qué sale mal?"
        courseD_bee_debugging4_b: "Si tienes dificultades para descubrir cómo hacer
          el patrón de escalón, intenta trazarlo con el dedo y decir los comandos
          en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_bee_debugging5_authored_hint:
        courseD_bee_debugging5_a: Comienza mirando sólo el primer loop. ¿Qué hace?
          ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_bee_debugging5_b: Una vez que tengas el primer loop como lo deseas,
          ¿Qué queda en tu código?
        courseD_bee_debugging5_c: |-
          Intente envolver el ciclo sobrante alrededor del resto de su código completo. ¿funciona ahora?

          Si no, ¿qué sigue andando mal?
      courseD_bee_debugging6_authored_hint:
        courseD_bee_debugging6_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        courseD_bee_debugging6_b: Parece que todos los pasos correctos están aquí,
          solo necesita más de ellos. ¿Cómo puedes repetir las acciones `get néctar`
          y`make honey` varias veces?
      courseD_bee_debugging7_authored_hint:
        courseD_bee_debugging7_a: "Intenta usar el botón \"Paso\". ¿Está todo bien
          en el primer paso?   \n\n¿Qué tal el segundo?   \n\n¿Dónde va mal?  "
        courseD_bee_debugging7_b: Si algo tiene que ocurrir varias veces, trate de
          añadir un ciclo de repetición.
      courseD_bee_debugging8_authored_hint:
        courseD_bee_debugging8_a: "¿Ves un patrón que puedes simplificar con un loop?"
        courseD_bee_debugging8_b: Trata de usar un loop anidado para hacer el código
          más corto.
      courseD_bee_debugging9_authored_hint:
        courseD_bee_debugging9_a: Hay varias formas de resolver este problema... ¡pero
          todas involucran giros!
        courseD_bee_debugging9_b: Averigua cómo resolverías el acertijo, luego muévete
          paso a paso para intentar que el código coincida con lo que tienes en la
          cabeza.
        courseD_bee_debugging9_c: "Visualice uno de estos escalones hacia las flores.
          \   \n\n! \\[] (<https://images.code.org/d3dfd710961b9ff8571816a97d76ae46-image-1501012931437.59.18.png>)
          ¿Puedes construir cualquiera de estos con lo que está en el área de trabajo
          y en la caja de herramientas?"
      courseD_bee_debugging_challenge1_authored_hint:
        courseD_bee_debugging_challenge1_a: "¿Por qué funciona la primera mitad de
          este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto
          néctar recoge la abeja cada vez que se mueve sobre una flor?"
        courseD_bee_debugging_challenge1_b: En el camino de regreso, haz que la abeja
          siga el mismo patrón. ¿Cuánta miel necesita la abeja para hacer cada vez
          que se mueve sobre un panal de miel?
        courseD_bee_debugging_challenge1_c: "Después de que la abeja llegue a la fila
          inferior, haz que repita estos comandos: \n\n-   Repetir 2 veces: \n-   Avanzar
          \n-   Hacer 3 mieles \n-   Retroceder"
      courseD_bee_debugging_challenge1_2018_authored_hint:
        courseD_bee_debugging_challenge1_a: "¿Por qué funciona la primera mitad de
          este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto
          néctar recoge la abeja cada vez que se mueve sobre una flor?"
        courseD_bee_debugging_challenge1_b: En el camino de regreso, haz que la abeja
          siga el mismo patrón. ¿Cuánta miel necesita la abeja para hacer cada vez
          que se mueve sobre un panal de miel?
        courseD_bee_debugging_challenge1_c: "Después de que la abeja llegue a la fila
          inferior, haz que repita estos comandos: \n\n-   Repetir 2 veces: \n-   Avanzar
          \n-   Hacer 3 mieles \n-   Retroceder"
      courseD_bee_debugging_challenge1a_authored_hint:
        courseD_bee_debugging_challenge1_a: "¿Por qué funciona la primera mitad de
          este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto
          néctar recoge la abeja cada vez que se mueve sobre una flor?"
        courseD_bee_debugging_challenge1_b: Para resolver este desafío, haz que la
          abeja siga el mismo patrón para hacer miel que cuando recolecta néctar.
        courseD_bee_debugging_challenge1_c: |-
          Después de que la abeja llegue a la fila inferior, haz que repita estos comandos:

          <xml><block type="controls_repeat">

          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block></xml>
      courseD_bee_debugging_challenge2_authored_hint:
        courseD_bee_debugging_challenge1_a: "¿Por qué funciona la primera mitad de
          este programa? Piensa por qué la abeja necesita moverse hacia atrás. ¿Cuánto
          néctar recoge la abeja cada vez que se mueve sobre una flor?"
        courseD_bee_debugging_challenge1_b: En el camino de regreso, haz que la abeja
          siga el mismo patrón. ¿Cuánta miel necesita la abeja para hacer cada vez
          que se mueve sobre un panal de miel?
        courseD_bee_debugging_challenge1_c: 'Después de que la abeja llegue a la fila
          inferior, haz que repita estos comandos: \* Repite 2 veces: \* Avanza \*
          Haz 3 mieles \* Mueve hacia atrás'
      courseD_bee_nestedLoops1_authored_hint:
        courseD_bee_nestedLoops1_a: ¿No funciona? Intenta usar el botón "Paso" para
          ver lo que sucede línea por línea.
        courseD_bee_nestedLoops1_b: Intenta escribir código para un lado del cuadrado
          primero. ¿Puedes hacer un loop para obtener todo el néctar?
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez
          que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops1_2018_authored_hint:
        courseD_bee_nestedLoops1_a: ¿No funciona? Intenta usar el botón "Paso" para
          ver lo que sucede línea por línea.
        courseD_bee_nestedLoops1_b: Intenta escribir código para un lado del cuadrado
          primero. ¿Puedes hacer un loop para obtener todo el néctar?
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez
          que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops1_2019_authored_hint:
        courseD_bee_nestedLoops1_a: ¿No funciona? Intenta usar el botón "Paso" para
          ver lo que sucede línea por línea.
        courseD_bee_nestedLoops1_b: Intenta escribir código para un lado del cuadrado
          primero. ¿Puedes hacer un loop para obtener todo el néctar?
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez
          que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops1a_authored_hint:
        courseD_bee_nestedLoops1_a: ¿No funciona? Intenta usar el botón "Paso" para
          ver lo que sucede línea por línea.
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez
          que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops1a_2018_authored_hint:
        courseD_bee_nestedLoops1_a: ¿No funciona? Intenta usar el botón "Paso" para
          ver lo que sucede línea por línea.
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez
          que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops1a_2019_authored_hint:
        courseD_bee_nestedLoops1_a: ¿No funciona? Intenta usar el botón "Paso" para
          ver lo que sucede línea por línea.
        courseD_bee_nestedLoops1_c: Recuerda usar el bloque `obtener néctar` una vez
          que estés en un cuadrado con una flor.
      courseD_bee_nestedLoops2_authored_hint:
        courseD_bee_nestedLoops2_a: Para resolver este desafío, deberás anidar un
          loop 'repetir' dentro de otro.
        courseD_bee_nestedLoops2_b: "¿No puedes averiguar dónde colocar los loop?
          Trata de escribir el código en el papel paso a paso y buscar un patrón."
        courseD_bee_nestedLoops2_c: Recuerda que puedes poner más de un bloque dentro
          de un loop.
      courseD_bee_nestedLoops2_2018_authored_hint:
        courseD_bee_nestedLoops2_a: Para resolver este desafío, deberás anidar un
          loop 'repetir' dentro de otro.
        courseD_bee_nestedLoops2_b: "¿No puedes averiguar dónde colocar los loop?
          Trata de escribir el código en el papel paso a paso y buscar un patrón."
        courseD_bee_nestedLoops2_c: Recuerda que puedes poner más de un bloque dentro
          de un loop.
      courseD_bee_nestedLoops2_2019_authored_hint:
        courseD_bee_nestedLoops2_a: Para resolver este desafío, deberás anidar un
          loop 'repetir' dentro de otro.
        courseD_bee_nestedLoops2_b: "¿No puedes averiguar dónde colocar los loop?
          Trata de escribir el código en el papel paso a paso y buscar un patrón."
        courseD_bee_nestedLoops2_c: Recuerda que puedes poner más de un bloque dentro
          de un loop.
      courseD_bee_nestedLoops3_authored_hint:
        grade4_bee_nestedLoops1_a: Si no entiendes cómo usar los loops anidados aquí,
          intenta escribir las instrucciones paso a paso en un pedazo de papel. Encierra
          en un círculo los patrones que ves.
      courseD_bee_nestedLoops5_authored_hint:
        grade4_bee_nestedLoops4_a: Intente construir su código línea por línea y vea
          si puede detectar los lugares donde una repetición hará que el código sea
          más corto!
        grade4_bee_nestedLoops4_b: Necesitarás un ciclo anidado para avanzar y obtener
          néctar, pero solo un ciclo para recolectar miel al final. En total, deberías
          usar 3 ciclos.
      courseD_bee_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: Si estas atorado, intenta escribir el código
          sin loops primero y busca patrones.
        courseD_maze_nestedLoops6_b: Anidar loops 'repetir' puede ayudar a disminuir
          la cantidad de bloques utilizados.
        courseD_maze_nestedLoops6_c: Tomará dos pares de loops 'repetir' anidados
          para resolver este desafío.
      courseD_bee_nestedLoops7_authored_hint:
        courseD_bee_nestedLoops7_a: Necesitarás repetir `obtener néctar` dentro de
          otro 'repetir' que también tenga el bloque `avanzar` dentro de ella.
        courseD_bee_nestedLoops7_b: Tendrás que usar los tres bloques de `repetir`
          disponibles para resolver este desafío.
        courseD_bee_nestedLoops7_c: "Anida tus tres bloques así:\n\n-   repetir 4
          \n-   repetir 3 \n-   repetir 12 \n-   obtener néctar \n-   avanzar\n-   girar
          a la derecha"
      courseD_bee_nestedLoops7_2018_authored_hint:
        courseD_bee_nestedLoops7_a: Necesitarás repetir `obtener néctar` dentro de
          otro 'repetir' que también tenga el bloque `avanzar` dentro de ella.
        courseD_bee_nestedLoops7_b: Tendrás que usar los tres bloques de `repetir`
          disponibles para resolver este desafío.
        courseD_bee_nestedLoops7_c: "Anida tus tres bloques así:\n\n-   repetir 4
          \n-   repetir 3 \n-   repetir 12 \n-   obtener néctar \n-   avanzar\n-   girar
          a la derecha"
      courseD_bee_nestedLoops7_2019_authored_hint:
        courseD_bee_nestedLoops7_a: Necesitarás repetir `obtener néctar` dentro de
          otro 'repetir' que también tenga el bloque `avanzar` dentro de ella.
        courseD_bee_nestedLoops7_b: Tendrás que usar los tres bloques de `repetir`
          disponibles para resolver este desafío.
        courseD_bee_nestedLoops7_c: "Anida tus tres bloques así:\n\n-   repetir 4
          \n-   repetir 3 \n-   repetir 12 \n-   obtener néctar \n-   avanzar\n-   girar
          a la derecha"
      courseD_bee_nested_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvides que puedes `repetir` un
          solo comando o un patrón más largo. ¡Incluso se puede `` repetir\` un bloque
          'repetir'!
        courseD_bee_nested_loops_challenge2_b: Si quieres obtener las 4 gemas, primero
          usa un bucle para alejarte del centro. Gira a la izquierda o a la derecha,
          y luego usa un bucle anidado para pasar de la primera pila del tesoros a
          la segunda. Si repites el bucle anidado lo suficiente, ¡la recolectora se
          moverá por _toda_ la cueva!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo
          el tesoro usa solo un bloque `colectar` y dos turnos.
      courseD_bee_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvides que puedes `repetir` un
          solo comando o un patrón más largo. ¡Incluso se puede `` repetir\` un bloque
          'repetir'!
        courseD_bee_nested_loops_challenge2_b: Para obtener las 4 gemas, primero use
          un ciclo para alejarse del centro. Luego gire a la izquierda o derecha y
          use un bucle anidado para pasar de la primera pila de tesoros a la segunda.
        courseD_bee_nested_loops_challenge2_c: Si repite el ciclo anidado suficientes
          veces, el recolector se moverá alrededor de la \* cueva completa \*!
        courseD_bee_nested_loops_challenge2_d: El programa más corto que alcanza todo
          el tesoro usa solo un bloque `colectar` y dos turnos.
      courseD_bounce_events10s_authored_hint:
        courseD_bounce_events10s_a: |-
          Deberías tener estos dos eventos en tu código:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">silbar</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">pitar</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next>\</block</xml>
      courseD_bounce_events10s_2018_authored_hint:
        courseD_bounce_events10s_a: |-
          Deberías tener estos dos eventos en tu código:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">silbar</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">pitar</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next>\</block</xml>
      courseD_bounce_events10s_2019_authored_hint:
        courseD_bounce_events10s_a: |-
          Deberías tener estos dos eventos en tu código:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">silbar</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">pitar</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next>\</block</xml>
      courseD_bounce_events11s_authored_hint:
        courseD_bounce_events11s_a: Tendrá que tirar una pelota cuando comience el
          juego, cuando golpee la canasta, y cuando la mano pase por alto la pelota.
      courseD_bounce_events11s_2018_authored_hint:
        courseD_bounce_events11s_a: Tendrá que tirar una pelota cuando comience el
          juego, cuando golpee la canasta, y cuando la mano pase por alto la pelota.
      courseD_bounce_events11s_2019_authored_hint:
        courseD_bounce_events11s_a: Tendrá que tirar una pelota cuando comience el
          juego, cuando golpee la canasta, y cuando la mano pase por alto la pelota.
      courseD_bounce_events12s_authored_hint:
        courseD_bounce_events12s_a: Puede acelerar la pelota de baloncesto o la mano
          uniendo esos bloques al evento `cuando ejecuta`.
        courseD_bounce_events12s_b: Intenta hacer que cada toma valga 2 puntos y ¡
          cambia el logo del equipo por el de tu ciudad natal!
      courseD_bounce_events12s_2018_authored_hint:
        courseD_bounce_events12s_a: Puede acelerar la pelota de baloncesto o la mano
          uniendo esos bloques al evento `cuando ejecuta`.
        courseD_bounce_events12s_b: Intenta hacer que cada toma valga 2 puntos y ¡
          cambia el logo del equipo por el de tu ciudad natal!
      courseD_bounce_events12s_2019_authored_hint:
        courseD_bounce_events12s_a: Puede acelerar la pelota de baloncesto o la mano
          uniendo esos bloques al evento `cuando ejecuta`.
        courseD_bounce_events12s_b: Intenta hacer que cada toma valga 2 puntos y ¡
          cambia el logo del equipo por el de tu ciudad natal!
      courseD_bounce_events1s_authored_hint:
        courseD_bounce_events1s_a: |-
          Es necesario añadir el bloque `mover a la izquierda` al evento`cuando flecha izquierda` para que este juego funcione:

          <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>

          </xml>
        courseD_bounce_events1s_b: No te olvides de presionar "Ejecutar" y llevar
          la mano a la cesta para resolver este rompecabezas.
      courseD_bounce_events1s_2018_authored_hint:
        courseD_bounce_events1s_a: |-
          Es necesario añadir el bloque `mover a la izquierda` al evento`cuando flecha izquierda` para que este juego funcione:

          <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>

          </xml>
        courseD_bounce_events1s_b: No te olvides de presionar "Ejecutar" y llevar
          la mano a la cesta para resolver este rompecabezas.
      courseD_bounce_events1s_2019_authored_hint:
        courseD_bounce_events1s_a: |-
          Es necesario añadir el bloque `mover a la izquierda` al evento`cuando flecha izquierda` para que este juego funcione:

          <xml> <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>

          </xml>
        courseD_bounce_events1s_b: No te olvides de presionar "Ejecutar" y llevar
          la mano a la cesta para resolver este rompecabezas.
      courseD_bounce_events2s_authored_hint:
        courseD_bounce_events2s_a: |-
          Tendrá que tener dos conjuntos de eventos `mover` codificados para que esto funcione:
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events2s_2018_authored_hint:
        courseD_bounce_events2s_a: |-
          Tendrá que tener dos conjuntos de eventos `mover` codificados para que esto funcione:
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events2s_2019_authored_hint:
        courseD_bounce_events2s_a: |-
          Tendrá que tener dos conjuntos de eventos `mover` codificados para que esto funcione:
          <xml>
          <block type="bounce_whenLeft" deletable="false" x="20" y="20">
          <next>
          <block type="bounce_moveLeft"/>
          </next>
          </block>
          <block type="bounce_whenRight" deletable="false" x="180" y="20">
          <next>
          <block type="bounce_moveRight"/>
          </next>
          </block>
          </xml>
      courseD_bounce_events5s_authored_hint:
        courseD_bounce_events5s_a: No es necesario mover la mano para resolver este
          rompecabezas.
        courseD_bounce_events5s_b: |-
          Asegúrese de haber agregado este código a su espacio de trabajo:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2018_authored_hint:
        courseD_bounce_events5s_a: No es necesario mover la mano para resolver este
          rompecabezas.
        courseD_bounce_events5s_b: |-
          Asegúrese de haber agregado este código a su espacio de trabajo:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2019_authored_hint:
        courseD_bounce_events5s_a: No es necesario mover la mano para resolver este
          rompecabezas.
        courseD_bounce_events5s_b: |-
          Asegúrese de haber agregado este código a su espacio de trabajo:
          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_authored_hint:
        courseD_bounce_events6s_a: |-
          ¿Tienes un evento que se parece a esto?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Si ha escrito el código correctamente, no tiene
          que mover la mano para ganar.
      courseD_bounce_events6s_2018_authored_hint:
        courseD_bounce_events6s_a: |-
          ¿Tienes un evento que se parece a esto?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Si ha escrito el código correctamente, no tiene
          que mover la mano para ganar.
      courseD_bounce_events6s_2019_authored_hint:
        courseD_bounce_events6s_a: |-
          ¿Tienes un evento que se parece a esto?
          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Si ha escrito el código correctamente, no tiene
          que mover la mano para ganar.
      courseD_bounce_events7s_authored_hint:
        courseD_bounce_events7s_a: "¡Puedes agregar sonidos en más lugares si te apetece!"
      courseD_bounce_events7s_2018_authored_hint:
        courseD_bounce_events7s_a: "¡Puedes agregar sonidos en más lugares si te apetece!"
      courseD_bounce_events7s_2019_authored_hint:
        courseD_bounce_events7s_a: "¡Puedes agregar sonidos en más lugares si te apetece!"
      courseD_collector_debugging1_authored_hint:
        courseD_collector_debugging1_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging1_b: "¿Ha observado algunos patrones que podrían
          ser hechos más simple usando un ciclo de repetición?"
        courseD_collector_debugging1_c: Recuerda usar el bloque 'recoger', para recoger
          el tesoro una vez que te hayas movido a él.
      courseD_collector_debugging10_predict1_authored_hint:
        courseD_collector_debugging9_a: Hay varias formas de resolver este problema...
          ¡pero todas involucran giros!
        courseD_collector_debugging9_b: Averigua cómo resolverías el acertijo, luego
          muévete paso a paso para intentar que el código coincida con lo que tienes
          en la cabeza.
      courseD_collector_debugging10_predict1_2018_authored_hint:
        courseD_collector_debugging9_a: Hay varias formas de resolver este problema...
          ¡pero todas involucran giros!
        courseD_collector_debugging9_b: Averigua cómo resolverías el acertijo, luego
          muévete paso a paso para intentar que el código coincida con lo que tienes
          en la cabeza.
      courseD_collector_debugging1_2018_authored_hint:
        courseD_collector_debugging1_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging1_b: "¿Ha observado algunos patrones que podrían
          ser hechos más simple usando un ciclo de repetición?"
        courseD_collector_debugging1_c: Recuerda usar el bloque 'recoger', para recoger
          el tesoro una vez que te hayas movido a él.
      courseD_collector_debugging1a_authored_hint:
        courseD_collector_debugging1_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging1_c: Recuerde usar el bloque recoger, para recoger
          el tesoro una vez que se haya movido a él.
      courseD_collector_debugging1a_2018_authored_hint:
        courseD_collector_debugging1_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging1_c: Recuerda usar el bloque 'recoger', para recoger
          el tesoro una vez que te hayas movido a él.
      courseD_collector_debugging1a_2019_authored_hint:
        courseD_collector_debugging1_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging1_c: Recuerda usar el bloque 'recoger', para recoger
          el tesoro una vez que te hayas movido a él.
      courseD_collector_debugging2_authored_hint:
        courseD_collector_debugging2_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging2_b: "¿Ha observado algunos patrones que podrían
          ser hechos más simple usando un ciclo de repetición?"
        courseD_collector_debugging2_c: Intenta recoger tesoros por un lado de este
          patrón. ¿Puedes repetir esto para recoger tesoros en los otros dos lados?
      courseD_collector_debugging2_2018_authored_hint:
        courseD_collector_debugging2_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging2_b: "¿Ha observado algunos patrones que podrían
          ser hechos más simple usando un ciclo de repetición?"
        courseD_collector_debugging2_c: Intenta recoger tesoros por un lado de este
          patrón. ¿Puedes repetir esto para recoger tesoros en los otros dos lados?
      courseD_collector_debugging2a_authored_hint:
        courseD_collector_debugging2a_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging2a_c: |-
          ¿Qué pasa?

          ¿Qué se supone que debe pasar?

          ¿Qué te dice eso?
      courseD_collector_debugging2a_2018_authored_hint:
        courseD_collector_debugging2a_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging2a_c: |-
          ¿Qué pasa?

          ¿Qué se supone que debe pasar?

          ¿Qué te dice eso?
      courseD_collector_debugging2a_2019_authored_hint:
        courseD_collector_debugging2a_a: "Usa el botón \"Paso\" para ver si todo está
          bien en el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_collector_debugging2a_c: |-
          ¿Qué pasa?

          ¿Qué se supone que debe pasar?

          ¿Qué te dice eso?
      courseD_collector_debugging3_authored_hint:
        courseD_collector_debugging3_a: "¿Hay algún lugar donde Laurel haga algo que
          no tiene sentido? ¿Qué pasa cuando cambias esos bloques?"
        courseD_collector_debugging3_b: Intenta simplificar el código utilizando loops
          anidados.
      courseD_collector_debugging3_2018_authored_hint:
        courseD_collector_debugging3_a: "¿Hay algún lugar donde Laurel haga algo que
          no tiene sentido? ¿Qué pasa cuando cambias esos bloques?"
        courseD_collector_debugging3_b: Intenta simplificar el código utilizando loops
          anidados.
      courseD_collector_debugging3a_authored_hint:
        courseD_collector_debugging3_a: "¿Hay algún lugar donde Laurel haga algo que
          no tiene sentido? ¿Qué pasa cuando cambias esos bloques?"
      courseD_collector_debugging3a_2018_authored_hint:
        courseD_collector_debugging3_a: "¿Hay algún lugar donde Laurel haga algo que
          no tiene sentido? ¿Qué pasa cuando cambias esos bloques?"
      courseD_collector_debugging3a_2019_authored_hint:
        courseD_collector_debugging3_a: "¿Hay algún lugar donde Laurel haga algo que
          no tiene sentido? ¿Qué pasa cuando cambias esos bloques?"
      courseD_collector_debugging4_authored_hint:
        courseD_collector_debugging4_a: "Intenta utilizar el proceso de depuración
          varias veces seguidas. \n\n¿Qué causa el primer problema? \n\nUna vez que
          se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tienes dificultades para descubrir cómo
          hacer el patrón de escalón, intenta trazarlo con el dedo y decir los comandos
          en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
        courseD_collector_debugging4_c: En este loop solo falta un bloque. ¿Puedes
          averiguar cuál?
      courseD_collector_debugging4_2018_authored_hint:
        courseD_collector_debugging4_a: "Intenta utilizar el proceso de depuración
          varias veces seguidas. \n\n¿Qué causa el primer problema? \n\nUna vez que
          se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tienes dificultades para descubrir cómo
          hacer el patrón de escalón, intenta trazarlo con el dedo y decir los comandos
          en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
        courseD_collector_debugging4_c: En este loop solo falta un bloque. ¿Puedes
          averiguar cuál?
      courseD_collector_debugging4a_authored_hint:
        courseD_collector_debugging4_a: "Intenta utilizar el proceso de depuración
          varias veces seguidas. \n\n¿Qué causa el primer problema? \n\nUna vez que
          se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tienes dificultades para descubrir cómo
          hacer el patrón de escalón, intenta trazarlo con el dedo y decir los comandos
          en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_collector_debugging4a_2018_authored_hint:
        courseD_collector_debugging4_a: "Intenta utilizar el proceso de depuración
          varias veces seguidas. \n\n¿Qué causa el primer problema? \n\nUna vez que
          se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tienes dificultades para descubrir cómo
          hacer el patrón de escalón, intenta trazarlo con el dedo y decir los comandos
          en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_collector_debugging4a_2019_authored_hint:
        courseD_collector_debugging4_a: "Intenta utilizar el proceso de depuración
          varias veces seguidas. \n\n¿Qué causa el primer problema? \n\nUna vez que
          se resuelve ese problema, ¿qué sale mal?"
        courseD_collector_debugging4_b: "Si tienes dificultades para descubrir cómo
          hacer el patrón de escalón, intenta trazarlo con el dedo y decir los comandos
          en voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_collector_debugging5_authored_hint:
        courseD_collector_debugging5_a: Comienza mirando sólo el primer loop. ¿Qué
          hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_collector_debugging5_b: Una vez que tengas el primer loop como lo
          deseas, ¿Qué queda en tu código?
      courseD_collector_debugging5_2018_authored_hint:
        courseD_collector_debugging5_a: Comienza mirando sólo el primer loop. ¿Qué
          hace? ¿Qué se supone que haga? ¿Qué te dice eso?
        courseD_collector_debugging5_b: Una vez que tengas el primer loop como lo
          deseas, ¿Qué queda en tu código?
      courseD_collector_debugging5a_authored_hint:
        courseD_collector_debugging5a_a: "¿Qué hace? ¿Qué se supone que haga? ¿Qué
          te dice eso?"
        courseD_collector_debugging5a_b: Una vez que tiene la primera línea de tesoro
          recolectada, ¿qué queda en su código?
      courseD_collector_debugging5a_2018_authored_hint:
        courseD_collector_debugging5a_a: "¿Qué hace? ¿Qué se supone que haga? ¿Qué
          te dice eso?"
        courseD_collector_debugging5a_b: Una vez que tiene la primera línea de tesoro
          recolectada, ¿qué queda en su código?
      courseD_collector_debugging5a_2019_authored_hint:
        courseD_collector_debugging5a_a: "¿Qué hace? ¿Qué se supone que haga? ¿Qué
          te dice eso?"
        courseD_collector_debugging5a_b: Una vez que tiene la primera línea de tesoro
          recolectada, ¿qué queda en su código?
      courseD_collector_debugging6_authored_hint:
        courseD_collector_debugging6_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        courseD_collector_debugging6_b: Parece que todos los pasos correctos están
          aquí, solo necesitas más de ellos. ¿Cómo puedes repetir la acción `recolectar`
          varias veces?
      courseD_collector_debugging6_2018_authored_hint:
        courseD_collector_debugging6_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        courseD_collector_debugging6_b: Parece que todos los pasos correctos están
          aquí, solo necesitas más de ellos. ¿Cómo puedes repetir la acción `recolectar`
          varias veces?
      courseD_collector_debugging6a_authored_hint:
        courseD_collector_debugging6_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        courseD_collector_debugging6_b: Parece que todos los bloques que necesita
          están en el área de trabajo. Intente hacer clic en "comenzar de nuevo" si
          las cosas se ponen demasiado confusas.
      courseD_collector_debugging6a_2018_authored_hint:
        courseD_collector_debugging6_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        courseD_collector_debugging6_b: Parece que todos los bloques que necesita
          están en el área de trabajo. Intente hacer clic en "comenzar de nuevo" si
          las cosas se ponen demasiado confusas.
      courseD_collector_debugging6a_2019_authored_hint:
        courseD_collector_debugging6_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        courseD_collector_debugging6_b: Parece que todos los bloques que necesita
          están en el área de trabajo. Intente hacer clic en "comenzar de nuevo" si
          las cosas se ponen demasiado confusas.
      courseD_collector_debugging7_authored_hint:
        courseD_collector_debugging7_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        courseD_collector_debugging7_b: Si algo tiene que ocurrir varias veces, trate
          de añadir un ciclo de repetición.
        courseD_collector_debugging7_c: Si tiene problemas, intente escribir los pasos
          en un pedazo de papel y luego coloque los bloques en ese orden.
      courseD_collector_debugging8_authored_hint:
        courseD_collector_debugging8_a: "¿Ves un patrón que puedes simplificar con
          un loop?"
        courseD_collector_debugging8_b: Trata de usar un loop anidado para hacer el
          código más corto.
      courseD_collector_debugging8_2018_authored_hint:
        courseD_collector_debugging8_a: "¿Ves un patrón que puedes simplificar con
          un loop?"
        courseD_collector_debugging8_b: Trata de usar un loop anidado para hacer el
          código más corto.
      courseD_collector_debugging9_authored_hint:
        courseD_collector_debugging9_a: Hay varias formas de resolver este problema...
          ¡pero todas involucran giros!
        courseD_collector_debugging9_b: Averigua cómo resolverías el acertijo, luego
          muévete paso a paso para intentar que el código coincida con lo que tienes
          en la cabeza.
      courseD_collector_debugging9_2018_authored_hint:
        courseD_collector_debugging9_a: Hay varias formas de resolver este problema...
          ¡pero todas involucran giros!
        courseD_collector_debugging9_b: Averigua cómo resolverías el acertijo, luego
          muévete paso a paso para intentar que el código coincida con lo que tienes
          en la cabeza.
      courseD_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "Comienza recogiendo solo **dos**
          gemas de cada una de las primeras **dos** pilas . \n\n!\\[] (<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04>
          SOY copy.png) Usa estos bloques .\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n\n
          \  <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Luego, recoge las gemas restantes
          en esta fila. \n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>) \n\nAgrega estos bloques a tu programa.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n\n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finalmente, recoge el tesoro restante.
          Agrega estos bloques a tu programa.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Aquí está la solución completa para este desafío.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_debugging_challenge2_2018_authored_hint:
        courseD_collector_debugging_challenge2_a: "Comienza recogiendo solo **dos**
          gemas de cada una de las primeras **dos** pilas . \n\n!\\[] (<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04>
          SOY copy.png) Usa estos bloques .\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n\n                  </block>\n                  \n\n
          \  <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "Luego, recoge las gemas restantes
          en esta fila. \n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>) \n\nAgrega estos bloques a tu programa.\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n\n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_c: "Finalmente, recoge el tesoro restante.
          Agrega estos bloques a tu programa.\n\n<xml>\n  <block type=\"maze_turn\">\n
          \               <title name=\"DIR\">turnRight</title>\n              </block>\n
          \     <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n
          \       <statement name=\"DO\">\n          \n        </statement>\n      </block>\n\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          Aquí está la solución completa para este desafío.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvides que puedes `repetir` un
          solo comando o un patrón más largo. ¡Incluso se puede `` repetir\` un bloque
          'repetir'!
        courseD_bee_nested_loops_challenge2_b: Si quieres obtener las 4 gemas, primero
          usa un bucle para alejarte del centro. Gira a la izquierda o a la derecha,
          y luego usa un bucle anidado para pasar de la primera pila del tesoros a
          la segunda. Si repites el bucle anidado lo suficiente, ¡la recolectora se
          moverá por _toda_ la cueva!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo
          el tesoro usa solo un bloque `recolectar` y dos turnos.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvides que puedes `repetir` un
          solo comando o un patrón más largo. ¡Incluso se puede `` repetir\` un bloque
          'repetir'!
        courseD_bee_nested_loops_challenge2_b: Si quieres obtener las 4 gemas, primero
          usa un bucle para alejarte del centro. Gira a la izquierda o a la derecha,
          y luego usa un bucle anidado para pasar de la primera pila del tesoros a
          la segunda. Si repites el bucle anidado lo suficiente, ¡la recolectora se
          moverá por _toda_ la cueva!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo
          el tesoro usa solo un bloque `colectar` y dos turnos.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019_authored_hint:
        courseD_bee_nested_loops_challenge2_a: No olvides que puedes `repetir` un
          solo comando o un patrón más largo. ¡Incluso se puede `` repetir\` un bloque
          'repetir'!
        courseD_bee_nested_loops_challenge2_b: Si quieres obtener las 4 gemas, primero
          usa un bucle para alejarte del centro. Gira a la izquierda o a la derecha,
          y luego usa un bucle anidado para pasar de la primera pila del tesoros a
          la segunda. Si repites el bucle anidado lo suficiente, ¡la recolectora se
          moverá por _toda_ la cueva!
        courseD_bee_nested_loops_challenge2_c: El programa más corto que alcanza todo
          el tesoro usa solo un bloque `colectar` y dos turnos.
        courseD_bee_nested_loops_challenge2_d: |-
          **Solución:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2a_authored_hint:
        courseD_collector_nested_loops_challenge2a_a: No olvides que puedes `repetir`
          un solo comando o un patrón más largo. ¡Incluso se puede `` repetir\` un
          bloque 'repetir'!
        courseD_collector_nested_loops_challenge2a_b: "¿Puedes descubrir cómo obtener
          las cuatro gemas sin usar más bloques de los necesarios para obtener dos?"
      courseD_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          En lugar de usar cuatro bloques 'avanzar' para cada lado, intenta colocar un bloque 'avanzar' dentro de un loop 'repetir', como este:

          <xml><block type="controls_repeat">

          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: "¡No te olvides de recoger una pieza del tesoro,
          luego gira para comenzar en un nuevo lado del cuadrado!"
        courseD_artist_ramp10_c: Si quiere simplificar su código, ¡puede poner un
          ciclo dentro de otro! Esto se llama un \*\* ciclo anidado \*\*.
      courseD_collector_ramp8_authored_hint:
        courseD_collector_ramp8_a: Cuando llegues a un cuadrado con tesoro, usa `recoger`
          para recogerlo. ¡Para este desafío, tendrás que recolectar tesoros más de
          una vez!
        courseD_collector_ramp8_b: Si quiere simplificar más su código, ¡puede poner
          un ciclo de "repetición" dentro de otro! Esto se llama un \*\* ciclo anidado
          \*\*.
      courseD_collector_ramp9_authored_hint:
        courseD_collector_ramp9_a: Comienza por mover a Laurel al primer tesoro y
          que lo recoja. ¿Puedes repetir esta secuencia para obtener el segundo montón?
        courseD_collector_ramp9_b: Si quieres simplificar tu código, ¡puedes poner
          un loop repetir dentro de otro! Esto se llama un **loop anidado**.
      courseD_debugging_1_authored_hint:
        courseD_debugging_1_a: "Usa el botón \"Paso\" para ver si todo está bien en
          el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_debugging_1_b: "¿Ha observado algunos patrones que podrían ser hechos
          más simple usando un ciclo de repetición?"
      courseD_debugging_2_authored_hint:
        courseD_debugging_2_a: "Usa el botón \"Paso\" para ver si todo está bien en
          el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        courseD_debugging_2_b: "¿Ves un patrón? Intenta usar loops anidados para resolver
          este desafío."
      courseD_debugging_3_authored_hint:
        courseD_debugging_3_a: "¿Hay algún lugar donde la abeja haga algo que no tiene
          sentido? ¿Qué pasa cuando cambias esos bloques?"
        courseD_debugging_3_b: Intenta simplificar el código utilizando loops anidados.
      courseD_debugging_4_authored_hint:
        courseD_debugging_4_a: "Intenta utilizar el proceso de depuración varias veces
          seguidas. \n\n¿Qué causa el primer problema? \n\nUna vez que se resuelve
          ese problema, ¿qué sale mal?"
        courseD_debugging_4_b: "Si tienes dificultades para descubrir cómo hacer el
          patrón de escalón, intenta trazarlo con el dedo y decir los comandos en
          voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      courseD_debugging_5_authored_hint:
        courseD_debugging_5_a: Comienza mirando sólo el primer loop. ¿Qué hace? ¿Qué
          se supone que haga? ¿Qué te dice eso?
        courseD_debugging_5_b: Una vez que tengas el primer loop como lo deseas, ¿Qué
          queda en tu código?
        courseD_debugging_5_c: |-
          Intente envolver el ciclo sobrante alrededor del resto de su código completo. ¿funciona ahora?

          Si no, ¿qué sigue andando mal?
      courseD_debugging_6_authored_hint:
        courseD_debugging_6_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        courseD_debugging_6_b: Parece que todos los pasos correctos están aquí, solo
          necesita más de ellos. ¿Cómo puedes repetir las acciones `get néctar` y`make
          honey` varias veces?
      courseD_farmer_condLoops1_authored_hint:
        courseD_farmer_condLoops1_a: Necesitarás buscar maíz 5 veces, usando un loop
          repetir.
        courseD_farmer_condLoops1_b: Asegúrate de usar un bloque `si en el maíz` o
          ¡podrías intentar elegir algo que no esté allí!
      courseD_farmer_condLoops1_2018_authored_hint:
        courseD_farmer_condLoops1_a: Necesitarás buscar maíz 5 veces, usando un loop
          repetir.
        courseD_farmer_condLoops1_b: Asegúrate de usar un bloque `si en el maíz` o
          ¡podrías intentar elegir algo que no esté allí!
      courseD_farmer_condLoops1_2019_authored_hint:
        courseD_farmer_condLoops1_a: Necesitarás buscar maíz 5 veces, usando un loop
          repetir.
        courseD_farmer_condLoops1_b: Asegúrate de usar un bloque `si en el maíz` o
          ¡podrías intentar elegir algo que no esté allí!
      courseD_farmer_condLoops2_authored_hint:
        courseD_farmer_condLoops2_a: 'La mejor manera de hacer esto es anidar las
          afirmaciones ''si'' ubicando una dentro de la otra.  '
        courseD_farmer_condLoops2_b: Para este desafío, debes tener dos afirmaciones`si/si
          no` y una afirmación `si` simple.".
        courseD_farmer_condLoops2_c: "Tu afirmación \\`si'  podría parecerse mucho
          a esto: \n\n-   si en el maíz\n    -   recoger maíz\n-   si no\n    -   si
          en la lechuga\n        \\\\t- recoger lechuga\n\n Si no hay nada allí, ¡no
          recogerás nada!"
      courseD_farmer_condLoops2_2018_authored_hint:
        courseD_farmer_condLoops2_a: 'La mejor manera de hacer esto es anidar las
          afirmaciones ''si'' ubicando una dentro de la otra.  '
        courseD_farmer_condLoops2_b: Para este desafío, debes tener dos afirmaciones`si/si
          no` y una afirmación `si` simple.".
        courseD_farmer_condLoops2_c: "Tu afirmación \\`si'  podría parecerse mucho
          a esto: \n\n-   si en el maíz\n    -   recoger maíz\n-   si no\n    -   si
          en la lechuga\n        \\\\t- recoger lechuga\n\n Si no hay nada allí, ¡no
          recogerás nada!"
      courseD_farmer_condLoops2_2019_authored_hint:
        courseD_farmer_condLoops2_a: 'La mejor manera de hacer esto es anidar las
          afirmaciones ''si'' ubicando una dentro de la otra.  '
        courseD_farmer_condLoops2_b: Para este desafío, debes tener dos afirmaciones`si/si
          no` y una afirmación `si` simple.".
        courseD_farmer_condLoops2_c: "Tu afirmación \\`si'  podría parecerse mucho
          a esto: \n\n-   si en el maíz\n    -   recoger maíz\n-   si no\n    -   si
          en la lechuga\n        \\\\t- recoger lechuga\n\n Si no hay nada allí, ¡no
          recogerás nada!"
      courseD_farmer_condLoops3_authored_hint:
        courseD_farmer_condLoops3_a: |-
          Para obtener todos los elementos, intenta anidar afirmaciones ' if ' de profundidad tres.

          Esto significa que debe poner una afirmación `si ' dentro de otra, a continuación, poner una tercera afirmación`si ' dentro de la segunda.
        courseD_farmer_condLoops3_b: Para este desafío, debes tener dos afirmaciones`si/si
          no` y una afirmación `si` simple.
      courseD_farmer_condLoops3_2018_authored_hint:
        courseD_farmer_condLoops3_a: |-
          Para obtener todos los elementos, intenta anidar afirmaciones ' if ' de profundidad tres.

          Esto significa que debe poner una afirmación `si ' dentro de otra, a continuación, poner una tercera afirmación`si ' dentro de la segunda.
        courseD_farmer_condLoops3_b: Para este desafío, debes tener dos afirmaciones`si/si
          no` y una afirmación `si` simple.
      courseD_farmer_condLoops3_2019_authored_hint:
        courseD_farmer_condLoops3_a: |-
          Para obtener todos los elementos, intenta anidar afirmaciones ' if ' de profundidad tres.

          Esto significa que debe poner una afirmación `si ' dentro de otra, a continuación, poner una tercera afirmación`si ' dentro de la segunda.
        courseD_farmer_condLoops3_b: Para este desafío, debes tener dos afirmaciones`si/si
          no` y una afirmación `si` simple.
      courseD_farmer_condLoops4_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: "Nadie sabe cuántas lechugas
          crecerán de cada brote. \n\nUtilizar un loop 'mientras hay lechuga' para
          seguir recogiendo hasta que cada pieza haya sido recolectada."
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "¡El loop `while` manejará
          espacios vacíos también! Como no hay lechuga, no elegirá ninguna y permitirá
          que el código avance."
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Puede utilizar un loop `mientras
          camino por delante` o un loop 'repetir\` para todos los cultivos.
      courseD_farmer_condLoops4_2018_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: "Nadie sabe cuántas lechugas
          crecerán de cada brote. \n\nUtilizar un loop 'mientras hay lechuga' para
          seguir recogiendo hasta que cada pieza haya sido recolectada."
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "¡El loop `while` manejará
          espacios vacíos también! Como no hay lechuga, no elegirá ninguna y permitirá
          que el código avance."
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Puede utilizar un loop `mientras
          camino por delante` o un loop 'repetir\` para todos los cultivos.
      courseD_farmer_condLoops4_2019_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: "Nadie sabe cuántas lechugas
          crecerán de cada brote. \n\nUtilizar un loop 'mientras hay lechuga' para
          seguir recogiendo hasta que cada pieza haya sido recolectada."
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "¡El loop `while` manejará
          espacios vacíos también! Como no hay lechuga, no elegirá ninguna y permitirá
          que el código avance."
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: Puede utilizar un loop `mientras
          camino por delante` o un loop 'repetir\` para todos los cultivos.
      courseD_farmer_condLoops4a_authored_hint:
        grade3_RunningFarm_4courseD_farmer_condLoops4: Nadie sabe cuántas cabezas
          de lechuga crecerá de cada brote. Utiliza un ciclo 'mientras hay lechuga'
          para seguir recogiendo hasta que cada pieza haya sido recolectada.
      courseD_farmer_condLoops5_authored_hint:
        courseD_farmer_condLoops5_a: 'Hay un nuevo loop: ''repetir hasta en la calabaza''.
          ¿Puedes ver cómo usarlo en este desafío?'
        courseD_farmer_condLoops5_b: Podría haber más de una planta de maíz o lechuga
          en cada lugar. ¡Usa un loop `mientras` para reunirlos a todos!
      courseD_farmer_condLoops5_2018_authored_hint:
        courseD_farmer_condLoops5_a: 'Hay un nuevo loop: ''repetir hasta en la calabaza''.
          ¿Puedes ver cómo usarlo en este desafío?'
        courseD_farmer_condLoops5_b: Podría haber más de una planta de maíz o lechuga
          en cada lugar. ¡Usa un loop `mientras` para reunirlos a todos!
      courseD_farmer_condLoops5_2019_authored_hint:
        courseD_farmer_condLoops5_a: 'Hay un nuevo loop: ''repetir hasta en la calabaza''.
          ¿Puedes ver cómo usarlo en este desafío?'
        courseD_farmer_condLoops5_b: Podría haber más de una planta de maíz o lechuga
          en cada lugar. ¡Usa un loop `mientras` para reunirlos a todos!
      courseD_farmer_condLoops6_authored_hint:
        courseD_farmer_condLoops6_a: Usa un loop 'mientras hay maíz' para asegurarte
          que obtienes todo el maíz en el camino. Este bloque no hará nada si no hay
          ningún maíz para recoger.
        courseD_farmer_condLoops6_b: "¡Asegúrate de comprobar 'si' hay un camino por
          delante antes de tomar el siguiente paso!"
      courseD_farmer_condLoops6_2018_authored_hint:
        courseD_farmer_condLoops6_a: Utiliza un bucle `mientras camino por delante`
          o un bloque `si camino por delante / si no` para mover a la granjera hacia
          abajo en cada parte de la espiral.
        courseD_farmer_condLoops6_b: Sólo necesita el control del maíz durante la
          mayor parte de la cosecha. Sólo debes elegir una calabaza al final de su
          programa.
      courseD_farmer_condLoops6_2019_authored_hint:
        courseD_farmer_condLoops6_a: Utiliza un bucle `mientras camino por delante`
          o un bloque `si camino por delante / si no` para mover a la granjera hacia
          abajo en cada parte de la espiral.
        courseD_farmer_condLoops6_b: Sólo necesita el control del maíz durante la
          mayor parte de la cosecha. Sólo debes elegir una calabaza al final de su
          programa.
      courseD_farmer_condLoops7_authored_hint:
        courseD_farmer_condLoops7_a: "Ten en cuenta que el camino más fácil para llegar
          a todos los cultivos sigue siendo una espiral. \n\n!\\[] (<https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png>)"
        courseD_farmer_condLoops7_b: Intenta usar `cuando camino adelante` para mantener
          a la cosechadora moviéndose el número correcto de pasos.
      courseD_farmer_condLoops7_2018_authored_hint:
        courseD_farmer_condLoops7_a: "Ten en cuenta que el camino más fácil para llegar
          a todos los cultivos sigue siendo una espiral. \n\n!\\[] (<https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png>)"
        courseD_farmer_condLoops7_b: Intenta usar `cuando camino adelante` para mantener
          a la cosechadora moviéndose el número correcto de pasos.
      courseD_farmer_condLoops7_2019_authored_hint:
        courseD_farmer_condLoops7_a: "Ten en cuenta que el camino más fácil para llegar
          a todos los cultivos sigue siendo una espiral. \n\n!\\[] (<https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png>)"
        courseD_farmer_condLoops7_b: Intenta usar `cuando camino adelante` para mantener
          a la cosechadora moviéndose el número correcto de pasos.
      courseD_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: El botón "Paso" podría ser muy útil
          en este desafío.
        courseD_farmer_condLoops_challenge1_b: Normalmente, tú simplemente "recoge
          calabaza" si estás en una calabaza. ¿Qué más necesitas hacer si estás en
          una calabaza?
      courseD_farmer_condLoops_challenge1_2018_authored_hint:
        courseD_farmer_condLoops_challenge1_a: El botón "Paso" podría ser muy útil
          en este desafío.
        courseD_farmer_condLoops_challenge1_b: Normalmente, tú simplemente "recoge
          calabaza" si estás en una calabaza. ¿Qué más necesitas hacer si estás en
          una calabaza?
      courseD_farmer_condLoops_challenge1_2019_authored_hint:
        courseD_farmer_condLoops_challenge1_a: El botón "Paso" podría ser muy útil
          en este desafío.
        courseD_farmer_condLoops_challenge1_b: Normalmente, tú simplemente "recoge
          calabaza" si estás en una calabaza. ¿Qué más necesitas hacer si estás en
          una calabaza?
      courseD_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: La cantidad de cada vegetal en cada
          espacio puede cambiar. ¡Un loop `mientras` puede ayudar!
      courseD_farmer_condLoops_challenge2_2018_authored_hint:
        courseD_farmer_condLoops_challenge2_a: La cantidad de cada vegetal en cada
          espacio puede cambiar. ¡Un loop `mientras` puede ayudar!
      courseD_farmer_condLoops_challenge2_2019_authored_hint:
        courseD_farmer_condLoops_challenge2_a: La cantidad de cada vegetal en cada
          espacio puede cambiar. ¡Un loop `mientras` puede ayudar!
      courseD_farmer_conditionals4_authored_hint:
        courseD_farmer_conditionals4_a: En lugar de utilizar un loop `repetir`, utiliza
          un loop `mientras` para mantener la excavación hasta que el montón se termine.
      courseD_farmer_conditionals5_authored_hint:
        courseD_farmer_conditionals5a: Trata de anidar un loop `mientras` en el interior
          de un loop 'repetir'.
      courseD_farmer_conditionals6_authored_hint:
        courseD_farmer_conditionals6_a: Asegúrate de que estés utilizando el loop
          'mientras' y descifra cuántas veces lo necesitas para llenar cada agujero.
        courseD_farmer_conditionals6_b: Observa que la granjera necesita avanzar y
          descender varias veces en un patrón de escalera.
      courseD_farmer_conditionals7_authored_hint:
        courseD_farmer_conditionals8_a: El bloque `mientras camino delante` te permite
          seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
      courseD_farmer_conditionals8_authored_hint:
        courseD_farmer_conditionals8_a: Vas a tener que utilizar más de un loop `mientras`.
        courseD_farmer_conditionals8_b: Cada agujero está al final de un camino, usa
          'mientras exista camino por delante' antes de usar 'mientras exista un agujero".
        courseD_farmer_conditionals8_c: Fíjate que necesitas repetir el código 'mientras
          exista camino por delante', 'mientras exista un agujero' seis veces.
      courseD_farmer_while1_authored_hint:
        courseD_farmer_while1_a: Tendrás que avanzar cuatro veces para llegar a la
          pila. ¿Puedes usar un loop 'repetir' para esto?
        courseD_farmer_while1_b: Usa el bloque `quita 1` cuando estés parado en la
          pila de tierra para quitarlo.
      courseD_farmer_while1_2018_authored_hint:
        courseD_farmer_while1_a: Tendrás que avanzar cuatro veces para llegar a la
          pila. ¿Puedes usar un loop 'repetir' para esto?
        courseD_farmer_while1_b: Usa el bloque `quita 1` cuando estés parado en la
          pila de tierra para quitarlo.
      courseD_farmer_while1_2019_authored_hint:
        courseD_farmer_while1_a: Tendrás que avanzar cuatro veces para llegar a la
          pila. ¿Puedes usar un loop 'repetir' para esto?
        courseD_farmer_while1_b: Usa el bloque `quita 1` cuando estés parado en la
          pila de tierra para quitarlo.
      courseD_farmer_while2_authored_hint:
        courseD_farmer_while2_a: Solo necesitarás moverte una vez para llegar al hoyo.
        courseD_farmer_while2_b: Se necesita el bloque 'llenar 1' seis veces. ¿Puedes
          usar un loop para hacerlo más simple?
      courseD_farmer_while2_2018_authored_hint:
        courseD_farmer_while2_a: Solo necesitarás moverte una vez para llegar al hoyo.
        courseD_farmer_while2_b: Se necesita el bloque 'llenar 1' seis veces. ¿Puedes
          usar un loop para hacerlo más simple?
      courseD_farmer_while2_2019_authored_hint:
        courseD_farmer_while2_a: Solo necesitarás moverte una vez para llegar al hoyo.
        courseD_farmer_while2_b: Se necesita el bloque 'llenar 1' seis veces. ¿Puedes
          usar un loop para hacerlo más simple?
      courseD_farmer_while3_authored_hint:
        courseD_farmer_while3_a: Un loop puede ayudarte a simplificar tu código aquí.
        courseD_farmer_while3_b: No es necesario ningún bloque de`girar` para llegar
          a la pila.
      courseD_farmer_while3_2018_authored_hint:
        courseD_farmer_while3_a: Un loop puede ayudarte a simplificar tu código aquí.
        courseD_farmer_while3_b: No es necesario ningún bloque de`girar` para llegar
          a la pila.
      courseD_farmer_while3_2019_authored_hint:
        courseD_farmer_while3_a: Un loop puede ayudarte a simplificar tu código aquí.
        courseD_farmer_while3_b: No es necesario ningún bloque de`girar` para llegar
          a la pila.
      courseD_farmer_while4_authored_hint:
        courseD_farmer_conditionals4_a: En lugar de utilizar un loop `repetir`, utiliza
          un loop `mientras` para mantener la excavación hasta que el montón se termine.
        courseD_farmer_conditionals4_b: Esto se ve muy similar a un desafío anterior,
          la única diferencia es cuál loop necesitas.
      courseD_farmer_while4_2018_authored_hint:
        courseD_farmer_conditionals4_a: En lugar de utilizar un loop `repetir`, utiliza
          un loop `mientras` para mantener la excavación hasta que el montón se termine.
        courseD_farmer_conditionals4_b: Esto se ve muy similar a un desafío anterior,
          la única diferencia es cuál loop necesitas.
      courseD_farmer_while4_2019_authored_hint:
        courseD_farmer_conditionals4_a: En lugar de utilizar un loop `repetir`, utiliza
          un loop `mientras` para mantener la excavación hasta que el montón se termine.
        courseD_farmer_conditionals4_b: Esto se ve muy similar a un desafío anterior,
          la única diferencia es cuál loop necesitas.
      courseD_farmer_while5_authored_hint:
        courseD_farmer_conditionals5a_a: Trata de anidar un loop `mientras` en el
          interior de un loop 'repetir'.
        courseD_farmer_conditionals5a_b: La granjera necesita avanzar un total de
          cinco veces para llegar al final de la fila. ¿Qué más necesita hacer la
          granjera?
        courseD_farmer_conditionals5a_c: Avanza 5 veces. Cada vez que avances, elimina
          el montón de tierra utilizando el bloque \`eliminar montón'.
      courseD_farmer_while5_2018_authored_hint:
        courseD_farmer_conditionals5a_a: Trata de anidar un loop `mientras` en el
          interior de un loop 'repetir'.
        courseD_farmer_conditionals5a_b: La granjera necesita avanzar un total de
          cinco veces para llegar al final de la fila. ¿Qué más necesita hacer la
          granjera?
        courseD_farmer_conditionals5a_c: Avanza 5 veces. Cada vez que avances, elimina
          el montón de tierra utilizando el bloque \`eliminar montón'.
      courseD_farmer_while5_2019_authored_hint:
        courseD_farmer_conditionals5a_a: Trata de anidar un loop `mientras` en el
          interior de un loop 'repetir'.
        courseD_farmer_conditionals5a_b: La granjera necesita avanzar un total de
          cinco veces para llegar al final de la fila. ¿Qué más necesita hacer la
          granjera?
        courseD_farmer_conditionals5a_c: Avanza 5 veces. Cada vez que avances, elimina
          el montón de tierra utilizando el bloque \`eliminar montón'.
      courseD_farmer_while6_authored_hint:
        courseD_farmer_conditionals6_a: Asegúrate de que estés utilizando el loop
          'mientras' y descifra cuántas veces lo necesitas para llenar cada agujero.
        courseD_farmer_conditionals6_b: Observa que la granjera necesita avanzar y
          descender varias veces en un patrón de escalera.
        courseD_farmer_conditionals6_c: |-
          El patrón de escalón utiliza los siguientes bloques

          -   avanzar
          -   llenar agujero
          -   girar a la derecha
          -   avanzar
          -   llenar agujero
          -   girar a la izquierda

          ¿Cuántas veces necesitas utilizar este patrón de escalón?

          Asegúrate de que estás utilizando el 'mientras exista un agujero' para llenar el agujero.
      courseD_farmer_while6_2018_authored_hint:
        courseD_farmer_conditionals6_a: Asegúrate de que estés utilizando el loop
          'mientras' y descifra cuántas veces lo necesitas para llenar cada agujero.
        courseD_farmer_conditionals6_b: Observa que la granjera necesita avanzar y
          descender varias veces en un patrón de escalera.
        courseD_farmer_conditionals6_c: |-
          El patrón de escalón utiliza los siguientes bloques

          -   avanzar
          -   llenar agujero
          -   girar a la derecha
          -   avanzar
          -   llenar agujero
          -   girar a la izquierda

          ¿Cuántas veces necesitas utilizar este patrón de escalón?

          Asegúrate de que estás utilizando el 'mientras exista un agujero' para llenar el agujero.
      courseD_farmer_while6_2019_authored_hint:
        courseD_farmer_conditionals6_a: Asegúrate de que estés utilizando el loop
          'mientras' y descifra cuántas veces lo necesitas para llenar cada agujero.
        courseD_farmer_conditionals6_b: Observa que la granjera necesita avanzar y
          descender varias veces en un patrón de escalera.
        courseD_farmer_conditionals6_c: |-
          El patrón de escalón utiliza los siguientes bloques

          -   avanzar
          -   llenar agujero
          -   girar a la derecha
          -   avanzar
          -   llenar agujero
          -   girar a la izquierda

          ¿Cuántas veces necesitas utilizar este patrón de escalón?

          Asegúrate de que estás utilizando el 'mientras exista un agujero' para llenar el agujero.
      courseD_farmer_while7_authored_hint:
        courseD_farmer_conditionals8_a: El bloque `mientras camino delante` te permite
          seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        courseD_farmer_conditionals8_b: Poner un loop `mientras camino adelante` dentro
          de un loop repetir puede ayudarte en este desafío.
        courseD_farmer_conditionals8_c: "¿Qué necesitas hacer al final de cada ruta?"
      courseD_farmer_while7_2018_authored_hint:
        courseD_farmer_conditionals8_a: El bloque `mientras camino delante` te permite
          seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        courseD_farmer_conditionals8_b: Poner un loop `mientras camino adelante` dentro
          de un loop repetir puede ayudarte en este desafío.
        courseD_farmer_conditionals8_c: "¿Qué necesitas hacer al final de cada ruta?"
      courseD_farmer_while7_2019_authored_hint:
        courseD_farmer_conditionals8_a: El bloque `mientras camino delante` te permite
          seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        courseD_farmer_conditionals8_b: Poner un loop `mientras camino adelante` dentro
          de un loop repetir puede ayudarte en este desafío.
        courseD_farmer_conditionals8_c: "¿Qué necesitas hacer al final de cada ruta?"
      courseD_farmer_while8_authored_hint:
        courseD_farmer_conditionals8_a: Vas a tener que utilizar más de un loop `mientras`.
        courseD_farmer_conditionals8_b: Cada agujero está al final de un camino, usa
          'mientras exista camino por delante' antes de usar 'mientras exista un agujero".
        courseD_farmer_conditionals8_c: Fíjate que necesitas repetir el código 'mientras
          exista camino por delante', 'mientras exista un agujero' seis veces.
      courseD_farmer_while8_2018_authored_hint:
        courseD_farmer_conditionals8_a: Vas a tener que utilizar más de un loop `mientras`.
        courseD_farmer_conditionals8_b: Cada agujero está al final de un camino, usa
          'mientras exista camino por delante' antes de usar 'mientras exista un agujero".
        courseD_farmer_conditionals8_c: Fíjate que necesitas repetir el código 'mientras
          exista camino por delante', 'mientras exista un agujero' seis veces.
      courseD_farmer_while8_2019_authored_hint:
        courseD_farmer_conditionals8_a: Vas a tener que utilizar más de un loop `mientras`.
        courseD_farmer_conditionals8_b: Cada agujero está al final de un camino, usa
          'mientras exista camino por delante' antes de usar 'mientras exista un agujero".
        courseD_farmer_conditionals8_c: Fíjate que necesitas repetir el código 'mientras
          exista camino por delante', 'mientras exista un agujero' seis veces.
      courseD_farmer_while_challenge1_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o montón se encuentra un espacio
          **hacia atrás** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si usas un loop `mientras`, se puede decir
          a la granjera que elimine un montón o llenar un agujero, incluso no hay
          uno. Eso significa que puedes programarla para eliminar cualquier tierra
          o rellenar cualquier agujero, sin importar dónde se encuentre.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún loop
          "repetir". Para hacerlo, necesitarás cuatro loops "mientras".
      courseD_farmer_while_challenge1_2018_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o montón se encuentra un espacio
          **hacia atrás** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si usas un loop `mientras`, se puede decir
          a la granjera que elimine un montón o llenar un agujero, incluso no hay
          uno. Eso significa que puedes programarla para eliminar cualquier tierra
          o rellenar cualquier agujero, sin importar dónde se encuentre.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún loop
          "repetir". Para hacerlo, necesitarás cuatro loops "mientras".
      courseD_farmer_while_challenge1_2019_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o montón se encuentra un espacio
          **hacia atrás** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si usas un loop `mientras`, se puede decir
          a la granjera que elimine un montón o llenar un agujero, incluso no hay
          uno. Eso significa que puedes programarla para eliminar cualquier tierra
          o rellenar cualquier agujero, sin importar dónde se encuentre.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún loop
          "repetir". Para hacerlo, necesitarás cuatro loops "mientras".
      courseD_farmer_while_challenge2_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o montón se encuentra un espacio
          **hacia atrás** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si usas un loop `mientras`, se puede decir
          a la granjera que elimine un montón o llenar un agujero, incluso no hay
          uno. Eso significa que puedes programarla para eliminar cualquier tierra
          o rellenar cualquier agujero, sin importar dónde se encuentre.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún ciclo
          "repetir". Para hacerlo, necesitarás cuatro ciclos "mientras".
      courseD_farmer_while_challenge2_2018_authored_hint:
        courseD_farmer_while_challenge1_a: Cada hoyo o montón se encuentra un espacio
          **hacia atrás** desde el final de la ruta.
        courseD_farmer_while_challenge1_b: Si usas un loop `mientras`, se puede decir
          a la granjera que elimine un montón o llenar un agujero, incluso no hay
          uno. Eso significa que puedes programarla para eliminar cualquier tierra
          o rellenar cualquier agujero, sin importar dónde se encuentre.
        courseD_farmer_conditionals8_c: Es posible resolver esto sin usar ningún loop
          "repetir". Para hacerlo, necesitarás cuatro loops "mientras".
      courseD_harvester_nested_loops_challenge1-broken_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: Probablemente ya hayas usado
          un ciclo para crear un patron zig-zag. Si recuerdas ese algoritmo, puedes
          agregarle algunas cosas para usarlo aquí.
      courseD_harvester_nested_loops_challenge1_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: "¡Intenta seguir este camino
          para recoger todo el maíz! "
        courseD_harvester_nested_loops_challenge1_b: Para recoger más de un pedazo
          de maíz, necesitas usar ´recoger maíz´más de una vez.
        courseD_harvester_nested_loops_challenge1_c: "¡Deberás agregar un loop pequeño
          dentro de tu loop principal para resolver este desafío!"
      courseD_harvester_nested_loops_challenge1_2018_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: "¡Intenta seguir este camino
          para recoger todo el maíz! "
        courseD_harvester_nested_loops_challenge1_b: Para recoger más de un pedazo
          de maíz, necesitas usar ´recoger maíz´más de una vez.
        courseD_harvester_nested_loops_challenge1_c: "¡Deberás agregar un loop pequeño
          dentro de tu loop principal para resolver este desafío!"
      courseD_harvester_nested_loops_challenge1_2019_authored_hint:
        courseD_harvester_nested_loops_challenge1_a: "¡Intenta seguir este camino
          para recoger todo el maíz! "
        courseD_harvester_nested_loops_challenge1_b: Para recoger más de un pedazo
          de maíz, necesitas usar ´recoger maíz´más de una vez.
        courseD_harvester_nested_loops_challenge1_c: "¡Deberás agregar un loop pequeño
          dentro de tu loop principal para resolver este desafío!"
      courseD_iceage_loops1_authored_hint:
        courseD_iceage_loops1_a: Cuidado con de hielo roto! ¡Scrat caerá a la perfección!
        courseD_iceage_loops1_b: |-
          Deberás usar este bloque:
          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Cuidado con de hielo roto! ¡Scrat caerá al agua!
        courseB_iceage_loops10_b: Intente decir los pasos en voz alta o escríbalos
          en un pedazo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: "¡Este es un acertijo muy largo! Sigue este camino."
      courseD_iceage_loops10_2019_authored_hint:
        courseB_iceage_loops10_a: Cuidado con de hielo roto! ¡Scrat caerá al agua!
        courseB_iceage_loops10_b: Intente decir los pasos en voz alta o escríbalos
          en un pedazo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: "¡Este es un acertijo muy largo! Sigue este camino."
      courseD_iceage_loops1_2019_authored_hint:
        courseD_iceage_loops1_a: Cuidado con de hielo roto! ¡Scrat caerá a la perfección!
        courseD_iceage_loops1_b: |-
          Deberás usar este bloque:
          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops2_authored_hint:
        courseD_iceage_loops2_a: Rompe este puzzle en dos partes, una antes de la
          esquina y otra después de la esquina.
        courseD_iceage_loops2_b: Si te quedas atascado, trata de decir los pasos en
          voz alta.
        courseD_iceage_loops2_c: Sigue este camino para que Scrat llegue a la bellota.
      courseD_iceage_loops2_2019_authored_hint:
        courseD_iceage_loops2_a: Rompe este puzzle en dos partes, una antes de la
          esquina y otra después de la esquina.
        courseD_iceage_loops2_b: Si te quedas atascado, trata de decir los pasos en
          voz alta.
        courseD_iceage_loops2_c: Sigue este camino para que Scrat llegue a la bellota.
      courseD_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          ¡Usa este nuevo bloque!
          <xml><block type="controls_repeat_dropdown">

          <title name="TIMES" config="2-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: Para repetir código, arrastra un ciclo ´repetir´,
          luego coloca dentro el bloque que quieres repetir.
      courseD_iceage_loops3_2019_authored_hint:
        courseB_iceage_loops3_a: |-
          ¡Usa este nuevo bloque!
          <xml><block type="controls_repeat_dropdown">

          <title name="TIMES" config="2-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: Para repetir código, arrastra un ciclo ´repetir´,
          luego coloca dentro el bloque que quieres repetir.
      courseD_iceage_loops4_authored_hint:
        courseD_iceage_loops4_a: "¡No tengas miedo de ejecutar tu código y ver qué
          pasa!"
        courseD_iceage_loops4_b: Intenta anotar los pasos que Scrat tomaría para llegar
          a la bellota. ¿Ves un patrón?
        courseD_iceage_loops4_c: Este es el camino que Scrat deberia tomar.
      courseD_iceage_loops4_2019_authored_hint:
        courseD_iceage_loops4_a: "¡No tengas miedo de ejecutar tu código y ver qué
          pasa!"
        courseD_iceage_loops4_b: Intenta anotar los pasos que Scrat tomaría para llegar
          a la bellota. ¿Ves un patrón?
        courseD_iceage_loops4_c: Este es el camino que Scrat deberia tomar.
      courseD_iceage_loops6_authored_hint:
        courseD_iceage_loops6_a: Tu código final tendrá **tres** bloques 'avanzar'.
        courseD_iceage_loops6_b: "¡Solo necesita agregar un ciclo más!"
        courseD_iceage_loops6_c: La ruta final debe verse así.
      courseD_iceage_loops6_2019_authored_hint:
        courseD_iceage_loops6_a: Tu código final tendrá **tres** bloques 'avanzar'.
        courseD_iceage_loops6_b: "¡Solo necesita agregar un ciclo más!"
        courseD_iceage_loops6_c: La ruta final debe verse así.
      courseD_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: Si te quedas atascado, prueba a escribir pasos en
          una hoja de papel. ¿Ves un patrón?
        courseB_iceage_loops7_b: Este es el camino que Scrat debe tomar para llegar
          a la bellota.
      courseD_iceage_loops7_2019_authored_hint:
        courseB_iceage_loops7_a: Si te quedas atascado, prueba a escribir pasos en
          una hoja de papel. ¿Ves un patrón?
        courseB_iceage_loops7_b: Este es el camino que Scrat debe tomar para llegar
          a la bellota.
      courseD_iceage_loops8_authored_hint:
        courseD_iceage_loops8_a: "¿Los bloques 'girar' son correctos? ¿Qué más puedes
          cambiar?"
        courseD_iceage_loops8_b: El primer ciclo deberia repetirse **3** veces, el
          segundo **5** veces, el cuarto **4** veces, y el último **4** veces.
        courseD_iceage_loops8_c: Utiliza ciclos para ayudar a Scrat a que siga este
          camino.
      courseD_iceage_loops8_2019_authored_hint:
        courseD_iceage_loops8_a: "¿Los bloques 'girar' son correctos? ¿Qué más puedes
          cambiar?"
        courseD_iceage_loops8_b: El primer ciclo deberia repetirse **3** veces, el
          segundo **5** veces, el cuarto **4** veces, y el último **4** veces.
        courseD_iceage_loops8_c: Utiliza ciclos para ayudar a Scrat a que siga este
          camino.
      courseD_iceage_loops9_authored_hint:
        courseD_iceage_loops9_a: "¿Tiene problemas? Intente dividir este puzzle en
          partes más pequeñas. No tema ejecutar su puzzle mientras codifica!"
        courseD_iceage_loops9_b: Su código final debería tner **4** loops.
        courseD_iceage_loops9_c: Scrat deberia seguir esta ruta para llegar a la bellota.
      courseD_iceage_loops9_2019_authored_hint:
        courseD_iceage_loops9_a: "¿Tiene problemas? Intente dividir este puzzle en
          partes más pequeñas. No tema ejecutar su puzzle mientras codifica!"
        courseD_iceage_loops9_b: Su código final debería tner **4** loops.
        courseD_iceage_loops9_c: Scrat deberia seguir esta ruta para llegar a la bellota.
      courseD_maze_intro4_2019_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde
          el punto de vista de Red. Si estás mirando hacia la derecha, girar a la
          derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar la bellota.
      courseD_maze_intro5a_2019_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que los giros son desde la perspectiva
          de Red.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_loops_challenge1_authored_hint:
        courseD_bee_nested_loops_challenge1_a: No olvides que puedes `repetir` un
          solo comando o un patrón más largo. ¡Incluso se puede `` repetir\` un bloque
          'repetir'!
        courseD_bee_nested_loops_challenge1_b: Si quieres obtener las 4 gemas, primero
          usa un bucle para alejarte del centro. Gira a la izquierda o a la derecha,
          y luego usa un bucle anidado para pasar de la primera pila del tesoros a
          la segunda. Si repites el bucle anidado lo suficiente, ¡la recolectora se
          moverá por _toda_ la cueva!
        courseD_bee_nested_loops_challenge1_c: El programa más corto que alcanza todo
          el tesoro usa solo un bloque `colectar` y dos turnos.
      courseD_maze_nestedLoops3_authored_hint:
        courseD_maze_nestedLoops3_a: Para resolver este desafío, deberás "anidar"
          un loop 'repetir' dentro de otro.
        courseD_maze_nestedLoops3_b: "¿No sabes dónde colocar el ciclo? Trata de escribir
          el código paso a paso, y buscar un patrón."
        courseD_maze_nestedLoops3_c: Intenta escribir código para una porción recta
          del camino y una vuelta. ¿Puedes repetir esto para llegar al girasol?
      courseD_maze_nestedLoops3_2018_authored_hint:
        courseD_maze_nestedLoops3_a: Para resolver este desafío, deberás "anidar"
          un loop 'repetir' dentro de otro.
        courseD_maze_nestedLoops3_b: "¿No sabes dónde colocar el ciclo? Trata de escribir
          el código paso a paso, y buscar un patrón."
        courseD_maze_nestedLoops3_c: Intenta escribir código para una porción recta
          del camino y una vuelta. ¿Puedes repetir esto para llegar al girasol?
      courseD_maze_nestedLoops3_2019_authored_hint:
        courseD_maze_nestedLoops3_a: Para resolver este desafío, deberás "anidar"
          un loop 'repetir' dentro de otro.
        courseD_maze_nestedLoops3_b: "¿No sabes dónde colocar el ciclo? Trata de escribir
          el código paso a paso, y buscar un patrón."
        courseD_maze_nestedLoops3_c: Intenta escribir código para una porción recta
          del camino y una vuelta. ¿Puedes repetir esto para llegar al girasol?
      courseD_maze_nestedLoops4_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Intenta utilizar este camino a través del laberinto.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Si el patrón es difícil de ver, intenta programarlo
          todo primero y ver qué cosas se repiten una y otra vez antes de colocar
          los loops.
        courseD_maze_nestedLoops4_c: Intenta usar un loop 'repetir' dentro de otro
          para reducir la cantidad de código que necesitas.
      courseD_maze_nestedLoops4_2018_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Intenta utilizar este camino a través del laberinto.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Si el patrón es difícil de ver, intenta programarlo
          todo primero y ver qué cosas se repiten una y otra vez antes de colocar
          los loops.
        courseD_maze_nestedLoops4_c: Intenta usar un loop 'repetir' dentro de otro
          para reducir la cantidad de código que necesitas.
      courseD_maze_nestedLoops4_2019_authored_hint:
        courseD_maze_nestedLoops4_a: |-
          Intenta utilizar este camino a través del laberinto.

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: Si el patrón es difícil de ver, intenta programarlo
          todo primero y ver qué cosas se repiten una y otra vez antes de colocar
          los loops.
        courseD_maze_nestedLoops4_c: Intenta usar un loop 'repetir' dentro de otro
          para reducir la cantidad de código que necesitas.
      courseD_maze_nestedLoops5_authored_hint:
        courseD_maze_nestedLoops5_a: Busca un patrón de escalera en este laberinto
          para encontrar dónde puede usarse un loop anidado.
        courseD_maze_nestedLoops5_b: "¿No sabes dónde colocar el ciclo? Trata de escribir
          el código paso a paso, y buscar un patrón."
      courseD_maze_nestedLoops5_2018_authored_hint:
        courseD_maze_nestedLoops5_a: Busca un patrón de escalera en este laberinto
          para encontrar dónde puede usarse un loop anidado.
        courseD_maze_nestedLoops5_b: "¿No sabes dónde colocar el ciclo? Trata de escribir
          el código paso a paso, y buscar un patrón."
      courseD_maze_nestedLoops5_2019_authored_hint:
        courseD_maze_nestedLoops5_a: Busca un patrón de escalera en este laberinto
          para encontrar dónde puede usarse un loop anidado.
        courseD_maze_nestedLoops5_b: "¿No sabes dónde colocar el ciclo? Trata de escribir
          el código paso a paso, y buscar un patrón."
      courseD_maze_nestedLoops6_authored_hint:
        courseD_maze_nestedLoops6_a: Si estas atorado, intenta escribir el código
          sin loops primero y busca patrones.
        courseD_maze_nestedLoops6_b: Anidar loops 'repetir' puede ayudar a disminuir
          la cantidad de bloques utilizados.
        courseD_maze_nestedLoops6_c: Tomará dos pares de loops 'repetir' anidados
          para resolver este desafío.
      courseD_maze_nestedLoops6_2018_authored_hint:
        courseD_maze_nestedLoops6_a: Si estas atorado, intenta escribir el código
          sin loops primero y busca patrones.
        courseD_maze_nestedLoops6_b: Anidar loops 'repetir' puede ayudar a disminuir
          la cantidad de bloques utilizados.
        courseD_maze_nestedLoops6_c: Tomará dos pares de loops 'repetir' anidados
          para resolver este desafío.
      courseD_maze_nestedLoops6_2019_authored_hint:
        courseD_maze_nestedLoops6_a: Si estas atorado, intenta escribir el código
          sin loops primero y busca patrones.
        courseD_maze_nestedLoops6_b: Anidar loops 'repetir' puede ayudar a disminuir
          la cantidad de bloques utilizados.
        courseD_maze_nestedLoops6_c: Tomará dos pares de loops 'repetir' anidados
          para resolver este desafío.
      courseD_maze_ramp1_authored_hint:
        courseC_maze_programming1_a: Si el pájaro no está llegando al cerdo, asegurate
          de que los bloques están totalmente juntos, a continuación, y haz clic en
          "Ejecutar" de nuevo.
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: Si el pájaro no está llegando al cerdo, asegurate
          de que los bloques están totalmente juntos, a continuación, y haz clic en
          "Ejecutar" de nuevo.
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp1_2019_authored_hint:
        courseC_maze_programming1_a: Si el pájaro no está llegando al cerdo, asegurate
          de que los bloques están totalmente juntos, a continuación, y haz clic en
          "Ejecutar" de nuevo.
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque 'avanzar', arrástralo desde
          el área de la barra de herramientas al espacio de trabajo y conéctalo al
          bloque`al ejecutar`.
        courseC_maze_programming2_b: Asegúrate de hacer clic en los 3 bloques conjuntamente
          y que estén enlazados al bloque 'cuando se ejecuta'.
      courseD_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque 'avanzar', arrástralo desde
          el área de la barra de herramientas al espacio de trabajo y conéctalo al
          bloque`al ejecutar`.
        courseC_maze_programming2_b: Asegúrate de hacer clic en los 3 bloques conjuntamente
          y que estén enlazados al bloque 'cuando se ejecuta'.
      courseD_maze_ramp2_2019_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque 'avanzar', arrástralo desde
          el área de la barra de herramientas al espacio de trabajo y conéctalo al
          bloque`al ejecutar`.
        courseC_maze_programming2_b: Asegúrate de hacer clic en los 3 bloques conjuntamente
          y que estén enlazados al bloque 'cuando se ejecuta'.
      courseD_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \n\nPara eliminar un bloque del medio de su código, arrastra todos los bloques
          debajo de él hacia la derecha y permite que se queden en el espacio de trabajo
          por un tiempo. \n\nHaz clic en el bloque que desea eliminar y arrástralo
          nuevamente a la caja de herramientas. \n\nFinalmente, coloca los otros bloques
          en su lugar."
      courseD_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nPara
          eliminar un bloque en el medio de tu código, arrastra todos los bloques
          debajo de él hacia la derecha y déjalos en el espacio de trabajo por un
          tiempo. \n\nHaz clic en el bloque que deseas eliminar y arrástralo nuevamente
          a la caja de herramientas. \n\nFinalmente, vuelve a poner los otros bloques
          en su lugar."
      courseD_maze_ramp3_2019_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nPara
          eliminar un bloque en el medio de tu código, arrastra todos los bloques
          debajo de él hacia la derecha y déjalos en el espacio de trabajo por un
          tiempo. \n\nHaz clic en el bloque que deseas eliminar y arrástralo nuevamente
          a la caja de herramientas. \n\nFinalmente, vuelve a poner los otros bloques
          en su lugar."
      courseD_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde
          el punto de vista del pájaro. Si estás mirando hacia la derecha, girar a
          la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar al cerdo.
      courseD_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde
          el punto de vista del pájaro. Si estás mirando hacia la derecha, girar a
          la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar al cerdo.
      courseD_maze_ramp4_2019_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde
          el punto de vista de Scrat. Si estás mirando hacia la derecha, girar a la
          derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar la bellota.
      courseD_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp5_2019_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp5a_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp5a_2018_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp5a_2019_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerde que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp5b_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp5b_2018_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp5b_2019_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: Recuerda que girar a la derecha e izquierda es
          desde la perspectiva del pájaro.
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: "¡Hay dos formas de resolver este desafío!"
        courseC_maze_programming6_b: El pájaro comienza mirando a la pared, asi que
          recuerda girar antes de moverte.
        courseC_maze_programming6_c: Recuerda que puedes escribir una parte del código
          a la vez, luego presionar "Ejecutar" para descubrir hacia dónde debe dirigirse
          desde allí.
      courseD_maze_ramp6a_authored_hint:
        courseC_maze_programming6a_a: Utilizar un ciclo de repetición para poner al
          pájaro en movimiento!
      courseD_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseD_maze_ramp7_a: Usa bloques repetir para ejecutar un solo bloque o un
          fragmento de código una y otra vez.
        courseD_maze_ramp7_c: Si quieres simplificar tu código, ¡puedes poner un loop
          repetir dentro de otro! Esto se llama un **loop anidado**.
      courseD_maze_until1_authored_hint:
        courseD_maze_until1_a: "¿Existe alguna secuencia a la que puedas aplicar un
          loop para acortar el código?"
        courseD_maze_until1_b: Intenta usar un ciclo anidado para resolver este acertijo.
      courseD_maze_until1_2018_authored_hint:
        courseD_maze_until1_a: "¿Existe alguna secuencia a la que puedas aplicar un
          loop para acortar el código?"
        courseD_maze_until1_b: Intenta usar un ciclo anidado para resolver este acertijo.
      courseD_maze_until1_2019_authored_hint:
        courseD_maze_until1_a: "¿Existe alguna secuencia a la que puedas aplicar un
          loop para acortar el código?"
        courseD_maze_until1_b: Intenta usar un ciclo anidado para resolver este acertijo.
      courseD_maze_until2_authored_hint:
        courseD_maze_until2_a: "¡Un ciclo 'hasta puerco' te ayudara a seguir hasta
          lograrlo!"
      courseD_maze_until3_authored_hint:
        courseD_maze_until3_a: "-   ¿Qué hace el código? \n-   ¿Qué se supone que
          haga? \n-   ¿Qué te dice eso?"
        courseD_maze_until3_b: Si te estas atorando, intenta escribir todos los pasos
          en una hoja de papel y buscar donde se repiten.
        courseD_maze_until3_c: "¿Hay un patrón de escalón que puedes seguir para este
          desafío?"
        courseD_maze_until3_d: No olvides usar el bloque ´repetir hasta´para hacer
          tu código más corto.
      courseD_maze_until3_2018_authored_hint:
        courseD_maze_until3_a: "-   ¿Qué hace el código? \n-   ¿Qué se supone que
          haga? \n-   ¿Qué te dice eso?"
        courseD_maze_until3_b: Si te estas atorando, intenta escribir todos los pasos
          en una hoja de papel y buscar donde se repiten.
        courseD_maze_until3_c: "¿Hay un patrón de escalón que puedes seguir para este
          desafío?"
        courseD_maze_until3_d: No olvides usar el bloque ´repetir hasta´para hacer
          tu código más corto.
      courseD_maze_until3_2019_authored_hint:
        courseD_maze_until3_a: "-   ¿Qué hace el código? \n-   ¿Qué se supone que
          haga? \n-   ¿Qué te dice eso?"
        courseD_maze_until3_b: Si te estas atorando, intenta escribir todos los pasos
          en una hoja de papel y buscar donde se repiten.
        courseD_maze_until3_c: "¿Hay un patrón de escalón que puedes seguir para este
          desafío?"
        courseD_maze_until3_d: No olvides usar el bloque ´repetir hasta´para hacer
          tu código más corto.
      courseD_maze_until4_authored_hint:
        courseD_maze_until4_a: |-
          Usa el botón ´Paso´para recorrer tu código linea por linea.

          -   ¿Todo funciona en el primer paso?
          -   ¿Todo funciona en el segundo paso?
          -   ¿Dónde ocurre el error?
        courseD_maze_until4_b: "¿Hay un patrón de escalón que puedes seguir para este
          desafío?"
        courseD_maze_until4_c: No olvides usar el bloque ´repetir hasta´para hacer
          tu código más corto.
      courseD_maze_until4_2018_authored_hint:
        courseD_maze_until4_a: |-
          Usa el botón ´Paso´para recorrer tu código linea por linea.

          -   ¿Todo funciona en el primer paso?
          -   ¿Todo funciona en el segundo paso?
          -   ¿Dónde ocurre el error?
        courseD_maze_until4_b: "¿Hay un patrón de escalón que puedes seguir para este
          desafío?"
        courseD_maze_until4_c: No olvides usar el bloque ´repetir hasta´para hacer
          tu código más corto.
      courseD_maze_until4_2019_authored_hint:
        courseD_maze_until4_a: |-
          Usa el botón ´Paso´para recorrer tu código linea por linea.

          -   ¿Todo funciona en el primer paso?
          -   ¿Todo funciona en el segundo paso?
          -   ¿Dónde ocurre el error?
        courseD_maze_until4_b: "¿Hay un patrón de escalón que puedes seguir para este
          desafío?"
        courseD_maze_until4_c: No olvides usar el bloque ´repetir hasta´para hacer
          tu código más corto.
      courseD_maze_until5_authored_hint:
        courseD_maze_until5_a: No te olvides de usar 'si camino a la izquierda´para
          hacer que el zombie continúe revisando donde girar.
        courseD_maze_until5_b: Para usar solo un 'ir hacia adelante', ponlo dentro
          del ciclo 'repetir hasta girasol'.
        courseD_maze_until5_c: Después de cada paso, el zombie debería revisar si
          hay un camino a la izquierda. ¿Qué debería hacer si encuentra uno?
      courseD_maze_until5_2018_authored_hint:
        courseD_maze_until5_b: Para usar solo un 'ir hacia adelante', ponlo dentro
          del ciclo 'repetir hasta girasol'.
      courseD_maze_until5_2019_authored_hint:
        courseD_maze_until5_b: Para usar solo un 'ir hacia adelante', ponlo dentro
          del ciclo 'repetir hasta girasol'.
      courseD_maze_until6_authored_hint:
        courseD_maze_until6_a: Esta vez, intenta usar 'si camino entonces a la derecha'
          para mantener al zombie en el camino.
        courseD_maze_until6_b: Para usar solo un 'ir hacia adelante', ponlo dentro
          del ciclo 'repetir hasta girasol'.
        courseD_maze_until6_c: "¡Aunque hay mas giros aquí que en el ultimo desafío,
          tu código puede ser casi idéntico por el bloque ´repetir hasta´!"
      courseD_maze_until6_2018_authored_hint:
        courseD_maze_until6_b: Para usar solo un 'ir hacia adelante', ponlo dentro
          del ciclo 'repetir hasta girasol'.
      courseD_maze_until6_2019_authored_hint:
        courseD_maze_until6_b: Para usar solo un 'ir hacia adelante', ponlo dentro
          del ciclo 'repetir hasta girasol'.
      courseD_maze_until7_authored_hint:
        courseD_maze_until7_a: "¡No necesitas que tu código sea más largo que la vez
          pasada solo porque el laberinto lo es!"
        courseD_maze_until7_b: "¡Aunque hay mas giros aquí que en el ultimo desafío,
          tu código puede ser casi idéntico por el bloque ´repetir hasta´!"
        courseD_maze_until7_c: "¡Recuerda revisar las rutas a la izquierda, ya que
          girar a la derecha te llevará por el camino equivocado!"
      courseD_maze_until7_2018_authored_hint:
        courseD_maze_until7_a: "¡No necesitas que tu código sea más largo que la vez
          pasada solo porque el laberinto lo es!"
        courseD_maze_until7_b: "¡Aunque hay mas giros aquí que en el ultimo desafío,
          tu código puede ser casi idéntico por el bloque ´repetir hasta´!"
      courseD_maze_until7_2019_authored_hint:
        courseD_maze_until7_a: "¡No necesitas que tu código sea más largo que la vez
          pasada solo porque el laberinto lo es!"
        courseD_maze_until7_b: "¡Aunque hay mas giros aquí que en el ultimo desafío,
          tu código puede ser casi idéntico por el bloque ´repetir hasta´!"
      courseD_maze_until8_authored_hint:
        courseD_maze_until8_a: Asegúrate de estar usando un bloque `si/ si no` para
          mantener al zombi en la dirección correcta.
        courseD_maze_until8_b: 'Con tu bloque `si/ si no`: si hay un camino por delante,
          ¿qué deberías hacer?'
        courseD_maze_until8_c: 'Con tu bloque `si/ si no`: si no hay un camino por
          delante, ¿en qué dirección debes girar?'
      courseD_maze_until8_2018_authored_hint:
        courseD_maze_until8_a: Asegúrate de estar usando un bloque `si/ si no` para
          mantener al zombi en la dirección correcta.
        courseD_maze_until8_b: 'Con tu bloque `si/ si no`: si hay un camino por delante,
          ¿qué deberías hacer?'
        courseD_maze_until8_c: 'Con tu bloque `si/ si no`: si no hay un camino por
          delante, ¿en qué dirección debes girar?'
      courseD_maze_until9_authored_hint:
        courseD_maze_until8_a: Usando 'si camino adelante' te mantendrá avanzando
          siempre que sea posible, ayudándote a evitar los caminos con mordiscos.
        courseD_maze_until8_b: "¿En qué dirección debes girar si no hay un camino
          hacia adelante?"
        courseD_maze_until8_c: "¡Recuerda usar el bloque `repetir hasta` para llevarte
          al girasol!"
      courseD_maze_until9_2018_authored_hint:
        courseD_maze_until8_c: "¡Recuerda usar el bloque `repetir hasta` para llevarte
          al girasol!"
      courseD_maze_until9_2019_authored_hint:
        courseD_maze_until8_c: "¡Recuerda usar el bloque `repetir hasta` para llevarte
          al girasol!"
      courseD_playLab_cond1_authored_hint:
        courseD_playLab_cond1_a: Para resolver este problema, adjunta el bloque 'mover
          actor 1 hacia arriba' al evento 'cuando flecha arriba' y, a continuación,
          haz lo mismo con todas las otras direcciones.
        courseD_playLab_cond1_b: Utilizar los menús desplegables en los bloques 'cuando
          flecha' y 'mover actor' para cambiar la dirección en que van.
        courseD_playLab_cond1_c: ¡Recuerda mover a Pegleg a ambas banderas una vez
          que hagas clic en "Ejecutar"!
      courseD_playLab_cond1_2018_authored_hint:
        courseD_playLab_cond1_a: Para resolver este problema, adjunta el bloque 'mover
          actor 1 hacia arriba' al evento 'cuando flecha arriba' y, a continuación,
          haz lo mismo con todas las otras direcciones.
        courseD_playLab_cond1_b: Utilizar los menús desplegables en los bloques 'cuando
          flecha' y 'mover actor' para cambiar la dirección en que van.
        courseD_playLab_cond1_c: ¡Recuerda mover a Pegleg a ambas banderas una vez
          que hagas clic en "Ejecutar"!
      courseD_playLab_cond1_2019_authored_hint:
        courseD_playLab_cond1_a: Para resolver este problema, adjunta el bloque 'mover
          actor 1 hacia arriba' al evento 'cuando flecha arriba' y, a continuación,
          haz lo mismo con todas las otras direcciones.
        courseD_playLab_cond1_b: Utilizar los menús desplegables en los bloques 'cuando
          flecha' y 'mover actor' para cambiar la dirección en que van.
        courseD_playLab_cond1_c: ¡Recuerda mover a Pegleg a ambas banderas una vez
          que hagas clic en "Ejecutar"!
      courseD_playLab_cond2_authored_hint:
        courseD_playLab_cond2_a: Para tener éxito con este desafío, usa el bloque
          'ganar punto' debajo del evento 'cuando el actor 1 toca actor 2'.
      courseD_playLab_cond2_2018_authored_hint:
        courseD_playLab_cond2_a: Para tener éxito con este desafío, usa el bloque
          'ganar punto' debajo del evento 'cuando el actor 1 toca actor 2'.
      courseD_playLab_cond2_2019_authored_hint:
        courseD_playLab_cond2_a: Para tener éxito con este desafío, usa el bloque
          'ganar punto' debajo del evento 'cuando el actor 1 toca actor 2'.
      courseD_playLab_cond3_authored_hint:
        courseD_playLab_cond3_a: Debes agregar dos bloques a tu loop 'repetir siempre'.
          Uno elegirá una emoción al azar para el dragón (actor 2) y la otra esperará
          un segundo antes de volver a pasar por el loop.
      courseD_playLab_cond3_2018_authored_hint:
        courseD_playLab_cond3_a: Debes agregar dos bloques a tu loop 'repetir siempre'.
          Uno elegirá una emoción al azar para el dragón (actor 2) y la otra esperará
          un segundo antes de volver a pasar por el loop.
      courseD_playLab_cond3_2019_authored_hint:
        courseD_playLab_cond3_a: Debes agregar dos bloques a tu loop 'repetir siempre'.
          Uno elegirá una emoción al azar para el dragón (actor 2) y la otra esperará
          un segundo antes de volver a pasar por el loop.
      courseD_playLab_cond3a_authored_hint:
        courseD_playLab_cond3_c: "-   \\` Si 'el dragón está contento \n\n-   \\`ganar
          punto'\n\n-   `ganar punto`\n\n-   `si no` 'ganar punto\\`"
      courseD_playLab_cond3a_2018_authored_hint:
        courseD_playLab_cond3_c: "-   \\` Si 'el dragón está contento \n\n-   \\`ganar
          punto'\n\n-   `ganar punto`\n\n-   `si no` 'ganar punto\\`"
      courseD_playLab_cond3a_2019_authored_hint:
        courseD_playLab_cond3_c: "-   `Si 'el dragón está contento -` puntaje'\n-
          \  `puntaje` \n-   `El otro` puntaje \\`"
      courseD_playLab_cond3b_authored_hint:
        courseD_playLab_cond3b_a: Usted tendrá que añadir bloques a su ciclo`repita
          siempre` para hacer que el dragón continué moviéndose hacia arriba y hacia
          abajo
      courseD_playLab_cond4_authored_hint:
        courseD_playLab_cond4_a: Utiliza el evento `cuando se ejecuta` para que el
          ninja persiga al pirata.
        courseD_playLab_cond4_b: "¡Hay un bloque especial llamado `establecer a cada
          ninja enmascarado para perseguir al actor` que mantendrá al ninja caliente
          en el camino del pirata!"
        courseD_playLab_cond4_c: Pon el bloque `final del juego como pérdida` debajo
          evento 'cuando actor 1 toca actor 3'.
      courseD_playLab_cond4_2018_authored_hint:
        courseD_playLab_cond4_a: Utiliza el evento `cuando se ejecuta` para que el
          ninja persiga al pirata.
        courseD_playLab_cond4_b: "¡Hay un bloque especial llamado `establecer a cada
          ninja enmascarado para perseguir al actor` que mantendrá al ninja caliente
          en el camino del pirata!"
        courseD_playLab_cond4_c: Pon el bloque `final del juego como pérdida` debajo
          evento 'cuando actor 1 toca actor 3'.
      courseD_playLab_cond4_2019_authored_hint:
        courseD_playLab_cond4_a: Utiliza el evento `cuando se ejecuta` para que el
          ninja persiga al pirata.
        courseD_playLab_cond4_b: "¡Hay un bloque especial llamado `establecer a cada
          ninja enmascarado para perseguir al actor` que mantendrá al ninja caliente
          en el camino del pirata!"
        courseD_playLab_cond4_c: Pon el bloque `final del juego como pérdida` debajo
          evento 'cuando actor 1 toca actor 3'.
      courseD_playLab_cond5_authored_hint:
        courseD_playLab_cond5_a: Usa una afirmación 'si' que compara si la 'puntuación'
          es '>' 5 para resolver este desafío.
        courseD_playLab_cond5_b: Puedes tener más de un loop `repetir siempre` en
          el espacio de trabajo.
      courseD_playLab_cond5_2018_authored_hint:
        courseD_playLab_cond5_a: Usa una afirmación 'si' que compara si la 'puntuación'
          es '>' 5 para resolver este desafío.
        courseD_playLab_cond5_b: Puedes tener más de un loop `repetir siempre` en
          el espacio de trabajo.
      courseD_playLab_cond5_2019_authored_hint:
        courseD_playLab_cond5_a: Usa una afirmación 'si' que compara si la 'puntuación'
          es '>' 5 para resolver este desafío.
        courseD_playLab_cond5_b: Puedes tener más de un loop `repetir siempre` en
          el espacio de trabajo.
      courseD_playLab_cond6_authored_hint:
        courseD_playLab_cond6_a: Agrega el bloque `establecer velocidad de ninja enmascarada`
          al comienzo del programa para ayudar a frenar al ninja.
        courseD_playLab_cond6_b: Tendrás que utilizar un bloque `si actor 1 y la posición
          > 255` dentro de un bloque 'repetir siempre\` para comprobar siempre si
          el pirata está por debajo de los pulpos.
      courseD_playLab_cond6_2018_authored_hint:
        courseD_playLab_cond6_a: Agrega el bloque `establecer velocidad de ninja enmascarada`
          al comienzo del programa para ayudar a frenar al ninja.
        courseD_playLab_cond6_b: Tendrás que utilizar un bloque `si actor 1 y la posición
          > 255` dentro de un bloque 'repetir siempre\` para comprobar siempre si
          el pirata está por debajo de los pulpos.
      courseD_playLab_cond6_2019_authored_hint:
        courseD_playLab_cond6_a: Agrega el bloque `establecer velocidad de ninja enmascarada`
          al comienzo del programa para ayudar a frenar al ninja.
        courseD_playLab_cond6_c: La 'zona segura' es un área a la que el ninja no
          puede entrar; por eso es segura para el pirata.
        courseD_playLab_cond6_b: Tendrás que utilizar un bloque `si actor 1 y la posición
          > 255` dentro de un bloque 'repetir siempre\` para comprobar siempre si
          el pirata está por debajo de los pulpos.
      courseD_playLab_cond6a_authored_hint:
        courseD_playLab_cond6_c: Agregar un bloque 'espere 1 segundo' en la parte
          superior del ciclo 'repetir por siempre' que comprueba la posición del pirata
          (pero no dentro de la instrucción 'si') para evitar que los puntos se eliminen
          muy rápidamente.
      courseD_playLab_cond6a_2018_authored_hint:
        courseD_playLab_cond6_c: Agrega un bloque 'esperar 1 segundo' en la parte
          superior del loop 'repetir siempre' que comprueba la posición del pirata
          (pero no dentro de la afirmación 'si') para evitar que los puntos se eliminen
          muy rápidamente.
      courseD_playLab_cond6a_2019_authored_hint:
        courseD_playLab_cond6_c: Agrega un bloque 'esperar 1 segundo' en la parte
          superior del loop 'repetir siempre' que comprueba la posición del pirata
          (pero no dentro de la afirmación 'si') para evitar que los puntos se eliminen
          muy rápidamente.
      courseD_playLab_cond6cloneForTest_authored_hint:
        courseD_playLab_cond6_a: Agrega el bloque `establecer velocidad de ninja enmascarada`
          al comienzo del programa para ayudar a frenar al ninja.
        courseD_playLab_cond6_b: Usted tendrá que utilizar un `si el actor 1 y la
          posición> 255` bloque dentro de un`repita siempre` para comprobar siempre
          si el pirata es por debajo de los pulpos.
        courseD_playLab_cond6_c: Agrega un bloque 'esperar 1 segundo' en la parte
          superior del loop 'repetir siempre' que comprueba la posición del pirata
          (pero no dentro de la afirmación 'si') para evitar que los puntos se eliminen
          muy rápidamente.
      courseD_scrat_ramp1_authored_hint:
        courseC_maze_programming1_a: Si Scrat no alcanza a llegar a la bellota, asegúrate
          que los tres bloques estén completamente ensamblados, entonces haz clic
          en 'Ejecutar' nuevamente.
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_scrat_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: Si Scrat no alcanza a llegar a la bellota, asegúrate
          que los tres bloques estén completamente ensamblados, entonces haz clic
          en 'Ejecutar' nuevamente.
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_scrat_ramp2_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque `avanzar`, arrástralo desde
          el área de la barra de herramientas al espacio de trabajo y conéctelo al
          bloque`al ejecutar`.
        courseC_maze_programming2_b: Hacer que los tres bloques`movimiento adelante`
          estén unidos al bloque`cuando corra`.
      courseD_scrat_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque 'avanzar', arrástralo desde
          el área de la barra de herramientas al espacio de trabajo y conéctalo al
          bloque`al ejecutar`.
        courseC_maze_programming2_b: Asegúrate que los tres bloques 'avanzar' estén
          unidos al bloque 'cuando corre'.
      courseD_scrat_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \n\nPara eliminar un bloque del medio de su código, arrastre todos los bloques
          debajo de él hacia la derecha y permita que se sienten en el espacio de
          trabajo por un tiempo. \n\nHaga clic en el bloque que desea eliminar y arrástrelo
          nuevamente a la caja de herramientas. \n\nFinalmente, coloque sus otros
          bloques en su lugar a donde pertenecen."
        courseC_maze_programming3_b: Recuerda que los giros a la derecha e izquierda
          son desde la perspectiva de Scrat.
      courseD_scrat_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nPara
          eliminar un bloque en el medio de tu código, arrastra todos los bloques
          debajo de él hacia la derecha y déjalos en el espacio de trabajo por un
          tiempo. \n\nHaz clic en el bloque que deseas eliminar y arrástralo nuevamente
          a la caja de herramientas. \n\nFinalmente, vuelve a poner los otros bloques
          en su lugar."
        courseC_maze_programming3_b: Recuerda que los giros a la derecha e izquierda
          son desde la perspectiva de Scrat.
      courseD_scrat_ramp4_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde
          el punto de vista de Scrat. Si estás mirando hacia la derecha, girar a la
          derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar la bellota.
        courseC_maze_programming4_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_scrat_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde
          el punto de vista de Scrat. Si estás mirando hacia la derecha, girar a la
          derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar la bellota.
        courseC_maze_programming4_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_scrat_ramp5_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: "¿Qué tan lejos necesita moverse para llegar
          a la esquina?"
        courseC_maze_programming5_c: Tendrás que girar a la izquierda en la esquina
          para llegar a la bellota.
      courseD_scrat_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: "¿Qué tan lejos necesitas moverte para llegar
          a la esquina?"
        courseC_maze_programming5_c: Tendrás que girar a la izquierda en la esquina
          para llegar a la bellota.
      courseD_scrat_ramp6_authored_hint:
        courseC_maze_programming6a_a: Usa un loop 'repetir' para poner a Scrat en
          movimiento!
      courseD_scrat_ramp6_2018_authored_hint:
        courseC_maze_programming6a_a: Usa un loop 'repetir' para poner a Scrat en
          movimiento!
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: "¡Hay dos formas de resolver este desafío!"
        courseD_scrat_programming6_b: Recuerda girar primero antes de moverte, ya
          que Scrat está mirando en la dirección incorrecta.
        courseD_scrat_programming6_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: "¡Hay dos formas de resolver este desafío!"
        courseD_scrat_programming6_b: Recuerda girar primero antes de moverte, ya
          que Scrat está mirando en la dirección incorrecta.
        courseD_scrat_programming6_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseD_scrat_ramp8_authored_hint:
        courseD_maze_ramp7_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseD_maze_ramp7_a: Usa bloques repetidos para ejecutar un solo bloque o
          un fragmento de código una y otra vez.
        courseD_maze_ramp7_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
      courseD_scrat_ramp8_2018_authored_hint:
        courseD_maze_ramp7_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseD_maze_ramp7_a: Usa bloques repetir para ejecutar un solo bloque o un
          fragmento de código una y otra vez.
        courseD_maze_ramp7_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
      courseE_artist_concept1_authored_hint:
        courseE_artist_concept1_a: Los hexágonos tienen lados de 50 pixeles y giros
          de 60 grados hacia la derecha.
        courseE_artist_concept1_b: Intente utilizar una función aquí para que no tenga
          que escribir el código de un hexágono una y otra vez.
        courseE_artist_concept1_c: Utiliza el bloque `establecer ancho` antes de cada
          llamada de función para cambiar el ancho del lápiz.
      courseE_artist_concept1_2018_authored_hint:
        courseE_artist_concept1_a: Los hexágonos tienen lados de 50 pixeles y giros
          de 60 grados hacia la derecha.
        courseE_artist_concept1_b: Intente utilizar una función aquí para que no tenga
          que escribir el código de un hexágono una y otra vez.
        courseE_artist_concept1_c: Utiliza el bloque `establecer ancho` antes de cada
          llamada de función para cambiar el ancho del lápiz.
      courseE_artist_concept1_2019_authored_hint:
        courseE_artist_concept1_a: Los hexágonos tienen lados de 50 pixeles y giros
          de 60 grados hacia la derecha.
        courseE_artist_concept1_b: Intente utilizar una función aquí para que no tenga
          que escribir el código de un hexágono una y otra vez.
        courseE_artist_concept1_c: Utiliza el bloque `establecer ancho` antes de cada
          llamada de función para cambiar el ancho del lápiz.
      courseE_artist_concept4_authored_hint:
        courseE_artist_concept4_a: Hay varias formas de resolver este desafío. ¿Puedes
          hacer un plan?
        courseE_artist_concept4_b: Intenta crear un cuadrado, haz una línea de cuadrados.
          ¿Que viene después?
        courseE_artist_concept4_c: Después de dibujar una línea de cuadrados, puedes
          dar la vuelta y dibujar otra línea de cuadrados hacia la izquierda, o puedes
          saltar hacia el lado izquierdo de la figura para dibujar otra línea de cuadrados
          hacia la derecha. ¿Cual prefieres?
      courseE_artist_concept4_2018_authored_hint:
        courseE_artist_concept4_a: Hay varias formas de resolver este desafío. ¿Puedes
          hacer un plan?
        courseE_artist_concept4_b: Intenta crear un cuadrado, haz una línea de cuadrados.
          ¿Que viene después?
        courseE_artist_concept4_c: Después de dibujar una línea de cuadrados, puedes
          dar la vuelta y dibujar otra línea de cuadrados hacia la izquierda, o puedes
          saltar hacia el lado izquierdo de la figura para dibujar otra línea de cuadrados
          hacia la derecha. ¿Cual prefieres?
      courseE_artist_concept4_2019_authored_hint:
        courseE_artist_concept4_a: Hay varias formas de resolver este desafío. ¿Puedes
          hacer un plan?
        courseE_artist_concept4_b: Intenta crear un cuadrado, haz una línea de cuadrados.
          ¿Que viene después?
        courseE_artist_concept4_c: Después de dibujar una línea de cuadrados, puedes
          dar la vuelta y dibujar otra línea de cuadrados hacia la izquierda, o puedes
          saltar hacia el lado izquierdo de la figura para dibujar otra línea de cuadrados
          hacia la derecha. ¿Cual prefieres?
      courseE_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una \*\* longitud
          de 30 \*\* y gira a la derecha por \*\* 60 grados \*\*.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una **longitud
          de 80** y gira a la derecha por **120 grados**. '
        courseE_artist_concept_challenge1_c: |-
          Este es el diseño que quieres repetir para crear la forma completa:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge1_2018_authored_hint:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una \*\* longitud
          de 30 \*\* y gira a la derecha por \*\* 60 grados \*\*.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una **longitud
          de 80** y gira a la derecha por **120 grados**. '
        courseE_artist_concept_challenge1_c: |-
          Este es el diseño que quieres repetir para crear la forma completa:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge1_2019_authored_hint:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una \*\* longitud
          de 30 \*\* y gira a la derecha por \*\* 60 grados \*\*.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una **longitud
          de 80** y gira a la derecha por **120 grados**. '
        courseE_artist_concept_challenge1_c: |-
          Este es el diseño que quieres repetir para crear la forma completa:

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge2_authored_hint:
        courseE_artist_concept_challenge2_a: "¡Una vez que definas una función, puedes
          llamarla una y otra vez, cuando y donde quieras!"
        courseE_artist_concept_challenge2_b: |-
          Puedes saltar a diferentes posiciones en el lienzo usando este comando:

          <xml>  <block type="jump_to">

          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_concept_challenge2_2018_authored_hint:
        courseE_artist_concept_challenge2_a: "¡Una vez que definas una función, puedes
          llamarla una y otra vez, cuando y donde quieras!"
        courseE_artist_concept_challenge2_b: |-
          Puedes saltar a diferentes posiciones en el lienzo usando este comando:

          <xml>  <block type="jump_to">

          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_concept_challenge2_2019_authored_hint:
        courseE_artist_concept_challenge2_a: "¡Una vez que definas una función, puedes
          llamarla una y otra vez, cuando y donde quieras!"
        courseE_artist_concept_challenge2_b: |-
          Puedes saltar a diferentes posiciones en el lienzo usando este comando:

          <xml>  <block type="jump_to">

          <title name="VALUE">???</title>
          </block></xml>
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: Los cuadrados tienen 100 pixeles por lado cada
          uno, eso significa que tendrás que moverte hacia adelante 175 pixeles antes
          de dibujar tu segundo cuadrado.
        courseE_artist_functions1_b: Está correcto dibujar líneas superpuestas para
          hacer tus anteojos.
        courseE_artist_functions1_c: Para código más corto, intenta usar un loop 'repetir'
          para dibujar los cuadrados de los anteojos.
      courseE_artist_functions10_authored_hint:
        courseD_artist_functions10_b: Este dibujo es muy similar al anterior, pero
          la función `dibujar linea` está dibujando una forma diferente.
        courseD_artist_functions10_a: Para evitar usar múltiples bloques 'avanzar',
          crea una función 'dibujar hexágono' y llámala varias veces.
        courseD_artist_functions10_c: "¿Ves en qué lugar este dibujo podría usar una
          función llamada `línea de hexágonos`? \n\n![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)"
      courseE_artist_functions10_2018_authored_hint:
        courseD_artist_functions10_b: Este dibujo es muy similar al anterior, pero
          la función `dibujar linea` está dibujando una forma diferente.
        courseD_artist_functions10_a: Para evitar usar múltiples bloques 'avanzar',
          crea una función 'dibujar hexágono' y llámala varias veces.
        courseD_artist_functions10_c: "¿Ves en qué lugar este dibujo podría usar una
          función llamada `línea de hexágonos`? \n\n![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)"
      courseE_artist_functions10_2019_authored_hint:
        courseD_artist_functions10_b: Este dibujo es muy similar al anterior, pero
          la función `dibujar linea` está dibujando una forma diferente.
        courseD_artist_functions10_a: Para evitar usar múltiples bloques 'avanzar',
          crea una función 'dibujar hexágono' y llámala varias veces.
        courseD_artist_functions10_c: "¿Ves en qué lugar este dibujo podría usar una
          función llamada `línea de hexágonos`? \n\n![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)"
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: Los cuadrados tienen 100 pixeles por lado cada
          uno, eso significa que tendrás que moverte hacia adelante 175 pixeles antes
          de dibujar tu segundo cuadrado.
        courseE_artist_functions1_b: Está correcto dibujar líneas superpuestas para
          hacer tus anteojos.
        courseE_artist_functions1_c: Para código más corto, intenta usar un loop 'repetir'
          para dibujar los cuadrados de los anteojos.
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_b: La función que escribes no debería contener el
          programa completo, sólo la parte que dibuja un cuadrado con lado de 100
          pixeles.
        courseD_artist_functions2_c: |-
          Utiliza el bloque verde 'dibujar un cuadrado' para "llamar" a tu función debajo del bloque 'cuando ejecutar'. De lo contrario, el código en la función no se ejecutará.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          El programa debe:

          -   Usar la función
          -   Avanzar 100 + 75 pixeles
          -   Usar la función
      courseE_artist_functions2_2018_authored_hint:
        courseD_artist_functions2_b: La función no debería contener el programa completo,
          sólo la parte que dibuja un cuadrado con lado de 100 pixels.
        courseD_artist_functions2_c: |-
          Asegúrate de utilizar el bloque verde 'dibujar un cuadrado' para "llamar" a tu función. De lo contrario, el código en la función no se ejecutará.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Tu programa debe:

          -   Usar la función
          -   Avanzar 100 + 75 pixeles
          -   Volver a usar la función
      courseE_artist_functions2_2019_authored_hint:
        courseD_artist_functions2_b: La función no debería contener el programa completo,
          sólo la parte que dibuja un cuadrado con lado de 100 pixels.
        courseD_artist_functions2_c: |-
          Asegúrate de utilizar el bloque verde 'dibujar un cuadrado' para "llamar" a tu función. De lo contrario, el código en la función no se ejecutará.

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          Tu programa debe:

          -   Usar la función
          -   Avanzar 100 + 75 pixeles
          -   Volver a usar la función
      courseE_artist_functions3_authored_hint:
        courseD_artist_functions3_a: |-
          Para resolver este desafío, sólo necesitas agregar un loop que repita el código de inicio 8 veces.

          Si no puedes recordar cuál era el código de inicio, haz clic en "comenzar de nuevo" en la esquina superior derecha del espacio de trabajo.
        courseD_artist_functions3_b: Tu loop debe tener los 3 bloques de código de
          inicio dentro de él.
      courseE_artist_functions4_authored_hint:
        courseD_artist_functions4_a: "¡Intenta usar una función!"
        courseD_artist_functions4_b: Arrastra el bloque de función `dibujar estrella`
          fuera de la caja de herramientas para comenzar a construir tu función. Debería
          tener el mismo código que el desafío anterior, ya que estás dibujando el
          mismo patrón de estrella.
        courseD_artist_functions4_c: Usa el bloque verde `dibujar estrella` para llamar
          a esta función a tu programa principal. ¡No te olvides de saltar hacia adelante
          entre cada estrella!
      courseE_artist_functions4_2018_authored_hint:
        courseD_artist_functions4_a: "¡Intenta usar una función!"
        courseD_artist_functions4_b: Arrastra el bloque de función `dibujar estrella`
          fuera de la caja de herramientas para comenzar a construir tu función. Debería
          tener el mismo código que el desafío anterior, ya que estás dibujando el
          mismo patrón de estrella.
        courseD_artist_functions4_c: Usa el bloque verde `dibujar estrella` para llamar
          a esta función a tu programa principal. ¡No te olvides de saltar hacia adelante
          entre cada estrella!
      courseE_artist_functions5_authored_hint:
        courseD_artist_functions5_a: "¡No te rindas! Recuerda lo que has estado aprendiendo."
        courseD_artist_functions5_b: Las funciones facilitan la llamada al código
          guardado en cualquier momento, ¡no solo desde dentro de un loop!
        courseD_artist_functions5_c: Comienza arrastrando el código para una forma
          de estrella en la función 'dibujar estrella', entonces utiliza esta función
          para dibujar las tres estrellas!
      courseE_artist_functions5_2018_authored_hint:
        courseD_artist_functions5_a: "¡No te rindas! Recuerda lo que has estado aprendiendo."
        courseD_artist_functions5_b: Las funciones facilitan la llamada al código
          guardado en cualquier momento, ¡no solo desde dentro de un loop!
        courseD_artist_functions5_c: Comience arrastrando el código de una forma de
          estrella en la función \` dibujar una estrella de Estados Unidos, a continuación,
          utilizar esta función para dibujar las tres estrellas!
      courseE_artist_functions5_2019_authored_hint:
        courseD_artist_functions5_a: "¡No te rindas! Recuerda lo que has estado aprendiendo."
        courseD_artist_functions5_b: Las funciones facilitan la llamada al código
          guardado en cualquier momento, ¡no solo desde dentro de un loop!
        courseD_artist_functions5_c: Comience arrastrando el código de una forma de
          estrella en la función \` dibujar una estrella de Estados Unidos, a continuación,
          utilizar esta función para dibujar las tres estrellas!
      courseE_artist_functions6_authored_hint:
        grade4_artist_functions_windows0_a: Concéntrese sólo en hacer una ventana
          por ahora. Vamos a crear una función para el siguiente desafío.
        grade4_artist_functions_windows0_b: Intenta usar loops anidados. El loop interno
          hará que el cuadrado y el loop externo roten el cuadrado cuatro veces.
        grade4_artist_functions_windows0_c: "¡No tengas miedo de cometer un error!
          Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso
          si aún no has resuelto el desafío."
      courseE_artist_functions6_2018_authored_hint:
        grade4_artist_functions_windows0_a: Concéntrese sólo en hacer una ventana
          por ahora. Vamos a crear una función para el siguiente desafío.
        grade4_artist_functions_windows0_b: Intenta usar loops anidados. El loop interno
          hará que el cuadrado y el loop externo roten el cuadrado cuatro veces.
        grade4_artist_functions_windows0_c: "¡No tengas miedo de cometer un error!
          Intenta agregar bloques y ejecutar el código para ver qué sucederá, incluso
          si aún no has resuelto el desafío."
      courseE_artist_functions7_authored_hint:
        courseD_artist_functions7_a: Trata de crear tu función primero y luego agregar
          ventanas una a la vez.
        courseD_artist_functions7_b: No deberías necesitar agregar ningún loop repetir
          adicional. Simplemente salta al artista 100 píxeles entre cada ventana superior,
          luego baja 150 píxeles para llegar a las ventanas inferiores.
      courseE_artist_functions7_2018_authored_hint:
        courseD_artist_functions7_a: Trata de crear tu función primero y luego agregar
          ventanas una a la vez.
        courseD_artist_functions7_b: Para llegar desde las ventanas superiores a las
          ventanas inferiores, simplemente gira a la derecha el artista, salta 150
          pixeles, gira nuevamente a la derecha el artista!  Ahora el artista estará
          mirando  en la dirección correcta para terminar el resto de la casa!
      courseE_artist_functions7_2019_authored_hint:
        courseD_artist_functions7_a: Trata de crear tu función primero y luego agregar
          ventanas una a la vez.
        courseD_artist_functions7_b: Para llegar desde las ventanas superiores a las
          ventanas inferiores, simplemente gira a la derecha el artista, salta 150
          pixeles, gira nuevamente a la derecha el artista!  Ahora el artista estará
          mirando  en la dirección correcta para terminar el resto de la casa!
      courseE_artist_functions8_authored_hint:
        courseD_artist_functions8_f: Sólo necesitas un bloque 'avanzar', pero necesitarás
          varios bloques 'saltar adelante' o 'salto atrás'!
        courseD_artist_functions8_a: Comienza haciendo una función para un cuadrado,
          luego intenta hacer una función para una línea de cuadrados. ¿Cómo usarías
          la función `dibujar línea de cuadrados` para hacer esta imagen?
        courseD_artist_functions8_d: "Para hacer una línea de cuadrados,\n\n-   repite
          3 veces \n-   dibuja un cuadrado con lados de **50 pixeles** \n-   salta
          **100 pixeles** hacia adelante"
        courseD_artist_functions8_b: "Piensa en cada fila de esta imagen como una
          línea de 3 cuadrados. ¿Cuántas líneas de cuadrados hay y dónde comienzas
          a dibujar cada uno de ellas? \n\n![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10
          Hint Drawing.png>)"
        courseD_artist_functions8_c: Al final de cada línea de cuadrados, el artista
          tendrá que saltar hacia abajo y hacia atrás antes de dibujar la siguiente
          línea de cuadrados.
        courseD_artist_functions8_g: "! \\[] (<https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif>)"
      courseE_artist_functions8_2018_authored_hint:
        courseD_artist_functions8_f: Sólo necesitas un bloque 'avanzar', pero necesitarás
          varios bloques 'saltar adelante' o 'salto atrás'!
        courseD_artist_functions8_a: Comienza haciendo una función para un cuadrado,
          luego intenta hacer una función para una línea de cuadrados. ¿Cómo usarías
          la función `dibujar línea de cuadrados` para hacer esta imagen?
        courseD_artist_functions8_d: "Para hacer una línea de cuadrados,\n\n-   repite
          3 veces \n-   dibuja un cuadrado con lados de **50 pixeles** \n-   salta
          **100 pixeles** hacia adelante"
        courseD_artist_functions8_b: "Piensa en cada fila de esta imagen como una
          línea de 3 cuadrados. ¿Cuántas líneas de cuadrados hay y dónde comienzas
          a dibujar cada uno de ellas? \n\n![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10
          Hint Drawing.png>)"
        courseD_artist_functions8_c: Al final de cada línea de cuadrados, el artista
          tendrá que saltar hacia abajo y hacia atrás antes de dibujar la siguiente
          línea de cuadrados.
        courseD_artist_functions8_g: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      courseE_artist_functions8_2019_authored_hint:
        courseD_artist_functions8_f: Sólo necesitas un bloque 'avanzar', pero necesitarás
          varios bloques 'saltar adelante' o 'salto atrás'!
        courseD_artist_functions8_a: Comienza haciendo una función para un cuadrado,
          luego intenta hacer una función para una línea de cuadrados. ¿Cómo usarías
          la función `dibujar línea de cuadrados` para hacer esta imagen?
        courseD_artist_functions8_d: "Para hacer una línea de cuadrados,\n\n-   repite
          3 veces \n-   dibuja un cuadrado con lados de **50 pixeles** \n-   salta
          **100 pixeles** hacia adelante"
        courseD_artist_functions8_b: "Piensa en cada fila de esta imagen como una
          línea de 3 cuadrados. ¿Cuántas líneas de cuadrados hay y dónde comienzas
          a dibujar cada uno de ellas? \n\n![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10
          Hint Drawing.png>)"
        courseD_artist_functions8_c: Al final de cada línea de cuadrados, el artista
          tendrá que saltar hacia abajo y hacia atrás antes de dibujar la siguiente
          línea de cuadrados.
        courseD_artist_functions8_g: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      courseE_artist_functions8b_2018_authored_hint:
        courseD_artist_functions8_f: Si lo hace correctamente, solo necesita avanzar
          un bloque!
        courseD_artist_functions8_a: Inicia con una función por cada bloque, después
          intenta hacer una función por una línea de bloques.
        courseD_artist_functions8_d: |-
          Para hacer una línea de cuadrados,

          -   repite 3 veces
          -   dibuja un cuadrado
          -   salta **100 pixeles** hacia adelante
      courseE_artist_functions8b_2019_authored_hint:
        courseD_artist_functions8_f: Si lo hace correctamente, solo necesita avanzar
          un bloque!
        courseD_artist_functions8_a: Inicia con una función por cada bloque, después
          intenta hacer una función por una línea de bloques.
        courseD_artist_functions8_d: |-
          Para hacer una línea de cuadrados,

          -   repite 3 veces
          -   dibuja un cuadrado
          -   salta **100 pixeles** hacia adelante
      courseE_artist_functions8c_2018_authored_hint:
        courseD_artist_functions8_f: Esto es mas fácil de lo que parece, ¡Aquí no
          debe mover ni hacer saltar ningún bloque!
        courseD_artist_functions8_a: "¡La segunda línea de cuadrados es diferente
          de la primera por solo un giro de 180 grados!"
        courseD_artist_functions8_c: Al final de cada línea de cuadrados, el artista
          solo debe girar 180 grados antes de dibujar la siguiente línea. ¡Pon toda
          la instrucción en un lazo de repetición para iniciar el siguiente ejercicio!
      courseE_artist_functions8c_2019_authored_hint:
        courseD_artist_functions8_f: Esto es mas fácil de lo que parece, ¡Aquí no
          debe mover ni hacer saltar ningún bloque!
        courseD_artist_functions8_a: "¡La segunda línea de cuadrados es diferente
          de la primera por solo un giro de 180 grados!"
        courseD_artist_functions8_c: Al final de cada línea de cuadrados, el artista
          solo debe girar 180 grados antes de dibujar la siguiente línea. ¡Pon toda
          la instrucción en un lazo de repetición para iniciar el siguiente ejercicio!
      courseE_artist_functions9_authored_hint:
        courseD_artist_functions9_e: "¿Puedes identificar los cuatro lugares donde
          se puede usar la `línea de triángulos` en este dibujo? \n\n![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)"
        courseD_artist_functions9_a: |-
          Este desafío puede dividirse en tres partes:

          -   crear la función `dibujar un triángulo`
          -   crear la función `dibujar una línea de triángulos`
          -   usar la función `dibujar una línea de triángulos` cuatro veces para completar el dibujo
        courseD_artist_functions9_b: Este dibujo se hizo mediante la elaboración de
          una línea de triángulos 4 veces y girando ya sea 60 ó 120 grados antes de
          dibujar la línea siguiente del triángulo.
        courseD_artist_functions9_c: "Para dibujar una línea de triángulos: \n\n-
          \  repite 4 veces \n-   dibuja un triángulo \n-   salta 50 pixeles hacia
          adelante"
        courseD_artist_functions9_d: "Para dibujar el diamante: \n\n-   repite 2 veces
          \n-   dibuja una línea de triángulos \n-   gira 60 grados \n-   dibuja una
          línea de triángulos \n-   gira 120 grados"
      courseE_artist_functions9_2018_authored_hint:
        courseD_artist_functions9_e: "¿Puedes identificar los cuatro lugares donde
          se puede usar la `línea de triángulos` en este dibujo? \n\n![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)"
        courseD_artist_functions9_a: |-
          Este desafío puede dividirse en tres partes:

          -   crear la función `dibujar un triángulo`
          -   crear la función `dibujar una línea de triángulos`
          -   usar la función `dibujar una línea de triángulos` cuatro veces para completar el dibujo
        courseD_artist_functions9_b: Este dibujo se hizo mediante la elaboración de
          una línea de triángulos 4 veces y girando ya sea 60 ó 120 grados antes de
          dibujar la línea siguiente del triángulo.
        courseD_artist_functions9_c: "Para dibujar una línea de triángulos: \n\n-
          \  repite 4 veces \n-   dibuja un triángulo \n-   salta 50 pixeles hacia
          adelante"
        courseD_artist_functions9_d: "Para dibujar el diamante: \n\n-   repite 2 veces
          \n-   dibuja una línea de triángulos \n-   gira 60 grados \n-   dibuja una
          línea de triángulos \n-   gira 120 grados"
      courseE_artist_functions9_2019_authored_hint:
        courseD_artist_functions9_e: "¿Puedes identificar los cuatro lugares donde
          se puede usar la `línea de triángulos` en este dibujo? \n\n![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)"
        courseD_artist_functions9_a: |-
          Este desafío puede dividirse en tres partes:

          -   crear la función `dibujar un triángulo`
          -   crear la función `dibujar una línea de triángulos`
          -   usar la función `dibujar una línea de triángulos` cuatro veces para completar el dibujo
        courseD_artist_functions9_b: Este dibujo se hizo mediante la elaboración de
          una línea de triángulos 4 veces y girando ya sea 60 ó 120 grados antes de
          dibujar la línea siguiente del triángulo.
        courseD_artist_functions9_c: "Para dibujar una línea de triángulos: \n\n-
          \  repite 4 veces \n-   dibuja un triángulo \n-   salta 50 pixeles hacia
          adelante"
        courseD_artist_functions9_d: "Para dibujar el diamante: \n\n-   repite 2 veces
          \n-   dibuja una línea de triángulos \n-   gira 60 grados \n-   dibuja una
          línea de triángulos \n-   gira 120 grados"
      courseE_artist_functions_challenge_authored_hint:
        courseE_artist_functions_challenge_a: Si llamas a la función una vez más,
          puedes crear el mismo diseño en la esquina final. ¡También puedes "saltar
          a" otras posiciones o cambiar todo como quieras!
      courseE_artist_functions_challenge1_authored_hint:
        courseE_artist_functions_challenge1_a: Si llamas a la función una vez más,
          puedes crear el mismo diseño en la esquina final.
        courseE_artist_functions_challenge1_b: "¡También puedes 'saltar a' otras posiciones
          o cambiar el diseño completo como lo desees!"
      courseE_artist_functions_challenge1_2018_authored_hint:
        courseE_artist_functions_challenge1_a: Si llamas a la función una vez más,
          puedes crear el mismo diseño en la esquina final.
        courseE_artist_functions_challenge1_b: "¡También puedes 'saltar a' otras posiciones
          o cambiar el diseño completo como lo desees!"
      courseE_artist_functions_challenge1_2019_authored_hint:
        courseE_artist_functions_challenge1_a: Si llamas a la función una vez más,
          puedes crear el mismo diseño en la esquina final.
        courseE_artist_functions_challenge1_b: "¡También puedes 'saltar a' otras posiciones
          o cambiar el diseño completo como lo desees!"
      courseE_artist_functions_challenge2_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n<block type=\"jump_to_xy\">\n<title
          name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nEste
          bloque `saltar a` te permite mover el artista zombie a cualquier pixel en
          la cuadrícula, siempre que lo desees. Para ello, debes moverlo un número
          de pixeles hacia la derecha y otro hacia abajo. Esto siempre se cuenta desde
          la esquina superior izquierda, lo que significa que no importa dónde esté
          el artista zombi _antes_ de que se ejecute el comando. \n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_challenge2_2018_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n<block type=\"jump_to_xy\">\n<title
          name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nEste
          bloque `saltar a` te permite mover el artista zombie a cualquier pixel en
          la cuadrícula, siempre que lo desees. Para ello, debes moverlo un número
          de pixeles hacia la derecha y otro hacia abajo. Esto siempre se cuenta desde
          la esquina superior izquierda, lo que significa que no importa dónde esté
          el artista zombi _antes_ de que se ejecute el comando. \n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_functions_challenge2_2019_authored_hint:
        courseE_artist_functions_challenge1_a: "<xml>\n<block type=\"jump_to_xy\">\n<title
          name=\"XPOS\">350</title>\n<title name=\"YPOS\">200</title>\n</block>\n</xml>\n\nEste
          bloque `saltar a` te permite mover el artista zombie a cualquier pixel en
          la cuadrícula, siempre que lo desees. Para ello, debes moverlo un número
          de pixeles hacia la derecha y otro hacia abajo. Esto siempre se cuenta desde
          la esquina superior izquierda, lo que significa que no importa dónde esté
          el artista zombi _antes_ de que se ejecute el comando. \n\n![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)"
      courseE_artist_ramp10_authored_hint:
        courseD_artist_ramp10_a: No olvide girar 60 grados después de cada triángulo.
          ¿Qué ciclo necesitas para poner esa instrucción adentro?
        courseD_artist_ramp10_b: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_ramp10_c: El artista dibujará seis triángulos en total:! \[]
          (Https\://images.code.org/752d82f3afdca0a7d7c01d6fa2abb583-image-1499889821499.2\_solution2.gif)
      courseE_artist_ramp11_authored_hint:
        courseD_artist_ramp11a: Para dibujar un lado, utiliza el bloque `avanzar 100
          pixeles`, y cambiar el 100 a un 200.
        courseD_artist_ramp11b: "Para dibujar 4 lados, ubica el bloque `avanzar por
          100 píxeles` dentro de un loop repetir y asegúrate que el loop esté ajustado
          para dibujar 4 veces. \n\n¡No te olvides de girar después!"
      courseE_artist_ramp12_authored_hint:
        courseD_artist_ramp12_a: "¡Puedes dibujar primero el cuadrado, luego el triángulo
          o hacerlo al revés!"
      courseE_artist_ramp8_authored_hint:
        courseE_artist_ramp8_a: Para dibujar un lado, utiliza el bloque `avanzar 100
          pixeles`, y cambiar el 100 a un 200.
        courseE_artist_ramp8_b: Para dibujar 4 lados, poner el bloque`avanzar por
          100 píxeles` dentro de un ciclo de repetición y hacer que el ciclo se ajuste
          a dibujar 4 veces. ¡No te olvides de girar después!
        courseE_artist_ramp8_c: 'Tu loop debe tener dos bloques dentro: `avanzar ''y`
          girar 90 grados hacia la derecha\`.'
      courseE_artist_ramp8_2_authored_hint:
        courseE_artist_ramp8_a: Para dibujar un lado, utiliza el bloque `avanzar 100
          pixeles`, y cambiar el 100 a un 200.
        courseE_artist_ramp8_b: Para dibujar 4 lados, poner el bloque`avanzar por
          100 píxeles` dentro de un ciclo de repetición y hacer que el ciclo se ajuste
          a dibujar 4 veces. ¡No te olvides de girar después!
        courseE_artist_ramp8_c: 'Su ciclo debe tener dos bloques dentro: `avanzar
          ''y` girar 90 grados hacia la derecha\`.'
      courseE_artist_ramp8_2018_authored_hint:
        courseE_artist_ramp8_a: Para dibujar un lado, utiliza el bloque `avanzar 100
          pixeles`, y cambiar el 100 a un 200.
        courseE_artist_ramp8_b: "Para dibujar 4 lados, ubica el bloque `avanzar por
          100 píxeles` dentro de un loop repetir y asegúrate que el loop esté ajustado
          para dibujar 4 veces. \n\n¡No te olvides de girar después!"
        courseE_artist_ramp8_c: 'Tu loop debe tener dos bloques dentro: `avanzar ''y`
          girar 90 grados hacia la derecha\`.'
      courseE_artist_ramp8_2_2018_authored_hint:
        courseE_artist_ramp8_a: Para dibujar un lado, utiliza el bloque `avanzar 100
          pixeles`, y cambiar el 100 a un 200.
        courseE_artist_ramp8_b: "Para dibujar 4 lados, ubica el bloque `avanzar por
          100 píxeles` dentro de un loop repetir y asegúrate que el loop esté ajustado
          para dibujar 4 veces. \n\n¡No te olvides de girar después!"
        courseE_artist_ramp8_c: 'Tu loop debe tener dos bloques dentro: `avanzar ''y`
          girar 90 grados hacia la derecha\`.'
      courseE_artist_ramp9_authored_hint:
        courseD_artist_ramp12_a: "¿Cómo es esto similar a un cuadrado? ¿Como es diferente?"
        courseD_artist_ramp12_b: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_ramp12_c: Para dibujar cada lado, deberás avanzar 100 píxeles,
          luego girar a la derecha 120 grados. ¿Cuántos lados necesitas?
      courseE_artist_ramp9_2_authored_hint:
        courseD_artist_ramp12_a: "¿Cómo es esto similar a un cuadrado? ¿Como es diferente?"
        courseD_artist_ramp12_b: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_ramp12_c: Para dibujar cada lado, deberá avanzar 100 píxeles,
          luego girar a la derecha 120 grados. ¿Cuántos lados necesitas?
      courseE_artist_ramp9_2018_authored_hint:
        courseD_artist_ramp12_a: "¿Cómo es esto similar a un cuadrado? ¿Como es diferente?"
        courseD_artist_ramp12_b: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_ramp12_c: Para dibujar cada lado, deberás avanzar 100 píxeles,
          luego girar a la derecha 120 grados. ¿Cuántos lados necesitas?
      courseE_artist_ramp9_2_2018_authored_hint:
        courseD_artist_ramp12_a: "¿Cómo es esto similar a un cuadrado? ¿Como es diferente?"
        courseD_artist_ramp12_b: "¡Puedes utilizar el menú desplegable en los bloques
          'girar' para ver qué ángulo necesitas!"
        courseD_artist_ramp12_c: Para dibujar cada lado, deberás avanzar 100 píxeles,
          luego girar a la derecha 120 grados. ¿Cuántos lados necesitas?
      courseE_bee_concept1_authored_hint:
        courseE_bee_concept1_b: "¿Hay algún patrón que se _repita_ aquí?"
        courseE_bee_concept1_a: Si no entiendes cómo usar los loops anidados aquí,
          intenta escribir las instrucciones paso a paso en un pedazo de papel. Encierra
          en un círculo los patrones que ves.
      courseE_bee_concept1_2018_authored_hint:
        courseE_bee_concept1_b: "¿Hay algún patrón que se _repita_ aquí?"
        courseE_bee_concept1_a: Si no entiendes cómo usar los loops anidados aquí,
          intenta escribir las instrucciones paso a paso en un pedazo de papel. Encierra
          en un círculo los patrones que ves.
      courseE_bee_concept1_2019_authored_hint:
        courseE_bee_concept1_b: "¿Hay algún patrón que se _repita_ aquí?"
        courseE_bee_concept1_a: Si no entiendes cómo usar los loops anidados aquí,
          intenta escribir las instrucciones paso a paso en un pedazo de papel. Encierra
          en un círculo los patrones que ves.
      courseE_bee_concept2_authored_hint:
        courseE_bee_concept2_a: "¿Ayudaría un loop `mientras` aquí?"
        courseE_bee_concept2_d: Incluso puedes verificar espacios vacíos para ver
          si miel es> 0.
        courseE_bee_concept2_b: Puedes usar los loops `mientras` para moverse al final
          de cada ruta y para recoger toda la miel de cada espacio.
        courseE_bee_concept2_c: "¿De qué manera debe girar la abeja después de cada
          camino?"
      courseE_bee_concept2_2018_authored_hint:
        courseE_bee_concept2_a: "¿Ayudaría un loop `mientras` aquí?"
        courseE_bee_concept2_d: Incluso puedes verificar espacios vacíos para ver
          si miel es> 0.
        courseE_bee_concept2_b: Puedes usar los loops `mientras` para moverse al final
          de cada ruta y para recoger toda la miel de cada espacio.
        courseE_bee_concept2_c: "¿De qué manera debe girar la abeja después de cada
          camino?"
      courseE_bee_concept2_2019_authored_hint:
        courseE_bee_concept2_a: "¿Ayudaría un loop `mientras` aquí?"
        courseE_bee_concept2_d: Incluso puedes verificar espacios vacíos para ver
          si miel es> 0.
        courseE_bee_concept2_b: Puedes usar los loops `mientras` para moverse al final
          de cada ruta y para recoger toda la miel de cada espacio.
        courseE_bee_concept2_c: "¿De qué manera debe girar la abeja después de cada
          camino?"
      courseE_bee_concept3_authored_hint:
        courseE_bee_concept3a_a: Intenta usar los loops anidados 'repetir' para resolver
          este desafío.
        courseE_bee_concept3a_b: Si no puedes descifrar dónde ubicar los loops, intenta
          escribir tu código paso a paso y buscar patrones.
        courseE_bee_concept3a_c: Hay tres grupos de flores, por lo que tu loop 'repetir'
          externo debe repetirse tres veces.
      courseE_bee_concept3_2018_authored_hint:
        courseE_bee_concept3a_a: Intenta usar los loops anidados 'repetir' para resolver
          este desafío.
        courseE_bee_concept3a_b: Si no puedes descifrar dónde ubicar los loops, intenta
          escribir tu código paso a paso y buscar patrones.
        courseE_bee_concept3a_c: Hay tres grupos de flores, por lo que tu loop 'repetir'
          externo debe repetirse tres veces.
      courseE_bee_concept3_2019_authored_hint:
        courseE_bee_concept3a_a: Intenta usar los loops anidados 'repetir' para resolver
          este desafío.
        courseE_bee_concept3a_b: Si no puedes descifrar dónde ubicar los loops, intenta
          escribir tu código paso a paso y buscar patrones.
        courseE_bee_concept3a_c: Hay tres grupos de flores, por lo que tu loop 'repetir'
          externo debe repetirse tres veces.
      courseE_bee_concept4_authored_hint:
        courseE_bee_concept4_a: Una afirmación `si/ si no` podría ayudarte mucho aquí.
        courseE_bee_concept4_b: El patrón de escalones puede ayudarte a atravesar
          todas las flores y panales.
        courseE_bee_concept4_c: Si estás en una flor, ¿cuántas veces tienes que obtener
          néctar? ¿Es este el mismo número para todas las flores?
      courseE_bee_concept4_2018_authored_hint:
        courseE_bee_concept4_a: Una afirmación `si/ si no` podría ayudarte mucho aquí.
        courseE_bee_concept4_b: El patrón de escalones puede ayudarte a atravesar
          todas las flores y panales.
        courseE_bee_concept4_c: Si estás en una flor, ¿cuántas veces tienes que obtener
          néctar? ¿Es este el mismo número para todas las flores?
      courseE_bee_concept4_2019_authored_hint:
        courseE_bee_concept4_a: Una afirmación `si/ si no` podría ayudarte mucho aquí.
        courseE_bee_concept4_b: El patrón de escalones puede ayudarte a atravesar
          todas las flores y panales.
        courseE_bee_concept4_c: Si estás en una flor, ¿cuántas veces tienes que obtener
          néctar? ¿Es este el mismo número para todas las flores?
      courseE_bee_concept5_authored_hint:
        courseE_bee_concept5_a: Las flores siguen un camino rectangular. Puede rastrear
          ese rectángulo usando `mientras camino adelante` incluso con un número diferente
          de cuadrados por lado.
        courseE_bee_concept5_c: "Esta es una foto de un camino rectangular que podría
          tomar la abeja. \n\n![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)"
        courseE_bee_concept5_b: Puedes comprobar todos los espacios de una flor usando
          el bloque `si`, incluso si ya sabes que no hay nada allí.
      courseE_bee_concept5_2018_authored_hint:
        courseE_bee_concept5_a: Las flores siguen un camino rectangular. Puede rastrear
          ese rectángulo usando `mientras camino adelante` incluso con un número diferente
          de cuadrados por lado.
        courseE_bee_concept5_c: "Esta es una foto de un camino rectangular que podría
          tomar la abeja. \n\n![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)"
        courseE_bee_concept5_b: Puedes comprobar todos los espacios de una flor usando
          el bloque `si`, incluso si ya sabes que no hay nada allí.
      courseE_bee_concept5_2019_authored_hint:
        courseE_bee_concept5_a: Las flores siguen un camino rectangular. Puede rastrear
          ese rectángulo usando `mientras camino adelante` incluso con un número diferente
          de cuadrados por lado.
        courseE_bee_concept5_c: "Esta es una foto de un camino rectangular que podría
          tomar la abeja. \n\n![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)"
        courseE_bee_concept5_b: Puedes comprobar todos los espacios de una flor usando
          el bloque `si`, incluso si ya sabes que no hay nada allí.
      courseE_bee_functions1_authored_hint:
        courseE_bee_functions1_a: Recuerda que los giros a izquierda y derecha son
          desde el punto de vista de la abeja.
        courseE_bee_functions1_b: Usa un loop repetir en la recolección del néctar
          para hacer tu código más corto.
        courseE_bee_functions1_c: Recuerda que los giros a izquierda y derecha son
          desde la perspectiva de la abeja.
      courseE_bee_functions10_authored_hint:
        courseE_bee_functions10_a: Se necesita un loop `mientras` para recoger toda
          la miel, ya que varía entre los panales.
        courseE_bee_functions10_b: Incluye los giros y el movimiento en tu función,
          para que puedas llamarla cuando la abeja esté en la ruta principal.
        courseE_bee_functions10_c: "¡Recuerda llamar a tu función en el programa principal!"
      courseE_bee_functions10_2018_authored_hint:
        courseE_bee_functions10_a: Se necesita un loop `mientras` para recoger toda
          la miel, ya que varía entre los panales.
        courseE_bee_functions10_b: Incluye los giros y el movimiento en tu función,
          para que puedas llamarla cuando la abeja esté en la ruta principal.
        courseE_bee_functions10_c: "¡Recuerda llamar a tu función en el programa principal!"
      courseE_bee_functions1_2018_authored_hint:
        courseE_bee_functions1_a: Recuerda que los giros a izquierda y derecha son
          desde el punto de vista de la abeja.
        courseE_bee_functions1_b: Usa un loop repetir en la recolección del néctar
          para hacer tu código más corto.
        courseE_bee_functions1_c: Recuerda que los giros a izquierda y derecha son
          desde la perspectiva de la abeja.
      courseE_bee_functions2_authored_hint:
        courseE_bee_functions2_a: La función ha sido escrita por ti, pero deberás
          llamarla a cada flor.
        courseE_bee_functions2_b: Este bloque <xml><block type="procedures_callnoreturn"><mutation
          name="get 2 nectar"/></block></xml> llama a la función que se te ha entregado.
        courseE_bee_functions2_c: Querrás avanzar y obtener néctar dos veces para
          resolver este desafío.
      courseE_bee_functions2_2018_authored_hint:
        courseE_bee_functions2_a: La función ha sido escrita por ti, pero deberás
          llamarla a cada flor.
        courseE_bee_functions2_b: Este bloque <xml><block type="procedures_callnoreturn"><mutation
          name="get 2 nectar"/></block></xml> llama a la función que se te ha entregado.
        courseE_bee_functions2_c: Querrás avanzar y obtener néctar dos veces para
          resolver este desafío.
      courseE_bee_functions3_authored_hint:
        courseE_bee_functions3_a: 'Tu función para este desafío solo necesita hacer
          miel, no deberías tener bloque de ''avanzar'' o ''girar''. '
        courseE_bee_functions3_b: Llame a la función 'obtener 5' en el bloque 'cuando
          se ejecuta'.
        courseE_bee_functions3_c: Tu programa principal controlará todo el movimiento,
          la función es sólo para lo que sucede cuando la abeja llega a una flor.
        courseE_bee_functions3_d: Intenta usar este camino.
      courseE_bee_functions3_2018_authored_hint:
        courseE_bee_functions3_a: 'Tu función para este desafío solo necesita hacer
          miel, no deberías tener bloque de ''avanzar'' o ''girar''. '
        courseE_bee_functions3_b: Llame a la función 'obtener 5' en el bloque 'cuando
          se ejecuta'.
        courseE_bee_functions3_c: Tu programa principal controlará todo el movimiento,
          la función es sólo para lo que sucede cuando la abeja llega a una flor.
        courseE_bee_functions3_d: Intenta usar este camino.
      courseE_bee_functions4_authored_hint:
        courseE_bee_functions4_a: Tu función ya viajará por los caminos laterales  y
          devolverá la abeja a la carretera principal. No necesitas agregar esa parte
          a su programa.
        courseE_bee_functions4_b: Usa el bloque verde `mover y obtener néctar` para
          llamar a esta función.
        courseE_bee_functions4_c: No necesitas cambiar la función, simplemente úsala
          en tu programa.
      courseE_bee_functions4_2018_authored_hint:
        courseE_bee_functions4_a: Tu función ya viajará por los caminos laterales  y
          devolverá la abeja a la carretera principal. No necesitas agregar esa parte
          a su programa.
        courseE_bee_functions4_b: Usa el bloque verde `mover y obtener néctar` para
          llamar a esta función.
        courseE_bee_functions4_c: No necesitas cambiar la función, simplemente úsala
          en tu programa.
      courseE_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edita la función para que resuelvas el desafío sin
          tener que cambiar el programa principal.
        courseE_bee_functions5_c: El bloque de 'avanzar' se puede cambiar en un bloque
          de 'retroceder'. ¡Úsalo en lugar de girar completamente al final de los
          caminos!
        courseE_bee_functions5_b: "Tu función debe hacer a la abeja: \n\n-   girar\n-
          \  avanzar \n-   recoger todo el néctar \n-   retroceder \n-   volver a
          la dirección en la que comenzó"
      courseE_bee_functions5_2018_authored_hint:
        courseE_bee_functions5_a: Edita la función para que resuelvas el desafío sin
          tener que cambiar el programa principal.
        courseE_bee_functions5_c: El bloque de 'avanzar' se puede cambiar en un bloque
          de 'retroceder'. ¡Úsalo en lugar de girar completamente al final de los
          caminos!
        courseE_bee_functions5_b: "Tu función debe hacer a la abeja: \n\n-   girar\n-
          \  avanzar \n-   recoger todo el néctar \n-   retroceder \n-   volver a
          la dirección en la que comenzó"
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: "Si el desafío parece difícil, intenta crear tu
          función de a poco.   \n\nAgrega algunos bloques y luego pruébala. Agrega
          más y vuelve a intentarlo. ¡Pronto lograrás resultados!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: En este caso, puede ser útil moverse dentro de la
          función, pero no todos los bloques de 'movimiento' deben estar allí.
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: "Si el desafío parece difícil, intenta crear tu
          función de a poco.   \n\nAgrega algunos bloques y luego pruébala. Agrega
          más y vuelve a intentarlo. ¡Pronto lograrás resultados!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: En este caso, puede ser útil moverse dentro de la
          función, pero no todos los bloques de 'movimiento' deben estar allí.
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: "Si el desafío parece difícil, intenta crear tu
          función de a poco.   \n\nAgrega algunos bloques y luego pruébala. Agrega
          más y vuelve a intentarlo. ¡Pronto lograrás resultados!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseE_bee_functions6_b: En este caso, puede ser útil moverse dentro de la
          función, pero no todos los bloques de 'movimiento' deben estar allí.
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseE_bee_functions7_b: "Recuerda crear tu código dentro del bloque de función
          verde. \n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
        courseE_bee_functions7_c: Esta función debe hacer que la abeja lo dirija hacia
          el camino, recoger el néctar, hacer la miel, girar la abeja y traerlo de
          regreso.
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseE_bee_functions7_b: "Recuerda crear tu código dentro del bloque de función
          verde. \n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
        courseE_bee_functions7_c: Esta función debe hacer que la abeja lo dirija hacia
          el camino, recoger el néctar, hacer la miel, girar la abeja y traerlo de
          regreso.
      courseE_bee_functions8_authored_hint:
        courseE_bee_functions8_a: Tu función sólo necesitará recolectar néctar. Intenta
          usar un loop mientras en lugar de un loop repetir.
        courseE_bee_functions8_b: Usa `mientras el néctar> 0` para asegurarte de recoger
          todo el néctar.
        courseE_bee_functions8_c: Tu programa principal necesitará un patrón de movimiento
          de escalera. Recuerda, el programa principal es el código debajo del bloque
          cuando corre\`.
      courseE_bee_functions8_2018_authored_hint:
        courseE_bee_functions8_a: Tu función sólo necesitará recolectar néctar. Intenta
          usar un loop mientras en lugar de un loop repetir.
        courseE_bee_functions8_b: Usa `mientras el néctar> 0` para asegurarte de recoger
          todo el néctar.
        courseE_bee_functions8_c: Tu programa principal necesitará un patrón de movimiento
          de escalera. Recuerda, el programa principal es el código debajo del bloque
          cuando corre\`.
      courseE_bee_functions9_authored_hint:
        courseE_bee_functions9_a: Puedes usar exactamente la misma función  para este
          desafío que hiciste en el último desafío. Todo lo que necesitas hacer es
          crear una función que recolecte todo el néctar cuando llegues a cada flor.
        courseE_bee_functions9_b: A pesar de que sabes cuánto néctar tienen algunas
          de las flores, un loop `mientras` puede realizar una función de trabajo
          para todos ellos.
      courseE_bee_functions9_2018_authored_hint:
        courseE_bee_functions9_a: Puedes usar exactamente la misma función  para este
          desafío que hiciste en el último desafío. Todo lo que necesitas hacer es
          crear una función que recolecte todo el néctar cuando llegues a cada flor.
        courseE_bee_functions9_b: A pesar de que sabes cuánto néctar tienen algunas
          de las flores, un loop `mientras` puede realizar una función de trabajo
          para todos ellos.
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseE_bee_functions_challenge1_b: Recuerda construir tu código dentro del
          bloque de función verde.
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseE_bee_functions_challenge1_b: Recuerda construir tu código dentro del
          bloque de función verde.
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseE_bee_functions_challenge1_b: Recuerde construir su código dentro del
          bloque de función verde.
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseE_bee_functions_challenge1_b: Recuerda construir tu código dentro del
          bloque de función verde.
      courseE_bee_ramp14_authored_hint:
        courseE_bee_ramp14_a: La abeja funciona igual que el agricultor en el rompecabezas
          anterior. Zumba a lo largo del camino y recoge el néctar mientras hay néctar
          (mientras néctar> 0) y haz toda la miel.
        courseE_bee_ramp14_b: Puede haber más de una flor o nido de abeja en cada
          espacio, ¡así que asegúrese de usar los ciclos `while` para obtenerlos todos!
        courseE_bee_ramp14_c: El acertijo es casi identico al anterior, solo con miel
          y nectar en vez de vegetales.
      courseE_bee_ramp14_2018_authored_hint:
        courseE_bee_ramp14_a: La abeja funciona igual que el agricultor en el rompecabezas
          anterior. Zumba a lo largo del camino y recoge el néctar mientras hay néctar
          (mientras néctar> 0) y haz toda la miel.
        courseE_bee_ramp14_b: Puede haber más de una flor o nido de abeja en cada
          espacio, ¡así que asegúrese de usar los ciclos `while` para obtenerlos todos!
        courseE_bee_ramp14_c: El acertijo es casi identico al anterior, solo con miel
          y nectar en vez de vegetales.
      courseE_bee_ramp17_authored_hint:
        courseE_bee_ramp17_a: Dado que no tenemos un bloque de repetición que haga
          algo un cierto número de veces, ¿qué bloque deberiamos usar para mover algo
          a traves del camino?
        courseE_bee_ramp17: Si fueramos a resolver este acertijo sin un bloque hasta,
          ¿dónde verias codigo repetido? ¿Cómo puedes usar este código repetido para
          saber como usar un bloque hasta para resolver el problema?
        courseE_bee_ramp17_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
        courseE_bee_ramp17_c: Querrás moverte en un patron de escalón. Intenta programarlo
          primero, despues añade el "si/entonces" y el ciclo "mientras" para buscar
          flores y panales.
      courseE_collector_ramp10_authored_hint:
        courseD_artist_ramp10_a: |-
          En lugar de usar cuatro bloques 'avanzar' para cada lado, intenta colocar un bloque 'avanzar' dentro de un loop 'repetir', como este:

          <xml><block type="controls_repeat">

          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          </block></xml>
        courseD_artist_ramp10_b: "¡No te olvides de recoger una pieza del tesoro,
          luego gira despues de cada conjunto de escalones!"
      courseE_farmer_concept1_authored_hint:
        courseE_farmer_concept1_a: Un bloque 'mientras que hay un agujero' te ayudará
          a llenar cualquier hueco hasta que quede plano.
        courseE_farmer_concept1_b: Puedes utilizar un patrón escalón para llegar a
          los agujeros.
      courseE_farmer_concept1_2018_authored_hint:
        courseE_farmer_concept1_a: Un bloque 'mientras que hay un agujero' te ayudará
          a llenar cualquier hueco hasta que quede plano.
        courseE_farmer_concept1_b: Puedes utilizar un patrón escalón para llegar a
          los agujeros.
      courseE_farmer_concept1_2019_authored_hint:
        courseE_farmer_concept1_a: Un bloque 'mientras que hay un agujero' te ayudará
          a llenar cualquier hueco hasta que quede plano.
        courseE_farmer_concept1_b: Puedes utilizar un patrón escalón para llegar a
          los agujeros.
      courseE_farmer_concept2_authored_hint:
        courseE_farmer_concept2_a: Los caminos son todos de la misma longitud, pero
          están a un número diferente de casillas aparte.  Un loops no es lo ideal
          aquí. Intenta con una función.
        courseE_farmer_concept2_b: Una función que da vuelta, va por el camino, recoge
          calabazas y vuelve a la senda horizontal principal podría ser útil aquí.
        courseE_farmer_concept2_c: Tu programa principal puede llamar a esta función
          con el bloque verde de 'hacer algo'.
      courseE_farmer_concept2_2018_authored_hint:
        courseE_farmer_concept2_a: Los caminos son todos de la misma longitud, pero
          están a un número diferente de casillas aparte.  Un loops no es lo ideal
          aquí. Intenta con una función.
        courseE_farmer_concept2_b: Una función que da vuelta, va por el camino, recoge
          calabazas y vuelve a la senda horizontal principal podría ser útil aquí.
        courseE_farmer_concept2_c: Tu programa principal puede llamar a esta función
          con el bloque verde de 'hacer algo'.
      courseE_farmer_concept2_2019_authored_hint:
        courseE_farmer_concept2_a: Los caminos son todos de la misma longitud, pero
          están a un número diferente de casillas aparte.  Un loops no es lo ideal
          aquí. Intenta con una función.
        courseE_farmer_concept2_b: Una función que da vuelta, va por el camino, recoge
          calabazas y vuelve a la senda horizontal principal podría ser útil aquí.
        courseE_farmer_concept2_c: Tu programa principal puede llamar a esta función
          con el bloque verde de 'hacer algo'.
      courseE_farmer_concept3_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: El bloque `mientras camino delante`
          te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        grade3_robotFarmer_ConditionalsIntro_8_b: "¿Qué debes hacer una vez que hayas
          llegado al final de un camino?"
        grade3_robotFarmer_ConditionalsIntro_8_c: Utiliza un loop 'repetir' para ejecutar
          el código varias veces para cada camino recto.
      courseE_farmer_concept3_2018_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: El bloque `mientras camino delante`
          te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        grade3_robotFarmer_ConditionalsIntro_8_b: "¿Qué debes hacer una vez que hayas
          llegado al final de un camino?"
        grade3_robotFarmer_ConditionalsIntro_8_c: Utiliza un loop 'repetir' para ejecutar
          el código varias veces para cada camino recto.
      courseE_farmer_concept3_2019_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: El bloque `mientras camino delante`
          te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        grade3_robotFarmer_ConditionalsIntro_8_b: "¿Qué debes hacer una vez que hayas
          llegado al final de un camino?"
        grade3_robotFarmer_ConditionalsIntro_8_c: Utiliza un loop 'repetir' para ejecutar
          el código varias veces para cada camino recto.
      courseE_farmer_concept4_authored_hint:
        4-5_Artist_Patterns_3_a: Ten cuidado de sacar el bloque completo de código
          de la barra de herramientas cada vez que pruebes uno nuevo.
        4-5_Artist_Patterns_3_b: Si su código se vuelve demasiado confuso, siempre
          puede hacer clic en "Comenzar de nuevo" y ¡volver a intentarlo!
      courseE_farmer_elseif_test_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: El bloque `mientras camino delante`
          te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
        grade3_robotFarmer_ConditionalsIntro_8_b: "¿Qué debes hacer una vez que hayas
          llegado al final de un camino?"
        grade3_robotFarmer_ConditionalsIntro_8_c: Utiliza un loop 'repetir' para ejecutar
          el código varias veces para cada camino recto.
      courseE_farmer_functions1_authored_hint:
        courseE_farmer_functions1_a: "¡La caja de herramientas está organizado un
          poco diferente esta vez! Haz clic en las diferentes categorías para ver
          que bloques tienes."
        courseE_farmer_functions1_b: Sólo tienes que escoger una calabaza, ¿pero podrías
          utilizar un loop para llegar a ella?
      courseE_farmer_functions10b_authored_hint:
        courseE_farmer_functions10b_a: Deberás volver a crear tu primera función.
        courseE_farmer_functions10b_b: "¿Qué necesitas hacer después de la primera
          calabaza?"
        courseE_farmer_functions10b_c: Revisa el ultimo desafío si necesitas ayuda
          para hacer la función.
      courseE_farmer_functions10b_2018_authored_hint:
        courseE_farmer_functions10b_a: Deberás volver a crear tu primera función.
        courseE_farmer_functions10b_b: "¿Qué necesitas hacer después de la primera
          calabaza?"
        courseE_farmer_functions10b_c: Revisa el ultimo desafío si necesitas ayuda
          para hacer la función.
      courseE_farmer_functions1_2018_authored_hint:
        courseE_farmer_functions1_a: "¡La caja de herramientas está organizado un
          poco diferente esta vez! Haz clic en las diferentes categorías para ver
          que bloques tienes."
        courseE_farmer_functions1_b: Sólo tienes que escoger una calabaza, ¿pero podrías
          utilizar un loop para llegar a ella?
      courseE_farmer_functions1_2019_authored_hint:
        courseE_farmer_functions1_a: "¡La caja de herramientas está organizado un
          poco diferente esta vez! Haz clic en las diferentes categorías para ver
          que bloques tienes."
        courseE_farmer_functions1_b: Sólo tienes que escoger una calabaza, ¿pero podrías
          utilizar un loop para llegar a ella?
      courseE_farmer_functions1a_authored_hint:
        courseE_farmer_functions1a_a: Piensa en las afirmaciones "si/si no" paso a
          paso. ¿Que debes hacer si estás parado en una planta de maíz?
        courseE_farmer_functions1a_b: ¡Utiliza un bloque "repetir hasta" para llegar
          a la calabaza!
      courseE_farmer_functions1a_2018_authored_hint:
        courseE_farmer_functions1a_a: Asegúrese de que leer a través de la definición
          de función. ¿Puede decir lo que hace?
        courseE_farmer_functions1a_b: ¡Utiliza un bloque "repetir hasta" para llegar
          a la calabaza!
      courseE_farmer_functions1a_2019_authored_hint:
        courseE_farmer_functions1a_a: Asegúrese de que leer a través de la definición
          de función. ¿Puede decir lo que hace?
        courseE_farmer_functions1a_b: ¡Utiliza un bloque "repetir hasta" para llegar
          a la calabaza!
      courseE_farmer_functions2b_authored_hint:
        courseE_farmer_functions2b_a: Puedes utilizar un 'repetir hasta calabaza'
          para llegar al final de los dos caminos.
        courseE_farmer_functions2b_b: No hay maíz en el camino que cruza, por lo que
          puedes solo moverte a lo largo y girar.
        courseE_farmer_functions2b_c: Necesitarás dos bloques de 'repetir hasta' para
          llegar a todos los cultivos.
      courseE_farmer_functions2b_2018_authored_hint:
        courseE_farmer_functions2b_a: Puesdes utilizar un 'repetir hasta calabaza'
          para llegar al final de los dos caminos.
        courseE_farmer_functions2b_b: No hay maíz en el camino que cruza, por lo que
          puedes solo moverte a lo largo y girar.
        courseE_farmer_functions2b_c: Necesitarás dos bloques de 'repetir hasta' para
          llegar a todos los cultivos.
      courseE_farmer_functions2b_2019_authored_hint:
        courseE_farmer_functions2b_a: Puesdes utilizar un 'repetir hasta calabaza'
          para llegar al final de los dos caminos.
        courseE_farmer_functions2b_b: No hay maíz en el camino que cruza, por lo que
          puedes solo moverte a lo largo y girar.
        courseE_farmer_functions2b_c: Necesitarás dos bloques de 'repetir hasta' para
          llegar a todos los cultivos.
      courseE_farmer_functions2ba_authored_hint:
        courseE_farmer_functions2ba_a: Use el bloque verde `maíz y calabaza` para
          llamar a esta función.
        courseE_farmer_functions2ba_b: Arrastra todos los bloques del espacio de trabajo
          junto con 'al ejecutar' para ver cómo funciona esta función.
      courseE_farmer_functions2ba_2018_authored_hint:
        courseE_farmer_functions2ba_a: "¡Utiliza el bloque verde 'obtener todas las
          calabazas' para asegurarte de conseguir todas las calabazas!"
      courseE_farmer_functions2ba_2019_authored_hint:
        courseE_farmer_functions2ba_a: "¡Utiliza el bloque verde 'obtener todas las
          calabazas' para asegurarte de conseguir todas las calabazas!"
      courseE_farmer_functions3_authored_hint:
        courseE_farmer_functions3_a: Intenta usar un ciclo "mientras haya camino por
          delante" para llegar a donde necesitas.
      courseE_farmer_functions3b_authored_hint:
        courseE_farmer_functions1a_a: Las declaraciones anidadas `if` y `if / else`
          podrían ayudarte mucho aquí.
      courseE_farmer_functions3c_authored_hint:
        courseE_farmer_functions3c_a: "¿Qué secuencia se repite a menudo en este programa?
          ¿Puedes arrastrar estos bloques a la función?"
        courseE_farmer_functions3c_b: No olvides llamar a tu función en el programa
          principal siempre que quites los bloques.
      courseE_farmer_functions3c1_2018_authored_hint:
        coursee_farmer_functions3c1_2018_a: Tendrás que utilizar la función de 'pick
          along path' tres veces para resolver este desafío.
        coursee_farmer_functions3c1_2018_b: "¿Qué código necesitas agregar para llegar
          a las esquinas?"
      courseE_farmer_functions3c1_2019_authored_hint:
        coursee_farmer_functions3c1_2018_a: Tendrás que utilizar la función de 'pick
          along path' tres veces para resolver este desafío.
        coursee_farmer_functions3c1_2018_b: "¿Qué código necesitas agregar para llegar
          a las esquinas?"
      courseE_farmer_functions4_authored_hint:
        courseE_farmer_functions4_a: Arrastra todo el código fuera de tu ciclo 'repetir'
          y en la función 'ir a buscar calabazas'.
        courseE_farmer_functions4_b: No te olvides de poner el bloque que llama a
          las funciones de 'ir a buscar calabazas' dentro de su ciclo antes de ejecutar
          el código.
      courseE_farmer_functions4b_authored_hint:
        courseE_farmer_functions4b_a: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
        courseE_farmer_functions4b_b: Recuerda dar vuelta despues de cada cámino.
        courseE_farmer_functions4b_c: Los bloques 'calabaza y maiz' esta en la pestaña
          de funciones de la caja de herramientas.
      courseE_farmer_functions4b_2018_authored_hint:
        courseE_farmer_functions4b_a: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
        courseE_farmer_functions4b_b: Recuerda dar vuelta despues de cada cámino.
        courseE_farmer_functions4b_c: Los bloques 'calabaza y maiz' esta en la pestaña
          de funciones de la caja de herramientas.
      courseE_farmer_functions5b_authored_hint:
        courseE_farmer_functions5b_a: Tendrás que usar un ciclo 'mientras maiz', un
          ciclo 'mientras lechuga' y 'mientras calabaza' para asegurarte de que consigues
          todo.
      courseE_farmer_functions5c_authored_hint:
        courseE_farmer_functions5c_a: "¿Hay algún otro patrón al que puedas aplicar
          un loop en este desafío?"
        courseE_farmer_functions5c_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
      courseE_farmer_functions5c_2018_authored_hint:
        courseE_farmer_functions5c_a: "¿Hay algún otro patrón al que puedas aplicar
          un loop en este desafío?"
        courseE_farmer_functions5c_b: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si aún
          no has resuelto el desafío."
      courseE_farmer_functions6c_authored_hint:
        courseE_farmer_functions6c_a: Edita tu función para revisar la lechuga también.
        courseE_farmer_functions6c_b: "¿Ayudaría un bloque 'si/si no' a comprobar
          si hay lechugas en un espacio?"
        courseE_farmer_functions6c_c: "¡No olvides seguir buscando maíz!"
      courseE_farmer_functions6c_2018_authored_hint:
        courseE_farmer_functions6c_a: Edita tu función para revisar la lechuga también.
        courseE_farmer_functions6c_b: "¿Ayudaría un bloque 'si/si no' a comprobar
          si hay lechugas en un espacio?"
        courseE_farmer_functions6c_c: "¡No olvides seguir buscando maíz!"
      courseE_farmer_functions7a1_2018_authored_hint:
        courseE_farmer_functions7a1_2018_a: Crea tu función en la sección de 'funciones'
          en la caja de herramientas.
        courseE_farmer_functions7a1_2018_b: "¡No olvides usar tu función cuando hayas
          terminado de crearla!"
      courseE_farmer_functions7a1_2019_authored_hint:
        courseE_farmer_functions7a1_2018_a: Crea tu función en la sección de 'funciones'
          en la caja de herramientas.
        courseE_farmer_functions7a1_2018_b: "¡No olvides usar tu función cuando hayas
          terminado de crearla!"
      courseE_farmer_functions7b_authored_hint:
        courseE_farmer_functions7b_a: "¡No necesitas una función aquí, pero puedes
          hacer una si te ayuda!"
        courseE_farmer_functions7b_b: Usa una afirmación 'si/si no' para revisar si
          hay cosecha, luego gira de acuerdo a la cosecha que encuentres.
        courseE_farmer_functions7b_c: Un loop 'repetir hasta calabaza' puede ayudarte
          a llegar al final del laberinto.
      courseE_farmer_functions7b_2018_authored_hint:
        courseE_farmer_functions7b_a: "¡No necesitas una función aquí, pero puedes
          hacer una si te ayuda!"
        courseE_farmer_functions7b_b: Usa una afirmación 'si/si no' para revisar si
          hay cosecha, luego gira de acuerdo a la cosecha que encuentres.
        courseE_farmer_functions7b_c: Un loop 'repetir hasta calabaza' puede ayudarte
          a llegar al final del laberinto.
      courseE_farmer_functions8_authored_hint:
        courseE_farmer_functions8_a: Crea una función que lleva al agricultor al maíz,
          obtiene todo el maíz, da la vuelta y vuelve.
      courseE_farmer_functions8a1_2018_authored_hint:
        courseE_farmer_functions8a1_2018a: Empieza este desafío codificando la misma
          función que hiciste en el último desafío.
        courseE_farmer_functions8a1_2018b: Después de ejecutar la función por primera
          vez, necesitarás hacer un giro adicional antes de que se pueda ejecutar
          otra vez.
      courseE_farmer_functions8a1_2019_authored_hint:
        courseE_farmer_functions8a1_2018a: Empieza este desafío codificando la misma
          función que hiciste en el último desafío.
        courseE_farmer_functions8a1_2018b: Después de ejecutar la función por primera
          vez, necesitarás hacer un giro adicional antes de que se pueda ejecutar
          otra vez.
      courseE_farmer_functions8b_authored_hint:
        courseE_farmer_functions8b_a: Intenta ejecutar el código dado para ver lo
          que hace. ¿Qué se necesita después de esto?
        courseE_farmer_functions8b_b: Arrastra todos los bloques a una función para
          que puedas usarlos más de una vez.
        courseE_farmer_functions8b_c: "¿Cuantas veces necesitas llamar a la función?"
      courseE_farmer_functions8b_2018_authored_hint:
        courseE_farmer_functions8b_a: Intenta ejecutar el código dado para ver lo
          que hace. ¿Qué se necesita después de esto?
        courseE_farmer_functions8b_b: Arrastra todos los bloques a una función para
          que puedas usarlos más de una vez.
        courseE_farmer_functions8b_c: "¿Cuantas veces necesitas llamar a la función?"
      courseE_farmer_functions9_authored_hint:
        courseE_farmer_functions8_a: Crea una función que lleva al agricultor al maíz,
          obtiene todo el maíz, da la vuelta y vuelve.
      courseE_farmer_functions9a1_2018_authored_hint:
        courseE_farmer_functions9a1_2018a: Usarás la misma función que hiciste en
          los últimos desafíos.
        courseE_farmer_functions9a1_2018b: Usa los mismos pasos del desafío anterior
          para resolver la primera mitad de este desafío.
        courseE_farmer_functions9a1_2018c: Deberás `girar` algunas veces y `avanzar`
          para llegar al último cultivo de lechuga antes de que puedas llamar a tu
          función de nuevo.
      courseE_farmer_functions9a1_2019_authored_hint:
        courseE_farmer_functions9a1_2018a: Usarás la misma función que hiciste en
          los últimos desafíos.
        courseE_farmer_functions9a1_2018b: Usa los mismos pasos del desafío anterior
          para resolver la primera mitad de este desafío.
        courseE_farmer_functions9a1_2018c: Deberás `girar` algunas veces y `avanzar`
          para llegar al último cultivo de lechuga antes de que puedas llamar a tu
          función de nuevo.
      courseE_farmer_functions9b_authored_hint:
        courseE_farmer_functions9b_a: "¿Puedes utilizar 'si' y ' si/si no' anidados
          para avanzar por el camino?"
        courseE_farmer_functions9b_b: Utiliza 'repetir hasta calabaza' para recorrer
          todos los caminos.
        courseE_farmer_functions9b_c: Tienes que avanzar por los caminos como si fueran
          cuadrados haciéndose más grandes después de cada loop.
      courseE_farmer_functions9b_2018_authored_hint:
        courseE_farmer_functions9b_a: "¿Puedes utilizar 'si' y ' si/si no' anidados
          para avanzar por el camino?"
        courseE_farmer_functions9b_b: Utiliza 'repetir hasta calabaza' para recorrer
          todos los caminos.
        courseE_farmer_functions9b_c: Tienes que avanzar por los caminos como si fueran
          cuadrados haciéndose más grandes después de cada loop.
      courseE_farmer_predict1_authored_hint:
        courseE_farmer_ramp12a: No dudes en volver al último acertijo si necesitas
          un recordatorio de cómo recoger cultivos solo **mientras** hay cultivos
          para recoger.
      courseE_farmer_predict1_2018_authored_hint:
        courseE_farmer_ramp12a: No dudes en volver al último acertijo si necesitas
          un recordatorio de cómo recoger cultivos solo **mientras** hay cultivos
          para recoger.
      courseE_farmer_ramp11_authored_hint:
        courseE_farmer_ramp11_a: Si tienes problemas para ver donde van los ciclos,
          intenta programarlo y buscar patrones.
        courseE_farmer_ramp11_b: "¿Cómo se puede utilizar un ciclo de repetición para
          recoger la lechuga en lugar de arrastrar 5 bloques\\` recoger lechuga?"
        courseE_farmer_ramp11_c: No es necesario utilizar 5 loops repetir para obtener
          toda la lechuga. En su lugar, arrastra el loop repetir  para recoger lechigas
          dentro de otro loop (junto con un bloque \`avanzar ', ¡y lo tendrás!)
      courseE_farmer_ramp11a_authored_hint:
        courseE_farmer_ramp12_a: 'En lugar de usar un loop ''repetir'' para decirle
          a la granjera cuántas veces recoger tierra, ahora puedes usar un bloque
          ''mientras hay tierra''.  '
        courseE_farmer_ramp12_b: Solo necesitas avanzar una vez para llegar a la tierra.
      courseE_farmer_ramp11a_2018_authored_hint:
        courseE_farmer_ramp12_a: 'En lugar de usar un loop ''repetir'' para decirle
          a la granjera cuántas veces recoger tierra, ahora puedes usar un bloque
          ''mientras hay tierra''.  '
        courseE_farmer_ramp12_b: Solo necesitas avanzar una vez para llegar a la tierra.
      courseE_farmer_ramp11a_2019_authored_hint:
        courseE_farmer_ramp12_a: 'En lugar de usar un loop ''repetir'' para decirle
          a la granjera cuántas veces recoger tierra, ahora puedes usar un bloque
          ''mientras hay tierra''.  '
        courseE_farmer_ramp12_b: Solo necesitas avanzar una vez para llegar a la tierra.
      courseE_farmer_ramp11b_authored_hint:
        courseE_farmer_ramp11b_a: Puedes anidar tu loop `while` en el interior de
          un loop \`repetir' para hacer tu código más corto.
      courseE_farmer_ramp11b_2018_authored_hint:
        courseE_farmer_ramp11b_a: Puedes anidar tu loop `while` en el interior de
          un loop \`repetir' para hacer tu código más corto.
      courseE_farmer_ramp11b_2019_authored_hint:
        courseE_farmer_ramp11b_a: Puedes anidar tu loop `while` en el interior de
          un loop \`repetir' para hacer tu código más corto.
      courseE_farmer_ramp12_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitarás usar un loop 'repetir' en el
          exterior para decirle la granjera cuántas veces debe caminar y obtener lechuga.
      courseE_farmer_ramp12_2018_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitarás usar un loop 'repetir' en el
          exterior para decirle la granjera cuántas veces debe caminar y obtener lechuga.
      courseE_farmer_ramp12_forswap_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitará usar un ciclo de repetición en
          el exterior para decirle al agricultor cuántas veces debe caminar y obtener
          lechuga.
      courseE_farmer_ramp12_forswap_2018_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitarás usar un loop 'repetir' en el
          exterior para decirle la granjera cuántas veces debe caminar y obtener lechuga.
      courseE_farmer_ramp12_forswap_2019_authored_hint:
        courseE_farmer_ramp12_b: Todavía necesitarás usar un loop 'repetir' en el
          exterior para decirle la granjera cuántas veces debe caminar y obtener lechuga.
      courseE_farmer_ramp12a_authored_hint:
        courseE_farmer_ramp12b: Usted tendrá que comprobar sus declaraciones \` si
          ' 21 veces para resolver este rompecabezas.
        courseE_farmer_ramp12c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
        courseE_farmer_ramp12d: Solo habrá lechuga, por lo que no tendrá que preocuparse
          por los espacios vacíos, el maíz o las calabazas.
      courseE_farmer_ramp12a_2018_authored_hint:
        courseE_farmer_ramp12b: Usted tendrá que comprobar sus declaraciones \` si
          ' 21 veces para resolver este rompecabezas.
        courseE_farmer_ramp12c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
        courseE_farmer_ramp12d: Solo habrá lechuga, por lo que no tendrá que preocuparse
          por los espacios vacíos, el maíz o las calabazas.
      courseE_farmer_ramp12c_authored_hint:
        courseE_farmer_ramp12b_b: Todavía necesitarás usar primero un loop 'hasta',
          luego use un loop 'mientras' una vez que llegues a la lechuga.
      courseE_farmer_ramp12c_2018_authored_hint:
        courseE_farmer_ramp12b_b: Todavía necesitarás usar primero un loop 'hasta',
          luego use un loop 'mientras' una vez que llegues a la lechuga.
      courseE_farmer_ramp12c_2019_authored_hint:
        courseE_farmer_ramp12b_b: Todavía necesitarás usar primero un loop 'hasta',
          luego use un loop 'mientras' una vez que llegues a la lechuga.
      courseE_farmer_ramp12d_authored_hint:
        courseE_farmer_ramp12d_b: "¡De todos modos tendrás que poner sus loops 'hasta`y
          'mientras` dentro de un loop 'repetir' para resolver este desafío!"
      courseE_farmer_ramp12d_2018_authored_hint:
        courseE_farmer_ramp12d_b: "¡De todos modos tendrás que poner sus loops 'hasta`y
          'mientras` dentro de un loop 'repetir' para resolver este desafío!"
      courseE_farmer_ramp12d_2019_authored_hint:
        courseE_farmer_ramp12d_b: "¡De todos modos tendrás que poner sus loops 'hasta`y
          'mientras` dentro de un loop 'repetir' para resolver este desafío!"
      courseE_farmer_ramp12e_authored_hint:
        courseE_farmer_ramp12e_b: La solución a este desafío se parecerá mucho a la
          solución al último desafío, pero girando en la otra dirección.
      courseE_farmer_ramp12e_2018_authored_hint:
        courseE_farmer_ramp12e_b: La solución a este desafío se parecerá mucho a la
          solución al último desafío, pero girando en la otra dirección.
      courseE_farmer_ramp12e_2019_authored_hint:
        courseE_farmer_ramp12e_b: La solución a este desafío se parecerá mucho a la
          solución al último desafío, pero girando en la otra dirección.
      courseE_farmer_ramp12f_authored_hint:
        courseE_farmer_ramp12f_b: Usa un bloque `si/ si no` para ayudar la granjera
          a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp12f_2018_authored_hint:
        courseE_farmer_ramp12f_b: Usa un bloque `si/ si no` para ayudar la granjera
          a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp12f_2019_authored_hint:
        courseE_farmer_ramp12f_b: Usa un bloque `si/ si no` para ayudar la granjera
          a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp12g_authored_hint:
        courseE_farmer_ramp12G_b: Use un bloque `if / else` para ayudar al agricultor
          a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp12g_2018_authored_hint:
        courseE_farmer_ramp12G_b: Usa un bloque `si/ si no` para ayudar la granjera
          a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp12g_2019_authored_hint:
        courseE_farmer_ramp12G_b: Usa un bloque `si/ si no` para ayudar la granjera
          a decidir si necesita girar a la derecha o a la izquierda.
      courseE_farmer_ramp13_authored_hint:
        courseE_farmer_ramp13_a: Puede haber más de uno de los cultivos en un espacio,
          así que asegúrese de usar los ciclos`while` para elegirlos a todos!
        courseE_farmer_ramp13_b: Utilizar un ciclo de repetición de modo que usted
          no tiene que escribir una por separado si la declaración de cada cuadrado.
        courseE_farmer_ramp13_c: Si no se puede averiguar dónde colocar los ciclos,
          intentar escribir el código paso a paso y buscar para los patrones.
      courseE_farmer_ramp13_2018_authored_hint:
        courseE_farmer_ramp13_a: Puede haber más de uno de los cultivos en un espacio,
          así que asegúrese de usar los ciclos`while` para elegirlos a todos!
        courseE_farmer_ramp13_b: Utilizar un ciclo de repetición de modo que usted
          no tiene que escribir una por separado si la declaración de cada cuadrado.
        courseE_farmer_ramp13_c: Si no se puede averiguar dónde colocar los ciclos,
          intentar escribir el código paso a paso y buscar para los patrones.
      courseE_farmer_ramp15_authored_hint:
        courseE_farmer_ramp15_a: Usar el bloque de 'repetir hasta en calabaza' para
          llegar al final de la ruta.
        courseE_farmer_ramp15_b: "¿Qué más se debe hacer cuando se mueve a lo largo
          de la ruta de acceso a la calabaza?"
        courseE_farmer_ramp15_c: Los brotes esconden varias cantidades de maíz o de
          lechuga para cosechar en tu camino a la calabaza.
      courseE_farmer_ramp15_2018_authored_hint:
        courseE_farmer_ramp15_a: Usar el bloque de 'repetir hasta en calabaza' para
          llegar al final de la ruta.
        courseE_farmer_ramp15_b: "¿Qué más se debe hacer cuando se mueve a lo largo
          de la ruta de acceso a la calabaza?"
        courseE_farmer_ramp15_c: Los brotes esconden varias cantidades de maíz o de
          lechuga para cosechar en tu camino a la calabaza.
      courseE_farmer_ramp16_authored_hint:
        courseE_farmer_ramp16_a: Si nos estamos moviendo a lo largo del camino hacia
          la calabaza, ¿qué tenemos que hacer una y otra vez? ¿Cuándo dejamos de repetir?
        courseE_farmer_ramp16_b: Comprobación de maíz o de lechuga en cada espacio
          ayudará a simplificar su código. ¿Qué deberías hacer si hay un cultivo?
          ¿Qué pasa si no hay nada?
        courseE_farmer_ramp16_c: Use un bloque `if / else` para seguir avanzando.
          ¿De qué manera debes girar cuando la ruta de avance está bloqueada?
      courseE_maze_ramp1_authored_hint:
        courseC_maze_programming1_0: Si el pájaro no está recibiendo al cerdo, hacer
          seguro de los tres de los bloques han sido totalmente hecho clic en conjunto,
          a continuación, haga clic en "Ejecutar" de nuevo.
        courseC_maze_programming1_b: "¡No necesitas ningún bloque adicional de la
          caja de herramientas para este rompecabezas!"
      courseE_maze_ramp13_authored_hint:
        courseD_maze_ramp11_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseD_maze_ramp11_a: Usa bloques repetidos para ejecutar un solo bloque
          o un fragmento de código una y otra vez.
      courseE_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_0: Si el pájaro no está llegando al cerdo, asegurate
          de que los bloques están totalmente juntos, a continuación, y haz clic en
          "Ejecutar" de nuevo.
        courseC_maze_programming1_b: "¡No necesitas ningún bloque adicional de la
          caja de herramientas para este rompecabezas!"
      courseE_maze_ramp2_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque `avanzar`, arrástralo desde
          el área de la barra de herramientas al espacio de trabajo y conéctelo al
          bloque`al ejecutar`.
        courseC_maze_programming2_b: Asegúrate que los tres bloques 'avanzar' estén
          unidos al bloque 'cuando corre'.
      courseE_maze_ramp2_2018_authored_hint:
        courseC_maze_programming2_a: Para usar un bloque 'avanzar', arrástralo desde
          el área de la barra de herramientas al espacio de trabajo y conéctalo al
          bloque`al ejecutar`.
        courseC_maze_programming2_b: Asegúrate que los tres bloques 'avanzar' estén
          unidos al bloque 'cuando corre'.
      courseE_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \n\nPara eliminar un bloque del medio de su código, arrastre todos los bloques
          debajo de él hacia la derecha y permita que se sienten en el espacio de
          trabajo por un tiempo. \n\nHaga clic en el bloque que desea eliminar y arrástrelo
          nuevamente a la caja de herramientas. \n\nFinalmente, coloque sus otros
          bloques en su lugar a donde pertenecen."
        courseC_maze_programming3_b: Recuerda que gira a la derecha e izquierda desde
          la perspectiva del pájaro.
      courseE_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nPara
          eliminar un bloque en el medio de tu código, arrastra todos los bloques
          debajo de él hacia la derecha y déjalos en el espacio de trabajo por un
          tiempo. \n\nHaz clic en el bloque que deseas eliminar y arrástralo nuevamente
          a la caja de herramientas. \n\nFinalmente, vuelve a poner los otros bloques
          en su lugar."
        courseC_maze_programming3_b: Recuerda que gira a la derecha e izquierda desde
          la perspectiva del pájaro.
      courseE_maze_ramp4_authored_hint:
        courseC_maze_programming4_a: Puede girar a la derecha o a la izquierda desde
          el punto de vista del pájaro. Si estás mirando hacia la derecha, girar a
          la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar al cerdo.
        courseC_maze_programming4_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseE_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_a: Puedes girar a la derecha o a la izquierda desde
          el punto de vista del pájaro. Si estás mirando hacia la derecha, girar a
          la derecha te hará apuntar hacia abajo.
        courseC_maze_programming4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar al cerdo.
        courseC_maze_programming4_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseE_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: "¿Qué tan lejos necesitas moverte para llegar
          a la esquina?"
        courseC_maze_programming5_c: Tendrá que girar a la izquierda en la esquina
          para llegar al cerdo.
      courseE_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseC_maze_programming5_b: "¿Qué tan lejos necesitas moverte para llegar
          a la esquina?"
        courseC_maze_programming5_c: Tendrá que girar a la izquierda en la esquina
          para llegar al cerdo.
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: "¡Hay dos formas de resolver este desafío!"
        courseC_maze_programming6_b: Recuerde girar primero antes de moverse, ya que
          el pájaro comienza a mirar hacia la pared.
        courseC_maze_programming6_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: "¡Hay dos formas de resolver este desafío!"
        courseC_maze_programming6_b: Recuerde girar primero antes de moverse, ya que
          el pájaro comienza a mirar hacia la pared.
        courseC_maze_programming6_c: "¡No tengas miedo de cometer un error! Intenta
          agregar bloques y ejecutar el código para ver qué sucederá, incluso si crees
          que aún no has resuelto el desafío."
      courseE_maze_ramp7_authored_hint:
        courseD_maze_ramp7_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseD_maze_ramp7_a: Usa bloques repetidos para ejecutar un solo bloque o
          un fragmento de código uno y otra vez.
        courseD_maze_ramp7_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
      courseE_maze_ramp7_2018_authored_hint:
        courseD_maze_ramp7_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseD_maze_ramp7_a: Usa bloques repetir para ejecutar un solo bloque o un
          fragmento de código una y otra vez.
        courseD_maze_ramp7_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
      courseE_multi_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Intenta usar el botón "Paso" para ejecutar tu
          código línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
      courseE_playLab_challenge1_authored_hint:
        courseE_playLab_challenge1_a: 'Aquí hay algunas cosas que podría hacer cuando
          el jugador gana el juego: \* Hacer que el dinosaurio desaparezca. \* Detener
          las ardillas. \* Haz felices a las ardillas y al caballero. \* Establecer
          un nuevo fondo. \* Haz que el caballero agradezca al jugador por ayudar.
          \* Haz desaparecer a todos los actores y muestra un "¡Tu ganas!" mensaje.'
        courseE_playLab_challenge1_b: "Estas son algunas cosas que podrías hacer cuando
          el jugador pierde el juego: \n\n-   Hacer desaparecer al caballero. \n-
          \  Hacer que las ardillas estén tristes. \n-   Hacer que el dinosaurio diga
          algo. \n-   Establecer un nuevo fondo. \n-   Hacer desaparecer a todos los
          actores y mostrar un mensaje de \"final del juego\"."
      courseE_playLab_challenge1_2018_authored_hint:
        courseE_playLab_challenge1_a: 'Aquí hay algunas cosas que podría hacer cuando
          el jugador gana el juego: \* Hacer que el dinosaurio desaparezca. \* Detener
          las ardillas. \* Haz felices a las ardillas y al caballero. \* Establecer
          un nuevo fondo. \* Haz que el caballero agradezca al jugador por ayudar.
          \* Haz desaparecer a todos los actores y muestra un "¡Tu ganas!" mensaje.'
        courseE_playLab_challenge1_b: "Estas son algunas cosas que podrías hacer cuando
          el jugador pierde el juego: \n\n-   Hacer desaparecer al caballero. \n-
          \  Hacer que las ardillas estén tristes. \n-   Hacer que el dinosaurio diga
          algo. \n-   Establecer un nuevo fondo. \n-   Hacer desaparecer a todos los
          actores y mostrar un mensaje de \"final del juego\"."
      courseE_playLab_scaffold1_authored_hint:
        courseE_playLab_scaffold1_a: El bloque 'establecer actor 1 ??? imagen' puede
          usarse para agregar un actor al escenario.
        courseE_playLab_scaffold1_b: Coloca el bloque de 'actor' de 'debajo del' cuando
          'para que su actor aparezca al principio del programa.
        courseE_playLab_scaffold1_c: Usa ¨set ??? Fondo¨para elegir un fondo para
          tu escena.
      courseE_playLab_scaffold1_2018_authored_hint:
        courseE_playLab_scaffold1_a: El bloque 'establecer actor 1 ??? imagen' puede
          usarse para agregar un actor al escenario.
        courseE_playLab_scaffold1_b: Coloca el bloque de 'actor' de 'debajo del' cuando
          'para que su actor aparezca al principio del programa.
        courseE_playLab_scaffold1_c: Usa ¨set ??? Fondo¨para elegir un fondo para
          tu escena.
      courseE_playLab_scaffold2_authored_hint:
        courseE_playLab_scaffold1_a: Abre el menú desplegable del evento 'cuando \_\_\_
          flecha' para cambiar la dirección de los controles de bloqueo.
        courseE_playLab_scaffold1_b: Debes tener cuatro 'cuando flecha' bloques de
          eventos, con una dirección para abrir debajo de cada uno.
        courseE_playLab_scaffold1_c: Cuando hayas terminado, ¡podrás mover a tu héroe
          con las teclas de flecha!
      courseE_playLab_scaffold2_2018_authored_hint:
        courseE_playLab_scaffold1_a: Abre el menú desplegable del evento 'cuando \_\_\_
          flecha' para cambiar la dirección de los controles de bloqueo.
        courseE_playLab_scaffold1_b: Debes tener cuatro 'cuando flecha' bloques de
          eventos, con una dirección para abrir debajo de cada uno.
        courseE_playLab_scaffold1_c: Cuando hayas terminado, ¡podrás mover a tu héroe
          con las teclas de flecha!
      courseE_playLab_scaffold4_authored_hint:
        courseE_playLab_scaffold4_a: Usa `anotar punto` para agregar un punto, y`quitar
          punto` para restar uno.
      courseE_playLab_scaffold4_2018_authored_hint:
        courseE_playLab_scaffold4_a: Usa `anotar punto` para agregar un punto, y`quitar
          punto` para restar uno.
      courseE_playLab_scaffold5_authored_hint:
        courseE_playLab_scaffold5_a: Para finalizar este nivel, debes ganar o perder.
          Utilizar un bloque `final del juego como ganar` o 'final del juego como
          perder\` para terminar.
      courseE_playLab_scaffold5_2018_authored_hint:
        courseE_playLab_scaffold5_a: Para finalizar este nivel, debes ganar o perder.
          Utilizar un bloque `final del juego como ganar` o 'final del juego como
          perder\` para terminar.
      courseE_playlab_challenge2_authored_hint:
        courseE_playlab_challenge2_a: |-
          El actor sabe qué decir en función de su estado de ánimo. Intenta jugar con las cosas que la bruja podría decir.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">¡ Concéntrate y pregunta de nuevo!</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block></xml>
        courseE_playlab_challenge2_b: |-
          Se sentirá como que el juego comienza si llamas la función `haz una pregunta` de nuevo por debajo de la lista de los condicionales.
          <xml><block type="studio_saySpriteParamsTime" inline="true">

          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"></mutation>
                  </block></block></xml>
        courseE_playlab_challenge2_c: |-
          Tendrás que agregar más declaraciones condicionales para dar a los actores más cosas que decir.
          <xml><block type="studio_ifActorHasEmotionParams" inline="true">
                      <title name="EMOTION">2</title>
                      <value name="SPRITE">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="studio_saySpriteParamsTime" inline="true">
                      <value name="SPRITE">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <value name="TEXT">
                        <block type="text">
                          <title name="TEXT">???</title>
                        </block>
                      </value>
                      <value name="TIME">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                        </statement></block></xml>!
        courseE_playlab_challenge2_d: Una vez que entienda todo el código que se refiere
          al Actor 1, puedes tratar de volver a escribir el mismo código, pero esta
          vez para el Actor 2. ¡No te olvides de cambiar las instrucciones dentro
          del bloque 'mostrar pantalla de título' para que aún tenga sentido!
        courseE_playlab_challenge2_e: |-
          Cuando todo esté terminado, deberías poder hacer click en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?

          ¡Haz que un amigo pruebe tu aplicación cuando termines!
      courseE_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          El actor sabe qué decir porque revisa el valor actual de la variable ´fortuna´.

          <xml><block type="variables_set" inline="false">

          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Pareciera que el juego empieza de nuevo si llamas a la función 'haz una pregunta' después de que el actor dice la fortuna.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: |-
          Tendrás que agregar más declaraciones condicionales para dar a los actores más cosas que decir.

          <xml><block type="studio_ifActorHasEmotionParams" inline="true">
                      <title name="EMOTION">2</title>
                      <value name="SPRITE">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="variables_set" inline="false">
                          <title name="VAR">fortune</title>
                          <value name="VALUE">
                            <block type="text" movable="false">
                              <title name="TEXT">???</title>
                            </block>
                          </value>
                        </block>
                        </statement></block></xml>

          No olvides cambiar los humores que mostrarán los actores dentro del ciclo ´repetir para siempre´. ¡También puedes determinar los humores al azar!
        courseF_playlab_variables_challenge3_d: Una vez que entiendas todo el código
          que se refiere al Actor 1, puedes tratar de volver a escribir el mismo código,
          pero esta vez para el Actor 2. ¡No te olvides de cambiar las instrucciones
          dentro del bloque de 'Mostrar pantalla de título' para que tengan sentido!
        courseF_playlab_variables_challenge3_e: |-
          Cuando todo esté terminado, deberías poder hacer click en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?

          ¡Haz que un amigo pruebe tu aplicación cuando termines!
      courseF_IceAge_1_authored_hint:
        iceage_hello1_a: Solo necesitas agregar un bloque para resolver este desafío.
          Arrastra el bloque `actor 1 decir` desde la barra de herramientas y conéctalo
          al bloque de evento `al ejecutar` que ya se encuentra en el área de trabajo.
          Luego, escribe "¡Hola!" dentro.
      courseF_IceAge_10_authored_hint:
        iceage_throw_hearts_a: "¿Cuándo deseas lanzar corazones a la abuela?  ¿Cuando
          se presiona una flecha? ¿Al hacer clic en Sid?  ¿Al hacer clic en abuela?
          \ ¡La elección es tuya!"
        iceage_throw_hearts_b: Para que la abuela sea feliz cuando reciba un corazón,
          necesitas conectar el bloque 'establecer humor de actor 2 a feliz' debajo
          del evento 'cuando actor 2 toca el proyectil'.
      courseF_IceAge_11_authored_hint:
        iceage_free_play_a: "¿Puedes hacer que Sid y Manny tengan una lucha de cristales
          de hielo?  "
        iceage_free_play_b: Haz que Granny persiga a Diego. Termina el juego como
          una victoria si lo atrapa.
        iceage_free_play_c: "¿Puedes hacer que Sid lance copos de nieve a Diego y
          que Diego se haga más grande cada vez que recibe uno? Termina el juego como
          una victoria si Diego recibe 5 golpes."
      courseF_IceAge_2_authored_hint:
        iceage_hello2_a: 'Para resolver este desafío, necesitarás que Sid diga algo
          único usando el bloque ''actor 1 dice''. Necesitarás que Manny diga algo
          con el bloque ''actor 2 dice''. '
      courseF_IceAge_3_authored_hint:
        iceage_hello3_a: Utiliza el bloque de 'mover el actor 1 a la derecha por 200
          píxeles' para resolver este desafío.
      courseF_IceAge_4_authored_hint:
        iceage_move_to_actor_a: En este desafío, puedes mover a Diego hacia abajo
          200 pixeles o mover a Manny arriba 200 pixeles.
        iceage_move_to_actor_b: Conecta el bloque 'reproducir\_\_\_sonido' al evento
          'cuando el actor 1 toque al 2' para terminar este reto.
      courseF_IceAge_5_authored_hint:
        iceage_repeat_a: Usa los bloques 'mover actor 1 a la izquierda' y 'mover actor
          1 a la derecha' para resolver este desafío.
      courseF_IceAge_6_authored_hint:
        iceage_click_hello_a: Añade un bloque 'actor 1 dice' o más al evento 'al hacer
          click' para completar este desafío.
      courseF_IceAge_7_authored_hint:
        iceage_move_events_a: 'Cada uno de los eventos ''cuando\_\_\_flecha'' necesita
          tener un comando ''mover actor 1'' diferente conectado a él para resolver
          este desafío. '
      courseF_IceAge_8_authored_hint:
        iceage_sound_and_points_a: Necesitas dos bloques debajo del evento 'cuando
          actor 1 toca actor 2'.
        iceage_sound_and_points_b: Necesitas tanto el bloque 'anota un punto' como
          el 'reproducir\_\_\_sonido' para pasar este nivel.
      courseF_IceAge_9_authored_hint:
        iceage_warn_ice_age_a: 'Solo deberías tener que añadir dos bloques para llevar
          este desafío a donde debe estar. '
        iceage_warn_ice_age_b: Añade los dos nuevos bloques debajo del evento 'al
          ejecutar' para que ocurran inmediatamente después de que se inicie el programa.
      courseF_artist_for1_authored_hint:
        courseF_artist_for1_a: |-
          Puedes dibujar algo como ésto:

          ! \[] (<https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png>)
      courseF_artist_for10_authored_hint:
        courseF_artist_for10_a: La imagen en el dibujo se hizo utilizando un contador
          para el 'establecer alfa' y 'contador' / 10 como un tamaño de pincel.
        courseF_artist_for10_b: La imagen en el dibujo utiliza una vuelta de 61 grados.
        courseF_artist_for10_c: |-
          ¿Quieres saber cómo se hizo la imagen de muestra?

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">división</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_2018_authored_hint:
        courseF_artist_for10_a: La imagen en el dibujo se hizo utilizando un contador
          para el 'establecer alfa' y 'contador' / 10 como un tamaño de pincel.
        courseF_artist_for10_b: La imagen en el dibujo utiliza una vuelta de 61 grados.
        courseF_artist_for10_c: |-
          ¿Quieres saber cómo se hizo la imagen de muestra?

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">división</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for10_2019_authored_hint:
        courseF_artist_for10_a: La imagen en el dibujo se hizo utilizando un contador
          para el 'establecer alfa' y 'contador' / 10 como un tamaño de pincel.
        courseF_artist_for10_b: La imagen en el dibujo utiliza una vuelta de 61 grados.
        courseF_artist_for10_c: |-
          ¿Quieres saber cómo se hizo la imagen de muestra?

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">división</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">61</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for1_2018_authored_hint:
        courseF_artist_for1_a: |-
          Puedes dibujar algo como ésto:

          ! \[] (<https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png>)
      courseF_artist_for1_2019_authored_hint:
        courseF_artist_for1_a: |-
          Puedes dibujar algo como ésto:

          ! \[] (<https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png>)
      courseF_artist_for2_authored_hint:
        courseF_artist_for2_a: |-
          Usa 'contador' para la longitud de tus triángulos dentro de tu loop 'repetir'.

          <xml><block type="draw_move" inline="true">

          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Recuerda contar de 10 en 10 desde adentro de tu ciclo.
        courseF_artist_for2_c: |-
          Este es el patrón que seguirá el Artista:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2018_authored_hint:
        courseF_artist_for2_a: |-
          Usa 'contador' para la longitud de tus triángulos dentro de tu loop 'repetir'.

          <xml><block type="draw_move" inline="true">

          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Recuerda contar de 10 en 10 desde adentro de tu ciclo.
        courseF_artist_for2_c: |-
          Este es el patrón que seguirá el Artista:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2019_authored_hint:
        courseF_artist_for2_a: |-
          Usa 'contador' para la longitud de tus triángulos dentro de tu loop 'repetir'.

          <xml><block type="draw_move" inline="true">

          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for2_b: Recuerda contar de 10 en 10 desde adentro de tu ciclo.
        courseF_artist_for2_c: |-
          Este es el patrón que seguirá el Artista:

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for3_authored_hint:
        courseF_artist_for3_a: |-
          Para que el loop 'para' maneje tu movimiento, asegúrate de que estás usando 'contador' como tu distancia en el bloque 'avanzar'.

          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_artist_for3_2018_authored_hint:
        courseF_artist_for3_a: |-
          Para que el loop 'para' maneje tu movimiento, asegúrate de que estás usando 'contador' como tu distancia en el bloque 'avanzar'.

          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_artist_for3_2019_authored_hint:
        courseF_artist_for3_a: |-
          Para que el loop 'para' maneje tu movimiento, asegúrate de que estás usando 'contador' como tu distancia en el bloque 'avanzar'.

          <xml>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          </block>
          </xml>
        courseF_artist_for3_b: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_artist_for4_authored_hint:
        courseF_artist_for4_a: |-
          **¿Cuál es el número más pequeño que necesitarás?
          ¿Cuál es el número más grande?
          ¿Qué tanto aumenta cada vez?**

          Esas son las preguntas que te tienes que hacer para completar los espacios del loop "para".
        courseF_artist_for4_b: "¡Tu código será muy similar al que escribiste en el
          último desafío, pero recuerda que debes dibujar un cuadrado esta vez!"
        courseF_artist_for4_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_artist_for4_2018_authored_hint:
        courseF_artist_for4_a: |-
          **¿Cuál es el número más pequeño que necesitarás?
          ¿Cuál es el número más grande?
          ¿Qué tanto aumenta cada vez?**

          Esas son las preguntas que te tienes que hacer para completar los espacios del loop "para".
        courseF_artist_for4_b: "¡Tu código será muy similar al que escribiste en el
          último desafío, pero recuerda que debes dibujar un cuadrado esta vez!"
        courseF_artist_for4_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_artist_for4_2019_authored_hint:
        courseF_artist_for4_a: |-
          **¿Cuál es el número más pequeño que necesitarás?
          ¿Cuál es el número más grande?
          ¿Qué tanto aumenta cada vez?**

          Esas son las preguntas que te tienes que hacer para completar los espacios del loop "para".
        courseF_artist_for4_b: "¡Tu código será muy similar al que escribiste en el
          último desafío, pero recuerda que debes dibujar un cuadrado esta vez!"
        courseF_artist_for4_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_artist_for5_authored_hint:
        courseF_artist_for5_a: "¡No necesitas el loop 'repetir' dentro cuando hagas
          este espiral!"
        courseF_artist_for5_b: Tus bloques de loop 'para', mover y girar pueden quedarse
          exactamente igual.
      courseF_artist_for5_2018_authored_hint:
        courseF_artist_for5_a: "¡No necesitas el loop 'repetir' dentro cuando hagas
          este espiral!"
        courseF_artist_for5_b: Tus bloques de loop 'para', mover y girar pueden quedarse
          exactamente igual.
      courseF_artist_for5_2019_authored_hint:
        courseF_artist_for5_a: "¡No necesitas el loop 'repetir' dentro cuando hagas
          este espiral!"
        courseF_artist_for5_b: Tus bloques de loop 'para', mover y girar pueden quedarse
          exactamente igual.
      courseF_artist_for6_authored_hint:
        courseF_artist_for6_a: Tu loop 'para' contará de 15 a 300 por 15.
        courseF_artist_for6_b: Pon un bloque 'avanzar' y uno 'girar' dentro de este
          loop 'para'.
        courseF_artist_for6_c: Todo lo que tienes que cambiar es el número de grados
          en el bloque de 'girar'.
      courseF_artist_for6_2018_authored_hint:
        courseF_artist_for6_a: Tu loop 'para' contará de 15 a 300 por 15.
        courseF_artist_for6_b: Pon un bloque 'avanzar' y uno 'girar' dentro de este
          loop 'para'.
        courseF_artist_for6_c: Todo lo que tienes que cambiar es el número de grados
          en el bloque de 'girar'.
      courseF_artist_for6_2019_authored_hint:
        courseF_artist_for6_a: Tu loop 'para' contará de 15 a 300 por 15.
        courseF_artist_for6_b: Pon un bloque 'avanzar' y uno 'girar' dentro de este
          loop 'para'.
        courseF_artist_for6_c: Todo lo que tienes que cambiar es el número de grados
          en el bloque de 'girar'.
      courseF_artist_for7_authored_hint:
        courseF_artist_for7_a: El lápiz es más fino en este desafío. Tendrás que configurarlo
          a '1' antes de empezar.
        courseF_artist_for7_b: "¡Nota que esta espiral gira a la derecha en vez de
          a la izquierda!"
        courseF_artist_for7_c: El loop 'para' en este desafío va de 15 a 300 por 2.
        courseF_artist_for7_d: Esta imagen se hace girando a 89 grados.
      courseF_artist_for7_2018_authored_hint:
        courseF_artist_for7_a: El lápiz es más fino en este desafío. Tendrás que configurarlo
          a '1' antes de empezar.
        courseF_artist_for7_b: "¡Nota que esta espiral gira a la derecha en vez de
          a la izquierda!"
        courseF_artist_for7_c: El loop 'para' en este desafío va de 15 a 300 por 2.
        courseF_artist_for7_d: Esta imagen se hace girando a 89 grados.
      courseF_artist_for7_2019_authored_hint:
        courseF_artist_for7_a: El lápiz es más fino en este desafío. Tendrás que configurarlo
          a '1' antes de empezar.
        courseF_artist_for7_b: "¡Nota que esta espiral gira a la derecha en vez de
          a la izquierda!"
        courseF_artist_for7_c: El loop 'para' en este desafío va de 15 a 300 por 2.
        courseF_artist_for7_d: Esta imagen se hace girando a 89 grados.
      courseF_artist_for8_authored_hint:
        courseF_artist_for8_a: Mantén todo lo demás igual en el código, sólo el ángulo
          de giro tiene que cambiar.
        courseF_artist_for8_b: "¡Si lo deseas puedes elegir un color diferente para
          tu espiral!"
      courseF_artist_for8_2018_authored_hint:
        courseF_artist_for8_a: Mantén todo lo demás igual en el código, sólo el ángulo
          de giro tiene que cambiar.
        courseF_artist_for8_b: "¡Si lo deseas puedes elegir un color diferente para
          tu espiral!"
      courseF_artist_for8_2019_authored_hint:
        courseF_artist_for8_a: Mantén todo lo demás igual en el código, sólo el ángulo
          de giro tiene que cambiar.
        courseF_artist_for8_b: "¡Si lo deseas puedes elegir un color diferente para
          tu espiral!"
      courseF_artist_for9_authored_hint:
        courseF_artist_for9_a: Si pones el bloque 'establecer alfa' dentro de tu loop
          'para' y usas la variable 'contador' para cambiarlo, puedes crear un diseño
          como este.
        courseF_artist_for9_b: El bloque de 'establecer alfa' cambia la opacidad de
          un color. Cuanto menor sea el valor, más transparente es el color.
      courseF_artist_for9_2018_authored_hint:
        courseF_artist_for9_a: Si pones el bloque 'establecer alfa' dentro de tu loop
          'para' y usas la variable 'contador' para cambiarlo, puedes crear un diseño
          como este.
        courseF_artist_for9_b: El bloque de 'establecer alfa' cambia la opacidad de
          un color. Cuanto menor sea el valor, más transparente es el color.
      courseF_artist_for9_2019_authored_hint:
        courseF_artist_for9_a: Si pones el bloque 'establecer alfa' dentro de tu loop
          'para' y usas la variable 'contador' para cambiarlo, puedes crear un diseño
          como este.
        courseF_artist_for9_b: El bloque de 'establecer alfa' cambia la opacidad de
          un color. Cuanto menor sea el valor, más transparente es el color.
      courseF_artist_for_challenge1_authored_hint:
        courseF_artist_for_challenge1_a: El "ancho del lápiz" es 1. El primer cuadrado
          tiene lados de 50 pixeles, y cada cuadrado es 50 pixeles más ancho que el
          anterior.
        courseF_artist_for_challenge1_b: La opacidad en el pincel siempre es `contador`
          / 2.
        courseF_artist_for_challenge1_c: Después de hacer cada cuadrado, no te olvides
          de saltar hacia atrás, girar, saltar de nuevo, ¡y luego retroceder!
        courseF_artist_for_challenge1_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018_authored_hint:
        courseF_artist_for_challenge1_a: El "ancho del lápiz" es 1. El primer cuadrado
          tiene lados de 50 pixeles, y cada cuadrado es 50 pixeles más ancho que el
          anterior.
        courseF_artist_for_challenge1_b: La opacidad en el pincel siempre es `contador`
          / 2.
        courseF_artist_for_challenge1_c: Después de hacer cada cuadrado, no te olvides
          de saltar hacia atrás, girar, saltar de nuevo, ¡y luego retroceder!
        courseF_artist_for_challenge1_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2019_authored_hint:
        courseF_artist_for_challenge1_a: El "ancho del lápiz" es 1. El primer cuadrado
          tiene lados de 50 pixeles, y cada cuadrado es 50 pixeles más ancho que el
          anterior.
        courseF_artist_for_challenge1_b: La opacidad en el pincel siempre es `contador`
          / 2.
        courseF_artist_for_challenge1_c: Después de hacer cada cuadrado, no te olvides
          de saltar hacia atrás, girar, saltar de nuevo, ¡y luego retroceder!
        courseF_artist_for_challenge1_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_authored_hint:
        courseF_artist_for_challenge2_c: 'El "loop para" va desde 5 a 250 por 2. '
        courseF_artist_for_challenge2_a: El cambio de color se presenta con el bloque
          'definir color con rojo, verde, azul'. Rojo es la constante definida como
          255, verde es siempre el valor de 'contador', y azul es siempre '255-contador'.
        courseF_artist_for_challenge2_b: El código para esto es mucho más simple de
          lo que podrías pensar. Solo define el color dentro del 'loop para', avanza,
          y luego gira.
        courseF_artist_for_challenge2_d: |-
          \*\* Solución: \*\*

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP"></title>
          <value name="A">
          <block type="math_number">
          menos el
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          <span class="notranslate"> ¡96</span>
          </next>
          </block>
          </xml>

          ! \[] (<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09> PM.png)
      courseF_artist_for_challenge2_2018_authored_hint:
        courseF_artist_for_challenge2_c: 'El "loop para" va desde 5 a 250 por 2. '
        courseF_artist_for_challenge2_a: El cambio de color se presenta con el bloque
          'definir color con rojo, verde, azul'. Rojo es la constante definida como
          255, verde es siempre el valor de 'contador', y azul es siempre '255-contador'.
        courseF_artist_for_challenge2_b: El código para esto es mucho más simple de
          lo que podrías pensar. Solo define el color dentro del 'loop para', avanza,
          y luego gira.
        courseF_artist_for_challenge2_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_2019_authored_hint:
        courseF_artist_for_challenge2_c: 'El "loop para" va desde 5 a 250 por 2. '
        courseF_artist_for_challenge2_a: El cambio de color se presenta con el bloque
          'definir color con rojo, verde, azul'. Rojo es la constante definida como
          255, verde es siempre el valor de 'contador', y azul es siempre '255-contador'.
        courseF_artist_for_challenge2_b: El código para esto es mucho más simple de
          lo que podrías pensar. Solo define el color dentro del 'loop para', avanza,
          y luego gira.
        courseF_artist_for_challenge2_d: |-
          \*\* Solución: \*\*

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP"></title>
          <value name="A">
          <block type="math_number">
          menos el
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">contador</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          <span class="notranslate"> ¡96</span>
          </next>
          </block>
          </xml>

          ! \[] (<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09> PM.png)
      courseF_artist_fwp1_authored_hint:
        courseF_artist_fwp1_c: Pon todo el código para dibujar un cuadro dentro del
          editor de funciones.
        courseF_artist_fwp1_a: Recuerda, necesitas girar 90 grados para dibujar un
          cuadrado.
        courseF_artist_fwp1_b: Solo necesitas repetir tantas veces como el número
          de lados en un cuadrado.
      courseF_artist_fwp1_2018_authored_hint:
        courseF_artist_fwp1_c: Pon todo el código para dibujar un cuadro dentro del
          editor de funciones.
        courseF_artist_fwp1_a: Recuerda, necesitas girar 90 grados para dibujar un
          cuadrado.
        courseF_artist_fwp1_b: Solo necesitas repetir tantas veces como el número
          de lados en un cuadrado.
      courseF_artist_fwp2_authored_hint:
        courseF_artist_fwp2_a: Necesitas hacer clic en el botón 'editar' para entrar
          a la función. Una vez que estés ahí, ¡añade un parámetro llamado 'longitud'
          y úsalo dentro de tu bloque 'avanzar'!
        courseF_artist_fwp2_b: "¡Cuando llamas una función, usa un ciclo 'for' para
          tener el mejor código posible!"
      courseF_artist_fwp2_2018_authored_hint:
        courseF_artist_fwp2_a: Necesitas hacer clic en el botón 'editar' para entrar
          a la función. Una vez que estés ahí, ¡añade un parámetro llamado 'longitud'
          y úsalo dentro de tu bloque 'avanzar'!
        courseF_artist_fwp2_b: "¡Cuando llamas una función, usa un ciclo 'for' para
          tener el mejor código posible!"
      courseF_artist_fwp3_authored_hint:
        courseF_artist_fwp3_a: Esto se vuelve más sencillo si pones todo dentro de
          un loop 'para'.
        courseF_artist_fwp3_b: |-
          Asegurate de girar 90 grados entre cada cuadro.

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp3_2018_authored_hint:
        courseF_artist_fwp3_a: Esto se vuelve más sencillo si pones todo dentro de
          un loop 'para'.
        courseF_artist_fwp3_b: |-
          Asegurate de girar 90 grados entre cada cuadro.

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      courseF_artist_fwp4_authored_hint:
        courseF_artist_fwp4_b: Recuerda **añadir** un parámetro. ¡No elimines el que
          ya esta ahí!
        courseF_artist_fwp4_c: Necesitas llamar una funcion tres veces para dibujar
          las figuras.
      courseF_artist_fwp4_2018_authored_hint:
        courseF_artist_fwp4_b: Recuerda **añadir** un parámetro. ¡No elimines el que
          ya esta ahí!
        courseF_artist_fwp4_c: Necesitas llamar una funcion tres veces para dibujar
          las figuras.
      courseF_artist_fwp5_authored_hint:
        courseF_artist_fwp5_d: "¡Un loop 'para' te ayudaría mucho!"
        courseF_artist_fwp5_c: Tendrás que editar un poco la función, ya que la función
          anterior hacía girar al artista a la derecha luego de cada lado, y esta
          imagen necesita un giro a la izquierda.
        courseF_artist_fwp5_a: La longitud de los lados de cada forma es 7 veces el
          número de lados que tiene.
        courseF_artist_fwp5_b: No te olvides de saltar 100 píxeles entre figuras.
      courseF_artist_fwp5_2018_authored_hint:
        courseF_artist_fwp5_d: "¡Un loop 'para' te ayudaría mucho!"
        courseF_artist_fwp5_c: Tendrás que editar un poco la función, ya que la función
          anterior hacía girar al artista a la derecha luego de cada lado, y esta
          imagen necesita un giro a la izquierda.
        courseF_artist_fwp5_a: La longitud de los lados de cada forma es 7 veces el
          número de lados que tiene.
        courseF_artist_fwp5_b: No te olvides de saltar 100 píxeles entre figuras.
      courseF_artist_fwp6_authored_hint:
        courseF_artist_fwp6_a: Está bien ejecutar el programa unas cuantas veces para
          averiguar cómo funciona la función con parámetros diferentes.
        courseF_artist_fwp6_b: No es necesario añadir bloques 'mover' o 'girar' para
          terminar este código.
      courseF_artist_fwp6_2018_authored_hint:
        courseF_artist_fwp6_a: Está bien ejecutar el programa unas cuantas veces para
          averiguar cómo funciona la función con parámetros diferentes.
        courseF_artist_fwp6_b: No es necesario añadir bloques 'mover' o 'girar' para
          terminar este código.
      courseF_artist_fwp7_authored_hint:
        courseF_artist_fwp7_a: ¿Te sientes perdido después de probar un par de ideas?
          Intenta hacer clic en el botón "Empezar" en la esquina superior derecha.
        courseF_artist_fwp7_b: La nueva variable 'min' debe ir en la primera ranura
          en tu loop 'para', dentro de la función.
      courseF_artist_fwp7_2018_authored_hint:
        courseF_artist_fwp7_a: ¿Te sientes perdido después de probar un par de ideas?
          Intenta hacer clic en el botón "Empezar" en la esquina superior derecha.
        courseF_artist_fwp7_b: La nueva variable 'min' debe ir en la primera ranura
          en tu loop 'para', dentro de la función.
      courseF_artist_fwp8_authored_hint:
        courseF_artist_fwp8_a: Si tu función es correcta, no necesitas cambiarla para
          este desafío.
        courseF_artist_fwp8_b: Lo único que necesitas hacer entre llamadas de función
          es cambiar el color de la línea.
      courseF_artist_fwp8_2018_authored_hint:
        courseF_artist_fwp8_a: Si tu función es correcta, no necesitas cambiarla para
          este desafío.
        courseF_artist_fwp8_b: Lo único que necesitas hacer entre llamadas de función
          es cambiar el color de la línea.
      courseF_artist_fwp9_authored_hint:
        courseF_artist_fwp9_a: |-
          ¡Prueba uno de estos dibujos.
           ! \[] (<https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13> hints.png)
      courseF_artist_fwp9_2018_authored_hint:
        courseF_artist_fwp9_a: |-
          ¡Prueba uno de estos dibujos.
           ! \[] (<https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13> hints.png)
      courseF_artist_fwp_challenge1_authored_hint:
        courseF_artist_fwp_challenge1_b: Esta es una serie de polígonos con lados
          que tienen largos de pixeles opuestos.
        courseF_artist_fwp_challenge1_c: Cada polígono se llama desde dentro de un
          loop que va desde 3 hasta 6 por un incremento de 1. ¿Qué formas está haciendo?
      courseF_artist_fwp_challenge1_2018_authored_hint:
        courseF_artist_fwp_challenge1_b: Esta es una serie de polígonos con lados
          que tienen largos de pixeles opuestos.
        courseF_artist_fwp_challenge1_c: Cada polígono se llama desde dentro de un
          loop que va desde 3 hasta 6 por un incremento de 1. ¿Qué formas está haciendo?
      courseF_artist_fwp_challenge2_authored_hint:
        courseF_artist_fwp_challenge1_a: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
        courseF_artist_fwp_challenge1_b: 'Esta es una serie de octógonos con lados
          que son ''contador'' píxeles de largo. '
        courseF_artist_fwp_challenge1_c: 'Cada octágono se llama desde adentro de
          un loop "para" que va desde 200 hacia abajo de 2 en 2. '
        courseF_artist_fwp_challenge1_d: 'No olvides dar vuelta por 22.5 grados al
          final de cada repetición. '
        courseF_artist_fwp_challenge1_e: Tanto el color de cada octágono como el ancho
          del lápiz están controlados por la variable \`contador '.
        courseF_artist_fwp_challenge1_f: |-
          \*\* Solución: \*\*

          ! [Bloques de solución] \(<https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png>)
      courseF_artist_fwp_challenge2_2018_authored_hint:
        courseF_artist_fwp_challenge1_a: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
        courseF_artist_fwp_challenge1_b: 'Esta es una serie de octógonos con lados
          que son ''contador'' píxeles de largo. '
        courseF_artist_fwp_challenge1_c: 'Cada octágono se llama desde adentro de
          un loop "para" que va desde 200 hacia abajo de 2 en 2. '
        courseF_artist_fwp_challenge1_d: 'No olvides dar vuelta por 22.5 grados al
          final de cada repetición. '
        courseF_artist_fwp_challenge1_e: Tanto el color de cada octágono como el ancho
          del lápiz están controlados por la variable \`contador '.
      courseF_artist_ramp10_authored_hint:
        courseF_artist_ramp10_a: No olvide girar 60 grados después de cada triángulo.
          ¿Qué ciclo necesitas para poner esa instrucción adentro?
        courseF_artist_ramp10_b: Si el código de un triángulo está en un <xml><block
          type="controls_repeat"><title name="TIMES">6</title></block></xml> ciclo,
          esta tarea será mucho más sencilla.
        courseF_artist_ramp10_c: |-
          Dibujarás seis triángulos en total para este diseño:

          ! \[] (<https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif>)+
      courseF_artist_ramp10_2018_authored_hint:
        courseF_artist_ramp10_a: No olvide girar 60 grados después de cada triángulo.
          ¿Qué ciclo necesitas para poner esa instrucción adentro?
        courseF_artist_ramp10_b: Si el código de un triángulo está en un <xml><block
          type="controls_repeat"><title name="TIMES">6</title></block></xml> ciclo,
          esta tarea será mucho más sencilla.
        courseF_artist_ramp10_c: |-
          Dibujarás seis triángulos en total para este diseño:

          ! \[] (<https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif>)+
      courseF_artist_ramp8_authored_hint:
        courseF_artist_ramp8_a: Para dibujar un lado, usa el bloque <xml><block type="draw_move_by_constant"><title
          name="DIR">moverHaciaAdelante</title><title name="VALUE">100</title></block></xml>
          y cambia el 100 a 200.
        courseF_artist_ramp8_b: |-
          Para dibujar los 4 lados, pon el bloque <xml><block type="draw_move_by_constant"><title name="DIR">moverHaciaAdelante</title><title name="VALUE">200</title></block></xml> dentro de un ciclo de repetición y asegúrate de que el bucle se dibuja 4.

          ¡No olvides girar después!
        courseF_artist_ramp8_c: Tu giro también irá dentro del bucle <xml><block type="controls_repeat"><title
          name="TIMES">3</title></block></xml>.
      courseF_artist_ramp8_2018_authored_hint:
        courseF_artist_ramp8_a: Para dibujar un lado, usa el bloque <xml><block type="draw_move_by_constant"><title
          name="DIR">moverHaciaAdelante</title><title name="VALUE">100</title></block></xml>
          y cambia el 100 a 200.
        courseF_artist_ramp8_b: |-
          Para dibujar los 4 lados, pon el bloque <xml><block type="draw_move_by_constant"><title name="DIR">moverHaciaAdelante</title><title name="VALUE">200</title></block></xml> dentro de un ciclo de repetición y asegúrate de que el bucle se dibuja 4.

          ¡No olvides girar después!
        courseF_artist_ramp8_c: Tu giro también irá dentro del bucle <xml><block type="controls_repeat"><title
          name="TIMES">3</title></block></xml>.
      courseF_artist_ramp9_authored_hint:
        courseF_artist_ramp9_a: "¿Cómo es esto similar a un cuadrado? ¿Como es diferente?"
        courseF_artist_ramp9_b: "¡Puedes utilizar el menú desplegable en los bloques
          de 'girar' para ver qué ángulo necesitas!"
        courseF_artist_ramp9_c: Tienes que moverte 100 píxeles hacia adelante, luego
          girar a la derecha 120 grados para cada lado. ¿Puedes utilizar un loop <xml><block
          type="controls_repeat"><title name="TIMES">3</title></block></xml> para
          hacer el código más corto?
      courseF_artist_ramp9_2018_authored_hint:
        courseF_artist_ramp9_a: "¿Cómo es esto similar a un cuadrado? ¿Como es diferente?"
        courseF_artist_ramp9_b: "¡Puedes utilizar el menú desplegable en los bloques
          de 'girar' para ver qué ángulo necesitas!"
        courseF_artist_ramp9_c: Tienes que moverte 100 píxeles hacia adelante, luego
          girar a la derecha 120 grados para cada lado. ¿Puedes utilizar un loop <xml><block
          type="controls_repeat"><title name="TIMES">3</title></block></xml> para
          hacer el código más corto?
      courseF_artist_variables10_authored_hint:
        courseF_artist_variables10_a: "¡Diviértete con este nivel! Mira lo que pueden
          hacer pequeños cambios a tu código."
        courseF_artist_variables10_b: Puedes intentar varias cosas y ejecutar el código
          varias veces.
      courseF_artist_variables10_2018_authored_hint:
        courseF_artist_variables10_a: "¡Diviértete con este nivel! Mira lo que pueden
          hacer pequeños cambios a tu código."
        courseF_artist_variables10_b: Puedes intentar varias cosas y ejecutar el código
          varias veces.
      courseF_artist_variables10_2019_authored_hint:
        courseF_artist_variables10_a: "¡Diviértete con este nivel! Mira lo que pueden
          hacer pequeños cambios a tu código."
        courseF_artist_variables10_b: Puedes intentar varias cosas y ejecutar el código
          varias veces.
      courseF_artist_variables2_authored_hint:
        courseF_artist_variables2_a: Recuerda seguir adelante después de dibujar cada
          triángulo.
        courseF_artist_variables2_b: Tu nuevo loop contendrá el loop para tu triángulo,
          luego un comando 'avanzar'.
      courseF_artist_variables2_2018_authored_hint:
        courseF_artist_variables2_a: Recuerda seguir adelante después de dibujar cada
          triángulo.
        courseF_artist_variables2_b: Tu nuevo loop contendrá el loop para tu triángulo,
          luego un comando 'avanzar'.
      courseF_artist_variables2_2019_authored_hint:
        courseF_artist_variables2_a: Recuerda seguir adelante después de dibujar cada
          triángulo.
        courseF_artist_variables2_b: Tu nuevo loop contendrá el loop para tu triángulo,
          luego un comando 'avanzar'.
      courseF_artist_variables3_authored_hint:
        courseF_artist_variables3_a: 'La variable ''longitud'' se utilizará en dos
          lugares en tu código: la longitud del lado de tu triángulo y la cantidad
          a avanzar entre triángulos.'
        courseF_artist_variables3_b: 'Un bloque de número con valor 50 sólo debería
          estar en un lugar: después del bloque ''establecer longitud de variable''.'
      courseF_artist_variables3_2018_authored_hint:
        courseF_artist_variables3_a: 'La variable ''longitud'' se utilizará en dos
          lugares en tu código: la longitud del lado de tu triángulo y la cantidad
          a avanzar entre triángulos.'
        courseF_artist_variables3_b: 'Un bloque de número con valor 50 sólo debería
          estar en un lugar: después del bloque ''establecer longitud de variable''.'
      courseF_artist_variables3_2019_authored_hint:
        courseF_artist_variables3_a: 'La variable ''longitud'' se utilizará en dos
          lugares en tu código: la longitud del lado de tu triángulo y la cantidad
          a avanzar entre triángulos.'
        courseF_artist_variables3_b: 'Un bloque de número con valor 50 sólo debería
          estar en un lugar: después del bloque ''establecer longitud de variable''.'
      courseF_artist_variables4_authored_hint:
        courseF_artist_variables4_a: El código no será muy diferente de lo que fue
          en el último desafío, excepto que tendrás que girar al artista para saltar
          hacia abajo, y luego hacerlo dar la vuelta para estar listo para saltar
          hacia adelante otra vez.
        courseF_artist_variables4_c: |-
          Este es el patrón que seguirá tu artista:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018_authored_hint:
        courseF_artist_variables4_a: El código no será muy diferente de lo que fue
          en el último desafío, excepto que tendrás que girar al artista para saltar
          hacia abajo, y luego hacerlo dar la vuelta para estar listo para saltar
          hacia adelante otra vez.
        courseF_artist_variables4_c: |-
          Este es el patrón que seguirá tu artista:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      courseF_artist_variables4_2019_authored_hint:
        courseF_artist_variables4_a: El código no será muy diferente de lo que fue
          en el último desafío, excepto que tendrás que girar al artista para saltar
          hacia abajo, y luego hacerlo dar la vuelta para estar listo para saltar
          hacia adelante otra vez.
        courseF_artist_variables4_c: |-
          Este es el patrón que seguirá tu artista:

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      courseF_artist_variables5_authored_hint:
        courseF_artist_variables5_a: La segunda mitad de tu código debe tener casi
          el mismo aspecto que la primera mitad, salvo que girarás a la _izquierda_,
          saltarás y girarás a la _derecha_.
        courseF_artist_variables5_b: La primera mitad de tu código dibujará tres triángulos,
          y la segunda mitad dibujará los otros tres.
        courseF_artist_variables5_c: Comienza por duplicar el código en la primera
          mitad de tu programa, luego modifícalo para que se muestre el diseño.
        courseF_artist_variables5_d: |-
          Este es el patrón que seguirá tu artista:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018_authored_hint:
        courseF_artist_variables5_a: La segunda mitad de tu código debe tener casi
          el mismo aspecto que la primera mitad, salvo que girarás a la _izquierda_,
          saltarás y girarás a la _derecha_.
        courseF_artist_variables5_b: La primera mitad de tu código dibujará tres triángulos,
          y la segunda mitad dibujará los otros tres.
        courseF_artist_variables5_c: Comienza por duplicar el código en la primera
          mitad de tu programa, luego modifícalo para que se muestre el diseño.
        courseF_artist_variables5_d: |-
          Este es el patrón que seguirá tu artista:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2019_authored_hint:
        courseF_artist_variables5_a: La segunda mitad de tu código debe tener casi
          el mismo aspecto que la primera mitad, salvo que girarás a la _izquierda_,
          saltarás y girarás a la _derecha_.
        courseF_artist_variables5_b: La primera mitad de tu código dibujará tres triángulos,
          y la segunda mitad dibujará los otros tres.
        courseF_artist_variables5_c: Comienza por duplicar el código en la primera
          mitad de tu programa, luego modifícalo para que se muestre el diseño.
        courseF_artist_variables5_d: |-
          Este es el patrón que seguirá tu artista:

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6_authored_hint:
        courseF_artist_variables6_a: Gracias a las variables, solo necesitarás cambiar
          un numero al inicio para que esto funcione.
        courseF_artist_variables6_b: Deberás editar el bloque numérico con el valor
          50, pero no se debe alterar más nada en el código.
      courseF_artist_variables6_2018_authored_hint:
        courseF_artist_variables6_a: Gracias a las variables, solo necesitarás cambiar
          un numero al inicio para que esto funcione.
        courseF_artist_variables6_b: Deberás editar el bloque numérico con el valor
          50, pero no se debe alterar más nada en el código.
      courseF_artist_variables6_2019_authored_hint:
        courseF_artist_variables6_a: Gracias a las variables, solo necesitarás cambiar
          un numero al inicio para que esto funcione.
        courseF_artist_variables6_b: Deberás editar el bloque numérico con el valor
          50, pero no se debe alterar más nada en el código.
      courseF_artist_variables6a_authored_hint:
        courseF_artist_variables6a_a: Recuerda utilizar la variable 'longitud' en
          lugar de un número real a resolver este desafío.
        courseF_artist_variables6a_b: "¡Este código será muy similar al código de
          tu triángulo, solo que con una forma diferente!"
        courseF_artist_variables6a_c: Primero escribe el código de un cuadrado, luego
          agrega el código para moverte entre los cuadrados. Finalmente, ¡agrega un
          loop alrededor de todo!
        courseF_artist_variables6a_d: |-
          ¡Este es el patrón que seguirás!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018_authored_hint:
        courseF_artist_variables6a_a: Recuerda utilizar la variable 'longitud' en
          lugar de un número real a resolver este desafío.
        courseF_artist_variables6a_b: "¡Este código será muy similar al código de
          tu triángulo, solo que con una forma diferente!"
        courseF_artist_variables6a_c: Primero escribe el código de un cuadrado, luego
          agrega el código para moverte entre los cuadrados. Finalmente, ¡agrega un
          loop alrededor de todo!
        courseF_artist_variables6a_d: |-
          ¡Este es el patrón que seguirás!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2019_authored_hint:
        courseF_artist_variables6a_a: Recuerda utilizar la variable 'longitud' en
          lugar de un número real a resolver este desafío.
        courseF_artist_variables6a_b: "¡Este código será muy similar al código de
          tu triángulo, solo que con una forma diferente!"
        courseF_artist_variables6a_c: Primero escribe el código de un cuadrado, luego
          agrega el código para moverte entre los cuadrados. Finalmente, ¡agrega un
          loop alrededor de todo!
        courseF_artist_variables6a_d: |-
          ¡Este es el patrón que seguirás!

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7_authored_hint:
        courseF_artist_variables7_a: Inicia el código mediante el bloque de 'establecer
          longitud'. Establece la variable de longitud a 150.
        courseF_artist_variables7_b: Puedes utilizar un loop 'repetir' para simplificar
          el código para el triángulo.
        courseF_artist_variables7_c: Tienes que girar a la izquierda 120 grados para
          hacer las esquinas del triángulo.
      courseF_artist_variables7_2018_authored_hint:
        courseF_artist_variables7_a: Inicia el código mediante el bloque de 'establecer
          longitud'. Establece la variable de longitud a 150.
        courseF_artist_variables7_b: Puedes utilizar un loop 'repetir' para simplificar
          el código para el triángulo.
        courseF_artist_variables7_c: Tienes que girar a la izquierda 120 grados para
          hacer las esquinas del triángulo.
      courseF_artist_variables7_2019_authored_hint:
        courseF_artist_variables7_a: Inicia el código mediante el bloque de 'establecer
          longitud'. Establece la variable de longitud a 150.
        courseF_artist_variables7_b: Puedes utilizar un loop 'repetir' para simplificar
          el código para el triángulo.
        courseF_artist_variables7_c: Tienes que girar a la izquierda 120 grados para
          hacer las esquinas del triángulo.
      courseF_artist_variables8_authored_hint:
        courseF_artist_variables8_b: Recuerda iniciar tu código para el triángulo
          con el bloque 'establecer longitud', y empezar a 150 píxeles.
        courseF_artist_variables8_c: Asegúrate de utilizar el loop 'repetir' para
          dibujar el triángulo.
        courseF_artist_variables8_a: |-
          Intenta poner el conjunto de bloques

          <xml>
          <block type="variables_set" inline="false">
                                  <title name="VAR">length</title>
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">ADD</title>
                                      <value name="A">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="math_number">
                                          <title name="NUM">10</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                </block>
          </xml>

          dentro de tu bucle al final.
      courseF_artist_variables8_2018_authored_hint:
        courseF_artist_variables8_b: Recuerda iniciar tu código para el triángulo
          con el bloque 'establecer longitud', y empezar a 150 píxeles.
        courseF_artist_variables8_c: Asegúrate de utilizar el loop 'repetir' para
          dibujar el triángulo.
        courseF_artist_variables8_a: |-
          Intenta poner el conjunto de bloques

          <xml>
          <block type="variables_set" inline="false">
                                  <title name="VAR">length</title>
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">ADD</title>
                                      <value name="A">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="math_number">
                                          <title name="NUM">10</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                </block>
          </xml>

          dentro de tu bucle al final.
      courseF_artist_variables8_2019_authored_hint:
        courseF_artist_variables8_b: Recuerda iniciar tu código para el triángulo
          con el bloque 'establecer longitud', y empezar a 150 píxeles.
        courseF_artist_variables8_c: Asegúrate de utilizar el loop 'repetir' para
          dibujar el triángulo.
        courseF_artist_variables8_a: |-
          Intenta poner el conjunto de bloques

          <xml>
          <block type="variables_set" inline="false">
                                  <title name="VAR">length</title>
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">ADD</title>
                                      <value name="A">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="math_number">
                                          <title name="NUM">10</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                </block>
          </xml>

          dentro de tu bucle al final.
      courseF_artist_variables9_authored_hint:
        courseF_artist_variables9_a: Para este desafío, todo lo que necesitas es cambiar
          cuántas veces se repite el loop.
        courseF_artist_variables9_b: Asegúrate de que los bloques que incrementan
          'longitud' estan dentro de tu ciclo de manera que las lineas sigan haciendose
          más largas.
      courseF_artist_variables9_2018_authored_hint:
        courseF_artist_variables9_a: Para este desafío, todo lo que necesitas es cambiar
          cuántas veces se repite el loop.
        courseF_artist_variables9_b: Asegúrate de que los bloques que incrementan
          'longitud' estan dentro de tu ciclo de manera que las lineas sigan haciendose
          más largas.
      courseF_artist_variables9_2019_authored_hint:
        courseF_artist_variables9_a: Para este desafío, todo lo que necesitas es cambiar
          cuántas veces se repite el loop.
        courseF_artist_variables9_b: Asegúrate de que los bloques que incrementan
          'longitud' estan dentro de tu ciclo de manera que las lineas sigan haciendose
          más largas.
      courseF_artist_variablesFP_authored_hint:
        courseF_artist_variablesFP_a: |-
          Intenta con uno de estos tres dibujos.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2018_authored_hint:
        courseF_artist_variablesFP_a: |-
          Intenta con uno de estos tres dibujos.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2019_authored_hint:
        courseF_artist_variablesFP_a: |-
          Intenta con uno de estos tres dibujos.
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variables_4_authored_hint:
        courseF_artist_variables_4_a: El código no será muy diferente de lo que fue
          en el último desafío, excepto que tendrás que girar al artista para saltar
          hacia abajo, y luego hacerlo dar la vuelta para estar listo para saltar
          hacia adelante otra vez.
        courseF_artist_variables_4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables_6_authored_hint:
        courseF_artist_variables_6_a: Gracias a las variables, solo necesitarás cambiar
          un numero al inicio para que esto funcione.
      courseF_artist_variables_6a_authored_hint:
        courseF_artist_variables6a_a: Recuerda utilizar la variable 'longitud' en
          lugar de un número real a resolver este desafío.
      courseF_artist_variables_8_authored_hint:
        courseF_artist_variables_8_a: "¡Intenta poner el conjunto de bloques ![](https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png)
          dentro de tu loop al final.  "
      courseF_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_a: Cada línea vertical tiene una longitud
          de '10'. Cada línea horizontal debe tener una longitud de la 'longitud'.
        courseF_artist_variables_challenge1_b: Querrás aumentar el valor de la 'longitud'
          por 10 \*\* dos veces \*\* dentro del loop.
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberás girar
          a la izquierda dos veces, girar a la derecha dos veces y avanzar un total
          de cuatro veces.
        courseF_artist_variables_challenge1_d: "Este desafío utiliza un solo bucle.
          Sin las variables, un camino similar podría ser un zigzag. \n\n![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36
          PM.png>)\n\nSi tienes problemas, comienza por crear esta imagen, y luego
          trata de ver dónde puedes utilizar las variables para cambiar la longitud
          de las líneas horizontales."
        courseF_artist_variables_challenge1_e: "Aquí está la solución. \n\n<xml>\n<block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n<next>\n<block
          type=\"variables_set\" inline=\"false\">\n<title name=\"VAR\"></title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\"></title>\n10\n</block>\n</value>\n<next>\n<block
          type=\"controls_repeat_ext\" inline=\"true\">\n<value name=\"TIMES\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">18</title>\n</block>\n</value>\n<statement
          name=\"DO\">\n<block type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">turnRight</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\nde
          longitud de\n</block>\n</value>\n<next>\n<block type=\"variables_set\" inline=\"false\">\n<title
          name=\"VAR\"></title>\nAgregar de\n<value name=\"VALUE\">\n<block type=\"math_arithmetic\"
          inline=\"true\">\n<title name=\"OP\"></title>\n<value name=\"A\">\n<block
          type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\n</block>\n</value>\n<value
          name=\"B\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">izquierda</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">izquierda</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\n</block>\n</value>\n<next>\n<block
          type=\"variables_set\" inline=\"false\">\n<title name=\"VAR\">longitud</title>\n<value
          name=\"VALUE\">\n<block type=\"math_arithmetic\" inline=\"true\">\n<title
          name=\"OP\">ADD</title>\n<value name=\"A\">\n<block type=\"variables_get\">\n<title
          name=\"VAR\">longitud</title>\n</block>\n</value>\n<value name=\"B\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">turnRight</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</statement>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>"
      courseF_artist_variables_challenge1_2018_authored_hint:
        courseF_artist_variables_challenge1_a: Cada línea vertical tiene una longitud
          de '10'. Cada línea horizontal debe tener una longitud de la 'longitud'.
        courseF_artist_variables_challenge1_b: Querrás aumentar el valor de la 'longitud'
          por 10 \*\* dos veces \*\* dentro del loop.
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberás girar
          a la izquierda dos veces, girar a la derecha dos veces y avanzar un total
          de cuatro veces.
        courseF_artist_variables_challenge1_d: "Este desafío utiliza un solo bucle.
          Sin las variables, un camino similar podría ser un zigzag. \n\n![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36
          PM.png>)\n\nSi tienes problemas, comienza por crear esta imagen, y luego
          trata de ver dónde puedes utilizar las variables para cambiar la longitud
          de las líneas horizontales."
        courseF_artist_variables_challenge1_e: "Aquí está la solución. \n\n<xml>\n<block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n<next>\n<block
          type=\"variables_set\" inline=\"false\">\n<title name=\"VAR\"></title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\"></title>\n10\n</block>\n</value>\n<next>\n<block
          type=\"controls_repeat_ext\" inline=\"true\">\n<value name=\"TIMES\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">18</title>\n</block>\n</value>\n<statement
          name=\"DO\">\n<block type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">turnRight</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\nde
          longitud de\n</block>\n</value>\n<next>\n<block type=\"variables_set\" inline=\"false\">\n<title
          name=\"VAR\"></title>\nAgregar de\n<value name=\"VALUE\">\n<block type=\"math_arithmetic\"
          inline=\"true\">\n<title name=\"OP\"></title>\n<value name=\"A\">\n<block
          type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\n</block>\n</value>\n<value
          name=\"B\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">izquierda</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">izquierda</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\n</block>\n</value>\n<next>\n<block
          type=\"variables_set\" inline=\"false\">\n<title name=\"VAR\">longitud</title>\n<value
          name=\"VALUE\">\n<block type=\"math_arithmetic\" inline=\"true\">\n<title
          name=\"OP\">ADD</title>\n<value name=\"A\">\n<block type=\"variables_get\">\n<title
          name=\"VAR\">longitud</title>\n</block>\n</value>\n<value name=\"B\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">turnRight</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</statement>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>"
      courseF_artist_variables_challenge1_2019_authored_hint:
        courseF_artist_variables_challenge1_a: Cada línea vertical tiene una longitud
          de '10'. Cada línea horizontal debe tener una longitud de la 'longitud'.
        courseF_artist_variables_challenge1_b: Querrás aumentar el valor de la 'longitud'
          por 10 \*\* dos veces \*\* dentro del loop.
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberás girar
          a la izquierda dos veces, girar a la derecha dos veces y avanzar un total
          de cuatro veces.
        courseF_artist_variables_challenge1_d: "Este desafío utiliza un solo bucle.
          Sin las variables, un camino similar podría ser un zigzag. \n\n![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36
          PM.png>)\n\nSi tienes problemas, comienza por crear esta imagen, y luego
          trata de ver dónde puedes utilizar las variables para cambiar la longitud
          de las líneas horizontales."
        courseF_artist_variables_challenge1_e: "Aquí está la solución. \n\n<xml>\n<block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n<next>\n<block
          type=\"variables_set\" inline=\"false\">\n<title name=\"VAR\"></title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\"></title>\n10\n</block>\n</value>\n<next>\n<block
          type=\"controls_repeat_ext\" inline=\"true\">\n<value name=\"TIMES\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">18</title>\n</block>\n</value>\n<statement
          name=\"DO\">\n<block type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">turnRight</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\nde
          longitud de\n</block>\n</value>\n<next>\n<block type=\"variables_set\" inline=\"false\">\n<title
          name=\"VAR\"></title>\nAgregar de\n<value name=\"VALUE\">\n<block type=\"math_arithmetic\"
          inline=\"true\">\n<title name=\"OP\"></title>\n<value name=\"A\">\n<block
          type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\n</block>\n</value>\n<value
          name=\"B\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">izquierda</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">izquierda</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n<next>\n<block
          type=\"draw_move\" inline=\"true\">\n<title name=\"DIR\">moveForward</title>\n<value
          name=\"VALUE\">\n<block type=\"variables_get\">\n<title name=\"VAR\">longitud</title>\n</block>\n</value>\n<next>\n<block
          type=\"variables_set\" inline=\"false\">\n<title name=\"VAR\">longitud</title>\n<value
          name=\"VALUE\">\n<block type=\"math_arithmetic\" inline=\"true\">\n<title
          name=\"OP\">ADD</title>\n<value name=\"A\">\n<block type=\"variables_get\">\n<title
          name=\"VAR\">longitud</title>\n</block>\n</value>\n<value name=\"B\">\n<block
          type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n<next>\n<block
          type=\"draw_turn\" inline=\"true\">\n<title name=\"DIR\">turnRight</title>\n<value
          name=\"VALUE\">\n<block type=\"math_number\">\n<title name=\"NUM\">90</title>\n</block>\n</value>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</statement>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>"
      courseF_artist_variables_challenge1a_authored_hint:
        courseF_artist_variables_challenge1_a: 'Las variables son útiles porque las
          puedes agregar cada vez mediante un loop. '
        courseF_artist_variables_challenge1_b: Este acertijo tiene un loop que crea
          un polígono, un loop que repite el poligono las veces de "lados", y otro
          loop que hace todo otra vez luego de agregar 5 a los "lados".
        courseF_artist_variables_challenge1_c: Usar una variable para "lados" y otra
          para "longitud" hace que el código sea más limpio porque puede hacer loop
          del mismo código varias veces, en vez de crear una nueva copia para cada
          conjunto de números.
        courseF_artist_variables_challenge1_d: |-
          **Solución:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: Las variables son útiles porque puedes
          sumarles cada vez, a través de un ciclo.
        courseF_artist_variables_challenge2_c: Usando una variable para 'lados' y
          una para 'longitud' se tiene un código más limpio porque puedes hacer loop
          en el mismo código repetidas veces, vez de crear una nueva copia para cada
          conjunto de números.
        courseF_artist_variables_challenge2_d: |-
          **Solución:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018_authored_hint:
        courseF_artist_variables_challenge2_a: Las variables son útiles porque puedes
          sumarles cada vez, a través de un ciclo.
        courseF_artist_variables_challenge2_c: Usando una variable para 'lados' y
          una para 'longitud' se tiene un código más limpio porque puedes hacer loop
          en el mismo código repetidas veces, vez de crear una nueva copia para cada
          conjunto de números.
        courseF_artist_variables_challenge2_d: |-
          **Solución:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019_authored_hint:
        courseF_artist_variables_challenge2_a: Las variables son útiles porque puedes
          sumarles cada vez, a través de un ciclo.
        courseF_artist_variables_challenge2_c: Usando una variable para 'lados' y
          una para 'longitud' se tiene un código más limpio porque puedes hacer loop
          en el mismo código repetidas veces, vez de crear una nueva copia para cada
          conjunto de números.
        courseF_artist_variables_challenge2_d: |-
          **Solución:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals10_authored_hint:
        courseF_bee_conditionals10_a: Imagina que hay una nube en cada sitio. ¿Te
          ayuda esto a simplificar tu código?
        courseF_bee_conditionals10_b: Usa un bloque 'si/si no' para buscar néctar
          o miel en cada espacio.
        courseF_bee_conditionals10_c: "¿Ayudaría un loop 'mientras' para llegar al
          final de este camino?"
      courseF_bee_conditionals10_2018_authored_hint:
        courseF_bee_conditionals10_a: Imagina que hay una nube en cada sitio. ¿Te
          ayuda esto a simplificar tu código?
        courseF_bee_conditionals10_b: Usa un bloque 'si/si no' para buscar néctar
          o miel en cada espacio.
        courseF_bee_conditionals10_c: "¿Ayudaría un loop 'mientras' para llegar al
          final de este camino?"
      courseF_bee_conditionals2_authored_hint:
        courseF_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si
          quieres que tu código se ejecute en ambos casos, asegúrate de utilizar una
          afirmación  `si`.
        courseF_bee_conditionals2_b: Intentar escribir la secuencia para llegar a
          todos los espacios, luego agrega la afirmación 'si'.
      courseF_bee_conditionals2_2018_authored_hint:
        courseF_bee_conditionals2_a: Algunas veces una flor estará allí, otras no.  Si
          quieres que tu código se ejecute en ambos casos, asegúrate de utilizar una
          afirmación  `si`.
        courseF_bee_conditionals2_b: Intentar escribir la secuencia para llegar a
          todos los espacios, luego agrega la afirmación 'si'.
      courseF_bee_conditionals3_authored_hint:
        courseF_bee_conditionals3_a: Asegúrate de usar una afirmación 'si' para verificar
          cada espacio para ver sí tiene una flor o nada.
        courseF_bee_conditionals3_b: Un loop 'repetir' sera útil para que sólo tengas
          que usar un bloque 'si'.
        courseF_bee_conditionals3_c: Intenta escribir código para revisar la primera
          nube. ¿Puedes hacer loops para revisarlos todos?
      courseF_bee_conditionals3_2018_authored_hint:
        courseF_bee_conditionals3_a: Asegúrate de usar una afirmación 'si' para verificar
          cada espacio para ver sí tiene una flor o nada.
        courseF_bee_conditionals3_b: Un loop 'repetir' sera útil para que sólo tengas
          que usar un bloque 'si'.
        courseF_bee_conditionals3_c: Intenta escribir código para revisar la primera
          nube. ¿Puedes hacer loops para revisarlos todos?
      courseF_bee_conditionals4_authored_hint:
        courseD_bee_conditionals4_a: Todavía puedes tratar cada espacio como si hubiera
          una nube sobre él, aunque puedas ver todo el camino.
        courseF_bee_conditionals4_b: 'Usa una afirmación \`si'' dentro de tu loop
          para comprobar si hay néctar en cada espacio. '
        courseF_bee_conditionals4_c: Usando el bloque 'mientras haya camino adelante',
          deberías 'avanzar' y buscar una flor. 'Si hay una flor'. ¿que debería hacer
          la abeja?
      courseF_bee_conditionals4_2018_authored_hint:
        courseD_bee_conditionals4_a: Todavía puedes tratar cada espacio como si hubiera
          una nube sobre él, aunque puedas ver todo el camino.
        courseF_bee_conditionals4_b: 'Usa una afirmación \`si'' dentro de tu loop
          para comprobar si hay néctar en cada espacio. '
        courseF_bee_conditionals4_c: Usando el bloque 'mientras haya camino adelante',
          deberías 'avanzar' y buscar una flor. 'Si hay una flor'. ¿que debería hacer
          la abeja?
      courseF_bee_conditionals5_authored_hint:
        courseF_bee_conditionals5_a: Piensa en cada lado de la ruta rectangular como
          un camino en sí mismo. Configura un loop anidado con un bloque `repetir`
          en el exterior y un ciclo`cuando hay un camino por delante` en el interior.
          ¿Cuántos caminos necesita recorrer la abeja si la abeja necesita recorrer
          cada lado con una flor?
        courseF_bee_conditionals5_b: En el interior del bloque`mientras que hay un
          camino adelante` tendrás que seguir adelante y comprobar si hay una flor.
          ¿Cómo se comprueba si hay una flor? ¿Qué haces si hay una flor?
        courseF_bee_conditionals5_c: 'Hay 3 lados del rectángulo con flores, así que
          el código necesita ''repetir 3 veces''. En cada repetición, la abeja necesitará
          continuar a lo largo del camino ''mientras haya camino por delante''. '
        courseF_bee_conditionals5_d: Para continuar por el camino, la abeja deberá
          'avanzar'. Mientras está en el camino, la abeja necesita buscar una flor.
          ¿Qué debería hacer la abeja si hay una flor?
      courseF_bee_conditionals5_2018_authored_hint:
        courseF_bee_conditionals5_a: Piensa en cada lado de la ruta rectangular como
          un camino en sí mismo. Configura un loop anidado con un bloque `repetir`
          en el exterior y un ciclo`cuando hay un camino por delante` en el interior.
          ¿Cuántos caminos necesita recorrer la abeja si la abeja necesita recorrer
          cada lado con una flor?
        courseF_bee_conditionals5_b: En el interior del bloque`mientras que hay un
          camino adelante` tendrás que seguir adelante y comprobar si hay una flor.
          ¿Cómo se comprueba si hay una flor? ¿Qué haces si hay una flor?
        courseF_bee_conditionals5_c: 'Hay 3 lados del rectángulo con flores, así que
          el código necesita ''repetir 3 veces''. En cada repetición, la abeja necesitará
          continuar a lo largo del camino ''mientras haya camino por delante''. '
        courseF_bee_conditionals5_d: Para continuar por el camino, la abeja deberá
          'avanzar'. Mientras está en el camino, la abeja necesita buscar una flor.
          ¿Qué debería hacer la abeja si hay una flor?
      courseF_bee_conditionals8_authored_hint:
        courseF_bee_conditionals8_a: "\\*\\* Recuerde: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si /si no`) para resolver el desafío."
        courseF_bee_conditionals8_b: "Este desafío es engañoso, porque no puedes verificar
          cuadrados en blanco, néctar, \\* y \\* miel con sólo un único condicional.
          \n\nSólo comprueba si hay néctar y miel al final de tu camino."
        courseF_bee_conditionals8_c: "¿Qué pasa si ignoras la primera flor, luego
          usas el bloque 'mientras haya camino adelante'?"
      courseF_bee_conditionals8_2018_authored_hint:
        courseF_bee_conditionals8_a: "\\*\\* Recuerde: \\*\\* Este desafío cambia
          cada vez que se ejecuta.   \n\nQuerrás utilizar un bloque condicional  (
          `si' o 'si /si no`) para resolver el desafío."
        courseF_bee_conditionals8_b: "Este desafío es engañoso, porque no puedes verificar
          cuadrados en blanco, néctar, \\* y \\* miel con sólo un único condicional.
          \n\nSólo comprueba si hay néctar y miel al final de tu camino."
        courseF_bee_conditionals8_c: "¿Qué pasa si ignoras la primera flor, luego
          usas el bloque 'mientras haya camino adelante'?"
      courseF_bee_for1_authored_hint:
        courseF_bee_for1_a: Arrastra un bloque de numero morado en el espacio en blanco
          dentro del loop 'repetir' para decirle cuantas veces repetir.
        courseF_bee_for1_b: Necesitas dos bloques en tu loop 'repetir' para recoger
          todo el néctar.
      courseF_bee_for10_authored_hint:
        courseF_bee_for10_a: "¿Puedes encontrar un patrón entre el número de pasos
          que necesitas tomar y el numero de néctares a recolectar?"
        courseF_bee_for10_b: El primer conjunto de flores tiene un total de **14 flores**.
          Para llegar al primer conjunto, la abeja debe volar **7 cuadros** (o 14
          cuadros divididos por 2). ¿Cuántas flores hay en el siguiente conjunto y
          cuántos cuadros tendrá que viajar la abeja para llegar ahí?
        courseF_bee_for10_c: "En el desafío, el primer conjunto de flores tiene **14
          flores**, el segundo, **10**; el tercero, **6**, y el cuarto, **2**. \n\nEn
          este dibujo, ten en cuenta que hay **7** cuadrados rojos, **5** cuadrados
          naranjas, **3** cuadrados verdes y **1** bloque azul.\n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\n¿Cómo se relacionan los números?"
        courseF_bee_for10_d: Necesitas 2 repeticiones, una usara un bloque de matmáticas.
      courseF_bee_for10_2018_authored_hint:
        courseF_bee_for10_a: "¿Puedes encontrar un patrón entre el número de pasos
          que necesitas tomar y el numero de néctares a recolectar?"
        courseF_bee_for10_b: El primer conjunto de flores tiene un total de **14 flores**.
          Para llegar al primer conjunto, la abeja debe volar **7 cuadros** (o 14
          cuadros divididos por 2). ¿Cuántas flores hay en el siguiente conjunto y
          cuántos cuadros tendrá que viajar la abeja para llegar ahí?
        courseF_bee_for10_c: "En el desafío, el primer conjunto de flores tiene **14
          flores**, el segundo, **10**; el tercero, **6**, y el cuarto, **2**. \n\nEn
          este dibujo, ten en cuenta que hay **7** cuadrados rojos, **5** cuadrados
          naranjas, **3** cuadrados verdes y **1** bloque azul.\n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\n¿Cómo se relacionan los números?"
        courseF_bee_for10_d: Necesitas 2 repeticiones, una usara un bloque de matmáticas.
      courseF_bee_for10_2019_authored_hint:
        courseF_bee_for10_a: "¿Puedes encontrar un patrón entre el número de pasos
          que necesitas tomar y el numero de néctares a recolectar?"
        courseF_bee_for10_b: El primer conjunto de flores tiene un total de **14 flores**.
          Para llegar al primer conjunto, la abeja debe volar **7 cuadros** (o 14
          cuadros divididos por 2). ¿Cuántas flores hay en el siguiente conjunto y
          cuántos cuadros tendrá que viajar la abeja para llegar ahí?
        courseF_bee_for10_c: "En el desafío, el primer conjunto de flores tiene **14
          flores**, el segundo, **10**; el tercero, **6**, y el cuarto, **2**. \n\nEn
          este dibujo, ten en cuenta que hay **7** cuadrados rojos, **5** cuadrados
          naranjas, **3** cuadrados verdes y **1** bloque azul.\n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\n¿Cómo se relacionan los números?"
        courseF_bee_for10_d: Necesitas 2 repeticiones, una usara un bloque de matmáticas.
      courseF_bee_for11_authored_hint:
        courseF_bee_for11_a: |-
          ¿Cuánto menos es 12 que 15?
          ¿Cuánto menos es 9 que 12?

          ¿Ves un patrón'?
      courseF_bee_for11_2018_authored_hint:
        courseF_bee_for11_a: |-
          ¿Cuánto menos es 12 que 15?
          ¿Cuánto menos es 9 que 12?

          ¿Ves un patrón'?
      courseF_bee_for11_2019_authored_hint:
        courseF_bee_for11_a: |-
          ¿Cuánto menos es 12 que 15?
          ¿Cuánto menos es 9 que 12?

          ¿Ves un patrón'?
      courseF_bee_for1_2018_authored_hint:
        courseF_bee_for1_a: Arrastra un bloque de numero morado en el espacio en blanco
          dentro del loop 'repetir' para decirle cuantas veces repetir.
        courseF_bee_for1_b: Necesitas dos bloques en tu loop 'repetir' para recoger
          todo el néctar.
      courseF_bee_for1_2019_authored_hint:
        courseF_bee_for1_a: Arrastra un bloque de numero morado en el espacio en blanco
          dentro del loop 'repetir' para decirle cuantas veces repetir.
        courseF_bee_for1_b: Necesitas dos bloques en tu loop 'repetir' para recoger
          todo el néctar.
      courseF_bee_for2_authored_hint:
        courseF_bee_for2_a: Si estas confundido, trabaja con una flor a la vez y prueba
          continuamente.
        courseF_bee_for2_b: Recuerda avanzar entre cada loop para llegar a cada flor.
      courseF_bee_for2_2018_authored_hint:
        courseF_bee_for2_a: Si estas confundido, trabaja con una flor a la vez y prueba
          continuamente.
        courseF_bee_for2_b: Recuerda avanzar entre cada loop para llegar a cada flor.
      courseF_bee_for2_2019_authored_hint:
        courseF_bee_for2_a: Si estas confundido, trabaja con una flor a la vez y prueba
          continuamente.
        courseF_bee_for2_b: Recuerda avanzar entre cada loop para llegar a cada flor.
      courseF_bee_for3_authored_hint:
        courseF_bee_for3_a: 'Utiliza la variable ''contador'' dentro del ciclo ''repetir''
          donde se recolecta el nectar para resolver este acertijo. '
        courseF_bee_for3_b: Tu ciclo 'for' necesitará contar de 1 a 5 con un incremento
          de 1.
      courseF_bee_for4_authored_hint:
        courseF_bee_for4_a: Utiliza un ciclo 'for' que vaya de 1 a 7 con un incremento
          de 1 para resolver este desafío.
        courseF_bee_for4_b: Dentro de tu loop 'para', querrás tener un comando 'avanzar'
          y un loop para recolectar néctar.
        courseF_bee_for4_c: "¡Asegúrate de usar la variable 'contador' dentro de tu
          ciclo anidado 'repetir' para conseguir suficiente nectar!"
      courseF_bee_for4_2018_authored_hint:
        courseF_bee_for4_a: Utiliza un ciclo 'for' que vaya de 1 a 7 con un incremento
          de 1 para resolver este desafío.
        courseF_bee_for4_b: Dentro de tu loop 'para', querrás tener un comando 'avanzar'
          y un loop para recolectar néctar.
        courseF_bee_for4_c: "¡Asegúrate de usar la variable 'contador' dentro de tu
          ciclo anidado 'repetir' para conseguir suficiente nectar!"
      courseF_bee_for4_2019_authored_hint:
        courseF_bee_for4_a: Utiliza un ciclo 'for' que vaya de 1 a 7 con un incremento
          de 1 para resolver este desafío.
        courseF_bee_for4_b: Dentro de tu loop 'para', querrás tener un comando 'avanzar'
          y un loop para recolectar néctar.
        courseF_bee_for4_c: "¡Asegúrate de usar la variable 'contador' dentro de tu
          ciclo anidado 'repetir' para conseguir suficiente nectar!"
      courseF_bee_for5_authored_hint:
        courseF_bee_for5_a: Esta vez, tu bloque 'avanzar' y tu bloque 'obtener néctar'
          tendrán que estar en loops 'repetir' separados, ambos dentro del mismo loop
          'para'.
        courseF_bee_for5_b: Usa la variable 'contador' en cada loop para que la abeja
          se mueva distintas distancias entre cada flor.
        courseF_bee_for5_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_bee_for5_2018_authored_hint:
        courseF_bee_for5_a: Esta vez, tu bloque 'avanzar' y tu bloque 'obtener néctar'
          tendrán que estar en loops 'repetir' separados, ambos dentro del mismo loop
          'para'.
        courseF_bee_for5_b: Usa la variable 'contador' en cada loop para que la abeja
          se mueva distintas distancias entre cada flor.
        courseF_bee_for5_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_bee_for5_2019_authored_hint:
        courseF_bee_for5_a: Esta vez, tu bloque 'avanzar' y tu bloque 'obtener néctar'
          tendrán que estar en loops 'repetir' separados, ambos dentro del mismo loop
          'para'.
        courseF_bee_for5_b: Usa la variable 'contador' en cada loop para que la abeja
          se mueva distintas distancias entre cada flor.
        courseF_bee_for5_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_bee_for6_authored_hint:
        courseF_bee_for6_a: No te olvides de utilizar una variable 'contador' dentro
          de tu loop 'para'.
        courseF_bee_for6_b: Dentro de tu ciclo 'for', querras tener un comando 'mover
          hacia adelante' y un ciclo para recolectar nectar.
        courseF_bee_for6_c: Tu ciclo debe contar \*\* de 5 a 1 \*\*.
      courseF_bee_for6_2018_authored_hint:
        courseF_bee_for6_a: No te olvides de utilizar una variable 'contador' dentro
          de tu loop 'para'.
        courseF_bee_for6_b: Dentro de tu loop 'para', querrás tener un comando 'avanzar'
          y un loop para recolectar néctar.
        courseF_bee_for6_c: Tu ciclo debe contar \*\* de 5 a 1 \*\*.
      courseF_bee_for6_2019_authored_hint:
        courseF_bee_for6_a: No te olvides de utilizar una variable 'contador' dentro
          de tu loop 'para'.
        courseF_bee_for6_b: Dentro de tu loop 'para', querrás tener un comando 'avanzar'
          y un loop para recolectar néctar.
        courseF_bee_for6_c: Tu ciclo debe contar \*\* de 5 a 1 \*\*.
      courseF_bee_for7_authored_hint:
        courseF_bee_for7_a: Tu loop 'para' deberá contar de 1 a 7 en incrementos de
          2.
        courseF_bee_for7_b: Dentro de tu ciclo 'for', querras tener un comando 'mover
          hacia adelante' y un ciclo para recolectar nectar.
        courseF_bee_for7_c: No te olvides de utilizar una variable 'contador' dentro
          de tu loop 'repetir'.
      courseF_bee_for7_2018_authored_hint:
        courseF_bee_for7_a: Tu loop 'para' deberá contar de 1 a 7 en incrementos de
          2.
        courseF_bee_for7_b: Dentro de tu loop 'para', querrás tener un comando 'avanzar'
          y un loop para recolectar néctar.
        courseF_bee_for7_c: No te olvides de utilizar una variable 'contador' dentro
          de tu loop 'repetir'.
      courseF_bee_for7_2019_authored_hint:
        courseF_bee_for7_a: Tu loop 'para' deberá contar de 1 a 7 en incrementos de
          2.
        courseF_bee_for7_b: Dentro de tu loop 'para', querrás tener un comando 'avanzar'
          y un loop para recolectar néctar.
        courseF_bee_for7_c: No te olvides de utilizar una variable 'contador' dentro
          de tu loop 'repetir'.
      courseF_bee_for8_authored_hint:
        courseF_bee_for8_a: |-
          Si tu ciclo está contando hacia arriba, el incremento se agrega a tu variable de contador cada vez.

          ¿Qué necesitas para añadir cada número para obtener la próxima cantidad de néctar?
        courseF_bee_for8_b: En este desafío, tendrás que moverte en un patrón de escaleras
          para llegar a las flores.
        courseF_bee_for8_c: Tu bucle contará _de 3 a 15_ con algún incremento. ¿Cuál
          es?
      courseF_bee_for8_2018_authored_hint:
        courseF_bee_for8_a: |-
          Si tu ciclo está contando hacia arriba, el incremento se agrega a tu variable de contador cada vez.

          ¿Qué necesitas para añadir cada número para obtener la próxima cantidad de néctar?
        courseF_bee_for8_b: En este desafío, tendrás que moverte en un patrón de escaleras
          para llegar a las flores.
        courseF_bee_for8_c: Tu bucle contará _de 3 a 15_ con algún incremento. ¿Cuál
          es?
      courseF_bee_for8_2019_authored_hint:
        courseF_bee_for8_a: |-
          Si tu ciclo está contando hacia arriba, el incremento se agrega a tu variable de contador cada vez.

          ¿Qué necesitas para añadir cada número para obtener la próxima cantidad de néctar?
        courseF_bee_for8_b: En este desafío, tendrás que moverte en un patrón de escaleras
          para llegar a las flores.
        courseF_bee_for8_c: Tu bucle contará _de 3 a 15_ con algún incremento. ¿Cuál
          es?
      courseF_bee_for9_authored_hint:
        courseF_bee_for9_a: |-
          Intenta hacer algunos cálculos con la variable contador.

          ¿Qué tienes que hacerle al contador en cada flor para alcanzar la cantidad de néctar que necesitas recolectar?
        courseF_bee_for9_c: Parece que tendrás que girar a la abeja al inicio de cada
          repetición del loop si quieres resolver el desafío.
        courseF_bee_for9_b: "**Recuerda.** Si tu loop está contando hacia arriba,
          el incremento se añade a tu variable 'contador' cada vez."
      courseF_bee_for9_2018_authored_hint:
        courseF_bee_for9_a: |-
          Intenta hacer algunos cálculos con la variable contador.

          ¿Qué tienes que hacerle al contador en cada flor para alcanzar la cantidad de néctar que necesitas recolectar?
        courseF_bee_for9_c: Parece que tendrás que girar a la abeja al inicio de cada
          repetición del loop si quieres resolver el desafío.
        courseF_bee_for9_b: "**Recuerda.** Si tu loop está contando hacia arriba,
          el incremento se añade a tu variable 'contador' cada vez."
      courseF_bee_for9_2019_authored_hint:
        courseF_bee_for9_a: |-
          Intenta hacer algunos cálculos con la variable contador.

          ¿Qué tienes que hacerle al contador en cada flor para alcanzar la cantidad de néctar que necesitas recolectar?
        courseF_bee_for9_c: Parece que tendrás que girar a la abeja al inicio de cada
          repetición del loop si quieres resolver el desafío.
        courseF_bee_for9_b: "**Recuerda.** Si tu loop está contando hacia arriba,
          el incremento se añade a tu variable 'contador' cada vez."
      courseF_bee_for_challenge2_authored_hint:
        courseF_bee_for_challenge2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'Trata de usar dos loops "para": Uno para escalar
          y agarrar el néctar, y otro para descender y hacer miel.'
        courseF_bee_for_challenge2_c: |-
          Observa que un loop "para" necesita varios loops regulares dentro del 'contador' de repetición; las veces para hacer aumentar el patrón de escalera.

          El otro loop "para" solo necesita un loop regular para hacer un 'contador' cantidad de miel.
        courseF_bee_for_challenge2_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018_authored_hint:
        courseF_bee_for_challenge2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'Trata de usar dos loops "para": Uno para escalar
          y agarrar el néctar, y otro para descender y hacer miel.'
        courseF_bee_for_challenge2_c: |-
          Observa que un loop "para" necesita varios loops regulares dentro del 'contador' de repetición; las veces para hacer aumentar el patrón de escalera.

          El otro loop "para" solo necesita un loop regular para hacer un 'contador' cantidad de miel.
        courseF_bee_for_challenge2_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2019_authored_hint:
        courseF_bee_for_challenge2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'Trata de usar dos loops "para": Uno para escalar
          y agarrar el néctar, y otro para descender y hacer miel.'
        courseF_bee_for_challenge2_c: |-
          Observa que un loop "para" necesita varios loops regulares dentro del 'contador' de repetición; las veces para hacer aumentar el patrón de escalera.

          El otro loop "para" solo necesita un loop regular para hacer un 'contador' cantidad de miel.
        courseF_bee_for_challenge2_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge3_authored_hint:
        courseF_bee_for_challenge2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'Trata de usar dos loops "para": Uno para escalar
          y agarrar el néctar, y otro para descender y hacer miel.'
        courseF_bee_for_challenge2_c: |-
          Observa que un loop "para" necesita varios loops regulares dentro del 'contador' de repetición; las veces para hacer aumentar el patrón de escalera.

          El otro loop "para" solo necesita un loop regular para hacer un 'contador' cantidad de miel.
        courseF_bee_for_challenge2_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions2_authored_hint:
        courseF_bee_functions2_a: La función ha sido escrita por ti, pero deberás
          llamarla a cada flor.
        courseF_bee_functions2_b: Haz click en el botón azul de edición en la función
          'recolectar sólo néctar' para ver qué hace.
      courseF_bee_functions2_2018_authored_hint:
        courseF_bee_functions2_a: La función ha sido escrita por ti, pero deberás
          llamarla a cada flor.
        courseF_bee_functions2_b: Haz click en el botón azul de edición en la función
          'recolectar sólo néctar' para ver qué hace.
      courseF_bee_functions3_authored_hint:
        courseF_bee_functions3_a: 'Tu función para este desafío sólo necesita hacer
          miel, no debería tener bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3_b: Recuerda que tu función sólo debe obtener miel \*
          si \* hay un panal de miel.
        courseF_bee_functions3_c: Usa el bloque verde `sólo hacer miel` para llamar
          a tu función.
        courseF_bee_functions3_d: Mira este camino.
      courseF_bee_functions3_2018_authored_hint:
        courseF_bee_functions3_a: 'Tu función para este desafío sólo necesita hacer
          miel, no debería tener bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3_b: Recuerda que tu función sólo debe obtener miel \*
          si \* hay un panal de miel.
        courseF_bee_functions3_c: Usa el bloque verde `sólo hacer miel` para llamar
          a tu función.
        courseF_bee_functions3_d: Mira este camino.
      courseF_bee_functions3a_authored_hint:
        courseF_bee_functions3a_a: 'Tu función para este desafío sólo necesita hacer
          miel u obtener néctar, no debería tener bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3a_b: Usa un patrón de escalones para verificar las primeras
          cuatro nubes.
      courseF_bee_functions3a_2018_authored_hint:
        courseF_bee_functions3a_a: 'Tu función para este desafío sólo necesita hacer
          miel u obtener néctar, no debería tener bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3a_b: Usa un patrón de escalones para verificar las primeras
          cuatro nubes.
      courseF_bee_functions4_authored_hint:
        courseF_bee_functions4_a: Tu función debe viajar por los caminos laterales
          y devolver la abeja al camino principal. No necesitas agregar esa parte
          a tu programa principal.
        courseF_bee_functions4_b: Intenta crear el programa y usar los bloques de
          funciones como esperas que se comporte la función, luego crea la función.
      courseF_bee_functions4_2018_authored_hint:
        courseF_bee_functions4_a: Tu función debe viajar por los caminos laterales
          y devolver la abeja al camino principal. No necesitas agregar esa parte
          a tu programa principal.
        courseF_bee_functions4_b: Intenta crear el programa y usar los bloques de
          funciones como esperas que se comporte la función, luego crea la función.
      courseF_bee_functions5_authored_hint:
        courseE_bee_functions5_a: Edita la función para que resuelvas el desafío sin
          tener que cambiar el programa principal.
        courseE_bee_functions5_b: "Tu función debe hacer que la abeja: \n\n-   gire\n-
          \  avanze\n-   recoja todo el néctar\n-   dé la vuelta\n-   retroceda al
          camino principal\n-   vuelva a la dirección desde la que comenzó"
      courseF_bee_functions5a_authored_hint:
        courseF_bee_functions5a_a: |-
          Tu función debería verificar si hay un camino a la derecha, y si lo hay, recorrer los caminos laterales y regresar a la abeja al camino principal.

          No necesitas agregar esa parte a tu programa principal.
        courseF_bee_functions5a_b: Usa un loop `mientras` para viajar por todas las
          rutas principales, ya que son de diferentes longitudes.
        courseF_bee_functions5a_c: Dentro de tu loop `mientras`, asegúrate de avanzar,
          luego usa tu función para buscar una ruta.
      courseF_bee_functions5a_2018_authored_hint:
        courseF_bee_functions5a_a: |-
          Tu función debería verificar si hay un camino a la derecha, y si lo hay, recorrer los caminos laterales y regresar a la abeja al camino principal.

          No necesitas agregar esa parte a tu programa principal.
        courseF_bee_functions5a_b: Usa un loop `mientras` para viajar por todas las
          rutas principales, ya que son de diferentes longitudes.
        courseF_bee_functions5a_c: Dentro de tu loop `mientras`, asegúrate de avanzar,
          luego usa tu función para buscar una ruta.
      courseF_bee_functions6_authored_hint:
        courseF_bee_functions6_a: "Si el desafío parece difícil, intenta construir
          tu función de a poco.   \n\nAgrega algunos  bloques, luego pruébalo. Agrega
          más, luego intenta de nuevo. ¡Pronto, llegarás allí!\n\n<xml>\n  <block
          type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation/>\n    <title
          name=\"NAME\">get nectar make honey</title>\n    <statement name=\"STACK\">\n
          \   </statement>\n  </block>\n</xml>"
        courseF_bee_functions6_b: Tu función debe verificar si hay una flor o un panal,
          obtener néctar o hacer miel, luego girar.
        courseF_bee_functions6_c: Dado que estás girando dentro de tu función, sólo
          necesitas un ciclo`siempre que` para atravesar este laberinto.
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: "Si el desafío parece difícil, intenta crear tu
          función de a poco.   \n\nAgrega algunos bloques y luego pruébala. Agrega
          más y vuelve a intentarlo. ¡Pronto lograrás resultados!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
        courseF_bee_functions6_b: Tu función debe verificar si hay una flor o un panal,
          obtener néctar o hacer miel, luego girar.
        courseF_bee_functions6_c: Dado que estás girando dentro de tu función, sólo
          necesitas un ciclo`siempre que` para atravesar este laberinto.
      courseF_bee_functions7_authored_hint:
        courseF_bee_functions7_a: Puedes repasar el último desafío para ver tu función.
        courseF_bee_functions7_b: Trata de dibujar un camino a través de este laberinto
          con tu dedo. ¿Dónde tendrá que tomar la abeja una decisión?
      courseF_bee_functions7_2018_authored_hint:
        courseF_bee_functions7_a: Puedes repasar el último desafío para ver tu función.
        courseF_bee_functions7_b: Trata de dibujar un camino a través de este laberinto
          con tu dedo. ¿Dónde tendrá que tomar la abeja una decisión?
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseF_bee_functions8a_b: Recuerda construir código dentro del editor de
          funciones.
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseF_bee_functions8a_b: Recuerda construir código dentro del editor de
          funciones.
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseF_bee_functions7_b: "Recuerda construir tu código dentro del bloque
          de función verde. \n\n! \\[] (<https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif>)"
        courseF_bee_functions7_c: "¿De qué manera deberías girar si hay un panal?
          ¿Qué tal una flor? ¿Qué pasa si no hay nada?"
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseF_bee_functions7_b: "Recuerda construir tu código dentro del bloque
          de función verde. \n\n! \\[] (<https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif>)"
        courseF_bee_functions7_c: "¿De qué manera deberías girar si hay un panal?
          ¿Qué tal una flor? ¿Qué pasa si no hay nada?"
      courseF_bee_functions_challenge1_authored_hint:
        courseF_bee_functions_challenge1_a: Puedes usar las funciones en la caja de
          herramientas para ayudarlo. ¡Puedes llamar a una función dentro de la definición
          de otra función!
      courseF_bee_functions_challenge1_2018_authored_hint:
        courseF_bee_functions_challenge1_a: Puedes usar las funciones en la caja de
          herramientas para ayudarlo. ¡Puedes llamar a una función dentro de la definición
          de otra función!
      courseF_bee_functions_challenge2_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Si hay un camino a la derecha, deberías hacer lo siguiente:

          -   Obtén cualquier néctar o haz miel.
          -   Gira a la derecha hacia el camino lateral.
          -   Muévete hasta final de la ruta lateral.
          -   Dobla a la derecha.

          Si repites las acciones anteriores dos veces, estarás listo para retroceder por la ruta principal.

          \*\* ¡Solo haz clic para obtener otra sugerencia si deseas ver la solución completa! \*\*
        courseF_bee_functions_challenge2_b: |-
          \*\* Solución: \*\*

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">izquierda</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">mover y comprobar si</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM"></title>
          2
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">comprobación néctar o miel</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_2018_authored_hint:
        courseF_bee_functions_challenge2_a: |-
          Si hay un camino a la derecha, deberías hacer lo siguiente:

          -   Obtén cualquier néctar o haz miel.
          -   Gira a la derecha hacia el camino lateral.
          -   Muévete hasta final de la ruta lateral.
          -   Dobla a la derecha.

          Si repites las acciones anteriores dos veces, estarás listo para retroceder por la ruta principal.

          \*\* ¡Solo haz clic para obtener otra sugerencia si deseas ver la solución completa! \*\*
        courseF_bee_functions_challenge2_b: |-
          \*\* Solución: \*\*

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">izquierda</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">mover y comprobar si</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM"></title>
          2
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">comprobación néctar o miel</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        courseF_bee_functions8a_b: Recuerda construir código dentro del editor de
          funciones.
      courseF_bee_fwp1_authored_hint:
        courseF_bee_fwp1_a: Utiliza afirmaciones 'si' para asegurarte de que solo
          obtienes néctar de una flor.
        courseF_bee_fwp1_b: Continúa a lo largo del camino usando un bloque 'repetir'.
          Asegúrate de que usas un bloque 'mover hacia adelante' y revisa si hay una
          flor usando una declaración 'si'.
      courseF_bee_fwp1_2018_authored_hint:
        courseF_bee_fwp1_a: Utiliza afirmaciones 'si' para asegurarte de que solo
          obtienes néctar de una flor.
        courseF_bee_fwp1_b: Continúa a lo largo del camino usando un bloque 'repetir'.
          Asegúrate de que usas un bloque 'mover hacia adelante' y revisa si hay una
          flor usando una declaración 'si'.
      courseF_bee_fwp2_authored_hint:
        courseF_bee_fwp2_a: |-
          Para convertir esto en una función, sólo arrastra el código dentro del bloque de función preexistente.

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
        courseF_bee_fwp2_b: No olvides conectar el bloque 'filaDeNectar' a 'al ejecutar'
          para llamara a la función que construiste.
      courseF_bee_fwp2_2018_authored_hint:
        courseF_bee_fwp2_a: |-
          Para convertir esto en una función, sólo arrastra el código dentro del bloque de función preexistente.

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
        courseF_bee_fwp2_b: No olvides conectar el bloque 'filaDeNectar' a 'al ejecutar'
          para llamara a la función que construiste.
      courseF_bee_fwp3_authored_hint:
        courseF_bee_fwp3_a: La función se ejecuta sin importar qué dirección estés
          viendo.
        courseF_bee_fwp3_b: Hay 3 hileras de néctar, ¿qué clase de vueltas y movimientos
          necesitas hacer entre cada fila?
        courseF_bee_fwp3_c: Para resolver este desafío, necesitarás llamar a tu función
          3 veces. Entre cada llamada, debes `girar a la derecha`,`avanzar` 2 veces,
          luego `girar a la derecha` de nuevo. O bien, tienes que `girar a la izquierda`,`avanzar`
          2 veces, luego `girar a la izquierda` de nuevo.
      courseF_bee_fwp3_2018_authored_hint:
        courseF_bee_fwp3_a: La función se ejecuta sin importar qué dirección estés
          viendo.
        courseF_bee_fwp3_b: Hay 3 hileras de néctar, ¿qué clase de vueltas y movimientos
          necesitas hacer entre cada fila?
        courseF_bee_fwp3_c: Para resolver este desafío, necesitarás llamar a tu función
          3 veces. Entre cada llamada, debes `girar a la derecha`,`avanzar` 2 veces,
          luego `girar a la derecha` de nuevo. O bien, tienes que `girar a la izquierda`,`avanzar`
          2 veces, luego `girar a la izquierda` de nuevo.
      courseF_bee_fwp4_authored_hint:
        courseF_bee_fwp4_a: Necesitas añadir un parámetro y usar la variable resultante
          en tu loop.
        courseF_bee_fwp4_b: El parámetro que crees para tu función se usará en el
          ciclo de repetición para determinar cuántas veces la abeja avanzará y buscará
          néctar.
      courseF_bee_fwp4_2018_authored_hint:
        courseF_bee_fwp4_a: Necesitas añadir un parámetro y usar la variable resultante
          en tu loop.
        courseF_bee_fwp4_b: El parámetro que crees para tu función se usará en el
          ciclo de repetición para determinar cuántas veces la abeja avanzará y buscará
          néctar.
      courseF_bee_fwp5_authored_hint:
        courseF_bee_fwp5_a: Cuenta el número de espacios que necesitarás en cada tramo
          y usa esos números como parámetros en tu llamada a la función.
        courseF_bee_fwp5_a_b: Recuerda girar entre cada llamada a una función.
      courseF_bee_fwp5_2018_authored_hint:
        courseF_bee_fwp5_a: Cuenta el número de espacios que necesitarás en cada tramo
          y usa esos números como parámetros en tu llamada a la función.
        courseF_bee_fwp5_a_b: Recuerda girar entre cada llamada a una función.
      courseF_bee_fwp6_authored_hint:
        courseF_bee_fwp6_a: "¿Qué bloque incrementa una variable automáticamente que
          podrías usar como parámetro?"
        courseF_bee_fwp6_b: Intenta usar un loop 'para' para resolver este desafío.
      courseF_bee_fwp6_2018_authored_hint:
        courseF_bee_fwp6_a: "¿Qué bloque incrementa una variable automáticamente que
          podrías usar como parámetro?"
        courseF_bee_fwp6_b: Intenta usar un loop 'para' para resolver este desafío.
      courseF_bee_fwp7_authored_hint:
        courseF_bee_fwp7_a: No necesitas un segundo parámetro para esta función, sólo
          una segunda afirmación 'si'.
        courseF_bee_fwp7_b: Agrega una afirmación 'si' en tu función para que la abeja
          revise tanto panales como flores.
      courseF_bee_fwp7_2018_authored_hint:
        courseF_bee_fwp7_a: No necesitas un segundo parámetro para esta función, sólo
          una segunda afirmación 'si'.
        courseF_bee_fwp7_b: Agrega una afirmación 'si' en tu función para que la abeja
          revise tanto panales como flores.
      courseF_bee_fwp8_authored_hint:
        courseF_bee_fwp8_a: "¿Como ayudaría un loop 'para' en este desafío?"
        courseF_bee_fwp8_b: Dado que la espiral disminuye a medida que avanza, su
          loop 'para' debes contar hacia abajo.
      courseF_bee_fwp8_2018_authored_hint:
        courseF_bee_fwp8_a: "¿Como ayudaría un loop 'para' en este desafío?"
        courseF_bee_fwp8_b: Dado que la espiral disminuye a medida que avanza, su
          loop 'para' debes contar hacia abajo.
      courseF_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          El programa principal sería algo como esto:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">

          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: 'Mira cuanto maíz está disponible para cosechar
          en cada espacio. ¿Ves el patrón del contador? '
        courseF_bee_fwp_challenge1_b1: |-
          El parámetro 'longitud' puede usarse para establecer el valor máximo del ciclo 'for'.

          ¡No olvides regresar al granjero al camino principal después de cosechar!
        courseF_bee_fwp_challenge1_c: |-
          Pon un loop 'para' dentro de una función y haz que cuente de '1' a 'longitud' por '1'.
          Dentro de este loop deberías avanzar y recoger todo el maíz.

          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: Dentro del loop 'para' querrás 'avanzar', luego
          'recoger maíz' **número de veces del contador**.
        courseF_bee_fwp_challenge1_d2: Después del loop 'para' puedes sólo 'retroceder'
          **número de veces de la variable longitud**.
        courseF_bee_fwp_challenge1_e: |-
          **Aquí está la solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_fwp_challenge1_2018_authored_hint:
        courseF_bee_fwp_challenge1_a: |-
          El programa principal sería algo como esto:
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">

          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseF_bee_fwp_challenge1_b: 'Mira cuanto maíz está disponible para cosechar
          en cada espacio. ¿Ves el patrón del contador? '
        courseF_bee_fwp_challenge1_b1: |-
          El parámetro 'longitud' puede usarse para establecer el valor máximo del ciclo 'for'.

          ¡No olvides regresar al granjero al camino principal después de cosechar!
        courseF_bee_fwp_challenge1_c: |-
          Pon un loop 'para' dentro de una función y haz que cuente de '1' a 'longitud' por '1'.
          Dentro de este loop deberías avanzar y recoger todo el maíz.

          <xml>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          </statement>
          </block></xml>
        courseF_bee_fwp_challenge1_d: Dentro del loop 'para' querrás 'avanzar', luego
          'recoger maíz' **número de veces del contador**.
        courseF_bee_fwp_challenge1_d2: Después del loop 'para' puedes sólo 'retroceder'
          **número de veces de la variable longitud**.
        courseF_bee_fwp_challenge1_e: |-
          **Aquí está la solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Comienza asegurándote de que entiendes cómo _se supone_ que funciona esta función. A medida que la granjera se mueve por cada camino, sólo intentará recolectar maíz. ¿Cómo puedes hacer que busque cada una de las 3 verduras y elegir sólo la que encuentra?

          Agrega afirmaciones condicionales a la función para buscar maíz, calabazas y lechuga.
        courseF_bee_fwp_challenge2_b: |-
          ¿Se te están acabando los bloques 'avanzar'?
          Intenta usar un _segundo_ loop 'para' tu programa principal.
        courseF_bee_fwp_challenge2_c: |-
          \*\* Así debería verse tu función: \*\*

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>

          <title name="NAME">selección fila</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">izquierda</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">contador</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          longitud de
          <title name="VAR"></title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">contra</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">maíz</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">calabaza</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          lechuga de
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC"></title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">longitud</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Así debería verse tu programa principal:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_bee_fwp_challenge2_2018_authored_hint:
        courseF_bee_fwp_challenge2_a: |-
          Comienza asegurándote de que entiendes cómo _se supone_ que funciona esta función. A medida que la granjera se mueve por cada camino, sólo intentará recolectar maíz. ¿Cómo puedes hacer que busque cada una de las 3 verduras y elegir sólo la que encuentra?

          Agrega afirmaciones condicionales a la función para buscar maíz, calabazas y lechuga.
        courseF_bee_fwp_challenge2_b: |-
          ¿Se te están acabando los bloques 'avanzar'?
          Intenta usar un _segundo_ loop 'para' tu programa principal.
        courseF_bee_fwp_challenge2_c: |-
          \*\* Así debería verse tu función: \*\*

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>

          <title name="NAME">selección fila</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">izquierda</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">contador</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          longitud de
          <title name="VAR"></title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">contra</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">maíz</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">calabaza</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          lechuga de
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC"></title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">longitud</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
        courseF_bee_fwp_challenge2_d: |-
          **Así debería verse tu programa principal:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter2</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="pick row">
          <arg name="length"/>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block></xml>
      courseF_bee_variables_3_2018_authored_hint:
        courseF_beevariables_3a: |-
          Para restar uno de la variable, puedes usar este código en tu programa:
          <xml><block type="variables_set" inline="false">

          <title name="VAR">recoger</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MENOS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">recoger</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block></xml>
      courseF_bee_variables_3_2019_authored_hint:
        courseF_bee_variables_3_2019_1: |-
          Para restar uno de la variable, puedes usar este código en tu programa:
          <xml><block type="variables_set" inline="false">

          <title name="VAR">recoger</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MENOS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">recoger</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block></xml>
      courseF_bee_variables_4_2019_authored_hint:
        courseF_bee_variables_4_2019_1: En lugar de restar 1 de `recoger`, agrega
          1 cada vez. ¿Qué valor debería tener la variable al principio?
      courseF_farmer_ramp11_authored_hint:
        courseF_farmer_ramp11_a: Si tienes problemas para ver donde van los ciclos,
          intenta programarlo y buscar patrones.
        courseF_farmer_ramp11_b: ¿Cómo puedes usar un <xml><block type="controls_repeat"><title
          name="TIMES">???</title></block></xml> ciclo para recoger lechuga, en vez
          de arrastrar 5 <xml><block type="harvester_lettuce"/></xml> bloques?
        courseF_farmer_ramp11_c: No es necesario utilizar 5 loops para obtener toda
          la lechuga. En lugar de eso, arrastra tu loop repetir recoger lechuga dentro
          de otro loop (junto con el bloque <xml><block type="maze_moveForward"/></xml>
          ¡y lo tendrás!)
      courseF_farmer_ramp11_2018_authored_hint:
        courseF_farmer_ramp11_a: Si tienes problemas para ver donde van los ciclos,
          intenta programarlo y buscar patrones.
        courseF_farmer_ramp11_b: ¿Cómo puedes usar un <xml><block type="controls_repeat"><title
          name="TIMES">???</title></block></xml> ciclo para recoger lechuga, en vez
          de arrastrar 5 <xml><block type="harvester_lettuce"/></xml> bloques?
        courseF_farmer_ramp11_c: No es necesario utilizar 5 loops para obtener toda
          la lechuga. En lugar de eso, arrastra tu loop repetir recoger lechuga dentro
          de otro loop (junto con el bloque <xml><block type="maze_moveForward"/></xml>
          ¡y lo tendrás!)
      courseF_maze_ramp1_authored_hint:
        courseF_maze_ramp1_a: Si el pájaro no alcanza a llegar al cerdo, asegúrate
          que los bloques estén totalmente ensamblados y haz clic en "Ejecutar" de
          nuevo.
        courseF_maze_ramp1_b: "¡No necesitas más bloques de la caja de herramientas
          aquí!"
      courseF_maze_ramp13_authored_hint:
        courseF_maze_ramp13_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseF_maze_ramp13_a: Usa bloques repetir para ejecutar un solo bloque o
          un fragmento de código una y otra vez.
        courseF_maze_ramp13_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
        courseF_maze_ramp13_d: Una vez que hayas terminado tu ciclo, ¿qué tienes que
          hacer para mover los últimos cuadrados? Adjunta estos bloques después del
          ciclo.
      courseF_maze_ramp15_authored_hint:
        courseF_maze_ramp7_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseF_maze_ramp7_a: Usa bloques repetir para ejecutar un solo bloque o un
          fragmento de código una y otra vez.
      courseF_maze_ramp1_2018_authored_hint:
        courseF_maze_ramp1_a: Si el pájaro no alcanza a llegar al cerdo, asegúrate
          que los bloques estén totalmente ensamblados y haz clic en "Ejecutar" de
          nuevo.
        courseF_maze_ramp1_b: "¡No necesitas más bloques de la caja de herramientas
          aquí!"
      courseF_maze_ramp2_authored_hint:
        courseF_maze_ramp2_a: Para utilizar un nuevo bloque, arrástralo desde el cuadro
          de herramientas hacia afuera en el espacio de trabajo y conéctalo al programa
          que se une al bloque de<xml><block type="when_run"/>.</xml>.
        courseF_maze_ramp2_b: Asegúrate de que el bloque <xml><block type="maze_moveForward"/></xml>
          está dentro del ciclo, para que se repita.
      courseF_maze_ramp2_2018_authored_hint:
        courseF_maze_ramp2_a: Para utilizar un nuevo bloque, arrástralo desde el cuadro
          de herramientas hacia afuera en el espacio de trabajo y conéctalo al programa
          que se une al bloque de<xml><block type="when_run"/>.</xml>.
        courseF_maze_ramp2_b: Asegúrate de que el bloque <xml><block type="maze_moveForward"/></xml>
          está dentro del ciclo, para que se repita.
      courseF_maze_ramp4_authored_hint:
        courseF_maze_ramp4_a: Puedes girar a la derecha o a la izquierda desde el
          punto de vista del pájaro. Si estás mirando hacia la derecha, girar a la
          derecha te hará apuntar hacia abajo.
        courseF_maze_ramp4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar al cerdo.
        courseF_maze_ramp4_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_maze_ramp4_2018_authored_hint:
        courseF_maze_ramp4_a: Puedes girar a la derecha o a la izquierda desde el
          punto de vista del pájaro. Si estás mirando hacia la derecha, girar a la
          derecha te hará apuntar hacia abajo.
        courseF_maze_ramp4_b: Para seguir el camino, avanza y gira en un sentido,
          luego muévete de nuevo y gira en el sentido opuesto. Avanza una vez más
          para alcanzar al cerdo.
        courseF_maze_ramp4_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si aún no has
          resuelto el desafío."
      courseF_maze_ramp5_authored_hint:
        courseF_maze_ramp5_a: Intenta usar el botón "Paso" para ejecutar tu código
          línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseF_maze_ramp5_b: Hay más de una vía para llegar al cerdo.
        courseF_maze_ramp5_c: ¡Trata de usar un ciclo <xml><block type="controls_repeat"><title
          name="TIMES">3</title></block></xml> para hacer el código más corto!
      courseF_maze_ramp5_2018_authored_hint:
        courseF_maze_ramp5_a: Intenta usar el botón "Paso" para ejecutar tu código
          línea por línea. ¿Puedes averiguar lo que tienes que hacer a continuación?
        courseF_maze_ramp5_b: Hay más de una vía para llegar al cerdo.
        courseF_maze_ramp5_c: ¡Trata de usar un ciclo <xml><block type="controls_repeat"><title
          name="TIMES">3</title></block></xml> para hacer el código más corto!
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: "¡Hay dos formas de resolver este desafío!"
        courseF_maze_ramp6_b: El pájaro comienza mirando a la pared, ¡así que recuerda
          girar antes de moverte!
        courseF_maze_ramp6_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: "¡Hay dos formas de resolver este desafío!"
        courseF_maze_ramp6_b: El pájaro comienza mirando a la pared, ¡así que recuerda
          girar antes de moverte!
        courseF_maze_ramp6_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
      courseF_maze_ramp7_authored_hint:
        courseF_maze_ramp7_b: No te olvides de utilizar el botón "Paso" para ir bloque
          por bloque buscando errores.
        courseF_maze_ramp7_a: Usa bloques repetir para ejecutar un solo bloque o un
          fragmento de código una y otra vez.
        courseF_maze_ramp7_c: "¡No tengas miedo de cometer un error! Intenta agregar
          bloques y ejecutar el código para ver qué sucederá, incluso si crees que
          aún no has resuelto el desafío."
        courseF_maze_ramp7_d: Hay más de una forma de llegar al cerdo. ¿Cuál forma
          requiere el menor código?
        courseF_maze_ramp7_aa: |-
          Mira este camino...

          ! \[] (<https://images.code.org/e1d29901495eea9504c194b09efaa88e-image-1503437474226.29.32.png>)
      courseF_playlab_brokenText_authored_hint:
        courseF_playlab_variables6c_a: Debajo de la sección "Entrada", usa el bloque
          `preguntar` para obtener la entrada de los usuarios.
      courseF_playlab_variables1a_authored_hint:
        courseF_playlab_variables1a_a: Tienes que sustituir las palabras "¿Qué debo
          gritar?" en el bloque verde con "¡Gol!"
      courseF_playlab_variables1a_2018_authored_hint:
        courseF_playlab_variables1a_a: Tienes que sustituir las palabras "¿Qué debo
          gritar?" en el bloque verde con "¡Gol!"
      courseF_playlab_variables2b_authored_hint:
        courseF_playlab_variables2b_a: "¿Qué crees que dirá Kiki cuando toques `Ejecutar`?"
      courseF_playlab_variables2b_2018_authored_hint:
        courseF_playlab_variables2b_a: "¿Qué crees que dirá Kiki cuando toques `Ejecutar`?"
      courseF_playlab_variables3b_authored_hint:
        courseF_playlab_variables3b_a: Los bloques de variables ya están en el área
          de trabajo. ¡Sólo tienes que ponerlos donde pertenecen!
      courseF_playlab_variables3bEdit_authored_hint:
        courseF_playlab_variables3b_a: Los bloques de variables ya estan en el area
          de trabajo. ¡Solo tienes que ponerlos donde pertenecen!
      courseF_playlab_variables3b_josh_authored_hint:
        courseF_playlab_variables3b_a: 'Hay dos bloques con espacios vacíos: un bloque
          `actor dice` y un bloque`unirse`. ¡Agrega los bloques de variables ahí!'
      courseF_playlab_variables3b_josh_2018_authored_hint:
        courseF_playlab_variables3b_a: 'Hay dos bloques con espacios vacíos: un bloque
          `actor dice` y un bloque`unirse`. ¡Agrega los bloques de variables ahí!'
      courseF_playlab_variables4b_authored_hint:
        courseF_playlab_variables4b_a: No necesitas más bloques de la caja de herramientas
          aquí.
        courseF_playlab_variables4b_b: Coloca las dos variables 'año' y una variable
          'nombre' donde tengan más sentido en la conversación.
      courseF_playlab_variables4b_2018_authored_hint:
        courseF_playlab_variables4b_a: No necesitas más bloques de la caja de herramientas
          aquí.
        courseF_playlab_variables4b_b: Coloca las dos variables 'año' y una variable
          'nombre' donde tengan más sentido en la conversación.
      courseF_playlab_variables5c_authored_hint:
        courseF_playlab_variables5c_a: Encuentra un bloque de variables `respuesta`
          en la caja de herramientas, debajo de" Variables ".
        courseF_playlab_variables5c_b: ¡Prueba tu código! Intenta ingresar "rojo",
          y también otros colores, para ver qué pasa.
      courseF_playlab_variables5c_2018_authored_hint:
        courseF_playlab_variables5c_a: Encuentra un bloque de variables `respuesta`
          en la caja de herramientas, debajo de" Variables ".
        courseF_playlab_variables5c_b: ¡Prueba tu código! Intenta ingresar "rojo",
          y también otros colores, para ver qué pasa.
      courseF_playlab_variables6c_authored_hint:
        courseF_playlab_variables6c_a: Debajo de la sección "Entrada", usa el bloque
          `preguntar` para obtener la entrada de los usuarios.
      courseF_playlab_variables6c_2018_authored_hint:
        courseF_playlab_variables6c_a: Debajo de la sección "Entrada", usa el bloque
          `preguntar` para obtener la entrada de los usuarios.
      courseF_playlab_variables7b_authored_hint:
        courseF_playlab_variables7b_a: Haz que un gato y un perro hablen sobre sus
          comidas favoritas. Usa el bloque de pregunta para encontrar la comida favorita,
          ¡luego muestra el texto en la pantalla!
        courseF_playlab_variables7b_b: Haz que tu personaje favorito pregunte si quieres
          escuchar un chiste. Si la respuesta es sí, muestra un chiste en la pantalla.
      courseF_playlab_variables7b_2018_authored_hint:
        courseF_playlab_variables7b_a: Haz que un gato y un perro hablen sobre sus
          comidas favoritas. Usa el bloque de pregunta para encontrar la comida favorita,
          ¡luego muestra el texto en la pantalla!
        courseF_playlab_variables7b_b: Haz que tu personaje favorito pregunte si quieres
          escuchar un chiste. Si la respuesta es sí, muestra un chiste en la pantalla.
      courseF_playlab_variables7c_authored_hint:
        courseF_playlab_variables7c_a: Coloca el nuevo bloque `pregunta` antes de
          tu instrucción`si/ si no` para que puedas usarlo en otras etapas.
      courseF_playlab_variables7c_2018_authored_hint:
        courseF_playlab_variables7c_a: Coloca el nuevo bloque `pregunta` antes de
          tu instrucción`si/ si no` para que puedas usarlo en otras etapas.
      courseF_playlab_variables8c_authored_hint:
        courseF_playlab_variables8c_a: El bloque `unir` entra en un bloque`actor dice`,
          y te permite usar tus variables en oraciones más grandes.
      courseF_playlab_variables8c_2018_authored_hint:
        courseF_playlab_variables8c_a: El bloque `unir` entra en un bloque`actor dice`,
          y te permite usar tus variables en oraciones más grandes.
      courseF_playlab_variables_challenge1_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          Necesitaras bloques adicionales de la caja de herramientras para que los actores hablen.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge1_2018_authored_hint:
        courseF_playlab_variables_challenge1_a: |-
          Necesitaras bloques adicionales de la caja de herramientras para que los actores hablen.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge2_a: Suma y resta puntos a la variable
          `Puntuación` cuando los sprites colisionen.
        courseF_playlab_variables_challenge2_b: Puedes cambiar el parámetro de cuán
          lejos se mueve tu sprite cada vez que una de las flechas es presionada.
        courseF_playlab_variables_challenge2_c: |-
          **Solución:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge2_2018_authored_hint:
        courseF_playlab_variables_challenge2_a: Suma y resta puntos a la variable
          `Puntuación` cuando los sprites colisionen.
        courseF_playlab_variables_challenge2_b: Puedes cambiar el parámetro de cuán
          lejos se mueve tu sprite cada vez que una de las flechas es presionada.
        courseF_playlab_variables_challenge2_c: |-
          **Solución:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge3_authored_hint:
        courseF_playlab_variables_challenge3_a: |-
          El actor sabe qué decir porque revisa el valor actual de la variable ´fortuna´.

          <xml><block type="variables_set" inline="false">

          <title name="VAR">fortune</title>
          <value name="VALUE">
          <block type="text" movable="false">
          <title name="TEXT">Concentrate and ask again!</title>
          </block>
          </value>
          </block></xml>
        courseF_playlab_variables_challenge3_b: |-
          Pareciera que el juego empieza de nuevo si llamas a la función 'haz una pregunta' después de que el actor dice la fortuna.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="variables_get">
          <title name="VAR">fortune</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="Ask a question"/>
          </block></next></block></xml>
        courseF_playlab_variables_challenge3_c: |-
          Tendrás que agregar más declaraciones condicionales para dar a los actores más cosas que decir.

          <xml><block type="studio_ifActorHasEmotionParams" inline="true">
                      <title name="EMOTION">2</title>
                      <value name="SPRITE">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="variables_set" inline="false">
                          <title name="VAR">fortune</title>
                          <value name="VALUE">
                            <block type="text" movable="false">
                              <title name="TEXT">???</title>
                            </block>
                          </value>
                        </block>
                        </statement></block></xml>

          No olvides cambiar los humores que mostrarán los actores dentro del ciclo ´repetir para siempre´. ¡También puedes determinar los humores al azar!
        courseF_playlab_variables_challenge3_d: Una vez que entiendas todo el código
          que se refiere al Actor 1, puedes tratar de volver a escribir el mismo código,
          pero esta vez para el Actor 2. ¡No te olvides de cambiar las instrucciones
          dentro del bloque de 'Mostrar pantalla de título' para que tengan sentido!
        courseF_playlab_variables_challenge3_e: |-
          Cuando todo esté terminado, deberias poder hacer clic en cualquier actor y obtener hasta 8 mensajes diferentes. ¿Es posible expandirlo aún más?

          ¡Haz que un amigo pruebe tu apliación cuando termines!
      coursea_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: Si el pájaro no alcanza a llegar al cerdo, asegúrate
          que los bloques estén totalmente ensamblados y haz clic en "Ejecutar" de
          nuevo.
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! ¡Prueba
          algo y si no funciona, prueba con algo más!"
      coursea_maze_ramp1_2019_authored_hint:
        courseC_maze_programming1_a: Si el pájaro no alcanza a llegar al cerdo, asegúrate
          que los bloques estén totalmente ensamblados y haz clic en "Ejecutar" de
          nuevo.
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! ¡Prueba
          algo y si no funciona, prueba con algo más!"
      coursef_maze_ramp3_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nPara
          eliminar un bloque en el medio de tu código, arrastra todos los bloques
          debajo de él hacia la derecha y déjalos en el espacio de trabajo por un
          tiempo. \n\nHaz clic en el bloque que deseas eliminar y arrástralo nuevamente
          a la caja de herramientas. \n\nFinalmente, vuelve a poner los otros bloques
          en su lugar."
        courseF_maze_ramp3_b: Use el botón de paso para recorrer el programa línea
          por línea. ¿Dónde hay un error?
      coursef_maze_ramp3_2018_authored_hint:
        courseF_maze_ramp3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nPara
          eliminar un bloque en el medio de tu código, arrastra todos los bloques
          debajo de él hacia la derecha y déjalos en el espacio de trabajo por un
          tiempo. \n\nHaz clic en el bloque que deseas eliminar y arrástralo nuevamente
          a la caja de herramientas. \n\nFinalmente, vuelve a poner los otros bloques
          en su lugar."
        courseF_maze_ramp3_b: Use el botón de paso para recorrer el programa línea
          por línea. ¿Dónde hay un error?
      drawings!_authored_hint:
        triangle_geometry_hint: 'Recuerda: ¡Un triángulo equilátero tiene tres lados,
          con un giro de 60 grados entre cada uno de ellos!'
        repeat_pointer: Debes dibujar un lado y dar tres giros...¿Que bloque puedes
          usar para repetir la misma instrucción varias veces?
        repeat_bottom_out: "¡Usa un bloque `repetir 3 veces`!"
      farmer-test-lb_authored_hint:
        farmer_test_lb_a: "¿Cómo puedes hacer que el pájaro llegue hasta el cerdo?"
        hint_2: Señalando 123
      grade1_adventurer_loops10_authored_hint:
        grade1_adventurer_loops10_a: Necesitarás tres bucles `repetir` para resolver
          este desafío.
      grade1_adventurer_loops2_authored_hint:
        grade1_adventurer_loops2_a: Intenta usar un bloque de repetición para recolectar
          tu oro.
      grade1_adventurer_loops3_authored_hint:
        grade1_adventurer_loops3_a: "¿Algo no está bien? Prueba usando el botón paso
          para descubrir dónde está el problema."
      grade1_adventurer_loops4_authored_hint:
        grade1_adventurer_loops4_a: Intenta usar más de un bucle para completar el
          trabajo.
      grade1_adventurer_loops5_authored_hint:
        grade1_adventurer_loops5_a: ¿No puedes descifrar dónde las cosas empiezan
          a fallar? Usa el botón "Paso" para ejecutar tu programa un bloque a la vez.
      grade1_adventurer_loops6_authored_hint:
        grade1_adventurer_loops6_a: Si tienes dificultades con este desafío, intenta
          dibujarlo en un papel para ayudarte a resolverlo.
      grade1_adventurer_loops7_challenge_authored_hint:
        grade1_adventurer_loops7_challenge_a: 'Si no puedes averiguar dónde colocar
          los bucles de repetición, prográmalo paso a paso y busca un patrón. '
        grade1_adventurer_loops7_challenge_b: "¿El código parece un poco largo? Puedes
          hacerlo mucho más corto moviendo dos de tus bucles `repetir` dentro de otro
          bucle."
      grade1_adventurer_loops9_authored_hint:
        grade1_adventurer_loops9_a: "¿Esto parece demasiado difícil? Divídelo en 4
          pequeños problemas para que sea más fácil.  "
      grade1_artist_loops1_authored_hint:
        grade1_artist_loops1_a: Si deseas que el loop se repita más de 4 veces, puedes
          cambiar el número en la parte superior del bloque.
      grade1_artist_loops2_authored_hint:
        grade1_artist_loops2_a: ¡Recuerda usar un loop "repetir" para un mejor código!
      grade1_artist_loops4_authored_hint:
        grade1_artist_loops4_a: Arrastre un loop de "repetición", luego coloque los
          otros bloques dentro de él. ¿Cuántas veces necesita repetir?
      grade1_artist_loops6_authored_hint:
        grade1_artist_loops6_a: "¡Este desafío utiliza CUATRO loops, uno tras otro!"
        grade1_artist_loops6_b: Observa que cada bucle hace un patrón de escalera
          que va en una dirección diferente. ! \[] (<https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif>)
        grade1_artist_loops6_c: |-
          Los loops deberían hacer esto:
          Loo 1
          \-Derecha
          \-Abajo

          Loop 2
          \-Derecha
          \-Arriba

          Loop 3:
          \-Izquierda
          \-Arriba

          \-Loop 4:
          \-Izquierda
          \-Abajo
      grade1_artist_loops7a_authored_hint:
        artistLoopsK9_a: "¡Este desafío utiliza CUATRO loops, uno tras otro!"
        artistLoopsK9_b: Observa que cada bucle hace un patrón de escalera que va
          en una dirección diferente. ! \[] (<https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif>)
        artistLoopsK9_c: |-
          Los loops deberían hacer esto:
          Loo 1
          \-Derecha
          \-Abajo

          Loop 2
          \-Derecha
          \-Arriba

          Loop 3:
          \-Izquierda
          \-Arriba

          \-Loop 4:
          \-Izquierda
          \-Abajo
      grade1_artist_loops7b_authored_hint:
        grade1_artist_loops7b_a: "¿Cuántas veces debes repetir el patrón para hacer
          la escalera?"
      grade1_maze_sequence1_authored_hint:
        grade1_maze_sequence1_a: A este programa le falta un bloque. ¿Puedes averiguar
          cuál?
      grade1_maze_sequence10_authored_hint:
        grade1_maze_sequence10_a: Si tienes problemas, primero intenta anotar los
          pasos en una hoja de papel.
      grade1_maze_sequence2_authored_hint:
        grade1_maze_sequence2_a: Uno de los bloques está moviendo al pájaro en la
          dirección incorrecta. ¿Puedes averiguar cuál y reemplazarlo con el bloque
          correcto?
      grade1_maze_sequence3_authored_hint:
        grade1_maze_sequence3_a: Intenta agregar una instrucción a la vez hasta que
          llegue al cerdo.
      grade1_maze_sequence5_authored_hint:
        K2.0_sequence_5: Tu código final debe tener tres bloques de movimiento.
      grade1_maze_sequence6_authored_hint:
        K2.0_sequence_6_a: Hay 1 bloque que debes agregar para mover el pájaro al
          cerdo.
      grade1_maze_sequence7_authored_hint:
        grade1_maze_sequence7a: Si estás atascado/a, intenta agregar un bloque a la
          vez hasta que resuelvas el desafío.
      grade1_maze_sequence8_authored_hint:
        grade1_maze_sequence8_a: "¿Atascado? Intenta trazar el camino del pájaro con
          tu dedo."
        grade1_maze_sequence8_b: "¡Los bloques adicionales deben agregarse antes del
          último! \\[] (Https\\://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51
          PM.png)"
      grade1_maze_sequence9_authored_hint:
        grade1_maze_sequence9_a: Si tienes problemas, primero intenta anotar los pasos
          en una hoja de papel.
      grade1_maze_sequenceA_authored_hint:
        grade1_maze_sequence10_a: Si tienes problemas, primero intenta anotar los
          pasos en una hoja de papel.
      grade1_maze_sequenceB_authored_hint:
        grade1_maze_sequenceB_a: Si tienes problemas, primero intenta anotar los pasos
          en una hoja de papel.
      grade1_maze_sequenceC_authored_hint:
        grade1_maze_sequenceC_a: Si tienes problemas, primero intenta anotar los pasos
          en una hoja de papel.
      grade2_CaringForNewPet_0_authored_hint:
        grade2_CaringForNewPet_0: Si el pájaro no está llegando al cerdo, asegurate
          de que los bloques están totalmente juntos, a continuación, y haz clic en
          "Ejecutar" de nuevo.
      grade2_CaringForNewPet_1_authored_hint:
        2-3_Maze_1_a: Para usar un bloque 'avanzar', arrástralo desde el área de la
          barra de herramientas al espacio de trabajo y conéctalo al bloque`al ejecutar`.
      grade2_CaringForNewPet_2courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: "![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)\n\nPara
          eliminar un bloque en el medio de tu código, arrastra todos los bloques
          debajo de él hacia la derecha y déjalos en el espacio de trabajo por un
          tiempo. \n\nHaz clic en el bloque que deseas eliminar y arrástralo nuevamente
          a la caja de herramientas. \n\nFinalmente, vuelve a poner los otros bloques
          en su lugar."
      grade2_CaringForNewPet_3_authored_hint:
        hint1: Puedes girar a la derecha o a la izquierda desde el punto de vista
          del pájaro. Si estás mirando hacia la derecha, girar a la derecha te hará
          apuntar hacia abajo.
        hint3: Para seguir el camino, avanza y gira en un sentido, luego muévete de
          nuevo y gira en el sentido opuesto. Avanza una vez más para alcanzar al
          cerdo.
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: "¡Hay dos formas de resolver este desafío!"
      grade2_CaringForNewPet_7D_authored_hint:
        grade2_CaringForNewPet_7D_a: No te olvides de utilizar el botón "Paso" para
          ir bloque por bloque buscando errores.
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: Si utilizas un bloque que me ayude a "avanzar 100 pixeles".
          Dibujaré una línea automáticamente.
        2-3_Artist_1_new_b: ¿Tienes problemas para girar en la esquina? Utiliza el
          bloque "girar a la derecha 90 grados".
      grade2_MakeDogTag_3_authored_hint:
        2-3_Artist_4_a: Para terminar el cohete, ¡simplemente dibuja el triángulo
          en la parte superior!
      grade2_MakeDogTag_5_authored_hint:
        grade2_MakeDogTag_5a: El artista ya está enfrentando la forma correcta de
          dibujar su primera línea.
        grade2_MakeDogTag_5b: Este diamante es realmente solo un cuadrado que está
          parado en su esquina.
        grade2_MakeDogTag_5c: Como este diamante también es cuadrado, asegúrate de
          girar 90 grados en las esquinas.
      grade2_MakeDogTag_6_authored_hint:
        grade2_MakeDogTag_6a: Cada ángulo es 45 ó 90 grados.
        grade2_MakeDogTag_6b: "¿Funciona en el primer paso?  \n¿Qué tal el segundo?
          \ \n¿Dónde va mal?"
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_b: Tu nuevo giro deberá ir al **final** del código
          dentro del loop.
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          ¿Cuántas veces se repitió mi forma?

          ¿Cuántas veces se _debería_ repetir la forma?

          ¿Dónde puedes modificar eso en el programa?
      grade2_PuppyLoops_3_authored_hint:
        hint1: Este rompecabezas es muy similar al último.
        hint2: Use el bloque "repetir 5 veces" para crear el loop.
      grade2_PuppyLoops_5_authored_hint:
        hint1: La mejor solución usa dos comandos "avanzar" y un loop.
      grade2_PuppyLoops_6_authored_hint:
        2-3_Maze_16_a: Si el patrón es difícil de ver, intenta codificar todo primero
          e identifica qué es lo que se repite una y otra vez antes de colocar los
          loops.
        2-3_Maze_16_b: |-
          Para poner muchos bloques en un "repeat" loop, solamente arrastra un loop hacia el espacio de trabajo y luego arrastra todos los bloques desde el programa de inicio dentro de él.

          Conecta todo al bloque "when run" y estarás listo!
      grade2_PuppyLoops_7_authored_hint:
        2-3_Maze_Loops_17_a: Si el patrón es difícil de ver, intenta codificar todo
          primero e identifica qué es lo que se repite una y otra vez antes de colocar
          los loops.
        2-3_Maze_Loops_17_b: ¿Se borró el código de inicio? ¡Has clic en "start over"
          para volver a empezar!
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: 'Pista: Cada bigote tiene 75 pixeles de largo.'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: "¿Qué pasa si haces que el artista se mueva o salte
          hacia atrás después de que dibuje la primera línea?"
      grade2_collector_2_authored_hint:
        hint1: Puedes utilizar el bloque 'avanzar' o usar el bloque 'repita 4 veces'
          para hacer el programa más corto.
      grade2_playlab_project_6_authored_hint:
        idea1: "-   ¿Necesitas una idea? \\* \n    **¿Quién está ahí?** Haz que los
          personajes aparezcan con imágenes aleatorias , para que nadie sepa quién
          aparece a continuación. \n\n![](<https: // images .code.org / a56e03479801995d93ad5a4e4384a79e-
          image -1475340154498.gif>)"
        idea2: "-   ¿Necesitas una idea?\\* \n    \\*\\* Ir a una aventura\\*\\* -
          Cambia el fondo, luego haz que los personajes hablen de dónde están ahora.
          \n\n![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)"
        idea3: "_¿Necesitas una idea?_ \n\\*\\* Pinball\\*\\* - Haz que un personaje
          se mueva con las flechas (usa los bloques 'flecha cuando sube' y 'flecha
          cuando baja'), luego reproduce sonido cuando choque con otro personaje en
          la pantalla."
      grade2_puppy_loops2_authored_hint:
        hint1: Puede resolver este rompecabezas con tres bloques, incluyendo 'cuando
          ejecute'.
        hint2: Intente poner el bloque "avanzar" dentro del bloque "repetir" para
          crear un loop.
        hint3: Tendrá que repetir el comando 'avanzar' 5 veces para resolver este
          rompecabezas.
      grade2_puppy_loops3_authored_hint:
        hint1: Este rompecabezas es muy similar al último.
        hint2: Use el bloque "repetir 5 veces" para crear el loop.
      grade2_puppy_loops4_authored_hint:
        hint1: No todos los bloques de comando deben repetirse.
        hint2: Use dos bloques de repetición establecidos en diferentes números.
        hint3: '"Gire a la derecha" una vez entre los dos loops.'
      grade2_puppy_loops5_authored_hint:
        hint1: La mejor solución usa dos comandos "avanzar" y un loop.
      grade2_puppy_loops6_authored_hint:
        2-3_Maze_16_a: Si el patrón es difícil de ver, intenta codificar todo primero
          e identifica qué es lo que se repite una y otra vez antes de colocar los
          loops.
        2-3_Maze_16_b: |-
          Para poner muchos bloques en un "repeat" loop, solamente arrastra un loop hacia el espacio de trabajo y luego arrastra todos los bloques desde el programa de inicio dentro de él.

          Conecta todo al bloque "when run" y estarás listo!
      grade2_puppy_loops7_authored_hint:
        2-3_Maze_Loops_17_a: Si el patrón es difícil de ver, intenta codificar todo
          primero e identifica qué es lo que se repite una y otra vez antes de colocar
          los loops.
      grade3_ConditionalsElse_4_authored_hint:
        remember_quantum: "\\*\\* Recuerde: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /si
          no`) para resolver el desafío."
      grade3_ConditionalsElse_5_authored_hint:
        remember_quantum: "\\*\\* Recuerde: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /si
          no`) para resolver el desafío."
      grade3_ConditionalsElse_TeacherIDo_authored_hint:
        remember_quantum: "\\*\\* Recuerde: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /si
          no`) para resolver el desafío."
      grade3_Conditionals_10 BAD_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Intente tratar este rompecabezas como un rectángulo
          largo donde la abeja necesita avanzar, luego gire a la izquierda varias
          veces para completar el camino.
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: "¿Tienes problema en resolver cómo bajar los bloques?
          ¡Intenta tratar a la flor roja de la misma manera que la flor morada!"
        2-3_Bee_Conditionals_14_b: Si la flor roja fuese morada, podrías imaginar
          cómo usar un extra "repeat" loop para acortar el código?
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Recuerda: las flores moradas solo tienen 0 o 1
          de néctar, y pueden cambiar cada vez que ejecutes el programa.'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: El código se acortará si usas un loop cada vez que
          avanzas, otro loop para juntar néctar, y otro para hacer miel.
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Recuerda: las flores de color morado cambian entre
          0 y 1 néctar al ejecutar tu programa!'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Recuerda: las flores de color morado cambian entre
          0 y 1 néctar al ejecutar tu programa!'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: Una vez que encuentres y corrijas el bloque incorrecto,
          ¿ves algún patrón que se pueda hacer más simple usando un loop 'repetir'?
      grade3_Debugging_10_authored_hint:
        grade3_Debugging_10_a: Comienza mirando sólo el primer loop. ¿Qué hace? ¿Qué
          se supone que haga? ¿Qué te dice eso?
        grade3_Debugging_10_b: Una vez que tengas el primer loop como lo deseas, ¿Qué
          queda en tu código?
        grade3_Debugging_10_c: |-
          Intente envolver el ciclo sobrante alrededor del resto de su código completo. ¿funciona ahora?

          Si no, ¿qué sigue andando mal?
      grade3_Debugging_11_authored_hint:
        grade3_Debugging_11_a: "Intenta ejecutar el código con el botón \"Paso\".
          \n\n¿Todo está bien en el primer paso? \n\n¿Qué tal el segundo? \n\n¿Dónde
          fallan las cosas?"
        grade3_Debugging_11_b: Parece que todos los pasos correctos están aquí, solo
          necesita más de ellos. ¿Cómo puedes repetir las acciones `get néctar` y`make
          honey` varias veces?
      grade3_Debugging_2_authored_hint:
        grade3_Debugging_2_a: "Usa el botón \"Paso\" para ver si todo está bien en
          el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        grade3_Debugging_2_b: "¿Ha observado algunos patrones que podrían ser hechos
          más simple usando un ciclo de repetición?"
      grade3_Debugging_3_authored_hint:
        grade3_Debugging_3_a: "Usa el botón \"Paso\" para ver si todo está bien en
          el primer paso. \n\n¿Qué tal el segundo? \n\n¿Dónde falla?"
        grade3_Debugging_3_b: "¿Ves un patrón? Intenta usar loops anidados para resolver
          este desafío."
      grade3_Debugging_4_authored_hint:
        grade3_Debugging_4_a: "¿Hay algún lugar donde la abeja haga algo que no tiene
          sentido? ¿Qué pasa cuando cambias esos bloques?"
        grade3_Debugging_4_b: Intenta simplificar el código utilizando loops anidados.
      grade3_Debugging_8_authored_hint:
        grade3_Debugging_8_a: "Intenta utilizar el proceso de depuración varias veces
          seguidas. \n\n¿Qué causa el primer problema? \n\nUna vez que se resuelve
          ese problema, ¿qué sale mal?"
        grade3_Debugging_8_b: "Si tienes dificultades para descubrir cómo hacer el
          patrón de escalón, intenta trazarlo con el dedo y decir los comandos en
          voz alta. \n\n¡No olvides señalar la dirección de los giros!"
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: "¿Hay algún lugar donde la abeja haga algo que no tiene
          sentido? ¿Qué pasa cuando cambias ese bloque?"
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Si no puedes detectar los bloques para colocarlos en "repeat"
          de inmediato, comienza a codificar cada movimiento y busca un patrón.
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Si no puedes decir qué debería ir dentro del loop "repeat",
          intenta arrastrar los bloques uno por uno y trata de encontrar un patrón.
        2-3_Bee_Loops_6_b: Deberían haber 6 bloques dentro del loop "repeat" una vez
          que hayas finalizado.
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Vas a necesitar dos "repeat" loops diferentes, uno después
          del otro.
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_7_b: 'Si no puedes imaginarte el loop desde el principio, intenta
          codificarlo y luego busca un patrón.  '
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_4A_b: La última parte del programa se puede terminar escribiendo
          el código al final del programa fuera de su loop.
        2-3_Bee_Loops_4A_c: Si aún no puedes detectar los loop, intenta codificar
          primero, luego identifica lo que puedes combinar en un "repeat" loop.
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Deberías finalizar con cuatro bloques dentro de tu loop.
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu loop.
      grade3_RunningFarm_1_authored_hint:
        grade3_RunningFarm_1_a: Necesitarás buscar maíz 5 veces, usando un loop repetir.
        grade3_RunningFarm_1_b: Asegúrate de usar un bloque `si en el maíz` o ¡podrías
          intentar elegir algo que no esté allí!
      grade3_RunningFarm_2_authored_hint:
        grade3_RunningFarm_2_a: 'La mejor manera de hacer esto es anidar las afirmaciones
          ''si'' ubicando una dentro de la otra.  '
        grade3_RunningFarm_2_b: Para este desafío, debes tener dos afirmaciones`si/si
          no` y una afirmación `si` simple.".
      grade3_RunningFarm_3_authored_hint:
        grade3_RunningFarm_3_a: |-
          Para obtener todos los elementos, intenta anidar afirmaciones ' if ' de profundidad tres.

          Esto significa que debe poner una afirmación `si ' dentro de otra, a continuación, poner una tercera afirmación`si ' dentro de la segunda.
        grade3_RunningFarm_3_b: Para este desafío, debes tener dos afirmaciones`si/si
          no` y una afirmación `si` simple.
      grade3_RunningFarm_4_authored_hint:
        grade3_RunningFarm_4_a: "Nadie sabe cuántas lechugas crecerán de cada brote.
          \n\nUtilizar un loop 'mientras hay lechuga' para seguir recogiendo hasta
          que cada pieza haya sido recolectada."
      grade3_RunningFarm_6_authored_hint:
        grade3_RunningFarm_6_a: Utilizar un ciclo «mientras camino por delante» para
          mover al agricultor hacia abajo en cada parte de la espiral.
        grade3_RunningFarm_6_b: Sólo necesita el control del maíz durante la mayor
          parte de la cosecha. Sólo debes elegir una calabaza al final de su programa.
      grade3_RunningFarm_7_authored_hint:
        grade3_RunningFarm_7_a: "Ten en cuenta que el camino más fácil para llegar
          a todos los cultivos sigue siendo una espiral. \n\n!\\[] (<https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png>)"
      grade3_bee_conditionals_new2a_authored_hint:
        grade3_bee_conditionals_new2a_a: Todavía puedes tratar cada espacio como si
          hubiera una nube sobre él, aunque puedas ver todo el camino.
      grade3_bee_conditionals_quantum1_authored_hint:
        grade3_bee_conditionals_quantum1_a: Usted tendrá que utilizar un bloque `si`
          para comprobar si hay una flor debajo de la nube antes de tratar de obtener
          el néctar.
      grade3_bee_conditionals_quantum2_authored_hint:
        grade3_bee_conditionals_quantum2_a: Algunas veces una flor estará allí, otras
          no.  Si quieres que tu código se ejecute en ambos casos, asegúrate de utilizar
          una afirmación  `si`.
      grade3_bee_conditionals_quantum3_authored_hint:
        grade3_bee_conditionals_quantum3: Asegúrate de utilizar una afirmación \`si'
          para comprobar si hay panales debajo de cada nube.
      grade3_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "\\*\\* Recuerda: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /
          si no`) para resolver el desafío."
      grade3_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "\\*\\* Recuerde: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /si
          no`) para resolver el desafío."
      grade3_maze_loops2_authored_hint:
        grade3_maze_loops2_a: |-
          Intenta utilizar este camino a través del laberinto.

          ![](https://images.code.org/6a8b4b97a8eef813d8a827b0b7b2d36b-image-1480446509692.05.22.png)
        grade3_maze_loops2_b: Si el patrón es difícil de ver, intenta codificar todo
          primero e identifica qué es lo que se repite una y otra vez antes de colocar
          los loops.
        grade3_maze_loops2_c: Intenta usar un loop 'repetir' dentro de otro para reducir
          la cantidad de código que necesitas.
      grade3_maze_loops2a_authored_hint:
        grade3_maze_loops2a_a: Para resolver este desafío, deberás "anidar" un loop
          'repetir' dentro de otro.
      grade3_maze_loops3_authored_hint:
        2-3_Maze_Loops_19_a: Si estas atorado, intenta escribir el código sin loops
          primero y busca patrones.
        2-3_Maze_Loops_19_b: Anidar loops 'repetir' puede ayudar a disminuir la cantidad
          de bloques utilizados.
        2-3_Maze_Loops_19_c: Tomará dos pares de loops 'repetir' anidados para resolver
          este desafío.
      grade3_maze_loops4_authored_hint:
        2-3_Maze_Loops_20_a: Busca un patrón de escalera en este laberinto para encontrar
          dónde puede usarse un loop anidado.
      grade3_maze_loops5_authored_hint:
        2-3_Maze_Loops_21_a: Si tienes problemas para encontrar el patrón de escalera,
          intenta cubrir los caminos bloqueados con tu dedo.
      grade3_robotFarmer_ConditionalsIntro_5_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_5a: Trata de anidar un loop `mientras`
          en el interior de un loop 'repetir'.
      grade3_robotFarmer_ConditionalsIntro_7_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_7_a: Asegúrate de que estés utilizando
          el loop 'mientras' y descifra cuántas veces lo necesitas para llenar cada
          agujero.
        grade3_robotFarmer_ConditionalsIntro_7_b: Observa que la granjera necesita
          avanzar y descender varias veces en un patrón de escalera.
      grade3_robotFarmer_ConditionalsIntro_8_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_8_a: El bloque `mientras camino delante`
          te permite seguir, incluso si no sabes cuántos cuadrados hay en una ruta.
      grade3_robotFarmer_ConditionalsIntro_9_authored_hint:
        grade3_robotFarmer_ConditionalsIntro_9_a: Vas a tener que utilizar más de
          un loop `mientras`.
        grade3_robotFarmer_ConditionalsIntro_9_b: Cada agujero está al final de un
          camino, usa 'mientras exista camino por delante' antes de usar 'mientras
          exista un agujero".
        grade3_robotFarmer_ConditionalsIntro_9_c: Fíjate que necesitas repetir el
          código 'mientras exista camino por delante', 'mientras exista un agujero'
          seis veces.
      grade4_arist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este diseño hará un loop 10 veces sobre 360 grados.

          **360 / 10 = ?**
      grade4_arist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Estarás haciendo 6 loops en esta figura por sobre los 360 grados.

          **360 / 6 = ?**
      grade4_arist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: "No olvides girar luego de tu loop interno.\n\nEstarás
          haciendo un loop de 6 triángulos de 360 grados. \n\n**360 / 6 = ?**"
      grade4_arist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "\\*\\* 360/36 =? \\*\\*"
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: Los cuadrados tienen 100 pixeles por lado cada uno,
          eso significa que tendrás que moverte hacia adelante 175 pixeles antes de
          dibujar tu segundo cuadrado.
        2-3_Artist_Functions_1_b: Está correcto dibujar líneas superpuestas para hacer
          tus anteojos.
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          El programa debe:

          -   Usar la función
          -   Avanzar 100 + 75 pixeles
          -   Usar la función
      grade4_artist_functions3b_authored_hint:
        grade4_artist_functions2a_a: Para evitar la necesidad de bloques múltiples
          'avanzar', cree una función de 'dibujar triángulo' y llamar varias veces.
      grade4_artist_functionsChallenge0_authored_hint:
        grade4_artist_functionsChallenge0_a: Comienza haciendo una función para un
          cuadrado, luego intenta hacer una función para una línea de cuadrados. ¿Cómo
          usarías la función `dibujar línea de cuadrados` para hacer esta imagen?
        grade4_artist_functionsChallenge0_b: Después de su primera línea de cuadrados,
          debe mover al artista hacia abajo y hacia atrás antes de comenzar su segunda
          línea de cuadrados.
        grade4_artist_functionsChallenge0_c: Debe mover al artista hacia atrás un
          número de píxeles diferente para las líneas pares que para las impares.
      grade4_artist_functions_challenge_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tiene lados de 40 pixeles.
        Course_4_SCF_1_b: Hay un salto de 120 píxeles entre cada hexágono en cada
          línea horizontal.
        Course_4_SCF_1_c: |-
          Antes de dibujar la segunda fila de hexágonos, debe girar a la derecha 60 grados y avanzar 40 píxeles.

          Una vez que estás en la ubicación vertical correcta, debes volver a girar a tu artista y retroceder 320 píxeles hacia atrás.
        Course_4_SCF_1_d: 'Antes de dibujar la tercera fila de hexágonos, debes girar
          a la derecha 60 grados y avanzar 40 píxeles. Una vez que estás en la ubicación
          vertical correcta, debes volver a girar en tu artista y retroceder 440 píxeles
          (120 píxeles más que tu función de desplazamiento ''hacia abajo / adelante''). '
      grade4_artist_functions_challenge2_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tiene lados de 40 pixeles.
        Course_4_SCF_1_b: Hay un salto de 120 píxeles entre cada hexágono en cada
          línea horizontal.
        Course_4_SCF_1_c: |-
          Antes de dibujar la segunda fila de hexágonos, debe girar a la derecha 60 grados y avanzar 40 píxeles.

          Una vez que estás en la ubicación vertical correcta, debes volver a girar a tu artista y retroceder 320 píxeles hacia atrás.
        Course_4_SCF_1_d: 'Antes de dibujar la tercera fila de hexágonos, debes girar
          a la derecha 60 grados y avanzar 40 píxeles. Una vez que estás en la ubicación
          vertical correcta, debes volver a girar en tu artista y retroceder 440 píxeles
          (120 píxeles más que tu función de desplazamiento ''hacia abajo / adelante''). '
      grade4_artist_functions_stars0_authored_hint:
        grade4_artist_functions_stars0_a: |-
          Para resolver este desafío, sólo necesitas agregar un loop que repita el código de inicio 8 veces.

          Si no puedes recordar cuál era el código de inicio, haz clic en "comenzar de nuevo" en la esquina superior derecha del espacio de trabajo.
      grade4_artist_functions_stars1_authored_hint:
        grade4_artist_functions_stars1_a: "¡Intenta usar una función!"
      grade4_artist_functions_stars2_authored_hint:
        grade4_artist_functions_stars2_a: "¡No te rindas! Recuerda lo que has estado
          aprendiendo."
        grade4_artist_functions_stars2_b: Las funciones facilitan la llamada al código
          guardado en cualquier momento, ¡no solo desde dentro de un loop!
      grade4_artist_functions_windows0_authored_hint:
        grade4_artist_functions_windows0_a: Concéntrate sólo en hacer una ventana
          por ahora. Vamos a crear una función para el siguiente desafío.
        grade4_artist_functions_windows0_b: Intente hacer ciclos anidados, donde el
          ciclo interno hace el cuadrado y el ciclo externo gira el cuadrado cuatro
          veces.
      grade4_artist_functions_windows2_authored_hint:
        grade4_artist_functions_windows2_a: Trata de crear tu función primero y luego
          agregar ventanas una a la vez.
        grade4_artist_functions_windows2_b: No debería necesitar agregar ningún ciclo
          de repetición adicional. Simplemente salta al artista 100 píxeles hacia
          adelante para cada ventana superior, y 150 píxeles hacia abajo para obtener
          las ventanas inferiores.
      grade4_artist_nestedLoops_challenge2_authored_hint:
        Course_4_Artist_11_a: 'El semi-hexágono tiene una \*\* longitud de 30 \*\*
          y gira a la derecha por \*\* 60 grados \*\*.  '
        Course_4_Artist_11_b: 'El triángulo 2/3 tiene una **longitud de 80** y gira
          a la derecha por **120 grados**. '
      grade4_artist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este diseño hará un loop 10 veces sobre 360 grados.

          **360 / 10 = ?**
      grade4_artist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Estarás haciendo 6 loops en esta figura por sobre los 360 grados.

          **360 / 6 = ?**
      grade4_artist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "\\*\\* 360/36 =? \\*\\*"
      grade4_bee_conditionals_new2_authored_hint:
        grade4_bee_conditionals_new2_b: Puedes comprobar todos los espacios de una
          flor usando el bloque `si`, incluso si ya sabes que no hay nada allí.
      grade4_bee_conditionals_new3b_authored_hint:
        grade4_bee_conditionals_new3b_a: Una afirmación `si/ si no` podría ayudarte
          mucho aquí.
      grade4_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "\\*\\* Recuerde: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /si
          no`) para resolver el desafío."
      grade4_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "\\*\\* Recuerde: \\*\\* Este desafío cambia cada vez que
          se ejecuta.   \n\nQuerrás utilizar un bloque condicional  ( `si' o 'si /si
          no`) para resolver el desafío."
      grade4_bee_functions10_authored_hint:
        grade4_bee_functions10_a: Puedes usar exactamente la misma función  para este
          desafío que hiciste en el último desafío. Todo lo que necesitas hacer es
          crear una función que recolecte todo el néctar cuando llegues a cada flor.
      grade4_bee_functions2_authored_hint:
        grade4_bee_functions2_a: La función ha sido escrita por ti, pero deberás llamarla
          a cada flor.
      grade4_bee_functions3_authored_hint:
        grade4_bee_functions3_a: 'Tu función para este desafío solo necesita hacer
          miel, no deberías tener bloque de ''avanzar'' o ''girar''. '
      grade4_bee_functions6_authored_hint:
        grade4_bee_functions6_a: Edita la función para que resuelvas el desafío sin
          tener que cambiar el programa principal.
        grade4_bee_functions6_b: "Tu función debe hacer que la abeja: \n\n-   gire\n-
          \  avanze\n-   recoja todo el néctar\n-   dé la vuelta\n-   retroceda al
          camino principal\n-   vuelva a la dirección desde la que comenzó"
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: "Si el desafío parece difícil, intenta crear tu función
          de a poco.   \n\nAgrega algunos bloques y luego pruébala. Agrega más y vuelve
          a intentarlo. ¡Pronto lograrás resultados!\n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de a poco.

          Agrega algunos bloques, luego pruébalos. Agrega más, luego pruébalos otra vez. ¡Pronto, llegarás al lugar!
        2-3_Bee_Functions_8_b: "Recuerda crear tu código dentro del bloque de función
          verde. \n\n![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
        2-3_Bee_Functions_8_c: Esta función debe hacer que la abeja lo dirija hacia
          el camino, recoger el néctar, hacer la miel, girar la abeja y traerlo de
          regreso.
      grade4_bee_functions9_authored_hint:
        grade4_bee_functions9_b: Usa `mientras el néctar> 0` para asegurarte de recoger
          todo el néctar.
      grade4_bee_nestedLoops1_authored_hint:
        grade4_bee_nestedLoops1_a: Si no entiendes cómo usar los loops anidados aquí,
          intenta escribir las instrucciones paso a paso en un pedazo de papel. Encierra
          en un círculo los patrones que ves.
      grade4_bee_nestedLoops2_authored_hint:
        grade4_bee_nestedLoops2_a: Necesitarás repetir `obtener néctar` dentro de
          otro 'repetir' que también tenga el bloque `avanzar` dentro de ella.
        grade4_bee_nestedLoops2_b: Tendrás que usar los tres bloques de `repetir`
          disponibles para resolver este desafío.
      grade4_bee_nestedLoops2a_authored_hint:
        grade4_bee_nestedLoops2a_a: Intenta usar los loops anidados 'repetir' para
          resolver este desafío.
      grade4_bee_nestedLoops4_authored_hint:
        grade4_bee_nestedLoops4_a: Intente construir su código línea por línea y vea
          si puede detectar los lugares donde una repetición hará que el código sea
          más corto!
        grade4_bee_nestedLoops4_b: Necesitarás un ciclo anidado para avanzar y obtener
          néctar, pero solo un ciclo para recolectar miel al final. En total, deberías
          usar 3 ciclos.
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: Si utilizas un bloque que me ayude a "avanzar 100 pixeles".
          Dibujaré una línea automáticamente.
        2-3_Artist_1_new_b: ¿Tienes problemas para girar en la esquina? Utiliza el
          bloque "girar a la derecha 90 grados".
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: 'Para hacer esos pequeños ángulos, tienes que girar _más allá_
          cada vez como lo hiciste con el cuadrado.   '
        2-3_Artist_6_b: Como ya estoy mirando hacia la derecha, es más fácil empezar
          por avanzar, y luego hacer vueltas a la izquierda para crear el triángulo.
        2-3_Artist_6_c: Cada lado del triángulo tiene la misma longitud que cada lado
          del cuadrado... 100 pixeles!
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: Vas a necesitar dos "repeat" loops diferentes, uno después
          del otro.
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu loop.
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      grade5_artist_binary10_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Este código utiliza dos "for loops".
          Uno cuenta de 1 a 8, el otro cuenta de 8 a 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Cada "for loop" tiene tres repeticiones.
          La primera dibuja el conjunto de más a la izquierda de 1s, el segundo dibuja
          el 0s en el medio, y el tercero dibuja el 1s a la derecha.
        Course_4_Artist_Binary_Free_Play_2b_c: En cada repetición necesitas `contador`
          para 1s y`16- (contador 2x)`para 0s.
      grade5_artist_for_loops10_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: El polígono más grande tiene 19 lados.
        Course_4_Artist_For_Loops_Challenge_b: Cada polígono está incompleto, con
          un lado menos de lo que debería tener.
      grade5_artist_for_loops1b_authored_hint:
        grade5_artist_for_loops1b_a: |-
          Puedes dibujar algo como ésto:

          ! \[] (<https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png>)
      grade5_artist_for_loops4_authored_hint:
        Course_4_Artist_For_Loops_4_a: |-
          **¿Cuál es el número más pequeño que necesitarás?
          ¿Cuál es el número más grande?
          ¿Qué tanto aumenta cada vez?**

          Esas son las preguntas que te tienes que hacer para completar los espacios del loop "para".
      grade5_artist_for_loops7_authored_hint:
        grade5_artist_for_loops7_a: El lápiz es más fino en este desafío. Tendrás
          que configurarlo a '1' antes de empezar.
        grade5_artist_for_loops7_b: "¡Nota que esta espiral gira a la derecha en vez
          de a la izquierda!"
      grade5_artist_for_loops8_authored_hint:
        Course_4_Artist_For_Loops_11_a: "¡El ángulo de giro cambiará con cada forma!\n\nUse
          el bloque matemático para ingresar 360 dividido por el número de lados que
          tiene la forma para obtener el ángulo correcto. "
      grade5_artist_for_loops9_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 dividido por el número de lados que
          tiene una forma es la cantidad de grados que deberá girar. '
        Course_4_Artist_For_Loops_11a_b: 'Cada vez, deberá avanzar 10 veces la longitud
          del número actual de lados. '
      grade5_artist_for_loopsfreeplay11_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: La base de este código es la misma que
          la solución al desafío anterior... con un par de cambios.
        Course_4_Artist_For_Loops_inspire_b: Intenta un loop "for" que va de 3 a 10
          con un incremento de 1.
        Course_4_Artist_For_Loops_inspire_c: Hay dos iteraciones del mismo bucle de
          repetición dentro del bucle 'for', pero la segunda repetición gira en la
          dirección opuesta.
      grade5_artist_for_loopsfreeplay12_authored_hint:
        grade5_artist_for_loopsfreeplay12_a: La imagen en el dibujo se hizo utilizando
          un contador para el 'establecer alfa' y 'contador' / 10 como un tamaño de
          pincel.
        grade5_artist_for_loopsfreeplay12_b: La imagen en el dibujo utiliza una vuelta
          de 61 grados.
      grade5_artist_functionparameters10_authored_hint:
        brush_width: Establecemos el grosor del pincel a 1, luego el color azul antes
          de hacer cualquier otra cosa.
        double_loop: Trate de poner un "for loop" dentro de un loop de "repetición".
        specifics: |-
          El "for loop" se ejecuta de tres a diecisiete para cada uno de los 6 "pétalos" antes de crear el siguiente, dibujando figuras sólo con un número impar de lados.

          El bloque "set alpha" utiliza la división para ir atenuando el color a medida que el contador aumenta.
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20
          píxeles antes de hacer una rotación de 60 grados.
      grade5_artist_functionparameters8_authored_hint:
        NEW_Course_4_Artist_Params_13_a: La longitud de los lados de cada forma es
          7 veces el número de lados que tiene.
      grade5_artist_functionparameters9_authored_hint:
        NEW_Course_4_Artist_Params_14_a: Está bien ejecutar el programa unas cuantas
          veces para averiguar cómo funciona la función con parámetros diferentes.
        grade5_artist_functionparameters9_b: No es necesario añadir bloques 'mover'
          o 'girar' para terminar este código.
      grade5_artist_functionparameters9a_authored_hint:
        grade5_artist_functionparameters9a_b: La nueva variable 'min' debe ir en la
          primera ranura en tu loop 'para', dentro de la función.
      grade5_artist_functionparameters9b_authored_hint:
        grade5_artist_functionparameters9b_a: Si tu función es correcta, no necesitas
          cambiarla para este desafío.
        grade5_artist_functionparameters9b_b: Lo único que necesitas hacer entre llamadas
          de función es cambiar el color de la línea.
      grade5_artist_functionparameters_6_authored_hint:
        grade5_artist_functionparameters_6_b: Recuerda **añadir** un parámetro. ¡No
          elimines el que ya esta ahí!
      grade5_artist_parameters_squares1a_authored_hint:
        grade5_artist_parameters_squares1a_a: Recuerda, necesitas girar 90 grados
          para dibujar un cuadrado.
        grade5_artist_parameters_squares1a_b: Solo necesitas repetir tantas veces
          como el número de lados en un cuadrado.
      grade5_artist_parameters_squares2_authored_hint:
        grade5_artist_parameters_squares2_a: Esto se vuelve más sencillo si pones
          todo dentro de un loop 'para'.
        grade5_artist_parameters_squares2_b: |-
          Asegurate de girar 90 grados entre cada cuadro.

          ![](https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif)
      grade5_artist_parameters_squares2a_authored_hint:
        grade5_artist_parameters_squares2a_a: Necesitas hacer clic en el botón 'editar'
          para entrar a la función. Una vez que estés ahí, ¡añade un parámetro llamado
          'longitud' y úsalo dentro de tu bloque 'avanzar'!
        grade5_artist_parameters_squares2a_b: "¡Cuando llamas una función, usa un
          ciclo 'for' para tener el mejor código posible!"
      grade5_artist_variables_freeplay10_authored_hint:
        Course_4_Artist_Vars_8_a: Si divide su longitud inicial por el número de lados,
          la longitud de cada lado se acortará a medida que el número de lados aumente.
      grade5_artist_variables_freeplay15_authored_hint:
        Course_4_Artist_Inspire_a: Después de completar un cuadrado, Intentar saltar
          la mitad de su longitud antes de girar y hacer otro.
        Course_4_Artist_Inspire_b: Cada cuadrado y salto se repite cuatro veces (usar
          un giro a la izquierda en el medio) para formar una unidad completa similar
          a un molinete.
        Course_4_Artist_Inspire_c: Cada molinete también se repite cuatro veces, con
          un giro a la derecha de \*\* 360 / lados \*\*.
      grade5_artist_variables_octagons13_authored_hint:
        Course_4_Artist_Vars_13_a: Necesita dos loops de repetición (uno dentro de
          otro) ambos repitiendo "lados" veces.
        Course_4_Artist_Vars_13_b: |-
          El loop de repetición interno dibuja un octágono (girando a la izquierda).

          Luego, necesita avanzar y girar a la derecha sólo en el loop externo.
        Course_4_Artist_Vars_13_c: Para ajustar la forma para que permanezca del mismo
          tamaño cuando cambia el número de lados, use el bloque matemático para dividir
          la longitud en píxeles por el número de lados.
      grade5_artist_variables_square7_authored_hint:
        Course_4_Artist_Vars_6_a: Para dibujar un polígono regular, gire \*\* 360
          / lados \*\* cada vez.
      grade5_artist_variables_triangles1_authored_hint:
        grade5_artist_variables_triangles1_a: Para hacer un ángulo interior de 60
          grados en este triángulo, recuerda girar al artista en 120 grados.
        grade5_artist_variables_triangles1_b: Usa el loop `repetir` para acortar tu
          código.
        grade5_artist_variables_triangles1_c: Dentro de tu loop, tienes que avanzar
          50 píxeles, luego girar a la izquierda 120 grados.
      grade5_artist_variables_triangles1_2018_authored_hint:
        grade5_artist_variables_triangles1_a: Para hacer un ángulo interior de 60
          grados en este triángulo, recuerda girar al artista en 120 grados.
        grade5_artist_variables_triangles1_b: Usa el loop `repetir` para acortar tu
          código.
        grade5_artist_variables_triangles1_c: Dentro de tu loop, tienes que avanzar
          50 píxeles, luego girar a la izquierda 120 grados.
      grade5_artist_variables_triangles1_2019_authored_hint:
        grade5_artist_variables_triangles1_a: Para hacer un ángulo interior de 60
          grados en este triángulo, recuerda girar al artista en 120 grados.
        grade5_artist_variables_triangles1_b: Usa el loop `repetir` para acortar tu
          código.
        grade5_artist_variables_triangles1_c: Dentro de tu loop, tienes que avanzar
          50 píxeles, luego girar a la izquierda 120 grados.
      grade5_bee_for_loops10_authored_hint:
        grade5_bee_for_loops10_a: |-
          ¿Cuánto menos es 12 que 15?
          ¿Cuánto menos es 9 que 12?

          ¿Ves un patrón'?
      grade5_bee_for_loops11_authored_hint:
        NEW_Course_4_Bee_For_Loops_10a_a: "¿Puedes encontrar un patrón entre el número
          de pasos que necesitas tomar y el numero de néctares a recolectar?"
        NEW_Course_4_Bee_For_Loops_10a_b: Necesitas 2 repeticiones, una usara un bloque
          de matmáticas.
      grade5_bee_for_loops3_authored_hint:
        grade5_bee_for_loops3_a: 'Utiliza la variable ''contador'' dentro del ciclo
          ''repetir'' donde se recolecta el nectar para resolver este acertijo. '
        grade5_bee_for_loops3_b: Tu ciclo 'for' necesitará contar de 1 a 5 con un
          incremento de 1.
      grade5_bee_for_loops4_authored_hint:
        grade5_bee_for_loops4_a: Utiliza un ciclo 'for' que vaya de 1 a 7 con un incremento
          de 1 para resolver este desafío.
        grade5_bee_for_loops4_b: "¡Asegúrate de usar la variable 'contador' dentro
          de tu ciclo anidado 'repetir' para conseguir suficiente nectar!"
      grade5_bee_for_loops6_authored_hint:
        grade5_bee_for_loops6_a: No te olvides de utilizar una variable 'contador'
          dentro de tu loop 'para'.
      grade5_bee_for_loops7_authored_hint:
        grade5_bee_for_loops7_a: Tu loop 'para' deberá contar de 1 a 7 en incrementos
          de 2.
      grade5_bee_for_loops8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: |-
          Si tu ciclo está contando hacia arriba, el incremento se agrega a tu variable de contador cada vez.

          ¿Qué necesitas para añadir cada número para obtener la próxima cantidad de néctar?
      grade5_bee_for_loops9_authored_hint:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          Intenta hacer algunos cálculos con la variable contador.

          ¿Qué tienes que hacerle al contador en cada flor para alcanzar la cantidad de néctar que necesitas recolectar?
      grade5_bee_parameters_new1_authored_hint:
        grade5_bee_parameters_new1_a: Utiliza afirmaciones 'si' para asegurarte de
          que solo obtienes néctar de una flor.
      grade5_bee_parameters_new2_authored_hint:
        grade5_bee_parameters_new2_a: |-
          Para convertir esto en una función, sólo arrastra el código dentro del bloque de función preexistente.

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
        grade5_bee_parameters_new2_b: No olvides conectar el bloque 'filaDeNectar'
          a 'al ejecutar' para llamara a la función que construiste.
      grade5_bee_parameters_new3_authored_hint:
        grade5_bee_parameters_new3_a: La función se ejecuta sin importar qué dirección
          estés viendo.
      grade5_bee_parameters_new4_authored_hint:
        grade5_bee_parameters_new4_a: Necesitas añadir un parámetro y usar la variable
          resultante en tu loop.
      grade5_bee_parameters_new5_authored_hint:
        grade5_bee_parameters_new5_a: Cuenta el número de espacios que necesitarás
          en cada tramo y usa esos números como parámetros en tu llamada a la función.
      grade5_bee_parameters_new6_authored_hint:
        grade5_bee_parameters_new6_a: "¿Qué bloque incrementa una variable automáticamente
          que podrías usar como parámetro?"
      grade5_bee_parameters_new7_authored_hint:
        grade5_bee_parameters_new7_a: No necesitas un segundo parámetro para esta
          función, sólo una segunda afirmación 'si'.
      grade5_playlab_variables2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Asegúrese de establecer el número de `velocidad_perro`a
          algo más grande que`velocidad_gato`.
      gradeK_sequence_4_authored_hint:
        gradeK_sequence_4_a: "¡Intenta escribir los pasos en papel para encontrar
          una solución!"
      gradek_adventurer_loops3_authored_hint:
        gradek_adventurer_loops3_a: Para cambiar qué tan lejos va el aventurero, cambia
          la cantidad de veces que se ejecuta el bucle.
        gradek_adventurer_loops3_b: "¡No olvides que el aventurero necesita bajar
          y recoger oro después de que termine el bucle `repetir`!"
      gradek_adventurer_loops4_authored_hint:
        gradek_adventurer_loops4_a: Si usted no puede encontrar la respuesta de inmediato,
          trate de usar un trozo de papel para averiguar las flechas que se necesita
          y mirar un patrón.
      gradek_adventurer_loops5_authored_hint:
        gradek_adventurer_loops5_a: Si no puede descubrir qué viene después, intente
          ejecutar el código para ver dónde termina Laurel.
      gradek_adventurer_loops7_challenge_authored_hint:
        gradek_adventurer_loops7_challenge_a: "¿El código parece realmente largo?
          Intenta poner dos de tus bucles `repetir` dentro de otro bucle para hacerlo
          mucho más corto!"
      gradek_adventurer_loops9_authored_hint:
        gradek_adventurer_loops9_a: Si no se puede averiguar dónde colocar los ciclos,
          intentar escribir el código paso a paso y buscar para los patrones.
      gradek_artist_loops1_authored_hint:
        gradek_artist_loops1_a: "¿No sabes cómo dibujar una línea? Empieza uniendo
          bloques al bloque ''cuando se ejecuta' a ver qué pasa."
      gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Si deseas que el loop se repita más de 4 veces, puedes cambiar
          el número en la parte superior del bloque.
      gradek_artist_loops4_authored_hint:
        artistLoopsK3_a: "¡Intenta usar lo que has aprendido sobre los bloques repetir
          para completar este desafío!"
      gradek_artist_loops5_authored_hint:
        gradek_artist_loops5_a: "¿No puedes descifrar cómo hacer la colina? Intenta
          jugar con los bloques para ver qué dibuja cada uno."
      gradek_artist_loops6_authored_hint:
        gradek_artist_loops6_a: "¿No puedes descifrar donde colocar el loop? Intenta
          escribir el código paso a paso y busca un patrón."
      gradek_artist_loops7_authored_hint:
        gradek_artist_loops7_a: Intenta ejecutar el código para ver lo que se ha escrito
          para ti.
        gradek_artist_loops7_b: "¿Cómo enlazarías el código que se te ha dado?"
        gradek_artist_loops7_c: "¿Qué hace el código?  \n¿Qué se supone que haga?
          \ \n¿Qué te dice eso?"
      gradek_artist_loops9_authored_hint:
        artistLoopsKA_a: Use el bloque de salto para avanzar sin dibujar una línea.
      gradek_playlab_events1c_authored_hint:
        gradek_playlab_events1c_a: Aquí está el bloque debes conectar al bloque 'al
          ejecutar':! \[] (<https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png>)
      harvester_Kahoot_authored_hint:
        courseE_farmer_functions1a_a: Piensa en las afirmaciones "si/si no" paso a
          paso. ¿Que debes hacer si estás parado en una planta de maíz?
        courseE_farmer_functions1a_b: ¡Utiliza un bloque "repetir hasta" para llegar
          a la calabaza!
      harvey_tictactoe_authored_hint:
        harvey_tictactoe: Puedes usar bloques `salto` para moverte a otros espacios.
      iceage_click_hello_authored_hint:
        iceage_click_hello_a: Añade un bloque 'actor 1 dice' o más al evento 'al hacer
          click' para completar este desafío.
      iceage_click_hello_2018_authored_hint:
        iceage_click_hello_a: Añade un bloque 'actor 1 dice' o más al evento 'al hacer
          click' para completar este desafío.
      iceage_free_play_authored_hint:
        iceage_free_play_a: "¿Puedes hacer que Sid y Manny tengan una lucha de cristales
          de hielo?  "
        iceage_free_play_b: Haz que Granny persiga a Diego. Termina el juego como
          una victoria si lo atrapa.
        iceage_free_play_c: "¿Puedes hacer que Sid lance copos de nieve a Diego y
          que Diego se haga más grande cada vez que recibe uno? Termina el juego como
          una victoria si Diego recibe 5 golpes."
      iceage_free_play_2018_authored_hint:
        iceage_free_play_a: "¿Puedes hacer que Sid y Manny tengan una lucha de cristales
          de hielo?  "
        iceage_free_play_b: Haz que Granny persiga a Diego. Termina el juego como
          una victoria si lo atrapa.
        iceage_free_play_c: "¿Puedes hacer que Sid lance copos de nieve a Diego y
          que Diego se haga más grande cada vez que recibe uno? Termina el juego como
          una victoria si Diego recibe 5 golpes."
      iceage_free_playcourseF_IceAge_11_authored_hint:
        iceage_free_play_a: "¿Puedes hacer que Sid y Manny tengan una lucha de cristales
          de hielo?  "
        iceage_free_play_b: Haz que Granny persiga a Diego. Termina el juego como
          una victoria si lo atrapa.
        iceage_free_play_c: "¿Puedes hacer que Sid aviente copos de nieve a Diego
          y que Diego se haga más grande cada vez que recibe uno? Termina el juego
          como una victoria si Diego recibe 5 golpes."
      iceage_hello1_authored_hint:
        iceage_hello1_a: Sólo necesitas agregar un bloque para resolver este desafío.
          Arrastra el bloque `decir` desde la barra de herramientas y conéctalo al
          bloque de evento `cuando ejecuta` que ya se encuentra en el área de trabajo.
          Luego, escribe "¡Hola!" dentro.
      iceage_hello1_2018_authored_hint:
        iceage_hello1_a: Sólo necesitas agregar un bloque para resolver este desafío.
          Arrastra el bloque `decir` desde la barra de herramientas y conéctalo al
          bloque de evento `cuando ejecuta` que ya se encuentra en el área de trabajo.
          Luego, escribe "¡Hola!" dentro.
      iceage_hello2_authored_hint:
        iceage_hello2_a: 'Para resolver este desafío, necesitarás que Sid diga algo
          único usando el bloque ''actor 1 dice''. Necesitarás que Manny diga algo
          con el bloque ''actor 2 dice''. '
      iceage_hello2_2018_authored_hint:
        iceage_hello2_a: 'Para resolver este desafío, necesitarás que Sid diga algo
          único usando el bloque ''actor 1 dice''. Necesitarás que Manny diga algo
          con el bloque ''actor 2 dice''. '
      iceage_move_events_authored_hint:
        iceage_move_events_a: 'Cada uno de los eventos ''cuando\_\_\_flecha'' necesita
          tener un comando ''mover actor 1'' diferente conectado a él para resolver
          este desafío. '
      iceage_move_events_2018_authored_hint:
        iceage_move_events_a: 'Cada uno de los eventos ''cuando\_\_\_flecha'' necesita
          tener un comando ''mover actor 1'' diferente conectado a él para resolver
          este desafío. '
      iceage_move_to_actor_authored_hint:
        iceage_move_to_actor_a: En este desafío, puedes mover a Diego hacia abajo
          200 pixeles o mover a Manny arriba 200 pixeles.
        iceage_move_to_actor_b: Conecta el bloque 'reproducir\_\_\_sonido' al evento
          'cuando el actor 1 toque al 2' para terminar este reto.
      iceage_move_to_actor_2018_authored_hint:
        iceage_move_to_actor_a: En este desafío, puedes mover a Diego hacia abajo
          200 pixeles o mover a Manny arriba 200 pixeles.
        iceage_move_to_actor_b: Conecta el bloque 'reproducir\_\_\_sonido' al evento
          'cuando el actor 1 toque al 2' para terminar este reto.
      iceage_move_to_flag_authored_hint:
        iceage_hello3_a: Utiliza el bloque de 'mover el actor 1 a la derecha por 200
          píxeles' para resolver este desafío.
      iceage_move_to_flag_2018_authored_hint:
        iceage_hello3_a: Utiliza el bloque de 'mover el actor 1 a la derecha por 200
          píxeles' para resolver este desafío.
      iceage_repeat_authored_hint:
        iceage_repeat_a: Usa los bloques 'mover actor 1 a la izquierda' y 'mover actor
          1 a la derecha' para resolver este desafío.
      iceage_repeat_2018_authored_hint:
        iceage_repeat_a: Usa los bloques 'mover actor 1 a la izquierda' y 'mover actor
          1 a la derecha' para resolver este desafío.
      iceage_sound_and_points_authored_hint:
        iceage_sound_and_points_a: Necesitas dos bloques debajo del evento 'cuando
          actor 1 toca actor 2'.
        iceage_sound_and_points_b: Necesitas tanto el bloque 'anota un punto' como
          el 'reproducir\_\_\_sonido' para pasar este nivel.
      iceage_sound_and_points_2018_authored_hint:
        iceage_sound_and_points_a: Necesitas dos bloques debajo del evento 'cuando
          actor 1 toca actor 2'.
        iceage_sound_and_points_b: Necesitas tanto el bloque 'anota un punto' como
          el 'reproducir\_\_\_sonido' para pasar este nivel.
      iceage_throw_hearts_authored_hint:
        iceage_throw_hearts_a: "¿Cuándo deseas lanzar corazones a la abuela?  ¿Cuando
          se presiona una flecha? ¿Al hacer clic en Sid?  ¿Al hacer clic en abuela?
          \ ¡La elección es tuya!"
        iceage_throw_hearts_b: Para que la abuela sea feliz cuando reciba un corazón,
          necesitas conectar el bloque 'establecer humor de actor 2 a feliz' debajo
          del evento 'cuando actor 2 toca el proyectil'.
      iceage_throw_hearts_2018_authored_hint:
        iceage_throw_hearts_a: "¿Cuándo deseas lanzar corazones a la abuela?  ¿Cuando
          se presiona una flecha? ¿Al hacer clic en Sid?  ¿Al hacer clic en abuela?
          \ ¡La elección es tuya!"
        iceage_throw_hearts_b: Para que la abuela sea feliz cuando reciba un corazón,
          necesitas conectar el bloque 'establecer humor de actor 2 a feliz' debajo
          del evento 'cuando actor 2 toca el proyectil'.
      iceage_warn_ice_age_authored_hint:
        iceage_warn_ice_age_a: 'Solo deberías tener que añadir dos bloques para llevar
          este desafío a donde debe estar. '
        iceage_warn_ice_age_b: Añade los dos nuevos bloques debajo del evento 'al
          ejecutar' para que ocurran inmediatamente después de que se inicie el programa.
      iceage_warn_ice_age_2018_authored_hint:
        iceage_warn_ice_age_a: 'Solo deberías tener que añadir dos bloques para llevar
          este desafío a donde debe estar. '
        iceage_warn_ice_age_b: Añade los dos nuevos bloques debajo del evento 'al
          ejecutar' para que ocurran inmediatamente después de que se inicie el programa.
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Si no puedes detectar los bloques para colocarlos en "repeat"
          de inmediato, comienza a codificar cada movimiento y busca un patrón.
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Si no puedes decir qué debería ir dentro del loop "repeat",
          intenta arrastrar los bloques uno por uno y trata de encontrar un patrón.
        2-3_Bee_Loops_6_b: Deberían haber 6 bloques dentro del loop "repeat" una vez
          que hayas finalizado.
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Vas a necesitar dos "repeat" loops diferentes, uno después
          del otro.
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_7_b: 'Si no puedes imaginarte el loop desde el principio, intenta
          codificarlo y luego busca un patrón.  '
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_4A_b: La última parte del programa se puede terminar escribiendo
          el código al final del programa fuera de su loop.
        2-3_Bee_Loops_4A_c: Si aún no puedes detectar los loop, intenta codificar
          primero, luego identifica lo que puedes combinar en un "repeat" loop.
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Deberías finalizar con cuatro bloques dentro de tu loop.
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu loop.
      playLabDebugVideo1_authored_hint:
        courseA_playLab_events2_a: Aquí está el bloque debes conectar al bloque 'al
          ejecutar':! \[] (<https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png>)
