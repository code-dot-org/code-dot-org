---
fr:
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: Si tu utilises le bloc pour me faire ˋavancer de 100 pixelsˋ,
          je tracerai une ligne automatiquement.
        2-3_Artist_1_new_b: Des problèmes pour tourner ? Utilise le bloc ˋtourner
          de 90 degrés à droiteˋ.
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: 'Des problèmes avec les angles ? Tu dois faire 360 degrés
          en 8 virages. Combien font 360 ÷ 8 ? '
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: Il y a 360 degrés dans un cercle, donc si l'artiste tourne
          d'un degré à chaque répétition de la boucle, il devra le faire 360 fois.
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: L'artiste ne semble pas être dirigé dans la bonne direction.
          Pourrais-tu le faire tourner avant de tracer la ligne ?
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: Combien font 100-70 ? Dans le problème de l'histoire, c'est
          la hauteur que doit avoir le chapeau !
        2-3_Artist_3new_b: L'artiste ne semble pas être dirigé dans la bonne direction.
          Pourrais-tu le faire tourner avant de tracer la ligne ?
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: Pour finir la maison, tout ce qu'on a besoin de faire est
          tracer un carré !
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: 'Pour faire ces petits angles, tu dois tourner *plus* chaque
          fois que tu as fait un carré.   '
        2-3_Artist_6_b: Étant donné que je suis déjà orienté vers la droite, il est
          plus simple de commencer par avancer, puis de tourner à gauche pour créer
          le triangle.
        2-3_Artist_6_c: Chaque côté du triangle a la même longueur que chaque côté
          du carré... 100 pixels !
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: La manière la plus simple de réussir ce casse-tête est de
          commencer par le premier carré et de finir avec l'artiste tourné vers le
          bas avant de commencer le second carré.
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: Si tu coupes 200 en deux, combien de pixels de large devra
          faire chaque carré ?
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: Ce losange n’est vraiment qu’un carré sur le côté
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: Chaque marche fait 100 pixels de haut et 100 pixels de large.
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: Ce losange n'est vraiment qu'un carré tourné à 45 degrés.
        2-3_Artist_9_b: |-
          N'oublie pas de faire pivoter ton artiste de 45 degrés à gauche avant de commencer à dessiner le carré !

          ![](https://images.code.org/47cc2474e533667101a2d73b98da204e-image-1467744539967.gif)
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: Souviens-toi, tu veux que le panneau de contrôle
          soit 10 pixels *plus large*...alors sois sûr **d'ajouter** 10 à chaque nombre
          que tu modifies.
        2-3_Artist_Debugging_10_b: "**On peut procéder par essai et erreur ici !**
          \ \n\nCommence par changer un nombre à la fois. \n\nQuels nombres font quoi
          ?  \n\nSi tu es perdu, clique sur « Recommencer » et ton code sera réinitialisé."
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: 'Indice : Chaque cheveu mesure 75 pixels.'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: Un des tournants est trop petit de 15 degrés.
        2-3_Artist_Debugging_3_b: Si le programme s'exécute trop rapidement pour voir
          ce qui se passe, essaie de le ralentir avec le curseur.
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: Que se passe-t-il si l’artiste recule ou saute en
          arrière après qu’il dessine la première ligne ?
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Combien de fois est-ce que ma forme se répète ?
          Combien de fois est-ce que ma forme *devrait* se répéter ?
          Où peux-tu changer cela dans le programme ?
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: L'artiste doit tourner à 60 degrés plus loin à gauche
          avant de commencer à dessiner !
        2-3_Artist_Debugging_9_b: Tu n’as pas besoin d’ajouter un autre bloc pour
          faire le tour complet, il suffit d’ajouter 60 degrés au bloc ˋtourner à
          gaucheˋ qui est déjà là !
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: Les carrés ont chacun des côtés de 100 pixels, ce
          qui signifie que tu devras avancer de 175 pixels avant de dessiner ton deuxième
          carré.
        2-3_Artist_Functions_1_b: Tu peux dessiner des lignes qui se superposent pour
          dessiner les lunettes.
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: Les carrés ont chacun des côtés de 100 pixels, ce
          qui signifie que tu devras avancer de 175 pixels avant de dessiner ton deuxième
          carré.
        2-3_Artist_Functions_1_b: Tu peux dessiner des lignes qui se superposent pour
          dessiner les lunettes.
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: Tu devras modifier non seulement le nombre et la
          longueur des côtés au sein de la fonction, mais aussi l’angle auquel l’artiste
          tourne entre chaque côté.
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: Tu devras modifier non seulement le nombre et la
          longueur des côtés au sein de la fonction, mais aussi l’angle auquel l’artiste
          tourne entre chaque côté.
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: Essaie d'exécuter le code tout d'abord pour voir
          ce qu'il faut ajouter.
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: Essaie d'exécuter le code tout d'abord pour voir
          ce qu'il faut ajouter.
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Ton programme devrait:
          - Utiliser une fonction
          - Avancer de 100 + 75 pixels
          - Utiliser une fonction
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Ton programme devrait:
          - Utiliser une fonction
          - Avancer de 100 + 75 pixels
          - Utiliser une fonction
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: L'artiste doit tourner de 120 degrés entre chaque
          carré pour compléter ce dessin.
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: L'artiste doit tourner de 120 degrés entre chaque
          carré pour compléter ce dessin.
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          N’oublie pas que le code du dernier casse-tête était :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_colour" inline="true">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">turnRight</title>
          <title name="VALUE" config="45,60,90,120,180">45</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">turnLeft</title>
          <title name="VALUE" config="45,60,90,120,180">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
        2-3_Artist_Loops_New_11_b: Ton nouveau tournant devrait aller à la **fin**
          du code dans la boucle.
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: Avant de commencer le losange, l’artiste doit tourner
          à gauche de 60 degrés pour se retrouver sur le bon chemin.
        2-3_Artist Loops_New_12_b: Après que l’artiste avance de 100 pixels, il devra
          tourner à droite de 120 degrés pour passer le virage.
        2-3_Artist Loops_New_12_c: L'artiste devra tourner à droite de seulement 60
          degrés pour créer un coin large.
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: |-
          À la fin de chaque diamant, l’artiste est déjà dans la bonne direction pour commencer celui qui suit.

          Pour cette raison, nous n’avons pas besoin d’ajouter un bloc supplémentaire ˋtourner à gauche deˋ avant de recommencer.
        2-3_Artist_Loops_New_13_b: "Pour faire chaque losange, l'artiste doit :   \n-
          avancer\n- tourner à droite de 120 degrés\n- avancer\n- tourner à droite
          de 60 degrés  \n\nPuis, recommencer !"
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: L'artiste doit tourner à 45 degrés vers la droite
          avant de commencer à dessiner.
        2-3_Artist_Loops_New_9_b: Ce V est en fait simplement un demi carré. Quel
          serait le code pour dessiner un demi carré ?
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: N'oublie pas de mettre tous les blocs gris dans
          ta boucle.
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "Besoin d’aide avec les angles ?  \n**360 ÷ 12
          = 30**"
        2-3_Artist_Nested_Loops_3_b: N'oublie pas de mettre tout le code en gris et
          le code de ton virage à l'intérieur d'une boucle.
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: "Besoin d’aide avec les angles ?  \n**360 ÷ 12
          = 30**"
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: "Essaie d'utiliser le bloc ˋsauter en avantˋ
          pour aller du sommet d'un carré à l'endroit où tu veux commencer le suivant.
          \n\nSi tes carrés font 20 pixels de haut et sont séparés de 20 pixels, de
          combien dois-tu sauter ?"
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: |-
          De combien faut-il tourner à chaque boucle ?

          Combien font 360 ÷ 10 ?
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: "Tu as besoin d'aide pour trouver l'angle correct
          ? \n\n**360 ÷ 12 = 30**"
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: Du mal à trouver comment faire descendre les blocs
          ? Essaie de traiter la fleur rouge exactement comme une fleur mauve !
        2-3_Bee_Conditionals_14_b: Si la fleur rouge était mauve, pourrais-tu trouver
          un moyen d'utiliser une boucle ˋrépéterˋ supplémentaire pour réduire le
          code ?
        2-3_Bee_Conditionals_14_c: "Essaie de couper ceci en deux blocs:  \n\n\n![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)\n\n1)
          Obtenir du nectar 3 fois\n  - Avancer plus 5 fois\n  - Vérifier s'il y a
          du nectar, s'il y en a, l'obtenir\n  - Tourner à gauche\n  \n2) Fabriquer
          du miel \n  - Avancer plus 1 fois\n  - Fabriquer du miel 2 fois"
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: 'N''oublie pas : Les fleurs mauves n''ont que 0
          ou 1 nectar et cela peut changer à chaque fois que tu exécutes le programme.'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: Le code sera plus court si tu utilises une boucle
          à chaque fois que tu vas de l’avant, une autre boucle pour recueillir le
          nectar et une autre pour faire le miel.
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: 'N''oublie pas : Les fleurs mauves changent entre
          0 et 1 nectar lorsque tu exécutes ton programme !'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: Une fois que tu as trouvé et corrigé le bloc incorrect,
          vois-tu des séquences que tu pourrais simplifier en utilisant une boucle
          ˋrépéterˋ ?
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: Une fois que tu as trouvé et corrigé le bloc incorrect,
          vois-tu des séquences que tu pourrais simplifier en utilisant une boucle
          ˋrépéterˋ ?
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: Y a-t-il un endroit où l’abeille fait quelque chose
          qui n’a aucun sens ? Que se passe-t-il lorsque tu modifies ce bloc ?
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: Tu n’as pas pas à utiliser une boucle avec une fonction.
          Essaie de bouger, utiliser la fonction, puis de bouger et de réutiliser
          la fonction.
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: Tu n’as pas pas à utiliser une boucle avec une fonction.
          Essaie de bouger, utiliser la fonction, puis de bouger et de réutiliser
          la fonction.
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: |-
          Si le casse-tête semble difficile, essaie de construire ta fonction petit à petit.

          Ajoutes quelques blocs, puis essaye. Ajoutes-en d’autres, puis réessaye. Bientôt, tu y arriveras !

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
        2-3_Bee_Functions_8_b: |-
          N’oublie pas de placer ton code dans le bloc de fonction vert.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: Tu devrais avoir quatre blocs à l’intérieur de ta boucle.
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: Tu devrais avoir 6 blocs à l’intérieur de ta boucle.
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: Tu auras besoin de deux boucles ˋrépéterˋ différentes,
          l’une après l’autre.
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: Tu devrais retrouver cinq blocs à l’intérieur de ta boucle.
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: La première action sera un tournant, plutôt qu’un mouvement.
        2-3_Bee_Loops_4A_b: Le dernier morceau du programme peut être fini en écrivant
          le code à la fin du programme hors de ta boucle.
        2-3_Bee_Loops_4A_c: Si tu ne peux pas encore repérer les boucles, essaie de
          coder de la façon longue d'abord, et puis regarde ce que tu peux combiner
          pour faire une boucle ˋrépéterˋ à la fin.
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: Si tu ne repères pas tout de suite les blocs à mettre dans
          le ˋrépéterˋ, commence par écrire le code de chaque mouvement et cherche
          un motif.
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: Si tu ne sais pas ce qui devrait aller dans le ˋrépéterˋ,
          essaie de placer les blocs un par un et de voir si un motif se répète.
        2-3_Bee_Loops_6_b: Il devrait y avoir 6 blocs à l'intérieur de ta boucle ˋrépéterˋ
          lorsque tu as terminé.
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: La première action sera un tournant, plutôt qu’un mouvement.
        2-3_Bee_Loops_7_b: 'Si tu n’arrives pas vraiment à imaginer la boucle depuis
          le début, essaie de la coder de la façon longue d''abord, puis cherche un
          motif.  '
      2-3 Maze 1_authored_hint:
        2-3_Maze_1_a: Pour utiliser un bloc ˋavancerˋ, fais-le glisser depuis la barre
          d'outils jusqu'à l'espace de travail et connecte-le au bloc ˋquand l’exécution
          commenceˋ.
      2-3 Maze 16_authored_hint:
        2-3_Maze_16_a: Si le motif est difficile à repérer, essaie de tout coder et
          de voir quelles choses se répètent encore et encore avant de placer les
          boucles.
        2-3_Maze_16_b: "Pour mettre plusieurs blocs dans une boucle ˋrépéterˋ, fais
          glisser une boucle sur le plan de travail, puis fais glisser tous les blocs
          du programme de départ à l’intérieur. \n\nConnecte le tout au bloc ˋquand
          l’exécution commenceˋ et tu es prêt à partir !"
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: Il y a deux façons de résoudre ce casse-tête !
      2-3 Maze Loops 17_authored_hint:
        2-3_Maze_Loops_17_a: Si le motif est difficile à repérer, essaie de tout coder
          et de voir quelles choses se répètent encore et encore avant de placer les
          boucles.
        2-3_Maze_Loops_17_b: Le code de départ a été supprimé ? Clique sur ˋRecommencerˋ
          pour le récupérer !
      2-3 Maze Loops 18_authored_hint:
        2-3_Maze_Loops_18_a: Si le motif est difficile à repérer, essaie de tout coder
          et de voir quelles choses se répètent encore et encore avant de placer les
          boucles.
      2-3 Maze Loops 19_authored_hint:
        2-3_Maze_Loops_19_a: Si tu es coincé, essaie d’écrire le code sans boucles
          d’abord et de voir ce qui se répète.
        2-3_Maze_Loops_19_b: Mettre une boucle de répétition à l’intérieur d’une autre
          peut aider à diminuer le nombre de blocs utilisés.
      2-3 Maze Loops 20_authored_hint:
        2-3_Maze_Loops_20_a: Recherche un motif en escalier dans ce dédale pour trouver
          où une boucle peut être utilisée.
      2-3 Maze Loops 21_authored_hint:
        2-3_Maze_Loops_21_a: Si tu as du mal à trouver le motif en escalier, essaie
          de couvrir les chemins bloqués avec ton doigt.
      4-5 Artist 1_authored_hint:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11_authored_hint:
        4-5_Artist_11_a: Dans ta boucle, assure-toi que l’artiste saute en arrière
          et vers le haut après avoir dessiné chaque ligne.
      4-5 Artist 3_authored_hint:
        4-5_Artist_3_a: |-
          Si le parterre de fleurs a un périmètre de 600 pixels et que deux des côtés font 200 pixels de long, voilà comment trouver la longueur des côtés courts :

          **600 - 200 - 200 = 200**

          Cela signifie que les deux côtés courts cumulés mesurent 200 pixels.

          **Combient font 200 / 2?**
        4-5_Artist_3_b: Si tu ne peux pas voir tout de suite où la boucle ˋrépéterˋ
          va, essaie d’écrire la solution en entier et recherche un motif.
      4-5 Artist 4_authored_hint:
        4-5_Artist_4_a: "Il y a 360 degrés dans un cercle ! \n\nC’est le nombre de
          fois que tu dois répéter ce code (en tournant d’un degré à la fois) avant
          que le cercle soit terminé !"
      4-5 Artist 5_authored_hint:
        4-5_Artist_5_a: |-
          La méthode par essai et erreur et bien, mais tu peux aussi résoudre le problème en divisant l’angle de 90 degrés en trois.

          **90 / 3 = _____**
      4-5 Artist 7_authored_hint:
        4-5_Artist_7_a: 'Quel angle est le plus petit ?  À quel angle l’artiste est-il
          debout ? '
      4-5 Artist 8_authored_hint:
        4-5_Artist_8_a: "Les côtés longs font chacun 240 pixels. Cela signifie que
          les deux côtés courts doivent être égaux à :\n\n**800 - 240 - 240 = 320**\n\nCombien
          font **320 / 2** ? "
        4-5_Artist_8_b: "Cette image peut être réalisée de deux façons ! \n- Dessiner
          deux rectangles de **120** de long et **160** de haut avec un côté qui se
          chevauche\n\n- Dessiner un rectangle de **240** de long et **160** de haut,
          puis ajouter une ligne au milieu."
      4-5 Artist 9_authored_hint:
        4-5_Artist_9_a: 'Quand un triangle est équilatéral, tous ses côtés et angles
          sont identiques.

'
        4-5_Artist_9_b: Tu devras dessiner trois triangles de la même taille. N’oublie
          pas de changer de position après chaque triangle.
      4-5 Artist Assessment 1_authored_hint:
        4-5_Artist_Assessment_1_a: Tu dois seulement dessiner le triangle extérieur
          pour réussir ce casse-tête.
      4-5 Artist Patterns 11_authored_hint:
        4-5_Artist_Patterns_11_a: S’il y a 360 degrés dans un cercle et que chaque
          boucle tourne de 3 degrés, combien de fois devras-tu boucler pour dessiner
          la moitié d’un cercle ?
      4-5 Artist Patterns 2_authored_hint:
        4-5_Artist_Patterns_2_a: Remarque que puisque les carrés font 20 pixels de
          long, tu devras sauter de 20 pixels avant de commencer ton prochain carré.
      4-5 Artist Patterns 3_authored_hint:
        4-5_Artist_Patterns_3_a: Fais attention à décrocher le bloc de code entier
          de la barre d’outils à chaque fois que tu en essaye un nouveau.
        4-5_Artist_Patterns_3_b: Si ton code devient trop confus, tu peux toujours
          appuyer sur « Recommencer » et réessayer !
      4-5 Artist Patterns 5_authored_hint:
        4-5_Artist_Patterns_5_a: "Quand l’artiste finit chaque losange, il fait face
          à la direction opposée de celle à laquelle il doit faire face pour commencer
          le prochain. \n\nDe combien de degrés doit-il être tourné pour être sur
          le bon chemin ?"
      4-5 Bee Conditionals 4_authored_hint:
        remember_quantum: "**Souviens-toi :** Ce casse-tête change à chaque fois qu’il
          est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ ou ˋsi /
          sinonˋ) pour résoudre le problème."
      4-5 Bee Conditionals 5_authored_hint:
        remember_quantum: "**Souviens-toi :** Ce casse-tête change à chaque fois qu’il
          est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ ou ˋsi /
          sinonˋ) pour résoudre le problème."
      4-5 Bee Conditionals 6_authored_hint:
        4-5 Bee Conditionals 6_a: Tu peux résoudre ce casse-tête en utilisant uniquement
          les blocs dans l’espace de travail. Dans quel ordre doivent-ils être ?
        4-5 Bee Conditionals 6_b: Assure-toi de vérifier si la fleur a plus de **0**
          nectar au moins **3** fois pour résoudre ce problème.
      4-5 Bee Debugging 1_authored_hint:
        4-5_Bee_Debugging_1_a: Si tu as du mal à savoir ce qui ne va pas, essaie de
          l’exécuter pour voir où les choses tournent mal.
      4-5 Bee Nested Loops Rows_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Essaie de traiter ce problème comme un long rectangle
          au long duquel l’abeille avance, puis tourne à gauche plusieurs fois pour
          terminer le chemin.
      4-5 Maze 10_authored_hint:
        4-5_Maze_10_a: |-
          Si tu ne vois pas comment utiliser les boucles pour résoudre le problème tout de suite, essaie de le résoudre de la façon longue d’abord, puis cherche un motif.

          Autour de quoi devrais-tu mettre un ˋrépéterˋ pour rendre le code plus court ?
      4-5 Maze 4_authored_hint:
        4-5_Maze_4_a: Si tu as du mal à trouver où mettre la répétition, essaie de
          tout coder et de rechercher un motif.
      4-5 Maze 5_authored_hint:
        4-5_Maze_5_a: Essaie d’utiliser une boucle ˋrépéterˋ à chaque fois que tu
          dois ˋavancerˋ de plus de deux pas.
        4-5_Maze_5_b: Tu peux utiliser plus d’une boucle ˋrépéterˋ dans un casse-tête.
      4-5 Maze 6_authored_hint:
        4-5_Maze_6_a: "Essaie de tracer un chemin avec ton doigt. \nEst-ce le chemin
          le plus court que tu peux trouver ?"
      4-5 Maze 7_authored_hint:
        4-5_Maze_7_a: "**Veux-tu que ton code soit aussi court que possible ?** \n\nCherche
          des motifs dans tes blocs. Vois-tu quelque chose qui se répète ? Essaie
          de mettre une boucle autour à la place !"
      4-5 Nested Loops 12_authored_hint:
        4-5_Nested_Loops_12_a: "**360 ÷ 36 = ?**"
      4-5 Nested Loops 6_authored_hint:
        4-5_Nested_Loops_6_a: |-
          N’oublie pas de faire un virage après ta boucle interne.

          Tu boucleras 6 triangles sur 360 degrés.

          **360 / 6 = ?**
      4-5 Nested Loops 7_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Ce dessin bouclera 10 fois sur 360 degrés.

          **360 / 10 = ?**
      4-5 Nested Loops 8_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Tu feras boucler cette forme 6 fois sur 360 degrés.

          **360 / 6 = ?**
      4-5 While Loops 8_authored_hint:
        4-5_While_Loops_8_a: Chaque élément devra avoir sa propre boucle ˋtant queˋ.
      Artist Autorun Test_authored_hint:
        2-3_Artist_Functions_4_a: L'artiste doit tourner de 120 degrés entre chaque
          carré pour compléter ce dessin.
      Artist Inspiration_authored_hint:
        brush_width: Nous avons défini la largeur du pinceau à 1 puis la couleur à
          bleu avant tout.
        double_loop: Essaie de mettre une boucle ˋpourˋ dans une boucle ˋrépéterˋ.
        specifics: |-
          La boucle ˋpourˋ s’exécute de trois à dix-sept pour chacune des six « pétales » avant de créer la suivante, en dessinant des formes ayant uniquement un nombre impair de côtés.

          Le bloc ˋdéfinis alphaˋ utilise la division pour faire s’effacer la couleur au fur et à mesure que le compteur augmente.
        after: Quand tu as fini chaque « pétale », assure-toi d’ˋavancerˋ de 20 pixels
          avant de tourner de 60 degrés.
        solution: |-
          **Solution**


          ![Image des blocs de solution](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      Bergeron Robot Maze1_authored_hint:
        2-3_Maze_1_a: Pour utiliser un bloc ˋavancerˋ, fais-le glisser depuis la barre
          d'outils jusqu'à l'espace de travail et connecte-le au bloc ˋquand l’exécution
          commenceˋ.
      Course 4 Artist 11_authored_hint:
        Course_4_Artist_11_a: 'Le demi-hexagone a une **longueur de 30** et tourne
          à droite de **60 degrés**.  '
        Course_4_Artist_11_b: 'Le 2/3 de triangle a une **longueur de 80** et tourne
          à droite de **120 degrés**. '
      Course 4 Artist 12_authored_hint:
        Course_4_Artist_12_a: 'Chaque forme répétée est la combinaison de la **moitié
          d’un hexagone** suivie de **2/3 d’un triangle**. '
        Course_4_Artist_12_b: 'La forme est presque la même que dans le casse-tête
          précédent, sauf que le demi-hexagone est un peu plus grand. '
        Course_4_Artist_12_c: "1) Les trois premières lignes font 60 pixels de long
          et tu dois tourner de 60 degrés.  \n2) Les deux lignes suivantes font 80
          pixels de long et tu dois tourner de 120 degrés "
        Course_4_Artist_12_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">6</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">3</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">60</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">60</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">80</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">120</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6_authored_hint:
        Course_4_Artist_6_a: Il y a 3 triangles dans la rotation de 360 degrés...combien
          de fois y a-t-il 3 dans 360 ?
      Course 4 Artist 8a_authored_hint:
        Course_4_Artist_8a: |-
          Besoin d’aide pour savoir de combien tourner ?

          Il y a 3 triangles dans la rotation de 360 degrés.

          Combien de fois y a-t-il 3 dans 360 ?
      Course 4 Artist 9_authored_hint:
        Course_4_Artist_9_a: |-
          Besoin de savoir de combien tourner ?

          Combien font 360 divisés par 10 ?
      Course 4 Artist Binary Free Play 2b_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Ce code utilise deux boucles ˋpour`.
          Une compte de 1 à 8, l’autre décompte de 8 à 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Chaque boucle ˋpour` se répète trois
          fois. La première dessine les 1 à gauche, la deuxième dessine les 0 au milieu
          et la troisième dessine les 1 à droite.
        Course_4_Artist_Binary_Free_Play_2b_c: À chaque répétition, tu dois `compter`
          les 1 et ˋ16 - (2 x compte)` les 0.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Solution :**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 11_authored_hint:
        Course_4_Artist_For_Loops_11_a: "L’angle de rotation changera à chaque forme
          !  \n\nUtilise le bloc de math pour entrer 360 divisé par le nombre de côtés
          que la forme a pour avoir le bon angle. "
      Course 4 Artist For Loops 11a_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 divisé par le nombre de côtés qu’une
          forme a donne le nombre de degrés que tu devras tourner. '
        Course_4_Artist_For_Loops_11a_b: 'À chaque fois, tu devras avancer de 10 fois
          la longueur du nombre de côtés actuel. '
      Course 4 Artist For Loops 3_authored_hint:
        Course_4_Artist_For_Loops_3_a: Pour que la boucle ˋpour` entraine ton mouvement,
          assure-toi d’utiliser le ˋcompte` comme distance.
      Course 4 Artist For Loops 4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "**Quel est le plus petit nombre dont tu auras
          besoin ?  \nQuel est le plus grand nombre ?  \nDe combien est l’augmentation
          à chaque fois ?**\n\nCe sont les questions que tu dois te poser pour remplir
          les blancs de la boucle `pour`."
      Course 4 Artist For Loops Challenge_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: La plus grande forme a 19 côtés. La
          plus petite n’en a que deux.
        Course_4_Artist_For_Loops_Challenge_b: La boucle ˋpour` compte de deux en
          deux à chaque fois.
      Course 4 Artist For Loops Challenge_a_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: Le plus grand polygone a 19 côtés.
        Course_4_Artist_For_Loops_Challenge_b: Chaque polygone est incomplet et a
          un côté de moins qu’il devrait avoir.
      Course 4 Artist For Loops inspire_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: La base de ce code est la même que la
          solution du problème précédent...avec quelques changements.
        Course_4_Artist_For_Loops_inspire_b: Essaie une boucle ˋpour` qui va de 3
          à 10, d’1 en 1.
        Course_4_Artist_For_Loops_inspire_c: Il y a deux itérations de la même boucle
          de répétition à l’intérieur de la boucle ˋpour`, mais la seconde répétition
          tourne vers la direction opposée.
        Course_4_Artist_For_Loops_inspire_d: "**Solution :**  \n\n<xml>\n  <block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block
          type=\"controls_for_counter\" inline=\"true\" movable=\"false\">\n      <mutation
          counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block
          type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n
          \       </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">10</title>\n          </block>\n        </value>\n
          \       <value name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration_authored_hint:
        Course_4_Artist_Functions_Inspiration_a: Commence avec le code du casse-tête
          précédent et ajoute un autre ˋtourner à droiteˋ de trois degrés dans la
          boucle de répétition.
        Course_4_Artist_Functions_Inspiration_b: Essaie de tourner de plus de 90 degrés
          en-dehors de la boucle ˋrépéter`, mais toujours à l’intérieur de la boucle
          ˋpour`.
        Course_4_Artist_Functions_Inspiration_c: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">14</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a square 20"></mutation>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">20</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">3</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">100</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Functions challenge_authored_hint:
        Course_4_Artist_Functions_challenge_a: Pour comprendre comment utiliser les
          fonctions, tu dois notamment déterminer celles dont tu as besoin et celles
          dont tu n’as pas besoin.
        Course_4_Artist_Functions_challenge_b: Utilise une boucle ˋpour` puis utilise
          sa variable de compte à l’intérieur d’une boucle ˋrépéter` imbriquée.
        Course_4_Artist_Functions_challenge_c: À chaque itération, tu devrais dessiner
          un carré puis sauter en avant.
        Course_4_Artist_Functions_challenge_d: Tu devras tourner à gauche de 90 degrés
          à l’extérieur de ton ˋrépéter` mais toujours à l’intérieur de la boucle
          ˋpour`.
      Course 4 Artist Inspire_authored_hint:
        Course_4_Artist_Inspire_a: Après avoir terminé un carré, essaie de sauter
          en avant de la moitié de sa longueur avant de tourner et d’en faire un autre.
        Course_4_Artist_Inspire_b: Chaque carré et saut est répété quatre fois (en
          tournant à gauche entre) pour faire une forme de moulin à vent.
        Course_4_Artist_Inspire_c: Chaque moulin à vent est aussi répété 4 fois, avec
          un tournant à droite de **360 / côtés**.
        Course_4_Artist_Inspire_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Vars 13_authored_hint:
        Course_4_Artist_Vars_13_a: Tu as besoin de deux boucles de répétition (une
          dans l’autre) qui se répètent toutes les deux le nombre de `côtés`.
        Course_4_Artist_Vars_13_b: "La partie intérieure de la boucle dessine un octogone
          (tournant vers la gauche).  \n\nAprès, tu dois avancer et tourner à droite
          uniquement dans la boucle extérieure."
        Course_4_Artist_Vars_13_c: Pour que la forme reste de la même taille quand
          le nombre de côtés change, utilise le bloc math pour diviser la longueur
          en pixels par le nombre de côtés.
      Course 4 Artist Vars 6_authored_hint:
        Course_4_Artist_Vars_6_a: Pour dessiner un polygone régulier, tourne de **360
          / côtés** à chaque fois.
      Course 4 Artist Vars 8_authored_hint:
        Course_4_Artist_Vars_8_a: Si tu divises ta longueur de départ par le nombre
          de côtés, la longueur de chaque côté raccourcira à mesure que le nombre
          de côtés augmente.
      Course 4 Bee Params 7_authored_hint:
        notice_pattern: 'Vois-tu un motif dans l’évolution du nombre de nectar ? '
        count_with_for: Note que le nectar monte dans les étapes. Quel type de bloc
          te permet de faire la même chose plusieurs fois en comptant ?
      Course 4 Bee Params 8_authored_hint:
        Course_4_Bee_Params_8_a: Tu peux demander un nombre de miel et un nombre de
          nectar chaque fois. S’il n’y a rien, le nombre peut être 0.
      Course 4 Play Lab Params 2_authored_hint:
        Course_4_Play_Lab_Params_2_a: Tu devras cliquer sur « modifier » sur la fonction
          de saut et la mettre à jour pour qu’elle utilise le paramètre ˋhauteur`.
      Course 4 Play Lab Vars 2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Assure-toi que le nombre pour ˋvitesse_chien`
          est plus grand que ˋvitesse_chat`.
      Course 4 Play Labs For Loops 2_authored_hint:
        Course_4_Play_Labs_For_Loops_2_a: Qu’ajouterais-tu à ta boucle ˋpour` à chaque
          fois pour passer les nombres pairs ?
      Course 4 Playlab For Loops 4b_authored_hint:
        Course_4_Playlab_For_Loops_4b_a: Les drapeaux sont à environ 330 pixels des
          personnages.
        Course_4_Playlab_For_Loops_4b_b: Comment peux-tu faire avancer les personnages
          de 330 pixels avec le même nombre de mouvements mais des nombres de départ
          et de fin différents ?
        Course_4_Playlab_For_Loops_4b_c: Rappelle-toi, peu importe le nombre de passages
          d'un drapeau au dernier pas, tant que chaque personnage atteint le drapeau
          avec le même nombre de pas.
      Course 4 Playlab For Loops 5b_authored_hint:
        Course_4_Playlab_For_Loops_5b_a: Les personnages sont à environ 175 pixels
          du centre.
        Course_4_Playlab_For_Loops_5b_b: Rappelle-toi, le pas suivant d’un personnage
          sera plus long que son dernier, puisque le compte ne fait qu’augmenter.
      Course 4 SCF 1_authored_hint:
        Course_4_SCF_1_a: Chaque hexagone a des côtés de 40 pixels.
        Course_4_SCF_1_b: Il y a un saut de 120 pixels entre chaque hexagone sur chaque
          ligne horizontale.
        Course_4_SCF_1_c: "Avant de dessiner la deuxième rangée d’hexagones, tu dois
          tourner à droite de 60 degrés et sauter en avant de 40 pixels.  \n\nUne
          fois que tu es dans le bon alignement vertical, tu dois retourner ton artiste
          et sauter en arrière de 320 pixels."
        Course_4_SCF_1_d: "Avant de dessiner la troisième rangée d’hexagones, tu dois
          tourner à droite de 60 degrés et sauter en avant de 40 pixels.  \n\nUne
          fois que tu es dans le bon alignement vertical, tu dois retourner ton artiste
          et sauter en arrière de 440 pixels (120 pixels plus loin que ta fonction
          `décaler vers le bas/en avantˋ). "
        Course_4_SCF_1_e: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/forward"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/backward"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">draw a hexagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/backward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">440</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">draw a line of hexagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a hexagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">120</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/forward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">320</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1a_authored_hint:
        Course_4_SCF_1a_a: Rappelle-toi des fonctions du niveau 16.
        Course_4_SCF_1a_b: "Considère ce chemin comme ta route principale :  \n\n![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_c: Envisage d’utiliser une boucle ˋpour`. Pas pour les étapes
          mais comme paramètre de fonction.
        Course_4_SCF_1a_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">left</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">right</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">0</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">21</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathLeft</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">right</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <title name="NAME">get nectar</title>
          <statement name="STACK">
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"></block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1b_authored_hint:
        Course_4_SCF_1b_a: "Note que la forme de tous les points de miel est similaire.
          \ \n\nBon endroit pour une fonction !"
        Course_4_SCF_1b_b: "Regarde cette idée de la façon dont l'abeille pourrait
          voyager :  \n\n![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: Envisage d’utiliser une boucle ˋpour` pour la distance
          que l’abeille traverse.
        Course_4_SCF_1b_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="make honey up and over"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">make honey up and over</title>
          <statement name="STACK">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 2_authored_hint:
        Course_4_SCF_2_a: Chaque octogone a des côtés de 40 pixels.
        Course_4_SCF_2_b: Il y a un saut de 136 pixels entre chaque octogones dans
          chaque ligne horizontale.
        Course_4_SCF_2_c: "Avant de dessiner la deuxième rangée d’octogones, tu dois
          tourner à droite de 45 degrés et sauter en avant de 96 pixels.  \n\nUne
          fois que tu es dans le bon alignement vertical, tu dois retourner ton artiste
          et sauter en arrière de 408 pixels. "
        Course_4_SCF_2_d: |-
          Remarque que comme il y a moins d’octogones dans les rangées paires, tu n’as pas besoin de sauter en arrière pour aller au point de départ des rangées impaires.

          Cela veut dire que tu peux utiliser la même fonction pour toutes les rangées.
        Course_4_SCF_2_e: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw octagons">
          <arg name="numOctagons"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="numOctagons"></arg>
          </mutation>
          <title name="NAME">draw octagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">numOctagons</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw an octagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">136</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">shift down</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">96</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">408</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 3_authored_hint:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: 'C’est une série d’octogones dont les côtés font `compteur`
          pixels de long. '
        Course_4_SCF_3_c: 'Chaque octogone est appelé à l’intérieur d’un boucle ˋpour`
          qui décompte de 200 de 2 en 2. '
        Course_4_SCF_3_d: 'N’oublie pas de tourner de 22,5 degrés à la fin de chaque
          itération. '
        Course_4_SCF_3_e: La variable ˋcompteur` contrôle aussi bien la couleur de
          chaque octogone que la largeur du pinceau.
        Course_4_SCF_3_f: |-
          **Solution :**

          <xml>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="length"></arg>
          </mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw an octagon">
          <arg name="length"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">22.5</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1_authored_hint:
        Course_4_SCFL_1_a: "Jette un œil à cette option pour le mouvement :  \n\n![]
          (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: 'Essaie d’utiliser deux boucles ˋpour` : une pour aller
          vers le haut et obtenir le nectar, et l’autre pour aller vers le bas et
          fabriquer le miel.'
        Course_4_SCFL_1_c: |-
          Note que la boucle ˋpour` a besoin de plusieurs boucles à l’intérieur qui se répètent ˋcompteurˋ fois pour faire le motif d’escalier ascendant.

          L’autre boucle ˋpour` n’a besoin que d’une boucle pour fabriquer ˋcompteur` fois du miel.
        Course_4_SCFL_1_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a_authored_hint:
        Course_4_SCFL_1a_a: Tu devras peut-être avancer plus loin pour utiliser le
          moins de blocs possible.
        Course_4_SCFL_1a_b: "Jette un œil à cette option pour le mouvement :  \n\n![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)"
        Course_4_SCFL_1a_c: Une boucle ˋpour` t’aidera à suivre le même motif, mais
          avec un nombre différent d’étapes. Note que le nombre d’étapes requises
          diminue de 7 à 5 par 1.
        Course_4_SCFL_1a_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b_authored_hint:
        Course_4_SCFL_1b_a: Essaie d’utiliser une boucle ˋpour`.
        Course_4_SCFL_1b_b: "Jette un œil à cette option pour le mouvement :  \n\n![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)"
        Course_4_SCFL_1b_c: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 2_authored_hint:
        Course_4_SCFL_2_a: "Jette un œil à cette option pour le mouvement :  \n\n![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)"
        Course_4_SCFL_2_b: Note qu’il y a trois points pendant chaque itération de
          la boucle ˋpour` où tu t’arrêtes pour interagir avec des objets.
        Course_4_SCFL_2_c: Pendant chaque itération de la boucle ˋfor`, le nombre
          pour chaque objet et lié d’une manière à la variable ˋcompteur`.
        Course_4_SCFL_2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">POWER</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3_authored_hint:
        Course_4_SCFL_3_a: La ˋlargeur du pinceauˋ est 1. Le premier carré a des côtés
          de 50 pixels, et chaque carré est 50 pixels plus large que le précédent.
        Course_4_SCFL_3_b: L’opacité du pinceau est toujours ˋcompteur` / 2.
        Course_4_SCFL_3_c: Après avoir terminé chaque carré, n’oublie pas de sauter
          en arrière, tourner, sauter à nouveau, et de te retourner !
        Course_4_SCFL_3_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4_authored_hint:
        Course_4_SCFL_4_a: Le changement de couleur se produit en utilisant le bloc
          ˋdéfinis la couleur avec rouge, vert, bleu`. Le rouge est toujours de la
          valeur de ˋcompteur`, le vert est toujours ˋ255 - compteur` et le bleu reste
          toujours à exactement 255.
        Course_4_SCFL_4_b: Chaque forme est un carré dont les côtés font ˋcompteur`
          pixels de long, en commençant à 5 px, et en augmentant de 5 px jusqu’à 200
          px.
        Course_4_SCFL_4_c: L’artiste tourne de 15 degrés entre chaque carré.
        Course_4_SCFL_4_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6_authored_hint:
        Course_4_SCFL_6_a: Le changement de couleur se produit en utilisant le bloc
          ˋdéfinis la couleur avec rouge, vert, bleu`. Le rouge est toujours à 255,
          le vert est toujours de la valeur de ˋcompteur` et le bleu est toujours
          à ˋ255 - compteur`.
        Course_4_SCFL_6_b: Le code est beaucoup plus simple que tu pourrais le croire.
          Définis la couleur à l’intérieur de la boucle ˋpour`, avance, puis tourne.
        Course_4_SCFL_6_c: 'La boucle ˋpour` va de 5 à 250 par 2. '
        Course_4_SCFL_6_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7_authored_hint:
        Course_4_SCFL_7_a: Le changement de couleur se produit en utilisant le bloc
          ˋdéfinis la couleur avec rouge, vert, bleu`. Le rouge est défini par ˋcompteur`,
          le vert est à ˋ255 - compteur` et le bleu reste constamment à 255.
        Course_4_SCFL_7_b: 'Ce dessin est réalisé en utilisant deux boucles ˋpour`
          similaires. Une va de 5 à 200 par 2, et l’autre va de 200 à 5 par 2. '
        Course_4_SCFL_7_c: À l’intérieur de chaque boucle ˋpour`, tu avances de 5
          pixels avant de tourner de `360 / compteur`. N’oublie pas de définir la
          largeur du pinceau à ˋcompteur` avant !
        Course_4_SCFL_7_d: Tu devras tourner à gauche de 225 degrés entre les deux
          boucles ˋpour`.
        Course_4_SCFL_7_e: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_number_dropdown">
          <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">225</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1_authored_hint:
        Course_4_SCV_1_a: 'Les variables sont utiles car tu peux les modifier à chaque
          fois avec une boucle. '
        Course_4_SCV_1_b: Ce puzzle a une boucle qui crée le polygone, une boucle
          qui répète le polygone ˋcôtés` fois, et une autre qui recommence après avoir
          ajouté 5 à ˋcôtés`.
        Course_4_SCV_1_c: Utiliser une variable pour ˋcôtés` et une pour ˋlongueur`
          rend le code plus propre car tu peux boucler le même code plusieurs fois
          au lieu de créer une nouvelle copie pour chaque ensemble de nombres.
        Course_4_SCV_1_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2_authored_hint:
        Course_4_SCV_2_a: "L’image entière est faite de 10 de ces « fleurs » :  \n![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)\n
          \       \n...qui sont faites de 10 de ces décagones :  \n![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)"
        Course_4_SCV_2_b: 'Ce dessin utilise des boucles imbriquées (trois de profondeur).
          Toutes les boucles s’exécutent ˋcôtés` fois. '
        Course_4_SCV_2_c: L’artiste tourne à gauche en créant chaque décagone, mais
          tourne à droite dans les deux autres boucles.
        Course_4_SCV_2_d: Pour éviter que les 10 pétales de tes « fleurs » soient
          dessinées au même endroit, assure-toi de sauter de `longueur` / ˋcôtés`
          avant de tourner de 360 / ˋcôtés` degrés dans ta boucle extérieure.
        Course_4_SCV_2_e: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">400</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3_authored_hint:
        Course_4_SCV_3_a: 'Utilise ton bloc math pour ajouter et soustraire à la variable
          ˋpoints` quand les sprites entrent en collision. '
        Course_4_SCV_3_b: Tu peux changer le paramètre de la distance à laquelle le
          sprite bouge à chaque fois qu’une des touches directionnelles est appuyée.
        Course_4_SCV_3_c: |-
          **Solution :**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">points</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">points</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4_authored_hint:
        Course_4_SCV_4_a: Trois variable te seront utiles. Une pour les unités de
          nectar, une pour les unités de miel et une pour la distance à laquelle l’abeille
          devrait bouger à chaque itération.
        Course_4_SCV_4_b: 'Il sera très utile d’utiliser trois boucles à l’intérieur
          de ta boucle principale. Une pour avancer, une pour collecter le nectar
          et une pour fabriquer du miel. '
        Course_4_SCV_4_c: "Jette un œil à cette option pour le mouvement :  \n\n![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)"
        Course_4_SCV_4_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5_authored_hint:
        Course_4_SCV_5_a: |-
          Jette un œil à cette option pour le mouvement :

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: À chaque fois que la boucle s’exécute, les fleurs ont deux
          nectars de moins et l’abeille doit fabriquer un miel supplémentaire.
        Course_4_SCV_5_c: Note qu’au début de la boucle extérieure, l’abeille bouge
          autant de fois qu’il y a de nectar dans la fleur suivante.
        Course_4_SCV_5_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6_authored_hint:
        Course_4_SCV_6_a: |-
          Regarde à quoi une seule forme complète ressemble

          ![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: 'Il sera utile de créer 8 variables : rouge1, vert1, bleu1,
          rouge2, vert2, bleu2, longueur et côtés.'
        Course_4_SCV_6_c: Chacun des 5 côtés de la forme est séparé en morceaux de
          ˋlongueur` / ˋcôtés` où le zig est bleu sarcelle (rvb = 0, 175, 200) et
          le zag est mauve (rvb = 100, 50, 150).
        Course_4_SCV_6_d: 'Pour faire un zig, tourne à gauche de ˋ360` / `côtés`.
          Pour faire un zag, tourne à droite de ˋ360` / ˋcôtés`. '
        Course_4_SCV_6_e: 'Le reste du programme est plutôt habituel pour faire une
          rotation de 360 degrés depuis une forme, sauf que l’on fait chevaucher les
          formes de moitié, donc on doit tourner à droite de ˋ180` / ˋcôtés`, ce qui
          signifie qu’on doit en faire deux fois plus que d’habitude (`côtés` * ˋ2`
          répétitions). '
        Course_4_SCV_6_f: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">100</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">150</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">70</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red1</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green1</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red2</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green2</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">180</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course E MC Conditionals1_authored_hint:
        mc_9_a: Es-tu dans la bonne direction ? ˋdétruire le bloc` mine le bloc en
          face de toi.
        mc_9_b: Ces tâches noires dans le mur sont du charbon ! Utilise ˋdétruire
          le bloc` dessus pour miner le charbon.
        mc_9_c: Utilise ˋplacer la torche` pour placer une torche là où tu te tiens.
      CourseF_PlayLab_vars2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Assure-toi que le nombre pour ˋvitesse_chien`
          est plus grand que ˋvitesse_chat`.
      Dance short test 2_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Tu dois faire en sorte que l’effet de fond change à un moment avant la septième mesure de la chanson.

          *Ce niveau se termine après 10 mesures.*
        challenges: |-
          **Défis optionnels**

          Change l’effet de fond à différents moments de la chanson en connectant le nouveau bloc sous les événements <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"mesures"</title></block></xml>.
      Dance short test_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Tu dois faire en sorte que l’effet de fond change à un moment avant la septième mesure de la chanson.

          *Ce niveau se termine après 10 mesures.*
        challenges: |-
          **Défis optionnels**

          Change l’effet de fond à différents moments de la chanson en connectant le nouveau bloc sous les événements <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"mesures"</title></block></xml>.
      Dance_Party_01_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**
          *Assure-toi qu'un danseur apparaît à l'écran.

          *Ce niveau se termine après 4 mesures.*
        challenges: |-
          **Défis optionnels**
          * Choisis une autre chanson à jouer.
          * Renomme ton danseur.
      Dance_Party_01_low_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**
          *Assure-toi qu'un danseur apparaît à l'écran.

          *Ce niveau se termine après 4 mesures.*
        challenges: |-
          **Défis optionnels**
          * Choisis une autre chanson à jouer.
          * Choisis un autre qui ressemble à un orignal !
          * Renomme ton danseur.
      Dance_Party_02_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**
          * Le danseur doit passer à un nouveau mouvement après 4 mesures.

          *Le niveau se termine après 7 mesures.*
      Dance_Party_03_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Après 6 mesures, ton danseur doit faire une danse différente de ce qu'il faisait après 4 mesures.

          *Le niveau se termine après 11 mesures.*
      Dance_Party_04_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Tu dois faire en sorte que l’effet de fond change à un moment avant la septième mesure de la chanson.

          *Ce niveau se termine après 9 mesures.*
        challenges: |-
          **Défis optionnels**

          Change l’effet de fond à différents moments de la chanson en connectant le nouveau bloc sous les événements <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"mesures"</title></block></xml>.
      Dance_Party_06_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Tu dois avoir au moins deux danseurs.

          *Ce niveau se termine après 5 mesures.*
        challenges: |-
          **Défis optionnels**

          * Ajoute un troisième danseur (ou autant que tu veux !)
          * Fait en sorte que tous tes danseurs exécutent différents mouvements à différents moments de la chanson.
      Dance_Party_08_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Deux danseurs doivent avoir une taille autre que 100.

          *Ce niveau se termine après 5 mesures.*
        challenges: |-
          **Défi optionnel**

          *Expérimente en changeant d'autres propriétés (largeur, hauteur, rotation, etc.)
      Dance_Party_09_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Change la teinte d'au moins un danseur.

          *Ce niveau se termine après 7 mesures.*
      Dance_Party_1_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**
          *Assure-toi qu'un danseur apparaît à l'écran.

          *Ce niveau se termine après 4 mesures.*
        challenges: |-
          **Défis optionnels**
          * Choisis une autre chanson à jouer.
          * Choisis un autre qui ressemble à un orignal !
          * Renomme ton danseur.
      Dance_Party_10_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Les propriétés de deux ou plusieurs danseurs doivent changer.

          *Ce niveau se termine après 7 mesures.*
      Dance_Party_11.5_test_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Sois créatif !

          *Ce niveau se termine après 7 mesures.*
      Dance_Party_11_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Sois créatif !

          *Ce niveau se termine après 7 mesures.*
      Dance_Party_11_5_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Sois créatif !

          *Ce niveau se termine après 7 mesures.*
      Dance_Party_11b_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Utilise le bloc ˋen appuyant sur vers la gaucheˋ pour que le robot fasse un mouvement de danse.

          *Ce niveau se termine après 7 mesures.*
      Dance_Party_2_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**
          * Le danseur doit passer à un nouveau mouvement après 4 mesures.

          *Le niveau se termine après 8 mesures.*
      Dance_Party_3_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Après 6 mesures, ton danseur doit faire une danse différente de ce qu'il faisait après 4 mesures.

          *Le niveau se termine après 12 mesures.*
      Dance_Party_4_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Tu dois faire en sorte que l’effet de fond change à un moment avant la septième mesure de la chanson.

          *Ce niveau se termine après 10 mesures.*
        challenges: |-
          **Défis optionnels**

          Change l’effet de fond à différents moments de la chanson en connectant le nouveau bloc sous les événements <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"mesures"</title></block></xml>.
      Dance_Party_5_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Ton danseur doit effectuer différents mouvements au cours des 12 premières mesures de la chanson.

          *Ce niveau se termine après 12 mesures.*
      Dance_Party_6_authored_hint:
        challenges: |-
          **Défis optionnels**

          * Ajoute un troisième danseur (ou autant que tu veux !)
          * Fait en sorte que tous tes danseurs exécutent différents mouvements à différents moments de la chanson.
      Dance_Party_8_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Deux danseurs doivent avoir une taille autre que 100.

          *Ce niveau se termine après 6 mesures.*
        challenges: |-
          **Défi optionnel**

          *Expérimente en changeant d'autres propriétés (largeur, hauteur, rotation, etc.)
      Dance_Party_9_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Change la teinte d'au moins un danseur.

          *Ce niveau se termine après 8 mesures.*
      Farmer for Authored Hint testing_authored_hint:
        first_hint: |-
          Voici le premier indice.

          Il utilise du *markup* **de** `baseˋ
        second_hint: Voici le second indice. Il utilise une vidéo.
        last_hint: Voici le troisième et dernier indice. Il n’a rien de spécial.
      Farmer for TTS testing_authored_hint:
        first_hint: |-
          Voici le premier indice.

          Il utilise du *markup* **de** `baseˋ
        second_hint: |-
          Voici le deuxième indice. Il utilise une image.

          ![](https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png)
        last_hint: Voici le troisième et dernier indice. Il n’a rien de spécial.
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_b: Si tu appelles les fonctions correctement, voici le
          chemin que tu feras...
        Function_intro_Ryan_a: Dans ton programme, tu pourras appeler une fonction
          autant de fois que tu le voudras !  Essaie de l'appeler deux fois pour résoudre
          ce casse-tête.
      Function intro Ryan_2019_authored_hint:
        Function_intro_Ryan_b: Si tu appelles les fonctions correctement, voici le
          chemin que tu feras...
        Function_intro_Ryan_a: Dans ton programme, tu pourras appeler une fonction
          autant de fois que tu le voudras !  Essaie de l'appeler deux fois pour résoudre
          ce casse-tête.
      HOC 2018 Level_10_authored_hint:
        voyage_aquatic_10a: "Tu vois les **lanternes aquatiques** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png) ?
          Comment les combiner à un bloc conditionnel pour traverser le monument sous-marin ?\n\n"
      HOC 2018 Level_7a_authored_hint:
        aquatic7: Tu peux utiliser le bloc si chemin pour t’aider à faire les bons
          virages.
      HOC 2018 Level_9b_authored_hint:
        voyage_aquatic_9a: Quel manifique récif de corail ! Si le corail bleu est
          dans son bon **droit**, le corail rouge n'est pas non plus très **gauche** !
      HOC Dance 0_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**
          *Assure-toi qu'un danseur apparaît à l'écran.

          *Ce niveau se termine après 4 mesures.*
        challenges: |-
          **Défis optionnels**
          * Choisis une autre chanson à jouer.
          * Choisis un autre qui ressemble à un orignal !
          * Renomme ton danseur.
      HOC Dance 1_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**
          * Le danseur doit passer à un nouveau mouvement après 4 mesures.

          *Le niveau se termine après 8 mesures.*
      HOC Dance 2_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Après 6 mesures, ton danseur doit faire une danse différente de ce qu'il faisait après 4 mesures.

          *Le niveau se termine après 12 mesures.*
      HOC Dance 3_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Tu dois faire en sorte que l’effet de fond change à un moment avant la septième mesure de la chanson.

          *Ce niveau se termine après 10 mesures.*
        challenges: |-
          **Défis optionnels**

          Change l’effet de fond à différents moments de la chanson en connectant le nouveau bloc sous les événements <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"mesures"</title></block></xml>.
      HOC Dance 4_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Ton danseur doit effectuer différents mouvements au cours des 12 premières mesures de la chanson.

          *Ce niveau se termine après 12 mesures.*
      HOC Dance 5_draft_authored_hint:
        challenges: |-
          **Défis optionnels**

          * Ajoute un troisième danseur (ou autant que tu veux !)
          * Fait en sorte que tous tes danseurs exécutent différents mouvements à différents moments de la chanson.
      HOC Dance 6_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Deux danseurs doivent avoir une taille autre que 100.

          *Ce niveau se termine après 6 mesures.*
        challenges: |-
          **Défi optionnel**

          *Expérimente en changeant d'autres propriétés (largeur, hauteur, rotation, etc.)
      HOC Dance 7_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          * Change la teinte d'au moins un danseur.

          *Ce niveau se termine après 8 mesures.*
      HOC Dance 8_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          *Les propriétés de deux ou plusieurs danseurs doivent changer.

          *Ce niveau se termine après 8 mesures.*
      HOC Dance 9_draft_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          *Soyez créatif !

          *Ce niveau se termine après 8 mesures.*
      HOC Dance make group_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**

          *Soyez créatif !

          *Ce niveau se termine après 8 mesures.*
      Harvesting_authored_hint:
        pointer_harvester_test: Quel genre de bloc puis-je utiliser pour vérifier
          quelque chose et prendre une décision ?
      Inspirational Artwork_authored_hint:
        brush_width: Nous avons défini la largeur du pinceau à 1 puis la couleur à
          bleu avant tout.
        double_loop: Essaie de mettre une boucle ˋpourˋ dans une boucle ˋrépéterˋ.
        specifics: |-
          La boucle ˋpourˋ s’exécute de trois à dix-sept pour chacune des six « pétales » avant de créer la suivante, en dessinant des formes ayant uniquement un nombre impair de côtés.

          Le bloc ˋdéfinis alphaˋ utilise la division pour faire s’effacer la couleur au fur et à mesure que le compteur augmente.
        after: Quand tu as fini chaque « pétale », assure-toi d’ˋavancerˋ de 20 pixels
          avant de tourner de 60 degrés.
        solution: |-
          **Solution**


          ![Image des blocs de solution](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      K2.0 sequence 1_authored_hint:
        K2.0_sequence_1_a: Il manque un bloc à ce programme. Peux-tu trouver lequel
          ?
      K2.0 sequence 10_authored_hint:
        K2.0_sequence_10_a: Si tu as du mal, essaie d’abord d’écrire les étapes sur
          une feuille de papier.
      K2.0 sequence 2_authored_hint:
        K2.0_sequence_2_a: Un des blocs déplace l’oiseau dans la mauvaise direction.
          Peux-tu trouver lequel et le remplacer par le bon bloc ?
      K2.0 sequence 3_authored_hint:
        K2.0_sequence_3_a: Si tu as du mal, essaie de trouver le bon chemin puis enlève
          le bloc qui ne correspond pas.
      K2.0 sequence 5_authored_hint:
        K2.0_sequence_5: Ton code final devrait avoir trois blocs de mouvement.
      K2.0 sequence 6_authored_hint:
        K2.0_sequence_6_a: Il y a 1 bloc que tu dois ajouter pour faire avancer l’oiseau
          vers le cochon.
        K2.0_sequence_6_b: Si tu ne trouves pas quoi faire, essaie de dessiner le
          casse-tête sur du papier et trace un chemin avec ton doigt pour voir dans
          quelle direction te déplacer.
      K2.0 sequence 7_authored_hint:
        K2.0_sequence_7_a: Si tu es bloqué, essaie de dessiner l’image sur du papier
          pour voir comment l’oiseau devrait se déplacer.
      K2.0 sequence 8_authored_hint:
        K2.0_sequence_8_a: Bloqué ? Essaie de tracer du doigt le chemin de l’oiseau.
      K2.0 sequence 9_authored_hint:
        K2.0_sequence_9_a: Si tu as du mal, essaie d’abord d’écrire les étapes sur
          une feuille de papier.
      K2.0 sequence FP_authored_hint:
        K2.0_sequence_FP_a: Si le chemin ne semble pas clair, trace du doigt un chemin
          de l’oiseau au cochon.
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: Essaie de faire construire des ponts à l'Agent afin
          qu'Alex ou Steve puissent se déplacer au-delà des bords de la carte !
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: Utilise les touches directionnelles pour diriger le
          joueur dans la maison. Termine sur le carré orange pour gagner.
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: Fais glisser un bloc ˋavancerˋ depuis la boite à outils
          vers l'espace de travail et place-le en dessous du bloc ˋquand l’exécution commenceˋ.
        MC_HOC_2017_01_RETRY_b: N'oublie pas de cliquer sur « Démarrer » pour que
          l'Agent exécute le code.
        MC_HOC_2017_01_RETRY_c: Une fois que l'Agent a exécuté tout le code, tu peux
          déplacer le joueur avec les touches directionnelles !
      MC_HOC_2017_01_RETRY_2019_authored_hint:
        MC_HOC_2017_01_RETRY_a: Fais glisser un bloc ˋavancerˋ depuis la boite à outils
          vers l'espace de travail et place-le en dessous du bloc ˋquand l’exécution commenceˋ.
        MC_HOC_2017_01_RETRY_b: N'oublie pas de cliquer sur « Démarrer » pour que
          l'Agent exécute le code.
        MC_HOC_2017_01_RETRY_c: Une fois que l'Agent a exécuté tout le code, tu peux
          déplacer le joueur avec les touches directionnelles !
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: Fais avancer l'Agent de deux cases en avant pour qu'il
          se tienne sur la plaque de détection. Cela ouvrira la porte pour ton joueur.
        MC_HOC_2017_02_Cole_b: "Appuie sur « Démarrer » ! \nTu peux exécuter ton code
          même s’il n'est pas correct. Exécute et recommence ton code jusqu'à trouver
          ce qui ne va pas."
        MC_HOC_2017_02_Cole_c: Une fois que l'Agent a ouvert la porte, utilise les
          touches directionnelles pour déplacer le joueur sur la carte !
        MC_HOC_2017_02_Cole_d: Assure-toi que l’Agent suit le chemin sur la carte
          !
      MC_HOC_2017_02_Cole_2019_authored_hint:
        MC_HOC_2017_02_Cole_a: Fais avancer l'Agent de deux cases en avant pour qu'il
          se tienne sur la plaque de détection. Cela ouvrira la porte pour ton joueur.
        MC_HOC_2017_02_Cole_b: "Appuie sur « Démarrer » ! \nTu peux exécuter ton code
          même s’il n'est pas correct. Exécute et recommence ton code jusqu'à trouver
          ce qui ne va pas."
        MC_HOC_2017_02_Cole_c: Une fois que l'Agent a ouvert la porte, utilise les
          touches directionnelles pour déplacer le joueur sur la carte !
        MC_HOC_2017_02_Cole_d: Assure-toi que l’Agent suit le chemin sur la carte
          !
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: Fais avancer l'Agent de deux cases en avant pour qu'il
          se tienne sur la plaque de détection. Cela ouvrira la porte pour ton joueur.
        MC_HOC_2017_02_Cole_b: "Appuie sur « Démarrer l'Agent » ! \nTu peux exécuter
          votre code même si ce n'est pas correct. Exécute et réinitialise ton code
          jusqu'à trouver ce qui ne va pas."
        MC_HOC_2017_02_Cole_c: Une fois que l'Agent a ouvert la porte, utilise les
          touches directionnelles pour déplacer le joueur sur le carré orange.
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: Une fois que l'Agent est placé sur la plaque de détection,
          utilise les touches directionnelles pour déplacer le joueur jusqu'à la boussole !
        MC_HOC_2017_03_Cole_b: Le code semble trop long ?  Essaie de le raccourcir
          en utilisant une boucle ˋrépéterˋ !
      MC_HOC_2017_03_Cole_2019_authored_hint:
        MC_HOC_2017_03_Cole_a: Une fois que l'Agent est placé sur la plaque de détection,
          utilise les touches directionnelles pour déplacer le joueur jusqu'à la boussole !
        MC_HOC_2017_03_Cole_b: Le code semble trop long ?  Essaie de le raccourcir
          en utilisant une boucle ˋrépéterˋ !
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: "Traverser ces deux plaques de détection ouvrira
          le chemin pour le joueur. \n![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)"
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Utilise le bloc ˋtourner à droiteˋ pour changer
          l''orientation de l’agent '
        MC_HOC_2017_04POINT5_RYAN_a: Pour permettre à Alex ou Steve d'atteindre la
          hache, il suffit que l'Agent soit sur la première plaque de détection.
      MC_HOC_2017_04POINT5_RYAN_2019_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Utilise le bloc ˋtourner à droiteˋ pour changer
          l''orientation de l’agent '
        MC_HOC_2017_04POINT5_RYAN_a: Pour permettre à Alex ou Steve d'atteindre la
          hache, il suffit que l'Agent soit sur la première plaque de détection.
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: L'agent a besoin d’ˋavancerˋ 7 fois.  Comment peux-tu
          faire cela en utilisant une boucle ˋrépéterˋ ?
        MC_HOC_2017_04_Cole_c: "Appuie sur « Démarrer » ! \nTu peux exécuter ton code
          même s’il n'est pas correct. Exécute et recommence ton code jusqu'à trouver
          ce qui ne va pas."
        MC_HOC_2017_04_Cole_b: Une fois que l'Agent est sur la plaque de détection,
          cela ouvrira la porte pour le joueur.
      MC_HOC_2017_04_Cole_2019_authored_hint:
        MC_HOC_2017_04_Cole_a: L'agent a besoin d’ˋavancerˋ 7 fois.  Comment peux-tu
          faire cela en utilisant une boucle ˋrépéterˋ ?
        MC_HOC_2017_04_Cole_c: "Appuie sur « Démarrer » ! \nTu peux exécuter ton code
          même s’il n'est pas correct. Exécute et recommence ton code jusqu'à trouver
          ce qui ne va pas."
        MC_HOC_2017_04_Cole_b: Une fois que l'Agent est sur la plaque de détection,
          cela ouvrira la porte pour le joueur.
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: Savais-tu que tu peux placer plusieurs bouts de code
          à l'intérieur d'une boucle ? Essaie d’avancer **et** de placer une planche
          à l'intérieur d'une boucle ˋrépéterˋ pour résoudre ce casse-tête.
        MC_HOC_2017_05_Cole_b: Fais traverser la rivière à l’Agent en construisant
          un pont.
      MC_HOC_2017_05_Cole_2019_authored_hint:
        MC_HOC_2017_05_Cole_a: Savais-tu que tu peux placer plusieurs bouts de code
          à l'intérieur d'une boucle ? Essaie d’avancer **et** de placer une planche
          à l'intérieur d'une boucle ˋrépéterˋ pour résoudre ce casse-tête.
        MC_HOC_2017_05_Cole_b: Fais traverser la rivière à l’Agent en construisant
          un pont.
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: Savais-tu que tu peux placer plusieurs bouts de code
          à l'intérieur d'une boucle ?  Essaie de placer une planche **et** d’avancer
          à l'intérieur d'une boucle ˋrépéterˋ pour résoudre ce casse-tête.
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: Combien de fois cette boucle va-t-elle se répéter ?  Combien
          de fois *devrait*-elle se répéter ?
        MC_HOC_2017_06_Cole_b: 'Aide l’Agent à construire un pont pour traverser l’eau
          ! '
      MC_HOC_2017_06_Cole_2019_authored_hint:
        MC_HOC_2017_06_Cole_a: Combien de fois cette boucle va-t-elle se répéter ?  Combien
          de fois *devrait*-elle se répéter ?
        MC_HOC_2017_06_Cole_b: 'Aide l’Agent à construire un pont pour traverser l’eau
          ! '
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: Essaie de placer plusieurs instructions à l'intérieur
          d'une boucle ˋrépéterˋ !
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_c: Tout ce que tu as à faire faire à l’Agent est de dégager
          le chemin vers le wagonnet.
        MC_HOC_2017_07_Cole_a: Pour résoudre ce casse-tête, découvre à quoi sert la
          fonction ˋsupprimer obstacleˋ. Appelle-la autant de fois que nécessaire
          en utilisant le petit bloc vert ˋsupprimer obstacleˋ depuis la boite à outils.
        MC_HOC_2017_07_Cole_b: Essaie de mélanger les blocs de fonctions avec d'autres
          blocs de la boite à outils pour résoudre ce casse-tête.
      MC_HOC_2017_07_Cole_2019_authored_hint:
        MC_HOC_2017_07_Cole_c: Tout ce que tu as à faire faire à l’Agent est de dégager
          le chemin vers le wagonnet.
        MC_HOC_2017_07_Cole_a: Pour résoudre ce casse-tête, découvre à quoi sert la
          fonction ˋsupprimer obstacleˋ. Appelle-la autant de fois que nécessaire
          en utilisant le petit bloc vert ˋsupprimer obstacleˋ depuis la boite à outils.
        MC_HOC_2017_07_Cole_b: Essaie de mélanger les blocs de fonctions avec d'autres
          blocs de la boite à outils pour résoudre ce casse-tête.
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: "Appuie sur « Démarrer l'Agent » ! \nTu peux exécuter
          votre code même si ce n'est pas correct. Exécute et réinitialise ton code
          jusqu'à trouver ce qui ne va pas."
        MC_HOC_2017_08_RY_b: Il existe de NOMBREUSES manières de résoudre ce casse-tête.  Essayes-en
          quelques-unes !
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: "Appuie sur « Démarrer l'Agent » ! \nTu peux exécuter
          votre code même si ce n'est pas correct. Exécute et réinitialise ton code
          jusqu'à trouver ce qui ne va pas."
        MC_HOC_2017_08_RY_b: Il existe de NOMBREUSES manières de résoudre ce casse-tête.  Essayes-en
          quelques-unes !
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: Utilise des fonctions pour résoudre plus facilement
          ce casse-tête !
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_b: Tu ne sais pas où aller ? Regarde si tu peux trouver
          la ligne en pointillés !
        MC_HOC_2017_10_Cole_a: Utilise des fonctions pour résoudre plus facilement
          ce casse-tête !
      MC_HOC_2017_10_RETRY_2019_authored_hint:
        MC_HOC_2017_10_Cole_b: Tu ne sais pas où aller ? Regarde si tu peux trouver
          la ligne en pointillés !
        MC_HOC_2017_10_Cole_a: Utilise des fonctions pour résoudre plus facilement
          ce casse-tête !
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: Essaie de faire construire des ponts à l'Agent afin
          qu'Alex ou Steve puissent se déplacer au-delà des bords de la carte.
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: "Traverser ces deux plaques de détection ouvrira
          le chemin pour le joueur. \n![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)"
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: "Appuie sur « Démarrer » ! \nTu peux exécuter ton code
          même s’il n'est pas correct. Exécute et recommence ton code jusqu'à trouver
          ce qui ne va pas."
        MC_HOC_2017_08_RY_b: Il existe de NOMBREUSES manières de résoudre ce casse-tête.  Essayes-en
          quelques-unes !
        MC_HOC_2017_08_RY_c: Essaie de suivre la ligne en pointillés pour un chemin
          simple à travers la lave.
      MC_HOC_2017_Ali_2019_authored_hint:
        MC_HOC_2017_08_RY_a: "Appuie sur « Démarrer » ! \nTu peux exécuter ton code
          même s’il n'est pas correct. Exécute et recommence ton code jusqu'à trouver
          ce qui ne va pas."
        MC_HOC_2017_08_RY_b: Il existe de NOMBREUSES manières de résoudre ce casse-tête.  Essayes-en
          quelques-unes !
        MC_HOC_2017_08_RY_c: Essaie de suivre la ligne en pointillés pour un chemin
          simple à travers la lave.
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: Essaie de faire construire des ponts à l'Agent afin
          qu'Alex ou Steve puissent se déplacer au-delà des bords de la carte !
      MC_HOC_2017_FP20x20_2019_authored_hint:
        MC_HOC_2017_13_Cole_a: Essaie de faire construire des ponts à l'Agent afin
          qu'Alex ou Steve puissent se déplacer au-delà des bords de la carte !
      NEW Course 4 Artist Functions 13_authored_hint:
        NEW_Course_4_Artist_Functions_13_a: Essaie de modifier la fonction ˋdessiner
          une ligne de carrés` pour ne pas avoir à l’appeler deux fois.
        NEW_Course_4_Artist_Functions_13_c: Quel bout de code devrais-tu utiliser
          si tu voulais faire une étoile avec des lignes au lieu de boites ?
      NEW Course 4 Artist Functions 4_authored_hint:
        NEW_Course_4_Artist_Functions_4_a: Tu devras utiliser un bloc ˋtourner à droite
          de 120 degrés` après chaque carré.
      NEW Course 4 Artist Functions 9_authored_hint:
        NEW_Course_4_Artist_Functions_9_a: Essaie d’exécuter le code avant d’ajouter
          des blocs. Qu’est-ce qui rend le dessin un peu bizarre ?
        NEW_Course_4_Artist_Functions_9_b: Si tu ne parviens pas à trouver ce qui
          ne va pas, essaie de ralentir l’artiste en bougeant le curseur à gauche.
      NEW Course 4 Artist Params 11_authored_hint:
        NEW_Course_4_Artist_Params_11_a: Il y a plus d’un nombre qui doit être remplacé
          par une variable à l’intérieur de la fonction.
      NEW Course 4 Artist Params 13_authored_hint:
        NEW_Course_4_Artist_Params_13_a: 'Tu devras diviser le *périmètre* par le
          nombre de côtés pour que les formes gardent la même taille. '
      NEW Course 4 Artist Params inspire_authored_hint:
        brush_width: Nous avons défini la largeur du pinceau à 1 puis la couleur à
          bleu avant tout.
        double_loop: Essaie de mettre une boucle ˋpourˋ dans une boucle ˋrépéterˋ.
        specifics: |-
          La boucle ˋpourˋ s’exécute de trois à dix-sept pour chacune des six « pétales » avant de créer la suivante, en dessinant des formes ayant uniquement un nombre impair de côtés.

          Le bloc ˋdéfinis alphaˋ utilise la division pour faire s’effacer la couleur au fur et à mesure que le compteur augmente.
        after: Quand tu as fini chaque « pétale », assure-toi d’ˋavancerˋ de 20 pixels
          avant de tourner de 60 degrés.
        solution: |-
          **Solution**


          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">17</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw a polygon">
          <arg name="length"></arg>
          <arg name="sides"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">30</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">20</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      NEW Course 4 Bee For Loops 8_authored_hint:
        NEW_Course_4_Bee_For_Loops_8_a: "Si ta boucle compte, l’augmentation est ajouté
          à ta variable compteur à chaque fois. \n\nQue dois-tu ajouter à chaque nombre
          pour avoir le nombre qui suit ?"
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: Essaie de faire construire des ponts à l'Agent afin
          qu'Alex ou Steve puissent se déplacer au-delà des bords de la carte.
      Overworld Avoid Monsters_authored_hint:
        mc_8_a: Il y a plusieurs chemins que tu peux emprunter. Lequel est plus court
          ?
        mc_8_b: Utilise des boucles ˋrépéter` pour simplifier ton code.
        mc_8_c: Ton but est d’atteindre la porte de la maison en haut de l’écran.
      Overworld Avoid Monsters_2018_authored_hint:
        mc_8_a: Il y a plusieurs chemins que tu peux emprunter. Lequel est plus court
          ?
        mc_8_b: Utilise des boucles ˋrépéter` pour simplifier ton code.
        mc_8_c: Ton but est d’atteindre la porte de la maison en haut de l’écran.
      Overworld Avoid Monsters_2019_authored_hint:
        mc_8_a: Il y a plusieurs chemins que tu peux emprunter. Lequel est plus court
          ?
        mc_8_b: Utilise des boucles ˋrépéter` pour simplifier ton code.
        mc_8_c: Ton but est d’atteindre la porte de la maison en haut de l’écran.
      Overworld Chop Tree_authored_hint:
        mc_2_a: 'Tu dois ˋavancer` deux fois pour être devant l’arbre.  '
        mc_2_b: La commande ˋdétruire le bloc` coupe l’arbre devant toi.
      Overworld Chop Tree_2018_authored_hint:
        mc_2_a: 'Tu dois ˋavancer` deux fois pour être devant l’arbre.  '
        mc_2_b: La commande ˋdétruire le bloc` coupe l’arbre devant toi.
      Overworld Chop Tree_2019_authored_hint:
        mc_2_a: 'Tu dois ˋavancer` deux fois pour être devant l’arbre.  '
        mc_2_b: La commande ˋdétruire le bloc` coupe l’arbre devant toi.
      Overworld Chop Trees_authored_hint:
        mc_4_a: 'Tu peux couper les arbres dans n’importe quel ordre. Quel chemin
          prend le moins de blocs ?  '
        mc_4_b: La commande ˋdétruire le bloc` coupe l’arbre devant toi.
      Overworld Chop Trees_2018_authored_hint:
        mc_4_a: 'Tu peux couper les arbres dans n’importe quel ordre. Quel chemin
          prend le moins de blocs ?  '
        mc_4_b: La commande ˋdétruire le bloc` coupe l’arbre devant toi.
      Overworld Chop Trees_2019_authored_hint:
        mc_4_a: 'Tu peux couper les arbres dans n’importe quel ordre. Quel chemin
          prend le moins de blocs ?  '
        mc_4_b: La commande ˋdétruire le bloc` coupe l’arbre devant toi.
      Overworld House Frame Chosen_authored_hint:
        mc_6_a: Clique la flèche du bloc ˋplacer` pour choisir ce que tu veux placer.
        mc_6_b: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
        mc_6_c: Tu peux mettre plus d’un bloc à l’intérieur d’une boucle `répéter`.
      Overworld House Frame Chosen_2018_authored_hint:
        mc_6_a: Clique la flèche du bloc ˋplacer` pour choisir ce que tu veux placer.
        mc_6_b: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
        mc_6_c: Tu peux mettre plus d’un bloc à l’intérieur d’une boucle `répéter`.
      Overworld House Frame Chosen_2019_authored_hint:
        mc_6_a: Clique la flèche du bloc ˋplacer` pour choisir ce que tu veux placer.
        mc_6_b: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
        mc_6_c: Tu peux mettre plus d’un bloc à l’intérieur d’une boucle `répéter`.
      Overworld Move to Sheep_authored_hint:
        mc_1_a: 'Le bloc `avancer` est en haut de la boite à outils.  '
        mc_1_b: 'Assure-toi que les deux blocs `avancer` sont connectés au bloc ˋquand
          l’exécution commence`.  '
      Overworld Move to Sheep_2018_authored_hint:
        mc_1_a: 'Le bloc `avancer` est en haut de la boite à outils.  '
        mc_1_b: 'Assure-toi que les deux blocs `avancer` sont connectés au bloc ˋquand
          l’exécution commence`.  '
      Overworld Move to Sheep_2019_authored_hint:
        mc_1_a: 'Le bloc `avancer` est en haut de la boite à outils.  '
        mc_1_b: 'Assure-toi que les deux blocs `avancer` sont connectés au bloc ˋquand
          l’exécution commence`.  '
      Overworld Place Wall_authored_hint:
        mc_5_a: Utilise le bloc ˋplacer` d’abord, puis le bloc ˋavancer`.
        mc_5_b: Assure-toi que les deux blocs sont à l’intérieur de la boucle ˋrépéter`
          pour exécuter le code plus d’une fois.
        mc_5_c: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
      Overworld Place Wall_2018_authored_hint:
        mc_5_a: Utilise le bloc ˋplacer` d’abord, puis le bloc ˋavancer`.
        mc_5_b: Assure-toi que les deux blocs sont à l’intérieur de la boucle ˋrépéter`
          pour exécuter le code plus d’une fois.
        mc_5_c: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
      Overworld Place Wall_2019_authored_hint:
        mc_5_a: Utilise le bloc ˋplacer` d’abord, puis le bloc ˋavancer`.
        mc_5_b: Assure-toi que les deux blocs sont à l’intérieur de la boucle ˋrépéter`
          pour exécuter le code plus d’une fois.
        mc_5_c: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
      Overworld Plant Crops_authored_hint:
        mc_7_a: Utiliser le bloc ˋplanter culture` pour planter une culture à l’espace
          où tu te tiens.
        mc_7_b: Les deux rangées brun foncé à côté de l’eau doivent être cultivées.
        mc_7_c: Tu peux mettre plus d’un bloc à l’intérieur d’une boucle `répéter`.
      Overworld Plant Crops_2018_authored_hint:
        mc_7_a: Utiliser le bloc ˋplanter culture` pour planter une culture à l’espace
          où tu te tiens.
        mc_7_b: Les deux rangées brun foncé à côté de l’eau doivent être cultivées.
        mc_7_c: Tu peux mettre plus d’un bloc à l’intérieur d’une boucle `répéter`.
      Overworld Plant Crops_2019_authored_hint:
        mc_7_a: Utiliser le bloc ˋplanter culture` pour planter une culture à l’espace
          où tu te tiens.
        mc_7_b: Les deux rangées brun foncé à côté de l’eau doivent être cultivées.
        mc_7_c: Tu peux mettre plus d’un bloc à l’intérieur d’une boucle `répéter`.
      Overworld Powered Minecart_authored_hint:
        mc_13_a: Utilise ˋplacer rail` pour placer un rail sur le carré sur lequel
          tu te tiens.
        mc_13_b: Utilise des boucles ˋrépéter` pour raccourcir ton code.
      Overworld Powered Minecart_2018_authored_hint:
        mc_13_a: Utilise ˋplacer rail` pour placer un rail sur le carré sur lequel
          tu te tiens.
        mc_13_b: Utilise des boucles ˋrépéter` pour raccourcir ton code.
      Overworld Powered Minecart_2019_authored_hint:
        mc_13_a: Utilise ˋplacer rail` pour placer un rail sur le carré sur lequel
          tu te tiens.
        mc_13_b: Utilise des boucles ˋrépéter` pour raccourcir ton code.
      Overworld Shear Sheep_authored_hint:
        mc_3_a: 'Le bloc ˋtondre` tond le mouton devant toi. Es-tu en face du mouton
          ?  '
        mc_3_b: 'Si tu dois changer ton orientation, utilise un bloc ˋtourner`.  '
        mc_3_c: 'N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.  '
      Overworld Shear Sheep_2018_authored_hint:
        mc_3_a: 'Le bloc ˋtondre` tond le mouton devant toi. Es-tu en face du mouton
          ?  '
        mc_3_b: 'Si tu dois changer ton orientation, utilise un bloc ˋtourner`.  '
        mc_3_c: 'N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.  '
      Overworld Shear Sheep_2019_authored_hint:
        mc_3_a: 'Le bloc ˋtondre` tond le mouton devant toi. Es-tu en face du mouton
          ?  '
        mc_3_b: 'Si tu dois changer ton orientation, utilise un bloc ˋtourner`.  '
        mc_3_c: 'N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.  '
      Pattern Bee 1_authored_hint:
        conditional_pointer: |-
          Commence par penser à ça : qu’est-ce qui est différent à chaque étape ? Quel genre de bloc peux-tu utiliser pour prendre une *décision* en fonction de si tu es à une fleur ou un gâteau de miel ?

          ![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: À part fabriquer du miel, vois-tu quelque chose
          d’autre que tu dois faire à chaque gâteau de miel ?
      Planning Farmer_authored_hint:
        conditional_pointer: |-
          Commence par penser à ça : qu’est-ce qui est différent à chaque étape ? Quel genre de bloc peux-tu utiliser pour prendre une *décision* en fonction de si tu es à une fleur ou un gâteau de miel ?

          ![](https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png)
        turn_at_honeycomb_pointer: À part fabriquer du miel, vois-tu quelque chose
          d’autre que tu dois faire à chaque gâteau de miel ?
      Quantum Bee - Ryan_authored_hint:
        test_hint: Ceci est un indice de test.
      Ryan_Demo_authored_hint:
        validation: |-
          **Comment puis-je réussir ce niveau ?**
          * Le danseur doit passer à un nouveau mouvement après 4 mesures.

          *Le niveau se termine après 7 mesures.*
      Tortoise and Hare_authored_hint:
        behavior hint: "Essaie de modifier les comportements ! \n* Quelle valeur contrôle
          la vitesse de chaque sprite ?"
      Underground Avoiding Lava_authored_hint:
        mc_11_a: Tout le code pour vérifier s’il y a de la lave et s’en débarasser
          est en place. Tout ce que tu as à faire est ajouter un bloc pour te déplacer.
        mc_11_b: La commande ˋavancer` devrait-elle être dans l’instruction ˋsiˋ ou
          après ?
      Underground Avoiding Lava_2018_authored_hint:
        mc_11_a: Tout le code pour vérifier s’il y a de la lave et s’en débarasser
          est en place. Tout ce que tu as à faire est ajouter un bloc pour te déplacer.
        mc_11_b: La commande ˋavancer` devrait-elle être dans l’instruction ˋsiˋ ou
          après ?
      Underground Avoiding Lava_2019_authored_hint:
        mc_11_a: Tout le code pour vérifier s’il y a de la lave et s’en débarasser
          est en place. Tout ce que tu as à faire est ajouter un bloc pour te déplacer.
        mc_11_b: La commande ˋavancer` devrait-elle être dans l’instruction ˋsiˋ ou
          après ?
      Underground If Statements_authored_hint:
        mc_12_a: Tu trouveras de la redstone aux endroits avec des tâches rouges.
        mc_12_b: Peux-tu utiliser une boucle ˋrépéter` pour raccourcir ton code ?
        mc_12_c: 'Utilise une instruction ˋsiˋ pour vérifier s’il y a de la lave,
          puis place tes pavés. '
      Underground If Statements_2018_authored_hint:
        mc_12_a: Tu trouveras de la redstone aux endroits avec des tâches rouges.
        mc_12_b: Peux-tu utiliser une boucle ˋrépéter` pour raccourcir ton code ?
        mc_12_c: 'Utilise une instruction ˋsiˋ pour vérifier s’il y a de la lave,
          puis place tes pavés. '
      Underground If Statements_2019_authored_hint:
        mc_12_a: Tu trouveras de la redstone aux endroits avec des tâches rouges.
        mc_12_b: Peux-tu utiliser une boucle ˋrépéter` pour raccourcir ton code ?
        mc_12_c: 'Utilise une instruction ˋsiˋ pour vérifier s’il y a de la lave,
          puis place tes pavés. '
      Underground Iron_authored_hint:
        mc_10_a: Les blocs de fer sont les endroits tâchetés derrière la torche !
          Comment peux-tu les atteindre ?
        mc_10_b: Quand tu te tiens au bord de la lave, utilise ˋplacer pierre taillée
          devant` pour créer un chemin sûr, puis marche dessus !
        mc_10_c: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
      Underground Iron_2018_authored_hint:
        mc_10_a: Les blocs de fer sont les endroits tâchetés derrière la torche !
          Comment peux-tu les atteindre ?
        mc_10_b: Quand tu te tiens au bord de la lave, utilise ˋplacer pierre taillée
          devant` pour créer un chemin sûr, puis marche dessus !
        mc_10_c: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
      Underground Iron_2019_authored_hint:
        mc_10_a: Les blocs de fer sont les endroits tâchetés derrière la torche !
          Comment peux-tu les atteindre ?
        mc_10_b: Quand tu te tiens au bord de la lave, utilise ˋplacer pierre taillée
          devant` pour créer un chemin sûr, puis marche dessus !
        mc_10_c: N’aie pas peur de faire des erreurs ! Exécute le code pour voir ce
          qui se passe, même si tu n’as pas encore résolu le casse-tête.
      Underground Mining Coal_authored_hint:
        mc_9_a: Es-tu dans la bonne direction ? ˋdétruire le bloc` mine le bloc en
          face de toi.
        mc_9_b: Ces tâches noires dans le mur sont du charbon ! Utilise ˋdétruire
          le bloc` dessus pour miner le charbon.
        mc_9_c: Utilise ˋplacer la torche` pour placer une torche là où tu te tiens.
      Underground Mining Coal_2018_authored_hint:
        mc_9_a: Es-tu dans la bonne direction ? ˋdétruire le bloc` mine le bloc en
          face de toi.
        mc_9_b: Ces tâches noires dans le mur sont du charbon ! Utilise ˋdétruire
          le bloc` dessus pour miner le charbon.
        mc_9_c: Utilise ˋplacer la torche` pour placer une torche là où tu te tiens.
      Underground Mining Coal_2019_authored_hint:
        mc_9_a: Es-tu dans la bonne direction ? ˋdétruire le bloc` mine le bloc en
          face de toi.
        mc_9_b: Ces tâches noires dans le mur sont du charbon ! Utilise ˋdétruire
          le bloc` dessus pour miner le charbon.
        mc_9_c: Utilise ˋplacer la torche` pour placer une torche là où tu te tiens.
      Valentine_artist2_01_authored_hint:
        Valentine_artist2_01_a: Chaque côté de l’herbe fait 30 pixels de long. Essaie
          d’utiliser un motif en marches d’escalier.
        Valentine_artist2_01_b: 'Vois-tu des motifs qui se répètent ? Tu devrais utiliser
          deux blocs ˋavancer` et deux différents blocs ˋtourner` dans une boucle. '
        Valentine_artist2_01_c: |-
          Essaie cette boucle

          <xml><block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">30</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      Valentine_artist_01_authored_hint:
        Valentine_artist_01_a: Dans quelle direction l’artiste doit-il être pour bouger
          ? Dans quelle direction doit-il être pour placer un nouvel autocollant lama
          ?
        Valentine_artist_01_b: L’artiste doit placer 10 autocollants lama et tourner
          de 90 degrés à chaque virage.
      Valentine_playlab_01_authored_hint:
        Valentine_playlab_01_a: |-
          Connecte le bloc ˋacteur 1 lancer cœurs rouges vers le bas` à l’événement ˋquand on clique sur l’acteur 1`.

          N’oublie pas de changer ˋgauche` en ˋbas` !
        Valentine_playlab_01_b: Utilise le bloc ˋdéplacer acteur 1 à gauche` en le
          connectant en-dessous de l’événement ˋquand on appuie sur flèche gauche`.
      aE2_authored_hint:
        aE2_a: Remarque que puisque les serviettes font 20 pixels de long, tu devras
          sauter de 20 pixels avant de commencer ta boucle suivante.
      aE3_authored_hint:
        aE3_a: Après avoir exécuté ta ˋboucle imbriquée` du niveau précédent, tu dois
          retourner au début de la ligne.
        aE3_b: "N’oublie pas de descendre l’artiste avant de commencer une nouvelle
          ligne de formes ! \n\nPour descendre l’artiste et le réorienter correctement,
          assure-toi de :\n- Tourner de 90 degrés (pour t’orienter vers le bas)\n-
          Sauter de 20 pixels (pour aller à la nouvelle ligne)\n- Te retourner de
          90 degrés (pour te réorienter vers la droite)"
        aE3_c: Quand tu as fini, tes ˋboucles imbriquées` devraient être de trois
          de profondeur.
        aE3_d: Si ton code devient trop confus, tu peux toujours appuyer sur « Recommencer
          » et réessayer !
      aE3alternate_authored_hint:
        aE3alternate_a: Après avoir exécuté ta ˋboucle imbriquée` du niveau précédent,
          tu dois retourner au début de la ligne.
        aE3alternate_b: "N’oublie pas de descendre l’artiste avant de commencer une
          nouvelle ligne de formes ! \n\nPour descendre l’artiste et le réorienter
          correctement, assure-toi de :\n- Tourner de 90 degrés (pour t’orienter vers
          le bas)\n- Sauter de 20 pixels (pour aller à la nouvelle ligne)\n- Te retourner
          de 90 degrés (pour te réorienter vers la droite)"
        aE3alternate_c: Quand tu as fini, tes ˋboucles imbriquées` devraient être
          de trois de profondeur.
        aE3alternate_d: Si ton code devient trop confus, tu peux toujours appuyer
          sur « Recommencer » et réessayer !
      aE3alternateB_authored_hint:
        aE4alternateB_a: Après avoir exécuté ta ˋboucle imbriquée` du niveau précédent,
          tu dois retourner au début de la ligne.
        aE4alternateB_b: "N’oublie pas de descendre l’artiste avant de commencer une
          nouvelle ligne de formes ! \n\nPour descendre l’artiste et le réorienter
          correctement, assure-toi de :\n- Tourner de 90 degrés (pour t’orienter vers
          le bas)\n- Sauter de 20 pixels (pour aller à la nouvelle ligne)\n- Te retourner
          de 90 degrés (pour te réorienter vers la droite)"
        aE4alternateB_c: Quand tu as fini, tes ˋboucles imbriquées` devraient être
          de trois de profondeur.
        aE4alternateB_d: Si ton code devient trop confus, tu peux toujours appuyer
          sur « Recommencer » et réessayer !
      aE4_authored_hint:
        aE4_a: Après avoir exécuté ta ˋboucle imbriquée` du niveau précédent, tu dois
          retourner au début de la ligne.
        aE4_b: "N’oublie pas de descendre l’artiste avant de commencer une nouvelle
          ligne de formes ! \n\nPour descendre l’artiste et le réorienter correctement,
          assure-toi de :\n- Tourner de 90 degrés (pour t’orienter vers le bas)\n-
          Sauter de 20 pixels (pour aller à la nouvelle ligne)\n- Te retourner de
          90 degrés (pour te réorienter vers la droite)"
        aE4_c: Quand tu as fini, tes ˋboucles imbriquées` devraient être de trois
          de profondeur.
        aE4_d: Si ton code devient trop confus, tu peux toujours appuyer sur « Recommencer
          » et réessayer !
      aE6_authored_hint:
        aE6_a: |-
          S’il y a 180 degrés dans un demi-cercle et que chaque boucle fait tourner l’artiste de 3 degrés, combien de fois devrais-tu boucler pour dessiner la moitié d’un cercle ?

          **180 / 3 = ?**
      aE7_authored_hint:
        aE7_a: Dessine la moitié inférieure d’un cercle puis la moitié supérieure
          d’un cercle pour faire un segment.
        aE7_b: Tu auras besoin de 4 segments pour compléter ce casse-tête.
      aE8_authored_hint:
        aE8_a: "Pour faire un carré de ta ligne, tu devras : \n- dessiner la ligne
          \n- utiliser le coin arrondi\n\nRépète ces étapes 4 fois."
      allHallows2017_authored_hint:
        allHallows2017_a: Attention ! GT pourrait te suivre en vélo et effacer ta
          ligne !
        allHallows2017_g: 'Sarah dit : « Tu as froid ? Viens au coin... Il fait 90
          degrés ! »'
        allHallows2017_c: 'Jordyn dit : « Ne t’arrête pas maintenant ! Crayontinue
          ! »'
        allHallows2017_d: 'Josh dit : « Tu devras retracer tes compétences en codage
          pour résoudre ce casse-tête ! »'
        allHallows2017_e: 'Dani dit : « Je ne suis pas bon en jeux de mots. Essaie
          d’utiliser un bloc de répétition ! »'
        allHallows2017_b: 'Baker dit : « Le crayon Chicago ne fonctionne que sur la
          *ligne verte*. »'
        allHallows2017_f: 'Amy dit : « Tu peux le faire ! Pense "en dehors de la boîte"
          ! »'
      artistDebugVideo1_authored_hint:
        courseA_artist_loops7_a: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
      artistLoopsK2_authored_hint:
        artistLoopsK2_a: Si tu veux que la boucle se répète plus de 4 fois, tu peux
          changer le nombre en haut du bloc.
      artistLoopsK2gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Si tu veux que la boucle se répète plus de 4 fois, tu peux
          changer le nombre en haut du bloc.
      artistLoopsK3_authored_hint:
        artistLoopsK3_a: Essaie d’utiliser ce que tu connais sur les blocs de répétition
          pour résoudre ce casse-tête !
      artistLoopsK4_authored_hint:
        artistLoopsK4_a: Coincé ? Essayez d’exécuter le code pour afficher le bloc
          qui est incorrect.
      artistLoopsK5_authored_hint:
        artistLoopsK5_a: Tous les 4 blocs de départ devraient aller à l’intérieur
          de ton bloc de répétition pour résoudre ce casse-tête.
      artistLoopsK6_authored_hint:
        artistLoopsK6_a: Essaie d’exécuter le code pour trouver un bug.
      artistLoopsK7_authored_hint:
        artistLoopsK7_a: Tous les blocs dont tu as besoin pour ce casse-tête sont
          déjà dans ton espace de travail !
      artistLoopsK8_authored_hint:
        artistLoopsK8_a: Essaie d’exécuter le code pour trouver un bug.
      artistLoopsK9_authored_hint:
        artistLoopsK9_a: Ce problème utilise QUATRE boucles, l’une après l’autre !
      artistLoopsKA_authored_hint:
        artistLoopsKA_a: Utilise le bloc de saut pour avancer sans dessiner une ligne.
      artistLoopsKB_authored_hint:
        artistLoopsKB_a: Pour résoudre ce problème, il devrait y avoir 3 blocs dans
          ta boucle.
      behaviors 1_authored_hint:
        behavior hint: "Essaie de modifier les comportements ! \n\n* Dans quelle direction
          l’oiseau doit-il voler ?"
      behaviors 2_authored_hint:
        behavior hint: "Essaie de modifier les comportements ! \n\n* Dans quelle direction
          l’oiseau doit-il voler ?"
      behaviors 3_authored_hint:
        behavior hint: "Essaie de modifier les comportements ! \n* Quelle valeur contrôle
          la vitesse de chaque sprite ?"
      behaviors 4_authored_hint:
        behavior hint: "Essaie de modifier les comportements ! \n\n* Dans quelle direction
          l’oiseau doit-il voler ?"
      behaviors 5_authored_hint:
        target hint: Tu peux choisir n’importe lequel des quatre jouets. Lequel veut
          l’animal ?
        behavior hint: Modifie le comportement pour résoudre ce casse-tête. Ce sprite
          d’animal doit se déplacer dans deux directions différentes pour aller en
          diagonale.
      behaviors 5a_authored_hint:
        behavior hint: "Essaie de modifier les comportements ! \n* Quelle valeur contrôle
          la vitesse de chaque sprite ?"
      behaviors 6_authored_hint:
        behavior hint: "Essaie de modifier les comportements ! \n* Quelle valeur contrôle
          la vitesse de chaque sprite ?"
      comment_intro_maze_2018_authored_hint:
        courseC_maze_programming4_a: Les commentaires sont aussi utiles lorsque d’autres
          personnes essaient de lire ton code.
        courseC_maze_programming4_b: 'Ajoute un commentaire quand tu changes de direction
          : que se serait-il passé si tu t’étais tourné de l’autre côté ?'
      comment_intro_maze_2018_2019_authored_hint:
        courseC_maze_programming4_a: Les commentaires sont aussi utiles lorsque d’autres
          personnes essaient de lire ton code.
        courseC_maze_programming4_b: 'Ajoute un commentaire quand tu changes de direction
          : que se serait-il passé si tu t’étais tourné de l’autre côté ?'
      course1_artist_loops_challenge1_authored_hint:
        courseA_artist_loops_challenge1_a: |
          Tu peux utiliser des boucles comme celles-ci pour construire les murs et le toit. Essaie de répéter différents blocs.



          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          Crée les tiennes ou clique sur ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) pour te donner des idées !
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge3_authored_hint:
        courseA_artist_loops_challenge2_a: 'Les blocs comme ceux-ci : <xml>  <block
          type="simple_move_up_left"/></xml> feront bouger ton artiste en oblique
          !'
        courseA_artist_loops_challenge2_b: Quand tu as fini le nichoir, ˋsaute` au
          suivant !
        courseA_artist_loops_challenge2_c: Tu auras besoin de BEAUCOUP de blocs dans
          ta boucle pour ce problème.
      course1_artist_loops_challenge4_authored_hint:
        courseB_artist_loops_challenge1_a: 'Les blocs comme ceux-ci : <xml>  <block
          type="simple_move_up_right"/></xml> déplaceront ton artiste en diagonale
          !'
        courseB_artist_loops_challenge1_b: Quand tu finis un des dés, `saute` vers
          le suivant !
        courseB_artist_loops_challenge1_c: 'Tu devras te ˋdéplacer` ou ˋsauter` au-dessus
          des mêmes lignes deux fois. '
      course1_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Essaie de changer les nombres dans chaque
          boucle si quelque chose ne va pas.
        courseA_collector_loops_challenge1_b: Tu n’as pas besoin d’utiliser de boucle
          si tu ne fais quelque chose qu’une fois.
        courseA_collector_loops_challenge1_c: Il y a 6 gemmes sur la droite de la
          grotte, mais tu n’as besoin de bouger et de collecter que 5 fois. Sais-tu
          pourquoi ?
      course1_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: "Tu as besoin d’un seul bloc ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png) pour résoudre ce problème.\n\n"
        courseA_collector_loops_challenge2_a: |-
          Tu peux revenir sur le chemin une deuxième fois avant de te déplacer au Sud.

          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      course1_collector_loops_challenge3_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Commence par boucler les commandes ˋdéplacer vers le sud` et ˋobtenir le trésor`.

          <xml>
          <block type="maze_moveSouth"/><next>
          <block type="collector_collect"/></next>
          </xml>
        courseB_collector_loops_challenge1_a: |
          Le motif du Nord est un peu différent du motif du Sud.

          <xml>
          <block type="collector_collect"/><next>
          <block type="maze_moveNorth"/></next>next>
          </xml>
        courseB_collector_loops_challenge1_c: "Déplace-toi à l’Est entre chaque chemin.\n\n<xml>\n
          \ <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n
          \ </xml>\n\nTu peux faire cela avec seulement 14 blocs. Clique pour un autre
          indice pour voir une solution. \n"
        courseB_collector_loops_challenge1_d: |-
          Essaie ceci !

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4_authored_hint:
        courseB_collector_loops_challenge2_a: Si un problème survient, n’hésite pas
          à recommencer. N’abandonne pas !
        courseB_collector_loops_challenge2_b: |-
          Si tu répètes ce motif, Laurel n’atteindra pas le mur en bas de la grotte !

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Essaie d’utiliser un bloc ˋrépéter`
          pour ramasser la dernière pile de trésors !
        courseB_collector_loops_challenge2_d: |-
          Essaie cette solution :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Certains chemins mènent à de la TNT, si tu
          vas trop loin.
      course1_maze_debugging_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: Tu n’as pas besoin d’ajouter ou de retirer
          des blocs pour résoudre ce problème.
        courseB_maze_seq_challenge2_b: Réorganise les blocs et emprunte le chemin
          du milieu.
      course1_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Essaie de compter les cases avec ton doigt.
          N’oublie pas de ne pas compter la case de départ !
      course1_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: Le chemin le plus court pourrait ne pas être
          le bon cette fois.
        courseB_maze_seq_challenge1_b: Essayez de vous déplacer vers l’ouest pour
          commencer.
      course1_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "Fais apparaître Waddles le pingouin
          quand on clique sur Robin !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Fais apparaître Boo le fantôme quand
          on clique sur Waddles !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Fais apparaître Jayden le monstre poilu
          quand on clique sur Boo !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Fais apparaître Spiff le robot quand
          on clique sur le monstre !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Enfin, fais apparaitre Wendel le Sorcier
          quand on clique sur Spiff !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "Tu peux faire chanter un oiseau.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Tu peux faire biper un robot.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Tu peux faire grogner un monstre mécontent.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      course2_artist_nestedLoops_challenge1_authored_hint:
        courseD_artist_nestedLoops_challenge1_a: Commece par créer une boucle imbriquée
          pour créer quatre octogones. Tourne de 45 degrés pour faire l’octogone.
          Saute puis tourne de 90 degrés après chaque octogone.
        courseD_artist_nestedLoops_challenge1_b: Ajoute du code pour dessiner un triangle
          à l’intérieur de ta boucle imbriquée. Tourne de 120 degrés pour faire ton
          triangle.
        courseD_artist_nestedLoops_challenge1_c: |-
          Utilise une boucle imbriquée :
          - Répète 8 fois
          - Dessine un octogone
          - Dessine un triangle
          - Saute en avant de 50 pixels
          - Tourne à droite de 90 degrés
      course2_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: 'Le rectangle fait 200 pixels de large et
          100 pixels de haut. '
      course2_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "Tu peux mettre des commandes dans un bloc
          ˋrépéter` pour les boucler encore et encore. Essaie donc !\n\n<xml>\n  \n
          \         <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1_authored_hint:
        courseD_bee_conditionals_challenge1_a: |-
          Peux-tu trouver un chemin qui atteint toutes les fleurs et gâteaux de miel sans aller dans les arbres ? Le meilleur chemin est une spirale.

          **Tu peux résoudre ceci sans jamais tourner à gauche.**
      course2_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_b: Utilise des boucles pour ne pas être à court
          de blocs ˋcollecter` !
      course2_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Tu peux utiliser la commande ˋcollecter`
          plus souvent pour collecter les trésors supplémentaires.
      course2_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Tu peux utiliser la commande ˋcollecter`
          plus souvent pour collecter les trésors supplémentaires.
      course2_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_a: Ne pense même pas à essayer sans boucles
          !
        courseC_harvester_loops_challenge1_b: Tu peux répéter ˋavancer` et ˋrécolter
          maïs` autant de fois que nécessaire, puis ˋtourner à droite` dans chaque
          coin.
        courseC_harvester_loops_challenge1_c: |-
          Le meilleur moyen de récolter les quatre premiers épis est d’utiliser un bloc `répéter` à l’intérieur d’un autre bloc ˋrépéter`. Tu peux aussi utiliser ce motif pour le reste du casse-tête !

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      course2_maze_loops_challenge1_authored_hint:
        courseC_maze_loops_challenge1_c: |-
          Si tu arrives aussi loin, tu dois juste ˋtourner à gaucheˋ puis ˋavancer` un peu. Ne laisse pas tomber !

          ![](https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png)
      course2_maze_programming_challenge2_authored_hint:
        courseC_maze_programming_challenge2_a: "*Si tu me fais reculer, assure-toi
          que je suis tourné du bon côté !*"
        courseC_maze_programming_challenge2_b: La solution la plus courte n’utilise
          que 5 blocs, mais elle utilise le bloc ˋrépéter` !
      course2_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Essaie de compter les cases avec ton doigt.
          N’oublie pas de ne pas compter la case de départ !
      course2_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_a: Le chemin le plus court pourrait ne pas être
          le bon cette fois.
        courseB_maze_seq_challenge1_b: Essayez de vous déplacer vers l’ouest pour
          commencer.
      course3_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'Le demi-hexagone a une **longueur de
          30** et tourne à droite de **60 degrés**.  '
        courseE_artist_concept_challenge1_b: 'Le 2/3 de triangle a une **longueur
          de 80** et tourne à droite de **120 degrés**. '
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: Si le casse-tête semble difficile, essaie
          de construire ta fonction peu à peu. Ajoute quelques blocs, puis essaie.
          Ajoutes-en d’autres, puis réessaie. Bientôt, tu y arriveras !
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: Si le casse-tête semble difficile, essaie
          de construire ta fonction peu à peu. Ajoute quelques blocs, puis essaie.
          Ajoutes-en d’autres, puis réessaie. Bientôt, tu y arriveras !
      course3_bee_functions_challenge4_authored_hint:
        courseF_bee_functions_challenge2_b: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_a: "Commence par récupérer DEUX gemmes
          dans chacune des deux premières piles.\n\n![](https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png)\nUse these blocks.\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
      course3_farmer_condLoops_challenge1_authored_hint:
        courseD_farmer_condLoops_challenge1_a: Le bouton ˋÉTAPE` pourrait être très
          utile dans ce problème.
      course3_farmer_condLoops_challenge2_authored_hint:
        courseD_farmer_condLoops_challenge2_a: La quantité de chaque légume dans chaque
          espace varie. Utilise des boucles ˋtant que` pour cela.
      course3_maze_debugging_challenge1_authored_hint:
        courseC_maze_debugging_challenge1_b: Le chemin de Scrat est de forme rectangulaire
          ! Il doit tourner du même côté à chaque fois !
        courseC_maze_debugging_challenge1_c: Si tu es bloqué, tu peux toujours recommencer
          ou enlever tout le code et trouver ton propre chemin !
      course3_maze_debugging_challenge2_authored_hint:
        courseC_maze_debugging_challenge2_a: Un moyen de résoudre ceci est d’ajouter
          plus de pas en avant entre les virages.
        courseC_maze_debugging_challenge2_b: Si tu es bloqué, tu peux toujours recommencer
          ou enlever tout le code et trouver ton propre chemin !
        courseC_maze_debugging_challenge2_c: |-
          Il existe deux chemins différents que tu peux suivre en utilisant juste ˋavancer`, et seulement quatre tours. Si tu trouves un moyen d’utiliser le bloc ˋrépéter`, il peut y en avoir encore plus !

          ![] (https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png)
      course4_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: 'Les variables sont utiles car tu peux
          les modifier à chaque fois avec une boucle. '
        courseF_artist_variables_challenge2_b: Ce puzzle a une boucle qui crée le
          polygone, une boucle qui répète le polygone ˋcôtés` fois, et une autre qui
          recommence après avoir ajouté 5 à ˋcôtés`.
        courseF_artist_variables_challenge2_c: Utiliser une variable pour ˋcôtés`
          et une pour ˋlongueur` rend le code plus propre car tu peux boucler le même
          code plusieurs fois au lieu de créer une nouvelle copie pour chaque ensemble
          de nombres.
        courseF_artist_variables_challenge2_d: |-
          **Solution :**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      course4_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_b: |-
          Regarde combien de maïs est disponible pour la récolte dans chaque case. Vois-tu le motif du compteur ? Le paramètre `longueur` devrait être utilisé pour définir la valeur maximum dans la boucle ˋpour`.

          N’oublie pas de faire retourner le fermier au chemin principal après la récolte !
        courseF_bee_fwp_challenge1_d: |-
          Dans la boucle ˋpour`, tu devras ˋavancer` puis ˋobtenir le nectar` **compteur fois**. Après la boucle, tu peux juste reculer **longueur fois**.

          Tu devras peut-être relire cet indice plusieurs fois pour le comprendre. La partie en **gras** sert à t’indiquer comment utiliser les deux boucles ˋrépéter` dont tu auras besoin.
        courseF_bee_fwp_challenge1_e: |
          **Voici la solution :**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      course4_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_b: "Tu es à court de blocs ˋavancer` ? Essaie d’utiliser
          une *deuxième* boucle ˋpour` dans ton programme principal. \n\n**Remarque
          :** Attention à ne pas confondre ˋcompteur` et ˋcompteur2` dans ton code."
        courseF_bee_fwp_challenge2_c: |-
          **Voici à quoi ta fonction devrait ressembler :**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      course4_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_artist_loops2_authored_hint:
        courseA_artist_loops2_a: Tu n’arrives pas à dessiner une ligne ? Commence
          par attacher des blocs au bloc <xml><block type="when_run"/></xml> pour
          voir ce qui se passe.
        courseA_artist_loops2_b: Utilise ce bloc <xml><block type="simple_move_right"/></xml>
          pour résoudre le casse-tête.
      courseA_artist_loops2_2018_authored_hint:
        courseA_artist_loops2_a: Tu n’arrives pas à dessiner une ligne ? Commence
          par attacher des blocs au bloc <xml><block type="when_run"/></xml> pour
          voir ce qui se passe.
        courseA_artist_loops2_b: Utilise ce bloc <xml><block type="simple_move_right"/></xml>
          pour résoudre le casse-tête.
      courseA_artist_loops2_2019_authored_hint:
        courseA_artist_loops2_a: Tu n’arrives pas à dessiner une ligne ? Commence
          par attacher des blocs au bloc <xml><block type="when_run"/></xml> pour
          voir ce qui se passe.
        courseA_artist_loops2_b: Utilise ce bloc <xml><block type="simple_move_right"/></xml>
          pour résoudre le casse-tête.
      courseA_artist_loops3_authored_hint:
        courseA_artist_loops3_a: Trace lentement du doigt à travers ton programme
          pour voir où il tourne mal.
        courseA_artist_loops3_b: |-
          Tu devras utiliser un bloc comme celui-ci pour résoudre ce casse-tête.

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2018_authored_hint:
        courseA_artist_loops3_a: Trace lentement du doigt à travers ton programme
          pour voir où il tourne mal.
        courseA_artist_loops3_b: |-
          Tu devras utiliser un bloc comme celui-ci pour résoudre ce casse-tête.

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2019_authored_hint:
        courseA_artist_loops3_a: Trace lentement du doigt à travers ton programme
          pour voir où il tourne mal.
        courseA_artist_loops3_b: |-
          Tu devras utiliser un bloc comme celui-ci pour résoudre ce casse-tête.

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops4_authored_hint:
        courseA_artist_loops4_a: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseA_artist_loops4_b: |-
          Comme tu ne peux utiliser qu’un bloc <xml><block type="simple_move_right"/></xml>,

          essaie de le mettre à l’intérieur de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml>.
      courseA_artist_loops4_2018_authored_hint:
        courseA_artist_loops4_a: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseA_artist_loops4_b: |-
          Comme tu ne peux utiliser qu’un bloc <xml><block type="simple_move_right"/></xml>,

          essaie de le mettre à l’intérieur de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml>.
      courseA_artist_loops4_2019_authored_hint:
        courseA_artist_loops4_a: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseA_artist_loops4_b: |-
          Comme tu ne peux utiliser qu’un bloc <xml><block type="simple_move_right"/></xml>,

          essaie de le mettre à l’intérieur de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml>.
      courseA_artist_loops5_authored_hint:
        courseA_artist_loops5_a: Essaie d’utiliser ce que tu as appris sur les blocs
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> pour résoudre ce casse-tête !
        courseA_artist_loops5_b: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseA_artist_loops5_c: |-
          Comme tu ne peux utiliser qu’un bloc <xml><block type="simple_move_right"/></xml>,

          essaie de le mettre à l’intérieur de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>.
      courseA_artist_loops5_2018_authored_hint:
        courseA_artist_loops5_a: Essaie d’utiliser ce que tu as appris sur les blocs
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> pour résoudre ce casse-tête !
        courseA_artist_loops5_b: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseA_artist_loops5_c: |-
          Comme tu ne peux utiliser qu’un bloc <xml><block type="simple_move_right"/></xml>,

          essaie de le mettre à l’intérieur de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>.
      courseA_artist_loops5_2019_authored_hint:
        courseA_artist_loops5_a: Essaie d’utiliser ce que tu as appris sur les blocs
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> pour résoudre ce casse-tête !
        courseA_artist_loops5_b: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseA_artist_loops5_c: |-
          Comme tu ne peux utiliser qu’un bloc <xml><block type="simple_move_right"/></xml>,

          essaie de le mettre à l’intérieur de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>.
      courseA_artist_loops6_authored_hint:
        courseA_artist_loops6_a: Tu ne trouves pas comment faire la colline ? Essaie
          de jouer un peu avec les blocs pour voir ce qu’ils dessinent.
        courseA_artist_loops6_b: Tu auras besoin de 2 blocs dans 2 directions pour
          résoudre ce casse-tête.
      courseA_artist_loops6_2018_authored_hint:
        courseA_artist_loops6_a: Tu ne trouves pas comment faire la colline ? Essaie
          de jouer un peu avec les blocs pour voir ce qu’ils dessinent.
        courseA_artist_loops6_b: Tu auras besoin de 2 blocs dans 2 directions pour
          résoudre ce casse-tête.
      courseA_artist_loops6_2019_authored_hint:
        courseA_artist_loops6_a: Tu ne trouves pas comment faire la colline ? Essaie
          de jouer un peu avec les blocs pour voir ce qu’ils dessinent.
        courseA_artist_loops6_b: Tu auras besoin de 2 blocs dans 2 directions pour
          résoudre ce casse-tête.
      courseA_artist_loops7_authored_hint:
        courseA_artist_loops7_a: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
        courseA_artist_loops7_b: Écris d’abord le code pour une vague, puis répète-le
          pour dessiner les deux autres.
        courseA_artist_loops7_c: |-
          N’oublie pas que tu peux mettre plus d’un bloc dans une boucle <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_2018_authored_hint:
        courseA_artist_loops7_a: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
        courseA_artist_loops7_b: Écris d’abord le code pour une vague, puis répète-le
          pour dessiner les deux autres.
        courseA_artist_loops7_c: |-
          N’oublie pas que tu peux mettre plus d’un bloc dans une boucle <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">???</title>
          </block></xml>.
      courseA_artist_loops7_2019_authored_hint:
        courseA_artist_loops7_a: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
        courseA_artist_loops7_b: Écris d’abord le code pour une vague, puis répète-le
          pour dessiner les deux autres.
        courseA_artist_loops7_c: |-
          N’oublie pas que tu peux mettre plus d’un bloc dans une boucle <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">???</title>
          </block></xml>.
      courseA_artist_loops7_forVideo_authored_hint:
        courseA_artist_loops7_a: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
        courseA_artist_loops7_b: Écris d’abord le code pour une vague, puis répète-le
          pour dessiner les deux autres.
        courseA_artist_loops7_c: |-
          N’oublie pas que tu peux mettre plus d’un bloc dans une boucle <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops8_authored_hint:
        courseA_artist_loops8_a: Essaie d’exécuter le code pour voir ce qui a été
          écrit pour toi.
        courseA_artist_loops8_b: Comment ferais-tu boucler le code qui t’a été donné
          ?
        courseA_artist_loops8_c: |-
          Que fait le code ?
          Qu’est-il censé faire ?
          Qu’est-ce que ça veut dire ?
      courseA_artist_loops8_2018_authored_hint:
        courseA_artist_loops8_a: Essaie d’exécuter le code pour voir ce qui a été
          écrit pour toi.
        courseA_artist_loops8_b: Comment ferais-tu boucler le code qui t’a été donné
          ?
        courseA_artist_loops8_c: |-
          Que fait le code ?
          Qu’est-il censé faire ?
          Qu’est-ce que ça veut dire ?
      courseA_artist_loops8_2019_authored_hint:
        courseA_artist_loops8_a: Essaie d’exécuter le code pour voir ce qui a été
          écrit pour toi.
        courseA_artist_loops8_b: Comment ferais-tu boucler le code qui t’a été donné
          ?
        courseA_artist_loops8_c: |-
          Que fait le code ?
          Qu’est-il censé faire ?
          Qu’est-ce que ça veut dire ?
      courseA_artist_loops9_authored_hint:
        courseA_artist_loops9_a: Ajoute un autre bloc au code qui t’a été donné pour
          dessiner le reste des escaliers.
        courseA_artist_loops9_b: |-
          Le bloc que tu ajoutes devrait être dans la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Si tu n’arrives pas à trouver où mettre la boucle,
          essaie d’écrire ton code étape par étape puis de voir ce qui se répète.
      courseA_artist_loops9_2018_authored_hint:
        courseA_artist_loops9_a: Ajoute un autre bloc au code qui t’a été donné pour
          dessiner le reste des escaliers.
        courseA_artist_loops9_b: |-
          Le bloc que tu ajoutes devrait être dans la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Si tu n’arrives pas à trouver où mettre la boucle,
          essaie d’écrire ton code étape par étape puis de voir ce qui se répète.
      courseA_artist_loops9_2019_authored_hint:
        courseA_artist_loops9_a: Ajoute un autre bloc au code qui t’a été donné pour
          dessiner le reste des escaliers.
        courseA_artist_loops9_b: |-
          Le bloc que tu ajoutes devrait être dans la boucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Si tu n’arrives pas à trouver où mettre la boucle,
          essaie d’écrire ton code étape par étape puis de voir ce qui se répète.
      courseA_artist_loops_challenge2_authored_hint:
        courseA_artist_loops_challenge2_a: Les blocs comme ceux-ci <xml>  <block type="simple_move_up_left"/></xml>
          feront bouger ton artiste en oblique !
        courseA_artist_loops_challenge2_b: Quand tu as fini le nichoir, ˋsaute` au
          suivant !
        courseA_artist_loops_challenge2_c: Tu auras besoin de BEAUCOUP de blocs dans
          ta boucle pour ce problème.
      courseA_artist_loops_challenge2a_authored_hint:
        courseA_artist_loops_challenge2_a: Les blocs comme ceux-ci <xml>  <block type="simple_move_up_left"/></xml>
          feront bouger ton artiste en oblique !
        courseA_artist_loops_challenge2_b: Quand tu as fini une tente, ˋsaute` deux
          fois pour aller à la suivante !
        courseA_artist_loops_challenge2_c: Tous tes blocs devront être dans une boucle
          pour terminer ce casse-tête.
      courseA_artist_loops_challenge2a_2018_authored_hint:
        courseA_artist_loops_challenge2_a: Les blocs comme ceux-ci <xml>  <block type="simple_move_up_left"/></xml>
          feront bouger ton artiste en oblique !
        courseA_artist_loops_challenge2_b: Quand tu as fini une tente, ˋsaute` deux
          fois pour aller à la suivante !
        courseA_artist_loops_challenge2_c: Tous tes blocs devront être dans une boucle
          pour terminer ce casse-tête.
      courseA_artist_loops_challenge2a_2019_authored_hint:
        courseA_artist_loops_challenge2_a: Les blocs comme ceux-ci <xml>  <block type="simple_move_up_left"/></xml>
          feront bouger ton artiste en oblique !
        courseA_artist_loops_challenge2_b: Quand tu as fini une tente, ˋsaute` deux
          fois pour aller à la suivante !
        courseA_artist_loops_challenge2_c: Tous tes blocs devront être dans une boucle
          pour terminer ce casse-tête.
      courseA_bee_seq1_authored_hint:
        courseA_bee_seq1_a: |-
          Utilise ce bloc pour obtenir du nectar une fois que l’abeille trouve une fleur.

          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq12_authored_hint:
        courseA_bee_seq1_a: |-
          Utilise ce bloc pour obtenir du nectar une fois que l’abeille trouve une fleur.

          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_collector_loops1_authored_hint:
        courseA_collector_loops1_a: |-
          Après t’être déplacé sur une case avec un trésor, utilise ce bloc pour le ramasser.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Une solution simple serait de te déplacer vers
          l’Est deux fois, puis d’obtenir le trésor.
      courseA_collector_loops1_2018_authored_hint:
        courseA_collector_loops1_a: |-
          Après t’être déplacé sur une case avec un trésor, utilise ce bloc pour le ramasser.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Une solution simple serait de te déplacer vers
          l’Est deux fois, puis d’obtenir le trésor.
      courseA_collector_loops1_2019_authored_hint:
        courseA_collector_loops1_a: |-
          Après t’être déplacé sur une case avec un trésor, utilise ce bloc pour le ramasser.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Une solution simple serait de te déplacer vers
          l’Est deux fois, puis d’obtenir le trésor.
      courseA_collector_loops2_authored_hint:
        courseA_collector_loops2_a: Tu devras te déplacer avant de pouvoir collecter
          un trésor.
        courseA_collector_loops2_b: |-
          Après t’être déplacé sur une case avec un trésor, utilise ce bloc pour le ramasser.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018_authored_hint:
        courseA_collector_loops2_a: Tu devras te déplacer avant de pouvoir collecter
          un trésor.
        courseA_collector_loops2_b: |-
          Après t’être déplacé sur une case avec un trésor, utilise ce bloc pour le ramasser.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019_authored_hint:
        courseA_collector_loops2_a: Tu devras te déplacer avant de pouvoir collecter
          un trésor.
        courseA_collector_loops2_b: |-
          Après t’être déplacé sur une case avec un trésor, utilise ce bloc pour le ramasser.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3_authored_hint:
        courseA_collector_loops3_a: Essaie d’utiliser une boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> !
        courseA_collector_loops3_b: N’oublie pas que tu peux mettre plus d’1 bloc
          dans une boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>.
      courseA_collector_loops3_2018_authored_hint:
        courseA_collector_loops3_a: Essaie d’utiliser une boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> !
        courseA_collector_loops3_b: N’oublie pas que tu peux mettre plus d’1 bloc
          dans une boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>.
      courseA_collector_loops3_2019_authored_hint:
        courseA_collector_loops3_a: Essaie d’utiliser une boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> !
        courseA_collector_loops3_b: N’oublie pas que tu peux mettre plus d’1 bloc
          dans une boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>.
      courseA_collector_loops4_authored_hint:
        courseA_collector_loops4_a: Pour modifier la distance à laquelle Laurel va,
          modifie le nombre de fois que la boucle s’exécute.
        courseA_collector_loops4_b: N’oublie pas que Laurel doit descendre et collecter
          le trésor après la fin de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> !
      courseA_collector_loops4_2018_authored_hint:
        courseA_collector_loops4_a: Pour modifier la distance à laquelle Laurel va,
          modifie le nombre de fois que la boucle s’exécute.
        courseA_collector_loops4_b: N’oublie pas que Laurel doit descendre et collecter
          le trésor après la fin de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> !
      courseA_collector_loops4_2019_authored_hint:
        courseA_collector_loops4_a: Pour modifier la distance à laquelle Laurel va,
          modifie le nombre de fois que la boucle s’exécute.
        courseA_collector_loops4_b: N’oublie pas que Laurel doit descendre et collecter
          le trésor après la fin de la boucle <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> !
      courseA_collector_loops5_authored_hint:
        courseA_collector_loops5_a: Si tu ne peux pas trouver la réponse tout de suite,
          essaie d’utiliser une feuille de papier pour comprendre de quelles flèches
          tu auras besoin et cherche un motif.
        courseA_collector_loops5_b: 'Essaie de diviser le problème en deux parties
          : se déplacer sur le côté et vers le bas.'
        courseA_collector_loops5_c: Tu devrais commencer par une boucle <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          qui déplace Laurel vers l’Ouest et collecte les trésors.
      courseA_collector_loops5_2018_authored_hint:
        courseA_collector_loops5_a: Si tu ne peux pas trouver la réponse tout de suite,
          essaie d’utiliser une feuille de papier pour comprendre de quelles flèches
          tu auras besoin et cherche un motif.
        courseA_collector_loops5_b: 'Essaie de diviser le problème en deux parties
          : se déplacer sur le côté et vers le bas.'
        courseA_collector_loops5_c: Tu devrais commencer par une boucle <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          qui déplace Laurel vers l’Ouest et collecte les trésors.
      courseA_collector_loops5_2019_authored_hint:
        courseA_collector_loops5_a: Si tu ne peux pas trouver la réponse tout de suite,
          essaie d’utiliser une feuille de papier pour comprendre de quelles flèches
          tu auras besoin et cherche un motif.
        courseA_collector_loops5_b: 'Essaie de diviser le problème en deux parties
          : se déplacer sur le côté et vers le bas.'
        courseA_collector_loops5_c: Tu devrais commencer par une boucle <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          qui déplace Laurel vers l’Ouest et collecte les trésors.
      courseA_collector_loops6_authored_hint:
        courseA_collector_loops6_a: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
        courseA_collector_loops6_b: La solution la plus courte utilise 2 boucles <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          l’une après l’autre.
      courseA_collector_loops6_2018_authored_hint:
        courseA_collector_loops6_a: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
        courseA_collector_loops6_b: La solution la plus courte utilise 2 boucles <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          l’une après l’autre.
      courseA_collector_loops6_2019_authored_hint:
        courseA_collector_loops6_a: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
        courseA_collector_loops6_b: La solution la plus courte utilise 2 boucles <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>,
          l’une après l’autre.
      courseA_collector_loops7_authored_hint:
        courseA_collector_loops7_a: Si tu ne sais pas ce qu’il faut faire ensuite,
          essaie d’exécuter le code pour voir où Laurel se retrouve.
      courseA_collector_loops7_2018_authored_hint:
        courseA_collector_loops7_a: Si tu ne sais pas ce qu’il faut faire ensuite,
          essaie d’exécuter le code pour voir où Laurel se retrouve.
      courseA_collector_loops7_2019_authored_hint:
        courseA_collector_loops7_a: Si tu ne sais pas ce qu’il faut faire ensuite,
          essaie d’exécuter le code pour voir où Laurel se retrouve.
      courseA_collector_loops8_authored_hint:
        courseA_collector_loops8_a: Si tu as du mal à comprendre ce casse-tête, essaie
          d’écrire les mouvements sur une feuille de papier et de rechercher un motif.
        courseA_collector_loops8_b: Essaie de séparer ce casse-tête en 3 problèmes,
          puis d’écrire des boucles pour chacun.
        courseA_collector_loops8_c: N'oublie pas que tu peux écrire une partie de
          code à la fois, puis appuyer sur « Exécuter » pour déterminer ce que tu
          dois faire à partir de là.
      courseA_collector_loops8_2018_authored_hint:
        courseA_collector_loops8_a: Si tu as du mal à comprendre ce casse-tête, essaie
          d’écrire les mouvements sur une feuille de papier et de rechercher un motif.
        courseA_collector_loops8_b: Essaie de séparer ce casse-tête en 3 problèmes,
          puis d’écrire des boucles pour chacun.
        courseA_collector_loops8_c: N'oublie pas que tu peux écrire une partie de
          code à la fois, puis appuyer sur « Exécuter » pour déterminer ce que tu
          dois faire à partir de là.
      courseA_collector_loops8_2019_authored_hint:
        courseA_collector_loops8_a: Si tu as du mal à comprendre ce casse-tête, essaie
          d’écrire les mouvements sur une feuille de papier et de rechercher un motif.
        courseA_collector_loops8_b: Essaie de séparer ce casse-tête en 3 problèmes,
          puis d’écrire des boucles pour chacun.
        courseA_collector_loops8_c: N'oublie pas que tu peux écrire une partie de
          code à la fois, puis appuyer sur « Exécuter » pour déterminer ce que tu
          dois faire à partir de là.
      courseA_collector_loops9_authored_hint:
        courseA_collector_loops9_a: 'Si tu as du mal à repérer où utiliser des boucles,
          essaie de tout coder étape par étape et de rechercher un motif. '
        courseA_collector_loops9_b: Essaie de mettre 2 de tes boucles <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          à l’intérieur d’une autre boucle pour raccourcir ton code !
      courseA_collector_loops9_2018_authored_hint:
        courseA_collector_loops9_a: 'Si tu as du mal à repérer où utiliser des boucles,
          essaie de tout coder étape par étape et de rechercher un motif. '
        courseA_collector_loops9_b: Essaie de mettre 2 de tes boucles <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          à l’intérieur d’une autre boucle pour raccourcir ton code !
      courseA_collector_loops9_2019_authored_hint:
        courseA_collector_loops9_a: 'Si tu as du mal à repérer où utiliser des boucles,
          essaie de tout coder étape par étape et de rechercher un motif. '
        courseA_collector_loops9_b: Essaie de mettre 2 de tes boucles <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          à l’intérieur d’une autre boucle pour raccourcir ton code !
      courseA_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Essaie de changer les nombres dans chaque
          boucle si quelque chose ne va pas.
        courseA_collector_loops_challenge1_b: Tu n’as pas besoin d’utiliser de boucle
          si tu ne fais quelque chose qu’une fois.
        courseA_collector_loops_challenge1_c: Il y a 6 gemmes sur le côté droit de
          la grotte quand tu commences, mais tu n’as besoin de récupérer le trésor
          que 5 fois en allant vers le Sud. Sais-tu pourquoi ?
        courseA_collector_loops_challenge1_d: |-
          Le programme de départ ne récupère pas les 2 dernières gemmes. Essaie d’ajouter ce code tout à la fin :

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2018_authored_hint:
        courseA_collector_loops_challenge1_a: Essaie de changer les nombres dans chaque
          boucle si quelque chose ne va pas.
        courseA_collector_loops_challenge1_b: Tu n’as pas besoin d’utiliser de boucle
          si tu ne fais quelque chose qu’une fois.
        courseA_collector_loops_challenge1_c: Il y a 6 gemmes sur le côté droit de
          la grotte quand tu commences, mais tu n’as besoin de récupérer le trésor
          que 5 fois en allant vers le Sud. Sais-tu pourquoi ?
        courseA_collector_loops_challenge1_d: |-
          Le programme de départ ne récupère pas les 2 dernières gemmes. Essaie d’ajouter ce code tout à la fin :

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2019_authored_hint:
        courseA_collector_loops_challenge1_a: Essaie de changer les nombres dans chaque
          boucle si quelque chose ne va pas.
        courseA_collector_loops_challenge1_b: Tu n’as pas besoin d’utiliser de boucle
          si tu ne fais quelque chose qu’une fois.
        courseA_collector_loops_challenge1_c: Il y a 6 gemmes sur le côté droit de
          la grotte quand tu commences, mais tu n’as besoin de récupérer le trésor
          que 5 fois en allant vers le Sud. Sais-tu pourquoi ?
        courseA_collector_loops_challenge1_d: |-
          Le programme de départ ne récupère pas les 2 dernières gemmes. Essaie d’ajouter ce code tout à la fin :

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: Tu n’as besoin que d’1 bloc pour résoudre
          ce problème.
        courseA_collector_loops_challenge2_a: Tu peux retourner sur le chemin une
          deuxième fois avant de te déplacer vers le Sud.
      courseA_collector_loops_challenge2kp_authored_hint:
        courseA_collector_loops_challenge2kp_b: Essaie ce chemin pour trouver une
          solution.
        courseA_collector_loops_challenge2kp_a: Peux-tu utiliser des boucles pour
          résoudre ce casse-tête ?
      courseA_collector_loops_challenge2kp_2018_authored_hint:
        courseA_collector_loops_challenge2kp_b: Essaie ce chemin pour trouver une
          solution.
        courseA_collector_loops_challenge2kp_a: Peux-tu utiliser des boucles pour
          résoudre ce casse-tête ?
      courseA_collector_loops_challenge2kp_2019_authored_hint:
        courseA_collector_loops_challenge2kp_b: Essaie ce chemin pour trouver une
          solution.
        courseA_collector_loops_challenge2kp_a: Peux-tu utiliser des boucles pour
          résoudre ce casse-tête ?
      courseA_collector_preLoops4_authored_hint:
        courseA_collector_preLoops4_a: "Pour ramasser le trésor, connecte deux blocs
          ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
          et un bloc ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          en bas du programme et clique sur « Exécuter » !\n\n"
      courseA_collector_preLoops5_authored_hint:
        courseA_collector_preLoops5_a: Tu devras aller dans deux directions pour obtenir
          ne serait-ce qu’une gemme !
      courseA_collector_preLoops6_authored_hint:
        courseA_collector_preLoops6_a: Tu devras utiliser deux blocs ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          pour résoudre ce casse-tête.
      courseA_collector_preLoops7_authored_hint:
        courseA_collector_loops2_b: |-
          Après t’être déplacé sur une case avec un trésor, utilise ce bloc pour le ramasser.

          <xml>  <block type="collector_collect"/></xml>
      courseA_harvester_forVideo_authored_hint:
        courseA_harvester_loops3_a: |-
          Utilise un bloc « répéter » comme celui-ci pour t’aider !

          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">3</title>
          </block></xml>
      courseA_harvester_loops1_authored_hint:
        courseA_harvester_loops1_a: |-
          Une fois que tu arrives sur un maïs, utilise ce bloc pour le récolter !

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops1_2019_authored_hint:
        courseA_harvester_loops1_a: |-
          Une fois que tu arrives sur un maïs, utilise ce bloc pour le récolter !

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops2_authored_hint:
        courseA_harvester_loops2_a: "Ton code aura **quatre** blocs `déplacer vers
          l’Ouest`\n\n<xml><block type=\"maze_moveWest\"/></xml>\n\net **quatre**
          blocs <xml>\n`pick corn`\n  <block type=\"harvester_corn\"/>\n</xml>. "
      courseA_harvester_loops2_2019_authored_hint:
        courseA_harvester_loops2_a: "Ton code aura **quatre** blocs `déplacer vers
          l’Ouest`\n\n<xml><block type=\"maze_moveWest\"/></xml>\n\net **quatre**
          blocs <xml>\n`pick corn`\n  <block type=\"harvester_corn\"/>\n</xml>. "
      courseA_harvester_loops3_authored_hint:
        courseA_harvester_loops3_a: |-
          Utilise un bloc ˋrépéter` comme celui-ci pour t’aider !

          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: "Pour répéter du code, fais glisser une boucle
          `répéter` (<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title
          name=\"TIMES\" config=\"2-10\">4</title>\n  </block></xml>), puis mets le
          bloc que tu veux à l’intérieur. "
      courseA_harvester_loops3_2019_authored_hint:
        courseA_harvester_loops3_a: |-
          Utilise un bloc ˋrépéter` comme celui-ci pour t’aider !

          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: "Pour répéter du code, fais glisser une boucle
          `répéter` (<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title
          name=\"TIMES\" config=\"2-10\">4</title>\n  </block></xml>), puis mets le
          bloc que tu veux à l’intérieur. "
      courseA_harvester_loops4_authored_hint:
        courseA_harvester_loops4_a: N’aie pas peur d’appuyer sur `Exécuter` pour voir
          ce qui se passe !
        courseA_harvester_loops4_b: Combien d’épis de maïs y a-t-il ? Combien de fois
          ton code se répète-t-il ?
      courseA_harvester_loops4_2019_authored_hint:
        courseA_harvester_loops4_a: N’aie pas peur d’appuyer sur `Exécuter` pour voir
          ce qui se passe !
        courseA_harvester_loops4_b: Combien d’épis de maïs y a-t-il ? Combien de fois
          ton code se répète-t-il ?
      courseA_harvester_loops5_authored_hint:
        courseA_harvester_loops5_a: 'Si tu es bloqué, essaie de résoudre le casse-tête
          en 2 parties : une partie avant le coin et une autre après le coin.'
        courseA_harvester_loops5_b: |-
          Ton code final devra avoir **une** boucle `répéter`  <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">6</title>
          </block></xml>, **un** bloc ˋdéplacer vers le Sud`   <xml><block type="maze_moveSouth" limit="1"/></xml> et **un** bloc `déplacer vers l’Est`   <xml><block type="maze_moveEast" limit="1"/> </xml>.
        courseA_harvester_loops5_c: Suis ce chemin pour récolter tout le maïs !
      courseA_harvester_loops5_2019_authored_hint:
        courseA_harvester_loops5_a: 'Si tu es bloqué, essaie de résoudre le casse-tête
          en 2 parties : une partie avant le coin et une autre après le coin.'
        courseA_harvester_loops5_b: |-
          Ton code final devra avoir **une** boucle `répéter`  <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">6</title>
          </block></xml>, **un** bloc ˋdéplacer vers le Sud`   <xml><block type="maze_moveSouth" limit="1"/></xml> et **un** bloc `déplacer vers l’Est`   <xml><block type="maze_moveEast" limit="1"/> </xml>.
        courseA_harvester_loops5_c: Suis ce chemin pour récolter tout le maïs !
      courseA_harvester_loops5a_authored_hint:
        courseA_harvester_loops5a_a: |-
          Tu auras besoin d’une boucle `répéter` <xml> <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">6</title>
          </block></xml> après l’autre.
        courseA_harvester_loops5a_b: Une boucle fera répéter `déplacer vers le Sud`<xml><block
          type="maze_moveSouth" limit="1"/></xml> et l’autre fera répéter `déplacer
          vers l’Est` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Suis ce chemin pour te déplacer dans un sens
          puis dans l’autre.
      courseA_harvester_loops5a_2019_authored_hint:
        courseA_harvester_loops5a_a: |-
          Tu auras besoin d’une boucle `répéter` <xml> <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">6</title>
          </block></xml> après l’autre.
        courseA_harvester_loops5a_b: Une boucle fera répéter `déplacer vers le Sud`<xml><block
          type="maze_moveSouth" limit="1"/></xml> et l’autre fera répéter `déplacer
          vers l’Est` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Suis ce chemin pour te déplacer dans un sens
          puis dans l’autre.
      courseA_harvester_loops5b_authored_hint:
        courseA_harvester_loops5b_a: Appuie sur ˋExécuter` et regarde ce qui se passe
          !
        courseA_harvester_loops5b_b: Tes boucles se répètent-elles le bon nombre de
          fois ?
        courseA_harvester_loops5b_c: Déplace-toi dans un sens puis dans l’autre en
          suivant ce chemin.
      courseA_harvester_loops5b_2019_authored_hint:
        courseA_harvester_loops5b_a: Appuie sur ˋExécuter` et regarde ce qui se passe
          !
        courseA_harvester_loops5b_b: Tes boucles se répètent-elles le bon nombre de
          fois ?
        courseA_harvester_loops5b_c: Déplace-toi dans un sens puis dans l’autre en
          suivant ce chemin.
      courseA_harvester_loops6_authored_hint:
        courseA_harvester_loops6_b: Voici le chemin que tu devrais suivre pour récolter
          tout le maïs.
      courseA_harvester_loops6_2019_authored_hint:
        courseA_harvester_loops6_b: Voici le chemin que tu devrais suivre pour récolter
          tout le maïs.
      courseA_harvester_loops7_authored_hint:
        courseA_harvester_loops7_a: |-
          Tu auras besoin de deux boucles `répéter` <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">5</title>
          </block></xml> l’une après l’autre !
        courseA_harvester_loops7_b: Utilise deux boucles pour suivre ce chemin.
      courseA_harvester_loops7_2019_authored_hint:
        courseA_harvester_loops7_a: |-
          Tu auras besoin de deux boucles `répéter` <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="2-10">5</title>
          </block></xml> l’une après l’autre !
        courseA_harvester_loops7_b: Utilise deux boucles pour suivre ce chemin.
      courseA_harvester_loops9_authored_hint:
        courseA_harvester_loops9_a: Sépare ce casse-tête en trois parties différentes.
          Une partie pour le premier coin, une pour le deuxième coin et une pour finir.
        courseA_harvester_loops9_b: N’aie pas peur d’exécuter ton code après chaque
          partie pour voir ce qui se passe !
        courseA_harvester_loops9_c: Suis ce chemin pour récolter tout le maïs.
      courseA_harvester_loops9_2019_authored_hint:
        courseA_harvester_loops9_a: Sépare ce casse-tête en trois parties différentes.
          Une partie pour le premier coin, une pour le deuxième coin et une pour finir.
        courseA_harvester_loops9_b: N’aie pas peur d’exécuter ton code après chaque
          partie pour voir ce qui se passe !
        courseA_harvester_loops9_c: Suis ce chemin pour récolter tout le maïs.
      courseA_harvester_seq1_authored_hint:
        courseA_harvester_seq1_a: |-
          Utilise ce bloc pour récolter le maïs quand le moissonneur le trouve !

          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          Le moissonneur devra se déplacer à l’Est trois fois pour atteindre le maïs. Utilise ce bloc :

          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10_authored_hint:
        courseA_harvester_seq10_a: Tu es bloqué ? Essaie d’abord d’écrire les étapes
          sur une feuille de papier.
        courseA_harvester_seq10_b: Tu devras `avancer vers l’Est` puis ˋavancer vers
          le Nord`. Fais cela deux fois. N’oublie pas aussi de ramasser tout le maïs
          !
        courseA_harvester_seq10_c: Essaie de suivre ce chemin pour récolter tout le
          maïs.
      courseA_harvester_seq10_2019_authored_hint:
        courseA_harvester_seq10_a: Tu es bloqué ? Essaie d’abord d’écrire les étapes
          sur une feuille de papier.
        courseA_harvester_seq10_b: Tu devras `avancer vers l’Est` puis ˋavancer vers
          le Nord`. Fais cela deux fois. N’oublie pas aussi de ramasser tout le maïs
          !
        courseA_harvester_seq10_c: Essaie de suivre ce chemin pour récolter tout le
          maïs.
      courseA_harvester_seq13_authored_hint:
        courseA_bee_seq1_a: |-
          Utilise ce bloc pour récolter le maïs quand le moissonneur l’atteint.

          <xml>
          <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq13_2019_authored_hint:
        courseA_bee_seq1_a: |-
          Utilise ce bloc pour récolter le maïs quand le moissonneur l’atteint.

          <xml>
          <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq1_2019_authored_hint:
        courseA_harvester_seq1_a: |-
          Utilise ce bloc pour récolter le maïs quand le moissonneur le trouve !

          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          Le moissonneur devra se déplacer à l’Est trois fois pour atteindre le maïs. Utilise ce bloc :

          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq2_authored_hint:
        courseA_harvester_seq2_a: N’oublie pas d’utiliser <xml><block type="harvester_corn"/></xml>
          pour ramasser le maïs !
        courseA_harvester_seq2_b: Essaie d’écrire les étapes sur du papier pour trouver
          une solution !
      courseA_harvester_seq2_2019_authored_hint:
        courseA_harvester_seq2_a: N’oublie pas d’utiliser <xml><block type="harvester_corn"/></xml>
          pour ramasser le maïs !
        courseA_harvester_seq2_b: Essaie d’écrire les étapes sur du papier pour trouver
          une solution !
      courseA_harvester_seq3_authored_hint:
        courseA_harvester_seq3_a: |-
          As-tu pensé à utiliser ce bloc ?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Dis les étapes à voix haute et vois si cela t’aide
          à trouver la réponse.
      courseA_harvester_seq3_2019_authored_hint:
        courseA_harvester_seq3_a: |-
          As-tu pensé à utiliser ce bloc ?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Dis les étapes à voix haute et vois si cela t’aide
          à trouver la réponse.
      courseA_harvester_seq4_authored_hint:
        courseA_harvester_seq4_a: Combien de cases y a-t-il entre le moissonneur et
          le maïs ? Combien de blocs sont déjà dans l’espace de travail ?
        courseA_harvester_seq4_b: |-
          Tu auras besoin de cinq blocs `Déplacer vers l’Est` et un bloc `Récolter maïs` :

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq4_2019_authored_hint:
        courseA_harvester_seq4_a: Combien de cases y a-t-il entre le moissonneur et
          le maïs ? Combien de blocs sont déjà dans l’espace de travail ?
        courseA_harvester_seq4_b: |-
          Tu auras besoin de cinq blocs `Déplacer vers l’Est` et un bloc `Récolter maïs` :

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5_authored_hint:
        courseA_harvester_seq5_a: Quel bloc déplace le moissonneur dans le mauvais
          sens ?
        courseA_harvester_seq5_b: Tu dois enlever un bloc.
        courseA_harvester_seq5_c: |-
          Jette ce bloc à la poubelle !

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq5_2019_authored_hint:
        courseA_harvester_seq5_a: Quel bloc déplace le moissonneur dans le mauvais
          sens ?
        courseA_harvester_seq5_b: Tu dois enlever un bloc.
        courseA_harvester_seq5_c: |-
          Jette ce bloc à la poubelle !

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6_authored_hint:
        courseA_harvester_seq6_a: Si tu es bloqué, essaie de dire les étapes à voix
          haute. Cela pourrait t’aider à trouver le bon chemin.
      courseA_harvester_seq6_2019_authored_hint:
        courseA_harvester_seq6_a: Si tu es bloqué, essaie de dire les étapes à voix
          haute. Cela pourrait t’aider à trouver le bon chemin.
      courseA_harvester_seq7_authored_hint:
        courseA_harvester_seq7_a: Essaie de résoudre ce casse-tête en 2 parties, une
          avant le coin et l’autre après le coin.
        courseA_harvester_seq7_b: Des problèmes ? Voici le chemin que le moissonneur
          devrait emprunter.
      courseA_harvester_seq7_2019_authored_hint:
        courseA_harvester_seq7_a: Essaie de résoudre ce casse-tête en 2 parties, une
          avant le coin et l’autre après le coin.
        courseA_harvester_seq7_b: Des problèmes ? Voici le chemin que le moissonneur
          devrait emprunter.
      courseA_harvester_seq8_authored_hint:
        courseA_harvester_seq8_a: Tu devrais terminer avec **4** blocs de mouvement
          et **2** blocs de récolte.
      courseA_harvester_seq8_2019_authored_hint:
        courseA_harvester_seq8_a: Tu devrais terminer avec **4** blocs de mouvement
          et **2** blocs de récolte.
      courseA_harvester_seq9_authored_hint:
        courseA_harvester_seq9_a: Exécute le code plusieurs fois pour voir ce qui
          se passe. Où le moissonneur s’arrête-t-il ?
        courseA_harvester_seq9_b: N’oublie pas de récolter tout le maïs ! Tu auras
          besoin de **3** blocs ˋrécolte maïs`.
        courseA_harvester_seq9_c: Tu devrais suivre ce chemin pour récolter tout le
          maïs.
      courseA_harvester_seq9_2019_authored_hint:
        courseA_harvester_seq9_a: Exécute le code plusieurs fois pour voir ce qui
          se passe. Où le moissonneur s’arrête-t-il ?
        courseA_harvester_seq9_b: N’oublie pas de récolter tout le maïs ! Tu auras
          besoin de **3** blocs ˋrécolte maïs`.
        courseA_harvester_seq9_c: Tu devrais suivre ce chemin pour récolter tout le
          maïs.
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2_2019_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Connecte les deux blocs ˋEst` au bas du bloc ˋquand l’exécution commence`.
      courseA_maze_ramp3a_2018_authored_hint:
        '1': |
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3a_2019_authored_hint:
        '1': |
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2018_authored_hint:
        '1': |
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2019_authored_hint:
        '1': |
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4a_2018_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4a_2019_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5a_2018_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5a_2019_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq1_authored_hint:
        courseA_maze_seq1_a: |-
          Si tu as du mal à faire bouger l’oiseau, assure-toi que des blocs sont connectés à <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          L’oiseau devra se déplacer vers l’Ouest 3 fois pour arriver au cochon. Utilise ce bloc :

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10_authored_hint:
        courseA_maze_seq10_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
        courseA_maze_seq10_b: Tu devras aller dans 3 directions pour résoudre ce casse-tête.
      courseA_maze_seq10_2018_authored_hint:
        courseA_maze_seq10_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
        courseA_maze_seq10_b: Tu devras aller dans 3 directions différentes pour résoudre
          ce casse-tête.
      courseA_maze_seq10_2019_authored_hint:
        courseA_maze_seq10_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
        courseA_maze_seq10_b: Tu devras aller dans 3 directions différentes pour résoudre
          ce casse-tête.
      courseA_maze_seq13_authored_hint:
        courseA_maze_seq13_a: Si le chemin ne semble pas clair, trace du doigt un
          chemin de l’oiseau au cochon.
        courseA_maze_seq13_b: N’aie pas peur de faire des erreurs ! Essaie d’ajouter
          des blocs et d’exécuter le code pour voir ce qui se passe.
        courseA_maze_seq13_c: |-
          Ces blocs <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml> t’aideront à te rapprocher du cochon.
      courseA_maze_seq13_2018_authored_hint:
        courseA_maze_seq13_a: Si le chemin ne semble pas clair, trace du doigt un
          chemin de l’oiseau au cochon.
        courseA_maze_seq13_b: N’aie pas peur de faire des erreurs ! Essaie d’ajouter
          des blocs et d’exécuter le code pour voir ce qui se passe.
        courseA_maze_seq13_c: |-
          Ces blocs <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml> t’aideront à te rapprocher du cochon.
      courseA_maze_seq13_2019_authored_hint:
        courseA_maze_seq13_a: Si le chemin ne semble pas clair, trace du doigt un
          chemin de l’oiseau au cochon.
        courseA_maze_seq13_b: N’aie pas peur de faire des erreurs ! Essaie d’ajouter
          des blocs et d’exécuter le code pour voir ce qui se passe.
        courseA_maze_seq13_c: |-
          Ces blocs <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml> t’aideront à te rapprocher du cochon.
      courseA_maze_seq1_2018_authored_hint:
        courseA_maze_seq1_a: |-
          Si tu as du mal à faire bouger l’oiseau, assure-toi que des blocs sont connectés à <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          L’oiseau devra se déplacer vers l’Ouest 3 fois pour arriver au cochon. Utilise ce bloc :

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019_authored_hint:
        courseA_maze_seq1_a: |-
          Si tu as du mal à faire bouger l’oiseau, assure-toi que des blocs sont connectés à <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          L’oiseau devra se déplacer vers l’Ouest 3 fois pour arriver au cochon. Utilise ce bloc :

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2_authored_hint:
        courseA_maze_seq2_a: Il manque 1 bloc à ce programme. Peux-tu trouver lequel
          ?
        courseA_maze_seq2_b: Essaie d’abord d’exécuter le code pour voir où l’oiseau
          termine. Où aller à partir de là ?
      courseA_maze_seq2_2018_authored_hint:
        courseA_maze_seq2_a: Il manque 1 bloc à ce programme. Peux-tu trouver lequel
          ?
        courseA_maze_seq2_b: Essaie d’abord d’exécuter le code pour voir où l’oiseau
          termine. Où aller à partir de là ?
      courseA_maze_seq3_authored_hint:
        courseA_maze_seq3_a: Un des blocs déplace l’oiseau dans la mauvaise direction.
          Peux-tu trouver lequel et le remplacer par le bon bloc ?
        courseA_maze_seq3_b: Essaie d’utilise le bouton « Étape » pour trouver où
          le programme tourne mal. Est-ce à la première étape ? À la deuxième ?
        courseA_maze_seq3_c: Ce bloc <xml><block type="maze_moveNorth"/></xml> semble
          ne pas déplacer l’oiseau vers la bonne direction. Peux-tu le remplacer par
          un bloc différent ?
      courseA_maze_seq3_2018_authored_hint:
        courseA_maze_seq3_a: Un des blocs déplace l’oiseau dans la mauvaise direction.
          Peux-tu trouver lequel et le remplacer par le bon bloc ?
        courseA_maze_seq3_b: Essaie d’utilise le bouton « Étape » pour trouver où
          le programme tourne mal. Est-ce à la première étape ? À la deuxième ?
        courseA_maze_seq3_c: Ce bloc <xml><block type="maze_moveNorth"/></xml> semble
          ne pas déplacer l’oiseau vers la bonne direction. Peux-tu le remplacer par
          un bloc différent ?
      courseA_maze_seq4_authored_hint:
        courseA_maze_seq4_a: Si tu as du mal, essaie de trouver le bon chemin puis
          enlève le bloc qui ne correspond pas.
        courseA_maze_seq4_b: Essaie d’exécuter le code tel quel. Est-ce que quelque
          chose tourne mal ? Quel bloc peux-tu enlever ? Comment peux-tu le corriger
          ?
      courseA_maze_seq4_2018_authored_hint:
        courseA_maze_seq4_a: Si tu as du mal, essaie de trouver le bon chemin puis
          enlève le bloc qui ne correspond pas.
        courseA_maze_seq4_b: Essaie d’exécuter le code tel quel. Est-ce que quelque
          chose tourne mal ? Quel bloc peux-tu enlever ? Comment peux-tu le corriger
          ?
      courseA_maze_seq4a_authored_hint:
        courseA_maze_seq4_a: Si tu as du mal, essaie de tracer du doigt le bon chemin.
          Quels mouvements fait ton doigt ?
      courseA_maze_seq5_authored_hint:
        courseA_maze_seq5_a: Essaie d’écrire les étapes sur du papier pour trouver
          une solution !
        courseA_maze_seq5_b: Tu auras besoin de 2 blocs dirigés vers 2 directions.
      courseA_maze_seq5_2018_authored_hint:
        '1': Essaie d’écrire les étapes sur du papier pour trouver une solution !
        '2': |-
          Tu devras utiliser ce bloc :

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_2019_authored_hint:
        '1': Essaie d’écrire les étapes sur du papier pour trouver une solution !
        '2': |-
          Tu devras utiliser ce bloc :

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018_authored_hint:
        '1': Dis les étapes à voix haute et vois si cela t’aide à trouver la réponse.
      courseA_maze_seq5a_2019_authored_hint:
        '1': Dis les étapes à voix haute et vois si cela t’aide à trouver la réponse.
      courseA_maze_seq6_authored_hint:
        courseA_maze_seq6_a: Ton code final devrait avoir 3 blocs de mouvement.
        courseA_maze_seq6_b: 'Si tu es bloqué, essaie de résoudre le casse-tête en
          2 parties : une partie avant le coin et une autre après le coin.'
      courseA_maze_seq6_2018_authored_hint:
        courseA_maze_seq6_a: Ton code final devrait avoir 3 blocs de mouvement.
        courseA_maze_seq6_b: 'Si tu es bloqué, essaie de résoudre le casse-tête en
          2 parties : une partie avant le coin et une autre après le coin.'
      courseA_maze_seq6_2019_authored_hint:
        courseA_maze_seq6_a: Ton code final devrait avoir 3 blocs de mouvement.
        courseA_maze_seq6_b: 'Si tu es bloqué, essaie de résoudre le casse-tête en
          2 parties : une partie avant le coin et une autre après le coin.'
      courseA_maze_seq7_authored_hint:
        courseA_maze_seq7_a: Il y a 1 bloc que tu dois ajouter pour faire avancer
          l’oiseau vers le cochon.
        courseA_maze_seq7_b: Si tu ne trouves pas quoi faire, essaie de dessiner le
          casse-tête sur du papier et trace un chemin avec ton doigt pour voir dans
          quelle direction te déplacer.
      courseA_maze_seq7_2018_authored_hint:
        courseA_maze_seq7_a: Il y a 1 bloc que tu dois ajouter pour faire avancer
          l’oiseau vers le cochon.
        courseA_maze_seq7_b: Si tu ne trouves pas quoi faire, essaie de dessiner le
          casse-tête sur du papier et trace un chemin avec ton doigt pour voir dans
          quelle direction te déplacer.
      courseA_maze_seq8_authored_hint:
        courseA_maze_seq8_a: Si tu es bloqué, essaie de dessiner l’image sur du papier
          pour voir comment l’oiseau devrait se déplacer.
      courseA_maze_seq8_2018_authored_hint:
        courseA_maze_seq8_a: Si tu es bloqué, essaie de dessiner l’image sur du papier
          pour voir comment l’oiseau devrait se déplacer.
      courseA_maze_seq8_2019_authored_hint:
        courseA_maze_seq8_a: Si tu es bloqué, essaie de dessiner l’image sur du papier
          pour voir comment l’oiseau devrait se déplacer.
      courseA_maze_seq9_authored_hint:
        courseA_maze_seq9_a: Bloqué ? Essaie de tracer du doigt le chemin de l’oiseau.
        courseA_maze_seq9_b: Si tu n’es pas sûr de ce que tu dois faire, essaie d’appuyer
          sur « Recommencer » et d’exécuter le code pour voir ce qui tourne mal.
        courseA_maze_seq9_c: Tu devras te déplacer dans 3 directions pour résoudre
          ce casse-tête.
      courseA_maze_seq9_2018_authored_hint:
        courseA_maze_seq9_a: Bloqué ? Essaie de tracer du doigt le chemin de l’oiseau.
        courseA_maze_seq9_b: Si tu n’es pas sûr de ce que tu dois faire, essaie d’appuyer
          sur « Recommencer » et d’exécuter le code pour voir ce qui tourne mal.
        courseA_maze_seq9_c: Tu devras te déplacer dans 3 directions pour résoudre
          ce casse-tête.
      courseA_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Il y a deux solutions à ce casse-tête.
      courseA_maze_seq_challenge1_2018_authored_hint:
        courseA_maze_seq_challenge1_a: Il y a deux solutions à ce casse-tête.
      courseA_maze_seq_challenge1_2019_authored_hint:
        courseA_maze_seq_challenge1_a: Il y a deux solutions à ce casse-tête.
      courseA_maze_seq_challenge2_authored_hint:
        courseA_maze_seq_challenge2_a: Essaie de compter les cases avec ton doigt.
          N’oublie pas de ne pas compter la case de départ !
      courseA_maze_seq_challenge2_2018_authored_hint:
        courseA_maze_seq_challenge2_a: Essaie de compter les cases avec ton doigt.
          N’oublie pas de ne pas compter la case de départ !
      courseA_maze_seq_challenge2_2019_authored_hint:
        courseA_maze_seq_challenge2_a: Essaie de compter les cases avec ton doigt.
          N’oublie pas de ne pas compter la case de départ !
      courseA_playLab_events2_authored_hint:
        courseA_playLab_events2_a: Cherche le bloc qui fait dire quelque chose au
          chien.
        courseA_playLab_events2_b: |-
          Voici le code dont tu as besoin pour résoudre ce casse-tête :

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018_authored_hint:
        courseA_playLab_events2_a: Cherche le bloc qui fait dire quelque chose au
          chien.
        courseA_playLab_events2_b: |-
          Voici le code dont tu as besoin pour résoudre ce casse-tête :

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2019_authored_hint:
        courseA_playLab_events2_a: Cherche le bloc qui fait dire quelque chose au
          chien.
        courseA_playLab_events2_b: |-
          Voici le code dont tu as besoin pour résoudre ce casse-tête :

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3_authored_hint:
        courseA_playLab_events3_a: |-
          Fais glisser ce bloc  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> et connecte-le au bas de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: N’oublie pas d’appuyer sur la touche directionnelle
          gauche pour déplacer Jorge vers le drapeau une fois que tu as écrit ton
          programme. Quand le drapeau devient vert, tu as terminé !
      courseA_playLab_events3_2018_authored_hint:
        courseA_playLab_events3_a: |-
          Fais glisser ce bloc  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> et connecte-le au bas de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: N’oublie pas d’appuyer sur la touche directionnelle
          gauche pour déplacer Jorge vers le drapeau une fois que tu as écrit ton
          programme. Quand le drapeau devient vert, tu as terminé !
      courseA_playLab_events3_2019_authored_hint:
        courseA_playLab_events3_a: |-
          Fais glisser ce bloc  <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> et connecte-le au bas de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: N’oublie pas d’appuyer sur la touche directionnelle
          gauche pour déplacer Jorge vers le drapeau une fois que tu as écrit ton
          programme. Quand le drapeau devient vert, tu as terminé !
      courseA_playLab_events4_authored_hint:
        courseA_playLab_events4_a: |-
          Voici le bloc événement dont tu auras besoin pour déplacer Jorge vers la droite :

          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Voici le code dont tu auras besoin pour résoudre ce casse-tête :

          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2018_authored_hint:
        courseA_playLab_events4_a: |-
          Voici le bloc événement dont tu auras besoin pour déplacer Jorge vers la droite :

          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Voici le code dont tu auras besoin pour résoudre ce casse-tête :

          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2019_authored_hint:
        courseA_playLab_events4_a: |-
          Voici le bloc événement dont tu auras besoin pour déplacer Jorge vers la droite :

          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Voici le code dont tu auras besoin pour résoudre ce casse-tête :

          <xml><block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events5_authored_hint:
        courseA_playLab_events5_a: |-
          Voici les blocs événements que tu devras utiliser pour déplacer Jorge vers le haut et vers le bas :

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          et

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          Savais-tu que tu peux changer la touche de la flèche en cliquant sur l’image dans le bloc et en choisissant une nouvelle touche ?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018_authored_hint:
        courseA_playLab_events5_a: |-
          Voici les blocs événements que tu devras utiliser pour déplacer Jorge vers le haut et vers le bas :

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          et

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          Savais-tu que tu peux changer la touche de la flèche en cliquant sur l’image dans le bloc et en choisissant une nouvelle touche ?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2019_authored_hint:
        courseA_playLab_events5_a: |-
          Voici les blocs événements que tu devras utiliser pour déplacer Jorge vers le haut et vers le bas :

          <xml><block type="studio_whenArrow">
              <title name="VALUE">up</title>
            </block></xml>

          et

          <xml><block type="studio_whenArrow">
              <title name="VALUE">down</title>
            </block></xml>
        courseA_playLab_events5_b: |-
          Savais-tu que tu peux changer la touche de la flèche en cliquant sur l’image dans le bloc et en choisissant une nouvelle touche ?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6_authored_hint:
        courseA_playLab_events6_a: |-
          Voici le bloc événement que tu devras utiliser pour que Jorge fasse quelque chose quand on lui clique dessus :

          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Voici le bloc que tu devras utiliser pour modifier le fond :

          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Voici le bloc que tu devras utiliser pour jouer un son aléatoire :

          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events6_2018_authored_hint:
        courseA_playLab_events6_a: |-
          Voici le bloc événement que tu devras utiliser pour que Jorge fasse quelque chose quand on lui clique dessus :

          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Voici le bloc que tu devras utiliser pour modifier le fond :

          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Voici le bloc que tu devras utiliser pour jouer un son aléatoire :

          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events6_2019_authored_hint:
        courseA_playLab_events6_a: |-
          Voici le bloc événement que tu devras utiliser pour que Jorge fasse quelque chose quand on lui clique dessus :

          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Voici le bloc que tu devras utiliser pour modifier le fond :

          <xml><block type="studio_setBackground">
          <title name="VALUE">random</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Voici le bloc que tu devras utiliser pour jouer un son aléatoire :

          <xml><block type="studio_playSound">
          <title name="SOUND">random</title>
          </block></xml>
      courseA_playLab_events7_authored_hint:
        courseA_playLab_events7_a: |-
          Utilise ce bloc pour contrôler ce qui se passe lorsque les acteurs entrent en collision.

          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2018_authored_hint:
        courseA_playLab_events7_a: |-
          Utilise ce bloc pour contrôler ce qui se passe lorsque les acteurs entrent en collision.

          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2019_authored_hint:
        courseA_playLab_events7_a: |-
          Utilise ce bloc pour contrôler ce qui se passe lorsque les acteurs entrent en collision.

          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: "Fais apparaître Waddles le pingouin
          quand on clique sur Robin !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Fais apparaître Boo le fantôme quand
          on clique sur Waddles !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Fais apparaître Jayden le monstre poilu
          quand on clique sur Boo !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Fais apparaître Spiff le robot quand
          on clique sur le monstre !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Enfin, fais apparaître Wendel le sorcier
          quand on clique sur Spiff !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018_authored_hint:
        courseA_playlab_events_challenge1_a: "Fais apparaître Waddles le pingouin
          quand on clique sur Robin !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Fais apparaître Boo le fantôme quand
          on clique sur Waddles !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Fais apparaître Jayden le monstre poilu
          quand on clique sur Boo !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Fais apparaître Spiff le robot quand
          on clique sur le monstre !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Enfin, fais apparaître Wendel le sorcier
          quand on clique sur Spiff !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2019_authored_hint:
        courseA_playlab_events_challenge1_a: "Fais apparaître Waddles le pingouin
          quand on clique sur Robin !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Fais apparaître Boo le fantôme quand
          on clique sur Waddles !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Fais apparaître Jayden le monstre poilu
          quand on clique sur Boo !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Fais apparaître Spiff le robot quand
          on clique sur le monstre !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Enfin, fais apparaître Wendel le sorcier
          quand on clique sur Spiff !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1a_authored_hint:
        courseA_playlab_events_challenge1_a: "Tu peux faire chanter un oiseau.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Tu peux faire biper un robot.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: |-
          Tu peux faire grogner un monstre mécontent.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: "Tu peux faire chanter un oiseau.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Tu peux faire biper un robot.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Tu peux faire grogner un monstre mécontent.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2018_authored_hint:
        courseA_playlab_events_challenge2_a: "Tu peux faire chanter un oiseau.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Tu peux faire biper un robot.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Tu peux faire grogner un monstre mécontent.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2019_authored_hint:
        courseA_playlab_events_challenge2_a: "Tu peux faire chanter un oiseau.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Tu peux faire biper un robot.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Tu peux faire grogner un monstre mécontent.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Roar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challengeClone_authored_hint:
        courseA_playlab_events_challenge1_a: "Fais apparaître Waddles le pingouin
          quand on clique sur Robin !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Fais apparaître Boo le fantôme quand
          on clique sur Waddles !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Fais apparaître Jayden le monstre poilu
          quand on clique sur Boo !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Fais apparaître Spiff le robot quand
          on clique sur le monstre !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Enfin, fais apparaitre Wendel le Sorcier
          quand on clique sur Spiff !\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': Si Scrat ne fait pas ce que tu veux, assure-toi que les deux blocs sont
          connectés, puis appuie de nouveau sur « Exécuter ».
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work,
          try something else!
      courseB_Scrat_ramp1_2019_authored_hint:
        '1': Si Scrat ne fait pas ce que tu veux, assure-toi que les deux blocs sont
          connectés, puis appuie de nouveau sur « Exécuter ».
        '2': Don't be afraid to make a mistake! Try something, and if it doesn't work,
          try something else!
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp2_2019_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': |
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2019_authored_hint:
        '1': |
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2018_authored_hint:
        '1': |
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2019_authored_hint:
        '1': |
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2019_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2019_authored_hint:
        '1': |-
          Ton code devrait ressembler à ceci :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_artist_loops2_authored_hint:
        courseB_artist_loops2_a: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseB_artist_loops2_b: Essaie d’abord d’exécuter le code pour voir où l’artiste
          finit.
      courseB_artist_loops2_2018_authored_hint:
        courseB_artist_loops2_a: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseB_artist_loops2_b: Essaie d’abord d’exécuter le code pour voir où l’artiste
          finit.
      courseB_artist_loops2_2019_authored_hint:
        courseB_artist_loops2_a: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
        courseB_artist_loops2_b: Essaie d’abord d’exécuter le code pour voir où l’artiste
          finit.
      courseB_artist_loops3_authored_hint:
        courseB_artist_loops3_a: N’oublie pas d’utiliser une boucle `répéter` pour
          un meilleur code !
        courseB_artist_loops3_b: L’artiste devra se déplacer vers le Sud pour dessiner
          cette ligne.
      courseB_artist_loops3_2018_authored_hint:
        courseB_artist_loops3_a: |-
          N’oublie pas d’utiliser une boucle `répéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml> pour un meilleur code !
        courseB_artist_loops3_b: L’artiste devra se déplacer vers le Sud pour dessiner
          cette ligne.
      courseB_artist_loops3_2019_authored_hint:
        courseB_artist_loops3_a: |-
          N’oublie pas d’utiliser une boucle `répéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml> pour un meilleur code !
        courseB_artist_loops3_b: L’artiste devra se déplacer vers le Sud pour dessiner
          cette ligne.
      courseB_artist_loops4_authored_hint:
        courseB_artist_loops4_a: Le bloc de saut te permet d’avancer sans dessiner
          une ligne.
        courseB_artist_loops4_b: Tu devras ajouter un bloc à l’intérieur de la boucle
          répéter pour résoudre ce casse-tête.
        courseB_artist_loops4_c: N’oublie pas de modifier le nombre de fois que la
          boucle se répète.
      courseB_artist_loops4_2018_authored_hint:
        courseB_artist_loops4_a: Le bloc de saut te permet d’avancer sans dessiner
          une ligne.
        courseB_artist_loops4_b: Tu devras ajouter un bloc à l’intérieur de la boucle
          répéter pour résoudre ce casse-tête.
        courseB_artist_loops4_c: N’oublie pas de modifier le nombre de fois que la
          boucle se répète.
      courseB_artist_loops4_2019_authored_hint:
        courseB_artist_loops4_a: Le bloc de saut te permet d’avancer sans dessiner
          une ligne.
        courseB_artist_loops4_b: Tu devras ajouter un bloc à l’intérieur de la boucle
          répéter pour résoudre ce casse-tête.
        courseB_artist_loops4_c: N’oublie pas de modifier le nombre de fois que la
          boucle se répète.
      courseB_artist_loops5_authored_hint:
        courseB_artist_loops5_a: Fais glisser une boucle ˋrépéter`, puis mets les
          autres blocs à l’intérieur. Combien de fois dois-tu répéter ?
      courseB_artist_loops5_2018_authored_hint:
        courseB_artist_loops5_a: |-
          Fais glisser une boucle ˋrépéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml>, puis mets les autres blocs à l’intérieur. Combien de fois dois-tu répéter ?
      courseB_artist_loops5_2019_authored_hint:
        courseB_artist_loops5_a: |-
          Fais glisser une boucle ˋrépéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml>, puis mets les autres blocs à l’intérieur. Combien de fois dois-tu répéter ?
      courseB_artist_loops6_authored_hint:
        courseB_artist_loops6_b: Essaie d’écrire les déplacements sur du papier et
          regarde ce qui se répète.
      courseB_artist_loops6_2018_authored_hint:
        courseB_artist_loops6_b: Essaie d’écrire les déplacements sur du papier et
          regarde ce qui se répète.
      courseB_artist_loops6_2019_authored_hint:
        courseB_artist_loops6_b: Essaie d’écrire les déplacements sur du papier et
          regarde ce qui se répète.
      courseB_artist_loops7_authored_hint:
        courseB_artist_loops7_a: Ce problème utilise **4** boucles, l’une après l’autre
          !
        courseB_artist_loops7_b: |-
          Remarque que chaque boucle fait un motif en escalier qui va dans une direction différente.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "Les boucles devraient faire ceci :\n- Boucle 1\n
          \ - Droite\n  - Bas\n  \n- Boucle 2\n  - Droite\n  - Haut\n\n- Boucle 3\n
          \ - Gauche\n  - Haut\n\n- Boucle 4\n  - Gauche\n  - Bas"
      courseB_artist_loops7_2018_authored_hint:
        courseB_artist_loops7_a: Ce problème utilise **4** boucles, l’une après l’autre
          !
        courseB_artist_loops7_b: |-
          Remarque que chaque boucle fait un motif en escalier qui va dans une direction différente.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "Les boucles devraient faire ceci :\n- Boucle 1\n
          \ - Droite\n  - Bas\n  \n- Boucle 2\n  - Droite\n  - Haut\n\n- Boucle 3\n
          \ - Gauche\n  - Haut\n\n- Boucle 4\n  - Gauche\n  - Bas"
      courseB_artist_loops7_2019_authored_hint:
        courseB_artist_loops7_a: Ce problème utilise **4** boucles, l’une après l’autre
          !
        courseB_artist_loops7_b: |-
          Remarque que chaque boucle fait un motif en escalier qui va dans une direction différente.

          ![](https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
        courseB_artist_loops7_c: "Les boucles devraient faire ceci :\n- Boucle 1\n
          \ - Droite\n  - Bas\n  \n- Boucle 2\n  - Droite\n  - Haut\n\n- Boucle 3\n
          \ - Gauche\n  - Haut\n\n- Boucle 4\n  - Gauche\n  - Bas"
      courseB_artist_loops8_authored_hint:
        courseB_artist_loops8_a: Combien de fois dois-tu répéter le motif pour créer
          l’échelle ?
        courseB_artist_loops8_b: Essaie d’exécuter le code donné pour voir ce qu’il
          fait.
      courseB_artist_loops8_2018_authored_hint:
        courseB_artist_loops8_a: Combien de fois dois-tu répéter le motif pour créer
          l’échelle ?
        courseB_artist_loops8_b: Essaie d’exécuter le code donné pour voir ce qu’il
          fait.
      courseB_artist_loops8_2019_authored_hint:
        courseB_artist_loops8_a: Combien de fois dois-tu répéter le motif pour créer
          l’échelle ?
        courseB_artist_loops8_b: Essaie d’exécuter le code donné pour voir ce qu’il
          fait.
      courseB_artist_loops9_authored_hint:
        courseB_artist_loops9_a: N’oublie pas que les blocs de saut permettent de
          te déplacer sans tracer de ligne.
        courseB_artist_loops9_b: Tu devras utiliser le bloc O pour résoudre ce casse-tête.
        courseB_artist_loops9_c: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
      courseB_artist_loops9_2018_authored_hint:
        courseB_artist_loops9_a: N’oublie pas que les blocs de saut permettent de
          te déplacer sans tracer de ligne.
        courseB_artist_loops9_b: Tu devras utiliser le bloc O pour résoudre ce casse-tête.
        courseB_artist_loops9_c: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
      courseB_artist_loops9_2019_authored_hint:
        courseB_artist_loops9_a: N’oublie pas que les blocs de saut permettent de
          te déplacer sans tracer de ligne.
        courseB_artist_loops9_b: Tu devras utiliser le bloc O pour résoudre ce casse-tête.
        courseB_artist_loops9_c: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
      courseB_artist_loops_challenge1_authored_hint:
        courseB_artist_loops_challenge1_a: 'Les blocs comme ceux-ci : <xml>  <block
          type="simple_move_up_right"/></xml> déplaceront ton artiste en diagonale
          !'
        courseB_artist_loops_challenge1_b: Quand tu finis un des dés, `saute` vers
          le suivant !
        courseB_artist_loops_challenge1_c: 'Tu devras te ˋdéplacer` ou ˋsauter` au-dessus
          des mêmes lignes deux fois. '
      courseB_artist_loops_challenge1_2018_authored_hint:
        courseB_artist_loops_challenge1_a: 'Les blocs comme ceux-ci : <xml>  <block
          type="simple_move_up_right"/></xml> déplaceront ton artiste en diagonale
          !'
        courseB_artist_loops_challenge1_b: Quand tu finis un des dés, `saute` vers
          le suivant !
        courseB_artist_loops_challenge1_c: 'Tu devras te ˋdéplacer` ou ˋsauter` au-dessus
          des mêmes lignes deux fois. '
      courseB_artist_loops_challenge1_2019_authored_hint:
        courseB_artist_loops_challenge1_a: 'Les blocs comme ceux-ci : <xml>  <block
          type="simple_move_up_right"/></xml> déplaceront ton artiste en diagonale
          !'
        courseB_artist_loops_challenge1_b: Quand tu finis un des dés, `saute` vers
          le suivant !
        courseB_artist_loops_challenge1_c: 'Tu devras te ˋdéplacer` ou ˋsauter` au-dessus
          des mêmes lignes deux fois. '
      courseB_artist_loops_challenge2_authored_hint:
        courseB_artist_loops_challenge2_a: Le code pour dessiner un X t’es déjà donné.
          Tout ce que tu as besoin de faire est répéter le X et ˋsauter` vers l’endroit
          suivant.
        courseB_artist_loops_challenge2_b: Tu peux utiliser les blocs ˋsauter` pour
          te déplacer vers d’autres cases sans dessiner.
      courseB_artist_loops_challenge2_2018_authored_hint:
        courseB_artist_loops_challenge2_a: Le code pour dessiner un X t’es déjà donné.
          Tout ce que tu as besoin de faire est répéter le X et ˋsauter` vers l’endroit
          suivant.
        courseB_artist_loops_challenge2_b: Tu peux utiliser les blocs ˋsauter` pour
          te déplacer vers d’autres cases sans dessiner.
      courseB_artist_loops_challenge2_2019_authored_hint:
        courseB_artist_loops_challenge2_a: Le code pour dessiner un X t’es déjà donné.
          Tout ce que tu as besoin de faire est répéter le X et ˋsauter` vers l’endroit
          suivant.
        courseB_artist_loops_challenge2_b: Tu peux utiliser les blocs ˋsauter` pour
          te déplacer vers d’autres cases sans dessiner.
      courseB_collector_loops1_authored_hint:
        courseB_collector_loops1_a: Le bloc <xml><block type="collector_collect_simplified"/></xml>
          permet de ramasser le trésor quand tu te tiens dessus.
      courseB_collector_loops10_authored_hint:
        courseB_collector_loops10_a: Si tu n’arrives pas à trouver où mettre les boucles
          ˋrépéter`, écrit le code étape par étape puis regarde ce qui se répète.
        courseB_collector_loops10_b: Essaie d’écrire les déplacements sur du papier
          et de voir ce qui se répète.
      courseB_collector_loops10_2018_authored_hint:
        courseB_collector_loops10_a: Si tu n’arrives pas à trouver où mettre les boucles
          ˋrépéter`, écrit le code étape par étape puis regarde ce qui se répète.
        courseB_collector_loops10_b: Essaie d’écrire les déplacements sur du papier
          et de voir ce qui se répète.
      courseB_collector_loops10_2019_authored_hint:
        courseB_collector_loops10_a: Si tu n’arrives pas à trouver où mettre les boucles
          ˋrépéter`, écrit le code étape par étape puis regarde ce qui se répète.
        courseB_collector_loops10_b: Essaie d’écrire les déplacements sur du papier
          et de voir ce qui se répète.
      courseB_collector_loops1_2018_authored_hint:
        courseB_collector_loops1_a: Le bloc <xml><block type="collector_collect_simplified"/></xml>
          permet de ramasser le trésor quand tu te tiens dessus.
      courseB_collector_loops1_2019_authored_hint:
        courseB_collector_loops1_a: Le bloc <xml><block type="collector_collect_simplified"/></xml>
          permet de ramasser le trésor quand tu te tiens dessus.
      courseB_collector_loops2_authored_hint:
        courseB_collector_loops2_a: Tu devras te déplacer avant de pouvoir collecter
          un trésor.
        courseB_collector_loops2_b: Lorsque tu arrives sur une case avec un trésor,
          utilise le bloc <xml><block type="collector_collect"/></xml> pour le ramasser.
      courseB_collector_loops2_2018_authored_hint:
        courseB_collector_loops2_a: Tu devras te déplacer avant de pouvoir collecter
          un trésor.
        courseB_collector_loops2_b: Lorsque tu arrives sur une case avec un trésor,
          utilise le bloc <xml><block type="collector_collect"/></xml> pour le ramasser.
      courseB_collector_loops2_2019_authored_hint:
        courseB_collector_loops2_a: Tu devras te déplacer avant de pouvoir collecter
          un trésor.
        courseB_collector_loops2_b: Lorsque tu arrives sur une case avec un trésor,
          utilise le bloc <xml><block type="collector_collect"/></xml> pour le ramasser.
      courseB_collector_loops3_authored_hint:
        courseB_collector_prog3_a: Essaie d’utiliser un bloc <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml> pour ramasser le trésor.
        courseB_collector_prog3_b: N’oublie pas que tu peux mettre plus d’un bloc
          à l’intérieur d’une boucle `répéter`.
      courseB_collector_loops3_2018_authored_hint:
        courseB_collector_prog3_a: Essaie d’utiliser un bloc <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml> pour ramasser le trésor.
        courseB_collector_prog3_b: N’oublie pas que tu peux mettre plus d’un bloc
          à l’intérieur d’une boucle `répéter`.
      courseB_collector_loops3_2019_authored_hint:
        courseB_collector_prog3_a: Essaie d’utiliser un bloc <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">5</title></block></xml> pour ramasser le trésor.
        courseB_collector_prog3_b: N’oublie pas que tu peux mettre plus d’un bloc
          à l’intérieur d’une boucle `répéter`.
      courseB_collector_loops3_predict1_authored_hint:
        courseB_collector_prog3_a: Essaie d’utiliser une boucle ˋrépéter` pour récolter
          ton or.
      courseB_collector_loops4_authored_hint:
        courseB_collector_loops4_a: Essaie d’utiliser le bouton « Étape » pour voir
          où les choses tournent mal.
        courseB_collector_loops4_b: Pour modifier la distance à laquelle Laurel va,
          modifie le nombre de fois que la boucle s’exécute.
        courseB_collector_loops4_c: Laurel doit descendre et ramasser le trésor après
          la fin de la boucle ˋrépéter` !
      courseB_collector_loops4_2018_authored_hint:
        courseB_collector_loops4_a: Essaie d’utiliser le bouton « Étape » pour voir
          où les choses tournent mal.
        courseB_collector_loops4_b: Pour modifier la distance à laquelle Laurel va,
          modifie le nombre de fois que la boucle s’exécute.
        courseB_collector_loops4_c: |-
          Laurel doit descendre et ramasser le trésor après la fin de la boucle ˋrépéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml> !
      courseB_collector_loops4_2019_authored_hint:
        courseB_collector_loops4_a: Essaie d’utiliser le bouton « Étape » pour voir
          où les choses tournent mal.
        courseB_collector_loops4_b: Pour modifier la distance à laquelle Laurel va,
          modifie le nombre de fois que la boucle s’exécute.
        courseB_collector_loops4_c: |-
          Laurel doit descendre et ramasser le trésor après la fin de la boucle ˋrépéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml> !
      courseB_collector_loops5_authored_hint:
        courseB_collector_loops5_a: Utilise plus d’une boucle pour accomplir la tâche.
        courseB_collector_loops5_b: Essaie d’exécuter le code plusieurs fois pour
          voir ce qui se passe.
      courseB_collector_loops5_2018_authored_hint:
        courseB_collector_loops5_a: Utilise plus d’une boucle pour accomplir la tâche.
        courseB_collector_loops5_b: Essaie d’exécuter le code plusieurs fois pour
          voir ce qui se passe.
      courseB_collector_loops5_2019_authored_hint:
        courseB_collector_loops5_a: Utilise plus d’une boucle pour accomplir la tâche.
        courseB_collector_loops5_b: Essaie d’exécuter le code plusieurs fois pour
          voir ce qui se passe.
      courseB_collector_loops6_authored_hint:
        courseB_collector_loops6_a: Tu ne vois pas où les choses commencent à mal
          tourner ? Utilise le bouton « Étape » pour faire avancer ton programme bloc
          par bloc.
        courseB_collector_loops6_b: Tu peux changer le nombre de fois que la boucle
          répéter s’exécute en cliquant sur « 3 » et en choissisant un autre nombre.
        courseB_collector_loops6_c: Tu auras besoin d’utiliser 3 boucles ˋrépéter`
          pour résoudre ce casse-tête.
        courseB_collector_loops6_d: Si tu es confus, essaie de diviser ce casse-tête
          en 3 parties.
      courseB_collector_loops6_2018_authored_hint:
        courseB_collector_loops6_a: Tu ne vois pas où les choses commencent à mal
          tourner ? Utilise le bouton « Étape » pour faire avancer ton programme bloc
          par bloc.
        courseB_collector_loops6_b: Tu peux changer le nombre de fois que la boucle
          répéter s’exécute en cliquant sur « 3 » et en choissisant un autre nombre.
        courseB_collector_loops6_c: |-
          Tu auras besoin d’utiliser 3 boucles `répéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml> pour résoudre ce casse-tête.
        courseB_collector_loops6_d: Si tu es confus, essaie de diviser ce casse-tête
          en 3 parties.
      courseB_collector_loops6_2019_authored_hint:
        courseB_collector_loops6_a: Tu ne vois pas où les choses commencent à mal
          tourner ? Utilise le bouton « Étape » pour faire avancer ton programme bloc
          par bloc.
        courseB_collector_loops6_b: Tu peux changer le nombre de fois que la boucle
          répéter s’exécute en cliquant sur « 3 » et en choissisant un autre nombre.
        courseB_collector_loops6_c: |-
          Tu auras besoin d’utiliser 3 boucles `répéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml> pour résoudre ce casse-tête.
        courseB_collector_loops6_d: Si tu es confus, essaie de diviser ce casse-tête
          en 3 parties.
      courseB_collector_loops7_authored_hint:
        courseB_collector_loops7_a: Si tu as du mal avec ce casse-tête, essaie de
          le dessiner sur du papier pour t’aider.
        courseB_collector_loops7_b: Tu auras besoin de 3 boucles répéter pour résoudre
          ce casse-tête, et n’oublie pas le trésor supplémentaire à la fin !
      courseB_collector_loops7_2018_authored_hint:
        courseB_collector_loops7_a: Si tu as du mal avec ce casse-tête, essaie de
          le dessiner sur du papier pour t’aider.
        courseB_collector_loops7_b: Tu auras besoin de 3 boucles répéter pour résoudre
          ce casse-tête, et n’oublie pas le trésor supplémentaire à la fin !
      courseB_collector_loops7_2019_authored_hint:
        courseB_collector_loops7_a: Si tu as du mal avec ce casse-tête, essaie de
          le dessiner sur du papier pour t’aider.
        courseB_collector_loops7_b: Tu auras besoin de 3 boucles répéter pour résoudre
          ce casse-tête, et n’oublie pas le trésor supplémentaire à la fin !
      courseB_collector_loops8_authored_hint:
        courseB_collector_loops8_challenge_a: Si tu ne comprends pas où mettre les
          boucles répéter, écrit le code étape par étape et regarde ce qui se répète.
      courseB_collector_loops8_2018_authored_hint:
        courseB_collector_loops8_challenge_a: Si tu ne comprends pas où mettre les
          boucles répéter, écrit le code étape par étape et regarde ce qui se répète.
      courseB_collector_loops8_2019_authored_hint:
        courseB_collector_loops8_challenge_a: Si tu ne comprends pas où mettre les
          boucles répéter, écrit le code étape par étape et regarde ce qui se répète.
      courseB_collector_loops9_authored_hint:
        courseB_collector_loops9_a: 'Ça a l’air difficile ? Divise le problème en
          3 petites parties pour te faciliter la tâche.  '
        courseB_collector_loops9_b: Tu auras besoin de 3 boucles répéter, l’une après
          l’autre, pour cette solution.
      courseB_collector_loops9_2018_authored_hint:
        courseB_collector_loops9_a: 'Ça a l’air difficile ? Divise le problème en
          3 petites parties pour te faciliter la tâche.  '
        courseB_collector_loops9_b: Tu auras besoin de 3 boucles répéter, l’une après
          l’autre, pour cette solution.
      courseB_collector_loops9_2019_authored_hint:
        courseB_collector_loops9_a: 'Ça a l’air difficile ? Divise le problème en
          3 petites parties pour te faciliter la tâche.  '
        courseB_collector_loops9_b: Tu auras besoin de 3 boucles répéter, l’une après
          l’autre, pour cette solution.
      courseB_collector_loops_challenge1_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Commence par faire boucler les commandes suivantes :

          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |
          Déplace-toi à l’Est deux fois entre chaque chemin.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Tu peux résoudre ce problème en seulement 14 blocs. Clique de nouveau pour voir une solution.
        courseB_collector_loops_challenge1_d: |-
          Essaie ceci !

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Commence par faire boucler les commandes suivantes :

          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |
          Déplace-toi à l’Est deux fois entre chaque chemin.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Tu peux résoudre ce problème en seulement 14 blocs. Clique de nouveau pour voir une solution.
        courseB_collector_loops_challenge1_d: |-
          Essaie ceci !

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2019_authored_hint:
        courseB_collector_loops_challenge1_b: |
          Commence par faire boucler les commandes suivantes :

          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |
          Déplace-toi à l’Est deux fois entre chaque chemin.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Tu peux résoudre ce problème en seulement 14 blocs. Clique de nouveau pour voir une solution.
        courseB_collector_loops_challenge1_d: |-
          Essaie ceci !

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_authored_hint:
        courseB_collector_loops_challenge2_a: Si un problème survient, n’hésite pas
          à recommencer. N’abandonne pas !
        courseB_collector_loops_challenge2_b: |-
          Si tu répètes ce motif, Laurel n’atteindra pas le mur en bas de la grotte !

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Essaie d’utiliser un bloc ˋrépéter`
          pour ramasser la dernière pile de trésors !
        courseB_collector_loops_challenge2_d: |-
          Essaie cette solution :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2_2018_authored_hint:
        courseB_collector_loops_challenge2_a: Si un problème survient, n’hésite pas
          à recommencer. N’abandonne pas !
        courseB_collector_loops_challenge2_b: |-
          Si tu répètes ce motif, Laurel n’atteindra pas le mur en bas de la grotte !

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: Essaie d’utiliser un bloc ˋrépéter`
          pour ramasser la dernière pile de trésors !
        courseB_collector_loops_challenge2_d: |-
          Essaie cette solution :

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2a_authored_hint:
        courseB_collector_loops_challenge2a_a: Si un problème survient, essaie de
          déboguer. N’abandonne pas !
        courseB_collector_loops_challenge2a_b: Jette un œil à cette solution pour
          traverser le labyrinthe. Vois-tu un motif qui se répète ?
        courseB_collector_loops_challenge2a_c: Pour ramasser tout le trésor, tu auras
          soit besoin d’ajouter deux blocs  <xml> <block type="collector_collect"/></xml>
          à l’intérieur de ta boucle, soit de mettre le bloc à l’intérieur de sa propre
          boucle ˋrépéter`.
      courseB_collector_loops_challenge2a_2018_authored_hint:
        courseB_collector_loops_challenge2a_a: Si un problème survient, essaie de
          déboguer. N’abandonne pas !
        courseB_collector_loops_challenge2a_b: Jette un œil à cette solution pour
          traverser le labyrinthe. Vois-tu un motif qui se répète ?
        courseB_collector_loops_challenge2a_c: Pour ramasser tout le trésor, tu auras
          soit besoin d’ajouter deux blocs  <xml> <block type="collector_collect"/></xml>
          à l’intérieur de ta boucle, soit de mettre le bloc à l’intérieur de sa propre
          boucle ˋrépéter`.
      courseB_collector_loops_challenge2a_2019_authored_hint:
        courseB_collector_loops_challenge2a_a: Si un problème survient, essaie de
          déboguer. N’abandonne pas !
        courseB_collector_loops_challenge2a_b: Jette un œil à cette solution pour
          traverser le labyrinthe. Vois-tu un motif qui se répète ?
        courseB_collector_loops_challenge2a_c: Pour ramasser tout le trésor, tu auras
          soit besoin d’ajouter deux blocs  <xml> <block type="collector_collect"/></xml>
          à l’intérieur de ta boucle, soit de mettre le bloc à l’intérieur de sa propre
          boucle ˋrépéter`.
      courseB_collector_loops_challenge`_authored_hint:
        courseA_collector_loops_challenge2_b: "Tu as besoin d’un seul bloc ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png) pour résoudre ce problème.\n\n"
        courseA_collector_loops_challenge2_a: |-
          Tu peux revenir sur le chemin une deuxième fois avant de te déplacer au Sud.

          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      courseB_collector_prog3_authored_hint:
        courseB_collector_prog3_a: Essaie d’utiliser une boucle ˋrépéter` pour récolter
          ton or.
      courseB_iceage_loops1_authored_hint:
        courseB_iceage_loops1_a: Attention à la glace brisée ! Scrat tombera à travers
          !
        courseB_iceage_loops1_b: |-
          Tu devras utiliser ce bloc :

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Attention à la glace brisée ! Scrat tombera dans
          l’eau !
        courseB_iceage_loops10_b: Essaie de dire les étapes à voix haute ou de les
          écrire sur du papier. Vois-tu des choses qui se répètent ?
        courseB_iceage_loops10_c: Ce casse-tête est long ! Suis ce chemin.
      courseB_iceage_loops10_2019_authored_hint:
        courseB_iceage_loops10_a: Attention à la glace brisée ! Scrat tombera dans
          l’eau !
        courseB_iceage_loops10_b: Essaie de dire les étapes à voix haute ou de les
          écrire sur du papier. Vois-tu des choses qui se répètent ?
        courseB_iceage_loops10_c: Ce casse-tête est long ! Suis ce chemin.
      courseB_iceage_loops1_2019_authored_hint:
        courseB_iceage_loops1_a: Attention à la glace brisée ! Scrat tombera à travers
          !
        courseB_iceage_loops1_b: |-
          Tu devras utiliser ce bloc :

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops2_authored_hint:
        courseB_iceage_loops2_a: Divise ce problème en deux parties, une avant le
          coin et une après.
        courseB_iceage_loops2_b: Si tu es bloqué, essaie de dire les étapes à voix
          haute.
        courseB_iceage_loops2_c: Suis ce chemin pour amener Scrat jusqu’au gland.
      courseB_iceage_loops2_2019_authored_hint:
        courseB_iceage_loops2_a: Divise ce problème en deux parties, une avant le
          coin et une après.
        courseB_iceage_loops2_b: Si tu es bloqué, essaie de dire les étapes à voix
          haute.
        courseB_iceage_loops2_c: Suis ce chemin pour amener Scrat jusqu’au gland.
      courseB_iceage_loops3_authored_hint:
        courseB_iceage_loops3_a: |-
          Utilise ce nouveau bloc !
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: |-
          Pour répéter du code, fais glisser une boucle ˋrépéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml>, puis mets le bloc que tu veux à l’intérieur.
      courseB_iceage_loops3_2019_authored_hint:
        courseB_iceage_loops3_a: |-
          Utilise ce nouveau bloc !
          <xml><block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">5</title>
          </block></xml>
        courseB_iceage_loops3_b: |-
          Pour répéter du code, fais glisser une boucle ˋrépéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">???</title>
          </block></xml>, puis mets le bloc que tu veux à l’intérieur.
      courseB_iceage_loops4_authored_hint:
        courseB_iceage_loops4_a: Essaie d’écrire les étapes que Scrat devrait suivre
          pour arriver au gland. Vois-tu un motif ?
        courseB_iceage_loops4_b: N’aie pas peur d’exécuter ton code pour voir ce qui
          se passe !
        courseB_iceage_loops4_c: Voici le chemin que Scrat devrait emprunter.
      courseB_iceage_loops4_2019_authored_hint:
        courseB_iceage_loops4_a: Essaie d’écrire les étapes que Scrat devrait suivre
          pour arriver au gland. Vois-tu un motif ?
        courseB_iceage_loops4_b: N’aie pas peur d’exécuter ton code pour voir ce qui
          se passe !
        courseB_iceage_loops4_c: Voici le chemin que Scrat devrait emprunter.
      courseB_iceage_loops6_authored_hint:
        courseB_iceage_loops6_a: Ton code final devra avoir **trois** blocs de mouvement.
        courseB_iceage_loops6_b: Tu n’as besoin d’ajouter qu’**une** boucle !
        courseB_iceage_loops6_c: Ton chemin final devrait ressembler à ceci.
      courseB_iceage_loops6_2019_authored_hint:
        courseB_iceage_loops6_a: Ton code final devra avoir **trois** blocs de mouvement.
        courseB_iceage_loops6_b: Tu n’as besoin d’ajouter qu’**une** boucle !
        courseB_iceage_loops6_c: Ton chemin final devrait ressembler à ceci.
      courseB_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: Si tu es bloqué, essaie d’écrire les étapes sur du
          papier. Vois-tu un motif ?
        courseB_iceage_loops7_b: Voici le chemin que Scrat devrait suivre pour arriver
          jusqu’au gland.
      courseB_iceage_loops7_2019_authored_hint:
        courseB_iceage_loops7_a: Si tu es bloqué, essaie d’écrire les étapes sur du
          papier. Vois-tu un motif ?
        courseB_iceage_loops7_b: Voici le chemin que Scrat devrait suivre pour arriver
          jusqu’au gland.
      courseB_iceage_loops8_authored_hint:
        courseB_iceage_loops8_a: Les blocs de mouvement sont-ils corrects ? Que peux-tu
          changer d’autre ?
        courseB_iceage_loops8_b: La première boucle devrait se répéter **3** fois,
          la deuxième devrait se répéter **5** fois, la troisième boucle devrait se
          répéter **4** fois et la dernière boucle devrait se répéter **4** fois.
        courseB_iceage_loops8_c: Utilise des boucles pour aider Scrat à suivre ce
          chemin.
      courseB_iceage_loops8_2019_authored_hint:
        courseB_iceage_loops8_a: Les blocs de mouvement sont-ils corrects ? Que peux-tu
          changer d’autre ?
        courseB_iceage_loops8_b: La première boucle devrait se répéter **3** fois,
          la deuxième devrait se répéter **5** fois, la troisième boucle devrait se
          répéter **4** fois et la dernière boucle devrait se répéter **4** fois.
        courseB_iceage_loops8_c: Utilise des boucles pour aider Scrat à suivre ce
          chemin.
      courseB_iceage_loops9_authored_hint:
        courseB_iceage_loops9_a: Des problèmes ? Essaie de diviser ce problème en
          plus petites parties. N’aie pas peur d’exécuter ton programme au long du
          processus !
        courseB_iceage_loops9_b: Ton code final devrait avoir **4** boucles.
        courseB_iceage_loops9_c: Scrat devrait suivre ce chemin pour obtenir le gland.
      courseB_iceage_loops9_2019_authored_hint:
        courseB_iceage_loops9_a: Des problèmes ? Essaie de diviser ce problème en
          plus petites parties. N’aie pas peur d’exécuter ton programme au long du
          processus !
        courseB_iceage_loops9_b: Ton code final devrait avoir **4** boucles.
        courseB_iceage_loops9_c: Scrat devrait suivre ce chemin pour obtenir le gland.
      courseB_maze_seq1_authored_hint:
        courseB_maze_seq1_a: Connecte des blocs au bloc <xml><block type="when_run"/></xml>
          pour déplacer l’oiseau !
        courseB_maze_seq1_b: Fais glisser ces <xml><block type="maze_moveSouth"/></xml>
          flèches et connecte-les au bloc <xml><block type="when_run"/></xml> pour
          amener ton oiseau au cochon.
      courseB_maze_seq10_authored_hint:
        courseB_maze_seq10_a: Essaie d’abord d’écrire les étapes sur du papier.
        courseB_maze_seq10_b: Tu devras te déplacer dans deux directions différentes
          pour atteindre le cochon.
      courseB_maze_seq11_authored_hint:
        courseB_maze_seq11_a: Essaie d’abord d’écrire les étapes sur du papier.
        courseB_maze_seq11_b: 'Résous le problème en deux parties : une avant le coin
          et une après.'
      courseB_maze_seq1_2018_authored_hint:
        courseB_maze_seq1_a: Connecte des blocs au bloc <xml><block type="when_run"/></xml>
          pour déplacer Scrat !
        courseB_maze_seq1_b: Fais glisser ces <xml><block type="maze_moveSouth"/></xml>
          flèches et connecte-les au bloc <xml><block type="when_run"/></xml> pour
          amener Scrat au gland.
      courseB_maze_seq1_2019_authored_hint:
        courseB_maze_seq1_a: Connecte des blocs au bloc <xml><block type="when_run"/></xml>
          pour déplacer Scrat !
        courseB_maze_seq1_b: Fais glisser ces <xml><block type="maze_moveSouth"/></xml>
          flèches et connecte-les au bloc <xml><block type="when_run"/></xml> pour
          amener Scrat au gland.
      courseB_maze_seq2_authored_hint:
        courseB_maze_seq2_a: Il manque un bloc à ce programme. Peux-tu trouver lequel
          ?
        courseB_maze_seq2_b: Essaie d’exécuter le code donné pour voir ce que l’oiseau
          doit faire après.
      courseB_maze_seq2_2018_authored_hint:
        courseB_maze_seq2_a: Il manque un bloc à ce programme. Peux-tu trouver lequel
          ?
        courseB_maze_seq2_b: Essaie d’exécuter le code donné pour voir ce que Scrat
          doit faire après.
      courseB_maze_seq3_authored_hint:
        courseB_maze_seq3_a: Un des blocs déplace l’oiseau dans la mauvaise direction.
          Peux-tu trouver lequel et le remplacer par le bon bloc ?
        courseB_maze_seq3_b: Essaie d’utiliser le bouton étape pour trouver où le
          programme tourne mal. Est-ce la première étape ? La deuxième ?
        courseB_maze_seq3_c: Le bloc <xml><block type="maze_moveWest"/></xml> ne semble
          pas déplacer l’oiseau dans la bonne direction.
      courseB_maze_seq3_2018_authored_hint:
        courseB_maze_seq3_a: Un des blocs déplace Scrat dans la mauvaise direction.
          Peux-tu trouver lequel et le remplacer par le bon bloc ?
        courseB_maze_seq3_b: Essaie d’utiliser le bouton étape pour trouver où le
          programme tourne mal. Est-ce la première étape ? La deuxième ?
        courseB_maze_seq3_c: Le bloc <xml><block type="maze_moveWest"/></xml> ne semble
          pas déplacer l’oiseau dans la bonne direction.
      courseB_maze_seq4_authored_hint:
        courseB_maze_seq4_a: Essaie d’ajouter une instruction à la fois jusqu’à atteindre
          le cochon.
        courseB_maze_seq4_b: Tu devras utiliser le bloc <xml><block type="maze_moveEast"/></xml>
          pour résoudre ce casse-tête.
      courseB_maze_seq4_2018_authored_hint:
        courseB_maze_seq4_a: Essaie d’ajouter une instruction à la fois jusqu’à atteindre
          le gland.
        courseB_maze_seq4_b: Tu devras utiliser le bloc <xml><block type="maze_moveEast"/></xml>
          pour résoudre ce casse-tête.
      courseB_maze_seq4_2019_authored_hint:
        courseB_maze_seq4_a: Essaie d’ajouter une instruction à la fois jusqu’à atteindre
          le gland.
        courseB_maze_seq4_b: Tu devras utiliser le bloc <xml><block type="maze_moveEast"/></xml>
          pour résoudre ce casse-tête.
      courseB_maze_seq5_authored_hint:
        courseB_maze_seq5_a: Si tu es bloqué, essaie de dessiner le chemin sur du
          papier.
        courseB_maze_seq5_b: Il y a 2 façons de résoudre ce casse-tête !
        courseB_maze_seq5_c: Pas sûr de savoir comment atteindre le cochon ? Essaie
          ce chemin.
      courseB_maze_seq5_2018_authored_hint:
        courseB_maze_seq5_a: Si tu es bloqué, essaie de dessiner le chemin sur du
          papier.
        courseB_maze_seq5_b: Il y a 2 façons de résoudre ce casse-tête !
        courseB_maze_seq5_c: Pas sûr de savoir comment atteindre le gland ? Essaie
          ce chemin.
      courseB_maze_seq5_2019_authored_hint:
        courseB_maze_seq5_a: Si tu es bloqué, essaie de dessiner le chemin sur du
          papier.
        courseB_maze_seq5_b: Il y a 2 façons de résoudre ce casse-tête !
        courseB_maze_seq5_c: Pas sûr de savoir comment atteindre le gland ? Essaie
          ce chemin.
      courseB_maze_seq6_authored_hint:
        courseB_maze_seq6_a: Ton code final devrait avoir trois blocs de mouvement.
        courseB_maze_seq6_b: Si tu es bloqué, essaie de résoudre le casse-tête en
          deux parties, une vers le côté et une vers le haut.
        courseB_maze_seq5_c: Il y a deux façons de résoudre ce puzzle.
        courseB_maze_seq5_d: Pas sûr de savoir comment atteindre le cochon ? Essaie
          ce chemin !
      courseB_maze_seq6_2018_authored_hint:
        courseB_maze_seq6_a: Ton code final devrait avoir trois blocs de mouvement.
        courseB_maze_seq6_b: Si tu es bloqué, essaie de résoudre le casse-tête en
          deux parties, une vers le côté et une vers le haut.
        courseB_maze_seq5_c: Il y a deux façons de résoudre ce puzzle.
        courseB_maze_seq5_d: Pas sûr de savoir comment atteindre le gland ? Essaie
          ce chemin !
      courseB_maze_seq6_2019_authored_hint:
        courseB_maze_seq6_a: Ton code final devrait avoir trois blocs de mouvement.
        courseB_maze_seq6_b: Si tu es bloqué, essaie de résoudre le casse-tête en
          deux parties, une vers le côté et une vers le haut.
        courseB_maze_seq5_c: Il y a deux façons de résoudre ce puzzle.
        courseB_maze_seq5_d: Pas sûr de savoir comment atteindre le gland ? Essaie
          ce chemin !
      courseB_maze_seq7_authored_hint:
        courseB_maze_seq7_a: Ajoute 1 bloc pour déplacer l’oiseau vers le cochon.
        courseB_maze_seq7_b: Essaie d’exécuter le code qui t’es donné et regarde où
          tu arrives.
        courseB_maze_seq7_c: Tu n’arrives pas à atteindre le cochon ? Essaie ce chemin
          !
      courseB_maze_seq7_2018_authored_hint:
        courseB_maze_seq7_a: Ajoute 1 bloc pour déplacer Scrat vers le gland.
        courseB_maze_seq7_b: Essaie d’exécuter le code qui t’es donné et regarde où
          tu arrives.
        courseB_maze_seq7_c: Tu n’arrives pas à atteindre le gland ? Essaie ce chemin
          !
      courseB_maze_seq7_2019_authored_hint:
        courseB_maze_seq7_a: Ajoute 1 bloc pour déplacer Scrat vers le gland.
        courseB_maze_seq7_b: Essaie d’exécuter le code qui t’es donné et regarde où
          tu arrives.
        courseB_maze_seq7_c: Tu n’arrives pas à atteindre le gland ? Essaie ce chemin
          !
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_a: Essaie d’ajouter un bloc à la fois jusqu’à résoudre le
          casse-tête.
        courseB_maze_seq8_b: Il y a deux façons de résoudre ce casse-tête !
        courseB_maze_seq8_c: Tu ne sais pas où aller ? Essaie ce chemin !
      courseB_maze_seq8_2018_authored_hint:
        courseB_maze_seq8_a: Essaie d’ajouter un bloc à la fois jusqu’à résoudre le
          casse-tête.
        courseB_maze_seq8_b: Il y a plus d’une façon de résoudre ce casse-tête !
        courseB_maze_seq8_c: Tu ne sais pas où aller ? Essaie ce chemin !
      courseB_maze_seq8_2019_authored_hint:
        courseB_maze_seq8_a: Essaie d’ajouter un bloc à la fois jusqu’à résoudre le
          casse-tête.
        courseB_maze_seq8_b: Il y a plus d’une façon de résoudre ce casse-tête !
        courseB_maze_seq8_c: Tu ne sais pas où aller ? Essaie ce chemin !
      courseB_maze_seq9_authored_hint:
        courseB_maze_seq9_a: Essaie d’abord d’écrire toutes les étapes sur du papier.
        courseB_maze_seq9_b: Construit ton programme un bloc à la fois et teste-le
          tout le long.
        courseB_maze_seq9_c: Il y a deux façons de résoudre ce puzzle.
        courseB_maze_seq9_d: Bloqué ? Essaie ce chemin !
      courseB_maze_seq9_2018_authored_hint:
        courseB_maze_seq9_a: Essaie d’abord d’écrire toutes les étapes sur du papier.
        courseB_maze_seq9_b: Construit ton programme un bloc à la fois et teste-le
          tout le long.
        courseB_maze_seq9_c: Il y a deux façons de résoudre ce puzzle.
        courseB_maze_seq9_d: Bloqué ? Essaie ce chemin !
      courseB_maze_seq9_2019_authored_hint:
        courseB_maze_seq9_a: Essaie d’abord d’écrire toutes les étapes sur du papier.
        courseB_maze_seq9_b: Construit ton programme un bloc à la fois et teste-le
          tout le long.
        courseB_maze_seq9_c: Il y a deux façons de résoudre ce puzzle.
        courseB_maze_seq9_d: Bloqué ? Essaie ce chemin !
      courseB_maze_seqCold_authored_hint:
        courseB_maze_seqCold_a: Bloqué ? Essaie de tracer du doigt le chemin de l’oiseau.
        courseB_maze_seqCold_b: Les blocs supplémentaires doivent être ajoutés avant
          le dernier ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51
          PM.png )
      courseB_maze_seqOld_authored_hint:
        courseB_maze_seqOld_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
      courseB_maze_seq_challenge1_authored_hint:
        courseB_maze_seq_challenge1_a: Le chemin le plus court pourrait ne pas être
          le bon cette fois.
        courseB_maze_seq_challenge1_b: Essayez de vous déplacer vers le Ouest pour
          commencer.
      courseB_maze_seq_challenge1_2018_authored_hint:
        courseB_maze_seq_challenge1_a: Le chemin le plus court pourrait ne pas être
          le bon cette fois.
        courseB_maze_seq_challenge1_b: Essayez de vous déplacer vers le Ouest pour
          commencer.
      courseB_maze_seq_challenge1_2019_authored_hint:
        courseB_maze_seq_challenge1_a: Le chemin le plus court pourrait ne pas être
          le bon cette fois.
        courseB_maze_seq_challenge1_b: Essayez de vous déplacer vers le Ouest pour
          commencer.
      courseB_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge2_a: Tu n’as pas besoin d’ajouter ou de retirer
          des blocs pour résoudre ce problème.
        courseB_maze_seq_challenge2_b: Réorganise les blocs et emprunte le chemin
          en marches d’escalier.
      courseB_maze_seq_challenge2_2018_authored_hint:
        courseB_maze_seq_challenge2_a: Tu n’as pas besoin d’ajouter ou de retirer
          des blocs pour résoudre ce problème.
        courseB_maze_seq_challenge2_b: Réorganise les blocs et emprunte le chemin
          en marches d’escalier.
      courseB_maze_seq_challenge2_2019_authored_hint:
        courseB_maze_seq_challenge2_a: Tu n’as pas besoin d’ajouter ou de retirer
          des blocs pour résoudre ce problème.
        courseB_maze_seq_challenge2_b: Réorganise les blocs et emprunte le chemin
          en marches d’escalier.
      courseB_playlab_events2_authored_hint:
        courseB_playlab_events2_a: |-
          Voici le bloc qui fait dire quelque chose à Daisy :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events2_2018_authored_hint:
        courseB_playlab_events2_a: |-
          Voici le bloc qui fait dire quelque chose à Daisy :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events2_2019_authored_hint:
        courseB_playlab_events2_a: |-
          Voici le bloc qui fait dire quelque chose à Daisy :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseB_playlab_events3_authored_hint:
        courseB_playlab_events3_a: |-
          Voici le bloc que tu devrais utiliser pour ajouter l’événement :

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Voici le bloc dont tu as besoin pour changer l’humeur de Daisy :

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2018_authored_hint:
        courseB_playlab_events3_a: |-
          Voici le bloc que tu devrais utiliser pour ajouter l’événement :

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Voici le bloc dont tu as besoin pour changer l’humeur de Daisy :

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events3_2019_authored_hint:
        courseB_playlab_events3_a: |-
          Voici le bloc que tu devrais utiliser pour ajouter l’événement :

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Voici le bloc dont tu as besoin pour changer l’humeur de Daisy :

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">random</title>
          </block>
          </xml>
      courseB_playlab_events4_authored_hint:
        courseB_playlab_events4_a: |-
          Voici l’événement qui contrôle la flèche gauche :

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Voici le bloc qui déplace le chevalier à gauche.

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2018_authored_hint:
        courseB_playlab_events4_a: |-
          Voici l’événement qui contrôle la flèche gauche :

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Voici le bloc qui déplace le chevalier à gauche.

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2019_authored_hint:
        courseB_playlab_events4_a: |-
          Voici l’événement qui contrôle la flèche gauche :

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Voici le bloc qui déplace le chevalier à gauche.

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events5_authored_hint:
        courseB_playlab_events5_a: |-
          Voici l’événement qui contrôle la flèche droite :

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: "Voici le bloc qui fait fuir le chevalier. \n\n<xml>\n<block
          type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title
          name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events5_2018_authored_hint:
        courseB_playlab_events5_a: |-
          Voici l’événement qui contrôle la flèche droite :

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: "Voici le bloc qui fait fuir le chevalier. \n\n<xml>\n<block
          type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title
          name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events5_2019_authored_hint:
        courseB_playlab_events5_a: |-
          Voici l’événement qui contrôle la flèche droite :

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
            </block>
            </xml>
        courseB_playlab_events5_b: "Voici le bloc qui fait fuir le chevalier. \n\n<xml>\n<block
          type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title
          name=\"DIR\">2</title>\n  </block>\n</xml>"
      courseB_playlab_events6_authored_hint:
        courseB_playlab_events6_a: |-
          Tu auras besoin de ces blocs d’événement :

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Utilise le menu déroulant des blocs d’événement verts ˋquand flèche ___` pour choisir d’autres directions.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Obtient tous les drapeaux pour réussir !
      courseB_playlab_events6_2018_authored_hint:
        courseB_playlab_events6_a: |-
          Tu auras besoin de ces blocs d’événement :

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Utilise le menu déroulant des blocs d’événement verts ˋquand flèche ___` pour choisir d’autres directions.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Obtient tous les drapeaux pour réussir !
      courseB_playlab_events6_2019_authored_hint:
        courseB_playlab_events6_a: |-
          Tu auras besoin de ces blocs d’événement :

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">up</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">down</title>
          </block>
          </xml>
        courseB_playlab_events6_b: |-
          Utilise le menu déroulant des blocs d’événement verts ˋquand flèche ___` pour choisir d’autres directions.

          ![](https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif)
        courseB_playlab_events6_c: Obtient tous les drapeaux pour réussir !
      courseB_playlab_events7_authored_hint:
        courseB_playlab_events7_a: |-
          Voici le bloc événement dont tu auras besoin :

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Voici le bloc dont tu as besoin pour jouer un son.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Voici le bloc dont tu as besoin pour faire disparaître le chevalier :

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2018_authored_hint:
        courseB_playlab_events7_a: |-
          Voici le bloc événement dont tu auras besoin :

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Voici le bloc dont tu as besoin pour jouer un son.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Voici le bloc dont tu as besoin pour faire disparaître le chevalier :

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2019_authored_hint:
        courseB_playlab_events7_a: |-
          Voici le bloc événement dont tu auras besoin :

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Voici le bloc dont tu as besoin pour jouer un son.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Voici le bloc dont tu as besoin pour faire disparaître le chevalier :

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_eventsToolbox_authored_hint:
        courseB_playlab_events7_a: |-
          Voici le bloc événement dont tu auras besoin :

          ![](https://images.code.org/2ed42b3a3108c6affdfc866de57f2eec-image-1475624565390.42.18.png)
        courseB_playlab_events7_b: |-
          Voici le bloc dont tu as besoin pour jouer un son.

          ![](https://images.code.org/58e9b9a146a4ca3a8eee25845110b805-image-1475624550269.42.00.png)
        courseB_playlab_events7_c: |-
          Voici le bloc dont tu as besoin pour faire disparaître le chevalier :

          ![](https://images.code.org/f468611cbe51e1cb35531334f625395a-image-1475624478204.41.02.png)
      courseB_playlab_events_challenge1_authored_hint:
        courseB_playlab_events_challenge1_a: "Déplace les autres animaux vers le bas
          quand tu appuies sur `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\"
          movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          Modifie la vitesse des animaux en utilisant ce bloc :

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Que dira tout le monde quand la course se terminera ? Fais-les parler avec cet événement :

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2018_authored_hint:
        courseB_playlab_events_challenge1_a: "Déplace les autres animaux vers le bas
          quand tu appuies sur `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\"
          movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          Modifie la vitesse des animaux en utilisant ce bloc :

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Que dira tout le monde quand la course se terminera ? Fais-les parler avec cet événement :

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2019_authored_hint:
        courseB_playlab_events_challenge1_a: "Déplace les autres animaux vers le bas
          quand tu appuies sur `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\"
          movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |
          Modifie la vitesse des animaux en utilisant ce bloc :

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          Que dira tout le monde quand la course se terminera ? Fais-les parler avec cet événement :

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">Woo hoo!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge2_authored_hint:
        courseB_playlab_events_challenge2_a: Chaque animal dans le jeu devrait disparaître
          quand on lui clique dessus. Il devrait aussi réapparaître après une ou deux
          secondes !
        courseB_playlab_events_challenge2_b: |-
          Utilise d’autres blocs événement pour faire disparaître les autres animaux !

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Utilise des commandes pour jouer des sons ou gagner des points quand on clique sur les animaux !

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Diversifie !

          Fait que certains animaux donnent plus de points que d’autres.
          Utilise différents sons.
          Modifie l’humeur des animaux !
      courseB_playlab_events_challenge2_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Chaque animal dans le jeu devrait disparaître
          quand on lui clique dessus. Il devrait aussi réapparaître après une ou deux
          secondes !
        courseB_playlab_events_challenge2_b: |-
          Utilise d’autres blocs événement pour faire disparaître les autres animaux !

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Utilise des commandes pour jouer des sons ou gagner des points quand on clique sur les animaux !

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Diversifie !

          Fait que certains animaux donnent plus de points que d’autres.
          Utilise différents sons.
          Modifie l’humeur des animaux !
      courseB_playlab_events_challenge2_2019_authored_hint:
        courseB_playlab_events_challenge2_a: Chaque animal dans le jeu devrait disparaître
          quand on lui clique dessus. Il devrait aussi réapparaître après une ou deux
          secondes !
        courseB_playlab_events_challenge2_b: |-
          Utilise d’autres blocs événement pour faire disparaître les autres animaux !

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Utilise des commandes pour jouer des sons ou gagner des points quand on clique sur les animaux !

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Diversifie !

          Fait que certains animaux donnent plus de points que d’autres.
          Utilise différents sons.
          Modifie l’humeur des animaux !
      courseB_playlab_events_challenge2_embed_authored_hint:
        courseB_playlab_events_challenge2_a: Chaque animal dans le jeu devrait disparaître
          quand on appuie dessus. Il devrait également revenir après une ou deux secondes
          !
        courseB_playlab_events_challenge2_b: |-
          Utilise d’autres blocs événement pour faire disparaître les autres animaux !

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Utilise des commandes pour jouer des sons ou gagner des points quand on clique sur les animaux !

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Diversifie !

          Fait que certains animaux donnent plus de points que d’autres.
          Utilise différents sons.
          Modifie l’humeur des animaux !
      courseB_playlab_events_challenge2_template_authored_hint:
        courseB_playlab_events_challenge2_a: Chaque animal dans le jeu devrait disparaître
          quand on appuie dessus. Il devrait également revenir après une ou deux secondes
          !
        courseB_playlab_events_challenge2_b: |-
          Utilise d’autres blocs événement pour faire disparaître les autres animaux !

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Utilise des commandes pour jouer des sons ou gagner des points quand on clique sur les animaux !

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Diversifie !

          Fait que certains animaux donnent plus de points que d’autres.
          Utilise différents sons.
          Modifie l’humeur des animaux !
      courseB_playlab_events_challenge2_template_2018_authored_hint:
        courseB_playlab_events_challenge2_a: Chaque animal dans le jeu devrait disparaître
          quand on appuie dessus. Il devrait également revenir après une ou deux secondes
          !
        courseB_playlab_events_challenge2_b: |-
          Utilise d’autres blocs événement pour faire disparaître les autres animaux !

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Utilise des commandes pour jouer des sons ou gagner des points quand on clique sur les animaux !

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Diversifie !

          Fait que certains animaux donnent plus de points que d’autres.
          Utilise différents sons.
          Modifie l’humeur des animaux !
      courseB_playlab_events_challenge2_template_2019_authored_hint:
        courseB_playlab_events_challenge2_a: Chaque animal dans le jeu devrait disparaître
          quand on appuie dessus. Il devrait également revenir après une ou deux secondes
          !
        courseB_playlab_events_challenge2_b: |-
          Utilise d’autres blocs événement pour faire disparaître les autres animaux !

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block>
          </xml>
        courseB_playlab_events_challenge2_c: |-
          Utilise des commandes pour jouer des sons ou gagner des points quand on clique sur les animaux !

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">slap</title>
          </block>
          <block type="studio_changeScore"/></xml>
        courseB_playlab_events_challenge2_d: |-
          Diversifie !

          Fait que certains animaux donnent plus de points que d’autres.
          Utilise différents sons.
          Modifie l’humeur des animaux !
      courseB_starWars_prog1_authored_hint:
        courseB_starWars_prog1_a: Essaie d’ajouter un bloc à la fois, puis de cliquer
          sur « Exécuter » pour voir ce qui se passe.
        courseB_starWars_prog1_b: |
          Tu devras te déplacer à l’Est pour résoudre ce casse-tête.
          À quelle distance dois-tu te déplacer ?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2018_authored_hint:
        courseB_starWars_prog1_a: Essaie d’ajouter un bloc à la fois, puis de cliquer
          sur « Exécuter » pour voir ce qui se passe.
        courseB_starWars_prog1_b: |
          Tu devras te déplacer à l’Est pour résoudre ce casse-tête.
          À quelle distance dois-tu te déplacer ?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog1_2019_authored_hint:
        courseB_starWars_prog1_a: Essaie d’ajouter un bloc à la fois, puis de cliquer
          sur « Exécuter » pour voir ce qui se passe.
        courseB_starWars_prog1_b: |
          Tu devras te déplacer à l’Est pour résoudre ce casse-tête.
          À quelle distance dois-tu te déplacer ?

          <xml><block type="studio_moveEast"/></xml>
      courseB_starWars_prog2_authored_hint:
        courseB_starWars_prog2_a: Sépare ce problème en deux parties. Ramasse une
          pile de métal, puis trouve comment atteindre la suivante.
      courseB_starWars_prog2_2018_authored_hint:
        courseB_starWars_prog2_a: Sépare ce problème en deux parties. Ramasse une
          pile de métal, puis trouve comment atteindre la suivante.
      courseB_starWars_prog2_2019_authored_hint:
        courseB_starWars_prog2_a: Sépare ce problème en deux parties. Ramasse une
          pile de métal, puis trouve comment atteindre la suivante.
      courseB_starWars_prog3_authored_hint:
        courseB_starWars_prog3_a: Tu devras te déplacer dans 3 directions pour résoudre
          ce casse-tête.
        courseB_starWars_prog3_b: Construit le code un bout à la fois. Exécute-le
          pour savoir où aller à partir de là.
      courseB_starWars_prog3_2018_authored_hint:
        courseB_starWars_prog3_a: Tu devras te déplacer dans 3 directions pour résoudre
          ce casse-tête.
        courseB_starWars_prog3_b: Construit le code un bout à la fois. Exécute-le
          pour savoir où aller à partir de là.
      courseB_starWars_prog3_2019_authored_hint:
        courseB_starWars_prog3_a: Tu devras te déplacer dans 3 directions pour résoudre
          ce casse-tête.
        courseB_starWars_prog3_b: Construit le code un bout à la fois. Exécute-le
          pour savoir où aller à partir de là.
      courseB_starWars_prog4_authored_hint:
        courseB_starWars_prog4_a: Construit le code un bout à la fois. Exécute-le
          pour savoir où aller à partir de là.
        courseB_starWars_prog4_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour un code plus court.

          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2018_authored_hint:
        courseB_starWars_prog4_a: Construit le code un bout à la fois. Exécute-le
          pour savoir où aller à partir de là.
        courseB_starWars_prog4_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour un code plus court.

          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog4_2019_authored_hint:
        courseB_starWars_prog4_a: Construit le code un bout à la fois. Exécute-le
          pour savoir où aller à partir de là.
        courseB_starWars_prog4_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour un code plus court.

          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog5_authored_hint:
        courseB_starWars_prog5_a: Ce motif ne ressemble-t-il pas à celui du casse-tête
          précédent ?
        courseB_starWars_prog5_b: BB-8 collectera le métal en roulant dessus.
        courseB_starWars_prog5_c: Trace du doigt le motif. Compte les morceaux de
          métal en avançant.
        courseB_starWars_prog5_da: |-
          Regarde ce qui se passe si tu utilises la même solution que pour le casse-tête en marches d’escalier :

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2018_authored_hint:
        courseB_starWars_prog5_a: Ce motif ne ressemble-t-il pas à celui du casse-tête
          précédent ?
        courseB_starWars_prog5_b: BB-8 collectera le métal en roulant dessus.
        courseB_starWars_prog5_c: Trace du doigt le motif. Compte les morceaux de
          métal en avançant.
        courseB_starWars_prog5_da: |-
          Regarde ce qui se passe si tu utilises la même solution que pour le casse-tête en marches d’escalier :

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog5_2019_authored_hint:
        courseB_starWars_prog5_a: Ce motif ne ressemble-t-il pas à celui du casse-tête
          précédent ?
        courseB_starWars_prog5_b: BB-8 collectera le métal en roulant dessus.
        courseB_starWars_prog5_c: Trace du doigt le motif. Compte les morceaux de
          métal en avançant.
        courseB_starWars_prog5_da: |-
          Regarde ce qui se passe si tu utilises la même solution que pour le casse-tête en marches d’escalier :

          ![](https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png)
      courseB_starWars_prog6_authored_hint:
        courseB_starWars_prog6_a: Ce motif n’est qu’en marche d’escalier avec deux
          déplacements par direction !
        courseB_starWars_prog6_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour un code plus court.

          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2018_authored_hint:
        courseB_starWars_prog6_a: Ce motif n’est qu’en marche d’escalier avec deux
          déplacements par direction !
        courseB_starWars_prog6_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour un code plus court.

          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog6_2019_authored_hint:
        courseB_starWars_prog6_a: Ce motif n’est qu’en marche d’escalier avec deux
          déplacements par direction !
        courseB_starWars_prog6_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour un code plus court.

          <xml>  <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog7_authored_hint:
        courseB_starWars_prog7_a: Ce motif ne ressemble-t-il pas à celui du casse-tête
          précédent ?
        courseB_starWars_prog7_b: BB-8 collectera le métal en roulant dessus.
        courseB_starWars_prog7_c: Essaie de dessiner le grand motif en marches d’escalier
          sur ce casse-tête. Est-ce qu’il permet de ramasser tout le métal ?
      courseB_starWars_prog7_2018_authored_hint:
        courseB_starWars_prog7_a: Ce motif ne ressemble-t-il pas à celui du casse-tête
          précédent ?
        courseB_starWars_prog7_b: BB-8 collectera le métal en roulant dessus.
        courseB_starWars_prog7_c: Essaie de dessiner le grand motif en marches d’escalier
          sur ce casse-tête. Est-ce qu’il permet de ramasser tout le métal ?
      courseB_starWars_prog7_2019_authored_hint:
        courseB_starWars_prog7_a: Ce motif ne ressemble-t-il pas à celui du casse-tête
          précédent ?
        courseB_starWars_prog7_b: BB-8 collectera le métal en roulant dessus.
        courseB_starWars_prog7_c: Essaie de dessiner le grand motif en marches d’escalier
          sur ce casse-tête. Est-ce qu’il permet de ramasser tout le métal ?
      courseB_starWars_prog8_authored_hint:
        courseB_starWars_prog8_a: Ce n’est pas grave de retourner sur des cases que
          tu as déjà traversées.
        courseB_starWars_prog8_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour voir ce qui arrive au code que tu mets à l’intérieur.

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2018_authored_hint:
        courseB_starWars_prog8_a: Ce n’est pas grave de retourner sur des cases que
          tu as déjà traversées.
        courseB_starWars_prog8_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour voir ce qui arrive au code que tu mets à l’intérieur.

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog8_2019_authored_hint:
        courseB_starWars_prog8_a: Ce n’est pas grave de retourner sur des cases que
          tu as déjà traversées.
        courseB_starWars_prog8_b: |-
          Essaie d’utiliser le bloc ˋrépéter` pour voir ce qui arrive au code que tu mets à l’intérieur.

          <xml>
          <block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block>
          </xml>
      courseB_starWars_prog9_authored_hint:
        courseB_starWars_prog9_a: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
        courseB_starWars_prog9_b: Il y a beaucoup de façons de résoudre ce casse-tête.
        courseB_starWars_prog9_c: Une boucle ˋrépéter` pourrait-elle aider ici ?
      courseB_starWars_prog9_2018_authored_hint:
        courseB_starWars_prog9_a: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
        courseB_starWars_prog9_b: Il y a beaucoup de façons de résoudre ce casse-tête.
        courseB_starWars_prog9_c: |-
          Une boucle ˋrépéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block></xml>loop pourrait-elle aider ici ?
      courseB_starWars_prog9_2019_authored_hint:
        courseB_starWars_prog9_a: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
        courseB_starWars_prog9_b: Il y a beaucoup de façons de résoudre ce casse-tête.
        courseB_starWars_prog9_c: |-
          Une boucle ˋrépéter` <xml><block type="controls_repeat_simplified">
          <title name="TIMES">3</title>
          </block></xml>loop pourrait-elle aider ici ?
      courseC_PlayLab_events1_authored_hint:
        courseC_PlayLab_events1_a: |-
          Attache ce bloc au bloc ˋquand l’exécution commence` :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2018_authored_hint:
        courseC_PlayLab_events1_a: |-
          Attache ce bloc au bloc ˋquand l’exécution commence` :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events1_2019_authored_hint:
        courseC_PlayLab_events1_a: |-
          Attache ce bloc au bloc ˋquand l’exécution commence` :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
      courseC_PlayLab_events2_authored_hint:
        courseC_PlayLab_events2_a: |-
          Attache deux de ces blocs au bloc ˋquand l’exécution commence` :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Utilise le menu déroulant du deuxième bloc ˋl’acteur
          __ dit` pour modifier quel acteur parle.
      courseC_PlayLab_events2_2018_authored_hint:
        courseC_PlayLab_events2_a: |-
          Attache deux de ces blocs au bloc ˋquand l’exécution commence` :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Utilise le menu déroulant du deuxième bloc ˋl’acteur
          __ dit` pour modifier quel acteur parle.
      courseC_PlayLab_events2_2019_authored_hint:
        courseC_PlayLab_events2_a: |-
          Attache deux de ces blocs au bloc ˋquand l’exécution commence` :

          <xml>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">0</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </xml>
        courseC_PlayLab_events2_b: Utilise le menu déroulant du deuxième bloc ˋl’acteur
          __ dit` pour modifier quel acteur parle.
      courseC_PlayLab_events3_authored_hint:
        courseC_PlayLab_events3_a: Tu dois seulement déplacer Jorge d’environ 25 pixels
          vers la droite pour résoudre ce casse-tête.
        courseC_PlayLab_events3_b: Y a-t-il un bloc dans la boîte à outils qui semble
          pouvoir déplacer un acteur ?
        courseC_PlayLab_events3_c: |-
          Attache ce bloc au bloc `quand l’exécution commence` :

          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2018_authored_hint:
        courseC_PlayLab_events3_a: Tu dois seulement déplacer Jorge d’environ 25 pixels
          vers la droite pour résoudre ce casse-tête.
        courseC_PlayLab_events3_b: Y a-t-il un bloc dans la boîte à outils qui semble
          pouvoir déplacer un acteur ?
        courseC_PlayLab_events3_c: |-
          Attache ce bloc au bloc `quand l’exécution commence` :

          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events3_2019_authored_hint:
        courseC_PlayLab_events3_a: Tu dois seulement déplacer Jorge d’environ 25 pixels
          vers la droite pour résoudre ce casse-tête.
        courseC_PlayLab_events3_b: Y a-t-il un bloc dans la boîte à outils qui semble
          pouvoir déplacer un acteur ?
        courseC_PlayLab_events3_c: |-
          Attache ce bloc au bloc `quand l’exécution commence` :

          <xml>
          <block type="studio_moveDistance">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <title name="DISTANCE">25</title>
          </block>
          </xml>
      courseC_PlayLab_events4_authored_hint:
        courseC_PlayLab_events4_b: Quand on clique sur « Exécuter », Jorge doit se
          déplacer de **100** pixels vers la droite pour atteindre Olive le chat.
        courseC_PlayLab_events4_a: Tu devras connecter un bloc ˋl’acteur __ dit` à
          l’événement ˋlorsque l’acteur touche` pour résoudre ce casse-tête.
      courseC_PlayLab_events4_2018_authored_hint:
        courseC_PlayLab_events4_b: Quand on clique sur « Exécuter », Jorge doit se
          déplacer de **100** pixels vers la droite pour atteindre Olive le chat.
        courseC_PlayLab_events4_a: Tu devras connecter un bloc ˋl’acteur __ dit` à
          l’événement ˋlorsque l’acteur touche` pour résoudre ce casse-tête.
      courseC_PlayLab_events4_2019_authored_hint:
        courseC_PlayLab_events4_b: Quand on clique sur « Exécuter », Jorge doit se
          déplacer de **100** pixels vers la droite pour atteindre Olive le chat.
        courseC_PlayLab_events4_a: Tu devras connecter un bloc ˋl’acteur __ dit` à
          l’événement ˋlorsque l’acteur touche` pour résoudre ce casse-tête.
      courseC_PlayLab_events5_authored_hint:
        courseC_PlayLab_events5_a: Tu devras cliquer sur le menu déroulant dans le
          bloc ˋl’acteur dit` pour trouver le texte « Quoi de neuf ? »
        courseC_PlayLab_events5_b: Clique sur Octavia quand tu exécutes ton programme
          pour vérifier qu’il fonctionne !
      courseC_PlayLab_events5_2018_authored_hint:
        courseC_PlayLab_events5_a: Tu devras cliquer sur le menu déroulant dans le
          bloc ˋl’acteur dit` pour trouver le texte « Quoi de neuf ? »
        courseC_PlayLab_events5_b: Clique sur Octavia quand tu exécutes ton programme
          pour vérifier qu’il fonctionne !
      courseC_PlayLab_events5_2019_authored_hint:
        courseC_PlayLab_events5_a: Tu devras cliquer sur le menu déroulant dans le
          bloc ˋl’acteur dit` pour trouver le texte « Quoi de neuf ? »
        courseC_PlayLab_events5_b: Clique sur Octavia quand tu exécutes ton programme
          pour vérifier qu’il fonctionne !
      courseC_PlayLab_events6_authored_hint:
        courseC_PlayLab_events6_a: Chaque bloc vert ˋquand flèche` devrait contenir
          une action.
        courseC_PlayLab_events6_b: Utilise le menu déroulant du bloc ˋdéplacer l’acteur
          1` pour modifier la direction dans laquelle Waddles se déplace.
        courseC_PlayLab_events6_c: Quand tu as fini, tu devrais pouvoir déplacer Waddles
          en utilisant les touches directionnelles de ton clavier !
      courseC_PlayLab_events6_2018_authored_hint:
        courseC_PlayLab_events6_a: Chaque bloc vert ˋquand flèche` devrait contenir
          une action.
        courseC_PlayLab_events6_b: Utilise le menu déroulant du bloc ˋdéplacer l’acteur
          1` pour modifier la direction dans laquelle Waddles se déplace.
        courseC_PlayLab_events6_c: Quand tu as fini, tu devrais pouvoir déplacer Waddles
          en utilisant les touches directionnelles de ton clavier !
      courseC_PlayLab_events6_2019_authored_hint:
        courseC_PlayLab_events6_a: Chaque bloc vert ˋquand flèche` devrait contenir
          une action.
        courseC_PlayLab_events6_b: Utilise le menu déroulant du bloc ˋdéplacer l’acteur
          1` pour modifier la direction dans laquelle Waddles se déplace.
        courseC_PlayLab_events6_c: Quand tu as fini, tu devrais pouvoir déplacer Waddles
          en utilisant les touches directionnelles de ton clavier !
      courseC_PlayLab_events7_authored_hint:
        courseC_PlayLab_events7_a: 'Utilise à la fois le bloc ˋdéplacer l’acteur 2
          vers le haut 400 pixels` et le bloc ˋdéplacer l’acteur 2 vers le bas 400
          pixels` à l’intérieur de la boucle ˋrépéter à l’infini` pour résoudre ce
          casse-tête. '
        courseC_PlayLab_events7_b: La boucle ˋrépéter à l’infiniˋ n’a pas besoin d’être
          connectée à d’autres blocs événement ; elle s’exécutera toute seule.
      courseC_PlayLab_events7_2018_authored_hint:
        courseC_PlayLab_events7_a: 'Utilise à la fois le bloc ˋdéplacer l’acteur 2
          vers le haut 400 pixels` et le bloc ˋdéplacer l’acteur 2 vers le bas 400
          pixels` à l’intérieur de la boucle ˋrépéter à l’infini` pour résoudre ce
          casse-tête. '
        courseC_PlayLab_events7_b: La boucle ˋrépéter à l’infiniˋ n’a pas besoin d’être
          connectée à d’autres blocs événement ; elle s’exécutera toute seule.
      courseC_PlayLab_events7_2019_authored_hint:
        courseC_PlayLab_events7_a: 'Utilise à la fois le bloc ˋdéplacer l’acteur 2
          vers le haut 400 pixels` et le bloc ˋdéplacer l’acteur 2 vers le bas 400
          pixels` à l’intérieur de la boucle ˋrépéter à l’infini` pour résoudre ce
          casse-tête. '
        courseC_PlayLab_events7_b: La boucle ˋrépéter à l’infiniˋ n’a pas besoin d’être
          connectée à d’autres blocs événement ; elle s’exécutera toute seule.
      courseC_PlayLab_events8_authored_hint:
        courseC_PlayLab_events8_a: Tu devras connecter des blocs au bloc ˋlorsque
          l’acteur touche` pour faire fonctionner cela correctement.
        courseC_PlayLab_events8_b: Les blocs ˋl’acteur dit` et ˋjouer un son` dans
          la boîte à outils devraient t’aider !
      courseC_PlayLab_events8_2018_authored_hint:
        courseC_PlayLab_events8_a: Tu devras connecter des blocs au bloc ˋlorsque
          l’acteur touche` pour faire fonctionner cela correctement.
        courseC_PlayLab_events8_b: Les blocs ˋl’acteur dit` et ˋjouer un son` dans
          la boîte à outils devraient t’aider !
      courseC_PlayLab_events8_2019_authored_hint:
        courseC_PlayLab_events8_a: Tu devras connecter des blocs au bloc ˋlorsque
          l’acteur touche` pour faire fonctionner cela correctement.
        courseC_PlayLab_events8_b: Les blocs ˋl’acteur dit` et ˋjouer un son` dans
          la boîte à outils devraient t’aider !
      courseC_PlayLab_events9_authored_hint:
        courseC_PlayLab_events9_a: Le bloc ˋmarquer un point` t’aidera à résoudre
          ce casse-tête.
        courseC_PlayLab_events9_b: Assure-toi que ton nouveau bloc ˋlorsque l’acteur
          touche` désigne l’acteur **1** et l’acteur **3**.
        courseC_PlayLab_events9_c: Tu peux avoir plus d’un événement ˋquand l’acteur
          touche` à la fois dans ton espace de travail, donc tu n’as pas besoin de
          supprimer le premier !
      courseC_PlayLab_events9_2018_authored_hint:
        courseC_PlayLab_events9_a: Le bloc ˋmarquer un point` t’aidera à résoudre
          ce casse-tête.
        courseC_PlayLab_events9_b: Assure-toi que ton nouveau bloc ˋlorsque l’acteur
          touche` désigne l’acteur **1** et l’acteur **3**.
        courseC_PlayLab_events9_c: Tu peux avoir plus d’un événement ˋquand l’acteur
          touche` à la fois dans ton espace de travail, donc tu n’as pas besoin de
          supprimer le premier !
      courseC_PlayLab_events9_2019_authored_hint:
        courseC_PlayLab_events9_a: Le bloc ˋmarquer un point` t’aidera à résoudre
          ce casse-tête.
        courseC_PlayLab_events9_b: Assure-toi que ton nouveau bloc ˋlorsque l’acteur
          touche` désigne l’acteur **1** et l’acteur **3**.
        courseC_PlayLab_events9_c: Tu peux avoir plus d’un événement ˋquand l’acteur
          touche` à la fois dans ton espace de travail, donc tu n’as pas besoin de
          supprimer le premier !
      courseC_PlayLab_eventsA_authored_hint:
        courseC_PlayLab_eventsA_a: Utilise le bloc ˋdéfinir un arrière-plan` et le
          bloc ˋaffecter à l’acteur une vitesse ____` pour résoudre ce casse-tête.
        courseC_PlayLab_eventsA_b: Tu devras faire glisser un bloc ˋquand l’exécution
          commence` sur l’espace de travail pour résoudre ce casse-tête.
      courseC_PlayLab_eventsA_2018_authored_hint:
        courseC_PlayLab_eventsA_a: Utilise le bloc ˋdéfinir un arrière-plan` et le
          bloc ˋaffecter à l’acteur une vitesse ____` pour résoudre ce casse-tête.
        courseC_PlayLab_eventsA_b: Tu devras faire glisser un bloc ˋquand l’exécution
          commence` sur l’espace de travail pour résoudre ce casse-tête.
      courseC_PlayLab_eventsA_2019_authored_hint:
        courseC_PlayLab_eventsA_a: Utilise le bloc ˋdéfinir un arrière-plan` et le
          bloc ˋaffecter à l’acteur une vitesse ____` pour résoudre ce casse-tête.
        courseC_PlayLab_eventsA_b: Tu devras faire glisser un bloc ˋquand l’exécution
          commence` sur l’espace de travail pour résoudre ce casse-tête.
      courseC_PlayLab_eventsFP_authored_hint:
        idea1: |-
          *Besoin d’une idée ?*

          **Qui est là ?** Fait apparaître des personnages avec des images aléatoires, comme ça personne ne sait qui apparaîtra ensuite.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Besoin d’une idée ?*

          **Partis pour l’aventure** - Modifie le fond, puis fait parler les personnages de l’endroit où ils sont à présent.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Besoin d’une idée ?*

          **Pinball** - Déplace un personnage en utilisant les touches directionnelles (utilise des blocs ˋquand flèche vers le haut`, ˋquand flèche vers le bas`), puis joue des sons aléatoires quand il entre en collision avec d’autres personnages sur l’écran.
      courseC_PlayLab_eventsFP_2018_authored_hint:
        idea1: |-
          *Besoin d’une idée ?*

          **Qui est là ?** Fait apparaître des personnages avec des images aléatoires, comme ça personne ne sait qui apparaîtra ensuite.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Besoin d’une idée ?*

          **Partis pour l’aventure** - Modifie le fond, puis fait parler les personnages de l’endroit où ils sont à présent.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Besoin d’une idée ?*

          **Pinball** - Déplace un personnage en utilisant les touches directionnelles (utilise des blocs ˋquand flèche vers le haut`, ˋquand flèche vers le bas`), puis joue des sons aléatoires quand il entre en collision avec d’autres personnages sur l’écran.
      courseC_PlayLab_eventsFP_2019_authored_hint:
        idea1: |-
          *Besoin d’une idée ?*

          **Qui est là ?** Fait apparaître des personnages avec des images aléatoires, comme ça personne ne sait qui apparaîtra ensuite.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Besoin d’une idée ?*

          **Partis pour l’aventure** - Modifie le fond, puis fait parler les personnages de l’endroit où ils sont à présent.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Besoin d’une idée ?*

          **Pinball** - Déplace un personnage en utilisant les touches directionnelles (utilise des blocs ˋquand flèche vers le haut`, ˋquand flèche vers le bas`), puis joue des sons aléatoires quand il entre en collision avec d’autres personnages sur l’écran.
      courseC_PlayLab_events_challenge1_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          Tu peux utiliser ce bloc pour déplacer les acteurs à différents endroits de l’espace de jeu.

          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Essaie d’utiliser `affecter à l’acteur
          1 vers la position du milieu à gaucheˋ quand il touche un des autres acteurs.
          Cela réinitialisera le jeu pour que le joueur puisse continuer à essayer
          !
        courseC_PlayLab_events_challenge_c: |-
          Tu pourrais essayer de modifier la vitesse des différents acteurs pour rendre le jeu plus facile ou plus difficile !

          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2018_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          Tu peux utiliser ce bloc pour déplacer les acteurs à différents endroits de l’espace de jeu.

          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Essaie d’utiliser `affecter à l’acteur
          1 vers la position du milieu à gaucheˋ quand il touche un des autres acteurs.
          Cela réinitialisera le jeu pour que le joueur puisse continuer à essayer
          !
        courseC_PlayLab_events_challenge_c: |-
          Tu pourrais essayer de modifier la vitesse des différents acteurs pour rendre le jeu plus facile ou plus difficile !

          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_2019_authored_hint:
        courseC_PlayLab_events_challenge_a: |
          Tu peux utiliser ce bloc pour déplacer les acteurs à différents endroits de l’espace de jeu.

          <xml> <block type="studio_setSpritePosition">
          <title name="SPRITE">0</title>
          <title name="VALUE">12</title>
          </block></xml>
        courseC_PlayLab_events_challenge_b: Essaie d’utiliser `affecter à l’acteur
          1 vers la position du milieu à gaucheˋ quand il touche un des autres acteurs.
          Cela réinitialisera le jeu pour que le joueur puisse continuer à essayer
          !
        courseC_PlayLab_events_challenge_c: |-
          Tu pourrais essayer de modifier la vitesse des différents acteurs pour rendre le jeu plus facile ou plus difficile !

          <xml>  <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.FAST</title>
          </block></xml>
      courseC_PlayLab_events_challenge1_xy_blocks_authored_hint:
        courseC_PlayLab_events_challenge_a: Les deux valeurs de ce bloc te permettent
          de déplacer un acteur à n’importe quel pixel de l’espace de jeu. Tu peux
          choisir n’importe quel chiffre de 0 à 400.
        courseC_PlayLab_events_challenge_b: |-
          Tu peux décider quels nombres tu veux utiliser en pensant à la distance à laquelle tu veux te déplacer depuis le coin supérieur gauche. Le premier nombre est le nombres de pixels depuis la gauche. Le deuxième nombre est le nombre de pixels depuis le haut.

          <xml><block type="studio_setSpriteXY" inline="true">
          <value name="SPRITE">
          <block type="math_number" movable="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="XPOS">
          <block type="math_number" movable="false">
          <title name="NUM">37</title>
          </block>
          </value>
          <value name="YPOS">
          <block type="math_number" movable="false">
          <title name="NUM">187</title>
          </block>
          </value>
          </block></xml>

          ![](https://images.code.org/b1559bf476ceb59f880c43271c5e10b2-image-1494111787192.59.49 PM.png)
      courseC_artist_loop1_authored_hint:
        courseC_artist_loop1_a: Tu n’as pas besoin de modifier la boucle, seulement
          de mettre un bloc au-dessus d’elle.
        courseC_artist_loop1_b: |-
          Voici le bloc dont tu auras besoin pour définir un motif :

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          Choose any pattern you like!
      courseC_artist_loop1_2018_authored_hint:
        courseC_artist_loop1_a: Tu n’as pas besoin de modifier la boucle, seulement
          de mettre un bloc au-dessus d’elle.
        courseC_artist_loop1_b: |-
          Voici le bloc dont tu auras besoin pour définir un motif :

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          Choose any pattern you like!
      courseC_artist_loop1_2019_authored_hint:
        courseC_artist_loop1_a: Tu n’as pas besoin de modifier la boucle, seulement
          de mettre un bloc au-dessus d’elle.
        courseC_artist_loop1_b: |-
          Voici le bloc dont tu auras besoin pour définir un motif :

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>

          Choose any pattern you like!
      courseC_artist_loops1a_authored_hint:
        courseC_artist_loops1a_a: |-
          Voici le premier bloc dont tu auras besoin :

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Utilise ce bloc pour dessiner l’autocollant !

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2018_authored_hint:
        courseC_artist_loops1a_a: |-
          Voici le premier bloc dont tu auras besoin :

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Utilise ce bloc pour dessiner l’autocollant !

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops1a_2019_authored_hint:
        courseC_artist_loops1a_a: |-
          Voici le premier bloc dont tu auras besoin :

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block>
          </xml>
        courseC_artist_loops1a_b: |-
          Utilise ce bloc pour dessiner l’autocollant !

          <xml>
          <block type="sticker">
          <title name="VALUE">Bird</title>
          </block>
          </xml>
      courseC_artist_loops2a_authored_hint:
        courseC_artist_loops2a_a: Dans ta boucle, tu devras sauter de 200 pixels dessus
          et 200 pixels vers le bas, puis dessiner l’autocollant oiseau, puis tourner
          de 30 degrés.
        courseC_artist_loops2a_b: Clique sur le nombre en haut de la boucle ˋrépéter`
          pour modifier le nombre de fois qu’elle se répète.
      courseC_artist_loops2a_2018_authored_hint:
        courseC_artist_loops2a_a: Dans ta boucle, tu devras sauter de 200 pixels dessus
          et 200 pixels vers le bas, puis dessiner l’autocollant oiseau, puis tourner
          de 30 degrés.
        courseC_artist_loops2a_b: Clique sur le nombre en haut de la boucle ˋrépéter`
          pour modifier le nombre de fois qu’elle se répète.
      courseC_artist_loops2a_2019_authored_hint:
        courseC_artist_loops2a_a: Dans ta boucle, tu devras sauter de 200 pixels dessus
          et 200 pixels vers le bas, puis dessiner l’autocollant oiseau, puis tourner
          de 30 degrés.
        courseC_artist_loops2a_b: Clique sur le nombre en haut de la boucle ˋrépéter`
          pour modifier le nombre de fois qu’elle se répète.
      courseC_artist_loops3a_authored_hint:
        courseC_artist_loops3a_a: Tu devras ajouter seulement un bloc à l’intérieur
          de ta boucle après l’autocollant d’oiseau.
        courseC_artist_loops3a_b: Utilise le menu déroulant du bloc ˋdessiner un autocollant`
          pour trouver l’autocollant de chauve-souris.
      courseC_artist_loops3a_2018_authored_hint:
        courseC_artist_loops3a_a: Tu devras ajouter seulement un bloc à l’intérieur
          de ta boucle après l’autocollant d’oiseau.
        courseC_artist_loops3a_b: Utilise le menu déroulant du bloc ˋdessiner un autocollant`
          pour trouver l’autocollant de chauve-souris.
      courseC_artist_loops3a_2019_authored_hint:
        courseC_artist_loops3a_a: Tu devras ajouter seulement un bloc à l’intérieur
          de ta boucle après l’autocollant d’oiseau.
        courseC_artist_loops3a_b: Utilise le menu déroulant du bloc ˋdessiner un autocollant`
          pour trouver l’autocollant de chauve-souris.
      courseC_artist_loops4a_authored_hint:
        courseC_artist_loops4a_a: |-
          Utilise ce bloc pour sauter en avant :

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          N’oublie pas de modifier la distance !
      courseC_artist_loops4a_2018_authored_hint:
        courseC_artist_loops4a_a: |-
          Utilise ce bloc pour sauter en avant :

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          N’oublie pas de modifier la distance !
      courseC_artist_loops4a_2019_authored_hint:
        courseC_artist_loops4a_a: |-
          Utilise ce bloc pour sauter en avant :

          <xml>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">100</title>
          </block>
          </xml>

          N’oublie pas de modifier la distance !
      courseC_artist_loops5_authored_hint:
        courseC_artist_loops5_a: |-
          Essaie d’utiliser le bloc ˋaller à` pour ramener ton artiste au centre :

          <xml>
          <block type="jump_to_xy">
          <title name="XPOS">100</title>
          <title name="YPOS">100</title>
          </block>
          </xml>
      courseC_artist_loops5a_authored_hint:
        courseC_artist_loops5a_a: Utilise les menus déroulants des blocs ˋdessiner
          un autocollant` pour modifier leurs images.
      courseC_artist_loops5a_2018_authored_hint:
        courseC_artist_loops5a_a: Utilise les menus déroulants des blocs ˋdessiner
          un autocollant` pour modifier leurs images.
      courseC_artist_loops5a_2019_authored_hint:
        courseC_artist_loops5a_a: Utilise les menus déroulants des blocs ˋdessiner
          un autocollant` pour modifier leurs images.
      courseC_artist_loops5b_authored_hint:
        courseC_artist_loops5b_a: |-
          Utilise ce bloc pour définir le modèle de tes lignes :

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Pour réaliser un dessin comme celui ci-dessus, tu
          devras reculer de la même distance que tu avances.
      courseC_artist_loops5b_2018_authored_hint:
        courseC_artist_loops5b_a: |-
          Utilise ce bloc pour définir le modèle de tes lignes :

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Pour réaliser un dessin comme celui ci-dessus, tu
          devras reculer de la même distance que tu avances.
      courseC_artist_loops5b_2019_authored_hint:
        courseC_artist_loops5b_a: |-
          Utilise ce bloc pour définir le modèle de tes lignes :

          <xml>
          <block type="draw_line_style_pattern">
          <title name="VALUE">DEFAULT</title>
          </block>
          </xml>
        courseC_artist_loops5b_b: Pour réaliser un dessin comme celui ci-dessus, tu
          devras reculer de la même distance que tu avances.
      courseC_artist_loops6_authored_hint:
        courseC_artist_loops6_a: |
          Essaie une fleur triangulaire :
          <img src="https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png" width="150px" />

          Ou un petit insecte vert :
          <img src="https://images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png" width="150px" />
      courseC_artist_loops6a_authored_hint:
        courseC_artist_loops6a_a: Pour réaliser un dessin comme celui ci-dessus, saute
          en avant moins de 75 pixels entre chaque autocollant.
      courseC_artist_loops6a_2018_authored_hint:
        courseC_artist_loops6a_a: Pour réaliser un dessin comme celui ci-dessus, saute
          en avant moins de 75 pixels entre chaque autocollant.
      courseC_artist_loops6a_2019_authored_hint:
        courseC_artist_loops6a_a: Pour réaliser un dessin comme celui ci-dessus, saute
          en avant moins de 75 pixels entre chaque autocollant.
      courseC_artist_loops7a_authored_hint:
        courseC_artist_loops7a_a: |-
          Il y a 360 degrés dans un cercle. Multiplie les degrés de ta rotation par le nombre de fois que tu répètes.
          Est-ce égal à 360 ?
          Vérifie les rotations suggérées pour voir si ça marche !
      courseC_artist_loops7a_2018_authored_hint:
        courseC_artist_loops7a_a: |-
          Il y a 360 degrés dans un cercle. Multiplie les degrés de ta rotation par le nombre de fois que tu répètes.
          Est-ce égal à 360 ?
          Vérifie les rotations suggérées pour voir si ça marche !
      courseC_artist_loops7a_2019_authored_hint:
        courseC_artist_loops7a_a: |-
          Il y a 360 degrés dans un cercle. Multiplie les degrés de ta rotation par le nombre de fois que tu répètes.
          Est-ce égal à 360 ?
          Vérifie les rotations suggérées pour voir si ça marche !
      courseC_artist_loopsPre1a_authored_hint:
        courseC_artist_loopsPre1a_a: N’oublie pas de mettre le bloc ˋtourner` à l’intérieur
          de la boucle.
        courseC_artist_loopsPre1a_b: 'Ta boucle ˋrépéter` devrait contenir 3 blocs
          : ˋaller à 200 dessus 200 vers le bas`, `avancer de 50 pixels` et ˋtourner
          à droite de 60 degrés`.'
      courseC_artist_loopsPre1a_2018_authored_hint:
        courseC_artist_loopsPre1a_a: N’oublie pas de mettre le bloc ˋtourner` à l’intérieur
          de la boucle.
        courseC_artist_loopsPre1a_b: 'Ta boucle ˋrépéter` devrait contenir 3 blocs
          : ˋaller à 200 dessus 200 vers le bas`, `avancer de 50 pixels` et ˋtourner
          à droite de 60 degrés`.'
      courseC_artist_loopsPre1a_2019_authored_hint:
        courseC_artist_loopsPre1a_a: N’oublie pas de mettre le bloc ˋtourner` à l’intérieur
          de la boucle.
        courseC_artist_loopsPre1a_b: 'Ta boucle ˋrépéter` devrait contenir 3 blocs
          : ˋaller à 200 dessus 200 vers le bas`, `avancer de 50 pixels` et ˋtourner
          à droite de 60 degrés`.'
      courseC_artist_loopsPrePre1a_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          Le premier bloc dont tu as besoin est :

          ![](https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png)
        courseC_artist_loopsPrePre1a_b: |-
          Pour avancer de 50 pixels, utilise ce bloc :

          ![](https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png)
      courseC_artist_loopsPrePre1a_2018_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          Le premier bloc dont tu as besoin est :

          <xml>  <block type="jump_to_xy" id="callMe">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          Pour avancer de 50 pixels, utilise ce bloc :

          <xml><block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          </block></xml>
      courseC_artist_loopsPrePre1a_2019_authored_hint:
        courseC_artist_loopsPrePre1a_a: |-
          Le premier bloc dont tu as besoin est :

          <xml>  <block type="jump_to_xy" id="callMe">
          <title name="XPOS">200</title>
          <title name="YPOS">200</title>
          </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          Pour avancer de 50 pixels, utilise ce bloc :

          <xml><block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">50</title>
          </block></xml>
      courseC_artist_prog2_authored_hint:
        courseC_artist_prog2_a: Si vous utilisez le bloc pour me faire "avancer de
          100 pixels", je tracerais une ligne automatiquement.
        courseC_artist_prog2_b: Vous avez des problèmes pour tourner ? Utilisez le
          bloc « tourner de 90 degrés à droite ».
      courseC_artist_prog2_2018_authored_hint:
        courseC_artist_prog2_a: Si vous utilisez le bloc pour me faire "avancer de
          100 pixels", je tracerais une ligne automatiquement.
        courseC_artist_prog2_b: Vous avez des problèmes pour tourner ? Utilisez le
          bloc « tourner de 90 degrés à droite ».
      courseC_artist_prog2_2019_authored_hint:
        courseC_artist_prog2_a: Si vous utilisez le bloc pour me faire "avancer de
          100 pixels", je tracerais une ligne automatiquement.
        courseC_artist_prog2_b: Vous avez des problèmes pour tourner ? Utilisez le
          bloc « tourner de 90 degrés à droite ».
      courseC_artist_prog3_authored_hint:
        courseC_artist_prog3_a: |-
          Pour réaliser cette fenêtre, dessine simplement un carré avec des côtés de 100 pixels.
          - avance
          - tourne
          - avance
          - tourne
          - avance
          - tourne
          - avance
        courseC_artist_prog3_b: Tu veux écrire un code plus court ? Essaie d’utiliser
          une boucle.
      courseC_artist_prog3_2018_authored_hint:
        courseC_artist_prog3_a: |-
          Pour réaliser cette fenêtre, dessine simplement un carré avec des côtés de 100 pixels.
          - avance
          - tourne
          - avance
          - tourne
          - avance
          - tourne
          - avance
        courseC_artist_prog3_b: Tu veux écrire un code plus court ? Essaie d’utiliser
          une boucle.
      courseC_artist_prog3_2019_authored_hint:
        courseC_artist_prog3_a: |-
          Pour réaliser cette fenêtre, dessine simplement un carré avec des côtés de 100 pixels.
          - avance
          - tourne
          - avance
          - tourne
          - avance
          - tourne
          - avance
        courseC_artist_prog3_b: Tu veux écrire un code plus court ? Essaie d’utiliser
          une boucle.
      courseC_artist_prog4_authored_hint:
        courseC_artist_prog4_a: Pour terminer la fusée, dessine simplement le triangle
          sur le dessus !
        courseC_artist_prog4_b: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
        courseC_artist_prog4_c: |-
          Pour dessiner un triangle, tu devras :
          - avancer
          - tourner à gauche de 120 degrés
          - avancer
          - tourner à gauche de 120 degrés
          - avancer
      courseC_artist_prog4_2018_authored_hint:
        courseC_artist_prog4_a: Pour terminer la fusée, dessine simplement le triangle
          sur le dessus !
        courseC_artist_prog4_b: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
        courseC_artist_prog4_c: |-
          Pour dessiner un triangle, tu devras :
          - avancer
          - tourner à gauche de 120 degrés
          - avancer
          - tourner à gauche de 120 degrés
          - avancer
      courseC_artist_prog4_2019_authored_hint:
        courseC_artist_prog4_a: Pour terminer la fusée, dessine simplement le triangle
          sur le dessus !
        courseC_artist_prog4_b: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
        courseC_artist_prog4_c: |-
          Pour dessiner un triangle, tu devras :
          - avancer
          - tourner à gauche de 120 degrés
          - avancer
          - tourner à gauche de 120 degrés
          - avancer
      courseC_artist_prog5_authored_hint:
        courseC_artist_prog5_a: Fait glisser le curseur à gauche jusqu’à pouvoir exécuter
          ton code ligne par ligne pour voir où les choses tournent mal.
        courseC_artist_prog5_c: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
        courseC_artist_prog5_d: Chaque tournant devrait être de 90 degrés vers la
          droite.
      courseC_artist_prog5_2018_authored_hint:
        courseC_artist_prog5_a: Fait glisser le curseur à gauche jusqu’à pouvoir exécuter
          ton code ligne par ligne pour voir où les choses tournent mal.
        courseC_artist_prog5_c: Tu peux utiliser les menus déroulants des blocs pour
          modifier ce qu’ils font !
        courseC_artist_prog5_d: Chaque tournant devrait être de 90 degrés vers la
          droite.
      courseC_artist_prog5_2019_authored_hint:
        courseC_artist_prog5_a: Fait glisser le curseur à gauche jusqu’à pouvoir exécuter
          ton code ligne par ligne pour voir où les choses tournent mal.
        courseC_artist_prog5_c: Tu peux utiliser les menus déroulants des blocs pour
          modifier ce qu’ils font !
        courseC_artist_prog5_d: Chaque tournant devrait être de 90 degrés vers la
          droite.
      courseC_artist_prog6_authored_hint:
        courseC_artist_prog6_a: L’artiste est déjà tourné dans la bonne direction
          pour dessiner sa première ligne.
        courseC_artist_prog6_b: Le diamant n’est qu’un carré qui tient sur son coin.
        courseC_artist_prog6_c: Comme ce diamant est aussi un carré, assure-toi de
          tourner de 90 degrés dans les coins.
      courseC_artist_prog6_2018_authored_hint:
        courseC_artist_prog6_a: L’artiste est déjà tourné dans la bonne direction
          pour dessiner sa première ligne.
        courseC_artist_prog6_b: Le diamant n’est qu’un carré qui tient sur son coin.
        courseC_artist_prog6_c: Comme ce diamant est aussi un carré, assure-toi de
          tourner de 90 degrés dans les coins.
      courseC_artist_prog6_2019_authored_hint:
        courseC_artist_prog6_a: L’artiste est déjà tourné dans la bonne direction
          pour dessiner sa première ligne.
        courseC_artist_prog6_b: Le diamant n’est qu’un carré qui tient sur son coin.
        courseC_artist_prog6_c: Comme ce diamant est aussi un carré, assure-toi de
          tourner de 90 degrés dans les coins.
      courseC_artist_prog7_authored_hint:
        courseC_artist_prog7_a: Chaque angle fait soit 45, soit 90 degrés.
        courseC_artist_prog7_b: |-
          Est-ce que ça marche à la première étape ?
          À la deuxième ?
          Où commencent les problèmes ?
        courseC_artist_prog7_c: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
        courseC_artist_prog7_d: |-
          Tu devras :
          - avancer
          - tourner à droite de 45 degrés
          - avancer
          - tourner à droite de 90 degrés
          - avancer
          - tourner à droite de 45 degrés

          Répète cela 2 fois !
      courseC_artist_prog7_2018_authored_hint:
        courseC_artist_prog7_a: Chaque angle fait soit 45, soit 90 degrés.
        courseC_artist_prog7_b: |-
          Est-ce que ça marche à la première étape ?
          À la deuxième ?
          Où commencent les problèmes ?
        courseC_artist_prog7_c: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
        courseC_artist_prog7_d: |-
          Tu devras :
          - avancer
          - tourner à droite de 45 degrés
          - avancer
          - tourner à droite de 90 degrés
          - avancer
          - tourner à droite de 45 degrés

          Répète cela 2 fois !
      courseC_artist_prog7_2019_authored_hint:
        courseC_artist_prog7_a: Chaque angle fait soit 45, soit 90 degrés.
        courseC_artist_prog7_b: |-
          Est-ce que ça marche à la première étape ?
          À la deuxième ?
          Où commencent les problèmes ?
        courseC_artist_prog7_c: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
        courseC_artist_prog7_d: |-
          Tu devras :
          - avancer
          - tourner à droite de 45 degrés
          - avancer
          - tourner à droite de 90 degrés
          - avancer
          - tourner à droite de 45 degrés

          Répète cela 2 fois !
      courseC_artist_prog_challenge1-doghouse_authored_hint:
        courseC_artist_prog7_a: Utilise des angles de 60 degrés pour réaliser le toit.
      courseC_artist_prog_challenge1_authored_hint:
        courseC_artist_prog_challenge1_a: Tu peux dessiner cela comme un rectangle
          avec une ligne au milieu ou comme deux carrés !
      courseC_artist_prog_challenge1_2018_authored_hint:
        courseC_artist_prog_challenge1_a: Tu peux dessiner cela comme un rectangle
          avec une ligne au milieu ou comme deux carrés !
      courseC_artist_prog_challenge1_2019_authored_hint:
        courseC_artist_prog_challenge1_a: Tu peux dessiner cela comme un rectangle
          avec une ligne au milieu ou comme deux carrés !
      courseC_artist_prog_challenge2_authored_hint:
        courseC_artist_prog_challenge2_a: "Tu peux mettre des commandes dans un bloc
          ˋrépéter` pour les boucler encore et encore. Essaie donc !\n\n<xml>\n  \n
          \         <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      courseC_artist_prog_challenge2a_authored_hint:
        courseC_artist_prog_challenge2_a: Après avoir dessiné la première ligne, tourne-toi
          vers la gauche avant de dessiner ta deuxième ligne.
        courseC_artist_prog_challenge2_b: Après avoir dessiné la deuxième ligne, tourne-toi
          vers la droite avant de dessiner ta troisième ligne.
      courseC_artist_prog_challenge2a_2018_authored_hint:
        courseC_artist_prog_challenge2_a: Après avoir dessiné la première ligne, tourne-toi
          vers la gauche avant de dessiner ta deuxième ligne.
        courseC_artist_prog_challenge2_b: Après avoir dessiné la deuxième ligne, tourne-toi
          vers la droite avant de dessiner ta troisième ligne.
      courseC_artist_prog_challenge2a_2019_authored_hint:
        courseC_artist_prog_challenge2_a: Après avoir dessiné la première ligne, tourne-toi
          vers la gauche avant de dessiner ta deuxième ligne.
        courseC_artist_prog_challenge2_b: Après avoir dessiné la deuxième ligne, tourne-toi
          vers la droite avant de dessiner ta troisième ligne.
      courseC_collector_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_b: Utilise des boucles pour ne pas être à court
          de blocs ˋcollecter` !
      courseC_collector_loops_challenge2_2018_authored_hint:
        courseC_maze_loops_challenge2_b: Utilise des boucles pour ne pas être à court
          de blocs ˋcollecter` !
      courseC_collector_loops_challenge2_2019_authored_hint:
        courseC_maze_loops_challenge2_b: Utilise des boucles pour ne pas être à court
          de blocs ˋcollecter` !
      courseC_collector_prog1_authored_hint:
        courseC_collector_prog1_a: Une fois que tu t’es déplacé sur une case avec
          un trésor, utilise le bloc <xml><block type="collector_collect"/></xml>
          pour le ramasser.
        courseC_collector_prog1_b: La solution la plus simple serait d’avancer une
          fois puis de collecter le trésor.
      courseC_collector_prog1_2018_authored_hint:
        courseC_collector_prog1_a: Une fois que tu t’es déplacé sur une case avec
          un trésor, utilise le bloc <xml><block type="collector_collect"/></xml>
          pour le ramasser.
        courseC_collector_prog1_b: La solution la plus simple serait d’avancer une
          fois puis de collecter le trésor.
      courseC_collector_prog1_2019_authored_hint:
        courseC_collector_prog1_a: Une fois que tu t’es déplacé sur une case avec
          un trésor, utilise le bloc <xml><block type="collector_collect"/></xml>
          pour le ramasser.
        courseC_collector_prog1_b: La solution la plus simple serait d’avancer une
          fois puis de collecter le trésor.
      courseC_collector_prog2_authored_hint:
        courseC_collector_prog2_a: Tu peux utiliser quatre blocs <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> ou utiliser le bloc <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          pour rendre ton programme plus court.
      courseC_collector_prog2_2018_authored_hint:
        courseC_collector_prog2_a: Tu peux utiliser quatre blocs <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> ou utiliser le bloc <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          pour rendre ton programme plus court.
      courseC_collector_prog2_2019_authored_hint:
        courseC_collector_prog2_a: Tu peux utiliser quatre blocs <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> ou utiliser le bloc <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          pour rendre ton programme plus court.
      courseC_collector_prog3_authored_hint:
        courseC_collector_prog3_a: Le programme n’exécutera que les blocs qui sont
          connectés au bloc <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Essaie d’utiliser le bouton « Étape » pour exécuter
          ton code une ligne à la fois. Vois-tu où le code tourne mal ?
      courseC_collector_prog3_2018_authored_hint:
        courseC_collector_prog3_a: Le programme n’exécutera que les blocs qui sont
          connectés au bloc <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Essaie d’utiliser le bouton « Étape » pour exécuter
          ton code une ligne à la fois. Vois-tu où le code tourne mal ?
      courseC_collector_prog3_2019_authored_hint:
        courseC_collector_prog3_a: Le programme n’exécutera que les blocs qui sont
          connectés au bloc <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Essaie d’utiliser le bouton « Étape » pour exécuter
          ton code une ligne à la fois. Vois-tu où le code tourne mal ?
      courseC_collector_prog4_authored_hint:
        courseC_collector_prog4_a: Si tu es bloqué, essaie d’écrire les étapes sur
          une feuille.
        courseC_collector_prog4_c: Essaie cette option.
      courseC_collector_prog4_2018_authored_hint:
        courseC_collector_prog4_a: Si tu es bloqué, essaie d’écrire les étapes sur
          une feuille.
        courseC_collector_prog4_c: Essaie cette option.
      courseC_collector_prog4_2019_authored_hint:
        courseC_collector_prog4_a: Si tu es bloqué, essaie d’écrire les étapes sur
          une feuille.
        courseC_collector_prog4_c: Essaie cette option.
      courseC_collector_prog5_authored_hint:
        courseC_collector_prog5_a: |-
          « Est-ce que ça marche à la première étape ?
          À la deuxième ?
          Où commencent les problèmes ? »
        courseC_collector_prog5_b: Si tu as corrigé un bug et que le programme ne
          fonctionne toujours pas, suit les étapes ci-dessus pour trouver plus de
          bugs.
        courseC_collector_prog5_c: Si tu es bloqué, essaie d’écrire les étapes sur
          une feuille.
        courseC_collector_prog5_d: Suit le chemin pour collecter le trésor.
      courseC_collector_prog5_2018_authored_hint:
        courseC_collector_prog5_a: |-
          « Est-ce que ça marche à la première étape ?
          À la deuxième ?
          Où commencent les problèmes ? »
        courseC_collector_prog5_b: Si tu as corrigé un bug et que le programme ne
          fonctionne toujours pas, suit les étapes ci-dessus pour trouver plus de
          bugs.
        courseC_collector_prog5_c: Si tu es bloqué, essaie d’écrire les étapes sur
          une feuille.
        courseC_collector_prog5_d: Suit le chemin pour collecter le trésor.
      courseC_collector_prog5_2019_authored_hint:
        courseC_collector_prog5_a: |-
          « Est-ce que ça marche à la première étape ?
          À la deuxième ?
          Où commencent les problèmes ? »
        courseC_collector_prog5_b: Si tu as corrigé un bug et que le programme ne
          fonctionne toujours pas, suit les étapes ci-dessus pour trouver plus de
          bugs.
        courseC_collector_prog5_c: Si tu es bloqué, essaie d’écrire les étapes sur
          une feuille.
        courseC_collector_prog5_d: Suit le chemin pour collecter le trésor.
      courseC_collector_prog6_authored_hint:
        courseC_collector_prog6_a: |-
          Peux-tu trouver ce qui ne va pas ?

          Essaie d’utiliser le bouton « Étape » pour trouver les erreurs en exécutant ton code ligne par ligne.
        courseC_collector_prog6_b: Bloqué ? Essaie ce chemin pour collecter le trésor.
      courseC_collector_prog6_2018_authored_hint:
        courseC_collector_prog6_a: |-
          Peux-tu trouver ce qui ne va pas ?

          Essaie d’utiliser le bouton « Étape » pour trouver les erreurs en exécutant ton code ligne par ligne.
        courseC_collector_prog6_b: Bloqué ? Essaie ce chemin pour collecter le trésor.
      courseC_collector_prog6_2019_authored_hint:
        courseC_collector_prog6_a: |-
          Peux-tu trouver ce qui ne va pas ?

          Essaie d’utiliser le bouton « Étape » pour trouver les erreurs en exécutant ton code ligne par ligne.
        courseC_collector_prog6_b: Bloqué ? Essaie ce chemin pour collecter le trésor.
      courseC_collector_prog7_authored_hint:
        courseC_collector_prog7_a: 'Il y a déjà du bon code dans l’espace de travail.
          Tu n’as pas besoin de supprimer quoi que ce soit pour résoudre ce puzzle.  '
        courseC_collector_prog7_b: Tu ne vois pas le bloc dont tu as besoin pour faire
          avancer l’aventurier dans la bonne direction ? Prends-en un dans la boîte
          à outils.
        courseC_collector_prog7_c: Tu as du mal à trouver un trajet pour collecter
          tous les trésors ? Essaie ce chemin !
      courseC_collector_prog7_2018_authored_hint:
        courseC_collector_prog7_a: 'Il y a déjà du bon code dans l’espace de travail.
          Tu n’as pas besoin de supprimer quoi que ce soit pour résoudre ce puzzle.  '
        courseC_collector_prog7_b: Tu ne vois pas le bloc dont tu as besoin pour faire
          avancer l’aventurier dans la bonne direction ? Prends-en un dans la boîte
          à outils.
        courseC_collector_prog7_c: Tu as du mal à trouver un trajet pour collecter
          tous les trésors ? Essaie ce chemin !
      courseC_collector_prog7_2019_authored_hint:
        courseC_collector_prog7_a: 'Il y a déjà du bon code dans l’espace de travail.
          Tu n’as pas besoin de supprimer quoi que ce soit pour résoudre ce puzzle.  '
        courseC_collector_prog7_b: Tu ne vois pas le bloc dont tu as besoin pour faire
          avancer l’aventurier dans la bonne direction ? Prends-en un dans la boîte
          à outils.
        courseC_collector_prog7_c: Tu as du mal à trouver un trajet pour collecter
          tous les trésors ? Essaie ce chemin !
      courseC_collector_progA_authored_hint:
        courseC_collector_progA_a: Essaie d’utiliser le bouton « Étape » pour exécuter
          ton code ligne par ligne.
      courseC_collector_prog_challenge1_authored_hint:
        courseC_collector_prog_challenge1_a: Tu peux utiliser le bloc ˋcollecter`
          plusieurs fois pour collecter les trésors supplémentaires.
      courseC_collector_prog_challenge1_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Tu peux utiliser le bloc ˋcollecter`
          plusieurs fois pour collecter les trésors supplémentaires.
      courseC_collector_prog_challenge1_2019_authored_hint:
        courseC_collector_prog_challenge1_a: Tu peux utiliser le bloc ˋcollecter`
          plusieurs fois pour collecter les trésors supplémentaires.
      courseC_collector_prog_challenge2_authored_hint:
        courseC_collector_prog_challenge1_a: Tu peux utiliser plus d’un bloc ˋcollecter`
          sur chaque case.
        courseC_collector_prog_challenge1_b: Tu es perdu ? Essaie de suivre ce chemin
          pour résoudre le puzzle !
      courseC_collector_prog_challenge2_2018_authored_hint:
        courseC_collector_prog_challenge1_a: Tu peux utiliser plus d’un bloc ˋcollecter`
          sur chaque case.
        courseC_collector_prog_challenge1_b: Tu es perdu ? Essaie de suivre ce chemin
          pour résoudre le puzzle !
      courseC_collector_prog_challenge2_2019_authored_hint:
        courseC_collector_prog_challenge1_a: Tu peux utiliser plus d’un bloc ˋcollecter`
          sur chaque case.
        courseC_collector_prog_challenge1_b: Tu es perdu ? Essaie de suivre ce chemin
          pour résoudre le puzzle !
      courseC_flappy_events1_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2019_authored_hint:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2_authored_hint:
        courseC_flappy_events2_a: 'Le bloc que tu dois ajouter s’appelle ˋdéfinis
          une vitesse`. '
        courseC_flappy_events2_b: Connecte le bloc ˋdéfinis une vitesse` au bloc ˋquand
          l’exécution commenceˋ pour résoudre ce casse-tête.
      courseC_flappy_events2_2018_authored_hint:
        courseC_flappy_events2_a: 'Le bloc que tu dois ajouter s’appelle ˋdéfinis
          une vitesse`. '
        courseC_flappy_events2_b: Connecte le bloc ˋdéfinis une vitesse` au bloc ˋquand
          l’exécution commenceˋ pour résoudre ce casse-tête.
      courseC_flappy_events2_2019_authored_hint:
        courseC_flappy_events2_a: 'Le bloc que tu dois ajouter s’appelle ˋdéfinis
          une vitesse`. '
        courseC_flappy_events2_b: Connecte le bloc ˋdéfinis une vitesse` au bloc ˋquand
          l’exécution commenceˋ pour résoudre ce casse-tête.
      courseC_flappy_events3_authored_hint:
        courseC_flappy_events3_a: Si quelque chose ne fonctionne pas correctement,
          assure-toi que tes blocs sont connectés aux bons événements dans l’espace
          de travail.
      courseC_flappy_events3_2018_authored_hint:
        courseC_flappy_events3_a: Si quelque chose ne fonctionne pas correctement,
          assure-toi que tes blocs sont connectés aux bons événements dans l’espace
          de travail.
      courseC_flappy_events3_2019_authored_hint:
        courseC_flappy_events3_a: Si quelque chose ne fonctionne pas correctement,
          assure-toi que tes blocs sont connectés aux bons événements dans l’espace
          de travail.
      courseC_flappy_events4_authored_hint:
        courseC_flappy_events4_a: Connecte le bloc ˋterminer le jeuˋ à ˋau contact
          d’un obstacle` pour résoudre ce casse-tête.
      courseC_flappy_events4_2018_authored_hint:
        courseC_flappy_events4_a: Connecte le bloc ˋterminer le jeuˋ à ˋau contact
          d’un obstacle` pour résoudre ce casse-tête.
      courseC_flappy_events4_2019_authored_hint:
        courseC_flappy_events4_a: Connecte le bloc ˋterminer le jeuˋ à ˋau contact
          d’un obstacle` pour résoudre ce casse-tête.
      courseC_flappy_events5_authored_hint:
        courseC_flappy_events5_a: Tu devras utiliser le bloc ˋmarquer un point` pour
          réussir ce niveau.
      courseC_flappy_events5_2018_authored_hint:
        courseC_flappy_events5_a: Tu devras utiliser le bloc ˋmarquer un point` pour
          réussir ce niveau.
      courseC_flappy_events5_2019_authored_hint:
        courseC_flappy_events5_a: Tu devras utiliser le bloc ˋmarquer un point` pour
          réussir ce niveau.
      courseC_harvester_loops1_authored_hint:
        courseC_harvester_loops1_a: Une fois que tu t’es déplacé vers une citrouille,
          utilise <xml><block type="harvester_pumpkin"/></xml> pour la récolter.
        courseC_harvester_loops1_b: Tu peux utiliser une boucle avec le bloc <xml><block
          type="harvester_pumpkin"/></xml> pour récolter plus d’une citrouille dans
          une case.
      courseC_harvester_loops1_2018_authored_hint:
        courseC_harvester_loops1_a: Une fois que tu t’es déplacé vers une citrouille,
          utilise <xml><block type="harvester_pumpkin"/></xml> pour la récolter.
        courseC_harvester_loops1_b: Tu peux utiliser une boucle avec le bloc <xml><block
          type="harvester_pumpkin"/></xml> pour récolter plus d’une citrouille dans
          une case.
      courseC_harvester_loops1_2019_authored_hint:
        courseC_harvester_loops1_a: Une fois que tu t’es déplacé vers une citrouille,
          utilise <xml><block type="harvester_pumpkin"/></xml> pour la récolter.
        courseC_harvester_loops1_b: Tu peux utiliser une boucle avec le bloc <xml><block
          type="harvester_pumpkin"/></xml> pour récolter plus d’une citrouille dans
          une case.
      courseC_harvester_loops_challenge1_authored_hint:
        courseC_harvester_loops_challenge1_c: |-
          Le meilleur moyen de récolter les quatre premiers épis est d’utiliser un bloc `répéter` à l’intérieur d’un autre bloc ˋrépéter`. Tu peux aussi utiliser ce motif pour le reste du casse-tête !

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></next></block></xml>
      courseC_harvester_loops_challenge1a_authored_hint:
        courseC_harvester_loops_challenge1_c: |-
          Le meilleur moyen de récolter le maïs au milieu est d’utiliser un bloc ˋrépéter` à l’intérieur d’un autre bloc ˋrépéter`.

          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge1a_2018_authored_hint:
        courseC_harvester_loops_challenge1_c: |-
          Le meilleur moyen de récolter le maïs au milieu est d’utiliser un bloc ˋrépéter` à l’intérieur d’un autre bloc ˋrépéter`.

          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_harvester_loops_challenge1a_2019_authored_hint:
        courseC_harvester_loops_challenge1_c: |-
          Le meilleur moyen de récolter le maïs au milieu est d’utiliser un bloc ˋrépéter` à l’intérieur d’un autre bloc ˋrépéter`.

          <xml><block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="harvester_corn"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseC_maze_debugging2_authored_hint:
        courseC_maze_debugging2_c: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
      courseC_maze_debugging2_2018_authored_hint:
        courseC_maze_debugging2_c: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
      courseC_maze_debugging2_2019_authored_hint:
        courseC_maze_debugging2_c: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
      courseC_maze_debugging3_authored_hint:
        courseC_maze_debugging3_b: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
      courseC_maze_debugging3_2018_authored_hint:
        courseC_maze_debugging3_b: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
      courseC_maze_debugging3_2019_authored_hint:
        courseC_maze_debugging3_b: Tu ne trouves pas le problème ? Essaie d’exécuter
          le code quelques fois pour voir ce qui se passe.
      courseC_maze_loops6_authored_hint:
        courseC_maze_loops6_b: "Pour mettre plusieurs blocs dans une boucle ˋrépéterˋ,
          fais glisser une boucle sur le plan de travail, puis fais glisser tous les
          blocs du programme de départ à l’intérieur. \n\nConnecte le tout au bloc
          ˋquand l’exécution commenceˋ et tu es prêt à partir !"
      courseC_maze_loops7_authored_hint:
        courseC_maze_loops7_a: Si le motif est difficile à repérer, essaie de tout
          coder et de voir quelles choses se répètent encore et encore avant de placer
          les boucles.
      courseC_maze_loops_challenge2_authored_hint:
        courseC_maze_loops_challenge2_b: Utilise des boucles pour ne pas être à court
          de blocs ˋcollecter` !
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: Il y a deux façons de résoudre ce casse-tête
          !
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: Il y a deux façons de résoudre ce casse-tête
          !
      courseC_maze_programming6_2019_authored_hint:
        courseC_maze_programming6_a: Il y a deux façons de résoudre ce casse-tête
          !
      courseC_starWars_loops1_authored_hint:
        courseC_starWars_loops1_b: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
      courseC_starWars_loops10_authored_hint:
        courseC_starWars_loops10_c: N’aie pas peur de faire des erreurs ! Exécute
          le code pour voir ce qui se passe, même si tu n’as pas encore résolu le
          casse-tête.
      courseC_starWars_loops10_2018_authored_hint:
        courseC_starWars_loops10_c: N’aie pas peur de faire des erreurs ! Exécute
          le code pour voir ce qui se passe, même si tu n’as pas encore résolu le
          casse-tête.
      courseC_starWars_loops10_2019_authored_hint:
        courseC_starWars_loops10_c: N’aie pas peur de faire des erreurs ! Exécute
          le code pour voir ce qui se passe, même si tu n’as pas encore résolu le
          casse-tête.
      courseC_starWars_loops1_2018_authored_hint:
        courseC_starWars_loops1_b: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
      courseC_starWars_loops1_2019_authored_hint:
        courseC_starWars_loops1_b: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
      courseC_starWars_loops7_authored_hint:
        courseC_starWars_loops7_c: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
      courseC_starWars_loops7_2018_authored_hint:
        courseC_starWars_loops7_c: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
      courseC_starWars_loops7_2019_authored_hint:
        courseC_starWars_loops7_c: N’aie pas peur de faire des erreurs ! Exécute le
          code pour voir ce qui se passe, même si tu n’as pas encore résolu le casse-tête.
      courseD_artist_5_2018_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to
          switch their angles, too!
      courseD_artist_5_2018_2019_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to
          switch their angles, too!
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          Ton programme devrait:
          - Utiliser une fonction
          - Avancer de 100 + 75 pixels
          - Utiliser une fonction
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: "Essaie d'utiliser le bloc ˋsauter en avantˋ
          pour aller du sommet d'un carré à l'endroit où tu veux commencer le suivant.
          \n\nSi tes carrés font 20 pixels de haut et sont séparés de 20 pixels, de
          combien dois-tu sauter ?"
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: "Essaie d'utiliser le bloc ˋsauter en avantˋ
          pour aller du sommet d'un carré à l'endroit où tu veux commencer le suivant.
          \n\nSi tes carrés font 20 pixels de haut et sont séparés de 20 pixels, de
          combien dois-tu sauter ?"
      courseD_artist_nestedLoops3_2019_authored_hint:
        courseD_artist_nestedLoops3_a: "Essaie d'utiliser le bloc ˋsauter en avantˋ
          pour aller du sommet d'un carré à l'endroit où tu veux commencer le suivant.
          \n\nSi tes carrés font 20 pixels de haut et sont séparés de 20 pixels, de
          combien dois-tu sauter ?"
      courseD_artist_ramp12_authored_hint:
        courseD_artist_ramp12_c: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
      courseD_bee_conditionals8_authored_hint:
        courseD_bee_conditionals8_a: "**Souviens-toi :** Ce casse-tête change à chaque
          fois qu’il est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ
          ou ˋsi / sinonˋ) pour résoudre le problème."
      courseD_bee_conditionals8_2018_authored_hint:
        courseD_bee_conditionals8_a: "**Souviens-toi :** Ce casse-tête change à chaque
          fois qu’il est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ
          ou ˋsi / sinonˋ) pour résoudre le problème."
      courseD_bee_conditionals8_2019_authored_hint:
        courseD_bee_conditionals8_a: "**Souviens-toi :** Ce casse-tête change à chaque
          fois qu’il est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ
          ou ˋsi / sinonˋ) pour résoudre le problème."
      courseD_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018_authored_hint:
        courseD_bee_nested_loops_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019_authored_hint:
        courseD_bee_nested_loops_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_farmer_condLoops7_authored_hint:
        courseD_farmer_condLoops7_b: Essaie d’utiliser ˋquand chemin devant` pour
          que le moissonneur continue d’avancer le bon nombre de fois.
      courseD_farmer_condLoops7_2018_authored_hint:
        courseD_farmer_condLoops7_b: Essaie d’utiliser ˋquand chemin devant` pour
          que le moissonneur continue d’avancer le bon nombre de fois.
      courseD_farmer_condLoops7_2019_authored_hint:
        courseD_farmer_condLoops7_b: Essaie d’utiliser ˋquand chemin devant` pour
          que le moissonneur continue d’avancer le bon nombre de fois.
      courseD_iceage_loops1_authored_hint:
        courseD_iceage_loops1_a: Attention à la glace brisée ! Scrat tombera à travers
          !
      courseD_iceage_loops10_authored_hint:
        courseB_iceage_loops10_a: Attention à la glace brisée ! Scrat tombera dans
          l’eau !
        courseB_iceage_loops10_b: Essaie de dire les étapes à voix haute ou de les
          écrire sur du papier. Vois-tu des choses qui se répètent ?
        courseB_iceage_loops10_c: Ce casse-tête est long ! Suis ce chemin.
      courseD_iceage_loops10_2019_authored_hint:
        courseB_iceage_loops10_a: Attention à la glace brisée ! Scrat tombera dans
          l’eau !
        courseB_iceage_loops10_b: Essaie de dire les étapes à voix haute ou de les
          écrire sur du papier. Vois-tu des choses qui se répètent ?
        courseB_iceage_loops10_c: Ce casse-tête est long ! Suis ce chemin.
      courseD_iceage_loops1_2019_authored_hint:
        courseD_iceage_loops1_a: Attention à la glace brisée ! Scrat tombera à travers
          !
      courseD_iceage_loops2_authored_hint:
        courseD_iceage_loops2_a: Divise ce problème en deux parties, une avant le
          coin et une après.
        courseD_iceage_loops2_b: Si tu es bloqué, essaie de dire les étapes à voix
          haute.
        courseD_iceage_loops2_c: Suis ce chemin pour amener Scrat jusqu’au gland.
      courseD_iceage_loops2_2019_authored_hint:
        courseD_iceage_loops2_a: Divise ce problème en deux parties, une avant le
          coin et une après.
        courseD_iceage_loops2_b: Si tu es bloqué, essaie de dire les étapes à voix
          haute.
        courseD_iceage_loops2_c: Suis ce chemin pour amener Scrat jusqu’au gland.
      courseD_iceage_loops4_authored_hint:
        courseD_iceage_loops4_a: N’aie pas peur d’exécuter ton code pour voir ce qui
          se passe !
        courseD_iceage_loops4_c: Voici le chemin que Scrat devrait emprunter.
      courseD_iceage_loops4_2019_authored_hint:
        courseD_iceage_loops4_a: N’aie pas peur d’exécuter ton code pour voir ce qui
          se passe !
        courseD_iceage_loops4_c: Voici le chemin que Scrat devrait emprunter.
      courseD_iceage_loops6_authored_hint:
        courseD_iceage_loops6_b: Tu n’as besoin d’ajouter qu’**une** boucle !
        courseD_iceage_loops6_c: Ton chemin final devrait ressembler à ceci.
      courseD_iceage_loops6_2019_authored_hint:
        courseD_iceage_loops6_b: Tu n’as besoin d’ajouter qu’**une** boucle !
        courseD_iceage_loops6_c: Ton chemin final devrait ressembler à ceci.
      courseD_iceage_loops7_authored_hint:
        courseB_iceage_loops7_a: Si tu es bloqué, essaie d’écrire les étapes sur du
          papier. Vois-tu un motif ?
        courseB_iceage_loops7_b: Voici le chemin que Scrat devrait suivre pour arriver
          jusqu’au gland.
      courseD_iceage_loops7_2019_authored_hint:
        courseB_iceage_loops7_a: Si tu es bloqué, essaie d’écrire les étapes sur du
          papier. Vois-tu un motif ?
        courseB_iceage_loops7_b: Voici le chemin que Scrat devrait suivre pour arriver
          jusqu’au gland.
      courseD_iceage_loops8_authored_hint:
        courseD_iceage_loops8_b: La première boucle devrait se répéter **3** fois,
          la deuxième devrait se répéter **5** fois, la troisième boucle devrait se
          répéter **4** fois et la dernière boucle devrait se répéter **4** fois.
        courseD_iceage_loops8_c: Utilise des boucles pour aider Scrat à suivre ce
          chemin.
      courseD_iceage_loops8_2019_authored_hint:
        courseD_iceage_loops8_b: La première boucle devrait se répéter **3** fois,
          la deuxième devrait se répéter **5** fois, la troisième boucle devrait se
          répéter **4** fois et la dernière boucle devrait se répéter **4** fois.
        courseD_iceage_loops8_c: Utilise des boucles pour aider Scrat à suivre ce
          chemin.
      courseD_iceage_loops9_authored_hint:
        courseD_iceage_loops9_a: Des problèmes ? Essaie de diviser ce problème en
          plus petites parties. N’aie pas peur d’exécuter ton programme au long du
          processus !
        courseD_iceage_loops9_b: Ton code final devrait avoir **4** boucles.
        courseD_iceage_loops9_c: Scrat devrait suivre ce chemin pour obtenir le gland.
      courseD_iceage_loops9_2019_authored_hint:
        courseD_iceage_loops9_a: Des problèmes ? Essaie de diviser ce problème en
          plus petites parties. N’aie pas peur d’exécuter ton programme au long du
          processus !
        courseD_iceage_loops9_b: Ton code final devrait avoir **4** boucles.
        courseD_iceage_loops9_c: Scrat devrait suivre ce chemin pour obtenir le gland.
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Il y a deux façons de résoudre ce casse-tête
          !
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: Il y a deux façons de résoudre ce casse-tête
          !
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: Il y a deux façons de résoudre ce casse-tête
          !
      courseE_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'Le demi-hexagone a une **longueur de
          30** et tourne à droite de **60 degrés**.  '
        courseE_artist_concept_challenge1_b: 'Le 2/3 de triangle a une **longueur
          de 80** et tourne à droite de **120 degrés**. '
      courseE_artist_concept_challenge1_2018_authored_hint:
        courseE_artist_concept_challenge1_a: 'Le demi-hexagone a une **longueur de
          30** et tourne à droite de **60 degrés**.  '
        courseE_artist_concept_challenge1_b: 'Le 2/3 de triangle a une **longueur
          de 80** et tourne à droite de **120 degrés**. '
      courseE_artist_concept_challenge1_2019_authored_hint:
        courseE_artist_concept_challenge1_a: 'Le demi-hexagone a une **longueur de
          30** et tourne à droite de **60 degrés**.  '
        courseE_artist_concept_challenge1_b: 'Le 2/3 de triangle a une **longueur
          de 80** et tourne à droite de **120 degrés**. '
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: Les carrés ont chacun des côtés de 100 pixels,
          ce qui signifie que tu devras avancer de 175 pixels avant de dessiner ton
          deuxième carré.
        courseE_artist_functions1_b: Tu peux dessiner des lignes qui se superposent
          pour dessiner les lunettes.
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: Les carrés ont chacun des côtés de 100 pixels,
          ce qui signifie que tu devras avancer de 175 pixels avant de dessiner ton
          deuxième carré.
        courseE_artist_functions1_b: Tu peux dessiner des lignes qui se superposent
          pour dessiner les lunettes.
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_a: |-
          Ton programme devrait:
          - Utiliser une fonction
          - Avancer de 100 + 75 pixels
          - Utiliser une fonction
      courseE_artist_functions2_2018_authored_hint:
        courseD_artist_functions2_a: |-
          Votre programme devrait:
          - Utiliser une fonction
          - Avancer de 100 + 75 pixels
          - Utiliser une fonction
      courseE_artist_functions2_2019_authored_hint:
        courseD_artist_functions2_a: |-
          Votre programme devrait:
          - Utiliser une fonction
          - Avancer de 100 + 75 pixels
          - Utiliser une fonction
      courseE_artist_ramp10_authored_hint:
        courseD_artist_ramp10_b: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
      courseE_artist_ramp9_authored_hint:
        courseD_artist_ramp12_b: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
      courseE_artist_ramp9_2_authored_hint:
        courseD_artist_ramp12_b: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
      courseE_artist_ramp9_2018_authored_hint:
        courseD_artist_ramp12_b: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
      courseE_artist_ramp9_2_2018_authored_hint:
        courseD_artist_ramp12_b: Tu peux utiliser le menu déroulant des blocs ˋtourner`
          pour voir de quel angle tu as besoin !
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: |-
          Si le casse-tête semble difficile, essaie de construire ta fonction petit à petit.

          Ajoutes quelques blocs, puis essaye. Ajoutes-en d’autres, puis réessaye. Bientôt, tu y arriveras !

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: |-
          Si le casse-tête semble difficile, essaie de construire ta fonction petit à petit.

          Ajoutes quelques blocs, puis essaye. Ajoutes-en d’autres, puis réessaye. Bientôt, tu y arriveras !

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: |-
          Si le casse-tête semble difficile, essaie de construire ta fonction petit à petit.

          Ajoutes quelques blocs, puis essaye. Ajoutes-en d’autres, puis réessaye. Bientôt, tu y arriveras !

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
        courseE_bee_functions7_b: |-
          N’oublie pas de placer ton code dans le bloc de fonction vert.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
        courseE_bee_functions7_b: |-
          N’oublie pas de placer ton code dans le bloc de fonction vert.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: Si le casse-tête semble difficile, essaie
          de construire ta fonction peu à peu. Ajoute quelques blocs, puis essaie.
          Ajoutes-en d’autres, puis réessaie. Bientôt, tu y arriveras !
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: Si le casse-tête semble difficile, essaie
          de construire ta fonction peu à peu. Ajoute quelques blocs, puis essaie.
          Ajoutes-en d’autres, puis réessaie. Bientôt, tu y arriveras !
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: Si le casse-tête semble difficile, essaie
          de construire ta fonction peu à peu. Ajoute quelques blocs, puis essaie.
          Ajoutes-en d’autres, puis réessaie. Bientôt, tu y arriveras !
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: Si le casse-tête semble difficile, essaie
          de construire ta fonction peu à peu. Ajoute quelques blocs, puis essaie.
          Ajoutes-en d’autres, puis réessaie. Bientôt, tu y arriveras !
      courseE_farmer_concept4_authored_hint:
        4-5_Artist_Patterns_3_a: Fais attention à décrocher le bloc de code entier
          de la barre d’outils à chaque fois que tu en essaye un nouveau.
        4-5_Artist_Patterns_3_b: Si ton code devient trop confus, tu peux toujours
          appuyer sur « Recommencer » et réessayer !
      courseE_farmer_ramp15_authored_hint:
        courseE_farmer_ramp15_c: Les pousses cachent différentes quantités soit de
          maïs soit de salade à récupérer en allant vers la citrouille.
      courseE_farmer_ramp15_2018_authored_hint:
        courseE_farmer_ramp15_c: Les pousses cachent différentes quantités soit de
          maïs soit de salade à récupérer en allant vers la citrouille.
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Il y a deux façons de résoudre ce casse-tête
          !
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: Il y a deux façons de résoudre ce casse-tête
          !
      courseF_artist_for4_authored_hint:
        courseF_artist_for4_a: "**Quel est le plus petit nombre dont tu auras besoin
          ?  \nQuel est le plus grand nombre ?  \nDe combien est l’augmentation à
          chaque fois ?**\n\nCe sont les questions que tu dois te poser pour remplir
          les blancs de la boucle `pour`."
      courseF_artist_for4_2018_authored_hint:
        courseF_artist_for4_a: "**Quel est le plus petit nombre dont tu auras besoin
          ?  \nQuel est le plus grand nombre ?  \nDe combien est l’augmentation à
          chaque fois ?**\n\nCe sont les questions que tu dois te poser pour remplir
          les blancs de la boucle `pour`."
      courseF_artist_for4_2019_authored_hint:
        courseF_artist_for4_a: "**Quel est le plus petit nombre dont tu auras besoin
          ?  \nQuel est le plus grand nombre ?  \nDe combien est l’augmentation à
          chaque fois ?**\n\nCe sont les questions que tu dois te poser pour remplir
          les blancs de la boucle `pour`."
      courseF_artist_for_challenge1_authored_hint:
        courseF_artist_for_challenge1_a: La ˋlargeur du pinceauˋ est 1. Le premier
          carré a des côtés de 50 pixels, et chaque carré est 50 pixels plus large
          que le précédent.
        courseF_artist_for_challenge1_b: L’opacité du pinceau est toujours ˋcompteur`
          / 2.
        courseF_artist_for_challenge1_c: Après avoir terminé chaque carré, n’oublie
          pas de sauter en arrière, tourner, sauter à nouveau, et de te retourner
          !
        courseF_artist_for_challenge1_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018_authored_hint:
        courseF_artist_for_challenge1_a: La ˋlargeur du pinceauˋ est 1. Le premier
          carré a des côtés de 50 pixels, et chaque carré est 50 pixels plus large
          que le précédent.
        courseF_artist_for_challenge1_b: L’opacité du pinceau est toujours ˋcompteur`
          / 2.
        courseF_artist_for_challenge1_c: Après avoir terminé chaque carré, n’oublie
          pas de sauter en arrière, tourner, sauter à nouveau, et de te retourner
          !
        courseF_artist_for_challenge1_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2019_authored_hint:
        courseF_artist_for_challenge1_a: La ˋlargeur du pinceauˋ est 1. Le premier
          carré a des côtés de 50 pixels, et chaque carré est 50 pixels plus large
          que le précédent.
        courseF_artist_for_challenge1_b: L’opacité du pinceau est toujours ˋcompteur`
          / 2.
        courseF_artist_for_challenge1_c: Après avoir terminé chaque carré, n’oublie
          pas de sauter en arrière, tourner, sauter à nouveau, et de te retourner
          !
        courseF_artist_for_challenge1_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_authored_hint:
        courseF_artist_for_challenge2_c: 'La boucle ˋpour` va de 5 à 250 par 2. '
        courseF_artist_for_challenge2_a: Le changement de couleur se produit en utilisant
          le bloc ˋdéfinis la couleur avec rouge, vert, bleu`. Le rouge est toujours
          à 255, le vert est toujours de la valeur de ˋcompteur` et le bleu est toujours
          à ˋ255 - compteur`.
        courseF_artist_for_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_for_challenge2_2018_authored_hint:
        courseF_artist_for_challenge2_c: 'La boucle ˋpour` va de 5 à 250 par 2. '
        courseF_artist_for_challenge2_a: Le changement de couleur se produit en utilisant
          le bloc ˋdéfinis la couleur avec rouge, vert, bleu`. Le rouge est toujours
          à 255, le vert est toujours de la valeur de ˋcompteur` et le bleu est toujours
          à ˋ255 - compteur`.
        courseF_artist_for_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_for_challenge2_2019_authored_hint:
        courseF_artist_for_challenge2_c: 'La boucle ˋpour` va de 5 à 250 par 2. '
        courseF_artist_for_challenge2_a: Le changement de couleur se produit en utilisant
          le bloc ˋdéfinis la couleur avec rouge, vert, bleu`. Le rouge est toujours
          à 255, le vert est toujours de la valeur de ˋcompteur` et le bleu est toujours
          à ˋ255 - compteur`.
        courseF_artist_for_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_fwp_challenge2_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'C’est une série d’octogones dont les côtés
          font `compteur` pixels de long. '
        courseF_artist_fwp_challenge1_c: 'Chaque octogone est appelé à l’intérieur
          d’un boucle ˋpour` qui décompte de 200 de 2 en 2. '
        courseF_artist_fwp_challenge1_d: 'N’oublie pas de tourner de 22,5 degrés à
          la fin de chaque itération. '
        courseF_artist_fwp_challenge1_e: La variable ˋcompteur` contrôle aussi bien
          la couleur de chaque octogone que la largeur du pinceau.
        courseF_artist_fwp_challenge1_f: |-
          **Solution :**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_fwp_challenge2_2018_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'C’est une série d’octogones dont les côtés
          font `compteur` pixels de long. '
        courseF_artist_fwp_challenge1_c: 'Chaque octogone est appelé à l’intérieur
          d’un boucle ˋpour` qui décompte de 200 de 2 en 2. '
        courseF_artist_fwp_challenge1_d: 'N’oublie pas de tourner de 22,5 degrés à
          la fin de chaque itération. '
        courseF_artist_fwp_challenge1_e: La variable ˋcompteur` contrôle aussi bien
          la couleur de chaque octogone que la largeur du pinceau.
        courseF_artist_fwp_challenge1_f: |-
          **Solution :**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_variables_challenge1a_authored_hint:
        courseF_artist_variables_challenge1_a: 'Les variables sont utiles car tu peux
          les modifier à chaque fois avec une boucle. '
        courseF_artist_variables_challenge1_b: Ce puzzle a une boucle qui crée le
          polygone, une boucle qui répète le polygone ˋcôtés` fois, et une autre qui
          recommence après avoir ajouté 5 à ˋcôtés`.
        courseF_artist_variables_challenge1_c: Utiliser une variable pour ˋcôtés`
          et une pour ˋlongueur` rend le code plus propre car tu peux boucler le même
          code plusieurs fois au lieu de créer une nouvelle copie pour chaque ensemble
          de nombres.
        courseF_artist_variables_challenge1_d: |-
          **Solution :**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_d: |-
          **Solution :**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018_authored_hint:
        courseF_artist_variables_challenge2_d: |-
          **Solution :**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019_authored_hint:
        courseF_artist_variables_challenge2_d: |-
          **Solution :**

          ![Solution](https://images.code.org/1236e605d55d8cc9beafbca5425c8f75-image-1543523947735.png)
      courseF_bee_conditionals8_authored_hint:
        courseF_bee_conditionals8_a: "**Souviens-toi :** Ce casse-tête change à chaque
          fois qu’il est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ
          ou ˋsi / sinonˋ) pour résoudre le problème."
      courseF_bee_conditionals8_2018_authored_hint:
        courseF_bee_conditionals8_a: "**Souviens-toi :** Ce casse-tête change à chaque
          fois qu’il est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ
          ou ˋsi / sinonˋ) pour résoudre le problème."
      courseF_bee_for_challenge2_authored_hint:
        courseF_bee_for_challenge2_a: "Jette un œil à cette option pour le mouvement :
          \ \n\n![] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Essaie d’utiliser deux boucles ˋpour` : une
          pour aller vers le haut et obtenir le nectar, et l’autre pour aller vers
          le bas et fabriquer le miel.'
        courseF_bee_for_challenge2_c: |-
          Note que la boucle ˋpour` a besoin de plusieurs boucles à l’intérieur qui se répètent ˋcompteurˋ fois pour faire le motif d’escalier ascendant.

          L’autre boucle ˋpour` n’a besoin que d’une boucle pour fabriquer ˋcompteur` fois du miel.
        courseF_bee_for_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018_authored_hint:
        courseF_bee_for_challenge2_a: "Jette un œil à cette option pour le mouvement :
          \ \n\n![] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Essaie d’utiliser deux boucles ˋpour` : une
          pour aller vers le haut et obtenir le nectar, et l’autre pour aller vers
          le bas et fabriquer le miel.'
        courseF_bee_for_challenge2_c: |-
          Note que la boucle ˋpour` a besoin de plusieurs boucles à l’intérieur qui se répètent ˋcompteurˋ fois pour faire le motif d’escalier ascendant.

          L’autre boucle ˋpour` n’a besoin que d’une boucle pour fabriquer ˋcompteur` fois du miel.
        courseF_bee_for_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2019_authored_hint:
        courseF_bee_for_challenge2_a: "Jette un œil à cette option pour le mouvement :
          \ \n\n![] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Essaie d’utiliser deux boucles ˋpour` : une
          pour aller vers le haut et obtenir le nectar, et l’autre pour aller vers
          le bas et fabriquer le miel.'
        courseF_bee_for_challenge2_c: |-
          Note que la boucle ˋpour` a besoin de plusieurs boucles à l’intérieur qui se répètent ˋcompteurˋ fois pour faire le motif d’escalier ascendant.

          L’autre boucle ˋpour` n’a besoin que d’une boucle pour fabriquer ˋcompteur` fois du miel.
        courseF_bee_for_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge3_authored_hint:
        courseF_bee_for_challenge2_a: "Jette un œil à cette option pour le mouvement :
          \ \n\n![] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Essaie d’utiliser deux boucles ˋpour` : une
          pour aller vers le haut et obtenir le nectar, et l’autre pour aller vers
          le bas et fabriquer le miel.'
        courseF_bee_for_challenge2_c: |-
          Note que la boucle ˋpour` a besoin de plusieurs boucles à l’intérieur qui se répètent ˋcompteurˋ fois pour faire le motif d’escalier ascendant.

          L’autre boucle ˋpour` n’a besoin que d’une boucle pour fabriquer ˋcompteur` fois du miel.
        courseF_bee_for_challenge2_d: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions6_authored_hint:
        courseF_bee_functions6_a: |-
          Si le casse-tête semble difficile, essaie de construire ta fonction petit à petit.

          Ajoutes quelques blocs, puis essaye. Ajoutes-en d’autres, puis réessaye. Bientôt, tu y arriveras !

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation/>
              <title name="NAME">obtenir nectar fabriquer miel</title>
              <statement name="STACK">
              </statement>
            </block>
          </xml>
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: |-
          Si le casse-tête semble difficile, essaie de construire ta fonction petit à petit.

          Ajoutes quelques blocs, puis essaye. Ajoutes-en d’autres, puis réessaye. Bientôt, tu y arriveras !

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
      courseF_bee_functions_challenge2_authored_hint:
        courseF_bee_functions_challenge2_b: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_2018_authored_hint:
        courseF_bee_functions_challenge2_b: |-
          **Solution :**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
      courseF_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_e: |
          **Voici la solution :**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge1_2018_authored_hint:
        courseF_bee_fwp_challenge1_e: |
          **Voici la solution :**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge2_authored_hint:
        courseF_bee_fwp_challenge2_c: |-
          **Voici à quoi ta fonction devrait ressembler :**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_fwp_challenge2_2018_authored_hint:
        courseF_bee_fwp_challenge2_c: |-
          **Voici à quoi ta fonction devrait ressembler :**

          <xml><block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_ifHasCrop">
          <title name="LOC">Corn</title>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Pumpkin</title>
          <statement name="DO">
          <block type="harvester_pumpkin"/>
          </statement>
          <next>
          <block type="harvester_ifHasCrop">
          <title name="LOC">Lettuce</title>
          <statement name="DO">
          <block type="harvester_lettuce"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_farmer_ramp11_authored_hint:
        courseF_farmer_ramp11_b: Comment peux-tu utiliser une boucle <xml><block type="controls_repeat"><title
          name="TIMES">???</title></block></xml> pour ramasser la salade, au lieu
          de faire glisser 5 blocs <xml><block type="harvester_lettuce"/></xml> ?
      courseF_farmer_ramp11_2018_authored_hint:
        courseF_farmer_ramp11_b: Comment peux-tu utiliser une boucle <xml><block type="controls_repeat"><title
          name="TIMES">???</title></block></xml> pour ramasser la salade, au lieu
          de faire glisser 5 blocs <xml><block type="harvester_lettuce"/></xml> ?
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: Il y a deux façons de résoudre ce casse-tête !
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: Il y a deux façons de résoudre ce casse-tête !
      courseF_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge2_c: |-
          **Solution :**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge2_2018_authored_hint:
        courseF_playlab_variables_challenge2_c: |-
          **Solution :**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      grade1_adventurer_loops2_authored_hint:
        grade1_adventurer_loops2_a: Essaie d’utiliser une boucle ˋrépéter` pour récolter
          ton or.
      grade1_adventurer_loops5_authored_hint:
        grade1_adventurer_loops5_a: Tu ne vois pas où les choses commencent à mal
          tourner ? Utilise le bouton « Étape » pour faire avancer ton programme bloc
          par bloc.
      grade1_adventurer_loops6_authored_hint:
        grade1_adventurer_loops6_a: Si tu as du mal avec ce casse-tête, essaie de
          le dessiner sur du papier pour t’aider.
      grade1_artist_loops1_authored_hint:
        grade1_artist_loops1_a: Si tu veux que la boucle se répète plus de 4 fois,
          tu peux changer le nombre en haut du bloc.
      grade1_artist_loops2_authored_hint:
        grade1_artist_loops2_a: N’oublie pas d’utiliser une boucle `répéter` pour
          un meilleur code !
      grade1_artist_loops4_authored_hint:
        grade1_artist_loops4_a: Fais glisser une boucle ˋrépéter`, puis mets les autres
          blocs à l’intérieur. Combien de fois dois-tu répéter ?
      grade1_artist_loops6_authored_hint:
        grade1_artist_loops6_a: Ce problème utilise QUATRE boucles, l’une après l’autre
          !
        grade1_artist_loops6_c: "Les boucles devraient faire ceci :\n- Boucle 1\n
          \ - Droite\n  - Bas\n  \n- Boucle 2\n  - Droite\n  - Haut\n\n- Boucle 3\n
          \ - Gauche\n  - Haut\n\n- Boucle 4\n  - Gauche\n  - Bas"
      grade1_artist_loops7a_authored_hint:
        artistLoopsK9_a: Ce problème utilise QUATRE boucles, l’une après l’autre !
        artistLoopsK9_c: "Les boucles devraient faire ceci :\n- Boucle 1\n  - Droite\n
          \ - Bas\n  \n- Boucle 2\n  - Droite\n  - Haut\n\n- Boucle 3\n  - Gauche\n
          \ - Haut\n\n- Boucle 4\n  - Gauche\n  - Bas"
      grade1_artist_loops7b_authored_hint:
        grade1_artist_loops7b_a: Combien de fois dois-tu répéter le motif pour créer
          l’échelle ?
      grade1_maze_sequence1_authored_hint:
        grade1_maze_sequence1_a: Il manque un bloc à ce programme. Peux-tu trouver
          lequel ?
      grade1_maze_sequence10_authored_hint:
        grade1_maze_sequence10_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
      grade1_maze_sequence2_authored_hint:
        grade1_maze_sequence2_a: Un des blocs déplace l’oiseau dans la mauvaise direction.
          Peux-tu trouver lequel et le remplacer par le bon bloc ?
      grade1_maze_sequence3_authored_hint:
        grade1_maze_sequence3_a: Essaie d’ajouter une instruction à la fois jusqu’à
          atteindre le cochon.
      grade1_maze_sequence5_authored_hint:
        K2.0_sequence_5: Ton code final devrait avoir trois blocs de mouvement.
      grade1_maze_sequence6_authored_hint:
        K2.0_sequence_6_a: Il y a 1 bloc que tu dois ajouter pour faire avancer l’oiseau
          vers le cochon.
      grade1_maze_sequence8_authored_hint:
        grade1_maze_sequence8_a: Bloqué ? Essaie de tracer du doigt le chemin de l’oiseau.
        grade1_maze_sequence8_b: Les blocs supplémentaires doivent être ajoutés avant
          le dernier ![](https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51
          PM.png )
      grade1_maze_sequence9_authored_hint:
        grade1_maze_sequence9_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
      grade1_maze_sequenceA_authored_hint:
        grade1_maze_sequence10_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
      grade1_maze_sequenceB_authored_hint:
        grade1_maze_sequenceB_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
      grade1_maze_sequenceC_authored_hint:
        grade1_maze_sequenceC_a: Si tu as du mal, essaie d’abord d’écrire les étapes
          sur une feuille de papier.
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: Il y a deux façons de résoudre ce casse-tête !
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: Si tu utilises le bloc pour me faire ˋavancer de 100 pixelsˋ,
          je tracerai une ligne automatiquement.
        2-3_Artist_1_new_b: Des problèmes pour tourner ? Utilise le bloc ˋtourner
          de 90 degrés à droiteˋ.
      grade2_MakeDogTag_3_authored_hint:
        2-3_Artist_4_a: Pour terminer la fusée, dessine simplement le triangle sur
          le dessus !
      grade2_MakeDogTag_5_authored_hint:
        grade2_MakeDogTag_5a: L’artiste est déjà tourné dans la bonne direction pour
          dessiner sa première ligne.
        grade2_MakeDogTag_5b: Le diamant n’est qu’un carré qui tient sur son coin.
        grade2_MakeDogTag_5c: Comme ce diamant est aussi un carré, assure-toi de tourner
          de 90 degrés dans les coins.
      grade2_MakeDogTag_6_authored_hint:
        grade2_MakeDogTag_6a: Chaque angle fait soit 45, soit 90 degrés.
        grade2_MakeDogTag_6b: |-
          Est-ce que ça marche à la première étape ?
          À la deuxième ?
          Où commencent les problèmes ?
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_b: Ton nouveau tournant devrait aller à la **fin**
          du code dans la boucle.
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Combien de fois est-ce que ma forme se répète ?
          Combien de fois est-ce que ma forme *devrait* se répéter ?
          Où peux-tu changer cela dans le programme ?
      grade2_PuppyLoops_6_authored_hint:
        2-3_Maze_16_a: Si le motif est difficile à repérer, essaie de tout coder et
          de voir quelles choses se répètent encore et encore avant de placer les
          boucles.
        2-3_Maze_16_b: "Pour mettre plusieurs blocs dans une boucle ˋrépéterˋ, fais
          glisser une boucle sur le plan de travail, puis fais glisser tous les blocs
          du programme de départ à l’intérieur. \n\nConnecte le tout au bloc ˋquand
          l’exécution commenceˋ et tu es prêt à partir !"
      grade2_PuppyLoops_7_authored_hint:
        2-3_Maze_Loops_17_a: Si le motif est difficile à repérer, essaie de tout coder
          et de voir quelles choses se répètent encore et encore avant de placer les
          boucles.
        2-3_Maze_Loops_17_b: Le code de départ a été supprimé ? Clique sur ˋRecommencerˋ
          pour le récupérer !
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: 'Indice : Chaque cheveu mesure 75 pixels.'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: Que se passe-t-il si l’artiste recule ou saute en
          arrière après qu’il dessine la première ligne ?
      grade2_playlab_project_6_authored_hint:
        idea1: |-
          *Besoin d’une idée ?*

          **Qui est là ?** Fait apparaître des personnages avec des images aléatoires, comme ça personne ne sait qui apparaîtra ensuite.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          *Besoin d’une idée ?*

          **Partis pour l’aventure** - Modifie le fond, puis fait parler les personnages de l’endroit où ils sont à présent.

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          *Besoin d’une idée ?*

          **Pinball** - Déplace un personnage en utilisant les touches directionnelles (utilise des blocs ˋquand flèche vers le haut`, ˋquand flèche vers le bas`), puis joue des sons aléatoires quand il entre en collision avec d’autres personnages sur l’écran.
      grade2_puppy_loops6_authored_hint:
        2-3_Maze_16_a: Si le motif est difficile à repérer, essaie de tout coder et
          de voir quelles choses se répètent encore et encore avant de placer les
          boucles.
        2-3_Maze_16_b: "Pour mettre plusieurs blocs dans une boucle ˋrépéterˋ, fais
          glisser une boucle sur le plan de travail, puis fais glisser tous les blocs
          du programme de départ à l’intérieur. \n\nConnecte le tout au bloc ˋquand
          l’exécution commenceˋ et tu es prêt à partir !"
      grade2_puppy_loops7_authored_hint:
        2-3_Maze_Loops_17_a: Si le motif est difficile à repérer, essaie de tout coder
          et de voir quelles choses se répètent encore et encore avant de placer les
          boucles.
      grade3_ConditionalsElse_4_authored_hint:
        remember_quantum: "**Souviens-toi :** Ce casse-tête change à chaque fois qu’il
          est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ ou ˋsi /
          sinonˋ) pour résoudre le problème."
      grade3_ConditionalsElse_5_authored_hint:
        remember_quantum: "**Souviens-toi :** Ce casse-tête change à chaque fois qu’il
          est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ ou ˋsi /
          sinonˋ) pour résoudre le problème."
      grade3_ConditionalsElse_TeacherIDo_authored_hint:
        remember_quantum: "**Souviens-toi :** Ce casse-tête change à chaque fois qu’il
          est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ ou ˋsi /
          sinonˋ) pour résoudre le problème."
      grade3_Conditionals_10 BAD_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Essaie de traiter ce problème comme un long rectangle
          au long duquel l’abeille avance, puis tourne à gauche plusieurs fois pour
          terminer le chemin.
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: Du mal à trouver comment faire descendre les blocs
          ? Essaie de traiter la fleur rouge exactement comme une fleur mauve !
        2-3_Bee_Conditionals_14_b: Si la fleur rouge était mauve, pourrais-tu trouver
          un moyen d'utiliser une boucle ˋrépéterˋ supplémentaire pour réduire le
          code ?
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: 'N''oublie pas : Les fleurs mauves n''ont que 0
          ou 1 nectar et cela peut changer à chaque fois que tu exécutes le programme.'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: Le code sera plus court si tu utilises une boucle
          à chaque fois que tu vas de l’avant, une autre boucle pour recueillir le
          nectar et une autre pour faire le miel.
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: 'N''oublie pas : Les fleurs mauves changent entre
          0 et 1 nectar lorsque tu exécutes ton programme !'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: 'N''oublie pas : Les fleurs mauves changent entre
          0 et 1 nectar lorsque tu exécutes ton programme !'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: Une fois que tu as trouvé et corrigé le bloc incorrect,
          vois-tu des séquences que tu pourrais simplifier en utilisant une boucle
          ˋrépéterˋ ?
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: Y a-t-il un endroit où l’abeille fait quelque chose
          qui n’a aucun sens ? Que se passe-t-il lorsque tu modifies ce bloc ?
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Tu devrais retrouver cinq blocs à l’intérieur de ta boucle.
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Si tu ne repères pas tout de suite les blocs à mettre dans
          le ˋrépéterˋ, commence par écrire le code de chaque mouvement et cherche
          un motif.
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Si tu ne sais pas ce qui devrait aller dans le ˋrépéterˋ,
          essaie de placer les blocs un par un et de voir si un motif se répète.
        2-3_Bee_Loops_6_b: Il devrait y avoir 6 blocs à l'intérieur de ta boucle ˋrépéterˋ
          lorsque tu as terminé.
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Tu auras besoin de deux boucles ˋrépéterˋ différentes,
          l’une après l’autre.
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: La première action sera un tournant, plutôt qu’un mouvement.
        2-3_Bee_Loops_7_b: 'Si tu n’arrives pas vraiment à imaginer la boucle depuis
          le début, essaie de la coder de la façon longue d''abord, puis cherche un
          motif.  '
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: La première action sera un tournant, plutôt qu’un mouvement.
        2-3_Bee_Loops_4A_b: Le dernier morceau du programme peut être fini en écrivant
          le code à la fin du programme hors de ta boucle.
        2-3_Bee_Loops_4A_c: Si tu ne peux pas encore repérer les boucles, essaie de
          coder de la façon longue d'abord, et puis regarde ce que tu peux combiner
          pour faire une boucle ˋrépéterˋ à la fin.
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Tu devrais avoir quatre blocs à l’intérieur de ta boucle.
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Tu devrais avoir 6 blocs à l’intérieur de ta boucle.
      grade3_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "**Souviens-toi :** Ce casse-tête change à chaque fois qu’il
          est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ ou ˋsi /
          sinonˋ) pour résoudre le problème."
      grade3_maze_loops2_authored_hint:
        grade3_maze_loops2_b: Si le motif est difficile à repérer, essaie de tout
          coder et de voir quelles choses se répètent encore et encore avant de placer
          les boucles.
      grade3_maze_loops5_authored_hint:
        2-3_Maze_Loops_21_a: Si tu as du mal à trouver le motif en escalier, essaie
          de couvrir les chemins bloqués avec ton doigt.
      grade4_arist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Ce dessin bouclera 10 fois sur 360 degrés.

          **360 / 10 = ?**
      grade4_arist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Tu feras boucler cette forme 6 fois sur 360 degrés.

          **360 / 6 = ?**
      grade4_arist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          N’oublie pas de faire un virage après ta boucle interne.

          Tu boucleras 6 triangles sur 360 degrés.

          **360 / 6 = ?**
      grade4_arist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 ÷ 36 = ?**"
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: Les carrés ont chacun des côtés de 100 pixels, ce
          qui signifie que tu devras avancer de 175 pixels avant de dessiner ton deuxième
          carré.
        2-3_Artist_Functions_1_b: Tu peux dessiner des lignes qui se superposent pour
          dessiner les lunettes.
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: |-
          Ton programme devrait:
          - Utiliser une fonction
          - Avancer de 100 + 75 pixels
          - Utiliser une fonction
      grade4_artist_functions_challenge_authored_hint:
        Course_4_SCF_1_a: Chaque hexagone a des côtés de 40 pixels.
        Course_4_SCF_1_b: Il y a un saut de 120 pixels entre chaque hexagone sur chaque
          ligne horizontale.
        Course_4_SCF_1_c: "Avant de dessiner la deuxième rangée d’hexagones, tu dois
          tourner à droite de 60 degrés et sauter en avant de 40 pixels.  \n\nUne
          fois que tu es dans le bon alignement vertical, tu dois retourner ton artiste
          et sauter en arrière de 320 pixels."
        Course_4_SCF_1_d: "Avant de dessiner la troisième rangée d’hexagones, tu dois
          tourner à droite de 60 degrés et sauter en avant de 40 pixels.  \n\nUne
          fois que tu es dans le bon alignement vertical, tu dois retourner ton artiste
          et sauter en arrière de 440 pixels (120 pixels plus loin que ta fonction
          `décaler vers le bas/en avantˋ). "
      grade4_artist_functions_challenge2_authored_hint:
        Course_4_SCF_1_a: Chaque hexagone a des côtés de 40 pixels.
        Course_4_SCF_1_b: Il y a un saut de 120 pixels entre chaque hexagone sur chaque
          ligne horizontale.
        Course_4_SCF_1_c: "Avant de dessiner la deuxième rangée d’hexagones, tu dois
          tourner à droite de 60 degrés et sauter en avant de 40 pixels.  \n\nUne
          fois que tu es dans le bon alignement vertical, tu dois retourner ton artiste
          et sauter en arrière de 320 pixels."
        Course_4_SCF_1_d: "Avant de dessiner la troisième rangée d’hexagones, tu dois
          tourner à droite de 60 degrés et sauter en avant de 40 pixels.  \n\nUne
          fois que tu es dans le bon alignement vertical, tu dois retourner ton artiste
          et sauter en arrière de 440 pixels (120 pixels plus loin que ta fonction
          `décaler vers le bas/en avantˋ). "
      grade4_artist_nestedLoops_challenge2_authored_hint:
        Course_4_Artist_11_a: 'Le demi-hexagone a une **longueur de 30** et tourne
          à droite de **60 degrés**.  '
        Course_4_Artist_11_b: 'Le 2/3 de triangle a une **longueur de 80** et tourne
          à droite de **120 degrés**. '
      grade4_artist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Ce dessin bouclera 10 fois sur 360 degrés.

          **360 / 10 = ?**
      grade4_artist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: |-
          Tu feras boucler cette forme 6 fois sur 360 degrés.

          **360 / 6 = ?**
      grade4_artist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 ÷ 36 = ?**"
      grade4_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "**Souviens-toi :** Ce casse-tête change à chaque fois qu’il
          est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ ou ˋsi /
          sinonˋ) pour résoudre le problème."
      grade4_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "**Souviens-toi :** Ce casse-tête change à chaque fois qu’il
          est exécuté. \n\nTu devras utiliser un bloc conditionnel (ˋsiˋ ou ˋsi /
          sinonˋ) pour résoudre le problème."
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: |-
          Si le casse-tête semble difficile, essaie de construire ta fonction petit à petit.

          Ajoutes quelques blocs, puis essaye. Ajoutes-en d’autres, puis réessaye. Bientôt, tu y arriveras !

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: Si le casse-tête semble difficile, essaie de construire
          ta fonction peu à peu. Ajoute quelques blocs, puis essaie. Ajoutes-en d’autres,
          puis réessaie. Bientôt, tu y arriveras !
        2-3_Bee_Functions_8_b: |-
          N’oublie pas de placer ton code dans le bloc de fonction vert.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: Si tu utilises le bloc pour me faire ˋavancer de 100 pixelsˋ,
          je tracerai une ligne automatiquement.
        2-3_Artist_1_new_b: Des problèmes pour tourner ? Utilise le bloc ˋtourner
          de 90 degrés à droiteˋ.
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: 'Pour faire ces petits angles, tu dois tourner *plus* chaque
          fois que tu as fait un carré.   '
        2-3_Artist_6_b: Étant donné que je suis déjà orienté vers la droite, il est
          plus simple de commencer par avancer, puis de tourner à gauche pour créer
          le triangle.
        2-3_Artist_6_c: Chaque côté du triangle a la même longueur que chaque côté
          du carré... 100 pixels !
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: Tu auras besoin de deux boucles ˋrépéterˋ différentes,
          l’une après l’autre.
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: Tu devrais avoir 6 blocs à l’intérieur de ta boucle.
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: Tu devrais retrouver cinq blocs à l’intérieur de ta boucle.
      grade5_artist_binary10_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Ce code utilise deux boucles ˋpour`.
          Une compte de 1 à 8, l’autre décompte de 8 à 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Chaque boucle ˋpour` se répète trois
          fois. La première dessine les 1 à gauche, la deuxième dessine les 0 au milieu
          et la troisième dessine les 1 à droite.
        Course_4_Artist_Binary_Free_Play_2b_c: À chaque répétition, tu dois `compter`
          les 1 et ˋ16 - (2 x compte)` les 0.
      grade5_artist_for_loops10_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: Le plus grand polygone a 19 côtés.
        Course_4_Artist_For_Loops_Challenge_b: Chaque polygone est incomplet et a
          un côté de moins qu’il devrait avoir.
      grade5_artist_for_loops4_authored_hint:
        Course_4_Artist_For_Loops_4_a: "**Quel est le plus petit nombre dont tu auras
          besoin ?  \nQuel est le plus grand nombre ?  \nDe combien est l’augmentation
          à chaque fois ?**\n\nCe sont les questions que tu dois te poser pour remplir
          les blancs de la boucle `pour`."
      grade5_artist_for_loops8_authored_hint:
        Course_4_Artist_For_Loops_11_a: "L’angle de rotation changera à chaque forme
          !  \n\nUtilise le bloc de math pour entrer 360 divisé par le nombre de côtés
          que la forme a pour avoir le bon angle. "
      grade5_artist_for_loops9_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 divisé par le nombre de côtés qu’une
          forme a donne le nombre de degrés que tu devras tourner. '
        Course_4_Artist_For_Loops_11a_b: 'À chaque fois, tu devras avancer de 10 fois
          la longueur du nombre de côtés actuel. '
      grade5_artist_for_loopsfreeplay11_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: La base de ce code est la même que la
          solution du problème précédent...avec quelques changements.
        Course_4_Artist_For_Loops_inspire_b: Essaie une boucle ˋpour` qui va de 3
          à 10, d’1 en 1.
        Course_4_Artist_For_Loops_inspire_c: Il y a deux itérations de la même boucle
          de répétition à l’intérieur de la boucle ˋpour`, mais la seconde répétition
          tourne vers la direction opposée.
      grade5_artist_functionparameters10_authored_hint:
        brush_width: Nous avons défini la largeur du pinceau à 1 puis la couleur à
          bleu avant tout.
        double_loop: Essaie de mettre une boucle ˋpourˋ dans une boucle ˋrépéterˋ.
        specifics: |-
          La boucle ˋpourˋ s’exécute de trois à dix-sept pour chacune des six « pétales » avant de créer la suivante, en dessinant des formes ayant uniquement un nombre impair de côtés.

          Le bloc ˋdéfinis alphaˋ utilise la division pour faire s’effacer la couleur au fur et à mesure que le compteur augmente.
        after: Quand tu as fini chaque « pétale », assure-toi d’ˋavancerˋ de 20 pixels
          avant de tourner de 60 degrés.
      grade5_artist_variables_freeplay10_authored_hint:
        Course_4_Artist_Vars_8_a: Si tu divises ta longueur de départ par le nombre
          de côtés, la longueur de chaque côté raccourcira à mesure que le nombre
          de côtés augmente.
      grade5_artist_variables_freeplay15_authored_hint:
        Course_4_Artist_Inspire_b: Chaque carré et saut est répété quatre fois (en
          tournant à gauche entre) pour faire une forme de moulin à vent.
        Course_4_Artist_Inspire_c: Chaque moulin à vent est aussi répété 4 fois, avec
          un tournant à droite de **360 / côtés**.
      grade5_artist_variables_octagons13_authored_hint:
        Course_4_Artist_Vars_13_a: Tu as besoin de deux boucles de répétition (une
          dans l’autre) qui se répètent toutes les deux le nombre de `côtés`.
        Course_4_Artist_Vars_13_b: "La partie intérieure de la boucle dessine un octogone
          (tournant vers la gauche).  \n\nAprès, tu dois avancer et tourner à droite
          uniquement dans la boucle extérieure."
        Course_4_Artist_Vars_13_c: Pour que la forme reste de la même taille quand
          le nombre de côtés change, utilise le bloc math pour diviser la longueur
          en pixels par le nombre de côtés.
      grade5_artist_variables_square7_authored_hint:
        Course_4_Artist_Vars_6_a: Pour dessiner un polygone régulier, tourne de **360
          / côtés** à chaque fois.
      grade5_playlab_variables2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Assure-toi que le nombre pour ˋvitesse_chien`
          est plus grand que ˋvitesse_chat`.
      gradeK_sequence_4_authored_hint:
        gradeK_sequence_4_a: Essaie d’écrire les étapes sur du papier pour trouver
          une solution !
      gradek_adventurer_loops4_authored_hint:
        gradek_adventurer_loops4_a: Si tu ne peux pas trouver la réponse tout de suite,
          essaie d’utiliser une feuille de papier pour comprendre de quelles flèches
          tu auras besoin et cherche un motif.
      gradek_adventurer_loops5_authored_hint:
        gradek_adventurer_loops5_a: Si tu ne sais pas ce qu’il faut faire ensuite,
          essaie d’exécuter le code pour voir où Laurel se retrouve.
      gradek_artist_loops3_authored_hint:
        artistLoopsK2_a: Si tu veux que la boucle se répète plus de 4 fois, tu peux
          changer le nombre en haut du bloc.
      gradek_artist_loops4_authored_hint:
        artistLoopsK3_a: Essaie d’utiliser ce que tu connais sur les blocs de répétition
          pour résoudre ce casse-tête !
      gradek_artist_loops5_authored_hint:
        gradek_artist_loops5_a: Tu ne trouves pas comment faire la colline ? Essaie
          de jouer un peu avec les blocs pour voir ce qu’ils dessinent.
      gradek_artist_loops6_authored_hint:
        gradek_artist_loops6_a: Tu ne trouves pas où mettre la boucle ? Essaie d’écrire
          le code étape par étape et cherche un motif.
      gradek_artist_loops7_authored_hint:
        gradek_artist_loops7_a: Essaie d’exécuter le code pour voir ce qui a été écrit
          pour toi.
        gradek_artist_loops7_b: Comment ferais-tu boucler le code qui t’a été donné
          ?
        gradek_artist_loops7_c: |-
          Que fait le code ?
          Qu’est-il censé faire ?
          Qu’est-ce que ça veut dire ?
      gradek_artist_loops9_authored_hint:
        artistLoopsKA_a: Utilise le bloc de saut pour avancer sans dessiner une ligne.
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Tu devrais retrouver cinq blocs à l’intérieur de ta boucle.
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Si tu ne repères pas tout de suite les blocs à mettre dans
          le ˋrépéterˋ, commence par écrire le code de chaque mouvement et cherche
          un motif.
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Si tu ne sais pas ce qui devrait aller dans le ˋrépéterˋ,
          essaie de placer les blocs un par un et de voir si un motif se répète.
        2-3_Bee_Loops_6_b: Il devrait y avoir 6 blocs à l'intérieur de ta boucle ˋrépéterˋ
          lorsque tu as terminé.
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Tu auras besoin de deux boucles ˋrépéterˋ différentes,
          l’une après l’autre.
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: La première action sera un tournant, plutôt qu’un mouvement.
        2-3_Bee_Loops_7_b: 'Si tu n’arrives pas vraiment à imaginer la boucle depuis
          le début, essaie de la coder de la façon longue d''abord, puis cherche un
          motif.  '
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: La première action sera un tournant, plutôt qu’un mouvement.
        2-3_Bee_Loops_4A_b: Le dernier morceau du programme peut être fini en écrivant
          le code à la fin du programme hors de ta boucle.
        2-3_Bee_Loops_4A_c: Si tu ne peux pas encore repérer les boucles, essaie de
          coder de la façon longue d'abord, et puis regarde ce que tu peux combiner
          pour faire une boucle ˋrépéterˋ à la fin.
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Tu devrais avoir quatre blocs à l’intérieur de ta boucle.
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Tu devrais avoir 6 blocs à l’intérieur de ta boucle.
