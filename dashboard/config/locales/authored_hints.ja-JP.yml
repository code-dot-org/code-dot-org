---
ja-JP:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        2-3_Artist_1_new_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      2-3 Artist 11:
        2-3_Artist_11_a: '角度が、むずかしい？8回まがって360度ですね。360 ÷ 8 は、いくつでしょうか？ '
      2-3 Artist 12:
        2-3_Artist_12_a: 円は 360 度で、アーティストはループごとに1度まがるから、360 回くりかえして みてください。
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: アーティストは、正しい方を向いていないです。せんを かく前に、かれの向きを かえてください。
      2-3 Artist 3new:
        2-3_Artist_3new_a: 100 - 70 は、いくつですか？もんだい文では、それが帽子の高さです！
        2-3_Artist_3new_b: アーティストは、正しい方を向いていないです。せんを かく前に、かれの向きを かえてください。
      2-3 Artist 4:
        2-3_Artist_4_a: 家を完成（かんせい）させるには、四角形をかいてください！
      2-3 Artist 6:
        2-3_Artist_6_b: 私はすでに右に向いているので、前に進むことから始めるのが簡単です。そして三角形を作るには左に向きます。
        2-3_Artist_6_c: 三角形のどちら側も、その四角形の辺の長さと同じ、100ピクセルです！
      2-3 Artist 7:
        2-3_Artist_7_a: このパズルを解くいちばん早い方法は、最初の四角形を描いたあと、次の四角形を描くために、キャラクターを下向きにしておくことです。
      2-3 Artist 8:
        2-3_Artist_8_a: 200の長さを半分にする場合、ひとつひとつの四角形の幅は、何ピクセルにすれば良いでしょう？
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: このダイヤモンドは、その側から見るとただの四角形に見えます。
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_b: |-
          "試行錯誤を繰り返すことが大切です！"

          まずはひとつの数字を変えてみる事から始めましょう。

          どの数字がどんな役割でしたか？

          もし思ったよりも変わりすぎたなら、"はじめから"をクリックすれば、あなたのコードは最初の状態に戻ります。
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'ヒント: それぞれのヒゲの長さは、75ピクセルです。'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: 回転の１つが、15度足りません。
        2-3_Artist_Debugging_3_b: もしプログラムが速く動きすぎて何が起こっているのか分からなければ、スライダーを動かしてゆっくりにしてみてください。
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: もしアーティストが最初の線を描いた後に、後ろに動かしたり、飛び下がるとどうなるでしょう？
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: アーティストは描き始める前に、左方向にもう60度回転しておく必要があります！
        2-3_Artist_Debugging_9_b: 完全に回転するために、他のブロックを加える必要はありません。すでにある"左に向く"ブロックに60度を足すだけで良いのです！
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: その四角形にはそれぞれ100ピクセルの側面があります。これは、2番目の四角形を描く前に175ピクセル前に動かす必要があるという事です。
        2-3_Artist_Functions_1_b: メガネを作るために、重なり合う線を描いても大丈夫です。
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: その関数の中では、辺の数字と長さだけでなく、両側でアーティストが回転する角度も変えなければなりません。
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: コードに何を出す必要があるか調べるために、まずはコードを動かしてみましょう。
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: このデザインを完成させるためには、アーティストはそれぞれの四角形の間に120度回転する必要があります。
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_b: 新たな回転は、ループの中のコードの**最後**におかなければなりません。
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: 正しい道筋をたどるためには、ダイヤモンドを描き始める前に、アーティストは60度左に向く必要があります。
        2-3_Artist Loops_New_12_b: アーティストが100ピクセル前に進んだ後、鋭角に曲がるためには、120度右に向く必要があります。
        2-3_Artist Loops_New_12_c: アーティストがゆるやかに曲がるときは、60度だけ右に向く必要があります。
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: |-
          各ダイヤモンドの最後で次を始められるようアーティストは既に右側を向いています。

          このため、再度始めるときに余分な「左にまがる」ブロックを追加する必要はありません。
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: 書き始める前にアーティストは右に45度曲がる必要があります。
        2-3_Artist_Loops_New_9_b: このVは実際単なる正方形の半分です。正方形の半分を描くコードは何でしょう？
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: ループの中に灰色（はいいろ）のブロックをすべて入れることを覚（おぼ）えておいてください。
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: 角度がわかりますか？360/12=30
        2-3_Artist_Nested_Loops_3_b: ループの中に灰色（はいいろ）のコードとまがるブロックをすべて入れることを覚（おぼ）えておいてください。
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: 角度がわかりますか？360/12=30
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: |-
          それぞれのループでどれだけ曲（ま）がればよいでしょう？

          360/10って何ですか？
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          正しい角度を知る手助（てだす）けが必要（ひつよう）ですか？

          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: ブロックのへらし方がむずかしいかな？赤い花をムラサキの花とまったく同じものとして考えてみよう！
        2-3_Bee_Conditionals_14_b: 赤い花が紫色だったら、追加の「くりかえし」ループを使ってコードを減らす方法が分かったでしょうか？
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 注意（ちゅうい）：ムラサキの花だけ0か1つの花のミツがあって、プログラムを実行（じっこう）するたびにそれが変（か）わります。
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: 前にすすむときに毎回ループを使い、他のループで花のミツをとり、そしてほかのループでハチミツをつくるとコードがもっとも短くなります。
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 注意（ちゅうい）：プログラムを実行（じっこう）するときに、ムラサキの花のミツは0から1つで変化（へんか）します！
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: 間違いのブロックを見つけて直すと、「くりかえし」ループを使ってよりシンプルにすることができるパターンが分かりますか？
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: 間違いのブロックを見つけて直すと、「くりかえし」ループを使ってよりシンプルにすることができるパターンが分かりますか？
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: ハチが意味のない何かをするところがありますか？そのブロックを変更すると何が起こりますか？
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: ループを関数と一緒に使う必要はありません。すすんで、関数を使って、そしてすすんで、もう一度関数を使ってみてください。
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: ループを関数と一緒に使う必要はありません。すすんで、関数を使って、そしてすすんで、もう一度関数を使ってみてください。
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        2-3_Bee_Functions_8_b: |-
          緑の関数ブロックの中にコードを書くことを覚えておいてください。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: 繰り返しの中には４つのブロックが必要です。
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: くりかえしの中には6ブロックがひつようです。
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: 前後する別の2つの「くりかえし」ループが必要になります。
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: ループの中には5つのブロックが必要です。
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: 最初にミツバシの向きを変えよう。
        2-3_Bee_Loops_4A_b: プログラムの最後の部分は、ループ外のプログラムの最後にコードを書くことで終わりにできます。
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: 最初にミツバシの向きを変えよう。
      2-3 Maze 6:
        2-3_Maze_6_a: このパズルの解き方は二通りあるよ。
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: 正方形の一辺は 20 ピクセルの長さですから、次の正方形を書く前に 20 ピクセル ジャンプします。
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: 4ブロックでひとつのセットです。３つのうちの、どれかが正しい答えです。
        4-5_Artist_Patterns_3_b: ぐちゃぐちゃになったら、「最初からやりなおす」で、最初からやりなおして下さい。
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: ひとつのひし形を書き終えたとき、アーティストは進むべき方向と、180度反対を向いています。
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: 360÷36＝？
      Course 4 Artist 11:
        Course_4_Artist_11_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        Course_4_Artist_11_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
      Course 4 Artist 12:
        Course_4_Artist_12_b: 'それぞれの形は、前のパズルとほとんど同じですが、6角形を少し大きくします。 '
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: どの関数を使えばいいか考えて、ひとつ決めてください。
        Course_4_Artist_Functions_challenge_b: "「カウントする」ブロックを置いて、その中に「 `counter` 回くりかえす」ブロックを入れ、入れ子のループにします。"
        Course_4_Artist_Functions_challenge_c: ひとつ正方形を書いたら、20ピクセル前にジャンプします。
        Course_4_Artist_Functions_challenge_d: 正方形を `counter` 回かいたら、左に90度まがります。
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: ステージ16で作った関数をおぼえていますか？
        Course_4_SCF_1a_c: "「もし左に道があるなら」「もし右にみちがあるなら」を使って、左右それぞれの花のミツをとります。花のミツは、いつも3つ先にあるはずです。花のミツの数は、`counter`
          の数と同じですね。"
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: ハチミツの数は全て同じですね。
        Course_4_SCF_1b_c: |-
          ハチが動く回数を決めるために、「カウントする」ブロックを使います。
          2から４まで１ずつカウントしてみて下さい。
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCFL_1_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。 `counter`
          変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        Course_4_SCFL_1_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。 `counter`
          変数を上手く使って、ハチミツを作ろう。
        Course_4_SCFL_1_d: 答えは先生に聞いてくださいね。
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_b: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_b: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCFL_2_b: |-
          「カウントする」くりかえしの中では、さいしょに「 'counter`」回、花のミツをとります。次に、「`counter`× 3」回、ハチミツを作ります。そして、「 2 ^`counter\` 」回、花のミツをとります。
          （ ^ は、べき乗を計算します）
        Course_4_SCFL_2_c: "`counter` 変数を上手く使ってね。"
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        Course_4_SCFL_3_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        Course_4_SCFL_3_c: 四角形を一つ書いたら、後ろにジャンプします。
        Course_4_SCFL_3_d: 答えは先生に聞いてくださいね。
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: ペンの太さは１です。色は、赤が `counter`、みどりが 255 - `counter`、青が 255 、これらをまぜた色にします。
        Course_4_SCFL_4_b: 図形は四角形の組み合わせです。一番小さい四角形の一辺は、5ピクセル、一番大きい四角形は200ピクセル、5ピクセルずつ大きくしていきます。
        Course_4_SCFL_4_c: 四角形を一つ書いたら、左に15度まがり、つぎの四角形を書くようにします。
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter` で、これらをまぜた色にしてください。
        Course_4_SCFL_6_b: 色を かえたら、 `counter`ピクセルの線を引き、右に80度まがります。
        Course_4_SCFL_6_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        Course_4_SCFL_6_d: 答えは先生に聞いてくださいね。
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: |-
          「アルファ値は20」ブロックを、はじめに一度だけ実行するようにして下さい。
          色を かえる時は、赤が `counter`、みどりが 255 - `counter`、青が 255 、これらをまぜた色にします。
        Course_4_SCFL_7_b: "「カウントする」ブロックを2つ使います。一つは、5から200まで2ずつ、もう一つは、200から5まで2ずつ、として下さい。 "
        Course_4_SCFL_7_c: |-
          さいしょの くりかえしの中では、「太さは `counter`」とし、色を かえてから 5
           ピクセルの長さの線を引き、左に「360 ÷ `counter` 」度まがります。
          つぎの くりかえしの中では、「太さは `counter`」とし、色を かえてから 5 ピクセルの長さの線を引き、右に「360 ÷ `counter` 」度まがります。
        Course_4_SCFL_7_d: ２つのくりかえしの間では、左に 225 度まがります。
      Course 4 SCV 1:
        Course_4_SCV_1_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく 500
          ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        Course_4_SCV_1_b: 五角形を一つ書いたら、「左にまがる360 ÷ sides」で向きを変えよう。これを sides 回くりかえすと、五角形が五つ書けるはずだよ。
        Course_4_SCV_1_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
      Course 4 SCV 2:
        Course_4_SCV_2_b: "「くりかえす」ブロックを3回使います。くりかえす回数は sides 回で、全部同じです。 "
        Course_4_SCV_2_c: 十角形を一つ書いたら、左に「 360 ÷ sides 」度まがって、それから、次の十角形を書きます。
        Course_4_SCV_2_d: 十角形を10コ書いたら、「length ÷ sides」ピクセル ジャンプして、右に「360 ÷ sides」度まがります。
      Course 4 SCV 4:
        Course_4_SCV_4_c: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
      Course 4 SCV 6:
        Course_4_SCV_6_b: 出来るだけ、変数を使ってプログラムを書いて下さい。
        Course_4_SCV_6_c: ギザギザ線の色は、はじめは 赤 0、みどり 175、青 200を まぜた色です。次は 赤 100、みどり 50、青
          150を まぜた色です。
        Course_4_SCV_6_d: 'ジグザグの角度は、72度です。 '
      CourseD_Dance_Party_01:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   画面にダンサーが表示されていることをたしかめてください。

          _このレベルは4小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*
          \*他の曲を選んで再生してみましょう。
          \*ムースに似た別のものを選んでみましょう！
          \*ダンサーの名前を変更しましょう。
      CourseD_Dance_Party_02:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**
          _4小節後にダンサーを新しい動きに切り替える必要があります_

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_03:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*6小節後、ダンサーは4小節後とは違うダンスをする必要があります。

          _このレベルは12小節で終わります。_
      CourseD_Dance_Party_04:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*7小節目のどこかで、背景エフェクトを変更する必要があります。

          _このレベルは10小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"小節"</title></block></xml> イベントの下に新しいブロックをつないで、曲のあいだのいくつかのポイントで背景エフェクトを変更してみましょう。
      CourseD_Dance_Party_06:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも 2 人のダンサーがいなければなりません。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*3人めのダンサー（または好きなだけの人数！）を追加してください
          \*すべてのダンサーが、曲の中のそれぞれ違うポイントで、違う動きをするようにしてください。
      CourseD_Dance_Party_08:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*2人のダンサーのおおきさは100以外にしてください。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*その他のプロパティ（幅、高さ、回転など）を変えて実験してみましょう
      CourseD_Dance_Party_09:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも1人のダンサーの色合いを変更してください。

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_10:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   2人以上のダンサーのプロパティを変更しなければなりません。

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11_5:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11b:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*\`左矢印キーが押されたとき’のブロックを使って、左矢印キーを押したらロボットが踊るようにしましょう。

          _このレベルは8小節で終わります。_
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: "**海のランタン** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)
          が見えますか?海のランタンと条件をどう組み合わせれば、海底遺跡を通りぬけられるでしょうか?"
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: 赤色と青色のサンゴブロックが見えますか？それぞれ左と右に曲がる道しるべにしてサンゴ礁を進みます。
      Dance_Party_01:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   画面にダンサーが表示されていることをたしかめてください。

          _このレベルは4小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*
          \*他の曲を選んで再生してみましょう。
          \*ムースに似た別のものを選んでみましょう！
          \*ダンサーの名前を変更しましょう。
      Dance_Party_02:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**
          _4小節後にダンサーを新しい動きに切り替える必要があります_

          _このレベルは8小節で終わります。_
      Dance_Party_03:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*6小節後、ダンサーは4小節後とは違うダンスをする必要があります。

          _このレベルは12小節で終わります。_
      Dance_Party_04:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*7小節目のどこかで、背景エフェクトを変更する必要があります。

          _このレベルは10小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"小節"</title></block></xml> イベントの下に新しいブロックをつないで、曲のあいだのいくつかのポイントで背景エフェクトを変更してみましょう。
      Dance_Party_06:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも 2 人のダンサーがいなければなりません。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*3人めのダンサー（または好きなだけの人数！）を追加してください
          \*すべてのダンサーが、曲の中のそれぞれ違うポイントで、違う動きをするようにしてください。
      Dance_Party_08:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*2人のダンサーのおおきさは100以外にしてください。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*その他のプロパティ（幅、高さ、回転など）を変えて実験してみましょう
      Dance_Party_09:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも1人のダンサーの色合いを変更してください。

          _このレベルは8小節で終わります。_
      Dance_Party_10:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   2人以上のダンサーのプロパティを変更しなければなりません。

          _このレベルは8小節で終わります。_
      Dance_Party_11:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      Dance_Party_11_5:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      Dance_Party_11b:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*\`左矢印キーが押されたとき’のブロックを使って、左矢印キーを押したらロボットが踊るようにしましょう。

          _このレベルは8小節で終わります。_
      Function intro Ryan:
        Function_intro_Ryan_b: 関数を正しく呼び出すと、あなたはこの道を行くことになります...
        Function_intro_Ryan_a: 関数はプログラム内で繰り返し呼び出すことができます!  関数を 2 回呼び出して、このパズルをクリアしましょう。
      Function intro Ryan_2019:
        Function_intro_Ryan_b: 関数を正しく呼び出すと、あなたはこの道を行くことになります...
        Function_intro_Ryan_a: 関数はプログラム内で繰り返し呼び出すことができます!  関数を 2 回呼び出して、このパズルをクリアしましょう。
      HOC 2018 Level_10:
        voyage_aquatic_10a: "**海のランタン** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)
          が見えますか?海のランタンと条件をどう組み合わせれば、海底遺跡を通りぬけられるでしょうか?"
      HOC 2018 Level_9b:
        voyage_aquatic_9a: 赤色と青色のサンゴブロックが見えますか？それぞれ左と右に曲がる道しるべにしてサンゴ礁を進みます。
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: ツールボックスの「前進」を 1 つだけワークスペースにドラッグして、「実行した時」ブロックの下に置きましょう。
        MC_HOC_2017_01_RETRY_b: Agent のコードを実行するには、「実行」をクリックする必要があります。
        MC_HOC_2017_01_RETRY_c: Agent がすべてのコードを実行したら、矢印キーでプレイヤーを動かせるようになります!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: ツールボックスの「前進」を 1 つだけワークスペースにドラッグして、「実行した時」ブロックの下に置きましょう。
        MC_HOC_2017_01_RETRY_b: Agent のコードを実行するには、「実行」をクリックする必要があります。
        MC_HOC_2017_01_RETRY_c: Agent がすべてのコードを実行したら、矢印キーでプレイヤーを動かせるようになります!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Agent を前に 2 マス進ませて重量感知板の上に立たせましょう。  それによってドアが開き、プレイヤーが通れるようになります。
        MC_HOC_2017_02_Cole_b: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_02_Cole_c: Agent がドアを開けたら、矢印キーでプレイヤーを外に出しましょう!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Agent を前に 2 マス進ませて重量感知板の上に立たせましょう。  それによってドアが開き、プレイヤーが通れるようになります。
        MC_HOC_2017_02_Cole_b: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_02_Cole_c: Agent がドアを開けたら、矢印キーでプレイヤーを外に出しましょう!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Agent が重量感知板の上に立つと、矢印キーでプレイヤーをコンパスに向かって動かせるようになります!
        MC_HOC_2017_03_Cole_b: コードが少し長く感じますか?  「繰り返す」ループを使ってコードをもっと短くできないか調べてみましょう!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Agent が重量感知板の上に立つと、矢印キーでプレイヤーをコンパスに向かって動かせるようになります!
        MC_HOC_2017_03_Cole_b: コードが少し長く感じますか?  「繰り返す」ループを使ってコードをもっと短くできないか調べてみましょう!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: Agent の向きを変えるには「右を向く」ブロックを使います
        MC_HOC_2017_04POINT5_RYAN_a: Agent を 1 つ目の重量感知板に立たせれば、アレックス (スティーブ) が斧にたどり着けます。
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: Agent の向きを変えるには「右を向く」ブロックを使います
        MC_HOC_2017_04POINT5_RYAN_a: Agent を 1 つ目の重量感知板に立たせれば、アレックス (スティーブ) が斧にたどり着けます。
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent は 7 回 "前進する" 必要があります。こうするためには、「繰り返し」ループをどのように使えばよいでしょうか?
        MC_HOC_2017_04_Cole_c: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_04_Cole_b: Agent が重量感知板の上に立つとドアが開き、プレイヤーが通れるようになります。
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent は 7 回 "前進する" 必要があります。こうするためには、「繰り返し」ループをどのように使えばよいでしょうか?
        MC_HOC_2017_04_Cole_c: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_04_Cole_b: Agent が重量感知板の上に立つとドアが開き、プレイヤーが通れるようになります。
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: ループの中にコードをいくつも入れられるのは知っていましたか?  「繰り返す」の中に「木の板を置く」 **と**
          「前進」を入れて、このパズルをクリアしましょう。
        MC_HOC_2017_05_Cole_b: Agentに川を渡らせて、あなたが通れる橋をかけさせます。
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: ループの中にコードをいくつも入れられるのは知っていましたか?  「繰り返す」の中に「木の板を置く」 **と**
          「前進」を入れて、このパズルをクリアしましょう。
        MC_HOC_2017_05_Cole_b: Agentに川を渡らせて、あなたが通れる橋をかけさせます。
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: このループを何回実行しますか?  何回実行する ”べき” ですか?
        MC_HOC_2017_06_Cole_b: Agentが水を上を渡りきる橋をかけられるよう手助けしてください！
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: このループを何回実行しますか?  何回実行する ”べき” ですか?
        MC_HOC_2017_06_Cole_b: Agentが水を上を渡りきる橋をかけられるよう手助けしてください！
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Agentにさせることは、トロッコまでの道を通れるようにすることです。
        MC_HOC_2017_07_Cole_a: このパズルをクリアするために、「通り道を作る」関数のしくみを学んで、ツールボックスにある緑色の小さな「通り道を作る」ブロックを使って、その関数を必要なだけ呼び出します。
        MC_HOC_2017_07_Cole_b: この関数ブロックをツールボックスにある他のブロックと組み合わせて、パズルをクリアしてみましょう。
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Agentにさせることは、トロッコまでの道を通れるようにすることです。
        MC_HOC_2017_07_Cole_a: このパズルをクリアするために、「通り道を作る」関数のしくみを学んで、ツールボックスにある緑色の小さな「通り道を作る」ブロックを使って、その関数を必要なだけ呼び出します。
        MC_HOC_2017_07_Cole_b: この関数ブロックをツールボックスにある他のブロックと組み合わせて、パズルをクリアしてみましょう。
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: どこへ行ったらいいかわからない？点線を見つけられるかみてみて！
        MC_HOC_2017_10_Cole_a: 関数を使って、このパズルをもっと簡単にクリアしてみましょう!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: どこへ行ったらいいかわからない？点線を見つけられるかみてみて！
        MC_HOC_2017_10_Cole_a: 関数を使って、このパズルをもっと簡単にクリアしてみましょう!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_08_RY_b: このパズルをクリアするやり方はいくつもあります。  いろいろトライしてみましょう!
        MC_HOC_2017_08_RY_c: 溶岩を超える下の点線の道を試してみてください。
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_08_RY_b: このパズルをクリアするやり方はいくつもあります。  いろいろトライしてみましょう!
        MC_HOC_2017_08_RY_c: 溶岩を超える下の点線の道を試してみてください。
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Agent に橋を作らせて、アレックス (スティーブ) がマップのはじを歩き回れるようにしましょう。
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Agent に橋を作らせて、アレックス (スティーブ) がマップのはじを歩き回れるようにしましょう。
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: "`draw a line of squares` 関数が、正方形を12コ書くように編集しましょう。"
        NEW_Course_4_Artist_Functions_13_c: 星を書くには、144度で曲がってみて下さい。
      NEW Course 4 Artist Params 14:
        NEW_Course_4_Artist_Params_14_a: 何回やっても、だいじょうぶ。いろいろとパラメータをかえて ためしてね。
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          「くりかえし」をつかうと、こうやって家が作れる。ほかのブロックをつかって「くりかえし」のしくみをかくにんしてみよう。

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          じぶんの家を作ってみよう。![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) をおすと、いくつかのアイディアをあげます！
      course1_artist_loops_challenge2:
        harvey_tictactoe: "「ジャンプ」ブロックをつかうと、線をかかずにうごけるよ。"
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと、北西に線が引けるよ！
        courseA_artist_loops_challenge2_b: 1つめの家ができたら、ジャンプしてつぎの家を作ろう！
        courseA_artist_loops_challenge2_c: このもんだいをとくには、ループ内にたくさんのブロックがいるよ。
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: うまくうごかなかったところの「くりかえし」の数をかえてみよう！
        courseA_collector_loops_challenge1_c: どうくつの右はしには6つのジェムがあるけど、5回うごいてあつめるだけでいいよね。
          なんでかわかるかな？
      course1_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: 1つの ![](<https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png>) ブロックだけでクリアできるよ。
        courseA_collector_loops_challenge2_a: |-
          ジェムを手に入れた後、道をもどってから南に行くといいよ。

          \[] [0]
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_b: |-
          「南にうごく」「ジェムをとる」を「くりかえし」でループさせるところからはじめよう。

          <xml>
            <block type="maze_moveSouth"/><next>
            <block type="collector_collect"/></next>
            </xml>
        courseB_collector_loops_challenge1_a: |-
          北ブロックのパターンは、南ブロックのパターンと少し違うよ。

          <xml>
            <block type="collector_collect"/><next>
            <block type="maze_moveNorth"/></next>next>
            </xml>
        courseB_collector_loops_challenge1_c: "たてほうこうのジェムをぜんぶひろったら、東ブロックで2歩すすむ、をくりかえそう。\n\n<xml>\n
          \ <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n
          \ </xml>\n\nたった14ブロックでこれができます。 ヒントをクリックすると答えが見れます。 "
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: 遠くまで歩きすぎるとバクダンにぶつかっちゃうよ。
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_b: ブロックをならべかえて、まん中の道をすすんでください。
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_b: まずは西へいこう。
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: "「あつめる」コマンドをたくさん使うと、たくさんジェムをあつめることができます。"
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: "「あつめる」コマンドをたくさん使うと、たくさんジェムをあつめることができます。"
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_b: 必要（ひつよう）なだけ「前にすすむ」と「ピック トウモロコシ」をくりかえしてから、それぞれのコーナーで「右に回転」しましょう。
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_a: 繰り返しを使ってこのパズルをクリアしてください。
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_a: 繰り返しを使ってこのパズルをクリアしてください。
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_a: 繰り返しを使ってこのパズルをクリアしてください。
      courseB_maze_seq8:
        courseB_maze_seq8_b: このパズルの解き方は二通りあるよ。
      courseC_artist_prog2:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_maze_programming6:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
      courseD_maze_ramp6:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: このパズルの解き方は二通りあるよ。
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        courseE_artist_concept_challenge1_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        courseE_artist_concept_challenge1_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
      courseE_artist_functions1:
        courseE_artist_functions1_a: その四角形にはそれぞれ100ピクセルの側面があります。これは、2番目の四角形を描く前に175ピクセル前に動かす必要があるという事です。
        courseE_artist_functions1_b: メガネを作るために、重なり合う線を描いても大丈夫です。
      courseE_artist_functions2:
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_artist_functions2_2018:
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_artist_functions2_2019:
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_bee_functions6:
        courseE_bee_functions6_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseE_bee_functions7:
        courseE_bee_functions7_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        courseE_bee_functions7_b: |-
          緑の関数ブロックの中にコードを書くことを覚えておいてください。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
        courseF_artist_for_challenge1_d: 答えは先生に聞いてくださいね。
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
        courseF_artist_for_challenge1_d: 答えは先生に聞いてくださいね。
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
        courseF_artist_for_challenge1_d: 答えは先生に聞いてくださいね。
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
        courseF_artist_for_challenge2_d: 答えは先生に聞いてくださいね。
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
      courseF_artist_fwp6:
        courseF_artist_fwp6_a: 何回やっても、だいじょうぶ。いろいろとパラメータをかえて ためしてね。
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
        courseF_bee_for_challenge2_d: 答えは先生に聞いてくださいね。
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
        courseF_bee_for_challenge2_d: 答えは先生に聞いてくださいね。
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
        courseF_bee_for_challenge2_d: 答えは先生に聞いてくださいね。
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
