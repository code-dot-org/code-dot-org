---
ja-JP:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: ブロックをつかって「100ピクセル前にすすむ」ことを教えて。そうすればぼくが線を引いてあげるよ。
        2-3_Artist_1_new_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使（つか）ってみて。
      2-3 Artist 11:
        2-3_Artist_11_a: '角度が、むずかしい？8回まがって360度ですね。360 ÷ 8 は、いくつでしょうか？ '
      2-3 Artist 12:
        2-3_Artist_12_a: 円は 360 度で、アーティストはループごとに1度まがるから、360 回くりかえして みてください。
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: アーティストは、正しい方を向いていないです。せんを かく前に、アーティストの向きを かえてください。
      2-3 Artist 3new:
        2-3_Artist_3new_a: 100 - 70 は、いくつですか？それがぼうしの高さです！
        2-3_Artist_3new_b: アーティストは、正しい方を向いていないです。せんを かく前に、アーティストの向きを かえてください。
      2-3 Artist 4:
        2-3_Artist_4_a: 家を完成（かんせい）させるには、四角形をかいてください！
      2-3 Artist 6:
        2-3_Artist_6_a: '小さな角度を作るためには、正方形のときより大きくまがる必要（ひつよう）があります。   '
        2-3_Artist_6_b: 私はすでに右に向いているので、前に進（すす）むことから始（はじ）めるのがかんたんです。そして三角形を作るには左にまがります。
        2-3_Artist_6_c: 三角形の辺は、四角形の辺の長さと同じ、100ピクセルです！
      2-3 Artist 7:
        2-3_Artist_7_a: このパズルをとくいちばん早い方法（ほうほう）は、最初（さいしょ）の四角形をかいたあと、次の四角形をかくために、キャラクターを下向きにしておくことです。
      2-3 Artist 8:
        2-3_Artist_8_a: 200の長さを半分にする場合、ひとつひとつの四角形の幅（はば）は、何ピクセルにすれば良いでしょう？
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: このダイヤモンドは、アーティストから見るとただの四角形に見えます。
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: コントロールパネルの幅（はば）を10ピクセル"広く"したい時は、あなたが変（か）えた数に、10"くわえる"ことをわすれないでください。
        2-3_Artist_Debugging_10_b: |-
          "いろいろやってみることが大切です！"

          まずはひとつの数字を変（か）えてみることから始（はじ）めましょう。

          どの数字でどう動（うご）きましたか・

          もし思ったよりも変わりすぎたなら、"はじめから"をクリックすれば、最初（さいしょ）からやり直すことができます。
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'ヒント: それぞれのヒゲの長さは、75ピクセルです。'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: 回転（かいてん）の１つが、15度足りません。
        2-3_Artist_Debugging_3_b: もしプログラムがはやく動（うご）きすぎて何がおこっているのかわからなければ、スライダーを動かしてゆっくりにしてみてください。
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: もしアーティストがさいしょの線をかいた後に、後ろに動（うご）かしたり、とび下がるとどうなるでしょう？
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          わたしの形は何回くりかえしていましたか？

          その形は何回くりかえす"べき"でしょうか？

          プログラムのどこをかえればいいでしょうか？
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: アーティストはかきはじめる前に、左にもう60度回転（かいてん）しておく必要（ひつよう）があります！
        2-3_Artist_Debugging_9_b: 完全に回転するために、他のブロックを加える必要はありません。すでにある"左に向く"ブロックに60度を足すだけで良いのです！
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: その四角形にはそれぞれ100ピクセルの側面があります。これは、2番目の四角形を描く前に175ピクセル前に動かす必要があるという事です。
        2-3_Artist_Functions_1_b: メガネを作るために、重なり合う線を描いても大丈夫です。
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: その関数の中では、辺の数と長さだけでなく、アーティストが各辺の間で回転する角度も変えなければなりません。
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: さいしょにコードを実行して、追加する必要があるものを調べてみてください。
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: このデザインを完成させるためには、アーティストはそれぞれの四角形の間で120度回転する必要があります。
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: |-
          前回といたパズルのコードは次のとおりです。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">8</title>
                  <statement name="DO">
                    <block type="draw_colour" inline="true">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">turnRight</title>
                          <title name="VALUE" config="45,60,90,120,180">45</title>
                          <next>
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">50</title>
                              <next>
                                <block type="draw_turn_by_constant_dropdown">
                                  <title name="DIR">turnLeft</title>
                                  <title name="VALUE" config="45,60,90,120,180">90</title>
                                  <next>
                                    <block type="draw_move_by_constant">
                                      <title name="DIR">moveForward</title>
                                      <title name="VALUE">50</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
        2-3_Artist_Loops_New_11_b: 新たな回転は、ループの中のコードの**最後**におかなければなりません。
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: ダイヤモンドをかき始（はじ）める前に、アーティストは60度左に向く必要（ひつよう）があります。
        2-3_Artist Loops_New_12_b: アーティストが100ピクセル前にすすんだ後、するどくまがるためには、120度右に向く必要（ひつよう）があります。
        2-3_Artist Loops_New_12_c: アーティストがゆるやかにまがるときは、60度だけ右に向く必要（ひつよう）があります。
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: |-
          それぞれのダイヤモンドの最後（さいご）で、アーティストは次のダイヤモンドを書くために右を向いています。

          そのため、次に始めるときに「左にまがる」ブロックを追加（ついか）する必要（ひつよう）はありません。
        2-3_Artist_Loops_New_13_b: |-
          それぞれのダイヤモンドを作るには、アーティストはつぎのことをする必要（ひつよう）があります。

          -   うごく
          -   右にまがる120度
          -   うごく
          -   右にまがる60度

          そしてそれぜんぶをもう一度やります！
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: 書き始（はじ）める前にアーティストは右に45度まがる必要（ひつよう）があります。
        2-3_Artist_Loops_New_9_b: このVは正方形の半分です。正方形の半分をかくコードを考えてみよう。
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: ループの中に灰色（はいいろ）のブロックをすべて入れることを覚（おぼ）えておいてください。
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: 角度がわかりますか？12x30=360
        2-3_Artist_Nested_Loops_3_b: ループの中に灰色（はいいろ）のコードとまがるブロックをすべて入れることを覚（おぼ）えておいてください。
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: 角度がわかりますか？12x30=360
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: |-
          それぞれのループでどれだけ曲（ま）がればよいでしょう？

          360/10って何ですか？
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          正しい角度を知る手助（てだす）けが必要（ひつよう）ですか？

          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: ブロックのへらし方がむずかしいかな？赤い花をムラサキの花とまったく同じものとして考えてみよう！
        2-3_Bee_Conditionals_14_b: 赤い花がムラサキ色だったら、「くりかえし」ループを使（つか）ってコードをへらす方法（ほうほう）がわかったでしょうか？
        2-3_Bee_Conditionals_14_c: |-
          2つのかたまりに分けてみましょう。![](<https://images. code. org/895a52f3febff9edb83979f7861cf67a-image-1469640892331. png>)

          1.  花のミツをとるを3回

          2.  前にすすむを5回

          3.  花のミツかどうかしらべて、もしそうなら花のミツをとる

          4.  左にまがる

          5.  ハチミツをつくる

          6.  前にすすむを1回

          7.  ハチミツを2つつくる
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 注意（ちゅうい）：ムラサキの花だけ0か1つの花のミツがあって、プログラムを実行（じっこう）するたびにそれが変（か）わります。
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: 前にすすむときに毎回ループを使い、ほかのループで花のミツをとり、そしてほかのループでハチミツを作ると、コードがもっとも短（みじか）くなります。
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 注意（ちゅうい）：プログラムを実行（じっこう）するときに、ムラサキの花のミツは0から1つで変化（へんか）します！
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: まちがいのブロックを見つけて直した後、「くりかえし」ループを使ってもっとシンプルにできるパターンがわかりますか？
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: まちがいのブロックを見つけて直した後、「くりかえし」ループを使ってもっとシンプルにできるパターンがわかりますか？
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: ハチが おかしなことを しているところが ありますか？そのブロックをかえると、どうなりますか？
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: ループを関数といっしょ使う必要はありません。前にすすんで、関数を使って、そして前にすすんで、もう一度関数を使ってみてください。
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: ループを関数といっしょ使う必要はありません。前にすすんで、関数を使って、そして前にすすんで、もう一度関数を使ってみてください。
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        2-3_Bee_Functions_8_b: |-
          緑の関数ブロックの中にコードを書くことを覚えておいてください。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: くりかえしの中には４つのブロックが必要（ひつよう）です。
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: くりかえしの中には6ブロックが必要（ひつよう）です。
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: 2つの「くりかえし」ループが必要（ひつよう）になります。
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: ループの中には5つのブロックが必要（ひつよう）です。
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: 最初（さいしょ）にハチの向（む）きをかえよう。
        2-3_Bee_Loops_4A_b: プログラムを終わらせるために、ループの外に プログラムを たしてください。
        2-3_Bee_Loops_4A_c: まだループを見つけられない場合は、さいしょループをつかわずコーディングしてから、さいごに何を組み合わせると「くりかえし」のループにできるかをチェックしてみよう。
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: すぐに 「くりかえし」の中にブロックを入れられなかった場合は、それぞれの動きをコーディングしてパターンをさがすことからはじめましょう。
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: なにを「くりかえし」の中に入れればいいかわからない時は、ブロックを1つずつ、ふやしたりへらしたりして、いいパターンをさがしてみよう。
        2-3_Bee_Loops_6_b: できあがった時には「くりかえし」の中に6つのブロックがあるはずです。
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: 最初（さいしょ）にハチの向（む）きをかえよう。
        2-3_Bee_Loops_7_b: 'さいしょからかんぺきなループを作るのがむずかしい場合、ループをつかわずにコーディングしてから、パターンをさがしてください。  '
      2-3 Maze 1:
        2-3_Maze_1_a: "「前にすすむ」ブロックをつかうには、ブロックをドラッグして「実行（じっこう）した時」ブロックにくっつけましょう。"
      2-3 Maze 16:
        2-3_Maze_16_a: くりかえしのパターンがわかりにくいときは、さいしょにぜんぶコーディングしてみると、何がくりかえしできるのかがわかります。
        2-3_Maze_16_b: |-
          たくさんのブロックを「くりかえし」の中に入れるには、まず「くりかえし」をワークスペースの中にドラッグします。そしてその「くりかえし」の中に、たくさんのブロックの " さいしょのブロック " をドラッグします。

          それをすべて「実行（じっこう）した時」にくっつけ直してください。
      2-3 Maze 6:
        2-3_Maze_6_a: このパズルの解き方は二通りあるよ。
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: くりかえしのパターンがわかりにくいときは、さいしょにぜんぶコーディングしてみると、何がくりかえしできるのかがわかります。
        2-3_Maze_Loops_17_b: さいしょのコードをぜんぶ消しちゃった？「最初からやりなおす」をクリックすると、元にもどせるよ。
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: くりかえしのパターンがわかりにくいときは、さいしょにぜんぶコーディングしてみると、何がくりかえしできるのかがわかります。
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: お手上げの場合、さいしょにループなしでコードを書いて、パターンをさがしてみてください。
        2-3_Maze_Loops_19_b: ループの中にべつのループを入れると、ブロック数をへらせるよ。
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: ループをつかえる場所（ばしょ）を見つけるために、この迷路（めいろ）の階段（かいだん）パターンをさがしてください。
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: 階段（かいだん）パターンが見つからなかった場合は、通り道をゆびでなぞってみてください。
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: ループ内で、各線を引いた後にアーティストが前後にジャンプすることをたしかめてください。
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          花だんの周囲の長さは600ピクセルで、辺の2つが200ピクセルの長さの場合、短辺の長さの合計は以下になります。

          \*\* 600 - 200 - 200 = 200\*\*

          つまり、短辺の合計は200ピクセルになります。

          **200/2は何ですか？**
        4-5_Artist_3_b: "「くりかえし」ループをどこへ置けばいいかすぐにわからない場合は、ループを使わずに作り上げてからパターンをさがしてください。"
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          円は360度です！

          これが円を作り上げるためにこのコードをくりかえす必要がある回数です (1回につき1度回転させる)。
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          トライアンドエラーはすばらしい方法ですが、90度の角度を1/3に等分して問題をとくこともできます。

          **90 / 3 = \_\_\_\_\_**
      4-5 Artist 7:
        4-5_Artist_7_a: 'どの角度が一番小さい？アーティストはどちらの方向を向いて立っている？ '
      4-5 Artist 8:
        4-5_Artist_8_a: "長辺はそれぞれ240ピクセルです。つまり、2つの短辺は合計する必要があります。\n\n**800 - 240 -
          240 = 320**\n\n**320/2**は何ですか？ "
        4-5_Artist_8_b: |-
          この絵は2つの方法で作れます！

          -   長さ**120**、高さ**160**の2つの長方形を、重なり合う辺でかきます。

          -   長さ**240**、高さ**160**の長方形を1つかいてから、真ん中に線を追加します。
      4-5 Artist 9:
        4-5_Artist_9_a: '三角形が正三角形の場合、すべての辺とすべての角度は同じです。  '
        4-5_Artist_9_b: 同じサイズの3つの三角形をかく必要があるでしょう。それぞれの三角形をかいた後、新しい位置にジャンプすることをわすれないでください。
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: このパズルを完成させるには、外がわの三角形をかくだけです。
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: 円をかくには 360 度動く必要があります。1 回のループで 3 度動くとき、円全体をかくには何回ループすればよいでしょう。
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: 正方形の一辺は 20 ピクセルの長さですから、次の正方形を書く前に 20 ピクセル ジャンプします。
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: 4ブロックでひとつのセットです。３つのうちの、どれかが正しい答えです。
        4-5_Artist_Patterns_3_b: ぐちゃぐちゃになったら、「最初からやりなおす」で、やりなおしてください。
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: ひとつのダイヤモンドをかき終えたとき、アーティストは進むべき方向と、180度反対を向いています。
      4-5 Bee Conditionals 4:
        remember_quantum: |-
          **注意** このパズルは実行するたびに変わります。

          このパズルをクリアするには、条件ブロック (`もし` または `もし やること/でなければ`) を使います。
      4-5 Bee Conditionals 5:
        remember_quantum: |-
          **注意** このパズルは実行するたびに変わります。

          このパズルをクリアするには、条件ブロック (`もし` または `もし やること/でなければ`) を使います。
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: ワークスペース上のブロックだけを使ってこのパズルが解けるかな？ どんな順番で並べればいいかな？
        4-5 Bee Conditionals 6_b: このパズルをとくためには、花のミツが**0**つ以上あることを、**3**回以上調べていることをチェックしてください。
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: 何がまちがっているのかわからない場合は、まずは実行してみて、どこがおかしいのか調べてみてください。
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: まずはまっすぐ前にすすんで、数回左に曲がって、またまっすぐ前にすすむようにして、パズルを完成させてみましょう。
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          ループを使ってパズルをすぐにとく方法がわからない場合は、さいしょにどのようにループを使えばいいかを考えてから、パターンをさがしてください。

          コードを短くするために、何を「くりかえし」する必要がありますか？
      4-5 Maze 4:
        4-5_Maze_4_a: どこに「くりかえし」をおけばいいか わからなかったら、くりかえしを使わずにプログラムをかんがえて、パターンを見つけてください。
      4-5 Maze 5:
        4-5_Maze_5_a: 2ステップ以上「すすむ」必要があるときはいつでも、「くりかえし」ループを使ってみてください。
        4-5_Maze_5_b: あなたはパズルの中で1つ以上の「くりかえし」ループを使うことができます。
      4-5 Maze 6:
        4-5_Maze_6_a: 指で道をたどってみてください。それが最短の道でいいかな？
      4-5 Maze 7:
        4-5_Maze_7_a: |-
          **コードをできるだけ小さくしたい？**

          ブロックのパターンをさがしてください。くりかえしできるものがあれば、かわりにループをつけてみてください。
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: 360÷36＝？
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          三角形のループの後で まがる ことを忘れないでください。

          360度を6つの三角形でループします。

          **360÷6＝？**
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          このデザインを10回のくりかえしで、一周360度ぶん作ります。

          **360÷10＝?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          さいしょからある形を360度にわたって6回くりかえします。

          **360÷6＝？**
      4-5 While Loops 8:
        4-5_While_Loops_8_a: どちらも「以下の間くりかえし（while loop）」を使ってみてください。
      Course 4 Artist 11:
        Course_4_Artist_11_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        Course_4_Artist_11_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
      Course 4 Artist 12:
        Course_4_Artist_12_b: 'それぞれの形は、前のパズルとほとんど同じですが、6角形を少し大きくします。 '
        Course_4_Artist_12_c: "1.  始めの3回は60ピクセルの長さで、60 度まがります\n2.  次の 2 回は 80 ピクセルの長さで、120
          度まがります "
        Course_4_Artist_12_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat">
                      <title name="TIMES">6</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">3</title>
                          <statement name="DO">
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">60</title>
                              <next>
                                <block type="draw_turn_by_constant">
                                  <title name="DIR">turnRight</title>
                                  <title name="VALUE">60</title>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="draw_move_by_constant">
                                  <title name="DIR">moveForward</title>
                                  <title name="VALUE">80</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">120</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **答え**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: |-
          **一番小さな数字はいくつ？\
          一番大きな数字はいくつ？\
          いくつずつ増やせばいい？**

          これらの質問の答えを`まで`ブロックの3つの空欄に入れましょう。
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_c: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">14</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a square 20"></mutation>
                              <next>
                                <block type="jump_by_constant">
                                  <title name="DIR">jumpForward</title>
                                  <title name="VALUE">20</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">3</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="draw_turn_by_constant">
                              <title name="DIR">turnLeft</title>
                              <title name="VALUE">100</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            </xml>
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: どの関数を使えばいいか考えて、ひとつ決めてください。
        Course_4_Artist_Functions_challenge_b: "「カウントする」ブロックを置いて、その中に「 `counter` 回くりかえす」ブロックを入れ、入れ子のループにします。"
        Course_4_Artist_Functions_challenge_c: ひとつ正方形を書いたら、20ピクセル前にジャンプします。
        Course_4_Artist_Functions_challenge_d: 正方形を `counter` 回かいたら、左に90度まがります。
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">sides</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">4</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">length</title>
                          <value name="VALUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">sides</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">2</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnLeft</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">360</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCF 1:
        Course_4_SCF_1_e: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a line of hexagons"></mutation>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down/forward"></mutation>
                          <next>
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a line of hexagons"></mutation>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down/backward"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a hexagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/backward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">440</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a line of hexagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a hexagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">120</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/forward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">320</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: ステージ16で作った関数をおぼえていますか？
        Course_4_SCF_1a_c: "「もし左に道があるなら」「もし右にみちがあるなら」を使って、左右それぞれの花のミツをとります。花のミツは、いつも3つ先にあるはずです。花のミツの数は、`counter`
          の数と同じですね。"
        Course_4_SCF_1a_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
              <next>
                <block type="variables_set" inline="false" uservisible="false">
                  <title name="VAR">left</title>
                  <value name="VALUE">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false" uservisible="false">
                      <title name="VAR">right</title>
                      <value name="VALUE">
                        <block type="math_number" uservisible="false">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">21</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_if">
                          <title name="DIR">isPathLeft</title>
                          <statement name="DO">
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="get nectar">
                              <arg name="dir"></arg>
                              <arg name="counter"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">left</title>
                                </block>
                              </value>
                              <value name="ARG1">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_if">
                                          <title name="DIR">isPathRight</title>
                                          <statement name="DO">
                                            <block type="procedures_callnoreturn" inline="false">
                                              <mutation name="get nectar">
                                              <arg name="dir"></arg>
                                              <arg name="counter"></arg>
                                              </mutation>
                                              <value name="ARG0">
                                                <block type="variables_get">
                                                  <title name="VAR">right</title>
                                                </block>
                                              </value>
                                              <value name="ARG1">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
              <arg name="dir"></arg>
              <arg name="counter"></arg>
              </mutation>
              <title name="NAME">get nectar</title>
              <statement name="STACK">
                <block type="controls_if" inline="false">
                <mutation else="1"></mutation>
                  <value name="IF0">
                    <block type="logic_compare" inline="true" movable="false">
                      <title name="OP">EQ</title>
                      <value name="A">
                        <block type="parameters_get">
                          <title name="VAR">dir</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="variables_get">
                          <title name="VAR">left</title>
                        </block>
                      </value>
                    </block>
                  </value>
                  <statement name="DO0">
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                          <block type="maze_nectar"></block>
                          </statement>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="controls_if" inline="false">
                                <mutation else="1"></mutation>
                                  <value name="IF0">
                                    <block type="logic_compare" inline="true" movable="false">
                                      <title name="OP">EQ</title>
                                      <value name="A">
                                        <block type="parameters_get">
                                          <title name="VAR">dir</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">left</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <statement name="DO0">
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </statement>
                                  <statement name="ELSE">
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                    </block>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: ハチミツの数は全て同じですね。
        Course_4_SCF_1b_c: |-
          ハチが動く回数を決めるために、「カウントする」ブロックを使います。
          2から４まで１ずつカウントしてみて下さい。
        Course_4_SCF_1b_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="make honey up and over"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                        </block>
                                      </statement>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">make honey up and over</title>
              <statement name="STACK">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_honey">
                              <next>
                                <block type="maze_honey">
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveBackward</title>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveBackward</title>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 2:
        Course_4_SCF_2_e: |-
          **答え**

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down"></mutation>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw octagons">
                              <arg name="numOctagons"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="numOctagons"></arg>
              </mutation>
              <title name="NAME">draw octagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="parameters_get">
                      <title name="VAR">numOctagons</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw an octagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">136</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">shift down</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">45</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">96</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">408</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_f: |-
          **答え**

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="length"></arg>
              </mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">200</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_rgb" inline="false">
                          <value name="RED">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MINUS</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <value name="GREEN">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <value name="BLUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MULTIPLY</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                            </block>
                          </value>
                        </block>
                      </value>
                      <next>
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw an octagon">
                              <arg name="length"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">22.5</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCFL_1_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。 `counter`
          変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        Course_4_SCFL_1_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。 `counter`
          変数を上手く使って、ハチミツを作ろう。
        Course_4_SCFL_1_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_b: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCFL_1a_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">7</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">5</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnLeft</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="math_number">
                                          <title name="NUM">2</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_moveForward"/>
                                      </statement>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_b: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCFL_1b_c: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCFL_2_b: |-
          「カウントする」くりかえしの中では、さいしょに「 'counter`」回、花のミツをとります。次に、「`counter`× 3」回、ハチミツを作ります。そして、「 2 ^`counter\` 」回、花のミツをとります。
          （ ^ は、べき乗を計算します）
        Course_4_SCFL_2_c: "`counter` 変数を上手く使ってね。"
        Course_4_SCFL_2_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_moveForward">
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MULTIPLY</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">3</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnLeft</title>
                                              <next>
                                                <block type="maze_moveForward">
                                                  <next>
                                                    <block type="maze_moveForward">
                                                      <next>
                                                        <block type="maze_turn">
                                                          <title name="DIR">turnRight</title>
                                                          <next>
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">POWER</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">2</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">counter</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="maze_nectar"/>
                                                              </statement>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        Course_4_SCFL_3_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        Course_4_SCFL_3_c: 四角形を一つ書いたら、後ろにジャンプします。
        Course_4_SCFL_3_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: ペンの太さは１です。色は、赤が `counter`、みどりが 255 - `counter`、青が 255 、これらをまぜた色にします。
        Course_4_SCFL_4_b: 図形は四角形の組み合わせです。一番小さい四角形の一辺は、5ピクセル、一番大きい四角形は200ピクセル、5ピクセルずつ大きくしていきます。
        Course_4_SCFL_4_c: 四角形を一つ書いたら、左に15度まがり、つぎの四角形を書くようにします。
        Course_4_SCFL_4_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">90</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">15</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter` で、これらをまぜた色にしてください。
        Course_4_SCFL_6_b: 色を かえたら、 `counter`ピクセルの線を引き、右に80度まがります。
        Course_4_SCFL_6_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        Course_4_SCFL_6_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: |-
          「アルファ値は20」ブロックを、はじめに一度だけ実行するようにして下さい。
          色を かえる時は、赤が `counter`、みどりが 255 - `counter`、青が 255 、これらをまぜた色にします。
        Course_4_SCFL_7_b: "「カウントする」ブロックを2つ使います。一つは、5から200まで2ずつ、もう一つは、200から5まで2ずつ、として下さい。 "
        Course_4_SCFL_7_c: |-
          さいしょの くりかえしの中では、「太さは `counter`」とし、色を かえてから 5
           ピクセルの長さの線を引き、左に「360 ÷ `counter` 」度まがります。
          つぎの くりかえしの中では、「太さは `counter`」とし、色を かえてから 5 ピクセルの長さの線を引き、右に「360 ÷ `counter` 」度まがります。
        Course_4_SCFL_7_d: ２つのくりかえしの間では、左に 225 度まがります。
        Course_4_SCFL_7_e: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="alpha" inline="true" id="alpha">
                  <value name="VALUE">
                    <block type="math_number_dropdown">
                      <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_colour" inline="true" id="draw-color">
                              <value name="COLOUR">
                                <block type="colour_rgb" inline="false">
                                  <value name="RED">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="GREEN">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">MINUS</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">255</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <value name="BLUE">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">5</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnLeft</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">DIVIDE</title>
                                          <value name="A">
                                            <block type="math_number">
                                              <title name="NUM">360</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">225</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_width" inline="false">
                                  <value name="WIDTH">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_colour" inline="true" id="draw-color">
                                      <value name="COLOUR">
                                        <block type="colour_rgb" inline="false">
                                          <value name="RED">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                          <value name="GREEN">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MINUS</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">255</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <value name="BLUE">
                                            <block type="math_number">
                                              <title name="NUM">255</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 1:
        Course_4_SCV_1_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく 500
          ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        Course_4_SCV_1_b: 五角形を一つ書いたら、「左にまがる360 ÷ sides」で向きを変えよう。これを sides 回くりかえすと、五角形が五つ書けるはずだよ。
        Course_4_SCV_1_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        Course_4_SCV_1_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">500</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">0</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_random"/>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">sides</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="draw_move" inline="true">
                                                  <title name="DIR">moveForward</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_turn" inline="true">
                                                      <title name="DIR">turnLeft</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">DIVIDE</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">360</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </statement>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnRight</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 2:
        Course_4_SCV_2_b: "「くりかえす」ブロックを3回使います。くりかえす回数は sides 回で、全部同じです。 "
        Course_4_SCV_2_c: 十角形を一つ書いたら、左に「 360 ÷ sides 」度まがって、それから、次の十角形を書きます。
        Course_4_SCV_2_d: 十角形を10コ書いたら、「length ÷ sides」ピクセル ジャンプして、右に「360 ÷ sides」度まがります。
        Course_4_SCV_2_e: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">400</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_picker">
                                      <title name="COLOUR">#ff0000</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="variables_get">
                                                      <title name="VAR">length</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 3:
        Course_4_SCV_3_c: |-
          **答え**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">points</title>
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">points</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 4:
        Course_4_SCV_4_c: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCV_4_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">6</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">5</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_nectar"/>
                                  </statement>
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">honey</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_moveForward">
                                              <next>
                                                <block type="maze_turn">
                                                  <title name="DIR">turnRight</title>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">honey</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">ADD</title>
                                                          <value name="A">
                                                            <block type="variables_get">
                                                              <title name="VAR">honey</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="math_number">
                                                              <title name="NUM">1</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">nectar</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">MINUS</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">nectar</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">1</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 5:
        Course_4_SCV_5_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">nectar</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">nectar</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_nectar"/>
                                      </statement>
                                      <next>
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                          <next>
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">honey</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="maze_honey"/>
                                              </statement>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">honey</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">honey</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">nectar</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">nectar</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 6:
        Course_4_SCV_6_b: 出来るだけ、変数を使ってプログラムを書いて下さい。
        Course_4_SCV_6_c: ギザギザ線の色は、はじめは 赤 0、みどり 175、青 200を まぜた色です。次は 赤 100、みどり 50、青
          150を まぜた色です。
        Course_4_SCV_6_d: 'ジグザグの角度は、72度です。 '
        Course_4_SCV_6_f: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">red1</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">green1</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">175</title>
                            </block>
                          </value>
                          <next>
                            <block type="variables_set" inline="false">
                              <title name="VAR">blue1</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <next>
                                <block type="variables_set" inline="false">
                                  <title name="VAR">red2</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">100</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">green2</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">50</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="variables_set" inline="false">
                                          <title name="VAR">blue2</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">150</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="variables_set" inline="false">
                                              <title name="VAR">length</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">70</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">sides</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">5</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="controls_repeat_ext" inline="true">
                                                      <value name="TIMES">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">MULTIPLY</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">2</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <statement name="DO">
                                                        <block type="controls_repeat_ext" inline="true">
                                                          <value name="TIMES">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                          <statement name="DO">
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="variables_get">
                                                                  <title name="VAR">sides</title>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="draw_colour" inline="true" id="draw-color">
                                                                  <value name="COLOUR">
                                                                    <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue1</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                  <next>
                                                                    <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnLeft</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_colour" inline="true" id="draw-color">
                                                                      <value name="COLOUR">
                                                                      <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue2</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnRight</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                    </block>
                                                                  </next>
                                                                </block>
                                                              </statement>
                                                              <next>
                                                                <block type="draw_turn" inline="true">
                                                                  <title name="DIR">turnRight</title>
                                                                  <value name="VALUE">
                                                                    <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </next>
                                                            </block>
                                                          </statement>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">DIVIDE</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">180</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </statement>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      CourseD_Dance_Party_01:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   画面にダンサーが表示されていることをたしかめてください。

          _このレベルは4小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*
          \*他の曲を選んで再生してみましょう。
          \*ムースに似た別のものを選んでみましょう！
          \*ダンサーの名前を変更しましょう。
      CourseD_Dance_Party_02:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**
          _4小節後にダンサーを新しい動きに切り替える必要があります_

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_03:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*6小節後、ダンサーは4小節後とは違うダンスをする必要があります。

          _このレベルは12小節で終わります。_
      CourseD_Dance_Party_04:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*7小節目のどこかで、背景エフェクトを変更する必要があります。

          _このレベルは10小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"小節"</title></block></xml> イベントの下に新しいブロックをつないで、曲のあいだのいくつかのポイントで背景エフェクトを変更してみましょう。
      CourseD_Dance_Party_06:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも 2 人のダンサーがいなければなりません。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*3人めのダンサー（または好きなだけの人数！）を追加してください
          \*すべてのダンサーが、曲の中のそれぞれ違うポイントで、違う動きをするようにしてください。
      CourseD_Dance_Party_08:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*2人のダンサーのおおきさは100以外にしてください。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*その他のプロパティ（幅、高さ、回転など）を変えて実験してみましょう
      CourseD_Dance_Party_09:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも1人のダンサーの色合いを変更してください。

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_10:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   2人以上のダンサーのプロパティを変更しなければなりません。

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11_5:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11b:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*\`左矢印キーが押されたとき’のブロックを使って、左矢印キーを押したらロボットが踊るようにしましょう。

          _このレベルは8小節で終わります。_
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: "**海のランタン** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)
          が見えますか?海のランタンと条件をどう組み合わせれば、海底遺跡を通りぬけられるでしょうか?"
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: 赤色と青色のサンゴブロックが見えますか？それぞれ左と右に曲がる道しるべにしてサンゴ礁を進みます。
      Dance_Party_01:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   画面にダンサーが表示されていることをたしかめてください。

          _このレベルは4小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*
          \*他の曲を選んで再生してみましょう。
          \*ムースに似た別のものを選んでみましょう！
          \*ダンサーの名前を変更しましょう。
      Dance_Party_02:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**
          _4小節後にダンサーを新しい動きに切り替える必要があります_

          _このレベルは8小節で終わります。_
      Dance_Party_03:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*6小節後、ダンサーは4小節後とは違うダンスをする必要があります。

          _このレベルは12小節で終わります。_
      Dance_Party_04:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*7小節目のどこかで、背景エフェクトを変更する必要があります。

          _このレベルは10小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"小節"</title></block></xml> イベントの下に新しいブロックをつないで、曲のあいだのいくつかのポイントで背景エフェクトを変更してみましょう。
      Dance_Party_06:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも 2 人のダンサーがいなければなりません。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*3人めのダンサー（または好きなだけの人数！）を追加してください
          \*すべてのダンサーが、曲の中のそれぞれ違うポイントで、違う動きをするようにしてください。
      Dance_Party_08:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*2人のダンサーのおおきさは100以外にしてください。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*その他のプロパティ（幅、高さ、回転など）を変えて実験してみましょう
      Dance_Party_09:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも1人のダンサーの色合いを変更してください。

          _このレベルは8小節で終わります。_
      Dance_Party_10:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   2人以上のダンサーのプロパティを変更しなければなりません。

          _このレベルは8小節で終わります。_
      Dance_Party_11:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      Dance_Party_11_5:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      Dance_Party_11b:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*\`左矢印キーが押されたとき’のブロックを使って、左矢印キーを押したらロボットが踊るようにしましょう。

          _このレベルは8小節で終わります。_
      Function intro Ryan:
        Function_intro_Ryan_b: 関数を正しく呼び出すと、あなたはこの道を行くことになります...
        Function_intro_Ryan_a: 関数はプログラム内で繰り返し呼び出すことができます!  関数を 2 回呼び出して、このパズルをクリアしましょう。
      Function intro Ryan_2019:
        Function_intro_Ryan_b: 関数を正しく呼び出すと、あなたはこの道を行くことになります...
        Function_intro_Ryan_a: 関数はプログラム内で繰り返し呼び出すことができます!  関数を 2 回呼び出して、このパズルをクリアしましょう。
      HOC 2018 Level_10:
        voyage_aquatic_10a: "**海のランタン** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)
          が見えますか?海のランタンと条件をどう組み合わせれば、海底遺跡を通りぬけられるでしょうか?"
      HOC 2018 Level_9b:
        voyage_aquatic_9a: 赤色と青色のサンゴブロックが見えますか？それぞれ左と右に曲がる道しるべにしてサンゴ礁を進みます。
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: ツールボックスの「前進」を 1 つだけワークスペースにドラッグして、「実行した時」ブロックの下に置きましょう。
        MC_HOC_2017_01_RETRY_b: Agent のコードを実行するには、「実行」をクリックする必要があります。
        MC_HOC_2017_01_RETRY_c: Agent がすべてのコードを実行したら、矢印キーでプレイヤーを動かせるようになります!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: ツールボックスの「前進」を 1 つだけワークスペースにドラッグして、「実行した時」ブロックの下に置きましょう。
        MC_HOC_2017_01_RETRY_b: Agent のコードを実行するには、「実行」をクリックする必要があります。
        MC_HOC_2017_01_RETRY_c: Agent がすべてのコードを実行したら、矢印キーでプレイヤーを動かせるようになります!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Agent を前に 2 マス進ませて重量感知板の上に立たせましょう。  それによってドアが開き、プレイヤーが通れるようになります。
        MC_HOC_2017_02_Cole_b: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_02_Cole_c: Agent がドアを開けたら、矢印キーでプレイヤーを外に出しましょう!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Agent を前に 2 マス進ませて重量感知板の上に立たせましょう。  それによってドアが開き、プレイヤーが通れるようになります。
        MC_HOC_2017_02_Cole_b: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_02_Cole_c: Agent がドアを開けたら、矢印キーでプレイヤーを外に出しましょう!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Agent が重量感知板の上に立つと、矢印キーでプレイヤーをコンパスに向かって動かせるようになります!
        MC_HOC_2017_03_Cole_b: コードが少し長く感じますか?  「繰り返す」ループを使ってコードをもっと短くできないか調べてみましょう!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Agent が重量感知板の上に立つと、矢印キーでプレイヤーをコンパスに向かって動かせるようになります!
        MC_HOC_2017_03_Cole_b: コードが少し長く感じますか?  「繰り返す」ループを使ってコードをもっと短くできないか調べてみましょう!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: Agent の向きを変えるには「右を向く」ブロックを使います
        MC_HOC_2017_04POINT5_RYAN_a: Agent を 1 つ目の重量感知板に立たせれば、アレックス (スティーブ) が斧にたどり着けます。
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: Agent の向きを変えるには「右を向く」ブロックを使います
        MC_HOC_2017_04POINT5_RYAN_a: Agent を 1 つ目の重量感知板に立たせれば、アレックス (スティーブ) が斧にたどり着けます。
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent は 7 回 "前進する" 必要があります。こうするためには、「繰り返し」ループをどのように使えばよいでしょうか?
        MC_HOC_2017_04_Cole_c: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_04_Cole_b: Agent が重量感知板の上に立つとドアが開き、プレイヤーが通れるようになります。
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent は 7 回 "前進する" 必要があります。こうするためには、「繰り返し」ループをどのように使えばよいでしょうか?
        MC_HOC_2017_04_Cole_c: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_04_Cole_b: Agent が重量感知板の上に立つとドアが開き、プレイヤーが通れるようになります。
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: ループの中にコードをいくつも入れられるのは知っていましたか?  「繰り返す」の中に「木の板を置く」 **と**
          「前進」を入れて、このパズルをクリアしましょう。
        MC_HOC_2017_05_Cole_b: Agentに川を渡らせて、あなたが通れる橋をかけさせます。
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: ループの中にコードをいくつも入れられるのは知っていましたか?  「繰り返す」の中に「木の板を置く」 **と**
          「前進」を入れて、このパズルをクリアしましょう。
        MC_HOC_2017_05_Cole_b: Agentに川を渡らせて、あなたが通れる橋をかけさせます。
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: このループを何回実行しますか?  何回実行する ”べき” ですか?
        MC_HOC_2017_06_Cole_b: Agentが水を上を渡りきる橋をかけられるよう手助けしてください！
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: このループを何回実行しますか?  何回実行する ”べき” ですか?
        MC_HOC_2017_06_Cole_b: Agentが水を上を渡りきる橋をかけられるよう手助けしてください！
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Agentにさせることは、トロッコまでの道を通れるようにすることです。
        MC_HOC_2017_07_Cole_a: このパズルをクリアするために、「通り道を作る」関数のしくみを学んで、ツールボックスにある緑色の小さな「通り道を作る」ブロックを使って、その関数を必要なだけ呼び出します。
        MC_HOC_2017_07_Cole_b: この関数ブロックをツールボックスにある他のブロックと組み合わせて、パズルをクリアしてみましょう。
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Agentにさせることは、トロッコまでの道を通れるようにすることです。
        MC_HOC_2017_07_Cole_a: このパズルをクリアするために、「通り道を作る」関数のしくみを学んで、ツールボックスにある緑色の小さな「通り道を作る」ブロックを使って、その関数を必要なだけ呼び出します。
        MC_HOC_2017_07_Cole_b: この関数ブロックをツールボックスにある他のブロックと組み合わせて、パズルをクリアしてみましょう。
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: どこへ行ったらいいかわからない？点線を見つけられるかみてみて！
        MC_HOC_2017_10_Cole_a: 関数を使って、このパズルをもっと簡単にクリアしてみましょう!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: どこへ行ったらいいかわからない？点線を見つけられるかみてみて！
        MC_HOC_2017_10_Cole_a: 関数を使って、このパズルをもっと簡単にクリアしてみましょう!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_08_RY_b: このパズルをクリアするやり方はいくつもあります。  いろいろトライしてみましょう!
        MC_HOC_2017_08_RY_c: 溶岩を超える下の点線の道を試してみてください。
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_08_RY_b: このパズルをクリアするやり方はいくつもあります。  いろいろトライしてみましょう!
        MC_HOC_2017_08_RY_c: 溶岩を超える下の点線の道を試してみてください。
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Agent に橋を作らせて、アレックス (スティーブ) がマップのはじを歩き回れるようにしましょう。
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Agent に橋を作らせて、アレックス (スティーブ) がマップのはじを歩き回れるようにしましょう。
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: "`draw a line of squares` 関数が、正方形を12コ書くように編集しましょう。"
        NEW_Course_4_Artist_Functions_13_c: 星を書くには、144度で曲がってみて下さい。
      NEW Course 4 Artist Params 14:
        NEW_Course_4_Artist_Params_14_a: 何回やっても、だいじょうぶ。いろいろとパラメータをかえて ためしてね。
      NEW Course 4 Bee For Loops 10a:
        NEW_Course_4_Bee_For_Loops_10a_a: 花までの距離とミツの量の関係はわかるかな？
        NEW_Course_4_Bee_For_Loops_10a_b: くり返しは2つ使って、片方には計算ブロックを使います。
      NEW Course 4 Bee For Loops 7:
        NEW_Course_4_Bee_For_Loops_7_a: |-
          変数を使って計算しよう。

          花までの距離とミツの量の関係はどうなっているかな？
      Overworld Avoid Monsters:
        mc_8_a: やり方はいろいろあるけど、最短はどれかな？
        mc_8_b: "`くりかえし`を使えば、プログラムをシンプルにすることができます。"
        mc_8_c: 画面の上にある家の玄関までたどり着こう。
      Overworld Avoid Monsters_2019:
        mc_8_a: やり方はいろいろあるけど、最短はどれかな？
        mc_8_b: "`くりかえし`を使えば、プログラムをシンプルにすることができます。"
        mc_8_c: 画面の上にある家の玄関までたどり着こう。
      Overworld Chop Tree:
        mc_2_a: 木の前に行くには、`前に すすむ` が2つ必要です。
        mc_2_b: "`ブロック破壊（はかい）` で 目の前にある木を きります。"
      Overworld Chop Tree_2019:
        mc_2_a: 木の前に行くには、`前に すすむ` が2つ必要です。
        mc_2_b: "`ブロック破壊（はかい）` で 目の前にある木を きります。"
      Overworld Chop Trees:
        mc_4_a: 気を切る方法はいくつかありますが、どの道が最短かな？
        mc_4_b: "`ブロック破壊（はかい）` で 目の前にある木を きります。"
      Overworld Chop Trees_2019:
        mc_4_a: 気を切る方法はいくつかありますが、どの道が最短かな？
        mc_4_b: "`ブロック破壊（はかい）` で 目の前にある木を きります。"
      Overworld House Frame Chosen:
        mc_6_a: "`置く`ブロックの矢印を押すと、他の材料を選べるよ。"
        mc_6_b: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
        mc_6_c: "`くりかえし`の中には、１つ以上のブロックを 入れることが できます。"
      Overworld House Frame Chosen_2019:
        mc_6_a: "`置く`ブロックの矢印を押すと、他の材料を選べるよ。"
        mc_6_b: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
        mc_6_c: "`くりかえし`の中には、１つ以上のブロックを 入れることが できます。"
      Overworld Move to Sheep:
        mc_1_a: "`前に すすむ`は、ツールボックスの一番上にあります。"
        mc_1_b: "`実行（じっこう）した時` の下に もうひとつ`前に すすむ`を引っ付けよう。"
      Overworld Move to Sheep_2019:
        mc_1_a: "`前に すすむ`は、ツールボックスの一番上にあります。"
        mc_1_b: "`実行（じっこう）した時` の下に もうひとつ`前に すすむ`を引っ付けよう。"
      Overworld Place Wall:
        mc_5_a: "`置く` を行ってから `前に すすむ` を行ってください。"
        mc_5_b: "`くりかえし`の中に入れるブロックは、1つじゃなくて2つだよ。"
        mc_5_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      Overworld Place Wall_2019:
        mc_5_a: "`置く` を行ってから `前に すすむ` を行ってください。"
        mc_5_b: "`くりかえし`の中に入れるブロックは、1つじゃなくて2つだよ。"
        mc_5_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      Overworld Plant Crops:
        mc_7_a: "`作物を植える` を使て、今立っている場所に作物を植えよう。"
        mc_7_b: 水の両側の土が茶色くなっているところに 作物を植えよう。
        mc_7_c: "`くりかえし`の中には、１つ以上のブロックを 入れることが できます。"
      Overworld Plant Crops_2019:
        mc_7_a: "`作物を植える` を使て、今立っている場所に作物を植えよう。"
        mc_7_b: 水の両側の土が茶色くなっているところに 作物を植えよう。
        mc_7_c: "`くりかえし`の中には、１つ以上のブロックを 入れることが できます。"
      Overworld Powered Minecart:
        mc_13_a: "`置く レール`で 今立っている場所に レールを置くことができます。"
        mc_13_b: "`くりかえし`を使って、プログラムを短くしよう。"
      Overworld Powered Minecart_2019:
        mc_13_a: "`置く レール`で 今立っている場所に レールを置くことができます。"
        mc_13_b: "`くりかえし`を使って、プログラムを短くしよう。"
      Overworld Shear Sheep:
        mc_3_a: "`刈る`で 目の前の羊の毛を刈ることができます。目の前に羊いる？"
        mc_3_b: "`まがる`で、つぎの羊のほうを向きましょう。"
        mc_3_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      Overworld Shear Sheep_2019:
        mc_3_a: "`刈る`で 目の前の羊の毛を刈ることができます。目の前に羊いる？"
        mc_3_b: "`まがる`で、つぎの羊のほうを向きましょう。"
        mc_3_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      Underground Avoiding Lava:
        mc_11_a: 溶岩をチェックして、埋めるプログラムはできてます。あとは、前に進むブロックを追加するだけです。
        mc_11_b: "`前に すすむ` を入れるのは、 `もし` 文の中、それとも、後ろ？"
      Underground Avoiding Lava_2019:
        mc_11_a: 溶岩をチェックして、埋めるプログラムはできてます。あとは、前に進むブロックを追加するだけです。
        mc_11_b: "`前に すすむ` を入れるのは、 `もし` 文の中、それとも、後ろ？"
      Underground If Statements:
        mc_12_a: 赤い点々のあるブロックに レッドストーンはあります。
        mc_12_b: "`くりかえし`を使って、プログラムを短くできるかな？"
        mc_12_c: "`もし`で溶岩があるか調べて、丸石を置こう。 "
      Underground If Statements_2019:
        mc_12_a: 赤い点々のあるブロックに レッドストーンはあります。
        mc_12_b: "`くりかえし`を使って、プログラムを短くできるかな？"
        mc_12_c: "`もし`で溶岩があるか調べて、丸石を置こう。 "
      Underground Iron:
        mc_10_a: 松明の後ろに鉄があります。どうやって行く？
        mc_10_b: 溶岩の向こう側に行くには、`置く 丸石 その前に`を使って橋を作り、その上をわたって行きます。
        mc_10_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      Underground Iron_2019:
        mc_10_a: 松明の後ろに鉄があります。どうやって行く？
        mc_10_b: 溶岩の向こう側に行くには、`置く 丸石 その前に`を使って橋を作り、その上をわたって行きます。
        mc_10_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      Underground Mining Coal:
        mc_9_a: 向いている方向は正しいかな？ `ブロック破壊（はかい）`で目の前のブロックから発掘します。
        mc_9_b: 壁に小さな黒い点があるのが、石炭です！ `ブロック破壊（はかい）`を使って石炭を掘りましよう。
        mc_9_c: "`松明を置く` を使て、今立っている場所に松明を置きましょう。"
      Underground Mining Coal_2019:
        mc_9_a: 向いている方向は正しいかな？ `ブロック破壊（はかい）`で目の前のブロックから発掘します。
        mc_9_b: 壁に小さな黒い点があるのが、石炭です！ `ブロック破壊（はかい）`を使って石炭を掘りましよう。
        mc_9_c: "`松明を置く` を使て、今立っている場所に松明を置きましょう。"
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          「くりかえし」をつかうと、こうやって家が作れる。ほかのブロックをつかって「くりかえし」のしくみをかくにんしてみよう。

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          じぶんの家を作ってみよう。![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) をおすと、いくつかのアイディアをあげます！
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: "「ジャンプ」ブロックをつかうと、線をかかずに うごけるよ。"
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと、北西に線が引けるよ！
        courseA_artist_loops_challenge2_b: 1つめの家ができたら、ジャンプしてつぎの家を作ろう！
        courseA_artist_loops_challenge2_c: このもんだいをとくには、ループ内にたくさんのブロックがいるよ。
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: うまくうごかなかったところの「くりかえし」の数をかえてみよう！
        courseA_collector_loops_challenge1_b: １かいだけ やるときは、くりかえしは いりません。
        courseA_collector_loops_challenge1_c: どうくつの右はしには6つのジェムがあるけど、5回うごいてあつめるだけでいいよね。
          なんでかわかるかな？
      course1_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: 1つの ![](<https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png>) ブロックだけでクリアできるよ。
        courseA_collector_loops_challenge2_a: |-
          ジェムを手に入れた後、道をもどってから南に行くといいよ。

          \[] [0]
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_b: |-
          「南にうごく」「ジェムをとる」を「くりかえし」でループさせるところからはじめよう。

          <xml>
            <block type="maze_moveSouth"/><next>
            <block type="collector_collect"/></next>
            </xml>
        courseB_collector_loops_challenge1_a: |-
          北ブロックのパターンは、南ブロックのパターンと 少しちがうよ。

          <xml>
            <block type="collector_collect"/><next>
            <block type="maze_moveNorth"/></next>next>
            </xml>
        courseB_collector_loops_challenge1_c: "たてほうこうのジェムをぜんぶひろったら、東ブロックで2歩すすむ、をくりかえそう。\n\n<xml>\n
          \ <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n
          \ </xml>\n\nたった14ブロックでこれができます。 ヒントをクリックすると答えが見れます。 "
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: 遠くまで歩きすぎると バクダンに ぶつかっちゃうよ。
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_b: ブロックをならべかえて、まん中の道をすすんでください。
      course1_maze_seq_challenge1:
        courseA_maze_seq_challenge2_a: なんこ いけば いいか、ゆびを つかって かぞえて みよう！
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_b: まずは西へいこう。
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml> で とりをクリックしたとき、ペンギンを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_b: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml> で ペンギンをクリックしたとき、おばけを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_c: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml> で おばけをクリックしたとき、かいじゅうを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_d: "モンスターをクリックしたとき、スピッフ ロボットを表示させる!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_e: "一番さいごは、ロボットをクリックすると、まほうつかいが見つかります！\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n
          \ </block></xml>"
      course1_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml> で とりをしゃべらせることができます。"
        courseA_playlab_events_challenge2_b: "おとをならすには、<xml>\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block
          type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n
          \         </block>\n        </next>\n  </block></xml> をつかいます。"
        courseA_playlab_events_challenge2_c: |-
          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml> をつかえば、かおをかえることができます。
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: 入れ子のループを作って、4つの八角形をかくことから始めましょう。
          八角形は45度回転してかきます。八角形をかいたら、ジャンプして、90度回転しましょう。
        courseD_artist_nestedLoops_challenge1_b: 入れ子のループの中に三角形をかくコードを追加しましょう。そして三角形に120度回転するコードを追加しましょう。
        courseD_artist_nestedLoops_challenge1_c: |-
          以下の入れ子のループを使ってみましょう。

          -   8回のくりかえし
              -   八角形をかく
              -   三角形をかく
              -   50ピクセル先にジャンプ
              -   90度まがる
      course2_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: 正八角形をかくには、45度まがるを８つ使います。
        courseD_artist_nestedLoops_challenge2_b: 正方形をかくには、90度まがるを4つ使います。
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: '長方形のはばは200ピクセル、高さは100ピクセルです。 '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "コマンドを「くりかえし」ブロックの中におくと、コマンドをくりかえし実行（じっこう）することができます。ためしてみよう！\n\n<xml>\n
          \ \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          木にぶつかることなくすべての花とハチのすを通る道を見つけることができるかな？ うずまきをイメージしてみて。

          ヒント：左に1回もまがらずにできるよ。
        courseD_bee_conditionals_challenge1_b: 花がある場所、ハチの巣がある場所、何もないところがあるから、`もし やること/でなければ`をくりかえして、その場所が
          どうなっているのか 調べてね。
      course2_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          「花のミツが0より多い間」の中のコードは、「もし花で」ブロックと同じように、花にミツがある場合にのみ実行（じっこう）されます。ちがいは、花のミツがなくなるまで中のコードをくりかえし実行されることです。このパターンをためしてください：

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">></title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: オリジナルのコードはうまくいくでしょう・・・それぞれの山にジェムが1つだけなら！
        courseC_maze_loops_challenge2_b: くりかえしのなかに `あつめる`を 入れるのを わすれないでね。
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: "「あつめる」コマンドをたくさん使うと、たくさんジェムをあつめることができます。"
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: "「あつめる」コマンドをたくさん使うと、たくさんジェムをあつめることができます。"
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: "「くりかえし」をつかおうね！"
        courseC_harvester_loops_challenge1_b: 必要（ひつよう）なだけ「前にすすむ」と「ピック トウモロコシ」をくりかえしてから、それぞれのコーナーで「右に回転」しましょう。
        courseC_harvester_loops_challenge1_c: |-
          さいしょの4つのトウモロコシをあつめる一番いい方法（ほうほう）は、「くりかえし」ブロックの中に、さらに「くりかえし」ブロックをつかうことです。ほかのもんだいにも同じパターンがつかえるよ。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">2</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></next></block></xml>
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: ゆっくり考えて！ジグザグに 行く ほうほう や まわりから あつめていく
          ほうほう など、このパズルを クリアする ほうほうは ほかにも たくさん あります。
        courseC_harvester_loops_challenge2_b: "`前にすすむ` と `ピック レタス` をひつような回数くりかえして、角まで来たら
          まがります。"
        courseC_harvester_loops_challenge2_c: |-
          ジグザグに行くやり方は、赤い線の行き方を ２回 くりかせば 20ブロックで パズルを クリアできます。

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: まわりから あつめていく ほうほう だと、18ブロックですみます！
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: 3つのピースでできた道として考えてみましょう。それぞれのピースはくりかえしできるパターンをもってます。
        courseC_maze_loops_challenge1_b: それぞれの「くりかえし」ブロックの間では、「左にまがる」または「右にまがる」をつかって次のくりかえしのためのじゅんびが必要（ひつよう）です。
        courseC_maze_loops_challenge1_c: |-
          ここまで来たら、「左にまがって」、次に何回か「前にすすんで」ください。あきらめないで！

          ![](<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png>)
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: 後ろに行くときは、まがる方向（ほうこう）に気をつけよう。
        courseC_maze_programming_challenge2_b: 最短（さいたん）ルートは5ブロックでクリアできます。「くりかえし」ブロックを使います！
      course3_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: 関数（かんすう）をよび出すと同じデザインをかけます。関数の中は自由に変えることができますし、よび出した後の動きも自由に変えることができます！
      course3_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          `ジャンプ` で ゾンビアーティストを いつでも 好きな場所に ジャンプさせることができます。右方向の数字 と 下方向の数字を 指定して使用します。数字は、ゾンビアーティストが いる場所から 数えるのではなく、つねに左上の角から 数えます。

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      course3_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: 灰色の部分のプログラムはどんな風に動くかな？ハチが後ろにすすむ理由を考えてみて。花の上と通ったらハチはいくつミツを集めますか？
        courseD_bee_debugging_challenge1_b: 同じパターンでハチをバックさせてみよう。ハチの巣の上を通た時、ハチミツはいくつ必要？
        courseD_bee_debugging_challenge1_c: |-
          ハチが下の段のはしっこまで行ったら、次のコマンドをくり返そう。

          -   くりかえし 2 回
              -   前に すすむ
              -   ハチミツを 3回 つくる
          -   後ろに すすむ
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        courseE_bee_functions_challenge1_b: 緑の関数の中に コーディングしてみよう。
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        courseE_bee_functions_challenge1_b: 緑の関数の中に コーディングしてみよう。
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_b: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                  <mutation name="move and check"/>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation/>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_ifElseFlower">
                  <title name="LOC">atFlower</title>
                  <statement name="DO">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">nectarRemaining</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_nectar"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
              <mutation/>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                      <mutation name="check nectar or honey"/>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </xml>
      course3_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "まずは前にある2つの山から、2つジェムを集めてみよう。\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nこれらのブロックを使ってみましょう。\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "次に道にそって宝石を集めます。\n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>)\nさっき作ったプログラムに 次のブロックを加えます。\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "最後に他の道にある たからものを 集めます。さらに 次のブロックを
          加えます。\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n
          \             </block>\n      <block type=\"controls_repeat\">\n        <title
          name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n
          \       </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          これが、答え。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">2</title>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveForward</title>
                              <next>
                                <block type="controls_repeat">
                                  <title name="TIMES">2</title>
                                  <statement name="DO">
                                    <block type="collector_collect"/>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: このパズルでは「ステップ」ボタンが役立ちます。
        courseD_farmer_condLoops_challenge1_b: カボチャがあれば、`ピック カボチャ`します。カボチャじゃなければ、何をしますか？
      course3_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: "「？」のついた場所では、作物の数がちがいます。「以下の間くりかえし（while
          loop）」を使いましょう。"
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: 右から行くか、左から行くかは、君しだい！
        courseC_maze_debugging_challenge1_b: 通り道は長方形です！ 毎回同じように まがる必要があります。
        courseC_maze_debugging_challenge1_c: うまくいかなかった場合は「最初からやりなおす」か、すべてのコードを消して、やりなおして見ましょう。
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: 回りすぎない方法の1つは、「まがる」ブロックの間にもっと「前にすすむ」ブロックを追加することです。
        courseC_maze_debugging_challenge2_b: うまくいかなかった場合は、最初からやりなおすか、すべてのコードを消して、やり直して見ましょう。
        courseC_maze_debugging_challenge2_c: |-
          「前にすすむ」を使ってたどり、4回だけまがる、2つのクリア方法があります。「くりかえし」ブロックを使うと、もっとたくさんの方法があります。

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      course3_playLab_challenge1:
        courseE_playLab_challenge1_a: |-
          勝った時にやること

          -   きょうりゅうをけす
          -   リスの動きを止める
          -   リスときしをうれいし顔にする
          -   はいけいを変える
          -   きしに感謝のことばをしゃべらせる
          -   すべてのキャラをけして、タイトル画面で"You Win!" を出す
        courseE_playLab_challenge1_b: |-
          負けた時にやること

          -   きしをけす
          -   リスをかなしい顔にする
          -   きょうりゅうに何か言わせる
          -   はいけいをかえる
          -   すべてのキャラをけして、タイトル画面で"Game Over" を出す
      course4_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: いつでも どこでも 風車が かけるよう、関数をつくろう。
        courseE_artist_concept_challenge2_b: |-
          次の風車をかく前に 下のコマンドを使ってキャンパスを他の場所に移動しよう。

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      course4_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          `ジャンプ` で ゾンビアーティストを いつでも 好きな場所に ジャンプさせることができます。右方向の数字 と 下方向の数字を 指定して使用します。数字は、ゾンビアーティストが いる場所から 数えるのではなく、つねに左上の角から 数えます。

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      course4_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: 上下の移動は10ピクセルで、左右の移動には、変数 `length`を使おう。
        courseF_artist_variables_challenge1_b: 変数`length`は、くり返しのなかで 10ピクセル増やすを２回行います。
        courseF_artist_variables_challenge1_c: 使うのは、左に曲がるが2つ、右に曲がるが2つ、前に進むが4つです。
        courseF_artist_variables_challenge1_d: |-
          くり返しは１つです。変数を使うことをのぞけば、ジグザグに行くのと同じです。

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          わからなくなったら、このパターンをかいて、水平方向の線の長さを変えるには、どこに変数を使えばいいのか考えよう。
        courseF_artist_variables_challenge1_e: |-
          これがジグザグに行くプログラム。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: 1つまたはいくつかのコマンドを`くりかえし`の中に入れれることを思い出して。`くりかえし`を`くりかえし`することができます。
        courseD_bee_nested_loops_challenge2_b: 4つの宝石を全部集めるには、まず、外側の通路に出ます。左または右に曲がって、最初の宝物から次の宝物に行く
          入れ子の中身を作ります。それを何回か くり返せば、どうくつを_1周_することができます。
        courseD_bee_nested_loops_challenge2_c: 1つの `あつめる`と2つの曲がるで、すべての宝物を集めることができます。
        courseD_bee_nested_loops_challenge2_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          キャラに何か言わせるために つぎのブロックを追加しましょう。

          <xml><block type="studio_saySpriteParamsTime" inline="true">
                <value name="SPRITE">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                                <value name="TEXT">
                            <block type="text">
                              <title name="TEXT">Knock knock.</title>
                            </block>
                          </value>
                <value name="TIME">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                </block></xml>
      courseA_artist_loops2:
        courseA_artist_loops2_a: どうやって せんを かくか わからない？ <xml><block type="when_run"/></xml>
          ブロックに ブロックをくっつけて、ためしてみてください。
        courseA_artist_loops2_b: この <xml><block type="simple_move_right"/></xml> ブロックを
          つかって、パズルをクリアします。
      courseA_artist_loops2_2018:
        courseA_artist_loops2_a: どうやって せんを かくか わからない？ <xml><block type="when_run"/></xml>
          ブロックに ブロックをくっつけて、ためしてみてください。
        courseA_artist_loops2_b: この <xml><block type="simple_move_right"/></xml> ブロックを
          つかって、パズルをクリアします。
      courseA_artist_loops2_2019:
        courseA_artist_loops2_a: どうやって せんを かくか わからない？ <xml><block type="when_run"/></xml>
          ブロックに ブロックをくっつけて、ためしてみてください。
        courseA_artist_loops2_b: この <xml><block type="simple_move_right"/></xml> ブロックを
          つかって、パズルをクリアします。
      courseA_artist_loops3:
        courseA_artist_loops3_a: ゆびで プログラムを ゆっくり なぞって、まちがいを さがしてください。
        courseA_artist_loops3_b: |-
          パズルをクリアするには、このブロックが ひつようかも。

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2018:
        courseA_artist_loops3_a: ゆびで プログラムを ゆっくり なぞって、まちがいを さがしてください。
        courseA_artist_loops3_b: |-
          パズルをクリアするには、このブロックが ひつようかも。

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2019:
        courseA_artist_loops3_a: ゆびで プログラムを ゆっくり なぞって、まちがいを さがしてください。
        courseA_artist_loops3_b: |-
          パズルをクリアするには、このブロックが ひつようかも。

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops4:
        courseA_artist_loops4_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops4_b: <xml><block type="simple_move_right"/></xml> ブロックを、
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-6">5</title></block></xml> のなかに いれて ください。
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops4_b: <xml><block type="simple_move_right"/></xml> ブロックを、
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-6">5</title></block></xml> のなかに いれて ください。
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops4_b: <xml><block type="simple_move_right"/></xml> ブロックを、
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-6">5</title></block></xml> のなかに いれて ください。
      courseA_artist_loops5:
        courseA_artist_loops5_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> をつかって このパズルをクリアしよう！
        courseA_artist_loops5_b: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops5_c: <xml><block type="simple_move_right"/></xml> を<xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          の中に入れてみよう。
      courseA_artist_loops5_2018:
        courseA_artist_loops5_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> をつかって このパズルをクリアしよう！
        courseA_artist_loops5_b: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops5_c: <xml><block type="simple_move_right"/></xml> を<xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          の中に入れてみよう。
      courseA_artist_loops5_2019:
        courseA_artist_loops5_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> をつかって このパズルをクリアしよう！
        courseA_artist_loops5_b: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops5_c: <xml><block type="simple_move_right"/></xml> を<xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          の中に入れてみよう。
      courseA_artist_loops6:
        courseA_artist_loops6_a: うまくいかないときは、どんなふうにかける ブロックをうごかして ためしてみよう。
        courseA_artist_loops6_b: ちがう ほうこうに うごくブロック を ２つ つかってみよう。
      courseA_artist_loops6_2018:
        courseA_artist_loops6_a: うまくいかないときは、どんなふうにかける ブロックをうごかして ためしてみよう。
        courseA_artist_loops6_b: ちがう ほうこうに うごくブロック を ２つ つかってみよう。
      courseA_artist_loops6_2019:
        courseA_artist_loops6_a: うまくいかないときは、どんなふうにかける ブロックをうごかして ためしてみよう。
        courseA_artist_loops6_b: ちがう ほうこうに うごくブロック を ２つ つかってみよう。
      courseA_artist_loops7:
        courseA_artist_loops7_a: 一本一本せんをかいて くりかえしのパターンを見つけよう。
        courseA_artist_loops7_b: １つなみをかいたら、それをくりかえして のこりの２つをかいてみよう
        courseA_artist_loops7_c: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックのなかにブロックを なにか いれてください。
      courseA_artist_loops7_2018:
        courseA_artist_loops7_a: 一本一本せんをかいて くりかえしのパターンを見つけよう。
        courseA_artist_loops7_b: １つなみをかいたら、それをくりかえして のこりの２つをかいてみよう
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> ブロックのなかにブロックを なにか いれてください。
      courseA_artist_loops7_2019:
        courseA_artist_loops7_a: 一本一本せんをかいて くりかえしのパターンを見つけよう。
        courseA_artist_loops7_b: １つなみをかいたら、それをくりかえして のこりの２つをかいてみよう
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> ブロックのなかにブロックを なにか いれてください。
      courseA_artist_loops8:
        courseA_artist_loops8_a: 実行して どうなるかみてみよう。
        courseA_artist_loops8_b: コードをどのように かえればよいか 考えてみよう
        courseA_artist_loops8_c: |-
          コードを実行（じっこう）して、どうなるかみてみよう。
          はじごをかんせいさせるには、あとなにをすればよいかよかんがえてみよう。
      courseA_artist_loops8_2018:
        courseA_artist_loops8_a: 実行して どうなるかみてみよう。
        courseA_artist_loops8_b: コードをどのように かえればよいか 考えてみよう
        courseA_artist_loops8_c: |-
          コードを実行（じっこう）して、どうなるかみてみよう。
          はじごをかんせいさせるには、あとなにをすればよいかよかんがえてみよう。
      courseA_artist_loops8_2019:
        courseA_artist_loops8_a: 実行して どうなるかみてみよう。
        courseA_artist_loops8_b: コードをどのように かえればよいか 考えてみよう
        courseA_artist_loops8_c: |-
          コードを実行（じっこう）して、どうなるかみてみよう。
          はじごをかんせいさせるには、あとなにをすればよいかよかんがえてみよう。
      courseA_artist_loops9:
        courseA_artist_loops9_a: 水へいなところをかくコードに もうひとつブロックをついかしてみよう。
        courseA_artist_loops9_b: |-
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> の中に ブロックを入れてみよう。
        courseA_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseA_artist_loops9_2018:
        courseA_artist_loops9_a: 水へいなところをかくコードに もうひとつブロックをついかしてみよう。
        courseA_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseA_artist_loops9_2019:
        courseA_artist_loops9_a: 水へいなところをかくコードに もうひとつブロックをついかしてみよう。
        courseA_artist_loops9_b: |-
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> の中に ブロックを入れてみよう。
        courseA_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと ななめにすすむことができるよ！
        courseA_artist_loops_challenge2_b: テントを１つかいたら ’ジャンプする’ を２かい つかって つぎのテントをかいてね！
        courseA_artist_loops_challenge2_c: すべてのブロックをくりかえしの中にいれることで このパズルを クリアすることができるよ。
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと ななめにすすむことができるよ！
        courseA_artist_loops_challenge2_b: テントを１つかいたら ’ジャンプする’ を２かい つかって つぎのテントをかいてね！
        courseA_artist_loops_challenge2_c: すべてのブロックをくりかえしの中にいれることで このパズルを クリアすることができるよ。
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと ななめにすすむことができるよ！
        courseA_artist_loops_challenge2_b: テントを１つかいたら ’ジャンプする’ を２かい つかって つぎのテントをかいてね！
        courseA_artist_loops_challenge2_c: すべてのブロックをくりかえしの中にいれることで このパズルを クリアすることができるよ。
      courseA_collector_loops1:
        courseA_collector_loops1_a: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: ひがしに ２つ すすんで、たからものを とって ください。
      courseA_collector_loops1_2018:
        courseA_collector_loops1_a: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: ひがしに ２つ すすんで、たからものを とって ください。
      courseA_collector_loops1_2019:
        courseA_collector_loops1_a: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: ひがしに ２つ すすんで、たからものを とって ください。
      courseA_collector_loops2:
        courseA_collector_loops2_a: たからものを とるまえに うごいて ください。
        courseA_collector_loops2_b: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: たからものを とるまえに うごいて ください。
        courseA_collector_loops2_b: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: たからものを とるまえに うごいて ください。
        courseA_collector_loops2_b: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3:
        courseA_collector_loops3_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックをつかって、くりかえして！
        courseA_collector_loops3_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックのなかに ブロックを なにか
          いれてください。
      courseA_collector_loops3_2018:
        courseA_collector_loops3_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックをつかって、くりかえして！
        courseA_collector_loops3_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックのなかに ブロックを なにか
          いれてください。
      courseA_collector_loops3_2019:
        courseA_collector_loops3_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックのなかに ブロックを なにか
          いれてください。
      courseA_collector_loops4:
        courseA_collector_loops4_a: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
        courseA_collector_loops4_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックの くりかえしが おわったら、ローレルを
          したに うごかして、たからものを とってください！
      courseA_collector_loops4_2018:
        courseA_collector_loops4_a: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
        courseA_collector_loops4_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックの くりかえしが おわったら、ローレルを
          したに うごかして、たからものを とってください！
      courseA_collector_loops4_2019:
        courseA_collector_loops4_a: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
        courseA_collector_loops4_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックの くりかえしが おわったら、ローレルを
          したに うごかして、たからものを とってください！
      courseA_collector_loops5:
        courseA_collector_loops5_a: わからないときは、かみに かいて、パターンを みつけだそう。
        courseA_collector_loops5_b: よこに うごく と、したに うごく と、２つに わけて かんがえて みよう。
        courseA_collector_loops5_c: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえしから はじめよう。にしに うごいて
          たからものを とろう。
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: わからないときは、かみに かいて、パターンを みつけだそう。
        courseA_collector_loops5_b: よこに うごく と、したに うごく と、２つに わけて かんがえて みよう。
        courseA_collector_loops5_c: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえしから はじめよう。にしに うごいて
          たからものを とろう。
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: わからないときは、かみに かいて、パターンを みつけだそう。
        courseA_collector_loops5_b: よこに うごく と、したに うごく と、２つに わけて かんがえて みよう。
        courseA_collector_loops5_c: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえしから はじめよう。にしに うごいて
          たからものを とろう。
      courseA_collector_loops6:
        courseA_collector_loops6_a: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
        courseA_collector_loops6_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを、２かい つかいます。
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
        courseA_collector_loops6_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを、２かい つかいます。
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
        courseA_collector_loops6_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを、２かい つかいます。
      courseA_collector_loops7:
        courseA_collector_loops7_a: ローレルが どこまで いくか ためして みてから、つぎを かんがえよう。
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: ローレルが どこまで いくか ためして みてから、つぎを かんがえよう。
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: ローレルが どこまで いくか ためして みてから、つぎを かんがえよう。
      courseA_collector_loops8:
        courseA_collector_loops8_a: わからない ときは、かみに かいて パターンを さがしてみよう。
        courseA_collector_loops8_b: もんだいを ３つに わけて、それぞれ くりかえしを つかって プログラムしよう。
        courseA_collector_loops8_c: すこし プログラムを かいたら、すぐに 実行（じっこう）してみよう。ちょっとづつ ためしながら
          プログラムを つくっていこう。
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: わからない ときは、かみに かいて パターンを さがしてみよう。
        courseA_collector_loops8_b: もんだいを ３つに わけて、それぞれ くりかえしを つかって プログラムしよう。
        courseA_collector_loops8_c: すこし プログラムを かいたら、すぐに 実行（じっこう）してみよう。ちょっとづつ ためしながら
          プログラムを つくっていこう。
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: わからない ときは、かみに かいて パターンを さがしてみよう。
        courseA_collector_loops8_b: もんだいを ３つに わけて、それぞれ くりかえしを つかって プログラムしよう。
        courseA_collector_loops8_c: すこし プログラムを かいたら、すぐに 実行（じっこう）してみよう。ちょっとづつ ためしながら
          プログラムを つくっていこう。
      courseA_collector_loops9:
        courseA_collector_loops9_a: 'どこでループするのがいいか わからないときは、いろいろ すこしずつ ためして、パターンをさがしてみてください。 '
        courseA_collector_loops9_b: くりかえし のなかに、２つの <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえし をいれると、プログラムが
          かんたんになるよ！
      courseA_collector_loops9_2018:
        courseA_collector_loops9_a: 'どこでループするのがいいか わからないときは、いろいろ すこしずつ ためして、パターンをさがしてみてください。 '
        courseA_collector_loops9_b: くりかえし のなかに、２つの <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえし をいれると、プログラムが
          かんたんになるよ！
      courseA_collector_loops9_2019:
        courseA_collector_loops9_a: 'どこでループするのがいいか わからないときは、いろいろ すこしずつ ためして、パターンをさがしてみてください。 '
        courseA_collector_loops9_b: くりかえし のなかに、２つの <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえし をいれると、プログラムが
          かんたんになるよ！
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: うまく うごかなかったら、「くりかえし」の かずを かえてみて。
        courseA_collector_loops_challenge1_b: １かいだけ やるときは、くりかえしは いりません。
        courseA_collector_loops_challenge1_c: どうくつの みぎには、6つの ほうせきが あるけど、5かい 南に うごけばいいよね。なぜだか
          わかるかな？
        courseA_collector_loops_challenge1_d: |-
          さいしょの プログラムは、さいごの 2つの ほうせきを とれません。さいごに このブロックを くわえて みて ください：

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: うまく うごかなかったら、「くりかえし」の かずを かえてみて。
        courseA_collector_loops_challenge1_b: １かいだけ やるときは、くりかえしは いりません。
        courseA_collector_loops_challenge1_c: どうくつの みぎには、6つの ほうせきが あるけど、5かい 南に うごけばいいよね。なぜだか
          わかるかな？
        courseA_collector_loops_challenge1_d: |-
          さいしょの プログラムは、さいごの 2つの ほうせきを とれません。さいごに このブロックを くわえて みて ください：

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: うまく うごかなかったら、「くりかえし」の かずを かえてみて。
        courseA_collector_loops_challenge1_b: １かいだけ やるときは、くりかえしは いりません。
        courseA_collector_loops_challenge1_c: どうくつの みぎには、6つの ほうせきが あるけど、5かい 南に うごけばいいよね。なぜだか
          わかるかな？
        courseA_collector_loops_challenge1_d: |-
          さいしょの プログラムは、さいごの 2つの ほうせきを とれません。さいごに このブロックを くわえて みて ください：

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: この みちを ためしてみて。
        courseA_collector_loops_challenge2kp_a: くりかえしを つかって パズルを クリア できるかな？
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: この みちを ためしてみて。
        courseA_collector_loops_challenge2kp_a: くりかえしを つかって パズルを クリア できるかな？
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: この みちを ためしてみて。
        courseA_collector_loops_challenge2kp_a: くりかえしを つかって パズルを クリア できるかな？
      courseA_collector_preLoops7:
        courseA_collector_loops2_b: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_harvester_loops6:
        courseA_harvester_loops6_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
      courseA_harvester_loops6_2019:
        courseA_harvester_loops6_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
      courseA_harvester_seq2:
        courseA_harvester_seq2_b: かみに ステップを かいて かいけつ しよう！
      courseA_harvester_seq2_2019:
        courseA_harvester_seq2_b: かみに ステップを かいて かいけつ しよう！
      courseA_maze_seq1:
        courseA_maze_seq1_a: |-
          トリさんが うごかないときは、<xml>
            <block type="when_run"/>
          </xml> の したに ちゃんとブロックを くっつけてみて。
        courseA_maze_seq1_b: |-
          このブロックをつかって、トリさんを にしに ３つ うごかして。

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10:
        courseA_maze_seq10_a: うまくいかなかったら、ステップを かみに かいてみよう。
        courseA_maze_seq10_b: パズルをクリアするには ３つの ほうこうに うごきます。
      courseA_maze_seq10_2018:
        courseA_maze_seq10_a: うまくいかなかったら、ステップを かみに かいてみよう。
      courseA_maze_seq10_2019:
        courseA_maze_seq10_a: うまくいかなかったら、ステップを かみに かいてみよう。
      courseA_maze_seq13:
        courseA_maze_seq13_a: ゆびで みちを なぞって かんがえて みよう。
        courseA_maze_seq13_b: いろんなブロックを いれて、うごかしてみよう。まちがえても だいじょうぶ！
        courseA_maze_seq13_c: ブタさんの ところに いくには <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ブロックを つかってね。
      courseA_maze_seq13_2018:
        courseA_maze_seq13_a: ゆびで みちを なぞって かんがえて みよう。
        courseA_maze_seq13_b: いろんなブロックを いれて、うごかしてみよう。まちがえても だいじょうぶ！
        courseA_maze_seq13_c: ブタさんの ところに いくには <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ブロックを つかってね。
      courseA_maze_seq13_2019:
        courseA_maze_seq13_a: ゆびで みちを なぞって かんがえて みよう。
        courseA_maze_seq13_b: いろんなブロックを いれて、うごかしてみよう。まちがえても だいじょうぶ！
      courseA_maze_seq1_2018:
        courseA_maze_seq1_a: |-
          トリさんが うごかないときは、<xml>
            <block type="when_run"/>
          </xml> の したに ちゃんとブロックを くっつけてみて。
        courseA_maze_seq1_b: |-
          このブロックをつかって、トリさんを にしに ３つ うごかして。

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019:
        courseA_maze_seq1_a: |-
          トリさんが うごかないときは、<xml>
            <block type="when_run"/>
          </xml> の したに ちゃんとブロックを くっつけてみて。
        courseA_maze_seq1_b: |-
          このブロックをつかって、トリさんを にしに ３つ うごかして。

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2:
        courseA_maze_seq2_a: プログラムは ブロックが１つ たりません。どれかな？
        courseA_maze_seq2_b: トリさんが どこまでいくか プログラムを うごかして みよう。あと どれくらい いけば いいのかな？
      courseA_maze_seq3:
        courseA_maze_seq3_a: １つのブロックが トリさんを まちがったところに うごかしています。まちがいを みつけて、ただしいブロックに
          おきかえて ください。
        courseA_maze_seq3_b: ステップ ボタンをつかって、プログラムの まちがいを みつけよう。１ばんめ かな？２ばんめ かな？
        courseA_maze_seq3_c: この <xml><block type="maze_moveNorth"/></xml> ブロックは、トリさんを
          まちがった ところに つれていきます。ただしい ブロックに とりかえて ください。
      courseA_maze_seq4:
        courseA_maze_seq4_a: うまくいかなかったら、ただしい みちを さがして、それから いらないブロックを けしてね。
        courseA_maze_seq4_b: まずは、プログラムを うごかして みて。うまくいった？どれが いらないブロックかな？プログラムを なおして
          ください。
      courseA_maze_seq5:
        courseA_maze_seq5_a: かみに ステップを かいて かいけつ しよう！
        courseA_maze_seq5_b: ２つの ほうこうに、２つの ブロックが ひつようです。
      courseA_maze_seq5_2018:
        '1': かみに ステップを かいて かいけつ しよう！
      courseA_maze_seq5_2019:
        '1': かみに ステップを かいて かいけつ しよう！
      courseA_maze_seq6:
        courseA_maze_seq6_a: あと、３つ ブロックがひつようです。
        courseA_maze_seq6_b: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_maze_seq6_2018:
        courseA_maze_seq6_a: あと、３つ ブロックがひつようです。
        courseA_maze_seq6_b: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_maze_seq6_2019:
        courseA_maze_seq6_a: あと、３つ ブロックがひつようです。
        courseA_maze_seq6_b: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_maze_seq7:
        courseA_maze_seq7_a: トリさんが ブタさんの ところに いけるよう、ブロックを ひとつ いれてください。
        courseA_maze_seq7_b: わからないときは、パズルを かみに かいて、ゆびを つかって かんがえて みよう。
      courseA_maze_seq8:
        courseA_maze_seq8_a: うまくいかない ときは、トリさんの うごきを かみに かいてみよう。
      courseA_maze_seq8_2018:
        courseA_maze_seq8_a: うまくいかない ときは、トリさんの うごきを かみに かいてみよう。
      courseA_maze_seq8_2019:
        courseA_maze_seq8_a: うまくいかない ときは、トリさんの うごきを かみに かいてみよう。
      courseA_maze_seq9:
        courseA_maze_seq9_a: あれれっ？トリの うごきを ゆびで なぞって みよう。
        courseA_maze_seq9_b: わからなくなったら、"最初からやりなおす" を おして、はじめから やりなおしてみよう。
        courseA_maze_seq9_c: パズルをクリアするには ３つの ほうこうに うごきます。
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: このパズルの ときかたは ２とおり あるよ。
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: このパズルの ときかたは ２とおり あるよ。
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: このパズルの ときかたは ２とおり あるよ。
      courseA_maze_seq_challenge2:
        courseA_maze_seq_challenge2_a: なんこ いけば いいか、ゆびを つかって かぞえて みよう！
      courseA_maze_seq_challenge2_2018:
        courseA_maze_seq_challenge2_a: なんこ いけば いいか、ゆびを つかって かぞえて みよう！
      courseA_maze_seq_challenge2_2019:
        courseA_maze_seq_challenge2_a: なんこ いけば いいか、ゆびを つかって かぞえて みよう！
      courseA_playLab_events2:
        courseA_playLab_events2_a: 犬が”言う”ブロックをつかってみよう。
        courseA_playLab_events2_b: |-
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml> のようにブロックをならべてみよう。
      courseA_playLab_events2_2018:
        courseA_playLab_events2_a: 犬が”言う”ブロックをつかってみよう。
        courseA_playLab_events2_b: |-
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml> のようにブロックをならべてみよう。
      courseA_playLab_events2_2019:
        courseA_playLab_events2_a: 犬が”言う”ブロックをつかってみよう。
        courseA_playLab_events2_b: |-
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml> のようにブロックをならべてみよう。
      courseA_playLab_events3:
        courseA_playLab_events3_a: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> の下に<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> をつけてみよう。
        courseA_playLab_events3_b: 左やじるしキーをおしたとき 犬が左に行くようにできたかな。犬が はたにさわれば、はたは みどりにかわるよ。
      courseA_playLab_events3_2018:
        courseA_playLab_events3_a: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> の下に<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> をつけてみよう。
        courseA_playLab_events3_b: 左やじるしキーをおしたとき 犬が左に行くようにできたかな。犬が はたにさわれば、はたは みどりにかわるよ。
      courseA_playLab_events3_2019:
        courseA_playLab_events3_a: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> の下に<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> をつけてみよう。
        courseA_playLab_events3_b: 左やじるしキーをおしたとき 犬が左に行くようにできたかな。犬が はたにさわれば、はたは みどりにかわるよ。
      courseA_playLab_events4:
        courseA_playLab_events4_a: |-
          犬を右に動かすには、<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml> をつかいます。
        courseA_playLab_events4_b: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml> をつかってみよう。
      courseA_playLab_events4_2018:
        courseA_playLab_events4_a: |-
          犬を右に動かすには、<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml> をつかいます。
        courseA_playLab_events4_b: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml> をつかってみよう。
      courseA_playLab_events4_2019:
        courseA_playLab_events4_a: |-
          犬を右に動かすには、<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml> をつかいます。
        courseA_playLab_events4_b: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml> をつかってみよう。
      courseA_playLab_events5:
        courseA_playLab_events5_a: "<xml><block type=\"studio_whenArrow\">\n    <title
          name=\"VALUE\">up</title>\n  </block></xml>\n\nと \n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">down</title>\n  </block></xml>\n\nで、犬を上や下にうごかしてみよう。"
        courseA_playLab_events5_b: |-
          ブロックのやじるしをおせば、やじるしのほうこうをかえることができます。

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018:
        courseA_playLab_events5_a: "<xml><block type=\"studio_whenArrow\">\n    <title
          name=\"VALUE\">up</title>\n  </block></xml>\n\nと \n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">down</title>\n  </block></xml>\n\nで、犬を上や下にうごかしてみよう。"
        courseA_playLab_events5_b: |-
          ブロックのやじるしをおせば、やじるしのほうこうをかえることができます。

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2019:
        courseA_playLab_events5_a: "<xml><block type=\"studio_whenArrow\">\n    <title
          name=\"VALUE\">up</title>\n  </block></xml>\n\nと \n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">down</title>\n  </block></xml>\n\nで、犬を上や下にうごかしてみよう。"
        courseA_playLab_events5_b: |-
          ブロックのやじるしをおせば、やじるしのほうこうをかえることができます。

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6:
        courseA_playLab_events6_a: |-
          犬がクリックされたときは、<xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml> をつかいます。
        courseA_playLab_events6_b: |-
          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml> で はいけいをかえることができます。
        courseA_playLab_events6_c: |-
          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml> で ランダムに音をならすことをできます。
      courseA_playLab_events6_2018:
        courseA_playLab_events6_a: |-
          犬がクリックされたときは、<xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml> をつかいます。
        courseA_playLab_events6_b: |-
          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml> で はいけいをかえることができます。
        courseA_playLab_events6_c: |-
          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml> で ランダムに音をならすことをできます。
      courseA_playLab_events6_2019:
        courseA_playLab_events6_a: |-
          犬がクリックされたときは、<xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml> をつかいます。
        courseA_playLab_events6_b: |-
          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml> で はいけいをかえることができます。
        courseA_playLab_events6_c: |-
          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml> で ランダムに音をならすことをできます。
      courseA_playLab_events7:
        courseA_playLab_events7_a: |-
          ぶつかったしらべるには、<xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml> をつかいます。
      courseA_playLab_events7_2018:
        courseA_playLab_events7_a: |-
          ぶつかったしらべるには、<xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml> をつかいます。
      courseA_playLab_events7_2019:
        courseA_playLab_events7_a: |-
          ぶつかったしらべるには、<xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml> をつかいます。
      courseA_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml> で とりをクリックしたとき、ペンギンを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_b: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml> で ペンギンをクリックしたとき、おばけを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_c: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml> で おばけをクリックしたとき、かいじゅうを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_d: "モンスターをクリックしたとき、スピッフ ロボットを表示させる!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_e: "最後に、スピッフをクリックしたとき、ワイルズを表示する!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n
          \ </block></xml>"
      courseA_playlab_events_challenge1_2018:
        courseA_playlab_events_challenge1_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml> で とりをクリックしたとき、ペンギンを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_b: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml> で ペンギンをクリックしたとき、おばけを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_c: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml> で おばけをクリックしたとき、かいじゅうを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_d: "モンスターをクリックしたとき、スピッフ ロボットを表示させる!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_e: "最後に、スピッフをクリックしたとき、ワイルズを表示する!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n
          \ </block></xml>"
      courseA_playlab_events_challenge1_2019:
        courseA_playlab_events_challenge1_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml> で とりをクリックしたとき、ペンギンを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_b: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml> で ペンギンをクリックしたとき、おばけを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_c: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml> で おばけをクリックしたとき、かいじゅうを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_d: "モンスターをクリックしたとき、スピッフ ロボットを表示させる!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_e: "最後に、スピッフをクリックしたとき、ワイルズを表示する!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n
          \ </block></xml>"
      courseA_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml> で とりをしゃべらせることができます。"
        courseA_playlab_events_challenge2_b: "おとをならすには、<xml>\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block
          type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n
          \         </block>\n        </next>\n  </block></xml> をつかいます。"
        courseA_playlab_events_challenge2_c: |-
          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml> をつかえば、かおをかえることができます。
      courseA_playlab_events_challenge2_2018:
        courseA_playlab_events_challenge2_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml> で とりをしゃべらせることができます。"
        courseA_playlab_events_challenge2_b: "おとをならすには、<xml>\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block
          type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n
          \         </block>\n        </next>\n  </block></xml> をつかいます。"
        courseA_playlab_events_challenge2_c: |-
          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml> をつかえば、かおをかえることができます。
      courseA_playlab_events_challenge2_2019:
        courseA_playlab_events_challenge2_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml> で とりをしゃべらせることができます。"
        courseA_playlab_events_challenge2_b: "おとをならすには、<xml>\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      \n          <block
          type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n
          \         </block>\n        </next>\n  </block></xml> をつかいます。"
        courseA_playlab_events_challenge2_c: |-
          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml> をつかえば、かおをかえることができます。
      courseB_artist_loops2:
        courseB_artist_loops2_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
      courseB_artist_loops9:
        courseB_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseB_artist_loops9_2018:
        courseB_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseB_artist_loops9_2019:
        courseB_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseB_collector_loops2:
        courseB_collector_loops2_a: たからものを とるまえに うごいて ください。
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: たからものを とるまえに うごいて ください。
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: たからものを とるまえに うごいて ください。
      courseB_collector_loops4:
        courseB_collector_loops4_b: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
      courseB_collector_loops4_2018:
        courseB_collector_loops4_b: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
      courseB_collector_loops4_2019:
        courseB_collector_loops4_b: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: うまくいかなかったら、デバッグしよう。あきらめないで！
        courseB_collector_loops_challenge2a_b: こんなふうに めいろを ぬけだそう。くりかえしの パターンを みつけて
          ください。
        courseB_collector_loops_challenge2a_c: ぜんぶの たからものを とるには、くりかえしの なかに ２つの <xml>
          <block type="collector_collect"/></xml> ブロックを いれてください。（くりかえしを つかっても よいです）
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: うまくいかなかったら、デバッグしよう。あきらめないで！
        courseB_collector_loops_challenge2a_b: こんなふうに めいろを ぬけだそう。くりかえしの パターンを みつけて
          ください。
        courseB_collector_loops_challenge2a_c: ぜんぶの たからものを とるには、くりかえしの なかに ２つの <xml>
          <block type="collector_collect"/></xml> ブロックを いれてください。（くりかえしを つかっても よいです）
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: うまくいかなかったら、デバッグしよう。あきらめないで！
        courseB_collector_loops_challenge2a_b: こんなふうに めいろを ぬけだそう。くりかえしの パターンを みつけて
          ください。
        courseB_collector_loops_challenge2a_c: ぜんぶの たからものを とるには、くりかえしの なかに ２つの <xml>
          <block type="collector_collect"/></xml> ブロックを いれてください。（くりかえしを つかっても よいです）
      courseB_maze_seq8:
        courseB_maze_seq8_b: このパズルの解き方は二通りあるよ。
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseC19_playLab_EOC1:
        courseE_playLab_scaffold1_a: "`セット キャラ 1 ??? の絵`で、キャラを追加することができます。"
        courseE_playLab_scaffold1_b: プログラムが開始したときにキャラが登場するよう `実行（じっこう）した時`の下に`セット
          キャラ`を追加しよう。
        courseE_playLab_scaffold1_c: はいけいを変えるには、 `はいけいを ??? にする`を使います。
      courseC19_playLab_EOC2:
        courseE_playLab_scaffold1_a: "`もし ____ おされたら`のドロップダウンメニューで矢じるしキーの方向を変えることができます。"
        courseE_playLab_scaffold1_b: 4つの方向の`矢じるしキーがおされたら`を作って、その下に キャラを 動かす命令を 追加しよう。
        courseE_playLab_scaffold1_c: それができたら、キャラを矢じるしキーで動かすことができるようになります。
      courseC19_playLab_EOC4:
        courseE_playLab_scaffold4_a: ポイントを増やすには`10ポイント ふやす` 減らすには、`10ポイント へらす`を使います。
      courseC_PlayLab_events1:
        courseC_PlayLab_events1_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2018:
        courseC_PlayLab_events1_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2019:
        courseC_PlayLab_events1_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events2:
        courseC_PlayLab_events2_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: "`キャラが言う`のことばは、２つ目の ドロップダウンメニューで かえることが できます。"
      courseC_PlayLab_events2_2018:
        courseC_PlayLab_events2_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: "`キャラが言う`のことばは、２つ目の ドロップダウンメニューで かえることが できます。"
      courseC_PlayLab_events2_2019:
        courseC_PlayLab_events2_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: "`キャラが言う`のことばは、２つ目の ドロップダウンメニューで かえることが できます。"
      courseC_PlayLab_events3:
        courseC_PlayLab_events3_a: 犬のジョージを 20ピクセル 右に うごかしてみよう。
        courseC_PlayLab_events3_b: ツールボックスの中に キャラを うごかす ブロックが あるのが わかるかな？
        courseC_PlayLab_events3_c: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2018:
        courseC_PlayLab_events3_a: 犬のジョージを 20ピクセル 右に うごかしてみよう。
        courseC_PlayLab_events3_b: ツールボックスの中に キャラを うごかす ブロックが あるのが わかるかな？
        courseC_PlayLab_events3_c: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2019:
        courseC_PlayLab_events3_a: 犬のジョージを 20ピクセル 右に うごかしてみよう。
        courseC_PlayLab_events3_b: ツールボックスの中に キャラを うごかす ブロックが あるのが わかるかな？
        courseC_PlayLab_events3_c: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events4:
        courseC_PlayLab_events4_b: '"実行（じっこう）"ボタンが おされたら、ジョージを 右に 100ピクセル 行かせよう 。'
        courseC_PlayLab_events4_a: "`キャラ１が キャラ２に さわったら`の下に、`キャラ２がいう`を ひっつけてみよう。"
      courseC_PlayLab_events4_2018:
        courseC_PlayLab_events4_b: '"実行（じっこう）"ボタンが おされたら、ジョージを 右に 100ピクセル 行かせよう 。'
        courseC_PlayLab_events4_a: "`キャラ１が キャラ２に さわったら`の下に、`キャラ２がいう`を ひっつけてみよう。"
      courseC_PlayLab_events4_2019:
        courseC_PlayLab_events4_b: '"実行（じっこう）"ボタンが おされたら、ジョージを 右に 100ピクセル 行かせよう 。'
        courseC_PlayLab_events4_a: "`キャラ１が キャラ２に さわったら`の下に、`キャラ２がいう`を ひっつけてみよう。"
      courseC_PlayLab_events5:
        courseC_PlayLab_events5_a: '`キャラ１が言う`の ドロップダウンメニューから "こんにちわ"を 見つけよう。'
        courseC_PlayLab_events5_b: プログラムを実行（じっこう）したら、タコをクリックしてみよう！
      courseC_PlayLab_events5_2018:
        courseC_PlayLab_events5_a: '`キャラ１が言う`の ドロップダウンメニューから "こんにちわ"を 見つけよう。'
        courseC_PlayLab_events5_b: プログラムを実行（じっこう）したら、タコをクリックしてみよう！
      courseC_PlayLab_events5_2019:
        courseC_PlayLab_events5_a: '`キャラ１が言う`の ドロップダウンメニューから "こんにちわ"を 見つけよう。'
        courseC_PlayLab_events5_b: プログラムを実行（じっこう）したら、タコをクリックしてみよう！
      courseC_PlayLab_events6:
        courseC_PlayLab_events6_a: "`矢じるしのとき` の下に、そのキーが おされたときの うごきを 書きます。"
        courseC_PlayLab_events6_b: "`動かす キャラ１`の ドロップダウンメニューで ペンギンが うごく ほうこうを かえることがでるよ。"
        courseC_PlayLab_events6_c: プログラムが かんせいしたら、矢じるしキーを おして ペンギンを うごかしてみよう。
      courseC_PlayLab_events6_2018:
        courseC_PlayLab_events6_a: "`矢じるしのとき` の下に、そのキーが おされたときの うごきを 書きます。"
        courseC_PlayLab_events6_b: "`動かす キャラ１`の ドロップダウンメニューで ペンギンが うごく ほうこうを かえることがでるよ。"
        courseC_PlayLab_events6_c: プログラムが かんせいしたら、矢じるしキーを おして ペンギンを うごかしてみよう。
      courseC_PlayLab_events6_2019:
        courseC_PlayLab_events6_a: "`矢じるしのとき` の下に、そのキーが おされたときの うごきを 書きます。"
        courseC_PlayLab_events6_b: "`動かす キャラ１`の ドロップダウンメニューで ペンギンが うごく ほうこうを かえることがでるよ。"
        courseC_PlayLab_events6_c: プログラムが かんせいしたら、矢じるしキーを おして ペンギンを うごかしてみよう。
      courseC_PlayLab_events7:
        courseC_PlayLab_events7_a: "`ずっと やること` の中に `うごかす キャラ２ 上に 400 ピクセル` と `うごかす
          キャラ２ 下に 400 ピクセル` をいれてみよう。 "
        courseC_PlayLab_events7_b: "`ずっと やること` は、プログラムを実行（じっこう）したら ずっとうごいているので、ほかのイベントブロックに
          ひっつける ひつようはありません。"
      courseC_PlayLab_events7_2018:
        courseC_PlayLab_events7_a: "`ずっと やること` の中に `うごかす キャラ２ 上に 400 ピクセル` と `うごかす
          キャラ２ 下に 400 ピクセル` をいれてみよう。 "
        courseC_PlayLab_events7_b: "`ずっと やること` は、プログラムを実行（じっこう）したら ずっとうごいているので、ほかのイベントブロックに
          ひっつける ひつようはありません。"
      courseC_PlayLab_events7_2019:
        courseC_PlayLab_events7_a: "`ずっと やること` の中に `うごかす キャラ２ 上に 400 ピクセル` と `うごかす
          キャラ２ 下に 400 ピクセル` をいれてみよう。 "
        courseC_PlayLab_events7_b: "`ずっと やること` は、プログラムを実行（じっこう）したら ずっとうごいているので、ほかのイベントブロックに
          ひっつける ひつようはありません。"
      courseC_PlayLab_events8:
        courseC_PlayLab_events8_a: "`キャラ１がキャラ２にさわったら`のしたに ブロックを ひっつけてみよう。"
        courseC_PlayLab_events8_b: ツールボックスの中にある`キャラがいう` と `を鳴らす` を つかってみよう！
      courseC_PlayLab_events8_2018:
        courseC_PlayLab_events8_a: "`キャラ１がキャラ２にさわったら`のしたに ブロックを ひっつけてみよう。"
        courseC_PlayLab_events8_b: ツールボックスの中にある`キャラがいう` と `を鳴らす` を つかってみよう！
      courseC_PlayLab_events8_2019:
        courseC_PlayLab_events8_a: "`キャラ１がキャラ２にさわったら`のしたに ブロックを ひっつけてみよう。"
        courseC_PlayLab_events8_b: ツールボックスの中にある`キャラがいう` と `を鳴らす` を つかってみよう！
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_a: "`ポイントをふやす`を つかってね。"
        courseC_PlayLab_events9_b: "`キャラ**1**がキャラ**3**にさわったら` を ついかしよう。"
        courseC_PlayLab_events9_c: "`キャラがさわったら`は、いくつでも 作ることが できます。さいしょからある `キャラがさわったら`は
          さくじょしなくていいよ。"
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_a: "`ポイントをふやす`を つかってね。"
        courseC_PlayLab_events9_b: "`キャラ**1**がキャラ**3**にさわったら` を ついかしよう。"
        courseC_PlayLab_events9_c: "`キャラがさわったら`は、いくつでも 作ることが できます。さいしょからある `キャラがさわったら`は
          さくじょしなくていいよ。"
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_a: "`ポイントをふやす`を つかってね。"
        courseC_PlayLab_events9_b: "`キャラ**1**がキャラ**3**にさわったら` を ついかしよう。"
        courseC_PlayLab_events9_c: "`キャラがさわったら`は、いくつでも 作ることが できます。さいしょからある `キャラがさわったら`は
          さくじょしなくていいよ。"
      courseC_PlayLab_eventsA:
        courseC_PlayLab_eventsA_a: "`はいけいを____にする` と `セット キャラ を ____ スピードにする` を つかってみよう。"
        courseC_PlayLab_eventsA_b: "`実行（じっこう）した時`は、ブロックエリアから ワークスペースに ドラックして もってきてね。"
      courseC_PlayLab_eventsA_2018:
        courseC_PlayLab_eventsA_a: "`はいけいを____にする` と `セット キャラ を ____ スピードにする` を つかってみよう。"
        courseC_PlayLab_eventsA_b: "`実行（じっこう）した時`は、ブロックエリアから ワークスペースに ドラックして もってきてね。"
      courseC_PlayLab_eventsA_2019:
        courseC_PlayLab_eventsA_a: "`はいけいを____にする` と `セット キャラ を ____ スピードにする` を つかってみよう。"
        courseC_PlayLab_eventsA_b: "`実行（じっこう）した時`は、ブロックエリアから ワークスペースに ドラックして もってきてね。"
      courseC_PlayLab_eventsA_embed_2019:
        courseC_PlayLab_eventsA_a: "`はいけいを____にする` と `セット キャラ を ____ スピードにする` を つかってみよう。"
        courseC_PlayLab_eventsA_b: "`実行（じっこう）した時`は、ブロックエリアから ワークスペースに ドラックして もってきてね。"
      courseC_PlayLab_eventsFP:
        idea1: |-
          _アイデアがひつよう？_

          **だれが、いますか？** とうじょうする キャラを ランダムに すれば、だれが でてくるか だれにも わからなくなるよ。

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _アイデアがひつよう？_

          **ぼうけんに出かけよう** - はいけいを かえて、キャラが いま どこに いるのか しゃべらせてみよう。

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _アイデアがひつよう？_

          **ピンボールl** - 矢じるしキーで キャラを うごかして、ほかの キャラに さわったら ランダムに 音を鳴らすというのは どうですか？
      courseC_PlayLab_eventsFP_2018:
        idea1: |-
          _アイデアがひつよう？_

          **だれが、いますか？** とうじょうする キャラを ランダムに すれば、だれが でてくるか だれにも わからなくなるよ。

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _アイデアがひつよう？_

          **ぼうけんに出かけよう** - はいけいを かえて、キャラが いま どこに いるのか しゃべらせてみよう。

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _アイデアがひつよう？_

          **ピンボールl** - 矢じるしキーで キャラを うごかして、ほかの キャラに さわったら ランダムに 音を鳴らすというのは どうですか？
      courseC_PlayLab_eventsFP_2019:
        idea3: |-
          _アイデアがひつよう？_

          **ピンボールl** - 矢じるしキーで キャラを うごかして、ほかの キャラに さわったら ランダムに 音を鳴らすというのは どうですか？
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge_a: |-
          キャラを ほかの ばしょに いどうさせるには、このブロックを つかいます。

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: ペンギンがほかのキャラにさわったとき、`セット キャラ 1 左に` をつかってみよう。ペンギンを
          スタート地点に もどして、リトライすることが できます。！
        courseC_PlayLab_events_challenge_c: |-
          キャラがうごくスピードを かえることで、ゲームを むつかしくしたり かんたんにしたり することが できます！

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge_a: |-
          キャラを ほかの ばしょに いどうさせるには、このブロックを つかいます。

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: ペンギンがほかのキャラにさわったとき、`セット キャラ 1 左に` をつかってみよう。ペンギンを
          スタート地点に もどして、リトライすることが できます。！
        courseC_PlayLab_events_challenge_c: |-
          キャラがうごくスピードを かえることで、ゲームを むつかしくしたり かんたんにしたり することが できます！

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge_a: |-
          キャラを ほかの ばしょに いどうさせるには、このブロックを つかいます。

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: ペンギンがほかのキャラにさわったとき、`セット キャラ 1 左に` をつかってみよう。ペンギンを
          スタート地点に もどして、リトライすることが できます。！
        courseC_PlayLab_events_challenge_c: |-
          キャラがうごくスピードを かえることで、ゲームを むつかしくしたり かんたんにしたり することが できます！

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_artist_loop1:
        courseC_artist_loop1_a: くりかえしのなかは、変えなくても だいじょうぶ、くりかえしの前に ブロックを １つ 入れるだけ。
        courseC_artist_loop1_b: |-
          書く線のパターンをかえるには、このブロックを つかいます。

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          好きなパターンを ためしてみて。
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: くりかえしのなかは、変えなくても だいじょうぶ、くりかえしの前に ブロックを １つ 入れるだけ。
        courseC_artist_loop1_b: |-
          書く線のパターンをかえるには、このブロックを つかいます。

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          好きなパターンを ためしてみて。
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: くりかえしのなかは、変えなくても だいじょうぶ、くりかえしの前に ブロックを １つ 入れるだけ。
        courseC_artist_loop1_b: |-
          書く線のパターンをかえるには、このブロックを つかいます。

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          好きなパターンを ためしてみて。
      courseC_artist_loops1a:
        courseC_artist_loops1a_a: |-
          最初のブロックはこれ。

          <xml>
          <block type="jump_to_xy">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          スタンプを押すのは、これ！

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops1a_2018:
        courseC_artist_loops1a_a: |-
          最初のブロックはこれ。

          <xml>
          <block type="jump_to_xy">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          スタンプを押すのは、これ！

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops1a_2019:
        courseC_artist_loops1a_a: |-
          最初のブロックはこれ。

          <xml>
            <block type="jump_to">
              <title name="VALUE">13</title>
            </block>
          </xml>
        courseC_artist_loops1a_b: |-
          スタンプを押すのは、これ！

          <xml>
          <block type="sticker">
              <title name="VALUE">Bird</title>
            </block>
          </xml>
      courseC_artist_loops2a:
        courseC_artist_loops2a_a: くり返しの中で200、200にジャンプして、鳥のスタンプを押してから30度曲がってね。
        courseC_artist_loops2a_b: "`くりかえし`ブロックにある数字をクリックして、数に変えよう。"
      courseC_artist_loops2a_2018:
        courseC_artist_loops2a_a: くり返しの中で200、200にジャンプして、鳥のスタンプを押してから30度曲がってね。
        courseC_artist_loops2a_b: "`くりかえし`ブロックにある数字をクリックして、数に変えよう。"
      courseC_artist_loops2a_2019:
        courseC_artist_loops2a_b: "`くりかえし`ブロックにある数字をクリックして、数に変えよう。"
      courseC_artist_loops3a:
        courseC_artist_loops3a_a: 鳥のスタンプを押した後に、１つだけブロックを追加しよう。
        courseC_artist_loops3a_b: "`スタンプ`の ドロップダウンメニューを 押して、コウモリに変えよう。"
      courseC_artist_loops3a_2018:
        courseC_artist_loops3a_a: 鳥のスタンプを押した後に、１つだけブロックを追加しよう。
        courseC_artist_loops3a_b: "`スタンプ`の ドロップダウンメニューを 押して、コウモリに変えよう。"
      courseC_artist_loops4a:
        courseC_artist_loops4a_a: |-
          これを使って、前にジャンプしてください。

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">100</title>
            </block>
          </xml>

          数字を変えるのを忘れないでね！
      courseC_artist_loops4a_2018:
        courseC_artist_loops4a_a: |-
          これを使って、前にジャンプしてください。

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">100</title>
            </block>
          </xml>

          数字を変えるのを忘れないでね！
      courseC_artist_loops4a_2019:
        courseC_artist_loops4a_a: |-
          これを使って、前にジャンプしてください。

          <xml>
          <block type="jump_by_constant">
              <title name="DIR">jumpForward</title>
              <title name="VALUE">???</title>
            </block>
          </xml>

          数字を変えるのを忘れないでね！
      courseC_artist_loops5a:
        courseC_artist_loops5a_a: "`スタンプ`の 小さな さんかくを おせば、キャラクターを かえることが できます。"
      courseC_artist_loops5a_2018:
        courseC_artist_loops5a_a: "`スタンプ`の 小さな さんかくを おせば、キャラクターを かえることが できます。"
      courseC_artist_loops5a_2019:
        courseC_artist_loops5a_a: "`スタンプ`の 小さな さんかくを おせば、キャラクターを かえることが できます。"
      courseC_artist_loops5b:
        courseC_artist_loops5b_a: |-
          線のかたちは、これ

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: 好きなかたちをえらんだら、同じピクセルの前にすすむと後ろにすすむを追加しよう。
      courseC_artist_loops5b_2018:
        courseC_artist_loops5b_a: |-
          線のかたちは、これ

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: 好きなかたちをえらんだら、同じピクセルの前にすすむと後ろにすすむを追加しよう。
      courseC_artist_loops5b_2019:
        courseC_artist_loops5b_a: |-
          線のかたちは、これ

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>
        courseC_artist_loops5b_b: 好きなかたちをえらんだら、同じピクセルの前にすすむと後ろにすすむを追加しよう。
      courseC_artist_loops6a:
        courseC_artist_loops6a_a: 上のようにするには、スタンプとスタンプの間を 75ピクセルより 小さくします。
      courseC_artist_loops6a_2018:
        courseC_artist_loops6a_a: 上のようにするには、スタンプとスタンプの間を 75ピクセルより 小さくします。
      courseC_artist_loops6a_2019:
        courseC_artist_loops6a_a: 上のようにするには、スタンプとスタンプの間を 75ピクセルより 小さくします。
      courseC_artist_loops7a:
        courseC_artist_loops7a_a: |-
          360をまがる角度でわったものが、くりかえしの回数です。
          くりかえしの回数は、あってるかな？
      courseC_artist_loops7a_2018:
        courseC_artist_loops7a_a: |-
          360をまがる角度でわったものが、くりかえしの回数です。
          くりかえしの回数は、あってるかな？
      courseC_artist_loops7a_2019:
        courseC_artist_loops7a_a: |-
          360をまがる角度でわったものが、くりかえしの回数です。
          くりかえしの回数は、あってるかな？
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: くりかえしの中に `まがる` ブロックを入れるのをわすれないで。
        courseC_artist_loopsPre1a_b: "`くりかえし` のなかに入れるのは、`200ピクセルジャンプして200ピクセル下に行く`、`前に50ピクセルすすむ`、`右に60度まがる`の３つです。"
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: くりかえしの中に `まがる` ブロックを入れるのをわすれないで。
        courseC_artist_loopsPre1a_b: "`くりかえし` のなかに入れるのは、`200ピクセルジャンプして200ピクセル下に行く`、`前に50ピクセルすすむ`、`右に60度まがる`の３つです。"
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: くりかえしの中に `まがる` ブロックを入れるのをわすれないで。
        courseC_artist_loopsPre1a_b: "`くりかえし` のなかに入れるのは、`200ピクセルジャンプして200ピクセル下に行く`、`前に50ピクセルすすむ`、`右に60度まがる`の３つです。"
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_a: |-
          さいしょのブロックは、これ。

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: |-
          ![](<https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png>)

          で、５０ピクセル前に すすみます。
      courseC_artist_prog2:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_artist_prog3:
        courseC_artist_prog3_a: |-
          100ピクセルの四角形の窓をかく方法

          -   うごく 前に
          -   まがる
          -   うごく 前に
          -   まがる
          -   うごく 前に
          -   まがる
          -   うごく 前に
        courseC_artist_prog3_b: 短いプログラムにできるかな？くり返しを使ってみよう。
      courseC_artist_prog3_2018:
        courseC_artist_prog3_a: |-
          100ピクセルの四角形の窓をかく方法

          -   うごく 前に
          -   まがる
          -   うごく 前に
          -   まがる
          -   うごく 前に
          -   まがる
          -   うごく 前に
        courseC_artist_prog3_b: 短いプログラムにできるかな？くり返しを使ってみよう。
      courseC_artist_prog3_2019:
        courseC_artist_prog3_a: |-
          100ピクセルの四角形の窓をかく方法

          -   うごく 前に
          -   まがる
          -   うごく 前に
          -   まがる
          -   うごく 前に
          -   まがる
          -   うごく 前に
        courseC_artist_prog3_b: 短いプログラムにできるかな？くり返しを使ってみよう。
      courseC_artist_prog4:
        courseC_artist_prog4_a: 頭に三角形をかいて、ロケットを完成させよう！
        courseC_artist_prog4_b: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseC_artist_prog4_c: |-
          三角形をかく方法

          -   うごく 前に
          -   まがる 左に 120度
          -   うごく 前に
          -   まがる 左に 120度
          -   うごく 前に
      courseC_artist_prog4_2018:
        courseC_artist_prog4_a: 頭に三角形をかいて、ロケットを完成させよう！
        courseC_artist_prog4_b: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseC_artist_prog4_c: |-
          三角形をかく方法

          -   うごく 前に
          -   まがる 左に 120度
          -   うごく 前に
          -   まがる 左に 120度
          -   うごく 前に
      courseC_artist_prog4_2019:
        courseC_artist_prog4_a: 頭に三角形をかいて、ロケットを完成させよう！
        courseC_artist_prog4_b: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseC_artist_prog4_c: |-
          三角形をかく方法

          -   うごく 前に
          -   まがる 左に 120度
          -   うごく 前に
          -   まがる 左に 120度
          -   うごく 前に
      courseC_artist_prog5:
        courseC_artist_prog5_a: カメとうさぎのマークのところを カメのほうにすれば、プログラムが ゆっくり動いて どこがまちがっているのか
          見つけることが できるよ。
        courseC_artist_prog5_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
        courseC_artist_prog5_c: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseC_artist_prog5_d: 角は右に90度曲がります。
      courseC_artist_prog5_2018:
        courseC_artist_prog5_a: カメとうさぎのマークのところを カメのほうにすれば、プログラムが ゆっくり動いて どこがまちがっているのか
          見つけることが できるよ。
        courseC_artist_prog5_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
        courseC_artist_prog5_d: 角は右に90度曲がります。
      courseC_artist_prog5_2019:
        courseC_artist_prog5_a: カメとうさぎのマークのところを カメのほうにすれば、プログラムが ゆっくり動いて どこがまちがっているのか
          見つけることが できるよ。
        courseC_artist_prog5_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
        courseC_artist_prog5_d: 角は右に90度曲がります。
      courseC_artist_prog6:
        courseC_artist_prog6_a: アーティストは、一本目の線をかく方向を向いています。
        courseC_artist_prog6_b: ひし形は、角の位置が違うだけで、四角形と同じです。
        courseC_artist_prog6_c: ひし形も四角形なので、角を曲がる角度は90度です。
      courseC_artist_prog6_2018:
        courseC_artist_prog6_a: アーティストは、一本目の線をかく方向を向いています。
        courseC_artist_prog6_b: ひし形は、角の位置が違うだけで、四角形と同じです。
        courseC_artist_prog6_c: ひし形も四角形なので、角を曲がる角度は90度です。
      courseC_artist_prog6_2019:
        courseC_artist_prog6_a: アーティストは、一本目の線をかく方向を向いています。
        courseC_artist_prog6_b: ひし形は、角の位置が違うだけで、四角形と同じです。
        courseC_artist_prog6_c: ひし形も四角形なので、角を曲がる角度は90度です。
      courseC_artist_prog7:
        courseC_artist_prog7_a: 曲がる角度は、45度か90度です。
        courseC_artist_prog7_b: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_artist_prog7_c: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseC_artist_prog7_d: |-
          かき方

          -   うごく まえに
          -   まがる みぎに 45 度
          -   うごく まえに
          -   まがる みぎに 90 度
          -   うごく まえに
          -   まがる みぎに 45 度

          これを2回くり返す！
        courseC_artist_prog7_e: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_artist_prog7_2018:
        courseC_artist_prog7_a: 曲がる角度は、45度か90度です。
        courseC_artist_prog7_b: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_artist_prog7_c: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseC_artist_prog7_d: |-
          かき方

          -   うごく まえに
          -   まがる みぎに 45 度
          -   うごく まえに
          -   まがる みぎに 90 度
          -   うごく まえに
          -   まがる みぎに 45 度

          これを2回くり返す！
        courseC_artist_prog7_e: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_artist_prog7_2019:
        courseC_artist_prog7_a: 曲がる角度は、45度か90度です。
        courseC_artist_prog7_b: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_artist_prog7_c: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseC_artist_prog7_d: |-
          かき方

          -   うごく まえに
          -   まがる みぎに 45 度
          -   うごく まえに
          -   まがる みぎに 90 度
          -   うごく まえに
          -   まがる みぎに 45 度

          これを2回くり返す！
        courseC_artist_prog7_e: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 長方形をかいて真ん中に線をかく方法と正方形を2つかく方法があります。
      courseC_artist_prog_challenge1_2018:
        courseC_artist_prog_challenge1_a: 長方形をかいて真ん中に線をかく方法と正方形を2つかく方法があります。
      courseC_artist_prog_challenge1_2019:
        courseC_artist_prog_challenge1_a: 長方形をかいて真ん中に線をかく方法と正方形を2つかく方法があります。
      courseC_artist_prog_challenge2a:
        courseC_artist_prog_challenge2_a: 一本目の線をかいたら、2本目の線をかく前に左に曲がろう。
        courseC_artist_prog_challenge2_b: 2本目の線をかいたら、3本目の線をかく前に右に曲がろう。
      courseC_artist_prog_challenge2a_2018:
        courseC_artist_prog_challenge2_a: 一本目の線をかいたら、2本目の線をかく前に左に曲がろう。
        courseC_artist_prog_challenge2_b: 2本目の線をかいたら、3本目の線をかく前に右に曲がろう。
      courseC_artist_prog_challenge2a_2019:
        courseC_artist_prog_challenge2_a: 一本目の線をかいたら、2本目の線をかく前に左に曲がろう。
        courseC_artist_prog_challenge2_b: 2本目の線をかいたら、3本目の線をかく前に右に曲がろう。
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: くりかえしのなかに `あつめる`を 入れるのを わすれないでね。
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: くりかえしのなかに `あつめる`を 入れるのを わすれないでね。
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: くりかえしのなかに `あつめる`を 入れるのを わすれないでね。
      courseC_collector_prog1:
        courseC_collector_prog1_a: たからもののあるばしょに 行ったら、<xml><block type="collector_collect"/></xml>
          を つかって たからものを あつめよう。
        courseC_collector_prog1_b: １ばんかんたんなこたえは、一歩前にすすんで、たからものをあつめるだけです。
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: たからもののあるばしょに 行ったら、<xml><block type="collector_collect"/></xml>
          を つかって たからものを あつめよう。
        courseC_collector_prog1_b: １ばんかんたんなこたえは、一歩前にすすんで、たからものをあつめるだけです。
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: たからもののあるばしょに 行ったら、<xml><block type="collector_collect"/></xml>
          を つかって たからものを あつめよう。
        courseC_collector_prog1_b: １ばんかんたんなこたえは、一歩前にすすんで、たからものをあつめるだけです。
      courseC_collector_prog2:
        courseC_collector_prog2_a: <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml>
          を４つならべてみましょう。<xml><block type="controls_repeat_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> をつかえば、プログラムをみじかくすることができます。
        courseC_collector_prog2_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_collector_prog2_2018:
        courseC_collector_prog2_a: <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml>
          を４つならべてみましょう。<xml><block type="controls_repeat_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> をつかえば、プログラムをみじかくすることができます。
        courseC_collector_prog2_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_collector_prog2_2019:
        courseC_collector_prog2_a: <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml>
          を４つならべてみましょう。<xml><block type="controls_repeat_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> をつかえば、プログラムをみじかくすることができます。
        courseC_collector_prog2_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_collector_prog3:
        courseC_collector_prog3_a: <xml><block type="when_run"/></xml> に ひっつけた じゅんばんに
          プログラムが実行（じっこう）されます。
        courseC_collector_prog3_b: '"ステップ"ボタンで プログラムを１行づつ うごかして まちがいをみつけよう。'
        courseC_collector_prog3_c: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_collector_prog3_2018:
        courseC_collector_prog3_a: <xml><block type="when_run"/></xml> に ひっつけた じゅんばんに
          プログラムが実行（じっこう）されます。
        courseC_collector_prog3_b: '"ステップ"ボタンで プログラムを１行づつ うごかして まちがいをみつけよう。'
        courseC_collector_prog3_c: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_collector_prog3_2019:
        courseC_collector_prog3_a: <xml><block type="when_run"/></xml> に ひっつけた じゅんばんに
          プログラムが実行（じっこう）されます。
        courseC_collector_prog3_b: '"ステップ"ボタンで プログラムを１行づつ うごかして まちがいをみつけよう。'
        courseC_collector_prog3_c: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_collector_prog4:
        courseC_collector_prog4_a: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog4_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
        courseC_collector_prog4_c: 赤い線のとおりに やってみよう。
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog4_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
        courseC_collector_prog4_c: 赤い線のとおりに やってみよう。
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog4_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
        courseC_collector_prog4_c: 赤い線のとおりに やってみよう。
      courseC_collector_prog5:
        courseC_collector_prog5_a: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_collector_prog5_b: まちがっているところは １つだけじゃないよ、ほかにもあるので 見つけてみよう。
        courseC_collector_prog5_c: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog5_d: 赤い線のとおりに動かしてみよう。
      courseC_collector_prog5_2018:
        courseC_collector_prog5_a: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_collector_prog5_b: まちがっているところは １つだけじゃないよ、ほかにもあるので 見つけてみよう。
        courseC_collector_prog5_c: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog5_d: 赤い線のとおりに動かしてみよう。
      courseC_collector_prog5_2019:
        courseC_collector_prog5_a: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_collector_prog5_b: まちがっているところは １つだけじゃないよ、ほかにもあるので 見つけてみよう。
        courseC_collector_prog5_c: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog5_d: 赤い線のとおりに動かしてみよう。
      courseC_collector_prog6:
        courseC_collector_prog6_a: |-
          どこが まちがえているか わかった？
          ”ステップ”ボタンで プログラムを 1行づつ うごかして どこがまちがっているのか みつけよう。
        courseC_collector_prog6_b: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog6_2018:
        courseC_collector_prog6_a: |-
          どこが まちがえているか わかった？
          ”ステップ”ボタンで プログラムを 1行づつ うごかして どこがまちがっているのか みつけよう。
        courseC_collector_prog6_b: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog6_2019:
        courseC_collector_prog6_a: |-
          どこが まちがえているか わかった？
          ”ステップ”ボタンで プログラムを 1行づつ うごかして どこがまちがっているのか みつけよう。
        courseC_collector_prog6_b: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog7:
        courseC_collector_prog7_a: 'はじめから プログラムしてある ブロックを けす ひつようはありません。  '
        courseC_collector_prog7_b: どこかで みぎにまわる ひつようが ないか 考えてみて。
        courseC_collector_prog7_c: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog7_2018:
        courseC_collector_prog7_a: 'はじめから プログラムしてある ブロックを けす ひつようはありません。  '
        courseC_collector_prog7_b: どこかで みぎにまわる ひつようが ないか 考えてみて。
        courseC_collector_prog7_c: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog7_2019:
        courseC_collector_prog7_a: 'はじめから プログラムしてある ブロックを けす ひつようはありません。  '
        courseC_collector_prog7_b: どこかで みぎにまわる ひつようが ないか 考えてみて。
        courseC_collector_prog7_c: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: すべてのたからものを あつめるには １つの ばしょで 何回も ’あつめる’を
          つかいましょう。
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: すべてのたからものを あつめるには １つの ばしょで 何回も ’あつめる’を
          つかいましょう。
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: すべてのたからものを あつめるには １つの ばしょで 何回も ’あつめる’を
          つかいましょう。
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: １つのばしょで 何回も 'あつめる'ブロックを つかってみよう。
        courseC_collector_prog_challenge1_b: わからないときは、赤い線にそって行ってみよう！
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_a: １つのばしょで 何回も 'あつめる'ブロックを つかってみよう。
        courseC_collector_prog_challenge1_b: わからないときは、赤い線にそって行ってみよう！
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_a: １つのばしょで 何回も 'あつめる'ブロックを つかってみよう。
        courseC_collector_prog_challenge1_b: わからないときは、赤い線にそって行ってみよう！
      courseC_data wizard:
        courseA_playLab_events7_a: |-
          ぶつかったしらべるには、<xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml> をつかいます。
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2:
        courseC_flappy_events2_a: "`スピードをセットする`が、ひつようです。 "
        courseC_flappy_events2_b: このパズルをクリアするのは、`実行（じっこう）した時` の下に`スピードをセットする`を ひっつけてください。
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: "`スピードをセットする`が、ひつようです。 "
        courseC_flappy_events2_b: このパズルをクリアするのは、`実行（じっこう）した時` の下に`スピードをセットする`を ひっつけてください。
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: "`スピードをセットする`が、ひつようです。 "
        courseC_flappy_events2_b: このパズルをクリアするのは、`実行（じっこう）した時` の下に`スピードをセットする`を ひっつけてください。
      courseC_flappy_events3:
        courseC_flappy_events3_a: うまく うごかないときは、ブロックを ひっつけたイベントが 正しいか かくにんしてみよう。
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: うまく うごかないときは、ブロックを ひっつけたイベントが 正しいか かくにんしてみよう。
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: うまく うごかないときは、ブロックを ひっつけたイベントが 正しいか かくにんしてみよう。
      courseC_flappy_events4:
        courseC_flappy_events4_a: "`しょうがいぶつに あたったとき` に `ゲームオーバー`をひっつけよう。"
      courseC_flappy_events4_2018:
        courseC_flappy_events4_a: "`しょうがいぶつに あたったとき` に `ゲームオーバー`をひっつけよう。"
      courseC_flappy_events4_2019:
        courseC_flappy_events4_a: "`しょうがいぶつに あたったとき` に `ゲームオーバー`をひっつけよう。"
      courseC_flappy_events5:
        courseC_flappy_events5_a: このパズルをクリアするには、`1ポイント ゲット` がひつようです。
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: このパズルをクリアするには、`1ポイント ゲット` がひつようです。
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: このパズルをクリアするには、`1ポイント ゲット` がひつようです。
      courseC_flappy_events6:
        courseC_flappy_events6_a: "`クリックしたとき` のなかにある `パタパタする` のスピードをかえてみよう。"
      courseC_flappy_events6_2018:
        courseC_flappy_events6_a: "`クリックしたとき` のなかにある `パタパタする` のスピードをかえてみよう。"
      courseC_flappy_events6_2019:
        courseC_flappy_events6_a: "`クリックしたとき` のなかにある `パタパタする` のスピードをかえてみよう。"
      courseC_flappy_events7:
        courseC_flappy_events7_a: "`はいけいをxxにする` で、はいけいをかえることができます。 "
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: "`はいけいをxxにする` で、はいけいをかえることができます。 "
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: "`はいけいをxxにする` で、はいけいをかえることができます。 "
      courseC_flappy_events8:
        courseC_flappy_events8_a: "`しょうがいぶつをとおりぬけたとき`に、 `はいけいをxxxにする` を ついかしてみよう。"
      courseC_flappy_events8_2018:
        courseC_flappy_events8_a: "`しょうがいぶつをとおりぬけたとき`に、 `はいけいをxxxにする` を ついかしてみよう。"
      courseC_flappy_events8_2019:
        courseC_flappy_events8_a: "`しょうがいぶつをとおりぬけたとき`に、 `はいけいをxxxにする` を ついかしてみよう。"
      courseC_flappy_events9:
        courseC_flappy_events9_a: "`しょうがいぶつに あたったとき` に `スコアは0` を ついか してみよう。"
      courseC_flappy_events9_2018:
        courseC_flappy_events9_a: "`しょうがいぶつに あたったとき` に `スコアは0` を ついか してみよう。"
      courseC_flappy_events9_2019:
        courseC_flappy_events9_a: "`しょうがいぶつに あたったとき` に `スコアは0` を ついか してみよう。"
      courseC_harvester_loops1:
        courseC_harvester_loops1_a: １回だけ前にすすんで、 <xml><block type="harvester_pumpkin"/></xml>
          でかぼちゃをあつめます。.
        courseC_harvester_loops1_b: くりかえしのなかに <xml><block type="harvester_pumpkin"/></xml>
          を入れて、かぼちゃの かずだけ くりかえそう。
      courseC_harvester_loops1_2018:
        courseC_harvester_loops1_a: １回だけ前にすすんで、 <xml><block type="harvester_pumpkin"/></xml>
          でかぼちゃをあつめます。.
        courseC_harvester_loops1_b: くりかえしのなかに <xml><block type="harvester_pumpkin"/></xml>
          を入れて、かぼちゃの かずだけ くりかえそう。
      courseC_harvester_loops1_2019:
        courseC_harvester_loops1_a: １回だけ前にすすんで、 <xml><block type="harvester_pumpkin"/></xml>
          でかぼちゃをあつめます。.
        courseC_harvester_loops1_b: くりかえしのなかに <xml><block type="harvester_pumpkin"/></xml>
          を入れて、かぼちゃの かずだけ くりかえそう。
      courseC_harvester_loops2:
        courseC_harvester_loops2_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops2_b: くりかえしのあとに、もう一回 `くりかえし` を つかいます。
        courseC_harvester_loops2_c: １つ目は、`前にすすむ`を くりかえします。もう一つは、 `ピック カボチャ`を かくかえします。
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops2_b: くりかえしのあとに、もう一回 `くりかえし` を つかいます。
        courseC_harvester_loops2_c: １つ目は、`前にすすむ`を くりかえします。もう一つは、 `ピック カボチャ`を かくかえします。
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops2_b: くりかえしのあとに、もう一回 `くりかえし` を つかいます。
        courseC_harvester_loops2_c: １つ目は、`前にすすむ`を くりかえします。もう一つは、 `ピック カボチャ`を かくかえします。
      courseC_harvester_loops3:
        courseC_harvester_loops3_a: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
        courseC_harvester_loops3_b: 前のパズルと 同じ やり方で さいしょの かぼちゃを ゲットできます。そのあと、どっちに まがれば
          いいかな？
        courseC_harvester_loops3_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_a: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
        courseC_harvester_loops3_b: 前のパズルと 同じ やり方で さいしょの かぼちゃを ゲットできます。そのあと、どっちに まがれば
          いいかな？
        courseC_harvester_loops3_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_a: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
        courseC_harvester_loops3_b: 前のパズルと 同じ やり方で さいしょの かぼちゃを ゲットできます。そのあと、どっちに まがれば
          いいかな？
        courseC_harvester_loops3_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: とうもろこしをあつめるには、`ピック トウモロコシ` をつかいます。
        courseC_harvester_loops4_b: とうもろこし を あつめる くりかえし と かぼちゃ を あつめる くりかえし を プログラムします。
        courseC_harvester_loops4_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: とうもろこしをあつめるには、`ピック トウモロコシ` をつかいます。
        courseC_harvester_loops4_b: とうもろこし を あつめる くりかえし と かぼちゃ を あつめる くりかえし を プログラムします。
        courseC_harvester_loops4_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: とうもろこしをあつめるには、`ピック トウモロコシ` をつかいます。
        courseC_harvester_loops4_b: とうもろこし を あつめる くりかえし と かぼちゃ を あつめる くりかえし を プログラムします。
        courseC_harvester_loops4_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops5:
        courseC_harvester_loops5_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops5_b: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
      courseC_harvester_loops5_2018:
        courseC_harvester_loops5_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops5_b: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
      courseC_harvester_loops5_2019:
        courseC_harvester_loops5_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops5_b: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
      courseC_harvester_loops6:
        courseC_harvester_loops6_a: くりかえしの中に ふく数の ブロックを 入れられることを 思い出して。
        courseC_harvester_loops6_b: とうもろこしの れつを さいごまで 行ったら、ほうこう てんかん しよう。
      courseC_harvester_loops6_2018:
        courseC_harvester_loops6_a: くりかえしの中に ふく数の ブロックを 入れられることを 思い出して。
        courseC_harvester_loops6_b: とうもろこしの れつを さいごまで 行ったら、ほうこう てんかん しよう。
      courseC_harvester_loops6_2019:
        courseC_harvester_loops6_a: くりかえしの中に ふく数の ブロックを 入れられることを 思い出して。
        courseC_harvester_loops6_b: とうもろこしの れつを さいごまで 行ったら、ほうこう てんかん しよう。
      courseC_harvester_loops7:
        courseC_harvester_loops7_a: さいしょに とうもろこしを あつめる ほうほうと かぼちゃから あつめるほうほうが あります。
        courseC_harvester_loops7_b: このパズルをクリアするは、ふくすうの`くりかえし`をつかいます。
      courseC_harvester_loops7_2018:
        courseC_harvester_loops7_a: さいしょに とうもろこしを あつめる ほうほうと かぼちゃから あつめるほうほうが あります。
        courseC_harvester_loops7_b: このパズルをクリアするは、ふくすうの`くりかえし`をつかいます。
      courseC_harvester_loops7_2019:
        courseC_harvester_loops7_a: さいしょに とうもろこしを あつめる ほうほうと かぼちゃから あつめるほうほうが あります。
        courseC_harvester_loops7_b: このパズルをクリアするは、ふくすうの`くりかえし`をつかいます。
      courseC_harvester_loops8:
        courseC_harvester_loops8_a: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
        courseC_harvester_loops8_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops8_2018:
        courseC_harvester_loops8_a: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
        courseC_harvester_loops8_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops8_2019:
        courseC_harvester_loops8_a: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
        courseC_harvester_loops8_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: くりかえしを つかわないで クリアするのは、とても たいへん！
        courseC_harvester_loops_challenge1_b: "`前にすすむ` と `ピック トウモロコシ` をひつような回数くりかえして、角まで来たら、
          `みぎにまがる`でまがります。"
        courseC_harvester_loops_challenge1_c: |-
          一番いい方法は、`くりかえし` のなかで`くりかえし` を つかう やり方です。

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: くりかえしを つかわないで クリアするのは、とても たいへん！
        courseC_harvester_loops_challenge1_b: "`前にすすむ` と `ピック トウモロコシ` をひつような回数くりかえして、角まで来たら、
          `みぎにまがる`でまがります。"
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: くりかえしを つかわないで クリアするのは、とても たいへん！
        courseC_harvester_loops_challenge1_b: "`前にすすむ` と `ピック トウモロコシ` をひつような回数くりかえして、角まで来たら、
          `みぎにまがる`でまがります。"
        courseC_harvester_loops_challenge1_c: |-
          一番いい方法は、`くりかえし` のなかで`くりかえし` を つかう やり方です。

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: ゆっくり考えて！ジグザグに 行く ほうほう や まわりから あつめていく
          ほうほう など、このパズルを クリアする ほうほうは ほかにも たくさん あります。
        courseC_harvester_loops_challenge2_b: "`前にすすむ` と `ピック レタス` をひつような回数くりかえして、角まで来たら
          まがります。"
        courseC_harvester_loops_challenge2_c: |-
          ジグザグに行くやり方は、赤い線の行き方を ２回 くりかせば 20ブロックで パズルを クリアできます。

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: まわりから あつめていく ほうほう だと、18ブロックですみます！
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: ゆっくり考えて！ジグザグに 行く ほうほう や まわりから あつめていく
          ほうほう など、このパズルを クリアする ほうほうは ほかにも たくさん あります。
        courseC_harvester_loops_challenge2_b: "`前にすすむ` と `ピック レタス` をひつような回数くりかえして、角まで来たら
          まがります。"
        courseC_harvester_loops_challenge2_c: |-
          ジグザグに行くやり方は、赤い線の行き方を ２回 くりかせば 20ブロックで パズルを クリアできます。

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: まわりから あつめていく ほうほう だと、18ブロックですみます！
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: ゆっくり考えて！ジグザグに 行く ほうほう や まわりから あつめていく
          ほうほう など、このパズルを クリアする ほうほうは ほかにも たくさん あります。
        courseC_harvester_loops_challenge2_b: "`前にすすむ` と `ピック レタス` をひつような回数くりかえして、角まで来たら
          まがります。"
        courseC_harvester_loops_challenge2_c: |-
          ジグザグに行くやり方は、赤い線の行き方を ２回 くりかせば 20ブロックで パズルを クリアできます。

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: まわりから あつめていく ほうほう だと、18ブロックですみます！
      courseC_maze_debugging1:
        courseC_maze_debugging1_a: |-
          -   １ステップ目でうまきいった？
          -   ２ステップの後、動いたかな？
          -   どこが間違ってるかな？
        courseC_maze_debugging1_b: パズルをクリアするのに必要なのは、あと１ブロックです。
      courseC_maze_debugging1_2018:
        courseC_maze_debugging1_a: |-
          -   １ステップ目でうまきいった？
          -   ２ステップの後、動いたかな？
          -   どこが間違ってるかな？
        courseC_maze_debugging1_b: パズルをクリアするのに必要なのは、あと１ブロックです。
      courseC_maze_debugging1_2019:
        courseC_maze_debugging1_a: |-
          -   １ステップ目でうまきいった？
          -   ２ステップの後、動いたかな？
          -   どこが間違ってるかな？
        courseC_maze_debugging1_b: パズルをクリアするのに必要なのは、あと１ブロックです。
      courseC_maze_debugging2:
        courseC_maze_debugging2_a: ワークスペースにプログラムがあります。全部消して やり直さないでね。
        courseC_maze_debugging2_b: |-
          -   １ステップ目でうまきいった？
          -   ２ステップの後、動いたかな？
          -   どこが間違ってるかな？
        courseC_maze_debugging2_c: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_a: ワークスペースにプログラムがあります。全部消して やり直さないでね。
        courseC_maze_debugging2_b: |-
          -   １ステップ目でうまきいった？
          -   ２ステップの後、動いたかな？
          -   どこが間違ってるかな？
        courseC_maze_debugging2_c: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_a: ワークスペースにプログラムがあります。全部消して やり直さないでね。
        courseC_maze_debugging2_b: |-
          -   １ステップ目でうまきいった？
          -   ２ステップの後、動いたかな？
          -   どこが間違ってるかな？
        courseC_maze_debugging2_c: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging3:
        courseC_maze_debugging3_a: |-
          真ん中にあるブッロクを消すには、いったん全部のブロックをワークスペースのほかの場所にドラックしよう。

          消したいブロックをツールボックスにドラックしよう。

          最後に 残ったブロックを もとあったところに もどします。

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_a: |-
          真ん中にあるブッロクを消すには、いったん全部のブロックをワークスペースのほかの場所にドラックしよう。

          消したいブロックをツールボックスにドラックしよう。

          最後に 残ったブロックを もとあったところに もどします。

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_a: |-
          真ん中にあるブッロクを消すには、いったん全部のブロックをワークスペースのほかの場所にドラックしよう。

          消したいブロックをツールボックスにドラックしよう。

          最後に 残ったブロックを もとあったところに もどします。

          ![](https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif)
        courseC_maze_debugging3_b: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging4:
        courseC_maze_debugging4_a: '"ステップ"ボタンを使えば、プログラムを１行づつ実行することができます。どこがまちがってるのか見つけるのに役に立つかな？'
        courseC_maze_debugging4_b: 曲がる方向がまちえているところが１つあります。どっちかな？
      courseC_maze_debugging4_2018:
        courseC_maze_debugging4_a: '"ステップ"ボタンを使えば、プログラムを１行づつ実行することができます。どこがまちがってるのか見つけるのに役に立つかな？'
        courseC_maze_debugging4_b: 曲がる方向がまちえているところが１つあります。どっちかな？
      courseC_maze_debugging4_2019:
        courseC_maze_debugging4_a: '"ステップ"ボタンを使えば、プログラムを１行づつ実行することができます。どこがまちがってるのか見つけるのに役に立つかな？'
        courseC_maze_debugging4_b: 曲がる方向がまちえているところが１つあります。どっちかな？
      courseC_maze_debugging5:
        courseC_maze_debugging5_a: |-
          ワークスペースにバグのあるプログラムがあります。全部消さないでね！

          "ステップ"ボタンでプログラムを動かして、どこがまちがっているのか見つけよう。
        courseC_maze_debugging5_b: さっきのヒントにあったことをやってみよう。ワークスペースのプログラムでだいじょうぶかな？どこがまちがってる？
      courseC_maze_debugging5_2018:
        courseC_maze_debugging5_a: |-
          ワークスペースにバグのあるプログラムがあります。全部消さないでね！

          "ステップ"ボタンでプログラムを動かして、どこがまちがっているのか見つけよう。
        courseC_maze_debugging5_b: さっきのヒントにあったことをやってみよう。ワークスペースのプログラムでだいじょうぶかな？どこがまちがってる？
      courseC_maze_debugging5_2019:
        courseC_maze_debugging5_a: |-
          ワークスペースにバグのあるプログラムがあります。全部消さないでね！

          "ステップ"ボタンでプログラムを動かして、どこがまちがっているのか見つけよう。
        courseC_maze_debugging5_b: さっきのヒントにあったことをやってみよう。ワークスペースのプログラムでだいじょうぶかな？どこがまちがってる？
      courseC_maze_debugging6:
        courseC_maze_debugging6_a: |-
          -   リスは何をすればいいと思う？
          -   リスは何をする？
          -   どうすればいいか教えて？
        courseC_maze_debugging6_b: |-
          ２つ前にやったプログラムのデバッグ方法を思い出して、１つめのバグを見つけなおそう。

          プログラムがちゃんと動くまで、これをくり返そう！
      courseC_maze_debugging6_2018:
        courseC_maze_debugging6_a: |-
          -   リスは何をすればいいと思う？
          -   リスは何をする？
          -   どうすればいいか教えて？
        courseC_maze_debugging6_b: |-
          ２つ前にやったプログラムのデバッグ方法を思い出して、１つめのバグを見つけなおそう。

          プログラムがちゃんと動くまで、これをくり返そう！
      courseC_maze_debugging6_2019:
        courseC_maze_debugging6_a: |-
          -   リスは何をすればいいと思う？
          -   リスは何をする？
          -   どうすればいいか教えて？
        courseC_maze_debugging6_b: |-
          ２つ前にやったプログラムのデバッグ方法を思い出して、１つめのバグを見つけなおそう。

          プログラムがちゃんと動くまで、これをくり返そう！
      courseC_maze_debugging7:
        courseC_maze_debugging7_a: |-
          -   １ステップ目はあってる？
          -   ２ステップ目はどうかな？
          -   どこがまちがってるかな？
        courseC_maze_debugging7_b: '"ステップ" ボタンをクリックすれば、１ステップづつ実行できることを思い出して。'
        courseC_maze_debugging7_c: |-
          バグを１つ見つけてなおしたら、もう一回デバッグしよう。

          ちゃんと動くようになるまで、デバッグをくり返そう。
      courseC_maze_debugging7_2018:
        courseC_maze_debugging7_a: |-
          -   １ステップ目はあってる？
          -   ２ステップ目はどうかな？
          -   どこがまちがってるかな？
        courseC_maze_debugging7_b: '"ステップ" ボタンをクリックすれば、１ステップづつ実行できることを思い出して。'
        courseC_maze_debugging7_c: |-
          バグを１つ見つけてなおしたら、もう一回デバッグしよう。

          ちゃんと動くようになるまで、デバッグをくり返そう。
      courseC_maze_debugging7_2019:
        courseC_maze_debugging7_a: |-
          -   １ステップ目はあってる？
          -   ２ステップ目はどうかな？
          -   どこがまちがってるかな？
        courseC_maze_debugging7_b: '"ステップ" ボタンをクリックすれば、１ステップづつ実行できることを思い出して。'
        courseC_maze_debugging7_c: |-
          バグを１つ見つけてなおしたら、もう一回デバッグしよう。

          ちゃんと動くようになるまで、デバッグをくり返そう。
      courseC_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: 右から行くか、左から行くかは、君しだい！
        courseC_maze_debugging_challenge1_b: 通り道は長方形です！ 毎回同じように まがる必要があります。
        courseC_maze_debugging_challenge1_c: わからなくなったら、いつでもやり直すことができるよ！
      courseC_maze_debugging_challenge1_2018:
        courseC_maze_debugging_challenge1_a: 右から行くか、左から行くかは、君しだい！
        courseC_maze_debugging_challenge1_b: 通り道は長方形です！ 毎回同じように まがる必要があります。
        courseC_maze_debugging_challenge1_c: わからなくなったら、いつでもやり直すことができるよ！
      courseC_maze_debugging_challenge1_2019:
        courseC_maze_debugging_challenge1_a: 右から行くか、左から行くかは、君しだい！
        courseC_maze_debugging_challenge1_b: 通り道は長方形です！ 毎回同じように まがる必要があります。
        courseC_maze_debugging_challenge1_c: わからなくなったら、いつでもやり直すことができるよ！
      courseC_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_b: わからなくなったら、デバックしてみよう。どこがまちがってるかな？
        courseC_maze_debugging_challenge2_c: |-
          4回曲がってドングリのところへ行く行き方は2つです。くりかえしを1つ使って1つの行き方を見つけたら、もうひとつの行き方を考えてみよう！

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2018:
        courseC_maze_debugging_challenge2_b: わからなくなったら、デバックしてみよう。どこがまちがってるかな？
        courseC_maze_debugging_challenge2_c: |-
          4回曲がってドングリのところへ行く行き方は2つです。くりかえしを1つ使って1つの行き方を見つけたら、もうひとつの行き方を考えてみよう！

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2019:
        courseC_maze_debugging_challenge2_b: わからなくなったら、デバックしてみよう。どこがまちがってるかな？
        courseC_maze_debugging_challenge2_c: |-
          4回曲がってドングリのところへ行く行き方は2つです。くりかえしを1つ使って1つの行き方を見つけたら、もうひとつの行き方を考えてみよう！

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: ２つにわけて考えてみよう。それぞれに くりかえしの パターンが あります。
        courseC_maze_loops_challenge1_b: かいだんのパターンのとき、どんなふうにくりかえしをつかったか思い出して。
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: ２つにわけて考えてみよう。それぞれに くりかえしの パターンが あります。
        courseC_maze_loops_challenge1_b: かいだんのパターンのとき、どんなふうにくりかえしをつかったか思い出して。
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: ２つにわけて考えてみよう。それぞれに くりかえしの パターンが あります。
        courseC_maze_loops_challenge1_b: かいだんのパターンのとき、どんなふうにくりかえしをつかったか思い出して。
      courseC_maze_programming1:
        courseC_maze_programming1_0: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming1_2018:
        courseC_maze_programming1_0: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming1_2019:
        courseC_maze_programming1_0: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming2:
        courseC_maze_programming2_a: ツールボックスから<xml><block type="maze_moveForward"/></xml>
          をとり出して、 <xml><block type="when_run"/></xml> にくっつけてみよう。
        courseC_maze_programming2_b: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming2_2018:
        courseC_maze_programming2_a: ツールボックスから<xml><block type="maze_moveForward"/></xml>
          をとり出して、 <xml><block type="when_run"/></xml> にくっつけてみよう。
        courseC_maze_programming2_b: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming2_2019:
        courseC_maze_programming2_a: ツールボックスから<xml><block type="maze_moveForward"/></xml>
          をとり出して、 <xml><block type="when_run"/></xml> にくっつけてみよう。
        courseC_maze_programming2_b: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming3:
        courseC_maze_programming3_a: さいしょにコードを実行して、追加する必要があるものを調べてみてください。
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          まん中にあるブロックをけすには、そのブロックから下にあるブロックごとをはずします。
          そこからいらないブロックをツールボックスにドラックして
          のこったブロックをもとにもどします。
      courseC_maze_programming3_2018:
        courseC_maze_programming3_a: さいしょにコードを実行して、追加する必要があるものを調べてみてください。
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          まん中にあるブロックをけすには、そのブロックから下にあるブロックごとをはずします。
          そこからいらないブロックをツールボックスにドラックして
          のこったブロックをもとにもどします。
      courseC_maze_programming3_2019:
        courseC_maze_programming3_a: さいしょにコードを実行して、追加する必要があるものを調べてみてください。
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          まん中にあるブロックをけすには、そのブロックから下にあるブロックごとをはずします。
          そこからいらないブロックをツールボックスにドラックして
          のこったブロックをもとにもどします。
      courseC_maze_programming4:
        courseC_maze_programming4_a: |-
          トリさんがまがるほうこうは、トリさんがむいているほうこうできまります。
          右にまがるで、トリさんは下にうごきます。
        courseC_maze_programming4_b: |-
          下のようにブロックをおいてみよう。

          -   前にすすむ
          -   どちらかにまがる
          -   前にすすむ
          -   さっきとはべつのほうこうにまがる
          -   前にすすむ
      courseC_maze_programming4_2018:
        courseC_maze_programming4_a: |-
          トリさんがまがるほうこうは、トリさんがむいているほうこうできまります。
          右にまがるで、トリさんは下にうごきます。
        courseC_maze_programming4_b: |-
          下のようにブロックをおいてみよう。

          -   前にすすむ
          -   どちらかにまがる
          -   前にすすむ
          -   さっきとはべつのほうこうにまがる
          -   前にすすむ
      courseC_maze_programming4_2019:
        courseC_maze_programming4_a: |-
          トリさんがまがるほうこうは、トリさんがむいているほうこうできまります。
          右にまがるで、トリさんは下にうごきます。
        courseC_maze_programming4_b: |-
          下のようにブロックをおいてみよう。

          -   前にすすむ
          -   どちらかにまがる
          -   前にすすむ
          -   さっきとはべつのほうこうにまがる
          -   前にすすむ
      courseC_maze_programming5:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: |-
          トリさんを一回だけまがらせて、このパズルをクリアしよう。
          どこでまがればいいかな？
        courseC_maze_programming5_c: ２回前に進んで、まがって。また２回前に進もう。
      courseC_maze_programming5_2018:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: |-
          トリさんを一回だけまがらせて、このパズルをクリアしよう。
          どこでまがればいいかな？
        courseC_maze_programming5_c: ２回前に進んで、まがって。また２回前に進もう。
      courseC_maze_programming5_2019:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: |-
          トリさんを一回だけまがらせて、このパズルをクリアしよう。
          どこでまがればいいかな？
        courseC_maze_programming5_c: ２回前に進んで、まがって。また２回前に進もう。
      courseC_maze_programming6:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
        courseC_maze_programming6_b: どんな行き方があるのか、ゆびでなぞってみよう。
        courseC_maze_programming6_c: かべの方をむいているので、さいしょにまがってみよう。
        courseC_maze_programming6_d: 赤い道を行ってみよう！
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
        courseC_maze_programming6_b: どんな行き方があるのか、ゆびでなぞってみよう。
        courseC_maze_programming6_c: かべの方をむいているので、さいしょにまがってみよう。
        courseC_maze_programming6_d: 赤い道を行ってみよう！
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
        courseC_maze_programming6_b: どんな行き方があるのか、ゆびでなぞってみよう。
        courseC_maze_programming6_c: かべの方をむいているので、さいしょにまがってみよう。
        courseC_maze_programming6_d: 赤い道を行ってみよう！
      courseC_maze_programming7:
        courseC_maze_programming7_a: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか
          すぐに見つけることができます。"
        courseC_maze_programming7_b: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_maze_programming7_2018:
        courseC_maze_programming7_a: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか
          すぐに見つけることができます。"
        courseC_maze_programming7_b: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_maze_programming7_2019:
        courseC_maze_programming7_a: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか
          すぐに見つけることができます。"
        courseC_maze_programming7_b: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_maze_programming8:
        courseC_maze_programming8_a: わからなくなったら、"ステップ"ボタンで コードを １行づつ 実行（じっこう）させてみよう。
        courseC_maze_programming8_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_maze_programming8_2018:
        courseC_maze_programming8_a: わからなくなったら、"ステップ"ボタンで コードを １行づつ 実行（じっこう）させてみよう。
        courseC_maze_programming8_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_maze_programming8_2019:
        courseC_maze_programming8_a: わからなくなったら、"ステップ"ボタンで コードを １行づつ 実行（じっこう）させてみよう。
        courseC_maze_programming8_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseC_maze_programming_challenge1:
        courseC_maze_programming_challenge1_a: ブタのところへ行く道をゆびでなぞって、それをプログラムしてみよう！
      courseC_maze_programming_challenge1_2018:
        courseC_maze_programming_challenge1_a: ブタのところへ行く道をゆびでなぞって、それをプログラムしてみよう！
      courseC_maze_programming_challenge1_2019:
        courseC_maze_programming_challenge1_a: ブタのところへ行く道をゆびでなぞって、それをプログラムしてみよう！
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: 後ろに行くときは、まがる方向（ほうこう）に気をつけよう。
        courseC_maze_programming_challenge2_b: さいたんルートは5ブロックでクリアできます。<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを使います！
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: 後ろに行くときは、まがる方向（ほうこう）に気をつけよう。
        courseC_maze_programming_challenge2_b: さいたんルートは5ブロックでクリアできます。<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを使います！
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: 後ろに行くときは、まがる方向（ほうこう）に気をつけよう。
        courseC_maze_programming_challenge2_b: さいたんルートは5ブロックでクリアできます。<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを使います！
      courseC_starWars_loops1:
        courseC_starWars_loops1_a: スクラップのうえを とおることで BB-8は スクラップを あつめます。
        courseC_starWars_loops1_b: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
        courseC_starWars_loops1_c: このパズルをクリアするには、`前にすすむ` ブロックを ５こ つかいます。
      courseC_starWars_loops10:
        courseC_starWars_loops10_a: 大きなかいだんが 見えるかな？今まで やったなかで どのパターンが つかえるか 考えてみよう。
        courseC_starWars_loops10_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
        courseC_starWars_loops10_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_a: 大きなかいだんが 見えるかな？今まで やったなかで どのパターンが つかえるか 考えてみよう。
        courseC_starWars_loops10_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
        courseC_starWars_loops10_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_a: 大きなかいだんが 見えるかな？今まで やったなかで どのパターンが つかえるか 考えてみよう。
        courseC_starWars_loops10_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
        courseC_starWars_loops10_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_a: スクラップのうえを とおることで BB-8は スクラップを あつめます。
        courseC_starWars_loops1_b: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
        courseC_starWars_loops1_c: このパズルをクリアするには、`前にすすむ` ブロックを ５こ つかいます。
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_a: スクラップのうえを とおることで BB-8は スクラップを あつめます。
        courseC_starWars_loops1_b: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
        courseC_starWars_loops1_c: このパズルをクリアするには、`前にすすむ` ブロックを ５こ つかいます。
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: コードをくりかえすには、`くりかえし`ブロックの中に くりかえしたい ブロックを 入れます。
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: コードをくりかえすには、`くりかえし`ブロックの中に くりかえしたい ブロックを 入れます。
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: コードをくりかえすには、`くりかえし`ブロックの中に くりかえしたい ブロックを 入れます。
      courseC_starWars_loops4:
        courseC_starWars_loops4_c: ”ひだりに まがる”ブロックの中にある 小さな やじるしを おすと "みぎに まがる"に なります。
        courseC_starWars_loops4_a: "`くりかえし` ブロックを２つ つかいましょう。"
        courseC_starWars_loops4_b: "`くりかえし`ブロックの中に入れるのは、`前に すすむ` だけです。"
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_c: ”ひだりに まがる”ブロックの中にある 小さな やじるしを おすと "みぎに まがる"に なります。
        courseC_starWars_loops4_a: "`くりかえし` ブロックを２つ つかいましょう。"
        courseC_starWars_loops4_b: "`くりかえし`ブロックの中に入れるのは、`前に すすむ` だけです。"
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_c: ”ひだりに まがる”ブロックの中にある 小さな やじるしを おすと "みぎに まがる"に なります。
        courseC_starWars_loops4_a: "`くりかえし` ブロックを２つ つかいましょう。"
        courseC_starWars_loops4_b: "`くりかえし`ブロックの中に入れるのは、`前に すすむ` だけです。"
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: 下に行って まがってから 前にすすもう。
        courseC_starWars_loops5_a: 向きをかえて １つ`前に すすむ`、また向きをかえて、こんどは、`くりかえし`をつかいます。
      courseC_starWars_loops6:
        courseC_starWars_loops6_a: すべてのうごきを紙にかいて、くりかえしのパターンを見つけよう。
        courseC_starWars_loops6_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_a: すべてのうごきを紙にかいて、くりかえしのパターンを見つけよう。
        courseC_starWars_loops6_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_a: すべてのうごきを紙にかいて、くりかえしのパターンを見つけよう。
        courseC_starWars_loops6_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops7:
        courseC_starWars_loops7_a: むつかしいかな？かいだん みたいに すすんでみよう。これで すべてのスクラップを あつめることが
          できるかな？
        courseC_starWars_loops7_b: わからなくなったら、すべての動きを紙に書いて、くりかえしのパターンをさがそう。
        courseC_starWars_loops7_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_a: むつかしいかな？かいだん みたいに すすんでみよう。これで すべてのスクラップを あつめることが
          できるかな？
        courseC_starWars_loops7_b: わからなくなったら、すべての動きを紙に書いて、くりかえしのパターンをさがそう。
        courseC_starWars_loops7_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_a: むつかしいかな？かいだん みたいに すすんでみよう。これで すべてのスクラップを あつめることが
          できるかな？
        courseC_starWars_loops7_b: わからなくなったら、すべての動きを紙に書いて、くりかえしのパターンをさがそう。
        courseC_starWars_loops7_c: ミスをおそれないで！まちがってもいいから、プログラムを書いたら実行して、どうなるか見てみよう。
      courseC_starWars_loops8:
        course_starWars_loops8_a: 少しずつ 考えて やってみよう。ゆっくりやろうよ。いっぱつで クリアしなくて いいだよ。
        course_starWars_loops8_b: ぜんはんは、かいだんみたいに すすむことを 考えよう。そのあと、どうすれば いいかな？
        course_starWars_loops8_c: |-
          こんなふうに行ってみよう。

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018:
        course_starWars_loops8_a: 少しずつ 考えて やってみよう。ゆっくりやろうよ。いっぱつで クリアしなくて いいだよ。
        course_starWars_loops8_b: ぜんはんは、かいだんみたいに すすむことを 考えよう。そのあと、どうすれば いいかな？
        course_starWars_loops8_c: |-
          こんなふうに行ってみよう。

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2019:
        course_starWars_loops8_a: 少しずつ 考えて やってみよう。ゆっくりやろうよ。いっぱつで クリアしなくて いいだよ。
        course_starWars_loops8_b: ぜんはんは、かいだんみたいに すすむことを 考えよう。そのあと、どうすれば いいかな？
        course_starWars_loops8_c: |-
          こんなふうに行ってみよう。

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9:
        course_starWars_loops9_b: "`くりかえし`の中には、１ついじょう ブロックを 入れることが できます。"
        course_starWars_loops9_c: |-
          このパズルをクリアするのに、ひだりにまがるはつかいません。みぎにまがるだけでOK。

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018:
        course_starWars_loops9_b: "`くりかえし`の中には、１ついじょう ブロックを 入れることが できます。"
        course_starWars_loops9_c: |-
          このパズルをクリアするのに、ひだりにまがるはつかいません。みぎにまがるだけでOK。

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2019:
        course_starWars_loops9_b: "`くりかえし`の中には、１ついじょう ブロックを 入れることが できます。"
        course_starWars_loops9_c: |-
          このパズルをクリアするのに、ひだりにまがるはつかいません。みぎにまがるだけでOK。

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_artist_1_2018:
        courseD_artist_project1_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
        courseD_artist_project1_b: "`うごく まえに` で線がかけて、`前に ジャンプする` ではかけません。"
      courseD_artist_1_2018_2019:
        courseD_artist_project1_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
        courseD_artist_project1_b: "`うごく まえに` で線がかけて、`前に ジャンプする` ではかけません。"
      courseD_artist_2_2018:
        courseD_artist_project1_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
      courseD_artist_2_2018_2019:
        courseD_artist_project1_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
      courseD_artist_binary1:
        courseD_artist_binary1_a: '"???" のところに、0と1を好きなようにならべてみよう。'
        courseD_artist_binary1_b: 1だったら黒、０だったら白になります。
        courseD_artist_binary1_c: |-
          こんな感じで ０か１を入力します。

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2018:
        courseD_artist_binary1_a: '"???" のところに、0と1を好きなようにならべてみよう。'
        courseD_artist_binary1_b: 1だったら黒、０だったら白になります。
        courseD_artist_binary1_c: |-
          こんな感じで ０か１を入力します。

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary1_2019:
        courseD_artist_binary1_a: '"???" のところに、0と1を好きなようにならべてみよう。'
        courseD_artist_binary1_b: 1だったら黒、０だったら白になります。
        courseD_artist_binary1_c: |-
          こんな感じで ０か１を入力します。

          ![](https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif)
      courseD_artist_binary2:
        courseD_artist_binary2_a: どんなふうに動くのか `実行（じっこう）`をおして見てみよう。
      courseD_artist_binary2_2018:
        courseD_artist_binary2_a: どんなふうに動くのか `実行（じっこう）`をおして見てみよう。
      courseD_artist_binary2_2019:
        courseD_artist_binary2_a: どんなふうに動くのか `実行（じっこう）`をおして見てみよう。
      courseD_artist_binary3:
        courseD_artist_binary3_a: ツールボックスにある4つのパターの内 １つが 正かいです。
        courseD_artist_binary3_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary3_2018:
        courseD_artist_binary3_a: ツールボックスにある4つのパターの内 １つが 正かいです。
        courseD_artist_binary3_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary3_2019:
        courseD_artist_binary3_a: ツールボックスにある4つのパターの内 １つが 正かいです。
        courseD_artist_binary3_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary4:
        courseD_artist_binary4_a: 一番上の行のさいしょの３マスを見て。全体のパターンをかくために、この３マスのパターンをくりかえすことができるかな？
        courseD_artist_binary4_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary4_2018:
        courseD_artist_binary4_a: 一番上の行のさいしょの３マスを見て。全体のパターンをかくために、この３マスのパターンをくりかえすことができるかな？
        courseD_artist_binary4_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary4_2019:
        courseD_artist_binary4_a: 一番上の行のさいしょの３マスを見て。全体のパターンをかくために、この３マスのパターンをくりかえすことができるかな？
        courseD_artist_binary4_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary5:
        courseD_artist_binary5_a: どこを かえればいいか 調べるために、プログラムを 実行してみよう。
        courseD_artist_binary5_b: ２つの行を入れかえるだけで、ニコニコ顔になるよ。
        courseD_artist_binary5_c: わからなくなったら、紙に 0と1を 書いて どんな文字列に なっているか 見てみよう。
      courseD_artist_binary5_2018:
        courseD_artist_binary5_a: どこを かえればいいか 調べるために、プログラムを 実行してみよう。
        courseD_artist_binary5_b: ２つの行を入れかえるだけで、ニコニコ顔になるよ。
        courseD_artist_binary5_c: わからなくなったら、紙に 0と1を 書いて どんな文字列に なっているか 見てみよう。
      courseD_artist_binary5_2019:
        courseD_artist_binary5_a: どこを かえればいいか 調べるために、プログラムを 実行してみよう。
        courseD_artist_binary5_b: ２つの行を入れかえるだけで、ニコニコ顔になるよ。
        courseD_artist_binary5_c: わからなくなったら、紙に 0と1を 書いて どんな文字列に なっているか 見てみよう。
      courseD_artist_binary6:
        courseD_artist_binary6_a: 左上からスタートします。くりかえしパターンは、何マスかな？
        courseD_artist_binary6_b: 1文字ふやしては実行して、うまくいくかためしてみよう！
      courseD_artist_binary6_2018:
        courseD_artist_binary6_a: 左上からスタートします。くりかえしパターンは、何マスかな？
        courseD_artist_binary6_b: 1文字ふやしては実行して、うまくいくかためしてみよう！
      courseD_artist_binary6_2019:
        courseD_artist_binary6_a: 左上からスタートします。くりかえしパターンは、何マスかな？
        courseD_artist_binary6_b: 1文字ふやしては実行して、うまくいくかためしてみよう！
      courseD_artist_binary7:
        courseD_artist_binary7_a: 左上からスタートします。くりかえしパターンは、何マスかな？
        courseD_artist_binary7_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary7_2018:
        courseD_artist_binary7_a: 左上からスタートします。くりかえしパターンは、何マスかな？
        courseD_artist_binary7_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary7_2019:
        courseD_artist_binary7_a: 左上からスタートします。くりかえしパターンは、何マスかな？
        courseD_artist_binary7_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary8:
        courseD_artist_binary8_a: うずまきを かくのに、少し こんらん するかもしれません。このパターンをかくとしたら、１行１行どんなパターンにしますか。
        courseD_artist_binary8_b: どこを かえればいいか 調べるために、プログラムを 実行してみよう。
        courseD_artist_binary8_c: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary8_2018:
        courseD_artist_binary8_a: うずまきを かくのに、少し こんらん するかもしれません。このパターンをかくとしたら、１行１行どんなパターンにしますか。
        courseD_artist_binary8_b: どこを かえればいいか 調べるために、プログラムを 実行してみよう。
        courseD_artist_binary8_c: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_binary8_2019:
        courseD_artist_binary8_a: うずまきを かくのに、少し こんらん するかもしれません。このパターンをかくとしたら、１行１行どんなパターンにしますか。
        courseD_artist_binary8_b: どこを かえればいいか 調べるために、プログラムを 実行してみよう。
        courseD_artist_binary8_c: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_artist_nestedLoops1:
        courseD_artist_nestedLoops1_a: 前に進んで右に曲がれば、かんたんに三角形をかくことができます。
        courseD_artist_nestedLoops1_b: "`くりかえし`の中に ２つ ブロックを 入れて 三角形を かいてみよう。どのブロックを使う？"
        courseD_artist_nestedLoops1_c: すべてのステップを 紙に 書いてみて、くりかえしの中に 入れる パターンを 見つけよう。
      courseD_artist_nestedLoops1_2018:
        courseD_artist_nestedLoops1_a: 前に進んで右に曲がれば、かんたんに三角形をかくことができます。
        courseD_artist_nestedLoops1_b: "`くりかえし`の中に ２つ ブロックを 入れて 三角形を かいてみよう。どのブロックを使う？"
        courseD_artist_nestedLoops1_c: すべてのステップを 紙に 書いてみて、くりかえしの中に 入れる パターンを 見つけよう。
      courseD_artist_nestedLoops1_2019:
        courseD_artist_nestedLoops1_a: 前に進んで右に曲がれば、かんたんに三角形をかくことができます。
        courseD_artist_nestedLoops1_b: "`くりかえし`の中に ２つ ブロックを 入れて 三角形を かいてみよう。どのブロックを使う？"
        courseD_artist_nestedLoops1_c: すべてのステップを 紙に 書いてみて、くりかえしの中に 入れる パターンを 見つけよう。
      courseD_artist_nestedLoops1a:
        courseD_artist_nestedLoops1a_a: |-
          全部で ６つの三角形を かきます。１つ かき終わったら、60度 曲がって 次の三角形を かきます。

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: くりかえしを使って 三角形を かくと、スタートした じょうたいに もどります。60度曲がれば、どんどん三角形を
          かいていくことが できます。
        courseD_artist_nestedLoops1a_c: 色を変えたいときは、`色は`を使います。見本と 同じ色に しなくても だいじょうぶだよ。
      courseD_artist_nestedLoops1a_2018:
        courseD_artist_nestedLoops1a_b: くりかえしを使って 三角形を かくと、スタートした じょうたいに もどります。60度曲がれば、どんどん三角形を
          かいていくことが できます。
        courseD_artist_nestedLoops1a_c: 色を変えたいときは、`色は`を使います。見本と 同じ色に しなくても だいじょうぶだよ。
      courseD_artist_nestedLoops1a_2019:
        courseD_artist_nestedLoops1a_a: |-
          全部で ６つの三角形を かきます。１つ かき終わったら、60度 曲がって 次の三角形を かきます。

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: くりかえしを使って 三角形を かくと、スタートした じょうたいに もどります。60度曲がれば、どんどん三角形を
          かいていくことが できます。
        courseD_artist_nestedLoops1a_c: 色を変えたいときは、`色は`を使います。見本と 同じ色に しなくても だいじょうぶだよ。
      courseD_artist_nestedLoops2:
        courseD_artist_nestedLoops2_a: 三角形をかく くりかえしを `くりかえし` の中に 入れてみよう。
        courseD_artist_nestedLoops2_b: くりかえしのなかで 三角形を １つかいた後 `曲がる`を 入れるのを わすれないで。
      courseD_artist_nestedLoops2_2018:
        courseD_artist_nestedLoops2_a: 三角形をかく くりかえしを `くりかえし` の中に 入れてみよう。
        courseD_artist_nestedLoops2_b: くりかえしのなかで 三角形を １つかいた後 `曲がる`を 入れるのを わすれないで。
      courseD_artist_nestedLoops2_2019:
        courseD_artist_nestedLoops2_a: 三角形をかく くりかえしを `くりかえし` の中に 入れてみよう。
        courseD_artist_nestedLoops2_b: くりかえしのなかで 三角形を １つかいた後 `曲がる`を 入れるのを わすれないで。
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
        courseD_artist_nestedLoops3_b: '短いプログラムでパズルをクリアするのは、くりかえしの入れ子を使いましょう。 '
        courseD_artist_nestedLoops3_c: "`くりかえし` を使って 正方形を かいたら、40ピクセルジャンプして、また 正方形を
          かきます。これを８回 くりかします。 "
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
        courseD_artist_nestedLoops3_b: '短いプログラムでパズルをクリアするのは、くりかえしの入れ子を使いましょう。 '
        courseD_artist_nestedLoops3_c: "`くりかえし` を使って 正方形を かいたら、40ピクセルジャンプして、また 正方形を
          かきます。これを８回 くりかします。 "
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
        courseD_artist_nestedLoops3_b: '短いプログラムでパズルをクリアするのは、くりかえしの入れ子を使いましょう。 '
        courseD_artist_nestedLoops3_c: "`くりかえし` を使って 正方形を かいたら、40ピクセルジャンプして、また 正方形を
          かきます。これを８回 くりかします。 "
      courseD_artist_nestedLoops4:
        courseD_artist_nestedLoops4_d: まがる**前に**前に進むようにしてね。ぎゃくだと、びみょうに円が ずれてしまいます。
        courseD_artist_nestedLoops4_a: |-
          円をかく方法

          -   360 回 くりかえす
              -   前にすすむ 1 ピクセル
              -   まがる ひだりに 1 度
        courseD_artist_nestedLoops4_b: 次の円を かき始める前に 50ピクセル ジャンプするのを わすれないで。
        courseD_artist_nestedLoops4_c: くりかえしを 入れ子にして 円を ４つかいて。
      courseD_artist_nestedLoops4_2018:
        courseD_artist_nestedLoops4_d: まがる**前に**前に進むようにしてね。ぎゃくだと、びみょうに円が ずれてしまいます。
        courseD_artist_nestedLoops4_a: |-
          円をかく方法

          -   360 回 くりかえす
              -   前にすすむ 1 ピクセル
              -   まがる ひだりに 1 度
        courseD_artist_nestedLoops4_b: 次の円を かき始める前に 50ピクセル ジャンプするのを わすれないで。
        courseD_artist_nestedLoops4_c: くりかえしを 入れ子にして 円を ４つかいて。
      courseD_artist_nestedLoops4_2019:
        courseD_artist_nestedLoops4_d: まがる**前に**前に進むようにしてね。ぎゃくだと、びみょうに円が ずれてしまいます。
        courseD_artist_nestedLoops4_a: |-
          円をかく方法

          -   360 回 くりかえす
              -   前にすすむ 1 ピクセル
              -   まがる ひだりに 1 度
        courseD_artist_nestedLoops4_b: 次の円を かき始める前に 50ピクセル ジャンプするのを わすれないで。
        courseD_artist_nestedLoops4_c: くりかえしを 入れ子にして 円を ４つかいて。
      courseD_artist_nestedLoops5:
        courseD_artist_nestedLoops5_a: |-
          こんなふうにやってみよう

          -   くりかえし 4 回
              -   円をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 90 度
        courseD_artist_nestedLoops5_b: 円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
      courseD_artist_nestedLoops5_2018:
        courseD_artist_nestedLoops5_a: |-
          こんなふうにやってみよう

          -   くりかえし 4 回
              -   円をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 90 度
        courseD_artist_nestedLoops5_b: 円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
      courseD_artist_nestedLoops5_2019:
        courseD_artist_nestedLoops5_a: |-
          こんなふうにやってみよう

          -   くりかえし 4 回
              -   円をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 90 度
        courseD_artist_nestedLoops5_b: 円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
      courseD_artist_nestedLoops7:
        courseD_artist_nestedLoops7_a: ここでも くりかえしの 入れ子を 使います。さいしょに 四角形を かく くりかえしを
          つくって、それを くりかえしの中に入れます。
        courseD_artist_nestedLoops7_b: |-
          くりかえしを入れ子にします。中に入れるのは、四角形をかく くりかえしです。.

          -   くりかえし 6 回
              -   四角形をかく
              -   前にジャンプする **50 ピクセル**
              -   まがる 右に **60 度**
      courseD_artist_nestedLoops7_2018:
        courseD_artist_nestedLoops7_a: ここでも くりかえしの 入れ子を 使います。さいしょに 四角形を かく くりかえしを
          つくって、それを くりかえしの中に入れます。
        courseD_artist_nestedLoops7_b: |-
          くりかえしを入れ子にします。中に入れるのは、四角形をかく くりかえしです。.

          -   くりかえし 6 回
              -   四角形をかく
              -   前にジャンプする **50 ピクセル**
              -   まがる 右に **60 度**
      courseD_artist_nestedLoops7_2019:
        courseD_artist_nestedLoops7_a: ここでも くりかえしの 入れ子を 使います。さいしょに 四角形を かく くりかえしを
          つくって、それを くりかえしの中に入れます。
        courseD_artist_nestedLoops7_b: |-
          くりかえしを入れ子にします。中に入れるのは、四角形をかく くりかえしです。.

          -   くりかえし 6 回
              -   四角形をかく
              -   前にジャンプする **50 ピクセル**
              -   まがる 右に **60 度**
      courseD_artist_nestedLoops8:
        courseD_artist_nestedLoops8_a: ８つの六角形をかくから、次の六角形をかく前に、**45 度** まがります。六角形を8つ
          かいて 一周するから 360÷8で 45度。
        courseD_artist_nestedLoops8_b: わからなくなったら、１つ前のパズルに もどって、どこを かえればいいか 考えてみよう。
        courseD_artist_nestedLoops8_c: |-
          くりかえしの入れ子を使おう

          -   くりかえし 8 回
              -   六角形をかく
              -   前に ジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops8_2018:
        courseD_artist_nestedLoops8_a: ８つの六角形をかくから、次の六角形をかく前に、**45 度** まがります。六角形を8つ
          かいて 一周するから 360÷8で 45度。
        courseD_artist_nestedLoops8_b: わからなくなったら、１つ前のパズルに もどって、どこを かえればいいか 考えてみよう。
        courseD_artist_nestedLoops8_c: |-
          くりかえしの入れ子を使おう

          -   くりかえし 8 回
              -   六角形をかく
              -   前に ジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops8_2019:
        courseD_artist_nestedLoops8_a: ８つの六角形をかくから、次の六角形をかく前に、**45 度** まがります。六角形を8つ
          かいて 一周するから 360÷8で 45度。
        courseD_artist_nestedLoops8_b: わからなくなったら、１つ前のパズルに もどって、どこを かえればいいか 考えてみよう。
        courseD_artist_nestedLoops8_c: |-
          くりかえしの入れ子を使おう

          -   くりかえし 8 回
              -   六角形をかく
              -   前に ジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops9:
        courseD_artist_nestedLoops9_a: 前にやったように くりかえしの 入れ子を 使います。まずは、四角形を かいてみよう。
        courseD_artist_nestedLoops9_b: 四角形を かくループの後に、三角形を かくループを ついかします。
        courseD_artist_nestedLoops9_c: |-
          ２つのくりかえしの入れ子を使います

          -   くりかえし 8 回
              -   四角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
          -   くりかえし 8 回
              -   三角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops9_2018:
        courseD_artist_nestedLoops9_a: 前にやったように くりかえしの 入れ子を 使います。まずは、四角形を かいてみよう。
        courseD_artist_nestedLoops9_b: 四角形を かくループの後に、三角形を かくループを ついかします。
        courseD_artist_nestedLoops9_c: |-
          ２つのくりかえしの入れ子を使います

          -   くりかえし 8 回
              -   四角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
          -   くりかえし 8 回
              -   三角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops9_2019:
        courseD_artist_nestedLoops9_a: 前にやったように くりかえしの 入れ子を 使います。まずは、四角形を かいてみよう。
        courseD_artist_nestedLoops9_b: 四角形を かくループの後に、三角形を かくループを ついかします。
        courseD_artist_nestedLoops9_c: |-
          ２つのくりかえしの入れ子を使います

          -   くりかえし 8 回
              -   四角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
          -   くりかえし 8 回
              -   三角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoopsFP:
        courseD_artist_nestedLoopsFP_a: くりかえしの入れ子を使って、一辺が50ピクセルの六角形を48度まがりながら15個かきます。
        courseD_artist_nestedLoopsFP_b: このパターンは、円（前に１ピクセルすすんで、１度まがるを360回くりかえす）を 使っていることを
          のぞくと、前に やったパターンと 同じです。
        courseD_artist_nestedLoopsFP_c: くりかえしの入れ子を使って、一辺が50ピクセルの五角形を48度まがりながら15個かきます。
      courseD_artist_nestedLoopsFP_2018:
        courseD_artist_nestedLoopsFP_a: くりかえしの入れ子を使って、一辺が50ピクセルの六角形を48度まがりながら15個かきます。
        courseD_artist_nestedLoopsFP_b: このパターンは、円（前に１ピクセルすすんで、１度まがるを360回くりかえす）を 使っていることを
          のぞくと、前に やったパターンと 同じです。
        courseD_artist_nestedLoopsFP_c: くりかえしの入れ子を使って、一辺が50ピクセルの五角形を48度まがりながら15個かきます。
      courseD_artist_nestedLoopsFP_2019:
        courseD_artist_nestedLoopsFP_a: くりかえしの入れ子を使って、一辺が50ピクセルの六角形を48度まがりながら15個かきます。
        courseD_artist_nestedLoopsFP_b: このパターンは、円（前に１ピクセルすすんで、１度まがるを360回くりかえす）を 使っていることを
          のぞくと、前に やったパターンと 同じです。
        courseD_artist_nestedLoopsFP_c: くりかえしの入れ子を使って、一辺が50ピクセルの五角形を48度まがりながら15個かきます。
      courseD_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: はじめに線の色を青にして、一辺が50ピクセルの八角形をかいたら、45度まがりましょう。
        courseD_artist_nestedLoops_challenge1_b: 次に線の色を緑にして、50ピクセル前にすすむと、120度左にまがるを
          使って 三角形をかきます。
        courseD_artist_nestedLoops_challenge1_c: ２つの図形を かいたら、90度まががる前に 50ピクセル前に ジャンプします。
        courseD_artist_nestedLoops_challenge1_d: それをくりかえしの中に入れて、4回繰くりかえすようにすれば かんせいです。
      courseD_artist_nestedLoops_challenge1_2018:
        courseD_artist_nestedLoops_challenge1_a: はじめに線の色を青にして、一辺が50ピクセルの八角形をかいたら、45度まがりましょう。
        courseD_artist_nestedLoops_challenge1_b: 次に線の色を緑にして、50ピクセル前にすすむと、120度左にまがるを
          使って 三角形をかきます。
        courseD_artist_nestedLoops_challenge1_c: ２つの図形を かいたら、90度まががる前に 50ピクセル前に ジャンプします。
        courseD_artist_nestedLoops_challenge1_d: それをくりかえしの中に入れて、4回繰くりかえすようにすれば かんせいです。
      courseD_artist_nestedLoops_challenge1_2019:
        courseD_artist_nestedLoops_challenge1_a: はじめに線の色を青にして、一辺が50ピクセルの八角形をかいたら、45度まがりましょう。
        courseD_artist_nestedLoops_challenge1_b: 次に線の色を緑にして、50ピクセル前にすすむと、120度左にまがるを
          使って 三角形をかきます。
        courseD_artist_nestedLoops_challenge1_c: ２つの図形を かいたら、90度まががる前に 50ピクセル前に ジャンプします。
        courseD_artist_nestedLoops_challenge1_d: それをくりかえしの中に入れて、4回繰くりかえすようにすれば かんせいです。
      courseD_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: 正八角形をかくには、45度まがるを８つ使います。
        courseD_artist_nestedLoops_challenge2_b: 正方形をかくには、90度まがるを4つ使います。
      courseD_artist_nestedLoops_challenge2_2018:
        courseD_artist_nestedLoops_challenge2_a: 正八角形をかくには、45度まがるを８つ使います。
        courseD_artist_nestedLoops_challenge2_b: 正方形をかくには、90度まがるを4つ使います。
      courseD_artist_nestedLoops_challenge2_2019:
        courseD_artist_nestedLoops_challenge2_a: 正八角形をかくには、45度まがるを８つ使います。
        courseD_artist_nestedLoops_challenge2_b: 正方形をかくには、90度まがるを4つ使います。
      courseD_artist_project1:
        courseD_artist_project1_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
        courseD_artist_project1_b: "`うごく まえに` で線がかけて、`前に ジャンプする` ではかけません。"
      courseD_artist_project1_2018:
        courseD_artist_project1_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
        courseD_artist_project1_b: "`うごく まえに` で線がかけて、`前に ジャンプする` ではかけません。"
      courseD_artist_project1_2019:
        courseD_artist_project1_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
        courseD_artist_project1_b: "`うごく まえに` で線がかけて、`前に ジャンプする` ではかけません。"
      courseD_artist_project1a:
        courseD_artist_project1a_a: |-
          左右に 76度曲がるのを 4回くり返すと こんな感じになります。

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ほかのパズルでやった階段のパターンとにてるけど、曲がる角度がちがいます。
      courseD_artist_project1a_2018:
        courseD_artist_project1a_a: |-
          左右に 76度曲がるのを 4回くり返すと こんな感じになります。

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ほかのパズルでやった階段のパターンとにてるけど、曲がる角度がちがいます。
      courseD_artist_project1a_2019:
        courseD_artist_project1a_a: |-
          左右に 76度曲がるのを 4回くり返すと こんな感じになります。

          <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" />
        courseD_artist_project1a_b: ほかのパズルでやった階段のパターンとにてるけど、曲がる角度がちがいます。
      courseD_artist_project2:
        courseD_artist_project2_a: "`うごく まえに` で線がかけて、`前に ジャンプする` ではかけません。"
        courseD_artist_project2_b: はじめに図形をかいてジャンプします。それをループの中に入れて くり返しましょう。
      courseD_artist_project2_2018:
        courseD_artist_project2_a: "`うごく まえに` で線がかけて、`前に ジャンプする` ではかけません。"
        courseD_artist_project2_b: はじめに図形をかいてジャンプします。それをループの中に入れて くり返しましょう。
      courseD_artist_project2_2019:
        courseD_artist_project2_a: "`うごく まえに` で線がかけて、`前に ジャンプする` ではかけません。"
        courseD_artist_project2_b: はじめに図形をかいてジャンプします。それをループの中に入れて くり返しましょう。
      courseD_artist_project2a:
        courseD_artist_project2a_a: |-
          内側のくり返しは4回で、 `まがる みぎに 180度`を加えて、それを`2回 くりかえす`の中に入れます。

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2018:
        courseD_artist_project2a_a: |-
          内側のくり返しは4回で、 `まがる みぎに 180度`を加えて、それを`2回 くりかえす`の中に入れます。

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project2a_2019:
        courseD_artist_project2a_a: |-
          内側のくり返しは4回で、 `まがる みぎに 180度`を加えて、それを`2回 くりかえす`の中に入れます。

          <img src="https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png" width="200px" />
      courseD_artist_project3:
        courseD_artist_project3_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
        courseD_artist_project3_b: |-
          くりかえしの入れ子を使ってみよう。

          線で模様をかいたら、それをくり返して１つの模様をかき、それをくり返しの中に入れてくり返そう。外側のくり返しの最後に、エルサを真ん中に戻す命令を入れよう。

          -   5回くり返すときは、72度曲がります
          -   6回くり返すときは、60度曲がります
      courseD_artist_project3_2018:
        courseD_artist_project3_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
        courseD_artist_project3_b: |-
          くりかえしの入れ子を使ってみよう。

          線で模様をかいたら、それをくり返して１つの模様をかき、それをくり返しの中に入れてくり返そう。外側のくり返しの最後に、エルサを真ん中に戻す命令を入れよう。

          -   5回くり返すときは、72度曲がります
          -   6回くり返すときは、60度曲がります
      courseD_artist_project3_2019:
        courseD_artist_project3_a: "`まがる`のドロップダウンメニューで曲がる方向をえらべるわよ！"
        courseD_artist_project3_b: |-
          くりかえしの入れ子を使ってみよう。

          線で模様をかいたら、それをくり返して１つの模様をかき、それをくり返しの中に入れてくり返そう。外側のくり返しの最後に、エルサを真ん中に戻す命令を入れよう。

          -   5回くり返すときは、72度曲がります
          -   6回くり返すときは、60度曲がります
      courseD_artist_project3a:
        courseD_artist_project3a_a: 戻ってきたとき回る角度を変えてみましょう！20度で18回まわるのはどうかしら？
      courseD_artist_project3a_2018:
        courseD_artist_project3a_a: 戻ってきたとき回る角度を変えてみましょう！20度で18回まわるのはどうかしら？
      courseD_artist_project3a_2019:
        courseD_artist_project3a_a: 戻ってきたとき回る角度を変えてみましょう！20度で18回まわるのはどうかしら？
      courseD_artist_project4:
        courseD_artist_project4_a: |-
          三角形の雪の模様をかいて、36度回転させて五角形の雪の模様を重ねたもの

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          正方形と六角形でかいたもの

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: 1つ目の雪の模様をかいたら、角度を変えて、次の模様をかこう。
      courseD_artist_project4_2018:
        courseD_artist_project4_a: |-
          三角形の雪の模様をかいて、36度回転させて五角形の雪の模様を重ねたもの

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          正方形と六角形でかいたもの

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: 1つ目の雪の模様をかいたら、角度を変えて、次の模様をかこう。
      courseD_artist_project4_2019:
        courseD_artist_project4_a: |-
          三角形の雪の模様をかいて、36度回転させて五角形の雪の模様を重ねたもの

          <img src="https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png" width="200px" />

          正方形と六角形でかいたもの

          <img src="https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png" width="200px" />
        courseD_artist_project4_b: 1つ目の雪の模様をかいたら、角度を変えて、次の模様をかこう。
      courseD_artist_project4a:
        courseD_artist_project4a_a: |-
          ちがう長さの模様を 30度回転させて重ねてみたわ。

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2018:
        courseD_artist_project4a_a: |-
          ちがう長さの模様を 30度回転させて重ねてみたわ。

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project4a_2019:
        courseD_artist_project4a_a: |-
          ちがう長さの模様を 30度回転させて重ねてみたわ。

          <img src="https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png" width="200px" />
      courseD_artist_project5:
        courseD_artist_project4_a: |-
          ２つの六角形と4つの三角形で作った模様

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2018:
        courseD_artist_project4_a: |-
          ２つの六角形と4つの三角形で作った模様

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_project5_2019:
        courseD_artist_project4_a: |-
          ２つの六角形と4つの三角形で作った模様

          <img src="https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png" width="200px" />
      courseD_artist_ramp11:
        courseD_artist_ramp11a: "`前にすすむ 100 ピクセル`の100を200にかえて、へんをかいてください。"
        courseD_artist_ramp11b: |-
          ４つのへんをかくには、`前にすすむ 200 ピクセル`を くりかえしのなかにいれます。くりかえしの回数は４だよ。

          まがるのをわすれないでね！
        courseD_artist_ramp11_c: くりかえしの中に`まがる`を入れてね！
      courseD_artist_ramp12:
        courseD_artist_ramp12_a: 四角形をかいてから三角形をかくか、三角形をかいてから四角形をかくか、やり方は２つ！
        courseD_artist_ramp12_b: ２つのパートに分けて、それぞれで くりかえしを 使おう。
        courseD_artist_ramp12_c: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
      courseD_autorun_binary2_2019:
        courseD_artist_binary2_a: どんなふうに動くのか `実行（じっこう）`をおして見てみよう。
      courseD_autorun_binary3_2019:
        courseD_artist_binary3_a: ツールボックスにある4つのパターの内 １つが 正かいです。
        courseD_artist_binary3_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_autorun_binary4_2019:
        courseD_artist_binary4_a: 一番上の行のさいしょの３マスを見て。全体のパターンをかくために、この３マスのパターンをくりかえすことができるかな？
        courseD_artist_binary4_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_autorun_binary5_2019:
        courseD_artist_binary5_a: どこを かえればいいか 調べるために、プログラムを 実行してみよう。
        courseD_artist_binary5_b: ２つの行を入れかえるだけで、ニコニコ顔になるよ。
        courseD_artist_binary5_c: わからなくなったら、紙に 0と1を 書いて どんな文字列に なっているか 見てみよう。
      courseD_autorun_binary6_2019:
        courseD_artist_binary6_a: 左上からスタートします。くりかえしパターンは、何マスかな？
        courseD_artist_binary6_b: 1文字ふやしては実行して、うまくいくかためしてみよう！
      courseD_autorun_binary7_2019:
        courseD_artist_binary7_a: 左上からスタートします。くりかえしパターンは、何マスかな？
        courseD_artist_binary7_b: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_autorun_binary8_2019:
        courseD_artist_binary8_a: うずまきを かくのに、少し こんらん するかもしれません。このパターンをかくとしたら、１行１行どんなパターンにしますか。
        courseD_artist_binary8_b: どこを かえればいいか 調べるために、プログラムを 実行してみよう。
        courseD_artist_binary8_c: ミスをおそれないで！まちがってもいいから、0と1の文字列を書いて、どうなるか実行してみよう。
      courseD_bee_conditionals1_predict1:
        courseD_bee_conditionals1_a: くもの下にあるのが、花のミツかどうか`もし` を使って調べてみよう。
      courseD_bee_conditionals1_predict1_2018:
        courseD_bee_conditionals1_a: くもの下にあるのが、花のミツかどうか`もし` を使って調べてみよう。
      courseD_bee_conditionals1_predict1_2019:
        courseD_bee_conditionals1_a: くもの下にあるのが、花のミツかどうか`もし` を使って調べてみよう。
      courseD_bee_conditionals2:
        courseD_bee_conditionals2_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals2_a: くもの下に花があることもあるし、ないときもあります。`もし`を使えば、両方のケースに対応することができます。
        courseD_bee_conditionals2_b: "`くりかえし` か `前に道がある間` を使って、前に進んでみよう。"
        courseD_bee_conditionals2_c: くもの下にあるかもしれないのは 花なので、ハチの巣か どうかは 調べなくていいよ。
        courseD_bee_conditionals2_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals2_2018:
        courseD_bee_conditionals2_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals2_a: くもの下に花があることもあるし、ないときもあります。`もし`を使えば、両方のケースに対応することができます。
        courseD_bee_conditionals2_b: "`くりかえし` か `前に道がある間` を使って、前に進んでみよう。"
        courseD_bee_conditionals2_c: くもの下にあるかもしれないのは 花なので、ハチの巣か どうかは 調べなくていいよ。
        courseD_bee_conditionals2_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals2_2019:
        courseD_bee_conditionals2_a: くもの下に花があることもあるし、ないときもあります。`もし`を使えば、両方のケースに対応することができます。
        courseD_bee_conditionals2_c: くもの下にあるかもしれないのは 花なので、ハチの巣か どうかは 調べなくていいよ。
      courseD_bee_conditionals3:
        courseD_bee_conditionals3_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals3_a: "`もし`文を使えば、そこに花があるかどうか調べることができます。"
        courseD_bee_conditionals3_b: "`くりかえし` か `前に道がある間` の どちらか すきなほうを使って、前に進んでみよう。"
        courseD_bee_conditionals3_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
        courseD_bee_conditionals3_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals3_2018:
        courseD_bee_conditionals3_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals3_a: "`もし`文を使えば、そこに花があるかどうか調べることができます。"
        courseD_bee_conditionals3_b: "`くりかえし` か `前に道がある間` の どちらか すきなほうを使って、前に進んでみよう。"
        courseD_bee_conditionals3_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
        courseD_bee_conditionals3_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals3_2019:
        courseD_bee_conditionals3_a: "`もし`文を使えば、そこに花があるかどうか調べることができます。"
        courseD_bee_conditionals3_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseD_bee_conditionals4:
        courseD_bee_conditionals4_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals4_a: 花は見えているけど、くものときと同じように花があるか調べよう。
        courseD_bee_conditionals4_b: 'くり返しの中で`もし`を使って、花があるかどうか調べよう。 '
        courseD_bee_conditionals4_c: <xml><block type="maze_untilBlocked"/></xml>
          blockを使って、前に進むの と 花があるか 調べるのを 繰り返そう。花があれば、ハチは何をすればいいかな？
        courseD_bee_conditionals4_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals4_2018:
        courseD_bee_conditionals4_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals4_a: 花は見えているけど、くものときと同じように花があるか調べよう。
        courseD_bee_conditionals4_b: 'くり返しの中で`もし`を使って、花があるかどうか調べよう。 '
        courseD_bee_conditionals4_c: <xml><block type="maze_untilBlocked"/></xml>
          blockを使って、前に進むの と 花があるか 調べるのを 繰り返そう。花があれば、ハチは何をすればいいかな？
        courseD_bee_conditionals4_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals4_2019:
        courseD_bee_conditionals4_a: 花は見えているけど、くものときと同じように花があるか調べよう。
        courseD_bee_conditionals4_b: 'くり返しの中で`もし`を使って、花があるかどうか調べよう。 '
      courseD_bee_conditionals5:
        courseD_bee_conditionals5_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals5_a: どの通り道でも おなじろんりになるように 考えてみよう。くりかえしを 入れ子にして、外がわのくりかえしには、`くりかえし`、内がわには
          `前に道がある間`を 使おう。ハチがすべてのへんで ミツを集めるには、何回 くりかえせばいいかな？
        courseD_bee_conditionals5_c: 花がある道をすべて通るには、`くりかえし 3 回`でOKです。くりかえしの中に `前に道がある間`を入れて通り道を進みます。前に進むために、`前にすすむ`を入れましょう。道を進んで間、ハチは`もし
          花で`で花があるか調べて、花があれば、`花のミツをとる`を行います。
        courseD_bee_conditionals5_b: "`前に道がある間`のループの中で行うのは、前に進むこと と 花があるか調べることです。花があるか調べるのは、どうすればいいかな？もし花があったら、どうする？"
        courseD_bee_conditionals5_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals5_2018:
        courseD_bee_conditionals5_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals5_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals6:
        courseD_bee_conditionals6_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals6_a: "`もし`を使って、くもの下にあるが ハチの巣かどうか 調べてみよう。"
        courseD_bee_conditionals6_b: 今回は、くもの下にあるのは 花なのか 調べる ひつようはありません。
        courseD_bee_conditionals6_c: くりかえしを使って、プログラムを かんたんに できるかな？
        courseD_bee_conditionals6_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals6_2018:
        courseD_bee_conditionals6_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals6_a: "`もし`を使って、くもの下にあるが ハチの巣かどうか 調べてみよう。"
        courseD_bee_conditionals6_b: 今回は、くもの下にあるのは 花なのか 調べる ひつようはありません。
        courseD_bee_conditionals6_c: くりかえしを使って、プログラムを かんたんに できるかな？
        courseD_bee_conditionals6_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals6_2019:
        courseD_bee_conditionals6_a: "`もし`を使って、くもの下にあるが ハチの巣かどうか 調べてみよう。"
        courseD_bee_conditionals6_b: 今回は、くもの下にあるのは 花なのか 調べる ひつようはありません。
        courseD_bee_conditionals6_c: くりかえしを使って、プログラムを かんたんに できるかな？
      courseD_bee_conditionals7:
        courseD_bee_conditionals7_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals7_a: |-
          **ちゅうい** このパズルは、実行されるたびに くもの下にあるものが 変わります。

          `もし やること/でなければ` を使って、このパズルをクリアしよう。
        courseD_bee_conditionals7_b: くもの下にあるのが 花でなかったら、ハチの巣が あるよ。なにもなしは 考えなくていいよ。
        courseD_bee_conditionals7_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals7_2018:
        courseD_bee_conditionals7_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals7_a: |-
          **ちゅうい** このパズルは、実行されるたびに くもの下にあるものが 変わります。

          `もし やること/でなければ` を使って、このパズルをクリアしよう。
        courseD_bee_conditionals7_b: くもの下にあるのが 花でなかったら、ハチの巣が あるよ。なにもなしは 考えなくていいよ。
        courseD_bee_conditionals7_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals7_2019:
        courseD_bee_conditionals7_a: |-
          **ちゅうい** このパズルは、実行されるたびに くもの下にあるものが 変わります。

          `もし やること/でなければ` を使って、このパズルをクリアしよう。
        courseD_bee_conditionals7_b: くもの下にあるのが 花でなかったら、ハチの巣が あるよ。なにもなしは 考えなくていいよ。
      courseD_bee_conditionals7_predict2:
        courseD_bee_conditionals7_a: |-
          **ちゅうい** このパズルは、実行されるたびに くもの下にあるものが 変わります。

          `もし やること/でなければ` を使って、このパズルをクリアしよう。
      courseD_bee_conditionals7_predict2_2018:
        courseD_bee_conditionals7_a: |-
          **ちゅうい** このパズルは、実行されるたびに くもの下にあるものが 変わります。

          `もし やること/でなければ` を使って、このパズルをクリアしよう。
      courseD_bee_conditionals7_predict2_2019:
        courseD_bee_conditionals7_a: |-
          **ちゅうい** このパズルは、実行されるたびに くもの下にあるものが 変わります。

          `もし やること/でなければ` を使って、このパズルをクリアしよう。
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals8_a: |-
          **注意** このパズルは実行するたびに変わります。

          このパズルをクリアするには、条件ブロック (`もし` または `もし やること/でなければ`) を使います。
        courseD_bee_conditionals8_b: |-
          1つの条件判断文で、ミツかハチミツか、それとも、何もなしか判断すことはできません。

          道の角では、ミツかハチミツか調べます。
        courseD_bee_conditionals8_c: 道の長さに関係なく 全部の道を通るには、どうすればいいかな？
        courseD_bee_conditionals8_d: |-
          さいしょの目の前のくもはパスして、つきあたりのくもまで進んでみよう。

          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_hintVid1: わからないときは、ビデオを見てみよう！
        courseD_bee_conditionals8_a: |-
          **注意** このパズルは実行するたびに変わります。

          このパズルをクリアするには、条件ブロック (`もし` または `もし やること/でなければ`) を使います。
        courseD_bee_conditionals8_b: |-
          1つの条件判断文で、ミツかハチミツか、それとも、何もなしか判断すことはできません。

          道の角では、ミツかハチミツか調べます。
        courseD_bee_conditionals8_c: 道の長さに関係なく 全部の道を通るには、どうすればいいかな？
        courseD_bee_conditionals8_d: |-
          さいしょの目の前のくもはパスして、つきあたりのくもまで進んでみよう。

          ![](https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png)
        courseD_bee_conditionals8_hintVid2: ビデオを見てパズルをクリアしよう。
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: |-
          **注意** このパズルは実行するたびに変わります。

          このパズルをクリアするには、条件ブロック (`もし` または `もし やること/でなければ`) を使います。
        courseD_bee_conditionals8_b: |-
          1つの条件判断文で、ミツかハチミツか、それとも、何もなしか判断すことはできません。

          道の角では、ミツかハチミツか調べます。
      courseD_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: 木をさけて、すべての花とハチの巣を通るにはどうすればいいかな？一番いいのは、うずまきみたいに進むこと。
        courseD_bee_conditionals_challenge1_b: 花がある場所、ハチの巣がある場所、何もないところがあるから、`もし やること/でなければ`をくりかえして、その場所が
          どうなっているのか 調べてね。
      courseD_bee_conditionals_challenge1_2018:
        courseD_bee_conditionals_challenge1_a: 木をさけて、すべての花とハチの巣を通るにはどうすればいいかな？一番いいのは、うずまきみたいに進むこと。
        courseD_bee_conditionals_challenge1_b: 花がある場所、ハチの巣がある場所、何もないところがあるから、`もし やること/でなければ`をくりかえして、その場所が
          どうなっているのか 調べてね。
      courseD_bee_conditionals_challenge1_2019:
        courseD_bee_conditionals_challenge1_a: 木をさけて、すべての花とハチの巣を通るにはどうすればいいかな？一番いいのは、うずまきみたいに進むこと。
        courseD_bee_conditionals_challenge1_b: 花がある場所、ハチの巣がある場所、何もないところがあるから、`もし やること/でなければ`をくりかえして、その場所が
          どうなっているのか 調べてね。
      courseD_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          `もし 花で` と同じく、`以下の間 花のミツ > 0`は、花があるとこで動くよ。花がなくなるまで動いて、花がなくなったら くりかえしを やめるよ。これをためしてみて。

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_conditionals_challenge2_2018:
        courseD_bee_conditionals_challenge1_b: |-
          `もし 花で` と同じく、`以下の間 花のミツ > 0`は、花があるとこで動くよ。花がなくなるまで動いて、花がなくなったら くりかえしを やめるよ。これをためしてみて。

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_conditionals_challenge2_2019:
        courseD_bee_conditionals_challenge1_b: |-
          `もし 花で` と同じく、`以下の間 花のミツ > 0`は、花があるとこで動くよ。花がなくなるまで動いて、花がなくなったら くりかえしを やめるよ。これをためしてみて。

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      courseD_bee_debugging_challenge1:
        courseD_bee_debugging_challenge1_a: 灰色の部分のプログラムはどんな風に動くかな？ハチが後ろにすすむ理由を考えてみて。花の上と通ったらハチはいくつミツを集めますか？
        courseD_bee_debugging_challenge1_b: 同じパターンでハチをバックさせてみよう。ハチの巣の上を通た時、ハチミツはいくつ必要？
        courseD_bee_debugging_challenge1_c: |-
          ハチが下の段のはしっこまで行ったら、次のコマンドをくり返そう。

          -   くりかえし 2 回
              -   前に すすむ
              -   ハチミツを 3回 つくる
          -   後ろに すすむ
      courseD_bee_debugging_challenge1a:
        courseD_bee_debugging_challenge1_a: 灰色の部分のプログラムはどんな風に動くかな？ハチが後ろにすすむ理由を考えてみて。花の上と通ったらハチはいくつミツを集めますか？
        courseD_bee_debugging_challenge1_b: 花のミツを集めて ハチミツを 作る くりかえしのパターンを見つけて、パズルをクリアしよう。
        courseD_bee_debugging_challenge1_c: |-
          さいごの列まで行ったら、下のパターンをくりかえしてみよう。

          <xml><block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_honey"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </next>
                            </block></xml>
      courseD_bee_nestedLoops1:
        courseD_bee_nestedLoops1_a: わからない？ そんな時は、"ステップ"ボタンで プログラムを1行ずつ動かして どうなるか見てみよう。
        courseD_bee_nestedLoops1_b: 最初に四角形に進むプログラムを書いて、それに、すべてのミツを集めるためのくり返しを追加できるかな？
        courseD_bee_nestedLoops1_c: 花のあるところに着いたら、 `花のみつを とる` でミツを集めよう。
      courseD_bee_nestedLoops1_2018:
        courseD_bee_nestedLoops1_a: わからない？ そんな時は、"ステップ"ボタンで プログラムを1行ずつ動かして どうなるか見てみよう。
        courseD_bee_nestedLoops1_b: 最初に四角形に進むプログラムを書いて、それに、すべてのミツを集めるためのくり返しを追加できるかな？
        courseD_bee_nestedLoops1_c: 花のあるところに着いたら、 `花のみつを とる` でミツを集めよう。
      courseD_bee_nestedLoops1_2019:
        courseD_bee_nestedLoops1_a: わからない？ そんな時は、"ステップ"ボタンで プログラムを1行ずつ動かして どうなるか見てみよう。
        courseD_bee_nestedLoops1_b: 最初に四角形に進むプログラムを書いて、それに、すべてのミツを集めるためのくり返しを追加できるかな？
        courseD_bee_nestedLoops1_c: 花のあるところに着いたら、 `花のみつを とる` でミツを集めよう。
      courseD_bee_nestedLoops1a:
        courseD_bee_nestedLoops1_a: わからない？ そんな時は、"ステップ"ボタンで プログラムを1行ずつ動かして どうなるか見てみよう。
        courseD_bee_nestedLoops1_c: 花のあるところに着いたら、 `花のみつを とる` でミツを集めよう。
      courseD_bee_nestedLoops1a_2018:
        courseD_bee_nestedLoops1_a: わからない？ そんな時は、"ステップ"ボタンで プログラムを1行ずつ動かして どうなるか見てみよう。
        courseD_bee_nestedLoops1_c: 花のあるところに着いたら、 `花のみつを とる` でミツを集めよう。
      courseD_bee_nestedLoops1a_2019:
        courseD_bee_nestedLoops1_a: わからない？ そんな時は、"ステップ"ボタンで プログラムを1行ずつ動かして どうなるか見てみよう。
        courseD_bee_nestedLoops1_c: 花のあるところに着いたら、 `花のみつを とる` でミツを集めよう。
      courseD_bee_nestedLoops2:
        courseD_bee_nestedLoops2_a: "`くりかえし` の中に、もう一つくり返しを作ってみよう。"
        courseD_bee_nestedLoops2_b: どこをくり返しの中に入れればいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_bee_nestedLoops2_c: くり返しのなかには、複数のブロックを入れることができます。
      courseD_bee_nestedLoops2_2018:
        courseD_bee_nestedLoops2_a: "`くりかえし` の中に、もう一つくり返しを作ってみよう。"
        courseD_bee_nestedLoops2_b: どこをくり返しの中に入れればいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_bee_nestedLoops2_c: くり返しのなかには、複数のブロックを入れることができます。
      courseD_bee_nestedLoops2_2019:
        courseD_bee_nestedLoops2_a: "`くりかえし` の中に、もう一つくり返しを作ってみよう。"
        courseD_bee_nestedLoops2_b: どこをくり返しの中に入れればいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_bee_nestedLoops2_c: くり返しのなかには、複数のブロックを入れることができます。
      courseD_bee_nestedLoops7:
        courseD_bee_nestedLoops7_a: "`前に すすむ`くり返しの中に、 `花のミツをとる`のくり返しを入れます。"
        courseD_bee_nestedLoops7_b: "`くりかえし`は、3つ使います。"
        courseD_bee_nestedLoops7_c: |-
          こんなふうに3つの入れ子にしよう

          -   くりかえし 4回
              -   くりかえし 3回
                  -   くりかえし 12回
                      -   花のミツをとる
                  -   前に すすむ
              -   右に 曲がる
      courseD_bee_nestedLoops7_2018:
        courseD_bee_nestedLoops7_a: "`前に すすむ`くり返しの中に、 `花のミツをとる`のくり返しを入れます。"
        courseD_bee_nestedLoops7_b: "`くりかえし`は、3つ使います。"
        courseD_bee_nestedLoops7_c: |-
          こんなふうに3つの入れ子にしよう

          -   くりかえし 4回
              -   くりかえし 3回
                  -   くりかえし 12回
                      -   花のミツをとる
                  -   前に すすむ
              -   右に 曲がる
      courseD_bee_nestedLoops7_2019:
        courseD_bee_nestedLoops7_a: "`前に すすむ`くり返しの中に、 `花のミツをとる`のくり返しを入れます。"
        courseD_bee_nestedLoops7_b: "`くりかえし`は、3つ使います。"
        courseD_bee_nestedLoops7_c: |-
          こんなふうに3つの入れ子にしよう

          -   くりかえし 4回
              -   くりかえし 3回
                  -   くりかえし 12回
                      -   花のミツをとる
                  -   前に すすむ
              -   右に 曲がる
      courseD_collector_debugging1:
        courseD_collector_debugging1_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
        courseD_collector_debugging1_b: "`くりかえし`を 使えるところは、ほかに ありませんか？"
        courseD_collector_debugging1_c: たかもののある場所で `あつめる` を 使うことで でたからものを １つゲットできます。
      courseD_collector_debugging10_predict1:
        courseD_collector_debugging9_a: パズルをクリアする方法は いくつかあるけど、どのやり方でも 曲がるを 追加しないとね。
        courseD_collector_debugging9_b: １ステップ毎に動かして、思い通りに 動いているか たしかめよう。
      courseD_collector_debugging1a_2018:
        courseD_collector_debugging1_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
        courseD_collector_debugging1_c: たかもののある場所で `あつめる` を 使うことで でたからものを １つゲットできます。
      courseD_collector_debugging1a_2019:
        courseD_collector_debugging1_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
        courseD_collector_debugging1_c: たかもののある場所で `あつめる` を 使うことで でたからものを １つゲットできます。
      courseD_collector_debugging2:
        courseD_collector_debugging2_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
        courseD_collector_debugging2_b: "`くりかえし`を 使えるところは、ほかに ありませんか？"
        courseD_collector_debugging2_c: １つのへんにある たからものを 集めよう。それを ほかの ２つへんでも くりかえしすことが
          できるかな？
      courseD_collector_debugging2a_2018:
        courseD_collector_debugging2a_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
      courseD_collector_debugging2a_2019:
        courseD_collector_debugging2a_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
      courseD_collector_debugging3:
        courseD_collector_debugging3_a: ローレルの動きに 足りない ところは ないかな？そこを かえたら どうなるかな？
        courseD_collector_debugging3_b: くりかえしを入れ子にして、プログラムを かんたんに してみよう。
      courseD_collector_debugging3a_2018:
        courseD_collector_debugging3_a: ローレルの動きに 足りない ところは ないかな？そこを かえたら どうなるかな？
      courseD_collector_debugging3a_2019:
        courseD_collector_debugging3_a: ローレルの動きに 足りない ところは ないかな？そこを かえたら どうなるかな？
      courseD_collector_debugging4:
        courseD_collector_debugging4_a: |-
          まずは、１列にならんだ たからものを あつめている ところを デバックしてみよう。

          どこが まちがっているかな？

          そこをなおしたら、今度はどうなるかな？
        courseD_collector_debugging4_b: |-
          階段みたいに進むのがむつかしいときは、実行するブロックを声に出しながら、指で画面をなぞってみよう。

          曲がるの場所があったことを わすれないでね！
        courseD_collector_debugging4_c: くりかえしの中のブロックが １つ 足りません。何が 足りないか わかるかな？
      courseD_collector_debugging4a_2018:
        courseD_collector_debugging4_a: |-
          まずは、１列にならんだ たからものを あつめている ところを デバックしてみよう。

          どこが まちがっているかな？

          そこをなおしたら、今度はどうなるかな？
        courseD_collector_debugging4_b: |-
          階段みたいに進むのがむつかしいときは、実行するブロックを声に出しながら、指で画面をなぞってみよう。

          曲がるの場所があったことを わすれないでね！
      courseD_collector_debugging4a_2019:
        courseD_collector_debugging4_a: |-
          まずは、１列にならんだ たからものを あつめている ところを デバックしてみよう。

          どこが まちがっているかな？

          そこをなおしたら、今度はどうなるかな？
        courseD_collector_debugging4_b: |-
          階段みたいに進むのがむつかしいときは、実行するブロックを声に出しながら、指で画面をなぞってみよう。

          曲がるの場所があったことを わすれないでね！
      courseD_collector_debugging5:
        courseD_collector_debugging5_a: |-
          プログラムをよく見て。

          実行したらどうなる？

          どうなると思った？

          話すことはできる?
        courseD_collector_debugging5_b: さいしょのくりかえしは思い通りに動くけど、その後、左に曲がるところは どうかな？
      courseD_collector_debugging6:
        courseD_collector_debugging6_a: |-
          "ステップ" ボタンをクリックしてプログラムを実行してみよう。さいしょの 動きはあってる？

          つぎの動きはどうかな？

          どこで まちがったのかな？
        courseD_collector_debugging6_b: さいしょを なおせば うまくいくように 見えるけど、ほかにも なおす ところが あるよ。
          `あつめる`を 何回も くりかしているところは あってるかな？
      courseD_collector_debugging6a_2018:
        courseD_collector_debugging6_a: |-
          "ステップ" ボタンをクリックしてプログラムを実行してみよう。さいしょの 動きはあってる？

          つぎの動きはどうかな？

          どこで まちがったのかな？
      courseD_collector_debugging6a_2019:
        courseD_collector_debugging6_a: |-
          "ステップ" ボタンをクリックしてプログラムを実行してみよう。さいしょの 動きはあってる？

          つぎの動きはどうかな？

          どこで まちがったのかな？
      courseD_collector_debugging8:
        courseD_collector_debugging8_a: くりかえしを使えば、かんたんにできるところが あるのが わかるかな？
        courseD_collector_debugging8_b: くりかえしの入れ子を使えば、プログラムを短くできるよ。
      courseD_collector_debugging9:
        courseD_collector_debugging9_a: パズルをクリアする方法は いくつかあるけど、どのやり方でも 曲がるを 追加しないとね。
        courseD_collector_debugging9_b: １ステップ毎に動かして、思い通りに 動いているか たしかめよう。
      courseD_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "**2つ**のマスから**2つづつ**宝石を集めます\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\n次のブロックを使おう。\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>"
        courseD_collector_debugging_challenge2_b: "次に道にそって宝石を集めます。\n\n![](<https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04
          AM.png>)\nさっき作ったプログラムに 次のブロックを加えます。\n\n<xml><block type=\"maze_move\">\n
          \                   <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement
          name=\"DO\">\n          \n        </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_c: "最後に他の道にある たからものを 集めます。さらに 次のブロックを
          加えます。\n\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n
          \             </block>\n      <block type=\"controls_repeat\">\n        <title
          name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          \n
          \       </statement>\n      </block>\n</xml>"
        courseD_collector_debugging_challenge2_d: |-
          これが、答え。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">4</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">2</title>
                          <statement name="DO">
                            <block type="maze_move">
                              <title name="DIR">moveForward</title>
                              <next>
                                <block type="controls_repeat">
                                  <title name="TIMES">2</title>
                                  <statement name="DO">
                                    <block type="collector_collect"/>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_move">
                              <title name="DIR">moveBackward</title>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_a: 1つまたはいくつかのコマンドを`くりかえし`の中に入れれることを思い出して。`くりかえし`を`くりかえし`することができます。
        courseD_bee_nested_loops_challenge2_b: 4つの宝石を全部集めるには、まず、外側の通路に出ます。左または右に曲がって、最初の宝物から次の宝物に行く
          入れ子の中身を作ります。それを何回か くり返せば、どうくつを_1周_することができます。
        courseD_bee_nested_loops_challenge2_c: 1つの `あつめる`と2つの曲がるで、すべての宝物を集めることができます。
        courseD_bee_nested_loops_challenge2_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_a: 1つまたはいくつかのコマンドを`くりかえし`の中に入れれることを思い出して。`くりかえし`を`くりかえし`することができます。
        courseD_bee_nested_loops_challenge2_b: 4つの宝石を全部集めるには、まず、外側の通路に出ます。左または右に曲がって、最初の宝物から次の宝物に行く
          入れ子の中身を作ります。それを何回か くり返せば、どうくつを_1周_することができます。
        courseD_bee_nested_loops_challenge2_c: 1つの `あつめる`と2つの曲がるで、すべての宝物を集めることができます。
        courseD_bee_nested_loops_challenge2_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_a: 1つまたはいくつかのコマンドを`くりかえし`の中に入れれることを思い出して。`くりかえし`を`くりかえし`することができます。
        courseD_bee_nested_loops_challenge2_b: 4つの宝石を全部集めるには、まず、外側の通路に出ます。左または右に曲がって、最初の宝物から次の宝物に行く
          入れ子の中身を作ります。それを何回か くり返せば、どうくつを_1周_することができます。
        courseD_bee_nested_loops_challenge2_c: 1つの `あつめる`と2つの曲がるで、すべての宝物を集めることができます。
        courseD_bee_nested_loops_challenge2_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2a:
        courseD_collector_nested_loops_challenge2a_a: 1つまたはいくつかのコマンドを`くりかえし`の中に入れれることを思い出して。`くりかえし`を`くりかえし`することができます。
        courseD_collector_nested_loops_challenge2a_b: たからものを ２つ 集めるプログラムに ブロックを つかいしないで、４つ
          全部 集めれるようにするには どうすればいいかな？
      courseD_collector_ramp10:
        courseD_artist_ramp10_a: |-
          １つのへんを進むとき、`前にすすむ` を４つ使うのではなく、こんなふうに、`くりかえし` のなかに`前にすすむ` を １つだけ 入れてみよう。

          <xml><block type="controls_repeat">
                                                      <title name="TIMES">4</title>
                                                      <statement name="DO">
                                                        <block type="maze_moveForward"/>
                                                      </statement>
                                                    </block></xml>
        courseD_artist_ramp10_b: 角をまがって前に進むとき、たからものを集めるをわすれないでね。
        courseD_artist_ramp10_c: プログラムをもっとシンプルにするには、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseD_collector_ramp8:
        courseD_collector_ramp8_a: たからもののあるマスに着いたら、 `あつめる`を使ってたからものを集めよう。`あつめる`を使うのは、１回だけじゃないよ。
        courseD_collector_ramp8_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseD_collector_ramp9:
        courseD_collector_ramp9_a: ローレルを １つ目の たからものの所まで 行かせて、たからものを 集めよう。もう一度 同じことを
          くり返して、２つ目の たからものを 集めることが できるかな？
        courseD_collector_ramp9_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseD_farmer_condLoops1:
        courseD_farmer_condLoops1_a: くり返しを使って、トウモロコシがなってるか5回調べます。
        courseD_farmer_condLoops1_b: "`もし トウモロコシがあります。`を使わないと、トウモロコシのないところで収かくしてしまいます。"
      courseD_farmer_condLoops1_2018:
        courseD_farmer_condLoops1_a: くり返しを使って、トウモロコシがなってるか5回調べます。
        courseD_farmer_condLoops1_b: "`もし トウモロコシがあります。`を使わないと、トウモロコシのないところで収かくしてしまいます。"
      courseD_farmer_condLoops1_2019:
        courseD_farmer_condLoops1_a: くり返しを使って、トウモロコシがなってるか5回調べます。
        courseD_farmer_condLoops1_b: "`もし トウモロコシがあります。`を使わないと、トウモロコシのないところで収かくしてしまいます。"
      courseD_farmer_condLoops2:
        courseD_farmer_condLoops2_a: '一番いい方法は、 `もし`の入れ子を使うことです。  '
        courseD_farmer_condLoops2_b: "`もし やること/でなければ` を1つと`もし`を1つ使います。"
        courseD_farmer_condLoops2_c: |-
          `もし` は、こんな風に使います。

          -   もし トウモロコシがあります
              -   ピック トウモロコシ
          -   でなければ
              -   もし レタスがあります
                  -   ピック レタス

          何もなければ、収かくはしません。
      courseD_farmer_condLoops2_2018:
        courseD_farmer_condLoops2_a: '一番いい方法は、 `もし`の入れ子を使うことです。  '
        courseD_farmer_condLoops2_b: "`もし やること/でなければ` を1つと`もし`を1つ使います。"
        courseD_farmer_condLoops2_c: |-
          `もし` は、こんな風に使います。

          -   もし トウモロコシがあります
              -   ピック トウモロコシ
          -   でなければ
              -   もし レタスがあります
                  -   ピック レタス

          何もなければ、収かくはしません。
      courseD_farmer_condLoops2_2019:
        courseD_farmer_condLoops2_a: '一番いい方法は、 `もし`の入れ子を使うことです。  '
        courseD_farmer_condLoops2_b: "`もし やること/でなければ` を1つと`もし`を1つ使います。"
        courseD_farmer_condLoops2_c: |-
          `もし` は、こんな風に使います。

          -   もし トウモロコシがあります
              -   ピック トウモロコシ
          -   でなければ
              -   もし レタスがあります
                  -   ピック レタス

          何もなければ、収かくはしません。
      courseD_farmer_condLoops3:
        courseD_farmer_condLoops3_a: |-
          `もし`を三重の入れ子にして、すべての作物をゲットしよう。

          `もし`をもうひとつの`もし`の中に入れて、さらに それを`もし`の中に 入れます。
        courseD_farmer_condLoops3_b: "`もし やること/でなければ` を2つと`もし`を1つ使います。"
      courseD_farmer_condLoops3_2018:
        courseD_farmer_condLoops3_a: |-
          `もし`を三重の入れ子にして、すべての作物をゲットしよう。

          `もし`をもうひとつの`もし`の中に入れて、さらに それを`もし`の中に 入れます。
        courseD_farmer_condLoops3_b: "`もし やること/でなければ` を2つと`もし`を1つ使います。"
      courseD_farmer_condLoops3_2019:
        courseD_farmer_condLoops3_a: |-
          `もし`を三重の入れ子にして、すべての作物をゲットしよう。

          `もし`をもうひとつの`もし`の中に入れて、さらに それを`もし`の中に 入れます。
        courseD_farmer_condLoops3_b: "`もし やること/でなければ` を2つと`もし`を1つ使います。"
      courseD_farmer_condLoops4:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          房にいくつレタスがなっているか わかりません。

          `以下の間 レタスがあります` を使えば、レタスがなくなるまで収かくすることができます。
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "`以下の間`は、何もない場所でも使えます。レタスがなければ、何も収かくせず
          次の命令を実行します。"
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: すべての作物のところに行くには、`前に道がある間`
          か `くりかえし` を使います。
      courseD_farmer_condLoops4_2018:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          房にいくつレタスがなっているか わかりません。

          `以下の間 レタスがあります` を使えば、レタスがなくなるまで収かくすることができます。
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "`以下の間`は、何もない場所でも使えます。レタスがなければ、何も収かくせず
          次の命令を実行します。"
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: すべての作物のところに行くには、`前に道がある間`
          か `くりかえし` を使います。
      courseD_farmer_condLoops4_2019:
        grade3_RunningFarm_4courseD_farmer_condLoops4: |-
          房にいくつレタスがなっているか わかりません。

          `以下の間 レタスがあります` を使えば、レタスがなくなるまで収かくすることができます。
        grade3_RunningFarm_4courseD_farmer_condLoops4_b: "`以下の間`は、何もない場所でも使えます。レタスがなければ、何も収かくせず
          次の命令を実行します。"
        grade3_RunningFarm_4courseD_farmer_condLoops4_c: すべての作物のところに行くには、`前に道がある間`
          か `くりかえし` を使います。
      courseD_farmer_condLoops5:
        courseD_farmer_condLoops5_a: "`までを くりまえします カボチャがあります。`の使い方は、わかりますか？"
        courseD_farmer_condLoops5_b: 1つの房から1つ以上 トウモロコシかレタスが収穫できます。`以下の間`を使って、全部収かくしよう！
      courseD_farmer_condLoops5_2018:
        courseD_farmer_condLoops5_a: "`までを くりまえします カボチャがあります。`の使い方は、わかりますか？"
        courseD_farmer_condLoops5_b: 1つの房から1つ以上 トウモロコシかレタスが収穫できます。`以下の間`を使って、全部収かくしよう！
      courseD_farmer_condLoops5_2019:
        courseD_farmer_condLoops5_a: "`までを くりまえします カボチャがあります。`の使い方は、わかりますか？"
        courseD_farmer_condLoops5_b: 1つの房から1つ以上 トウモロコシかレタスが収穫できます。`以下の間`を使って、全部収かくしよう！
      courseD_farmer_condLoops6:
        courseD_farmer_condLoops6_a: "`以下の間 トウモロコシがあります。` は途中になっているトウモロコシを収かくするのに役立ちます。トウモロコシがなければ、何もしません。"
        courseD_farmer_condLoops6_b: 前に進む前に`もし`で 目の前に道があるかどうか 調べよう。
      courseD_farmer_condLoops7:
        courseD_farmer_condLoops7_a: |-
          注意 らせん状に行くのがもっとも簡単です。

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: 道を最後まで行くには、`前に道がある間`を使います。
      courseD_farmer_condLoops7_2018:
        courseD_farmer_condLoops7_a: |-
          注意 らせん状に行くのがもっとも簡単です。

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: 道を最後まで行くには、`前に道がある間`を使います。
      courseD_farmer_condLoops7_2019:
        courseD_farmer_condLoops7_a: |-
          注意 らせん状に行くのがもっとも簡単です。

          ![](https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png)
        courseD_farmer_condLoops7_b: 道を最後まで行くには、`前に道がある間`を使います。
      courseD_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: '"ステップ"ボタンでプログラムを実行してみよう。'
        courseD_farmer_condLoops_challenge1_b: カボチャがあれば、`ピック カボチャ`します。カボチャじゃなければ、何をしますか？
      courseD_farmer_condLoops_challenge1_2018:
        courseD_farmer_condLoops_challenge1_a: '"ステップ"ボタンでプログラムを実行してみよう。'
        courseD_farmer_condLoops_challenge1_b: カボチャがあれば、`ピック カボチャ`します。カボチャじゃなければ、何をしますか？
      courseD_farmer_condLoops_challenge1_2019:
        courseD_farmer_condLoops_challenge1_a: '"ステップ"ボタンでプログラムを実行してみよう。'
        courseD_farmer_condLoops_challenge1_b: カボチャがあれば、`ピック カボチャ`します。カボチャじゃなければ、何をしますか？
      courseD_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: "`以下の間`でくり返せば、その場所にある作物を すべて収かくすることができます。"
      courseD_farmer_condLoops_challenge2_2018:
        courseD_farmer_condLoops_challenge2_a: "`以下の間`でくり返せば、その場所にある作物を すべて収かくすることができます。"
      courseD_farmer_condLoops_challenge2_2019:
        courseD_farmer_condLoops_challenge2_a: "`以下の間`でくり返せば、その場所にある作物を すべて収かくすることができます。"
      courseD_farmer_while1:
        courseD_farmer_while1_a: 土の山のところに行くには、4回前にすすみます。 `くりかえし` を使ってプログラムできるかな？
        courseD_farmer_while1_b: 土の山のところまで行ったら、`つちをたたづける` で土をかたづけましょう。
      courseD_farmer_while1_2018:
        courseD_farmer_while1_a: 土の山のところに行くには、4回前にすすみます。 `くりかえし` を使ってプログラムできるかな？
        courseD_farmer_while1_b: 土の山のところまで行ったら、`つちをたたづける` で土をかたづけましょう。
      courseD_farmer_while1_2019:
        courseD_farmer_while1_a: 土の山のところに行くには、4回前にすすみます。 `くりかえし` を使ってプログラムできるかな？
        courseD_farmer_while1_b: 土の山のところまで行ったら、`つちをたたづける` で土をかたづけましょう。
      courseD_farmer_while2:
        courseD_farmer_while2_a: 1回前に進めば、穴のところに行けます。
        courseD_farmer_while2_b: 穴をうめるには、6回 `あなをうめる`を使います。`くりかえし` を使ってプログラムできるかな？
      courseD_farmer_while2_2018:
        courseD_farmer_while2_a: 1回前に進めば、穴のところに行けます。
        courseD_farmer_while2_b: 穴をうめるには、6回 `あなをうめる`を使います。`くりかえし` を使ってプログラムできるかな？
      courseD_farmer_while2_2019:
        courseD_farmer_while2_a: 1回前に進めば、穴のところに行けます。
        courseD_farmer_while2_b: 穴をうめるには、6回 `あなをうめる`を使います。`くりかえし` を使ってプログラムできるかな？
      courseD_farmer_while3:
        courseD_farmer_while3_a: くり返しを使えば、少ないブロック数でプログラムできます。
        courseD_farmer_while3_b: 土の山ののところに行くのに、`まがる` は使わなくていいよ。
      courseD_farmer_while3_2018:
        courseD_farmer_while3_a: くり返しを使えば、少ないブロック数でプログラムできます。
        courseD_farmer_while3_b: 土の山ののところに行くのに、`まがる` は使わなくていいよ。
      courseD_farmer_while3_2019:
        courseD_farmer_while3_a: くり返しを使えば、少ないブロック数でプログラムできます。
        courseD_farmer_while3_b: 土の山ののところに行くのに、`まがる` は使わなくていいよ。
      courseD_farmer_while4:
        courseD_farmer_conditionals4_a: "`くりかえし`の代わりに`以下の間`を使えば 山がなくなるまで ほり続けます。"
        courseD_farmer_conditionals4_b: 違う種類のくり返しを使えば、このパズルはかんたんにとけます。
      courseD_farmer_while4_2018:
        courseD_farmer_conditionals4_a: "`くりかえし`の代わりに`以下の間`を使えば 山がなくなるまで ほり続けます。"
        courseD_farmer_conditionals4_b: 違う種類のくり返しを使えば、このパズルはかんたんにとけます。
      courseD_farmer_while4_2019:
        courseD_farmer_conditionals4_a: "`くりかえし`の代わりに`以下の間`を使えば 山がなくなるまで ほり続けます。"
        courseD_farmer_conditionals4_b: 違う種類のくり返しを使えば、このパズルはかんたんにとけます。
      courseD_farmer_while5:
        courseD_farmer_conditionals5a_a: "`くりかえし` の中に `以下の間` を入れてみよう。"
        courseD_farmer_conditionals5a_b: 端っこまで行くには、5回前にすすみます。ほかにやることは何かな？
        courseD_farmer_conditionals5a_c: 5回前にすすむ。前に進むたびに、`以下の間 山があります。` を使って つちをかたづけよう。
      courseD_farmer_while5_2018:
        courseD_farmer_conditionals5a_a: "`くりかえし` の中に `以下の間` を入れてみよう。"
        courseD_farmer_conditionals5a_b: 端っこまで行くには、5回前にすすみます。ほかにやることは何かな？
        courseD_farmer_conditionals5a_c: 5回前にすすむ。前に進むたびに、`以下の間 山があります。` を使って つちをかたづけよう。
      courseD_farmer_while5_2019:
        courseD_farmer_conditionals5a_a: "`くりかえし` の中に `以下の間` を入れてみよう。"
        courseD_farmer_conditionals5a_b: 端っこまで行くには、5回前にすすみます。ほかにやることは何かな？
        courseD_farmer_conditionals5a_c: 5回前にすすむ。前に進むたびに、`以下の間 山があります。` を使って つちをかたづけよう。
      courseD_farmer_while6:
        courseD_farmer_conditionals6_a: "`以下の間`を使えば、穴をうめる回数を気にする必要はありません。"
        courseD_farmer_conditionals6_b: ヒント、農夫は階段状に進む必要があります。
        courseD_farmer_conditionals6_c: |-
          階段状に進む方法

          -   前に すすむ
          -   あなを うめる
          -   みぎに まがる
          -   前に すすむ
          -   あなを うめる
          -   ひだりに まがる

          これを何回くり返せばいいかな？

          あなをうめる時は、`以下の間 あながある` を使います。
      courseD_farmer_while6_2018:
        courseD_farmer_conditionals6_a: "`以下の間`を使えば、穴をうめる回数を気にする必要はありません。"
        courseD_farmer_conditionals6_b: ヒント、農夫は階段状に進む必要があります。
        courseD_farmer_conditionals6_c: |-
          階段状に進む方法

          -   前に すすむ
          -   あなを うめる
          -   みぎに まがる
          -   前に すすむ
          -   あなを うめる
          -   ひだりに まがる

          これを何回くり返せばいいかな？

          あなをうめる時は、`以下の間 あながある` を使います。
      courseD_farmer_while6_2019:
        courseD_farmer_conditionals6_a: "`以下の間`を使えば、穴をうめる回数を気にする必要はありません。"
        courseD_farmer_conditionals6_b: ヒント、農夫は階段状に進む必要があります。
        courseD_farmer_conditionals6_c: |-
          階段状に進む方法

          -   前に すすむ
          -   あなを うめる
          -   みぎに まがる
          -   前に すすむ
          -   あなを うめる
          -   ひだりに まがる

          これを何回くり返せばいいかな？

          あなをうめる時は、`以下の間 あながある` を使います。
      courseD_farmer_while7:
        courseD_farmer_conditionals8_a: "`前に道がある間` を使えば、道の長さがちがっても端っこまで行くことができます。"
        courseD_farmer_conditionals8_b: くり返しの中で`前に道がある間` を使おう。
        courseD_farmer_conditionals8_c: 道の端っこまで行ったら、何をすればいいですか？
      courseD_farmer_while7_2018:
        courseD_farmer_conditionals8_a: "`前に道がある間` を使えば、道の長さがちがっても端っこまで行くことができます。"
        courseD_farmer_conditionals8_b: くり返しの中で`前に道がある間` を使おう。
        courseD_farmer_conditionals8_c: 道の端っこまで行ったら、何をすればいいですか？
      courseD_farmer_while7_2019:
        courseD_farmer_conditionals8_a: "`前に道がある間` を使えば、道の長さがちがっても端っこまで行くことができます。"
        courseD_farmer_conditionals8_b: くり返しの中で`前に道がある間` を使おう。
        courseD_farmer_conditionals8_c: 道の端っこまで行ったら、何をすればいいですか？
      courseD_farmer_while8:
        courseD_farmer_conditionals8_a: "`以下の間`を使うのは、1回じゃないよ。"
        courseD_farmer_conditionals8_b: 穴は道の端っこにあるので `以下の間 あながある`を使う前に`前に道がある間` を使います。
        courseD_farmer_conditionals8_c: ヒント `以下の間 あながある`と`前に道がある間`は、6回繰り返します。
      courseD_farmer_while8_2018:
        courseD_farmer_conditionals8_a: "`以下の間`を使うのは、1回じゃないよ。"
        courseD_farmer_conditionals8_b: 穴は道の端っこにあるので `以下の間 あながある`を使う前に`前に道がある間` を使います。
        courseD_farmer_conditionals8_c: ヒント `以下の間 あながある`と`前に道がある間`は、6回繰り返します。
      courseD_farmer_while8_2019:
        courseD_farmer_conditionals8_a: "`以下の間`を使うのは、1回じゃないよ。"
        courseD_farmer_conditionals8_b: 穴は道の端っこにあるので `以下の間 あながある`を使う前に`前に道がある間` を使います。
        courseD_farmer_conditionals8_c: ヒント `以下の間 あながある`と`前に道がある間`は、6回繰り返します。
      courseD_farmer_while_challenge1:
        courseD_farmer_while_challenge1_a: 穴や山は、道の端っこから **1つ手前**にあります。
        courseD_farmer_while_challenge1_b: "`以下の間`を使えば、山や穴があってもなくても だいじょうぶ。農夫は山を平らにしたり
          穴を埋めたりすることができます。"
        courseD_farmer_conditionals8_c: "`くりかえし`を使わなくても、 `以下の間`だけでパズルをクリアできます。"
      courseD_farmer_while_challenge1_2018:
        courseD_farmer_while_challenge1_a: 穴や山は、道の端っこから **1つ手前**にあります。
        courseD_farmer_while_challenge1_b: "`以下の間`を使えば、山や穴があってもなくても だいじょうぶ。農夫は山を平らにしたり
          穴を埋めたりすることができます。"
        courseD_farmer_conditionals8_c: "`くりかえし`を使わなくても、 `以下の間`だけでパズルをクリアできます。"
      courseD_farmer_while_challenge1_2019:
        courseD_farmer_while_challenge1_a: 穴や山は、道の端っこから **1つ手前**にあります。
        courseD_farmer_while_challenge1_b: "`以下の間`を使えば、山や穴があってもなくても だいじょうぶ。農夫は山を平らにしたり
          穴を埋めたりすることができます。"
        courseD_farmer_conditionals8_c: "`くりかえし`を使わなくても、 `以下の間`だけでパズルをクリアできます。"
      courseD_farmer_while_challenge2:
        courseD_farmer_while_challenge1_a: 穴や山は、道の端っこから **1つ手前**にあります。
        courseD_farmer_while_challenge1_b: "`以下の間`を使えば、山や穴があってもなくても だいじょうぶ。農夫は山を平らにしたり
          穴を埋めたりすることができます。"
        courseD_farmer_conditionals8_c: "`くりかえし`を使わなくても、 `以下の間`だけでパズルをクリアできます。"
      courseD_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: '赤線を通って、トウモロコシのところへ連れて行って！ '
        courseD_harvester_nested_loops_challenge1_b: トウモロコシはたくさんあるので、 `ピック トウモロコシ`は何回も行います。
        courseD_harvester_nested_loops_challenge1_c: メインのくり返しの中に小さなくり返しを入れます。
      courseD_harvester_nested_loops_challenge1_2018:
        courseD_harvester_nested_loops_challenge1_a: '赤線を通って、トウモロコシのところへ連れて行って！ '
        courseD_harvester_nested_loops_challenge1_b: トウモロコシはたくさんあるので、 `ピック トウモロコシ`は何回も行います。
        courseD_harvester_nested_loops_challenge1_c: メインのくり返しの中に小さなくり返しを入れます。
      courseD_harvester_nested_loops_challenge1_2019:
        courseD_harvester_nested_loops_challenge1_a: '赤線を通って、トウモロコシのところへ連れて行って！ '
        courseD_harvester_nested_loops_challenge1_b: トウモロコシはたくさんあるので、 `ピック トウモロコシ`は何回も行います。
        courseD_harvester_nested_loops_challenge1_c: メインのくり返しの中に小さなくり返しを入れます。
      courseD_maze_intro5a_2019:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_nestedLoops3:
        courseD_maze_nestedLoops3_a: "`くりかえし` の中に、もう一つくり返しを作ってみよう。"
        courseD_maze_nestedLoops3_b: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_maze_nestedLoops3_c: 道を前に進んで曲がるコードを書いて、それをくり返しの中に入れれば、ひまわりまで行けるかな？
      courseD_maze_nestedLoops3_2018:
        courseD_maze_nestedLoops3_a: "`くりかえし` の中に、もう一つくり返しを作ってみよう。"
        courseD_maze_nestedLoops3_b: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_maze_nestedLoops3_c: 道を前に進んで曲がるコードを書いて、それをくり返しの中に入れれば、ひまわりまで行けるかな？
      courseD_maze_nestedLoops3_2019:
        courseD_maze_nestedLoops3_a: "`くりかえし` の中に、もう一つくり返しを作ってみよう。"
        courseD_maze_nestedLoops3_b: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_maze_nestedLoops3_c: 道を前に進んで曲がるコードを書いて、それをくり返しの中に入れれば、ひまわりまで行けるかな？
      courseD_maze_nestedLoops4:
        courseD_maze_nestedLoops4_a: |-
          赤線のように行ってみよう。

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: くり返しのパターンがわからないときは、全部コーディングしてみて、何回も出てくるところを見つけましょう。
        courseD_maze_nestedLoops4_c: 最初の`くりかえし` を作ったら、くり返しの数を変えて2つ目のくり返しを作ろう。
      courseD_maze_nestedLoops4_2018:
        courseD_maze_nestedLoops4_a: |-
          赤線のように行ってみよう。

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: くり返しのパターンがわからないときは、全部コーディングしてみて、何回も出てくるところを見つけましょう。
        courseD_maze_nestedLoops4_c: 最初の`くりかえし` を作ったら、くり返しの数を変えて2つ目のくり返しを作ろう。
      courseD_maze_nestedLoops4_2019:
        courseD_maze_nestedLoops4_a: |-
          赤線のように行ってみよう。

          ![](https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png)
        courseD_maze_nestedLoops4_b: くり返しのパターンがわからないときは、全部コーディングしてみて、何回も出てくるところを見つけましょう。
        courseD_maze_nestedLoops4_c: 最初の`くりかえし` を作ったら、くり返しの数を変えて2つ目のくり返しを作ろう。
      courseD_maze_nestedLoops5:
        courseD_maze_nestedLoops5_a: くり返しの入れ子を使った階段のパターンを迷路から見つけ出して。
        courseD_maze_nestedLoops5_b: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
      courseD_maze_nestedLoops5_2018:
        courseD_maze_nestedLoops5_a: くり返しの入れ子を使った階段のパターンを迷路から見つけ出して。
        courseD_maze_nestedLoops5_b: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
      courseD_maze_nestedLoops5_2019:
        courseD_maze_nestedLoops5_a: くり返しの入れ子を使った階段のパターンを迷路から見つけ出して。
        courseD_maze_nestedLoops5_b: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
      courseD_maze_nestedLoops6:
        courseD_maze_nestedLoops6_a: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_maze_nestedLoops6_b: "`くりかえし`を入れ子にすると、使うブロックの数を減らせるよ。"
        courseD_maze_nestedLoops6_c: 入れ子のなった`くりかえし` は、2つ必要です。
      courseD_maze_nestedLoops6_2018:
        courseD_maze_nestedLoops6_a: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_maze_nestedLoops6_b: "`くりかえし`を入れ子にすると、使うブロックの数を減らせるよ。"
        courseD_maze_nestedLoops6_c: 入れ子のなった`くりかえし` は、2つ必要です。
      courseD_maze_nestedLoops6_2019:
        courseD_maze_nestedLoops6_a: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseD_maze_nestedLoops6_b: "`くりかえし`を入れ子にすると、使うブロックの数を減らせるよ。"
        courseD_maze_nestedLoops6_c: 入れ子のなった`くりかえし` は、2つ必要です。
      courseD_maze_ramp1:
        courseC_maze_programming1_a: トリさんがブタさんのところまで行けないときは、３つのブロックがちゃんとひっついているか確認して、もう一回"実行（じっこう）"
          をクリックしてみよう。
        courseC_maze_programming1_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp1_2018:
        courseC_maze_programming1_a: トリさんがブタさんのところまで行けないときは、３つのブロックがちゃんとひっついているか確認して、もう一回"実行（じっこう）"
          をクリックしてみよう。
        courseC_maze_programming1_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp1_2019:
        courseC_maze_programming1_a: トリさんがブタさんのところまで行けないときは、３つのブロックがちゃんとひっついているか確認して、もう一回"実行（じっこう）"
          をクリックしてみよう。
        courseC_maze_programming1_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp2:
        courseC_maze_programming2_a: "`前に すすむ`を引っ付けるには、ツールボックスにあるブロックをドラックして、ワークスペースにある
          `実行（じっこう）した時`の下に持って行ってブロックをはなします。"
        courseC_maze_programming2_b: "`実行（じっこう）した時`の下に2つのブロックをひっつけよう。"
      courseD_maze_ramp2_2018:
        courseC_maze_programming2_a: "`前に すすむ`を引っ付けるには、ツールボックスにあるブロックをドラックして、ワークスペースにある
          `実行（じっこう）した時`の下に持って行ってブロックをはなします。"
        courseC_maze_programming2_b: "`実行（じっこう）した時`の下に2つのブロックをひっつけよう。"
      courseD_maze_ramp2_2019:
        courseC_maze_programming2_a: "`前に すすむ`を引っ付けるには、ツールボックスにあるブロックをドラックして、ワークスペースにある
          `実行（じっこう）した時`の下に持って行ってブロックをはなします。"
        courseC_maze_programming2_b: "`実行（じっこう）した時`の下に2つのブロックをひっつけよう。"
      courseD_maze_ramp3:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          真ん中にあるブロックを消すには、そのブロックから下にあるブロックごとを外します。

          そこからいらないブロックをツールボックスにドラックして

          残ったブロックをもとにもどします。
      courseD_maze_ramp3_2018:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          真ん中にあるブロックを消すには、そのブロックから下にあるブロックごとを外します。

          そこからいらないブロックをツールボックスにドラックして

          残ったブロックをもとにもどします。
      courseD_maze_ramp3_2019:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          真ん中にあるブロックを消すには、そのブロックから下にあるブロックごとを外します。

          そこからいらないブロックをツールボックスにドラックして

          残ったブロックをもとにもどします。
      courseD_maze_ramp4:
        courseC_maze_programming4_a: 曲がる方向の右左は、トリさんが向いている方向で決まります。いま、トリさんは右の方を向いているので、右に回ると下にほうに行きます。
        courseC_maze_programming4_b: 道に沿って進むには、前に進む、曲がる、前に進む、はじめと反対側に曲がります。もう一回前に進むとブタさんのところに行けます。
      courseD_maze_ramp4_2018:
        courseC_maze_programming4_a: 曲がる方向の右左は、トリさんが向いている方向で決まります。いま、トリさんは右の方を向いているので、右に回ると下にほうに行きます。
        courseC_maze_programming4_b: 道に沿って進むには、前に進む、曲がる、前に進む、はじめと反対側に曲がります。もう一回前に進むとブタさんのところに行けます。
      courseD_maze_ramp5:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 曲がる方向は、トリさんが向いている方向で決まります。
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp5_2018:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 曲がる方向は、トリさんが向いている方向で決まります。
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp5_2019:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 曲がる方向は、トリさんが向いている方向で決まります。
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp5a:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 曲がる方向は、トリさんが向いている方向で決まります。
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp5a_2018:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 曲がる方向は、トリさんが向いている方向で決まります。
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp5a_2019:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp5b:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 曲がる方向は、トリさんが向いている方向で決まります。
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp5b_2018:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 曲がる方向は、トリさんが向いている方向で決まります。
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp5b_2019:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 曲がる方向は、トリさんが向いている方向で決まります。
        courseC_maze_programming5_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_maze_ramp6:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
        courseC_maze_programming6_b: トリさんはかべのほうを向いているので、方向をかえるのをわすれないでね。
        courseC_maze_programming6_c: すこし プログラムを かいたら、すぐに 実行（じっこう）してみよう。ちょっとづつ ためしながら
          プログラムを つくっていこう。
      courseD_maze_ramp7:
        courseD_maze_ramp7_b: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか すぐに見つけることができます。"
        courseD_maze_ramp7_a: くりかえしの中に入れったブロックは、ずっと実行されつづけます。
        courseD_maze_ramp7_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseD_maze_until1:
        courseD_maze_until1_a: くり返しを使ってプログラムを短くできる部分はありますか？
        courseD_maze_until1_b: くり返しの入れ子を使いましょう。
      courseD_maze_until1_2018:
        courseD_maze_until1_a: くり返しを使ってプログラムを短くできる部分はありますか？
        courseD_maze_until1_b: くり返しの入れ子を使いましょう。
      courseD_maze_until1_2019:
        courseD_maze_until1_a: くり返しを使ってプログラムを短くできる部分はありますか？
        courseD_maze_until1_b: くり返しの入れ子を使いましょう。
      courseD_maze_until3:
        courseD_maze_until3_a: |-
          -   どんなプログラムをかきますか？
          -   どんなふうに行きますか？
          -   何をするのか教えて?
        courseD_maze_until3_b: わからなくなったら、紙に1ステップづつ書き出して、くり返しを使える部分を見つけよう。
        courseD_maze_until3_c: 階段みたいに行けばいいのが わかるかな？
        courseD_maze_until3_d: "`までを くりかえします`を使えば、プログラムを短くすることができます。"
      courseD_maze_until3_2018:
        courseD_maze_until3_a: |-
          -   どんなプログラムをかきますか？
          -   どんなふうに行きますか？
          -   何をするのか教えて?
        courseD_maze_until3_b: わからなくなったら、紙に1ステップづつ書き出して、くり返しを使える部分を見つけよう。
        courseD_maze_until3_c: 階段みたいに行けばいいのが わかるかな？
        courseD_maze_until3_d: "`までを くりかえします`を使えば、プログラムを短くすることができます。"
      courseD_maze_until3_2019:
        courseD_maze_until3_a: |-
          -   どんなプログラムをかきますか？
          -   どんなふうに行きますか？
          -   何をするのか教えて?
        courseD_maze_until3_b: わからなくなったら、紙に1ステップづつ書き出して、くり返しを使える部分を見つけよう。
        courseD_maze_until3_c: 階段みたいに行けばいいのが わかるかな？
        courseD_maze_until3_d: "`までを くりかえします`を使えば、プログラムを短くすることができます。"
      courseD_maze_until4:
        courseD_maze_until4_a: |-
          "ステップ" ボタンを押して １行づつ動かしてみよう。

          -   1ステップ目はうまくいった？
          -   2ステップ目はうまくいった？
          -   どこがまちがってた？
        courseD_maze_until4_b: 階段みたいに行けばいいのが わかるかな？
        courseD_maze_until4_c: "`までを くりかえします`を使えば、プログラムを短くすることができます。"
      courseD_maze_until4_2018:
        courseD_maze_until4_a: |-
          "ステップ" ボタンを押して １行づつ動かしてみよう。

          -   1ステップ目はうまくいった？
          -   2ステップ目はうまくいった？
          -   どこがまちがってた？
        courseD_maze_until4_b: 階段みたいに行けばいいのが わかるかな？
        courseD_maze_until4_c: "`までを くりかえします`を使えば、プログラムを短くすることができます。"
      courseD_maze_until4_2019:
        courseD_maze_until4_a: |-
          "ステップ" ボタンを押して １行づつ動かしてみよう。

          -   1ステップ目はうまくいった？
          -   2ステップ目はうまくいった？
          -   どこがまちがってた？
        courseD_maze_until4_b: 階段みたいに行けばいいのが わかるかな？
        courseD_maze_until4_c: "`までを くりかえします`を使えば、プログラムを短くすることができます。"
      courseD_maze_until5:
        courseD_maze_until5_a: "`もし 左に道があるとき`で、曲がる場所を調べることができます。"
        courseD_maze_until5_b: "`前に すすむ`を使うのは1回だけ、`ひまわり まで くりかえします`の中で使おう。"
        courseD_maze_until5_c: くり返しのなかで、つねに左に道があるかチェックします。そのほかに何をすればいい？
      courseD_maze_until5_2018:
        courseD_maze_until5_b: "`前に すすむ`を使うのは1回だけ、`ひまわり まで くりかえします`の中で使おう。"
      courseD_maze_until5_2019:
        courseD_maze_until5_b: "`前に すすむ`を使うのは1回だけ、`ひまわり まで くりかえします`の中で使おう。"
      courseD_maze_until6:
        courseD_maze_until6_a: 今度は、`もし右に道があるとき`を使ってみよう。
        courseD_maze_until6_b: "`前に すすむ`を使うのは1回だけ、`ひまわり まで くりかえします`の中で使おう。"
        courseD_maze_until6_c: さっきのパズルより曲がるところは多いけど、`まで くりかえします` を使っているのは、プログラムはさっきと同じです。
      courseD_maze_until6_2018:
        courseD_maze_until6_b: "`前に すすむ`を使うのは1回だけ、`ひまわり まで くりかえします`の中で使おう。"
      courseD_maze_until6_2019:
        courseD_maze_until6_b: "`前に すすむ`を使うのは1回だけ、`ひまわり まで くりかえします`の中で使おう。"
      courseD_maze_until7:
        courseD_maze_until7_a: プログラムは、さっきのパズルより 長くなっては いけません！
        courseD_maze_until7_b: さっきのパズルより曲がるところは多いけど、`まで くりかえします` を使っているのは、プログラムはさっきと同じです。
        courseD_maze_until7_c: 左に道があるか調べて、右に曲がると ちがうところに 行っちゃうよ！
      courseD_maze_until7_2018:
        courseD_maze_until7_a: プログラムは、さっきのパズルより 長くなっては いけません！
        courseD_maze_until7_b: さっきのパズルより曲がるところは多いけど、`まで くりかえします` を使っているのは、プログラムはさっきと同じです。
      courseD_maze_until7_2019:
        courseD_maze_until7_a: プログラムは、さっきのパズルより 長くなっては いけません！
        courseD_maze_until7_b: さっきのパズルより曲がるところは多いけど、`まで くりかえします` を使っているのは、プログラムはさっきと同じです。
      courseD_maze_until8:
        courseD_maze_until8_a: "`もし やること/でなければ`を使って、ゾンビを正しい方向に行かせよう。"
        courseD_maze_until8_b: "`もし やること/でなければ`で、もし 先に道があれば、どうする？"
        courseD_maze_until8_c: "`もし やること/でなければ`で、もし 先に道がなければ、どっちに曲がる？"
      courseD_maze_until9:
        courseD_maze_until8_a: "`もし 先に道があれば`を使って チャンパーのいる道を避けて 道が前にある限り前に進みます。"
        courseD_maze_until8_b: 前に道がなくなったら、どっちの方向に曲がりますか？
        courseD_maze_until8_c: ひまわりにたどり着くには、`までを くりかえします` を使います。
      courseD_maze_until9_2018:
        courseD_maze_until8_c: ひまわりにたどり着くには、`までを くりかえします` を使います。
      courseD_maze_until9_2019:
        courseD_maze_until8_c: ひまわりにたどり着くには、`までを くりかえします` を使います。
      courseD_playLab_cond1:
        courseD_playLab_cond1_a: "`もし 上矢じるしキーが おされたら` の下に `うごかす キャラ１ 上に` をひっつけよう。ほかの矢じるしキーにも、同じように
          ブロックを ひっつけよう。"
        courseD_playLab_cond1_b: "`矢じるしキーがおされたら` と `うごかす キャラ` は、ドロップダウンメニューで矢じるしキーや動く方向をかえることができます。"
        courseD_playLab_cond1_c: '"実行（じっこう）"をクリックしたら、かいぞくを動かして、両方のはたにタッチしよう!'
      courseD_playLab_cond1_2018:
        courseD_playLab_cond1_a: "`もし 上矢じるしキーが おされたら` の下に `うごかす キャラ１ 上に` をひっつけよう。ほかの矢じるしキーにも、同じように
          ブロックを ひっつけよう。"
        courseD_playLab_cond1_b: "`矢じるしキーがおされたら` と `うごかす キャラ` は、ドロップダウンメニューで矢じるしキーや動く方向をかえることができます。"
        courseD_playLab_cond1_c: '"実行（じっこう）"をクリックしたら、かいぞくを動かして、両方のはたにタッチしよう!'
      courseD_playLab_cond2:
        courseD_playLab_cond2_a: "`キャラ1が キャラ2に さわったら`の下に `ポイントを ふやす` をひっつけて、パズルをクリアしよう。"
      courseD_playLab_cond2_2018:
        courseD_playLab_cond2_a: "`キャラ1が キャラ2に さわったら`の下に `ポイントを ふやす` をひっつけて、パズルをクリアしよう。"
      courseD_playLab_cond3:
        courseD_playLab_cond3_a: "`ずっと やること`の中に入れるのは、２つ。１つは、ドラゴン (キャラ 2) の顔をてきとうにかえる命令、もう１つは、１秒待つ命令です。"
      courseD_playLab_cond3_2018:
        courseD_playLab_cond3_a: "`ずっと やること`の中に入れるのは、２つ。１つは、ドラゴン (キャラ 2) の顔をてきとうにかえる命令、もう１つは、１秒待つ命令です。"
      courseD_playLab_cond3a:
        courseD_playLab_cond3_c: "-   `もし` ドラゴンがうれしい顔なら \n    -   `ポイントを ふやす`\n    -
          \  `ポイントを ふやす`\n\n-   `でなければ` `ポイントを ふやす`"
      courseD_playLab_cond3a_2018:
        courseD_playLab_cond3_c: "-   `もし` ドラゴンがうれしい顔なら \n    -   `ポイントを ふやす`\n    -
          \  `ポイントを ふやす`\n\n-   `でなければ` `ポイントを ふやす`"
      courseD_playLab_cond4:
        courseD_playLab_cond4_a: 忍者(キャラ 3) が かいぞくを 追いかけるようにするのは、`実行（じっこう）した時`を使います。
        courseD_playLab_cond4_b: 忍者に かいぞくを 追いかけさせるには、`すべての 忍者 が おいかけるのは キャラ 1`を使います。
        courseD_playLab_cond4_c: "`キャラ1が キャラ3に さわったら`の下に `負けでゲームの終わり`を ひっつけよう。"
      courseD_playLab_cond4_2018:
        courseD_playLab_cond4_a: 忍者(キャラ 3) が かいぞくを 追いかけるようにするのは、`実行（じっこう）した時`を使います。
        courseD_playLab_cond4_b: 忍者に かいぞくを 追いかけさせるには、`すべての 忍者 が おいかけるのは キャラ 1`を使います。
        courseD_playLab_cond4_c: "`キャラ1が キャラ3に さわったら`の下に `負けでゲームの終わり`を ひっつけよう。"
      courseD_playLab_cond5:
        courseD_playLab_cond5_a: "`スコア` が `>`5かどうか調べるには、 `もし`を使います。"
        courseD_playLab_cond5_b: "`ずっと やること` は、ワークスペースの中で 何回でも 使える。"
      courseD_playLab_cond5_2018:
        courseD_playLab_cond5_a: "`スコア` が `>`5かどうか調べるには、 `もし`を使います。"
        courseD_playLab_cond5_b: "`ずっと やること` は、ワークスペースの中で 何回でも 使える。"
      courseD_playLab_cond6:
        courseD_playLab_cond6_a: プログラムが実行されたら、`すべての 忍者の スピードは` で 忍者のスピードを おそくしよう。
        courseD_playLab_cond6_b: "`ずっと やること` のなかに `もし キャラ 1 y 位置 > 255` を入れれば、いつでも
          かいぞくが タコのラインより 下にいるか チェックすることができます。"
      courseD_playLab_cond6_2018:
        courseD_playLab_cond6_a: プログラムが実行されたら、`すべての 忍者の スピードは` で 忍者のスピードを おそくしよう。
        courseD_playLab_cond6_b: "`ずっと やること` のなかに `もし キャラ 1 y 位置 > 255` を入れれば、いつでも
          かいぞくが タコのラインより 下にいるか チェックすることができます。"
      courseD_playLab_cond6a:
        courseD_playLab_cond6_c: "`ずっと やること`のさいしょに `1 びょう まつ`を 入れてください。安全地帯からすぐ出れば、ポイントが
          へらないようにしたいので、1秒待った後に かいぞくがいる場所を調べてください（ 1秒まつ のは `もし` のなかでは ありません）。"
      courseD_playLab_cond6a_2018:
        courseD_playLab_cond6_c: "`ずっと やること`のさいしょに `1 びょう まつ`を 入れてください。安全地帯からすぐ出れば、ポイントが
          へらないようにしたいので、1秒待った後に かいぞくがいる場所を調べてください（ 1秒まつ のは `もし` のなかでは ありません）。"
      courseD_scrat_ramp1:
        courseC_maze_programming1_a: スクラットがドングリのところまで行けないときは、３つのブロックがちゃんとひっついているか確認してから、もう一度"実行（じっこう）"
          をクリックしてみよう。
        courseC_maze_programming1_b: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_scrat_ramp2:
        courseC_maze_programming2_a: "`前に すすむ`を引っ付けるには、ツールボックスにあるブロックをドラックして、ワークスペースにある
          `実行（じっこう）した時`の下に持って行ってブロックをはなします。"
        courseC_maze_programming2_b: "`実行（じっこう）した時`の下に3つ`前に すすむ`を引っ付けてください。"
      courseD_scrat_ramp3:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          真ん中にあるブロックを消すには、そのブロックから下にあるブロックごとを外します。

          そこからいらないブロックをツールボックスにドラックして

          残ったブロックをもとにもどします。
        courseC_maze_programming3_b: 右に曲がるか左に曲がるかは、スクラットが向いている方向で決まります。
      courseD_scrat_ramp4:
        courseC_maze_programming4_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_scrat_ramp5:
        courseC_maze_programming5_a: '"ステップ"ボタンを押せば、1行づつ実行されるので、次に何をすればいいか わかりやすくなります。'
        courseC_maze_programming5_b: 角まで 何ブロックありますか？
        courseC_maze_programming5_c: ドングリのところに行くには、角を左に曲がらなければなりません。
      courseD_scrat_ramp6:
        courseC_maze_programming6a_a: スクラットを前に進ませる時に`くりかえし`を使います。
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: このパズルの解き方は二通りあるよ。
        courseD_scrat_programming6_b: スクラットは海の方を向いているので、前に進む前に曲がろう。
        courseD_scrat_programming6_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseD_scrat_ramp8:
        courseD_maze_ramp7_b: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか すぐに見つけることができます。"
        courseD_maze_ramp7_a: くりかえしの中に入れったブロックは、ずっと実行されつづけます。
        courseD_maze_ramp7_c: ミスをおそれないで！まちがってもいいから、ブロックを引っ付けて、どうなるか実行してみよう。
      courseE_artist_concept1:
        courseE_artist_concept1_a: 六角形は、一辺が50ピクセルで 曲がる角度は右に60度。
        courseE_artist_concept1_b: 六角形をかくのを何回もくり返すかわりに、関数を使おう。
        courseE_artist_concept1_c: 関数を呼んで六角形をかく前に、`太さは` でペンの太さを 変えよう。
      courseE_artist_concept1_2018:
        courseE_artist_concept1_a: 六角形は、一辺が50ピクセルで 曲がる角度は右に60度。
        courseE_artist_concept1_b: 六角形をかくのを何回もくり返すかわりに、関数を使おう。
        courseE_artist_concept1_c: 関数を呼んで六角形をかく前に、`太さは` でペンの太さを 変えよう。
      courseE_artist_concept4:
        courseE_artist_concept4_a: やり方はいくつかあるけど、どうやってクリアする？
        courseE_artist_concept4_b: 四角形を１つかいたら、1行分の四角形をかきます。その次はどうする？
        courseE_artist_concept4_c: 1行分の四角形をかいたら、向きを変えて左から四角形をかいていくか、一番左にもどって右から次の行をかくか、どっちの方法でクリアしますか？
      courseE_artist_concept4_2018:
        courseE_artist_concept4_a: やり方はいくつかあるけど、どうやってクリアする？
        courseE_artist_concept4_b: 四角形を１つかいたら、1行分の四角形をかきます。その次はどうする？
        courseE_artist_concept4_c: 1行分の四角形をかいたら、向きを変えて左から四角形をかいていくか、一番左にもどって右から次の行をかくか、どっちの方法でクリアしますか？
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        courseE_artist_concept_challenge1_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
        courseE_artist_concept_challenge1_c: |-
          絵を完成させるのは、黒色の絵をくり返してください。

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        courseE_artist_concept_challenge1_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
        courseE_artist_concept_challenge1_c: |-
          絵を完成させるのは、黒色の絵をくり返してください。

          ![](<https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png>)
      courseE_artist_concept_challenge2:
        courseE_artist_concept_challenge2_a: いつでも どこでも 風車が かけるよう、関数をつくろう。
        courseE_artist_concept_challenge2_b: |-
          次の風車をかく前に 下のコマンドを使ってキャンパスを他の場所に移動しよう。

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      courseE_artist_concept_challenge2_2018:
        courseE_artist_concept_challenge2_a: いつでも どこでも 風車が かけるよう、関数をつくろう。
        courseE_artist_concept_challenge2_b: |-
          次の風車をかく前に 下のコマンドを使ってキャンパスを他の場所に移動しよう。

          <xml>  <block type="jump_to">
              <title name="VALUE">???</title>
            </block></xml>
      courseE_artist_functions1:
        courseE_artist_functions1_a: その四角形にはそれぞれ100ピクセルの側面があります。これは、2番目の四角形を描く前に175ピクセル前に動かす必要があるという事です。
        courseE_artist_functions1_b: メガネを作るために、重なり合う線を描いても大丈夫です。
        courseE_artist_functions1_c: メガネのレンズの部分の四角形を `くりかえし` を使って書くとプログラムを短くすることができます。
      courseE_artist_functions10:
        courseD_artist_functions10_b: やり方は さっきの パズルと 同じですが、かく形が変わっています。
        courseD_artist_functions10_a: "`うごく まえに`を何回も書かなくていいように、 `六角形をかく`関数を作って、それを何回も呼びましょう。"
        courseD_artist_functions10_c: |-
          `六角形の列をかく`関数を どこを かくのに 使えばいいかわかるかな？

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2018:
        courseD_artist_functions10_b: やり方は さっきの パズルと 同じですが、かく形が変わっています。
        courseD_artist_functions10_a: "`うごく まえに`を何回も書かなくていいように、 `六角形をかく`関数を作って、それを何回も呼びましょう。"
        courseD_artist_functions10_c: |-
          `六角形の列をかく`関数を どこを かくのに 使えばいいかわかるかな？

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions10_2019:
        courseD_artist_functions10_b: やり方は さっきの パズルと 同じですが、かく形が変わっています。
        courseD_artist_functions10_a: "`うごく まえに`を何回も書かなくていいように、 `六角形をかく`関数を作って、それを何回も呼びましょう。"
        courseD_artist_functions10_c: |-
          `六角形の列をかく`関数を どこを かくのに 使えばいいかわかるかな？

          ![](https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif)
      courseE_artist_functions2:
        courseD_artist_functions2_b: 関数の中に書くのは、一辺が100ピクセルの正方形をかくところだけで、他の部分を書いてはいけません。
        courseD_artist_functions2_c: |-
          `実行（じっこう）したとき` のしたで 緑になっている`draw a square` を "呼び出して"ください。呼び出さないと、関数の中の命令は実行されません。

          <xml><block type="procedures_callnoreturn" limit="2"><mutation name="draw a square"/></block></xml>
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_artist_functions2_2018:
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_artist_functions2_2019:
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_artist_functions3:
        courseD_artist_functions3_a: |-
          最初からある命令を8回繰り返せば、パズルをクリアできるよ。

          最初からあるコードを消してしまったら、ワークスペースの右上になる"最初からやりなおす"をクリックしてね。
        courseD_artist_functions3_b: くり返しの中に入れるのは、最初からある３つの命令だよ。
      courseE_artist_functions4:
        courseD_artist_functions4_a: 関数を使ってみよう！
        courseD_artist_functions4_b: 関数 `draw a star`をツールボックスから取り出して、１つ前のパズルでやった星をかくプログラムを追加しよう。星は４つかかなくてはいけないから。
        courseD_artist_functions4_c: 実行（じっこう）したときに動くプログラムで関数 `draw a star` を使ってみよう。次の星をかくときにジャンプするのをわすれないでね。
      courseE_artist_functions5:
        courseD_artist_functions5_a: あきらめないで、今までやったことを 思い出せば だいじょうぶ！
        courseD_artist_functions5_b: くり返しの中だけでなく、関数はどこからでも呼び出せて、決められた命令を実行することができるよ。
        courseD_artist_functions5_c: 星をかく命令を 関数 `draw a star` のなかに ドラックして持っていくことから
          始めよう。つぎにその関数を 使って 星を 3つ かこう。
      courseE_artist_functions5_2018:
        courseD_artist_functions5_a: あきらめないで、今までやったことを 思い出せば だいじょうぶ！
        courseD_artist_functions5_b: くり返しの中だけでなく、関数はどこからでも呼び出せて、決められた命令を実行することができるよ。
      courseE_artist_functions5_2019:
        courseD_artist_functions5_a: あきらめないで、今までやったことを 思い出せば だいじょうぶ！
        courseD_artist_functions5_b: くり返しの中だけでなく、関数はどこからでも呼び出せて、決められた命令を実行することができるよ。
      courseE_artist_functions6:
        grade4_artist_functions_windows0_a: 今回は、１つ１つまどをかくことを がんばってみよう。関数を使うのは、次のパズルだ。
        grade4_artist_functions_windows0_b: くり返しの入れ子を使おう。内側のくり返しで四角形をかいて、外側のくり返しで四角形をかくのを4回くり返そう。
        grade4_artist_functions_windows0_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseE_artist_functions7:
        courseD_artist_functions7_a: まずは、まどをかく関数を作ってみよう！
        courseD_artist_functions7_b: よけいなくりかえしをしないようにね。２階は 次のまどをかくとき 100ピクセルジャンプしてね。１階のまどをかくときには、150ピクセル下におりてね。
      courseE_artist_functions7_2018:
        courseD_artist_functions7_a: まずは、まどをかく関数を作ってみよう！
      courseE_artist_functions7_2019:
        courseD_artist_functions7_a: まずは、まどをかく関数を作ってみよう！
      courseE_artist_functions8:
        courseD_artist_functions8_f: "`うごく まえに` が１つと`前に ジャンプする` や `後ろに ジャンプする` を たくさん使うよ！"
        courseD_artist_functions8_a: |-
          はじめに四角形をかく関数を作って、それを使って1行分の四角形をかく関数を作ろう。

           `1行分の四角形`をかく関数のイメージはできたかな？
        courseD_artist_functions8_d: |-
          1行分の四角形をかくには、

          -   くりかえし 3 回
              -   一辺が**50 ピクセル**の四角形をかく
              -   前に **100 pixels** ジャンプする
        courseD_artist_functions8_b: |-
          一行、３つの四角形でできているのがわかるかな。何行 かけばいいかな、また、どこから かきは始めればいいかな？

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_c: 一行かき終わって、次の行をかくためには、下と後ろに2回ジャンプすることが必要。
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_f: "`うごく まえに` が１つと`前に ジャンプする` や `後ろに ジャンプする` を たくさん使うよ！"
        courseD_artist_functions8_a: |-
          はじめに四角形をかく関数を作って、それを使って1行分の四角形をかく関数を作ろう。

           `1行分の四角形`をかく関数のイメージはできたかな？
        courseD_artist_functions8_d: |-
          1行分の四角形をかくには、

          -   くりかえし 3 回
              -   一辺が**50 ピクセル**の四角形をかく
              -   前に **100 pixels** ジャンプする
        courseD_artist_functions8_b: |-
          一行、３つの四角形でできているのがわかるかな。何行 かけばいいかな、また、どこから かきは始めればいいかな？

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_f: "`うごく まえに` が１つと`前に ジャンプする` や `後ろに ジャンプする` を たくさん使うよ！"
        courseD_artist_functions8_a: |-
          はじめに四角形をかく関数を作って、それを使って1行分の四角形をかく関数を作ろう。

           `1行分の四角形`をかく関数のイメージはできたかな？
        courseD_artist_functions8_d: |-
          1行分の四角形をかくには、

          -   くりかえし 3 回
              -   一辺が**50 ピクセル**の四角形をかく
              -   前に **100 pixels** ジャンプする
        courseD_artist_functions8_b: |-
          一行、３つの四角形でできているのがわかるかな。何行 かけばいいかな、また、どこから かきは始めればいいかな？

          ![](<https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png>)
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions9:
        courseD_artist_functions9_e: |-
          それぞれの辺は、`三角形の列` で できているのが わかるかな？

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          このパズルをクリアするのは、

          -   `三角形をかく` 関数を作る
          -   `三角形でひとつの辺をかく` 関数を作る
          -   `三角形でひとつの辺をかく` 関数を 4回 くり返す
        courseD_artist_functions9_b: ダイヤモンド型をかくには、三角形の列を４回かきます。一列かいたら60度、または、120度曲がります。
        courseD_artist_functions9_c: |-
          三角形の列をかく方法

          -   くり返し 4 回
              -   三角形をかく
              -   前に 50ピクセル ジャンプする
        courseD_artist_functions9_d: |-
          ダイヤモンド型をかく方法

          -   くり返し 2 回
              -   三角形の列をかく
              -   60 度 右に 曲がる
              -   三角形の列をかく
              -   120 度 右に 曲がる
      courseE_artist_functions9_2018:
        courseD_artist_functions9_e: |-
          それぞれの辺は、`三角形の列` で できているのが わかるかな？

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          このパズルをクリアするのは、

          -   `三角形をかく` 関数を作る
          -   `三角形でひとつの辺をかく` 関数を作る
          -   `三角形でひとつの辺をかく` 関数を 4回 くり返す
        courseD_artist_functions9_b: ダイヤモンド型をかくには、三角形の列を４回かきます。一列かいたら60度、または、120度曲がります。
        courseD_artist_functions9_c: |-
          三角形の列をかく方法

          -   くり返し 4 回
              -   三角形をかく
              -   前に 50ピクセル ジャンプする
        courseD_artist_functions9_d: |-
          ダイヤモンド型をかく方法

          -   くり返し 2 回
              -   三角形の列をかく
              -   60 度 右に 曲がる
              -   三角形の列をかく
              -   120 度 右に 曲がる
      courseE_artist_functions9_2019:
        courseD_artist_functions9_e: |-
          それぞれの辺は、`三角形の列` で できているのが わかるかな？

          ![](https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif)
        courseD_artist_functions9_a: |-
          このパズルをクリアするのは、

          -   `三角形をかく` 関数を作る
          -   `三角形でひとつの辺をかく` 関数を作る
          -   `三角形でひとつの辺をかく` 関数を 4回 くり返す
        courseD_artist_functions9_b: ダイヤモンド型をかくには、三角形の列を４回かきます。一列かいたら60度、または、120度曲がります。
        courseD_artist_functions9_c: |-
          三角形の列をかく方法

          -   くり返し 4 回
              -   三角形をかく
              -   前に 50ピクセル ジャンプする
        courseD_artist_functions9_d: |-
          ダイヤモンド型をかく方法

          -   くり返し 2 回
              -   三角形の列をかく
              -   60 度 右に 曲がる
              -   三角形の列をかく
              -   120 度 右に 曲がる
      courseE_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: もう一回、関数を呼べば、残った角にも、同じ もようを かくことができます。
        courseE_artist_functions_challenge1_b: ちがう場所に`ジャンプ` して、まったく ちがう もようを かくことも
          できます。
      courseE_artist_functions_challenge1_2018:
        courseE_artist_functions_challenge1_a: もう一回、関数を呼べば、残った角にも、同じ もようを かくことができます。
        courseE_artist_functions_challenge1_b: ちがう場所に`ジャンプ` して、まったく ちがう もようを かくことも
          できます。
      courseE_artist_functions_challenge1_2019:
        courseE_artist_functions_challenge1_a: もう一回、関数を呼べば、残った角にも、同じ もようを かくことができます。
        courseE_artist_functions_challenge1_b: ちがう場所に`ジャンプ` して、まったく ちがう もようを かくことも
          できます。
      courseE_artist_functions_challenge2:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          `ジャンプ` で ゾンビアーティストを いつでも 好きな場所に ジャンプさせることができます。右方向の数字 と 下方向の数字を 指定して使用します。数字は、ゾンビアーティストが いる場所から 数えるのではなく、つねに左上の角から 数えます。

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_functions_challenge2_2018:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          `ジャンプ` で ゾンビアーティストを いつでも 好きな場所に ジャンプさせることができます。右方向の数字 と 下方向の数字を 指定して使用します。数字は、ゾンビアーティストが いる場所から 数えるのではなく、つねに左上の角から 数えます。

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_functions_challenge2_2019:
        courseE_artist_functions_challenge1_a: |-
          <xml>
            <block type="jump_to_xy">
              <title name="XPOS">350</title>
              <title name="YPOS">200</title>
            </block>
            </xml>

          `ジャンプ` で ゾンビアーティストを いつでも 好きな場所に ジャンプさせることができます。右方向の数字 と 下方向の数字を 指定して使用します。数字は、ゾンビアーティストが いる場所から 数えるのではなく、つねに左上の角から 数えます。

          ![](https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png)
      courseE_artist_ramp8:
        courseE_artist_ramp8_a: "`前にすすむ 100 ピクセル`の100を200にかえて、へんをかいてください。"
        courseE_artist_ramp8_b: |-
          4つの辺をかくには、`うごく まえに 100 ピクセル`を くり返しの中に入れます。くり返しの回数は4だよ。

          曲がるのを わすれないでね。
        courseE_artist_ramp8_c: くり返しのなかに入れるのは、`すすむ まえに` と `まがる みぎに 90度`の ２つだよ。
      courseE_artist_ramp8_2:
        courseE_artist_ramp8_a: "`前にすすむ 100 ピクセル`の100を200にかえて、へんをかいてください。"
        courseE_artist_ramp8_b: |-
          4つの辺をかくには、`うごく まえに 100 ピクセル`を くり返しの中に入れます。くり返しの回数は4だよ。

          曲がるのを わすれないでね。
        courseE_artist_ramp8_c: くり返しのなかに入れるのは、`すすむ まえに` と `まがる みぎに 90度`の ２つだよ。
      courseE_artist_ramp9:
        courseD_artist_ramp12_a: 四角形をかくのと同じだけど、どこを変えればいいかな？
        courseD_artist_ramp12_b: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseD_artist_ramp12_c: それぞれの辺をかくには、100ピクセル前に進んで、120度右に曲がります。何回、くり返せばいいかな？
      courseE_artist_ramp9_2:
        courseD_artist_ramp12_a: 四角形をかくのと同じだけど、どこを変えればいいかな？
        courseD_artist_ramp12_b: "`まがる`のドロップダウンメニューで 曲がる角度を 指定できます。"
        courseD_artist_ramp12_c: それぞれの辺をかくには、100ピクセル前に進んで、120度右に曲がります。何回、くり返せばいいかな？
      courseE_bee_concept1:
        courseE_bee_concept1_b: どんな_くり返し_のパターンになっているかな？
        courseE_bee_concept1_a: くり返しの入れ子がわからないときは、どのような動きをすればよいか１つ１つ紙に書いてみよう。くり返しのパターンは見つかるかな。
      courseE_bee_concept1_2018:
        courseE_bee_concept1_b: どんな_くり返し_のパターンになっているかな？
        courseE_bee_concept1_a: くり返しの入れ子がわからないときは、どのような動きをすればよいか１つ１つ紙に書いてみよう。くり返しのパターンは見つかるかな。
      courseE_bee_concept2:
        courseE_bee_concept2_a: "`前に道がある間` を使ってみよう。"
        courseE_bee_concept2_d: もし ハチミツ > 0で、ハチミツがなくなったどうか調べることができます。
        courseE_bee_concept2_b: "`前に道がある間` を使って、ハチミツを作りながら、道を最後まで進みます。"
        courseE_bee_concept2_c: 道を最後まで行ったら、どっちに曲がる？
      courseE_bee_concept2_2018:
        courseE_bee_concept2_a: "`前に道がある間` を使ってみよう。"
        courseE_bee_concept2_b: "`前に道がある間` を使って、ハチミツを作りながら、道を最後まで進みます。"
        courseE_bee_concept2_c: 道を最後まで行ったら、どっちに曲がる？
      courseE_bee_concept3:
        courseE_bee_concept3a_a: "`くり返し`の入れ子を使ってみよう。"
        courseE_bee_concept3a_b: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
        courseE_bee_concept3a_c: 花のあるところは３つなので、外側の `くり返し`は、3回です。
      courseE_bee_concept3_2018:
        courseE_bee_concept3a_b: どこをくり返せばいいのか わからないときは、くり返しを使わずにプログラムを書いて、くり返しのパターンを見つけましょう。
      courseE_bee_concept4:
        courseE_bee_concept4_a: "`もし やること/でなければ`を使ってみよう。"
        courseE_bee_concept4_b: かいだんのパターンを使えば、すべての花とハチの巣のところに行くことができます。
        courseE_bee_concept4_c: 花なら、何回ミツを集めればいいかな？全部同じかな？
      courseE_bee_concept4_2018:
        courseE_bee_concept4_a: "`もし やること/でなければ`を使ってみよう。"
        courseE_bee_concept4_b: かいだんのパターンを使えば、すべての花とハチの巣のところに行くことができます。
        courseE_bee_concept4_c: 花なら、何回ミツを集めればいいかな？全部同じかな？
      courseE_bee_concept5:
        courseE_bee_concept5_a: 花は、長方形にさいています。長方形は、たてと横で 辺の長さが ちがうので、`前に道がある間`を使おう。
        courseE_bee_concept5_c: |-
          赤い線にそって、進んでみよう。

          ![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: 花がないところはわかっているけど、すべての場所で `もし` を使って、花があるか調べよう。
      courseE_bee_concept5_2018:
        courseE_bee_concept5_a: 花は、長方形にさいています。長方形は、たてと横で 辺の長さが ちがうので、`前に道がある間`を使おう。
        courseE_bee_concept5_c: |-
          赤い線にそって、進んでみよう。

          ![](https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png)
        courseE_bee_concept5_b: 花がないところはわかっているけど、すべての場所で `もし` を使って、花があるか調べよう。
      courseE_bee_functions1:
        courseE_bee_functions1_a: 左右どちらに曲がるかは、ハチが向いている方向から考えてください。
        courseE_bee_functions1_b: ミツを集めるとき`くりかえし` を使えば、プログラムを短くすることができます。
        courseE_bee_functions1_c: 左右どちらに曲がるかは、ハチが向いている方向から考えてください。
      courseE_bee_functions10:
        courseE_bee_functions10_a: ハチの巣の数は それぞれ ちがっているので、 `以下の間`を使ってハチミツを作ろう。
        courseE_bee_functions10_b: 関数の中には曲がるとすすむを入れてください。メインの道から、関数を呼びましょう。
        courseE_bee_functions10_c: 関数を呼ぶのは、メインのプログラムからです。
      courseE_bee_functions2:
        courseE_bee_functions2_a: 関数はすでにできているので、花のところで関数を呼びます。
        courseE_bee_functions2_b: <xml><block type="procedures_callnoreturn"><mutation
          name="get 2 nectar"/></block></xml> で関数を呼び出すことができます。
        courseE_bee_functions2_c: このパズルをクリアするには、前に進むと"get 2 nectar " を2度行います。
      courseE_bee_functions3:
        courseE_bee_functions3_a: 'ミツを集める関数の中には、`前に すすむ` や `まがる` を使っては いけません。 '
        courseE_bee_functions3_b: "`実行（じっこう）した時` の下で、関数 `get 5` を呼ぼう。"
        courseE_bee_functions3_c: 移動は メインのプログラムで行い、ハチが 花に着いた時に やることは 関数で行います。
        courseE_bee_functions3_d: 赤い線にそって移動しよう。
      courseE_bee_functions4:
        courseE_bee_functions4_a: 関数は、横道に入ってミツをとって もどってくるように なっているので、さわらなくていいよ。
        courseE_bee_functions4_b: 緑の`move and get nectar`を使って関数を呼んでみよう。
        courseE_bee_functions4_c: 関数をへんこうせず、そのまま使ってね
      courseE_bee_functions5:
        courseE_bee_functions5_a: メインしょりはへんこうせず、関数を作ってパズルをクリアしよう。
        courseE_bee_functions5_c: "`前に すすむ` は、`後ろに すすむ`に 変えることがきます。横道をつきあたりまで行ったら、曲がるのではなく
          後ろにすすむに でもどってこよう。"
        courseE_bee_functions5_b: |-
          関数でハチにさせること

          -   曲がる
          -   前に すすむ
          -   ミツを ぜんぶ とる
          -   後ろに すすむ
          -   もともと向いていた方向に曲がる
      courseE_bee_functions6:
        courseE_bee_functions6_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
        courseE_bee_functions6_b: 関数のなかで `すすむ` を使いますが、使うのは関数の中だけじゃないよ。
      courseE_bee_functions7:
        courseE_bee_functions7_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        courseE_bee_functions7_b: |-
          緑の関数ブロックの中にコードを書くことを覚えておいてください。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
        courseE_bee_functions7_c: 横道を行って、ミツを集め、ハチミツを作ってもといた場所にもどってくる関数を作ろう。ミツを全部集めてハチミツを作って！
      courseE_bee_functions8:
        courseE_bee_functions8_a: 関数で行うのはミツを集めるだけ。くりかえしではなく、以下の間を使ってくり返そう。
        courseE_bee_functions8_b: ぜんぶのミツを集めるのに使うのは、`以下の間 花のミツ > 0` 。
        courseE_bee_functions8_c: メインのプログラムは、かいだんのパターンです。メインのプログラムは、`実行（じっこう）したとき`の下にコーディングします。
      courseE_bee_functions9:
        courseE_bee_functions9_a: 関数の中身は、さっきやったパズルと同じです。花に着いたとき、ミツをすべて集める関数を作ろう。
        courseE_bee_functions9_b: 花にはミツがいくつあるかわからないので、 `以下の間` を使ってミツを集めましょう。
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        courseE_bee_functions_challenge1_b: 緑の関数の中に コーディングしてみよう。
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        courseE_bee_functions_challenge1_b: 緑の関数の中に コーディングしてみよう。
      courseE_farmer_concept1:
        courseE_farmer_concept1_a: あなをうめるときには、`以下の間 あながある`を使いましょう。
        courseE_farmer_concept1_b: あなのところに行くには、かいだんのパターンを使おう。
      courseE_farmer_concept1_2018:
        courseE_farmer_concept1_a: あなをうめるときには、`以下の間 あながある`を使いましょう。
        courseE_farmer_concept1_b: あなのところに行くには、かいだんのパターンを使おう。
      courseE_farmer_concept2:
        courseE_farmer_concept2_a: 横道の長さはすべて同じだけど、そこへ行くまでの長さはちがっています。くり返しは使えないので、関数を使おう。
        courseE_farmer_concept2_b: 道を曲がって、横道に入ってカボチャを集め、もとにもどってくる関数を作ろう。
        courseE_farmer_concept2_c: 緑の`do something`で、関数を呼び出すことができます。
      courseE_farmer_concept2_2018:
        courseE_farmer_concept2_a: 横道の長さはすべて同じだけど、そこへ行くまでの長さはちがっています。くり返しは使えないので、関数を使おう。
        courseE_farmer_concept2_b: 道を曲がって、横道に入ってカボチャを集め、もとにもどってくる関数を作ろう。
        courseE_farmer_concept2_c: 緑の`do something`で、関数を呼び出すことができます。
      courseE_farmer_concept3:
        grade3_robotFarmer_ConditionalsIntro_8_a: "`前に道がある間` を使えば、道の長さがちがっても端っこまで行くことができます。"
        grade3_robotFarmer_ConditionalsIntro_8_b: 道を最後まで行くには、どうすればいいかな？
        grade3_robotFarmer_ConditionalsIntro_8_c: まっすぐ進むのを何回かくり返すには、`くりかえし`を使います。
      courseE_farmer_concept3_2018:
        grade3_robotFarmer_ConditionalsIntro_8_a: "`前に道がある間` を使えば、道の長さがちがっても端っこまで行くことができます。"
        grade3_robotFarmer_ConditionalsIntro_8_b: 道を最後まで行くには、どうすればいいかな？
        grade3_robotFarmer_ConditionalsIntro_8_c: まっすぐ進むのを何回かくり返すには、`くりかえし`を使います。
      courseE_farmer_functions1:
        courseE_farmer_functions1_a: こんどのツールボックスは前とちょっとちがいます。クリックすると そのカテゴリに ある命令が
          出てきます。
        courseE_farmer_functions1_b: カボチャをしゅうかくするのは1回だけど、そこへ行くのにくり返しを使います。
      courseE_farmer_functions10b:
        courseE_farmer_functions10b_a: 最初に関数を定義しよう。
        courseE_farmer_functions10b_b: １つめのカボチャをしゅうかくした後 どっちに曲がればいい？
        courseE_farmer_functions10b_c: どのような関数を作ればいいのか わからないときは、１つ前のパズルを見返してみよう。
      courseE_farmer_functions1_2018:
        courseE_farmer_functions1_a: こんどのツールボックスは前とちょっとちがいます。クリックすると そのカテゴリに ある命令が
          出てきます。
        courseE_farmer_functions1_b: カボチャをしゅうかくするのは1回だけど、そこへ行くのにくり返しを使います。
      courseE_farmer_functions1_2019:
        courseE_farmer_functions1_a: こんどのツールボックスは前とちょっとちがいます。クリックすると そのカテゴリに ある命令が
          出てきます。
        courseE_farmer_functions1_b: カボチャをしゅうかくするのは1回だけど、そこへ行くのにくり返しを使います。
      courseE_farmer_functions1a:
        courseE_farmer_functions1a_a: "`もし やること/でなければ`を使うのはどうかな？トウモロコシが植わっていたら、何をするのかな？"
        courseE_farmer_functions1a_b: "`までを くりかえします`を使ってカボチャのところまで行きます。"
      courseE_farmer_functions1a_2018:
        courseE_farmer_functions1a_b: "`までを くりかえします`を使ってカボチャのところまで行きます。"
      courseE_farmer_functions1a_2019:
        courseE_farmer_functions1a_b: "`までを くりかえします`を使ってカボチャのところまで行きます。"
      courseE_farmer_functions2b:
        courseE_farmer_functions2b_a: "`までを くりかえします カボチャがあります。`を使って、道を最後まで 進もう。"
        courseE_farmer_functions2b_b: 道の角にトウモロコシはありませんが、道にそって進んでいこう。
        courseE_farmer_functions2b_c: すべての作物をしゅうかくするのは、`までを くりかえします`を２つ使います。
      courseE_farmer_functions2b_2018:
        courseE_farmer_functions2b_b: 道の角にトウモロコシはありませんが、道にそって進んでいこう。
        courseE_farmer_functions2b_c: すべての作物をしゅうかくするのは、`までを くりかえします`を２つ使います。
      courseE_farmer_functions2b_2019:
        courseE_farmer_functions2b_b: 道の角にトウモロコシはありませんが、道にそって進んでいこう。
        courseE_farmer_functions2b_c: すべての作物をしゅうかくするのは、`までを くりかえします`を２つ使います。
      courseE_farmer_functions2ba:
        courseE_farmer_functions2ba_a: 関数を呼び出すには、緑の`corn and pumpkin`を使います。
        courseE_farmer_functions2ba_b: "`実行（じっこう）した時`の下で関数を呼び出して、どのように動くか見てみよう。"
      courseE_farmer_functions3c:
        courseE_farmer_functions3c_a: プログラムの中で何回もくり返しているパターンがあるのがわかる？それを関数のなかに 入れることができますか？
        courseE_farmer_functions3c_b: 削除したところで関数を呼び出すのをわすれないでね。
      courseE_farmer_functions4b:
        courseE_farmer_functions4b_a: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
        courseE_farmer_functions4b_b: まっすぐ行った後、曲がってね。
        courseE_farmer_functions4b_c: 緑の`corn and pumpkin` は、ツールボックスの関数（かんすう）のなかにあります。
      courseE_farmer_functions5c:
        courseE_farmer_functions5c_a: くり返しを使うパターンは、ほかにもありますか？
        courseE_farmer_functions5c_b: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseE_farmer_functions6c:
        courseE_farmer_functions6c_a: 関数のなかで レタスかどうか 調べてみよう。
        courseE_farmer_functions6c_b: レタスがあるか何もないの調べるのに、`もし やること/でなければ`を使ってみるのは どうでしょう？
        courseE_farmer_functions6c_c: トウモロコシかどうか調べるのをわすれないで！
      courseE_farmer_functions7b:
        courseE_farmer_functions7b_a: 関数を使わなくてもクリアすることができます。
        courseE_farmer_functions7b_b: "`もし やること/でなければ` を使って作物が何か調べて、作物の種類によって曲がる方向を変えよう。"
        courseE_farmer_functions7b_c: 迷路の道を全部通るには、`までを くりかえします カボチャがあります`を使います。
      courseE_farmer_functions8b:
        courseE_farmer_functions8b_a: プログラムを実行したら どうなるか見てみて、どこを 直せばいいか 考えよう？
        courseE_farmer_functions8b_b: 最初からあるプログラムを全部関数の中に入れて、それを何回か呼び出そう。
        courseE_farmer_functions8b_c: 関数を呼ぶのは何回？
      courseE_farmer_functions9b:
        courseE_farmer_functions9b_a: 道にそって進むには、`もし やること` や`もし やること/でなければ`を入れ子にして
          使います。
        courseE_farmer_functions9b_b: すべての道を通るには、`までを くりかえします カボチャがあります`を使います。
        courseE_farmer_functions9b_c: 四角形をかいたら さらに 大きな 四角形をかくように 道を進みます。
      courseE_farmer_ramp11a:
        courseE_farmer_ramp12_a: '土をかたづける回数を指定しなければならない `くりかえし`の代わりに、`以下の間 山があります`を使おう。  '
        courseE_farmer_ramp12_b: 山のところに行くのに、1回だけ前に進んでください。
      courseE_farmer_ramp11a_2018:
        courseE_farmer_ramp12_a: '土をかたづける回数を指定しなければならない `くりかえし`の代わりに、`以下の間 山があります`を使おう。  '
        courseE_farmer_ramp12_b: 山のところに行くのに、1回だけ前に進んでください。
      courseE_farmer_ramp11a_2019:
        courseE_farmer_ramp12_a: '土をかたづける回数を指定しなければならない `くりかえし`の代わりに、`以下の間 山があります`を使おう。  '
        courseE_farmer_ramp12_b: 山のところに行くのに、1回だけ前に進んでください。
      courseE_farmer_ramp12f:
        courseE_farmer_ramp12f_b: 右に行くか左に曲がるか決めるのに、`もし やること/でなければ`を使おう。
      courseE_farmer_ramp12f_2018:
        courseE_farmer_ramp12f_b: 右に行くか左に曲がるか決めるのに、`もし やること/でなければ`を使おう。
      courseE_farmer_ramp12f_2019:
        courseE_farmer_ramp12f_b: 右に行くか左に曲がるか決めるのに、`もし やること/でなければ`を使おう。
      courseE_farmer_ramp12g:
        courseE_farmer_ramp12G_b: 右に行くか左に曲がるか決めるのに、`もし やること/でなければ`を使おう。
      courseE_farmer_ramp12g_2018:
        courseE_farmer_ramp12G_b: 右に行くか左に曲がるか決めるのに、`もし やること/でなければ`を使おう。
      courseE_farmer_ramp12g_2019:
        courseE_farmer_ramp12G_b: 右に行くか左に曲がるか決めるのに、`もし やること/でなければ`を使おう。
      courseE_playLab_challenge1:
        courseE_playLab_challenge1_a: |-
          勝った時にやること

          -   きょうりゅうをけす
          -   リスの動きを止める
          -   リスときしをうれいし顔にする
          -   はいけいを変える
          -   きしに感謝のことばをしゃべらせる
          -   すべてのキャラをけして、タイトル画面で"You Win!" を出す
        courseE_playLab_challenge1_b: |-
          負けた時にやること

          -   きしをけす
          -   リスをかなしい顔にする
          -   きょうりゅうに何か言わせる
          -   はいけいをかえる
          -   すべてのキャラをけして、タイトル画面で"Game Over" を出す
      courseE_playLab_scaffold1:
        courseE_playLab_scaffold1_a: "`セット キャラ 1 ??? の絵`で、キャラを追加することができます。"
        courseE_playLab_scaffold1_b: プログラムが開始したときにキャラが登場するよう `実行（じっこう）した時`の下に`セット
          キャラ`を追加しよう。
        courseE_playLab_scaffold1_c: はいけいを変えるには、 `はいけいを ??? にする`を使います。
      courseE_playLab_scaffold2:
        courseE_playLab_scaffold1_a: "`もし ____ おされたら`のドロップダウンメニューで矢じるしキーの方向を変えることができます。"
        courseE_playLab_scaffold1_b: 4つの方向の`矢じるしキーがおされたら`を作って、その下に キャラを 動かす命令を 追加しよう。
        courseE_playLab_scaffold1_c: それができたら、キャラを矢じるしキーで動かすことができるようになります。
      courseE_playLab_scaffold4:
        courseE_playLab_scaffold4_a: ポイントを増やすには`10ポイント ふやす` 減らすには、`10ポイント へらす`を使います。
      courseE_playLab_scaffold5:
        courseE_playLab_scaffold5_a: ゲームを終わらせるには、`勝ちで ゲームの終わり` と`負けで ゲームの終わり`が 必要です。
      courseF_artist_for1:
        courseF_artist_for1_a: |-
          こんなの図形をかくことができるかな？

          ![](https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png)
      courseF_artist_for10:
        courseF_artist_for10_a: この図形をかくには、`セット アルファ―` にcounterをセットして、線の太さに `counter`÷10をセットします。
        courseF_artist_for10_b: 曲がる角度は61度です。
        courseF_artist_for10_c: |-
          この図形をかく方法が知りたい？

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for10_2018:
        courseF_artist_for10_a: この図形をかくには、`セット アルファ―` にcounterをセットして、線の太さに `counter`÷10をセットします。
        courseF_artist_for10_b: 曲がる角度は61度です。
        courseF_artist_for10_c: |-
          この図形をかく方法が知りたい？

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for10_2019:
        courseF_artist_for10_a: この図形をかくには、`セット アルファ―` にcounterをセットして、線の太さに `counter`÷10をセットします。
        courseF_artist_for10_b: 曲がる角度は61度です。
        courseF_artist_for10_c: |-
          この図形をかく方法が知りたい？

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#ff0000</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">15</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">175</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">61</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for1_2018:
        courseF_artist_for1_a: |-
          こんなの図形をかくことができるかな？

          ![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)
      courseF_artist_for1_2019:
        courseF_artist_for1_a: |-
          こんなの図形をかくことができるかな？

          ![](https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png)
      courseF_artist_for2:
        courseF_artist_for2_a: |-
          内側の `くりかえし`で三角形をかくときの長さに `counter` を使います。

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: くりかえしの中で10毎カウントされます。
        courseF_artist_for2_c: |-
          こんなふうにかきます。

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2018:
        courseF_artist_for2_a: |-
          内側の `くりかえし`で三角形をかくときの長さに `counter` を使います。

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: くりかえしの中で10毎カウントされます。
        courseF_artist_for2_c: |-
          こんなふうにかきます。

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for2_2019:
        courseF_artist_for2_a: |-
          内側の `くりかえし`で三角形をかくときの長さに `counter` を使います。

          <xml><block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
              </xml>
        courseF_artist_for2_b: くりかえしの中で10毎カウントされます。
        courseF_artist_for2_c: |-
          こんなふうにかきます。

          ![](<https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif>)
      courseF_artist_for3:
        courseF_artist_for3_a: |-
          `まで` のくり返しで三角形の大きさをコントロールします。`前に すすむ`ときの距離として変数`counter` を使います。

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_artist_for3_2018:
        courseF_artist_for3_a: |-
          `まで` のくり返しで三角形の大きさをコントロールします。`前に すすむ`ときの距離として変数`counter` を使います。

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_artist_for3_2019:
        courseF_artist_for3_a: |-
          `まで` のくり返しで三角形の大きさをコントロールします。`前に すすむ`ときの距離として変数`counter` を使います。

          <xml>
          <block type="draw_move" inline="true">
                <title name="DIR">moveForward</title>
                <value name="VALUE">
                  <block type="variables_get">
                    <title name="VAR">counter</title>
                  </block>
                </value>
              </block>
          </xml>
        courseF_artist_for3_b: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_artist_for4:
        courseF_artist_for4_a: |-
          **一番小さな数字はいくつ？\
          一番大きな数字はいくつ？\
          いくつずつ増やせばいい？**

          これらの質問の答えを`まで`ブロックの3つの空欄に入れましょう。
        courseF_artist_for4_b: 今回のプログラムは、さっきやったパズルとほぼ同じですが、四角形をかくところがちがっています。
        courseF_artist_for4_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_artist_for4_2018:
        courseF_artist_for4_a: |-
          **一番小さな数字はいくつ？\
          一番大きな数字はいくつ？\
          いくつずつ増やせばいい？**

          これらの質問の答えを`まで`ブロックの3つの空欄に入れましょう。
        courseF_artist_for4_b: 今回のプログラムは、さっきやったパズルとほぼ同じですが、四角形をかくところがちがっています。
        courseF_artist_for4_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_artist_for4_2019:
        courseF_artist_for4_a: |-
          **一番小さな数字はいくつ？\
          一番大きな数字はいくつ？\
          いくつずつ増やせばいい？**

          これらの質問の答えを`まで`ブロックの3つの空欄に入れましょう。
        courseF_artist_for4_b: 今回のプログラムは、さっきやったパズルとほぼ同じですが、四角形をかくところがちがっています。
        courseF_artist_for4_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_artist_for5:
        courseF_artist_for5_a: らせんをかくのに、内側の`くりかえし`は必要ありません。
        courseF_artist_for5_b: "`まで`のくり返しの中に残るのは、進むと曲がるだけです。"
      courseF_artist_for5_2018:
        courseF_artist_for5_a: らせんをかくのに、内側の`くりかえし`は必要ありません。
        courseF_artist_for5_b: "`まで`のくり返しの中に残るのは、進むと曲がるだけです。"
      courseF_artist_for5_2019:
        courseF_artist_for5_a: らせんをかくのに、内側の`くりかえし`は必要ありません。
        courseF_artist_for5_b: "`まで`のくり返しの中に残るのは、進むと曲がるだけです。"
      courseF_artist_for6:
        courseF_artist_for6_a: "`まで`で 15から300まで 15毎にカウントします。"
        courseF_artist_for6_b: "`まで`の中に `前に すすむ` と `まがる`を入れてください。"
        courseF_artist_for6_c: 変更するのは、`まがる`角度だけです。
      courseF_artist_for6_2018:
        courseF_artist_for6_a: "`まで`で 15から300まで 15毎にカウントします。"
        courseF_artist_for6_b: "`まで`の中に `前に すすむ` と `まがる`を入れてください。"
        courseF_artist_for6_c: 変更するのは、`まがる`角度だけです。
      courseF_artist_for6_2019:
        courseF_artist_for6_a: "`まで`で 15から300まで 15毎にカウントします。"
        courseF_artist_for6_b: "`まで`の中に `前に すすむ` と `まがる`を入れてください。"
        courseF_artist_for6_c: 変更するのは、`まがる`角度だけです。
      courseF_artist_for7:
        courseF_artist_for7_a: 線は細くしてね。最初に線の太さを `1` をセットしてください。
        courseF_artist_for7_b: 注意 このパターンでは左に曲がるところを右に曲がります。
        courseF_artist_for7_c: "`まで` は、15から300まで2ずつ変えます。"
        courseF_artist_for7_d: 曲がる角度は、89度のままです。
      courseF_artist_for7_2018:
        courseF_artist_for7_a: 線は細くしてね。最初に線の太さを `1` をセットしてください。
        courseF_artist_for7_b: 注意 このパターンでは左に曲がるところを右に曲がります。
        courseF_artist_for7_c: "`まで` は、15から300まで2ずつ変えます。"
        courseF_artist_for7_d: 曲がる角度は、89度のままです。
      courseF_artist_for7_2019:
        courseF_artist_for7_a: 線は細くしてね。最初に線の太さを `1` をセットしてください。
        courseF_artist_for7_b: 注意 このパターンでは左に曲がるところを右に曲がります。
        courseF_artist_for7_c: "`まで` は、15から300まで2ずつ変えます。"
        courseF_artist_for7_d: 曲がる角度は、89度のままです。
      courseF_artist_for8:
        courseF_artist_for8_a: プログラムはそのままで、曲がる角度だけを変えよう。
        courseF_artist_for8_b: 色を変えることもできます。
      courseF_artist_for8_2018:
        courseF_artist_for8_a: プログラムはそのままで、曲がる角度だけを変えよう。
        courseF_artist_for8_b: 色を変えることもできます。
      courseF_artist_for8_2019:
        courseF_artist_for8_a: プログラムはそのままで、曲がる角度だけを変えよう。
        courseF_artist_for8_b: 色を変えることもできます。
      courseF_artist_for9:
        courseF_artist_for9_a: "`セット アルファ―` を `まで`の中に入れて、変数 `counter`をセットすれば、このパターンをかくことができます。"
        courseF_artist_for9_b: "`セット アルファ―` で、色の透明度を変えることができます。小さいほど、透明になります。"
      courseF_artist_for9_2018:
        courseF_artist_for9_a: "`セット アルファ―` を `まで`の中に入れて、変数 `counter`をセットすれば、このパターンをかくことができます。"
        courseF_artist_for9_b: "`セット アルファ―` で、色の透明度を変えることができます。小さいほど、透明になります。"
      courseF_artist_for9_2019:
        courseF_artist_for9_a: "`セット アルファ―` を `まで`の中に入れて、変数 `counter`をセットすれば、このパターンをかくことができます。"
        courseF_artist_for9_b: "`セット アルファ―` で、色の透明度を変えることができます。小さいほど、透明になります。"
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
        courseF_artist_for_challenge1_d: 答えは先生に聞いてくださいね。
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
        courseF_artist_for_challenge1_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
        courseF_artist_for_challenge1_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
        courseF_artist_for_challenge2_b: このパターンをかくのは、思ったほどむつしくないです。くり返しの中で色をセットして、前に進んで曲がるだけ。
        courseF_artist_for_challenge2_d: |-
          **こたえ**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
        courseF_artist_for_challenge2_b: このパターンをかくのは、思ったほどむつしくないです。くり返しの中で色をセットして、前に進んで曲がるだけ。
        courseF_artist_for_challenge2_d: 答えは先生に聞いてくださいね。
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
        courseF_artist_for_challenge2_b: このパターンをかくのは、思ったほどむつしくないです。くり返しの中で色をセットして、前に進んで曲がるだけ。
        courseF_artist_for_challenge2_d: |-
          **こたえ**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_fwp6:
        courseF_artist_fwp6_a: 何回やっても、だいじょうぶ。いろいろとパラメータをかえて ためしてね。
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
      courseF_artist_variables10:
        courseF_artist_variables10_a: 楽しんでる？ プログラムを少し変えてどうなるか見てみよう。
        courseF_artist_variables10_b: いろんなところを変えて、何回も実行してみよう。
      courseF_artist_variables10_2018:
        courseF_artist_variables10_a: 楽しんでる？ プログラムを少し変えてどうなるか見てみよう。
        courseF_artist_variables10_b: いろんなところを変えて、何回も実行してみよう。
      courseF_artist_variables10_2019:
        courseF_artist_variables10_a: 楽しんでる？ プログラムを少し変えてどうなるか見てみよう。
        courseF_artist_variables10_b: いろんなところを変えて、何回も実行してみよう。
      courseF_artist_variables2:
        courseF_artist_variables2_a: 三角形を1つかいたら、前に進みましょう。
        courseF_artist_variables2_b: 三角形をかくくり返し と`うごく 進むに`を もう一つのくり返しの中に入れます。
      courseF_artist_variables2_2018:
        courseF_artist_variables2_a: 三角形を1つかいたら、前に進みましょう。
        courseF_artist_variables2_b: 三角形をかくくり返し と`うごく 進むに`を もう一つのくり返しの中に入れます。
      courseF_artist_variables2_2019:
        courseF_artist_variables2_a: 三角形を1つかいたら、前に進みましょう。
        courseF_artist_variables2_b: 三角形をかくくり返し と`うごく 進むに`を もう一つのくり返しの中に入れます。
      courseF_artist_variables3:
        courseF_artist_variables3_a: 変数 `length`は、2カ所で使います。三角形の長さ と 次の三角形かくときにすすむ量
          です。
        courseF_artist_variables3_b: 50を入れた数字のブロックを使うのは1回だけで、`セット length は`で使います。
      courseF_artist_variables3_2018:
        courseF_artist_variables3_a: 変数 `length`は、2カ所で使います。三角形の長さ と 次の三角形かくときにすすむ量
          です。
      courseF_artist_variables3_2019:
        courseF_artist_variables3_a: 変数 `length`は、2カ所で使います。三角形の長さ と 次の三角形かくときにすすむ量
          です。
      courseF_artist_variables4:
        courseF_artist_variables4_a: プログラムは、さっきのパズルとほとんど同じ。でも、アーティストの向きを変えて下にジャンプさせて、また向きを変えて次の三角形をかき始める場所までジャンプさせる必要があります。
        courseF_artist_variables4_c: |-
          アーティストをこんなふうに動かします。

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018:
        courseF_artist_variables4_c: |-
          アーティストをこんなふうに動かします。

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
      courseF_artist_variables4_2019:
        courseF_artist_variables4_c: |-
          アーティストをこんなふうに動かします。

          ![](https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif)
      courseF_artist_variables5:
        courseF_artist_variables5_a: 追加する三角形をかくくり返しは、ジャンプする方向を除いて、最初のくり返しとまったく同じです。
        courseF_artist_variables5_b: 最初のくり返しで三角形を3つかいて、次のくり返しで残りの3つをかこう。
        courseF_artist_variables5_c: まず、最初のくり返しをコピーして、それを変更して2つ目のくり返しを作ろう。
        courseF_artist_variables5_d: |-
          こんなふうにかいてみよう。

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2018:
        courseF_artist_variables5_a: 追加する三角形をかくくり返しは、ジャンプする方向を除いて、最初のくり返しとまったく同じです。
        courseF_artist_variables5_b: 最初のくり返しで三角形を3つかいて、次のくり返しで残りの3つをかこう。
        courseF_artist_variables5_c: まず、最初のくり返しをコピーして、それを変更して2つ目のくり返しを作ろう。
        courseF_artist_variables5_d: |-
          こんなふうにかいてみよう。

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables5_2019:
        courseF_artist_variables5_a: 追加する三角形をかくくり返しは、ジャンプする方向を除いて、最初のくり返しとまったく同じです。
        courseF_artist_variables5_b: 最初のくり返しで三角形を3つかいて、次のくり返しで残りの3つをかこう。
        courseF_artist_variables5_c: まず、最初のくり返しをコピーして、それを変更して2つ目のくり返しを作ろう。
        courseF_artist_variables5_d: |-
          こんなふうにかいてみよう。

          ![](https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif)
      courseF_artist_variables6:
        courseF_artist_variables6_a: プログラムをの先頭にある数字を変えるだけでクリアできた！変数って便利だね。
        courseF_artist_variables6_b: 50になっている数字のブロックの値を変えるだけで、他は変える必要がありません。
      courseF_artist_variables6_2018:
        courseF_artist_variables6_a: プログラムをの先頭にある数字を変えるだけでクリアできた！変数って便利だね。
        courseF_artist_variables6_b: 50になっている数字のブロックの値を変えるだけで、他は変える必要がありません。
      courseF_artist_variables6_2019:
        courseF_artist_variables6_a: プログラムをの先頭にある数字を変えるだけでクリアできた！変数って便利だね。
        courseF_artist_variables6_b: 50になっている数字のブロックの値を変えるだけで、他は変える必要がありません。
      courseF_artist_variables6a:
        courseF_artist_variables6a_a: 直接数字を書くのではなく、変数`length`を使ったのを覚えてる？
        courseF_artist_variables6a_b: プログラムは三角形をかいたときと同じだけど、かく図形の形がちがっているよ。
        courseF_artist_variables6a_c: まず、四角形をかき、つぎの四角形をかく場所に移動します。最後にそれをくり返しの中に入れます。
        courseF_artist_variables6a_d: |-
          こんなふうにかいてみて！

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2018:
        courseF_artist_variables6a_a: 直接数字を書くのではなく、変数`length`を使ったのを覚えてる？
        courseF_artist_variables6a_b: プログラムは三角形をかいたときと同じだけど、かく図形の形がちがっているよ。
        courseF_artist_variables6a_c: まず、四角形をかき、つぎの四角形をかく場所に移動します。最後にそれをくり返しの中に入れます。
        courseF_artist_variables6a_d: |-
          こんなふうにかいてみて！

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables6a_2019:
        courseF_artist_variables6a_a: 直接数字を書くのではなく、変数`length`を使ったのを覚えてる？
        courseF_artist_variables6a_b: プログラムは三角形をかいたときと同じだけど、かく図形の形がちがっているよ。
        courseF_artist_variables6a_c: まず、四角形をかき、つぎの四角形をかく場所に移動します。最後にそれをくり返しの中に入れます。
        courseF_artist_variables6a_d: |-
          こんなふうにかいてみて！

          ![](https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif)
      courseF_artist_variables7:
        courseF_artist_variables7_a: "`セット length は`を使って、lengthに150をセットしよう。"
        courseF_artist_variables7_b: "`くりかえし`を使えば、三角形をかくプログラムをシンプルにできます。"
        courseF_artist_variables7_c: 三角形の角で左に120度曲がりましょう。
      courseF_artist_variables7_2018:
        courseF_artist_variables7_a: "`セット length は`を使って、lengthに150をセットしよう。"
        courseF_artist_variables7_b: "`くりかえし`を使えば、三角形をかくプログラムをシンプルにできます。"
        courseF_artist_variables7_c: 三角形の角で左に120度曲がりましょう。
      courseF_artist_variables7_2019:
        courseF_artist_variables7_a: "`セット length は`を使って、lengthに150をセットしよう。"
        courseF_artist_variables7_b: "`くりかえし`を使えば、三角形をかくプログラムをシンプルにできます。"
        courseF_artist_variables7_c: 三角形の角で左に120度曲がりましょう。
      courseF_artist_variables8:
        courseF_artist_variables8_b: "`セット length に` で150をセットすることから始めよう。"
        courseF_artist_variables8_c: "`くりかえし`を使って三角形をかこう。"
        courseF_artist_variables8_a: |-
          ループの最後に、これを入れよう。

          <xml>
          <block type="variables_set" inline="false">
                                  <title name="VAR">length</title>
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">ADD</title>
                                      <value name="A">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="math_number">
                                          <title name="NUM">10</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                </block>
          </xml>
      courseF_artist_variables8_2018:
        courseF_artist_variables8_b: "`セット length に` で150をセットすることから始めよう。"
        courseF_artist_variables8_c: "`くりかえし`を使って三角形をかこう。"
        courseF_artist_variables8_a: |-
          ループの最後に、これを入れよう。

          <xml>
          <block type="variables_set" inline="false">
                                  <title name="VAR">length</title>
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">ADD</title>
                                      <value name="A">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="math_number">
                                          <title name="NUM">10</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                </block>
          </xml>
      courseF_artist_variables8_2019:
        courseF_artist_variables8_b: "`セット length に` で150をセットすることから始めよう。"
        courseF_artist_variables8_c: "`くりかえし`を使って三角形をかこう。"
        courseF_artist_variables8_a: |-
          ループの最後に、これを入れよう。

          <xml>
          <block type="variables_set" inline="false">
                                  <title name="VAR">length</title>
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">ADD</title>
                                      <value name="A">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="math_number">
                                          <title name="NUM">10</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                </block>
          </xml>
      courseF_artist_variables9:
        courseF_artist_variables9_a: このパズルでやることは、くり返しの回数をかえるだけです。
        courseF_artist_variables9_b: くり返しのなかで`length`を増やすことで、線をどんどん長くすることができます。
      courseF_artist_variables9_2018:
        courseF_artist_variables9_a: このパズルでやることは、くり返しの回数をかえるだけです。
        courseF_artist_variables9_b: くり返しのなかで`length`を増やすことで、線をどんどん長くすることができます。
      courseF_artist_variables9_2019:
        courseF_artist_variables9_a: このパズルでやることは、くり返しの回数をかえるだけです。
        courseF_artist_variables9_b: くり返しのなかで`length`を増やすことで、線をどんどん長くすることができます。
      courseF_artist_variablesFP:
        courseF_artist_variablesFP_a: |-
          次の3つから1つえらんでかいてみよう。
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2018:
        courseF_artist_variablesFP_a: |-
          次の3つから1つえらんでかいてみよう。
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variablesFP_2019:
        courseF_artist_variablesFP_a: |-
          次の3つから1つえらんでかいてみよう。
          ![](<https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png>)
      courseF_artist_variables_challenge1:
        courseF_artist_variables_challenge1_a: 上下の移動は10ピクセルで、左右の移動には、変数 `length`を使おう。
        courseF_artist_variables_challenge1_b: 変数`length`は、くり返しのなかで 10ピクセル増やすを２回行います。
        courseF_artist_variables_challenge1_c: 使うのは、左に曲がるが2つ、右に曲がるが2つ、前に進むが4つです。
        courseF_artist_variables_challenge1_d: |-
          くり返しは１つです。変数を使うことをのぞけば、ジグザグに行くのと同じです。

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          わからなくなったら、このパターンをかいて、水平方向の線の長さを変えるには、どこに変数を使えばいいのか考えよう。
        courseF_artist_variables_challenge1_e: |-
          これがジグザグに行くプログラム。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge1_2018:
        courseF_artist_variables_challenge1_a: 上下の移動は10ピクセルで、左右の移動には、変数 `length`を使おう。
        courseF_artist_variables_challenge1_b: 変数`length`は、くり返しのなかで 10ピクセル増やすを２回行います。
        courseF_artist_variables_challenge1_c: 使うのは、左に曲がるが2つ、右に曲がるが2つ、前に進むが4つです。
        courseF_artist_variables_challenge1_d: |-
          くり返しは１つです。変数を使うことをのぞけば、ジグザグに行くのと同じです。

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          わからなくなったら、このパターンをかいて、水平方向の線の長さを変えるには、どこに変数を使えばいいのか考えよう。
        courseF_artist_variables_challenge1_e: |-
          これがジグザグに行くプログラム。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge1_2019:
        courseF_artist_variables_challenge1_a: 上下の移動は10ピクセルで、左右の移動には、変数 `length`を使おう。
        courseF_artist_variables_challenge1_b: 変数`length`は、くり返しのなかで 10ピクセル増やすを２回行います。
        courseF_artist_variables_challenge1_c: 使うのは、左に曲がるが2つ、右に曲がるが2つ、前に進むが4つです。
        courseF_artist_variables_challenge1_d: |-
          くり返しは１つです。変数を使うことをのぞけば、ジグザグに行くのと同じです。

          ![](<https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png>)

          わからなくなったら、このパターンをかいて、水平方向の線の長さを変えるには、どこに変数を使えばいいのか考えよう。
        courseF_artist_variables_challenge1_e: |-
          これがジグザグに行くプログラム。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">10</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">18</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_move" inline="true">
                          <title name="DIR">moveForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_turn" inline="true">
                              <title name="DIR">turnRight</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">90</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">length</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">length</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">10</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">10</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_move" inline="true">
                                                      <title name="DIR">moveForward</title>
                                                      <value name="VALUE">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">length</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">ADD</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">length</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">10</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_number">
                                                                  <title name="NUM">90</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_bee_conditionals10:
        courseF_bee_conditionals10_a: くもがあった時を思い出して、このヒントは役に立った？
        courseF_bee_conditionals10_b: "`もし やること/でなければ`を使えば、そこにあるのがミツかハチミツか調べることができます。"
        courseF_bee_conditionals10_c: "`前に道がある間`を使えば、道を最後まで行くことができます。"
      courseF_bee_conditionals2:
        courseF_bee_conditionals2_a: くもの下に花があることもあるし、ないときもあります。`もし`を使えば、両方のケースに対応することができます。
        courseF_bee_conditionals2_b: すべての場所にいくプログラムを作ってから、`もし`文を追加しよう。
      courseF_bee_conditionals3:
        courseF_bee_conditionals3_a: "`もし`文を使えば、そこに花があるかどうか調べることができます。"
        courseF_bee_conditionals3_b: "`くりかえし`を使いましょう、それから、`もし`文をひとつ。"
        courseF_bee_conditionals3_c: １つめのくもを調べるプログラムを書いて、それをくり返すことができますか？
      courseF_bee_conditionals4:
        courseD_bee_conditionals4_a: 花は見えているけど、くものときと同じように花があるか調べよう。
        courseF_bee_conditionals4_b: 'くり返しの中で`もし`を使って、花があるかどうか調べよう。 '
        courseF_bee_conditionals4_c: "`前に道がある間`を使って、`前に すすむ`を行い、花があるか調べます。 `もし 花で`
          で何をしますか？"
      courseF_bee_conditionals5:
        courseF_bee_conditionals5_a: 長方形のすべての辺を通ることを考えよう。くり返しを入れ子にしよう、外側は`回 くりかえす`で、内側は
          `前に道がある間`です。全部の辺をまわってミツを集めるのは、何回くり返しが必要？
        courseF_bee_conditionals5_b: "`前に道がある間`の中には、前に進むと花があるか調べるの2つです。どうやって花があるか調べますか？花があったら、何をしますか？"
        courseF_bee_conditionals5_c: '長方形の3つの辺を行けば花のところへ行けるので、`3 回くりかえす`にします。くり返しの中で`前に道がある間`を使って道にそって進みます。 '
        courseF_bee_conditionals5_d: "`前に すすむ`を使って、道にそって進みます。道を進みながら花があるか調べます。花があったら、何をしますか？"
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: |-
          **注意** このパズルは実行するたびに変わります。

          このパズルをクリアするには、条件ブロック (`もし` または `もし やること/でなければ`) を使います。
        courseF_bee_conditionals8_b: |-
          1つの条件判断文で、ミツかハチミツか、それとも、何もなしか判断すことはできません。

          道の角では、ミツかハチミツか調べます。
        courseF_bee_conditionals8_c: "`前に道がある間`を使って、最初のくもをパスしたらどうなりますか？"
      courseF_bee_for1:
        courseF_bee_for1_a: くり返す回数をむらさき色の数字のブロックに入れて、 `くりかえし`のなかにセットしよう。
        courseF_bee_for1_b: ミツを集めるには、 ‘くりかえし’のなかにブロックを2つ入れます。
      courseF_bee_for10:
        courseF_bee_for10_a: 花までの距離とミツの量の関係はわかるかな？
        courseF_bee_for10_b: 1つめの花には**14個**ミツがあります、花までの距離は、**7**（14を2で割った値）です。次のミツの数はいくつ、花までの距離は？
        courseF_bee_for10_c: "1つめの花のミツは**14**、2つ目は**10**、3つ目が**6**で最後が**2**です。\n\n移動する距離は、赤いブロック**7つ**
          、オレンジのブロック**5つ**、緑のブロックが**3つ**、最後は青が**1つ** です。 \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\n数の関係はどうなっているかな？"
        courseF_bee_for10_d: くり返しは2つ使って、片方には計算ブロックを使います。
      courseF_bee_for10_2018:
        courseF_bee_for10_a: 花までの距離とミツの量の関係はわかるかな？
        courseF_bee_for10_b: 1つめの花には**14個**ミツがあります、花までの距離は、**7**（14を2で割った値）です。次のミツの数はいくつ、花までの距離は？
        courseF_bee_for10_c: "1つめの花のミツは**14**、2つ目は**10**、3つ目が**6**で最後が**2**です。\n\n移動する距離は、赤いブロック**7つ**
          、オレンジのブロック**5つ**、緑のブロックが**3つ**、最後は青が**1つ** です。 \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\n数の関係はどうなっているかな？"
        courseF_bee_for10_d: くり返しは2つ使って、片方には計算ブロックを使います。
      courseF_bee_for10_2019:
        courseF_bee_for10_a: 花までの距離とミツの量の関係はわかるかな？
        courseF_bee_for10_b: 1つめの花には**14個**ミツがあります、花までの距離は、**7**（14を2で割った値）です。次のミツの数はいくつ、花までの距離は？
        courseF_bee_for10_c: "1つめの花のミツは**14**、2つ目は**10**、3つ目が**6**で最後が**2**です。\n\n移動する距離は、赤いブロック**7つ**
          、オレンジのブロック**5つ**、緑のブロックが**3つ**、最後は青が**1つ** です。 \n\n![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11
          Hint Drawing.png>)\n\n数の関係はどうなっているかな？"
        courseF_bee_for10_d: くり返しは2つ使って、片方には計算ブロックを使います。
      courseF_bee_for11:
        courseF_bee_for11_a: |-
          15と12はいくつちがう？\
          9と12は？

          パターンは見つかった？
      courseF_bee_for11_2018:
        courseF_bee_for11_a: |-
          15と12はいくつちがう？\
          9と12は？

          パターンは見つかった？
      courseF_bee_for11_2019:
        courseF_bee_for11_a: |-
          15と12はいくつちがう？\
          9と12は？

          パターンは見つかった？
      courseF_bee_for1_2018:
        courseF_bee_for1_a: くり返す回数をむらさき色の数字のブロックに入れて、 `くりかえし`のなかにセットしよう。
        courseF_bee_for1_b: ミツを集めるには、 ‘くりかえし’のなかにブロックを2つ入れます。
      courseF_bee_for1_2019:
        courseF_bee_for1_a: くり返す回数をむらさき色の数字のブロックに入れて、 `くりかえし`のなかにセットしよう。
        courseF_bee_for1_b: ミツを集めるには、 ‘くりかえし’のなかにブロックを2つ入れます。
      courseF_bee_for2:
        courseF_bee_for2_a: わからなくなったら、１つの花でやって、テストをくり返そう。
        courseF_bee_for2_b: くり返しとくり返しの間に前に進むを入れて、全部の花からミツを集めます。
      courseF_bee_for2_2018:
        courseF_bee_for2_a: わからなくなったら、１つの花でやって、テストをくり返そう。
        courseF_bee_for2_b: くり返しとくり返しの間に前に進むを入れて、全部の花からミツを集めます。
      courseF_bee_for2_2019:
        courseF_bee_for2_a: わからなくなったら、１つの花でやって、テストをくり返そう。
        courseF_bee_for2_b: くり返しとくり返しの間に前に進むを入れて、全部の花からミツを集めます。
      courseF_bee_for4:
        courseF_bee_for4_a: "`まつ`を使えば、1から7まで1づつ数字を変えることができます。"
        courseF_bee_for4_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for4_c: 変数 `counter` は、ミツを集めるくり返し`回くりかえす` の回数に使います。
      courseF_bee_for4_2018:
        courseF_bee_for4_a: "`まつ`を使えば、1から7まで1づつ数字を変えることができます。"
        courseF_bee_for4_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for4_c: 変数 `counter` は、ミツを集めるくり返し`回くりかえす` の回数に使います。
      courseF_bee_for4_2019:
        courseF_bee_for4_a: "`まつ`を使えば、1から7まで1づつ数字を変えることができます。"
        courseF_bee_for4_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for4_c: 変数 `counter` は、ミツを集めるくり返し`回くりかえす` の回数に使います。
      courseF_bee_for5:
        courseF_bee_for5_a: "`前に すすむ` と `花のミツをとる`は、べつべつの`回 くりかえす`にして、両方とも `まで` の中に入れます。"
        courseF_bee_for5_b: 次の花までの距離はそれぞれちがっているので、変数`counter`を使ったくり返しを使います。
        courseF_bee_for5_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_bee_for5_2018:
        courseF_bee_for5_a: "`前に すすむ` と `花のミツをとる`は、べつべつの`回 くりかえす`にして、両方とも `まで` の中に入れます。"
        courseF_bee_for5_b: 次の花までの距離はそれぞれちがっているので、変数`counter`を使ったくり返しを使います。
        courseF_bee_for5_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_bee_for5_2019:
        courseF_bee_for5_a: "`前に すすむ` と `花のミツをとる`は、べつべつの`回 くりかえす`にして、両方とも `まで` の中に入れます。"
        courseF_bee_for5_b: 次の花までの距離はそれぞれちがっているので、変数`counter`を使ったくり返しを使います。
        courseF_bee_for5_c: まちがってもだいじょうぶ！うまく動かなくても、プログラムを実行して修正しよう。
      courseF_bee_for6:
        courseF_bee_for6_a: 変数 `counter` は、`回くりかえす`で使います。
        courseF_bee_for6_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for6_c: くり返しは、 **5 から 1 まで**にします。
      courseF_bee_for6_2018:
        courseF_bee_for6_a: 変数 `counter` は、`回くりかえす`で使います。
        courseF_bee_for6_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for6_c: くり返しは、 **5 から 1 まで**にします。
      courseF_bee_for6_2019:
        courseF_bee_for6_a: 変数 `counter` は、`回くりかえす`で使います。
        courseF_bee_for6_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for6_c: くり返しは、 **5 から 1 まで**にします。
      courseF_bee_for7:
        courseF_bee_for7_a: "`まつ`には、1から７まで２ずつ を指定します。"
        courseF_bee_for7_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for7_c: "`回くりかえす` で変数`counter`を使います。"
      courseF_bee_for7_2018:
        courseF_bee_for7_a: "`まつ`には、1から７まで２ずつ を指定します。"
        courseF_bee_for7_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for7_c: "`回くりかえす` で変数`counter`を使います。"
      courseF_bee_for7_2019:
        courseF_bee_for7_a: "`まつ`には、1から７まで２ずつ を指定します。"
        courseF_bee_for7_b: "`まつ`のなかに `前に すすむ`とミツを集めるくり返しを入れます。"
        courseF_bee_for7_c: "`回くりかえす` で変数`counter`を使います。"
      courseF_bee_for8:
        courseF_bee_for8_a: |-
          インクリメントに指定した値だけ、カウンターが変わっていきます。

          ミツの量と同じにするには、どうすればいいかな？
        courseF_bee_for8_b: すべての花に行くには、階段のパターンを使います。
        courseF_bee_for8_c: くり返しは3から15までにしますが、インクリメントはいくつにすればいい？
      courseF_bee_for8_2018:
        courseF_bee_for8_a: |-
          インクリメントに指定した値だけ、カウンターが変わっていきます。

          ミツの量と同じにするには、どうすればいいかな？
        courseF_bee_for8_b: すべての花に行くには、階段のパターンを使います。
        courseF_bee_for8_c: くり返しは3から15までにしますが、インクリメントはいくつにすればいい？
      courseF_bee_for8_2019:
        courseF_bee_for8_a: |-
          インクリメントに指定した値だけ、カウンターが変わっていきます。

          ミツの量と同じにするには、どうすればいいかな？
        courseF_bee_for8_b: すべての花に行くには、階段のパターンを使います。
        courseF_bee_for8_c: くり返しは3から15までにしますが、インクリメントはいくつにすればいい？
      courseF_bee_for9:
        courseF_bee_for9_a: |-
          変数を使って計算しよう。

          花までの距離とミツの量の関係はどうなっているかな？
        courseF_bee_for9_c: くりかえしの最初で曲がる必要があります。
        courseF_bee_for9_b: "**注意** くり返しの中で変数`counter`は、インクリメントずつ変わります。"
      courseF_bee_for9_2018:
        courseF_bee_for9_a: |-
          変数を使って計算しよう。

          花までの距離とミツの量の関係はどうなっているかな？
        courseF_bee_for9_c: くりかえしの最初で曲がる必要があります。
        courseF_bee_for9_b: "**注意** くり返しの中で変数`counter`は、インクリメントずつ変わります。"
      courseF_bee_for9_2019:
        courseF_bee_for9_a: |-
          変数を使って計算しよう。

          花までの距離とミツの量の関係はどうなっているかな？
        courseF_bee_for9_c: くりかえしの最初で曲がる必要があります。
        courseF_bee_for9_b: "**注意** くり返しの中で変数`counter`は、インクリメントずつ変わります。"
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
        courseF_bee_for_challenge2_d: 答えは先生に聞いてくださいね。
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
        courseF_bee_for_challenge2_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
        courseF_bee_for_challenge2_d: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_functions2:
        courseF_bee_functions2_a: 関数はすでにできているので、花のところで関数を呼びます。
        courseF_bee_functions2_b: 関数`get only nectar`で何を行っているか見るには、青い編集ボタンをクリックします。
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_b: |-
          **答え**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                <mutation name="move and check"></mutation>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="check nectar or honey"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_whileNectarAmount">
                  <title name="ARG1">nectarRemaining</title>
                  <title name="OP">&gt;</title>
                  <title name="ARG2">0</title>
                  <statement name="DO">
                    <block type="maze_nectar"/>
                  </statement>
                  <next>
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      courseF_playlab_variables1a:
        courseF_playlab_variables1a_a: 緑のブロックの“What should I shout?”を“Goal!”に変更しよう。
      courseF_playlab_variables2b:
        courseF_playlab_variables2b_a: "`実行（じっこう）`をクリックしたら、キキは何としゃべりますか？"
      courseF_playlab_variables3b_josh:
        courseF_playlab_variables3b_a: "`キャラ2が 言う` と `つなげる` ブロックの空いているところに変数をセットしよう！"
      courseF_playlab_variables4b:
        courseF_playlab_variables4b_a: ツールボックスからブロックを追加する必要はありません。
        courseF_playlab_variables4b_b: 変数`age`が2つと 変数`name` 1つを 正しい場所に入れてください。
      courseF_playlab_variables5c:
        courseF_playlab_variables5c_a: 変数`answer`は、ツールボックスの“変数”の下にあります。
        courseF_playlab_variables5c_b: テストしよう！“red”と入力したとき、違う色を入力したとき、それぞれどうなるか見てみよう。
      courseF_playlab_variables6c:
        courseF_playlab_variables6c_a: "“Input”の下にある `しつもん`で入力された答えを受け取ります。"
      courseF_playlab_variables7b:
        courseF_playlab_variables7b_a: ネコと犬が好きな食べ物について話しています。しつもんで好きな食べ物をきいて、答えを画面に表示しよう。
        courseF_playlab_variables7b_b: 好きなキャラを出して、ジョークを聞きたいか質問します。答えがYesなら、ジョークを画面に表示します。
      courseF_playlab_variables7c:
        courseF_playlab_variables7c_a: "`もし/でなければ`の前に、新しいブロック`しつもん`を使ってみよう。"
      courseF_playlab_variables8c:
        courseF_playlab_variables8c_a: 変数と長い文を`つなげる`でつなげて、`キャラ 言う`ブロックの中に入れよう。
      courseF_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          キャラに何か言わせるために つぎのブロックを追加しましょう。

          <xml><block type="studio_saySpriteParamsTime" inline="true">
                <value name="SPRITE">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                                <value name="TEXT">
                            <block type="text">
                              <title name="TEXT">Knock knock.</title>
                            </block>
                          </value>
                <value name="TIME">
                  <block type="math_number">
                    <title name="NUM">1</title>
                  </block>
                </value>
                </block></xml>
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_a: "`スコアを設定します。`を使って、キャラがさわったときにポイントを増減させます。"
        courseF_playlab_variables_challenge2_b: 矢印キーが押されたときに 動く距離は 変えることができます。
        courseF_playlab_variables_challenge2_c: |-
          **答え**

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">up</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">1</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">down</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">4</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">8</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">2</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      grade5_artist_variables_triangles1:
        grade5_artist_variables_triangles1_a: 正三角形の内角は60度なので、曲がるときは120度曲がってね。
        grade5_artist_variables_triangles1_b: "`くりかえし`を使えば、プログラムを短くすることができます。"
        grade5_artist_variables_triangles1_c: くり返しの中に50ピクセル前にすすむと左に120度曲がるを入れます。
      grade5_artist_variables_triangles1_2018:
        grade5_artist_variables_triangles1_a: 正三角形の内角は60度なので、曲がるときは120度曲がってね。
        grade5_artist_variables_triangles1_b: "`くりかえし`を使えば、プログラムを短くすることができます。"
        grade5_artist_variables_triangles1_c: くり返しの中に50ピクセル前にすすむと左に120度曲がるを入れます。
      grade5_artist_variables_triangles1_2019:
        grade5_artist_variables_triangles1_a: 正三角形の内角は60度なので、曲がるときは120度曲がってね。
        grade5_artist_variables_triangles1_b: "`くりかえし`を使えば、プログラムを短くすることができます。"
        grade5_artist_variables_triangles1_c: くり返しの中に50ピクセル前にすすむと左に120度曲がるを入れます。
      iceage_click_hello:
        iceage_click_hello_a: "`クリックされたとき` に `キャラ 1 が言う`を引っ付けてください。"
      iceage_free_play:
        iceage_free_play_a: 'シドとマニーを氷の上で戦わせることができるかな？  '
        iceage_free_play_b: グラニーがディエゴを追いかけて、ディエゴをつかまえたら勝ちというのはどう？
        iceage_free_play_c: シドがディエゴに雪片を投げて、ディエゴにあたったらポイントがふえて、5回当たったら勝ちというのはどう？
      iceage_hello1:
        iceage_hello1_a: このパズルをクリアするの必要なのは1ブロックだけ。ツールボックスから `言う`をドラックして、 `実行（じっこう）した時`の下に引っ付けよう。最後に、"こんにちは！"と入れてね。
      iceage_hello2:
        iceage_hello2_a: 'シドにあいさつさせるには、 `キャラ 1 が言う`を、マニーにあいさつさせるには、  `キャラ 2 が言う`を使います。 '
      iceage_move_events:
        iceage_move_events_a: 'それぞれの`___ 矢じるしのとき` に 違う方向の`動かす キャラ 1`を付けてください。 '
      iceage_move_to_actor:
        iceage_move_to_actor_a: このパズルをクリアするのは、ディエゴを200ピクセル下に行かせるか、マニーを200ピクセル上に行かせるかしましょう。
        iceage_move_to_actor_b: "`キャラ1が キャラ2 さわったら` の下に `サウンドを鳴らす` を引っ付ければパズルをクリアできます。"
      iceage_move_to_flag:
        iceage_hello3_a: "`うごかす キャラ1 右に 200 ピクセル` を使ってみよう。"
      iceage_repeat:
        iceage_repeat_a: "`うごかす キャラ 1 左に` と `うごかす キャラ 1 右に`を使います。"
      iceage_sound_and_points:
        iceage_sound_and_points_a: "`キャラ1が キャラ2に さわったら` の下に2つブロックを引っ付けます。"
        iceage_sound_and_points_b: "`ポイントを ふやす` と'勝利ポイントの音を 鳴らす\\` を引っ付けます。"
      iceage_throw_hearts:
        iceage_throw_hearts_a: 何をしたら、グラニーにハートを投げる？矢じるしキーが押されたとき？シドをクリックしたとき？グラニーをクリックしたとき？どれでもいいよ。
        iceage_throw_hearts_b: グラニーをうれしい顔にするには、`キャラ２が だれかがなげた何か にさわったら` に `セット キャラ2を
          うれしいかおにする`を引っ付けます。
      iceage_warn_ice_age:
        iceage_warn_ice_age_a: '2ブロック追加すれば、このパズルをクリアできます。 '
        iceage_warn_ice_age_b: プログラムを実行したときにやることを `実行（じっこう）した時`の下に引っ付けよう。
