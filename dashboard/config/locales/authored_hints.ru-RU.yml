---
ru-RU:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Если ты воспользуешься блоком "двигаться вперёд на 100
          пикселей", то я нарисую линию автоматически.
        2-3_Artist_1_new_b: Сложности с поворотами на углах? Используй блок "повернуть
          направо на 90 градусов".
      2-3 Artist 11:
        2-3_Artist_11_a: 'Возникли проблемы с углами? Тебе нужно пройти 360 градусов
          за 8 ходов. Сколько будет 360 разделить на 8? '
      2-3 Artist 12:
        2-3_Artist_12_a: Всего в круге 360 градусов, так что если художник во время
          цикла будет поворачиваться на 1 градус, то ему надо сделать это 360 раз.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Кажется, художник смотрит не в ту сторону. Поверни его
          перед тем, как он начнёт рисовать.
      2-3 Artist 3new:
        2-3_Artist_3new_a: Сколько будет 100 - 70? По условию задачи, это и есть высота
          шляпы!
        2-3_Artist_3new_b: Кажется, художник смотрит не в ту сторону. Поверни его
          перед тем, как он начнёт рисовать.
      2-3 Artist 4:
        2-3_Artist_4_a: Чтобы закончить дом, всё, что нам нужно, это нарисовать квадрат!
      2-3 Artist 6:
        2-3_Artist_6_a: 'Чтобы рисовать острые углы, тебе нужно поворачивать _больше_,
          чем при рисовании квадрата.   '
        2-3_Artist_6_b: Поскольку я уже повёрнут направо, лучше всего двигаться вперёд,
          а затем повернуться налево, чтобы создать треугольник.
        2-3_Artist_6_c: Каждая сторона треугольника имеет ту же длину, что и каждая
          сторона квадрата, а именно... 100 пикселей!
      2-3 Artist 7:
        2-3_Artist_7_a: Простейший способ решить эту головоломку - нарисовать первый
          квадрат и закончить направлением художника вниз, прежде чем он начнёт свой
          второй квадрат.
      2-3 Artist 8:
        2-3_Artist_8_a: Если ты поделишь 200 пополам, то сколько пикселей в ширину
          нужно каждому квадрату?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Этот ромб на самом деле - обычный квадрат
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: Помни, что тебе нужна крестовина на 10 пикселей
          _шире_... Так что убедись что **добавил** 10 к числу, которое ты меняешь.
        2-3_Artist_Debugging_10_b: "**Реши это методом проб и ошибок!**\nИзменяй только
          одно число за раз. \nВыясни, что делает каждое из чисел в коде. \nЕсли запутаешься,
          просто нажми на \"Начать сначала\", и все изменения сотрутся."
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Подсказка: длина каждого уса 75 пикселей.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Один из поворотов меньше, чем нужно, на 15 градусов.
        2-3_Artist_Debugging_3_b: Если программа выполняется слишком быстро, то чтобы
          посмотреть, что произошло, попробуй замедлить её с помощью ползунка.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: Что будет, если художник пройдёт или прыгнет назад
          после того, как он нарисовал первую линию?
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          Сколько раз моя фигура повторилась?

          Сколько раз она _должна_ повториться?

          Где ты можешь изменить это в программе?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: Художник должен повернуться на 60 градусов влево,
          прежде чем начинать рисовать!
        2-3_Artist_Debugging_9_b: Тебе не нужно добавлять другой блок, чтобы правильно
          повернуть, просто добавь 60 градусов имеющемуся блоку 'повернуть налево'!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: Каждый квадрат имеет стороны в 100 пикселей, и это
          значит, что тебе надо двинуться вперёд на 175 пикселей, прежде чем рисовать
          второй квадрат.
        2-3_Artist_Functions_1_b: Не волнуйся рисовать перекрывающие линии, чтобы
          сделать стёкла.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Тебе нужно поменять не только длину сторон функции,
          но ещё и угол, на который художник поворачивается между каждой стороной.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Попробуй сперва воспроизвести код, чтобы увидеть,
          что нужно добавить.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: Художник должен повернуться на 120 градусов между
          каждым квадратом, чтобы завершить эту задачу.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: "Вспомни код из прошлой задачи: \n\n<xml>\n  <block
          type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block
          type=\"controls_repeat\">\n        <title name=\"TIMES\">8</title>\n        <statement
          name=\"DO\">\n          <block type=\"draw_colour\" inline=\"true\">\n            <value
          name=\"COLOUR\">\n              <block type=\"colour_random\"/>\n            </value>\n
          \           <next>\n              <block type=\"draw_turn_by_constant_dropdown\">\n
          \               <title name=\"DIR\">turnRight</title>\n                <title
          name=\"VALUE\" config=\"45,60,90,120,180\">45</title>\n                <next>\n
          \                 <block type=\"draw_move_by_constant\">\n                    <title
          name=\"DIR\">moveForward</title>\n                    <title name=\"VALUE\">50</title>\n
          \                   <next>\n                      <block type=\"draw_turn_by_constant_dropdown\">\n
          \                       <title name=\"DIR\">turnLeft</title>\n                        <title
          name=\"VALUE\" config=\"45,60,90,120,180\">90</title>\n                        <next>\n
          \                         <block type=\"draw_move_by_constant\">\n                            <title
          name=\"DIR\">moveForward</title>\n                            <title name=\"VALUE\">50</title>\n
          \                         </block>\n                        </next>\n                      </block>\n
          \                   </next>\n                  </block>\n                </next>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
        2-3_Artist_Loops_New_11_b: Твой новое действие должно быть в **конце** кода
          внутри цикла.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Перед началом рисования художник должен повернуться
          налево на 60 градусов.
        2-3_Artist Loops_New_12_b: После того, как художник пройдёт 100 пикселей прямо,
          он должен повернуть направо на 120 градусов, чтобы нарисовать острый угол.
        2-3_Artist Loops_New_12_c: Художнику надо повернуть только на 60 градусов,
          чтобы нарисовать тупой угол.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: "В конце каждого ромба, художник уже смотрит в
          нужную сторону и готов рисовать следующий. \n\nТак что тебе не нужно добавлять
          лишний блок `повернуть влево` перед следующей итерацией."
        2-3_Artist_Loops_New_13_b: "Чтобы нарисовать каждый алмаз, художник должен:
          \n\n-   двигаться\n-   повернуть вправо на 120 градусов\n-   двигаться\n-
          \  повернуть вправо на 60 градусов\n\nЗатем всё это повторить!"
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: Художнику необходимо повернуть направо на 45 градусов,
          прежде чем он начнет рисовать.
        2-3_Artist_Loops_New_9_b: Эта "V" - половина квадрата. Какой код должен быть
          что-бы нарисовать такую фигуру?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Не забудь поместить все серые блоки внутрь своего
          цикла.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: "Нужна помощь с углами? \n**360/12 = 30**"
        2-3_Artist_Nested_Loops_3_b: Не забудь вставить весь "серый код" и блок поворота
          внутрь цикла.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: "Нужна помощь с углами? \n**360/12 = 30**"
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          Попробуй использовать блок "прыжок вперед" что-бы оказаться в верхней части одного квадрата где ты начнешь следующий.

          Если твои квадраты 20 пикселей в высоту и находятся на растоянии в 20 пикселей друг от друга, как далеко тебе нужно прыгнуть?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: |-
          На сколько тебе нужно повернуть в каждом проходе?

          Сколько будет 360 разделить на 10?
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          Не находишь нужный угол?

          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Усердно пытаешься понять, как разместить блоки?
          Попробуй взаимодействовать с красным цветком точно так, как с фиолетовым!
        2-3_Bee_Conditionals_14_b: Если бы вместо красного цветка был фиолетовый,
          смог бы ты понять, как использовать дополнительный цикл `повторить`, чтобы
          сократить количество кода?
        2-3_Bee_Conditionals_14_c: |-
          Попробуй разделить задачу на две отдельные:

          ![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)

          1.  Собери нектар 3 раза
              -   Двигаться вперёд 5 раз
              -   Проверь, есть ли в клетке нектар, если да: собери его
              -   Повернуть влево
          2.  Приготовь мёд
              -   Двигайся вперёд один раз
                  Приготовь два мёда
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Помни: У фиолетовых цветов есть только 0 или 1
          нектар, и они могут меняться с каждым запуском программы.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: Код будет короче всего, если ты будешь использовать
          один цикл для движения вперёд, другой для сбора нектара, а третий для приготовления
          мёда.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Помни: Фиолетовые цветы случайно принимают значения
          между 0 и 1 нектаром после запуска программы!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Если ты нашёл и исправил неправильный блок, ты заметил,
          что некоторые шаблоны можно упросить, используя блок "повторить"?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Если ты нашёл и исправил неправильный блок, ты заметил,
          что некоторые шаблоны можно упросить, используя блок "повторить"?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Есть ли место, в котором пчела делает что-то бессмысленное?
          Что будет, если поменять этот блок?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: Вы не должны использовать цикл с функцией. Попробуйте
          переместиться, используя функцию, затем ещё раз переместиться при помощи
          функции снова.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: Вы не должны использовать цикл с функцией. Попробуйте
          переместиться, используя функцию, затем ещё раз переместиться при помощи
          функции снова.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: "Если головоломка кажется сложной, то попробуйте построить
          немного функцию в то время.\nДобавьте некоторые блоки, а затем попробуйте
          его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это
          задание! \n ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: |-
          Если головоломка кажется сложной, то попробуйте построить немного функцию в то время.
          Добавьте некоторые блоки, а затем попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это задание!
        2-3_Bee_Functions_8_b: |-
          Помните, что надо строить ваш код внутри зелёного блока функции.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: В конце должно быть четыре блока внутри цикла.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: В цикле должно быть 6 блоков.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Тебе нужно взять два отдельных блока"повторить", один
          после другого.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: В конце должно быть 5 блоков внутри цикла.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: Первое действие - это поворот, а не шаг.
        2-3_Bee_Loops_4A_b: Последняя часть программы может быть вне цикла.
        2-3_Bee_Loops_4A_c: Если ты ещё не определил, где должны быть циклы, попробуй
          написать программу без них, а затем посмотри, что можно поместить в блок
          `повторить`.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Если ты не видишь блоки, которые нужно поставить внутрь
          блока "повторить" сразу, напиши код без циклов, а затем найди закономерность.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Если ты не видишь блоки, которые нужно поставить внутрь
          блока "повторить" сразу, напиши код без циклов, а затем найди закономерность.
        2-3_Bee_Loops_6_b: Когда ты закончишь, внутри блока"повторить" должно быть
          6 блоков.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: Первое действие - это поворот, а не шаг.
        2-3_Bee_Loops_7_b: 'Если ты не можешь представить цикл с самого начала, то
          попробуй написать сначала всю программу линейно, а затем найди закономерность.  '
      2-3 Maze 1:
        2-3_Maze_1_a: Чтобы использовать блок `двигаться вперёд`, перетяни его из
          панели в рабочую область и соедини его с блоком `при запуске`.
      2-3 Maze 16:
        2-3_Maze_16_a: Если сложно увидеть закономерность, то попробуй закодировать
          сначала всё без циклов и посмотри, какие что будет всё время время повторяться.
        2-3_Maze_16_b: "Чтобы поставить много блоков внутрь цикла \"повторить\", нужно
          перетащить цикл в рабочую область, затем перетащить все блоки из старой
          программы в него. \n\nПодключи всё к блоку \"при запуске\", и всё получится!"
      2-3 Maze 6:
        2-3_Maze_6_a: Существует два способа для решения этой головоломки!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Если сложно увидеть закономерность, то попробуй закодировать
          сначала всё без циклов и посмотри, какие что будет всё время время повторяться.
        2-3_Maze_Loops_17_b: Не удалён ли стартовый код? Нажми "начать заново", чтобы
          вернуть его!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Если сложно увидеть закономерность, то попробуй закодировать
          сначала всё без циклов и посмотри, какие что будет всё время время повторяться.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Если ты застрял, попробуй создать код без циклов и найди
          закономерность.
        2-3_Maze_Loops_19_b: Вложение одного цикла внутрь другого может помочь уменьшить
          количество используемых блоков.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Найдите закономерность лестничного шага в лабиринте,
          чтобы понять, как использовать цикл.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Если не видишь закономерность лестничного шага, попробуй
          закрыть блокированные пути пальцами.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: Убедитесь, что в вашем цикле художник прыгает вверх и вниз
          после каждой линии.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          Если клумба имеет 600 пикселей в периметре, и две стороны длиной в 200 пикселей, то вот что надо сделать, чтобы получить короткие стороны:

          **600 - 200 - 200 = 200**

          Это значит, что к коротким сторонам нужно прибавить 200 пикселей.

          \*\* Сколько будет 200 \* 2?\*\*
        4-5_Artist_3_b: Если вы не видите, где должен быть цикл повтора, попробуйте
          создать сначала всё решение, а затем найти шаблон.
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          В круге 360 градусов!

          Столько раз надо повторить этот код(за раз поворачиваясь на 1 градус), чтобы получить круг!
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          Метод проб и ошибок хорош, но вы можете решить задачу, разделив 90-градусный угол на трети.

          **90 / 3 = **\_****
      4-5 Artist 7:
        4-5_Artist_7_a: 'Который угол наименьший? С какого угла должен начать художник? '
      4-5 Artist 8:
        4-5_Artist_8_a: "Длинные стороны по 240 пикселей. Значит, что две короткие
          стороны длиной:\n\n**800 - 240 - 240 = 320**\n\nСколько будет **320/2**
          ? "
        4-5_Artist_8_b: "Рисунок можно сделать двумя способами! \n\n-   Нарисуйте
          два прямоугольника длиной **120** и шириной **160** с общей стороной;\n
          \   или\n-   Нарисуйте один прямоугольник длиной **240** и шириной **160**,
          а затем добавьте линию посередине."
      4-5 Artist 9:
        4-5_Artist_9_a: Когда треугольник равносторонний, то все углы и стороны равны.
        4-5_Artist_9_b: Вам надо нарисовать три треугольника одного размера. Не забудьте
          прыгать на новую позицию после каждого треугольника.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: Вам нужно только нарисовать треугольник снаружи,
          чтобы выполнить задание.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: Если у круга 360 градусов, и каждый цикл поворачивается
          на 3 градуса, то сколько циклов нужно, чтобы нарисовать полкруга?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Поскольку квадраты стороной по 20 пикселей, то нужно
          прыгнуть на 20 пикселей, прежде чем приступить к следующему квадрату.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Осторожнее с вытаскиванием всего кода из панели всякий
          раз, когда вы пытаетесь сделать новый.
        4-5_Artist_Patterns_3_b: Если ваш код стал слишком запутанным, то вы всегда
          можете кликнуть "Начать Сначала" и попытаться ещё раз!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: "Когда художник завершил каждый алмаз, то он направлен
          в противоположную сторону от туда, откуда он начнёт следующую фигуру. \n\nНа
          сколько градусов ему надо повернуться, чтобы он был направлен прямо?"
      4-5 Bee Conditionals 4:
        remember_quantum: "\\*\\* Помните: \\*\\* Эта головоломка изменяется при каждом
          выполнении.  Для решения задачи, вам нужен блок условия («если» или «если
          / иначе»)."
      4-5 Bee Conditionals 5:
        remember_quantum: "\\*\\* Помните: \\*\\* Эта головоломка изменяется при каждом
          выполнении.  Для решения задачи, вам нужен блок условия («если» или «если
          / иначе»)."
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Вы можете решить задачу, используя только блоки
          в рабочей области. В каком порядки они должны быть?
        4-5 Bee Conditionals 6_b: Убедитесь, что вы проверяете то, что у цветка более
          **0** нектаров хотя бы **3** раза, чтобы решить задачу.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: Если вы не можете выяснить ошибку, попробуйте запустить
          код, чтобы посмотреть, что идёт не так.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Попробуйте рассмотреть задачу как длинный прямоугольник,
          где пчеле надо двигаться вперёд, затем повернуть налево несколько раз, чтобы
          пройти путь.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          Если вы не видите, как решить задачу при помощи циклов, попробуйте сначала решить её "в лоб", а затем найти шаблон.

          Что надо положить в "повторить", чтобы укоротить код?
      4-5 Maze 4:
        4-5_Maze_4_a: Если у вас есть проблемы с постановкой повтора, попробуйте закодировать
          всё сразу и найти затем шаблон.
      4-5 Maze 5:
        4-5_Maze_5_a: Попробуйте использовать цикл повтора, если нужно более двух
          "двигаться вперёд" подряд.
        4-5_Maze_5_b: Вы можете использовать более одного цикла повтора здесь.
      4-5 Maze 6:
        4-5_Maze_6_a: "Попробуйте проложить путь своим пальцем. \nНайдёте ли вы кратчайший
          путь?"
      4-5 Maze 7:
        4-5_Maze_7_a: "**Хотите укоротить код как можно больше?** \n\nИщите шаблоны
          в блоках. Видите что-то повторяющееся? Попробуйте заменить это циклом!"
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "\\*\\* 360 / 36 =? \\*\\*"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          Не забудьте сделать поворот поворот внутреннего цикла.

          Вам надо зациклить 6 треугольников на 360 градусах.

          **360 / 6 = ?**
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          Эта конструкция повторится 10 раз на 360 градусах.

          **360 / 10 = ?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          Вам надо повторить фигуру 6 раз на 360 градусах.

          **360 / 6 = ?**
      4-5 While Loops 8:
        4-5_While_Loops_8_a: У каждого элемента должен быть свой цикл "пока".
      Course 4 Artist 11:
        Course_4_Artist_11_a: 'Половина шестиугольника имеет **длину в 30 п.** и поворачивает
          направо на **60 градусов**.  '
        Course_4_Artist_11_b: '2/3 треугольника имеет **длину в 80 п.** и поворачивает
          направо на **120 градусов**. '
      Course 4 Artist 12:
        Course_4_Artist_12_a: 'Каждая повторяемая фигура - комбинация **половины шестиугольника**,
          а затем **2/3 треугольника**. '
        Course_4_Artist_12_b: 'Форма блока почти такая же, что и в последней задаче,
          но половина шестиугольника стала немного больше. '
      Course 4 Artist 6:
        Course_4_Artist_6_a: Здесь 3 треугольника в пределах 360 градусов...сколько
          раз 3 входит в 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: |-
          Хотите знать, насколько надо повернуться?

          Здесь 3 треугольника в пределах 360 градусов.

          Сколько раз 3 входит в 360?
      Course 4 Artist 9:
        Course_4_Artist_9_a: "Хотите знать то, насколько повернуться? \n\nЧто будет,
          если 360 разделить на 10?"
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: Этот код использует два цикла. Один
          из них считает от 1 до 8, другой - от 8 до 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Каждый 'пока цикл' имеет три повтора.
          Первый рисует левый набор единиц, второй рисует нули посередине и третий
          рисует единицы справа.
        Course_4_Artist_Binary_Free_Play_2b_c: В каждом повторе нужен 'счётчик' для
          единиц и '16-(2\*счётчик)' для нулей.
      Course 4 Artist For Loops 11:
        Course_4_Artist_For_Loops_11_a: "С каждой фигурой угол поворота будет меняться!
          \n\nИспользуйте математический блок для ввода 360, разделённого на число
          сторон фигуры, чтобы получить текущий угол. "
      Course 4 Artist For Loops 11a:
        Course_4_Artist_For_Loops_11a_a: '360, разделённое на число сторон фигуры,
          есть число градусов, на которое нужно повернуть. '
        Course_4_Artist_For_Loops_11a_b: 'Каждый раз вам надо идти вперёд на длину
          числа сторон, взятой 10 раз. '
      Course 4 Artist For Loops 3:
        Course_4_Artist_For_Loops_3_a: Убедитесь, что используете `counter` в качестве
          расстояния, чтобы цикл `for` управлял движением.
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: "\\*\\* Какое наименьшее число вам понадобиться?\\\nКакое
          наибольшее число?\\\nНасколько большим является увеличение каждый раз?\\*\\*
          \n\nТакие вопросы вам нужно спрашивать чтобы заполнить пробелы цикла «для»."
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: Крупнейшая фигура имеет 19 Сторон.
          Самая маленькая имеет только две стороны.
        Course_4_Artist_For_Loops_Challenge_b: Цикл `for` каждый раз идёт через 2.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: Решение предыдущей задачи является основой
          для этого кода... с несколькими изменениями.
        Course_4_Artist_For_Loops_inspire_b: Попробуй цикл `for`, идущий от 3 до 10
          с инкрементом 1.
        Course_4_Artist_For_Loops_inspire_c: Внутри цикла "for" есть два повторения
          цикла "repeat", но второй repeat идет в обратном направлении.
        Course_4_Artist_For_Loops_inspire_d: "**Solution:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: Начни с кода из последней задачи
          и добавь дополнительный "поворот направо" на три градуса внутри цикла repeat.
        Course_4_Artist_Functions_Inspiration_b: Попробуй повернуть более чем на 90
          градусов снаружи цикла repeat, но все еще внутри цикла for.
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: Частью понимания того, как использовать
          функции, является выяснение того, какие тебе нужны, а какие нет.
        Course_4_Artist_Functions_challenge_b: Используй цикл for, затем используй
          переменную-счетчик внутри вложенного цикла repeat.
        Course_4_Artist_Functions_challenge_c: На каждой итерации тебе нужно нарисовать
          квадрат, а затем прыгнуть вперед.
        Course_4_Artist_Functions_challenge_d: Тебе потребуется повернуть влево на
          90 градусов снаружи твоего repeat, но все еще внутри цикла for.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: После завершения одного квадрата попробуй прыгнуть
          вперед на половину его длины до того, как повернуть и сделать еще один.
        Course_4_Artist_Inspire_b: Каждый квадрат и прыжок повторяется четыре раза
          (используя левый поворот в промежутках) чтобы сделать полный блок типа "вертушка".
        Course_4_Artist_Inspire_c: Каждая вертушка также повторяется четыре раза с
          правым поворотом на 360/сторон.
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: Тебе нужно два цикла repeat (один внутри другого),
          оба повторяющиеся `sides` раз.
        Course_4_Artist_Vars_13_b: |-
          Внутренний цикл repeat рисует восьмиугольник (поворачиваясь налево).

          Затем тебе нужно двигаться вперед и поворачивать направо только во внешнем цикле.
        Course_4_Artist_Vars_13_c: Чтобы настроить фигуру сохранять размер когда количество
          сторон изменяется, используй блок math чтобы разделить длину в пикселях
          на количество сторон.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: Чтобы нарисовать обычный многоугольник, поворачивайся
          на **360/количество сторон** каждый раз.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: Если ты разделишь начальную длину на количество
          сторон, длина каждой стороны будет становиться меньше по мере роста количества
          сторон.
      Course 4 Bee Params 7:
        notice_pattern: 'Ты видишь шаблон в том, как меняется количество нектара? '
        count_with_for: Обрати внимание что нектар растет по шагам. Блок какого типа
          ты можешь использовать, чтобы сделать ту же действие много раз и считать
          в то же время?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: Можно спрашивать о количестве меда и нектара каждый
          раз. Если чего-то не будет, число может быть 0.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: Тебе будет нужно кликнуть на "edit" на функции
          пражка и изменить ее так, чтобы она использовала параметр `height`.
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: Убедись, что задаешь значение `dog_speed` больше
          чем `cat_speed`.
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: Чтобы бы ты добавил к своему циклу `for`
          каждый раз, чтобы пропустить четные числа?
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: Флаги находятся на расстоянии примерно 330
          точек от героев.
        Course_4_Playlab_For_Loops_4b_b: Как ты можешь сделать так, чтобы каждый герой
          достиг 330 точек за одинаковое количество ходов, но с разными начальными
          и конечными числами?
        Course_4_Playlab_For_Loops_4b_c: Запомни, не важно как далеко герой проходит
          мимо флага на последнем шаге, пока все герои делают одинаковое количество
          шагов чтобы добраться до флага.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: Символы находятся примерно в 175 пикселях
          от центра.
        Course_4_Playlab_For_Loops_5b_b: Запомни, следующий шаг героя будет длиннее
          предыдущего, потому что счетчик продолжает увеличиваться.
      Course 4 SCF 1:
        Course_4_SCF_1_a: У каждого шестиугольника сторона 40 пикселей.
        Course_4_SCF_1_b: Между каждым шестиугольником в каждой горизонтальной линии
          есть прыжок в 120 точек.
        Course_4_SCF_1_c: |-
          До того как рисовать второй ряд шестиугольников, тебе нужно повернуться направо на 60 градусов и прыгнуть вперед на 40 точек.

          Когда ты в нужной позиции по вертикали, тебе нужно повернуть художника снова назад и прыгнуть назад на 320 точек.
        Course_4_SCF_1_d: "До того как рисовать третий ряд шестиугольников, тебе нужно
          повернуться направо на 60 градусов и прыгнуть вперед на 40 точек.\n\nКогда
          ты в нужной позиции по вертикали, тебе нужно повернуть художника снова назад
          и прыгнуть назад на 440 точек (на 120 точек дальше, чем твоя функция `shift
          down/forward`). "
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Вспомните ваши функций из 16го задания.
        Course_4_SCF_1a_c: Тебе стоит попробовать использовать цикл for. Не для шагов,
          а как параметр функции.
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: |-
          Обрати внимание, что форма все медовых точек похожа.

          Хорошее место для функции!
        Course_4_SCF_1b_c: Тебе стоит попробовать использовать цикл for для расстояния
          на которое пчела путешествует.
      Course 4 SCF 2:
        Course_4_SCF_2_a: У каждого восьмиугольника сторона 40 пикселей.
        Course_4_SCF_2_b: Между каждым восьмиугольником в каждой горизонтальной линии
          прыжок в 136 точек.
        Course_4_SCF_2_c: "До того как рисовать вторую линию восьмиугольников, ты
          должен повернуться на 45 градусов и пригнуть вперед на 96 точек.\n\nКогда
          ты в нужной позиции по вертикали, тебе нужно повернуть художника снова назад
          и прыгнуть на 408 точек в обратном направлении. "
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        Course_4_SCF_3_d: 'Не забудь поворачиваться на 22.5 градуса в конце каждой
          итерации. '
        Course_4_SCF_3_e: Как цвет каждого восьмиугольника, так и ширина пера контролируются
          переменной `counter`.
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Попробуйте «предопределённый цикл».
      Course 4 SCFL 2:
        Course_4_SCFL_2_b: Обратите внимание, что во время каждой итерации цикла `for`
          есть три точки, где вы перестаете взаимодействовать с объектами.
      Course 4 SCFL 3:
        Course_4_SCFL_3_b: Прозрачность на кисти всегда составляет `counter`/2.
      Course 4 SCFL 6:
        Course_4_SCFL_6_c: "«предопределённый цикл» от 5 до 250 с шагом 2. "
      CourseD_Dance_Party_01:
        validation: |-
          **Как пройти этот уровень?**

          -   Убедитесь, что танцор появляется на экране.

          _Этот уровень заканчивается после 4 тактов._
        challenges: |-
          **Дополнительные задания**

          -   Выберите другую песню для воспроизведения.
          -   Выберите другого, который будет выглядеть как лось!
          -   Переименуйте танцора.
      CourseD_Dance_Party_02:
        validation: |-
          **Как пройти этот уровень?**

          -   Танцор должен начать новое движение через 4 такта.

          _Уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_03:
        validation: |-
          **Как пройти этот уровень?**

          -   После 6 тактов ваш танцор должен исполнять другой танец, чем после 4 тактов.

          _Уровень заканчивается после 12 тактов._
      CourseD_Dance_Party_04:
        validation: |-
          **Как пройти этот уровень?**

          -   Необходимо изменять фоновый эффект в любой момент после седьмого такта песни.

          _Этот уровень заканчивается после 10 тактов._
        challenges: |-
          **Дополнительное задание**

          Изменяйте фоновый эффект в разные моменты песни, подключив новый блок под событиями <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"тактов"</title></block></xml>.
      CourseD_Dance_Party_06:
        validation: |-
          **Как пройти этот уровень?**

          -   Необходимо иметь минимум 2 танцоров.

          _Этот уровень заканчивается после 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Добавить третьего танцора (или сколько угодно!)
          -   Сделайте так, чтобы все танцоры выполняли различные движения в разные моменты песни.
      CourseD_Dance_Party_08:
        validation: |-
          **Как пройти этот уровень?**

          -   Два танцора должны иметь размер, отличный от 100.

          _Этот уровень заканчивается после 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Экспериментируйте, изменяя другие свойства (ширина, высота, поворот и т. д.)
      CourseD_Dance_Party_09:
        validation: |-
          **Как пройти этот уровень?**

          -   Измените оттенок по крайней мере одного танцора.

          _Этот уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_10:
        validation: |-
          **Как пройти этот уровень?**

          -   Свойства двух и более танцоров должны измениться.

          _Этот уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_11:
        validation: |-
          **Как пройти этот уровень?**

          -   Включите креативность!

          _Этот уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_11_5:
        validation: |-
          **Как пройти этот уровень?**

          -   Включите креативность!

          _Этот уровень заканчивается после 8 тактов._
      CourseD_Dance_Party_11b:
        validation: |-
          **Как пройти этот уровень?**

          -   Используйте блок «когда нажата стрелка влево» (when left arrow pressed), чтобы робот делал танцевальное движение по нажатию этой клавиши.

          _Этот уровень заканчивается после 8 тактов._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: Видите **морские фонари** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Окажется ли блок условия в связке с ними полезным для того, чтобы пробраться
          через океанский памятник?
      CourseE_HOC 2018 Level_7a:
        aquatic7: Вам нужно использовать блок "Если путь", чтобы выполнить правильные
          повороты.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Какой чудесный коралловый риф! Здесь вам на помощь придут
          **синие** кораллы, однако не забывайте и о **красных**!
      Dance_2019_01:
        validation: |-
          **Как пройти этот уровень?**

          -   Убедитесь, что танцор появляется на экране.

          _Этот уровень заканчивается после 4 тактов._
        challenges: |-
          **Дополнительные задания**

          -   Выберите другую песню для воспроизведения.
          -   Переставьте танцора на другое место.
          -   Создайте несколько танцоров.
      Dance_2019_02:
        validation: |-
          **Как пройти этот уровень?**

          -   Танцор должен выполнить движение.
          -   Вы должны нажать на клавишу со стрелкой.

          \_Этот уровень кончается через 4 такта.
        challenges: |-
          **Дополнительное задание**

          -   Используйте несколько <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml> блоков.
      Dance_2019_03:
        validation: |-
          **Как пройти этот уровень?**

          -   Оба танцора должны выполнить движение.
          -   Вы должны нажимать на клавиши со стрелкой.

          \_Этот уровень кончается через 4 такта.
        challenges: |-
          **Дополнительное задание**

          -   Заставьте танцора реагировать на клавиши «стрелка вправо» и «стрелка влево».
      Dance_2019_04:
        validation: |-
          **Как пройти этот уровень?**

          -   Танцор должен начать новое движение через 4 такта.

          _Уровень заканчивается после 8 тактов._
      Dance_2019_05:
        validation: |-
          **Как пройти этот уровень?**

          -   После 6 тактов ваш танцор должен исполнять другой танец, чем после 4 тактов.

          _Уровень заканчивается после 12 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Меняйте фон при каждой смене движений танцоров.
      Dance_2019_06:
        validation: |-
          **Как пройти этот уровень?**

          -   Создайте одного ведущего танцора и группу подтанцовки.

          _Этот уровень кончается через 7 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Создайте несколько групп подтанцовки.
      Dance_2019_07:
        validation: |-
          **Как пройти этот уровень?**

          -   Измените размер, как минимум, одного танцора после начала музыки.

          _Этот уровень кончается через 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Экспериментируйте, изменяя другие свойства (ширина, высота, поворот и т. д.)
      Dance_2019_08:
        validation: |-
          **Как пройти этот уровень?**

          -   Измените оттенок, как минимум, одного танцора.

          _Этот уровень кончается через 6 тактов._
        tint_hint: Вы заметили, что цвет танцоров поменялся не на тот, что вы выбрали?
          Это объясняется тем, что выбранный вами **оттенок** смешался с цветом танцора.
      Dance_2019_09:
        validation: |-
          **Как пройти этот уровень?**

          -   Просто нажмите на кнопку "Закончить"!
        repeat_every_ideas: |-
          **Подбросить пару идей?**

          -   Чтобы танцор увеличился, измените его размер несколько раз.
          -   Чтобы танцор начал вращаться, измените его вращение несколько раз.
          -   Чтобы танцор переместился по экрану, измените его горизонтальное или вертикальное положение несколько раз.

          _Хотите получить обратный эффект – используйте отрицательные числа!_
        next_previous: |-
          **Дополнительное задание**

          -   Этот новый блок событий можно использовать и для того, чтобы постоянно повторять список танцевальных движений путем установления движения на «случайное» (Random), «следующее» (Next) или «предыдущее» (Previous).
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP" config="sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DOG&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;ROBOT&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: |-
          **Как пройти этот уровень?**

          -   Убедитесь, что танцор появляется на экране.

          _Этот уровень заканчивается после 4 тактов._
        challenges: |-
          **Дополнительные задания**

          -   Выберите другую песню для воспроизведения.
          -   Выберите другого, который будет выглядеть как лось!
          -   Переименуйте танцора.
      Dance_Party_02:
        validation: |-
          **Как пройти этот уровень?**

          -   Танцор должен начать новое движение через 4 такта.

          _Уровень заканчивается после 8 тактов._
      Dance_Party_03:
        validation: |-
          **Как пройти этот уровень?**

          -   После 6 тактов ваш танцор должен исполнять другой танец, чем после 4 тактов.

          _Уровень заканчивается после 12 тактов._
      Dance_Party_04:
        validation: |-
          **Как пройти этот уровень?**

          -   Необходимо изменять фоновый эффект в любой момент после седьмого такта песни.

          _Этот уровень заканчивается после 10 тактов._
        challenges: |-
          "**Дополнительное задание**

          Добейтесь изменения фонового эффекта в разные моменты песни, присоединив новый блок под блоком событий <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.
      Dance_Party_05:
        validation: |-
          "**Как пройти этот уровень?**

          -   Вашему танцору необходимо выполнить до окончания уровня 4 различных танцевальных движения.

          _Этот уровень заканчивается через 12 тактов._
      Dance_Party_06:
        validation: |-
          **Как пройти этот уровень?**

          -   Необходимо иметь минимум 2 танцоров.

          _Этот уровень заканчивается после 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Добавить третьего танцора (или сколько угодно!)
          -   Сделайте так, чтобы все танцоры выполняли различные движения в разные моменты песни.
      Dance_Party_08:
        validation: |-
          **Как пройти этот уровень?**

          -   Два танцора должны иметь размер, отличный от 100.

          _Этот уровень заканчивается после 6 тактов._
        challenges: |-
          **Дополнительное задание**

          -   Экспериментируйте, изменяя другие свойства (ширина, высота, поворот и т. д.)
      Dance_Party_09:
        validation: |-
          **Как пройти этот уровень?**

          -   Измените оттенок по крайней мере одного танцора.

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_10:
        validation: |-
          **Как пройти этот уровень?**

          -   Свойства двух и более танцоров должны измениться.

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_11:
        validation: |-
          **Как пройти этот уровень?**

          -   Включите креативность!

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_11_5:
        validation: |-
          **Как пройти этот уровень?**

          -   Включите креативность!

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_11b:
        validation: |-
          **Как пройти этот уровень?**

          -   Используйте блок «когда нажата стрелка влево» (when left arrow pressed), чтобы робот делал танцевальное движение по нажатию этой клавиши.

          _Этот уровень заканчивается после 8 тактов._
      Dance_Party_extras_alternate_2019:
        alternate: Альтернативный блок находится в категории "танцоры".
      Function intro Ryan:
        Function_intro_Ryan_a: Вы можете вызвать функцию в своей программе много раз!  Попробуйте
          дважды вызвать функцию, чтобы решить эту задачу.
      Function intro Ryan_2019:
        Function_intro_Ryan_a: Вы можете вызвать функцию в своей программе много раз!  Попробуйте
          дважды вызвать функцию, чтобы решить эту задачу.
      HOC 2018 Level_10:
        voyage_aquatic_10a: Видите **морские фонари** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Окажется ли блок условия в связке с ними полезным для того, чтобы пробраться
          через океанский памятник?
      HOC 2018 Level_7a:
        aquatic7: Вам нужно использовать блок "Если путь", чтобы выполнить правильные
          повороты.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Какой чудесный коралловый риф! Здесь вам на помощь придут
          **синие** кораллы, однако не забывайте и о **красных**!
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Перетащите один блок «двигаться вперед» с панели элементов
          в рабочую область и прикрепите его под блоком «при запуске».
        MC_HOC_2017_01_RETRY_b: Не забудьте нажать кнопку «Выполнить», чтобы выполнить
          код для исполнителя.
        MC_HOC_2017_01_RETRY_c: Как только исполнитель выполнит весь составленный
          для него код, вы сможете переместить игрока с помощью клавиш со стрелками!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Перетащите один блок «двигаться вперед» с панели элементов
          в рабочую область и прикрепите его под блоком «при запуске».
        MC_HOC_2017_01_RETRY_b: Не забудьте нажать кнопку «Выполнить», чтобы выполнить
          код для исполнителя.
        MC_HOC_2017_01_RETRY_c: Как только исполнитель выполнит весь составленный
          для него код, вы сможете переместить игрока с помощью клавиш со стрелками!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Переместите исполнителя на два хода вперед, чтобы он
          стоял на нажимной пластине.  Так вы сможете открыть дверь для игрока.
        MC_HOC_2017_02_Cole_b: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_02_Cole_c: Как только исполнитель откроет дверь, используйте клавиши
          со стрелками, чтобы переместить игрока к карте!
        MC_HOC_2017_02_Cole_d: Убедитесь, что исполнитель следует по пути, указанному
          на карте!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Переместите исполнителя на два хода вперед, чтобы он
          стоял на нажимной пластине.  Так вы сможете открыть дверь для игрока.
        MC_HOC_2017_02_Cole_b: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_02_Cole_c: Как только исполнитель откроет дверь, используйте клавиши
          со стрелками, чтобы переместить игрока к карте!
        MC_HOC_2017_02_Cole_d: Убедитесь, что исполнитель следует по пути, указанному
          на карте!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Как только исполнитель наступит на нажимную пластину,
          используйте клавиши со стрелками, чтобы подвести игрока к компасу!
        MC_HOC_2017_03_Cole_b: Код выглядит слишком длинным?  Попробуйте использовать
          цикл «повторить» и посмотрите, удастся ли сократить код!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Как только исполнитель наступит на нажимную пластину,
          используйте клавиши со стрелками, чтобы подвести игрока к компасу!
        MC_HOC_2017_03_Cole_b: Код выглядит слишком длинным?  Попробуйте использовать
          цикл «повторить» и посмотрите, удастся ли сократить код!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Используйте блок «повернуть направо», чтобы
          изменить направление движения исполнителя '
        MC_HOC_2017_04POINT5_RYAN_a: Чтобы Алекс или Стив смогли добраться до топора,
          Исполнителю достаточно достаточно дойти только до первой нажимной пластины.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Используйте блок «повернуть направо», чтобы
          изменить направление движения исполнителя '
        MC_HOC_2017_04POINT5_RYAN_a: Чтобы Алекс или Стив смогли добраться до топора,
          Исполнителю достаточно достаточно дойти только до первой нажимной пластины.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Исполнителю нужно «двигаться вперед» 7 раз.  Как для
          этого воспользоваться циклом «повторить»?
        MC_HOC_2017_04_Cole_c: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_04_Cole_b: Как только исполнитель доберется до нажимной пластины,
          он откроет дверь для игрока.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Исполнителю нужно «двигаться вперед» 7 раз.  Как для
          этого воспользоваться циклом «повторить»?
        MC_HOC_2017_04_Cole_c: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_04_Cole_b: Как только исполнитель доберется до нажимной пластины,
          он откроет дверь для игрока.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: А вы знали, что в цикл можно помещать более одного
          фрагмента кода?  Попробуйте двигаться вперед **и** разместить доску внутри
          цикла «повторить», чтобы решить эту задачу.
        MC_HOC_2017_05_Cole_b: Переведите исполнителя через реку, построив мост по
          дороге.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: А вы знали, что в цикл можно помещать более одного
          фрагмента кода?  Попробуйте двигаться вперед **и** разместить доску внутри
          цикла «повторить», чтобы решить эту задачу.
        MC_HOC_2017_05_Cole_b: Переведите исполнителя через реку, построив мост по
          дороге.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Сколько раз выполняется этот цикл?  Сколько раз он
          _должен_ быть выполнен?
        MC_HOC_2017_06_Cole_b: 'Помогите исполнителю построить мост! '
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Сколько раз выполняется этот цикл?  Сколько раз он
          _должен_ быть выполнен?
        MC_HOC_2017_06_Cole_b: 'Помогите исполнителю построить мост! '
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Все, что вам нужно от исполнителя, - это чтобы он расчистил
          путь к Майнкрафт.
        MC_HOC_2017_07_Cole_a: Чтобы решить эту задачу, выясните, что делает функция
          «расчистить путь» и используйте ее столько раз, сколько потребуется, с помощью
          маленького зеленого блока «расчистить путь», расположенного на панели элементов.
        MC_HOC_2017_07_Cole_b: Чтобы справиться с этой задачей, попробуйте комбинировать
          блоки функций с другими блоками, размещенными на панели элементов.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Все, что вам нужно от исполнителя, - это чтобы он расчистил
          путь к Майнкрафт.
        MC_HOC_2017_07_Cole_a: Чтобы решить эту задачу, выясните, что делает функция
          «расчистить путь» и используйте ее столько раз, сколько потребуется, с помощью
          маленького зеленого блока «расчистить путь», расположенного на панели элементов.
        MC_HOC_2017_07_Cole_b: Чтобы справиться с этой задачей, попробуйте комбинировать
          блоки функций с другими блоками, размещенными на панели элементов.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: Не знаете, куда идти?  Постарайтесь найти пунктирную
          линию!
        MC_HOC_2017_10_Cole_a: Используйте функции, чтобы упростить решение этой задачи!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: Не знаете, куда идти?  Постарайтесь найти пунктирную
          линию!
        MC_HOC_2017_10_Cole_a: Используйте функции, чтобы упростить решение этой задачи!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_08_RY_b: Есть МНОГО способов решения этой задачи.  Попробуйте
          несколько!
        MC_HOC_2017_08_RY_c: Попробуйте следовать по пунктирной линии, чтобы пройти
          через лаву.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: Нажмите кнопку «Выполнить»! Вы можете выполнить код,
          даже если он неправильный.  Выполняйте и сбрасывайте код до тех пор, пока
          не выясните, в чем заключается проблема.
        MC_HOC_2017_08_RY_b: Есть МНОГО способов решения этой задачи.  Попробуйте
          несколько!
        MC_HOC_2017_08_RY_c: Попробуйте следовать по пунктирной линии, чтобы пройти
          через лаву.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Попробуйте возвести с помощью Agent мосты, чтобы Алекс
          или Стив смогли обогнуть края карты.
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Попробуйте возвести с помощью Agent мосты, чтобы Алекс
          или Стив смогли обогнуть края карты.
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_c: Какой код вам понадобится, чтобы сделать
          звезду, используя обычные линии вместо прямоугольников?
      NEW Course 4 Artist Params inspire:
        brush_width: Мы установили ширину кисти на 1, а цвет - на синий, прежде чем
          начать делать что-то.
        double_loop: Попробуйте, «переопределённый цикл» внутри цикла «повторить».
        specifics: |-
          'Для цикла' проходит от трёх до семнадцати раз для каждого из шести "лепестков" перед рисованием нового, рисуя фигуры только с нечётным количеством сторон.

          Блок 'присвоить альфа' использует деление для постепенного выцветания цвета, если счётчик будет выше.
        after: Когда вы закончите с каждым лепестком, будьте уверены, что вы использовали
          'двигаться вперед на 20 пикселей' до поворота на 60 градусов.
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          Ты можешь использовать циклы, чтобы создать стены и крышу. Попробуй повторить с разными блоками.

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          Создай свой собственный дом или нажми ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png), чтобы подсмотреть некоторые идеи!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: Ты можешь использовать блоки `прыжок` для перемещения в
          другие места.
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_b: Когда ты закончишь один птичник, прыгай
          на следующий!
        courseA_artist_loops_challenge2_c: Для этой задачи тебе понадобится МНОГО
          блоков внутри цикла.
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Попробуй изменить цифру в каждом цикле,
          если что-то пойдет не так.
        courseA_collector_loops_challenge1_c: На правой стороне пещеры 6 драгоценных
          камней, но тебе нужно только подойти и собрать их, 5 раз. Ты знаешь почему?
      course1_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: Тебе нужно использовать только один
          блок ![](<https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png>), чтобы решить эту задачу.
        courseA_collector_loops_challenge2_a: |-
          Ты можешь двигаться назад и вернуться на дорожку во второй раз, прежде чем идти на юг.

          ![](<https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png>)
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_b: |-
          Начни с цикла команд 'идти на юг' и `взять сокровище`.

          <xml>
            <block type="maze_moveSouth"/><next>
            <block type="collector_collect"/></next>
            </xml>
        courseB_collector_loops_challenge1_a: |-
          Северный шаблон немного отличается от южного.

          <xml>
            <block type="collector_collect"/><next>
            <block type="maze_moveNorth"/></next>next>
            </xml>
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: Некоторые пути приведут к взрывчатке, если
          ты уйдешь далеко.
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_a: Тебе абсолютно не нужно добавлять или удалять
          блоки, чтобы решить эту задачу.
        courseB_maze_seq_challenge2_b: Переставь блоки и пройди путь посередине.
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_b: Для начала попробуй переместиться на запад.
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_e: "Наконец, открой Волшебника Уэндела,
          после того как нажмёшь на Спиффа!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 'Ширина прямоугольника 200 пикселей, длина
          - 100 пикселей. '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "Ты можешь вставлять команды внутрь блока
          `повторить`, чтобы выполнять их снова и снова. Попробуй!\n\n<xml>\n  \n
          \         <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          Найдёшь путь, который проходит через каждый цветок и соту, не врезаясь деревья? Лучший путь - по спирали.

          **Ты можешь решить эту головоломку даже не поворачивая влево!**
      course2_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          Как и в блоке `если на цветке` код внутри `пока нектар > 0` будет выполняться только если пчёлка на цветке. Основное отличие в том, что код внутри будет повторяться пока не останется нектара. Попробуй этот пример:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">></title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: Исходный код работает отлично - если в клетке
          всего одно сокровище!
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Ты можешь использовать команду `собрать`
          несколько раз, чтобы собрать больше сокровищ.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Ты можешь использовать команду `собрать`
          несколько раз, чтобы собрать больше сокровищ.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Не вздумай решать это без циклов!
        courseC_harvester_loops_challenge1_b: Повтори блоки `двигаться вперёд` и `собрать
          кукурузу` сколько потребуется, затем `повернуть вправо` в каждом углу.
        courseC_harvester_loops_challenge1_c: |-
          Лучший способ собрать первые четыре пучка - использовать один блок `повторить` внутри другого. Ты можешь использовать этот подход и для остальной головоломки!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">2</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></next></block></xml>
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Мысленно раздели весь путь на три этапа.
          У каждого из них есть закономерность, который ты можешь описать в цикле.
        courseC_maze_loops_challenge1_b: Во всех промежутках между циклами нужно `повернуть
          налево` или `повернуть направо`, чтобы подготовить Скрэта к следующему циклу.
        courseC_maze_loops_challenge1_c: |-
          Если ты зашёл так далеко, осталось лишь `повернуть налево`, а затем `двигаться вперёд` несколько раз. Не сдавайся!

          ![](<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png>)
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Если отправишь меня назад, будь очень
          внимателен, выбирая направление поворота!_
        courseC_maze_programming_challenge2_b: Кратчайший путь использует всего 5
          блоков, но там используется блок "повторить"!
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          Если головоломка кажется сложной, то попробуйте построить немного функцию в то время.
          Добавьте некоторые блоки, а затем попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это задание!
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          Если головоломка кажется сложной, то попробуйте построить немного функцию в то время.
          Добавьте некоторые блоки, а затем попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это задание!
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: Если у вас что-то не получается, попробуйте
          ещё раз. Не сдавайтесь!
        courseB_collector_loops_challenge2a_b: Посмотрите на этот вариант прохождения
          лабиринта. Видите ли вы способ, который вы можете повторить?
        courseB_collector_loops_challenge2a_c: Чтобы собрать все сокровища, вам нужно
          будет либо добавить два блока <xml> <block type="collector_collect"/></xml>
          внутри вашего цикла, либо поместить блок внутри своего собственного блока
          "repeat".
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: Если у вас что-то не получается, попробуйте
          ещё раз. Не сдавайтесь!
        courseB_collector_loops_challenge2a_b: Посмотрите на этот вариант прохождения
          лабиринта. Видите ли вы способ, который вы можете повторить?
        courseB_collector_loops_challenge2a_c: Чтобы собрать все сокровища, вам нужно
          будет либо добавить два блока <xml> <block type="collector_collect"/></xml>
          внутри вашего цикла, либо поместить блок внутри своего собственного блока
          "repeat".
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: Если у вас что-то не получается, попробуйте
          ещё раз. Не сдавайтесь!
        courseB_collector_loops_challenge2a_b: Посмотрите на этот вариант прохождения
          лабиринта. Видите ли вы способ, который вы можете повторить?
        courseB_collector_loops_challenge2a_c: Чтобы собрать все сокровища, вам нужно
          будет либо добавить два блока <xml> <block type="collector_collect"/></xml>
          внутри вашего цикла, либо поместить блок внутри своего собственного блока
          "repeat".
      courseB_maze_seq6:
        courseB_maze_seq5_c: Существует два способа для решения этой головоломки!
      courseB_maze_seq6_2018:
        courseB_maze_seq5_c: Существует два способа для решения этой головоломки!
      courseB_maze_seq6_2019:
        courseB_maze_seq5_c: Существует два способа для решения этой головоломки!
      courseB_maze_seq8:
        courseB_maze_seq8_b: Существует два способа для решения этой головоломки!
      courseB_maze_seq8_2018:
        courseB_maze_seq8_b: Существует два способа для решения этой головоломки!
      courseB_maze_seq8_2019:
        courseB_maze_seq8_b: Существует два способа для решения этой головоломки!
      courseB_maze_seq9:
        courseB_maze_seq9_c: Существует два способа для решения этой головоломки!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_c: Существует два способа для решения этой головоломки!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_c: Существует два способа для решения этой головоломки!
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_a: Тебе абсолютно не нужно добавлять или удалять
          блоки, чтобы решить эту задачу.
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_a: Тебе абсолютно не нужно добавлять или удалять
          блоки, чтобы решить эту задачу.
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_a: Тебе абсолютно не нужно добавлять или удалять
          блоки, чтобы решить эту задачу.
      courseC_artist_prog2:
        courseC_artist_prog2_a: Если ты воспользуешься блоком "двигаться вперёд на
          100 пикселей" на меня, то я нарисую линию автоматически.
        courseC_artist_prog2_b: Сложности с поворотами на углах? Используй блок "повернуть
          направо на 90 градусов".
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: Если ты воспользуешься блоком "двигаться вперёд на
          100 пикселей" на меня, то я нарисую линию автоматически.
        courseC_artist_prog2_b: Сложности с поворотами на углах? Используй блок "повернуть
          направо на 90 градусов".
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: Если ты воспользуешься блоком "двигаться вперёд на
          100 пикселей" на меня, то я нарисую линию автоматически.
        courseC_artist_prog2_b: Сложности с поворотами на углах? Используй блок "повернуть
          направо на 90 градусов".
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_b: Ты можешь повторить `двигаться вперёд`
          и `собрать кукурузу` сколько потребуется, затем `повернуть вправо` в каждом
          углу.
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_b: Ты можешь повторить `двигаться вперёд`
          и `собрать кукурузу` сколько потребуется, затем `повернуть вправо` в каждом
          углу.
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_b: Ты можешь повторить `двигаться вперёд`
          и `собрать кукурузу` сколько потребуется, затем `повернуть вправо` в каждом
          углу.
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: Мысленно раздели весь путь на три этапа.
          У каждого из них есть закономерность, который ты можешь описать в цикле.
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: Мысленно раздели весь путь на три этапа.
          У каждого из них есть закономерность, который ты можешь описать в цикле.
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: Мысленно раздели весь путь на три этапа.
          У каждого из них есть закономерность, который ты можешь описать в цикле.
      courseC_maze_programming6:
        courseC_maze_programming6_a: Существует два способа для решения этой головоломки!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Существует два способа для решения этой головоломки!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Существует два способа для решения этой головоломки!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Если отправишь меня назад, будь очень
          внимателен, выбирая направление поворота!_
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: _Если отправишь меня назад, будь очень
          внимателен, выбирая направление поворота!_
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: _Если отправишь меня назад, будь очень
          внимателен, выбирая направление поворота!_
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          Попробуй использовать блок "прыжок вперед" что-бы оказаться в верхней части одного квадрата где ты начнешь следующий.

          Если твои квадраты 20 пикселей в высоту и находятся на растоянии в 20 пикселей друг от друга, как далеко тебе нужно прыгнуть?
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          Попробуй использовать блок "прыжок вперед" что-бы оказаться в верхней части одного квадрата где ты начнешь следующий.

          Если твои квадраты 20 пикселей в высоту и находятся на растоянии в 20 пикселей друг от друга, как далеко тебе нужно прыгнуть?
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          Попробуй использовать блок "прыжок вперед" что-бы оказаться в верхней части одного квадрата где ты начнешь следующий.

          Если твои квадраты 20 пикселей в высоту и находятся на растоянии в 20 пикселей друг от друга, как далеко тебе нужно прыгнуть?
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_a: "\\*\\* Помните: \\*\\* Эта головоломка изменяется
          при каждом выполнении.  Для решения задачи, вам нужен блок условия («если»
          или «если / иначе»)."
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_a: "\\*\\* Помните: \\*\\* Эта головоломка изменяется
          при каждом выполнении.  Для решения задачи, вам нужен блок условия («если»
          или «если / иначе»)."
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: "\\*\\* Помните: \\*\\* Эта головоломка изменяется
          при каждом выполнении.  Для решения задачи, вам нужен блок условия («если»
          или «если / иначе»)."
      courseD_maze_ramp2:
        courseC_maze_programming2_a: Чтобы использовать блок 'двигаться вперед', перетащи
          его из Панели инструментов в Рабочую область и присоедини его к блоку 'при
          запуске'.
      courseD_maze_ramp2_2018:
        courseC_maze_programming2_a: Чтобы использовать блок 'двигаться вперед', перетащи
          его из Панели инструментов в Рабочую область и присоедини его к блоку 'при
          запуске'.
      courseD_maze_ramp2_2019:
        courseC_maze_programming2_a: Чтобы использовать блок 'двигаться вперед', перетащи
          его из Панели инструментов в Рабочую область и присоедини его к блоку 'при
          запуске'.
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Существует два способа для решения этой головоломки!
      courseD_scrat_ramp1:
        courseC_maze_programming1_a: Если Скрэт не добрался до желудя, убедись, что
          все три блока хорошо соединились вместе и нажми кнопку Выполнить снова.
      courseD_scrat_ramp2:
        courseC_maze_programming2_a: Чтобы использовать блок 'двигаться вперед', перетащи
          его из Панели инструментов в Рабочую область и присоедини его к блоку 'при
          запуске'.
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: Существует два способа для решения этой головоломки!
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: 'Половина шестиугольника имеет **длину
          в 30 п.** и поворачивает направо на **60 градусов**.  '
        courseE_artist_concept_challenge1_b: '2/3 треугольника имеет **длину в 80
          п.** и поворачивает направо на **120 градусов**. '
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: 'Половина шестиугольника имеет **длину
          в 30 п.** и поворачивает направо на **60 градусов**.  '
        courseE_artist_concept_challenge1_b: '2/3 треугольника имеет **длину в 80
          п.** и поворачивает направо на **120 градусов**. '
      courseE_artist_functions1:
        courseE_artist_functions1_a: Каждый квадрат имеет стороны в 100 пикселей,
          и это значит, что тебе надо двинуться вперёд на 175 пикселей, прежде чем
          рисовать второй квадрат.
        courseE_artist_functions1_b: Не волнуйся рисовать перекрывающие линии, чтобы
          сделать стёкла.
      courseE_artist_functions2:
        courseD_artist_functions2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      courseE_artist_functions2_2018:
        courseD_artist_functions2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      courseE_artist_functions2_2019:
        courseD_artist_functions2_a: |-
          Твоя программа может быть такой:

          -   Используй функцию
          -   Двигайся вперёд на 100 + 75 пикселей
          -   Используй функцию
      courseE_artist_functions8:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_bee_functions6:
        courseE_bee_functions6_a: "Если головоломка кажется сложной, то попробуйте
          построить немного функцию в то время.\nДобавьте некоторые блоки, а затем
          попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте
          это задание! \n ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions7:
        courseE_bee_functions7_a: |-
          Если головоломка кажется сложной, то попробуйте построить немного функцию в то время.
          Добавьте некоторые блоки, а затем попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это задание!
        courseE_bee_functions7_b: |-
          Помните, что надо строить ваш код внутри зелёного блока функции.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          Если головоломка кажется сложной, то попробуйте построить немного функцию в то время.
          Добавьте некоторые блоки, а затем попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это задание!
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          Если головоломка кажется сложной, то попробуйте построить немного функцию в то время.
          Добавьте некоторые блоки, а затем попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это задание!
      courseF_artist_for4:
        courseF_artist_for4_a: "\\*\\* Какое наименьшее число вам понадобиться?\\\nКакое
          наибольшее число?\\\nНасколько большим является увеличение каждый раз?\\*\\*
          \n\nТакие вопросы вам нужно спрашивать чтобы заполнить пробелы цикла «для»."
      courseF_artist_for4_2018:
        courseF_artist_for4_a: "\\*\\* Какое наименьшее число вам понадобиться?\\\nКакое
          наибольшее число?\\\nНасколько большим является увеличение каждый раз?\\*\\*
          \n\nТакие вопросы вам нужно спрашивать чтобы заполнить пробелы цикла «для»."
      courseF_artist_for4_2019:
        courseF_artist_for4_a: "\\*\\* Какое наименьшее число вам понадобиться?\\\nКакое
          наибольшее число?\\\nНасколько большим является увеличение каждый раз?\\*\\*
          \n\nТакие вопросы вам нужно спрашивать чтобы заполнить пробелы цикла «для»."
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_b: Прозрачность на кисти всегда составляет `counter`/2.
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_b: Прозрачность на кисти всегда составляет `counter`/2.
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_b: Прозрачность на кисти всегда составляет `counter`/2.
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: "«предопределённый цикл» от 5 до 250 с шагом
          2. "
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: "«предопределённый цикл» от 5 до 250 с шагом
          2. "
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: "«предопределённый цикл» от 5 до 250 с шагом
          2. "
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseF_artist_fwp_challenge1_d: 'Не забудь поворачиваться на 22.5 градуса
          в конце каждой итерации. '
        courseF_artist_fwp_challenge1_e: Как цвет каждого восьмиугольника, так и ширина
          пера контролируются переменной `counter`.
      courseF_artist_variables4:
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: "\\*\\* Помните: \\*\\* Эта головоломка изменяется
          при каждом выполнении.  Для решения задачи, вам нужен блок условия («если»
          или «если / иначе»)."
      courseF_bee_functions6:
        courseF_bee_functions6_a: "Если головоломка кажется сложной, то попробуйте
          построить немного функцию в то время.\nДобавьте некоторые блоки, а затем
          попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте
          это задание! \n ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: |-
          Если головоломка кажется сложной, то попробуйте построить немного функцию в то время.
          Добавьте некоторые блоки, а затем попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это задание!
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: |-
          Если головоломка кажется сложной, то попробуйте построить немного функцию в то время.
          Добавьте некоторые блоки, а затем попробуйте его. Добавьте больше, а затем повторите попытку.  Вскоре вы пройдёте это задание!
