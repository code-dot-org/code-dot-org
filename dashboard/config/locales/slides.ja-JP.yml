---
ja:
  slides:
    maze_intro:
      1:
        text: 初めての「1時間コース」へようこそ！プログラミングを今すぐ体験してみましょう。
      2:
        text: ブロックをドラッグ&ドロップしてコードを記述するビジュアルプログラミング言語ブロッキーを使っています。
      3:
        text: ほとんどのコードは文字で書かれますが、ブロッキーは絵でできています。それぞれのブロックは「本物の」コードの１行に対応します。
      4:
        text: アプリを作ることから火星探査車をコントロールすることまで、いろいろなところで使われるコンピューター科学の基礎を学習します。
      5:
        text: プログラムはあなたのコンピュータを動かす命令の集まりです。
      6:
        text: あなたの最初のプログラムの目標は、アングリーバードに迷路を通り抜けて緑のブタにぶつけさせることです。
      7:
        text: 左側はプログラムを実行させる迷路です。それぞれのパズルの説明は迷路の下にあります。
      8:
        text: 真ん中のツールボックスにはアングリーバードのコマンドがあります。これはコードを組み立てるのに使います。
      9:
        text: 右には、ブロックをツールボックスからドラッグしてプログラムを組み立てるためのワークスペースがあります。ブロックを削除するには、隅にあるゴミ箱へドラッグします。
      10:
        text: ブロックはそれぞれ、1つの命令を表します。「前に進む」ブロックをワークスペースにドラッグして「プログラムの実行」をクリックすると、鳥は迷路の中を1マス進みます。
      11:
        text: いくつかのアクションをするには、たくさんのブロックをワークスペースにドラッグして引っ張ってきて一つにくっつけます。アングリーバードは上から下へコマンドを実行します。
      12:
        text: プログラムを実行後、修正してやり直したいときは、「リセット」ボタンをクリックします。
      13:
        text: ブタを捕まえに行こう！
    artist_intro:
      1:
        text: やあ、私はJR！レーシングカーのチームにはコンピュータ科学者が必要です。彼らは車をより速く走らせるためにデータを分析します。
      2:
        text: これらのパズルでは、あなたは芸術家になってどこでも行った後ろに線を描きます。
      3:
        text: このブロックは「100ピクセル前方に移動」です。ピクセルとは、あなたの画面の本当に小さな点のことです。
      4:
        text: このブロックは「右に90度回転」です。これは、迷路パズルでの回転ブロックと同じように、あなたの芸術家が回ります。
      5:
        text: 芸術家が前に行く距離や回る角度を変えるために、これらのブロックの矢印をクリックしてください。新しいブロックに慣れるために遊んでみよう。
    farmer_intro:
      1:
        text: こんにちは、私はパオラです！これらのパズルでは、あなたは農家になって作物を植えるために畑を平らにしなければなりません。
      2:
        text: あなたは彼女がすべての土の山を取り除いて、すべての穴を埋めるのを手伝わなければなりません。
      3:
        text: 新しいブロックは山から土をシャベル1杯分だけ取り除いたり、穴に土をシャベル1杯分だけ埋めたりできます。
      4:
        text: 泥山や穴は大きさが違うので、あなたは農民にシャベルを何回使えばいいか教えなければなりません。
    flappy_intro:
      1:
        image: notes/flappy01.jpg
        text: こんにちは、私はケイティ です！コンピューター科学について最もエキサイティングなものの 1 つは、コンピューター プログラムが双方向性（対話すること）です。
      2:
        image: notes/flappy02.jpg
        text: 誰かがPCや携帯電話上をクリック、タップまたはタイプした時はいつでも、
      3:
        image: notes/flappy03.jpg
        text: '例えば、EVENT-HANDLERを使うと「マウスをクリックしたとき、音を再生する」という命令ができます。 '
      4:
        image: notes/flappy04.jpg
        text: フラッピーバードというゲームは聞いたことがありますか？イベントハンドラー(Event handlers)を使用することで、独自のカスタマイズしたフラッピーバードのプログラムを学ぶことができます。
      5:
        image: notes/flappy05.jpg
        text: コンピュータに指示を与えるブロックをドラッグ&ドロップした、あなたのコード（プログラム）はコンピュータの中でブロックそれぞれが実際のコード（プログラム）に書き表されます。
      6:
        image: notes/flappy06.jpg
        text: 'ワークスペースを見ると、いくつかの緑色のブロックがあります。それが「イベントハンドラー（event handlers）」なのです。 '
      7:
        image: notes/flappy07.jpg
        text: マウスをクリックしたときにバードを飛ばしたいなら、「飛ぶ(flap)」ブロックを適切なイベントハンドラー(event handler)に接続しましょう。するとゲームでマウスをクリックすると、バードが飛びます。
      8:
        image: notes/flappy08.jpg
        text: アクティビティの一つ一つのパズルで、新しいイベントを紹介していきます。そこであなたはイベントに応じて適切なブロックを追加していくのです。
      9:
        image: notes/flappy09.jpg
        text: 次のようにドロップダウンの矢印が表示されたら、設定を変えることができます。たとえば、フラッピーが地面にヒットしたときの再生音などです。
      10:
        image: notes/flappy10.jpg
        text: 最終的なパズルでは、あなた自身のゲームを作成して、友人と共有することができます。ぜひ楽しんで！
    loop_times:
      1:
        text: こんにちは、私はマーク！繰り返しについて学びましょう。繰り返しを使うと、操作の集まりを何度も何度も、何千回でも何億回でも繰り返すようにコンピュータに伝えることができます。
      2:
        text: このパズルでは、鳥がブタのところに行くように鳥を5だけ前に移動させましょう。
      3:
        text: 私たちの助けになる新しい「繰り返し」ブロックを使うことができます。
      4:
        text: 5回「前方に移動する」ブロックをドラッグしてくる代わりに・・・
      5:
        text: "「前方に移動する」ブロックを「繰り返し」ブロックの中に置いて、何回繰り返すのかブロックに数を書くことができます。"
      6:
        text: 重要なこと：「繰り返し」ブロックの内には1つ以上の命令を置くことができます。
      7:
        text: 新しい「繰り返し」ブロックを使って楽しもう！
    loop_until:
      1:
        text: こんにちは、私はクリスです。マイアミ・ヒートに参加する前は、ジョージア工科大学へコンピュータサイエンスを勉強しに行ってました。私たちの新しいブロック「まで繰り返し」ブロックを試してみましょう。
      2:
        text: 鳥がブタのところまで移動するのにどれだけ遠いかわからなかったらどうしましょうか？
      3:
        text: "「まで繰り返し」ブロックの中に「前方に移動する」ブロックを置けば、鳥はブタのところへ行く（または壁に当たってしまう）まで前に進みます。"
      4:
        text: 重要なこと：これまでのように、「まで繰り返し」ブロック内に複数のブロックを置くことができて、すべて繰り返されます。
    if:
      1:
        text: こんにちは、私はビルです。新しい基本的な概念「もし」の文を学びましょう。これは、コンピューターが何かを決めるときに使われます。
      2:
        text: "「もし」の文は日常生活でも使います。朝外に出る前、「もし」外が雨なら、ジャケットを着る必要がある、という風に。"
      3:
        text: 左側に道があるかをゾンビに聞いて、もし(If)左側に道があれば、その方向に曲がるようゾンビに指示します。
      4:
        text: このコードを書くには、「もし」のブロックを引き出した後、「左に曲がれ」のブロックをその中に入れます。
      5:
        text: では、「前に進め」ブロックをその上に置き、「くり返す」ブロックをすべての周りに置いてみましょう。ゾンビが前に進むたびに左側に道があるかをチェックし、そして曲がります。「くり返す」の命令は重要で、一歩進むごとに曲がるかどうかをチェックします。
      6:
        text: "「もし」の文はコンピュータサイエンスではとても重要です。私が最初に作ったプログラムは「三目並べ」ですが、その中に、「もし相手が勝ちそうになったら、相手のマークが３つ並ばないようブロックせよ」、という「もし」の文がありました。"
      7:
        text: "「もし」ブロックを使って遊んでみましょう。"
    if_else:
      1:
        text: こんにちは、私の名前はサローニです。私は健康や薬についての問題を解決するため、コンピュータサイエンスを使います。「もし～でなければ」ブロックを勉強しましょう。「もし」ブロックに似ていますが、「でなければ」というのがついています。
      2:
        text: "「せよ」と書かれたところに「前に進め」ブロックを置き、「でなければ」と書かれたところに「左に曲がれ」を置くと、ゾンビは２つどちらかを選ぶことになります。前方に道があればゾンビは前に進み、でなければ（前方に道がなければ）ゾンビは左に曲がります。"
      3:
        text: '"if"ブロックと同じように"if else"ブロックを"くり返し"ブロックの中におくことができます。そうすると、ゾンビは動き続けて"if
          else"ブロックはどこか曲がるところがないかを調べ続けます。'
      4:
        text: では、ゾンビを元の場所に戻してやりましょう。
    if_else_scrat:
      1:
        text: If else 文は二つのどちらをするかを決めるためのものです。私たちの親友のリスのスクラットといっしょに、どうやって if else
          文を使うか見てみましょう。
      2:
        text: このブロックは"if"ブロックとまったく同じに見えますが、"else"という部分が一番下にあります。「前に進め」のブロックを「せよ」のところにおいて、「左へ曲がれ」を「でなければ」のところにおくと、リスのスクラットは前に道があれば前に進み、道がなければ左に曲がります。
      3:
        text: そこで、何かを決めてそれにしたがって二つのアクションのどちらかを実行します。"if"ブロックのように、"if else"ブロックも"繰り返し"
          ブロックの中に入れることができます。
      4:
        text: 今度は、リスのスクラットがドングリをひろうのを手伝ってあげましょう ！
    function:
      1:
        text: こんにちは、私はブリナ。インスタグラムで働くエンジニアです。「関数」とは、繰り返し使うコードの塊のことで、毎回同じコードを書く代わりに、一つのブロックとして使うことができます。
      2:
        text: 関数をどのように定義するか勉強しましょう。関数の定義には、角に星印がついています。関数の名前は一番上に書かれています。
      3:
        text: ブロックの定義は、何をするかを私たちに教えてくれます。この関数の定義は「5つ塗りつぶす」と呼ばれ、これらは「繰り返し」ブロックと「塗りつぶし」ブロックで成り立っています。
      4:
        text: ワークスペースに定義がついていますが、このファーマーは、関数カテゴリーから「fill 5」関数をドラッグしないとその関数は実行しません。
      5:
        text: 'FUNction（関数）の「FUN」を今こそ！ '
    loop_while:
      1:
        text: 'こんにちは、マキンデといいます！"while" ブロックについて勉強してみましょう。 '
      2:
        text: 'ステートメントの上がTrueである限り「間ブロック」の中に何をいれても動きます。

'
      3:
        text: たとえば、農民が積山に立っていると、彼女の下に積山があるのに、彼女は1シャベルを削除し続けるでしょう。
    loop_for:
      1:
        text: こんにちは、私の名前はトリーナで、ピクサーで働いています。シュレックを含むたくさんの映画作りに携わってきました。
      2:
        text: これは私たちの新しい「カウンター」ループです。アクションが何度も繰り返し実行され、アクションを毎回少しずつ変更を行うことができます。
      3:
        text: |+
          この例では、私たちの「カウンター」ループは「50から90までを10
          ずつ計算機で数える」といいます、その中で、私たちは私たちの「正方形を描く」ブロックを持っています。「長さ」スポットのなかの「可変」セクションから「カウンター」ブロックをドラッグしなさい。

      4:
        text: |-
          つまり、私たちのアーティストは50ピクセルの辺を持つ正方形を描くという事です。そして更に10を加えて60ピクセルのへんを持つ正方形を描きます。そしてその後90ピクセルになるまで10
          ずつ加えて、正方形を作っていきます。そうすると私たちは50, 60, 70, 80, そして90の正方形が出来上がります。
    parameters:
      1:
        text: こんにちは、私は ジャネッテです。私は Zynga のエンジニアです。
      2:
        text: "もし私たちがたくさんの三角形を描画したい、長さが違うサイズにしたかったらどうしますか？\n\n"
      3:
        text: 手ですべてのコードを書くことができる、または私たちはパラメーターを持つ関数を使用できます。
      4:
        text: これを行うに、「三角形を描く」関数の定義の上の青い星をクリックすます。それから、Inputブロックの中にあるInput nameをドラッグしてください。
      5:
        text: |-
          その時、もし"x"とあるスポットの中に「長さ」を記述をし、"Enter"キーを押すことで、あなた用の長さ入力の関数が作成できます。



          それが言うところのスポットで「長さ」を記述する場合、"x"と"Enter キーを押します"、長さの入力関数を作成します。
      6:
        text: |-
          それから星をクリックしてください。次に変数カテゴリの上をクリックします、そして
          あなたの関数定義の「前へ進む」ブロックの中に「長さ」ブロックをドラッグします。そして
          古い数字ブロックをドラッグして消します。
      7:
        text: "パラメーターを持つ関数を使用するには、関数カテゴリをクリックし、「長さ」関数と一緒に「三角形を描く」をドラッグで引き出します。\n\n"
      8:
        text: 次に、異なる寸法の三角形を描くには、違う数字を入力する事で数学ブロックを使う事ができます。
    hoc_wrapup:
      1:
        text: |-
          おめでとうございます ！最後のパズルを解決したという事は、たった今、あなたが、どんなロボットにも分岐点のない迷路や、どんなに長いのトンネルでも、それがゾンビだろうと、鳥だろうと火星無人探知機だろうと、もしくは自動運転車だろうと、進む道を見つける方法を導くコードを書き上げました。



          とだけ言うことができるあらゆるロボット迷路の非分岐または任意の長さのトンネルを介しての方法を検索する方法も、自車の運転や火星ローバー鳥ゾンビかどうかのコードを書いた。
      2:
        text: |-
          あなたが用いた基本概念は全てのプログラミングやこれからトライするであろうアプリの中心あります。私たちは「繰り返しループ」、「まで繰り返す」、「ifステートメント」そして「if
           elseステートメント」について学びました。
      3:
        text: 最初の１時間コースが気に入ったなら、code.org にアクセスしてコンピューターサイエンスの勉強を続けましょう！20時間コースを終わる頃には、あなたはプログラミングの基本をマスターしているでしょう。そしてもっと難しい携帯アプリやロボット操作、ゲームなどの作り方を勉強できるようになります。
      4:
        text: テクノロジーは私たちがやる事すべてを変えています。年齢なんて全く関係ありません。プログラミングとは楽しいものであり、クリエイティブであり、誰でも学べます！
    20_wrapup:
      1:
        text: ノートの表示は近日公開予定！
    frozen_intro:
      1:
        text: こんにちは、私の名前はリンジーです。私は自分のアプリを作り、使って見せ、自分自身も利用しています。プログラムを使いながら、アナとエルサと一緒に氷の世界の美しさと魔法を体験してみましょう。
      2:
        text: アイススケートをしながら雪の結晶やパターンを作り、出来上がった雪の王国をお友達に見せることができるようになります。
      3:
        text: 次の時間では、プログラミングの基本を学びます。プログラミングは文章で書くことが多いのですが、ここでは、ブロックを引っぱる（ドラッグ・アンド・ドロップ）ことでプログラムを書くことができる
          Blockly を使います。これは大学生でも基礎を勉強するやり方です。こんなに簡単に見えても、立派なプログラミングをやっていることになります。
      4:
        text: プログラムというのはコンピューターが何をしたらいいかを教えるための指示の集まりです。さあ、プログラムを作ってエルサが 簡単な線を作るのを助けてあげましょう。この方法は後でもっと難しいパターンを作るのに使われます。
      5:
        text: 画面は3 つの部分にわかれています。左には氷の表面があってあなたのプログラムが実行される部分です。右下には各レベルの指示が書かれています。
      6:
        text: この真ん中の部分はツールボックスで、ここにあるそれぞれのブロックはエルサとアンナが行うことができるアクションです。
      7:
        text: 右側の空間はワークスペースと呼ばれていて、プログラムを作るところです。氷の表面を動き回るために、「前に進め」ブロックを使います。
      8:
        text: ここでは、「前に進め」ブロックは、「100 ピクセル前に進め」と言っています。「実行」を押すと、どうなりますか？エルサは前に進みます、ちょうど100
          ピクセルです！ピクセルというのは、コンピューター画面のとても小さな四角のことです。
      9:
        text: このパズルの中で、手元にある方のブロックが "右に 90 度曲がります。” と言います。そしてこの ”右折" ブロックを使うと、エルサを一定の間隔で回せることができます。エルサを遠くまで回転させて遊ぶことができます。角度についてはエルサの前にある道から図ることができます。例えば、これが90度の回転、そしてこれは120度の回転という具合に。
      10:
        text: ピクセルと角度はとなりの矢印をクリックすれば変えられますよ。
    frozen_loops:
      1:
        text: こんにちは、パオラです！ コンピューターは繰り返すのがとても得意。あなたも10や20、もしかして100までなら数えられるかも。 でもコンピューターなら10億とか100京までだって数えられるんですよ。途中で退屈もしないし、一瞬で数えちゃいます。数えるのでも、絵を描くのでも、コンピューターならなんでも数百回でも、何十億回だって繰り返せるんです。
      2:
        text: プログラミングでは、これをループと呼びます。ループとはコードを繰り返す処理です。次のパズルでは、この「繰り返し」を使ってアナが正方形を作れるようにします。
      3:
        text: "「リピート」ブロックに配置されたコードは、指定された回数だけ繰り返し実行されます。"
      4:
        text: "「前に進む」ブロックと「右に回転」ブロックを4回繰り返すことで、正方形を描くことができます。もっと簡単な方法は、「前に進む」と「右に90度回転」の組み合わせを作り、それを4回繰り返すよう命令することです。これは、「前に進む」と「右に回転」のブロックを「くり返す」ブロックの中で使うことで実現できます。"
      5:
        text: "「くり返し」の回数はいくつにでも設定でき、それと同じだけ「くり返し」の中のブロックも実行されるのを覚えていてください。"
    frozen_functions:
      1:
        text: こんにちは、私はクリス・ボッシュです。私はバスケットボールのプロ選手です、そして大学ではコードを書いています。
      2:
        text: コンピューター科学の最も重要な考え方の 1 つは、どのようにして新しいコマンドを定義するかです。ほとんどのコンピューター言語は、たった
          100 くらいの単語やコマンドしかありません。これを組み合わせてあなた自身のコマンドを定義することが、本当にアートや魔法なのです。
      3:
        text: この一連のコマンドを使用してアクションを実行する方法をコンピューターに一度伝えると、後でそれを簡単に繰り返せるように、アクションにあなたの好きな名前をつけることができます。独自のコマンドを定義して名前を付けることを
          関数 と呼びます。
      4:
        text: こんにちは、私はジェスです。ブロックを使ってプログラミングするときに、何度も使いたいアクションの組み合わせがあったら、関数を使うことができます。たとえば、正方形を作成するためのコードを書いたとします。
      5:
        text: "「正方形を作成」という関数として定義することができます。"
      6:
        text: これで　しかくが　たくさんつくれる　あたらしい　ブロックは　なんかいも　つかえます。
      7:
        text: たくさんの簡単な図形で、複雑な模様を作ることができます。次のパズルでは、今あなたが円を作るために書いたコードが、様々な大きさの円を作る新たな関数として利用できます。あなたはそれで、エルサの綺麗で緻密な雪の模様を作ることができますか？
    playlab_intro:
      1:
        text: 私たちはPlay Labを使ってゲームを作成します。よいゲームは物語があり、全ての物語にはキャラがいます。私たちはどうやってキャラたちが魔女、エイリアンのようなものを作り、そして動物たちが話し動きお互いに交流するか教わるでしょう。このチュートリアルの最後ではscratch
          でゲームを作成し、それをあなたの友達と共有します。
      2:
        text: 画面が3つに分割されます。左は、あなたが書いたプログラムが実行されるゲームの画面です。その下に、各レベルの説明が書いてあります。
      3:
        text: 真ん中はツールボックスで、それぞれのブロックにコードが書かれています。右側の空白はワークスペースと呼ばれ、そこで私たちのプログラムを構築します。
      4:
        text: |
          まず最初に、オレンジ色の「実行時」ブロックに他のブロックをつなげる必要があります。
          黄色い線が見えるまでブロックをドラッグすることによって、たくさんの種類のブロックを一緒につなげることが出来ます。
      5:
        text: "「言う」ブロックをドラッグして「実行した時」ブロックにくっつけて、「こんにちは」と入力することによって「こんにちは」と’話すペンギンになります。私たちはまた「右へ動く」と「左へ動く」ブロックを使うことによってペンギンを動かすこともできます。ブロックを配置したら’実行’ボタンを押すとあなたがプログラミングした結果が見られます。"
      6:
        text: では、はじめてみよう。おわるまでに、たのしくなったり、かなしくなったり、ポイントをためたり、火の玉をなげたり、あいても じぶんも  けしたり
          できたりして あそべる いろんなキャラクターで じぶんのゲームをつくることができるようになるよ。
    playlab_events:
      1:
        text: |-
          今、私たちはすべてのゲームプログラマーが毎日使う何かについてを教わる予定です。
          それらは「イベント」と呼ばれます。イベントは何かが起こった時、それをあなたのプログラムに教えてくれます。何かが起こった時、アクションが実行されます。
      2:
        text: イベントの例としては、マウスをクリックしたり、矢印ボタンやスクリーンを軽くタッチする事を聞くことです。
      4:
        text: '"~した時"というブロックがあります。これらに"move"ブロックをリンクして方向を指定すれば、あなたのキャラは上下左右自由に動けるようになります。このようにして一歩一歩、あなたのゲームはさらにいろんなことができるようになります。'
    playlab_repeat_forever:
      1:
        text: これは「ずっと繰り返す」ブロックです。このブロックの中にあるものは、プログラムが終わるまでずっと繰り返されます。
      2:
        text: もし私たちがキャラに何かを繰り返しさせたかったりプレイヤーがなにもしないとき、私たちは「永遠に繰り返す」ブロックの中にそれらのブロックを置きます。
      3:
        text: この次のパズルでは、魔法使いが王国中を常に右へ左へパトロールできるように助けることが目標です。繰り返しのコマンドを学ぶことで、後で自分のゲームを作る時に役に立つでしょう。
    C1_artist_intro:
      1:
        text: これらは描画ブロックです。それらをアーティストが灰色の線をつくるのに必要な場所に適切なものを動かして使ってください。
      2:
        text: それらはジャンプブロックです。アーティストは動くけれど線が描かれないとき、これらを使用して次の灰色の線にジャンプさせます。
    C1_bee_level_intro:
      1:
        text: みつばちってかっこいいでしょ？つぎのパズルでは、みちばちが花（から）みつをとって、巣（す）ではちみつをつくるようにうごかしてみて。クリアするには「つくる」と「取得（しゅとく）」のブロックをつかってね。
    C1_maze_debugging:
      1:
        text: デバッグとは問題を見つけ、それを修正することです。デバッグにはたくさんのやり方があります。なかでも手軽なのは、問題が発生するまでひとつずつステップを進めていく方法です。わたしはいま平均台で後方倒立回転跳びに挑戦していますが、なかなかうまくいきません。
      2:
        text: 手順をひとつひとつ確認したことで、ようやくどこが問題かわかりました。手のつき方が良くなかったのです。もういちど、今度はつく手の位置を変えて、ようやくうまくいきました。こうしてわたしは後方倒立回転跳びのデバッグに成功したのです。うまくいってとてもうれしかったです。
      3:
        text: まずはあらかじめ用意されたブロックをつかってデバッグの学習をはじめましょう。今置かれているブロックではゴールに到達できないようです。デバッグして答えを変えてやらないといけません。どこがおかしいのでしょう？
          どうやらもう一つさらに西に進む必要があったようですね。
      4:
        text: もうひとつ「西」ブロックを足して問題を修正します。うまくいったか「実行」して確かめてみましょう。やった、うまくいきましたね！
    C1_maze_intro_sequencing:
      1:
        text: このパズルはトリをブタに近づけます。パズルを見てどちらの向きに持っていくとよいか考えてください。
      2:
        text: ブロックをツールボックスからワークスペースにドラッグします。「実行した時」ブロックの下にあることを確認して、正しい答えがわかったと思ったら「実行する」をクリックして、トリがブタへと進むのを見ていてください。
    C1_moveitmoveit_unplugged:
      2:
        text: |-
          スマイリーは顔を下げたが、たった一人の人はどうやってそこへ行けるか知っている。
          さあこのプログラムをスタートしよう。
      3:
        text: |-
          プログラムは機械で実行することができるコードを符号化しているアルゴリズムです。
          ほとんどの人はプログラムはコンピュータのために私たちが書く何かだと考えています。
          プログラムは他の場面でも役に立つ素晴らしいものです。あなたは自分でゲームを作ることが出来るし、そのプログラムはあなたのためにロボットがする何かにもなります。
    C1_going_places_safely:
      1:
        text: |-
          エレミヤといいます。こんにちは！私は 7 歳です。
          私はお母さんのコンピューターで遊ぶことが大好きです。もちろんいつも最初に許可をとりますよ。
          「お母さん、コンピューターを使っていいでしょ？ねっ！」って。
      2:
        text: 私はインターネットが使えるので私のお母さんのコンピューターが大好きです。インターネットは、あなたの近所のようなものです。あなたはカッコいい場所を訪れることができますし、あなたは家族や友達と（コンピュータで）話せるし、たくさんの新しいことを教わることができます。
      3:
        text: 昨日、私は家の近くの動物園を訪れたの。私は赤ちゃんのシマウマをみたよ。私は写真を撮って縞模様の色を変えて、帽子を追加して、それを私の風変わりな動物コレクションに追加したの。すごいでしょ。そして、私はとっても遠くの場所へ行ったの。私はケニアを訪れたわ。その国はアフリカにあるの。そこにはたくさんのシマウマがいるのよ。
      4:
        text: |-
          時々インターネットでおばあちゃんのような他の地域に住んでいる知っている人と話します。
          こんにちは。おばあちゃん！彼女は私にクッキーを焼いていて、私の誕生日に送ってくれるの。
          「おいしいよ。インターネットは smellorama！のようね。」私はインターネットで他の人（知らない人）とはなすこともできるけど、いとこのように私の知っている人とだけ話すわ。
      5:
        text: 私が一番好きなインターネットはゲームで遊ぶこと。スコア！私は描いたり新しい何かを作ることや、それを友達と共有することも好きだ。かっこいい！時々私はウェブサイトを訪れて新しい何かを教わるけど、いつもお気に入りのウェブサイトに夢中になってしまいます。うわー恐竜！
    infinity_playlab_intro:
      1:
        text: いま何年生？２年生？高校生？1年生？わたしがプログラミングをはじめたのは中学生でした。6年生のときにパソコンをかってもらって、みんなのもんだいをなおすことができることに、こうふんしました。アイディアからじっさいにものをつくることができるんです。
    starwars_intro:
      1:
        text: こんにちは、私はキャスリーン ・ ケネディで、す。私は「スター ・ ウォーズ　フォースの覚醒」のプロデューサーです。今日は私たちのメインキャラクタ―である
          BB-8と一緒に作業をやっていきます。BB-8は球型のドロイドです。彼の動き、彼のやることすべてはコンピューターのソフトウェアによって作られています。コンピュータ
          科学は、広告から、医療、映画などあらゆる業界に影響を与えています。　事実、何百ものコンピューター エンジニアの力によって、「フォースの覚醒」のような映画も作られているのです。
      2:
        text: こんにちは私はレイチェル・ローズ、私は ILM でシニア研究開発エンジニアとして、アニメーションと生き物の開発チームをリードしています。「フォースの覚醒」で、私はアーティストが、はるか遠くの銀河でもリグというキャラクターが本物そっくりに動いているような動きができる開発をする支援をしています。
      3:
        text: 次のいちじかんで、じぶんのスターウォーズゲームを作ります。私たちがプログラミングの考え方をおしえるます。ふつう、プログラミングはテキストで書かれますが、ここではブロックを動かしたり、はなしたりしてプログラムを書きます。フードの下で、コードを作ります。ブロックで基本を覚えたら、ジャバスクリプトとよばれる、ネットで一番使われているプログラミングの言語に切りかえます。
      4:
        text: 初めに、レイと一緒にBB-８を落ちている部品をひろいながら歩くプログラミングを作る作業をしましょう。あなたが見ている画面は3つに分かれています。左側はスターウォーズのゲームスペースでコードが実行される場所です。各レベルの指示はゲームスペースの下に書かれます。
      5:
        text: 真ん中はツールボックスになっていてそれぞれのブロックはBB-8が理解できる命令を下します。
      6:
        text: 右側にある白いスペースはワークスペースと呼ばれ、ここが私たちのプログラムを作るところです。
      7:
        text: 例えば私が右へ曲がる; moveLeft() をワークスペースに移動して実行をおしたら、どうなるでしょう？BB-8は線の上を左にブロックひとつ分移動します。
      8:
        text: 例えば私がBB-8を左に動かす moveLeft(); をした後に、何かをしたい場合、私たちのプログラムに別のブロックを加えることができます。MoveUp();
          を選んでそれを私の moveLeft(); ブロックの下に移動させたらハイライトが現れます。そして、そこにそれを落とすと二つのブロックがくっつきます。
      9:
        text: もう一度実行押すと、BB-8はワークスペースで上下に重なっている命令に従います。もしブロックを削除したいと思ったら、くっついているところから引き離してツールボックスに返せばいいです。
      10:
        text: 実行をした後は、休憩ボタンを押せばBB-8 を初めに戻せます。それでは一緒にやってみましょう!
    starwars_typing:
      1:
        text: ブロックの中にはJavaScriptが使われています。JavaScriptはプロのプログラマーによって今日までで一番使われているプログラム言語です。ブロックはコードを学ぶのに適しています。事実、ハーバードやバークレーなどのトップレベルの大学でもこのように教えています。ただし、一度基本を身につけたらエンジニアは早さを優先するためにコードを書きます。
      2:
        text: ツールボックスの中をのぞいて探したり、外に移動させたりしないで、何百ものコマンドを入力することができます。今は入力することを練習しているので最初は遅いかもしれませんが、挑戦してもらいたいです。
      3:
        text: ワークスペースの右上の角で、どのパズルも、ブロックからコードをテキストに変換ができるボタンをクリックしてテキストを見ることができます。
      4:
        text: 次のレッスンで私はタイピングのモードに切り替えてもらいます。ここではまだツールボックスからブロックを移動はできたり、コマンドの名前をタイプできます。タイピングを始めるのに、自分がタイピングしている下に可能なコマンド名を見せることができます。コマンドの名前を全部入力する代わりに、これら一つを選んで早く次に進めることができます。私は自分の仕事の中で、コードを書くときはこのオートコンプリートの機能をいつも使っています。
      5:
        text: コードを入力している時、コンピュータはあなたに正確さを求めます。コマンド名のセミコロンやカッコを含んだスペルや大文字は正しく正確にする必要があります。ささいな間違いでも、BB-8はコードが理解できなくなり、動くことをしません。
      6:
        text: ラインの上でエラーがでると、あなたが修正しやすい様にエディターがそれをハイライトしてくれます。
      7:
        text: もし固まったりしたらやり直しボタンを押すことでいつでもやり直しができますまた、右上の角をクリックすればいつでもブロックモードに戻れることができます。OK、それでは入力してみましょう！もし間違ってもイライラしないでくださいね、成功するのにみんな何度も失敗してるんですから。
    starwars_events:
      1:
        text: こんにちは、私の名前はチャリ―タ・カーターです。ウォルトディズニーイメージニアリングのシニアクリエイティブプロデューサーです。私はゲストのみなさんが体験するアトラクションを実際に生産するチームで指揮を取っています。いつも心の中にはゲストのみなさんがより良い体験をできるようどう改善していくべきかを見つけています。
      2:
        text: やったね、おめでとうございます！BB-8をプログラムできました。次はもっと難しいことを用意しています。やってみましょう。もうプログラミングの基礎について勉強したので、R2-D2-とC3POを使って自分のゲームを作るところに戻りましょう。
      3:
        text: ゲームを作るのに、ゲームプログラマーが毎日つかうものを覚えましょう。イベントと呼ばれるものです。イベントはあなたのプログラムに何かしたり、何かあったときに、聞いたり待ったりすることを伝えて、それを実際に実行します。
      4:
        text: イベントの例としては、マウスをクリックしたり、矢印ボタンやスクリーンを軽くタッチする事を聞くことです。
      5:
        text: それではここで、R2-D2を上に移動して、反ぎゃく者にメッセージを伝えて、他の反ぎゃく者を下に移動させます。プレーヤー（ゲームをやる人）がup(上）  /down(下)矢印を使うか、up(上）  /down(下)ボタンを使ったとき、私たちはイベントを使って彼をうごかします。
      6:
        text: わたしたちは whenUp() のイベント ブロックを使い、goUp() ブロックをくっつけます。プレイヤーが、上矢印キーをおしたら、whenUp()
          ブロックにくっついているコードが実行されます。そして、R2-d2 を下に移動して同じことを行います。
      7:
        text: これをやるには、 whenUp() と呼ばれるコマンドを使います。ツールボックスからコマンドを引っ張って持ってくると、それがはじまり、セミコロン（；）のかわりに、中かっこ（｛｝）とおわりが表示されます。これはわたしたちに、途中で他のコマンドを配置するスペースをくれます。かっこの中におく全部のコマンドは、プレイヤーが上矢印を押すと、実行するようになっています。
      8:
        text: R2-D2 を上に動いてほしいので、コマンドの中にgoUp();ブロックをいれてみましょう。そして、R2-D2を下に動かしたいので、同じことをします。
      9:
        text: そして今、事前にドロイドを操作するのに、全部のコードを書かなくても、R2-D2がスクリーンの周りを動くイベントボタンを押させることができます。一歩一歩あなたのゲームに動きがついてきましたね。
    starwars_congrats:
      1:
        text: 私の名前はアリスです。Code.orgで製品とエンジニアリングチームを受け持っています。そして、今あなたがプレイしているこのチュートリアルを作りました。
      2:
        text: 今最後のレベルに達しました、おめでとう！Star Warsのゲームを自分で作るのに必要なことを全部勉強しました。もうこれ以上の指導はありません、問題を解くパズルもありません。どう動かすかを決めて自分のゲームを作れます。もうひとつ、新しい音と、新しいコマンドをアンロックしたので、もっと出来ることがあります。
      3:
        text: "[生徒が話している]基本的にブタをつかまえてポイントを取るゲームを作ったんだね。ツイストはブタをつかまえるたびにストーム ・ トルーパーが現れるんだね。本当はスクリーンいっぱいにブタが埋まっていて、10,000回ブタにタッチすると、君の勝ちだよ。"
      4:
        text: "[生徒が話している]全部殺すとポイントがもらえて、負けがないゲームを作ったよ。僕のプログラムでは、キーを逆にしたんだ、そうすると上にクリックすると、君のキャラクターが下に動く、右に行くと、君のキャラクタが左に動く。すごく難しいんだよ！自分でゲームを作ると自分に不利なことも有利にできるんだ。あれできたかな？やったぁ！"
      5:
        text: 自分のゲームが作れたら、共有を選択して友達とみせあえるリンクを得たり、自分の携帯で遊べることもできるよ。楽しんでね！
    starwars_blocks_intro:
      1:
        text: こんにちは、私はキャスリーン ・ ケネディで、す。私は「スター ・ ウォーズ　フォースの覚醒」のプロデューサーです。今日は私たちのメインキャラクタ―である
          BB-8と一緒に作業をやっていきます。BB-8は球型のドロイドです。彼の動き、彼のやることすべてはコンピューターのソフトウェアによって作られています。コンピュータ
          科学は、広告から、医療、映画などあらゆる業界に影響を与えています。　事実、何百ものコンピューター エンジニアの力によって、「フォースの覚醒」のような映画も作られているのです。
      2:
        text: こんにちは私はレイチェル・ローズ、私は ILM でシニア研究開発エンジニアとして、アニメーションと生き物の開発チームをリードしています。「フォースの覚醒」で、私はアーティストが、はるか遠くの銀河でもリグというキャラクターが本物そっくりに動いているような動きができる開発をする支援をしています。
      3:
        text: 次の１時間は、自分でスターウォーズのゲームを作りながら、プログラミングの基本的な考え方を学びます。ふつう、プログラミングはテキストで書かれますが、ここではブロックを移動したりはなしたりして、プログラミングを書いていきます。それでは初めに、レイと一緒に、BB-8の部品を回収しながら歩くプログラミングを作る作業を行います。
      4:
        text: 画面は、3 つの部分に分割されます。左はスター ・ ウォーズのゲーム スペース コードが実行されます。各レベルの指示は、ゲーム空間下に書いてあります。
      5:
        text: 真ん中はツールボックスになっていてそれぞれのブロックはBB-8が理解できる命令を下します。
      6:
        text: 右側にある白いスペースはワークスペースと呼ばれ、ここが私たちのプログラムを作るところです。
      7:
        text: moveLeft(); ブロックをワークスペースの方にドラッグをすると、何が起こるでしょう？BB-8 は、グリッドの上をブロック一つ分左に動きます。
      8:
        text: もしBB-8で moveLeft();ブロックの後、何かをしたかったら？別のブロックを自分のプログラムにいれることができます。それでは私はMoveUp();
          を選んで、私の moveLeft(); ブロックの下にハイライトが出てくるまで移動させます。2つのブロックがくっついたらマウスを離します。実行をもう一度押すと、BB-8がワークスペースの上と下にくっついた命令に従います。
      9:
        text: 'ブロックがいらなかったら、くっついているところから離して、ツールボックスの中に移動します。

'
      10:
        text: 実行をした後は、休憩ボタンを押せばBB-8 を初めに戻せます。それでは一緒にやってみましょう!
    starwars_blocks_events:
      1:
        text: こんにちは、私の名前はチャリ―タ・カーターです。ウォルトディズニーイメージニアリングのシニアクリエイティブプロデューサーです。私はゲストのみなさんが体験するアトラクションを実際に生産するチームで指揮を取っています。いつも心の中にはゲストのみなさんがより良い体験をできるようどう改善していくべきかを見つけています。
      2:
        text: やったね、おめでとうございます！BB-8をプログラムできました。次はもっと難しいことを用意しています。やってみましょう。もうプログラミングの基礎について勉強したので、R2-D2-とC3POを使って自分のゲームを作るところに戻りましょう。
      3:
        text: ゲームを作るのに、ゲームプログラマーが毎日つかうものを覚えましょう。イベントと呼ばれるものです。イベントはあなたのプログラムに何かしたり、何かあったときに、聞いたり待ったりすることを伝えて、それを実際に実行します。
      4:
        text: イベントの例としては、マウスをクリックしたり、矢印ボタンやスクリーンを軽くタッチする事を聞くことです。
      5:
        text: それではここで、R2-D2を上に移動して、反ぎゃく者にメッセージを伝えて、他の反ぎゃく者を下に移動させます。プレーヤー（ゲームをやる人）がup(上）  /down(下)矢印を使うか、up(上）  /down(下)ボタンを使ったとき、私たちはイベントを使って彼をうごかします。
      6:
        text: whenUp() イベント ブロックを使って、goUp()に ブロックをくっつけます。プレイヤーは、上矢印キーを押したときに、whenUp()
          ブロックについているコードが実行されます。R2-D2 を下に移動して同じことを行います。今度は、事前にコードを全部を書く代わりに、R2-D2に自分をスクリーンの周りを回転させるイベントボタンを押させることができます。
      7:
        text: だんだん、あなたのゲームに動きがついてきました。
    starwars_blocks_congrats:
      1:
        text: 私の名前はアリスです。Code.orgで製品とエンジニアリングチームを受け持っています。そして、今あなたがプレイしているこのチュートリアルを作りました。
      2:
        text: 今最後のレベルに達しました、おめでとう！Star Warsのゲームを自分で作るのに必要なことを全部勉強しました。もうこれ以上の指導はありません、問題を解くパズルもありません。どう動かすかを決めて自分のゲームを作れます。もうひとつ、新しい音と、新しいコマンドをアンロックしたので、もっと出来ることがあります。
      3:
        text: "[生徒が話している]基本的にブタをつかまえてポイントを取るゲームを作ったんだね。ツイストはブタをつかまえるたびにストーム ・ トルーパーが現れるんだね。本当はスクリーンいっぱいにブタが埋まっていて、10,000回ブタにタッチすると、君の勝ちだよ。"
      4:
        text: "[生徒が話している]全部殺すとポイントがもらえて、負けがないゲームを作ったよ。僕のプログラムでは、キーを逆にしたんだ、そうすると上にクリックすると、君のキャラクターが下に動く、右に行くと、君のキャラクタが左に動く。すごく難しいんだよ！自分でゲームを作ると自分に不利なことも有利にできるんだ。あれできたかな？やったぁ！"
      5:
        text: 自分のゲームが作れたら、共有を選択して友達とみせあえるリンクを得たり、自分の携帯で遊べることもできるよ。楽しんでね！
    mc_intro:
      1:
        text: イエンスです。ストックホルムのMojangでMinecraftの開発主任を務めています。11才ごろにゲームを作りたくてプログラミングを始めました。父の友人が「ならプログラミングを学べ」と言ったんです。何かを作ったり、構造を調べたりするのが好きで、Minecraftもそこが気に入っています。
      2:
        text: では、Minecraftの世界でキャラクターを動かして、プログラミングの基本を学びましょう。
      3:
        text: 既存のプログラミングとは違い、我々は「ブロックリー」という、ブロックのドラッグ＆ドロップでプログラムするシステムを使っています。そうすることでJavaScriptのコードができるんです。
      4:
        text: これから学ぶのはプログラミングの基本要素とコンピューターサイエンスの基礎概念です。Minecraftにも同じ概念が用いられています。
      5:
        text: まずキャラクターを選びます。アレックスにしましょう。最初に彼女を動かすプログラムのコードを組みます。
      6:
        text: 画面は3分割されています。プログラムは左で実行され、下には個々のレベルの指示が書かれています。
      7:
        text: 中央のツールボックスのブロックは、キャラクターの行動を制御するコマンドです。
      8:
        text: 右のワークスペースでプログラムを組みます。
      9:
        text: ここに「前進();」ブロックをドラッグして、「実行」をクリックすると、キャラクターが1スペース前進します。
      10:
        text: 続けて何かをさせるには、別のブロックを追加します。たとえば「右回転();」ブロックを選び、「前進();」ブロックの下にドラッグすると、オレンジの線が現れます。ドロップすると、2つのブロックが結合します。もう一度「実行」を押すと、ワークスペースのコマンドが上から実行されます。
      11:
        text: ブロックの削除はツールボックスに戻すだけです。
      12:
        text: 最初に戻るには、右上の「やり直し」ボタンを使います。回転ブロックの上に小さな三角が見えます。これが現れるときは別のオプションを選択できます。さあ、プログラミングを始めましょう。
    mc_repeat:
      1:
        text: Mojangブランドディレクターのリディアです。
      2:
        text: Minecraftでは洞窟を探検し、何かを発見するのが好きです。私はプログラマーではありませんが、こうしてプログラムを学べるのはうれしいことです。
      3:
        text: 前のレベルではたくさんの「前進();」ブロックを使いました。そんな場合、コンピューターがコマンドを連続で実行してくれれば楽ですよね。コンピューターはコマンドを繰り返すのが得意なんです。
      4:
        text: Minecraftでもゲーム世界の生成にリピートループを使います。他にも、たとえばキャラの足の動きにもリピートループを使っています。リピートループはプログラミングの強みの1つです。
      5:
        text: もうすぐ夜が訪れます。身を守るための家を作りましょう。リピートブロックで簡単に家を作れます。
      6:
        text: 家の壁を作るには、「前進();」と材木の配置を4回実行するか、リピートブロックで同じ動作を繰り返させればいいのです。ここでは、リピートブロックで実行回数を指示しましょう。夜が更ける前に家を完成させましょうね！
    mc_if_statements:
      1:
        text: 次はif文について学びましょう。if文はプログラムの重要な要素です。
      2:
        text: if文は「こういう場合はこうする」という判断に使われます。スマホの場合、パスワードが正しく入力された場合はロックを解除、そうでない場合はエラーになります。
      3:
        text: if文を使えば、ゲーム世界で出会うものに対してキャラクターを反応させられます。たとえば、目の前に石や木があれば、それを避けることができます。
      4:
        text: ここでは溶岩を避けましょう。溶岩が見えるときは難しくはありません。でも、石の下の溶岩はどうでしょう？
      5:
        text: 石を掘った後、前進する前に、そこに溶岩がないか調べるべきです。溶岩があったら、前方に石を置いてから、キャラクターを前に進ませれば安全です。if文で足元に注意しながら、採掘を楽しみましょう。
    mc_congrats_share:
      1:
        text: ブロック構築の基礎はおわかりいただけましたか？
      2:
        text: では、自分の作品を作りましょう。この先は指示や謎解きはありません。好きなものを作ってください。
      3:
        text: "[生徒の声] もうすぐ完成。松明でLを描きました。樺の材木でAができたよ。できたわ。羊毛で家を作ったの！"
      4:
        text: 作品は友達に見せることができます。どうぞお楽しみください！
    mc_congrats_no_share:
      1:
        text: ブロック構築の基礎はおわかりいただけましたか？
      2:
        text: では、自分の作品を作りましょう。この先は指示や謎解きはありません。好きなものを作ってください。
      3:
        text: "[生徒の声] もうすぐ完成。松明でLを描きました。樺の材木でAができたよ。できたわ。羊毛で家を作ったの！"
      4:
        text: 何を作るかはあなた次第です。どうぞお楽しみください！
    gumball_intro:
      5:
        text: まんなかはツールボックスとなっていて、それぞれのブロックがめいれいするためのコードとなります。
      6:
        text: 右のワークスペースでプログラムを組みます。
    gumball_repeat:
      1:
        text: 何かを永遠に繰り返さなくてはいけない状況を想像できますか？コンピューターは繰り返しの命令を実行することが得意なので、それを人間がやる必要はなさそうです。
    iceage_intro:
      5:
        text: まんなかはツールボックスとなっていて、それぞれのブロックがめいれいするためのコードとなります。
      6:
        text: 右のワークスペースでプログラムを組みます。
    iceage_repeat:
      1:
        text: 何かを永遠に繰り返さなくてはいけない状況を想像できますか？コンピューターは繰り返しの命令を実行することが得意なので、それを人間がやる必要はなさそうです。
    mc_2016_intro:
      1:
        text: こんにちは、Minecraft のリード クリエイティブ デザイナーの Jens です。これから 1 時間、あなたの Minecraft
          を作ってもらいます。これは Minecraft のようですが、世界は停止しています。羊は動いていませんし、ニワトリはタマゴを生みません。ゾンビは動かずにじっとしています。あなたがコードを追加して
          Minecraft の世界を動かしましょう。
      2:
        text: 'My name is Melissa and I am a user researcher at Minecraft. What I''m
          really interested in is how people think and interact with technology and
          so this job is the perfect job for me to put together the computer engineering
          with the psychology: 人々の考え方と行動を学びます。'
      3:
        text: ゲームの画面は大きく 3 つにわかれています。1) 左には Minecraft のゲームがあります。今は世界が停止しています。これをコードで直しましょう。
      4:
        text: 2) 真ん中はツールボックスです。各ブロックはニワトリ、羊、他の Minecraft の生き物たちが理解できるコマンドです。
      5:
        text: 3) 右側は作業スペースです。ここでプログラムを作ります。
      6:
        text: 何をすべきかを忘れたら、上にあるレベルの説明を見ましょう。
      7:
        text: まず始めに、ニワトリのプログラムを作ります。「前進」コマンドを作業スペースにドラッグしましょう。「実行」を押すと、ニワトリが一歩前に進みます。さらに進ませるために、「前進」ブロックの下に「前進」ブロックをもう
          1 つドラッグします。するとブロックが強調表示されます。その状態でドロップすると 2 つのブロックがくっつきます。そして「実行」を押すと、ニワトリが
          2 歩進みます。
      8:
        text: ブロックを削除するには、重なっている場所からツールボックスまでドラッグします。
      9:
        text: "「実行」を押した後でも、「リセット」ボタンを押せば、いつでもゲームを元に戻してやり直せます。さあ、今度はあなたの番です。自分だけの Minecraft
          を作りましょう。お楽しみください!"
    mc_2016_loops:
      1:
        text: こんにちは、Lisa です。Minecraft のソフトウェア デベロッパーです。ゲーム内の動物や敵を担当しました。担当した動物の 1
          つはヤマネコです。ヤマネコに魚をあげて手なずけて、自分のペットにする部分を担当しました。
      2:
        text: 人間は、何度も何度も同じことをくり返していると、飽きてしまいます。でも、コンピューターのいいところは、同じことを何百万回あるいは何十億回連続でくり返しても、飽きないところです。このくり返しはループと呼ばれ、Minecraft
          のあらゆる生き物に使われています。
      3:
        text: 先ほどは、ニワトリを画面の端まで動かしたのに、ニワトリは止まってしまいました。Minecraft では、ニワトリはずっと動き続けています。ツールボックスにある「恒久的に実行」のループを使って、あなたのニワトリもずっと動かしてみましょう。ループを使えば時間を節約できるので、自分の
          Minecraft を作る時に、他のことができるようになります。
    mc_2016_events:
      1:
        text: このレベルではスティーブかアレックスを選択します。キーボードの矢印キーを押して上、下、左、右に動かします。これでレベル内を自由に動けます。生き物を使うには近くまで歩いていって、その方を向いてスペースキーを押します。
      2:
        text: タッチ画面なら上、下、左、右にスワイプして動かしましょう。自分の前にあるアイテムを使うには、画面をタップしましょう。
      3:
        text: 使うと何が起きるのでしょうか?Minecraft では、羊を刈るとウールを落とし、牛は叩くと逃げていき、クリーパーは近づくと爆発します。このような反応が起こるのは、イベントが存在するからです。イベントはプログラムに命令を聞かせたり、何かが起こるまで待たせます。そして何かが起こると、アクションを行います。
      4:
        text: ここまでは、1 つのイベントだけを使いました。「出現した時」に入れたコードが実行されるのは、生き物が出現した時か、ゲーム開始時です。この先のレベルでは、新たなイベント
          スロットが登場します。「触れられた時」は生き物が触られると実行され、「使用された時」は生き物を使用した時に実行されます。太陽が出てきた時にゾンビを消したいなら、「日中になった時」のスロットに入れましょう。
    mc_2016_spawn:
      1:
        text: マインクラフトでは、スポーンとは生き物が出現する事を意味します。このレベルでは、太陽が沈んだらゾンビをスポーンさせましょう。「夜になった時」のブロックを使うと良いですよ。
      2:
        text: 夜になったらゾンビを出現(スポーン)させたいので、「ゾンビを出現させる」のブロックを「夜になった時」のブロックに追加します。スポーンするとすぐに、ゾンビたちは「出現した時」のイベント
          スロットに入れたコードを実行します。ゾンビで遊びましょう!
    mc_2016_congrats:
      1:
        text: おめでとうございます!コンピューター サイエンスのコマンドを学んで、Minecraft の世界を動かせるようになりました。これからは、あなたが開発者です。すべてのコマンドと生き物をアンロックしました。何が起きるかはあなた次第です。
      2:
        text: ゲームが完成したら、シェアを選択してリンクを友達とシェアしたり、自分のゲームを自分のスマホで遊びましょう。お楽しみください!あなたが作った
          Minecraft をプレイするのを楽しみにしています。
    mc_2017_agent_intro:
      11:
        text: 何をすべきかを忘れたら、上にあるレベルの説明を見ましょう。
