---
ko-KR:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: "'앞으로 100 픽셀 이동' 블록을 쓰면 자동으로 라인을 그려질 것입니다."
        2-3_Artist_1_new_b: 옆으로 도는 것이 어려우신가요? '오른쪽으로 90도 회전' 블록을 사용하세요.
      2-3 Artist 11:
        2-3_Artist_11_a: '각도에 문제가 있나요? 8번 회전해서 360도 이동해야해요.  360 나누기 8은 얼마일까요? '
      2-3 Artist 12:
        2-3_Artist_12_a: 원은 360도에요. 그러니까 아티스트는 루프를 돌때마다 각각 1도씩 돌려야해요. 그럼, 360번을 돌려야겠네요.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: 이 아티스트는 올바른 방향을 가리키고 있지 않는 것 같아요. 선을 그리기 전에 먼저 그것들을 돌려놓을
          수 있나요?
      2-3 Artist 3new:
        2-3_Artist_3new_a: 100에서 70을 뺀 결과는 무엇인가요?  이 게임에서 그 결과는 바로 모자의 높이와 같답니다!
        2-3_Artist_3new_b: 이 아티스트는 올바른 방향을 가리키고 있지 않는 것 같아요. 선을 그리기 전에 먼저 그것들을 돌려놓을
          수 있나요?
      2-3 Artist 4:
        2-3_Artist_4_a: 집 그리기를 끝내려면, 우리 모두 사각형을 그려야해요!
      2-3 Artist 6:
        2-3_Artist_6_a: 그 작은 각도들을 만들려면, 여러분은 사각형으로 만들었던 것보다 매번 _더 멀리_ 돌려야 해요.
        2-3_Artist_6_b: '이미 오른쪽을 향해 있기 때문에, 앞쪽으로 이동하면서 시작하는 것이 가장 쉽습니다. 그런 후 삼각형을
          만들기 위해 왼쪽으로 돌립니다. '
        2-3_Artist_6_c: '삼각형의 각 면은 사각형(100픽셀)의 각 면의 길이와 같습니다. '
      2-3 Artist 7:
        2-3_Artist_7_a: '이 퍼즐을 푸는 가장 쉬운 방법은 첫째 사각형을 그리고 두번째 사각형을 그리기 전에 화가의 방향을 아래쪽으로
          향하게 하여 끝냅니다. '
      2-3 Artist 8:
        2-3_Artist_8_a: 만약 여러분이 200에서 반으로 줄이면, 각 사각형의 면은 얼마나 많은 픽셀을 필요로 할까요?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: '이 다이아몬드의 면은 정확히 사각형입니다. '
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: 여러분은 컨트롤 패널을 10픽셀 _넓게_ 하는 것임을 기억하세요... 결국 여러분이
          어떤 숫자로 변경했든지 10을**추가**하는 것임을 명심하세요.
        2-3_Artist_Debugging_10_b: "**여기서의 시행착오는 아주 좋습니다!**\n한번에 숫자 한개씩 변경하면서 시작하세요.\n어떤
          숫자가 무엇을 할까요?\n잘 되지 않으면,  \"Start over\"를 클릭하세요. 그러면 여러분의 코드는 다시 초기화됩니다. "
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: '힌트: 각 수염은 75픽셀입니다. '
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: '15도 회전은 너무 작습니다. '
        2-3_Artist_Debugging_3_b: 프로그램의 실행이 너무 빨라서 결과를 보기 힘들다면, 슬라이더로 천천히 진행 시켜 보세요.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: '화가가 첫번째 라인을 그린 후 여러분이 화가를 이동시켰거나 뒤로 점프시키면 무슨일이
          일어나나요? '
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          'shape'는 몇번 반복되었나요?
          'shape'는 몇번 반복 _되어야만_ 하나요?
          여러분은 이프로그램의 어디에서 그것을 변경할 수 있을까요?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: 화가는 그리기를 시작하기 전에 60도 더 왼쪽으로 회전 되어야만 해요.
        2-3_Artist_Debugging_9_b: 여러분은 전체 회전을 하기 위에 또 다른 블록을 추가할 필요는 없습니다. 단지, 이미
          있는 '왼쪽 회전' 블럭에 60도를 추가하세요.
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: '이 사각형들은 각 면이 100픽셀입니다. 즉, 두번째 사각형을 그리기 전에 여러분은
          앞쪽으로 175픽셀을 이동해야 할 것입니다.  '
        2-3_Artist_Functions_1_b: '안경을 만들기 위해 선이 겹쳐서 그려지더라도 괜찮아요. '
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: '여러분은 함수 내에서 면의 수와 면의  길이 뿐 아니라 각 면들 사이에서 화가의 회전
          각도까지 변경해야만 할 것입니다. '
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: '무엇을 추가해야 할지 알기 위해, 먼저 코드를 실행하세요. '
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          여러분의 프로그램은 반드시:
          \-함수 사용
          \-100 + 75픽셀 앞으로 이동
          \-함수 사용
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: '이 디자인을 완성하기 위해, 화가는 각 사각형 사이에서 120도 회전해야만 합니다. '
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_b: 새로운 회전은 루프 내부의 코드의 **끝**에 있어야 합니다.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: '다이아몬드를 시작하기 전,  화가는 오른쪽 경로에 오르기 위해 왼쪽으로 60도 회전해야만
          합니다. '
        2-3_Artist Loops_New_12_b: '화가가 100픽셀 앞쪽으로 이동한 후,  화가는 뾰족한 모서리를 만들기 위해 오른쪽으로
          120도 회전해야 합니다. '
        2-3_Artist Loops_New_12_c: 완만한 모퉁이를 만들기 위해서 화가는 60도만 오른쪽으로 회전하면 됩니다.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: "다이아몬드의 각 모서리에서, 화가는 다음을 시작하기 위해 이미 오른쪽으로 향해 있습니다.
          \n이렇게 하면, 우리는 다음 코드를 시작하기 전에 '왼쪽으로 돌기'블럭을 추가할 필요가 없습니다. "
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: '화가가그리기를 시작하기 전에 오른쪽으로 45도 돌기를 해야 합니다. '
        2-3_Artist_Loops_New_9_b: 'V는 사각형의 딱 반입니다. 사각형의 반을 그리려면 코드를 어떻게 해야 할까요? '
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: 반복(loop)명령문 안에 회색블럭 모두를 넣어야 하는 것을 기억하세요.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: 각도 관련하여 도움이 필요합니까?**360/12 = 30**
        2-3_Artist_Nested_Loops_3_b: 모든 회색 코드를 입력하고 루프 안에서 블록을 돌리도록 하십시오.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: 각도 관련하여 도움이 필요합니까?**360/12 = 30**
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          다음번에 그릴 사각형 꼭대기로 이동하기 위해서 '앞으로 점프' 블록을 이용해보세요.
          만약 사각형이 20픽셀이고, 사각형끼리 20픽셀 씩 떨어져 있다면 얼마만큼이나 점프해야 할까요?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: 각각의 루프에서 얼마나 돌아야 합니까?  360/10은 얼마입니까?
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          정확한 각도를 찾는데 도움이 필요하십니까?
          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: 어떻게 블럭을 맞추는지 어려우셨죠? 보라색 꽃을 다룬 것처럼 빨간 꽃도 다뤄보세요.
        2-3_Bee_Conditionals_14_b: 붉은 꽃이 보라색이라면 코드를 줄이기 위해 여분의`반복` 블럭을 사용하는 방법을 알아낼
          수 있습니까?
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: '주의사항: 보라색 꽃의 꿀은 프로그램 실행 할때마다 0개나 1개로 달라 질 수 있습니다.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: 앞으로 나아갈 때, 꿀을 모을 때, 꿀을 만들 때 마다 반복문을 사용하면 코드가 가장
          짧습니다.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: '주의: 보라색 꽃의 꿀은 프로그램 실행 할때마다 0부터 1개로 달라 질 수 있습니다.'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: 잘못된 블럭을 찾아 고칠 때 '반복' 문을 사용하여 조금 더 간단한 패턴으로 만들 수 있겠나요?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: 잘못된 블럭을 찾아 고칠 때 '반복' 문을 사용하여 조금 더 간단한 패턴으로 만들 수 있겠나요?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: 벌이 잘 못 움직이는 곳이 곳이 있나요? 블럭을 옮기면 어떻나요?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: 반복문을 함수와 함께 사용 하지 않아도 됩니다. 이동한 후 함수를 사용하고, 또 이동하고나서
          함수를 사용해보세요.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: 반복문을 함수와 함께 사용 하지 않아도 됩니다. 이동한 후 함수를 사용하고, 또 이동하고나서
          함수를 사용해보세요.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
        2-3_Bee_Functions_8_b: |-
          녹색 함수 블럭 안에 코드를 구현해야 한다는 것을 기억하세요.
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: 반복문 안에는 4개의 블럭이 있어야 합니다.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: 반복문 안에는 6개의 블럭을 가지고 있어야 합니다.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: 하나씩 다른 두 개의 반복문이 필요합니다.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: 반복문 안에는 5개의 블럭이 있어야 합니다.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: 처음 동작은 이동이 아닌 회전 입니다.
        2-3_Bee_Loops_4A_b: 프로그램의 마지막 부분은 루프 외부의 프로그램 끝 부분에 코드를 작성하여 끝낼 수 있습니다.
        2-3_Bee_Loops_4A_c: 아직 반복문을 발견 할 수 없다면 먼저 코딩을 하고 나서 '반복'문으로 합 할 수 있는지 확인하세요.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: 아직 블럭을 '반복'에 바로 넣을 수 없다면 먼저 각 블럭으로 코딩 해보고 패턴을 보세요.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: 만약 블럭을 '반복'에 바로 넣을 수 없다면 먼저 각 블럭을 한개씩 가져온 뒤 패턴이 있는지 보세요.
        2-3_Bee_Loops_6_b: 코딩이 완료되었을 때는 '반복'문 안에 6개의 블럭이 있어야 합니다.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: 처음 동작은 이동이 아닌 회전 입니다.
        2-3_Bee_Loops_7_b: '처음부터 반복문을 볼 수 없다면 코딩을 먼저 길게 한 후 패턴을 보세요.  '
      2-3 Maze 1:
        2-3_Maze_1_a: "'앞으로 이동' 블럭을 사용하기 위해서는 블럭들 모음 메뉴에서 마우스를 클릭한채 이동하여 작업 영역의 '실행하면'
          위치에 연결합니다."
      2-3 Maze 16:
        2-3_Maze_16_a: 패턴을 보기 어렵다면 먼저 한개씩 코딩을 완료하고 반복문안에 넣기 전에 무엇이 반복 되고 있는지 찾아봅니다.
        2-3_Maze_16_b: |-
          많은 블럭을 '반복'문 안에 넣기 위해서는 마우스로 클릭하여 작업 영역으로 이동 한 뒤 모든 블럭을 시작 프로그램 안으로 옮깁니다.

          모든 블럭을 '실행하면' 블럭을 다시 연결 한 뒤 확인해 봅니다.
      2-3 Maze 6:
        2-3_Maze_6_a: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: 패턴을 보기 어렵다면 먼저 한개씩 코딩을 완료하고 반복문안에 넣기 전에 무엇이 반복 되고 있는지
          찾아봅니다.
        2-3_Maze_Loops_17_b: 시작할 시 기본 코드가 지워졌나요? '다시 시작하기' 버튼을 누르면 다시 볼 수 있습니다.
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: 패턴을 보기 어렵다면 먼저 한개씩 코딩을 완료하고 반복문안에 넣기 전에 무엇이 반복 되고 있는지
          찾아봅니다.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: 문제가 어려워 해결하지 못하고 있다면 반복문이 없이 먼저 코드를 작성해보고 패턴을 있는지 봅니다.
        2-3_Maze_Loops_19_b: 하나의 반복 루프를 다른 반복 루프에 넣으면 사용되는 블록 수를 줄일 수 있습니다.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: 반복문을 사용할 수 있는 곳을 찾기 위해 이 미로에서 계단 모양의 패턴을 찾습니다.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: 계간 모양 패턴을 찾기 어렵다면, 막힌 길을 손가락으로 가려보세요.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: 여러분의 반복문안에서 아티스트가 각 선을 그린 후 뒤 위와 뒤로 점프해야 합니다.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          화단이 주변 600 픽셀이고 측면 2 개가 길이가 200 픽셀 인 경우 다음은 짧은면이 합쳐지는 길이를 계산하는 방법입니다.

          \*\* 600 - 200 - 200 = 200 \*\*

          즉, 짧은 쪽이 최대 200 픽셀을 더합니다.
        4-5_Artist_3_b: "'반복'문을 바로 찾을 수 없다면 모든 솔루션을 코딩으로 나열해보고 패턴을 찾아보세요."
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          360도의 원이 있습니다.

          원이 완성되기 전에 몇번의 반복 코드가 필요 할까요(한번당 1도씩 돌릴 수 있음)!
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          시행 착오는 훌륭한 방법이지만 90도 각도를 3 등분하여 문제를 해결할 수도 있습니다.

          **90 / 3 = **\_****
      4-5 Artist 7:
        4-5_Artist_7_a: '어느 각도가 가장 작은가? 아티스트는 어느 각도에서 서 있나? '
      4-5 Artist 8:
        4-5_Artist_8_a: "긴 측면은 각각 240 픽셀입니다. 즉, 2 개의 짧은면이 합친 값은 아래와 같습니다.\n\n\\*\\*
          800 - 240 - 240 = 320 \\*\\*\n\n\\*\\* 320 / 2 \\*\\*는 무엇입니까? "
        4-5_Artist_8_b: |-
          이 이미지는 두 가지 방법으로 수행 할 수 있습니다!

          -   \*\* 120 \*\* long \*\* \*\* 160 \*\* 높이의 겹쳐진 측면이있는 두 개의 직사각형을 그립니다.

          -   \*\* 240 \*\* long \*\* \*\* 160 \*\* 높이인 직사각형 하나를 그린 다음 중간에 선을 추가하십시오.
      4-5 Artist 9:
        4-5_Artist_9_a: 삼각형이 등변 면인 경우 모든면과 모든 각도가 동일합니다.
        4-5_Artist_9_b: 같은 크기의 3 개의 삼각형을 그릴 필요가 있습니다. 각 도형을 그린 후에 새로운 위치로 점프 하는 것을
          잊지 마십시오.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: 이 퍼즐을 완성하기 위해 바깥 삼각형만 그려야 합니다.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: 원 안에 360 도가 있고 각 반복문이 3도씩 회전하면 전체 원의 절반을 그리는 몇번의
          반복이 필요 합니까?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: 정사각형은 20 픽셀이기 때문에 다음 정사각형을 그리기 전에 20 픽셀을 점프 해야 합니다.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: 새 도구 모음을 시도 할 때마다 툴바에서 전체 코드 블록을 꺼내십시오.
        4-5_Artist_Patterns_3_b: 코드가 너무 복잡해지면 언제든지 "다시 시작하기"을 클릭하고 다시 시도하십시오!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: |-
          아티스트가 각 다이아몬드를 다듬었을 때, 다음 다이아몬드를 시작하기 위해 필요한 방향과 반대 방향을 향하고 있습니다.

          자신을 똑바로 세우기 위해 몇도 각도로 돌릴 필요가 있습니까?
      4-5 Bee Conditionals 4:
        remember_quantum: |-
          **기억하세요** 이 퍼즐은 실행될 때마다 바뀝니다.

          문제를 해결하기 위해 조건 블록(`만약` 또는 `만약/아니면`)을 사용해보세요.
      4-5 Bee Conditionals 5:
        remember_quantum: |-
          **기억하세요** 이 퍼즐은 실행될 때마다 바뀝니다.

          문제를 해결하기 위해 조건 블록(`만약` 또는 `만약/아니면`)을 사용해보세요.
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: 이 퍼즐은 작업영역 안에 있는 블록들로만 해결할 수 있습니다. 블록이 어떤 순서로 배치되어야
          할까요?
        4-5 Bee Conditionals 6_b: 꽃에 꿀이 **0**개보다 많은지에 대해 최소한 **3**번 이상 확인하고 있는지 점검해보세요.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: 무엇이 틀렸는지 잘 모르겠을 때에는 실행해보면서 어디가 잘못된 것인지 확인해보세요.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: 꿀벌이 앞으로 가야 할 것 같은 긴 직사각형처럼이 퍼즐을 구성해보고 왼쪽으로 여러
          번 좌회전하여 길을 완성하세요.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          퍼즐을 즉시 풀기 위해 반복문을 사용하는 방법을 찾을 수 없다면 먼저 모든 코드를 풀어서 작성해보고 패턴을 찾아보세요.

          코드의 길이를 줄이기 위해\`반복 '를 써야하는 이유는 뭘까요?
      4-5 Maze 4:
        4-5_Maze_4_a: 반복을 넣을 곳을 찾는 게 어렵다면 전체를 다 코딩하고 반복되는 패턴을 찾으세요.
      4-5 Maze 5:
        4-5_Maze_5_a: 두 단계 이상으로`앞으로 이동 '할 필요가있을 때마다`반복\` 문을 사용해보십시오.
        4-5_Maze_5_b: 퍼즐에서 '반복'문 하나 이상 사용 할 수 있습니다.
      4-5 Maze 6:
        4-5_Maze_6_a: |-
          손가락으로 경로를 따라 가보세요.
          그것이 가장 짧은 경로 입니까?
      4-5 Maze 7:
        4-5_Maze_7_a: |-
          \*\* 가능한 한 작게 코드를 작성하고 싶나요? \*\*

          블록에서 패턴을 찾으세요. 반복되는 것을 보십니까? 그곳에 반복문을 넣으세요!
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          내부 반복문 이후에 턴을 하는 것을 잊지 마십시오.

          360 도가 되도록 6 개의 삼각형을 반복 할 것입니다.

          **360 / 6 = ?**
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          이 디자인은 360도가 되도록 10번 반복됩니다.

          **360 / 10 = ?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          이 모양을 360도 되도록 6 번 반복 할 것입니다.

          \*\* 360 / 6 =? \*\*
      4-5 While Loops 8:
        4-5_While_Loops_8_a: 각 아이템은 각자의 '반복(~인 동안)'문이 필요합니다.
      Course 4 Artist 11:
        Course_4_Artist_11_a: '반 육각형은 \*\* 길이가 30 \*\*이며 \*\*는 \*\* 60도 오른쪽으로 회전합니다
          \*\*.  '
        Course_4_Artist_11_b: '2/3 삼각형은 \*\* 길이가 80 \*\*이며 \*\* 120도 \*\*만큼 우회전 합니다. '
      Course 4 Artist 12:
        Course_4_Artist_12_a: '각각의 반복되는 모양은 \*\* 육각형의 반\*\*, \*\* 삼각형의 2/3 \*\* 조합입니다. '
        Course_4_Artist_12_b: '유닛의 모양은 마지막 퍼즐에서와 거의 동일합니다. 단, 반 육각형은 조금 큽니다. '
        Course_4_Artist_12_c: "1.  처음 세 줄은 60 픽셀이고 60도 회전해야합니다.\n2.  다음 두 줄은 80 픽셀이며
          120도 회전해야합니다. "
        Course_4_Artist_12_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6:
        Course_4_Artist_6_a: 360도 회전 내에서 3 개의 삼각형이 있습니다... 3번 동작에서 360도가 되려면 몇 번이
          반복됩니까?
      Course 4 Artist 8a:
        Course_4_Artist_8a: |-
          얼만큼 회전해야 하는지 알아내는 데 도움이 필요합니까?

          360도 회전 내에서 3 개의 삼각형이 있습니다.

          3번 동작하여 360도가 되려면 몇 도를 설정해야 할까요?
      Course 4 Artist 9:
        Course_4_Artist_9_a: |-
          얼마나 돌아야하는지 알고 싶습니까?

          360을 10으로 나눈 값은 무엇입니까?
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: 그의 코드는 두 개의 '카운트'를 사용합니다. 하나는 1에서 8까지
          카운트하고, 다른 하나는 8에서 1로 카운트 다운 카운트 합니다.
        Course_4_Artist_Binary_Free_Play_2b_b: 각각의 for 루프에는 3 개의 반복이 있습니다. 첫 번째는 1의
          왼쪽 집합을 그리고 두 번째는 가운데의 0을 그리고 세 번째는 오른쪽의 1을 그립니다.
        Course_4_Artist_Binary_Free_Play_2b_c: 각각의 반복에서 1을위한`카운터'와 0을 위한`16- (2 x
          카운터)\`가 필요합니다.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **예제 답안:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 11:
        Course_4_Artist_For_Loops_11_a: "회전 각은 각 모양과 함께 바뀔 것입니다!\n\n수학 블록을 사용하여 각도를
          오른쪽으로 가져야 하는 360을 면의 개수로 나눈 값을 입력하십시오. "
      Course 4 Artist For Loops 11a:
        Course_4_Artist_For_Loops_11a_a: '모양이 있는 변의 수를 360으로 나눈 값은 회전해야하는 각도의 수입니다. '
        Course_4_Artist_For_Loops_11a_b: '매회마다 현재의면 수의 10 배만큼 앞으로 이동 해야 합니다. '
      Course 4 Artist For Loops 3:
        Course_4_Artist_For_Loops_3_a: "`카운트 반복`문을 이용해 이동하려고 하면, 'counter\\`를 거리만큼
          사용하고 있는지 확인하십시오."
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: |-
          \*\* 가장 작은 번호는 무엇입니까?
          가장 큰 숫자는 무엇입니까?
          매회 얼마나 큽니까? \*\*

          그것들은`카운트 반복` 문을 채우기 위해 당신이 물어야 할 질문들입니다.
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: 가장 큰 모양에는 19면이 있습니다. 가장 작은 것이 단지 2
          개뿐입니다.
        Course_4_Artist_For_Loops_Challenge_b: "`카운트 반복`문은 매회 두 번 카운트합니다."
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: 이 코드의 기초는 이전의 도전 퍼즐에 대한 해결책과 같습니다. 몇
          가지 변경 사항이 있습니다.
        Course_4_Artist_For_Loops_inspire_b: 1부터 3까지의 '카운트 반복'문을 사용해보세요.
        Course_4_Artist_For_Loops_inspire_c: "'카운트 반복\\`문 안에는 같은 반복 루프가 두 번 반복 되지만
          두 번째 반복은 반대 방향으로 바뀝니다."
        Course_4_Artist_For_Loops_inspire_d: "**예제 답안:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: 마지막 퍼즐의 코드로 시작하여 반복 루프 내부에 3 도의 추가
          '회전 오른쪽'을 추가하십시오.
        Course_4_Artist_Functions_Inspiration_b: "'반복 루프' 밖에서 90도 이상 회전하지만 '카운트 반복'
          내부는 계속 시도하십시오."
        Course_4_Artist_Functions_Inspiration_c: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: 함수를 사용하는 방법을 이해하는 부분은 필요한 것과 그렇지 않은
          것을 알아내는 것입니다.
        Course_4_Artist_Functions_challenge_b: "`카운트 반복'를 사용하고, 그 중첩 된`반복\\` 루프 안에서
          카운터 변수를 사용하십시오."
        Course_4_Artist_Functions_challenge_c: 반복 할 때마다 정사각형을 그려서 앞으로 뛰어 오르게 해야 합니다.
        Course_4_Artist_Functions_challenge_d: "\\`반복'의 바깥 쪽에서 90도 왼쪽으로 돌릴 필요가 있지만
          여전히 '카운트 반복'문 안에 있습니다."
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: 하나의 정사각형을 완성한 후에는 앞으로 돌리거나 다른 것을 돌리기 전에 길이의 절반
          앞으로 뛰어 내려보십시오.
        Course_4_Artist_Inspire_b: 각 정사각형과 점프는 바람개비와 같은 모양을 만들기 위해 4 번 반복됩니다.(중간 왼쪽
          턴을 사용).
        Course_4_Artist_Inspire_c: 또한 각 바람개비는 \*\* 360 / sides \*\*의 오른쪽 회전으로 4 번
          반복됩니다.
        Course_4_Artist_Inspire_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: 두 개의 반복문(한개의 반복문 안에 다른 한개) 를 '변' 갯수 만큼 반복해야합니다.
        Course_4_Artist_Vars_13_b: |-
          내부 반복 루프는 팔각형을 그립니다 (왼쪽으로 돌림).

          그 다음에는 앞쪽으로 이동하고 바깥 쪽 루프에서만 오른쪽으로 회전해야합니다.
        Course_4_Artist_Vars_13_c: 변의 수가 변할 때 동일한 크기를 유지하도록 모양을 조정하려면 수학 블록을 사용하여
          픽셀의 길이를 변의 수로 나눕니다.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: 정다각형을 그리려면 매번 \*\* 360 / sides \*\*를 돌립니다.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: 시작 길이를 측면 수로 나눈다면 측면 수가 높아질수록 각 측면의 길이가 짧아집니다.
      Course 4 Bee Params 7:
        notice_pattern: '꽃꿀의 갯수가 어떻게 변화하는지에 대한 패턴을 보았습니까? '
        count_with_for: 꽃꿀 갯수가 단계적으로 올라갑니다. 갯수를 세는 동안 같은 일을 여러 번하기 위해 어떤 종류의 블록을 사용할
          수 있습니까?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: 매번 꿀의 갯수와 꽃꿀의 갯수를 물어 보는 것도 괜찮습니다. 아무것도 없다면 숫자는 0이
          될 수 있습니다.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: 점프 기능에서 "편집"을 클릭하고 '높이'매개 변수를 사용하도록 업데이트해야합니다.
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: "`강아지_속도`의 번호를`고양이_속도`보다 큰 값으로 설정하십시오."
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: "`for` 반복문에 매회 짝수를 건너 뛰면 뭘 추가 해야 할까요?"
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: 깃발은 캐릭터들에서 약 330 픽셀 떨어져 있습니다.
        Course_4_Playlab_For_Loops_4b_b: 각 캐릭터가 시작 및 정지 숫자가 다른 동일한 이동 수에서 330 픽셀에
          도달하게하려면 어떻게해야합니까?
        Course_4_Playlab_For_Loops_4b_c: 기억하세요, 깃발에 도달하기 위해 각 캐릭터에게 동일한 수의 단계가 걸리는
          한 캐릭터가 마지막 단계에서 플래그를 얼마나 많이 통과했는지는 중요하지 않습니다.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: 캐릭터는들은 중심에서 약 175 픽셀 떨어져 있습니다.
        Course_4_Playlab_For_Loops_5b_b: 카운터가 계속 커지면 캐릭터의 다음 단계가 마지막 단계보다 길어질 것임을
          기억하십시오.
      Course 4 SCF 1:
        Course_4_SCF_1_a: 각 육각형은 40 픽셀의 변의 길이를 가지고 있습니다.
        Course_4_SCF_1_b: 각 수평선의 각 육각형 사이에는 120 픽셀 간격이 있습니다.
        Course_4_SCF_1_c: |-
          두 번째 행의 육각형을 그리기 전에 오른쪽으로 60도 회전하고 앞으로 40 픽셀 이동해야합니다.

          올바른 세로 위치에 있으면 작가를 다시 돌리고 뒤로 320 픽셀 이동해야 합니다.
        Course_4_SCF_1_d: "세 번째 행의 육각형을 그리기 전에 오른쪽으로 60도 회전하고 앞으로 40 픽셀 이동해야합니다.\n\n올바른
          세로 위치에 있으면 아티스트를 다시 440 픽셀 뒤로 이동 해야 합니다 ( 'shift down / forward'기능보다 120
          픽셀 더 멀리 떨어져 있음). "
        Course_4_SCF_1_e: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: 16 단계에서의 했던 기능을 기억하십시오.
        Course_4_SCF_1a_c: "\\`카운트 반복'문을 사용해보십시오. 단계별이 아닌 함수 매개 변수입니다."
        Course_4_SCF_1a_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: |-
          모든 꿀 점수 모양이 비슷합니다.

          함수를 위한 좋은 위치!
        Course_4_SCF_1b_c: 꿀벌이 이동하는 거리에 대해 '카운트 반복'문를 사용하는 것을 고려해야 합니다
        Course_4_SCF_1b_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCF 2:
        Course_4_SCF_2_a: 각 팔각형에는 40 픽셀 변이 있습니다.
        Course_4_SCF_2_b: 각 수평선의 각 팔각형 사이에는 136 픽셀의 간격 있습니다.
        Course_4_SCF_2_c: "두 번째 행의 육각형을 그리기 전에 오른쪽으로 45도 회전하고 앞으로 96 픽셀 이동해야합니다.\n\n올바른
          세로 위치에 있으면 작가를 다시 돌리고 뒤로 408 픽셀 이동해야 합니다. "
        Course_4_SCF_2_d: 짝수 행에 팔각형이 적기 때문에 더 이상 뒤로 이동하지 않아도 홀수 행의 시작 위치에 도달 할 수 있습니다.
        Course_4_SCF_2_e: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        Course_4_SCF_3_b: '이것은 ''counter''픽셀 값이 변의 길이를 가지는 여러 팔각형들 입니다. '
        Course_4_SCF_3_c: '각 팔각형은 200에서 2로 2만큼 이동하는 ''카운터 반복''문을 내부에서 호출됩니다. '
        Course_4_SCF_3_d: '각 반복 끝에 22.5도 회전하는 것을 잊지 마십시오. '
        Course_4_SCF_3_e: 각 팔각형의 색과 펜의 폭은`counter` 변수에 의해 제어됩니다
        Course_4_SCF_3_f: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_1_b: '두 개의 ''카운트 반복''문을 사용하여 시도해보십시오: 하나는 등반하고 꽃꿀을 잡고 다른 하나는
          아래로 내려와 꿀을 만들기위한 것입니다.'
        Course_4_SCFL_1_c: |-
          하나의 '카운트 반복'문은 여러개의 반복문이 필요하며 증가하는 계단 패턴을 만들기 위해 반복되는\`counter '시간 안에 여러 개의 정규 루프를 필요로 합니다.

          다른`카운트 반복`문은 'counter'양의 꿀을 만들기 위해 하나의 일반 반복문만 필요합니다.
        Course_4_SCFL_1_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_a: 가장 작은 수의 블록을 사용하려면 전체적으로 멀리 이동해야 할 수도 있습니다.
        Course_4_SCFL_1a_b: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_1a_c: "\\`카운트 반복'문은 동일한 패턴을 실행하는데 도움이되며 카운트가 변하는 단계 수는 달라야 합니다.
          필요한 단계 수는 7에서 5로 1 씩 감소합니다."
        Course_4_SCFL_1a_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: "'카운트 반복'문을 사용해보세요."
        Course_4_SCFL_1b_b: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)
        Course_4_SCFL_1b_c: |-
          **예제 답안:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_2_b: 이`카운트 반복`문을 반복 할 때마다 사물들과 상호 작용을 멈추는 세 점이 있음을 주목하십시오.
        Course_4_SCFL_2_c: "`카운트 반복`문이 반복 될 때마다 각 객체의 수는 어떤식으로든 counter 변수와 관련이 있습니다."
        Course_4_SCFL_2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: "'펜 폭'은 1입니다. 첫 번째 정사각형은 50 픽셀 측면을 가지며 각 정사각형은 마지막 픽셀보다
          50 픽셀 넓습니다."
        Course_4_SCFL_3_b: 브러쉬의 불투명도는 항상`counter` / 2입니다.
        Course_4_SCFL_3_c: 각 사각형을 만든 후에는 뒤로 점프하고, 돌고, 다시 점프하고, 다시 돌아 오는 것을 잊지 마십시오!
        Course_4_SCFL_3_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: 색상 변경은 '빨강, 초록, 파랑으로 색 설정'블록을 사용하여 할 수 있습니다. Red는 항상`counter`의
          값이고, 녹색은 항상`255-counter`이고, 파란색은 정확히 255로 일정합니다.
        Course_4_SCFL_4_b: 각 도형은 5픽셀로 시작하여 최대 200픽셀까지 5픽셀씩 증가하는 '카운터'픽셀 인 측면이있는 정사각형입니다.
        Course_4_SCFL_4_c: 작가는 각 정사각형 사이에서 15도 회전합니다.
        Course_4_SCFL_4_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: 색상 변경은 '빨강, 초록, 파랑으로 색 설정'블록을 사용할 수 있습니다. 빨간색은 '255'로 일정하게
          설정되고 녹색은 항상 'counter'의 값으로, 파란색은 항상 '255 - counter' 설정됩니다.
        Course_4_SCFL_6_b: 이 코드는 생각보다 훨씬 간단합니다. \`카운터 반복'문 안에 색상을 설정하고, 앞으로 나아간 다음,
          돌아서십시오.
        Course_4_SCFL_6_c: "\\`카운터 반복'문은 5에서 250로 2씩 증가됩니다. "
        Course_4_SCFL_6_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: 색상 변경은 '빨강, 초록, 파랑으로 색 설정'블록을 사용하여 할 수 있습니다. Red는 항상`counter`의
          값이고, 녹색은 항상`255-counter`이고, 파란색은 정확히 255입니다.
        Course_4_SCFL_7_b: '이 도면은 두 개의 비슷한 ''카운터 반복''문을 사용하여 작성 되었습니다. 하나는 5에서 200으로
          2 씩 증가하고, 다른 하나는 200에서 5로 2 씩 감소합니다. '
        Course_4_SCFL_7_c: 각`카운터 반복`문 안에서`360 / counter`를하기 전에 5 픽셀 앞으로 이동합니다. 실행하기
          전에 브러쉬의 너비를 `counter`로 설정 하는 것을 잊지 마라!
        Course_4_SCFL_7_d: 두 개의 '카운트 반복'문 사이에서 왼쪽으로 225도 회전 해야 합니다.
        Course_4_SCFL_7_e: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1:
        Course_4_SCV_1_a: '변수는 반복문을 통해 매번 추가 할 수 있기 때문에 유용합니다. '
        Course_4_SCV_1_b: 이 퍼즐은 다각형을 생성하는 하나의 반복문을 가지며, 한 번에 다각형을 '변' 갯수만큼 반복 한 다음
          다른 반복문은 '변'에 5를 더한 후에 모든 것을 다시 수행합니다.
        Course_4_SCV_1_c: "'sides'변수와 'length'변수를 사용하면 번호를 설정하기 위해 매번 같은 코드만드는 대신
          동일한 코드를 여러번 반복 할 수 있기 때문에 코드가 보다 명확 해집니다."
        Course_4_SCV_1_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2:
        Course_4_SCV_2_b: '이 디자인은 중첩 루프 (3 개의 깊이) 를 사용합니다. 모든 반복문은 ''변''의 갯수를 실행합니다. '
        Course_4_SCV_2_c: 작가는 각 십각형을 만들 때 왼쪽으로 돌지만 다른 반복문들은 오른쪽으로 돌게 됩니다.
        Course_4_SCV_2_d: 꽃잎 10 장 모두를 같은 장소에 그려 넣지 않으려면, 가장 바깥 쪽 반복문의 일부로 360도 / 'sides'
          도를 돌리기 전에 'length'/ 'sides'으로 앞으로 뛰어야 합니다.
        Course_4_SCV_2_e: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3:
        Course_4_SCV_3_a: '강아지가 부딪힐때 수학 블록을 사용하여 점수를 ''points'' 변수에 더하거나 뺍니다. '
        Course_4_SCV_3_b: 화살표 키 중 하나를 누를 때마다 강아지를 얼마나 멀리 움직 였는지 매개 변수를 변경할 수 있습니다.
        Course_4_SCV_3_c: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4:
        Course_4_SCV_4_a: 3 가지 변수가 도움이 될 것입니다. 하나는 꿀꽃 단위, 하나는 꿀 단위, 하나는 꿀벌이 각 반복문에서
          얼마나 멀리 움직여야 하는지 입니다.
        Course_4_SCV_4_b: '메인 반복문에 3 개의 반복문을 사용하면 매우 도움이 될 것입니다. 하나는 앞으로 나아가고, 하나는
          꿀꽃을 수집하고 다른 하나는 꿀을 만들기위한 것입니다. '
        Course_4_SCV_4_c: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCV_4_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5:
        Course_4_SCV_5_a: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_b: 반복문을 돌 때마다 꽃에는 꽃꿀이 2 개 적고 꿀벌은 벌꿀을 한 번 더 만들어야 합니다.
        Course_4_SCV_5_c: 바깥 반복문의 시작 부분에서 벌이 다음 꽃에 꿀이 있을 때만큼 움직입니다.
        Course_4_SCV_5_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6:
        Course_4_SCV_6_b: '다음과 같은 8가지 변수를 만드는 것이 좋습니다: 빨간색 1, 녹색 1, 파란색 1, 빨간색 2,
          녹색 2, 파란색 2, 길이 및면.'
        Course_4_SCV_6_c: 모양의 5면 각각은 한쪽 방향으로 움직일때 청록 (rgb = 0,175,200) 색이고 다른 한쪽 방향으로
          움직일때는 자주색 (rgb = 100, 50, 150) 인 '길이'/ '면'의 조각으로 나뉩니다.
        Course_4_SCV_6_d: '한쪽으로 꺽기 위해 돌려면 ''360`/`sides ''로 좌회전 하십시오. 다른 한쪽으로 돌려면
          ''360`/`sides ''만큼 우회전 하십시오. '
        Course_4_SCV_6_e: '프로그램의 나머지 부분은 모양에서 전체 360도 회전을 만들기위한 표준입니다. 단, 모양을 절반 겹치기
          때문에 ''180''/ ''sides''로 오른쪽으로 돌아야 합니다. 즉, 이런 과정이 두번 (`sides` \*`2`만큼 반복)
          이 필요 합니다. '
        Course_4_SCV_6_f: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      CourseD_Dance_2020_01:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서가 화면에 나타나도록 하세요.

          _이 단계는 4번째 마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   다른 노래를 골라 재생하세요.
          -   댄서를 다른 위치로 옮기세요.
          -   댄서를 한 명 이상 만드세요.
      CourseD_Dance_2020_02:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   댄서가 동작을 수행해야 합니다.
          -   화살표 키를 눌러야 합니다.

          _이 레벨은 4마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml> 블록을 한 개 이상 사용하세요.
      CourseD_Dance_2020_03:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   두 댄서 모두 동작을 수행해야 합니다.
          -   화살표 키를 눌러야 합니다.

          _이 레벨은 4마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   댄서가 왼쪽, 오른쪽 화살표 키에 반응하게 하세요.
      CourseD_Dance_2020_04:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서는 4번째 마디 후에 새로운 동작으로 바꿔야 합니다.

          _이 단계는 8번째 마디 후에 끝납니다._
      CourseD_Dance_2020_05:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   6번째 마디 후 댄서는 4번째 마디 후와는 다른 춤을 추고 있어야 합니다.

          _이 단계는 12번째 마디 후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   댄서들이 동작을 전환할 때마다 배경을 바꿉니다.
      CourseD_Dance_2020_06:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   리드 댄서 한 명과 백업 댄서 여럿을 생성해세요.

          _이 레벨은 7마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   다수의 백업 댄서 그룹을 생성하세요.
      CourseD_Dance_2020_07:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   음악이 시작되고 최소 한 댄서의 크기를 변경하세요.

          _이 레벨은 6마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   다른 속성(너비, 높이, 회전 등)을 변경하여 실험해보세요.
      CourseD_Dance_2020_08:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   최소 한 댄서의 색조를 변경하세요.

          _이 레벨은 6마디 이후에 끝납니다._
        tint_hint: 고른 색과 똑같이 댄서의 색이 바뀌지 않는 거 눈치채셨나요? **색조**는 사용자가 고른 색과 댄서의 색을 혼합하기
          때문입니다.
      CourseD_Dance_2020_09:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   “마침” 단추를 누르면 됩니다!
        repeat_every_ideas: |-
          **아이디어가 필요하세요?**

          -   댄서가 커지도록 계속 크기를 변경하세요.
          -   댄서가 돌 수 있도록 계속 회전을 변경하세요.
          -   댄서가 화면을 가로질러 움직이도록 수평 또는 수직 위치를 계속 변경하세요.

          _반대되는 효과가 나타나도록 음수를 사용할 수도 있습니다!_
        next_previous: |-
          **선택 과제**

          -   이 새 이벤트 블록을 사용하면 `(Random)`, `(Next)`, `(Previous)`으로 동작을 설정하는 식으로 댄스 동작 목록을 반복하게 할 수도 있습니다.
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP" config="sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DOG&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;ROBOT&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      CourseD_Dance_2020_bonus1:
        alternate: 교대 블록은 “댄서” 카테고리에 있습니다.
      CourseD_Dance_Party_01:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서가 화면에 나타나도록 하세요.

          _이 단계는 4번째 마디 이후에 끝납니다._
        challenges: |-
          \*\* 선택 과제\*\*

          -   다른 노래를 선택하여 재생하세요.
          -   사슴처럼 보이는 다른 모습을 선택하세요!
          -   댄서 이름을 바꾸세요.
      CourseD_Dance_Party_02:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서는 4번째 마디 후에 새로운 동작으로 바꿔야 합니다.

          _이 단계는 8번째 마디 후에 끝납니다._
      CourseD_Dance_Party_03:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   6번째 마디 후 댄서는 4번째 마디 후와는 다른 춤을 추고 있어야 합니다.

          _이 단계는 12번째 마디 후에 끝납니다._
      CourseD_Dance_Party_04:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   노래의 7번째 마디 중간에 배경 효과를 변경해야 합니다.

          _이 단계는 10번째 마디 후 끝납니다._
        challenges: |-
          **선택 과제**

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml> 이벤트 아래 있는 새로운 블록에 연결하여 노래 중간 여러 시점에 배경 효과를 변경하세요.
      CourseD_Dance_Party_06:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   적어도 두 명 이상의 댄서가 있어야 합니다.

          \*이 단계는 6번째 마디 이후에 끝납니다.
        challenges: |-
          **선택 과제**

          \*세 번째 댄서(또는 원하는 만큼!)를 추가하세요
          \*모든 댄서가 노래의 여러 시점에서 서로 다른 동작을 수행하도록 하세요.
      CourseD_Dance_Party_08:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   두 명의 댄서는 크기가 100보다 커야 합니다.

          \*이 단계는 6번째 마디 이후에 끝납니다.
        challenges: |-
          **선택 과제**

          -   다른 속성(너비, 높이, 회전 등)을 변경하여 실험해보세요.
      CourseD_Dance_Party_09:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서 한 명 이상의 색조를 변경하세요.

          _이 단계는 8번째 마디 이후에 끝납니다._
      CourseD_Dance_Party_10:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서 두 명 이상의 속성을 변경해야 합니다.

          _이 단계는 8번째 마디 이후에 끝납니다_
      CourseD_Dance_Party_11:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   창의력을 발휘하세요!

          _이 단계는 8번째 마디 이후에 끝납니다._
      CourseD_Dance_Party_11_5:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   창의력을 발휘하세요!

          _이 단계는 8번째 마디 이후에 끝납니다._
      CourseD_Dance_Party_11b:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   `왼쪽 화살표 누를 때` 블록을 사용하여 블록을 누를 때 로봇이 춤을 추도록 하세요.

          _이 단계는 8번째 마디 이후에 끝납니다._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: "**바다 랜턴**![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)을
          볼까요? 어떻게 조건부를 사용해서 바다 유적을 통과할 수 있나요?"
      CourseE_HOC 2018 Level_10_2020:
        voyage_aquatic_10a: "**바다 랜턴**![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)을
          볼까요? 어떻게 조건부를 사용해서 바다 유적을 통과할 수 있나요?"
      CourseE_HOC 2018 Level_7a:
        aquatic7: If 블록을 사용하면 올바른 턴을 만들 수 있습니다.
      CourseE_HOC 2018 Level_7a_2020:
        aquatic7: If 블록을 사용하면 올바른 턴을 만들 수 있습니다.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: 정말 아름다운 산호초네요! 파란색 산호가 **올바른** 길이며, 빨간색 산호가 **왼쪽**이 아님을
          확인하세요!
      CourseE_HOC 2018 Level_9b_2020:
        voyage_aquatic_9a: 정말 아름다운 산호초네요! 파란색 산호가 **올바른** 길이며, 빨간색 산호가 **왼쪽**이 아님을
          확인하세요!
      Dance_2019_01:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서가 화면에 나타나도록 하세요.

          _이 단계는 4번째 마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   다른 노래를 골라 재생하세요.
          -   댄서를 다른 위치로 옮기세요.
          -   댄서를 한 명 이상 만드세요.
      Dance_2019_02:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   댄서가 동작을 수행해야 합니다.
          -   화살표 키를 눌러야 합니다.

          _이 레벨은 4마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml> 블록을 한 개 이상 사용하세요.
      Dance_2019_03:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   두 댄서 모두 동작을 수행해야 합니다.
          -   화살표 키를 눌러야 합니다.

          _이 레벨은 4마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   댄서가 왼쪽, 오른쪽 화살표 키에 반응하게 하세요.
      Dance_2019_04:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서는 4번째 마디 후에 새로운 동작으로 바꿔야 합니다.

          _이 단계는 8번째 마디 후에 끝납니다._
      Dance_2019_05:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   6번째 마디 후 댄서는 4번째 마디 후와는 다른 춤을 추고 있어야 합니다.

          _이 단계는 12번째 마디 후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   댄서들이 동작을 전환할 때마다 배경을 바꿉니다.
      Dance_2019_06:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   리드 댄서 한 명과 백업 댄서 여럿을 생성해세요.

          _이 레벨은 7마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   다수의 백업 댄서 그룹을 생성하세요.
      Dance_2019_07:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   음악이 시작되고 최소 한 댄서의 크기를 변경하세요.

          _이 레벨은 6마디 이후에 끝납니다._
        challenges: |-
          **선택 과제**

          -   다른 속성(너비, 높이, 회전 등)을 변경하여 실험해보세요.
      Dance_2019_08:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   최소 한 댄서의 색조를 변경하세요.

          _이 레벨은 6마디 이후에 끝납니다._
        tint_hint: 고른 색과 똑같이 댄서의 색이 바뀌지 않는 거 눈치채셨나요? **색조**는 사용자가 고른 색과 댄서의 색을 혼합하기
          때문입니다.
      Dance_2019_09:
        validation: |-
          **이 레벨은 어떻게 통과하죠?**

          -   “마침” 단추를 누르면 됩니다!
        repeat_every_ideas: |-
          **아이디어가 필요하세요?**

          -   댄서가 커지도록 계속 크기를 변경하세요.
          -   댄서가 돌 수 있도록 계속 회전을 변경하세요.
          -   댄서가 화면을 가로질러 움직이도록 수평 또는 수직 위치를 계속 변경하세요.

          _반대되는 효과가 나타나도록 음수를 사용할 수도 있습니다!_
        next_previous: |-
          **선택 과제**

          -   이 새 이벤트 블록을 사용하면 `(Random)`, `(Next)`, `(Previous)`으로 동작을 설정하는 식으로 댄스 동작 목록을 반복하게 할 수도 있습니다.
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP" config="sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DOG&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;ROBOT&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서가 화면에 나타나도록 하세요.

          _이 단계는 4번째 마디 이후에 끝납니다._
        challenges: |-
          \*\* 선택 과제\*\*

          -   다른 노래를 선택하여 재생하세요.
          -   사슴처럼 보이는 다른 모습을 선택하세요!
          -   댄서 이름을 바꾸세요.
      Dance_Party_02:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서는 4번째 마디 후에 새로운 동작으로 바꿔야 합니다.

          _이 단계는 8번째 마디 후에 끝납니다._
      Dance_Party_03:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   6번째 마디 후 댄서는 4번째 마디 후와는 다른 춤을 추고 있어야 합니다.

          _이 단계는 12번째 마디 후에 끝납니다._
      Dance_Party_04:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   노래의 7번째 마디 중간에 배경 효과를 변경해야 합니다.

          _이 단계는 10번째 마디 후 끝납니다._
        challenges: "**선택 과제** \n\n<xml><block type=\"Dancelab_atTimestamp\"><title
          name=\"TIMESTAMP\">???</title><title name=\"UNIT\">\"measures\"</title></block></xml>
          이벤트 블록들 밑에 새로 추가한 블록을 연결해 노래의 각기 다른 지점에서 배경 효과 변화를 주세요."
      Dance_Party_05:
        validation: "**이 레벨은 어떻게 통과하죠?** \n\n레벨이 끝나기 전에 댄서가 최소 4가지 춤동작을 순환하게 해야 합니다.
          \n\n_이 레벨은 12마디 후에 끝납니다._"
      Dance_Party_06:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   적어도 두 명 이상의 댄서가 있어야 합니다.

          \*이 단계는 6번째 마디 이후에 끝납니다.
        challenges: |-
          **선택 과제**

          \*세 번째 댄서(또는 원하는 만큼!)를 추가하세요
          \*모든 댄서가 노래의 여러 시점에서 서로 다른 동작을 수행하도록 하세요.
      Dance_Party_08:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   두 명의 댄서는 크기가 100보다 커야 합니다.

          \*이 단계는 6번째 마디 이후에 끝납니다.
        challenges: |-
          **선택 과제**

          -   다른 속성(너비, 높이, 회전 등)을 변경하여 실험해보세요.
      Dance_Party_09:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서 한 명 이상의 색조를 변경하세요.

          _이 단계는 8번째 마디 이후에 끝납니다._
      Dance_Party_10:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   댄서 두 명 이상의 속성을 변경해야 합니다.

          _이 단계는 8번째 마디 이후에 끝납니다_
      Dance_Party_11:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   창의력을 발휘하세요!

          _이 단계는 8번째 마디 이후에 끝납니다._
      Dance_Party_11_5:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   창의력을 발휘하세요!

          _이 단계는 8번째 마디 이후에 끝납니다._
      Dance_Party_11b:
        validation: |-
          **이 단계를 어떻게 통과하나요?**

          -   `왼쪽 화살표 누를 때` 블록을 사용하여 블록을 누를 때 로봇이 춤을 추도록 하세요.

          _이 단계는 8번째 마디 이후에 끝납니다._
      Dance_Party_extras_alternate_2019:
        alternate: 교대 블록은 “댄서” 카테고리에 있습니다.
      Function intro Ryan:
        Function_intro_Ryan_b: 함수를 올바르게 호출할 경우 이동 경로입니다.
        Function_intro_Ryan_a: 프로그램 내에서 같은 함수를 여러 번 호출할 수 있습니다. 함수를 두 번 호출해 퍼즐을 해결해보세요.
      Function intro Ryan_2019:
        Function_intro_Ryan_b: 함수를 올바르게 호출할 경우 이동 경로입니다.
        Function_intro_Ryan_a: 프로그램 내에서 같은 함수를 여러 번 호출할 수 있습니다. 함수를 두 번 호출해 퍼즐을 해결해보세요.
      Function intro Ryan_2020:
        Function_intro_Ryan_b: 함수를 올바르게 호출할 경우 이동 경로입니다.
        Function_intro_Ryan_a: 프로그램 내에서 같은 함수를 여러 번 호출할 수 있습니다. 함수를 두 번 호출해 퍼즐을 해결해보세요.
      HOC 2018 Level_10:
        voyage_aquatic_10a: "**바다 랜턴**![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)을
          볼까요? 어떻게 조건부를 사용해서 바다 유적을 통과할 수 있나요?"
      HOC 2018 Level_7a:
        aquatic7: If 블록을 사용하면 올바른 턴을 만들 수 있습니다.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: 정말 아름다운 산호초네요! 파란색 산호가 **올바른** 길이며, 빨간색 산호가 **왼쪽**이 아님을
          확인하세요!
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: 툴 박스에 있는 '앞으로 이동하기' 블록을 작업 공간으로 끌어서 이동한 다음, '실행하면'
          블록 아래 공간에 맞추세요.
        MC_HOC_2017_01_RETRY_b: "'실행'을 클릭해 Agent 코드를 실행하는 것도 잊지 마세요."
        MC_HOC_2017_01_RETRY_c: Agent를 통해 모든 코드를 실행하면 방향키를 사용해 플레이어를 이동할 수 있습니다.
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: 툴 박스에 있는 '앞으로 이동하기' 블록을 작업 공간으로 끌어서 이동한 다음, '실행하면'
          블록 아래 공간에 맞추세요.
        MC_HOC_2017_01_RETRY_b: "'실행'을 클릭해 Agent 코드를 실행하는 것도 잊지 마세요."
        MC_HOC_2017_01_RETRY_c: Agent를 통해 모든 코드를 실행하면 방향키를 사용해 플레이어를 이동할 수 있습니다.
      MC_HOC_2017_01_RETRY_2020:
        MC_HOC_2017_01_RETRY_a: 툴 박스에 있는 '앞으로 이동하기' 블록을 작업 공간으로 끌어서 이동한 다음, '실행하면'
          블록 아래 공간에 맞추세요.
        MC_HOC_2017_01_RETRY_b: "'실행'을 클릭해 Agent 코드를 실행하는 것도 잊지 마세요."
        MC_HOC_2017_01_RETRY_c: Agent를 통해 모든 코드를 실행하면 방향키를 사용해 플레이어를 이동할 수 있습니다.
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Agent를 두 칸 앞에 있는 감압판 위로 움직이면 문이 열리고 플레이어가 들어갈 수 있습니다.
        MC_HOC_2017_02_Cole_b: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_02_Cole_c: Agent가 문을 열면 방향키를 사용해 플레이어를 지도로 움직이세요!
        MC_HOC_2017_02_Cole_d: Agent가 지도에 표시된 경로를 따르고 있는지 확인하십시오!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Agent를 두 칸 앞에 있는 감압판 위로 움직이면 문이 열리고 플레이어가 들어갈 수 있습니다.
        MC_HOC_2017_02_Cole_b: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_02_Cole_c: Agent가 문을 열면 방향키를 사용해 플레이어를 지도로 움직이세요!
        MC_HOC_2017_02_Cole_d: Agent가 지도에 표시된 경로를 따르고 있는지 확인하십시오!
      MC_HOC_2017_02_Cole_2020:
        MC_HOC_2017_02_Cole_a: Agent를 두 칸 앞에 있는 감압판 위로 움직이면 문이 열리고 플레이어가 들어갈 수 있습니다.
        MC_HOC_2017_02_Cole_b: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_02_Cole_c: Agent가 문을 열면 방향키를 사용해 플레이어를 지도로 움직이세요!
        MC_HOC_2017_02_Cole_d: Agent가 지도에 표시된 경로를 따르고 있는지 확인하십시오!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Agent가 감압판 위로 올라가면 방향키를 사용해 나침반 쪽으로 플레이어를 움직이세요!
        MC_HOC_2017_03_Cole_b: 코드가 너무 긴 것 같다고요?  '반복' 루프를 사용해 코드 길이를 줄이는 방법을 알아 보세요!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Agent가 감압판 위로 올라가면 방향키를 사용해 나침반 쪽으로 플레이어를 움직이세요!
        MC_HOC_2017_03_Cole_b: 코드가 너무 긴 것 같다고요?  '반복' 루프를 사용해 코드 길이를 줄이는 방법을 알아 보세요!
      MC_HOC_2017_03_Cole_2020:
        MC_HOC_2017_03_Cole_a: Agent가 감압판 위로 올라가면 방향키를 사용해 나침반 쪽으로 플레이어를 움직이세요!
        MC_HOC_2017_03_Cole_b: 코드가 너무 긴 것 같다고요?  '반복' 루프를 사용해 코드 길이를 줄이는 방법을 알아 보세요!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: "'오른쪽으로 회전' 블록을 사용해 Agent의 이동 방향을 바꾸세요."
        MC_HOC_2017_04POINT5_RYAN_a: Agent에서 첫 번째 감압판을 밟으면 알렉스나 스티브가 도끼 쪽으로 이동할 수
          있습니다.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: "'오른쪽으로 회전' 블록을 사용해 Agent의 이동 방향을 바꾸세요."
        MC_HOC_2017_04POINT5_RYAN_a: Agent에서 첫 번째 감압판을 밟으면 알렉스나 스티브가 도끼 쪽으로 이동할 수
          있습니다.
      MC_HOC_2017_04POINT5_RYAN_2020:
        MC_HOC_2017_04POINT5_RYAN_b: "'오른쪽으로 회전' 블록을 사용해 Agent의 이동 방향을 바꾸세요."
        MC_HOC_2017_04POINT5_RYAN_a: Agent에서 첫 번째 감압판을 밟으면 알렉스나 스티브가 도끼 쪽으로 이동할 수
          있습니다.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent가 '앞으로 7번 이동'하게 하려면 '반복' 루프를 어떻게 사용하면 될까요?
        MC_HOC_2017_04_Cole_c: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_04_Cole_b: Agent가 감압판 위로 올라가면 문을 열어 플레이어가 들어갈 수 있어요.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent가 '앞으로 7번 이동'하게 하려면 '반복' 루프를 어떻게 사용하면 될까요?
        MC_HOC_2017_04_Cole_c: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_04_Cole_b: Agent가 감압판 위로 올라가면 문을 열어 플레이어가 들어갈 수 있어요.
      MC_HOC_2017_04_Cole_2020:
        MC_HOC_2017_04_Cole_a: Agent가 '앞으로 7번 이동'하게 하려면 '반복' 루프를 어떻게 사용하면 될까요?
        MC_HOC_2017_04_Cole_c: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_04_Cole_b: Agent가 감압판 위로 올라가면 문을 열어 플레이어가 들어갈 수 있어요.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: 루프 안에는 코드를 한 가지 이상 넣을 수 있답니다.  '반복' 안에 판자 설치와 앞으로 이동하기를
          **모두** 넣어 퍼즐을 완성해보세요.
        MC_HOC_2017_05_Cole_b: Agent강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: 루프 안에는 코드를 한 가지 이상 넣을 수 있답니다.  '반복' 안에 판자 설치와 앞으로 이동하기를
          **모두** 넣어 퍼즐을 완성해보세요.
        MC_HOC_2017_05_Cole_b: Agent강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_05_Cole_2020:
        MC_HOC_2017_05_Cole_a: 루프 안에는 코드를 한 가지 이상 넣을 수 있답니다.  '반복' 안에 판자 설치와 앞으로 이동하기를
          **모두** 넣어 퍼즐을 완성해보세요.
        MC_HOC_2017_05_Cole_b: Agent강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: 루프를 사용하면 얼만큼 반복할 수 있을까요?  몇 번 반복하는 것이 _정답_일까요?
        MC_HOC_2017_06_Cole_b: 'Agent를 물 건너편에 다리를 세우도록 도와주세요! '
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: 루프를 사용하면 얼만큼 반복할 수 있을까요?  몇 번 반복하는 것이 _정답_일까요?
        MC_HOC_2017_06_Cole_b: 'Agent를 물 건너편에 다리를 세우도록 도와주세요! '
      MC_HOC_2017_06_Cole_2020:
        MC_HOC_2017_06_Cole_a: 루프를 사용하면 얼만큼 반복할 수 있을까요?  몇 번 반복하는 것이 _정답_일까요?
        MC_HOC_2017_06_Cole_b: 'Agent를 물 건너편에 다리를 세우도록 도와주세요! '
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Agent에게 필요한 것은 Minecart로 가는 바른 길입니다.
        MC_HOC_2017_07_Cole_a: 이 퍼즐을 해결하려면 '경로 확보하기' 함수로 무슨 일을 할 수 있는지 알아보고 필요한 만큼
          반복해야 합니다. 툴 박스에 '경로 확보하기'라고 표시된 작은 녹색 블록을 사용하세요.
        MC_HOC_2017_07_Cole_b: 함수 블록을 툴 박스에 있는 다른 블록과 조합하면서 퍼즐을 해결하는 방법을 찾아보세요.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Agent에게 필요한 것은 Minecart로 가는 바른 길입니다.
        MC_HOC_2017_07_Cole_a: 이 퍼즐을 해결하려면 '경로 확보하기' 함수로 무슨 일을 할 수 있는지 알아보고 필요한 만큼
          반복해야 합니다. 툴 박스에 '경로 확보하기'라고 표시된 작은 녹색 블록을 사용하세요.
        MC_HOC_2017_07_Cole_b: 함수 블록을 툴 박스에 있는 다른 블록과 조합하면서 퍼즐을 해결하는 방법을 찾아보세요.
      MC_HOC_2017_07_Cole_2020:
        MC_HOC_2017_07_Cole_c: Agent에게 필요한 것은 Minecart로 가는 바른 길입니다.
        MC_HOC_2017_07_Cole_a: 이 퍼즐을 해결하려면 '경로 확보하기' 함수로 무슨 일을 할 수 있는지 알아보고 필요한 만큼
          반복해야 합니다. 툴 박스에 '경로 확보하기'라고 표시된 작은 녹색 블록을 사용하세요.
        MC_HOC_2017_07_Cole_b: 함수 블록을 툴 박스에 있는 다른 블록과 조합하면서 퍼즐을 해결하는 방법을 찾아보세요.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: 어디를 가야할지 모르십니까? 점선이 있는지 확인 하십시오!
        MC_HOC_2017_10_Cole_a: 함수를 사용하면 퍼즐을 좀 더 쉽게 해결할 수 있답니다!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: 어디를 가야할지 모르십니까? 점선이 있는지 확인 하십시오!
        MC_HOC_2017_10_Cole_a: 함수를 사용하면 퍼즐을 좀 더 쉽게 해결할 수 있답니다!
      MC_HOC_2017_10_RETRY_2020:
        MC_HOC_2017_10_Cole_b: 어디를 가야할지 모르십니까? 점선이 있는지 확인 하십시오!
        MC_HOC_2017_10_Cole_a: 함수를 사용하면 퍼즐을 좀 더 쉽게 해결할 수 있답니다!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_08_RY_b: 이 퍼즐을 해결하는 방법은 아주 다양해요.  여러 방식을 시도해보세요!
        MC_HOC_2017_08_RY_c: 용암을 통과하는 간단한 경로를 위해 점선을 따라 가보십시오.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_08_RY_b: 이 퍼즐을 해결하는 방법은 아주 다양해요.  여러 방식을 시도해보세요!
        MC_HOC_2017_08_RY_c: 용암을 통과하는 간단한 경로를 위해 점선을 따라 가보십시오.
      MC_HOC_2017_Ali_2020:
        MC_HOC_2017_08_RY_a: "'실행'을 누르세요. \n코드가 정확하지 않아도 실행할 수 있으니 필요한 만큼 코드를 실행하고
          초기화하면서 잘못된 부분을 찾아 보세요."
        MC_HOC_2017_08_RY_b: 이 퍼즐을 해결하는 방법은 아주 다양해요.  여러 방식을 시도해보세요!
        MC_HOC_2017_08_RY_c: 용암을 통과하는 간단한 경로를 위해 점선을 따라 가보십시오.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Agent를 통해 필요한 곳에 다리를 지어 알렉스나 스티브가 이동할 수 있게 해주세요.
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Agent를 통해 필요한 곳에 다리를 지어 알렉스나 스티브가 이동할 수 있게 해주세요.
      MC_HOC_2017_FP20x20_2020:
        MC_HOC_2017_13_Cole_a: Agent를 통해 필요한 곳에 다리를 지어 알렉스나 스티브가 이동할 수 있게 해주세요.
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: "\\`정사각형의 선 그리기 '기능을 수정하면 두 번 호출하지 않아도
          됩니다."
        NEW_Course_4_Artist_Functions_13_c: 상자 대신 일반 줄을 사용하여 별을 만들려고한다면 어떤 코드가 필요합니까?
      NEW Course 4 Artist Functions 4:
        NEW_Course_4_Artist_Functions_4_a: 각 사각형 그린 후에\`120도 오른쪽 회전 '블록을 사용해야 합니다.
      NEW Course 4 Artist Functions 9:
        NEW_Course_4_Artist_Functions_9_a: 블록을 추가하기 전에 코드를 실행 해보십시오. 그림이 약간 어둡게 보이게하는
          이유는 무엇입니까?
        NEW_Course_4_Artist_Functions_9_b: 잘 못 되고 있는 것에 대해 원인을 못 찾을 경우는 속도 슬라이더를 왼쪽으로
          움직여서 아티스트의 속도를 줄이십시오.
      NEW Course 4 Artist Params 11:
        NEW_Course_4_Artist_Params_11_a: 함수 내에서 변수로 대체해야하는 숫자가 두 개 이상 있습니다.
      NEW Course 4 Artist Params 13:
        NEW_Course_4_Artist_Params_13_a: '모양을 같은 크기로 유지하려면 _경계_ 수를 측면 수로 나누어야 합니다. '
      NEW Course 4 Artist Params inspire:
        brush_width: 붓의 두께를 1로 설정 한 다음 색상을 파란색으로 먼저 설정 했습니다.
        double_loop: "'카운트'문 안에 'for loop'를 사용해보세요."
        specifics: |-
          \`카운트'는 여섯 개의 "꽃잎"각각에 대해 3에서 17까지 실행되고, 다음을 만들기 위해 이동하기 전에, 홀수의 변을 가진 도형을 그립니다.

          `alpha 설정` 블록은 카운터가 높아짐에 따라 색상을 희미하게하기 위해 나눗셈을 사용합니다.
        after: 각 "꽃잎"을 다 마쳤 으면 60도 회전을 하기 전에 20 픽셀 '앞으로 이동' 하십시오.
        solution: |-
          **예제 답안:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">6</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">17</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="alpha" inline="true" id="alpha">
                                  <value name="VALUE">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">DIVIDE</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">500</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="procedures_callnoreturn" inline="false">
                                      <mutation name="draw a polygon">
                                      <arg name="length"></arg>
                                      <arg name="sides"></arg>
                                      </mutation>
                                      <value name="ARG0">
                                        <block type="math_number">
                                          <title name="NUM">30</title>
                                        </block>
                                      </value>
                                      <value name="ARG1">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">20</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnRight</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">60</title>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            </xml>
      NEW Course 4 Bee For Loops 8:
        NEW_Course_4_Bee_For_Loops_8_a: |-
          반복문이 계산 중일 때마다 증분이 매번 카운터 변수에 추가됩니다.

          그 번호 뒤에 번호를 얻기 위해 각 번호에 무엇을 추가해야합니까?
      OPD-K5-events-2:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      Overworld Avoid Monsters:
        mc_8_a: 당신이 취할 수 있는 몇 가지 경로가 있습니다. 어느 것이 가장 짧습니까?
        mc_8_b: 코드를 단순화하려면`반복` 루프를 사용 하십시오.
        mc_8_c: 당신의 목표는 화면 상단의 집 출입구에 들어가는 것입니다.
      Overworld Avoid Monsters_2019:
        mc_8_a: 당신이 취할 수 있는 몇 가지 경로가 있습니다. 어느 것이 가장 짧습니까?
        mc_8_b: 코드를 단순화하려면`반복` 루프를 사용 하십시오.
        mc_8_c: 당신의 목표는 화면 상단의 집 출입구에 들어가는 것입니다.
      Overworld Avoid Monsters_2020:
        mc_8_a: 당신이 취할 수 있는 몇 가지 경로가 있습니다. 어느 것이 가장 짧습니까?
        mc_8_b: 코드를 단순화하려면`반복` 루프를 사용 하십시오.
        mc_8_c: 당신의 목표는 화면 상단의 집 출입구에 들어가는 것입니다.
      Overworld Chop Tree:
        mc_2_a: '나무 앞에서 두 번 ''앞으로 이동'' 움직여야 합니다.  '
        mc_2_b: "`블록 파괴하기` 명령은 여러분 앞에있는 나무를 자릅니다."
      Overworld Chop Tree_2019:
        mc_2_a: '나무 앞에서 두 번 ''앞으로 이동'' 움직여야 합니다.  '
        mc_2_b: "`블록 파괴하기` 명령은 여러분 앞에있는 나무를 자릅니다."
      Overworld Chop Tree_2020:
        mc_2_a: '나무 앞에서 두 번 ''앞으로 이동'' 움직여야 합니다.  '
        mc_2_b: "`블록 파괴하기` 명령은 여러분 앞에있는 나무를 자릅니다."
      Overworld Chop Trees:
        mc_4_a: '어떤 순서로든 나무를 자를 수 있습니다. 어떤 경로가 가장 작은 블록 수를 차지합니까?  '
        mc_4_b: "`블록 파괴하기` 명령은 여러분 앞에있는 나무를 자릅니다."
      Overworld Chop Trees_2019:
        mc_4_a: '어떤 순서로든 나무를 자를 수 있습니다. 어떤 경로가 가장 작은 블록 수를 차지합니까?  '
        mc_4_b: "`블록 파괴하기` 명령은 여러분 앞에있는 나무를 자릅니다."
      Overworld Chop Trees_2020:
        mc_4_a: '어떤 순서로든 나무를 자를 수 있습니다. 어떤 경로가 가장 작은 블록 수를 차지합니까?  '
        mc_4_b: "`블록 파괴하기` 명령은 여러분 앞에있는 나무를 자릅니다."
      Overworld House Frame Chosen:
        mc_6_a: "'놓기'블록의 화살표를 클릭하여 놓을 항목을 선택하십시오."
        mc_6_b: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
        mc_6_c: 몇개의 블럭을 '반복'문 안에 놓을 수 있습니다.
      Overworld House Frame Chosen_2019:
        mc_6_a: "'놓기'블록의 화살표를 클릭하여 놓을 항목을 선택하십시오."
        mc_6_b: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
        mc_6_c: 몇개의 블럭을 '반복'문 안에 놓을 수 있습니다.
      Overworld House Frame Chosen_2020:
        mc_6_a: "'놓기'블록의 화살표를 클릭하여 놓을 항목을 선택하십시오."
        mc_6_b: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
        mc_6_c: 몇개의 블럭을 '반복'문 안에 놓을 수 있습니다.
      Overworld Move to Sheep:
        mc_1_a: "'앞으로 이동' 블럭은 도구 상자의 맨 위에 있습니다.  "
        mc_1_b: "'앞으로 이동`블록이`실행하면\\` 블록에 붙여지는지 확인하십시오.  "
      Overworld Move to Sheep_2019:
        mc_1_a: "'앞으로 이동' 블럭은 도구 상자의 맨 위에 있습니다.  "
        mc_1_b: "'앞으로 이동`블록이`실행하면\\` 블록에 붙여지는지 확인하십시오.  "
      Overworld Move to Sheep_2020:
        mc_1_a: "'앞으로 이동' 블럭은 도구 상자의 맨 위에 있습니다.  "
        mc_1_b: "'앞으로 이동`블록이`실행하면\\` 블록에 붙여지는지 확인하십시오.  "
      Overworld Place Wall:
        mc_5_a: "`놓기` 블록을 먼저 사용하고,`이동` 블록을 사용하십시오."
        mc_5_b: 코드를 두 번 이상 실행하려면 두 블록 모두`반복`문 안에 있어야 합니다.
        mc_5_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Overworld Place Wall_2019:
        mc_5_a: "`놓기` 블록을 먼저 사용하고,`이동` 블록을 사용하십시오."
        mc_5_b: 코드를 두 번 이상 실행하려면 두 블록 모두`반복`문 안에 있어야 합니다.
        mc_5_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Overworld Place Wall_2020:
        mc_5_a: "`놓기` 블록을 먼저 사용하고,`이동` 블록을 사용하십시오."
        mc_5_b: 코드를 두 번 이상 실행하려면 두 블록 모두`반복`문 안에 있어야 합니다.
        mc_5_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Overworld Plant Crops:
        mc_7_a: "'작물 심기' 블럭을 이용하여 지금 서 있는 곳에 심으세요."
        mc_7_b: 짙은 갈색 땅의 줄무늬는 물로 채워야 합니다.
        mc_7_c: 몇개의 블럭을 '반복'문 안에 놓을 수 있습니다.
      Overworld Plant Crops_2019:
        mc_7_a: "'작물 심기' 블럭을 이용하여 지금 서 있는 곳에 심으세요."
        mc_7_b: 짙은 갈색 땅의 줄무늬는 물로 채워야 합니다.
        mc_7_c: 몇개의 블럭을 '반복'문 안에 놓을 수 있습니다.
      Overworld Plant Crops_2020:
        mc_7_a: "'작물 심기' 블럭을 이용하여 지금 서 있는 곳에 심으세요."
        mc_7_b: 짙은 갈색 땅의 줄무늬는 물로 채워야 합니다.
        mc_7_c: 몇개의 블럭을 '반복'문 안에 놓을 수 있습니다.
      Overworld Powered Minecart:
        mc_13_a: 현재 서 있는 정사각형에 레일을 놓기 위해\`놓기 레일'을 사용하십시오.
        mc_13_b: 코드를 짧게 만드려면 '반복'문을 사용하세요.
      Overworld Powered Minecart_2019:
        mc_13_a: 현재 서 있는 정사각형에 레일을 놓기 위해\`놓기 레일'을 사용하십시오.
        mc_13_b: 코드를 짧게 만드려면 '반복'문을 사용하세요.
      Overworld Powered Minecart_2020:
        mc_13_a: 현재 서 있는 정사각형에 레일을 놓기 위해\`놓기 레일'을 사용하십시오.
        mc_13_b: 코드를 짧게 만드려면 '반복'문을 사용하세요.
      Overworld Shear Sheep:
        mc_3_a: "\\`털 깍기'블록은 당신 앞에서 양을 잡습니다. 양 앞에 있습니까?  "
        mc_3_b: '만약 당신이 직면하고 있는 방향을 바꿀 필요가 있다면,`회전` 블록을 사용하십시오.  '
        mc_3_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Overworld Shear Sheep_2019:
        mc_3_a: "\\`털 깍기'블록은 당신 앞에서 양을 잡습니다. 양 앞에 있습니까?  "
        mc_3_b: '만약 당신이 직면하고 있는 방향을 바꿀 필요가 있다면,`회전` 블록을 사용하십시오.  '
        mc_3_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Overworld Shear Sheep_2020:
        mc_3_a: "\\`털 깍기'블록은 당신 앞에서 양을 잡습니다. 양 앞에 있습니까?  "
        mc_3_b: '만약 당신이 직면하고 있는 방향을 바꿀 필요가 있다면,`회전` 블록을 사용하십시오.  '
        mc_3_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Underground Avoiding Lava:
        mc_11_a: 이미 모든 코드는 용암에 대해 확인하고 조절하도록 설정되어 있습니다. 당신이 할 것은 그저 하나의 블록을 더하여 움직이도록
          하는 것입니다.
        mc_11_b: "'앞으로 가기' 명령어가 If문 안에 가야할까요, 아니면 그 후에 가야할까요?"
      Underground Avoiding Lava_2019:
        mc_11_a: 이미 모든 코드는 용암에 대해 확인하고 조절하도록 설정되어 있습니다. 당신이 할 것은 그저 하나의 블록을 더하여 움직이도록
          하는 것입니다.
        mc_11_b: "'앞으로 가기' 명령어가 If문 안에 가야할까요, 아니면 그 후에 가야할까요?"
      Underground Avoiding Lava_2020:
        mc_11_a: 이미 모든 코드는 용암에 대해 확인하고 조절하도록 설정되어 있습니다. 당신이 할 것은 그저 하나의 블록을 더하여 움직이도록
          하는 것입니다.
        mc_11_b: "'앞으로 가기' 명령어가 If문 안에 가야할까요, 아니면 그 후에 가야할까요?"
      Underground If Statements:
        mc_12_a: 붉은 얼룩이 있는 곳이 바로 Redstone 이 있는 자리입니다.
        mc_12_b: "'반복' 루프를 사용해서 코드를 더 짧게 만들 수 있을까요?"
        mc_12_c: 'If문을 사용하여 용암이 자리할 자리를 체크하고, 그 후 조약돌을 배치하세요. '
      Underground If Statements_2019:
        mc_12_a: 붉은 얼룩이 있는 곳이 바로 Redstone 이 있는 자리입니다.
        mc_12_b: "'반복' 루프를 사용해서 코드를 더 짧게 만들 수 있을까요?"
        mc_12_c: 'If문을 사용하여 용암이 자리할 자리를 체크하고, 그 후 조약돌을 배치하세요. '
      Underground If Statements_2020:
        mc_12_a: 붉은 얼룩이 있는 곳이 바로 Redstone 이 있는 자리입니다.
        mc_12_b: "'반복' 루프를 사용해서 코드를 더 짧게 만들 수 있을까요?"
        mc_12_c: 'If문을 사용하여 용암이 자리할 자리를 체크하고, 그 후 조약돌을 배치하세요. '
      Underground Iron:
        mc_10_a: 횃불 뒤에 얼룩진 공간이 바로 철 블록입니다! 어떻게 저 곳으로 갈 건가요?
        mc_10_b: 용암의 가장자리에 서 있을때, 'place cobblestone ahead' 명령어를 사용해 안전한 길을 만드세요.
          그러면 그 위를 걸어갈 수 있습니다!
        mc_10_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Underground Iron_2019:
        mc_10_a: 횃불 뒤에 얼룩진 공간이 바로 철 블록입니다! 어떻게 저 곳으로 갈 건가요?
        mc_10_b: 용암의 가장자리에 서 있을때, 'place cobblestone ahead' 명령어를 사용해 안전한 길을 만드세요.
          그러면 그 위를 걸어갈 수 있습니다!
        mc_10_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Underground Iron_2020:
        mc_10_a: 횃불 뒤에 얼룩진 공간이 바로 철 블록입니다! 어떻게 저 곳으로 갈 건가요?
        mc_10_b: 용암의 가장자리에 서 있을때, 'place cobblestone ahead' 명령어를 사용해 안전한 길을 만드세요.
          그러면 그 위를 걸어갈 수 있습니다!
        mc_10_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤 일이 발생하는지 확인하십시오.  '
      Underground Mining Coal:
        mc_9_a: 올바른 방향을 향하고 있나요? 'Destroy Block' 명렁어는 바로 앞에 있는 블록을 부숩니다.
        mc_9_b: 벽에 있는 어두운 얼룩이 모두 석탄입니다! 'Destroy Block' 명령어를 사용하여 석탄을 캐세요.
        mc_9_c: "'Place Torch' 명령어를 사용하여 지금 서 있는 공간에 횃불을 배치하세요."
      Underground Mining Coal_2019:
        mc_9_a: 올바른 방향을 향하고 있나요? 'Destroy Block' 명렁어는 바로 앞에 있는 블록을 부숩니다.
        mc_9_b: 벽에 있는 어두운 얼룩이 모두 석탄입니다! 'Destroy Block' 명령어를 사용하여 석탄을 캐세요.
        mc_9_c: "'Place Torch' 명령어를 사용하여 지금 서 있는 공간에 횃불을 배치하세요."
      Underground Mining Coal_2020:
        mc_9_a: 올바른 방향을 향하고 있나요? 'Destroy Block' 명렁어는 바로 앞에 있는 블록을 부숩니다.
        mc_9_b: 벽에 있는 어두운 얼룩이 모두 석탄입니다! 'Destroy Block' 명령어를 사용하여 석탄을 캐세요.
        mc_9_c: "'Place Torch' 명령어를 사용하여 지금 서 있는 공간에 횃불을 배치하세요."
      behaviors 3:
        behavior hint: |-
          잘 생각해 보세요!
          \*어떤 값이 각 개체의 속도를 조절하나요?
      behaviors 3_2020:
        behavior hint: |-
          잘 생각해 보세요!
          \*어떤 값이 각 개체의 속도를 조절하나요?
      behaviors 3a:
        behavior hint: |-
          잘 생각해 보세요!
          \*어떤 값이 각 개체의 속도를 조절하나요?
      behaviors 3a_2020:
        behavior hint: |-
          잘 생각해 보세요!
          \*어떤 값이 각 개체의 속도를 조절하나요?
      behaviors 6:
        behavior hint: |-
          잘 생각해 보세요!
          \*어떤 값이 각 개체의 속도를 조절하나요?
      behaviors 6_2020:
        behavior hint: |-
          잘 생각해 보세요!
          \*어떤 값이 각 개체의 속도를 조절하나요?
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: '반복 블럭안에 실행 블럭들을 넣으면 반복해서 실행이 됩니다. 한번 해보세요! '
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_b: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_maze_seq6:
        courseB_maze_seq5_c: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_maze_seq6_2018:
        courseB_maze_seq5_c: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_maze_seq6_2019:
        courseB_maze_seq5_c: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_maze_seq6_2020:
        courseB_maze_seq5_c: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_maze_seq8:
        courseB_maze_seq8_b: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_maze_seq9:
        courseB_maze_seq9_c: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_c: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_c: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_maze_seq9_2020:
        courseB_maze_seq9_c: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseB_starWars_prog9_2020:
        courseB_starWars_prog9_a: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_artist_prog2:
        courseC_artist_prog2_a: "'앞으로 100 픽셀 이동' 블록을 쓰면 자동으로 라인을 그려질 것입니다."
        courseC_artist_prog2_b: 옆으로 도는 것이 어려우신가요? '오른쪽으로 90도 회전' 블록을 사용하세요.
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: "'앞으로 100 픽셀 이동' 블록을 쓰면 자동으로 라인을 그려질 것입니다."
        courseC_artist_prog2_b: 옆으로 도는 것이 어려우신가요? '오른쪽으로 90도 회전' 블록을 사용하세요.
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: "'앞으로 100 픽셀 이동' 블록을 쓰면 자동으로 라인을 그려질 것입니다."
        courseC_artist_prog2_b: 옆으로 도는 것이 어려우신가요? '오른쪽으로 90도 회전' 블록을 사용하세요.
      courseC_artist_prog2_2020:
        courseC_artist_prog2_a: "'앞으로 100 픽셀 이동' 블록을 쓰면 자동으로 라인을 그려질 것입니다."
        courseC_artist_prog2_b: 옆으로 도는 것이 어려우신가요? '오른쪽으로 90도 회전' 블록을 사용하세요.
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2020:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_maze_programming6:
        courseC_maze_programming6_a: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseC_maze_programming6_2020:
        courseC_maze_programming6_a: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseC_starWars_loops1:
        courseC_starWars_loops1_b: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops10:
        courseC_starWars_loops10_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여
          어떤 일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여
          어떤 일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여
          어떤 일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops10_2020:
        courseC_starWars_loops10_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여
          어떤 일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_b: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_b: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops1_2020:
        courseC_starWars_loops1_b: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops7:
        courseC_starWars_loops7_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops7_2020:
        courseC_starWars_loops7_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseC_starWars_loops7_copy:
        courseC_starWars_loops7_c: '실수하는 것을 두려워하지 마라! 퍼즐을 아직 풀지 않은 경우에도 코드를 실행하여 어떤
          일이 발생하는지 확인하십시오.  '
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          다음번에 그릴 사각형 꼭대기로 이동하기 위해서 '앞으로 점프' 블록을 이용해보세요.
          만약 사각형이 20픽셀이고, 사각형끼리 20픽셀 씩 떨어져 있다면 얼마만큼이나 점프해야 할까요?
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          다음번에 그릴 사각형 꼭대기로 이동하기 위해서 '앞으로 점프' 블록을 이용해보세요.
          만약 사각형이 20픽셀이고, 사각형끼리 20픽셀 씩 떨어져 있다면 얼마만큼이나 점프해야 할까요?
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          다음번에 그릴 사각형 꼭대기로 이동하기 위해서 '앞으로 점프' 블록을 이용해보세요.
          만약 사각형이 20픽셀이고, 사각형끼리 20픽셀 씩 떨어져 있다면 얼마만큼이나 점프해야 할까요?
      courseD_artist_nestedLoops3_2020:
        courseD_artist_nestedLoops3_a: |-
          다음번에 그릴 사각형 꼭대기로 이동하기 위해서 '앞으로 점프' 블록을 이용해보세요.
          만약 사각형이 20픽셀이고, 사각형끼리 20픽셀 씩 떨어져 있다면 얼마만큼이나 점프해야 할까요?
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_a: |-
          **기억하세요** 이 퍼즐은 실행될 때마다 바뀝니다.

          문제를 해결하기 위해 조건 블록(`만약` 또는 `만약/아니면`)을 사용해보세요.
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_a: |-
          **기억하세요** 이 퍼즐은 실행될 때마다 바뀝니다.

          문제를 해결하기 위해 조건 블록(`만약` 또는 `만약/아니면`)을 사용해보세요.
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: |-
          **기억하세요** 이 퍼즐은 실행될 때마다 바뀝니다.

          문제를 해결하기 위해 조건 블록(`만약` 또는 `만약/아니면`)을 사용해보세요.
      courseD_bee_conditionals8_2020:
        courseD_bee_conditionals8_a: |-
          **기억하세요** 이 퍼즐은 실행될 때마다 바뀝니다.

          문제를 해결하기 위해 조건 블록(`만약` 또는 `만약/아니면`)을 사용해보세요.
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2020:
        courseD_bee_nested_loops_challenge2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_maze_ramp6:
        courseC_maze_programming6_a: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: 이 퍼즐을 푸는 데는 두 가지 방법이 있습니다!
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: '반 육각형은 \*\* 길이가 30 \*\*이며 \*\*는 \*\*
          60도 오른쪽으로 회전합니다 \*\*.  '
        courseE_artist_concept_challenge1_b: '2/3 삼각형은 \*\* 길이가 80 \*\*이며 \*\* 120도
          \*\*만큼 우회전 합니다. '
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: '반 육각형은 \*\* 길이가 30 \*\*이며 \*\*는 \*\*
          60도 오른쪽으로 회전합니다 \*\*.  '
        courseE_artist_concept_challenge1_b: '2/3 삼각형은 \*\* 길이가 80 \*\*이며 \*\* 120도
          \*\*만큼 우회전 합니다. '
      courseE_artist_functions1:
        courseE_artist_functions1_a: '이 사각형들은 각 면이 100픽셀입니다. 즉, 두번째 사각형을 그리기 전에 여러분은
          앞쪽으로 175픽셀을 이동해야 할 것입니다.  '
        courseE_artist_functions1_b: '안경을 만들기 위해 선이 겹쳐서 그려지더라도 괜찮아요. '
      courseE_artist_functions1_copy:
        courseE_artist_functions1_a: '이 사각형들은 각 면이 100픽셀입니다. 즉, 두번째 사각형을 그리기 전에 여러분은
          앞쪽으로 175픽셀을 이동해야 할 것입니다.  '
        courseE_artist_functions1_b: '안경을 만들기 위해 선이 겹쳐서 그려지더라도 괜찮아요. '
      courseE_artist_functions2:
        courseD_artist_functions2_a: |-
          여러분의 프로그램은 반드시:
          \-함수 사용
          \-100 + 75픽셀 앞으로 이동
          \-함수 사용
      courseE_artist_functions2_2018:
        courseD_artist_functions2_a: |-
          여러분의 프로그램은 반드시:
          \-함수 사용
          \-100 + 75픽셀 앞으로 이동
          \-함수 사용
      courseE_artist_functions2_2019:
        courseD_artist_functions2_a: |-
          여러분의 프로그램은 반드시:
          \-함수 사용
          \-100 + 75픽셀 앞으로 이동
          \-함수 사용
      courseE_artist_functions2_2020:
        courseD_artist_functions2_a: |-
          여러분의 프로그램은 반드시:
          \-함수 사용
          \-100 + 75픽셀 앞으로 이동
          \-함수 사용
      courseE_artist_functions2_copy:
        courseD_artist_functions2_a: |-
          여러분의 프로그램은 반드시:
          \-함수 사용
          \-100 + 75픽셀 앞으로 이동
          \-함수 사용
      courseE_artist_functions8:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2020:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_bee_functions6:
        courseE_bee_functions6_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseE_bee_functions7:
        courseE_bee_functions7_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
        courseE_bee_functions7_b: |-
          녹색 함수 블럭 안에 코드를 구현해야 한다는 것을 기억하세요.
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
      courseF_artist_for4:
        courseF_artist_for4_a: |-
          \*\* 가장 작은 번호는 무엇입니까?
          가장 큰 숫자는 무엇입니까?
          매회 얼마나 큽니까? \*\*

          그것들은`카운트 반복` 문을 채우기 위해 당신이 물어야 할 질문들입니다.
      courseF_artist_for4_2018:
        courseF_artist_for4_a: |-
          \*\* 가장 작은 번호는 무엇입니까?
          가장 큰 숫자는 무엇입니까?
          매회 얼마나 큽니까? \*\*

          그것들은`카운트 반복` 문을 채우기 위해 당신이 물어야 할 질문들입니다.
      courseF_artist_for4_2019:
        courseF_artist_for4_a: |-
          \*\* 가장 작은 번호는 무엇입니까?
          가장 큰 숫자는 무엇입니까?
          매회 얼마나 큽니까? \*\*

          그것들은`카운트 반복` 문을 채우기 위해 당신이 물어야 할 질문들입니다.
      courseF_artist_for4_2020:
        courseF_artist_for4_a: |-
          \*\* 가장 작은 번호는 무엇입니까?
          가장 큰 숫자는 무엇입니까?
          매회 얼마나 큽니까? \*\*

          그것들은`카운트 반복` 문을 채우기 위해 당신이 물어야 할 질문들입니다.
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: "'펜 폭'은 1입니다. 첫 번째 정사각형은 50 픽셀 측면을 가지며 각
          정사각형은 마지막 픽셀보다 50 픽셀 넓습니다."
        courseF_artist_for_challenge1_b: 브러쉬의 불투명도는 항상`counter` / 2입니다.
        courseF_artist_for_challenge1_c: 각 사각형을 만든 후에는 뒤로 점프하고, 돌고, 다시 점프하고, 다시 돌아
          오는 것을 잊지 마십시오!
        courseF_artist_for_challenge1_d: |-
          **예제 답안:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: "'펜 폭'은 1입니다. 첫 번째 정사각형은 50 픽셀 측면을 가지며 각
          정사각형은 마지막 픽셀보다 50 픽셀 넓습니다."
        courseF_artist_for_challenge1_b: 브러쉬의 불투명도는 항상`counter` / 2입니다.
        courseF_artist_for_challenge1_c: 각 사각형을 만든 후에는 뒤로 점프하고, 돌고, 다시 점프하고, 다시 돌아
          오는 것을 잊지 마십시오!
        courseF_artist_for_challenge1_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: "'펜 폭'은 1입니다. 첫 번째 정사각형은 50 픽셀 측면을 가지며 각
          정사각형은 마지막 픽셀보다 50 픽셀 넓습니다."
        courseF_artist_for_challenge1_b: 브러쉬의 불투명도는 항상`counter` / 2입니다.
        courseF_artist_for_challenge1_c: 각 사각형을 만든 후에는 뒤로 점프하고, 돌고, 다시 점프하고, 다시 돌아
          오는 것을 잊지 마십시오!
        courseF_artist_for_challenge1_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2020:
        courseF_artist_for_challenge1_a: "'펜 폭'은 1입니다. 첫 번째 정사각형은 50 픽셀 측면을 가지며 각
          정사각형은 마지막 픽셀보다 50 픽셀 넓습니다."
        courseF_artist_for_challenge1_b: 브러쉬의 불투명도는 항상`counter` / 2입니다.
        courseF_artist_for_challenge1_c: 각 사각형을 만든 후에는 뒤로 점프하고, 돌고, 다시 점프하고, 다시 돌아
          오는 것을 잊지 마십시오!
        courseF_artist_for_challenge1_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: "\\`카운터 반복'문은 5에서 250로 2씩 증가됩니다. "
        courseF_artist_for_challenge2_a: 색상 변경은 '빨강, 초록, 파랑으로 색 설정'블록을 사용할 수 있습니다.
          빨간색은 '255'로 일정하게 설정되고 녹색은 항상 'counter'의 값으로, 파란색은 항상 '255 - counter' 설정됩니다.
        courseF_artist_for_challenge2_d: |-
          **예제 답안:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: "\\`카운터 반복'문은 5에서 250로 2씩 증가됩니다. "
        courseF_artist_for_challenge2_a: 색상 변경은 '빨강, 초록, 파랑으로 색 설정'블록을 사용할 수 있습니다.
          빨간색은 '255'로 일정하게 설정되고 녹색은 항상 'counter'의 값으로, 파란색은 항상 '255 - counter' 설정됩니다.
        courseF_artist_for_challenge2_d: |-
          **예제 답안:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: "\\`카운터 반복'문은 5에서 250로 2씩 증가됩니다. "
        courseF_artist_for_challenge2_a: 색상 변경은 '빨강, 초록, 파랑으로 색 설정'블록을 사용할 수 있습니다.
          빨간색은 '255'로 일정하게 설정되고 녹색은 항상 'counter'의 값으로, 파란색은 항상 '255 - counter' 설정됩니다.
        courseF_artist_for_challenge2_d: |-
          **예제 답안:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_for_challenge2_2020:
        courseF_artist_for_challenge2_c: "\\`카운터 반복'문은 5에서 250로 2씩 증가됩니다. "
        courseF_artist_for_challenge2_a: 색상 변경은 '빨강, 초록, 파랑으로 색 설정'블록을 사용할 수 있습니다.
          빨간색은 '255'로 일정하게 설정되고 녹색은 항상 'counter'의 값으로, 파란색은 항상 '255 - counter' 설정됩니다.
        courseF_artist_for_challenge2_d: |-
          **예제 답안:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](<https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png>)
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseF_artist_fwp_challenge1_b: '이것은 ''counter''픽셀 값이 변의 길이를 가지는 여러 팔각형들
          입니다. '
        courseF_artist_fwp_challenge1_c: '각 팔각형은 200에서 2로 2만큼 이동하는 ''카운터 반복''문을 내부에서
          호출됩니다. '
        courseF_artist_fwp_challenge1_d: '각 반복 끝에 22.5도 회전하는 것을 잊지 마십시오. '
        courseF_artist_fwp_challenge1_e: 각 팔각형의 색과 펜의 폭은`counter` 변수에 의해 제어됩니다
      courseF_artist_variables4:
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: '변수는 반복문을 통해 매번 추가 할 수 있기 때문에 유용합니다. '
        courseF_artist_variables_challenge2_c: "'sides'변수와 'length'변수를 사용하면 번호를 설정하기
          위해 매번 같은 코드만드는 대신 동일한 코드를 여러번 반복 할 수 있기 때문에 코드가 보다 명확 해집니다."
        courseF_artist_variables_challenge2_d: |-
          **예제 답안:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: '변수는 반복문을 통해 매번 추가 할 수 있기 때문에 유용합니다. '
        courseF_artist_variables_challenge2_c: "'sides'변수와 'length'변수를 사용하면 번호를 설정하기
          위해 매번 같은 코드만드는 대신 동일한 코드를 여러번 반복 할 수 있기 때문에 코드가 보다 명확 해집니다."
        courseF_artist_variables_challenge2_d: |-
          **예제 답안:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: '변수는 반복문을 통해 매번 추가 할 수 있기 때문에 유용합니다. '
        courseF_artist_variables_challenge2_c: "'sides'변수와 'length'변수를 사용하면 번호를 설정하기
          위해 매번 같은 코드만드는 대신 동일한 코드를 여러번 반복 할 수 있기 때문에 코드가 보다 명확 해집니다."
        courseF_artist_variables_challenge2_d: |-
          **예제 답안:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2020:
        courseF_artist_variables_challenge2_a: '변수는 반복문을 통해 매번 추가 할 수 있기 때문에 유용합니다. '
        courseF_artist_variables_challenge2_c: "'sides'변수와 'length'변수를 사용하면 번호를 설정하기
          위해 매번 같은 코드만드는 대신 동일한 코드를 여러번 반복 할 수 있기 때문에 코드가 보다 명확 해집니다."
        courseF_artist_variables_challenge2_d: |-
          **예제 답안:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: |-
          **기억하세요** 이 퍼즐은 실행될 때마다 바뀝니다.

          문제를 해결하기 위해 조건 블록(`만약` 또는 `만약/아니면`)을 사용해보세요.
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: '두 개의 ''카운트 반복''문을 사용하여 시도해보십시오: 하나는 등반하고 꽃꿀을
          잡고 다른 하나는 아래로 내려와 꿀을 만들기위한 것입니다.'
        courseF_bee_for_challenge2_c: |-
          하나의 '카운트 반복'문은 여러개의 반복문이 필요하며 증가하는 계단 패턴을 만들기 위해 반복되는\`counter '시간 안에 여러 개의 정규 루프를 필요로 합니다.

          다른`카운트 반복`문은 'counter'양의 꿀을 만들기 위해 하나의 일반 반복문만 필요합니다.
        courseF_bee_for_challenge2_d: |-
          **예제 답안:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: '두 개의 ''카운트 반복''문을 사용하여 시도해보십시오: 하나는 등반하고 꽃꿀을
          잡고 다른 하나는 아래로 내려와 꿀을 만들기위한 것입니다.'
        courseF_bee_for_challenge2_c: |-
          하나의 '카운트 반복'문은 여러개의 반복문이 필요하며 증가하는 계단 패턴을 만들기 위해 반복되는\`counter '시간 안에 여러 개의 정규 루프를 필요로 합니다.

          다른`카운트 반복`문은 'counter'양의 꿀을 만들기 위해 하나의 일반 반복문만 필요합니다.
        courseF_bee_for_challenge2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: '두 개의 ''카운트 반복''문을 사용하여 시도해보십시오: 하나는 등반하고 꽃꿀을
          잡고 다른 하나는 아래로 내려와 꿀을 만들기위한 것입니다.'
        courseF_bee_for_challenge2_c: |-
          하나의 '카운트 반복'문은 여러개의 반복문이 필요하며 증가하는 계단 패턴을 만들기 위해 반복되는\`counter '시간 안에 여러 개의 정규 루프를 필요로 합니다.

          다른`카운트 반복`문은 'counter'양의 꿀을 만들기 위해 하나의 일반 반복문만 필요합니다.
        courseF_bee_for_challenge2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2020:
        courseF_bee_for_challenge2_a: |-
          이동을 위해 이 옵션을 보세요.

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: '두 개의 ''카운트 반복''문을 사용하여 시도해보십시오: 하나는 등반하고 꽃꿀을
          잡고 다른 하나는 아래로 내려와 꿀을 만들기위한 것입니다.'
        courseF_bee_for_challenge2_c: |-
          하나의 '카운트 반복'문은 여러개의 반복문이 필요하며 증가하는 계단 패턴을 만들기 위해 반복되는\`counter '시간 안에 여러 개의 정규 루프를 필요로 합니다.

          다른`카운트 반복`문은 'counter'양의 꿀을 만들기 위해 하나의 일반 반복문만 필요합니다.
        courseF_bee_for_challenge2_d: |-
          **예제 답안:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">

          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions6:
        courseF_bee_functions6_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: |-
          퍼즐이 어려울 경우 한번에 함수를 조금씩 구현해보세요.
          일부 블럭을 추가 하여 시도해보세요. 그리고 나서 조금 더 추가하고 다시 시도해보세요.
          곧 성공 할 것입니다!
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_b: |-
          **예제 답안:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_c: |-
          **예제 답안:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
