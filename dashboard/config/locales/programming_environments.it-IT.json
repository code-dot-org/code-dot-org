{
  "it-IT": {
    "data": {
      "programming_environments": {
        "weblab": {
          "name": "Sviluppo Web",
          "description": "Editor HTML/CSS basato sul web.",
          "categories": {
            "html_tags": {
              "name": "Tag HTML"
            },
            "css_properties": {
              "name": "Proprietà CSS"
            }
          }
        },
        "gamelab": {
          "name": "Sviluppo Giochi",
          "description": "Game Lab è un ambiente di programmazione dove puoi creare entusiasmanti giochi e animazioni. Disegna i tuoi personaggi, programma coi blocchi o JavaScript per farlif unzionare, poi condividi il tuo gioco in pochi secondi.",
          "categories": {
            "game_lab": {
              "name": "Sviluppo Giochi",
              "expressions": {
                "keyDown": {
                  "palette_params": {
                    "code": {
                      "type": "Stringa"
                    }
                  }
                },
                "keyWentDown": {
                  "palette_params": {
                    "code": {
                      "type": "Stringa"
                    }
                  }
                },
                "keyWentUp": {
                  "palette_params": {
                    "code": {
                      "type": "Stringa"
                    }
                  }
                },
                "mouseDown": {
                  "palette_params": {
                    "button": {
                      "type": "Stringa"
                    }
                  }
                },
                "mouseIsOver": {
                  "palette_params": {
                    "sprite": {
                      "type": "Personaggio"
                    }
                  }
                },
                "mousePressedOver": {
                  "palette_params": {
                    "sprite": {
                      "type": "Personaggio"
                    }
                  }
                },
                "mouseWentDown": {
                  "examples": {
                    "Black and White": {
                      "name": "Bianco e nero"
                    }
                  },
                  "palette_params": {
                    "button": {
                      "type": "Stringa"
                    }
                  }
                },
                "mouseWentUp": {
                  "palette_params": {
                    "button": {
                      "type": "Stringa"
                    }
                  }
                },
                "playSound": {
                  "examples": {
                    "Making Music": {
                      "name": "Fare musica"
                    }
                  },
                  "palette_params": {
                    "url": {
                      "type": "Stringa"
                    },
                    "loop": {
                      "type": "Booleano"
                    }
                  },
                  "short_description": "Riproduce il file audio MP3 dall'URL specificato."
                },
                "playSpeech": {
                  "palette_params": {
                    "text": {
                      "type": "Stringa"
                    },
                    "gender": {
                      "type": "Stringa"
                    },
                    "language": {
                      "type": "Stringa"
                    }
                  }
                },
                "showMobileControls": {
                  "content": "Cambia i controlli mobili visibili sotto l'area di gioco.",
                  "palette_params": {
                    "spaceButtonVisible": {
                      "type": "Booleano"
                    },
                    "dpadVisible": {
                      "type": "Booleano"
                    },
                    "dpadFourWay": {
                      "type": "Booleano"
                    },
                    "mobileOnly": {
                      "type": "Booleano"
                    }
                  },
                  "short_description": "Cambia i controlli mobili visibili sotto l'area di gioco."
                },
                "stopSound": {
                  "palette_params": {
                    "url": {
                      "type": "Stringa"
                    }
                  }
                }
              }
            },
            "sprites": {
              "name": "Personaggi",
              "expressions": {
                "getSpeed": {
                  "examples": {
                    "Spiral": {
                      "name": "Spirale"
                    }
                  }
                },
                "sprite.height": {
                  "return_value": "L'altezza dello sprite."
                },
                "mirrorX": {
                  "palette_params": {
                    "dir": {
                      "type": "Numero"
                    }
                  }
                },
                "mirrorY": {
                  "palette_params": {
                    "dir": {
                      "type": "Numero"
                    }
                  }
                },
                "pointTo": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "setAnimation": {
                  "palette_params": {
                    "label": {
                      "type": "Stringa"
                    }
                  }
                },
                "setCollider": {
                  "palette_params": {
                    "type": {
                      "type": "Stringa"
                    },
                    "xOffset": {
                      "type": "Numero"
                    },
                    "yOffset": {
                      "type": "Numero"
                    },
                    "width/radius": {
                      "type": "Numero"
                    },
                    "height": {
                      "type": "Numero"
                    },
                    "rotationOffset": {
                      "type": "Numero"
                    }
                  }
                },
                "setFrame": {
                  "palette_params": {
                    "frame": {
                      "type": "Numero"
                    }
                  }
                },
                "setSpeedAndDirection": {
                  "palette_params": {
                    "speed": {
                      "type": "Numero"
                    },
                    "angle": {
                      "type": "Numero"
                    }
                  }
                },
                "setVelocity": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "sprite.width": {
                  "return_value": "La larghezza dello sprite."
                },
                "createSprite": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "width": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    },
                    "height": {
                      "type": "Numero"
                    }
                  }
                }
              }
            },
            "groups": {
              "name": "Gruppi",
              "expressions": {
                "add": {
                  "palette_params": {
                    "sprite": {
                      "type": "Personaggio"
                    }
                  }
                },
                "contains": {
                  "palette_params": {
                    "sprite": {
                      "type": "Personaggio"
                    }
                  }
                },
                "get": {
                  "palette_params": {
                    "i": {
                      "type": "Numero"
                    }
                  }
                },
                "pointToEach": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "remove": {
                  "palette_params": {
                    "sprite": {
                      "type": "Personaggio"
                    }
                  }
                },
                "setAnimationEach": {
                  "palette_params": {
                    "label": {
                      "type": "Stringa"
                    }
                  }
                },
                "setColliderEach": {
                  "palette_params": {
                    "type": {
                      "type": "Stringa"
                    },
                    "yOffset": {
                      "type": "Numero"
                    },
                    "width/radius": {
                      "type": "Numero"
                    },
                    "height": {
                      "type": "Numero"
                    },
                    "rotationOffset": {
                      "type": "Numero"
                    }
                  }
                },
                "setColorEach": {
                  "palette_params": {
                    "color": {
                      "type": "Colore"
                    }
                  }
                },
                "setHeightEach": {
                  "palette_params": {
                    "height": {
                      "type": "Numero"
                    }
                  }
                },
                "setLifetimeEach": {
                  "palette_params": {
                    "lifetime": {
                      "type": "Numero"
                    }
                  }
                },
                "setMirrorXEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Numero"
                    }
                  }
                },
                "setMirrorYEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Numero"
                    }
                  }
                },
                "setRotateToDirectionEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Booleano"
                    }
                  }
                },
                "setRotationEach": {
                  "palette_params": {
                    "angle": {
                      "type": "Numero"
                    }
                  }
                },
                "setRotationSpeedEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Numero"
                    }
                  }
                },
                "setScaleEach": {
                  "palette_params": {
                    "scale": {
                      "type": "Numero"
                    }
                  }
                },
                "setSpeedAndDirectionEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Numero"
                    },
                    "angle": {
                      "type": "Numero"
                    }
                  }
                },
                "setTintEach": {
                  "palette_params": {
                    "color": {
                      "type": "Colore"
                    }
                  }
                },
                "setVelocityEach": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "setVelocityXEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Numero"
                    }
                  }
                },
                "setVelocityYEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Numero"
                    }
                  }
                },
                "setVisibleEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Booleano"
                    }
                  }
                },
                "setWidthEach": {
                  "palette_params": {
                    "width": {
                      "type": "Numero"
                    }
                  }
                }
              }
            },
            "drawing": {
              "name": "Disegni",
              "expressions": {
                "arc": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    },
                    "w": {
                      "type": "Numero"
                    },
                    "h": {
                      "type": "Numero"
                    },
                    "start": {
                      "type": "Numero"
                    },
                    "stop": {
                      "type": "Numero"
                    }
                  }
                },
                "background": {
                  "examples": {
                    "RGB Colors": {
                      "name": "Colori RGB"
                    }
                  },
                  "palette_params": {
                    "color": {
                      "type": "Stringa"
                    }
                  }
                },
                "ellipse": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    },
                    "w": {
                      "type": "Numero"
                    },
                    "h": {
                      "type": "Numero"
                    }
                  }
                },
                "fill": {
                  "palette_params": {
                    "color": {
                      "type": "Stringa"
                    }
                  }
                },
                "line": {
                  "palette_params": {
                    "x1": {
                      "type": "Numero"
                    },
                    "y1": {
                      "type": "Numero"
                    },
                    "x2": {
                      "type": "Numero"
                    },
                    "y2": {
                      "type": "Numero"
                    }
                  }
                },
                "point": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    },
                    "w": {
                      "type": "Numero"
                    },
                    "h": {
                      "type": "Numero"
                    }
                  }
                },
                "regularPolygon": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    },
                    "sides": {
                      "type": "Numero"
                    },
                    "size": {
                      "type": "Numero"
                    }
                  }
                },
                "rgb": {
                  "palette_params": {
                    "r": {
                      "type": "Numero"
                    },
                    "g": {
                      "type": "Numero"
                    },
                    "b": {
                      "type": "Numero"
                    },
                    "a": {
                      "type": "Numero"
                    }
                  }
                },
                "shape": {
                  "examples": {
                    "Star": {
                      "name": "Stella"
                    }
                  },
                  "palette_params": {
                    "x1": {
                      "type": "Numero"
                    },
                    "y1": {
                      "type": "Numero"
                    },
                    "x2": {
                      "type": "Numero"
                    },
                    "y2": {
                      "type": "Numero"
                    }
                  }
                },
                "stroke": {
                  "palette_params": {
                    "color": {
                      "type": "Stringa"
                    }
                  }
                },
                "strokeWeight": {
                  "palette_params": {
                    "size": {
                      "type": "Numero"
                    }
                  }
                },
                "text": {
                  "palette_params": {
                    "str": {
                      "type": "Stringa"
                    },
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    },
                    "width": {
                      "type": "Numero"
                    },
                    "height": {
                      "type": "Numero"
                    }
                  }
                },
                "textAlign": {
                  "palette_params": {
                    "horiz": {
                      "type": "Stringa"
                    },
                    "vert": {
                      "type": "Stringa"
                    }
                  }
                },
                "textFont": {
                  "palette_params": {
                    "font": {
                      "type": "Stringa"
                    }
                  }
                },
                "textSize": {
                  "palette_params": {
                    "pixels": {
                      "type": "Numero"
                    }
                  }
                }
              }
            },
            "control": {
              "name": "Controlli",
              "expressions": {
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "description": "Il numero di millisecondi tra ogni esecuzione della funzione."
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "description": "Il numero di millisecondi di attesa prima di eseguire la funzione."
                    }
                  }
                }
              }
            },
            "math": {
              "name": "Matematica",
              "expressions": {
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "value1": {
                      "type": "Numero"
                    },
                    "value2": {
                      "type": "Numero"
                    }
                  }
                },
                "randomNumber": {
                  "palette_params": {
                    "min": {
                      "description": "Il più piccolo numero restituito"
                    },
                    "max": {
                      "description": "Il più grande numero restituito"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "min": {
                      "description": "Il più piccolo numero restituito"
                    },
                    "max": {
                      "description": "Il più grande numero restituito"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "Variabili",
              "expressions": {
                "assign_x": {
                  "short_description": "Assegna il valore ad una variabile esistente. Per esempio, x=0;"
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "La stringa da cercare."
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "La stringa da cercare."
                    }
                  }
                },
                "length": {
                  "return_value": "La lunghezza della corda"
                }
              }
            },
            "functions": {
              "name": "Funzioni"
            }
          }
        },
        "applab": {
          "name": "Sviluppo App",
          "description": "Sviluppo App è un ambiente di programmazione in cui puoi creare semplici applicazioni. Progetta una App, sviluppala usando i blocchi o JavaScript e infine condividila.",
          "categories": {
            "ui_controls": {
              "name": "Controlli UI",
              "expressions": {
                "button": {
                  "short_description": "Crea un pulsante sullo schermo che mostra il testo fornito e a cui fa riferimento l'id dato nella posizione predefinita (0,0)."
                },
                "getProperty": {
                  "palette_params": {
                    "id": {
                      "type": "Stringa"
                    },
                    "property": {
                      "type": "Stringa"
                    }
                  }
                },
                "hideElement": {
                  "content": "## hideElement(id)\n\nNasconde l'elemento con l'id fornito in modo che non venga visualizzato sullo schermo.\n\nGli elementi dell'interfaccia utente posizionati sullo schermo non sono statici. La tua app a volte deve spostarli, ridimensionarli, nasconderli o mostrarli. Tutti gli elementi dell'interfaccia utente (button(), textInput(), textLabel(), dropDown(), checkBox(), radioButton(), image()) possono essere nascosti.",
                  "short_description": "hideElement(id)\nNasconde l'elemento con l'id fornito in modo che non venga visualizzato sullo schermo."
                },
                "onEvent": {
                  "examples": {
                    "Shrink and Grow": {
                      "name": "Rimpicciolisci e ingrandisci"
                    }
                  },
                  "palette_params": {
                    "type": {
                      "type": "Stringa"
                    },
                    "id": {
                      "type": "Stringa"
                    },
                    "callback": {
                      "type": "Funzione"
                    }
                  }
                },
                "playSound": {
                  "examples": {
                    "Making Music": {
                      "name": "Fare musica"
                    }
                  },
                  "palette_params": {
                    "loop": {
                      "type": "Booleano"
                    }
                  },
                  "short_description": "Riproduce il file audio MP3 dall'URL specificato."
                },
                "playSpeech": {
                  "palette_params": {
                    "text": {
                      "type": "Stringa"
                    },
                    "gender": {
                      "type": "Stringa"
                    },
                    "language": {
                      "type": "Stringa"
                    }
                  }
                },
                "rgb": {
                  "palette_params": {
                    "r": {
                      "type": "Numero"
                    },
                    "g": {
                      "type": "Numero"
                    },
                    "b": {
                      "type": "Numero"
                    },
                    "a": {
                      "type": "Numero"
                    }
                  }
                },
                "setProperty": {
                  "palette_params": {
                    "id": {
                      "type": "Stringa"
                    },
                    "property": {
                      "type": "Stringa",
                      "description": "La proprietà da cambiare."
                    }
                  },
                  "short_description": "Imposta una proprietà su un nuovo valore per l'elemento specificato."
                },
                "setScreen": {
                  "short_description": "Imposta lo schermo sullo screenID specificato."
                },
                "showElement": {
                  "short_description": "Mostra l'elemento con l'id fornito."
                },
                "textLabel": {
                  "content": "Crea un'etichetta di testo sullo schermo che mostra il _testo_ fornito e referenziato dal _id_ specificato nella posizione predefinita (0,0).\n\nA volte le tue app avranno bisogno di titoli su uno schermo o di parole accanto ad altri elementi dell'interfaccia utente come pulsanti di opzione, caselle di controllo, input di testo ed elenchi a discesa. Se desideri che l'etichetta di testo attivi anche gli eventi con un elemento dell'interfaccia utente diverso, puoi fare riferimento a quell'id utilizzando il terzo parametro opzionale _forID_.",
                  "short_description": "Crea un'etichetta di testo sullo schermo che mostra il testo fornito e a cui fa riferimento l'id dato nella posizione predefinita (0,0)."
                }
              }
            },
            "canvas": {
              "name": "Tela",
              "expressions": {
                "circle": {
                  "palette_params": {
                    "radius": {
                      "description": "Il raggio del cerchio, in pixel."
                    }
                  }
                },
                "drawImage": {
                  "palette_params": {
                    "id": {
                      "description": "La posizione x in pixel dell'angolo superiore sinistro dell'immagine da disegnare."
                    },
                    "x": {
                      "description": "La posizione x in pixel dell'angolo superiore sinistro dell'immagine da disegnare."
                    },
                    "y": {
                      "description": "La posizione y in pixel dell'angolo superiore sinistro dell'immagine da disegnare."
                    }
                  }
                },
                "getAlpha": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    }
                  },
                  "short_description": "Restituisce la quantità di alfa (opacità) (compresa tra 0 e 255) nel colore del pixel situato nella posizione x e y data nei dati dell'immagine dati."
                },
                "getBlue": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    }
                  }
                },
                "getGreen": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    }
                  }
                },
                "getImageData": {
                  "palette_params": {
                    "x": {
                      "description": "La posizione x in pixel per iniziare l'acquisizione."
                    },
                    "y": {
                      "description": "La posizione y in pixel per iniziare l'acquisizione."
                    },
                    "width": {
                      "description": "La larghezza del rettangolo di delimitazione per acquisire i dati dell'immagine."
                    },
                    "height": {
                      "description": "L'altezza del rettangolo di delimitazione per acquisire i dati dell'immagine."
                    }
                  }
                },
                "getRed": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    }
                  }
                },
                "putImageData": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo in alto a sinistra dell'immagine per posizionare i dati sulla tela."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo in alto a sinistra dell'immagine per posizionare i dati sulla tela."
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "description": "La posizione x in pixel dell'angolo superiore sinistro del rettangolo."
                    },
                    "y": {
                      "description": "La posizione y in pixel dell'angolo superiore sinistro del rettangolo."
                    },
                    "width": {
                      "description": "La larghezza orizzontale in pixel del rettangolo."
                    },
                    "height": {
                      "description": "L'altezza verticale in pixel del rettangolo."
                    }
                  }
                },
                "setAlpha": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "alphaValue": {
                      "description": "La quantità di alfa (opacità) (da 0 a 255) da impostare nel pixel."
                    }
                  },
                  "short_description": "Imposta la quantità di alfa (opacità) (compresa tra 0 e 255) nel colore del pixel situato nella posizione x e y data nei dati dell'immagine dati."
                },
                "setBlue": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "blueValue": {
                      "description": "La quantità di blu (da 0 a 255) da impostare nel pixel."
                    }
                  },
                  "short_description": "Imposta la quantità di blu (compresa tra 0 e 255) nel colore del pixel situato nella posizione x e y data nei dati dell'immagine dati sulla quantità di input BlueValue."
                },
                "setFillColor": {
                  "palette_params": {
                    "color": {
                      "type": "Stringa"
                    }
                  }
                },
                "setGreen": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "greenValue": {
                      "description": "La quantità di verde (da 0 a 255) da impostare nel pixel."
                    }
                  },
                  "short_description": "Imposta la quantità di verde (compresa tra 0 e 255) nel colore del pixel situato nella posizione x e y data nei dati dell'immagine dati sulla quantità di input greenValue."
                },
                "setRGB": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "red": {
                      "description": "La quantità di rosso (da 0 a 255) da impostare nel pixel."
                    },
                    "green": {
                      "description": "La quantità di verde (da 0 a 255) da impostare nel pixel."
                    },
                    "blue": {
                      "description": "La quantità di blu (da 0 a 255) da impostare nel pixel."
                    },
                    "alpha": {
                      "description": "Facoltativo. La quantità di opacità (da 0 a 255) da impostare nel pixel. Il valore predefinito è 255 (opacità completa)."
                    }
                  }
                },
                "setRed": {
                  "palette_params": {
                    "imageData": {
                      "type": "oggetto"
                    },
                    "x": {
                      "description": "La posizione x in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "y": {
                      "description": "La posizione y in pixel a partire dall'angolo superiore sinistro dell'immagine."
                    },
                    "redValue": {
                      "description": "La quantità di rosso (da 0 a 255) da impostare nel pixel."
                    }
                  },
                  "short_description": "Imposta la quantità di rosso (compresa tra 0 e 255) nel colore del pixel situato nella posizione x e y data nei dati dell'immagine dati sulla quantità di input redValue."
                },
                "setStrokeColor": {
                  "palette_params": {
                    "color": {
                      "type": "Stringa"
                    }
                  }
                }
              }
            },
            "data": {
              "name": "Dati",
              "expressions": {
                "createRecord": {
                  "palette_params": {
                    "record": {
                      "type": "oggetto"
                    }
                  }
                },
                "createRecordSync": {
                  "palette_params": {
                    "table": {
                      "type": "Stringa"
                    }
                  }
                },
                "deleteRecord": {
                  "palette_params": {
                    "record": {
                      "type": "oggetto"
                    }
                  }
                },
                "drawChart": {
                  "palette_params": {
                    "options": {
                      "type": "oggetto"
                    }
                  }
                },
                "drawChartFromRecords": {
                  "palette_params": {
                    "tableName": {
                      "description": "Il nome della tabella da cui recuperare i record."
                    },
                    "options": {
                      "type": "oggetto"
                    }
                  }
                },
                "getColumn": {
                  "palette_params": {
                    "table": {
                      "type": "Stringa"
                    },
                    "column": {
                      "type": "Stringa"
                    }
                  }
                },
                "getKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "Il nome della chiave da recuperare."
                    }
                  }
                },
                "getPrediction": {
                  "palette_params": {
                    "name": {
                      "type": "Stringa"
                    },
                    "id": {
                      "type": "Stringa"
                    },
                    "callback": {
                      "type": "Funzione"
                    }
                  }
                },
                "getUserId": {
                  "short_description": "Ottiene un identificatore univoco per l'utente corrente di questa app."
                },
                "onRecordEvent": {
                  "palette_params": {
                    "table": {
                      "description": "Il nome della tabella a cui si applica questo gestore eventi."
                    }
                  }
                },
                "readRecords": {
                  "palette_params": {
                    "terms": {
                      "type": "oggetto"
                    }
                  }
                },
                "readRecordsSync": {
                  "palette_params": {
                    "table": {
                      "type": "Stringa"
                    }
                  }
                },
                "setKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "Il nome della chiave da memorizzare."
                    },
                    "value": {
                      "description": "I dati da archiviare."
                    }
                  },
                  "short_description": "Memorizza una coppia chiave/valore nell'archivio dati chiave/valore di App Lab e chiama la funzione di callback al termine dell'azione."
                },
                "startWebRequest": {
                  "palette_params": {
                    "url": {
                      "description": "L'indirizzo Web di un servizio che restituisce dati."
                    }
                  }
                },
                "updateRecord": {
                  "palette_params": {
                    "record": {
                      "type": "oggetto"
                    }
                  }
                }
              }
            },
            "turtle": {
              "name": "Tartaruga",
              "expressions": {
                "arcLeft": {
                  "short_description": "Sposta la tartaruga in avanti e verso sinistra in un arco circolare e liscio."
                },
                "getX": {
                  "short_description": "Ottiene la coordinata x corrente in pixel della tartaruga."
                },
                "getY": {
                  "short_description": "Ottiene la coordinata y corrente in pixel della tartaruga."
                },
                "hide": {
                  "short_description": "Rende la tartaruga invisibile nella sua posizione attuale."
                },
                "move": {
                  "palette_params": {
                    "x": {
                      "description": "Il numero di pixel per spostare la tartaruga verso destra."
                    },
                    "y": {
                      "description": "Il numero di pixel per spostare la tartaruga verso il basso."
                    }
                  }
                },
                "moveBackward": {
                  "short_description": "Sposta la tartaruga indietro di un determinato numero di pixel dalla direzione corrente."
                },
                "moveForward": {
                  "short_description": "Sposta la tartaruga in avanti di un determinato numero di pixel nella direzione corrente."
                },
                "moveTo": {
                  "short_description": "Sposta la tartaruga in una posizione specifica (x, y) sullo schermo."
                },
                "penColor": {
                  "palette_params": {
                    "color": {
                      "type": "Stringa"
                    }
                  },
                  "short_description": "Imposta il colore della penna usata dalla tartaruga per disegnare linee e punti."
                },
                "penDown": {
                  "short_description": "Abbassa la penna in modo che la tartaruga tracci una linea dietro di essa mentre si muove."
                },
                "penRGB": {
                  "palette_params": {
                    "r": {
                      "type": "Numero"
                    }
                  },
                  "short_description": "Utilizzando i valori RGBA, imposta il colore della penna usata dalla tartaruga per disegnare linee e punti."
                },
                "penUp": {
                  "short_description": "Prende la penna in modo che la tartaruga non tracci una linea mentre si muove."
                },
                "penWidth": {
                  "short_description": "Imposta la larghezza della linea in pixel che la tartaruga traccia dietro di sé mentre si muove."
                },
                "show": {
                  "short_description": "Rende visibile la tartaruga nella sua posizione attuale."
                },
                "speed": {
                  "short_description": "Imposta la velocità di esecuzione dell'app, che include la velocità della tartaruga."
                },
                "turnLeft": {
                  "short_description": "Ruota la tartaruga a sinistra dell'angolo specificato. La posizione della tartaruga rimane la stessa."
                },
                "turnRight": {
                  "short_description": "Ruota la tartaruga verso destra dell'angolo specificato. La posizione della tartaruga rimane la stessa."
                },
                "turnTo": {
                  "short_description": "Cambia la direzione della tartaruga in base a un angolo specifico. 0 è in alto, 90 è a destra, 180 è in basso e 270 è a sinistra."
                }
              }
            },
            "control": {
              "name": "Controlli",
              "expressions": {
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "description": "Il valore restituito dalla funzione setTimeout per annullare."
                    }
                  }
                },
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "description": "Il numero di millisecondi tra ogni esecuzione della funzione."
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "description": "Il numero di millisecondi di attesa prima di eseguire la funzione."
                    }
                  }
                },
                "stopTimedLoop": {
                  "palette_params": {
                    "loop": {
                      "type": "Numero"
                    }
                  }
                },
                "timedLoop": {
                  "palette_params": {
                    "ms": {
                      "type": "Numero"
                    },
                    "callback": {
                      "type": "Funzione"
                    }
                  }
                }
              }
            },
            "math": {
              "name": "Matematica",
              "expressions": {
                "mathPow": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "min": {
                      "description": "Il più piccolo numero restituito"
                    },
                    "max": {
                      "description": "Il più grande numero restituito"
                    }
                  }
                },
                "randomNumber": {
                  "palette_params": {
                    "min": {
                      "description": "Il più piccolo numero restituito"
                    },
                    "max": {
                      "description": "Il più grande numero restituito"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "Variabili",
              "expressions": {
                "declareAssign_list_123": {
                  "short_description": "Dichiarare e assegnare un array a una variabile"
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "La stringa da cercare."
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "La stringa da cercare."
                    }
                  }
                },
                "addPair": {
                  "palette_params": {
                    "key": {
                      "type": "Stringa"
                    }
                  },
                  "return_value": "Nessuno"
                },
                "getValue": {
                  "palette_params": {
                    "key": {
                      "type": "Stringa"
                    }
                  }
                },
                "length": {
                  "return_value": "La lunghezza della corda"
                }
              }
            },
            "functions": {
              "name": "Funzioni"
            },
            "advanced": {
              "name": "Avanzate",
              "expressions": {
                "setStyle": {
                  "palette_params": {
                    "id": {
                      "type": "Stringa"
                    },
                    "css": {
                      "type": "Stringa"
                    }
                  }
                }
              }
            },
            "maker": {
              "name": "Autore",
              "expressions": {
                "pinMode": {
                  "palette_params": {
                    "pin": {
                      "type": "Numero"
                    },
                    "mode": {
                      "type": "Stringa"
                    }
                  }
                }
              }
            },
            "circuit": {
              "name": "Circuito",
              "expressions": {
                "isPressed": {
                  "return_value": "Booleano"
                },
                "buzzer.note": {
                  "examples": {
                    "Circuit Piano ": {
                      "name": "Circuit Piano "
                    }
                  }
                },
                "buzzer.play": {
                  "palette_params": {
                    "tempo": {
                      "type": "Numero"
                    }
                  }
                },
                "buzzer.playNotes": {
                  "palette_params": {
                    "tempo": {
                      "type": "Numero"
                    }
                  }
                },
                "buzzer.playSong": {
                  "palette_params": {
                    "tempo": {
                      "type": "Numero"
                    }
                  }
                },
                "toggleSwitch.isOpen": {
                  "return_value": "Booleano"
                }
              }
            },
            "micro_bit": {
              "expressions": {
                "ledScreen.off": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "ledScreen.on": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                },
                "ledScreen.scrollNumber": {
                  "palette_params": {
                    "number": {
                      "type": "Numero"
                    }
                  }
                },
                "ledScreen.scrollString": {
                  "palette_params": {
                    "String": {
                      "type": "Stringa"
                    }
                  }
                },
                "ledScreen.toggle": {
                  "palette_params": {
                    "x": {
                      "type": "Numero"
                    },
                    "y": {
                      "type": "Numero"
                    }
                  }
                }
              }
            }
          }
        },
        "spritelab": {
          "name": "Laboratorio dei Personaggi",
          "description": "Sprite Lab è un ambiente di programmazione di Blockly in cui puoi creare progetti interattivi.",
          "categories": {
            "sprites": {
              "name": "Personaggi"
            },
            "world": {
              "name": "Ambiente"
            },
            "location": {
              "name": "Posizioni"
            },
            "actions": {
              "name": "Azioni"
            },
            "events": {
              "name": "Eventi"
            },
            "behaviors": {
              "name": "Comportamenti"
            },
            "loops": {
              "name": "Cicli"
            },
            "variables": {
              "name": "Variabili"
            },
            "math": {
              "name": "Matematica"
            },
            "logic": {
              "name": "Logica"
            },
            "functions": {
              "name": "Funzioni"
            },
            "text": {
              "name": "Testo"
            },
            "comments": {
              "name": "Commenti"
            }
          }
        },
        "javalab": {
          "name": "Laboratorio di Java",
          "categories": {
            "java_lab_shortcuts": {
              "name": "Scorciatoie di Java Lab"
            },
            "general": {
              "name": "Basi di Java"
            },
            "org_code_theater": {
              "name": "org.code.theater"
            },
            "org_code_media": {
              "name": "org.code.media"
            },
            "org_code_neighborhood": {
              "name": "org.code.neighborhood"
            },
            "java_io": {
              "name": "java.io"
            },
            "java_util": {
              "name": "java.util"
            },
            "java_lang": {
              "name": "java.lang"
            },
            "control_structures": {
              "name": "Strutture di Controllo"
            },
            "data_structures": {
              "name": "Strutture di Dati"
            }
          }
        }
      }
    }
  }
}