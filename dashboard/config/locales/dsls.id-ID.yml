---
id-ID:
  data:
    dsls:
      2-3 Algorithms Multi 1:
        answers:
        - text: Mulailah dengan sebuah persegi<br/>Letakkan sebuah segitiga di atas
            persegi<br/>Letakkan sebuah segitiga di bawah persegi
          correct: false
        - text: "Start with a square  \nPut a triangle right of square  \nPut a parallelogram
            below square  \nPut triangle right of parallelogram"
          correct: true
        - text: Mulailah dengan sebuah persegi <br/> Letakkan suatu jajar genjang
            di atas persegi <br/> Letakkan sebuah segitiga sebelah kanan jajaran genjang
          correct: false
        - text: Mulailah dengan sebuah persegi <br/> Letakkan segitiga bawah persegi
            <br/> Letakkan genjang sebelah kanan segitiga
          correct: false
        content1: "/script_assets/2-3_images/unplugged/algorithms_1_q.png"
        questions:
        - text: Pilihlah sebuah algoritma untuk gambar berikut.
        title: Pilihan Berganda
      2-3 Algorithms Multi 2:
        answers:
        - text: "/script_assets/2-3_images/unplugged/algorithms_2_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/algorithms_2_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/unplugged/algorithms_2_a3.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/algorithms_2_a4.png"
          correct: false
        content1: Mulailah dengan sebuah segitiga<br/>Letakkan persegi di bawah segitiga<br/>Letakkan
          sebuah segitiga lain di bawah persegi
        questions:
        - text: Gambar manakah yang <em>tidak</em> sesuai dengan algoritma ini?
        title: Pilihan Berganda
      2-3 Big Event Match 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a1.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a2.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a3.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a4.png"
        content1: "/script_assets/k_1_images/unplugged_images/big_event_1_desc.png"
        content2: Pasangkanlah kombinasi tombol untuk gerakan tari.
        questions:
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q1.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q2.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q3.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q4.png"
        title: Mencocokan
      2-3 Binary Match 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/binary_1_a3.png"
        - text: "/script_assets/2-3_images/unplugged/binary_1_a1.png"
        - text: "/script_assets/2-3_images/unplugged/binary_1_a2.png"
        - text: "/script_assets/2-3_images/unplugged/binary_1_a4.png"
        content1: "/script_assets/2-3_images/unplugged/binary_1_q.png, 250"
        content2: Gunakan kunci untuk mencocokkan setiap kode dengan hurufnya
        questions:
        - text: "<strong>N</strong>"
        - text: "<strong>O</strong>"
        - text: "<strong>P</strong>"
        - text: "<strong>Q</strong>"
        title: Mencocokan
      2-3 Conditionals Multi 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/conditionals_1_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/conditionals_1_a2.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/conditionals_1_a3.png"
          correct: true
        - text: "/script_assets/2-3_images/unplugged/conditionals_1_a4.png"
          correct: false
        content1: "/script_assets/2-3_images/unplugged/conditionals_1_q.png"
        questions:
        - text: Sesuai peraturan permainan, kumpulan kartu manakah yang dicetak dengan
            benar?
        teacher_markdown: |
          ## Teachers:

          Students might be operating off of a misconception, and this is a great place to tease that out.  If students think that there is *no* correct answer, then they probably have a misunderstanding around conditionals.

          Here is a video that helps explain what is going on in this question:

          https://youtu.be/TbUaEnAYPjI
        title: Pilihan Berganda
      2-3 Getting Loopy Multi 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/getting_loopy_1_a1.png"
          correct: true
        - text: "/script_assets/2-3_images/unplugged/getting_loopy_1_a2.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/getting_loopy_1_a3.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/getting_loopy_1_a4.png"
          correct: false
        content1: "/script_assets/2-3_images/unplugged/getting_loopy_1_q.png"
        questions:
        - text: Bagaimana Anda akan menyederhanakan urutan ini dengan perulangan?
        title: Pilihan Berganda
      2-3 Graph Paper Match 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_a3.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_a2.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_a1.png"
        content1: Cocokkan grid dengan programnya.
        questions:
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_q1.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_q2.png"
        - text: "/script_assets/2-3_images/unplugged/graph_paper_2_q3.png"
        title: Mencocokan
      2-3 Graph Paper Multi 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/graph_paper_1_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/graph_paper_1_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/unplugged/graph_paper_1_a3.png"
          correct: false
        content1: "/script_assets/2-3_images/unplugged/graph_paper_1_q.png"
        questions:
        - text: Program apakah yang membuat gambar ini?
        title: Pilihan Berganda
      2-3 Maze Match 2:
        answers:
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_a1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_a2.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_a3.png"
        content1: Cocokkan teka-teki pada blok
        questions:
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_q1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_q2.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_2_q3.png"
        title: Pertandingan labirin
      2-3 Maze Multi 2:
        answers:
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_2_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_2_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_2_a3.png"
          correct: false
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_2_a4.png"
          correct: false
        content1: "/script_assets/2-3_images/maze/2-3_maze_multi_2_q.png, 500"
        questions:
        - text: Which set of blocks will get me to the pig?
        title: Pilihan Ganda Labirin
      2-3 Relay Programming Multi 1:
        answers:
        - text: "/script_assets/2-3_images/unplugged/relay_programming_1_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/relay_programming_1_a2.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/relay_programming_1_a3.png"
          correct: true
        content1: "/script_assets/2-3_images/unplugged/relay_programming_1_q.png"
        questions:
        - text: Which program **does not** create this image?
        title: Pilihan Berganda
      2-3 Relay Programming Multi 2:
        answers:
        - text: "/script_assets/2-3_images/unplugged/relay_programming_2_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/relay_programming_2_a2.png"
          correct: false
        - text: "/script_assets/2-3_images/unplugged/relay_programming_2_a3.png"
          correct: true
        questions:
        - text: Combo program-gambar/image-program mana yang tidak mengandung kesalahan?
        title: Pilihan Berganda
      2-3 artist debug multi 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_a3.png"
          correct: false
        - text: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_a4.png"
          correct: false
        content1: "/script_assets/2-3_images/artist/2-3_artistdebug_multi_1_q1.png,
          700"
        questions:
        - text: What would you need to fix to make this a finished circle?
        title: Artist Debugging Multiple Choice 1
      2-3 artist functions multi 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistfunctions_multi_1_a1.png"
          correct: true
        - text: "/script_assets/2-3_images/artist/2-3_artistfunctions_multi_1_a2.png"
          correct: false
        - text: "/script_assets/2-3_images/artist/2-3_artistfunctions_multi_1_a3.png"
          correct: false
        content1: "/script_assets/2-3_images/artist/2-3_artistfunctions_multi_1_q.png,
          500"
        questions:
        - text: Pilihlah blok-blok yang benar untuk menggambar gambar ini dengan fungsi
            yang diberikan
        title: Fungsi Artis Pilihan  Berganda Satu
      2-3 artist loops match 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_a1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_a2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_a3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_a4.png"
        content2: cocokan putaran dengan bentuk
        questions:
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_q1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_q2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_q3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_match_1_q4.png"
        title: Artist Loops Matching 1
      2-3 artist loops multi 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q1.png"
          correct: false
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q2.png"
          correct: false
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q3.png"
          correct: true
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q4.png"
          correct: false
        content1: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_a3.png,
          500"
        questions:
        - text: Bentuk apa yang dibuat oleh putaran ini?
        title: Artis loop pilihan ganda
      2-3 artist loops multi 2:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q1.png"
          correct: false
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q2.png"
          correct: false
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q3.png"
          correct: false
        - text: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_q4.png"
          correct: true
        content1: "/script_assets/2-3_images/artist/2-3_artistloops_multi_1_a4.png,
          500"
        questions:
        - text: Bentuk apa yang dibuat oleh program ini?
        title: Artis loop pilihan ganda
      2-3 artist match 1:
        answers:
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_a1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_a2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_a3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_a4.png"
        content1: Sesuai bentuk dengan blok yang lengkap.
        questions:
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_q1.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_q2.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_q3.png"
        - text: "/script_assets/2-3_images/artist/2-3_artist_match_1_q4.png"
        title: Mencocokan Artis
      2-3 bee conditionals multi 1:
        answers:
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_1_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_1_a2.png"
          correct: false
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_1_a3.png"
          correct: true
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_1_a4.png"
          correct: false
        questions:
        - text: Manakah perbandingan di bawah ini yang benar?
        title: Bee Conditionals Multiple Choice 1
      2-3 bee conditionals multi 3:
        answers:
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_a3.png"
          correct: false
        - text: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_a4.png"
          correct: false
        content1: "/script_assets/2-3_images/bee/2-3_beeconditionals_multi_3_q.png,
          500"
        questions:
        - text: Pilih blok terbaik.
        title: Bee Conditionals Multiple Choice 2
      2-3 bee loops multi 1:
        answers:
        - text: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_a1.png"
          correct: true
        - text: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_a2.png"
          correct: false
        - text: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_a3.png"
          correct: false
        - text: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_a4.png"
          correct: false
        content1: "/script_assets/2-3_images/bee/2-3_beeloops_multi_1_q.png, 500"
        questions:
        - text: Blok manakah yang mengumpulkan semua nektar ?
        title: Lebah Loop Pilihan Berganda Satu
      2-3 maze match 1:
        answers:
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_a1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_a2.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_a3.png"
        content1: Cocokkan teka-teki pada blok
        questions:
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_q1.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_q2.png"
        - text: "/script_assets/2-3_images/maze/2-3_maze_match_1_q3.png"
        title: Labirin Pertandingan Satu
      2-3 maze multi 1:
        answers:
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_1_a1.png"
          correct: false
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_1_a2.png"
          correct: true
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_1_a3.png"
          correct: false
        - text: "/script_assets/2-3_images/maze/2-3_maze_multi_1_a4.png"
          correct: false
        content1: "/script_assets/2-3_images/maze/2-3_maze_multi_1_q.png, 500"
        questions:
        - text: Kumpulan blok mana yang merupakan jawaban yang tepat?
        title: Pilihan Ganda Labirin Satu
      4-5 Algorithms Match 1:
        answers:
        - text: "<h4>Set pemain 1 Skor 0</h4>"
        - text: "<h4>Pemain 1 menggulung mati</h4>"
        - text: "<h4>Tambahkan pemain 1 roll untuk total Skor</h4>"
        - text: "<h4>Bandingkan Skor pemain untuk melihat siapa yang menang</h4>"
        content1: Sesuai langkah-langkah dalam permainan dadu ras dalam urutan dimana
          mereka harus muncul dalam algoritma.
        questions:
        - text: "<h4>1)</h4>"
        - text: "<h4>2)</h4>"
        - text: "<h4>3)</h4>"
        - text: "<h4>4)</h4>"
        title: Mencocokan
      4-5 Algorithms Multi 1:
        answers:
        - text: Menyikat gigi
          correct: false
        - text: Memanggang kue
          correct: false
        - text: Belanja dari daftar belanjaan
          correct: false
        - text: Pisang
          correct: true
        questions:
        - text: item manakah yang paling sulit untuk menjelaskan suatu algoritma ?
        title: Pilihan Berganda
      4-5 Computational Thinking Match 1:
        answers:
        - text: "/script_assets/4-5_images/unplugged/comp_thinking_2_a1.png"
        - text: "/script_assets/4-5_images/unplugged/comp_thinking_2_a2.png"
        - text: "/script_assets/4-5_images/unplugged/comp_thinking_2_a3.png"
        - text: "/script_assets/4-5_images/unplugged/comp_thinking_2_a4.png"
        content1: Masing-masing kendaraan ini telah dibagi menjadi bagian-bagian yang
          lebih kecil. Cocokkan setiap kendaraan dengan daftar bagiannya.
        questions:
        - text: "<h3>Sisi Roda: 2 <br/>Sisi Windows: 0</h3>"
        - text: "<h3>Sisi Roda: 2 <br/>Sisi Windows: 1</h3>"
        - text: "<h3>Sisi Roda: 2 <br/>Sisi Windows: 6</h3>"
        - text: "<h3>Sisi Roda: 3 <br/>Sisi Windows: 2</h3>"
        title: Mencocokan
      4-5 Computational Thinking Multi 1:
        answers:
        - text: Seattle _____ a _____ _____.
          correct: false
        - text: _____adalah sebuah kota _____ .
          correct: true
        - text: _____ adalah _____ _____.
          correct: false
        - text: Eugene adalah kota _____.
          correct: false
        content1: Here are three sentences. Which of the templates below correctly
          abstracts so that all three match the same pattern as the template?
        questions:
        - text: Seattle adalah kota besar. <br/> Eugene adalah kota menengah <br/>
            Hillview adalah sebuah kota kecil.
        title: Pilihan Berganda
      4-5 Crowdsourcing Multi 1:
        answers:
        - text: "/script_assets/4-5_images/unplugged/crowdsourcing_2_a1.png"
          correct: false
        - text: "/script_assets/4-5_images/unplugged/crowdsourcing_2_a2.png"
          correct: true
        questions:
        - text: Manakah dari foto-foto ini yang terbaik merepresentasikan crowdsourcing?
        title: Pilihan Berganda
      4-5 Crowdsourcing Multi 2:
        answers:
        - text: bersihankan kamar Anda
          correct: true
        - text: Makan makanan penutup Anda
          correct: false
        - text: sikat rambut Anda
          correct: false
        - text: Mencuci wajah Anda
          correct: false
        questions:
        - text: Apakah salah satu kegiatan ini akan lebih baik untuk berlatih crowdsourcing?
        title: Pilihan Berganda
      4-5 Digital Footprint Multi 1:
        answers:
        - text: Hari ulang tahun Anda
          correct: false
        - text: Makanan favorit Anda
          correct: true
        - text: Alamat Anda
          correct: false
        - text: nomor kartu kredit Orangtua Anda
          correct: false
        questions:
        - text: Manakah dari Sepotong informasi yang tercantum di bawah ini yang baik
            untuk berbagi di internet?
        title: Pilihan Berganda
      4-5 Internet Multi 1:
        answers:
        - text: 23.23.224.106
          correct: false
        - text: 54.209.61.132
          correct: false
        - text: 64.14.68.10
          correct: false
        - text: 54.243.71.82
          correct: true
        content1: "/script_assets/4-5_images/unplugged/internet_1_q.png"
        questions:
        - text: Ketika Anda mencoba untuk log on ke code.org, alamat IP mana yang
            merupakan DNS yang paling mungkin untuk membawa Anda?
        title: Pilihan Berganda
      4-5 Internet Multi 2:
        answers:
        - text: code.org
          correct: false
        - text: csisfun.com
          correct: true
        - text: thinkersmith.org
          correct: false
        - text: khanacademy.org
          correct: false
        content1: "/script_assets/4-5_images/unplugged/internet_1_q.png"
        questions:
        - text: Jika DNS telah mengirim Anda ke halaman di alamat IP 100.42.50.110,
            situs mana yang sedang Anda masuki?
        title: Pilihan Berganda
      4-5 Songwriting Multi 1:
        answers:
        - text: Lou, Lou, lewati untuk ke Lou saya,
          correct: false
        - text: Lou, Lou, melompat ke saya Lou, <br/> Lou, Lou, melompat ke saya Lou,
            <br/> Lou, Lou, melompat ke saya Lou, <br/> melompat ke saya Lou, Sayang
            Ku.
          correct: true
        - text: "Lou, Lou, skip to my Lou,   \nLou, Lou, skip to my Lou,   \nLou,
            Lou, skip to my Lou,   \nSkip to my Lou, my darlin.\n\nFly's in the buttermilk,
            \  \nShoo, fly, shoo,"
          correct: false
        - text: "Fly's in the buttermilk,   \nShoo, fly, shoo,   \nFly's in the buttermilk,
            \  \nShoo, fly, shoo,   \nFly's in the buttermilk,   \nShoo, fly, shoo,
            \  \nSkip to my Lou, my darlin."
          correct: false
        content1: "/script_assets/4-5_images/unplugged/songwriting_1_q.png"
        questions:
        - text: What is the largest chunk of this song that you can define as the
            chorus so that the chorus repeats exactly each time it is called?
        title: Pilihan Berganda
      4-5 Suncatchers Match 1:
        answers:
        - text: "<h4>STACK</h4>"
        - text: "<h4>STAMP</h4>"
        - text: "<h4>Bintang</h4>"
        - text: "<h4>RAMP</h4>"
        content1: Cocokkan setiap program dengan kata yang dibuat, gunakan kelompok
          keterampilan yang telah disediakan.
        content2: "/script_assets/4-5_images/unplugged/suncatchers_1.png"
        questions:
        - text: "/script_assets/4-5_images/unplugged/suncatchers_1_a1.png"
        - text: "/script_assets/4-5_images/unplugged/suncatchers_1_a2.png"
        - text: "/script_assets/4-5_images/unplugged/suncatchers_1_a3.png"
        - text: "/script_assets/4-5_images/unplugged/suncatchers_1_a4.png"
        title: Mencocokan
      4-5 Suncatchers Multi 1:
        answers:
        - text: "/script_assets/4-5_images/unplugged/suncatchers_2_a1.png"
          correct: false
        - text: "/script_assets/4-5_images/unplugged/suncatchers_2_a2.png"
          correct: true
        - text: "/script_assets/4-5_images/unplugged/suncatchers_2_a3.png"
          correct: false
        content1: "/script_assets/4-5_images/unplugged/suncatchers_2_q.png"
        questions:
        - text: program yang manakah di bawah ini yang <em>tidak</em> membuat urutan
            yang persis sama seperti Program 1?
        title: Pilihan Berganda
      4-5 artist loops multi 1:
        answers:
        - text: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_a1.png"
          correct: false
        - text: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_a2.png"
          correct: true
        - text: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_a3.png"
          correct: false
        - text: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_a4.png"
          correct: false
        content1: "/script_assets/4-5_images/artist/4-5_artistloops_multi_1_q.png,
          500"
        questions:
        - text: Blok-blok manakah yang akan membuat bentuk itu?
        title: Artis loop pilihan ganda
      4-5 artist multi 1:
        answers:
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_1_a1.png"
          correct: false
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_1_a2.png"
          correct: true
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_1_a3.png"
          correct: false
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_1_a4.png"
          correct: false
        questions:
        - text: Blok manakah yang menggambar persegi panjang dengan keliling 100?
        title: Artis pilihan ganda
      4-5 artist multi 2:
        answers:
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_2_a1.png"
          correct: false
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_2_a2.png"
          correct: false
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_2_a3.png"
          correct: true
        - text: "/script_assets/4-5_images/artist/4-5_artist_multi_2_a4.png"
          correct: false
        questions:
        - text: Gambar manakah yang simetris?
        title: Artis pilihan ganda
      4-5 bee conditionals multi 1:
        answers:
        - text: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_a1.png"
          correct: false
        - text: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_a2.png"
          correct: false
        - text: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_a3.png"
          correct: true
        - text: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_a4.png"
          correct: false
        content1: "/script_assets/4-5_images/bee/4-5_beeconditionals_multi_1_q.png"
        content2: A purple flower may have either 3, 2 or 1 nectars, but you don't
          know how many. Which blocks correctly check and collect all of the nectar
          from a purple flower?
        questions:
        - text: Pilih blok terbaik.
        title: Kondisional Lebah Pilihan Berganda
      4-5 bee debug multi 1:
        answers:
        - text: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_a2.png"
          correct: false
        - text: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_a3.png"
          correct: true
        - text: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_a1.png"
          correct: false
        - text: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_a4.png"
          correct: false
        content1: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_q1.png"
        content2: "/script_assets/4-5_images/bee/4-5_beedebug_multi_1_q2.png"
        questions:
        - text: Versi dari fungsi manakah yang dapat berjalan?
        title: Lebah Debug Pilihan Berganda
      4-5 bee loops multi 1:
        answers:
        - text: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_a1.png"
          correct: true
        - text: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_a2.png"
          correct: false
        - text: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_a3.png"
          correct: false
        - text: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_a4.png"
          correct: false
        content1: "/script_assets/4-5_images/bee/4-5_beeloops_multi_1_q.png"
        questions:
        - text: Blok manakah yang dapat menyelesaikan teka-teki tersebut?
        title: Loop Lebah Pilihan Berganda
      4-5 maze conditionals multi 1:
        answers:
        - text: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_a1.png"
          correct: true
        - text: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_a2.png"
          correct: false
        - text: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_a3.png"
          correct: false
        - text: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_a4.png"
          correct: false
        content1: "/script_assets/4-5_images/maze/4-5_mazeconditionals_multi_1_q.png,
          500"
        questions:
        - text: Blok manakah yang dapat menyelesaikan teka-teki tersebut?
        title: Kondisional Labirin Pilihan Berganda
      4-5 maze match 1:
        answers:
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_a1.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_a2.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_a3.png"
        content1: Cocokkan teka-teki pada blok
        questions:
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_q1.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_q2.png"
        - text: "/script_assets/4-5_images/maze/4-5_maze_match_1_q3.png"
        title: Pertandingan labirin
      4-5 maze multi 1:
        answers:
        - text: "/script_assets/4-5_images/maze/4-5_maze_multi_1_a1.png"
          correct: true
        - text: "/script_assets/4-5_images/maze/4-5_maze_multi_1_a2.png"
          correct: false
        - text: "/script_assets/4-5_images/maze/4-5_maze_multi_1_a3.png"
          correct: false
        - text: "/script_assets/4-5_images/maze/4-5_maze_multi_1_a4.png"
          correct: false
        content1: "/script_assets/4-5_images/maze/4-5_maze_multi_1_q.png, 500"
        questions:
        - text: Blok manakah yang dapat menyelesaikan teka-teki tersebut?
        title: Pilihan Ganda Labirin
      Begin planning your project:
        content1: deskripsi di sini
        markdown: "#Proses Desain\nMendesain perangkat lunak berarti menyelesaikan
          banyak masalah kecil, setiap waktu. Masalah utama dalam desain perangkat
          lunak adalah hal yang harus dibuat di tempat pertama.\n\nProses ini berguna
          untuk semua jenis hal, tetapi kami akan fokus menggunakannya untuk desain
          aplikasi.\n\n<!-- Terjemahkan istilah \"Tentukan\", \"Siapkan\", \"Coba\",
          \"Renungkan\" serta ubah ukuran dan pemosisian huruf sesuai kebutuhan-->\n<gaya
          div=\"posisi: relatif; perataan teks: tengah; ukuran huruf: 1em\">\n  <img
          src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\"
          alt=\"Proses Desain\" gaya=\"lebar: 50%;\">\n  <gaya div=\"posisi: mutlak;
          atas: 24%; kiri: 49.8%; mengubah: translateX(-49.8%); lebar huruf: tebal;\">Tentukan</div>
          \n  <gaya div=\"posisi: mutlak; atas: 52%; kiri: 61%; mengubah: translateX(-61%);
          lebar huruf: tebal;\">Siapkan</div>\n  <gaya div=\"posisi: mutlak; atas:
          79%; kiri: 49.8%; mengubah: translateX(-49.8%); lebar huruf: tebal;\">Coba</div>\n
          \ <gaya div=\"posisi: mutlak; atas: 52%; kiri: 39%; mengubah: translateX(-39%);
          lebar huruf: tebal;\">Renungkan</div>\n</div>\n\n* **Tentukan**\n  *Aplikasi
          apa yang ingin Anda buat?\n  *Apa kendala Anda?\n  *Seperti apakah kesuksesan
          itu?\n* **Siapkan**\n  *Unsur curah gagasan/penelitian yang mungkin ada\n
          \ *Bandingkan pro dan kontra\n  *Buat rencana\n* **Coba**\n  *Laksanakan
          rencana Anda ke dalam tindakan\n* **Renungkan**\n  *Bagaimana hasil Anda
          dibandingkan dengan tujuan yang Anda tetapkan ketika menentukan aplikasi?\n
          \ *Apa yang dapat Anda pelajari dari ini atau lakukan lebih baik lain kali?\n
          \ *Masalah baru apa yang Anda temukan?\n\n#Seperti Apa Rupanya\nSelama beberapa
          minggu ke depan, Anda akan memiliki kesempatan untuk bereksperimen dengan
          beberapa permainan yang ada dan merancang permainan Anda sendiri berdasarkan
          hal yang telah Anda pelajari. Setelah membuat permainan Anda, Anda akan
          mendapatkan kesempatan untuk menyajikannya kepada orang lain dan menerima
          masukan. Semua langkah ini sangat penting dalam industri perangkat lunak,
          dan mempraktikkan unsur proses desain akan membantu Anda menciptakan produk
          yang lebih baik secara lebih efisien.  \n\nInilah yang akan diadakan dalam
          minggu-minggu mendatang ketika kita mempelajari lebih lanjut tentang proses
          desain:\n\n1. **Tentukan & Siapkan**\n   *Mainkan permainan yang ada untuk
          mendapatkan gagasan dan memahami batasan\n   *Lakukan curah gagasan dan
          rencanakan aplikasi baru atau modifikasi Anda\n1. **Coba**\n   *Ikuti rencana
          Anda untuk membuat aplikasi\n1. **Renungkan & Sunting**\n   *Tukar aplikasi
          dengan grup lain untuk membantu menjadikan proyek Anda lebih baik\n1. **Sajikan**\n
          \  * Pamerkan produk akhir Anda!\n"
      Begin planning your project_2018:
        content1: deskripsi di sini
        markdown: "#Proses Desain\nMendesain perangkat lunak berarti menyelesaikan
          banyak masalah kecil, setiap waktu. Masalah utama dalam desain perangkat
          lunak adalah hal yang harus dibuat di tempat pertama.\n\nProses ini berguna
          untuk semua jenis hal, tetapi kami akan fokus menggunakannya untuk desain
          aplikasi.\n\n<!-- Terjemahkan istilah \"Tentukan\", \"Siapkan\", \"Coba\",
          \"Renungkan\" serta ubah ukuran dan pemosisian huruf sesuai kebutuhan-->\n<gaya
          div=\"posisi: relatif; perataan teks: tengah; ukuran huruf: 1em\">\n  <img
          src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\"
          alt=\"Proses Desain\" gaya=\"lebar: 50%;\">\n  <gaya div=\"posisi: mutlak;
          atas: 24%; kiri: 49.8%; mengubah: translateX(-49.8%); lebar huruf: tebal;\">Tentukan</div>
          \n  <gaya div=\"posisi: mutlak; atas: 52%; kiri: 61%; mengubah: translateX(-61%);
          lebar huruf: tebal;\">Siapkan</div>\n  <gaya div=\"posisi: mutlak; atas:
          79%; kiri: 49.8%; mengubah: translateX(-49.8%); lebar huruf: tebal;\">Coba</div>\n
          \ <gaya div=\"posisi: mutlak; atas: 52%; kiri: 39%; mengubah: translateX(-39%);
          lebar huruf: tebal;\">Renungkan</div>\n</div>\n\n* **Tentukan**\n  *Aplikasi
          apa yang ingin Anda buat?\n  *Apa kendala Anda?\n  *Seperti apakah kesuksesan
          itu?\n* **Siapkan**\n  *Unsur curah gagasan/penelitian yang mungkin ada\n
          \ *Bandingkan pro dan kontra\n  *Buat rencana\n* **Coba**\n  *Laksanakan
          rencana Anda ke dalam tindakan\n* **Renungkan**\n  *Bagaimana hasil Anda
          dibandingkan dengan tujuan yang Anda tetapkan ketika menentukan aplikasi?\n
          \ *Apa yang dapat Anda pelajari dari ini atau lakukan lebih baik lain kali?\n
          \ *Masalah baru apa yang Anda temukan?\n\n#Seperti Apa Rupanya\nSelama beberapa
          minggu ke depan, Anda akan memiliki kesempatan untuk bereksperimen dengan
          beberapa permainan yang ada dan merancang permainan Anda sendiri berdasarkan
          hal yang telah Anda pelajari. Setelah membuat permainan Anda, Anda akan
          mendapatkan kesempatan untuk menyajikannya kepada orang lain dan menerima
          masukan. Semua langkah ini sangat penting dalam industri perangkat lunak,
          dan mempraktikkan unsur proses desain akan membantu Anda menciptakan produk
          yang lebih baik secara lebih efisien.  \n\nInilah yang akan diadakan dalam
          minggu-minggu mendatang ketika kita mempelajari lebih lanjut tentang proses
          desain:\n\n1. **Tentukan & Siapkan**\n   *Mainkan permainan yang ada untuk
          mendapatkan gagasan dan memahami batasan\n   *Lakukan curah gagasan dan
          rencanakan aplikasi baru atau modifikasi Anda\n1. **Coba**\n   *Ikuti rencana
          Anda untuk membuat aplikasi\n1. **Renungkan & Sunting**\n   *Tukar aplikasi
          dengan grup lain untuk membantu menjadikan proyek Anda lebih baik\n1. **Sajikan**\n
          \  * Pamerkan produk akhir Anda!\n"
      Begin planning your project_2018_2019:
        content1: deskripsi di sini
        markdown: |+
          #Contoh Proyek

          Anda akan memulai tugas akhir Anda. Sebelum Anda mulai, luangkan waktu untuk melihat contoh proyek.

          | Tupai Lapar | Kisah Orang Asing |
          |---|---|
          | [![Tupai Lapar (Play Lab)](https://images.code.org/3fda61d18026d6661dccf4b09baea111-image-1565115158327.PNG "Hungry Squirrel (Play Lab")](https://studio.code.org/projects/playlab/HN1zAX4Om6zdsxVsBBug9Y8mlzKSWUAXhjzRl-64YRs/view) | [![Alien Story (Play Lab)](https://images.code.org/0bd5ed3674ac9fe3304e27e68974c35f-image-1565115240833.PNG "Alien Story (Play Lab")](https://studio.code.org/projects/playlab/I_8rcKtpLFRAn8flROC15Oc-KnDu-bkKBnSORoIDs0o/view) |
          | Coba tambahkan suara ke permainan ini! | Coba tambahkan adegan lain ke kisah ini! |

      BigEvent-Unplugged:
        markdown: |
          # The Big Event

          Dalam ilmu komputer, peristiwa adalah tindakan yang dipantau oleh komputer. Dalam pelajaran ini, Anda akan bereaksi secara berbeda bergantung pada tombol yang ditekan.
      BinaryBracelets-Unplugged:
        markdown: |
          #Gelang Berpasangan

          Buat gelang yang mewakili nama Anda dalam sistem yang dimengerti komputer!

          ![](https://images.code.org/ed15a484276c0989e4adb5daf480f68a-image-1557870226222.png)
      BinaryImages-Unplugged:
        markdown: |
          "#Gambar Berpasangan

          Komunikasikan cara membuat ulang gambar hanya menggunakan dua nilai sederhana."
      Building a UI with Design Mode:
        markdown: |
          # Welcome to App Lab Design Mode
          In App Lab "Design Mode" lets you drag and drop User Interface elements into the app.

          ### Vocabulary
          **User Interface (UI)** - The "User Interface" or **UI** of an app refers to how a person (user) interacts with the computer or app.  There are common patterns to user interfaces that you probably know about just from experience:

          * **UI Elements** or objects, like buttons, images, text boxes, pull down menus, screens and so on.
          * **UI Events** or controls, like *click*, *scroll*, *move mouse*, *type keyboard key*, etc.

          App Lab let's you easily add UI Elements to your app, and then add code to respond when a user interacts with those elements.  It's kind of two-step process, but we'll learn all about it in this lesson.

          To start let's just look at Design Mode and add a single UI element (a button) to our app.  We'll add code later on.

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          You'll see a new set of switches above the app area that let you flip back and forth between "Design Mode" and Code Mode".</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>Adding an element is as easy as dragging and dropping it into the app where ever you want. Once it's on the app screen you can reposition it, resize it and change lots of other properties about it </p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>The <em>Properties</em> tab shows you everything you can change about the look and feel of a UI element.</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>The <strong>element ID</strong> is important because it's how you refer to the element in your code. We'll discuss element IDs later on.</p>
          </div>

          ![](https://images.code.org/01a31ac3be66deb6d01a92a1edfffd21-image-1476726587662.png)


          <div style="column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 66%; float: right">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>You can make the text that the user sees on the button text be whatever you like.</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">6.</span><strong>Note:</strong> Scroll down to see other properties for a UI element might be "hiding" down below.</p>
          </div>

          <div style="clear: both"></div>
          <hr>

          **Now you try!**
        teacher_markdown: |
          ### Design First

          Some students may be tempted to start playing around in Code Mode early on, but for this lesson we are going to focus solely on mocking up a User Interface. Let students know that they'll get to the code soon enough. These first few levels will allow students to build up a screen of their own design using all of the elements available in App Lab without worrying about the actual app they are creating.
      CSD - Getters and Setters:
        markdown: "# Getters and Setters\n\n# Setters\n\nSetters are commands which
          **set** or change information. Setters all require at least one thing as
          input : what it wants to change the information to.\n\nYou have used `setScreen()`
          before.  `setScreen()` changes the screen that the user is viewing. The
          one input `setScreen()` takes is the new screen to change to.\n\nAnother
          example of a setter that you will be using is `setText()`.\n\n<img src=\"//curriculum.code.org/images/applab/setText.png\"
          style=\"margin: 20px auto\">\n\n# Getters\n\nGetters are commands which
          **get** or retrieve information. Getters often require at least one input:
          the place you want to retrieve information from.\n\n`getText()` is a common
          getter you will use. It can be used to get the text from something like
          a text input. \n\n<img src=\"//curriculum.code.org/images/applab/getText.png\"
          style=\"margin: 20px auto\">\n\nOften when you use a getter it is a good
          idea to save the result in a variable so that you can use it throughout
          your program.\n"
      CSD Header Size MC:
        answers:
        - text: https://images.code.org/a4e973cc13db380ca1e1efeb4263974f-image-1473432905067.53.47
            AM.png
          correct: false
        - text: https://images.code.org/1c660b4e54a3e835250597cb261d8e17-image-1473432905068.54.08
            AM.png
          correct: true
        - text: https://images.code.org/22e9ae6a04afd8251b29939a6fa63411-image-1473432905069.54.25
            AM.png
          correct: false
        - text: https://images.code.org/0eee565202089d44a6bb5633603c45e0-image-1473432905069.54.50
            AM.png
          correct: false
        content1: Look at the code below and predict how the headings will be displayed.
          Choose from one of the options on the right.
        markdown: |
          <pre>
          &lt;h3&gt; Eggs &lt;/h3&gt;
          &lt;h1&gt; Bacon &lt;/h1&gt;
          &lt;h6&gt; Waffles &lt;/h6&gt;
          </pre>
        teacher_markdown: |2
           <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/Screen-Shot-2017-04-27-at-10.38.03-AM.png" style="width:200px; float:right">

          **Level Types:** This multiple choice question that asks students to choose how HTML headings will display on a web page. You can see which students have answered the question correctly by going to that level and pulling out the Teacher Panel from the right hand side.  Students who have successfully answered the question will have a green bubble.  Students have as many chances as they like to answer correctly, so guessing and checking can also lead to a correct answer.

          <div class="clear"></div>
        title: Headings Quick Check
      CSD Header Size MC_2018:
        answers:
        - text: https://images.code.org/a4e973cc13db380ca1e1efeb4263974f-image-1473432905067.53.47
            AM.png
          correct: false
        - text: https://images.code.org/1c660b4e54a3e835250597cb261d8e17-image-1473432905068.54.08
            AM.png
          correct: true
        - text: https://images.code.org/22e9ae6a04afd8251b29939a6fa63411-image-1473432905069.54.25
            AM.png
          correct: false
        - text: https://images.code.org/0eee565202089d44a6bb5633603c45e0-image-1473432905069.54.50
            AM.png
          correct: false
        content1: Look at the code below and predict how the headings will be displayed.
          Choose from one of the options on the right.
        markdown: |
          <pre>
          &lt;h3&gt; Eggs &lt;/h3&gt;
          &lt;h1&gt; Bacon &lt;/h1&gt;
          &lt;h6&gt; Waffles &lt;/h6&gt;
          </pre>
        teacher_markdown: |2
           <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/Screen-Shot-2017-04-27-at-10.38.03-AM.png" style="width:200px; float:right">

          **Level Types:** This multiple choice question that asks students to choose how HTML headings will display on a web page. You can see which students have answered the question correctly by going to that level and pulling out the Teacher Panel from the right hand side.  Students who have successfully answered the question will have a green bubble.  Students have as many chances as they like to answer correctly, so guessing and checking can also lead to a correct answer.

          <div class="clear"></div>
        title: Headings Quick Check
      CSD Header Size MC_2018_2019:
        answers:
        - text: https://images.code.org/a4e973cc13db380ca1e1efeb4263974f-image-1473432905067.53.47
            AM.png
          correct: false
        - text: https://images.code.org/1c660b4e54a3e835250597cb261d8e17-image-1473432905068.54.08
            AM.png
          correct: true
        - text: https://images.code.org/22e9ae6a04afd8251b29939a6fa63411-image-1473432905069.54.25
            AM.png
          correct: false
        - text: https://images.code.org/0eee565202089d44a6bb5633603c45e0-image-1473432905069.54.50
            AM.png
          correct: false
        content1: Look at the code below and predict how the headings will be displayed.
          Choose from one of the options on the right.
        markdown: |
          <pre>
          &lt;h3&gt; Eggs &lt;/h3&gt;
          &lt;h1&gt; Bacon &lt;/h1&gt;
          &lt;h6&gt; Waffles &lt;/h6&gt;
          </pre>
        teacher_markdown: |
          <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/Screen-Shot-2017-04-27-at-10.38.03-AM.png" style="width:200px; float:right">

          **Level Types:** This multiple choice question that asks students to choose how HTML headings will display on a web page. You can see which students have answered the question correctly by going to that level and pulling out the Teacher Panel from the right hand side.  Students who have successfully answered the question will have a green bubble.  Students have as many chances as they like to answer correctly, so guessing and checking can also lead to a correct answer.

          <div class="clear"></div>
        title: Headings Quick Check
      CSD U1 Lesson 5 Overview:
        markdown: |
          # Overview

          In this lesson you'll learn about the different types of input and output devices used by computers and the types of information they send and receive.

          ## Vocabulary

          * **Input** - A device or component that allows information to be given to a computer
          * **Output** - Any device or component that receives information from a computer


          ## Resources

          * [Input and Output - Activity Guide](https://docs.google.com/document/d/1ObS_kxkXoueaotPYFAEkcCDzn690zumqoLLnrU5kY2Q/export?format=pdf)
        teacher_markdown: "[Input and Output - Exemplar](https://docs.google.com/document/d/1WbKCLz7VgLOJCHFcz8cnxFi4ibEXhBZYQEsDidEi8XY/edit?usp=sharing)
          - Activity Guide ([PDF](https://docs.google.com/document/d/1WbKCLz7VgLOJCHFcz8cnxFi4ibEXhBZYQEsDidEi8XY/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1WbKCLz7VgLOJCHFcz8cnxFi4ibEXhBZYQEsDidEi8XY/export?format=doc))\n\n"
      CSD U1 Lesson 6 Overview:
        markdown: |
          # Overview

          In this lesson you'll learn how processing is used by humans and computers to turn inputs into outputs.

          ## Vocabulary

          * **Algorithm** - A precise sequence of instructions for processes that can be executed by a computer

          ## Resources

          * [Card Sorting Algorithm - Activity Guide](https://docs.google.com/document/d/1o4kVRnXnigufkS9WsjHjeD38f8MQrX6qCEFpka-F9Oo/export?format=pdf)
        teacher_markdown: "* [Card Sorting Algorithm](https://docs.google.com/document/d/1AYEKnN1uYMfmv1eJrck5tniOJDM4Ib2eEdRPkFzeEZk/edit?usp=sharing)
          - Exemplar ([PDF](https://docs.google.com/document/d/1AYEKnN1uYMfmv1eJrck5tniOJDM4Ib2eEdRPkFzeEZk/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1AYEKnN1uYMfmv1eJrck5tniOJDM4Ib2eEdRPkFzeEZk/export?format=doc))\n"
      CSD U1 Lesson 7 Overview:
        markdown: |
          # Overview

          In this lesson you'll learn about the kinds of information computers store and how storage is a critical part of processing information.

          ## Resources

          * [Storage and Processing - Activity Guide](https://docs.google.com/document/d/1I-OzbJizf7m5DK5jfRxDtSYtc_SoSk6vGtSM9tqlGw0/export?format=pdf)
        teacher_markdown: "* [Storage and Processing - Exemplar](https://docs.google.com/a/code.org/document/d/1cuFrtoxPSBjr04-Js73CC4IYOZ6AQDetGAdxCtnknFY/edit?usp=sharing)
          - Activity Guide ([PDF](https://docs.google.com/document/d/1cuFrtoxPSBjr04-Js73CC4IYOZ6AQDetGAdxCtnknFY/export?format=pdf)
          | [DOCX](https://docs.google.com/a/code.org/document/d/1cuFrtoxPSBjr04-Js73CC4IYOZ6AQDetGAdxCtnknFY/edit?usp=sharing))\n"
      CSD U1 Lesson 8 Overview:
        markdown: |
          # Overview

          In this lesson you will explore the ways apps process different kinds of information in order to solve problems.

          ## Resources

          * [App Exploration - Activity Guide](https://docs.google.com/document/d/1OW-fkwA7xeNZWiduWescL-6a6zFigtJVP7hfL1oNgVA/export?format=pdf)
        teacher_markdown: "* [App Exploration KEY](https://docs.google.com/document/d/126VyRZ5PdNnycmdSs_Us7tNRJyAiQvM8R1aeB8USUzA/edit)
          - Activity Guide ([PDF](https://docs.google.com/document/d/126VyRZ5PdNnycmdSs_Us7tNRJyAiQvM8R1aeB8USUzA/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/126VyRZ5PdNnycmdSs_Us7tNRJyAiQvM8R1aeB8USUzA/export?format=doc)\n"
      CSD U1 Lesson 9 Overview:
        markdown: |
          # Overview

          For this project you will design your own app that solves a problem that you get to define.

          ## Resources

          * [Apps and Problem Solving - Project Guide](https://docs.google.com/document/d/1S7X-B2V1-WuT7ZLk1LAZRO1O5f4u7pgth4F7G00tGak/export?format=pdf)
          * [Apps and Problem Solving - Peer Review](https://docs.google.com/document/d/13ekhJvtz1vovS6FhGBeDf1mcYFRyJe65bQdi8S8T9lU/export?format=pdf)
          * [Apps and Problem Solving - Rubric](https://docs.google.com/document/d/1ix0LfgiVglwyC5Bb6PBlfBrnbeCOz2wPIPTgXu-qMZE/export?format=pdf)
        teacher_markdown: |+
          * [Apps and Problem Solving](https://docs.google.com/document/d/1m8a9nnCGCriSvzWUr5Bh7Siod2iu2FdFQtMEz4TONuc/edit) - Project Guide Exemplar ([PDF](https://docs.google.com/document/d/1m8a9nnCGCriSvzWUr5Bh7Siod2iu2FdFQtMEz4TONuc/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1m8a9nnCGCriSvzWUr5Bh7Siod2iu2FdFQtMEz4TONuc/export?format=doc))
          * [Apps and Problem Solving](https://docs.google.com/document/d/1hm5wWoVqDhFHbs4MfN0gcAnskZ5a6a5KdO7N3Y0GLoA/edit) - Peer Review Exemplar ([PDF](https://docs.google.com/document/d/1hm5wWoVqDhFHbs4MfN0gcAnskZ5a6a5KdO7N3Y0GLoA/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1hm5wWoVqDhFHbs4MfN0gcAnskZ5a6a5KdO7N3Y0GLoA/export?format=doc))


      CSD U2 Design Project:
        content1: deskripsi di sini
        markdown: |+
          # Start Your Page

          It's time to create your personal web page!  You'll get to choose the content that you will share with the world.

          ## Define

          Your assignment is to make a web page using the HTML you have learned.  The web page should have at least **two headings of different sizes**, and it should **use paragraphs**, too.

          ## Prepare

          Before you start to code your web page, you need to have a plan.  Use the ideas that you wrote down a couple lessons ago, and decide what this page will be about.  You'll have a chance to make other pages later.

          Draw a sketch of your web page, including headings and paragraphs that it includes. Show your sketch to your partner and explain which tags you will use for the different parts of the page.  You can look at the previous levels if you've forgotten what the different tags are, or ask your partner for help.

          If you've sketched something you haven't learned how to code yet, you can save it for later.

          ## Try

          Use the HTML you've learned to create your page.  You can ask a partner to help you if you get stuck, but **you are the driver** for your own web page, meaning you should be typing in all the code yourself.

          ## Reflect

          Once you have finished your web page, compare it to your sketch to make sure you didn't forget anything.  Ask your partner to look, too, and think about any feedback you get and whether you want to make changes to your page.


        teacher_markdown: |
          # Personal Website Project

          This level kicks off the personal website project that students will continue working on throughout the unit. You can require them to show you a journal sketch before getting back on Code Studio, or let them decide for themselves when they are ready.

          Students who finish early can be encouraged to add new content to the page or revise the content that they have.
      CSD U2 Design Project_2018:
        content1: deskripsi di sini
        markdown: |+
          # Start Your Page

          It's time to create your personal web page!  You'll get to choose the content that you will share with the world.

          ## Define

          Your assignment is to make a web page using the HTML you have learned.  The web page should have at least **two headings of different sizes**, and it should **use paragraphs**, too.

          ## Prepare

          Before you start to code your web page, you need to have a plan.  Use the ideas that you wrote down a couple lessons ago, and decide what this page will be about.  You'll have a chance to make other pages later.

          Draw a sketch of your web page, including headings and paragraphs that it includes. Show your sketch to your partner and explain which tags you will use for the different parts of the page.  You can look at the previous levels if you've forgotten what the different tags are, or ask your partner for help.

          If you've sketched something you haven't learned how to code yet, you can save it for later.

          ## Try

          Use the HTML you've learned to create your page.  You can ask a partner to help you if you get stuck, but **you are the driver** for your own web page, meaning you should be typing in all the code yourself.

          ## Reflect

          Once you have finished your web page, compare it to your sketch to make sure you didn't forget anything.  Ask your partner to look, too, and think about any feedback you get and whether you want to make changes to your page.


        teacher_markdown: |
          # Personal Website Project

          This level kicks off the personal website project that students will continue working on throughout the unit. You can require them to show you a journal sketch before getting back on Code Studio, or let them decide for themselves when they are ready.

          Students who finish early can be encouraged to add new content to the page or revise the content that they have.
      CSD U2 Design Project_2018_2019:
        content1: deskripsi di sini
        markdown: |+
          # Start Your Page

          It's time to create your personal web page!  You'll get to choose the content that you will share with the world.

          ## Define

          Your assignment is to make a web page using the HTML you have learned.  The web page should have at least **two headings of different sizes**, and it should **use paragraphs**, too.

          ## Prepare

          Before you start to code your web page, you need to have a plan.  Use the ideas that you wrote down a couple lessons ago, and decide what this page will be about.  You'll have a chance to make other pages later.

          Draw a sketch of your web page, including headings and paragraphs that it includes. Show your sketch to your partner and explain which tags you will use for the different parts of the page.  You can look at the previous levels if you've forgotten what the different tags are, or ask your partner for help.

          If you've sketched something you haven't learned how to code yet, you can save it for later.

          ## Try

          Use the HTML you've learned to create your page.  You can ask a partner to help you if you get stuck, but **you are the driver** for your own web page, meaning you should be typing in all the code yourself.

          ## Reflect

          Once you have finished your web page, compare it to your sketch to make sure you didn't forget anything.  Ask your partner to look, too, and think about any feedback you get and whether you want to make changes to your page.


        teacher_markdown: |
          # Personal Website Project

          This level kicks off the personal website project that students will continue working on throughout the unit. You can require them to show you a journal sketch before getting back on Code Studio, or let them decide for themselves when they are ready.

          Students who finish early can be encouraged to add new content to the page or revise the content that they have.
      CSD U2 Expression Exemplars:
        markdown: |
          # Personal Website Exemplars

          Click the websites below to check out personal websites other students have made.

          <a href="https://codeprojects.org/SYRw7CQJzSmAErCEF-mMXQ" target="_blank"><img src="https://images.code.org/25b7284a4cd3d26f9b989a5c3bba6485-image-1493760609250.29.54 PM.png" style="width:200px;float:left"></a>

          <a href="https://codeprojects.org/y6u1W372PZh2MfzxwHQBKA" target="_blank"><img src="https://images.code.org/5929f61d14370a72e2e3b77c1948d5ed-image-1493943243592.13.32 PM.png" style="width:200px;float:left"></a>
      CSD U2 Expression Exemplars_2018:
        markdown: |
          # Personal Website Exemplars

          Click the websites below to check out personal websites other students have made.

          <a href="https://codeprojects.org/SYRw7CQJzSmAErCEF-mMXQ" target="_blank"><img src="https://images.code.org/25b7284a4cd3d26f9b989a5c3bba6485-image-1493760609250.29.54 PM.png" style="width:200px;float:left"></a>

          <a href="https://codeprojects.org/y6u1W372PZh2MfzxwHQBKA" target="_blank"><img src="https://images.code.org/5929f61d14370a72e2e3b77c1948d5ed-image-1493943243592.13.32 PM.png" style="width:200px;float:left"></a>
      CSD U2 Expression Exemplars_2018_2019:
        markdown: |
          # Personal Website Exemplars

          Click the websites below to check out personal websites other students have made.

          <a href="https://codeprojects.org/SYRw7CQJzSmAErCEF-mMXQ" target="_blank"><img src="https://images.code.org/25b7284a4cd3d26f9b989a5c3bba6485-image-1493760609250.29.54 PM.png" style="width:200px;float:left"></a>

          <a href="https://codeprojects.org/y6u1W372PZh2MfzxwHQBKA" target="_blank"><img src="https://images.code.org/5929f61d14370a72e2e3b77c1948d5ed-image-1493943243592.13.32 PM.png" style="width:200px;float:left"></a>
      CSD U2 L1 Overview:
        content1: deskripsi di sini
        markdown: |
          # Overview

          This lesson covers the purposes that a website might serve, both for the users and the creators. The class explores a handful of the most-used websites in the United States and discusses how each of those sites is useful for users and how it might also serve its creators.
          ## Vocabulary

          * **Website** - A location connected to the Internet that maintains one or more pages on the World Wide Web.


          ## Resources

          * [The Purpose of Websites - Activity Guide](https://docs.google.com/document/d/16M-x8qNr0tdpfoHqyKo4sdbTzFOy5rKp8IBYmTQ7xkU/export?format=pdf)
        teacher_markdown: "* [The Purpose of Websites - Exemplar](https://docs.google.com/document/d/1wgsW8XNLrXeelcoMLLjp0kVgiJ-pnBivrvfcyL06b-A/edit)([PDF](https://docs.google.com/document/d/1wgsW8XNLrXeelcoMLLjp0kVgiJ-pnBivrvfcyL06b-A/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1wgsW8XNLrXeelcoMLLjp0kVgiJ-pnBivrvfcyL06b-A/export?format=doc))\n"
      CSD U2 L12 Overview:
        markdown: |
          # Overview

          After first completing a web search scavenger hunt, the class learns about the inner workings of search engines and has an opportunity to flex their analytical skills in a search for strange and unlikely animals.
          ## Vocabulary

          * **Algorithm** - A precise sequence of instructions for processes that can be executed by a computer
          * **Relevant** - closely connected or appropriate to the matter at hand.
          * **Search Engine** - A program that searches for and identifies items in a database that correspond to keywords or characters specified by the user, used especially for finding particular sites on the World Wide Web.
          * **Trustworthy** - able to be relied on as honest or truthful.


          ## Resources

          * [Internet Scavenger Hunt - Activity Guide](https://docs.google.com/document/d/14sOf5YZ5iTvB0jzlm7X-18HE6S_KEG3IcrsFHN7OeCk/export?format=pdf)
          * [Strange Yet True Animals - Activity Guide](https://docs.google.com/document/d/1t7gmFWj0fneGzJbPRHk0eq3hz-kRQ_xwnVbKwdL3tEw/export?format=pdf)
        teacher_markdown: "[Strange Yet True Animals - Key](https://docs.google.com/document/d/1PbQj738TPvNuncdLCggl38Dol6lL42AJGBwhEl19QBE/edit)
          ([PDF](https://docs.google.com/document/d/1PbQj738TPvNuncdLCggl38Dol6lL42AJGBwhEl19QBE/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1PbQj738TPvNuncdLCggl38Dol6lL42AJGBwhEl19QBE/export?format=doc))\n"
      CSD U2 L2 Overview:
        content1: deskripsi di sini
        markdown: "# Overview\n\nThis lesson introduces websites as a means of personal
          expression.  The class first discusses different ways that people express
          and share their interests and ideas, then looks at a few exemplar websites
          made by students from a previous course. Finally everyone brainstorms and
          shares a list of topics and interests to include, creating a resource for
          developing a personal website in the rest of the unit. \n## Vocabulary\n\n*
          **Website Content** - The raw text, images, and other elements included
          in a web page\n\n\n## Resources\n\n* [Personal Website Sketch - Activity
          Guide](https://docs.google.com/document/d/1wnK0ntxFWvUyuEB6SksiTtUDqrEhZZn3VPLWynz-fV4/export?format=pdf)\n"
        teacher_markdown: "* [Personal Website Sketch](https://docs.google.com/document/d/10zHN3SErzKQLNEvr8e0j2UVjPCR5oSQdrfoFpbZbJiU/edit?usp=sharing)
          - Exemplar ([PDF](https://docs.google.com/document/d/10zHN3SErzKQLNEvr8e0j2UVjPCR5oSQdrfoFpbZbJiU/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/10zHN3SErzKQLNEvr8e0j2UVjPCR5oSQdrfoFpbZbJiU/export?format=doc))\n"
      CSD U2 L3 Overview:
        content1: deskripsi di sini
        markdown: |
          # Overview

          This lesson introduces to HTML as a solution to the problem of how to communicate both the content and structure of a website to a computer. The lesson begins with a brief unplugged activity demonstrating the challenges of effectively communicating the structure of a web page. The class looks at an HTML page in Web Lab and discusses how HTML tags help solve this problem, then uses HTML to write the first web pages of the unit.
          ## Vocabulary

          * **HTML** - Hypertext Markup Language, a language used to create web pages
          * **HTML Element** - A piece of a website, marked by a start tag and sometimes closed with an end tag
          * **HTML Tag** - The special set of characters that indicates the start and end of an HTML element and that element's type
          * **Website Content** - The raw text, images, and other elements included in a web page
          * **Website Structure** - The purpose of different pieces of content in a web page, used to help the computer determine how that content should be displayed

          ## Introduced Code

          * **[HTML](//studio.code.org/docs/weblab/html/)** - `<html></html>`
          * **[Doctype](//studio.code.org/docs/weblab/doctype/)** - `<!DOCTYPE>`
          * **[Paragraph](//studio.code.org/docs/weblab/P/)** - `<p></p>`
          * **[Body](//studio.code.org/docs/weblab/body/)** - `<body></body>`
          * **[Head](//studio.code.org/docs/weblab/head/)** - `<head></head>`
      CSD U2 L4 Overview:
        content1: deskripsi di sini
        markdown: |+
          # Overview

          This lesson continues the introduction to HTML tags, this time with headings.  The class practices using heading tags to create page and section titles and learns how the different heading elements are displayed by default.  Next, the class plans how to organize content on the personal web pages that will be built across the unit and begins the first page of the project.
          ## Vocabulary

          * **Heading** - A title or summary for a document or section of a document.

          ## Introduced Code

          *  **[Heading](//studio.code.org/docs/weblab/h/)** - `<h1></h1>`

      CSD U2 L5 Overview:
        content1: deskripsi di sini
        markdown: |
          # Overview

          This lesson takes a step back from creating the personal website to talk about personal information people choose to share digitally.  The class begins by discussing what types of information are good to share with other people, then looks at several sample social media pages to see what types of personal information could be shared intentionally or unintentionally.  Finally, the class comes up with a set of guidelines to follow when putting information online.
          ## Vocabulary

          * **Digital Footprint** - The collected information about an individual across multiple websites on the Internet.


          ## Resources

          * [When Does Your Privacy Matter? - Activity Guide](https://docs.google.com/document/d/1SmCceDGntI-rJI40dTR7rA0Tfa0cH1OQoRNNxPEmXG0/export?format=pdf)
          * [Social Sleuth - Activity Guide](https://docs.google.com/document/d/1A9q31rwrBA7tZZcZ3KZqjMb30UncM-eycwMvYgj9os4/export?format=pdf)
        teacher_markdown: |+
          * [When Does Your Privacy Matter?](https://docs.google.com/document/d/1Lv8C4QK9HhPXguPoD6ygaaTs4a7YxMefaKojb_W5rLg/edit) - Activity Guide Exemplar ([PDF](https://docs.google.com/document/d/1Lv8C4QK9HhPXguPoD6ygaaTs4a7YxMefaKojb_W5rLg/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1Lv8C4QK9HhPXguPoD6ygaaTs4a7YxMefaKojb_W5rLg/export?format=doc))
          * [Social Sleuth](https://docs.google.com/document/d/1wbHlcYanBasUsIYjyCX6NytORAZxac-R0xSSOVU-DNA/) - Activity Guide ([PDF](https://docs.google.com/document/d/1wbHlcYanBasUsIYjyCX6NytORAZxac-R0xSSOVU-DNA/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1wbHlcYanBasUsIYjyCX6NytORAZxac-R0xSSOVU-DNA/export?format=doc))

      CSD U2 L6 Overview:
        content1: deskripsi di sini
        markdown: |+
          # Overview

          This lesson introduces ordered and unordered lists and the associated  &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; HTML tags.  The class practices using the tags, then goes back to the personal web page project to add a new HTML page that includes the new tags.

          ## Introduced Code


          *  **[Unordered List](//studio.code.org/docs/weblab/ul/)** - `<ul></ul>`
          *  **[List Item](//studio.code.org/docs/weblab/li/)** - `<li></li>`
          *  **[Ordered List](//studio.code.org/docs/weblab/ol/)** - `<ol></ol>`

      CSD U2 L7 Overview:
        markdown: |
          # Overview

          This lesson covers how to use content created by others on a website while respecting the rights of the original creator of that content. After first studying Creative Commons licensing, the class learns how to add images to web pages and give proper attribution when doing so.

          ## Vocabulary

          * **Citation** - A quotation from or reference to a book, paper, or author, especially in a scholarly work.
          * **Copyright** - the exclusive legal right, given to an originator or an assignee to print, publish, perform, film, or record literary, artistic, or musical material, and to authorize others to do the same.
          * **Creative Commons** - A public copyright licenses that enable the free distribution of an otherwise copyrighted work. A CC license is used when an author wants to give people the right to share, use, and build upon a work that they have created.
          * **Intellectual Property** - A work or invention that is the result of creativity, such as a manuscript or a design, to which one has rights and for which one may apply for a patent, copyright, trademark, etc.

          ## Introduced Code

          *  **[Image](//studio.code.org/docs/weblab/img/)** - `<img />`

          ## Resources

          * [Creative Commons Overview](https://www.youtube.com/watch?v=HKfqoPYJdVc) - Video
          * [Licensing Your Work - Activity Guide](https://docs.google.com/document/d/1twenNK2xrjc4bhIXuKfMXFA2yocLsR7MK8ZPvi-HckI/export?format=pdf)
        teacher_markdown: "* [Licensing Your Work - Activity Guide Exemplar](https://docs.google.com/document/d/1NaoTAfCTdaMZ-CPlK3ii7gqvK674d320tPvQyz-2t9o/export?format=pdf)\n"
      CSD U2 Lesson 6 Overview:
        content1: deskripsi di sini
        markdown: |
          # Overview

          In this lesson covers common issues that arise when designing web pages in HTML. The class will correct errors in a sequence of increasingly complex web pages found on Code Studio and learn the importance of comments, whitespace, and indentation as tools for making web pages easier to read.
          ## Vocabulary

          * **Bug** - Part of a program that does not work correctly.
          * **Comment** - A comment is a programmer-readable note in the source code of a computer program.
          * **Debugging** - Finding and fixing problems in your algorithm or program.
          * **Indentation** - The placement of text farther to the right, or left, to separate it from surrounding text which helps to convey the program's structure.
          * **Whitespace** - Whitespace refers to any character that shows up as a blank space on the screen, such as a space, a tab, or a new line. Whitespace helps separate different parts of the document to make it easier to read.

          ## Introduced Code

          *  **[Comment](//studio.code.org/docs/weblab/comment/)** - `<!-- -->`
      CSD U2 Lesson 9 Overview:
        markdown: "# Overview\n\nThis lesson covers hyperlinks, which allow web developers
          to connect pages together into one website.  The class will link together
          all the previous pages into one project, and create navigation bars for
          each page before publishing the entire site to the Web.  \n## Vocabulary\n\n*
          **Hyperlink** - A link from a HTML file to another location or file, typically
          activated by clicking on a highlighted word or image on the screen.\n\n##
          Introduced Code\n\n*  **[Hyperlink](//studio.code.org/docs/weblab/A/)**
          - `<a></a>`\n\n## Resources\n\n* [Personal Website - Project Guide](https://docs.google.com/document/d/1sPdFBq1nrwG9742tu3sXQ93xWbCWmNdCgo0dv3eYfXY/export?format=pdf)\n*
          [Personal Website - Peer Review](https://docs.google.com/document/d/1B5QXF0ASAy3vHcFQilQo3Q3J3GiiuQxBxnZFg8WDYaw/export?format=pdf)\n*
          [Personal Web Site - Rubric](https://docs.google.com/document/d/16ddR5r96qvv_Ti5gWN-AcjvCx0-SP6B7shSp-caKuDI/export?format=pdf)\n"
        teacher_markdown: |+
          * [Personal Website](https://docs.google.com/document/d/1mPwjeBMewyblcHU1fGLQD-og5f2U-cBwYduBG55TgIY/edit) - Project Guide Exemplar ([PDF](https://docs.google.com/document/d/1mPwjeBMewyblcHU1fGLQD-og5f2U-cBwYduBG55TgIY/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1mPwjeBMewyblcHU1fGLQD-og5f2U-cBwYduBG55TgIY/export?format=doc))
          * [Personal Website](https://docs.google.com/document/d/1OXAJvxuygTJyfvSUnrajhEbC34O_J26VQswwPsfnLZw/edit) - Peer Review Exemplar ([PDF](https://docs.google.com/document/d/1OXAJvxuygTJyfvSUnrajhEbC34O_J26VQswwPsfnLZw/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1OXAJvxuygTJyfvSUnrajhEbC34O_J26VQswwPsfnLZw/export?format=doc))



      CSD U2 PSP Programming:
        markdown: |+
          # The Problem Solving Process for Programming

          ## Define
          <img src="https://images.code.org/4684a4cd531d3750d2a11051f6e0729f-image-1493396308445.png" style="float:right; width: 250px;">

          * Read the instructions carefully to ensure you understand the goals
          * Rephrase the problem in your own words
          * Identify any new skills you are being asked to apply
          * Look for other problems you've solved that are similar to this one
          * If there is starter code, read it to understand what it does

          ## Prepare
          * Write out an idea in plain English or pseudocode
          * Sketch out your idea on paper
          * List what you already know how to do and what you don't yet
          * Describe your idea to a classmate
          * Review similar programs that you've written in the past

          ## Try
          * Write one small piece at a time
          * Test your program often
          * Use comments to document what your code does
          * Apply appropriate debugging strategies
          * Go back to previous steps if you get stuck or don't know whether you've solved the problem

          ## Reflect
          * Compare your finished program to the defined problem to make sure you've solved all aspects of the problem
          * Ask a classmate to try your program and note places where they struggle or exhibit confusion
          * Ask a classmate to read your code to make sure that your documentation is clear and accurate
          * Try to "break" your program to find types of interactions or input that you could handle better
          * Identify a few incremental changes that you could make in the next iteration


        teacher_markdown: |
          # Review the Problem Solving Process

          Review the four steps of the Problem Solving Process as a class.
      CSD U2 PSP Programming_2018:
        markdown: |+
          # The Problem Solving Process for Programming

          ## Define
          <img src="https://images.code.org/4684a4cd531d3750d2a11051f6e0729f-image-1493396308445.png" style="float:right; width: 250px;">

          * Read the instructions carefully to ensure you understand the goals
          * Rephrase the problem in your own words
          * Identify any new skills you are being asked to apply
          * Look for other problems you've solved that are similar to this one
          * If there is starter code, read it to understand what it does

          ## Prepare
          * Write out an idea in plain English or pseudocode
          * Sketch out your idea on paper
          * List what you already know how to do and what you don't yet
          * Describe your idea to a classmate
          * Review similar programs that you've written in the past

          ## Try
          * Write one small piece at a time
          * Test your program often
          * Use comments to document what your code does
          * Apply appropriate debugging strategies
          * Go back to previous steps if you get stuck or don't know whether you've solved the problem

          ## Reflect
          * Compare your finished program to the defined problem to make sure you've solved all aspects of the problem
          * Ask a classmate to try your program and note places where they struggle or exhibit confusion
          * Ask a classmate to read your code to make sure that your documentation is clear and accurate
          * Try to "break" your program to find types of interactions or input that you could handle better
          * Identify a few incremental changes that you could make in the next iteration


        teacher_markdown: |
          # Review the Problem Solving Process

          Review the four steps of the Problem Solving Process as a class.
      CSD U2 PSP Programming_2018_2019:
        markdown: |+
          # The Problem Solving Process for Programming

          ## Define
          <img src="https://images.code.org/4684a4cd531d3750d2a11051f6e0729f-image-1493396308445.png" style="float:right; width: 250px;">

          * Read the instructions carefully to ensure you understand the goals
          * Rephrase the problem in your own words
          * Identify any new skills you are being asked to apply
          * Look for other problems you've solved that are similar to this one
          * If there is starter code, read it to understand what it does

          ## Prepare
          * Write out an idea in plain English or pseudocode
          * Sketch out your idea on paper
          * List what you already know how to do and what you don't yet
          * Describe your idea to a classmate
          * Review similar programs that you've written in the past

          ## Try
          * Write one small piece at a time
          * Test your program often
          * Use comments to document what your code does
          * Apply appropriate debugging strategies
          * Go back to previous steps if you get stuck or don't know whether you've solved the problem

          ## Reflect
          * Compare your finished program to the defined problem to make sure you've solved all aspects of the problem
          * Ask a classmate to try your program and note places where they struggle or exhibit confusion
          * Ask a classmate to read your code to make sure that your documentation is clear and accurate
          * Try to "break" your program to find types of interactions or input that you could handle better
          * Identify a few incremental changes that you could make in the next iteration


        teacher_markdown: |
          # Review the Problem Solving Process

          Review the four steps of the Problem Solving Process as a class.
      CSD U2 Top Websites:
        markdown: |
          # Top Websites in the US

          The following are the most frequently visited websites in the United States. Each includes a brief description of the website's core function.


          1. Google.com - Search engine for websites, pictures, videos, and other media
          2. Youtube.com - User-submitted video site with ratings and comments
          3. Facebook.com - Social media community that allows users to share information with friends
          4. Amazon.com - Online shopping sites for all kinds of goods
          4. Yahoo.com - A search engine, email provider, and news source
          5. Wikipedia.org - A free encyclopedia with content generated by users
      CSD U2 Top Websites_2018:
        markdown: |
          # Top Websites in the US

          The following are some of the most frequently visited websites in the United States. Each includes a brief description of the website's core function.


          * Google.com - Search engine for websites, pictures, videos, and other media
          * Youtube.com - User-submitted video site with ratings and comments
          * Facebook.com - Social media community that allows users to share information with friends
          * Amazon.com - Online shopping sites for all kinds of goods
          * Yahoo.com - A search engine, email provider, and news source
          * Wikipedia.org - A free encyclopedia with content generated by users
      CSD U2 Top Websites_2018_2019:
        markdown: |
          # Top Websites in the US

          The following are some of the most frequently visited websites in the United States. Each includes a brief description of the website's core function.


          * Google.com - Search engine for websites, pictures, videos, and other media
          * Youtube.com - User-submitted video site with ratings and comments
          * Facebook.com - Social media community that allows users to share information with friends
          * Amazon.com - Online shopping sites for all kinds of goods
          * Yahoo.com - A search engine, email provider, and news source
          * Wikipedia.org - A free encyclopedia with content generated by users
      CSD U2 expand project:
        content1: deskripsi di sini
        markdown: |
          # Expanding Your Website

          In the next level, you'll be expanding your website by adding a second page.  You will discuss your plan with your partner, but you'll be working on your own site.

          You'll need to do three things in the next level.

          1. Create a new page.
          2. Name the new page.
          3. Put content on the new page.

          The new page you add should include:

          * at least one list
          * at least one heading

          Before you start coding, you should have a plan for what you want the website to be about.  Here are some ideas. You can click on each page to see a full size version.

          | Recipe |  Fun Fact List | How to Guide |
          |---------|--------------|--------------|
          | [![](https://images.code.org/fbfd4e89f4b1514845c203550c59bbd1-image-1493419989564.48.07 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/recipe.html) |[![](https://images.code.org/8780832b11e2149848bf944acaf0cd6a-image-1493419989562.47.46 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/candy.html) | [![](https://images.code.org/9cff12744e7036498821e7d59b21f2ba-image-1493419989560.29.25 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/juggle.html) |
        teacher_markdown: 'These instructions for expanding the students'' websites
          can be shown on the board so that you can go over them as a class.  Click
          through to show the students the sample web pages.

'
      CSD U2 expand project_2018:
        content1: deskripsi di sini
        markdown: |
          # Expanding Your Website

          In the next level, you'll be expanding your website by adding a second page.  You will discuss your plan with your partner, but you'll be working on your own site.

          You'll need to do three things in the next level.

          1. Create a new page.
          2. Name the new page.
          3. Put content on the new page.

          The new page you add should include:

          * at least one list
          * at least one heading

          Before you start coding, you should have a plan for what you want the website to be about.  Here are some ideas. You can click on each page to see a full size version.

          | Recipe |  Fun Fact List | How to Guide |
          |---------|--------------|--------------|
          | [![](https://images.code.org/fbfd4e89f4b1514845c203550c59bbd1-image-1493419989564.48.07 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/recipe.html) |[![](https://images.code.org/8780832b11e2149848bf944acaf0cd6a-image-1493419989562.47.46 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/candy.html) | [![](https://images.code.org/9cff12744e7036498821e7d59b21f2ba-image-1493419989560.29.25 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/juggle.html) |
        teacher_markdown: 'These instructions for expanding the students'' websites
          can be shown on the board so that you can go over them as a class.  Click
          through to show the students the sample web pages.

'
      CSD U2 expand project_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # Expanding Your Website

          In the next level, you'll be expanding your website by adding a second page.  You will discuss your plan with your partner, but you'll be working on your own site.

          You'll need to do three things in the next level.

          1. Create a new page.
          2. Name the new page.
          3. Put content on the new page.

          The new page you add should include:

          * at least one list
          * at least one heading

          Before you start coding, you should have a plan for what you want the website to be about.  Here are some ideas. You can click on each page to see a full size version.

          | Recipe |  Fun Fact List | How to Guide |
          |---------|--------------|--------------|
          | [![](https://images.code.org/fbfd4e89f4b1514845c203550c59bbd1-image-1493419989564.48.07 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/recipe.html) |[![](https://images.code.org/8780832b11e2149848bf944acaf0cd6a-image-1493419989562.47.46 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/candy.html) | [![](https://images.code.org/9cff12744e7036498821e7d59b21f2ba-image-1493419989560.29.25 PM.png)](https://codeprojects.org/rAljwuo4xh2h0bSjxqVdtw/juggle.html) |
        teacher_markdown: 'These instructions for expanding the students'' websites
          can be shown on the board so that you can go over them as a class.  Click
          through to show the students the sample web pages.

'
      CSD U2 image debug match:
        answers:
        - text: https://images.code.org/6015fb13fa76d32072de2762d7d363ba-image-1553717013288.02.34
            PM.png
        - text: https://images.code.org/555e64ae1a9a586d902f1ed254e4e00c-image-1553717003484.03.01
            PM.png
        - text: https://images.code.org/e3b9be5444661a34eefe9bfa89e94cbc-image-1553717006899.02.47
            PM.png
        - text: https://images.code.org/0ffde880f790f497b2aaef29f40272f4-image-1553717010350.02.40
            PM.png
        - text: https://images.code.org/a86b628a71ae0415fe48dfd8a19ee69a-image-1553717016038.02.24
            PM.png
        content1: Match the buggy HTML code with the description of its bug.
        questions:
        - text: The `src` attribute is spelled incorrectly.
        - text: The `src` and `alt` attributes are switched
        - text: The file extension (.jpg) is missing from the image address
        - text: The image address is not given as a `src` attribute
        - text: There is a space in the file name
        teacher_markdown: 'Although this level can be used to assess student understanding
          of the syntax of the `<img>` tag, its main purpose is to make students aware
          of the most common types of bugs they may encounter when adding images to
          web pages.

'
      CSD U2 lists match:
        answers:
        - text: https://images.code.org/c77491ea22b3b977383bfd2ca3655df1-image-1493336218041.31.27
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/d3be2ba9f4a398277f9663bbd5fdf783-image-1493336218042.31.59
            PM.png
        - text: https://images.code.org/1bbd9b340b51a295760f8daa4714cf84-image-1493336218035.32.21
            PM.png
        - text: https://images.code.org/72bbedfd40904b68f2020af0676e0c3a-image-1493399020395.02.32
            AM.png
        content1: Match the list to the code that makes it.
        markdown: " *Hint: Some of the HTML lists have errors, so you'll have to think
          about what mistakes in the code are causing the errors.*\n\n"
        questions:
        - text: https://images.code.org/b7b998dd12e507d163d7dac0fcd37b8c-image-1493336218044.31.41
            PM.png
        - text: https://images.code.org/d9af5a34631dee994f99750f48f52b66-image-1493336218042.50.24
            PM.png
        - text: https://images.code.org/63b9f044db7dfa10d0486920e982f217-image-1493336218039.32.08
            PM.png
        - text: https://images.code.org/17bf31d6521c45f56301f6224732e514-image-1493336218041.32.29
            PM.png
        - text: https://images.code.org/50e0264011243637e12e4972d573d278-image-1493399022792.02.38
            AM.png
        title: Lists Quick Check
      CSD U2 lists match_2018:
        answers:
        - text: https://images.code.org/c77491ea22b3b977383bfd2ca3655df1-image-1493336218041.31.27
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/d3be2ba9f4a398277f9663bbd5fdf783-image-1493336218042.31.59
            PM.png
        - text: https://images.code.org/1bbd9b340b51a295760f8daa4714cf84-image-1493336218035.32.21
            PM.png
        - text: https://images.code.org/72bbedfd40904b68f2020af0676e0c3a-image-1493399020395.02.32
            AM.png
        content1: Match the list to the code that makes it.
        markdown: " *Hint: Some of the HTML lists have errors, so you'll have to think
          about what mistakes in the code are causing the errors.*\n\n"
        questions:
        - text: https://images.code.org/b7b998dd12e507d163d7dac0fcd37b8c-image-1493336218044.31.41
            PM.png
        - text: https://images.code.org/d9af5a34631dee994f99750f48f52b66-image-1493336218042.50.24
            PM.png
        - text: https://images.code.org/63b9f044db7dfa10d0486920e982f217-image-1493336218039.32.08
            PM.png
        - text: https://images.code.org/17bf31d6521c45f56301f6224732e514-image-1493336218041.32.29
            PM.png
        - text: https://images.code.org/50e0264011243637e12e4972d573d278-image-1493399022792.02.38
            AM.png
        title: Lists Quick Check
      CSD U2 lists match_2018_2019:
        answers:
        - text: https://images.code.org/c77491ea22b3b977383bfd2ca3655df1-image-1493336218041.31.27
            PM.png
        - text: https://images.code.org/9007a23e2767b57e84ffad78675faf6a-image-1493336218044.50.09
            PM.png
        - text: https://images.code.org/d3be2ba9f4a398277f9663bbd5fdf783-image-1493336218042.31.59
            PM.png
        - text: https://images.code.org/1bbd9b340b51a295760f8daa4714cf84-image-1493336218035.32.21
            PM.png
        - text: https://images.code.org/72bbedfd40904b68f2020af0676e0c3a-image-1493399020395.02.32
            AM.png
        content1: Match the list to the code that makes it.
        markdown: " *Hint: Some of the HTML lists have errors, so you'll have to think
          about what mistakes in the code are causing the errors.*\n\n"
        questions:
        - text: https://images.code.org/b7b998dd12e507d163d7dac0fcd37b8c-image-1493336218044.31.41
            PM.png
        - text: https://images.code.org/d9af5a34631dee994f99750f48f52b66-image-1493336218042.50.24
            PM.png
        - text: https://images.code.org/63b9f044db7dfa10d0486920e982f217-image-1493336218039.32.08
            PM.png
        - text: https://images.code.org/17bf31d6521c45f56301f6224732e514-image-1493336218041.32.29
            PM.png
        - text: https://images.code.org/50e0264011243637e12e4972d573d278-image-1493399022792.02.38
            AM.png
        title: Lists Quick Check
      CSD U2 project guide:
        content1: deskripsi di sini
        markdown: |
          # Your Personal Website

          In the next few levels, you'll be completing and publishing your personal website.

          You've already done a lot of work on your website, but this is your chance to get creative and add a new page of something that you care about.

          Here are some ideas for your new page, but you can do anything approved by your teacher.

          * A movie, television, or book review
          * Description of a favorite holiday tradition
          * A "cause" page that explains an issue that is important to you

          If you have more than one idea, you can add multiple pages to your site.

          Your Project Guide will help you remember everything you need to do.  Make sure you have your teacher's approval before moving to the next level.

          ## Examples

          [![](https://images.code.org/77ab5eb6cbec8541f8ec83134fbb2e2d-image-1494627985387.24.43 PM.png)](https://codeprojects.org/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/2e39e80cb5227d908426184019fd6b70-image-1494631930884.23.49 PM.png)](https://codeprojects.org/OhiVQD7XXnijdjNp2yFaIB5fyNDwsp9ymYo7gvEy8qg/)
        teacher_markdown: |
          # Planning Checkpoint

          Check over student plans before allowing them to continue on the rest of the levels.
      CSD U2 project guide_2018:
        content1: deskripsi di sini
        markdown: |
          # Your Personal Website

          In the next few levels, you'll be completing and publishing your personal website.

          You've already done a lot of work on your website, but this is your chance to get creative and add a new page of something that you care about.

          Here are some ideas for your new page, but you can do anything approved by your teacher.

          * A movie, television, or book review
          * Description of a favorite holiday tradition
          * A "cause" page that explains an issue that is important to you

          If you have more than one idea, you can add multiple pages to your site.

          Your Project Guide will help you remember everything you need to do.  Make sure you have your teacher's approval before moving to the next level.

          ## Examples

          [![](https://images.code.org/77ab5eb6cbec8541f8ec83134fbb2e2d-image-1494627985387.24.43 PM.png)](https://codeprojects.org/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/2e39e80cb5227d908426184019fd6b70-image-1494631930884.23.49 PM.png)](https://codeprojects.org/OhiVQD7XXnijdjNp2yFaIB5fyNDwsp9ymYo7gvEy8qg/)
        teacher_markdown: |
          # Planning Checkpoint

          Check over student plans before allowing them to continue on the rest of the levels.
      CSD U2 project guide_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # Your Personal Website

          In the next few levels, you'll be completing and publishing your personal website.

          You've already done a lot of work on your website, but this is your chance to get creative and add a new page of something that you care about.

          Here are some ideas for your new page, but you can do anything approved by your teacher.

          * A movie, television, or book review
          * Description of a favorite holiday tradition
          * A "cause" page that explains an issue that is important to you

          If you have more than one idea, you can add multiple pages to your site.

          Your Project Guide will help you remember everything you need to do.  Make sure you have your teacher's approval before moving to the next level.

          ## Examples

          [![](https://images.code.org/77ab5eb6cbec8541f8ec83134fbb2e2d-image-1494627985387.24.43 PM.png)](https://codeprojects.org/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/2e39e80cb5227d908426184019fd6b70-image-1494631930884.23.49 PM.png)](https://codeprojects.org/OhiVQD7XXnijdjNp2yFaIB5fyNDwsp9ymYo7gvEy8qg/)
        teacher_markdown: |
          # Planning Checkpoint

          Check over student plans before allowing them to continue on the rest of the levels.
      CSD U3 - conditionals - Matching:
        answers:
        - text: dog.rotation &lt; cat.rotation
        - text: dog.x &lt; cat.x
        - text: dog.scale &gt; cat.scale
        - text: dog.x &gt; cat.x
        - text: dog.x == cat.x
        content1: Match the boolean expression to the English description.
        questions:
        - text: Is the dog sprite's rotation less than the cat sprite's rotation?
        - text: Is the dog sprite's x less than the cat sprite's x?
        - text: Is the dog sprite's scale greater than the cat sprite's scale?
        - text: Is the dog sprite's x greater than the cat sprite's x?
        - text: Is the dog sprite's x equal to the cat sprite's x?
        title: 'Matching: Comparison Operators'
      CSD U3 - conditionals - Matching_2018:
        answers:
        - text: dog.rotation &lt; cat.rotation
        - text: dog.x &lt; cat.x
        - text: dog.scale &gt; cat.scale
        - text: dog.x &gt; cat.x
        - text: dog.x == cat.x
        content1: Match the boolean expression to the English description.
        questions:
        - text: Is the dog sprite's rotation less than the cat sprite's rotation?
        - text: Is the dog sprite's x less than the cat sprite's x?
        - text: Is the dog sprite's scale greater than the cat sprite's scale?
        - text: Is the dog sprite's x greater than the cat sprite's x?
        - text: Is the dog sprite's x equal to the cat sprite's x?
        title: 'Matching: Comparison Operators'
      CSD U3 - conditionals - Matching_2018_2019:
        answers:
        - text: dog.rotation &lt; cat.rotation
        - text: dog.x &lt; cat.x
        - text: dog.scale &gt; cat.scale
        - text: dog.x &gt; cat.x
        - text: dog.x == cat.x
        content1: Match the boolean expression to the English description.
        questions:
        - text: Is the dog sprite's rotation less than the cat sprite's rotation?
        - text: Is the dog sprite's x less than the cat sprite's x?
        - text: Is the dog sprite's scale greater than the cat sprite's scale?
        - text: Is the dog sprite's x greater than the cat sprite's x?
        - text: Is the dog sprite's x equal to the cat sprite's x?
        title: 'Matching: Comparison Operators'
      CSD U3 AnimationsMulti STOP project guide:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD U3 AnimationsMulti STOP project guide_2018:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD U3 AnimationsMulti STOP project guide_2018_2019:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD U3 Boolean MC:
        answers:
        - text: "true  \nfalse  \ntrue"
          correct: true
        - text: "0  \n200  \n100"
          correct: false
        - text: "true  \nerror  \ntrue"
          correct: false
        - text: "false  \ntrue  \nfalse"
          correct: false
        markdown: |
          # Boolean Expressions

          Decision-making on computers are based on statements called **boolean expressions**. A boolean expression is **any expression that can only evaluate to either `TRUE` or `FALSE`**. This can be particularly useful when used to compare the properties of two sprites. For example, you could figure out which one is larger or placed higher up. In the next few puzzles we'll use simple boolean expressions to compare sprite properties.

          # Predict

          Read the code below. There are some new symbols in it which you haven't been introduced to. Take a guess at what they mean and try to answer the following question
        questions:
        - text: Which result will be printed in the console by this program?
        title: judul
      CSD U3 Boolean MC_2018:
        answers:
        - text: "true  \nfalse  \ntrue"
          correct: true
        - text: "0  \n200  \n100"
          correct: false
        - text: "true  \nerror  \ntrue"
          correct: false
        - text: "false  \ntrue  \nfalse"
          correct: false
        markdown: |
          # Boolean Expressions

          Decision-making on computers are based on statements called **boolean expressions**. A boolean expression is **any expression that can only evaluate to either `TRUE` or `FALSE`**. This can be particularly useful when used to compare the properties of two sprites. For example, you could figure out which one is larger or placed higher up. In the next few puzzles we'll use simple boolean expressions to compare sprite properties.

          # Predict

          Read the code below. There are some new symbols in it which you haven't been introduced to. Take a guess at what they mean and try to answer the following question
        questions:
        - text: Which result will be printed in the console by this program?
        title: judul
      CSD U3 Boolean MC_2018_2019:
        answers:
        - text: "true  \nfalse  \ntrue"
          correct: true
        - text: "0  \n200  \n100"
          correct: false
        - text: "true  \nerror  \ntrue"
          correct: false
        - text: "false  \ntrue  \nfalse"
          correct: false
        markdown: |
          # Boolean Expressions

          Decision-making on computers are based on statements called **boolean expressions**. A boolean expression is **any expression that can only evaluate to either `TRUE` or `FALSE`**. This can be particularly useful when used to compare the properties of two sprites. For example, you could figure out which one is larger or placed higher up. In the next few puzzles we'll use simple boolean expressions to compare sprite properties.

          # Predict

          Read the code below. There are some new symbols in it which you haven't been introduced to. Take a guess at what they mean and try to answer the following question
        questions:
        - text: Which result will be printed in the console by this program?
        title: judul
      CSD U3 Card Examples_2018:
        content1: deskripsi di sini
        markdown: |
          # Your Interactive Card

          In the next few levels, you'll be completing your own interactive card.  Here are some examples to give you some ideas.  Don't forget to look at the code to see how they work.

          ## Examples

          [![](https://images.code.org/7bbdbbb01c354a7c09bb4b9b5182a951-image-1522780803299.png)](https://studio.code.org/projects/gamelab/OzdFqrZ4oHPYsTddaRWaZxtTvdj9NzZVwCq6NkyONXM/edit)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/ed307e22854e4958a006d8023636cfd5-image-1522780803295.png)](https://studio.code.org/projects/gamelab/fmFrWsocELzP19CfbGI5P_hsgxN5ewVaB5f0Bw5S1_E/edit)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/ae0eca1dab46f13fcb21d4d0e264d637-image-1522780803298.png)](https://studio.code.org/projects/gamelab/z4XDrC0lsqoRY0xzYaXdJfChmyCl5O6YM-EOByecscc/edit)
      CSD U3 Card Examples_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # Your Interactive Card

          In the next few levels, you'll be completing your own interactive card.  Here are some examples to give you some ideas.  Don't forget to look at the code to see how they work.

          ## Examples

          [![](https://images.code.org/7bbdbbb01c354a7c09bb4b9b5182a951-image-1522780803299.png)](https://studio.code.org/projects/gamelab/OzdFqrZ4oHPYsTddaRWaZxtTvdj9NzZVwCq6NkyONXM/edit)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/ed307e22854e4958a006d8023636cfd5-image-1522780803295.png)](https://studio.code.org/projects/gamelab/fmFrWsocELzP19CfbGI5P_hsgxN5ewVaB5f0Bw5S1_E/edit)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[![](https://images.code.org/ae0eca1dab46f13fcb21d4d0e264d637-image-1522780803298.png)](https://studio.code.org/projects/gamelab/z4XDrC0lsqoRY0xzYaXdJfChmyCl5O6YM-EOByecscc/edit)
      CSD U3 Collisions SFLP:
        markdown: |+
          # Overview

          The class programs their sprites to interact in new ways.  After a brief review of how they used the isTouching block, the class brainstorms other ways that two sprites could interact.  They then use isTouching to make one sprite push another across the screen before practicing with the four collision blocks (collide, displace, bounce, and bounceOff).
          ## Vocabulary

          * **Abstraction** - Pulling out specific differences to make one solution work for multiple problems.

          ## Introduced Code

          * [sprite.bounceOff()](//studio.code.org/docs/gamelab/bounceOff/)
          * [sprite.collide()](//studio.code.org/docs/gamelab/collide/)
          * [sprite.displace()](//studio.code.org/docs/gamelab/displace/)
          * [sprite.setCollider()](//studio.code.org/docs/gamelab/setCollider/)
          * [sprite.bounce()](//studio.code.org/docs/gamelab/bounce/)
          * [sprite.bounciness](//studio.code.org/docs/gamelab/bounciness/)

      CSD U3 Defender SFLP:
        markdown: |
          # Overview

          This lesson introduces the process the class will use to design games for the remainder of the unit. The class walks through through this process in a series of levels. As part of this lesson the class also briefly learn to use multi-frame animations in Game Lab. At the end of the lesson they have an opportunity to make improvements to the game to make it their own.


          ## Resources

          * [Project Guide - Defender Game - Project Guide](https://docs.google.com/document/d/10tgS4d9feduPveRZSMzWV0TdyL6AL5VHHGFy_-m2XNQ/export?format=pdf)
      CSD U3 Entertainment:
        markdown: |+
          # Starting Your Search

          To find out more about how computer science and programming play a role in entertainment, you'll need to do some research. Try searching for "Computer science and &#95;&#95;&#95;&#95;&#95;&#95;" and trying out different types of entertainment such as film, television, music, games, animation, fashion, etc.


        teacher_markdown: |
          Here are a few sites to get students started.  These sites are generally appropriate for school, but the content with them changes frequently, so **we strongly suggest that you check each site for inappropriate content before sharing it with students**.

          ## Inside the Magic - [insidethemagic.net](http://www.insidethemagic.net)

          ### Overview

          This site is focused on news about Disney, but you might be surprised by the large role that CS plays in all of their different forms of entertainment. Because this isn't a CS focused site, you'll need to use the search function to find relevant articles.

          ### Relevant fields

          * Film/TV
          * Animation
          * Robotics/Animatronics
          * Games

          ## Critical Path Videos - [criticalpathproject.com/explore/playlists/](http://www.criticalpathproject.com/explore/playlists/)

          ### Overview

          Videos featuring a range of people working in diverse areas of the game industry, talking about what they do.

          ### Relevant Fields

          * Games
          * Animation
          * Art

          ## Music Think Tank - [musicthinktank.com](http://www.musicthinktank.com/)

          ### Overview

          Music Think Tank is a blog targeted at people working in the music industry. It's not a CS specific site, but searching for "computer science" or "programming" will reveal some interesting articles.

          ### Relevant Fields

          * Music

          ## Creative Coding Podcast - [creativecodingpodcast.com](http://creativecodingpodcast.com/)

          ### Overview

          While this podcast doesn't feature much in the way of formal professional programming (as in, people who do this for a living), it is a great resource to see the varied ways in which amateurs are making entertainment with code.

          ### Relevant Fields

          * All
      CSD U3 Entertainment_2018_2019:
        markdown: |+
          # Starting Your Search

          To find out more about how computer science and programming play a role in entertainment, you'll need to do some research. Try searching for "Computer science and &#95;&#95;&#95;&#95;&#95;&#95;" and trying out different types of entertainment such as film, television, music, games, animation, fashion, etc.


        teacher_markdown: |
          Here are a few sites to get students started.  These sites are generally appropriate for school, but the content with them changes frequently, so **we strongly suggest that you check each site for inappropriate content before sharing it with students**.

          [key]

          ## Inside the Magic - [insidethemagic.net](http://www.insidethemagic.net)

          ### Overview

          This site is focused on news about Disney, but you might be surprised by the large role that CS plays in all of their different forms of entertainment. Because this isn't a CS focused site, you'll need to use the search function to find relevant articles.

          ### Relevant fields

          * Film/TV
          * Animation
          * Robotics/Animatronics
          * Games

          ## Critical Path Videos - [criticalpathproject.com/explore/playlists/](http://www.criticalpathproject.com/explore/playlists/)

          ### Overview

          Videos featuring a range of people working in diverse areas of the game industry, talking about what they do.

          ### Relevant Fields

          * Games
          * Animation
          * Art

          ## Music Think Tank - [musicthinktank.com](http://www.musicthinktank.com/)

          ### Overview

          Music Think Tank is a blog targeted at people working in the music industry. It's not a CS specific site, but searching for "computer science" or "programming" will reveal some interesting articles.

          ### Relevant Fields

          * Music

          ## Creative Coding Podcast - [creativecodingpodcast.com](http://creativecodingpodcast.com/)

          ### Overview

          While this podcast doesn't feature much in the way of formal professional programming (as in, people who do this for a living), it is a great resource to see the varied ways in which amateurs are making entertainment with code.

          ### Relevant Fields

          * All

          [/key]
      CSD U3 Functions Prediction define first:
        answers:
        - text: The red square will be drawn but the green one will not. You cannot
            call functions after they are created.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: The green square will be drawn but the red one will not You cannot
            call functions before they are created.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: Both squares will be drawn. You can create functions anywhere you
            like in your code.
          correct: true
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: Neither square will be drawn. There is an error in the code.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        markdown: |
          # Does It Matter Where You Create Functions?

          So far all your functions have been created at the bottom of your code. What do you think will happen if you call a function before it's defined?

          Notice that the red square is drawn **before** its function is created while the green square is drawn **after** its function is created. Which of these do you think will be drawn?
      CSD U3 Functions Prediction define first_2018:
        answers:
        - text: The red square will be drawn but the green one will not. You cannot
            call functions after they are created.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: The green square will be drawn but the red one will not You cannot
            call functions before they are created.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: Both squares will be drawn. You can create functions anywhere you
            like in your code.
          correct: true
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: Neither square will be drawn. There is an error in the code.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        markdown: |
          # Does It Matter Where You Create Functions?

          So far all your functions have been created at the bottom of your code. What do you think will happen if you call a function before it's defined?

          Notice that the red square is drawn **before** its function is created while the green square is drawn **after** its function is created. Which of these do you think will be drawn?
      CSD U3 Functions Prediction define first_2018_2019:
        answers:
        - text: The red square will be drawn but the green one will not. You cannot
            call functions after they are created.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: The green square will be drawn but the red one will not You cannot
            call functions before they are created.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: Both squares will be drawn. You can create functions anywhere you
            like in your code.
          correct: true
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        - text: Neither square will be drawn. There is an error in the code.
          correct: false
          feedback: Functions can be created anywhere you like in your code. It is
            still a good idea to keep them all at the bottom for organization though!
        markdown: |
          # Does It Matter Where You Create Functions?

          So far all your functions have been created at the bottom of your code. What do you think will happen if you call a function before it's defined?

          Notice that the red square is drawn **before** its function is created while the green square is drawn **after** its function is created. Which of these do you think will be drawn?
      CSD U3 Functions SFLP:
        markdown: |+
          # Overview

          This lesson covers functions as a way to organize their code, make it more readable, and remove repeated blocks of code. The class learns that higher level or more abstract steps make it easier to understand and reason about steps, then begins to create functions in Game Lab.  At the end of the lesson the class uses these skills to organize and add functionality to the final version of their side scroller game.
          ## Vocabulary

          * **Function** - A piece of code that you can easily call over and over again.

          ## Introduced Code

          * [Define a function](//studio.code.org/docs/gamelab/functionParams_none/)
          * [Call a function](//studio.code.org/docs/gamelab/callMyFunction/)

      CSD U3 Keypress Matching:
        answers:
        - text: keyWentDown()
        - text: keyWentUp()
        - text: keyDown()
        content1: Match the keypress block with the description of how it works. Feel
          free to go back to the previous bubble if you need to experiment with them.
        questions:
        - text: Is true only once when the key is pressed.
        - text: Is true only once when the key is released.
        - text: Is true the whole time the key is pressed or held down.
        title: 'Matching: Responding to Keypresses'
      CSD U3 Keypress Matching_2018:
        answers:
        - text: keyWentDown()
        - text: keyWentUp()
        - text: keyDown()
        content1: Match the keypress block with the description of how it works. Feel
          free to go back to the previous bubble if you need to experiment with them.
        questions:
        - text: Is true only once when the key is pressed.
        - text: Is true only once when the key is released.
        - text: Is true the whole time the key is pressed or held down.
        title: 'Matching: Responding to Keypresses'
      CSD U3 Keypress Matching_2018_2019:
        answers:
        - text: keyWentDown()
        - text: keyWentUp()
        - text: keyDown()
        content1: Match the keypress block with the description of how it works. Feel
          free to go back to the previous bubble if you need to experiment with them.
        questions:
        - text: Is true only once when the key is pressed.
        - text: Is true only once when the key is released.
        - text: Is true the whole time the key is pressed or held down.
        title: 'Matching: Responding to Keypresses'
      CSD U3 Lesson Overview 1:
        markdown: |
          # Overview

          The class is asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, they will explore how Computer Science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.


          ## Resources

          * [CS in Entertainment - Activity Guide](https://docs.google.com/document/d/1RtwJU7Lh2dKdGoj-zfF1pjn-yxhkwP-05G8pgdYi-BY/export?format=pdf)
        teacher_markdown: |+
          * [CS in Entertainment](https://docs.google.com/document/d/1lLsZjStrnX9-U02G7AxwSPIq-BENvw942PS2JIkjZww/edit) - Exemplar ([PDF](https://docs.google.com/document/d/1lLsZjStrnX9-U02G7AxwSPIq-BENvw942PS2JIkjZww/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1lLsZjStrnX9-U02G7AxwSPIq-BENvw942PS2JIkjZww/export?format=doc))


      CSD U3 Lesson Overview 10:
        markdown: |
          # Overview

          This lesson introduces boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). The class then groups objects based on increasingly complex boolean statements, then looks at how conditionals can impact the flow of a program.
          ## Vocabulary

          * **Boolean** - A single value of either TRUE or FALSE
          * **Conditionals** - Statements that only run under certain conditions.
          * **Expression** - Any valid unit of code that resolves to a value.


          ## Resources

          * [Boolean Properties - Activity Guide](https://docs.google.com/document/d/1kRNIUD5Z3r7HK9twMPMnenyEFPh9ouMsJKIb4T0-6so/export?format=pdf)
      CSD U3 Lesson Overview 11:
        markdown: "# Overview\n\nThe class starts by using booleans to compare the
          current value of a sprite property with a target value, using that comparison
          to determine when a sprite has reached a point on the screen, grown to a
          given size, or otherwise reached a value using the counter pattern. After
          using booleans directly to investigate the values or sprite properties,
          the class adds conditional if statements to write code that responds to
          those boolean comparisons.\n## Vocabulary\n\n* **Boolean Expression** -
          in programming, an expression that evaluates to True or False. \n* **If-Statement**
          - The common programming structure that implements \"conditional statements\".\n\n##
          Introduced Code\n\n* [If statement](//studio.code.org/docs/gamelab/ifBlock/)\n*
          [Less than operator](//studio.code.org/docs/gamelab/lessThanOperator/)\n*
          [Inequality operator](//studio.code.org/docs/gamelab/inequalityOperator/)\n*
          [Less than or equal operator](//studio.code.org/docs/gamelab/lessThanOrEqualOperator/)\n*
          [Greater than operator](//studio.code.org/docs/gamelab/greaterThanOperator/)\n*
          [Equality operator](//studio.code.org/docs/gamelab/equalityOperator/)\n*
          [Greater than or equal operator](//studio.code.org/docs/gamelab/greaterThanOrEqualOperator/)\n"
      CSD U3 Lesson Overview 12:
        markdown: |
          # Overview

          Following the introduction to booleans and if statements in the previous lesson, students are introduced to a new block called keyDown() which returns a boolean and can be used in conditionals statements to move sprites around the screen. By the end of this lesson students will have written programs that take keyboard input from the user to control sprites on the screen.

          ## Introduced Code

          * [keyDown()](//studio.code.org/docs/gamelab/keyDown/)

          ## Resources

          * [Boolean Expressions](https://youtu.be/y3rCKJNOwpA) - Video ([download](https://videos.code.org/2015/csp/applab/conditionals_1.mp4))
      CSD U3 Lesson Overview 13:
        markdown: |+
          # Overview

          The class continues to explore ways to use conditional statements to take user input. In addition to the simple keyDown() command learned yesterday, the class learns about several other keyboard input commands as well as ways to take mouse input.
          ## Vocabulary

          * **Conditionals** - Statements that only run under certain conditions.

          ## Introduced Code

          * [keyWentUp()](//studio.code.org/docs/gamelab/keyWentUp/)
          * [mouseWentDown()](//studio.code.org/docs/gamelab/mouseWentDown/)
          * [mouseWentUp()](//studio.code.org/docs/gamelab/mouseWentUp/)
          * [keyWentDown()](//studio.code.org/docs/gamelab/keyWentDown/)
          * [mouseDown()](//studio.code.org/docs/gamelab/mouseDown/)
          * [mouseDidMove()](//studio.code.org/docs/gamelab/mouseDidMove/)
          * [sprite.visible](//studio.code.org/docs/gamelab/visible/)
          * [If/else statement](//studio.code.org/docs/gamelab/ifElseBlock/)

      CSD U3 Lesson Overview 14:
        markdown: |
          # Overview

          In this cumulative project for Chapter 1, the class plans for and develops an interactive greeting card using all of the programming techniques they've learned to this point.


          ## Resources

          * [Interactive Card - Project Guide](https://docs.google.com/document/d/1PtGpvAAyCYa_glecPhytGPrZau9ElJfJRhnVogFEqv4/export?format=pdf)
          * [Interactive Card - Rubric](https://docs.google.com/document/d/1EdEpsowofT8WGQSFvzYVF53HEKipLYdWULtjLgpOEBw/export?format=pdf)
          * [Interactive Card - Peer Review](https://docs.google.com/document/d/1aVP_8YU-JWkxVvRiituCOf66w7refwDaecNBLMZkKgs/export?format=pdf)
        teacher_markdown: |
          * [Interactive Card](https://docs.google.com/document/d/1AwrDq21LenIXUG-qMPUYlZ3Yf8DRjumH90LF5wtL4Vs/) - Project Guide Exemplar([PDF](https://docs.google.com/document/d/1AwrDq21LenIXUG-qMPUYlZ3Yf8DRjumH90LF5wtL4Vs/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1AwrDq21LenIXUG-qMPUYlZ3Yf8DRjumH90LF5wtL4Vs/export?format=doc))
          * [Interactive Card](https://docs.google.com/document/d/1CD8pVlK5ZLsmbuFkU3YJaYeoZqgcLxlBnVMEpbaxYlU) - Peer Review Exemplar ([PDF](https://docs.google.com/document/d/1CD8pVlK5ZLsmbuFkU3YJaYeoZqgcLxlBnVMEpbaxYlU/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1CD8pVlK5ZLsmbuFkU3YJaYeoZqgcLxlBnVMEpbaxYlU/export?format=doc))
      CSD U3 Lesson Overview 2:
        markdown: |
          # Overview

          This lesson explores the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab.The class uses a Game Lab tool  to interactively place shapes on Game Lab's 400 by 400 grid. Partners then take turns instructing each other how to draw a hidden image using this tool, accounting for many of the challenges of programming in Game Lab.


          ## Resources

          * [Drawing Shapes - Activity Guide](https://docs.google.com/document/d/1BKFLM2cmov3Lh23vsw1hGfUwTz9bM-diFCGHBf_GH6Y/export?format=pdf)
        teacher_markdown: |
          [key]

          * [Drawing Shapes](https://docs.google.com/document/d/1yLyHUtfKIgr4MhzTv_gSQTXGnq6QlD1DZJYIJXug27g/edit?usp=sharing) - Exemplar ([PDF](https://docs.google.com/document/d/1yLyHUtfKIgr4MhzTv_gSQTXGnq6QlD1DZJYIJXug27g/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1yLyHUtfKIgr4MhzTv_gSQTXGnq6QlD1DZJYIJXug27g/export?format=doc))

          [/key]
      CSD U3 Lesson Overview 3:
        markdown: |+
          # Overview

          The class is introduced to Game Lab, the programming environment for this unit, and begins to use it to position shapes on the screen. The lesson covers the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, the class creates an online version of the image they designed in the previous lesson.
          ## Vocabulary

          * **Bug** - Part of a program that does not work correctly.
          * **Debugging** - Finding and fixing problems in your algorithm or program.
          * **Program** - An algorithm that has been coded into something that can be run by a machine.

          ## Introduced Code

          * [ellipse()](//studio.code.org/docs/gamelab/ellipse/)
          * [rect()](//studio.code.org/docs/gamelab/rect/)
          * [fill()](//studio.code.org/docs/gamelab/fill/)

      CSD U3 Lesson Overview 4:
        markdown: |+
          # Overview

          This lesson extends the drawing skills to include width and height and introduces the concept of random number generation. The class learns to draw with versions of ellipse() and rect() that include width and height parameters and to use the background() block to fill the screen with color. At the end of the progression the class is introduced to the randomNumber() block and uses the new blocks to draw a randomized rainbow snake.
          ## Vocabulary

          * **Parameter** - An extra piece of information that you pass to the function to customize it for a specific need.

          ## Introduced Code

          * [background()](//studio.code.org/docs/gamelab/background/)
          * [ellipse()](//studio.code.org/docs/gamelab/ellipse/)
          * [rect()](//studio.code.org/docs/gamelab/rect/)
          * [randomNumber()](//studio.code.org/docs/gamelab/randomNumber/)

      CSD U3 Lesson Overview 5:
        markdown: |
          # Overview

          This lesson introduces variables as a way to label a number in a program or save a randomly generated value. The class begins the lesson with a very basic description of the purpose of a variable and practices using the new blocks.  Afterwards, the class uses variables to save a random number, allowing the programs to use the same random number multiple times.
          ## Vocabulary

          * **Variable** - A placeholder for a piece of information that can change.

          ## Introduced Code

          * [Declare a variable](//studio.code.org/docs/gamelab/declareNoAssign_x/)
          * [Declare and assign a value to a variable](//studio.code.org/docs/gamelab/declareAssign_x/)

          ## Resources

          * [Introduction to Variables](https://youtu.be/G41G_PEWFjE) - Video ([download](https://videos.code.org/2015/csp/applab/variables_1.mp4))
      CSD U3 Lesson Overview 6:
        markdown: |
          # Overview

          In order to create more interesting and detailed images, the class is introduced to the sprite object. Every sprite can be assigned an image to show, and sprites also keep track of multiple values about themselves, which will prove useful down the road when making animations.  At the end of the lesson, everyone creates a scene using sprites.
          ## Vocabulary

          * **Property** - Attributes that describe an object's characteristics
          * **Sprite** - A graphic character on the screen with properties that describe its location, movement, and look.

          ## Introduced Code

          * [drawSprites()](//studio.code.org/docs/gamelab/drawSprites/)
          * [sprite.scale](//studio.code.org/docs/gamelab/scale/)
          * [var sprite = createSprite()](//studio.code.org/docs/gamelab/createSprite/)

          ## Resources

          * [Sprite Scene Planning - Activity Guide](https://docs.google.com/document/d/1I5w4VKBu4qPmoSSve_AwyaVQ47FWkJ-fSq4zfmQCsG8/export?format=pdf)
        teacher_markdown: "* [Sprite Scene Planning](https://docs.google.com/document/d/1LCO-0sTzYBEAglx65F2fFVI5OtF6IbTeycIGqa1H4_Q/edit)
          - Activity Guide Exemplar ([PDF](https://docs.google.com/document/d/1LCO-0sTzYBEAglx65F2fFVI5OtF6IbTeycIGqa1H4_Q/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1LCO-0sTzYBEAglx65F2fFVI5OtF6IbTeycIGqa1H4_Q/export?format=doc))\n"
      CSD U3 Lesson Overview 7:
        markdown: |+
          # Overview

          This lesson introduces the draw loop, one of the core programming paradigms in Game Lab.  The class combines the draw loop with random numbers to manipulate some simple animations with dots and then with sprites. Afterwards, everyone uses what they learned to update the sprite scene from the previous lesson.
          ## Vocabulary

          * **Animation** - a series of images that create the illusion of motion by being shown rapidly one after the other
          * **Frame** - a single image within an animation
          * **Frame Rate** - the rate at which frames in an animation are shown, typically measured in frames per second

          ## Introduced Code

          * [World.frameRate](//studio.code.org/docs/gamelab/World.frameRate/)
          * [function draw() {}](//studio.code.org/docs/gamelab/draw/)


      CSD U3 Lesson Overview 8:
        markdown: |
          # Overview

          This unplugged lesson explores the underlying behavior of variables. Using notecards and string to simulate variables within a program, the class implements a few short programs. Once comfortable with this syntax, the class uses the same process with sprite properties, tracking a sprite's progress across the screen.
          ## Vocabulary

          * **Expression** - Any valid unit of code that resolves to a value.
          * **Variable** - A placeholder for a piece of information that can change.


          ## Resources

          * [Variables Unplugged - Activity Guide](https://docs.google.com/document/d/12-tfreuhFfNnxzBSl4dsLavDptTIruVcRiC3AzGKq1Y/export?format=pdf)
          * [Variables Unplugged Board - Manipulative](https://docs.google.com/document/d/1hxwkz9ed4Qd3KvKJ7MLQdgKGOtItXQ_qaYRQfZcfRn8/export?format=pdf)
        teacher_markdown: "* [Variables Unplugged](https://docs.google.com/document/d/1-uajFciILgNaTKN0j9uBu9CIwz7LbuMv-9jYQyBxYMY)
          - Activity Guide Key ([PDF](https://docs.google.com/document/d/1-uajFciILgNaTKN0j9uBu9CIwz7LbuMv-9jYQyBxYMY/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1-uajFciILgNaTKN0j9uBu9CIwz7LbuMv-9jYQyBxYMY/export?format=doc))\n\n"
      CSD U3 Lesson Overview 9:
        markdown: |+
          # Overview

          By combining the Draw Loop and the Counter Pattern, the class writes programs that move sprites across the screen, as well as animate other sprite properties.


      CSD U3 Movement Challenges:
        markdown: |
          # Challenges

          _Ask your teacher before pursuing any of these challenges._

          * Return to [level 15](15) to continue working on your own animation. You'll need to Unsubmit your project first, and the submit again when you've finished working.
          * Return to [level 12](12) to continue working on the fish animation. Try randomly changing the fishes' rotation to make them look like they are swimming.
          * Return to [level 13](13) to continue working on the gears animation. Try adding more gears of different sizes and tweaking the speed of each rotation to ensure that the gears mesh properly
          * Go to [full Game Lab](/projects/gamelab/new) to create a new animation from scratch.
      CSD U3 Project Build a Game SFLP:
        markdown: |
          # Overview

          The class plans and builds original games using the project guide from the previous two lessons. Working individually or in pairs, the class plans, develops, and gives feedback on the games.  After incorporating the peer feedback, the class shares out the completed games.


          ## Resources

          * [Make Your Own Game - Project Guide](https://docs.google.com/document/d/1SBye25XfdnytxCrc6a_OtpcS02YsT99nyJ9Vjwp_zeo/export?format=pdf)
          * [Make Your Own Game - Rubric](https://docs.google.com/document/d/1WChOizSb4gZsEbdER5KwYXj9c6Ogpeuv0AzegJ5HD8A/export?format=pdf)
          * [Make Your Own Game - Peer Review](https://docs.google.com/document/d/1ORjDuRep39xwiFaz20_jF74eWB63FVtK2FIQhq7Wecg/export?format=pdf)
        teacher_markdown: |
          * [Make Your Own Game](https://docs.google.com/document/d/1T4Br-iQAhFnuoey6QvhdYRQ7X0uPKwjAhlalAQf8Bxc/edit?usp=sharing) - Project Guide Exemplar ([PDF](https://docs.google.com/document/d/1T4Br-iQAhFnuoey6QvhdYRQ7X0uPKwjAhlalAQf8Bxc/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1T4Br-iQAhFnuoey6QvhdYRQ7X0uPKwjAhlalAQf8Bxc/export?format=doc))
          * [Make Your Own Game](https://docs.google.com/document/d/1eCE7xT-YWu1xRyxVLx4xCXggqihxJwtU6XkXcchqk6w/edit) - Peer Review Exemplar ([PDF](https://docs.google.com/document/d/1eCE7xT-YWu1xRyxVLx4xCXggqihxJwtU6XkXcchqk6w/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1eCE7xT-YWu1xRyxVLx4xCXggqihxJwtU6XkXcchqk6w/export?format=doc))
      CSD U3 SFLP Velocity:
        markdown: |
          # Overview

          After a brief review of how the counter pattern is used to move sprites, the class is introduced to the properties that set velocity and rotation speed directly.   As they use these new properties in different ways, they build up the skills they need to create a basic side scroller game.

          ## Introduced Code

          * [sprite.velocityY](//studio.code.org/docs/gamelab/velocityY/)
          * [sprite.velocityX](//studio.code.org/docs/gamelab/velocityX/)
          * [sprite.rotationSpeed](//studio.code.org/docs/gamelab/rotationSpeed/)
      CSD U3 Sprite Movement Predict Multi:
        answers:
        - text: "![](https://images.code.org/649915789345f5958475cd2b91e0630c-image-1491939133180.gif)"
          correct: false
        - text: "![](https://images.code.org/2f5e7773ae2f99d6217929bd58490393-image-1491939162998.gif)"
          correct: false
        - text: "![](https://images.code.org/7c43fbce8cbbe7c15614203290f806e7-image-1491939169414.gif)"
          correct: true
        - text: "![](https://images.code.org/c62dbed9a37b03958cb056bf493bd59c-image-1491939175575.gif)"
          correct: false
        questions:
        - text: Read this program and predict which of the following animations will
            be produced.
      CSD U3 Sprite Movement Predict Multi_2018:
        answers:
        - text: "![](https://images.code.org/649915789345f5958475cd2b91e0630c-image-1491939133180.gif)"
          correct: false
        - text: "![](https://images.code.org/2f5e7773ae2f99d6217929bd58490393-image-1491939162998.gif)"
          correct: false
        - text: "![](https://images.code.org/7c43fbce8cbbe7c15614203290f806e7-image-1491939169414.gif)"
          correct: true
        - text: "![](https://images.code.org/c62dbed9a37b03958cb056bf493bd59c-image-1491939175575.gif)"
          correct: false
        questions:
        - text: Read this program and predict which of the following animations will
            be produced.
      CSD U3 Sprite Movement Predict Multi_2018_2019:
        answers:
        - text: "![](https://images.code.org/649915789345f5958475cd2b91e0630c-image-1491939133180.gif)"
          correct: false
        - text: "![](https://images.code.org/2f5e7773ae2f99d6217929bd58490393-image-1491939162998.gif)"
          correct: false
        - text: "![](https://images.code.org/7c43fbce8cbbe7c15614203290f806e7-image-1491939169414.gif)"
          correct: true
        - text: "![](https://images.code.org/c62dbed9a37b03958cb056bf493bd59c-image-1491939175575.gif)"
          correct: false
        questions:
        - text: Read this program and predict which of the following animations will
            be produced.
      CSD U3 Sprites intro predict multi:
        answers:
        - text: "![](https://images.code.org/9b55104462fe654f5f5410e635671c36-image-1579828016057.png)"
          correct: false
        - text: "![](https://images.code.org/03bee2faf00d4edb534098397596df49-image-1579828016060.png)"
          correct: false
        - text: "![](https://images.code.org/f7641c6d502ccae8c6e311a7b764ea4e-image-1579828016054.png)"
          correct: true
        - text: "![](https://images.code.org/cd6993477eac8964c01303661ef4e9ce-image-1579828016062.png)"
          correct: false
        questions:
        - text: When run, where will the sprite `mySprite` be located?
      CSD U3 Sprites intro predict multi_2018:
        answers:
        - text: "![](https://images.code.org/ad526743d374c692b411f61a52b89398-image-1579828535705.png)"
          correct: true
        - text: "![](https://images.code.org/975d041b251956c9f821ab976f22a005-image-1579828535713.png)"
          correct: false
        - text: "![](https://images.code.org/6e19ea3d0036aa734e9b9cd6a4b3fbc8-image-1579828535708.png)"
          correct: false
        - text: "![](https://images.code.org/d3f8937565496bba2654f0eb3935554b-image-1579828535710.png)"
          correct: false
        questions:
        - text: When run, where will the sprite `mySprite` be located?
      CSD U3 Sprites intro predict multi_2018_2019:
        answers:
        - text: "![](https://images.code.org/8ca2c292184206f6b197b5818ac2af7c-image-1580245775794.png)"
          correct: true
        - text: "![](https://images.code.org/2176c09b3f0e422581bef15c4e6ec4eb-image-1580245775797.png)"
          correct: false
        - text: "![](https://images.code.org/62791d20c9fb0acd71ae0d11edfb639b-image-1580245775799.png)"
          correct: false
        - text: "![](https://images.code.org/3624e09a23ed5409b3dae36e82d79233-image-1580245775795.png)"
          correct: false
        questions:
        - text: When run, where will the sprite `mySprite` be located?
      CSD U3 Using the Game Design Process SLFP:
        markdown: |
          # Overview

          In this multi-day lesson, the class uses the problem solving process from Unit 1 to create a platform jumper game.  After looking at a sample game, the class defines what their games will look like and uses a structured process to build them.  Finally, the class reflects on how the games could be improved, and implements those changes.


          ## Resources

          * [Planning Your Platform Game - Project Guide](https://docs.google.com/document/d/1-h8vfW6PfppsDKKqVeVDMU6FxbPP8tA1Up_oc5_p9Dk/export?format=pdf)
        teacher_markdown: "* [Planning Your Platform Game](https://docs.google.com/document/d/1W23uN91Z52DWyrxpoHmM8HBenECEwNh9rNpoqzLwVcA/edit)
          - Project Guide ([PDF](https://docs.google.com/document/d/1W23uN91Z52DWyrxpoHmM8HBenECEwNh9rNpoqzLwVcA/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1W23uN91Z52DWyrxpoHmM8HBenECEwNh9rNpoqzLwVcA/export?format=doc))\n"
      CSD U3 combining rep:
        content1: deskripsi di sini
        markdown: |+
          ### Can you decode this binary string?



          # 1000011



          ### What information do you need to help you decode it?

      CSD U3 combining rep_2018:
        content1: deskripsi di sini
        markdown: |+
          ### Can you decode this binary string?



          ![](https://images.code.org/3aa6cac930e44cdc71b8fdcb7b1babe9-image-1531247036544.23.16 AM.png)



          ### What information do you need to help you decode it?

      CSD U3 combining rep_2018_2019:
        content1: deskripsi di sini
        markdown: |+
          ### Can you decode this binary string?



          ![](https://images.code.org/3aa6cac930e44cdc71b8fdcb7b1babe9-image-1531247036544.23.16 AM.png)



          ### What information do you need to help you decode it?

      CSD U3 drawSprites placement match:
        answers:
        - text: https://images.code.org/131282b44fe34cd619a9a21bc68888da-image-1523902103487.58.48
            AM.png,300px
        - text: https://images.code.org/2fbe4029dc47f6f048e7c9f90ac99cac-image-1523902103485.25.09
            AM.png
        - text: https://images.code.org/c4cb49e00f7087765865da87cff37549-image-1523902103477.58.00
            AM.png
        - text: https://images.code.org/7465035fc6701dcb91731fe9d160b638-image-1523902103481.58.28
            AM.png
        content1: Match the code to the image that it will produce.
        questions:
        - text: https://images.code.org/cd11d762b2cb3e36c3d45157b965c968-image-1523901253224.59.08
            AM.png
        - text: https://images.code.org/653dff2d49f07341b2f2552747212b34-image-1523901253222.59.21
            AM.png
        - text: https://images.code.org/db71e0cde6861faabc0b5a55d67c739e-image-1523901253227.58.12
            AM.png
        - text: https://images.code.org/15d6014329fa3da9b73016af9f1d0d74-image-1523901253226.58.34
            AM.png
        title: drawSprites
      CSD U3 drawSprites placement match_2019:
        answers:
        - text: https://images.code.org/131282b44fe34cd619a9a21bc68888da-image-1523902103487.58.48
            AM.png,300px
        - text: https://images.code.org/2fbe4029dc47f6f048e7c9f90ac99cac-image-1523902103485.25.09
            AM.png
        - text: https://images.code.org/c4cb49e00f7087765865da87cff37549-image-1523902103477.58.00
            AM.png
        - text: https://images.code.org/7465035fc6701dcb91731fe9d160b638-image-1523902103481.58.28
            AM.png
        content1: Match the code to the image that it will produce.
        questions:
        - text: https://images.code.org/cd11d762b2cb3e36c3d45157b965c968-image-1523901253224.59.08
            AM.png
        - text: https://images.code.org/653dff2d49f07341b2f2552747212b34-image-1523901253222.59.21
            AM.png
        - text: https://images.code.org/db71e0cde6861faabc0b5a55d67c739e-image-1523901253227.58.12
            AM.png
        - text: https://images.code.org/15d6014329fa3da9b73016af9f1d0d74-image-1523901253226.58.34
            AM.png
        title: drawSprites
      CSD U3 game intro:
        content1: deskripsi di sini
        markdown: |
          # Create your own game

          Now that you have all the skills you need, it's time to make your own game!

          With a partner, brainstorm some different ideas for your game.  You can think about the games you've already seen, or look at some more sample games to give you ideas.

          [<img src="https://images.code.org/fc2d4cdba80a476b1ff476081991031e-image-1498594631779.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/AwDcX5nehOApfzyywI6BOLT1xbf0MIV1dUj8KjQaNtA)

          [<img src="https://images.code.org/b89895bdd43be4b729ca9165fc2923cf-image-1498595512898.28.24 PM.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/r9OYVTSj2od8vaCA-nKikTVpx-2Co8qHhuZiBIu30JA)

          [<img src="https://images.code.org/d430061caab264330da0227b53e2db90-image-1498595505047.27.59 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/hAz7RSdqc0c_MSQVUpvz1XrLDr8QLsansWDVI0ZberQ)

          [<img src="https://images.code.org/c9fb241c5684e10d9ba2b85d4d4a906b-image-1498764384615.25.58 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/DmRPNYR3n7bMO--_KkP7r6mOoGynBVyi3BMVPWDiVeI)

          Once you have settled on a type of game with your partner, fill out the Project Guide with the backgrounds, variables, sprites, and functions that you will need to make the game.  You'll spend the next few levels creating your game.
      CSD U3 game intro_2018:
        content1: deskripsi di sini
        markdown: |
          # Create your own game

          Now that you have all the skills you need, it's time to make your own game!

          With a partner, brainstorm some different ideas for your game.  You can think about the games you've already seen, or look at some more sample games to give you ideas.

          [<img src="https://images.code.org/fc2d4cdba80a476b1ff476081991031e-image-1498594631779.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/AwDcX5nehOApfzyywI6BOLT1xbf0MIV1dUj8KjQaNtA)

          [<img src="https://images.code.org/b89895bdd43be4b729ca9165fc2923cf-image-1498595512898.28.24 PM.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/r9OYVTSj2od8vaCA-nKikTVpx-2Co8qHhuZiBIu30JA)

          [<img src="https://images.code.org/d430061caab264330da0227b53e2db90-image-1498595505047.27.59 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/hAz7RSdqc0c_MSQVUpvz1XrLDr8QLsansWDVI0ZberQ)

          [<img src="https://images.code.org/c9fb241c5684e10d9ba2b85d4d4a906b-image-1498764384615.25.58 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/DmRPNYR3n7bMO--_KkP7r6mOoGynBVyi3BMVPWDiVeI)

          Once you have settled on a type of game with your partner, fill out the Project Guide with the backgrounds, variables, sprites, and functions that you will need to make the game.  You'll spend the next few levels creating your game.
      CSD U3 game intro_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # Create your own game

          Now that you have all the skills you need, it's time to make your own game!

          With a partner, brainstorm some different ideas for your game.  You can think about the games you've already seen, or look at some more sample games to give you ideas.

          [<img src="https://images.code.org/fc2d4cdba80a476b1ff476081991031e-image-1498594631779.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/AwDcX5nehOApfzyywI6BOLT1xbf0MIV1dUj8KjQaNtA)

          [<img src="https://images.code.org/b89895bdd43be4b729ca9165fc2923cf-image-1498595512898.28.24 PM.png" style="width: 200px; float: left; margin: 10px;">](https://studio.code.org/projects/gamelab/r9OYVTSj2od8vaCA-nKikTVpx-2Co8qHhuZiBIu30JA)

          [<img src="https://images.code.org/d430061caab264330da0227b53e2db90-image-1498595505047.27.59 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/hAz7RSdqc0c_MSQVUpvz1XrLDr8QLsansWDVI0ZberQ)

          [<img src="https://images.code.org/c9fb241c5684e10d9ba2b85d4d4a906b-image-1498764384615.25.58 PM.png" style="width: 200px; margin: 10px;">](https://studio.code.org/projects/gamelab/DmRPNYR3n7bMO--_KkP7r6mOoGynBVyi3BMVPWDiVeI)

          Once you have settled on a type of game with your partner, fill out the Project Guide with the backgrounds, variables, sprites, and functions that you will need to make the game.  You'll spend the next few levels creating your game.
      CSD U3 platform intro:
        content1: deskripsi di sini
        markdown: |
          # Build a Platform Jumper

          In the next several levels, you'll be building a platform jumper game.  Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher before clicking to the next level.
      CSD U3 platform intro_2018:
        content1: deskripsi di sini
        markdown: |
          # Build a Platform Jumper

          In the next several levels, you'll be building a platform jumper game.  Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher before clicking to the next level.
      CSD U3 platform intro_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # Build a Platform Jumper

          In the next several levels, you'll be building a platform jumper game.  Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher before clicking to the next level.
      CSD U4L01 SFLP:
        markdown: |
          # Overview

          In this lesson you'll learn how empathy for a user's needs is a critical component of the design process. Then you'll investigate a set of products and consider and critique how well they meet a variety of needs.

          ## Vocabulary

          * **Critique** - To critically evaluate in a detailed and constructive manner.
          * **Empathy** - In design, paying attention to a user's feelings and needs when designing a product.
          * **User** - Someone who uses an object, including software and hardware.

          ## Resources

          * [Determine the User](https://docs.google.com/document/d/1X0qwGigSXa1hq6Q6dws3PxHryGhEyCgkaEHyJCMgvj4/export?format=pdf) - Activity Guide
          * [Problem Solving Process with Empathy](https://staging.code.org/curriculum/docs/csd/PSPE.png) - Image
      CSD U4L02 SFLP:
        markdown: |
          # Overview

          Designers need to understand their users' needs. In this lesson you'll think about how to design for another person by role-playing a user profile and reacting to a series of products.

          ## Vocabulary

          * **Usability** - How easy, efficient, and satisfying it is to use a human-made object or device (including software).

          ## Resources

          * [Reacting as your User](https://docs.google.com/document/d/1cQXtr4zj3LEuOMoOYJf8KtBUl9ge3qmwBBzEBv8GixA/export?format=pdf) - Activity Guide


          * [Profile 1](https://docs.google.com/document/d/1N6Ks8rp6YoLgsbA3FE0x9RatJY3znevnMkMyUN3yRE8/export?format=pdf) - User Profile
          * [Profile 2](https://docs.google.com/document/d/14nHf-TzkKBUC0hvYlcviVe-S9wDdo1TqPUIcnTcHMzw/export?format=pdf) - User Profile
          * [Profile 3](https://docs.google.com/document/d/1Nw_0v_uGCe4J_tcimhyJiWKYgw4jhNgg8qP1zo4GddE/export?format=pdf) - User Profile
          * [Profile 4](https://docs.google.com/document/d/1kRKQYsomhS9UakiDazQ9dXNk8AIWHaq082Y4wBflK34/export?format=pdf) - User Profile
      CSD U4L03 SFLP:
        markdown: |
          # Overview

          In this lesson you'll design a product from scratch to meet a user's needs. Along the way you'll learn how brainstorming and then categorizing ideas is a useful skill when there are many potential options you could choose.

          ## Resources

          * [User Centered Design](https://docs.google.com/document/d/1HxcW76EFNVIJykCVELgjr4WRpFjPgrVvz9tURRR1gWY/export?format=pdf) - Activity Guide
      CSD U4L04 SFLP:
        markdown: |
          # Overview

          In this lesson you'll learn what an app is and how they are designed to help meet a user's needs. You'll also learn how prototypes are used to create a rough draft of a piece of software.

          ## Vocabulary

          * **Prototype** - A first or early model of a product that allows you to test assumptions before developing a final version.
          * **User Interface** - The visual elements of an program through which a user controls or communicates with the application. Often abbreviated UI.


          ## Resources

          * [User Interface Screens](https://docs.google.com/document/d/1JOVsR0T5P7zQ6LdxfDjRSsX1EC8xk0TYZKe7X_GjYlk/export?format=pdf) - Activity Guide
          * [User Testing (Computer)](https://docs.google.com/document/d/1Rtla8WSmJol6sHT5SToep5_hhTM5I8z3UjA7yCap-nw/export?format=pdf) - Activity Guide
          * [User Testing (User)](https://docs.google.com/document/d/1IPu6hsHRui_ChXogq0nklAUuPUae2yx0RaADW9b4Nrs/export?format=pdf) - Activity Guide
      CSD U4L05 SFLP:
        markdown: |
          # Overview

          In this lesson you'll learn how to read feedback on a product carefully to identify the needs that are being expressed. Then you'll update a paper prototype in order to better meet those needs.

          ## Resources

          * [User Interface Screens](https://docs.google.com/document/d/1JOVsR0T5P7zQ6LdxfDjRSsX1EC8xk0TYZKe7X_GjYlk/export?format=pdf) - Activity Guide
          * [Prototype Feedback](https://docs.google.com/document/d/1DzoLUATK8k1lyr_TLhR4mJ5UHLhrZN6-sLRay0tLX4Q/export?format=pdf) - Activity Guide
          * [Improve a Screen](https://docs.google.com/document/d/1y0YfE6qZKKlRRpeVGU2d-SuctJP9P5fI2062yo85nZg/export?format=pdf) - Activity Guide
      CSD U4L06 SFLP:
        markdown: |
          # Overview

          Up to this point we have focused on designing for users who are, to some degree, distanced from us. Whether through brainstorming, profiles, or text feedback, the connection to an end user has never been direct. In this lesson you'll directly interview one of your classmates as you look to design an app that meets their needs.

          ## Resources

          * [User Interview](https://docs.google.com/document/d/1u3mOVcBHWJpsMJwrvjb4_B8532xg774hkiWPEH7fbqQ/export?format=pdf) - Activity Guide
          * [Project - Paper Prototype](https://docs.google.com/document/d/12dSfN9z_sEbo41hx4reMUQxl399RjbE5cgCKl0rCHz4/export?format=pdf) - Activity Guide
      CSD U4L07 SFLP:
        markdown: |
          # Overview

          Based on the interview you conducted in the last lesson, design an app that could help your classmate overcome some obstacle to learning something new.


          ## Resources

          * [Paper Prototype Rubric](https://docs.google.com/document/d/16llO0PF7rJhz_ImtNDAxG3MAt9vU6QVGpDSPGoi_-04/export?format=pdf) - Rubric
          * [Project - Paper Prototype](https://docs.google.com/document/d/12dSfN9z_sEbo41hx4reMUQxl399RjbE5cgCKl0rCHz4/export?format=pdf) - Activity Guide
      CSD U4L08 SFLP:
        markdown: |+
          # Overview

          To kick off the app design project, the class organizes into teams and starts exploring app topics. Several example socially impactful apps serve as inspiration for the project.


          ## Resources

          * [App Design Kickoff](https://docs.google.com/document/d/1u5oTuQcEV0sweTA6bEER_wZT6FKoX7EqX8JdiY8YCAA/export?format=pdf) - Activity Guide

      CSD U4L09 SFLP:
        markdown: |
          # Overview

          Dive into app development by exploring existing apps that may serve similar users. Each group identifies a handful of apps that address the same topic they are working on, using those apps to help refine the app idea they will pursue.


          ## Resources

          * [Market Research](https://docs.google.com/document/d/1zDS5HCQ3nTwWHh4Dr4Ix17Db9fMRVJA8lNefwdcjiA0/export?format=pdf) - Activity Guide
      CSD U4L10 SFLP:
        markdown: |
          # Overview

          Paper prototypes allow developers to quickly test ideas before investing a lot of time writing code. In this lesson teams explore some example apps created in App Lab, using those apps to help inform the first paper prototypes of their apps.
          ## Vocabulary

          * **Prototype** - A first or early model of a product that allows you to test assumptions before developing a final version.


          ## Resources

          * [Phone Paper Prototype](https://drive.google.com/open?id=0B2UNlnU_5Vg4c1VJZ1Zrd0NXUkE) - Template
          * [What's for Lunch](https://docs.google.com/drawings/d/12qoCyr8ApVLVT9OlnHpDX7qM5mVopbw7w-0TcxlQd2k) - Prototype
          * [Prototype Brainstorming](https://docs.google.com/document/d/1t6pRCn-oSUsuQ2rog24KzbbZ7iORothH_Gp1i3Hm8A4/export?format=pdf) - Activity Guide
      CSD U4L11 SFLP:
        markdown: |
          # Overview

          In this lesson teams test out their paper prototypes with other members of the class. With one student role playing the computer, one narrating, and the rest observing, teams will get immediate feedback on their app designs which will inform the next version of their app prototypes.


          ## Resources

          * [Paper Prototype User Testing](https://docs.google.com/document/d/1cPIdaayUutKdsq1RFT-keF4X-o4XBrF2BnMaVutc-_4/export?format=pdf) - Activity Guide
          * [What's For Lunch Testing](https://drive.google.com/open?id=0BxKeX2-Lg_EYUTBNbnMyUENFcGs) - Video
      CSD U4L12 SFLP:
        markdown: |
          # Overview

          Having developed, tested, and gathered feedback on a paper prototype, teams now move to App Lab to build the next iteration of their apps. Using the drag-and-drop Design Mode, each team member builds out at least one page of their team's app, responding to feedback that was received in the previous round of testing.


          ## Resources

          * [Screen Ownership](https://docs.google.com/document/d/1eAl3Gpi1iLLOMjaO44-w2dUuJvHEzGVPrIDxpP4rkW4/export?format=pdf) - Activity Guide
          * [Screen Design](https://docs.google.com/document/d/1dtMInlgLRk_DUZwpqF6KF8TvGUJNp-vWFYYU4wG-ZLc/export?format=pdf) - Activity Guide
      CSD U4L13 SFLP:
        markdown: |+
          # Overview

          Building on the screens that the class designed in the previous lesson, teams combine screens into a single app. Simple code can then be added to make button clicks change to the appropriate screen.

          ## Introduced Code

          * [onEvent](//studio.code.org/docs/applab/onEvent/)
          * [setScreen](//studio.code.org/docs/applab/setScreen/)

      CSD U4L15 SFLP:
        markdown: |
          # Overview

          Teams run another round of user testing, this time with their interactive prototype. Feedback gathered from this round of testing will inform the final iteration of the app prototypes.


          ## Resources

          * [App User Testing](https://docs.google.com/document/d/1-ZgkOaZ1Y_jCG1c9Hzkz_SMEZXrJAzVFLgoCVIQiIts/export?format=pdf) - Activity Guide
      CSD U4L16 SFLP:
        markdown: |
          # Overview

          Using the feedback from the last round of testing, teams implement changes that address the needs of their users. Each team tracks and prioritizes the features they want to add and the bugs they need to fix.
          ## Vocabulary

          * **Bug** - Part of a program that does not work correctly.
          * **Feature** - An individual functional element of a software item. This could be the ability to do something new, work across multiple platforms, or perform more efficiently.


          ## Resources

          * [App User Testing Analysis](https://docs.google.com/document/d/1Y7cri91LU_70n6CrIGnUSedPwA_TMfYCkyhCjfpfTns/export?format=pdf) - Activity Guide
      CSD U4L17 SFLP:
        markdown: |
          # Overview

          Each team prepares a presentation to "pitch" the app they've developed. This is the time to share struggles, triumphs, and plans for the future.


          ## Resources

          * [App Presentation Template](https://docs.google.com/presentation/d/19KVEybGqu6pdFB3QwjvJNA_VTM5W5Kxy3fUlxf1xnc4/edit) - Slide Deck
          * [App Presentation](https://docs.google.com/presentation/d/1qRbnSABMrfeZHUiQ_mGdhzW7UIGuiGiWyMcQK_pH-tY/edit) - Exemplar
          * [App Presentation](https://docs.google.com/document/d/1RVmBL9jCfG2QJXyEiya4w9dSBluRxinEOKBZLicv4lg/export?format=pdf) - Rubric
      CSD U5 Encryption 1:
        content1: deskripsi di sini
        markdown: |
          # Decoding Binary Strings

          ![](https://images.code.org/6d8dcf1c1e6c2955fa767e9839af820e-image-1505420730035.24.20 PM.png)

          ## Encoding system:

          ![](https://images.code.org/df5db2027cac3c16c4ef4b2b8f940d5d-image-1505420957117.28.48 PM.png) ![](https://images.code.org/4de0035c9053477fa6f5484800dc8140-image-1505420957118.28.39 PM.png)

          ![](https://images.code.org/8335bef013e9655291fcfecf2c60fcd3-image-1505420957118.28.30 PM.png)  &nbsp;&nbsp; ![](https://images.code.org/ab3337f5b0848557c37fd114fe0d65b7-image-1505420957116.28.56 PM.png)
        teacher_markdown: "The message itself is a doughnut, thumbs down, and angry
          face.  Students may have fun coming up with their own interpretations of
          the emojis.  One possible interpretation is that the sender expected a doughnut,
          didn't get one and became angry, but there is no \"right\" answer to what
          the emojis mean.\n    \n(Hide this message by going to your teacher panel
          on the right and choosing to view as a student.)\n\n"
      CSD U5 Encryption 1_2018:
        content1: deskripsi di sini
        markdown: |
          # Decoding Binary Strings

          ![](https://images.code.org/6d8dcf1c1e6c2955fa767e9839af820e-image-1505420730035.24.20 PM.png)

          ## Encoding system:

          ![](https://images.code.org/df5db2027cac3c16c4ef4b2b8f940d5d-image-1505420957117.28.48 PM.png) ![](https://images.code.org/4de0035c9053477fa6f5484800dc8140-image-1505420957118.28.39 PM.png)

          ![](https://images.code.org/8335bef013e9655291fcfecf2c60fcd3-image-1505420957118.28.30 PM.png)  &nbsp;&nbsp; ![](https://images.code.org/ab3337f5b0848557c37fd114fe0d65b7-image-1505420957116.28.56 PM.png)
        teacher_markdown: "The message itself is a doughnut, thumbs down, and angry
          face.  Students may have fun coming up with their own interpretations of
          the emojis.  One possible interpretation is that the sender expected a doughnut,
          didn't get one and became angry, but there is no \"right\" answer to what
          the emojis mean.\n    \n(Hide this message by going to your teacher panel
          on the right and choosing to view as a student.)\n\n"
      CSD U5 Encryption 1_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # Decoding Binary Strings

          ![](https://images.code.org/6d8dcf1c1e6c2955fa767e9839af820e-image-1505420730035.24.20 PM.png)

          ## Encoding system:

          ![](https://images.code.org/df5db2027cac3c16c4ef4b2b8f940d5d-image-1505420957117.28.48 PM.png) ![](https://images.code.org/4de0035c9053477fa6f5484800dc8140-image-1505420957118.28.39 PM.png)

          ![](https://images.code.org/8335bef013e9655291fcfecf2c60fcd3-image-1505420957118.28.30 PM.png)  &nbsp;&nbsp; ![](https://images.code.org/ab3337f5b0848557c37fd114fe0d65b7-image-1505420957116.28.56 PM.png)
        teacher_markdown: "The message itself is a doughnut, thumbs down, and angry
          face.  Students may have fun coming up with their own interpretations of
          the emojis.  One possible interpretation is that the sender expected a doughnut,
          didn't get one and became angry, but there is no \"right\" answer to what
          the emojis mean.\n    \n(Hide this message by going to your teacher panel
          on the right and choosing to view as a student.)\n\n"
      CSD U5 Encryption 2:
        content1: deskripsi di sini
        markdown: |
          # Decoding Binary Strings

          ![](https://images.code.org/8d98818a95a736974cb4e6e5ab3717f4-image-1514928554045.24.20 PM.png)

          * Can you decode this binary string?
          * What do you need to know before you can decode it?
      CSD U5 Encryption 2_2018:
        content1: deskripsi di sini
        markdown: |
          # Decoding Binary Strings

          ![](https://images.code.org/8d98818a95a736974cb4e6e5ab3717f4-image-1514928554045.24.20 PM.png)

          * Can you decode this binary string?
          * What do you need to know before you can decode it?
      CSD U5 Encryption 2_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # Decoding Binary Strings

          ![](https://images.code.org/8d98818a95a736974cb4e6e5ab3717f4-image-1514928554045.24.20 PM.png)

          * Can you decode this binary string?
          * What do you need to know before you can decode it?
      CSD U5 L13 SFLP Interpreting Data:
        content1: deskripsi di sini
        markdown: |
          # Overview

          Go further into the interpreting of data by finding looking at the relationships between two different types of data. Look at how finding relationships can help you solve problems.

          ## Resources

          * [Interpreting Data](https://docs.google.com/document/d/1JZJ5-kZoHb6xI7B4Ua5EHwaS1UiLoeM8i6YUNAAbaEM/export?format=pdf) - Activity Guide
          * [Interpreting Data](https://docs.google.com/document/d/1YCqOxw4u8m142zaIVdUk4eBn8VnJBpkMzr4uEaDq2pM/export?format=pdf) - Resource
        teacher_markdown: "* Interpreting Data - Exemplar ([PDF](https://docs.google.com/document/d/1WFjiEP9-V2v9IIjsqn0MI-o-Xyn19pg_6apNL-a1gGw/export?format=pdf))\n"
      CSD U5 crosstab warmup:
        content1: deskripsi di sini
        markdown: |+
          # Cake Survey

          For this survey, people got to choose a cake flavor and an icing flavor.

          <table style="text-align: center; border: solid 1px darkgray;">
          <tr><td style="width: 50px; background-color: gray; color:white"></td><td style="width: 200px; background-color: gray; color:white">Cake Flavor</td><td style="width: 200px; background-color: gray; color:white">Icing Flavor</td></tr>
          <tr><td>1</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>2</td><td>Red Velvet Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>3</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>4</td><td>Carrot Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>5</td><td>Carrot Cake</td><td>Vanilla Icing</td></tr>
          <tr><td>6</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>7</td><td>Chocolate Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>8</td><td>Carrot Cake</td><td>Cream Cheese Icing</td></tr>
          </table>
          <br><br>

          If these people had to agree on one cake and icing combination for a party, what should it be?

          What if they were able to order two cakes with icing?

          How does knowing both choices help us better understand what sort of cakes we should order?

      CSD U5 crosstab warmup_2018:
        content1: deskripsi di sini
        markdown: |+
          # Cake Survey

          For this survey, people got to choose a cake flavor and an icing flavor.

          <table style="text-align: center; border: solid 1px darkgray;">
          <tr><td style="width: 50px; background-color: gray; color:white"></td><td style="width: 200px; background-color: gray; color:white">Cake Flavor</td><td style="width: 200px; background-color: gray; color:white">Icing Flavor</td></tr>
          <tr><td>1</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>2</td><td>Red Velvet Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>3</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>4</td><td>Carrot Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>5</td><td>Carrot Cake</td><td>Vanilla Icing</td></tr>
          <tr><td>6</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>7</td><td>Chocolate Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>8</td><td>Carrot Cake</td><td>Cream Cheese Icing</td></tr>
          </table>
          <br><br>

          If these people had to agree on one cake and icing combination for a party, what should it be?

          What if they were able to order two cakes with icing?

          How does knowing both choices help us better understand what sort of cakes we should order?

      CSD U5 crosstab warmup_2018_2019:
        content1: deskripsi di sini
        markdown: |+
          # Cake Survey

          For this survey, people got to choose a cake flavor and an icing flavor.

          <table style="text-align: center; border: solid 1px darkgray;">
          <tr><td style="width: 50px; background-color: gray; color:white"></td><td style="width: 200px; background-color: gray; color:white">Cake Flavor</td><td style="width: 200px; background-color: gray; color:white">Icing Flavor</td></tr>
          <tr><td>1</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>2</td><td>Red Velvet Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>3</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>4</td><td>Carrot Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>5</td><td>Carrot Cake</td><td>Vanilla Icing</td></tr>
          <tr><td>6</td><td>Chocolate Cake</td><td>Chocolate Icing</td></tr>
          <tr><td>7</td><td>Chocolate Cake</td><td>Cream Cheese Icing</td></tr>
          <tr><td>8</td><td>Carrot Cake</td><td>Cream Cheese Icing</td></tr>
          </table>
          <br><br>

          If these people had to agree on one cake and icing combination for a party, what should it be?

          What if they were able to order two cakes with icing?

          How does knowing both choices help us better understand what sort of cakes we should order?

      CSD U5 data visualization:
        content1: deskripsi di sini
        markdown: |
          ## Best Class Pet
          ### Here are three different ways to show the results of a vote for best class pet.

          ![](https://images.code.org/7c9f4de7b0028ab929a3a10494535525-image-1488389767180.png) ![](https://images.code.org/7e14d63776050e7aad994ee2e47cb7ce-image-1488389776283.png) ![](https://images.code.org/cf0dd06d2e0ccdf9573e204d24aad90a-image-1488389830915.png)


          ### Which one makes it easiest for a human to make a decision about which pet is the most popular?
          ### Which one makes it easiest for a computer to make a decision?
      CSD U5 data visualization_2018:
        content1: deskripsi di sini
        markdown: |
          ## Best Class Pet
          ### Here are three different ways to show the results of a vote for best class pet.

          ![](https://images.code.org/7c9f4de7b0028ab929a3a10494535525-image-1488389767180.png) ![](https://images.code.org/7e14d63776050e7aad994ee2e47cb7ce-image-1488389776283.png) ![](https://images.code.org/cf0dd06d2e0ccdf9573e204d24aad90a-image-1488389830915.png)


          ### Which one makes it easiest for a human to make a decision about which pet is the most popular?
          ### Which one makes it easiest for a computer to make a decision?
      CSD U5 data visualization_2018_2019:
        content1: deskripsi di sini
        markdown: |
          ## Best Class Pet
          ### Here are three different ways to show the results of a vote for best class pet.

          ![](https://images.code.org/7c9f4de7b0028ab929a3a10494535525-image-1488389767180.png) ![](https://images.code.org/7e14d63776050e7aad994ee2e47cb7ce-image-1488389776283.png) ![](https://images.code.org/cf0dd06d2e0ccdf9573e204d24aad90a-image-1488389830915.png)


          ### Which one makes it easiest for a human to make a decision about which pet is the most popular?
          ### Which one makes it easiest for a computer to make a decision?
      CSD U5 student record:
        content1: deskripsi di sini
        markdown: "# Student record\n\n<div style=\"float: right; height:209px; width:
          456px; background-color: black;\">\n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">0</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">1</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">2</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:53px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">3</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n</div>\n\n## The student record holds information
          according to the following rules:\n\n * <h4>The first eight bits store the
          student's grade as a binary number.</h4>\n * <h4>The second eight store
          the student's age as a binary number.</h4>\n * <h4>The next eight store
          the student's first initial in ASCII.</h4>\n * <h4>The last eight store
          the student's last initial in ASCII.</h4>\n\n<br />\n<br />\n"
        teacher_markdown: |
          [key]

          **Byte 0:** The student is in Grade 9.

          **Byte 1:** The student is 15 years old.

          **Byte 2** The student's first initial is "J".

          **Byte 3** The second initial is "H".

          [/key]

          To hide this box when you display the level, click the teacher panel on the right hand side of this page and choose the "View as Student" option.
      CSD U5 student record_2018:
        content1: deskripsi di sini
        markdown: "# Student record\n\n<div style=\"float: right; height:209px; width:
          456px; background-color: black;\">\n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">0</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">1</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">2</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:53px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">3</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n</div>\n\n## The student record holds information
          according to the following rules:\n\n * <h4>The first eight bits store the
          student's grade as a binary number.</h4>\n * <h4>The second eight store
          the student's age as a binary number.</h4>\n * <h4>The next eight store
          the student's first initial in ASCII.</h4>\n * <h4>The last eight store
          the student's last initial in ASCII.</h4>\n\n<br />\n<br />\n"
        teacher_markdown: |
          [key]

          **Byte 0:** The student is in Grade 9.

          **Byte 1:** The student is 15 years old.

          **Byte 2** The student's first initial is "J".

          **Byte 3** The second initial is "H".

          [/key]

          To hide this box when you display the level, click the teacher panel on the right hand side of this page and choose the "View as Student" option.
      CSD U5 student record_2018_2019:
        content1: deskripsi di sini
        markdown: "# Student record\n\n<div style=\"float: right; height:209px; width:
          456px; background-color: black;\">\n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">0</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">1</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:52px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">2</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  \n  <div style=\"float:left; height:53px;
          width: 40px; background-color: white; margin:0px; line-height: 50px; text-align:
          center;font-size: 20px;\">3</div>\n  <div style=\"float:left; height:50px;
          width: 50px; height: 50px; background-color: gray; margin:1px;\"></div>\n
          \ <div style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          white; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: white; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n  <div style=\"float:left; height:50px; width:
          50px; height: 50px; background-color: gray; margin:1px;\"></div>\n  <div
          style=\"float:left; height:50px; width: 50px; height: 50px; background-color:
          gray; margin:1px;\"></div>\n</div>\n\n## The student record holds information
          according to the following rules:\n\n * <h4>The first eight bits store the
          student's grade as a binary number.</h4>\n * <h4>The second eight store
          the student's age as a binary number.</h4>\n * <h4>The next eight store
          the student's first initial in ASCII.</h4>\n * <h4>The last eight store
          the student's last initial in ASCII.</h4>\n\n<br />\n<br />\n"
        teacher_markdown: |
          [key]

          **Byte 0:** The student is in Grade 9.

          **Byte 1:** The student is 15 years old.

          **Byte 2** The student's first initial is "J".

          **Byte 3** The second initial is "H".

          [/key]

          To hide this box when you display the level, click the teacher panel on the right hand side of this page and choose the "View as Student" option.
      CSD U6 LED create intro:
        content1: deskripsi di sini
        markdown: |
          # LED Apps

          In the last level, you made an app to control the LED with different buttons on the screen.   In the next two levels, you'll see some other examples of apps, then have a chance to make one of your own.

          As you look at the examples, think of what code might be useful for the app that you and your partner want to create.
      CSD U6 LED create intro_2018:
        content1: deskripsi di sini
        markdown: |
          # LED Apps

          In the last level, you made an app to control the LED with different buttons on the screen.   In the next two levels, you'll see some other examples of apps, then have a chance to make one of your own.

          As you look at the examples, think of what code might be useful for the app that you and your partner want to create.
      CSD U6 LED create intro_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # LED Apps

          In the last level, you made an app to control the LED with different buttons on the screen.   In the next two levels, you'll see some other examples of apps, then have a chance to make one of your own.

          As you look at the examples, think of what code might be useful for the app that you and your partner want to create.
      CSD U6 array multi:
        answers:
        - text: https://images.code.org/fc497646edb1fc92a4dfdca09030f294-image-1512686800362.42.54
            PM.png,200px
          correct: false
        - text: https://images.code.org/d9b2a9eca6e2027c032bbc6c1e47e107-image-1512686800356.44.34
            PM.png,200px
          correct: false
        - text: https://images.code.org/ae34c1d87e697c789303c5c1b602b7c6-image-1512686800360.44.11
            PM.png,200px
          correct: false
        - text: https://images.code.org/d220337a4cd1ec31b0a5bb70eaf6bffe-image-1512686800364.42.00
            PM.png,200px
          correct: true
        markdown: "![](https://images.code.org/134a993836c148f64a7045d489ec58dc-image-1512686800350.45.08
          PM.png)\n"
        questions:
        - text: What will App Lab display when the code on the left is run?
        title: Using Arrays
      CSD U6 array multi_2018:
        answers:
        - text: https://images.code.org/fc497646edb1fc92a4dfdca09030f294-image-1512686800362.42.54
            PM.png,200px
          correct: false
        - text: https://images.code.org/d9b2a9eca6e2027c032bbc6c1e47e107-image-1512686800356.44.34
            PM.png,200px
          correct: false
        - text: https://images.code.org/ae34c1d87e697c789303c5c1b602b7c6-image-1512686800360.44.11
            PM.png,200px
          correct: false
        - text: https://images.code.org/d220337a4cd1ec31b0a5bb70eaf6bffe-image-1512686800364.42.00
            PM.png,200px
          correct: true
        markdown: "![](https://images.code.org/134a993836c148f64a7045d489ec58dc-image-1512686800350.45.08
          PM.png)\n"
        questions:
        - text: What will App Lab display when the code on the left is run?
        title: Using Arrays
      CSD U6 array multi_2018_2019:
        answers:
        - text: https://images.code.org/fc497646edb1fc92a4dfdca09030f294-image-1512686800362.42.54
            PM.png,200px
          correct: false
        - text: https://images.code.org/d9b2a9eca6e2027c032bbc6c1e47e107-image-1512686800356.44.34
            PM.png,200px
          correct: false
        - text: https://images.code.org/ae34c1d87e697c789303c5c1b602b7c6-image-1512686800360.44.11
            PM.png,200px
          correct: false
        - text: https://images.code.org/d220337a4cd1ec31b0a5bb70eaf6bffe-image-1512686800364.42.00
            PM.png,200px
          correct: true
        markdown: "![](https://images.code.org/134a993836c148f64a7045d489ec58dc-image-1512686800350.45.08
          PM.png)\n"
        questions:
        - text: What will App Lab display when the code on the left is run?
        title: Using Arrays
      CSD U6 circuit smart bike blinker build:
        markdown: |
          # Build Your Blinkers

          Using the circuit you just built, return to your smart bike prototype and add the blinkers.
      CSD U6 circuit smart bike blinker build_2018:
        markdown: |
          # Build Your Blinkers

          Using the circuit you just built, return to your smart bike prototype and add the blinkers.
      CSD U6 circuit smart bike blinker build_2018_2019:
        markdown: |
          # Build Your Blinkers

          Using the circuit you just built, return to your smart bike prototype and add the blinkers.
      CSD U6 final intro:
        content1: deskripsi di sini
        markdown: |
          # Prototype your own innovation

          Now that you have all the skills you need, it's time to make your own game!

          With a partner or team, brainstorm some different physical devices you could prototype. You can build on the programs that you've already made in previous lessons, innovative devices that you've seen in the real world, or any wild ideas you can come up with.

          Once you have settled on an idea with your team, fill out the Project Guide with the sketches of the physical components of your device, inputs and outputs that you'll need, and plans for what information you'll need to process.

          ## Innovation Ideas

          To help kick off your brainstorming, check out these example projects:

          ### Automatic Night Light

          Using conductive thread, LEDs, and the light sensor, create a decorative piece of wall art the becomes a night light when the lights go out. This one is designed to look like flickering fireflies.

          ![](https://images.code.org/159af2d362c678c341d22b7f29635f8a-image-1518201828308.gif)

          ### Musical Instrument

          Design a musical instrument that can be played any way you like, using sensors or buttons for input. In this case we created five new buttons using conductive copper tape, though you could also use aluminum foil or any other conductive material.

          ![](https://images.code.org/deeb3d33ac1b51b19eec108f3b92efc7-image-1518202587911.gif)

          ### Bop-it

          Make a game! This one uses an array to store the different commands, which are picked at random each time you correctly follow the instructions on screen.

          ![](https://images.code.org/3e67cd6a112a10063d4183662d8fecc0-image-1518202606948.gif)
      CSD U6 final intro_2018:
        content1: deskripsi di sini
        markdown: |
          # Prototype your own innovation

          Now that you have all the skills you need, it's time to make your own game!

          With a partner or team, brainstorm some different physical devices you could prototype. You can build on the programs that you've already made in previous lessons, innovative devices that you've seen in the real world, or any wild ideas you can come up with.

          Once you have settled on an idea with your team, fill out the Project Guide with the sketches of the physical components of your device, inputs and outputs that you'll need, and plans for what information you'll need to process.

          ## Innovation Ideas

          To help kick off your brainstorming, check out these example projects:

          ### Automatic Night Light

          Using conductive thread, LEDs, and the light sensor, create a decorative piece of wall art the becomes a night light when the lights go out. This one is designed to look like flickering fireflies.

          ![](https://images.code.org/159af2d362c678c341d22b7f29635f8a-image-1518201828308.gif)

          ### Musical Instrument

          Design a musical instrument that can be played any way you like, using sensors or buttons for input. In this case we created five new buttons using conductive copper tape, though you could also use aluminum foil or any other conductive material.

          ![](https://images.code.org/deeb3d33ac1b51b19eec108f3b92efc7-image-1518202587911.gif)

          ### Bop-it

          Make a game! This one uses an array to store the different commands, which are picked at random each time you correctly follow the instructions on screen.

          ![](https://images.code.org/3e67cd6a112a10063d4183662d8fecc0-image-1518202606948.gif)
      CSD U6 final intro_2018_2019:
        content1: deskripsi di sini
        markdown: |
          # Prototype your own innovation

          Now that you have all the skills you need, it's time to make your own game!

          With a partner or team, brainstorm some different physical devices you could prototype. You can build on the programs that you've already made in previous lessons, innovative devices that you've seen in the real world, or any wild ideas you can come up with.

          Once you have settled on an idea with your team, fill out the Project Guide with the sketches of the physical components of your device, inputs and outputs that you'll need, and plans for what information you'll need to process.

          ## Innovation Ideas

          To help kick off your brainstorming, check out these example projects:

          ### Automatic Night Light

          Using conductive thread, LEDs, and the light sensor, create a decorative piece of wall art the becomes a night light when the lights go out. This one is designed to look like flickering fireflies.

          ![](https://images.code.org/159af2d362c678c341d22b7f29635f8a-image-1518201828308.gif)

          ### Musical Instrument

          Design a musical instrument that can be played any way you like, using sensors or buttons for input. In this case we created five new buttons using conductive copper tape, though you could also use aluminum foil or any other conductive material.

          ![](https://images.code.org/deeb3d33ac1b51b19eec108f3b92efc7-image-1518202587911.gif)

          ### Bop-it

          Make a game! This one uses an array to store the different commands, which are picked at random each time you correctly follow the instructions on screen.

          ![](https://images.code.org/3e67cd6a112a10063d4183662d8fecc0-image-1518202606948.gif)
      CSD U6 game project stop:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD U6 game project stop_2018:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD U6 game project stop_2018_2019:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD U6 setProperty predict multi:
        answers:
        - text: "![](https://images.code.org/1e226012bfa76c84938097e1ff117150-image-1579828841757.png)"
          correct: false
        - text: "![](https://images.code.org/dc9e1f761ff6a95542f283e2c700f9f1-image-1579828841754.png)"
          correct: false
        - text: "![](https://images.code.org/f89441dfc9260030feac9de3af2b7d3a-image-1579828841748.png)"
          correct: false
        - text: "![](https://images.code.org/b82461e6219e023280c4e22df59071d4-image-1579828841751.png)"
          correct: true
        questions:
        - text: Read the code and predict what this app will look like when run.
        teacher_markdown: 'For many of the programming activities in this unit, design
          mode elements have already been created.  One helpful tip for students is
          that they can hover over any of these elements to see the element''s id.

'
        title: Make a Prediction
      CSD U6 setProperty predict multi_2018:
        answers:
        - text: "![](https://images.code.org/1e226012bfa76c84938097e1ff117150-image-1579828841757.png)"
          correct: false
        - text: "![](https://images.code.org/dc9e1f761ff6a95542f283e2c700f9f1-image-1579828841754.png)"
          correct: false
        - text: "![](https://images.code.org/f89441dfc9260030feac9de3af2b7d3a-image-1579828841748.png)"
          correct: false
        - text: "![](https://images.code.org/b82461e6219e023280c4e22df59071d4-image-1579828841751.png)"
          correct: true
        questions:
        - text: Read the code and predict what this app will look like when run.
        teacher_markdown: 'For many of the programming activities in this unit, design
          mode elements have already been created.  One helpful tip for students is
          that they can hover over any of these elements to see the element''s id.

'
        title: Make a Prediction
      CSD U6 setProperty predict multi_2018_2019:
        answers:
        - text: "![](https://images.code.org/1e226012bfa76c84938097e1ff117150-image-1579828841757.png)"
          correct: false
        - text: "![](https://images.code.org/dc9e1f761ff6a95542f283e2c700f9f1-image-1579828841754.png)"
          correct: false
        - text: "![](https://images.code.org/f89441dfc9260030feac9de3af2b7d3a-image-1579828841748.png)"
          correct: false
        - text: "![](https://images.code.org/b82461e6219e023280c4e22df59071d4-image-1579828841751.png)"
          correct: true
        questions:
        - text: Read the code and predict what this app will look like when run.
        teacher_markdown: 'For many of the programming activities in this unit, design
          mode elements have already been created.  One helpful tip for students is
          that they can hover over any of these elements to see the element''s id.

'
        title: Make a Prediction
      CSD U6 tugowar stop:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD U6 tugowar stop_2018:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD U6 tugowar stop_2018_2019:
        markdown: |
          # Stop

          Before you move on you'll need to look at the Project Guide for this project. Wait for instructions from your teacher as well.
      CSD-U5-SFLP ASCII and Binary Representation:
        markdown: "# Overview\n\nLearn how the ASCII system uses On-Off patterns to
          represent the alphabet, then use it to create your own binary system for
          representing the alphabet. \n\n## Vocabulary\n\n* **ASCII** - ASCII - American
          Standard Code for Information Interchange.  ASCII is the universally recognized
          raw text format that any computer can understand.\n* **Binary** - A way
          of representing information using only two options.\n* **Bit** - A contraction
          of \"Binary Digit\".  A bit is the single unit of information in a computer,
          typically represented as a 0 or 1.\n\n\n## Resources\n\n* [ASCII - Activity
          Guide](https://docs.google.com/document/d/1zg1hNebVEGMbIepFS1pGqS-QqAyzENjP9F59UqXwDzI/export?format=pdf)\n"
        teacher_markdown: "* [ASCII](https://docs.google.com/document/d/1axpDn1sTR1RZUPB6G5rU5Dv_RCGJGSd7JWpd0J_chkU/edit?usp=sharing)
          - Exemplar ([PDF](https://docs.google.com/document/d/1axpDn1sTR1RZUPB6G5rU5Dv_RCGJGSd7JWpd0J_chkU/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1axpDn1sTR1RZUPB6G5rU5Dv_RCGJGSd7JWpd0J_chkU/export?format=doc))\n"
      CSD-U5-SFLP Automating Data Decisions:
        markdown: |
          # Overview

          You'll see an example of how a computer could be used to complete essentially every step of the data problem solving process. You'll create rules, or an algorithm, that a computer could use to make a decision automatically.

          ## Resources

          * [Automating Data Decisions](https://docs.google.com/document/d/1BaqqDWT1Y0cA80ytaXOfB8RbnVpMsqQ4K7KU_kX__gs/export?format=pdf) - Resource (copy as [MS Word](https://docs.google.com/document/d/1BaqqDWT1Y0cA80ytaXOfB8RbnVpMsqQ4K7KU_kX__gs/export?format=doc), [Google Doc](https://docs.google.com/document/d/1BaqqDWT1Y0cA80ytaXOfB8RbnVpMsqQ4K7KU_kX__gs/copy))
          * [Automating Data Decisions](https://docs.google.com/document/d/1ww7OiPAWu03K2C3c5LKbUm_Opkz9x0lZfizA_uJ7JsI/export?format=pdf) - Activity Guide (copy as [MS Word](https://docs.google.com/document/d/1ww7OiPAWu03K2C3c5LKbUm_Opkz9x0lZfizA_uJ7JsI/export?format=doc), [Google Doc](https://docs.google.com/document/d/1ww7OiPAWu03K2C3c5LKbUm_Opkz9x0lZfizA_uJ7JsI/copy))
        teacher_markdown: "* Automating Data Decisions - Exemplar ([PDF](https://docs.google.com/document/d/10h895sg_wlnXX3rxZNjROO1mQdHdtu5ZR_SnBTt-Xu4/export?format=pdf))\n"
      CSD-U5-SFLP Combining Representations:
        markdown: |
          # Overview

          This lesson combines all three types of binary representation systems (ASCII characters, binary number, and images) to allow for the encode of more complex types information in a record.  After seeing a series of bits and being asked to decode them, the class is introduced to the idea that  understanding binary information requires understanding both the system that is being used and the meaning of the information encoded.


          ## Resources

          * [Pet Records - Activity Guide](https://docs.google.com/document/d/14-oji3xpZfTXyU6eXLETyc9r9MAZAxlDuxQAi4L3G9g/export?format=pdf)
          * [ASCII to Binary Table - Reference](https://docs.google.com/document/d/1RgqkSXE8NGRfJe2Slw5DSIaP_YbpMhRE5u1zrutoyMk/export?format=pdf)
        teacher_markdown: "* [Pet Records](https://docs.google.com/document/d/1_nU0Uvz4xydx8_iGP-VXIy0uWCuFJYQnXwWWmEmwfN8/)
          - Exemplar ([PDF](https://docs.google.com/document/d/1_nU0Uvz4xydx8_iGP-VXIy0uWCuFJYQnXwWWmEmwfN8/export?format=pdf))\n"
      CSD-U5-SFLP Create a Representation:
        markdown: |
          # Overview

          Design a structure to represent your perfect day using the binary representation systems they've learned in this chapter. You'll need to use ASCII, binary numbers, and images as you design a punch card format.

          ## Resources

          * [Create a Representation - Project Guide](https://docs.google.com/document/d/1JAjFoPRfZF1V5WZqrdusZ_qjGWblaqTL-_l5jmaPhf0/export?format=pdf)
        teacher_markdown: "* Create a Representation - Project Guide ([Google Doc](https://docs.google.com/document/d/1xkRLn_iCefnbohgrlForYsg4vXzEYYdBuD0Q2dK3E1I/edit)
          | [PDF](https://docs.google.com/document/d/1xkRLn_iCefnbohgrlForYsg4vXzEYYdBuD0Q2dK3E1I/export?format=pdf))\n\n"
      CSD-U5-SFLP Interpreting Data:
        markdown: |
          # Overview

          Go further into the structuring of data by cleaning and visualizing raw data sets. Look at how visualizations change the way you understand data and make decisions about it.

          ## Resources

          * [Structuring Data](https://docs.google.com/document/d/1z2ocdwgBgWLeAG3IHhKvNHEVtyGrLePsmDg2liFkJ9Y/export?format=pdf) - Activity Guide
        teacher_markdown: "* Structuring Data - Exemplar ([PDF](https://docs.google.com/document/d/1XC8Ft6e3PTYrZQFuffpdCAEJaH1F4AxVU_sGVQbDEQU/export?format=pdf))\n"
      CSD-U5-SFLP Making Decisions with Data:
        markdown: |
          # Overview

          In this lesson you'll get some practice making decisions with data with some problems that might feel familiar.

          ## Resources

          * [Making Decisions with Data](https://docs.google.com/document/d/1ByeV-Q0e0VsgphCoVUZOxol0Fp2ArrsyV3rH8djnllg/export?format=pdf) - Activity Guide
        teacher_markdown: "* [Making Decisions with Data](https://docs.google.com/document/d/1MJ_Q6TF3pztGNIdKFhwZMC4kHZNXNvWQtbFPPQShQRk/edit?usp=sharing)
          - Exemplar ([PDF](https://docs.google.com/document/d/1MJ_Q6TF3pztGNIdKFhwZMC4kHZNXNvWQtbFPPQShQRk/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1MJ_Q6TF3pztGNIdKFhwZMC4kHZNXNvWQtbFPPQShQRk/export?format=doc))\n"
      CSD-U5-SFLP Patterns and Representation:
        markdown: |
          # Overview

          This lesson looks closer at what is needed to create a system of representation.  Groups create systems that can represent any letter in the alphabet using only a single stack of cards, then create messages with their systems and exchange with other groups to ensure the system worked as intended.   The class discusses commonalities between working systems while recognizing that there are many possible working solutions.
          ## Vocabulary

          * **Decode** - to change how information is represented so that it can be read by a person
          * **Encode** - to change how information is represented so that it can be read by a computer


          ## Resources

          * [Representing Information](https://docs.google.com/document/d/1emQKHuyzXvzg3cShX88CH8r8kMXInjItRIu9PdrfRpI/export?format=pdf) - Activity Guide (copy as [MS Word](https://docs.google.com/document/d/1emQKHuyzXvzg3cShX88CH8r8kMXInjItRIu9PdrfRpI/export?format=doc), [Google Doc](https://docs.google.com/document/d/1emQKHuyzXvzg3cShX88CH8r8kMXInjItRIu9PdrfRpI/copy))
        teacher_markdown: |+
          * [Representing Information](https://docs.google.com/document/d/11yxntV_uNFxT8sSJYddpQQIuCAzwqJZlBEsWMNE2y2M/edit) - Exemplar 1 ([PDF](https://docs.google.com/document/d/11yxntV_uNFxT8sSJYddpQQIuCAzwqJZlBEsWMNE2y2M/export?format=pdf))
          * [Representing Information](https://docs.google.com/document/d/1GBbceT4Q9HpiR3nxNuiKx8SEDTq4Hv-8Z-mo1yfMqj4/edit) - Exemplar 2 ([PDF](https://docs.google.com/document/d/1GBbceT4Q9HpiR3nxNuiKx8SEDTq4Hv-8Z-mo1yfMqj4/export?format=pdf))

      CSD-U5-SFLP Problem Solving and Data:
        markdown: |
          # Overview

          You'll use the problem solving process to help solve a data problem.

          ## Resources

          * [Problem Solving with Data](https://docs.google.com/document/d/1_5JzwIIl8u72QJq_dFpFPnVcNREBc3UHtQtObkwgckw/export?format=pdf) - Activity Guide
        teacher_markdown: "* Problem Solving with Data - Exemplar ([PDF](https://docs.google.com/document/d/1dNLqA8ejPyONEUcNmz0ZCigzeVAu4pt-_64sQUVQvok/export?format=pdf))\n"
      CSD-U5-SFLP Problem Solving with Big Data:
        markdown: |
          # Overview

          This lesson covers how data is collected and used by a organizations to solve problems in the real world. The class looks at three scenarios that could be solved using data and brainstorms the types of data they would want to solve them and how they could collect the data.  Each scenario also includes a video about a real-world service that has solved a similar problem with data.


          ## Resources

          * [Data in the Real World](https://docs.google.com/document/d/10MwyEV-wgpE6tHZxi-d9SQKrTPoz8J-QwmND8rn-m2I/export?format=pdf) - Activity Guide
      CSD-U5-SFLP Representation Matters:
        markdown: |
          # Overview

          Get your first taste of the importance of how information is represented and how it affects the way we make decisions. You'll help a few people decide which meal they should order.

          ## Resources

          * [Representation Matters - Activity Guide](https://docs.google.com/document/d/1wU8QANCmyz_DiJf2vdg2QPqKHq1YE0XDLGJmEsbKfiU/export?format=pdf)
        teacher_markdown: |
          [key]

          * [Representation Matters](https://docs.google.com/document/d/1iBGzpLZVxyU0v1rOQMydrs4EpaXScbsB0x2hvbY3qxA/edit?usp=sharing) - Exemplar ([PDF](https://docs.google.com/document/d/1iBGzpLZVxyU0v1rOQMydrs4EpaXScbsB0x2hvbY3qxA/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1iBGzpLZVxyU0v1rOQMydrs4EpaXScbsB0x2hvbY3qxA/export?format=doc))
          * [Meals Data](https://docs.google.com/document/d/1PAuIlPz-GEg3JsHpJd-rEnVcjP_DL3BAxT8wCmvrlGA/edit?usp=sharing) - Resource ([PDF](https://docs.google.com/document/d/1PAuIlPz-GEg3JsHpJd-rEnVcjP_DL3BAxT8wCmvrlGA/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1PAuIlPz-GEg3JsHpJd-rEnVcjP_DL3BAxT8wCmvrlGA/export?format=doc))

          [/key]
      CSD-U5-SFLP Representing Images:
        markdown: |+
          # Overview

          Learn how the on-off patterns you learned about in the last lesson can be used to represent images. Along the way you'll explore how some of the properties of representation systems you've already seen apply to images as well.

          ## Vocabulary

          * **pixel** - short for "picture element" it is the fundamental unit of a digital image, typically a tiny square or dot which contains a single point of color of a larger image.


      CSD-U5-SFLP Representing Numbers Part 1:
        markdown: |
          # Overview

          This lesson introduces the binary number system.  With a set of cards that represent the place values in a binary (base-2) number system, the class turns bits "on" or "off" by turning cards face up and face down, then observes the numbers that result from these different patterns.  Eventually, the pattern is extended to a generic 4-bit system.

          ## Resources
          * [Representing Numbers - Activity Guide](https://docs.google.com/document/d/1Bv2q50lF0wxx9D9n5JzsKFKXXmP8-p6LInO29Lm3Plk/export?format=pdf)
          * [Number Cards - Manipulative](https://docs.google.com/document/d/1UWJdBo0C7wE3jmSCDVTOSdDtRkxtIBqe4ttN0v5GFXM/export?format=pdf)
        teacher_markdown: |
          [key]

          * Representing Numbers - Exemplar ([Google Doc](https://docs.google.com/document/d/1vWSSAhfQzC5ZmEPZHTrShbwpYVBhjPLlB8bcOWbLHJ8) | [PDF](https://docs.google.com/document/d/1vWSSAhfQzC5ZmEPZHTrShbwpYVBhjPLlB8bcOWbLHJ8/export?format=pdf))

          [/key]
      CSD-U5-SFLP Representing Numbers Part 2:
        markdown: |
          # Overview

          This lesson addresses how people can keep data secret, even when other people can see it.  The class will look at an encoding method for emojis, then learn a way to encrypt their emoji messages using a keyword.


          ## Resources

          * [Keeping Data Secret - Activity Guide](https://docs.google.com/document/d/1i_s3XXcwG8QpE7dk7GfYkfcekGKTqpD0AOs1ZLvcnco/export?format=pdf)
        teacher_markdown: "* Keeping Data Secret - Exemplar ([PDF](https://docs.google.com/document/d/123IEPPRvhk18oW4hGQE1cRh8Ab5Kl-YvJHQ1udl6oks/export?format=pdf))\n"
      CSD-U5-SFLP Solve a Data Problem:
        markdown: |
          # Overview

          To conclude this unit you will design a way to use data to make a recommendation or prediction to help solve a problem of your choosing.

          ## Resources

          * [Make a Recommendation](https://docs.google.com/document/d/1pKeFH1OkWzfg3MFTPCezhK_r4p8xu7QUkPKSf5vV41c/export?format=pdf) - Project Guide
          * [Make a Recommendation](https://docs.google.com/document/d/1ZdA-VIdyPZLONBFr7ojFeNfHCHYmacbrrphiR31k6Bk/export?format=pdf) - Peer Review
        teacher_markdown: |
          * Make a Recommendation - Project Guide Exemplar ([PDF](https://docs.google.com/document/d/1D-Wr_Q9st_DsT1MF92Ixm8RFnWwI9tYmQN2rUXpd8I8/export?format=pdf))
          * Make a Recommendation - Peer Review Exemplar ([PDF](https://docs.google.com/document/d/1hcZ8Ps_2AQqQcBwHgoNngu7w0Cg3FNHBv4n2vvLFqYE/export?format=pdf))
      'CSD: getText vs getNumber':
        markdown: "# getText vs getNumber\n\nComputers store information in different
          ways. Two different ways a computer stores information are strings and numbers.
          \n\n`getNumber()` tries to get the value of whatever you are asking about
          as a number.\n\n`getText()` gets the value of whatever you are asking about
          as a string. Strings are often marked in your programs with `\" \"`. For
          example all the names of your IDs are strings. You can use `getText()` to
          retrieve a number but just know that it will be surrounded by `\" \"`.\n\n##
          Why does that matter?\n\nUsually it is fine to get everything as a string
          but when you want to do mathematical operations you need numbers not strings.
          \ When you try to add two strings together the computer thinks you want
          to combine the two strings together into one string. \n\nSo when you say
          `\"2\" + \"2\"` the computer evaluates that to `\"22\"`.\n\nWhere as when
          you say `2 + 2` (notice no `\" \"`) the computer evaluates that to `4`.\n"
      'CSD: setProperty':
        markdown: "# How setProperty Works\n\n`setProperty` is the code that lets
          you set properties of UI elements like color, width, font size, etc.  Any
          property you can set in Design Mode can also be set in code using `setProperty`\n\n<br><br>\n\n<div
          style=\"column-count: 3; column-gap: 20px; column-rule: 0.5px solid #00adbc;
          -moz-column-count: 3; width: 100%\">\n\n<p style=\"break-after: always;
          -moz-column-break-after: always; -webkit-column-break-after: always;\">\n\n\t<span
          style=\"color: #00adbc; font-size: 150%\">1.</span> In Code Mode you can
          find <code>setProperty</code> in the UI Controls toolbox.<br>\n\n\t<span
          style=\"color: #00adbc; font-size: 150%\">2.</span> Choose the id of the
          UI element you want to change a property of\n</p>\n\n<p style=\"break-after:
          always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\n\n\t<span
          style=\"color: #00adbc; font-size: 150%\">3.</span> The pulldown menu shows
          a list of properties that you can set for that element. It matches the list
          of properties that you see for an element in <strong>Design Mode</strong>\n</p>\n\n<p
          style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after:
          always;\">\n\n\t<span style=\"color: #00adbc; font-size: 150%\">4.</span>
          The last parameter is the value you want to set for that property. We're
          interested in background-color which has a variety of values you can give
          it.\n</p>\n\n\n</div>\n\n<img src=\"https://images.code.org/b7736bdcbde48f7951ebdc87135dd46c-image-1480536740764.png\"
          style=\"display: block; margin: auto\">\n\n\n## How to set the \"background-color\"\n\n<span
          style=\"color: #00adbc; font-size: 150%\">1.</span> *background-color* is
          a string (in quotes) that represents the color. Typically you state the
          color as a hex value or as three decimal RGB values like *\"rgb(255,0,0)\"*\n\n<img
          src=\"https://images.code.org/43291bf1c067145771bf88a147d74d26-image-1480538343306.png\"
          style=\"display: block; margin: auto\">\n"
      CSDU6 Innovation:
        markdown: |+
          # Innovation Research

          Choose one of the following topics to look into. You'll want to find information about some of the most recent innovative computing devices related to your category.

          ## Wearable Technology
          Wearable technology includes any form of computing that is designed to be worn by the user, whether it's embedded into the clothing or worn as an accessory. Many wearables, such as smart pedometers, overlap somewhat with health and safety as the device is both wearable _and_ intended to help improve your personal health.

          ## Health and Safety
          The broad range topic includes both consumer technology (things that you might use to improve your health or safety) and professional technology (gear that a doctor or other professional might use).

          ## Agriculture
          Agriculture might not be an obvious topic, but technological innovations have had a huge impact on how we approach farming. This includes incorporating computers into existing farm equipment, using sensors and robotics to monitor crops, and analyzing data to improve efficiency and sustainability.

          ## Manufacturing
          Advancements in rapid prototyping, industrial robotics, and automation have had a major impact on how goods are produced. Whether it's technology to enable affordable small-scale manufacturing (like 3D printers and laser cutters) or the integration of computers into factory work, there are many interesting areas to research here.

          ## Art and Design
          The intersection of artistic expression and computing can yield impressive and unexpected results. While you are less likely to find commercially available products related to art and design, you will find a wide variety of homemade creations that use all manners of computing devices in creative and expressive ways.

          ## Smart Home
          The dream of a house that understands and even anticipates your needs is closer than ever. Whether controlled explicitly through voice commands, or by using sensors to monitor and respond to changing conditions, smart home devices take care of any number of mundane or repetitive tasks around the house.


          # Research Considerations

          As you research devices on your topic, keep the following considerations in mind:

          * Focus on hardware based solutions over software programs
          * Focus on recent innovations over old news
          * Follow what interests you

          In addition to the recommended sites listed for each topic, consider looking towards the various crowd funding websites (such as Kickstarter and Indiegogo) to see the products that haven't quite made it off the ground yet.

        teacher_markdown: |+
          Here are some recommended sites for students to start their research.  Although these sites are generally appropriate for school, the content within them changes frequently, so **we strongly suggest you check each site for inappropriate content before sharing it with students**.

          ### Wearable Technology

          * [Warable.com](https://www.wareable.com/)

          ### Health and Safety

          * [Modern Healthcare](http://www.modernhealthcare.com/section/medical-devices)
          * [Medstartr](http://www.medstartr.com/)

          ### Agriculture

          * [National Institute of Food and Agriculture](https://nifa.usda.gov/topic/agriculture-technology)
          * [Farm Industry News](http://www.farmindustrynews.com/technology)

          ### Manufacturing

          * [Industry Week](http://www.industryweek.com/technology)
          * [3D Printing](https://3dprinting.com/)

          ### Art and Design

          * [ArtFab](http://artfab.art.cmu.edu/)
          * [Instructables](http://www.instructables.com/tag/type-id/category-technology/)

          ### Smart Home

          * [CNet](https://www.cnet.com/smart-home/)
          * [IoT Evolution](http://www.iotevolutionworld.com/smart-home/)


      CSDU6 Innovation_2018:
        markdown: |+
          # Innovation Research

          Choose one of the following topics to look into. You'll want to find information about some of the most recent innovative computing devices related to your category.

          ## Wearable Technology
          Wearable technology includes any form of computing that is designed to be worn by the user, whether it's embedded into the clothing or worn as an accessory. Many wearables, such as smart pedometers, overlap somewhat with health and safety as the device is both wearable _and_ intended to help improve your personal health.

          ## Health and Safety
          The broad range topic includes both consumer technology (things that you might use to improve your health or safety) and professional technology (gear that a doctor or other professional might use).

          ## Agriculture
          Agriculture might not be an obvious topic, but technological innovations have had a huge impact on how we approach farming. This includes incorporating computers into existing farm equipment, using sensors and robotics to monitor crops, and analyzing data to improve efficiency and sustainability.

          ## Manufacturing
          Advancements in rapid prototyping, industrial robotics, and automation have had a major impact on how goods are produced. Whether it's technology to enable affordable small-scale manufacturing (like 3D printers and laser cutters) or the integration of computers into factory work, there are many interesting areas to research here.

          ## Art and Design
          The intersection of artistic expression and computing can yield impressive and unexpected results. While you are less likely to find commercially available products related to art and design, you will find a wide variety of homemade creations that use all manners of computing devices in creative and expressive ways.

          ## Smart Home
          The dream of a house that understands and even anticipates your needs is closer than ever. Whether controlled explicitly through voice commands, or by using sensors to monitor and respond to changing conditions, smart home devices take care of any number of mundane or repetitive tasks around the house.


          # Research Considerations

          As you research devices on your topic, keep the following considerations in mind:

          * Focus on hardware based solutions over software programs
          * Focus on recent innovations over old news
          * Follow what interests you

          In addition to the recommended sites listed for each topic, consider looking towards the various crowd funding websites (such as Kickstarter and Indiegogo) to see the products that haven't quite made it off the ground yet.

        teacher_markdown: |+
          Here are some recommended sites for students to start their research.  Although these sites are generally appropriate for school, the content within them changes frequently, so **we strongly suggest you check each site for inappropriate content before sharing it with students**.

          ### Wearable Technology

          * [Warable.com](https://www.wareable.com/)

          ### Health and Safety

          * [Modern Healthcare](http://www.modernhealthcare.com/section/medical-devices)
          * [Medstartr](http://www.medstartr.com/)

          ### Agriculture

          * [National Institute of Food and Agriculture](https://nifa.usda.gov/topic/agriculture-technology)
          * [Farm Industry News](http://www.farmindustrynews.com/technology)

          ### Manufacturing

          * [Industry Week](http://www.industryweek.com/technology)
          * [3D Printing](https://3dprinting.com/)

          ### Art and Design

          * [ArtFab](http://artfab.art.cmu.edu/)
          * [Instructables](http://www.instructables.com/tag/type-id/category-technology/)

          ### Smart Home

          * [CNet](https://www.cnet.com/smart-home/)
          * [IoT Evolution](http://www.iotevolutionworld.com/smart-home/)


      CSDU6 Innovation_2018_2019:
        markdown: |+
          # Innovation Research

          Choose one of the following topics to look into. You'll want to find information about some of the most recent innovative computing devices related to your category.

          ## Wearable Technology
          Wearable technology includes any form of computing that is designed to be worn by the user, whether it's embedded into the clothing or worn as an accessory. Many wearables, such as smart pedometers, overlap somewhat with health and safety as the device is both wearable _and_ intended to help improve your personal health.

          ## Health and Safety
          The broad range topic includes both consumer technology (things that you might use to improve your health or safety) and professional technology (gear that a doctor or other professional might use).

          ## Agriculture
          Agriculture might not be an obvious topic, but technological innovations have had a huge impact on how we approach farming. This includes incorporating computers into existing farm equipment, using sensors and robotics to monitor crops, and analyzing data to improve efficiency and sustainability.

          ## Manufacturing
          Advancements in rapid prototyping, industrial robotics, and automation have had a major impact on how goods are produced. Whether it's technology to enable affordable small-scale manufacturing (like 3D printers and laser cutters) or the integration of computers into factory work, there are many interesting areas to research here.

          ## Art and Design
          The intersection of artistic expression and computing can yield impressive and unexpected results. While you are less likely to find commercially available products related to art and design, you will find a wide variety of homemade creations that use all manners of computing devices in creative and expressive ways.

          ## Smart Home
          The dream of a house that understands and even anticipates your needs is closer than ever. Whether controlled explicitly through voice commands, or by using sensors to monitor and respond to changing conditions, smart home devices take care of any number of mundane or repetitive tasks around the house.


          # Research Considerations

          As you research devices on your topic, keep the following considerations in mind:

          * Focus on hardware based solutions over software programs
          * Focus on recent innovations over old news
          * Follow what interests you

          In addition to the recommended sites listed for each topic, consider looking towards the various crowd funding websites (such as Kickstarter and Indiegogo) to see the products that haven't quite made it off the ground yet.

        teacher_markdown: |+
          Here are some recommended sites for students to start their research.  Although these sites are generally appropriate for school, the content within them changes frequently, so **we strongly suggest you check each site for inappropriate content before sharing it with students**.

          ### Wearable Technology

          * [Warable.com](https://www.wareable.com/)

          ### Health and Safety

          * [Modern Healthcare](http://www.modernhealthcare.com/section/medical-devices)
          * [Medstartr](http://www.medstartr.com/)

          ### Agriculture

          * [National Institute of Food and Agriculture](https://nifa.usda.gov/topic/agriculture-technology)
          * [Farm Industry News](http://www.farmindustrynews.com/technology)

          ### Manufacturing

          * [Industry Week](http://www.industryweek.com/technology)
          * [3D Printing](https://3dprinting.com/)

          ### Art and Design

          * [ArtFab](http://artfab.art.cmu.edu/)
          * [Instructables](http://www.instructables.com/tag/type-id/category-technology/)

          ### Smart Home

          * [CNet](https://www.cnet.com/smart-home/)
          * [IoT Evolution](http://www.iotevolutionworld.com/smart-home/)


      Choosing Good IDs:
        markdown: "# Choosing Good IDs\n\n**Good IDs** are **meaningful and descriptive**.\n\nJust
          like you want good names for functions, you will want an ID to describe
          the intended purpose of the element.  \n\nFor example, if you have many
          buttons in your program, you will want to give each an ID that describes
          what the button does. \n\nSo, instead of this:\n \n * `button1` and `button2`\n\nYou
          might make IDs that convey not only that it's a button but what you intend
          the button to be used for, like:\n\n * `homeButton` and `saveButton` or\n
          * `buttonHome` and `buttonSave` or\n * `homeBtn` and `saveBtn`\n * it's
          up to you!\n\n<img src=\"https://images.code.org/b33be9ee1521f2aa80fedcf22c929d44-image-1476910499958.png\"
          style=\"display: block; margin: auto;\">\n\n# Rules About IDs\nIn making
          descriptive and meaningful IDs there **are some rules about IDs** you need
          to know.  IDs...\n\n* are case-sensitive.\n* cannot contain spaces.\n* *must*
          begin with a letter (A-Z or a-z) and may be followed by any number of digits
          and letters.\n* can contain hyphens (\"-\"), underscores (\"_\"), colons
          (\":\"), or periods (\".\").\n\n**Case-sensitive?**\n\nThis means there
          is a difference between `HomeButton` and `homeButton`  (notice the Capital
          H on the first one).\n\nThese differences seem annoying at first, but you
          get used to it, and actually appreciate the fact that the computer requires
          such precision.\n\nThere are a few common styles for capitalizing and spelling
          multi-word IDs:\n\n* **\"Camelcase\"** -- `aCamelcaseNameMightLookLikeThis`\n*
          **Underscores** -- `Some_people_like_to_use_underscores_to_separate_words`\n*
          **dashes** -- `Others-like-to-use-hyphens-or-dashes`\n\nWhatever you choose
          is up to you.  It's your style.  It just helps to be consistent.\n\n\n\n\n"
        teacher_markdown: |
          #### Developing Good Programming Habits

          Following clear and consistent naming conventions is an important habit to develop, but the benefits are rarely immediately obvious to students. It really pays off in the long term to be a stickler for well named IDs, particularly because it will save your own sanity when it comes time to read your students' programs, but it will also simplify the process of combining each student's screen into a full team app.
      ConditionalsWithCards-Unplugged:
        markdown: |
          "#Persyaratan Dengan Kartu

          Mainkan permainan kartu dan buat aturan seperti ""Jika saya menggambar kartu merah, saya mendapat poin"" dan ""Jika saya menggambar kartu hitam, Anda mendapat poin."""
      Crowdsourcing-Unplugged:
        markdown: |
          #Urun Daya

          Perhatikan cara urun daya, proses teknik umum pemecahan masalah dalam ilmu komputer, dapat membantu Anda menyelesaikan tugas bersama sebagai ruang kelas lebih efesien daripada jika Anda harus melakukannya sendiri.
      Dance_Party_extras_intro:
        markdown: |
          #Tetaplah berdansa

          Untuk bagian 2,anda bisa membuat proyek anda sendiri.Tidak ada teka teki di sini-malah banyak proyek yang menampilkan cara cara berbeda untuk membuat pesta dansa yang kompleks.

          Anda bisa melakukan level ini-dalam urutan apapun_melompat untuk melihat bagaimana sesuatu sudah dikerjakan dalam tingkat selanjutnya atau kombinasi konsep diantara proyek. Cobalah semua,ambil yang anda suka dan habiskan waktu anda untuk bekerja untuk menambahkan pada proyek agar menjadi milik anda sendiri.

          <a class="btn btn-large btn-primary next-stage submitButton pull-right">lanjutkan</a>

          <div class="clearfix"></div>

          <div style="float: left; margin: 10px">
          <a href="2">
          <h2>
          Masuk formasi
          </h2>

          <img src="https://images.code.org/70ad4cbc12321f301d43161f847bdee4-image-1541746835274.gif"></a>

          </div>

          <img src="https://images.code.org/70ad4cbc12321f301d43161f847bdee4-image-1541746835274.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="3">
          <h2>
          Mereka hendak kemana?
          </h2>

          <img src="https://images.code.org/524010de61c9af76e98bd2a5ccdba461-image-1541746855689.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="4">
          <h2>
          Kru dansa
          </h2>

          <img src="https://images.code.org/f4ccfd43f9a15d68a339b449be8e96c3-image-1541746870889.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="5">
          <h2>
          Seperempat not
          </h2>

          <img src="https://images.code.org/6b538efe77ea6e19f1428f7c0e45c621-image-1541746886875.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="6">
          <h2>
          Rendah,menengah,tinggi
          </h2>

          <img src="https://images.code.org/3825556a395fd31bc4f767ca7ea5c566-image-1541746894197.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="7">
          <h2>
          Mempercepat,memperlambat
          </h2>

          <img src="https://images.code.org/d7f35c686ef0a9c5a6975889fd7c566b-image-1541746900730.gif"></a>

          </div>
      Dance_Party_extras_intro_2019:
        markdown: |
          # Terus menari!

          Untuk bagian 2, Anda akan membuat proyek Anda sendiri. Tidak ada teka-teki di sini - malah ada banyak proyek yang menunjukkan cara berbeda untuk membuat pesta dansa yang lebih kompleks.

          Anda dapat melakukan level ini dalam urutan apa pun. Langsung berkeliling untuk melihat bagaimana sesuatu dilakukan di tingkat sebelumnya, atau menggabungkan konsep antara proyek. Cobalah semuanya, pilih favorit Anda, dan habiskan waktu Anda bekerja untuk menambah proyek itu untuk menjadikannya milik Anda.

          <a class="btn btn-large btn-primary next-stage submitButton pull-right">Lanjutkan</a>

          <div class="clearfix"></div>


          <div style="float: left; margin: 10px">
          <a href="2">
          <h2>
          Kembali dan Keempat
          </h2>

          <img src="https://images.code.org/2ecaa2dc4e7c6f672ced7e043d8ae0ff-image-1573667207373.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="3">
          <h2>
          Lebih Banyak Tombol
          </h2>

          <img src="https://images.code.org/b25c6c68477a794c3086cf1169a5782f-image-1573666336377.gif"></a>

          </div>
          <div style="float: left; margin: 10px">
          <a href="4">
          <h2>
          Dapatkan Informasi
          </h2>

          <img src="https://images.code.org/70ad4cbc12321f301d43161f847bdee4-image-1541746835274.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="5">
          <h2>
          Kemana Mereka Pergi?
          </h2>

          <img src="https://images.code.org/524010de61c9af76e98bd2a5ccdba461-image-1541746855689.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="6">
          <h2>
          Kru Dansa
          </h2>

          <img src="https://images.code.org/f4ccfd43f9a15d68a339b449be8e96c3-image-1541746870889.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="7">
          <h2>
          Perempat Catatan
          </h2>

          <img src="https://images.code.org/6b538efe77ea6e19f1428f7c0e45c621-image-1541746886875.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="8">
          <h2>
          Bass, Mid, Treble
          </h2>

          <img src="https://images.code.org/3825556a395fd31bc4f767ca7ea5c566-image-1541746894197.gif"></a>

          </div>

          <div style="float: left; margin: 10px">
          <a href="9">
          <h2>
          Percepat, Perlambat
          </h2>

          <img src="https://images.code.org/d7f35c686ef0a9c5a6975889fd7c566b-image-1541746900730.gif"></a>

          </div>
      Design a Screen for your App_2018:
        markdown: |
          # Mocking Up Your App

          Now that you have some practice laying out elements in App Lab, you can start working on mocking your own app. With your group, divvy up the screens so that everyone is working on a different screen.

          Because you'll be dividing the work up, you'll want to do some planning ahead of time to decide on a common look and feel for your pages. For example, you'll want to agree on things such as:

          * Where do navigation buttons go?
          * What colors will you use for backgrounds, text, and buttons
          * What's the general style and layout?

          # Namespacing

          In the next lesson you will combine all of your team members' screens into one app. To make sure that the IDs on one page don't conflict with another you'll need to include a unique _namespace_ for your page. This will be something you add to the beginning of every id so that your element ids don't conflict with others when you merge everyone's screens together. Your namespace should be the ID of your screen with an underscore at the end. For example, if you are making the home page, you might use "home_" as your namespace - leading to ids such as:

          * "home_title"
          * "home_loginButton"
          * "home_logo"
        teacher_markdown: |
          #### Namespacing

          Ensuring that all students are both creating unique IDs for all elements and properly namespacing them will go a long way towards avoiding issues in the next lesson, so it pays to be a stickler here. You can provide students with the optional Screen Design Activity Guide to keep track of their element IDs.

          #### Working together, apart

          Even more so than the the paper prototyping activity, it is easy for students in this lesson to forget that they need to consider how their choices affect their team. Encourage active discussion among teams as they design screens to ensure that they are all working towards a common goal.
      Design a Screen for your App_2018_2019:
        markdown: |
          # Mocking Up Your App

          Now that you have some practice laying out elements in App Lab, you can start working on mocking your own app. With your group, divvy up the screens so that everyone is working on a different screen.

          Because you'll be dividing the work up, you'll want to do some planning ahead of time to decide on a common look and feel for your pages. For example, you'll want to agree on things such as:

          * Where do navigation buttons go?
          * What colors will you use for backgrounds, text, and buttons
          * What's the general style and layout?

          # Namespacing

          In the next lesson you will combine all of your team members' screens into one app. To make sure that the IDs on one page don't conflict with another you'll need to include a unique _namespace_ for your page. This will be something you add to the beginning of every id so that your element ids don't conflict with others when you merge everyone's screens together. Your namespace should be the ID of your screen with an underscore at the end. For example, if you are making the home page, you might use "home_" as your namespace - leading to ids such as:

          * "home_title"
          * "home_loginButton"
          * "home_logo"
        teacher_markdown: |
          #### Namespacing

          Ensuring that all students are both creating unique IDs for all elements and properly namespacing them will go a long way towards avoiding issues in the next lesson, so it pays to be a stickler here. You can provide students with the optional Screen Design Activity Guide to keep track of their element IDs.

          #### Working together, apart

          Even more so than the the paper prototyping activity, it is easy for students in this lesson to forget that they need to consider how their choices affect their team. Encourage active discussion among teams as they design screens to ensure that they are all working towards a common goal.
      DesigningForAccessibilityMarkdownLevel_2019:
        markdown: |
          # Merancang untuk Aksesibilitas

          * Dalam dunia ilmu komputer, **aksesibilitas** adalah tentang menciptakan teknologi untuk para penyandang cacat.
          * Cacat termasuk fisik, pendengaran, visual, dan banyak cacat lainnya.
          * Cacat itu beragam dan memengaruhi orang dengan berbagai cara, termasuk cara mereka menggunakan teknologi seperti **aplikasi telepon seluler pintar**.
          * Merancang aplikasi yang dapat diakses orang penyandang cacat membuat aplikasi tersebut lebih baik untuk semua orang juga!

          ![](https://images.code.org/0c670d0d9078657a870df0ca799492cb-image-1557166420066.png)
      DigitalCitizenship-Unplugged:
        markdown: |
          "#Kewargaan Digital

          Beberapa informasi tidak aman dibagikan secara online. Pelajaran ini akan membantu Anda mempelajari perbedaan antara informasi pribadi dan aman."
      DigitalFootprint-Unplugged:
        markdown: |
          # Your Digital Footprint

          Masukkan informasi tentang diri Anda secara online untuk menciptakan jejak digital.
      DigitalSharing-Unplugged:
        markdown: |
          #Berbagi Digital

          Dalam pelajaran ini, Anda akan mempertimbangkan tantangan dan keuntungan menghargai kepemilikan dan hak cipta, khususnya dalam lingkungan digital.
      EnvelopeVariables-Unplugged:
        markdown: |
          #Variabel sampul

          Variabel memberikan banyak kebebasan dalam ilmu komputer. Pelajaran ini membantu menjelaskan pengertian variabel dan cara kita menggunakannya dengan berbagai cara.
      Example App Types_2018:
        markdown: |
          # Example App Types

          In the following levels you see several different example apps. They will give you an idea of what the UI (User Interface) could look like for apps with different goals.

          For each example app:

          * Click through the example to get a feel for how it functions.
          * In your activity guide, make a note of any features or UI elements you find and what they are used for.
          * Discuss with your groups how that app and any of its UI features could be applied to your chosen topic.

          # A Note About Functionality

          These apps are _prototypes_; they allow a user to interact with the design without worrying about the underlying functionality. For example, when you take use the Quiz App, each question will always respond the same way, regardless of which answer you choose.

          By focusing on an interactive prototype first you can learn a lot about how users might use your app before investing too much energy in making it actually work.
        teacher_markdown: |
          In this activity students will be introduced to a small number of relatively constrained apps:

          * Quiz Me
          * Decision Maker
          * List Manager
          * Crowdsourcing

          For younger or more inexperienced students you may want to restrict them to _just_ these app types. We've specifically chosen these examples because they are relatively easy to prototype in App Lab.

          If you allow students to stray from these, be aware that some types of apps are more difficult to create in App Lab and may require more creativity in developing a prototype. For example, App Lab has no mapping functionality, so if students wanted to create a mapping app, they would need to find or create a static image of a map to use in their app.
      Example App Types_2018_2019:
        markdown: |
          # Example App Types

          In the following levels you see several different example apps. They will give you an idea of what the UI (User Interface) could look like for apps with different goals.

          For each example app:

          * Click through the example to get a feel for how it functions.
          * In your activity guide, make a note of any features or UI elements you find and what they are used for.
          * Discuss with your groups how that app and any of its UI features could be applied to your chosen topic.

          # A Note About Functionality

          These apps are _prototypes_; they allow a user to interact with the design without worrying about the underlying functionality. For example, when you take use the Quiz App, each question will always respond the same way, regardless of which answer you choose.

          By focusing on an interactive prototype first you can learn a lot about how users might use your app before investing too much energy in making it actually work.
        teacher_markdown: |
          In this activity students will be introduced to a small number of relatively constrained apps:

          * Quiz Me
          * Decision Maker
          * List Manager
          * Crowdsourcing

          For younger or more inexperienced students you may want to restrict them to _just_ these app types. We've specifically chosen these examples because they are relatively easy to prototype in App Lab.

          If you allow students to stray from these, be aware that some types of apps are more difficult to create in App Lab and may require more creativity in developing a prototype. For example, App Lab has no mapping functionality, so if students wanted to create a mapping app, they would need to find or create a static image of a map to use in their app.
      ForLoopFun-Unplugged:
        markdown: |
          #Untuk Lingkaran yang Menyenangkan

          Kami tahu bahwa lingkaran memungkinkan kita untuk melakukan berbagai hal berulang kali, tetapi sekarang kami akan mempelajari cara menggunakan lingkaran dengan struktur ekstra yang dibangun dengan tepat.
      GettingLoopy-Unplugged:
        markdown: |
          # Getting Loopy

          Pelajaran ini memperkenalkan konsep pemrograman lingkaran melalui aktivitas menari.
      GoingPlacesSafely-unplugged:
        markdown: |
          # Going Places Safely

          Internet sangat bermanfaat, tetapi terkadang menjadi tempat yang berbahaya. Bertindaklah dengan aman saat menjelajah di internet.

          <p align=center>
      GraphPaperProgramming-Unplugged:
        markdown: |
          "#Pemrograman Kertas Grafik

          Tulis algoritma yang dapat digunakan teman sekelas Anda untuk menggambar."
      HappyLoops-Unplugged:
        markdown: |
          # Happy Loops

          Dalam pelajaran ini, Anda akan mempelajari lingkaran!

          ![](https://images.code.org/6aac7f675f0c69033f42ccac6a733f68-image-1557769673400.png)
      HappyMaps-Unplugged:
        markdown: |
          # Happy Maps

          Buat algoritma untuk memindahkan karakter melalui sebuah labirin.
      Internet Simulator Setup:
        content1: deskripsi di sini
        markdown: "# Code.org's Internet Simulator\n\n_Note: This instructions listed
          in this tutorial are for teachers wishing to use the Internet Simulator
          as a standalone tool, separate from the Code.org Computer Science Principles
          curriculum. If you are planning to use the activities designed as part of
          the Code.org CSP curriculum, then please head to the [CSP curriculum page.](https://code.org/educate/csp)_\n\n###
          Contents\nThere are 3 pages of background and information contained here:\n\n*
          What is the Internet Simulator? Overview (see below)\n* [setup instructions](/s/netsim/stage/1/puzzle/2)\n*
          [FAQ](/s/netsim/stage/1/puzzle/3)\n \n### What is the Internet Simulator?
          An Overview:\n\nThe Internet Simulator is a tool developed by Code.org for
          our new high school [Computer Science Principles](https://code.org/educate/csp)
          class. The tool is designed to let students get a hands on experience experimenting
          with (and solving) different kinds of problems associated with networked
          computers. The Internet Simulator is used in multiple lessons throughout
          Units 1 and 2 in our curriculum to successively build up the different layers
          of the Internet. \n\nIf you are considering using the tool in your classroom
          with activities you design, we would recommend you get familiar with the
          tool via our [lesson plans](https://curriculum.code.org/csp/unit1). **The
          setup instructions** on the next page are for teachers who would like to
          use the Internet Simulator separate from the Code.org CSP curriculum. \n\nThe
          tool itself doesn't _teach_ these concepts, but rather provides an environment
          for multiple students to come together and send binary, decimal, or ascii
          based messages to each other or other classmates.  **The environment can
          be configured** in a variety of ways to expose different kinds of problems,
          visualize data and connections between hosts, and support learning of various
          concepts related to the Internet.\n\nThe Internet Simulator was designed
          to be used in a *classroom* with students working collaboratively in-person
          to solve problems. Often these problems involve inventing a communcation
          protocol, or inventing ways to encode information in a structred way that
          makes transporting it over the Internet feasible. \n\n**In Code.org's Computer
          Science Principles curriculum** we typically structure lessons and activities
          in the following way:\n\n* **First present students with a challenge**\n
          * e.g. The physical internet is inherently unreliable and can drop messages\n*
          **Give an opportunity to experiment with the simulator to get a sense of
          issues** \n * e.g. look at the router logs to discover that 10-20% of all
          messages are dropped and packets can be routed out of order\n* **Give an
          opportunity to invent their own solution to the challenge** \n  * e.g. invent
          their own protocol for how to reliably send messages on this unreliable
          network\n* **Finally, students research how that protocol or invention works
          \"in the real world\"**\n * e.g. Research how TCP really works and watch
          a video\n\n### What Can The Internet Simulator be Configured To Do?\n\nAt
          its most basic, the Internet Simulator can communicate a single bit of information
          via a single shared wire with no coordination or synchronization.  At it's
          most advanced it can simulate unreliable connections over multiple routers,
          using IP addresses, a DNS, and fixed sized packets requiring the creation
          of protocols similar to TCP/IP or HTTP. \n\nWe have set up the Internet
          Simulator in a variety of configurations that are conducive to teaching
          certain topics.  But if using the Internet Simulator for class you should
          be aware of some user interface settings that you may wish to control or
          tell your students to setup in a particular way.  \n\nFor example: one of
          the features of the Internet Simulator is that you can show the binary,
          decimal, hex and ASCII representations of any data you send around.  In
          some configurations the user can also set the \"chunk size\" to dictate
          how bits are interpreted.  For a lesson of your own design, you might choose
          one of the configurations we have provided, but might need to mandate that
          students only show a particular representation of the bits, or maybe you
          want the chunk size to be set to a particular value.\n\nThe larger point
          is that the configurations provided here are meant to be a starting point
          for teaching a particular topic.  You might need to employ some ingenuity
          and teaching strategies to further refine the use of the Simulator to fit
          your needs.\n\n\n <br><br>\n<img src=\"https://images.code.org/0bf9799b2bec2756c1664b84e12cbe27-image-1438642671141.57.13.png\"
          width=\"600px\" style=\"margin:0 100px\"/>\n<br><br>\n\n\n\n    \n\n\n_Next
          up: Setup instructions_\n\n<a class=\"btn btn-large btn-primary next-stage
          submitButton\">Continue</a>\n"
      Internet Simulator Setup 2:
        content1: deskripsi di sini
        markdown: "# Internet Simulator: Setup Instructions\n\n1. **Create a section
          in Code Studio.** For the students in your class to be able to communicate
          with each other, they all need to be associated with the same section in
          Code Studio. Signed in as a teacher account, you will need to create a section
          that all of your students join. To create a section:\n * Navigate to the
          [sections](https://code.org/teacher-dashboard#/sections) area of the teacher
          dashboard\n * Click the 'New Section' button. We recommend choosing Login
          Type 'Email' and 'cspunit1' for the course. \n <br>\n<img src=\"https://images.code.org/9e9961a44b0a2f76ab92e6f9634d8f55-image-1438640255737.17.04.png\"
          width=\"600px\" />\n<br><br>\n2. **Have students join your section.** Once
          the section is created, click the 'Manage Students' link for the section.
          You will see a section code that you can ask students to join once they
          have created their own Code Studio accounts.\n<br>\n<img src=\"https://images.code.org/9b8863dbb5a8e229e9bc1c4fc74ddd22-image-1438641516264.png\"
          width=\"400px\" />\n<br><br>\n3. **Provide students with the URL to the
          Internet Simulator version you want to use.** We have created several different
          configuations of the Internet Simulator available at [code.org/internetsimulator](http://code.org/internetsimulator).
          When you find a configuration that works for your activity, share the URL
          with students. If they are all in the same section, then they will automatically
          be able to connect with each other when they arrive at the same URL.  \n\n_Next
          up: Frequently Asked Questions_\n\n<a class=\"btn btn-large btn-primary
          next-stage submitButton\">Continue</a>\n\n"
      Internet Simulator Setup 3:
        content1: deskripsi di sini
        markdown: |
          # Internet Simulator: FAQ

          #### Where can I find the activities you've designed to use with the Internet Simulator?
          The activities we've designed for our Computer Science Principles curriculum, including the specific Internet Simulator configurations can be found in the Unit lesson plans [here](https://code.org/educate/csp). Many of the lesson plans have "Teacher Tips & Tricks" support videos that show demonstrations of the Internet Simulator used as a part of the classroom activities. You can use these activities as is, or feel free to modify to best suit your class!

          #### Can I customize the Internet Simulator for my class?
          Right now, we unfortunately don't have a way for people outside of Code.org to create specific configurations and instructions for the Internet Simulator. We've tried to expose a variety of different configurations that can hopefully work for your classroom and activity. Long-term, we'd love to have a way to let others configure the tool.

          #### My students can't see each other when they go to the URL I give them for the Internet Simulator. What do I do?
          For students to see each other in the lobby of the Internet Simulator, they'll need to be in the same section. Double check that you've completed the section setup instructions from the previous page, and that the students in question have joined that specific section code. Also, some students may be in multiple sections if they've done coursework with Code.org before, so make sure they know the name of your section and have picked it in the dropdown before entering the lobby.


          <a class="btn btn-large btn-primary next-stage submitButton">Continue</a>
      Internet-Unplugged:
        markdown: |
          #Internet

          Bangun internet Anda sendiri di kelas hanya dengan menggunakan secarik kertas.
      K-1 Artist 1 Multi 1:
        answers:
        - text: "/script_assets/k_1_images/artist_images/W-S-S.png"
          correct: false
        - text: "/script_assets/k_1_images/artist_images/E-S-S.png"
          correct: true
        - text: "/script_assets/k_1_images/artist_images/S-E-E.png"
          correct: false
        - text: "/script_assets/k_1_images/artist_images/E-S.png"
          correct: false
        content1: "/script_assets/k_1_images/artist_images/rshort_dlong.png, 500"
        questions:
        - text: Blok manakah yang dapat menyelesaikan teka-teki tersebut?
        title: Pilihan Berganda
      K-1 Artist 1 Multi 2:
        answers:
        - text: "/script_assets/k_1_images/artist_images/N-E-S-W.png"
          correct: true
        - text: "/script_assets/k_1_images/artist_images/E-S-W-N.png"
          correct: false
        - text: "/script_assets/k_1_images/artist_images/N-S-E-W.png"
          correct: false
        - text: "/script_assets/k_1_images/artist_images/N-W-S-E.png"
          correct: false
        content1: "/script_assets/k_1_images/artist_images/square.png, 500"
        questions:
        - text: Blok mana yang menarik alun-alun?
        title: Pilihan Berganda
      K-1 Artist 2 Match 2:
        answers:
        - text: "/script_assets/k_1_images/artist_images/medium_circle.png"
        - text: "/script_assets/k_1_images/artist_images/small_square.png"
        - text: "/script_assets/k_1_images/artist_images/large_rectangle.png"
        - text: "/script_assets/k_1_images/artist_images/large_triangle.png"
        content2: Cocokkan bentuk berdasarkan jenisnya.
        questions:
        - text: "/script_assets/k_1_images/artist_images/small_circle.png"
        - text: "/script_assets/k_1_images/artist_images/large_square.png"
        - text: "/script_assets/k_1_images/artist_images/medium_rectangle.png"
        - text: "/script_assets/k_1_images/artist_images/small_triangle.png"
        title: Mencocokan
      K-1 Bee 1 Multi 1:
        answers:
        - text: "/script_assets/k_1_images/bee_images/nectar.png"
          correct: false
        - text: "/script_assets/k_1_images/bee_images/2nectar.png"
          correct: true
        - text: "/script_assets/k_1_images/bee_images/3nectar.png"
          correct: false
        - text: "/script_assets/k_1_images/bee_images/4nectar.png"
          correct: false
        content1: "/script_assets/k_1_images/bee_images/1nectar+2nectar.png"
        questions:
        - text: berapa banyak kah jumlah madu?
        title: Pilihan Berganda
      K-1 Bee 1 Multi 2:
        answers:
        - text: "/script_assets/k_1_images/bee_images/nectar.png"
          correct: false
        - text: "/script_assets/k_1_images/bee_images/2nectar.png"
          correct: false
        - text: "/script_assets/k_1_images/bee_images/3nectar.png"
          correct: false
        - text: "/script_assets/k_1_images/bee_images/4nectar.png"
          correct: true
        content1: "/script_assets/k_1_images/bee_images/2nectar+2nectar.png"
        questions:
        - text: berapa banyak kah jumlah madu?
        title: Pilihan Berganda
      K-1 Bee Loops Match 1:
        answers:
        - text: "/script_assets/k_1_images/bee_images/4_gnectar.png"
        - text: "/script_assets/k_1_images/move_blocks/NNN.png"
        - text: "/script_assets/k_1_images/bee_images/5_ghoney.png"
        - text: "/script_assets/k_1_images/move_blocks/EEEEE.png"
        content2: Cocokkan blok
        questions:
        - text: "/script_assets/k_1_images/bee_images/r4_gnectar.png"
        - text: "/script_assets/k_1_images/move_blocks/r3_N.png"
        - text: "/script_assets/k_1_images/bee_images/r5_ghoney.png"
        - text: "/script_assets/k_1_images/move_blocks/r5_E.png"
        title: Mencocokan
      K-1 Big Event Match 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a1.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a2.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_a3.png"
        content1: "/script_assets/k_1_images/unplugged_images/big_event_1_desc.png"
        content2: Pasangkanlah kombinasi tombol untuk gerakan tari.
        questions:
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q1.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q2.png"
        - text: "/script_assets/k_1_images/unplugged_images/big_event_1_q3.png"
        title: Mencocokan
      K-1 Digital Footprint Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/digital_footprint_1_a1.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/digital_footprint_1_a2.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/digital_footprint_1_a3.png"
          correct: true
        content1: "/script_assets/k_1_images/unplugged_images/digital_footprint_1_q.png"
        questions:
        - text: Hewan yang mana yang memiliki tapak digital yang meninggalkan Dia.
            <strong> yang paling aman</strong>?
        title: Pilihan Berganda
      K-1 Getting Loopy Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/getting_loopy_1_a1.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/getting_loopy_1_a2.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/getting_loopy_1_a3.png"
          correct: false
        content1: "/script_assets/k_1_images/unplugged_images/getting_loopy_1_q.png"
        questions:
        - text: Bagaimana Anda akan menyederhanakan urutan ini dengan perulangan?
        title: Pilihan Berganda
      K-1 Happy Maps Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/up.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/down.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/left.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/right.png"
          correct: false
        content1: "/script_assets/k_1_images/unplugged_images/happy_maps_1q.png"
        questions:
        - text: Panah mana yang mendapatkan Flurb untuk harta?
        title: Pilihan Berganda
      K-1 Keep it Private Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/keep_it_private_1_a1.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/keep_it_private_1_a2.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/keep_it_private_1_a3.png"
          correct: false
        questions:
        - text: Informasi mana yang harus Anda <strong>tidak</strong> berbagi online?
        title: Pilihan Berganda
      K-1 Maze Debugging Multi 1:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/N.png"
          correct: true
        - text: "/script_assets/k_1_images/move_blocks/S.png"
          correct: false
        - text: "/script_assets/k_1_images/move_blocks/E.png"
          correct: false
        - text: "/script_assets/k_1_images/move_blocks/W.png"
          correct: false
        content1: "/script_assets/k_1_images/maze_images/EESq.png, 700"
        questions:
        - text: Pilihan mana yang harus menjadi blok akhir?
        title: Pilihan Berganda
      K-1 Maze Loops Multi 1:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/r3_N.png"
          correct: true
        - text: "/script_assets/k_1_images/move_blocks/r3_NN.png"
          correct: false
        - text: "/script_assets/k_1_images/move_blocks/r4_N.png"
          correct: false
        content1: "/script_assets/k_1_images/move_blocks/NNNequals.png, 300"
        questions:
        - text: blok pengulangan mana yang sama?
        title: Pilihan Berganda
      K-1 Maze Loops Multi 2:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/r3_S.png"
          correct: false
        - text: "/script_assets/k_1_images/move_blocks/r3_ES.png"
          correct: false
        - text: "/script_assets/k_1_images/move_blocks/r3_SE.png"
          correct: true
        content1: "/script_assets/k_1_images/move_blocks/SESESEequals.png, 240"
        questions:
        - text: Pilih blok pengulangan yang benar.
        title: Pilihan Berganda
      K-1 Maze Match 1:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/EN.png"
        - text: "/script_assets/k_1_images/move_blocks/ENE.png"
        - text: "/script_assets/k_1_images/move_blocks/WW.png"
        - text: "/script_assets/k_1_images/move_blocks/WSS.png"
        content2: Cocokkan teka-teki dengan blok
        questions:
        - text: "/script_assets/k_1_images/maze_images/maze_EN.png"
        - text: "/script_assets/k_1_images/maze_images/maze_ENE.png"
        - text: "/script_assets/k_1_images/maze_images/maze_WW.png"
        - text: "/script_assets/k_1_images/maze_images/maze_WSS.png"
        title: Mencocokan
      K-1 Maze Multiple Choice 2:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/EN.png"
          correct: false
        - text: "/script_assets/k_1_images/move_blocks/ES.png"
          correct: false
        - text: "/script_assets/k_1_images/move_blocks/WS.png"
          correct: true
        - text: "/script_assets/k_1_images/move_blocks/WN.png"
          correct: false
        content1: "/script_assets/k_1_images/maze_images/maze_WS.png, 500"
        questions:
        - text: Jawaban mana yang memecahkan tingkat ini?
        title: Labirin
      K-1 Move It Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/rightright.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/leftleft.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/upleft.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/leftdown.png"
          correct: false
        content1: "/script_assets/k_1_images/unplugged_images/move_it_1_q.png"
        questions:
        - text: Algoritma mana yang mendapatkan Flurb untuk bunga?
        title: Pilihan Berganda
      K-1 Plant a Seed Multi 1:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/poke-hole.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/foot-in-shoe.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/dirty-teeth.png"
          correct: true
        content1: "/script_assets/k_1_images/unplugged_images/plant_a_seed_1_q.png"
        questions:
        - text: Langkah mana yang  harus masuk pada awal algoritma ini?
        title: Pilihan Berganda
      K-1 Plant a Seed Multi 2:
        answers:
        - text: "/script_assets/k_1_images/unplugged_images/brush-teeth.png"
          correct: false
        - text: "/script_assets/k_1_images/unplugged_images/cover-seed.png"
          correct: true
        - text: "/script_assets/k_1_images/unplugged_images/water-pot.png"
          correct: false
        content1: "/script_assets/k_1_images/unplugged_images/plant_a_seed_2_q.png"
        questions:
        - text: Langkah mana yang harus mengisi kekosongan untuk algoritma ini?
        title: Pilihan Berganda
      K-1 Word Search Multi 1:
        answers:
        - text: "/script_assets/k_1_images/move_blocks/EEES.png"
          correct: false
        - text: "/script_assets/k_1_images/move_blocks/EESS.png"
          correct: true
        - text: "/script_assets/k_1_images/move_blocks/ESSS.png"
          correct: false
        content1: "/script_assets/k_1_images/search_images/move.png, 450"
        questions:
        - text: Blok mana yang mengeja "MOVE" /  "Bergerak"?
        title: Pilihan Berganda
      K-1 Word Search Multi 3:
        answers:
        - text: SET
          correct: false
        - text: KOTAK
          correct: true
        - text: SELATAN
          correct: false
        content1: "/script_assets/k_1_images/search_images/square.png, 700"
        questions:
        - text: Kata yang dieja?
        title: Pilihan Berganda
      MoveItMoveIt-Unplugged:
        markdown: |
          # Move It, Move It

          Gunakan peta dan berikan perintah untuk mencapai tujuan.
      Multi-Screen Apps:
        content1: deskripsi di sini
        markdown: |
          # Making Multiple Screens

          You may imagine that a typical app has a number of "screens" or views that user goes through as part of using your app.  Below is a typical example with a welcome screen, a screen that plays a game and a game over screen.

          <img src="https://images.code.org/27065f81b2bf53dea099a76868f66e8e-image-1477324003598.png" style="display: block; margin: auto">

          ## What's a screen, anyway?

          A screen is just a UI element like anything else in Design Mode.  But it has a few special properties:

          1. A screen is a UI element that contains other UI elements.
          2. Only one screen can be visible at a time
          3. Only elements that "belong" to a screen will visible when that screen is active.
          4. **Multiple screens, but only one coding workspace**
            * Even though your *design elements* might be spread across multiple screens, your code does not get broken up like that.
            * There is only one coding workspace, that will still house all of your code for the app.

          ## How to Make a new Screen

          <div style="float: left; width: 33%">
          There are two ways to add a screen to your app.  First, make sure you're in <em>Deisgn Mode</em>.
          <br><br>
          <span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          Either choose <em>New Screen...</em> from the pulldown menu at the top of the display area. <strong>Note:</strong> you also use this pulldown menu to switch between screens in design mode.
          <br><br>
          <span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          Or drag and drop a Screen UI element from the toolbox. <strong>Heads-up: </strong>As soon as you release the screen element, the app will show you a <strong>new blank screen.</strong> You can get back to other screens using the pulldown menu at the top.

          </div>

          ![](https://images.code.org/ed8f45d70a65329597c1623ddd756249-image-1477165123570.png)

          ## Set a Screen's Properties

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 4; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          Use this pulldown menu to select the screen you want to work on. The list will contain the IDs of all the screens you've created.</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          Click on a blank area of the background to select the screen and set its properties. </p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>
          Screens also have IDs.  Like other UI elements, it's a good idea to <em>give your screens descriptive and meaningful IDs</em>.  It makes writing code so much easier.</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>
          If your screen is full with UI elements and there's no blank area to click to select it, use this pulldown menu. It lists all the UI elements that are part of this screen, including the screen itself.</p>
          </div>

          <img src="https://images.code.org/5f8934e6ae0fc2d9dfde8c9a0d93eec2-image-1477249243769.png" style="display: block; margin: auto;">

          <div style="column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 50%; float: right">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>
          Click this button to make this screen the "default screen" which means the screen that will show first when the app is run.</p>



          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">6.</span>
          Screens don't have many properties but you can set the background of the screen to a color or an image. Images are stretched or squeezed to fit the screen.</p>

          </div>
          <div style="clear: both">&nbsp;</div>

          ## Using the *setScreen* command to change screens with code

          The `setScreen` command changes the screen to show whatever screen you want.  You specify the screen by its ID.

          <img src="https://images.code.org/005222ed01ade7940963ce149d637286-image-1477168080948.png" style="display: block; margin: auto">

          <div style="column-count: 3; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          Find <em>setScreen</em> in the UI Elements toolbox and drag it into the code workspace.</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          Most of the time you change the screen in response to some user-event. In this case <em>setScreen</em> is being added to a "click" event handler for the image with id: <em>smileyFace</em></p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>
          Select the ID of the screen you want to change to. In this case, when smiley face is clicked on the screen that says "hello" we want to change to the screen that says "goodbye."</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>
          <strong>Key idea: Multiple Screens - One Coding Workspace.</strong> This is the code that handles a "click" event for an <em>image that is on a different screen</em> - the <em>goodbyeScreen</em>. You can't see that image right now, or that screen, because the screen isn't selected.  However, the code for it still goes here.</p>

          </div>
        teacher_markdown: |
          #### Cards to Screens

          To simplify the prototyping process, teams can think of each card that they created in the Paper Prototyping as a separate screen in the App Lab iteration of their app. In reality, screens that are very similar can often be developed as a single screen with content that changes based on user interaction. In the next lesson students will see some examples of how that could work, but it's not expected that they incorporated that kind of functionality in this project.
      MyLoopyRoboticFriends-Unplugged:
        markdown: |
          #Teman Robot Cerdik Saya

          Jadikan program Anda lebih singkat menggunakan lingkaran!
      MyRoboticFriends-Unplugged:
        markdown: |
          #Teman Robot Saya

          Belajar memprogram dengan menulis kode untuk teman Anda!
      New Challenge Introduction:
        content1: deskripsi di sini
        markdown: "### New Challenge: Crack a Random Substitution Cipher...with a
          new widget\n\nWhat if instead of shifting the whole alphabet, we mapped
          every letter of the alphabet to a random different letter of the alphabet?
          This is called a **random substitution cipher.**\n\n![](https://images.code.org/7837e7fef2f38659f4bf51a29b6dc4d3-image-1473863470440.gif)\n\nNow,
          instead of the secret message being encoded with a simple alphabetic shift,
          you'll face messages encoded with **random substitution**.  \n\n\n\nThis
          is much harder to crack and requires a more sophisticated tool, so...\n\nWhen
          you click continue, you'll see a **new, more sophisticated version of the
          encryption tool** that shows you lots of different stuff.\n\nBut what it
          does is a bit of a mystery!  \n\n### Your Task:\n\n * Figure out what is
          going on in this new version of the tool\n * What information is being presented
          to you?\n * Figure out what the tool lets you do\n * As usual: you can't
          break it.  So click on things, poke around.\n * If you figure it out you
          might be able to crack a message encoded with random substitution.\n \n###
          Hint\n\n* Did you know that **E** is the most common letter used in English?\n\n###
          Reconvene and Discuss\n After some time playing with it, you should get
          together with someone - partner, small group, whole class - to discuss what
          you found and verify that you know what's going on and the various ways
          you can use the tool.\n\n\n"
      OPD-K5 About:
        markdown: "# Getting Started: About this Course\n\n## Course Overview\n\nThis
          course is intended as an introduction to Code.org's Computer Science Fundamentals
          curriculum and resources for teachers. Through reading, viewing videos,
          completing interactive puzzles and reflecting on your learning, you'll develop
          your own understanding while preparing to teach computer science in your
          classroom.\n\n## Learning Objectives\n\nBy completing this online course,
          participants will:\n\n- Learn the basics of computer science \n- Review
          best practices for teaching these basics to your students \n- Access free
          curriculum and resources for teachers \n- Plan for how you might get started
          teaching Computer Science Fundamentals\n- Connect with a community of fellow
          educators who are making positive change in their classrooms through coding
          \n\n## Pre-requisites\n\nNo previous experience with coding or computer
          science education is assumed. This is a beginner's course.\n\n> **A Note
          About Audience:** This course focuses on Code.org's free Computer Science
          Fundamentals curriculum in the context of  K-5 learners. Although many of
          the same concepts can be applied to any computer science course, if you
          wish to teach a more in-depth computer science curriculum than Computer
          Science Fundamentals (for example, one of our [Middle](https://code.org/educate/csd)
          or [High school](https://code.org/educate/csp) courses), we recommend you
          pursue more [in-depth or ongoing professional development opportunities](https://code.org/educate/professional-learning/middle-high).\n\n##
          Course Duration\n\nCompleting this online course should take between 3-7
          hours, depending on your prior knowledge and how deeply you want to dive
          into the Code.org resources.\n"
      OPD-K5 About_copy:
        markdown: "# Welcome to 'Teaching Computer Science Fundamentals'\n\n<img src=\"https://images.code.org/80a1fa04481359759d2b86ddca9b33a4-image-1433972662378.png\"
          class=\"level-image\">\n\n## What is this online course for? \nThis online
          course is intended as an introduction to Code.org's Computer Science Fundamentals
          curriculum and resources for teachers. Through reading, viewing videos,
          completing interactive puzzles and reflecting on your learning, you'll develop
          your own understanding of how to teach Computer Science Fundamentals in
          your classroom.\n\n## Who is this online course for?\nThis online course
          is designed for **elementary school educators who are interested in teaching
          Computer Science Fundamentals to their students**. This can range from classroom
          teachers, to STEM teachers, to librarians, and everyone in between.\n\nIf
          you are a <a href=\"https://code.org/educate/csd\" target=\"blank\">middle
          school</a> or <a href=\"https://code.org/educate/csp\" target=\"blank\">high
          school</a> teacher interested in teaching our middle school or high school
          courses, we recommend you pursue more <a href=\"https://code.org/educate/professional-learning/middle-high\"
          target=\"blank\">in-depth, ongoing professional development opportunities</a>.\n\n##
          Will I learn computer science through this online course?\nWhile there are
          opportunities to learn and practice basic coding concepts and see how they
          are presented to students in the curriculum, it is not meant to be a comprehensive
          introduction to computer science for adults. At the end of the course, we
          will provide other resources that can help you go deeper into computer science
          concepts.\n\n## Do I need to have any experience in order to take this online
          course?\nNo previous experience with coding or computer science education
          is assumed. \n\n## How long does this online course take? \nCompleting this
          online course should take between 4-6 hours.\n\n## Can I change the font
          size of the text in this course?\nWe know that the text on this platform
          can appear small! \n\nTo make the font size bigger:\n- On Mac, click \"Command\"
          and \"+\"\n- On Windows, click \"Control\" and \"+\"\n\nTo make the size
          smaller: \n- On Mac, click \"Command\" and \"-\"\n- On Windows, click \"Control\"
          and \"-\"\n"
      OPD-K5 Assessment:
        markdown: "# Planning > Other resources\n\nWhen you're logged into Code.org
          as a teacher, you have access to many features that your students do not.
          You've already seen how to find a course, create a section, and assign your
          class to that section. However, you can also: \n\n- **Track Student Progress**:
          [Assess the learning](https://support.code.org/hc/en-us/articles/115000693231-Viewing-student-progress)
          of all of your students.\n- **Your Course Progress**: View your own personal
          progress on Code.org lessons, as a learner. Your students will also be able
          to see their progress in their accounts. However, as a teacher, you are
          also able to view lesson plans and see the solutions for every puzzle.\n-
          **Help and Community**: Access [support.code.org](https://support.code.org/),
          where you can post questions, respond to other teacher's posts, and read
          FAQs by Code.org staff. On this page, you'll also be able to directly contact
          Code.org with any questions you may have.\n- **Professional Development**:
          Access [in-person training](https://code.org/professional-development-workshops)
          for teachers.\n- **Computer Science Guest Speakers**: [Find smart, passionate
          and engaging tech industry professionals](https://code.org/volunteer/local)
          who would love to talk to your class about their jobs. \n\n<br/>\n---\n>
          ## Visit support.code.org\n> If you get stuck or have questions, make sure
          to check our support articles on support.code.org! You can also reach out
          to us directly through that page, as well.  [our forum](http://forum.code.org/t/teaching-conditionals/406/1).\n\n>
          <a href=\"http://support.code.org\" target=\"blank\"><button class=\"plc\">Get
          help >></button></a>\n\nAfter commenting in the forum, return here and click
          below to move on to the next stage.\n"
      OPD-K5 Assessment_copy:
        markdown: "# Other resources\n\nWhen you're logged into Code.org as a teacher,
          you have access to many features that your students do not. You've already
          seen how to find a course, create a section, and assign your class to that
          section. However, you can also: \n\n\n## Continue your learning\n- **Continue
          professional development**: Access <a href=\"https://code.org/professional-development-workshops\"
          target=\"blank\">in-person training</a> for teachers.\n- **Go through CS
          Fundamentals as a learner**: View your own personal progress on Code.org
          lessons, as a learner. Your students will also be able to see their progress
          in their accounts. However, as a teacher, you are also able to view lesson
          plans and see the solutions for every puzzle.\n- **Learn more computer science:**
          Check out <a href=\"https://hourofcode.com/us/beyond\" target=\"blank\">these
          resources</a>, including online tutorials and classes, to deepen your understanding
          of computer science concepts.\n\n\n## Find help and community\n- **Find
          computer science guest speakers**: <a href=\"https://code.org/volunteer/local\"
          target=\"blank\">Find smart, passionate and engaging tech industry professionals</a>
          who would love to talk to your class about their jobs. \n- **Get support**:
          Access <a href=\"https://support.code.org/\" target=\"blank\">support.code.org</a>,
          where you can post questions, respond to other teacher's posts, and read
          FAQs by Code.org staff. On this page, you'll also be able to directly contact
          Code.org with any questions you may have.\n- **Check out the teacher forum**:
          Ask questions, check out great teacher-created resources, and connect with
          other teachers on the <a href=\"http://forum.code.org/c/csf\" target=\"blank\">forum</a>.\n\n\n\nYou
          can always access support.code.org and our teacher forum via the dropdown
          menu on the top right of the Code.org homepage.\n\n![](https://images.code.org/35d6218f47f5b0b00975369dd9f5bea5-image-1573169909110.38.03
          PM.png)\n\n"
      OPD-K5 CS Courses:
        markdown: "# Planning > Getting started on Code.org\n\n\n## Step 1: Choose
          a course\nAll of our courses -- from pre-readers to high schoolers -- are
          listed in our **[course catalog](https://studio.code.org/courses)**. To
          find the CS Fundamentals lessons that you have been practicing with, go
          to our **[elementary page](https://code.org/educate/curriculum/elementary-school)**
          and scroll down to the \"Courses\" section. All our courses are available
          at no cost. Chat with colleagues at your school to determine how the course
          curriculum can be integrated with a variety of subjects.\n![](https://images.code.org/37dd42348eba605513fd0b1f17d1409c-image-1549066063927.png)\n***\n##
          Step 2: Set up your classroom section\nSet up a classroom section to view
          your student's progress, print login cards for your students, manage their
          accounts, and print certificates they can bring home when they finish the
          course. Click this link to **[watch a brief video](https://code.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=56d32934-3f67-48db-98db-e66e9152df7b)**
          that demonstrates how to set up your first computer science class on Code.org.
          You can also find the steps in **[this support article](https://support.code.org/hc/en-us/articles/115000488132-Creating-a-classroom-section)**.\n![](https://images.code.org/26b023ea019f33492aebea43eb6a1dfe-image-1549065670221.png)\n***\n##
          Step 3: Assign the course to your section\nClick into the course that you
          are teaching -- you should see a screen that looks like the one below. You
          can then click \"Assign Course\" and assign that course to one of your sections.
          \n![](https://images.code.org/3b81aa7989d237447e525f42646412d4-image-1549065690577.png)\n***\n##
          Step 4: Start teaching! \nAll it takes is one lesson to bring computer science
          concepts into your classroom. Once you see your students enthusiasm for
          CS, go further with daily lesson plans to guide your students, unplugged
          activities you can do without a computer, and forums to connect to other
          teachers.\n\n\n"
      OPD-K5 CS Courses_copy:
        markdown: "# Getting started on Code.org\n\n\n## Step 1: Choose a course\nAll
          of our courses -- from pre-readers to high schoolers -- are listed in our
          **<a href=\"https://studio.code.org/courses\" target=\"blank\">course catalog</a>**.
          All our courses are available at no cost. Chat with colleagues at your school
          to determine how the course curriculum can be integrated with a variety
          of subjects.\n\n<table style=\"width:100%; border-style:none;\">\n  <tr>\n
          \   <th style=\"background-color:#ff9900; text-align:center; border-style:none;
          font-weight:bold;\"\"\">\n      <b>Course A</b><br/>\n      <i>Kindergarten</i>\n
          \   </th>\n    <th style=\"background-color:#f1c232; text-align:center;
          border-style:none;\"\"\">\n        Course B<br/>\n        <i>1st Grade</i>\n
          \   </th>\n    <th style=\"background-color:#b8bf0d; text-align:center;
          border-style:none;\"\"\">\n        Course C<br/>\n        <i>2nd Grade</i>\n
          \   </th>\n    <th style=\"background-color:#53bac2; text-align:center;
          border-style:none;\"\"\">\n        Course D<br/>\n        <i>3rd Grade</i>\n
          \   </th>\n    <th style=\"background-color:#0094ca; text-align:center;
          border-style:none;\"\"\">\n        Course E<br/>\n        <i>4th Grade</i>\n
          \   </th>\n    <th style=\"background-color:#7664a0; text-align:center;
          border-style:none;\"\"\">\n        Course F<br/>\n        <i>5th Grade</i>\n
          \   </th>\n  </tr>\n  <tr>\n    <td style=\"background-color:#f9cb9c; color:black;
          border-style:none; vertical-align: text-top;\"\">12 lessons, ~12 hours to
          complete</td>\n    <td style=\"background-color:#ffe599; color:black; border-style:none;
          vertical-align: text-top;\"\">12 lessons, ~12 hours to complete</td>\n    <td
          style=\"background-color:#d2da0e; color:black; border-style:none; vertical-align:
          text-top;\"\">18 lessons, ~18 hours to complete</td>\n    <td style=\"background-color:#68ebf5;
          color:black; border-style:none; vertical-align: text-top;\"\">18 lessons,
          ~18 hours to complete</td>\n    <td style=\"background-color:#9ed7ed; color:black;
          border-style:none; vertical-align: text-top;\"\">18 lessons, ~18-20 hours
          to complete</td>\n    <td style=\"background-color:#c9c1e9; color:black;
          border-style:none; vertical-align: text-top;\"\">18 lessons, ~20-22 hours
          to complete</td>\n  </tr>\n  <tr>\n    <td colspan=\"6\" style=\"text-align:center;width:96%;background-color:#d9d9d9;color:black;
          border-style:none;\">Concepts</td>\n  </tr>\n  <tr>\n    <td style=\"background-color:#f9cb9c;
          color:black; border-style:none; vertical-align: text-top;\"\">\n      <ul
          style=\"font-style:italic;\">\n        <li>Digital Citizenship</li>\n        <li>Sequencing</li>\n
          \       <li>Loops</li>\n        <li>Events</li>\n      </ul>\n    </td>\n
          \   <td style=\"background-color:#ffe599; color:black; border-style:none;
          vertical-align: text-top;\"\">\n      <ul style=\"font-style:italic;\">\n
          \       <li>Digital Citizenship</li>\n        <li>Sequencing</li>\n        <li>Loops</li>\n
          \       <li>Impacts of Computing</li>\n        <li>Events</li>\n      </ul>\n
          \   </td>\n    <td style=\"background-color:#d2da0e; color:black; border-style:none;
          vertical-align: text-top;\"\">\n      <ul style=\"font-style:italic;\">\n
          \       <li>Digital Citizenship</li>\n        <li>Sequencing</li>\n        <li>Binary</li>\n
          \       <li>Loops</li>\n        <li>Events</li>\n        <li>Data</li>\n
          \     </ul>\n    </td>\n    <td style=\"background-color:#68ebf5; color:black;
          border-style:none; vertical-align: text-top;\"\">\n      <ul style=\"font-style:italic;\">\n
          \       <li>Sequencing</li>\n        <li>Events</li>\n        <li>Loops</li>\n
          \       <li>Conditionals</li>\n        <li>Binary</li>\n        <li>Digital
          Citizenship</li>\n      </ul>\n    </td>\n    <td style=\"background-color:#9ed7ed;
          color:black; border-style:none; vertical-align: text-top;\"\">\n      <ul
          style=\"font-style:italic;\">\n        <li>Sprites</li>\n        <li>Digital
          Citizenship</li>\n        <li>Impacts of Computing</li>\n        <li>Nested
          Loops</li>\n        <li>Functions</li>\n      </ul>\n    </td>\n    <td
          style=\"background-color:#c9c1e9; color:black; border-style:none; vertical-align:
          text-top;\"\">\n      <ul style=\"font-style:italic;\">\n        <li>Variables</li>\n
          \       <li>Data</li>\n        <li>For Loops</li>\n        <li>Internet</li>\n
          \       <li>Sprites</li>\n        <li>Digital Citizenship</li>\n        </ul>\n
          \   </td>\n  <tr>\n  \t<td style=\"background-color:#f9cb9c\">\n     <a
          href=\"https://studio.code.org/s/coursea\" target=\"_blank\" style='text-decoration:none'>\n
          \       <button>View course</button><br/>\n      </a>\n      <a href=\"https://curriculum.code.org/csf/coursea\"
          target=\"_blank\" style='text-decoration:none'>\n          <button>Lesson
          plans</button>\n      </a>\n    </td>\n    <td style=\"background-color:#ffe599\">\n
          \   <a href=\"https://studio.code.org/s/courseb\" target=\"_blank\" style='text-decoration:none'>\n
          \       <button>View course</button><br/>\n      </a>\n      <a href=\"https://curriculum.code.org/csf/courseb\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>Lesson
          plans</button>\n      </a>\n    </td>   \n   \t<td style=\"background-color:#d2da0e\">\n
          \   <a href=\"https://studio.code.org/s/coursec\" target=\"_blank\" style='text-decoration:none'>\n
          \       <button>View course</button><br/>\n      </a>\n      <a href=\"https://curriculum.code.org/csf/coursec\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>Lesson
          plans</button>\n      </a>\n    </td>   \n    <td style=\"background-color:#68ebf5\">\n
          \   <a href=\"https://studio.code.org/s/coursed\" target=\"_blank\" style='text-decoration:none'>\n
          \       <button>View course</button><br/>\n      </a>\n      <a href=\"https://curriculum.code.org/csf/coursed\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>Lesson
          plans</button>\n      </a>\n    </td>  \n    <td style=\"background-color:#9ed7ed\">\n
          \   <a href=\"https://studio.code.org/s/coursee\" target=\"_blank\" style='text-decoration:none'>\n
          \       <button>View course</button><br/>\n      </a>\n      <a href=\"https://curriculum.code.org/csf/coursee\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>Lesson
          plans</button>\n      </a>\n    </td>  \n     <td style=\"background-color:#c9c1e9\">\n
          \   <a href=\"https://studio.code.org/s/coursee\" target=\"_blank\" style='text-decoration:none'>\n
          \       <button>View course</button><br/>\n      </a>\n      <a href=\"https://curriculum.code.org/csf/coursee\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>Lesson
          plans</button>\n      </a>\n    </td>  \n  </tr>\n</table>\n<br/>\n\n\n***\n##
          Step 2: Set up your classroom section\nSet up a classroom section to view
          your student's progress, print login cards for your students, manage their
          accounts, and print certificates they can bring home when they finish the
          course. Click this link to **<a href=\"https://code.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=56d32934-3f67-48db-98db-e66e9152df7b\"
          target=\"blank\">watch a brief video</a>** that demonstrates how to set
          up your first computer science class on Code.org. You can also find the
          steps in **<a href=\"https://support.code.org/hc/en-us/articles/115000488132-Creating-a-classroom-section\"
          target=\"blank\">this support article</a>**.\n\n***\n## Step 3: Assign the
          course to your section\nClick into the course that you are teaching. You
          can then click \"Assign Course\" and assign that course to one of your sections.
          \n***\n## Step 4: Start teaching! \nAll it takes is one lesson to bring
          computer science concepts into your classroom. Once you see your students
          enthusiasm for CS, go further with daily lesson plans to guide your students,
          unplugged activities you can do without a computer, and forums to connect
          to other teachers.\n\n\n"
      OPD-K5 CS Tips:
        markdown: |
          # Getting Started > Navigating this Online Course

          If you've made it this far, congratulations! As you complete this course, you'll familiarize yourself with everything CS Fundamentals has to offer.

          If you find yourself having trouble, the information below will help you navigate and use this space for your professional learning as you complete this online course.

          ---

          ## Stages

          The main professional development page is pictured below. This page is broken up into several __stages__, which each represent a different topic or idea.

          <img src ="https://images.code.org/3f0fa0abc76fa6e6bde06bb4bc705202-image-1548976538784.png" />

          <br/>
          <br/>

          ## Puzzles

          Each stage is made up of levels that we call __puzzles__, which hold individual videos, readings, or questions. Puzzles are indicated as circles with numbers. The colors of the puzzle circle will change based on your progress. In this professional development you'll see the following types of circles:
          <br/>

          <img src ="https://images.code.org/8b3fcfcf0120bed0dc34c014f1f81071-image-1548976153188.png" />

          <br/>
          <br/>

          ## Accessing Puzzles

          Puzzles are visible:
          <p>-On the main professional development page</p>
          <p>-On the header in any other puzzle on the same stage</p>
          <p>-From the header drop-down in any puzzle</p>

          <h4><details>
          <summary style="color:#ffa400;">Click here to see more about accessing puzzles</summary>
          <br>
          <div><em>Once you're finished viewing this, click the arrow above to collapse the section</em></div>
          <br>
          <img src ="https://images.code.org/27681ae1028bb26bcacd9970086c3792-image-1548976069596.gif" />
          </details></h4>

          <br/>

          ## Moving Between Puzzles

          Click "Continue" or "Next Resource" after each puzzle to progress to the next one. Or, at any point, you can jump to a new puzzle by clicking on that number in the header.

          <h4><details>
          <summary style="color:#ffa400;">Click here to see more about moving between puzzles</summary>
          <br>
          <div><em>Once you're finished viewing this, click the arrow above to collapse the section</em></div>
          <br>
          <img src ="https://images.code.org/d28046a78ecb03f9501f3bb7764c7ce8-image-1548976730590.gif" />
          </details></h4>

          <br/>
          <br/>


          > That's all there is to it! Feel free to come back to this level any time if you need a refresher on how this platform works.
      OPD-K5 CS Tips_copy:
        markdown: |+
          # Navigating this online course

          As you complete this course, you'll familiarize yourself with everything CS Fundamentals has to offer.

          If you find yourself having trouble, the information below will help you navigate and use this space for your professional learning as you complete this online course. Feel free to come back to this level any time!

          ---

          ## Concept Chunks
          The main page of this online course is pictured below. This page is broken up into four **concept chunks**. This mirrors how the Computer Science Fundamentals courses are laid out.

          ![](https://images.code.org/5227343bf74975b4678e42b50fdcd085-image-1573235429162.50.02 AM.png)
          ## Lessons
          Each section is comprised of **lessons**, which represent different topics and ideas.

          ## Levels (bubbles)
          Each stage is made up of levels, which look like bubbles. **Diamonds** represent levels like this, which hold individual videos, readings, or questions. Some **circles** are online puzzles that you will complete to practice coding concepts. Other **circles** are free response questions, which you will submit an answer for and revisit later on. The colors of the bubble will change based on your progress. In this online professional development course you'll see the following types of bubbles:
          <br/>

          <img src ="https://images.code.org/8b3fcfcf0120bed0dc34c014f1f81071-image-1548976153188.png" />

          <br/>


      OPD-K5 Celebrate:
        markdown: |
          # Next Steps > Celebrate!

          Congratulations on completing this professional development online course. Provided you have completed all levels in this training, you can download and print a certificate of accomplishment now by completing the following steps:

          1. Visit [this link](https://code.org/certificates?course=Teaching%20Computer%20Science%20Fundamentals).
          2. Enter your name into the input field/box.
          3. Click Print Certificates.
          4. Right click on the image of the certificate and choose "Save Image As..." so you can download to your computer.

          And don't forget... you can return to this online course anytime to review your learning, access links or resources, or just refresh your memory!

          Thank you for your participation! We can't wait to hear how you implement computer science and Code Studio in your classroom!
      OPD-K5 Congrats:
        markdown: "# Events > Review\n\nIn this stage, you made some fun game, combining
          core concepts and demonstrating your learning. By allowing us to trigger
          actions based on other parts of our program, events allow us to stretch
          our coding muscles.  \n\n**Take a moment now to review how events are introduced
          in the CS Fundamentals curriculum and consider how you might implement the
          suggested activities in your classroom.**\n\n![](https://images.code.org/8312823c84d52d7119ab0b5e99363d39-image-1549054807593.jpg)\n"
      OPD-K5 CongratsFinal:
        markdown: |
          # Congratulations!

          <img src="https://images.code.org/3e21c6e68f0b6565ba16ad2b63b892f0-image-1434398206115.jpg" width="450px">
          <br/><br/>
          By now you should have completed Stages 1-8 and learned the basic fundamentals of computer science. We hope you had fun along the way! We also hope you've been considering how you might apply your learning to your teaching practice.
          <br/><br/>
          In the next stage, we will consider some best practices for teaching these fundamentals in your classroom.
      OPD-K5 Connect:
        markdown: "# Next Steps > Get Connected\n\nBeyond further formal training,
          you might consider accessing the code.org community to continue learning
          informally from your others, or just to find support and a network of peers.
          Here's how:  \n\n<br/><br/>\n\n> **Continue participating in the code.org
          teacher Professional Learning Community:** The forum that you've been using
          throughout this course will be a great resource for you moving forward.
          You can use it not only to refer back to your learning from this course,
          but to find support as you continue your journey, or even to offer support
          to others who need your expertise. Be sure to bookmark it now and visit
          often: [http://forum.code.org/c/csf](http://forum.code.org/c/csf)  \n\n<br/>\n\n>
          **Connect with [@teachcode](http://twitter.com/teachcode) on Twitter.**
          \ \n\n<br/>\n\n> **Join the computer science Teachers Association (CSTA):**
          [The CSTA](http://csta.acm.org/index.html) is an engaged community of educators
          across the nation that is committed to bringing computer science education
          to their students while raising awareness of the subject to the general
          public. They host an annual conference and also have chapters that hold
          local meetings.\n"
      OPD-K5 Connect_copy:
        markdown: "# Next Steps \n\n\n## Take the post-survey\n\nWhether or not you
          did the whole course in order, we want to hear your feedback. Please submit
          this short survey to help us improve the course going forward! \n\n<a class=\"btn
          btn-large btn-primary submitButton\" href=\"https://form.jotform.com/93176494681166?user_id=<user_id/>\"
          target=\"blank\"> Take the post-survey</a>\n\n\n## Print a certificate\n\nCongratulations
          on completing this professional development online course. Provided you
          have completed all levels in this training, you can download and print a
          certificate of accomplishment now by completing the following steps:\n\n-
          Visit <a href=\"https://code.org/certificates?course=Teaching%20Computer%20Science%20Fundamentals\"
          target=\"blank\">this link</a>.\n- Enter your name into the input field/box.\n-
          Click Print Certificates.\n- Right click on the image of the certificate
          and choose \"Save Image As...\" so you can download to your computer.\n-
          And don't forget... you can return to this online course anytime to review
          your learning, access links or resources, or just refresh your memory!\n\n\n##
          Come to an in-person professional development workshop\n- Check out <a href=\"http://code.org/professional-development-workshops\"
          target=\"blank\">our professional learning map</a> to see the CS Fundamentals
          workshops that are being offered in your area! \n\n## Get connected\n- **Continue
          participating in the code.org teacher Professional Learning Community:**
          The forum that you've been using throughout this course will be a great
          resource for you moving forward. You can use it not only to refer back to
          your learning from this course, but to find support as you continue your
          journey, or even to offer support to others who need your expertise. Be
          sure to bookmark it now and visit often: <a href=\"http://forum.code.org/c/csf\"
          target=\"blank\">http://forum.code.org/c/csf</a>.  \n- **Connect with <a
          href=\"http://twitter.com/teachcode\" target=\"blank\">@teachcode</a> on
          Twitter.**  \n- **Join the computer science Teachers Association (CSTA):**
          <a href=\"http://csta.acm.org/index.html\" target=\"blank\">The CSTA</a>
          is an engaged community of educators across the nation that is committed
          to bringing computer science education to their students while raising awareness
          of the subject to the general public. They host an annual conference and
          also have chapters that hold local meetings.\n\n\n> Thank you for your participation!
          We can't wait to hear how you implement computer science and Code Studio
          in your classroom!\n\n"
      OPD-K5 Culture:
        markdown: |+
          # Best Practices > Classroom Culture

          How can we promote a healthy classroom culture for our computer science classes? First, we can make sure that everyone in the classroom, including ourselves, understands ways in which we can act like computer scientists and what to keep in mind. This keeps everyone on the same page and makes your work in the classroom easier.

          <img src="https://images.code.org/b5d9ae18a882a4359f096b9c6ade135e-image-1434398703448.jpg" width="450px" style="margin-right:45px; border-radius:10px;">

          ## Ways to act like a computer scientist:

          - **Be curious:** When you're curious, you do things like poke around in different menus, run pieces of code to see what happens, or check the effects of different settings. Curiosity often leads to being able to answer your own questions.
          - **Ask questions:** Collaborate with others once you've tried figuring out a problem yourself.
          - **Be persistent:** Have confidence tackling open-ended complex problems and stick with them. This becomes easier once you've written some successful programs and know how good it feels to overcome a difficult programming problem.
          - **Break big problems down into smaller, more manageable problems:** This is called **decomposing**.
          - **Read through your code:** The computer is following your instructions exactly. Tracing through code step-by-step (as if you were the computer processing the instructions) will help you find errors in your logic or missing steps.
          - **Don't feel bad about making mistakes:** Mistakes are not failure; they just bring you one step closer to creating the right solution or end product.
          - **Step away from your screen:** This can give you a much needed break and often you can come back to a problem with a new perspective.

          ## Things to keep in mind while learning computer science:

          - The world of computer programming moves so fast that there really are no masters. **We're all learners** at different stages but we are still always learners.
          - Programming becomes more comfortable every time you come back to it. **You're not going to be an expert your first time.**
          - There's no way around it, the act of programming and **learning to program takes time, but anyone can do it!**
          - You can share **your own authentic experience learning to code** with your students!

          > ## Reflect:
          > How do you plan to create positive classroom culture when teaching computer science? [Tweet your thoughts](https://twitter.com/codeorg) and be sure to tag @codeorg in your tweet so we can respond.

          > <a href="http://ctt.ec/pdL3a" target="blank"><button class="default">Share on Twitter >></button></a>

      OPD-K5 Outline:
        markdown: |
          # Getting Started > Course Outline

          The course is divided into eleven stages, and each stage is made up of "levels" or "puzzles." Here's an overview of what you'll learn if you complete the entire course:

          ## Stage 1: Getting Started (10-30 minutes)

          By completing Stage 1, you will:

          - Review the course details
          - Practice using Code.org as a learning platform
          - Plan your participation in this course

          ## Stage 2: Computer Science Fundamentals (10-30 minutes)

          By completing Stage 2, you will:

          - Define computer science and review key vocabulary
          - Identify the benefits of teaching and learning computer science
          - Differentiate between "coding" and "computer science"
          - Explain the benefits of beginning to code using visual programming

          ## Stage 3: Looking Ahead (10 minutes)

          By completing Stage 3, you will:

          - Prepare to "master the basics" of computer science by reviewing what's next in the course

          ## Stage 4: Mastering the Basics: Sequencing (10-30 minutes)

          By completing Stage 4, you will:

          - Define "program" and "algorithm"
          - Use the Code.org visual programming engine to write simple programs
          - Reflect on classroom application

          ## Stage 5: Mastering the Basics: Loops (20-45 minutes)

          By completing Stage 5, you will:

          - Define "loops" and explain their importance
          - Practice coding simple loops
          - Reflect on classroom application

          ## Stage 6: Mastering the Basics: Conditionals (20-45 minutes)

          By completing Stage 6, you will:

          - Define "conditionals" and explain their importance
          - Practice coding simple conditionals
          - Reflect on classroom application

          ## Stage 7: Mastering the Basics: Functions (20-45 minutes)

          By completing Stage 7, you will:

          - Define "functions" and explain their importance
          - Practice coding simple functions
          - Reflect on classroom application

          ## Stage 8: Mastering the Basics: Events (30-60 minutes)

          By completing Stage 8, you will:

          - Define "events" and explain their importance
          - Practice coding simple events
          - Reflect on classroom application

          ## Stage 9: Best Practices for Teaching Computer Science (30-60 minutes)

          By completing Stage 9, you will:

          - Review best practices for teaching computer science

          ## Stage 10: Planning (30-60 minutes)

          By completing Stage 10, you will:

          - Explore Code.org resources, including the teacher dashboard
          - Plan for how you might integrate computer science into your practice

          ## Stage 11: Next Steps (10-30 minutes)

          By completing Stage 11, you will

          - Reflect on your learning
          - Plan for next steps you can take to continue your learning
          - Connect with a global community of fellow educators interested in computer science education
          - Share your takeaways and feedback on this course

          > **Note**: Suggested times are provided above to help you plan your learning. Please note that you may want to spend more or less time on a given stage, depending on your prior knowledge, interest and capacity. Keep in mind that this course is entirely self-paced; you can always leave the course and come back or revisit any stage or level at any time.
      OPD-K5 Outline_copy:
        markdown: "# Course outline\n\nThe course is divided into four concept chunks,
          which each have lessons in them. Lessons consists of different \"levels\",
          which are colloquially referred to as bubbles, stages, or puzzles by students
          and teachers. Here's an overview of what you'll learn if you complete the
          entire course:\n\n## Getting Started\n\n### Lesson 1: Welcome to 'Teaching
          Computer Science Fundamentals' (15 minutes)\n- Review the course details\n-
          Understand what computer science is and differentiate between \"coding\"
          and computer science\"\n- Identify the benefits of teaching and learning
          computer science\n- Plan your participation in this course\n\n### Lesson
          2: Getting to know the Computer Science Fundamentals Courses (15-20 minutes)\n-
          Become familiar with the content and organization of the Computer Science
          Fundamentals courses\n- Identify which course is most appropriate for your
          students\n- Understand the importance of the teacher in the Computer Science
          Fundamentals curriculum\n- Understand different types of Computer Science
          Fundamentals lessons\n\n## Basic Coding Concepts and Teaching Practices\n\n###
          Lesson 3: Sequencing (15-45 minutes)\n- Define \"program\" and \"algorithm\"\n-
          Identify where sequencing is introduced in the Computer Science Fundamentals
          courses\n- Use the Code.org visual programming engine to write simple programs\n-
          Explore an unplugged lesson on sequencing and reflect on classroom application\n-
          Think about how to use lesson plans\n\n### Lesson 4: Loops (15-45 minutes)\n-
          Define \"loops\" and explain their importance\n- Identify where loops are
          introduced in the Computer Science Fundamentals courses\n- Explore an unplugged
          lesson on loops and reflect on classroom application\n- Practice coding
          simple loops\n- Understand the benefits of pair programming\n\n### Lesson
          5: Events (15-45 minutes)\n- Define \"events\" and explain their importance\n-
          Identify where events are introduced in the Computer Science Fundamentals
          courses\n- Explore an unplugged lesson on events and reflect on classroom
          application\n- Practice coding simple events\n- Understand the debugging
          process\n\n### Lesson 6: Conditionals (15-45 minutes)\n- Define \"conditionals\"
          and explain their importance\n- Identify where conditionals are introduced
          in the Computer Science Fundamentals courses\n- Explore an unplugged lesson
          on conditionals and reflect on classroom application\n- Practice coding
          simple conditionals\n- Understand the teaching practice of journaling\n\n###
          Lesson 7: End of Course Projects (15-45 minutes)\n- Understand the benefit
          of end of course projects\n- Identify where end of course projects are introduced
          in the Computer Science Fundamentals courses\n- Practice coding a project\n\n##
          [Optional] Diving Deeper: Courses E and F \nYou will want to complete this
          section if you are teaching Courses E or F. This section dives into some
          of the harder concepts covered in these courses for older students.\n\n###
          Lesson 8: Functions (30-45 minutes)\n- Identify if you will be teaching
          Courses E or F to students\n- Define \"functions\" and explain their importance\n-
          Identify where functions are introduced in the Computer Science Fundamentals
          courses\n- Explore the unplugged lesson on functions and reflect on classroom
          application\n- Practice coding simple functions\n\n### Lesson 9: Variables
          (30-45 minutes)\n- Define \"variable\" and explain its importance\n- Identify
          where variables are introduced in the Computer Science Fundamentals courses\n-
          Explore the unplugged lesson on variables and reflect on classroom application\n-
          Practice coding with variables\n\n### Lesson 10: For Loops (30-45 minutes)\n-
          Define \"for loops\" and explain its importance\n- Identify where for loops
          are introduced in the Computer Science Fundamentals courses\n- Explore the
          unplugged lesson on for loops and reflect on classroom application\n- Practice
          coding with for loops\n\n### Lesson 11: Sprite Lab (15-45 minutes)\n- Define
          \"sprite\" and \"behavior\"\n- Identify where sprites and behaviors are
          introduced in the Computer Science Fundamentals courses\n- Explore the coding
          environment Sprite Lab\n\n## Next Steps\n\n### Lesson 12: Reviewing your
          Reflections (15 minutes)\n- Review the reflections you have made throughout
          the course so far\n\n### Lesson 13: Next Steps (15 minutes)\n- Explore teacher
          resources\n- Plan for next steps you can take to continue your learning\n-
          Connect with a global community of fellow educators interested in computer
          science education\n- Share your takeaways and feedback on this course\n\n>
          **Note**: Suggested times are provided above to help you plan your learning.
          Please note that you may want to spend more or less time on a given stage,
          depending on your prior knowledge, interest and capacity. Keep in mind that
          this course is entirely self-paced; you can always leave the course and
          come back or revisit any stage or level at any time. \n\n"
      OPD-K5 Pair:
        markdown: |+
          # Best Practices > Pair Programming

          One important classroom management strategy many educators use is strategic grouping. At Code.org, we suggest trying the strategic grouping strategy used in the real-world offices of the top tech firms: pair programming.

          >**Pair programming** is when two students use one computer to write a program together. The National Center for Women & Information Technology (NCWIT) has a [great resource about the benefits of pair programming](http://www.ncwit.org/sites/default/files/resources/pairprogramming_retainingwomencollaborativelearning_practice.pdf).

          Research shows that pair programming:

          - Leads to higher-quality student programs relative to non-paired students' programs
          - Reduces the so-called "confidence gap" between female and male students, while increasing the programming confidence of all students
          <br/><br/>

          Watch this video to understand how pair programming works, and hear directly from students how it enhances their learning.

          [![](https://images.code.org/2c721ff31fbd06f527d99965d3460fa8-image-1571172758005.52.13 PM.png)](https://www.youtube.com/watch?v=vgkahOzFH2Q)

          [Can't see the video? Click here](http://videos.code.org/2014/C1-pair-programming.mp4)
          <br/><br/>
          Not only is pair programming beneficial for students, it is also something that is practiced by some professional computer programmers. Watch this video to learn how to introduce pair programming to your students.

          [![](https://images.code.org/01da36dbe56da7986c3652991d4828e8-image-1571172869229.54.16 PM.png)](https://www.youtube.com/watch?v=sxToW3ixrwo)

          [Can't see the video? Click here](https://videos.code.org/levelbuilder/06pairprogramming_small-mp4.mp4)
          <br/>


      OPD-K5 Pair_copy:
        markdown: "# Teaching practice: Pair programming\n\nOne important classroom
          management strategy many educators use is strategic grouping. At Code.org,
          we suggest trying the strategic grouping strategy used in the real-world
          offices of the top tech firms: pair programming.\n\n> **Pair programming**
          is when two students use one computer to write a program together. \n\nResearch
          shows that pair programming:\n\n- Leads to higher-quality student programs
          relative to non-paired students' programs\n- Reduces the so-called \"confidence
          gap\" between female and male students, while increasing the programming
          confidence of all students\n\nThe National Center for Women & Information
          Technology (NCWIT) has a <a href=\"http://www.ncwit.org/sites/default/files/resources/pairprogramming_retainingwomencollaborativelearning_practice.pdf\"
          target=\"blank\">great resource about the benefits of pair programming</a>.
          \n\nWatch this video to understand how pair programming works, and hear
          directly from students how it enhances their learning.\n\n<a href=\"https://www.youtube.com/watch?v=vgkahOzFH2Q\"
          target=\"blank\">![](https://images.code.org/2c721ff31fbd06f527d99965d3460fa8-image-1571172758005.52.13
          PM.png)</a>\n\n[Can't see the video? Click here](http://videos.code.org/2014/C1-pair-programming.mp4)\n<br/><br/>\nNot
          only is pair programming beneficial for students, it is also something that
          is practiced by some professional computer programmers. Watch this video
          to learn how to introduce pair programming to your students.\n\n<a href=\"https://www.youtube.com/watch?v=sxToW3ixrwo\"
          target=\"blank\">![](https://images.code.org/01da36dbe56da7986c3652991d4828e8-image-1571172869229.54.16
          PM.png)</a>\n\n[Can't see the video? Click here](https://videos.code.org/levelbuilder/06pairprogramming_small-mp4.mp4)\n<br/>\n\n\n\n\n"
      OPD-K5 Participation:
        markdown: "# Getting Started > Planning your participation\n\nBefore you begin,
          take a moment to consider your learning needs, goals and the unique experience
          of learning in an online, self-paced environment -- especially if this is
          your first online course!\n\n## You're the Boss\n\nThis self-paced online
          course is designed to put you in the driver's seat, and give you control
          over your own learning. ***Please take your time and work through this course
          at your own pace. Suggested times are given for each stage.*** If you find
          yourself spending more or less time on a given stage, don't worry! Our main
          goal is for you to have fun, learn the basics, and apply what you learn
          in your classroom practice in whatever way works best for you.\n\n## Get
          Connected\n\nOne way to help stay motivated and focused throughout your
          learning is to get active in our <a href=\"http://forum.code.org/c/plc\"
          target=\"_new\">Professional Learning Community (PLC) forum</a>. \nStart
          by introducing yourself there in our <a href=\"http://forum.code.org/t/welcome-please-introduce-yourself/410\"
          target=\"_new\">\"Introductions\" thread</a>. Throughout the course, you'll
          use the forum to asynchronously share your thoughts, takeaways and questions
          with others who are also working through the content.\n\n<a href=\"http://forum.code.org/t/welcome-please-introduce-yourself/410/1\"
          target=\"blank\"><button class=\"plc\">Introduce Yourself Now >></button></a><br>\n\n##
          Finding Help When You Need It\n\nIf you get stuck at any time during the
          course, head over to [support.code.org](http://support.code.org) and check
          out [our community forums](https://support.code.org/hc/communities/public/topics).
          You'll likely find the answer to your question there. If you don't or are
          still stuck, you can email [teacher@code.org](mailto:teacher@code.org) and
          a Code.org staff member will get back to you as soon as they can.\n\n##
          Buddy up!\n\nKeep in mind that we are a small team and due to the scale
          of our efforts, we can't respond to all requests for support in the same
          way an instructor could for a face-to-face course. For that reason, we encourage
          you to ***work through this online course with a partner or group of colleagues***.\n\nCode.org
          recognizes the power of peer learning and collaboration. In fact, \"Pair
          Programming\" is a great industry practice that we'll explore in Stage 8
          as a classroom best practice. If you feel you'll learn better with a partner
          or in a group, why not complete the course with a buddy or a colleague?
          If you don't know anyone in real life who's interested in partnering with
          you, head over to [the PLC forum](http://forum.code.org/t/never-swim-alone-the-find-a-buddy-thread/411),
          [Twitter](https://twitter.com/teachcode), or [Facebook](https://www.facebook.com/groups/1457214714576953/)
          and find someone from the Code.org community who might want to collaborate.\n\n##
          Find the learning experience that works for you\n\nFinally, online learning
          is not for everyone. This course has no instructor or built-in mechanism
          for communicating in real-time with your peers. If you find yourself needing
          more one-on-one attention or know you learn better in a real-world classroom
          where there is more opportunity for collaboration and engagement, we recommend
          you pursue one of our in-person professional development opportunities.\n\n<a
          href=\"http://code.org/professional-development-workshops\" target=\"blank\"><button>Find
          an in-person workshop near you >></button></a>\n\n* * *\n\n## What's your
          plan?\n\nTake a moment now to consider how and when you will complete this
          online course to ensure you get the most benefit from the experience. When
          you've got a good plan sketched out, continue on to dive more deeply into
          Stage 1.\n"
      OPD-K5 Participation_copy:
        markdown: |
          # Planning your participation

          Before you begin, take a moment to consider your learning needs, goals and the unique experience of learning in an online, self-paced environment -- especially if this is your first online course!

          ## Take the pre-survey
          We want you to get as much as possible out of this professional development. For that reason, we ask you to fill out <a href="https://form.jotform.com/93175711692159?user_id=<user_id/>" target="blank">this short pre-survey</a>. The survey will ask you to reflect on your goals for this course and will tell us a little bit about who you are and how we can support you.

          <a class="btn btn-large btn-primary" href="https://form.jotform.com/93175711692159?user_id=<user_id/>" target="blank">Take the pre-survey</a>


          ## Go at your own pace

          This self-paced online course is designed to put you in the driver's seat, and give you control over your own learning. **Please take your time and work through this course at your own pace. Suggested times are given for each stage.** If you find yourself spending more or less time on a given stage, don't worry! Our main goal is for you to have fun, learn the basics, and apply what you learn in your classroom practice in whatever way works best for you.

          ## Find help when you need it

          If you get stuck at any time during the course, head over to <a href="http://support.code.org" target="blank">support.code.org</a> and check out <a href="https://forum.code.org/" target="blank">our community forums</a>. You'll likely find the answer to your question there. If you don't or are still stuck, you can email <a href="mailto:support@code.org" target="blank">support@code.org</a> and a Code.org staff member will get back to you as soon as they can.

          Another way to get support, which we highly recommend, is to work through this online course with a partner or group of colleagues!

          ## Find the learning experience that works for you

          Finally, online learning is not for everyone. This course has no instructor or built-in mechanism for communicating in real-time with your peers. If you find yourself needing more one-on-one attention or know you learn better in a real-world classroom where there is more opportunity for collaboration and engagement, we recommend you pursue one of our <a href="http://code.org/professional-development-workshops" target="blank">in-person professional development opportunities</a>.
      OPD-K5 PostSurvey:
        markdown: "# Getting started - Take the post-survey\n\nThanks for using the
          Teaching Computer Science Fundamentals online professional development course!
          \n\nWhether or not you finished the whole course, we want to hear your feedback.
          Please submit this short survey to help us improve the course going forward!\n\n<a
          class=\"btn btn-large btn-primary submitButton\" href=\"https://form.jotform.com/90557778075168?user_id=<user_id/>\">
          Take the post-survey</a>\n\n"
      OPD-K5 PreSurvey:
        markdown: |+
          # Getting started > Take the pre-survey

          We want you to get as much as possible out of this professional development. For that reason, we ask you to fill out [this short pre-survey](https://form.jotform.com/90556900301146). The survey will ask you to reflect on your goals for this course and will tell us a little bit about who you are and how we can support you.

          <a class="btn btn-large btn-primary" href="https://form.jotform.com/90556900301146?user_id=<user_id/>">Take the pre-survey</a>

      OPD-K5 Puzzles:
        markdown: "# Looking Ahead > All About Puzzles\n\nIn the stages that follow,
          you're going to be using Code.org to learn the basics of computer science.
          You'll be challenged with a series of puzzles that need to be solved. In
          order to solve the puzzles, you'll have to write programs using different
          characters to complete different goals. We'll practice with our first puzzle
          in Stage 3. But before we get there, here's an overview of the different
          kinds of the puzzles you and your students will encounter:\n\n## Sample
          Maze Puzzles\n\n![](//code.org/images/mockup_birds.png)\n![](//code.org/images/pvz.png)\n\nYou'll
          need to get the angry bird to the pig, and you'll need to get the zombie
          to the sunflower.\n\n## Sample Artist Puzzle\n\n![](//code.org/images/artist.png)\n\nYou
          have to make the artist draw over the grey lines by moving him around the
          canvas. He'll draw a line behind him wherever he goes.\n\n## Sample Bee
          Puzzle\n\n![](//code.org/images/bee.png)\n\nYou'll need to move the bee
          around to collect all the nectar and make all the honey. The units of nectar
          and honey needed for each puzzle are written in the lower right-hand corner
          of each flower or honeycomb.\n\n## Play Lab\n\n![](//code.org/images/playlab.png)\n\nIn
          Play Lab, you'll create games and stories based on different goals.\n\n##
          Flappy\n\n![](//code.org/images/flappy.png)\n\nIn Flappy, you'll create
          your very own Flappy bird game.\nThe puzzles leading up to the game creation
          help you learn pieces of code you'll need for your game.\n\n## Bounce\n\n![](//code.org/images/bounce.png)\n\nIn
          Bounce, you get to create your own game. \nJust like in Flappy, the puzzles
          leading up to the game creation help you learn pieces of code you'll need
          for your game.\n\n* * *\n\nIn this series, we will introduce you puzzles
          from [CS Fundamentals](http://code.org/educate/k5). These puzzles serve
          as online tutorials, helping students to learn concepts like loops, events,
          conditionals, and functions.\n\nDuring this professional development experience,
          we will intersperse several puzzle progressions, giving you the chance to
          get familiar with the programming concepts in CS Fundamentals and the characters
          that your students will fall in love with. During this course, you'll notice
          that you move between different environments quickly; be it getting the
          angry bird to the pig, making a drawing, or having a bee collect nectar.
          These transitions happen quickly in this course to show you a range of the
          puzzles offered in CS Fundamentals. Your students will get to spend more
          time with each environment.\n\nIf you'd like to get more familiar with the
          student experience, you can always complete [CS Fundamentals](http://studio.code.org/)
          courses on your own anytime. But this course will give you a good flavor
          of what to expect by pulling out some of the most fundamental puzzles and
          lessons for you in a short amount of time.\n"
      OPD-K5 Reviewing Reflections:
        content1: deskripsi di sini
        markdown: "# Overview: Reviewing Reflections\n\nCongratulations! You've become
          familiar with basic coding concepts and gotten a chance to practice them.
          \n\nIn this lesson, before you move onto next steps, you will have the chance
          to review some of the reflections you wrote throughout the online course.
          Feel free to change or update them if you want! \n\nIf you did not complete
          the optional section on Courses E to F, you can skip those levels. \n"
      OPD-K5 Stage10Start:
        markdown: |
          # Next Steps > Let's Review

          <img src="https://images.code.org/606dbb1b30885387e25bc1265f8966b2-image-1434150440566.JPG" width="450px">

          ## You're almost there!

          So far you have learned the basics of coding, explored how you might teach computer science, and created a simple plan of next steps.

          By completing Stage 11, you will:

           - Reflect on your learning
           - Plan for next steps you can take to continue your learning
           - Connect with a global community of fellow educators interested in computer science education
      OPD-K5 Stage10Start_copy:
        markdown: "# Overview: Next Steps\n\n<img src=\"https://images.code.org/606dbb1b30885387e25bc1265f8966b2-image-1434150440566.JPG\"
          class=\"level-image\">\n\n## What you've done so far\n\n - Become familiar
          with the structure and content of the Computer Science Fundamentals curriculum\n
          - Practiced the basics of coding\n - Thought about teaching practices and
          how you might use them in your classroom\n\n \n## What's in this concept
          chunk\n \nBy completing this final concept chunk, you will:\n\n - Explore
          teacher resources\n - Learn how to set up a class section on Code.org\n
          - Develop a plan to bring Computer Science Fundamentals to your classroom\n
          - Plan for next steps you can take to continue your learning\n - Connect
          with a global community of fellow educators interested in computer science
          education\n - Offer feedback via a post-survey\n - Print a certificate of
          completion\n\n"
      OPD-K5 Stage1Go:
        markdown: |
          # Getting Started > Ready? Set? Go!

          <img src="https://images.code.org/80a1fa04481359759d2b86ddca9b33a4-image-1433972662378.png" class="level-image">

          By completing this stage, you should have:

          - Reviewed the course details
          - Learned how to navigate through the learning platform
          - Planned your participation in this course

          In the next stage, we will:

          - Define "computer science" and review key vocabulary
          - Identify the benefits of teaching and learning computer science
          - Differentiate between "coding" and "computer science"
          - Explain the benefits of beginning to code using visual programming
      OPD-K5 Stage2Go:
        markdown: |
          # CS Fundamentals > Looking Ahead

          We hope this stage gave you a good introduction to computer science.

          By completing this stage, you should be able to:

          - Define "computer science" and reviewed key vocabulary
          - Identify the benefits of teaching and learning computer science
          - Differentiate between "coding" and "computer science"
          - Explain the benefits of beginning to code using visual programming

          > **Teaching Tip:** While computer science can be a rich and complex discipline, at Code.org we recognize that teachers and students need to master the basics before diving in to higher-level projects. This online course teaches you, the teacher, those basics so that you can support your students in doing so as well.

          In the next stage, we'll briefly introduce you to some frameworks for thinking about the rest of the content in this course. Then, we'll dive right in and start learning computer science.
      OPD-K5 Stage2Go_copy:
        markdown: "# Reflection\n\n<img src=\"https://images.code.org/14c402555ec4a61bf86f8ce9e9f61667-image-1571692551306.jpg\"
          class=\"level-image\">\n\n## Pause and reflect\nWe hope that, up until now,
          this course has given you a sense of what computer science is, why it is
          important, and how Computer Science Fundamentals is structured to teach
          elementary school students basic concepts of computer science. Take a moment
          to pause and reflect on what you feel like you have learned from this course
          so far, and go back to any parts you may have had questions on.\n\nRemember
          that you can always reference the <a href=\"https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview\"
          target=\"blank\">Computer Science Fundamentals curriculum guide</a> for
          more information.\n\n## Things to remember\nAs you go forward in this course,
          keep in mind: \n- As with any discipline, the path towards mastery in computer
          science is infinite. From novices to veterans, **everyone has something
          to learn.** \n- Programming becomes more comfortable every time you come
          back to it. **You're not going to be an expert your first time.**\n- There's
          no way around it, the act of programming and **learning to program takes
          time, but anyone can do it!**\n\n<br/>\n\n> **Key Takeway:** The goal of
          the next several lessons is not to turn you into a computer scientist, but
          to instead help you feel comfortable enough with the core concepts that
          you are excited to share your knowledge with your students.\n"
      OPD-K5 Stage2Overview:
        markdown: |
          # CS Fundamentals > Stage overview

          In Stage 1, you learned about this course and how to navigate the learning platform. Now you're ready to dive into the real content.

          Let's begin with some fundamentals.

          <img src="https://images.code.org/8af62f96e37199542519fae8580b0a29-image-1434146715374.jpg" width="450px" style="margin-right:45px; border-radius:10px;">

          By completing Stage 2, you will:

          - Define "computer science" and review key vocabulary
          - Identify the benefits of teaching and learning computer science
          - Differentiate between "coding" and "computer science"
          - Explain the benefits of beginning to code using visual programming

          Plan to spend between 10-30 minutes completing this stage.
      OPD-K5 Stage3Go:
        markdown: "# Sequencing > Reflect\n\nCongratulations! You just wrote some
          code. You are officially a programmer! Our platform tracks how many lines
          of code you've written, and will tell you after every puzzle!\n\n---\n\nDid
          you notice that the last puzzle was a little more difficult?  It was a **challenge**
          puzzle.  Challenge puzzles are meant to stretch the boundaries of what students
          will do.  We make it clear that they should be attempted, but do not require
          that they be completed for students to succeed for the lesson.\n\n<img src=\"https://images.code.org/e3b9903cf4acc68be5c01c4118b3d53d-image-1434152749660.JPG\"
          width=\"450px\" style=\"margin-right:45px; border-radius:10px;\">  \n\n---\n\n**Take
          a moment now to review how sequencing (including programming and algorithms)
          are introduced in the CS Fundamentals curriculum, and think about how you
          might implement the suggested activities in your classroom.**\n\n"
      OPD-K5 Stage3Start:
        markdown: |
          # Sequencing > Stage Overview

          <img src="https://images.code.org/06b4f5c946f2a47176706352d9dbbb56-image-1434152393531.JPG" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          By completing Stage 4, you will:

          - Define "algorithm" and "program"
          - Write programs using blocks of code
          - Reflect on classroom application

          > **What to Expect in this Stage:** In the levels that follow, we'll start with an unplugged lesson plan to introduce you to a concept, to model how you would introduce ideas to students in your classroom. Then, we will provide you with video instruction and introduce you to a series of puzzles and ask you to apply your learning. In order to complete a puzzle, you'll need to write code using Blockly code blocks. These lessons are from Course A, which is meant for Kindergarten students. We'll close with an opportunity to reflect on how you might teach this concept to your students. You should spend between 10-30 minutes on this stage.

          Ready? Let's go!
      OPD-K5 Stage3Start_copy:
        markdown: |+
          # Overview: Sequencing

          <img src="https://images.code.org/06b4f5c946f2a47176706352d9dbbb56-image-1434152393531.JPG" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          In the levels that follow, you will learn about a coding concept through unplugged lessons as well as online puzzles. In order to complete a puzzle, you'll need to write code using Blockly code blocks. You will also learn about a key teaching practice.

          ## Coding concept: Sequencing
          - You will be able to define "algorithm" and "program"

          ## Teaching practice: Using lesson plans
          - You will understand the importance of utilizing unplugged and plugged lesson plans
          - You will get the chance to see and practice with Lesson Implementation Planning Guides


      OPD-K5 Stage3aGo:
        content1: deskripsi di sini
        markdown: "# Sequencing > Unplugged Lessons\n\nAs we mentioned, we like to
          introduce computer science topics with unplugged lessons. Then, we use bridging
          activities to transition into the online lessons later. Beginning with these
          unplugged lessons introduces concepts in a fun and friendly way. Then, students
          already feel familiar with the concept by the time that they get to the
          online lessons, and can relate the online lessons back to the unplugged
          activity.\n\nFor these programming stages that you will be going through,
          we will also start with examples of unplugged lessons. Read through the
          following lesson plan and watch the accompanying videos, thinking about
          how you would implement this in your classroom with your students.\n<br/>\n***\n<br/>\nWe
          will start with sequencing. At its base, this style of computer science
          is about **sequences**. A sequence is a special ordering that something
          follows. In these puzzles, we want to find the right sequence of instructions
          to tell the computer what to do. This list of instructions is called an
          **algorithm**.  Once that algorithm gets coded up into a language that can
          be read by a machine, it becomes a **program**.\n<br/>\n<br/>\n\n**1. Review
          the \"[Happy Maps](https://curriculum.code.org/csf/coursea/5/)\" Lesson
          Plan from Course A.**\n<br/>\nRemember that Course A is meant for Kindergarten
          students. Sequencing comes up in other courses, as well, and you can find
          examples of those lessons at the bottom of this page.\n\n<br/>\n\n**2. Watch
          the student video: Happy Maps**\n<br/>\nThis is a video that you would show
          your students to help introduce the concept of sequencing and kick off the
          unplugged lesson.\n\n[![](https://images.code.org/f00fb02e8f24d57e88d396eb0f2c5cce-image-1571253011379.09.54
          PM.png)](https://youtube.com/watch?v=hrnhiKAQ1_k)\n\n[Can't see the video?
          Click here](http://videos.code.org/2014/C1-happy-maps-unplugged.mp4)  \n\n<br/>\n\n**3.
          Watch the teacher video: How to facilitate \"Happy Maps\"**\n<br/>\n\n[![](https://images.code.org/ab93b99493bfe68acc24aaaaf66d4129-image-1571253013543.10.01
          PM.png)](https://youtube.com/watch?v=En6Bshuqljg)\n\n<br/>\n\n\n**4. Review
          other unplugged lessons that introduce sequencing:**\n\n- Course A (Kindergarten):
          [Real-Life Algorithms: Plant a Seed](https://curriculum.code.org/csf-18/coursea/3/)\n-
          Course B (Grade 1): [My Robotic Friends Jr.](https://curriculum.code.org/csf-18/coursea/3/),
          [Move It, Move It](https://curriculum.code.org/csf-18/courseb/1/)\n- Course
          C (Grade 2): [Paper Planes](https://curriculum.code.org/csf-18/coursec/4/)\n-
          Course D (Grade 3): [Graph Paper Programming](https://curriculum.code.org/csf-18/coursed/1/)\n-
          Course E, Course F (Grades 4, 5): [My Robotic Friends](https://curriculum.code.org/csf-18/coursee/1/)\n\n\n---\n\n\n>
          ## Reflect\n> How would you explain the concept of programming (including
          sequencing and algorithms) to your students? Share your thoughts in <a href=\"http://forum.code.org/t/teaching-sequencing/408\">our
          forum</a>.\n\n> <a href=\"http://forum.code.org/t/teaching-sequencing/408\"
          target=\"blank\"><button class=\"plc\">Discuss in the forums >></button></a>\n\nAfter
          commenting in the forum, return here and click below to move on.\n\nIn the
          next stage, we'll add some complexity to our programs through the addition
          of loops.\n"
      OPD-K5 Stage3aGo_copy:
        content1: deskripsi di sini
        markdown: "# Unplugged Lesson: Happy Maps\n\nWe like to introduce computer
          science topics with unplugged lessons. Then, we use bridging activities
          to transition into the online lessons later. Beginning with these unplugged
          lessons introduces concepts in a fun and friendly way. Then, students already
          feel familiar with the concept by the time that they get to the online lessons,
          and can relate the online lessons back to the unplugged activity.\n\nFor
          these programming stages that you will be going through, we will also start
          with examples of unplugged lessons. Read through the following lesson plan
          and watch the accompanying videos, thinking about how you would implement
          this in your classroom with your students.\n\n***\nCS Fundamentals primarily
          teaches students how to write computer programs. In order to do so, we will
          begin with **sequencing**. \n> **Sequencing** describes the simple process
          of ordering steps in a linear manner. \n\nFor example:\n- Step 1: Boil the
          egg \n- Step 2: Crack the egg\n- Step 3: Eat the egg\n\nSequences are the
          foundation of **algorithms**.\n> **Algorithms**  are lists of steps to complete
          a task. Programs, then, are algorithms transcribed into code for a computer
          to execute.\n\n***\n## **1. Review the \"<a href=\"https://curriculum.code.org/csf-19/coursea/3/\"
          target=\"blank\">Happy Maps</a>\" Lesson Plan from Course A.**\n\nCourse
          A is meant for Kindergarten students. Sequencing comes up in other courses,
          as well, and you can find examples of those lessons at the bottom of this
          page.\n\n## **2. Watch the student video: Happy Maps (found in lesson plan)**\nThis
          is a video that you would show your students to help introduce the concept
          of sequencing and kick off the unplugged lesson.\n\n***\n<a href=\"https://curriculum.code.org/csf-19/coursea/3/\"
          target=\"blank\">![](https://images.code.org/8871ce7afb8fa81eb805d4640e1b9a95-image-1573079151706.25.15
          PM.png)</a>\n"
      OPD-K5 Stage4Go:
        markdown: "# Loops > Unplugged Lessons\n\nIn this stage, we saw how adding
          loops to a program is more efficient when coding repetitive actions. In
          the next stage, we'll look at coding **if-statements** and other conditionals.
          \ \n<br/>\n\n**1. Review \"[Getting Loopy](https://levelbuilder.code.org/curriculum/coursec/7/Teacher)\"
          Lesson Plan from Course C:**\n<br/>Course C is meant for Grade 2 students.
          Loops comes up in other courses, as well, and you can find examples of those
          lessons at the bottom of this page.\n\n<br/>\n\n**2. Watch the student video:
          Getting Loopy**\n<br/>\nThis is a video that you would show your students
          to help introduce the concept of loops and kick off the unplugged lesson.\n\n[![](https://images.code.org/eb585fcc71f5f1d2fa4d3bcddcf74b8b-image-1571253274522.14.26
          PM.png)](https://www.youtube.com/watch?v=JoKTqHCni0M)\n\n[Can't see the
          video? Click here](http://videos.code.org/2014/C1-getting-loopy.mp4)\n\n<br/>\n\n**3.
          Watch the teacher video: How to facilitate \"Getting Loopy\"**\n<br/>\nThis
          video is meant to be support for you as the teacher, if you are looking
          for tips on how to run this lesson. \n[![](https://images.code.org/fc594434f8b6869b1db1872fc85ca309-image-1571253220717.13.14
          PM.png)](https://www.youtube.com/watch?v=Vo2woYRRogA)\n\n\n<br/>\n\n**4.
          Review other unplugged lessons that introduce loops:**\n\n- Course A (Kindergarten):
          [Happy Loops](https://curriculum.code.org/csf-18/coursea/9/)\n- Course B
          (Grade 1): [My Loopy Robotic Friends Jr.](https://curriculum.code.org/csf-18/courseb/8/)\n-
          Course E, F (Grade 4, 5): [My Loopy Robotic Friends](https://curriculum.code.org/csf-18/coursee/6/)\n\n***\n\n>
          ## Reflect\n> How would you explain the concept of loops to your students?<br><br>
          [Share your thoughts in our forum.](http://forum.code.org/t/teaching-loops-and-efficiency/405/1)\n\n>
          <a href=\"http://forum.code.org/t/teaching-loops-and-efficiency/405/1\"
          target=\"blank\"><button class=\"plc\">Discuss in the forums >></button></a>\n\nAfter
          commenting in the forum, return here and click below to move on to the next
          stage.\n\n"
      OPD-K5 Stage4Go_copy:
        markdown: |+
          # Unplugged Lesson: Getting Loopy

          > A **loop** is the action of doing something over and over again.
          ****

          ## **1. Review "<a href="https://curriculum.code.org/csf-19/courseb/6/" target="blank">Getting Loopy</a>" Lesson Plan from Course B:**
          Course B is meant for Grade 1 students. Loops comes up in other courses, as well, and you can find examples of those lessons at the bottom of this page.

          ## **2. Watch the student video: Getting Loopy (found in the lesson plan)**
          This is a video that you would show your students to help introduce the concept of loops and kick off the unplugged lesson.

          ***
          <a href="https://curriculum.code.org/csf-19/courseb/6/" target="blank">![](https://images.code.org/74f963b452dbba7eb260d6b9e1fa2b4c-image-1573079606451.33.05 PM.png)</a>

      OPD-K5 Stage4Review:
        markdown: |
          # Loops > Reflect

          In this stage, we explored how loops can be used to make code more efficient. In the next stage, we'll look at how conditionals can help add logic to a program.

          **Take a moment now to review how loops are introduced in the CS Fundamentals curriculum. Consider how you might implement the suggested activities in your classroom.**

          ![](https://images.code.org/c6dca0407f5a517823f7e71b8da3880b-image-1549050118354.jpg)
      OPD-K5 Stage4Start:
        markdown: |
          # Loops > Stage 5 Overview

          This stage builds on your first programming experience by adding the core concept of **loops**.

          <img src="https://images.code.org/fcd3262b1c25e70426ac90e6f9fa65ac-image-1434152998854.JPG" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          By completing Stage 5, you will:

          - Practice coding simple loops
          - Reflect on classroom application

          > **What to Expect in this Stage:** In the levels that follow, we'll introduce an unplugged lesson and a series of puzzles from Course C (meant for Grade 2) that focus on the concept of loops. In order to complete a puzzle, you'll need to write code using visual, block-based programming. We'll close with an opportunity to reflect. You should spend between 20-45 minutes on this stage.

          Ready? Let's go!
      OPD-K5 Stage4Start_copy:
        markdown: |+
          # Overview: Loops

          <img src="https://images.code.org/ec2f0877ef2c14cf64d611f47a11daa7-image-1573236152060.jpg" class="level-image">

          ## Coding concept
          - Practice coding simple loops

          ## Teaching practice: Pair programming
          - Understand the benefit of pair programming and how it is used in the real world

      OPD-K5 Stage5Go:
        markdown: "# Conditionals > Unplugged Lessons\n\n\n**1. Review \"[Conditionals
          with Cards](https://curriculum.code.org/csf-18/coursed/13/)\" Lesson Plan
          from Course D:** \n<br/>\nCourse D is meant for Grade 3 students. This same
          lesson also appears in Course E and Course F. Conditionals are not covered
          in Courses A, B, or C.\n<br/><br/>\n\n**2. Watch the student video: Conditionals
          with Cards**\n<br/>\nThis is a video that you would show your students to
          help introduce the concept of conditionals and kick off the unplugged lesson.\n[![](https://images.code.org/3e6b0d2fc5a0beb4e6211d0571d190d3-image-1571253527382.18.41
          PM.png)](https://www.youtube.com/watch?v=UymN4lTL50s)\n<br/>\n[Can't see
          the video? Click here](http://videos.code.org/2014/C2-conditionals-with-cards.mp4)\n\n<br/><br/>\n**3.
          Watch a teacher model this lesson: \"Conditionals with Cards\"**\n<br/>\nThis
          video is meant to be support for you as the teacher, if you are looking
          for tips on how to run this lesson. \n\n\n[![](https://images.code.org/3899707f84b1f69360c98f73c5a9c640-image-1571253595879.19.37
          PM.png)](https://www.youtube/watch?v=2m2Rn9VxHfU)\n\n[Can't see the video?
          Click here](https://videos.code.org/levelbuilder/unplugged-lessoninaction-conditionalswithcards-mp4.mp4)\n\n<br/><br/>\n\n---\n\n>
          ## Reflect\n> How would you explain the concept of conditionals to your
          students? Share your thoughts in [our forum](http://forum.code.org/t/teaching-conditionals/406/1).\n\n>
          <a href=\"http://forum.code.org/t/teaching-conditionals/406/1\" target=\"blank\"><button
          class=\"plc\">Discuss in the forums >></button></a>\n\nAfter commenting
          in the forum, return here and click below to move on to the next stage.\n"
      OPD-K5 Stage5Go_copy:
        markdown: "# Unplugged Lesson: Conditionals with Cards\n\n> **Conditionals**
          are if-statements.\n\n***\n\n## **1. Review \"<a href=\"https://curriculum.code.org/csf-19/coursed/10/\"
          target=\"blank\">Conditionals with Cards</a>\" lesson plan from Course D:**
          \nCourse D is meant for Grade 3 students. Conditionals are not covered in
          Courses A, B, or C.\n<br/>\n\n## **2. Watch the student video: Conditionals
          with Cards (found in the lesson plan)**<br/>\nThis is a video that you would
          show your students to help introduce the concept of conditionals and kick
          off the unplugged lesson.\n\n## **3. Watch a teacher model this lesson:
          \"Conditionals with Cards\" (found in the lesson plan)**<br/>\nThis video
          is meant to be support for you as the teacher, if you are looking for tips
          on how to run this lesson. \n\n***\n<a href=\"https://curriculum.code.org/csf-19/coursed/10/\"
          target=\"blank\">![](https://images.code.org/d4959eca61f272b9416ff4e65a259bd2-image-1573080208870.43.14
          PM.png)</a>\n"
      OPD-K5 Stage5Review:
        markdown: "# Conditionals > Reflect\n\nIn this stage, we explored how conditionals
          help programmers add logic to their code. In the next stage, we'll look
          at how functions can help you take your coding to the next level.  \n\n**Take
          a moment now to review how conditionals are introduced in the CS Fundamnetals
          curriculum, and how you might implement the suggested activities in your
          classroom.**\n\n![](https://images.code.org/6335e7aa128d84c96ac402005cd9a3bb-image-1549053033052.jpg)\n"
      OPD-K5 Stage5Start:
        markdown: |
          # Conditionals > Stage Overview

          <img src="https://images.code.org/d2c2e06ce0bef52ae173a1de35b92af7-image-1470945682161.png" width="450px"  style="border-radius:10px; float:right; margin: 0 0 40px 40px;"/>

          So far, you've written a simple program and added loops to increase efficiency. In this stage, we'll explore **if-statements** which begin to add logic to your program.

          By completing Stage 6, you will:

          - Practice coding simple conditionals
          - Reflect on classroom application

          >**What to Expect in this Stage:** We'll first introduce an unplugged lesson from Course D (meant for Grade 3) that introduces the idea of conditionals. Then, you will complete a series of puzzles will ask you to apply your learning using conditionals. We'll close with an opportunity to reflect. You should spend between 20-45 minutes on this stage.

          Ready? Let's go!
      OPD-K5 Stage5Start_copy:
        markdown: |+
          # Overview: Conditionals

          <img src="https://images.code.org/d2c2e06ce0bef52ae173a1de35b92af7-image-1470945682161.png" width="450px"  style="border-radius:10px; float:right; margin: 0 0 40px 40px;"/>

          So far, you've written a few programs, added loops to increase efficiency, and added events to make your programs interactive. In this stage, we'll explore **conditionals** (if-statements), which begin to add logic to your program.

          ## Coding concept
          - Practice coding simple conditionals (if-statements)

          ## Teaching practice: Journaling
          - Using journal prompts to help students process and reflect on what they have learned, as well as work through problems

      OPD-K5 Stage6Go:
        markdown: "# Functions > Unplugged lessons\n\nProgrammers are always looking
          for ways to make their code more efficient. One way that they do that is
          through **functions**, which allow them to reuse segments of code\n\n**1.
          Review \"[Functions: Songwriting](https://curriculum.code.org/csf-18/coursee/14/)\"
          Lesson Plan from Course E.**\n<br/>\nCourse E is meant for students in Grade
          4. Functions are not covered in Courses A-D. \n\n<br/>\n\n**2. Watch the
          student video: Functions: Songwriting**\n<br/>\nThis is a video that you
          would show your students to help introduce the concept of functions and
          kick off the unplugged lesson.  \n\n[![](https://images.code.org/7fe2de2239edca27f26ae77cd0dc4c35-image-1571253900570.24.39
          PM.png)](https://youtube.com/watch?v=5iDCKkI6y2Y)\n\n<br/>\n\n[Can't see
          the video? Click here](http://videos.code.org/2014/C3-songwriting-with-parameters.mp4)\n\n<br/>\n\n**3.
          Watch a teacher model this lesson: \"Functions: Songwriting\"**\n<br/>\nThis
          video is meant to be support for you as the teacher, if you are looking
          for tips on how to run this lesson.\n[![](https://images.code.org/cfa0204ea2de0de27dab274369069a58-image-1571253902872.24.46
          PM.png)](https://youtube.com/watch?v=QuIMLel1mmw)\n[Can't see the video?
          Click here](https://videos.code.org/levelbuilder/unplugged-lessoninaction-songwritingwithfunctions-mp4.mp4)\n<br/>\n\n---\n\n>
          ## Reflect\n> How would you explain the concept of functions to your students?
          Share your thoughts in <a href=\"http://forum.code.org/t/teaching-functions/407/1\"
          target=\"blank\">our forum</a>.\n\n> <a href=\"http://forum.code.org/t/teaching-functions/407/1\"
          target=\"blank\"><button class=\"plc\">Discuss in the forums >></button></a>\n\nAfter
          commenting in the forum, return here and click below to move on to the next
          stage.\n"
      OPD-K5 Stage6Go_copy:
        markdown: "# Unplugged Lesson: Songwriting\n\n> A **function** is a piece
          of code that you can easily call over and over again.\n\nProgrammers are
          always looking for ways to make their code more efficient. One way that
          they do that is through **functions**, which allow them to reuse segments
          of code.\n\n*** \n\n## **1. Review \"<a href=\"https://curriculum.code.org/csf-19/coursee/14/\"
          target=\"blank\">Functions: Songwriting</a>\" Lesson Plan from Course E.**\n<br/>\nCourse
          E is meant for students in Grade 4. Functions are not covered in Courses
          A-D. \n\n## **2. Watch the student video: \"Functions: Songwriting\" (found
          in the lesson plan)**\nThis is a video that you would show your students
          to help introduce the concept of functions and kick off the unplugged lesson.
          \ \n\n## **3. Watch a teacher model this lesson: \"Functions: Songwriting\"
          (found in the lesson plan)**\nThis video is meant to be support for you
          as the teacher, if you are looking for tips on how to run this lesson.\n\n***\n<a
          href=\"https://curriculum.code.org/csf-19/coursee/14/\" target=\"blank\">![](https://images.code.org/c961585a0e79fc2934530d251dd84f53-image-1573080971047.55.58
          PM.png)</a>\n"
      OPD-K5 Stage6Review:
        markdown: |
          # Functions > Reflect

          In this stage, we explored how functions can make you a faster and better programmer by allowing you to reuse segments of your code. In the next stage, we'll look at the core concept of events and put your coding skills to the test.

          **Take a moment now to review how functions are introduced in the CS Fundamentals curriculum and consider how you might implement the suggested activities in your classroom.**

          ![](https://images.code.org/47e2d3956aaafb745e462f0017c2a2b1-image-1549053916687.jpg)
      OPD-K5 Stage6Start:
        markdown: |+
          # Functions > Stage Overview

          <img src="https://images.code.org/6ac5cc9f26b87a62b0558947d4cfd457-image-1501267730981.jpg" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          In the first few stages, you've learned how to write a program, add loops, and use conditionals. In this stage, we'll introduce the concept of **functions**.

          By completing Stage 7, you will:

          - Practice coding simple functions
          - Reflect on classroom application

          > **What to Expect in this Stage:** First, you will look at an unplugged lesson from Course E (meant for Grade 4) that introduces functions. Then you'll learn about functions through video, and practice using functions in a variety of puzzles. You'll then reflect on your practice. You should spend between 20-45 minutes on this stage.

          Ready? Let's go!

      OPD-K5 Stage6Start_copy:
        markdown: |+
          # Overview: Functions

          <img src="https://images.code.org/6ac5cc9f26b87a62b0558947d4cfd457-image-1501267730981.jpg" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          ## Coding Concepts: Functions
          - Practice coding simple functions

      OPD-K5 Stage7Go:
        markdown: |+
          # Events > Unplugged Lessons

          <br/>

          **1. Review "[The Big Event](https://curriculum.code.org/csf-18/coursec/11/)" Lesson Plan from Course C.**
          <br/>
          Course C is meant for students in Grade 2. Events come up in every CS Fundamentals Course, from A-F. Not every course has an unplugged lesson to cover events, but you can see the unplugged lesson for Course A and Course B at the bottom of this page.
          <br/><br/>

          **2. Watch the student video: The Big Event**
          <br/>
          This is a video that you would show your students to help introduce the concept of events and kick off the unplugged lesson.

          [![](https://images.code.org/e5d8d5fc84416e34232f3e00142e5b2a-image-1571254248844.30.31 PM.png)](https://youtube.com/watch?v=u0WV9shCoak)

          [Can't see the video? Click here](http://videos.code.org/2014/C1-bigevent-unplugged.mp4)
          <br/><br/>

          **3. Watch the teacher video: How to facilitate "The Big Event"**
          <br/>
          This video is meant to be support for you as the teacher, if you are looking for tips on how to run this lesson.

          [![](https://images.code.org/666ace3e1b7de917e112733112d358e4-image-1571254314712.31.50 PM.png)](https://youtube.com/watchv=aYECW6V8nQA)
          <br/><br/>

          **4. Review other unplugged lessons that introduce events:**

          - Course A, Course B (Kindergarten, Grade 1): [The Big Event Jr.](https://curriculum.code.org/csf-18/courseb/12/)

          ---

          > ## Reflect
          > How would you explain the concept of events to your students? Share your thoughts in <a href="http://forum.code.org/t/teaching-events/409/1">our forum</a>.

          > <a href="http://forum.code.org/t/teaching-events/409/1" target="blank"><button class="plc">Discuss in the forums >></button></a>

          After commenting in the forum, return here and click below to move on.


      OPD-K5 Stage7Go_copy:
        markdown: |
          # Unplugged Lesson: The Big Event

          > An **event** is a line of code that tells your computer to "listen" for something to happen, then take an action. For example, on web pages, you often can display a drop down menu when you roll over the navigation bar with your mouse. The "mouse rollover" is an event that triggers an action.

          ***
          ## **1. Review "<a href="https://curriculum.code.org/csf-19/coursec/14/" target="blank">The Big Event</a>" Lesson Plan from Course C.**
          <br/>
          Course C is meant for students in Grade 2. Events come up in every CS Fundamentals Course, from A-F.
          <br/><br/>

          ## **2. Watch the student video: The Big Event (found in lesson plan)**
          This is a video that you would show your students to help introduce the concept of events and kick off the unplugged lesson.

          ***
          <a href="https://curriculum.code.org/csf-19/coursec/14/" target="blank">![](https://images.code.org/37ab92bffc396c3b60f83123b44a0552-image-1573080011247.39.43 PM.png)</a>
      OPD-K5 Stage7Start:
        markdown: "# Events > Stage Overview\n\n<img src=\"https://images.code.org/319df539d56b2795d659a56e9334a5fb-image-1434397946590.JPG\"
          width=\"450px\" style=\"border-radius: 10px; float: right; margin: 0 0 40px
          40px;\">\n\nThus far, you've learned how to sequence a program, add loops,
          and use conditionals and functions. You're almost done!   \n\nIn this stage,
          we're going to look at *events*, another core concept in computer science.
          As we explore events, you will synthesize what you've learned so far and
          write some more complex programs.\n\nBy completing Stage 8, you will:\n\n-
          Practice coding simple events\n- Reflect on classroom application\n\n>**What
          to Expect in this Stage:** You'll start with an unplugged lesson from Course
          C (meant for Grade 2) introducing events. Then, you'll explore some puzzles
          from Course F (meant for Grade 5) that allow you to experiment with event
          blocks. We'll close with an opportunity to reflect. You should spend between
          20-45 minutes on this stage.\n\nReady? Let's go!\n"
      OPD-K5 Stage7Start_copy:
        markdown: |+
          # Overview: Events

          <img src="https://images.code.org/319df539d56b2795d659a56e9334a5fb-image-1434397946590.JPG" width="450px" style="border-radius: 10px; float: right; margin: 0 0 40px 40px;">

          ## Coding concepts: Events
          - Make a program interactive

          ## Teaching practice: Debugging
          - Find and fix problems in an algorithm or program

      OPD-K5 Stage8Go:
        markdown: |
          # Best Practices > Reflection

          Stage 8 introduced you to a number of best practices for teaching computer science. Take a moment to consider which strategies covered in this stage you might use in your practice. In the next stage, you'll create a simple plan and reflect on the course as a whole.

          ## What strategies will you use when facilitating computer science learning in your classroom?

          Here are some examples from our teacher community:

          - **Facilitate "unplugged" activities** to teach core concepts (click [here for a full list of unplugged activities](https://code.org/curriculum/unplugged.)
          - Implement the **"ask 3 and then me"** rule in your classroom, which is when students have to ask 3 classmates for help before they can ask the teacher that same question. This reduces the number of students that you have to answer individually and promotes peer learning.
          - **Be calm yet persistent** when problems arise (which they will.) Your reaction sets the tone for students. If at the first sign of an issue, you proclaim "I'm terrible at technology. I give up," your students will think it's okay to do that too.
          - **Take pride** in their programs. Show them off, put them to work, post them online. This is a big accomplishment for you and your students that should be celebrated.
          - **Ask probing questions** to a student (even if you don't know the answer to the questions.) Ask your class if anyone has the answer. Get comfortable saying "I don't know; let's figure this out together!"

          ---

          > ## Reflect
          Review more strategies or add your own <a href ="http://forum.code.org/t/code-org-k5-professional-development-computer-science-pedagogy-6/14/4">in our forums.</a>:

          > <a href="http://forum.code.org/t/code-org-k5-professional-development-computer-science-pedagogy-6/14/4" target="blank"><button class="plc">Share your strategies >></button></a>

          After exploring the forum thread and adding your thoughts, click below to move on to Stage 9.
      OPD-K5 Stage8Start:
        markdown: "# Best Practices > Stage overview\n\n<img src=\"https://images.code.org/1faca2c2dd1c9bd64ab5def347524d9c-image-1434398377360.JPG\"
          width=\"450px\" style=\"border-radius:10px; float:right; margin: 0 0 40px
          40px;\">\n\n**You've made your way through the majority of the content for
          this course. Congratulations!**   \n\nIn Stage 1, you reviewed the course
          information.  \nIn Stage 2, you explored computer science as a discipline.
          \ \nIn Stage 3, you prepared to master the basics of computer science.  \nIn
          Stages 4-8, you played the role of the student yourself.  \nNow, let's transition
          to an exploration of how you might teach what you've learned to young people.
          \ \n\n\nBy completing Stage 9, you will:\n\n- Review best practices for
          teaching computer science\n\n> ## Looking ahead:\n> The best practices we
          will cover in this stage include:\n\n>- Establishing a positive classroom
          culture that supports self-directed learning, experimentation and failure\n-
          Knowing when and how to apply instructional design strategies from other
          subject areas\n- Using strategic grouping strategies such as \"pair programming\"\n-
          Explicitly teaching meta-cognitive problem solving strategies\n- \"Unplugging\"
          and teaching some core concepts with minimal or no technology\n- Other best
          practices suggested by the Code.org teacher community\n\nWe'll also provide
          an opportunity for you to share your best practices with our community.\n"
      OPD-K5 Stage9Go:
        markdown: |
          # Planning > Review

          <img src="https://images.code.org/34e1d20a6ae73e28c6c88c5981fd6be6-image-1434411459379.JPG" width="450px">

          In this stage, you should have:

          - Reviewed the Teacher Dashboard and other resources on Code.org
          - Planned for how you might integrate computer science into your practice

          In Stage 11, our final stage, you will

          - Reflect on your learning
          - Plan for next steps you can take to continue your learning
          - Connect with a global community of fellow educators interested in computer science education
      OPD-K5 Stage9Start:
        markdown: "# Planning > Exploring Teacher Resources\n\nThroughout Stages 4-8,
          you took a look at some of the \"unplugged\" and online learning resources
          available for CS Fundamentals, as they aligned with the computer science
          concepts you were learning. \n\nNow that you have some understanding over
          how to code, as well as how to teach computer science, it's time to start
          planning your instruction. In this stage, we'll be touring other areas of
          the Code.org platform and the **[Teacher Dashboard](http://studio.code.org/)**.
          \n\nBy completing Stage 10, you will:\n\n- Explore resources available to
          teachers\n- Explore the Code.org **[Teacher Dashboard](http://studio.code.org/)**\n-
          Plan for how you might integrate computer science into your practice\n\n***\n\nA
          screenshot of the Teacher Dashboard is below. You will need to log into
          your Code.org teacher account in order to see it -- once you are logged
          in, it should the default screen that you see on the Code.org website. If
          you do not have a teacher account, you can **[sign up for one here](https://studio.code.org/users/sign_up)**.\n\n![](https://images.code.org/d6345709495f764a71d9cb0994dbd7e4-image-1549064603589.png)\n"
      OPD-K5 Stage9Start_copy:
        markdown: "# Exploring Teacher Resources\n\nIt's time to start planning your
          instruction. In this stage, we'll be touring other areas of the Code.org
          platform and the **<a href=\"http://studio.code.org/\" target=\"blank\">Teacher
          Dashboard</a>**. \n\nA screenshot of the Teacher Dashboard is below. You
          will need to log into your Code.org teacher account in order to see it.
          Once you are logged in, it should be the default screen that you see on
          the Code.org website. If you do not have a teacher account, you can **<a
          href=\"https://studio.code.org/users/sign_up\" target=\"blank\">sign up
          for one here</a>**.\n\n<a href=\"http://studio.code.org/\" target=\"blank\">![](https://images.code.org/d6345709495f764a71d9cb0994dbd7e4-image-1549064603589.png)</a>\n"
      OPD-K5 Using CS:
        markdown: "# Planning > Preparing for a Code Studio lesson\n\nLet's take a
          look at how Code Studio works for you and your students in a classroom setting.\n\n##
          Step 1: Choose a course\nCheck out our [elementary school page](https://code.org/educate/curriculum/elementary-school)
          and find the lesson plans and full courses for our CS Fundamentals A-F lesssons.
          Or, if you are interested in our middle school or high school courses you,
          \n, you'll find courses for all grade levels - from pre-readers to seniors
          in high school, and everyone in between. All our courses are available at
          no cost. Chat with colleagues at your school to determine how the course
          curriculum can be integrated with a variety of subjects. \n \n## Step 2:
          Set up your classroom section\nSet up a classroom section to view your student's
          progress, print login cards for your students, manage their accounts, and
          print certificates they can bring home when they finish the course. Click
          this link to [watch a brief video](https://code.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=56d32934-3f67-48db-98db-e66e9152df7b)
          demonstrates how to set up your first computer science class on Code.org.
          You can also find the steps in [this support article](https://support.code.org/hc/en-us/articles/115000488132-Creating-a-classroom-section).\n\n##
          Step 3: Assign the course to your section\nClick into the course that you
          are teaching -- you should see a screen that looks like the one below. You
          can then click \"Assign Course\" and assign that course to one of your sections.
          \n\n## Step 4: Start teaching! \nAll it takes is one lesson to bring computer
          science concepts into your classroom. Once you see your students enthusiasm
          for CS, go further with daily lesson plans to guide your students, unplugged
          activities you can do without a computer, and forums to connect to other
          teachers.\n\n\n\n"
      OPD-K5 Vocabulary:
        markdown: |
          # CS Fundamentals > Key Vocabulary

          As you begin to learn computer science, one of the most important tasks is to become familiar with the language of coding. In this course and throughout the CS Fundamentals resources, we use the same vocabulary used in the computer science industry. Encouraging young students to learn and use professional terms enables them to communicate with others and build their knowledge in computer science without having to relearn terms and concepts later. The terms and concepts used in these courses are defined using words that most young students should be able to understand.

          Here is a [list of vocabulary terms](http://code.org/curriculum/docs/k-5/glossary) used throughout the CS Fundamentals resources; many of these terms are introduced in this course as well. You don't have to learn all these words right now. Use that list as a reference during this online professional development course and when you use our courses with your students.

          <a href="http://code.org/curriculum/docs/k-5/glossary" target="blank"><button class="default">View the Glossary >></button></a>

          > **Teaching Tip:** Best practice is to introduce the terms with easy-to-understand language, relate the terms to previous experiences, use the terms repeatedly beyond the lesson itself throughout the entire course (and in other situations) when appropriate, and reinforce students' use in oral and written communication.
      OPD-K5 Welcome 2:
        markdown: |+
          # Getting Started > Computer Science Fundamentals Courses

          The goal of Code.org's professional development is to prepare teachers like you to integrate computer science into their classrooms and support their growth as teachers. After completing this online course, you'll be ready to teach one or more of the following Code.org Computer Science Fundamentals courses in your classroom:

           - **[Course A](http://studio.code.org/s/coursea)**: approximately 12 hours (Kindergarten)
           - **[Course B](http://studio.code.org/s/courseb)**: approximately 12 hours (Grade 1)
           - **[Course C](http://studio.code.org/s/coursec)**: approximately 18 hours (Grade 2)
           - **[Course D](http://studio.code.org/s/coursed)**: approximately 18 hours (Grade 3)
           - **[Course E](http://studio.code.org/s/coursee)**: approximately 18 hours (Grade 4)
           - **[Course F](http://studio.code.org/s/coursef)**: approximately 20 hours (Grade 5)
           - **[Computer Science (CS) Fundamentals Express](http://studio.code.org/s/express)**: approximately 20 hours (Ages 8+)
           - **[Computer Science (CS) Fundamentals Pre-Express](http://studio.code.org/s/pre-express)**: approximately 20 hours (Ages 4-8)


      OPD-K5 Welcome 2_copy:
        markdown: |+
          # Computer Science Fundamentals Courses

          The goal of Code.org's professional development is to prepare teachers like you to integrate computer science into their classrooms and support their growth as teachers. After completing this online course, you'll be ready to teach one or more of the following Code.org Computer Science Fundamentals courses in your classroom.

          **Take a moment to look at the table below and think about which course or courses will be best suited for your students**.

          <table style="width:100%; border-style:none;">
            <tr>
              <th style="background-color:#ff9900; text-align:center; border-style:none; font-weight:bold;""">
                <b><a href="https://curriculum.code.org/csf-19/coursea/" target="blank" style="color: white">Course A</a></b><br/>
                <i>Kindergarten</i>
              </th>
              <th style="background-color:#f1c232; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/courseb/" target="blank" style="color: white">Course B</a><br/>
                  <i>1st Grade</i>
              </th>
              <th style="background-color:#b8bf0d; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/coursec/" target="blank" style="color: white">Course C</a><br/>
                  <i>2nd Grade</i>
              </th>
              <th style="background-color:#53bac2; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/coursed/" target="blank" style="color: white">Course D</a><br/>
                  <i>3rd Grade</i>
              </th>
              <th style="background-color:#0094ca; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/coursee/" target="blank" style="color: white">Course E</a><br/>
                  <i>4th Grade</i>
              </th>
              <th style="background-color:#7664a0; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/coursef/" target="blank" style="color: white">Course F</a><br/>
                  <i>5th Grade</i>
              </th>
            </tr>
            <tr>
              <td style="background-color:#f9cb9c; color:black; border-style:none; vertical-align: text-top;"">12 lessons, ~12 hours to complete</td>
              <td style="background-color:#ffe599; color:black; border-style:none; vertical-align: text-top;"">12 lessons, ~12 hours to complete</td>
              <td style="background-color:#d2da0e; color:black; border-style:none; vertical-align: text-top;"">18 lessons, ~18 hours to complete</td>
              <td style="background-color:#68ebf5; color:black; border-style:none; vertical-align: text-top;"">18 lessons, ~18 hours to complete</td>
              <td style="background-color:#9ed7ed; color:black; border-style:none; vertical-align: text-top;"">18 lessons, ~18-20 hours to complete</td>
              <td style="background-color:#c9c1e9; color:black; border-style:none; vertical-align: text-top;"">18 lessons, ~20-22 hours to complete</td>
            </tr>
            <tr>
              <td colspan="6" style="text-align:center;width:96%;background-color:#d9d9d9;color:black; border-style:none;">Concepts</td>
            </tr>
            <tr>
              <td style="background-color:#f9cb9c; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>Digital Citizenship</li>
                  <li>Sequencing</li>
                  <li>Loops</li>
                  <li>Events</li>
                </ul>
              </td>
              <td style="background-color:#ffe599; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>Digital Citizenship</li>
                  <li>Sequencing</li>
                  <li>Loops</li>
                  <li>Impacts of Computing</li>
                  <li>Events</li>
                </ul>
              </td>
              <td style="background-color:#d2da0e; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>Digital Citizenship</li>
                  <li>Sequencing</li>
                  <li>Binary</li>
                  <li>Loops</li>
                  <li>Events</li>
                  <li>Data</li>
                </ul>
              </td>
              <td style="background-color:#68ebf5; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>Sequencing</li>
                  <li>Events</li>
                  <li>Loops</li>
                  <li>Conditionals</li>
                  <li>Binary</li>
                  <li>Digital Citizenship</li>
                </ul>
              </td>
              <td style="background-color:#9ed7ed; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>Sprites</li>
                  <li>Digital Citizenship</li>
                  <li>Impacts of Computing</li>
                  <li>Nested Loops</li>
                  <li>Functions</li>
                </ul>
              </td>
              <td style="background-color:#c9c1e9; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>Variables</li>
                  <li>Data</li>
                  <li>For Loops</li>
                  <li>Internet</li>
                  <li>Sprites</li>
                  <li>Digital Citizenship</li>
                  </ul>
              </td>
          </table>
          <br/>

          **Later on, if you want to see even more details about what is in each course, you can check out our very thorough <a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview" target="blank">Computer Science Fundamentals Curriculum Guide</a>.**



      OPD-K5 What is Mastery:
        markdown: |
          # Looking Ahead > What is mastery?

          In the stages that follow, you will master the following basic core concepts of computer science:

          - Stage 4: Sequencing
          - Stage 5: Loops
          - Stage 6: Conditionals
          - Stage 7: Functions
          - Stage 8: Events

          ## What is "mastery"?

          We define "mastery" as being able to do the following:

          - Define and explain what is meant by the core concept, and why it's important in computer science
          - Write simple programs applying the concept (by using visual programming to solve puzzles)
          - Reflect on how you might integrate the concept into your practice

          Use this list as your rubric as you work through the course. As you complete each stage, ask yourself:

          - Can I define and explain the importance of this particular core concept at a beginner level?
          - Was I able to successfully complete the simple puzzles in this stage?
          - Do I have a few ideas on how I might use this in my classroom?

          If you answer yes to each question, proceed to the next stage. If you answer no to any of the questions, consider revisiting the stage or exploring more about the topic in the student side of Code Studio before moving on.

          ## Things to keep in mind while learning computer science:

          - The world of computer programming moves so fast that there really are no masters. **We're all learners** at different stages but we are still always learners.
          - Programming becomes more comfortable every time you come back to it. **You're not going to be an expert your first time.**
          - There's no way around it, the act of programming and **learning to program takes time, but anyone can do it!**

          > **Key Takeway:** The goal of the next several stages is not to turn you into a computer scientist, but to instead help you feel comfortable enough with the core concepts that you are excited to share your knowledge with your students.

          ## After I "master" the concepts, what comes next?

          In **Stage 9**, you'll explore Code.org's free curricula and resources for teachers. You can choose to use any of these resources or other curricular resources of your choosing. Completing this course will give you the basics you need to understand any beginning computer science curriculum.

          In **Stages 10 and 11**, we'll point you in the direction of resources you can use to learn more or feel more prepared to teach these concepts in your classroom.
      OPD-K5 What is Mastery_copy:
        markdown: "# Looking Ahead\n\n## Teaching practices\nIn the next concept chunk,
          you will learn about the following teaching practices:\n\n- Finding and
          utilizing lesson plans\n- Pair programming\n- Debugging\n- Journaling\n\n##
          Basic coding concepts\nIn the next concept chunk, you will practice the
          following basic core concepts of computer science:\n\n- Sequencing\n- Loops\n-
          Events\n- Conditionals\n\nIn these lessons, you will: \n- Define and explain
          what is meant by the core concept, and why it's important in computer science\n-
          Write simple programs applying the concept (by using visual programming
          to solve puzzles)\n- Reflect on how you might integrate the concept into
          your practice\n\n## How do I know if I should move to the next lesson?\n\nAs
          you complete each lesson, ask yourself:\n\n- Could I define and explain
          the importance of this particular core concept to someone without knowledge
          of computer science?\n- Was I able to successfully complete the simple puzzles
          in this lesson?\n- Do I have a few ideas on how I might use this in my classroom?\n\nIf
          you answer yes to each question, proceed to the next lesson. If you answer
          no to any of the questions, consider revisiting the lesson or exploring
          more about the topic in one of the Computer Science Fundamentals courses
          before moving on.\n"
      OPD-K5 Why teach CS:
        markdown: |
          # CS Fundamentals > Why teach computer science?

          <img src="//code.org/images/edquote1.png" width="250px" style="margin-right:45px; float:left">

          Research shows that computer science promotes critical thinking, creativity, problem-solving, and engagement in real-world skills. In fact, a [recent research study](https://medium.com/@codeorg/code-org-resourceful-teachers-higher-student-achievement-8be1efdec06e) found that classrooms with resourceful teachers see higher scores on English, math, and science standardized tests after teaching CS Fundamentals lessons.

          Why would you want to teach computer science if you're not a STEM teacher? If you're taking this course, you likely have a number of your own answers to that question, but if you need further inspiration, take some time now and review [this video collection](http://code.org/educate/inspire) to get a sense of the "why". These videos are great to share with your students, your administration, parents, and your community if you need help making a case for CS in the classroom. You might also be interested in some of the statistics and evidence around CS education.

          <a href="http://code.org/educate/inspire" target="blank"><button class="default">Explore inspirational videos >></button></a><a href="http://code.org/promote" target="blank"><button class="default">Explore research >></button></a>

          Spend a few moments exploring our research and make note of any relevant or interesting facts or insights you discover.
      OPD-K5 Why teach CS_copy:
        markdown: "# Why teach computer science?\n\n<img src=\"https://images.code.org/2d5f7097062637d95a723129689b4891-image-1571684813152.JPG\"
          class=\"level-image\">\n\n### **Develop important skills**\nResearch shows
          that computer science promotes critical thinking, creativity, problem-solving,
          and engagement in real-world skills. \n\n### **Improve performance in other
          subjects**\nYou don't need to be a STEM teacher to see the benefit of CS
          in your classroom. A <a href=\"https://medium.com/@codeorg/code-org-resourceful-teachers-higher-student-achievement-8be1efdec06e\"
          target=\"blank\">recent research study</a> found that classrooms with resourceful
          teachers see higher scores on English, math, and science standardized tests
          after teaching CS Fundamentals lessons. \n\n### **Build confidence and interest
          early on**\nIf we wait until high school or college to introduce students
          to computer science, some students will already have decided that computer
          science is not for them or they will feel that they are already too far
          behind compared to students who study it outside of school.\n\nExposing
          students to computer science in grades K-5, when they don't have to opt-in
          to a class like they might in high school, allows all students to see how
          accessible the subject is, and decide if they enjoy it.\n\n### **It's fun!**\nComputer
          science gives students an opportunity to collaborate, be creative, and express
          themselves! \n\n### **Need more convincing?**\nCode.org has a lot of resources
          to help you -- as well as students, your administration, parents, and your
          community -- understand why CS is important in the classroom. Check out
          our inspirational video series, as well as some of the of the statistics
          and evidence around CS education, below.\n\n> <a href=\"http://code.org/educate/inspire\"
          target=\"blank\"><button class=\"default\">Explore inspirational videos
          >></button></a>\n\n> <a href=\"http://code.org/promote\" target=\"blank\"><button
          class=\"default\">Explore research >></button></a>\n\n<img src=\"https://images.code.org/1b213b6c2256c6992b899df3c62559a0-image-1571684948168.jpg\">\n"
      OPD-K5 Younger Grades:
        markdown: |
          # Why teach computer science in the early grades?

          <img src="https://images.code.org/0149da542dae03da5f40b7b8aacf73c0-image-1434818868152.jpg" class="level-image">

          In addition to the computational thinking practices students learn through coding experience, teaching computer science in the early grades has an additional benefit for students and for society &mdash; we can work to create more equity in the tech industry.

          If we wait until high school or college to introduce students to computer science, some students will already have decided that computer science is not for them or they will feel that they are already too far behind compared to students who study it outside of school.

          Exposing students to computer science in grades K-5, when they don't have to opt-in to a class like they might in high school, allows all students to see how accessible the subject is, and decide if they enjoy it.

          > ## Why do you believe teaching computer science is worthwhile?
          [Tweet your thoughts](https://twitter.com/teachcode) and be sure to tag @teachcode in your tweet so we can respond.

          > <a href="http://ctt.ec/Bfjw3" target="blank"><button class="default">Share on Twitter >></button></a><br><br>
          Don't have a Twitter account? You can also find us on [Facebook](https://www.facebook.com/Code.org/) or [Instagram](https://www.instagram.com/codeorg/).
      OPD-K5 Your Plan:
        markdown: |
          # Planning > Your Plan

          We hope this stage has helped introduce you to the resources available on Code Studio. As you think about how how you might in the future teach computer science using any of the code.org or Code Studio resources, take a moment to [share your plan with the Professional Learning Community (PLC)](http://forum.code.org/t/teaching-computer-science-your-plans/412).

          Share with us:

          - What are your goals for your classroom? How will CS or code.org resources help you meet those goals?
          - What are you most excited about when it comes to implementing some of these resources?
          - What challenges do you foresee in trying to meet your goals?
          - What questions do you have that this community might help you answer?

          After posting your initial plan, feel free to revisit [this thread](http://forum.code.org/t/teaching-computer-science-your-plans/412) in the future to update us on how things are going!

          <a href="http://forum.code.org/t/teaching-computer-science-your-plans/412" target="blank"><button class="plc">Post your plan >></button></a>

          After commenting in the forum, return here and click below to move on.
      OPD-K5 Your Plan_copy:
        markdown: |
          # Your Plan

          We hope this stage has helped introduce you to the resources available on Code Studio. As you think about how how you might in the future teach computer science using any of the code.org or Code Studio resources, take a moment to <a href="http://forum.code.org/t/teaching-computer-science-your-plans/412" target="blank">share your plan with the Professional Learning Community (PLC)</a>.

          Share with us:

          - What are your goals for your classroom? How will CS or code.org resources help you meet those goals?
          - What are you most excited about when it comes to implementing some of these resources?
          - What challenges do you foresee in trying to meet your goals?
          - What questions do you have that this community might help you answer?

          After posting your initial plan, feel free to revisit <a href="http://forum.code.org/t/teaching-computer-science-your-plans/412" target="blank">this thread</a> in the future to update us on how things are going! We encourage you to also look at posts from others so that you can get further inspired!

          > <a href="http://forum.code.org/t/teaching-computer-science-your-plans/412" target="blank"><button class="plc">Post your plan >></button></a>
      OPD-K5 conditionals introduced:
        content1: deskripsi di sini
        markdown: |+
          # Conditionals: Where are they introduced?

          This gives you a sense of where conditionals is introduced in Courses A-F. You don't need to go look at all of these lessons -- we will dive into some in this part of the online course -- but feel free to reference this as needed.

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank">Course C</a>
          - Lesson 12: Looking Ahead with Minecraft

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank">Course D</a>
          - Lesson 10 (Unplugged): Conditionals with Cards
          - Lesson 11: If/Else with Bee
          - Lesson 12: While Loops in Farmer
          - Lesson 13: Until Loops in Maze
          - Lesson 14: Harvesting with Conditionals

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank">Course E</a>
          - Lesson 3: Conditionals in Minecraft: Voyage Aquatic
          - Lesson 4: Conditionals with the Farmer

      OPD-K5 debugging:
        content1: deskripsi di sini
        markdown: "# Teaching practice: Debugging\n\nEveryone gets bugs! Therefore,
          debugging is an essential skill all students should develop that builds
          on the student practices discussed above. Without strong debugging skills,
          students can become frustrated. Help keep students moving by implementing
          both active and reflective debugging strategies in your classroom.\n\n>
          **Debugging** is finding and fixing problems in an algorithm or program\n\n##
          Active Debugging\nNew programmers are prone to writing long chunks of code
          without pausing to read or test their work along the way, which can snowball
          into a program that is very hard to debug. To prevent this, we suggest implementing
          active debugging as part of a general coding philosophy.\n\nActive debugging
          describes the practice of debugging while coding. This generally means students
          taking time during coding exercises to read, process, and test small pieces
          of code that they have just written.\n\nUse this debugging guide to help
          with active debugging: \n\n<img src=\"https://images.code.org/b17956e111a6ca4ec17ace55f7fdf69b-image-1571695775936.09.14
          PM.png\">\n\n\n## Reflective Debugging\nReflective debugging is a practice
          in which students participate in debugging as an entire class. 'Bug talks'
          and keeping a 'bug tracker' are two examples of  strategies that can be
          used to implement reflective debugging in your classroom and are described
          below. Read more about these on <a href=\"https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview\"
          target=\"blank\">page 23 of the curriculum guide</a>. \n\nCheck out this
          video on debugging to learn more about the debugging process:\n\n<a href=\"https://www.youtube.com/watch?v=auv10y-dN4s\"
          target=\"blank\">![](https://images.code.org/281fbcbd84d0df2491e0c4050e612b97-image-1571696135948.13.58
          PM.png)</a>\n"
      OPD-K5 diving deeper intro:
        content1: deskripsi di sini
        markdown: "# Diving Deeper: Courses E and F\n\n## Are you teaching Courses
          E and F? \n\nCourses E and F are designed for 4th and 5th grade. In these
          courses, we dive deeper into some concepts and introduce new coding environments.
          \n\nIf you are planning to teach these courses, we recommend completing
          the following lessons. If you are not planning to teach these courses, you
          can skip this concept chunk and move onto \"Next Steps\".\n\n## What will
          you find in this concept chunk?\nIn this concept chunk, we will cover:\n-
          More advanced coding concepts: functions, variables and advanced forms of
          loops (nested loops and for loops)\n- \"Sprites\" and a new coding environment
          called Sprite Lab\n- End-of-course projects\n\n\n"
      OPD-K5 events introduced:
        content1: deskripsi di sini
        markdown: |
          # Events: Where are they introduced?

          This gives you a sense of where events is introduced in Courses A-F. You don't need to go look at all of these lessons -- we will dive into some in this part of the online course -- but feel free to reference this as needed.

          ## <a href="https://curriculum.code.org/csf-19/coursea/" target="blank">Course A</a>
          - Lesson 11 (Unplugged):  The Big Event Jr.
          - Lesson 12: On the Move with Events

          ## <a href="https://curriculum.code.org/csf-19/courseb/" target="blank">Course B</a>
          - Lesson 11 (Unplugged): The Big Event Jr.
          - Lesson 12: A Royal Battle with Events

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank">Course C</a>
          - Lesson 14: (Unplugged): The Big Event
          - Lesson 15: Build a Flappy Game
          - Lesson 16: Chase Game with Events

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank">Course D</a>
          - Lesson 5: Events in Bounce
          - Lesson 6: Build a Star Wars Game
      OPD-K5 for loops:
        content1: deskripsi di sini
        markdown: "# Unplugged Lesson: For Loop Fun\n\n> A **for loop** is a loop
          with a predetermined beginning, end, and increment (step interval).\n***
          \n## **1. Review \"<a href=\"https://curriculum.code.org/csf-19/coursef/11/\"
          target=\"blank\">For Loop Fun</a>\" Lesson Plan from Course F.**\n<br/>\nCourse
          F is meant for students in Grade 5. This is the only place where for loops
          come up in Courses A-F.\n<br/><br/>\n\n## **2. Watch the student video:
          For Loop Fun (found in lesson plan)**\n<br/>\nThis is a video that you would
          show your students to help introduce the concept of for loops and kick off
          the unplugged lesson.\n\n***\n\n<a href=\"https://curriculum.code.org/csf-19/coursef/11/\"
          target=\"blank\">![](https://images.code.org/73c0b6e95f2136d6ebcc03cbddee1be7-image-1573148733514.45.16
          AM.png)</a>\n"
      OPD-K5 for loops intro:
        content1: deskripsi di sini
        markdown: |
          # Overview: For Loops

          <img src="https://images.code.org/9d05ff62f3098c6143eff78553e05f06-image-1571780679511.jpg" class="level-image">

          ## Advanced coding concepts: For loops
          - Understand that for loops are a loop with a predetermined beginning, end, and increment (step interval)
          - Practice using for loops
      OPD-K5 for loops introduction:
        content1: deskripsi di sini
        markdown: |
          # For Loops: Where are they introduced?

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank">Course F</a>
          - Lesson 11 (Unplugged): For Loop Fun
          - Lesson 12: For Loops with Bee
          - Lesson 13: For Loops with Artist
      OPD-K5 functions introduced:
        content1: deskripsi di sini
        markdown: |
          # Functions: Where are they introduced?

          This gives you a sense of when functions are introduced in Courses E-F. You don't need to go look at all of these lessons -- we will dive into some in this part of the online course -- but feel free to reference this as needed.

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank">Course E</a>
          - Lesson 14 (Unplugged): Songwriting
          - Lesson 15: Functions in Minecraft
          - Lesson 16: Functions with Harvester
          - Lesson 17: Functions with Artist

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank">Course F</a>
          - Lesson 1: Functions in Minecraft
      OPD-K5 journaling:
        content1: deskripsi di sini
        markdown: "# Teaching practice: Journaling\n\n<img src=\"https://images.code.org/49264bf902a5804672133e723bee6e8b-image-1573170371197.42.28
          PM.png\" class=\"level-image\">\n\n## Why use it? \nLike a chemist would
          catalog strategies and solutions, so do we ask our budding computer scientists
          to take notes on their trials and achievements. Journals are useful as scratch
          paper for building, debugging, and strategizing, and they offer a fantastic
          resource for referencing previous answers when struggling with more complex
          problems.\n\n## How do I use it?\n- Encourage students to keep their journals
          beside them at all times when coding\n- Remind students that they can write
          solutions out longhand, then circle patterns to find prime opportunities
          for loops and functions\n- Have students copy down answers to puzzles that
          they might need in future levels\n- Ask students to draw emoticons at the
          top of the pages to help them identify how they're feeling about concepts\n-
          End each lesson with a thought or question that students can answer in writing
          as a way of reflecting on their growth for the day\n\nLesson plans also
          have journaling prompts in them! \n\n\n"
      OPD-K5 lesson implementation planning:
        content1: deskripsi di sini
        markdown: "# Lesson Implementation Planning Guides\n\nThe goal of these questions
          is to help you think about and make a detailed plan for how you might teach
          lessons in a way that leverages best teaching practices and supports students.
          Think about these questions as you continue to learn basic coding concepts
          and teaching practices throughout this online professional development course.\n\n##
          Unplugged Lessons\nYou can find a printable version of this resource on
          page 43 of the <a href=\"https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview#heading=h.jhv35ofi4hkz\"
          target=\"blank\">curriculum guide</a>. \n\n| What's happening | Where can
          this happen in the lesson? | \n| ------------ | ----------------- |\n| **Instructional
          approaches to use in this lesson** <br/>What instructional techniques do
          you want to be sure to use in this lesson? Where do you want to use them?
          \ |    |\n| **Role as the teacher** <br/>When/where in the lesson do you
          want the whole class to discuss a topic? What role do you plan to take and
          when? |  |\n| **Classroom environment and student interaction** <br/>When
          do you want students to interact during this lesson? What should that look
          like?|  |\n| **Assessing student learning in the lesson** <br/>How can you
          assess if students have learned what they need to learn during this lesson?
          |  |\n| **Connecting to computer science** <br/>Where do you think students
          might need a push to see the connection between this unplugged activity
          and computer science? How do  you plan to support that? |  |\n| **Making
          connections** <br/>Where is there space in this lesson to make connections
          to the real world/other things students are learning in school? |  |\n\n##
          Plugged Lessons\nYou can find a printable version of this resource on page
          45 of the <a href=\"https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview#heading=h.jhv35ofi4hkz\"
          target=\"blank\">curriculum guide</a>. \n\n| What's happening | Where can
          this happen in the lesson? | \n| ------------ | ----------------- |\n| **Connecting
          to Unplugged lesson** <br/>How will you scaffold and support students in
          seeing the connection between the previous unplugged lesson and this plugged
          lesson?  |    |\n| **Instructional approaches to use in this lesson** <br/>What
          instructional techniques do you want to be sure to use in this lesson? Where
          do you want to use them?  |    |\n| **Role as the teacher** <br/>When/where
          in the lesson do you want the whole class to discuss a topic? What role
          do you plan to take and when? |  |\n| **Classroom environment and student
          interaction** <br/>When do you want students to interact during this lesson?
          What should that look like?|  |\n| **Assessing student learning in the lesson**
          <br/>How can you assess if students have learned what they need to learn
          during this lesson? |  |\n| **Supporting debugging** <br/>Where do you think
          students might need to engage in debugging during this lesson (which levels/activities)?
          How can you support them with that debugging? |  |\n| **Making connections**
          <br/>Where is there space in this lesson to make connections to the real
          world/other things students are learning in school? |  |\n\n\n"
      OPD-K5 lesson plans:
        content1: deskripsi di sini
        markdown: "# Lesson Plans\n\n## Where do I find lesson plans?\nYou can see
          all the lesson plans for all of the CS Fundamentals courses <a href=\"https://curriculum.code.org/csf-19/\"
          target=\"blank\">here</a>. \n\n## Are there lesson plans for unplugged ***and***
          plugged lessons?\nYes! \n\n## How are lesson plans structured?\n\nEvery
          lesson plan has a common structure designed to make it easy to find what
          you need. As you plan for a lesson, we recommend starting with the overview,
          then reviewing the core activity to get a deeper sense of what will happen
          in the lesson and how long it might take.\n\n<img src=\"https://images.code.org/f5ada4cd79f47502741adc86ed6f4430-image-1571693286262.27.12
          PM.png\">\n\n## Where can I learn more about lesson plans?\nThere is a ton
          more information about lesson plans in the <a href=\"https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview\"
          target=\"blank\">curriculum guide</a>!\n\n\n"
      OPD-K5 loops introduced:
        content1: deskripsi di sini
        markdown: |
          # Loops: Where are they introduced?

          This gives you a sense of when loops are introduced in Courses A-F. You don't need to go look at all of these lessons -- we will dive into some in this part of the online course -- but feel free to reference this as needed.

          ## <a href="https://curriculum.code.org/csf-19/coursea/" target="blank">Course A</a>
          - Lesson 7 (Unplugged): Happy Loops
          - Lesson 8: Loops with Scrat
          - Lesson 9: Loops with Laurel
          - Lesson 10: Ocean Scenes with Loops

          ## <a href="https://curriculum.code.org/csf-19/courseb/" target="blank">Course B</a>
          - Lesson 6 (Unplugged): Getting Loopy
          - Lesson 7: Loops with Harvester
          - Lesson 8: Loops with Laurel
          - Lesson 9: Drawing Gardens with Loops

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank">Course C</a>
          - Lesson 9: (Unplugged): My Loopy Robotic Friends, Jr.
          - Lesson 10: Loops with Rey and BB-8
          - Lesson 11: Harvesting Crops with Loops
          - Lesson 12: Looking Ahead with Minecraft
          - Lesson 13: Sticker Art with Loops

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank">Course D</a>
          - Lesson 7: Loops in Ice Age
          - Lesson 8: Drawing Shapes with Loops
          - Lesson 9: Nested Loops in Maze
      OPD-K5 project:
        content1: deskripsi di sini
        markdown: "# Overview: End of course projects\n\n<img src=\"https://images.code.org/0a5fca1b8c79ab8463d53ef7bde1a7a1-image-1573236230401.jpg\"
          class=\"level-image\">\n\n## New teaching practice: End of course projects\n\n-
          Each course offers the opportunity for students to take what they've learned
          and put it together into a unique project that represents their own creativity.
          \n- Students are encouraged to plan, build, revise, and present projects
          of their own. \n- Following a project from inception to delivery offers
          an inside look at the software development cycle. These guided projects
          offer scaffolded rubrics for the benefit of both student and teacher.\n\n\n"
      OPD-K5 projects introduction:
        content1: deskripsi di sini
        markdown: |
          # End of course projects: Where are they introduced?

          ## <a href="https://curriculum.code.org/csf-19/coursea/" target="blank">Course A</a>
          - Lesson 12: On the Move with Events

          ## <a href="https://curriculum.code.org/csf-19/courseb/" target="blank">Course B</a>
          - Lesson 12: A Royal Battle with Events

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank">Course C</a>
          - Lesson 18: End of Course Project

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank">Course D</a>
          - Lesson 18: Dance Party

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank">Course E</a>
          - Lesson 18: End of Course Project

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank">Course F</a>
          - Lesson 20: End of Course Project
      OPD-K5 role_of_teacher:
        content1: deskripsi di sini
        markdown: |
          # Role of the teacher

          <img src="https://images.code.org/cd6529b3552a2911cb907aceb59932b1-image-1571688504066.JPG" class="level-image">

          We believe students learn best with the help of an empowered teacher. Computer Science Fundamentals courses A-F  are designed to work best in a classroom setting, led by an engaged teacher.

          We know that many teachers are new to computer science, and for that reason, we design curriculum with the idea that the instructor will act as the lead learner. As the lead learner, the role of the teacher shifts from being the source of knowledge to being a leader in seeking knowledge.

          The lead learner's mantra is: **"I may not know the answer, but I know that together we can figure it out."**

          You can read more about being a lead learner, as well as other pedagogical approaches to our values, in the <a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview#" target="blank">curriculum guide</a>.
      OPD-K5 sequencing introduced:
        content1: deskripsi di sini
        markdown: |+
          # Sequencing: Where is it introduced?

          This gives you a sense of when sequencing is introduced in Courses A-F. You don't need to go look at all of these lessons -- we will dive into some in this part of the online course -- but feel free to reference this as needed.

          ## <a href="https://curriculum.code.org/csf-19/coursea/" target="blank">Course A</a>
          - Lesson 2: Learn to Drag and Drop
          - Lesson 3 (Unplugged): Happy Maps
          - Lesson 4: Sequencing with Scrat
          - Lesson 5 (Programming with Scrat)
          - Lesson 6: Programming with Rey and BB-8

          ## <a href="https://curriculum.code.org/csf-19/courseb/" target="blank">Course B</a>
          - Lesson 2 (Unplugged): Move It, Move It
          - Lesson 3: Sequencing with Angry Birds
          - Lesson 4: Programming with Angry Birds
          - Lesson 5: Programming with Harvester

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank">Course C</a>
          - Lesson 3: (Unplugged): My Robotic Friends, Jr.
          - Lesson 4: Programming with Angry Birds
          - Lesson 5: Debugging in Maze
          - Lesson 6: Collecting Treasure with Laurel
          - Lesson 7: Creating Art with Code

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank">Course D</a>
          - Lesson 1 (Unplugged): Graph Paper Programming
          - Lesson 2: Introduction to Online Puzzles
          - Lesson 3: Relay Programming
          - Lesson 4: Debugging with Laurel

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank">Course E</a>
          - Lesson 1: Sequencing in the Maze

      OPD-K5 sprite lab:
        content1: deskripsi di sini
        markdown: |
          # Overview: Sprite Lab

          <img src="https://images.code.org/e9d343b93e7a23bdb0c8bdd800f0dae1-image-1571780815860.46.37 PM.png" class="level-image">

          ## Advanced coding concept: Sprites and behaviors in Sprite Lab
          - Become familiar with a new coding environment: Sprite Lab
          - Practice creating Sprites
          - Practice coding behaviors for different Sprites

          ![]()
      OPD-K5 sprite lab introduction:
        content1: deskripsi di sini
        markdown: |
          # Sprite Lab: Where is it introduced?

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank">Course E</a>
          - Lesson 5 (Unplugged): Simon Says
          - Lesson 6: Swimming Fish with Sprite Lab
          - Lesson 7: Alien Dance Party with Sprite Lab

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank">Course F</a>
          - Lesson 2: Swimming Fish with Sprite Lab
          - Lesson 3: Alien Dance Party with Sprite Lab
          - Lesson 15: Behaviors in Sprite Lab
          - Lesson 16: Virtual Pet with Sprite Lab
      OPD-K5 sprite lab unplugged:
        content1: deskripsi di sini
        markdown: |
          # Unplugged Lesson: Simon Says

          > A **sprite** is a graphic character on the screen with properties that describe its location, movement, and look. A **behavior** is an action that a sprite performs continuously until it's told to stop.

          ***

          ## **1. Review "<a href="https://curriculum.code.org/csf-19/coursee/5/" target="blank">Simon Says</a>" Lesson Plan from Course E.**
          <br/>
          Course E is meant for students in Grade 4. Behaviors and Sprites appear in Courses E and F.

          ***
          <a href="https://curriculum.code.org/csf-19/coursee/5/" target="blank">![](https://images.code.org/991a82dba5edbd6c4909c540a1777041-image-1573149641437.00.20 AM.png)</a>
      OPD-K5 sprite lab video:
        content1: deskripsi di sini
        markdown: "# Introducing Sprite Lab\n\nWatch this video for an introduction
          to Sprite Lab!  \n\n<a href=\"https://www.youtube.com/watch?v=l0B0gDuHHC8\"
          target=\"blank\">![](https://images.code.org/929bd692b7029063aa9bf5835f6e6397-image-1571775211459.12.36
          PM.png)</a>\n"
      OPD-K5 types of lessons:
        content1: deskripsi di sini
        markdown: |+
          # Organization of CS Fundamentals courses

          ## Concept chunks

          Each CS Fundamentals course is organized into concept chunks, the big ideas that provide structure to a course. Concept chunks make it easy for teachers to see at a glance what is covered in a course. **Code.org provides <a href="http://curriculum.code.org/csf-19" target="blank">lesson plans</a> for every lesson in the curriculum, both on and off the computer**. The different kinds of lessons in each concept chunk are explained in detail below.

          To illustrate, here are the five lessons contained in the "Loops" concept chunk in Course C, as they appear in the course.


          <img src="https://images.code.org/953ebc5b17a97ee7fc9ee9261b4ee132-image-1571689334077.png">

          ## Unplugged lessons
          **These lessons are done away from the computer and are often used to introduce a new concept in a hands-on, tangible way.** Students will often work with pencil and paper or physical manipulatives.  These are intentionally placed kinesthetic opportunities that help students digest complicated concepts in ways that relate to their own lives. Often an unplugged lesson sets the stage for a subsequent skill-building lesson investigating the same concept on the computer.

          ## Plugged lessons -- Skill building
          **These lessons are done on the computer and give students structured practice with a new tool or programming concept.** These puzzle progressions generally start with a sequence of practice puzzles that gradually increase until reaching a challenge puzzle. There are often additional puzzles after the challenge that intentionally get easier to help build efficacy and confidence at the end of the lesson.


          ## Plugged lessons -- Application
          **These lessons are done on the computer and give students space to apply learned concepts in creative ways.** These lessons typically walk students through the creation of a mini-project that will be unique for them based on their own creative decisions. There are no right or wrong answers here!

          ## End of course projects
          Each course offers the opportunity for students to take what they've learned at the end of a lesson and put it together into a unique project that represents their own creativity. We'll learn more about them later on in this course.



      OPD-K5 using lesson plans:
        content1: deskripsi di sini
        markdown: |+
          # Teaching practice: Using lesson plans

          <img src="https://images.code.org/bf355a9cc76e248efa509ee0cea0b10c-image-1573174157169.48.54 PM.png" class="level-image">

          ## What is the benefit of following a lesson plan (even for plugged lessons)?

          Plugged lesson plans typically have many of the same features as their unplugged counterparts. Lessons will begin and end with discussions or activities that help motivate and synthesize learning. Key moments for you to check in with your students are noted in lesson plans. Students will use a computer, but the ways students interact with each other and your role as the teacher are still important considerations.

          Lesson plans provide opportunities to introduce concepts, have students reflect on what they've learned, and collaborate.


      OPD-K5 variables:
        content1: deskripsi di sini
        markdown: |+
          # Overview: Variables

          <img src="https://images.code.org/833108f29baf6f8633b1282aeb7d06e5-image-1571780548872.jpg" class="level-image">

          ## Advanced coding concepts: Variables

          - Understand that a variable placeholder for a piece of information that can change
          - Practice using variables

      OPD-K5 variables introduction:
        content1: deskripsi di sini
        markdown: |
          # Variables: Where are they introduced?

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank">Course F</a>
          - Lesson 6 (Unplugged): Envelope Variables
          - Lesson 7: Variables with Artist
          - Lesson 8: Changing Variables with Bee
          - Lesson 9: Changing Variables with Artist
      OPD-K5 variables unplugged:
        content1: deskripsi di sini
        markdown: |
          # Unplugged Lesson: Envelope Variables

          > An **event** is a placeholder for a piece of information that can change.

          ***

          ## **1. Review "<a href="https://curriculum.code.org/csf-19/coursef/6/" target="blank">Envelope Variables</a>" Lesson Plan from Course F.**
          <br/>
          Course F is meant for students in Grade 5. This is the only place where variables come up in Courses A-F.
          <br/><br/>

          ## **2. Watch the student video: Envelope Variables (in the lesson plan)**
          <br/>
          This is a video that you would show your students to help introduce the concept of variables and kick off the unplugged lesson.

          ***
          <a href="https://curriculum.code.org/csf-19/coursef/6/" target="blank">![](https://images.code.org/ff686377c1ba9bcd153a01cbfb24af35-image-1573086630947.29.50 PM.png)</a>
      OPD-K5 where to next:
        content1: deskripsi di sini
        markdown: |
          # Where to next?

          Congratulations! You've completed the basic coding concepts portion of this online professional development course! So, where to next?

          ## If you are planning to teach Courses E and F
          If you are planning to teach Courses E and F (or you just want to become familiar with some more advanced coding concepts), we recommend you continue onto the <a href="https://studio.code.org/s/k5-onlinepd-2019/stage/8/puzzle/1" target="blank">next concept chunk</a>, which specifically covers the concepts that are introduced in these courses.

          ## If you are not planning to teach Courses E and F
          If you are not planning to teach Courses E and F, you can skip to the <a href="https://studio.code.org/s/k5-onlinepd-2019/stage/12/puzzle/1" target="blank">"Next Steps" concept chunk.</a>
      OPD-K5-projects-1:
        content1: deskripsi di sini
        markdown: |+
          # Project Examples

          You are about to start your final project. Before you begin, spend some time looking at the example projects.

          | Hungry Squirrel | Alien Story |
          |---|---|
          |<a href="https://studio.code.org/projects/playlab/HN1zAX4Om6zdsxVsBBug9Y8mlzKSWUAXhjzRl-64YRs/view" target="blank">![Hungry Squirrel (Play Lab)](https://images.code.org/3fda61d18026d6661dccf4b09baea111-image-1565115158327.PNG "Hungry Squirrel (Play Lab")</a>| <a href="https://studio.code.org/projects/playlab/I_8rcKtpLFRAn8flROC15Oc-KnDu-bkKBnSORoIDs0o/view" target="blank">![Alien Story (Play Lab)](https://images.code.org/0bd5ed3674ac9fe3304e27e68974c35f-image-1565115240833.PNG "Alien Story (Play Lab")</a>|
          | Try adding sounds to this game! | Try adding another scene to this story! |

      OPD-Stage3Start:
        markdown: |
          # Looking Ahead > Stage Overview

          <img src="https://images.code.org/0b8c948f309ae1df3d9920520e4a168c-image-1435004357188.JPG" width="450px" style="border-radius:10px;">

          By completing this brief stage, you will:

          - Prepare to "master the basics" of computer science by reviewing what's next in the course
      'Overview: Design Mode':
        markdown: |
          # Welcome to App Lab Design Mode
          In App Lab "Design Mode" lets you drag and drop User Interface elements into the app.

          ### Vocabulary
          * **User Interface (UI)** - How a person (user) interacts with the computer or app.
          * **UI Elements** or objects, like buttons, images, text boxes, pull down menus, screens and so on.

          ## Example

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          You'll see a new set of switches above the app area that let you flip back and forth between "Design Mode" and Code Mode".</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>Adding an element is as easy as dragging and dropping it into the app where ever you want. Once it's on the app screen you can reposition it, resize it and change lots of other properties about it </p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>The <em>Properties</em> tab shows you everything you can change about the look and feel of a UI element.</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>The <strong>element ID</strong> is important because it's how you refer to the element in your code. We'll discuss element IDs later on.</p>
          </div>

          ![](https://images.code.org/01a31ac3be66deb6d01a92a1edfffd21-image-1476726587662.png)


          <div style="column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 66%; float: right">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>You can make the text that the user sees on the button text be whatever you like.</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">6.</span><strong>Note:</strong> Scroll down to see other properties for a UI element might be "hiding" down below.</p>
          </div>

          <div style="clear: both"></div>
          <hr>

          **Now you try!**
      'Overview: If Statements':
        markdown: |+
          # If Statement

          ## How If-statements work

          <img src="https://images.code.org/361556bbff61bf91e2c737f745582dff-image-1479418505481.png" style="float: right; margin-left: 20px; margin-right: 20px">

          If statements allow you to *make a decision that determines which lines of code should be run next.*

          At the right is a diagram showing the elements of a basic `if` statement in JavaScript.

          There are two basic parts to an if-statement.

          1. A condition to be evaluated (A Boolean expression that evaluates to **true** or **false**)
          2. Code that should run *if* the expression was true - enclosed in curly braces

          ## A worked example
          <img src="https://images.code.org/ca716e009ddb8dc397eb5a651a1ac2d7-image-1479420772852.png" style="display: block; margin: auto; float: right">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 150%;">1.</span>
          Program executes line by line as you would expect. It displays a message, then prompts the user to enter a number.  Whatever the user types will be stored in the variable <code>age</code> and then proceeds to the next line...
          </p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 150%;">2.</span>
          When the <code>if</code> statement is encountered the <em>first</em> thing it does is evaluate the condition in the parentheses. It checks to see if, at this point in the program, the value in a variable <code>age</code> is greater than or equal to 18.  If it is then we say the expression "<strong>returns true</strong>".  Otherwise it returns false.
          </p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 150%;">3.</span>
          These console.log statements will <em>only</em> execute if the expression was true. The curly braces surround all of the code that should be executed if, and only if, the expression was true.  Otherwise, the entire section of code encapsulated in the if statement is <em>skipped</em>.
          </p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 150%;">4.</span>
          Execution picks up here, on the first line after the closing curly brace of the if-statement.  This line will <em>always</em> execute, but notice that if the user entered an age less than 18, the entire if statement would be skipped, and it would just say "Thanks for verifying".  (We'll fix this awkwardness soon).

          </p>

          <div style="clear: both">&nbsp;</div>


      'Overview: Images':
        markdown: "# Images\n\n## Enter a URL of an image on the web\n\n<img src=\"https://images.code.org/acf4542eda586e7b73bc27dd8746848c-image-1477675154724.png\"
          style=\"width: 250px; float: right\">\n\nThere are several ways to get the
          URL of an image.  \n\nA common technique (shown at right) is to find an
          image you like on a web page and then right-click (or ctrl-click) and choose
          an option that says something like \"Copy Image Address\" then you can paste
          it into the text box in App Lab.\n\nIf you're unsure, you can also choose
          an option like \"Open Image in New Tab\" which isolate the image by itself
          and the URL will show in the address bar, which you can copy/paste into
          App Lab.\n\n**Common Mistake**: Using the URL of an *image search web site*
          rather than a URL of the image itself.\n\n* Make sure you get the path to
          an actual image file - something that ends with **.jpg**, **.gif** or **.png**.\n*
          A URL that starts like this: `https://www.google.com/search?q=cat&espv=2&biw=1497....`
          \ is probably wrong.\n\n\n## Upload your own images\n\nIf you have saved
          images on your computer you can upload them into app lab's **asset manager**.
          \ Just **click Upload File** and follow the dialogs on screen.\n\nFor images
          the file must be of type: **.jpg**, **.png**, or **.gif**\n\nOnce you've
          uploaded the image then you need to **Choose** it to set the image to that
          file. If you add multiple images you'll see them all listed every time you
          upload a file and you can choose to use *any* file that you've already uploaded.\n\n![](https://images.code.org/d64d7e3dadc882897e450b00a0fc6cb2-image-1476896824985.gif)\n\n###
          Click Continue to try it!\n\n\n"
      'Overview: onEvent':
        markdown: |
          # Responding to User Input

          You will need to dive into Code Mode to make it actually respond to users. App Lab waits to respond to certain **events** that occur in a program. The `onEvent` block specifies which UI element to wait for a event on.

          ## OnEvent

          <br><br>

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 4; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          Switch into Code Mode</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          Drag an <code>onEvent</code> block from the toolbox into the workspace.</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>
          Use the pulldown menu to select the <em>ID</em> of the UI element you want to setup to respond to some event. The IDs of all UI elements added in design mode will be listed here.</p>
          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>
          Use the pulldown menu to select the <em>type</em> of event you want to respond to. (Just use "click" for now).</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>
          Add code inside the function that you want to run <em>when</em> the user triggers the event.  The function will run once every time the user triggers the specific event.</p>

          </div>

          ![](https://images.code.org/9b506faaaadf61338dc738a4eafb66b2-image-1476740205599.png)
      'Overview: setPosition':
        markdown: "# setPosition and Screen Dimensions\n\nThe `setPosition` command
          lets you move UI elements to an arbitrary position on the screen.\n\n<img
          src=\"https://images.code.org/ee55080bb341528ca7e8ebc79f9f978b-image-1490369263385.27.12
          AM.png\" style=\"display: block; margin: auto\">\n\nYou (perhaps obviously)
          need to plug actual numbers into these parameters of `setPosition` for it
          to have any effect.  The numbers for setPosition **x and y coordinates of
          the screen**.\n\n**Hints:**\n\n* 0,0 is the top left corner.\n* Specify
          a location by how many pixels from the **left and down** from the top of
          the screen it is.  \n* The screen is **320 by 450 pixels**.  \n* You can
          **hover over the screen** to see the x,y coordinate of any point.\n\n<div
          style=\"width: 100%; text-align: center\">\n<img src=\"https://images.code.org/8b346602d75f2877c64e1793b6a04302-image-1476889124747.png\">\n\n<img
          src=\"https://images.code.org/fc7e830fa2ea994b885c76618b484dfa-image-1476889137756.gif\">\n</div>\n"
      PicturingData-Unplugged:
        markdown: |
          #Membayangkan Data

          Gunakan proyek Play Lab untuk mengumpulkan data dan membuat prediksi.

          ![](https://images.code.org/606a78c09a01133a1bbc1aa9c76f3320-image-1557334268558.png)
      PowerOfWords-Unplugged:
        markdown: |
          #Kekuatan Kata

          Hari ini, Anda akan mempelajari hal yang dilakukan jika seseorang sedang online.
      PowerfulPasswords-Unplugged:
        markdown: |
          #Kata Sandi yang Kuat

          Jelajahi alasan orang menggunakan kata sandi, pelajari manfaat menggunakan kata sandi, serta temukan strategi untuk membuat dan menjaga kata sandi yang kuat dan aman.

          ![](https://images.code.org/9e082a5564a289bccc8e2dd79a2cae9f-image-1557869939256.png)
      Prepare for your presentation:
        content1: deskripsi di sini
        markdown: |
          #Presentasi Proyek

          Saatnya mempresentasikan proyek Anda! Guru Anda akan memberikan rincian lebih lanjut tentang cara Anda akan mempresentasikan pekerjaan Anda kepada teman sekelas Anda.
      Prepare for your presentation_2018:
        markdown: |
          #Presentasi Proyek

          Saatnya mempresentasikan proyek Anda! Guru Anda akan memberikan rincian lebih lanjut tentang cara Anda akan mempresentasikan pekerjaan Anda kepada teman sekelas Anda.
      PrivatePersonalInformation-Unplugged:
        markdown: |
          #Informasi Pribadi dan Perorangan

          Dikembangkan melalui Pendidikan Akal Sehat, pelajaran ini adalah tentang perbedaan antara informasi yang aman dibagikan secara online dan informasi yang tidak aman.

          ![](https://images.code.org/872576b170b9d8aec9b29f684a1ad94e-image-1557878406833.png)
      RelayProgramming-Unplugged:
        markdown: |
          "#Pemrograman Bergiliran

          Masuk ke dalam tim dan bekerja sama untuk menulis program dengan membuat gambar."
      Responding to User Input:
        markdown: "# Responding to User Input\n\nDesign Mode makes it really easy
          to lay out the User Interface for your app, but we'll need to dive into
          Code Mode to make it actually respond to users.\n\nIn Game Lab the Draw
          loop just constantly ran code, using conditionals to check for interactions
          from the user. App Lab, on the other hand, waits to respond to certain **events**
          that occur in a program. It's App Lab's way of saying \"Hey! something just
          happened!\". This means that there doesn't need to be any code running when
          you aren't directly interacting with an app, and your code can respond to
          each of these events as they happen.\n\nCollectively, the coding tasks involved
          in making your app respond to events by triggering functions are called
          **Event Handling**.  \n\nIn App Lab all event handling starts by adding
          a special block of code called `onEvent`.  Here is how to do it:\n\n<br><br>\n\n<div
          style=\"column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc;
          -moz-column-count: 4; width: 100%\">\n\n<p><span style=\"font-weight: bold;
          color: #00adbc; font-size: 200%;\">1.</span>\nSwitch into Code Mode</p>\n\n<p><span
          style=\"font-weight: bold; color: #00adbc; font-size: 200%;\">2.</span>\nDrag
          an <code>onEvent</code> block from the toolbox into the workspace.</p>\n\n<p><span
          style=\"font-weight: bold; color: #00adbc; font-size: 200%;\">3.</span>\nUse
          the pulldown menu to select the <em>ID</em> of the UI element you want to
          setup to respond to some event. The IDs of all UI elements added in design
          mode will be listed here.</p>\n<p><span style=\"font-weight: bold; color:
          #00adbc; font-size: 200%;\">4.</span>\nUse the pulldown menu to select the
          <em>type</em> of event you want to respond to. (Just use \"click\" for now).</p>\n\n<p><span
          style=\"font-weight: bold; color: #00adbc; font-size: 200%;\">5.</span>\nAdd
          code inside the function that you want to run <em>when</em> the user triggers
          the event.  The function will run once every time the user triggers the
          specific event.</p>\n\n</div>\n\n![](https://images.code.org/9b506faaaadf61338dc738a4eafb66b2-image-1476740205599.png)\n\n###
          Changing Screens with a \"Click\"\n\nIt's important to understand in Event-Driven
          programming that:\n\n* **Users trigger events** - Events occur when users
          click a button, tap the screen, move the mouse, type a key on the keyboard,
          etc.\n* **Events trigger code** - When an event occurs or \"fires\" it can
          be used to trigger a particular javascript function.\n\nApp Lab's `onEvent`
          block is a type of event-handling function called an **Event Listener**.
          It wraps all of the setup up you need to do event handling into one command
          that has several parts. Here is an example with everything labeled:\n\n<img
          src=\"//curriculum.code.org/images/applab/onEvent_diagram.png\" style=\"display:
          block; margin: 20px auto\">\n\n<div style=\"column-count: 3; column-gap:
          20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%\">\n\n<p><span
          style=\"font-weight: bold; color: #00adbc; font-size: 200%;\">1.</span>\nCode
          to execute when callback function is triggered when the user clicks <em>button1</em>.
          \ In this case, simply move the turtle forward 25 pixels. Event handling
          code will typically be more than one line. This is just a simple example
          to start.</p>\n\n<p><span style=\"font-weight: bold; color: #00adbc; font-size:
          200%;\">2.</span>\nNotice that this function, unlike others we've seen,
          does not have a name. It is also called a <em>callback function</em> which
          is an odd term. A callback function is only different from a normal function
          in that you don't call it directly from your code. Instead a callback function
          is <strong>called by the system</strong> at the time the specified event
          occurs. Callback functions are a common pattern in a lot of event-driven
          programming.</p>\n</div>\n\n\n### You'll try this next!\n\n"
        teacher_markdown: "#### Just the Facts\n\nThere's a lot to consume here and
          many of the details about how events work in App Lab are not totally necessary
          to understand for our needs in this unit. If students are struggling with
          how programming works in App Lab, focus on these essentials:\n\n* There
          is no `draw` loop that runs forever\n* The `onEvent()` block specifies:\n\t*
          an element ID\n    * an event (such as \"click\" or \"mouseover\")\n    *
          code that should be run when the event occurs (this code is technically
          an anonymous callback function, represented by the green block)\n* Code
          inside `onEvent()` blocks runs any time the specified event occurs\n\n####
          Compared to Game Lab\n\nIn Game Lab, we might use the following code to
          check if a sprite named \"button\" was clicked and do something about it:\n\n
          \   function draw() {\n    \tif (mousePressedOver(button)) {\n       \t\t//
          Do something\n       \t}\n    }\n\n\nIn App Lab, given a button with the
          ID \"button\", we could write the following code to achieve the same goal:\n\n\n
          \   onEvent(\"button\", \"click\", function () {\n    \t// Do something\n
          \   });\n\nIn the App Lab example, the function is just another argument
          passed to the onEvent function, it just so happens that the argument must
          be a function itself. We could also define the function separately and write
          this same program as follows:\n\n    function doSomething() {\n    \t//
          Do something\n    }\n    \n    onEvent(\"button\", \"click\", doSomething);\n\n\nIn
          the second example, notice that when we pass the function `doSomething`
          to the `onEvent` function we _don't_ include the parenthesis at the end.
          This is because we're actually passing the whole function as an object.\n"
      ScreenOutTheMean-Unplugged:
        markdown: |
          #Memahami Keadaan

          Hari ini, Anda akan mempelajari yang harus dilakukan jika seseorang dalam keadaan online.
      SimonSays-Unplugged:
        markdown: |
          #Kata Simon

          Mainkan permainan dan pikirkan tentang perintah yang diperlukan untuk mendapat hasil yang baik.
      Social Sleuth_2018_2019:
        markdown: |+
          # Social Sleuth

          You will need the <a href="https://docs.google.com/document/d/1A9q31rwrBA7tZZcZ3KZqjMb30UncM-eycwMvYgj9os4/edit#"> Social Sleuth Worksheet </a> to complete this activity.

          ## Profiles

          Click on the picture for each profile to open it.

          ### FaceSpace

          | FaceSpace: Lizzie Dell  |  FaceSpace: John T | FaceSpace: Haley G.  |
          | ---------  | ------ |  ------ |
          | <a href="https://codeprojects.org/F-S5X0IfPmaq09YxGCbOFt3yo4N4PibaA1FBsc4iSdU/" target="_blank">  <img src="https://images.code.org/178adb09adb079a9cf8f465453f9da34-image-1480624941354.42.11 PM.png" style="width:400px"> </a> | <a href="https://codeprojects.org/6qyeEpRZRNkkrkkEduW8G_VO0Y-W2Z6B2Xn5pbLsUpw/" target="_blank"><img src="https://images.code.org/5d141433497fc107a60f0c2e3c63cca8-image-1480624947223.41.59 PM.png" style="width:400px"></a>  |<a href="https://codeprojects.org/7vPoGl6YA2bop1bPaIwpYX4_ubrkEBBFau_8s3JGMoo/" target="_blank">  <img src="https://images.code.org/ced7e2ae3c4fc17b6e278de8339e9498-image-1480626229324.02.56 PM.png" style="width:400px"> </a> |


          ### Chirpr

          | Chirpr: @johnsnow  |  Chirpr:@flyinghail | Chirpr: @lillizard |
          | ---------  | ------ |  ------ |
          | <a href="https://codeprojects.org/F-CPrGMcIPZF27RUX8Z_0Qb4KFSCvlU96VSWV7IBD98/" target="_blank">  <img src="https://images.code.org/3a5e7e1136382288f1122354cf494783-image-1480625415782.49.59 PM.png" style="width:400px"> </a> | <a href="https://codeprojects.org/Kff1I24rG71I-TnC--Uw5hTqZUAWO3iTzzHRHQ3h90U/" target="_blank">  <img src="https://images.code.org/c4ae8d208cfd5cb211d74f1ca4259210-image-1480627944701.31.37 PM.png" style="width:400px"> </a> |<a href="https://codeprojects.org/c4e3JuM-nCcmYF4XbbxpJ4pX51wyClVZCDYr6HiMyHg/" target="_blank">  <img src="https://images.code.org/42fc1b77b07fbcb4d143a32f1208296f-image-1493301869142.03.52 AM.png" style="width:400px"> </a> |


          ### instantframe

          | instantframe: johnsnow  | instantframe: @photolizzie | instantframe:@desertrider |
          | ---------  | ------ |  ------ |
          | <a href="https://codeprojects.org/5Zw4FvstrOYxANYH2HFbV_mVuY-QWfrsdgga9S3DGxs/" target="_blank">  <img src="https://images.code.org/290cb1409343d57ab5ab9be93085004d-image-1480625573589.51.31 PM.png" style="width:400px"> </a> | <a href="https://codeprojects.org/JXB8ULbAJJHzC-hHoiiZFxZBT4S32HwF0krGoXSzdE8/" target="_blank">  <img src="https://images.code.org/8e7de383b0747275a075ed9839a118d0-image-1480625641547.53.30 PM.png" style="width:400px"> </a> |<a href="https://codeprojects.org/xnZk6nZxi0FKMVkwKrsQjvbGWDIwqBW9zDmuCCseMpc/" target="_blank">  <img src="https://images.code.org/c52c51816ce248336a86e3e7f6ec2209-image-1480626143808.01.54 PM.png" style="width:400px"> </a> |

        teacher_markdown: |
          #### Social Sleuth

          **Step 1:** Students look through all of the provided social media pages on Code Studio. The pages represent several unique individuals, each of whom has an account on three social media platforms. They are distributed as follows (do not share this with students):

          |               | FaceSpace  | Chirpr     | instantframe |
          | ------------- | ---------  | ---------  | ------------ |
          | John Thomas   | John T     | @johnsnow  | johnsnow     |
          | Haley Gutierrez   | Haley G  | @flyinghail | desertrider  |
          | Lizzie Dell    | Lizzie Dell| @lillizard | photolizzie  |


          **Tip:**

          Students are asked to choose two users from the available profiles, but if you are short on time, you can ask students to complete just one of the footprints.

          **Step 2:** Once they've looked through the pages, students will attempt to figure out who the two users are and answer some detailed questions about them. The footprint questions are designed to push students towards combining details from multiple social platforms and understanding that together the profiles represent more detailed information than the users probably intend to reveal about themselves. Some questions may not be answerable for all users, or may have different levels of details (full street address for one user, but only a city and state for another).

          **Share:** Have the class share the digital footprints that they developed through the activity.

          **Discuss:**

          * Which information was most difficult to find?
          * Which details were innocuous on their own, but revealed private information when combined with other details?
          * How does this make you think differently about what you choose to post online?
      Songwriting-Unplugged:
        markdown: |
          #Menulis lagu

          Gunakan konsep paduan suara dalam lagu untuk mempelajari cara menetapkan dan menyebutkan fungsi.
      'Technique: Frequency Analysis':
        content1: deskripsi di sini
        markdown: "# Cracking Substitution Ciphers\n\nThe best technique for cracking
          a random substitution cipher is known as **frequency analysis** \n\nParaphrased
          from: [wikipedia](https://en.wikipedia.org/wiki/Frequency_analysis)\n\n*
          **Frequency analysis** is a technique that is based on how *frequently*
          certain letters appear in English versus others.\n* For instance, given
          a section of English text, *E*, *T*, *A* and *O* are the most common, while
          *Z*, *Q* and *X* are rare. Likewise, *TH*, *ER*, *ON*, and *AN* are the
          most common pairs of letters that occur next to each other.\n* In fact,
          the distribution of letters is roughly the same for almost *all* samples
          of English text. \n\n\nThe version of the widget on the previous page is
          intended to help you **crack a substitution cipher through frequency analysis**.\n\nBy
          analyzing the frequency of the letters in the encrypted message compared
          to the frequency of letters in a typical piece of English prose, you can
          start to narrow in on what some of the letter mappings might be. \n\nThe
          tool shows you how the frequency of letters in the encrypted text (orange)
          compares with frequencies from typical english (blue).\n\n### Hint: Where
          to start?\n\n1. Find the short words and \"crack\" them first.  How many
          one-letter words do you know? (\"a\").  A very common 3-letter word is \"the\".\n2.
          Once you've done that, you have substitions for some of the most common
          letters.  You should be able to use intuition to look at other words with
          these partial subsititions and make good guesses.\n3. After finding only
          a handful of hard-fought letters, the rest will tumble quickly.\n4. Comparing
          the frequencies of letters gives good insight for making sensible guesses.\n\n###
          Try this:\nThe animation below shows someone getting started.  Here's what
          they tried\n\n* First sort the characters by frequency. \n* Identify a group
          of characters that might map to the word `the`.  \nIt's a good start!\n\n![](https://images.code.org/4c188dfb0b284810845285b83ce5bcd4-image-1473787694329.gif)\n\n##
          Is random substitution good?\n* After a little practice, how long does it
          take you to crack a random substitution cipher?\n* Is this good or not?\n\n\n"
      Terminology Recap:
        content1: deskripsi di sini
        markdown: "# Berhenti Sebentar dan Mengulang\n\nPesan yang telah di-enkripsi
          dengan **Caesar cipher** sebenarnya sangat mudah untuk dipecahkan menggunakan
          komputer. Nah, sekarang karena kamu sudah tahu bagaimana caranya memecahkan
          alphabetic shift cipher (lumayan gampang, kan?) mari kita coba memecahkan
          hal yang lebih menantang.\n\n**Review istilah:**\n\n* **Encryption** - enkripsi
          adalah proses mengamankan pesan rahasia sehingga hanya pihak yang dituju
          yang bisa membaca isi pesan tersebut.\n* **Decryption** - dekripsi adalah
          proses memecahkan enkripsi, mengubah pesan rahasia yang telah di-enkripsi
          menjadi tulisan yang bisa dibaca oleh manusia\n* **Cipher** - istilah umum
          untuk teknik (atau algortima) yang digunakan dalam proses enkripsi\n* **Caesar's
          Cipher** - sebuah teknik enkripsi yang memindahkan alfabet sejumlah beberapa
          karakter.\n* **Cracking encryption** - saat kamu sedang berusaha memecahkan
          sebuah pesan rahasia *tanpa* mengetahui seluruh bagian dari cipher, kamu
          sedang menge-**crack** sebuah enkripsi. \n\n\nKlik Lanjutkan untuk melihat
          **Tantangan Selanjutnya**...\n\n \n"
      TheRightAppMarkdownLevel_2019:
        markdown: |
          # The Right App

          * Setiap orang menggunakan komputer akhir-akhir ini, terutama telepon pintar.
          * Aplikasi telepon pintar membantu orang melakukan hal-hal seperti berbicara dengan teman, mendengar musik, berbelanja, atau hanya menjelajahi web.
          * Penting bagi pemrogram untuk memahami kebutuhan orang lain dan merancang aplikasi dengan mempertimbangkannya!

          ![](https://images.code.org/fb17eeb9238d2f26c6ab40c9841517a7-image-1555611687284.png)
      Unit 1 Lesson 2 Overview:
        markdown: |
          # Overview

          In this lesson you will learn a formal problem solving process that will help you to structure your approach to a wide variety of problems.


          ## Resources

          * [The Problem Solving Process - Activity Guide](https://docs.google.com/document/d/1xEPMYIDy70fWCgyLymBNmxkE-6uJ7BYOXSmV8Vyt-SQ/export?format=pdf)
        teacher_markdown: |+
          * [The Problem Solving Process](https://docs.google.com/document/d/1lWv8fKJO2ZRvObUx6Ys1MTVqcSC5ZUfKI8RRXGayRpY/) - Activity Guide ([PDF](https://docs.google.com/document/d/1lWv8fKJO2ZRvObUx6Ys1MTVqcSC5ZUfKI8RRXGayRpY/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1lWv8fKJO2ZRvObUx6Ys1MTVqcSC5ZUfKI8RRXGayRpY/export?format=doc))


      Unit 1 Lesson 3 Overview:
        markdown: |
          # Overview
          In this lesson you'll apply the problem solving process to a variety of problems to explore how each step helps you develop and improve solutions to problems.

          ## Resources

          * [Solving Problems - Activity Guide](https://docs.google.com/document/d/1cym5lMuy41CbvXYe7F57N2XfI6Afp0hJsHovhR0GD2M/export?format=pdf)
        teacher_markdown: "[Solving Problems KEY](https://docs.google.com/document/d/1hmbWujY2ii04XJRvoafIEtGyK-ZNBkJEtdSMFcXS5Uw/)
          - Activity Guide ([PDF](https://docs.google.com/document/d/1hmbWujY2ii04XJRvoafIEtGyK-ZNBkJEtdSMFcXS5Uw/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/1hmbWujY2ii04XJRvoafIEtGyK-ZNBkJEtdSMFcXS5Uw/export?format=doc))\n"
      Unit 1 Lesson 4 Overview:
        markdown: |
          # Overview

          In this lesson you'll start thinking about how computers help solve certain kinds of problems and learn the key features of every computer.

          ## Resources

          * [What is a Computer - Activity Guide](https://docs.google.com/document/d/1g4dPcsx2xADEZI0FiMYApLr0hh3_-89NDWd2y86sS6I/export?format=pdf)
        teacher_markdown: |+
          [What is a Computer - Exemplar](https://docs.google.com/document/d/19QfEaVJcF85W6iZwITFIcPycO11znVjYTAaKO78VPH0/edit?usp=sharing) - Activity Guide ([PDF](https://docs.google.com/document/d/19QfEaVJcF85W6iZwITFIcPycO11znVjYTAaKO78VPH0/export?format=pdf) | [DOCX](https://docs.google.com/document/d/19QfEaVJcF85W6iZwITFIcPycO11znVjYTAaKO78VPH0/export?format=doc))


      Unit 1 Lesson 6 Overview:
        markdown: |
          # Problem Solving - Computers and Logic: Lesson 6 - Processing with Bits

          ## Background

          In this lesson you'll learn how computers process binary information as you design bit-level filters of simple images.

          # Resources

          * [Pixel Filtering](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/edit?usp=sharing) - Activity Guide ([PDF](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1R92qKHBC8Bz3P3YXVSziyfpijJ0gMYob2j5RncWdWsA/export?format=doc))
        teacher_markdown: "* [Pixel Filtering](https://drive.google.com/open?id=1D3VELqNLAyrPeDl3o-PWxOPV8VD9bwdhoMIH0E9fLM8)
          - Answer Key\n"
      Unit 2 Lesson 10 Overview:
        markdown: |
          # Overview

          This lesson covers CSS classes and custom colors. The students first learn how to specify custom colors using RGB (red, green, blue) values, then apply these colors to a new Four Seasons web page, which uses CSS classes.  Using classes, students add more styles to the Four Seasons web page, then uses them to style their personal websites.
          ## Vocabulary

          * **HTML Class** - Makes it possible to define equal styles for elements by giving them all the same class name.

          ## Introduced Code

          * [RGB Color](//studio.code.org/docs/weblab/rgb-color/)

          ## Resources

          * [RGB Colors - Activity Guide](https://docs.google.com/document/d/1zTamyJ71sVJ2JM2A2meX6kwPu4FS82KA_TJEliTPIFo/export?format=pdf)
        teacher_markdown: "* [RGB Colors](https://docs.google.com/document/d/18-gTTz6gwgOkuQB9bOmNTgLOyDKpkwbNYMNwAkhfmm8/edit?copiedFromTrash)
          - Activity Guide ([PDF](https://docs.google.com/document/d/18-gTTz6gwgOkuQB9bOmNTgLOyDKpkwbNYMNwAkhfmm8/export?format=pdf)
          | [DOCX](https://docs.google.com/document/d/18-gTTz6gwgOkuQB9bOmNTgLOyDKpkwbNYMNwAkhfmm8/export?format=doc))\n"
      Unit 2 Lesson 16 Overview:
        markdown: |
          # Overview

          In the last few days of the unit, the class finalizes their personal websites, working with peers to get feedback, review the rubric, and put the finishing touches on the site. To cap off the unit, everyone shares their projects and how they were developed.


          ## Resources

          * [Final Personal Website - Peer Review](https://docs.google.com/document/d/1YMcd2-oBmcjJkW7sADlRKXnGqLdy7A3hxwm74dZlGPE/export?format=pdf)
          * [Final Personal Website - Project Guide](https://docs.google.com/document/d/15hP1rbdhWaOvcbN-KHCl3rgcNBoa0Wg2D1ZUVnkwNo0/export?format=pdf)
          * [Final Personal Website - Rubric](https://docs.google.com/document/d/1SmZaZymJbMQL04j3evH4O0PYkbtZ_l6W_6rvddB1alg/export?format=pdf)
        teacher_markdown: |
          [key]

          * [Final Personal Website](https://docs.google.com/document/d/1Ga7mVfKpC8L-MTQw7ebMINkuCiAuhcQmZwupV_9pvsg/edit?usp=sharing) - Project Guide Exemplar ([PDF](https://docs.google.com/document/d/1Ga7mVfKpC8L-MTQw7ebMINkuCiAuhcQmZwupV_9pvsg/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1Ga7mVfKpC8L-MTQw7ebMINkuCiAuhcQmZwupV_9pvsg/export?format=doc))
          * [Final Personal Website](https://docs.google.com/document/d/1GxyJPbd9In4GBgDPQRCE1v-LGXPnKoY8r2L1WQDTOIE/edit?usp=sharing) - Peer Review Exemplar ([PDF](https://docs.google.com/document/d/1GxyJPbd9In4GBgDPQRCE1v-LGXPnKoY8r2L1WQDTOIE/export?format=pdf) | [DOCX](https://docs.google.com/document/d/1GxyJPbd9In4GBgDPQRCE1v-LGXPnKoY8r2L1WQDTOIE/export?format=doc))

          [/key]
      Unit 2 Lesson 7 Overview:
        markdown: |+
          # Overview

          This lesson introduces CSS as a way to style elements on the page. The class learns the basic syntax for CSS rule-sets and then explores properties that impact HTML text elements.  Finally, everyone applies text styles to their personal websites.
          ## Vocabulary

          * **CSS** - CSS stands for Cascading Style Sheets. CSS allows each HTML element to be styled according to certain set of rules.
          * **CSS Selector** - Specifies the part of the code which the style should be applied to.

          ## Introduced Code

          *  **[Color](//studio.code.org/docs/weblab/color/)** - `color: value;`
          *  **[Text Align](//studio.code.org/docs/weblab/text-align/)** - `text-align: value;`
          *  **[Text Decoration](//studio.code.org/docs/weblab/Text-Dec/)** - `text-decoration: value;`
          *  **[Font Family](//studio.code.org/docs/weblab/font-family/)** - `font-family:value;`
          *  **[Font Size](//studio.code.org/docs/weblab/font-size/)** - `font-size:value;`

      Unit 2 Lesson 8 Overview:
        markdown: |+
          # Overview

          This lesson continues the introduction to CSS style properties, this time focusing more on non-text elements. The class begins by investigating and modifying the new CSS styles on a Desserts of the World page. Afterwards, everyone applies this new knowledge to their personal websites.

          ## Introduced Code

          *  **[Background Color](//studio.code.org/docs/weblab/background-color/)** - `background-color: value;`
          *  **[Float](//studio.code.org/docs/weblab/float/)** - `float: value;`
          *  **[Margin](//studio.code.org/docs/weblab/margin/)** - `margin: value;`
          *  **[Width](//studio.code.org/docs/weblab/width/)** - `width: value;`
          *  **[Height](//studio.code.org/docs/weblab/height/)** - `height: value;`
          *  **[Border Style](//studio.code.org/docs/weblab/border-style/)** - `border-style: value;`
          *  **[Border Width](//studio.code.org/docs/weblab/border-width/)** - `border-width: value;`
          *  **[Border Color](//studio.code.org/docs/weblab/border-color/)** - `border-color: value;`

      behaviors 1 predict:
        answers:
        - text: Peri akan berputar
          correct: false
          feedback: Salah.
        - text: Peri akan menyusut.
          correct: true
          feedback: Benar!
        - text: Peri akan bergerak.
          correct: false
          feedback: Salah.
        - text: Peri akan berubah warna.
          correct: false
          feedback: Salah
        questions:
        - text: Klik tombol "sunting" untuk melihat cara kerja `perilaku misterius`.
            Pelajari kode di dalamnya, lalu buat prediksi.
      behaviors 4 predict:
        answers:
        - text: Ke kiri lalu ke bawah
          correct: false
          feedback: Salah.
        - text: Secara diagonal
          correct: true
          feedback: Benar!
        - text: Berliku-liku
          correct: false
          feedback: Salah.
        - text: Ke bawah, lalu ke kiri
          correct: false
          feedback: Salah
        questions:
        - text: Buat prediksi. Ke arah mana satelit akan bergerak menuju galaksi?
      courseC_multi_artist_prog6_predict1:
        answers:
        - text: Si artis akan menggambar setiga sama sisi.
          correct: false
          feedback: Salah.  Si artis menggambar persegi empat.
        - text: Si artis akan mengambar sebuah garis.
          correct: false
          feedback: Salah.  Si artis menggambar persegi empat.
        - text: Si artis mengambar persegi empat.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Si artis mengambar persegi empat.
        questions:
        - text: Cermati kode di bawah ini dengan jeli. Apa yang akan terjadi saat
            anda mengklik "Run"?
      courseC_multi_artist_prog6_predict1_2018:
        answers:
        - text: Si artis akan menggambar setiga sama sisi.
          correct: false
          feedback: Salah.  Si artis menggambar persegi empat.
        - text: Si artis akan mengambar sebuah garis.
          correct: false
          feedback: Salah.  Si artis menggambar persegi empat.
        - text: Sang pelukis akan mengambar sebuah kotak.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Si artis mengambar persegi empat.
        questions:
        - text: Cermati kode di bawah ini dengan jeli. Apa yang akan terjadi saat
            anda mengklik "Run"?
      courseC_multi_artist_prog6_predict1_2018_2019:
        answers:
        - text: Si artis akan menggambar setiga sama sisi.
          correct: false
          feedback: Salah.  Si artis menggambar persegi empat.
        - text: Si artis akan mengambar sebuah garis.
          correct: false
          feedback: Salah.  Si artis menggambar persegi empat.
        - text: Sang pelukis akan mengambar sebuah kotak.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Si artis mengambar persegi empat.
        questions:
        - text: Cermati kode di bawah ini dengan jeli. Apa yang akan terjadi saat
            anda mengklik "Run"?
      courseC_multi_harvester_loops11_predict1:
        answers:
        - text: '4'
          correct: false
          feedback: Salah. Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali
            3 sama dengan 12!
        - text: '12'
          correct: true
          feedback: Benar!
        - text: '15'
          correct: false
          feedback: Salah. Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali
            3 sama dengan 12!
        - text: Saya tidak tahu.
          correct: false
          feedback: Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali 3 sama
            dengan 12!
        questions:
        - text: Cermati kode di bawah ini. Berapa banyak labu yang akan dikumpulkan
            petani setelah Anda mengklik "Run"?
      courseC_multi_harvester_loops11_predict1_2018:
        answers:
        - text: '4'
          correct: false
          feedback: Salah. Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali
            3 sama dengan 12!
        - text: '12'
          correct: true
          feedback: Benar!
        - text: '15'
          correct: false
          feedback: Salah. Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali
            3 sama dengan 12!
        - text: Saya tidak tahu.
          correct: false
          feedback: Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali 3 sama
            dengan 12!
        questions:
        - text: Cermati kode di bawah ini. Berapa banyak labu yang akan dikumpulkan
            petani setelah Anda mengklik "Run"?
      courseC_multi_harvester_loops11_predict1_2018_2019:
        answers:
        - text: '4'
          correct: false
          feedback: Salah. Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali
            3 sama dengan 12!
        - text: '12'
          correct: true
          feedback: Benar!
        - text: '15'
          correct: false
          feedback: Salah. Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali
            3 sama dengan 12!
        - text: Saya tidak tahu.
          correct: false
          feedback: Petani akan mengumpulkan 4 labu di setiap 3 loop.  4 kali 3 sama
            dengan 12!
        questions:
        - text: Cermati kode di bawah ini. Berapa banyak labu yang akan dikumpulkan
            petani setelah Anda mengklik "Run"?
      courseC_multi_maze_debugging8_predict1:
        answers:
        - text: Program tidak akan gagal. Scrat akan sampai ke buah akorn.
          correct: false
          feedback: Salah. Scrat salah jalan setelah belokan terakhirnya.
        - text: Scrat akan salah jalan setelah belokan terakhirnya.
          correct: true
          feedback: Benar!
        - text: Langkah Scrat kurang satu sehingga tidak sampai ke buah akorn.
          correct: false
          feedback: Salah. Kekurangan satu langkah terjadi setelah Scrat salah belok.
        - text: Saya tidak tahu.
          correct: false
          feedback: 'Kesalahan pertama itu karena Scrat salah jalan setelah belok
            terakhirnya. '
        questions:
        - text: Cermati kode di bawah ini. Apa bug pertama yang akan membuat program
            ini gagal?
      courseC_multi_maze_debugging8_predict1_2018:
        answers:
        - text: Program tidak akan gagal. Scrat akan sampai ke buah akorn.
          correct: false
          feedback: Salah. Scrat salah jalan setelah belokan terakhirnya.
        - text: Scrat akan salah jalan setelah belokan terakhirnya.
          correct: true
          feedback: Benar!
        - text: Langkah Scrat kurang satu sehingga tidak sampai ke buah akorn.
          correct: false
          feedback: Salah. Kekurangan satu langkah terjadi setelah Scrat salah belok.
        - text: Saya tidak tahu.
          correct: false
          feedback: 'Kesalahan pertama itu karena Scrat salah jalan setelah belok
            terakhirnya. '
        questions:
        - text: Cermati kode di bawah ini. Apa bug pertama yang akan membuat program
            ini gagal?
      courseC_multi_maze_debugging8_predict1_2018_2019:
        answers:
        - text: Program tidak akan gagal. Scrat akan sampai ke buah akorn.
          correct: false
          feedback: Salah. Scrat salah jalan setelah belokan terakhirnya.
        - text: Scrat akan salah jalan setelah belokan terakhirnya.
          correct: true
          feedback: Benar!
        - text: Langkah Scrat kurang satu sehingga tidak sampai ke buah akorn.
          correct: false
          feedback: Salah. Kekurangan satu langkah terjadi setelah Scrat salah belok.
        - text: Saya tidak tahu.
          correct: false
          feedback: 'Kesalahan pertama itu karena Scrat salah jalan setelah belok
            terakhirnya. '
        questions:
        - text: Cermati kode di bawah ini. Apa bug pertama yang akan membuat program
            ini gagal?
      courseC_multi_maze_programming8_predict1:
        answers:
        - text: Burung akhirnya akan kurang satu langkah dari babi.
          correct: false
          feedback: Salah. Kode ini membawa burungnya pas ke babi.
        - text: Burung pasti akan sampai ke babi.
          correct: true
          feedback: Benar!
        - text: Burung akan menabrak TNT.
          correct: false
          feedback: Salah. Kode ini membawa burungnya pas ke babi.
        - text: Saya tidak tahu.
          correct: false
          feedback: Kode ini membawa burungnya pas ke babi.
        questions:
        - text: Baca kode berikut dengan teliti. Apa yang akan terjadi saat Anda mengklik
            "Run"?
      courseC_multi_maze_programming8_predict1_2018:
        answers:
        - text: Burung akhirnya akan kurang satu langkah dari babi.
          correct: false
          feedback: Salah. Kode ini membawa burungnya pas ke babi.
        - text: Burung pasti akan sampai ke babi.
          correct: true
          feedback: Benar!
        - text: Burung akan menabrak TNT.
          correct: false
          feedback: Salah. Kode ini membawa burungnya pas ke babi.
        - text: Saya tidak tahu.
          correct: false
          feedback: Kode ini membawa burungnya pas ke babi.
        questions:
        - text: Baca kode berikut dengan teliti. Apa yang akan terjadi saat Anda mengklik
            "Run"?
      courseC_multi_maze_programming8_predict1_2018_2019:
        answers:
        - text: Burung akhirnya akan kurang satu langkah dari babi.
          correct: false
          feedback: Salah. Kode ini membawa burungnya pas ke babi.
        - text: Burung pasti akan sampai ke babi.
          correct: true
          feedback: Benar!
        - text: Burung akan menabrak TNT.
          correct: false
          feedback: Salah. Kode ini membawa burungnya pas ke babi.
        - text: Saya tidak tahu.
          correct: false
          feedback: Kode ini membawa burungnya pas ke babi.
        questions:
        - text: Baca kode berikut dengan teliti. Apa yang akan terjadi saat Anda mengklik
            "Run"?
      courseC_multi_starWars_predict1:
        answers:
        - text: BB-8 tidak akan bergerak.
          correct: false
          feedback: Salah. Blok repeat akan membuat BB-8 bergerak maju sebanyak 5
            kali.
        - text: BB-8 hanya akan bergerak satu kotak
          correct: false
          feedback: Salah. Blok repeat akan membuat BB-8 bergerak maju sebanyak 5
            kali.
        - text: BB-8 akan bergerak 5 kali dan mengambil semua logam rongsokan
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu
          correct: false
          feedback: Blok repeat akan membuat BB-8 bergerak maju sebanyak 5 kali.
        questions:
        - text: Menurut anda, apa yang akan terjadi ketika anda mengklik "Run"?
      courseC_multi_starWars_predict1_2018:
        answers:
        - text: BB-8 tidak akan bergerak.
          correct: false
          feedback: Salah. Blok repeat akan membuat BB-8 bergerak maju sebanyak 5
            kali.
        - text: BB-8 hanya akan bergerak satu kotak
          correct: false
          feedback: Salah. Blok repeat akan membuat BB-8 bergerak maju sebanyak 5
            kali.
        - text: BB-8 akan bergerak 5 kali dan mengambil semua logam rongsokan
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu
          correct: false
          feedback: Blok repeat akan membuat BB-8 bergerak maju sebanyak 5 kali.
        questions:
        - text: Menurut anda, apa yang akan terjadi ketika anda mengklik "Run"?
      courseC_multi_starWars_predict1_2018_2019:
        answers:
        - text: BB-8 tidak akan bergerak.
          correct: false
          feedback: Salah. Blok repeat akan membuat BB-8 bergerak maju sebanyak 5
            kali.
        - text: BB-8 hanya akan bergerak satu kotak
          correct: false
          feedback: Salah. Blok repeat akan membuat BB-8 bergerak maju sebanyak 5
            kali.
        - text: BB-8 akan bergerak 5 kali dan mengambil semua logam rongsokan
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu
          correct: false
          feedback: Blok repeat akan membuat BB-8 bergerak maju sebanyak 5 kali.
        questions:
        - text: Menurut anda, apa yang akan terjadi ketika anda mengklik "Run"?
      courseC_multi_starWars_predict2:
        answers:
        - text: BB-8 akan berjalan terlalu jauh dalam loop pertama.
          correct: false
          feedback: Salah. Loop pertama hanya membolehkan BB-8 bergerak maju 2 kotak,
            padahal perlu bergerak maju sebanyak 3 kotak.
        - text: BB-8 tidak akan berjalan cukup jauh dalam loop pertama agar dapat
            mengambil semua logam rongsokan.
          correct: true
          feedback: Benar!
        - text: BB-8 akan mengumpulkan semua logam rongsokan tanpa kesulitan.
          correct: false
          feedback: Salah. Loop pertama hanya membolehkan BB-8 bergerak maju 2 kotak,
            padahal perlu bergerak maju sebanyak 3 kotak.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop pertama hanya memungkinkan BB-8 bergerak maju 2 kotak, padahal
            perlu bergerak maju sebanyak 3 kotak.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi saat anda mengklik
            "Run"?
      courseC_multi_starWars_predict2_2018:
        answers:
        - text: BB-8 akan berjalan terlalu jauh dalam loop pertama.
          correct: false
          feedback: Salah. Loop pertama hanya membolehkan BB-8 bergerak maju 2 kotak,
            padahal perlu bergerak maju sebanyak 3 kotak.
        - text: BB-8 tidak akan berjalan cukup jauh dalam loop pertama agar dapat
            mengambil semua logam rongsokan.
          correct: true
          feedback: Benar!
        - text: BB-8 akan mengumpulkan semua logam rongsokan tanpa kesulitan.
          correct: false
          feedback: Salah. Loop pertama hanya membolehkan BB-8 bergerak maju 2 kotak,
            padahal perlu bergerak maju sebanyak 3 kotak.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop pertama hanya memungkinkan BB-8 bergerak maju 2 kotak, padahal
            perlu bergerak maju sebanyak 3 kotak.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi saat anda mengklik
            "Run"?
      courseC_multi_starWars_predict2_2018_2019:
        answers:
        - text: BB-8 akan berjalan terlalu jauh dalam loop pertama.
          correct: false
          feedback: Salah. Loop pertama hanya membolehkan BB-8 bergerak maju 2 kotak,
            padahal perlu bergerak maju sebanyak 3 kotak.
        - text: BB-8 tidak akan berjalan cukup jauh dalam loop pertama agar dapat
            mengambil semua logam rongsokan.
          correct: true
          feedback: Benar!
        - text: BB-8 akan mengumpulkan semua logam rongsokan tanpa kesulitan.
          correct: false
          feedback: Salah. Loop pertama hanya membolehkan BB-8 bergerak maju 2 kotak,
            padahal perlu bergerak maju sebanyak 3 kotak.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop pertama hanya memungkinkan BB-8 bergerak maju 2 kotak, padahal
            perlu bergerak maju sebanyak 3 kotak.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi saat anda mengklik
            "Run"?
      courseD_external_binary1:
        markdown: "<h1>Draw with Binary</h1>\n \n<h3>Binary is a way of representing
          information using only two options. In this case, <b>off</b> and <b>on</b>.\n<br/>\nHere,
          we're going to use the number <b>0</b> as code for \"off\" and the number
          <b>1</b> as code for \"on\".\n<br/>\n<table>\n<tr><td><img src=\"https://images.code.org/50283881d577c17ac6f1d1648d8f361f-image-1483640342574.09.14.png\"
          width=\"75px\"/></td><td><img src=\"https://images.code.org/ba6f0a000b18f2dd87160e6255e8a71c-image-1483640355103.09.24.png\"
          width=\"90px\"/></td></tr>\n<tr padding=\"0px\"><td align=\"center\"><b>0</b></td><td
          align=\"center\"><b>1</b></td></tr>\n</table><img src=\"https://images.code.org/934883837aa59bca1d5c1ded0e0ac675-image-1483640120036.51.06.png\"
          float=\"left\"/><h3>In this stage, we've provided you with a grid of \"pixels\"
          that you can walk through and make designs by turning on certain squares!</h3>\n\n![](https://images.code.org/c53e00cde9acbae72d02fb9cc2a20e53-image-1483639858942.png)\n\n\n"
      courseD_external_binary1_2018:
        markdown: "<h1>Draw with Binary</h1>\n \n<h3>Binary is a way of representing
          information using only two options. In this case, <b>off</b> and <b>on</b>.\n<br/>\nHere,
          we're going to use the number <b>0</b> as code for \"off\" and the number
          <b>1</b> as code for \"on\".\n<br/>\n<table>\n<tr><td><img src=\"https://images.code.org/50283881d577c17ac6f1d1648d8f361f-image-1483640342574.09.14.png\"
          width=\"75px\"/></td><td><img src=\"https://images.code.org/ba6f0a000b18f2dd87160e6255e8a71c-image-1483640355103.09.24.png\"
          width=\"90px\"/></td></tr>\n<tr padding=\"0px\"><td align=\"center\"><b>0</b></td><td
          align=\"center\"><b>1</b></td></tr>\n</table><img src=\"https://images.code.org/934883837aa59bca1d5c1ded0e0ac675-image-1483640120036.51.06.png\"
          float=\"left\"/><h3>In this stage, we've provided you with a grid of \"pixels\"
          that you can walk through and make designs by turning on certain squares!</h3>\n\n![](https://images.code.org/c53e00cde9acbae72d02fb9cc2a20e53-image-1483639858942.png)\n\n\n"
      courseD_external_binary1_2018_2019:
        markdown: "<h1>Draw with Binary</h1>\n \n<h3>Binary is a way of representing
          information using only two options. In this case, <b>off</b> and <b>on</b>.\n<br/>\nHere,
          we're going to use the number <b>0</b> as code for \"off\" and the number
          <b>1</b> as code for \"on\".\n<br/>\n<table>\n<tr><td><img src=\"https://images.code.org/50283881d577c17ac6f1d1648d8f361f-image-1483640342574.09.14.png\"
          width=\"75px\"/></td><td><img src=\"https://images.code.org/ba6f0a000b18f2dd87160e6255e8a71c-image-1483640355103.09.24.png\"
          width=\"90px\"/></td></tr>\n<tr padding=\"0px\"><td align=\"center\"><b>0</b></td><td
          align=\"center\"><b>1</b></td></tr>\n</table><img src=\"https://images.code.org/934883837aa59bca1d5c1ded0e0ac675-image-1483640120036.51.06.png\"
          float=\"left\"/><h3>In this stage, we've provided you with a grid of \"pixels\"
          that you can walk through and make designs by turning on certain squares!</h3>\n\n![](https://images.code.org/c53e00cde9acbae72d02fb9cc2a20e53-image-1483639858942.png)\n\n\n"
      courseD_multi_artist_binary8_predict1:
        answers:
        - text: A
          correct: false
          feedback: Salah.
        - text: B
          correct: false
          feedback: Salah.
        - text: C
          correct: false
          feedback: Salah.
        - text: D
          correct: true
          feedback: Benar!
        markdown: |+
          <table>
          <tr>

          <td style="padding: 0 30px 0 0;"> <b>A)</b> <img src="https://images.code.org/ca3e26e5b3008075d06db82c2831ab0b-image-1489438562132.43.39a.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>B)</b> <img src="https://images.code.org/6da194be0b14a041291648c12a307495-image-1489438503416.43.39.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>C)</b> <img src="https://images.code.org/dfaa00e3a6260742671d1ac4455fb5d5-image-1489438562133.43.39b.png" width="100px"/></td>


          <td style="padding: 0 20px 0 0;"> <b>D)</b> <img src="https://images.code.org/7fc63ed5875b9f9785d0e88aec6eae47-image-1489439110649.43.39d.png" width="100px"/></td>
          </tr></table>
          <br/>

        questions:
        - text: Cermati code di bawah ini. Gambar manakah yang akan muncul setelah
            Anda mengklik "Run"?
      courseD_multi_artist_binary8_predict1_2018:
        answers:
        - text: A
          correct: false
          feedback: Salah.
        - text: B
          correct: false
          feedback: Salah.
        - text: C
          correct: false
          feedback: Salah.
        - text: D
          correct: true
          feedback: Benar!
        markdown: |+
          <table>
          <tr>

          <td style="padding: 0 30px 0 0;"> <b>A)</b> <img src="https://images.code.org/ca3e26e5b3008075d06db82c2831ab0b-image-1489438562132.43.39a.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>B)</b> <img src="https://images.code.org/6da194be0b14a041291648c12a307495-image-1489438503416.43.39.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>C)</b> <img src="https://images.code.org/dfaa00e3a6260742671d1ac4455fb5d5-image-1489438562133.43.39b.png" width="100px"/></td>


          <td style="padding: 0 20px 0 0;"> <b>D)</b> <img src="https://images.code.org/7fc63ed5875b9f9785d0e88aec6eae47-image-1489439110649.43.39d.png" width="100px"/></td>
          </tr></table>
          <br/>

        questions:
        - text: Cermati code di bawah ini. Gambar manakah yang akan muncul setelah
            Anda mengklik "Run"?
      courseD_multi_artist_binary8_predict1_2018_2019:
        answers:
        - text: A
          correct: false
          feedback: Salah.
        - text: B
          correct: false
          feedback: Salah.
        - text: C
          correct: false
          feedback: Salah.
        - text: D
          correct: true
          feedback: Benar!
        markdown: |+
          <table>
          <tr>

          <td style="padding: 0 30px 0 0;"> <b>A)</b> <img src="https://images.code.org/ca3e26e5b3008075d06db82c2831ab0b-image-1489438562132.43.39a.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>B)</b> <img src="https://images.code.org/6da194be0b14a041291648c12a307495-image-1489438503416.43.39.png" width="100px"/></td>

          <td style="padding: 0 20px 0 0;"> <b>C)</b> <img src="https://images.code.org/dfaa00e3a6260742671d1ac4455fb5d5-image-1489438562133.43.39b.png" width="100px"/></td>


          <td style="padding: 0 20px 0 0;"> <b>D)</b> <img src="https://images.code.org/7fc63ed5875b9f9785d0e88aec6eae47-image-1489439110649.43.39d.png" width="100px"/></td>
          </tr></table>
          <br/>

        questions:
        - text: Cermati code di bawah ini. Gambar manakah yang akan muncul setelah
            Anda mengklik "Run"?
      courseD_multi_artist_nestedLoops9_predict1:
        answers:
        - text: A
          correct: true
          feedback: Benar!
        - text: B
          correct: false
          feedback: Salah.  Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya
            4 kali dalam sebuah lingkaran.
        - text: C
          correct: false
          feedback: Salah.  Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya
            4 kali dalam sebuah lingkaran.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya 4
            kali dalam sebuah lingkaran.
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: Cermati kode di bawah ini. Gambar manakah yang akan dihasilkan program
            ini saat Anda mengklik "Run"?
      courseD_multi_artist_nestedLoops9_predict1_2018:
        answers:
        - text: A
          correct: true
          feedback: Benar!
        - text: B
          correct: false
          feedback: Salah.  Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya
            4 kali dalam sebuah lingkaran.
        - text: C
          correct: false
          feedback: Salah.  Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya
            4 kali dalam sebuah lingkaran.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya 4
            kali dalam sebuah lingkaran.
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: Cermati kode di bawah ini. Gambar manakah yang akan dihasilkan program
            ini saat Anda mengklik "Run"?
      courseD_multi_artist_nestedLoops9_predict1_2018_2019:
        answers:
        - text: A
          correct: true
          feedback: Benar!
        - text: B
          correct: false
          feedback: Salah.  Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya
            4 kali dalam sebuah lingkaran.
        - text: C
          correct: false
          feedback: Salah.  Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya
            4 kali dalam sebuah lingkaran.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop-dalam menghasilkan pentagon, dan loop-luar mengulangnya 4
            kali dalam sebuah lingkaran.
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: Cermati kode di bawah ini. Gambar manakah yang akan dihasilkan program
            ini saat Anda mengklik "Run"?
      courseD_multi_bee_conditionals1_predict1:
        answers:
        - text: Lebah akan bergerak ke awan dan mencoba mengisap nektar, apa pun risikonya.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya hanya akan mencoba
            mengisap nektar jika ada bunga di bawah awan.
        - text: Lebah akan bergerak ke awan dan hanya mencoba mengisap nektar jika
            ada bunga di bawahnya.
          correct: true
          feedback: Benar!
        - text: Lebah akan bergerak ke awan lalu diam saja, apa pun yang terjadi.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `if at flower` memastikan lebahnya hanya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        questions:
        - text: Awan menghalangi pemandangan. Mungkin ada bunga di bawah awan ini.
            Jika ada bunga, lebah harus mengumpulkan nektar satu kali. Jika tidak
            ada bunga, lebah tidak perlu melakukan apa-apa. Cermati code di bawah
            ini. Menurut Anda apa yang akan terjadi setelah Anda mengklik "Run"?
      courseD_multi_bee_conditionals1_predict1_2018:
        answers:
        - text: Lebah akan bergerak ke awan dan mencoba mengisap nektar, apa pun risikonya.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya hanya akan mencoba
            mengisap nektar jika ada bunga di bawah awan.
        - text: Lebah akan bergerak ke awan dan hanya mencoba mengisap nektar jika
            ada bunga di bawahnya.
          correct: true
          feedback: Benar!
        - text: Lebah akan bergerak ke awan lalu diam saja, apa pun yang terjadi.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `if at flower` memastikan lebahnya hanya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        questions:
        - text: Awan menghalangi pemandangan. Mungkin ada bunga di bawah awan ini.
            Jika ada bunga, lebah harus mengumpulkan nektar satu kali. Jika tidak
            ada bunga, lebah tidak perlu melakukan apa-apa. Cermati code di bawah
            ini. Menurut Anda apa yang akan terjadi setelah Anda mengklik "Run"?
      courseD_multi_bee_conditionals1_predict1_2018_2019:
        answers:
        - text: Lebah akan bergerak ke awan dan mencoba mengisap nektar, apa pun risikonya.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya hanya akan mencoba
            mengisap nektar jika ada bunga di bawah awan.
        - text: Lebah akan bergerak ke awan dan hanya mencoba mengisap nektar jika
            ada bunga di bawahnya.
          correct: true
          feedback: Benar!
        - text: Lebah akan bergerak ke awan lalu diam saja, apa pun yang terjadi.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `if at flower` memastikan lebahnya hanya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        questions:
        - text: Awan menghalangi pemandangan. Mungkin ada bunga di bawah awan ini.
            Jika ada bunga, lebah harus mengumpulkan nektar satu kali. Jika tidak
            ada bunga, lebah tidak perlu melakukan apa-apa. Cermati code di bawah
            ini. Menurut Anda apa yang akan terjadi setelah Anda mengklik "Run"?
      courseD_multi_bee_conditionals1_predict1_copy:
        answers:
        - text: Lebah akan bergerak ke awan dan mencoba mengisap nektar, apa pun risikonya.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya hanya akan mencoba
            mengisap nektar jika ada bunga di bawah awan.
        - text: Lebah akan bergerak ke awan dan hanya mencoba mengisap nektar jika
            ada bunga di bawahnya.
          correct: true
          feedback: Benar!
        - text: Lebah akan bergerak ke awan lalu diam saja, apa pun yang terjadi.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `if at flower` memastikan lebahnya hanya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        questions:
        - text: Awan menghalangi pemandangan. Mungkin ada bunga di bawah awan ini.
            Jika ada bunga, lebah harus mengumpulkan nektar satu kali. Jika tidak
            ada bunga, lebah tidak perlu melakukan apa-apa. Cermati code di bawah
            ini. Menurut Anda apa yang akan terjadi setelah Anda mengklik "Run"?
      courseD_multi_bee_conditionals7_predict2:
        answers:
        - text: Lebah akan mengisap nektar di setiap bunga dan madu di setiap sarang.
          correct: true
          feedback: Benar!
        - text: Lebah akan mencoba mengisap nektar dari bunga dan sarang madu.
          correct: false
          feedback: Salah. Blok `if at flower` memudahkan lebah mengisap nektar di
            setiap bunga dan madu di setiap sarang.
        - text: Lebah akan mencoba mengambil madu dari bunga dan sarang.
          correct: false
          feedback: Salah. Salah. Blok `if at flower` memudahkan lebah mengisap nektar
            di setiap bunga dan madu di setiap sarang..
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `if at flower` memudahkan lebah mengisap nektar di setiap
            bunga dan madu di setiap sarang.
        questions:
        - text: 'Cermati kode di bawah ini.  Menurut Anda apa yang akan terjadi setelah
            Anda mengklik "Run"? Ingat: hanya akan ada *satu* sarang lebah atau *satu*
            bunga di balik tiap-tiap awan.'
      courseD_multi_bee_conditionals7_predict2_2018:
        answers:
        - text: Lebah akan mengisap nektar di setiap bunga dan madu di setiap sarang.
          correct: true
          feedback: Benar!
        - text: Lebah akan mencoba mengisap nektar dari bunga dan sarang madu.
          correct: false
          feedback: Salah. Blok `if at flower` memudahkan lebah mengisap nektar di
            setiap bunga dan madu di setiap sarang.
        - text: Lebah akan mencoba mengambil madu dari bunga dan sarang.
          correct: false
          feedback: Salah. Salah. Blok `if at flower` memudahkan lebah mengisap nektar
            di setiap bunga dan madu di setiap sarang..
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `if at flower` memudahkan lebah mengisap nektar di setiap
            bunga dan madu di setiap sarang.
        questions:
        - text: 'Cermati kode di bawah ini.  Menurut Anda apa yang akan terjadi setelah
            Anda mengklik "Run"? Ingat: hanya akan ada *satu* sarang lebah atau *satu*
            bunga di balik tiap-tiap awan.'
      courseD_multi_bee_conditionals7_predict2_2018_2019:
        answers:
        - text: 'Lebah akan mendapat madu bunga di setiap bunga dan membuat madu di
            setiap sarang madu.

'
          correct: true
          feedback: Benar!
        - text: Lebah akan mencoba mengisap nektar dari bunga dan sarang madu.
          correct: false
          feedback: 'Salah. Blok `jika di bunga` membiarkan lebah mendapat madu bunga
            di setiap bunga dan membuat madu di setiap sarang lebah.

'
        - text: Lebah akan mencoba mengambil madu dari bunga dan sarang.
          correct: false
          feedback: 'Salah. Salah. Blok `jika di bunga` membiarkan lebah mendapat
            madu bunga di setiap bunga dan membuat madu di setiap sarang lebah..

'
        - text: Saya tidak tahu.
          correct: false
          feedback: 'Blok `jika di bunga` membiarkan lebah mendapat madu bunga di
            setiap bunga dan membuat madu di setiap sarang lebah.

'
        questions:
        - text: 'Perhatikan baik-baik kode di bawah. Menurut Anda, apa yang akan terjadi
            setelah Anda mengklik "Jalankan"? Ingat: hanya akan ada *satu* sarang
            lebah atau *satu* bunga di belakang setiap awan.

'
      courseD_multi_bee_nestedLoops2_predict1:
        answers:
        - text: Lebah akan bergerak maju dan hanya mengisap nektar satu kali.
          correct: false
          feedback: Salah.  Lebah mengulang tindakan berulang-ulang maju ke depan
            dan mengisap nektar, sehingga memungkinkannya memecahkan puzzle.
        - text: Lebah hanya akan mendapat 2 unit nektar.
          correct: false
          feedback: Salah.  Lebah mengulang tindakan berulang-ulang maju ke depan
            dan mengisap nektar, sehingga memungkinkannya memecahkan puzzle.
        - text: Lebah akan mendapatkan semua nektar.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Lebah mengulang tindakan berulang-ulang maju ke depan dan mengisap
            nektar, sehingga memudahkannya memecahkan puzzle.
        questions:
        - text: Cermati loop berlapis di bawah ini. Apa yang akan terjadi saat Anda
            mengklik "Run"?
      courseD_multi_bee_nestedLoops2_predict1_2018:
        answers:
        - text: Lebah akan bergerak maju dan hanya mengisap nektar satu kali.
          correct: false
          feedback: Salah.  Lebah mengulang tindakan berulang-ulang maju ke depan
            dan mengisap nektar, sehingga memungkinkannya memecahkan puzzle.
        - text: Lebah hanya akan mendapat 2 unit nektar.
          correct: false
          feedback: Salah.  Lebah mengulang tindakan berulang-ulang maju ke depan
            dan mengisap nektar, sehingga memungkinkannya memecahkan puzzle.
        - text: Lebah akan mendapatkan semua nektar.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Lebah mengulang tindakan berulang-ulang maju ke depan dan mengisap
            nektar, sehingga memudahkannya memecahkan puzzle.
        questions:
        - text: Cermati loop berlapis di bawah ini. Apa yang akan terjadi saat Anda
            mengklik "Run"?
      courseD_multi_bee_nestedLoops2_predict1_2018_2019:
        answers:
        - text: Lebah akan bergerak maju dan hanya mengisap nektar satu kali.
          correct: false
          feedback: Salah.  Lebah mengulang tindakan berulang-ulang maju ke depan
            dan mengisap nektar, sehingga memungkinkannya memecahkan puzzle.
        - text: Lebah hanya akan mendapat 2 unit nektar.
          correct: false
          feedback: Salah.  Lebah mengulang tindakan berulang-ulang maju ke depan
            dan mengisap nektar, sehingga memungkinkannya memecahkan puzzle.
        - text: Lebah akan mendapatkan semua nektar.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Lebah mengulang tindakan berulang-ulang maju ke depan dan mengisap
            nektar, sehingga memudahkannya memecahkan puzzle.
        questions:
        - text: Cermati loop berlapis di bawah ini. Apa yang akan terjadi saat Anda
            mengklik "Run"?
      courseD_multi_bee_nestedLoops9_predict2:
        answers:
        - text: '4'
          correct: false
          feedback: Salah. Lebah mengumpulkan 2 nektar dalam loop gerak maju, lalu
            2 nektar di dalam loop turun.  Semua ini berlangsung di dalam loop lain
            yang terjadi dua kali. 4 kali 2 sama dengan 8!
        - text: '8'
          correct: true
          feedback: Benar!
        - text: '12'
          correct: false
          feedback: Salah. Lebah mengumpulkan 2 nektar dalam loop gerak maju, lalu
            2 nektar di dalam loop turun.  Semua ini berlangsung di dalam loop lain
            yang terjadi dua kali. 4 kali 2 sama dengan 8!
        - text: Saya tidak tahu.
          correct: false
          feedback: Lebah mengumpulkan 2 nektar dalam loop bergerak maju, lalu 2 nektar
            di dalam loop turun.  Semua ini berlangsung di dalam loop lain yang terjadi
            dua kali. 4 kali 2 sama dengan 8!
        questions:
        - text: Cermati kode di bawah ini. Berapa banyak madu yang akan dihasilkan
            lebah saat Anda mengklik "Run"?
      courseD_multi_bee_nestedLoops9_predict2_2018:
        answers:
        - text: '4'
          correct: false
          feedback: Salah. Lebah mengumpulkan 2 nektar dalam loop gerak maju, lalu
            2 nektar di dalam loop turun.  Semua ini berlangsung di dalam loop lain
            yang terjadi dua kali. 4 kali 2 sama dengan 8!
        - text: '8'
          correct: true
          feedback: Benar!
        - text: '12'
          correct: false
          feedback: Salah. Lebah mengumpulkan 2 nektar dalam loop gerak maju, lalu
            2 nektar di dalam loop turun.  Semua ini berlangsung di dalam loop lain
            yang terjadi dua kali. 4 kali 2 sama dengan 8!
        - text: Saya tidak tahu.
          correct: false
          feedback: Lebah mengumpulkan 2 nektar dalam loop bergerak maju, lalu 2 nektar
            di dalam loop turun.  Semua ini berlangsung di dalam loop lain yang terjadi
            dua kali. 4 kali 2 sama dengan 8!
        questions:
        - text: Cermati kode di bawah ini. Berapa banyak madu yang akan dihasilkan
            lebah saat Anda mengklik "Run"?
      courseD_multi_bee_nestedLoops9_predict2_2018_2019:
        answers:
        - text: '4'
          correct: false
          feedback: Salah. Lebah mengumpulkan 2 nektar dalam loop gerak maju, lalu
            2 nektar di dalam loop turun.  Semua ini berlangsung di dalam loop lain
            yang terjadi dua kali. 4 kali 2 sama dengan 8!
        - text: '8'
          correct: true
          feedback: Benar!
        - text: '12'
          correct: false
          feedback: Salah. Lebah mengumpulkan 2 nektar dalam loop gerak maju, lalu
            2 nektar di dalam loop turun.  Semua ini berlangsung di dalam loop lain
            yang terjadi dua kali. 4 kali 2 sama dengan 8!
        - text: Saya tidak tahu.
          correct: false
          feedback: Lebah mengumpulkan 2 nektar dalam loop bergerak maju, lalu 2 nektar
            di dalam loop turun.  Semua ini berlangsung di dalam loop lain yang terjadi
            dua kali. 4 kali 2 sama dengan 8!
        questions:
        - text: Cermati kode di bawah ini. Berapa banyak madu yang akan dihasilkan
            lebah saat Anda mengklik "Run"?
      courseD_multi_collector_debugging10_predict1:
        answers:
        - text: Laurel akan salah belok saat membuat kotak.
          correct: false
          feedback: Salah. Ini hanya benar sebagian, tetapi loop juga tidak berjalan
            cukup jauh untuk mengambil semua harta karun.
        - text: 'Loop tidak berjalan cukup lama bagi Laurel untuk mengambil semua
            harta karun. '
          correct: false
          feedback: Salah. Ini hanya benar sebagian, tetapi lebah juga salah belok
            ketika mencoba menggambar kotak.
        - text: Laurel salah belok *dan* loop tidak berjalan cukup lama agar Laurel
            dapat mengambil semua harta karun.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Laurel salah belok *dan* loop tidak berjalan cukup lama agar Laurel
            dapat mengambil semua harta karun.
        questions:
        - text: 'Cermati code di bawah ini.  Mengapa Laurel tidak akan mengumpulkan
            semua harta karun saat Anda mengklik "Run"? Peringatan: Pertanyaan ini
            mengecoh, pastikan Anda membaca semua opsi sebelum menjawab!'
      courseD_multi_farmer_condLoops9_predict1:
        answers:
        - text: Pemanen akan mengumpulkan semua hasil panen.
          correct: false
          feedback: Salah. Tidak ada code di sini untuk mengumpulkan labu.
        - text: Pemanen tidak akan mengumpulkan hasil panen sedikit pun dengan jalur
            yang sedang dilaluinya.
          correct: false
          feedback: Salah. Code akan memerintahkan pemanen membuat pola undak-undakan
            berkali-kali dan mengumpulkan jagung atau selada sebanyak-banyaknya saat
            lewat. Dia tidak akan mengambil labu.
        - text: Pemanen akan mengumpulkan semua hasil panen, kecuali labu.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Code akan memerintahkan pemanen membuat pola undak-undakan berkali-kali
            dan mengumpulkan jagung atau selada sebanyak-banyaknya saat lewat. Dia
            tidak akan mengambil labu.
        markdown: |
          Tunas dalam teka-teki ini adalah jagung atau selada.
          <br/>
        questions:
        - text: Cermati kode di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_farmer_condLoops9_predict1_2018:
        answers:
        - text: Pemanen akan mengumpulkan semua hasil panen.
          correct: false
          feedback: Salah. Tidak ada kode di sini untuk memilih labu.
        - text: Pemanen tidak akan memetik salah satu tanaman pada jalan yang diambilnya.
          correct: false
          feedback: Salah. Kode akan membuat pemanen berulang kali membuat pola anak
            tangga dan mengambil jagung atau selada sebanyak-banyaknya. Ia tidak akan
            memilih labu.
        - text: Pemanen akan memilih semua tanaman, kecuali labu.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Kode akan membuat pemanen berulang kali membuat pola anak tangga
            dan mengambil jagung atau selada sebanyak-banyaknya. Ia tidak akan memilih
            labu.
        markdown: |
          Tunas dalam teka-teki ini adalah jagung atau selada.
          <br/>
        questions:
        - text: Cermati kode di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_farmer_condLoops9_predict1_2018_2019:
        answers:
        - text: Pemanen akan mengumpulkan semua hasil panen.
          correct: false
          feedback: Salah. Tidak ada kode di sini untuk memilih labu.
        - text: Pemanen tidak akan memetik salah satu tanaman pada jalan yang diambilnya.
          correct: false
          feedback: Salah. Kode akan membuat pemanen berulang kali membuat pola anak
            tangga dan mengambil jagung atau selada sebanyak-banyaknya. Ia tidak akan
            memilih labu.
        - text: Pemanen akan memilih semua tanaman, kecuali labu.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Kode akan membuat pemanen berulang kali membuat pola anak tangga
            dan mengambil jagung atau selada sebanyak-banyaknya. Ia tidak akan memilih
            labu.
        markdown: |
          Tunas dalam teka-teki ini adalah jagung atau selada.
          <br/>
        questions:
        - text: Cermati kode di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_farmer_ramp13:
        answers:
        - text: Petani akan berjalan sampai ke ujung jalur dan memanen labu.
          correct: false
          feedback: Salah. Blok `pick pumpkin` ada di dalam loop sehingga petani akan
            mencoba mengambil labu di setiap langkah, bukan melulu di akhir jalur.
        - text: Petani akan mencoba mengambil labu di setiap kotak, tetapi tak akan
            pernah berhasil mengambil labu.
          correct: true
          feedback: Benar!
        - text: Petani akan berjalan empat kotak, lalu mencoba mengambil satu labu.
          correct: false
          feedback: Salah. Blok `pick pumpkin` ada di dalam loop sehingga petani akan
            mencoba mengambil labu di setiap langkah, bukan melulu di akhir jalur.
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `pick pumpkin` ada di dalam loop sehingga petani akan mencoba
            mengambil labu di setiap langkah, bukan melulu di akhir jalur.
        markdown: Berikut ini jenis puzzle baru yang menggunakan blok yang mirip dengan
          puzzle yang sudah Anda lihat. Bisakah Anda memprediksi apa yang akan terjadi
          saat Anda menjalankan code di bawah ini?
        questions:
        - text: " "
      courseD_multi_farmer_while10_predict2:
        answers:
        - text: Tidak ada. code ini hanya akan membiarkan tanah yang rata.
          correct: false
          feedback: Salah. Tidak ada code untuk menghilangkan kotoran dari tumpukan.
        - text: Code ini akan membiarkan tumpukan tak terjamah sama sekali.
          correct: true
          feedback: Benar!
        - text: Code ini akan membiarkan lubang tak terjamah sama sekali.
          correct: false
          feedback: Salah. Loop `while` akan menangani loop segala ukuran, tetapi
            tidak ada code untuk menghilangkan kotoran dari tumpukan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop `while` akan menangani segala ukuran loop, tetapi tidak ada
            code untuk menghilangkan kotoran dari tumpukan.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan tersisa pada akhir puzzle
            ini?
      courseD_multi_farmer_while10_predict2_2018:
        answers:
        - text: Tidak ada. code ini hanya akan membiarkan tanah yang rata.
          correct: false
          feedback: Salah. Tidak ada code untuk menghilangkan kotoran dari tumpukan.
        - text: Code ini akan membiarkan tumpukan tak terjamah sama sekali.
          correct: true
          feedback: Benar!
        - text: Code ini akan membiarkan lubang tak terjamah sama sekali.
          correct: false
          feedback: Salah. Loop `while` akan menangani loop segala ukuran, tetapi
            tidak ada code untuk menghilangkan kotoran dari tumpukan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop `while` akan menangani segala ukuran loop, tetapi tidak ada
            code untuk menghilangkan kotoran dari tumpukan.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan tersisa pada akhir puzzle
            ini?
      courseD_multi_farmer_while10_predict2_2018_2019:
        answers:
        - text: Tidak ada. code ini hanya akan membiarkan tanah yang rata.
          correct: false
          feedback: Salah. Tidak ada code untuk menghilangkan kotoran dari tumpukan.
        - text: Code ini akan membiarkan tumpukan tak terjamah sama sekali.
          correct: true
          feedback: Benar!
        - text: Code ini akan membiarkan lubang tak terjamah sama sekali.
          correct: false
          feedback: Salah. Loop `while` akan menangani loop segala ukuran, tetapi
            tidak ada code untuk menghilangkan kotoran dari tumpukan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Loop `while` akan menangani segala ukuran loop, tetapi tidak ada
            code untuk menghilangkan kotoran dari tumpukan.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan tersisa pada akhir puzzle
            ini?
      courseD_multi_farmer_while4_predict1:
        answers:
        - text: Tidak akan terjadi apa-apa.
          correct: false
          feedback: Salah. Petani akan menghilangkan kotoran sepanjang ada tumpukan,
            lalu berhenti ketika tumpukan hilang.
        - text: Petani tidak akan pernah berhenti menghilangkan kotoran.
          correct: false
          feedback: Salah. Petani akan menghilangkan kotoran sepanjang ada tumpukan,
            lalu berhenti ketika tumpukan hilang.
        - text: Petani akan menghilangkan kotoran sepanjang ada tumpukan, lalu berhenti
            ketika tumpukan hilang.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Petani akan menghilangkan kotoran sepanjang ada tumpukan, lalu
            berhenti ketika tumpukan hilang
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_farmer_while4_predict1_2018:
        answers:
        - text: Tidak akan terjadi apa-apa.
          correct: false
          feedback: Salah. Petani akan menghilangkan kotoran sepanjang ada tumpukan,
            lalu berhenti ketika tumpukan hilang.
        - text: Petani tidak akan pernah berhenti menghilangkan kotoran.
          correct: false
          feedback: Salah. Petani akan menghilangkan kotoran sepanjang ada tumpukan,
            lalu berhenti ketika tumpukan hilang.
        - text: Petani akan menghilangkan kotoran sepanjang ada tumpukan, lalu berhenti
            ketika tumpukan hilang.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Petani akan menghilangkan kotoran sepanjang ada tumpukan, lalu
            berhenti ketika tumpukan hilang
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_farmer_while4_predict1_2018_2019:
        answers:
        - text: Tidak akan terjadi apa-apa.
          correct: false
          feedback: Salah. Petani akan menghilangkan kotoran sepanjang ada tumpukan,
            lalu berhenti ketika tumpukan hilang.
        - text: Petani tidak akan pernah berhenti menghilangkan kotoran.
          correct: false
          feedback: Salah. Petani akan menghilangkan kotoran sepanjang ada tumpukan,
            lalu berhenti ketika tumpukan hilang.
        - text: Petani akan menghilangkan kotoran sepanjang ada tumpukan, lalu berhenti
            ketika tumpukan hilang.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Petani akan menghilangkan kotoran sepanjang ada tumpukan, lalu
            berhenti ketika tumpukan hilang
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_maze_until10_predict2:
        answers:
        - text: Zombi akan langsung belok kanan dan terjebak.
          correct: true
          feedback: Benar!
        - text: Zombi akan berhasil sampai ke bunga matahari.
          correct: false
          feedback: Salah. Dalam code ini, zombi berusaha belok kanan *sebelum* melihat-lihat
            apakah bisa berjalan lurus.  Karena itulah, puzzle gagal.
        - text: Zombi akan belok kanan di jalur pertama dan berputar-putar selamanya.
          correct: false
          feedback: Salah. Zombi hanya berusaha belok kanan atau lurus. Dia tidak
            pernah berusaha belok kiri sehingga dia terjebak nyaris seketika.
        - text: Saya tidak tahu.
          correct: false
          feedback: Dalam code ini, zombi berusaha belok kanan *sebelum* melihat-lihat
            apakah bisa berjalan lurus.  Karena itulah, puzzle gagal.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_maze_until10_predict2_2018:
        answers:
        - text: Zombie akan melewati jalan yang benar dan akhirnya bolak-balik selamanya.
          correct: true
          feedback: Benar!
        - text: Zombi akan berhasil sampai ke bunga matahari.
          correct: false
          feedback: Salah. Zombie akan melewati jalan yang benar dan akhirnya bolak-balik
            selamanya.
        - text: Zombi akan belok kanan di jalur pertama dan berputar-putar selamanya.
          correct: false
          feedback: Salah. Zombie akan melewati jalan yang benar dan akhirnya bolak-balik
            selamanya.
        - text: Saya tidak tahu.
          correct: false
          feedback: Dalam kode ini, zombie akan melewati jalan yang benar dan akhirnya
            bolak-balik selamanya.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_maze_until10_predict2_2018_2019:
        answers:
        - text: Zombie akan melewati jalan yang benar dan akhirnya bolak-balik selamanya.
          correct: true
          feedback: Benar!
        - text: Zombi akan berhasil sampai ke bunga matahari.
          correct: false
          feedback: Salah. Zombie akan melewati jalan yang benar dan akhirnya bolak-balik
            selamanya.
        - text: Zombi akan belok kanan di jalur pertama dan berputar-putar selamanya.
          correct: false
          feedback: Salah. Zombie akan melewati jalan yang benar dan akhirnya bolak-balik
            selamanya.
        - text: Saya tidak tahu.
          correct: false
          feedback: Dalam kode ini, zombie akan melewati jalan yang benar dan akhirnya
            bolak-balik selamanya.
        questions:
        - text: Cermati code di bawah ini. Apa yang akan terjadi setelah Anda mengklik
            "Run"?
      courseD_multi_maze_until2_predict1:
        answers:
        - text: Burung tidak akan bergerak sama sekali.
          correct: false
          feedback: Salah. Kode membuat burung bergerak maju selagi ada jalur, lalu
            belok kiri. Burung akan terus begitu hingga menjangkau babi!
        - text: Burung pasti akan sampai ke babi.
          correct: true
          feedback: Benar!
        - text: Burung akan bergerak maju dan menabrak TNT.
          correct: false
          feedback: Salah. Kode membuat burung bergerak maju selagi ada jalur aman,
            lalu belok kiri. Burung akan terus begitu sampai menjangkau babi!
        - text: Saya tidak tahu.
          correct: false
          feedback: Kode membuat burung bergerak maju selagi ada jalur, lalu belok
            kiri. Burung akan terus begitu hingga menjangkau babi!
        questions:
        - text: Cermati kode di bawah ini. Menurut Anda apa yang akan terjadi ketika
            Anda mengklik "Run"?
      courseD_multi_maze_until2_predict1_2018:
        answers:
        - text: Burung tidak akan bergerak sama sekali.
          correct: false
          feedback: Salah. Kode membuat burung bergerak maju selagi ada jalur, lalu
            belok kiri. Burung akan terus begitu hingga menjangkau babi!
        - text: Burung pasti akan sampai ke babi.
          correct: true
          feedback: Benar!
        - text: Burung akan bergerak maju dan menabrak TNT.
          correct: false
          feedback: Salah. Kode membuat burung bergerak maju selagi ada jalur aman,
            lalu belok kiri. Burung akan terus begitu sampai menjangkau babi!
        - text: Saya tidak tahu.
          correct: false
          feedback: Kode membuat burung bergerak maju selagi ada jalur, lalu belok
            kiri. Burung akan terus begitu hingga menjangkau babi!
        questions:
        - text: Cermati kode di bawah ini. Menurut Anda apa yang akan terjadi ketika
            Anda mengklik "Run"?
      courseD_multi_maze_until2_predict1_2018_2019:
        answers:
        - text: Burung tidak akan bergerak sama sekali.
          correct: false
          feedback: Salah. Kode membuat burung bergerak maju selagi ada jalur, lalu
            belok kiri. Burung akan terus begitu hingga menjangkau babi!
        - text: Burung pasti akan sampai ke babi.
          correct: true
          feedback: Benar!
        - text: Burung akan bergerak maju dan menabrak TNT.
          correct: false
          feedback: Salah. Kode membuat burung bergerak maju selagi ada jalur aman,
            lalu belok kiri. Burung akan terus begitu sampai menjangkau babi!
        - text: Saya tidak tahu.
          correct: false
          feedback: Kode membuat burung bergerak maju selagi ada jalur, lalu belok
            kiri. Burung akan terus begitu hingga menjangkau babi!
        questions:
        - text: Cermati kode di bawah ini. Menurut Anda apa yang akan terjadi ketika
            Anda mengklik "Run"?
      courseD_multi_scrat_predict1:
        answers:
        - text: Tidak ada apa-apa. Scrat tidak akan bergerak sama sekali.
          correct: false
          feedback: Salah. Peletakan blok 'move forward' ke dalam blok 'repeat' akan
            menyebabkan Scrat bergerak maju tiga kali.
        - text: Scrat akan maju tiga kali, belok, lalu maju tiga kali lagi, sampai
            ke biji ek!
          correct: true
          feedback: Benar!
        - text: Scrat akan maju ke depan, lalu berbelok dan menabrak.
          correct: false
          feedback: Salah. Peletakan blok 'move forward' ke dalam blok 'repeat' akan
            menyebabkan Scrat bergerak maju tiga kali.
        - text: Saya tidak tahu.
          correct: false
          feedback: Menaruh blok `move forward` di dalam blok `repeat` akan mengakibatkan
            Scrat untuk maju ke depan tiga kali. Lalu dia akan berbelok dan maju tiga
            kali lagi, sampai ke biji ek!
        questions:
        - text: Kode ini menggunakan blok baru. Apa yang Anda kira terjadi saat Anda
            tekan "Run"?
      courseE_multi_bee_functions_predict1:
        answers:
        - text: Program yang sama juga akan bekerja untuk memecahkan puzzle ini.
          correct: true
          feedback: Benar!  Perbedaan jumlah madu itu tidak menjadi masalah. Fungsi
            diprogram untuk menangani itu.
        - text: Lebah tidak akan membuat cukup madu.
          correct: false
          feedback: Salah. Fungsi diprogram untuk menangani jumlah madu di atas 0.
        - text: Lebah akan mencoba membuat madu terlalu banyak.
          correct: false
          feedback: Salah. Fungsi diprogram untuk menangani jumlah madu di atas 0.
        - text: Saya tidak tahu.
          correct: false
          feedback: Program ini juga akan bekerja untuk memecahkan puzzle ini. Program
            ini diprogram untuk menangani jumlah madu di atas 0.
        questions:
        - text: Ini adalah program yang sama persis dari puzzle terakhir, tetapi jumlah
            madu yang harus dikumpulkan dalam puzzle ini telah berubah. Apa yang akan
            terjadi ketika Anda mengklik "Run"?
      courseE_multi_farmer_functions11_predict:
        answers:
        - text: Pemanen akan mengambil dua labu.
          correct: false
          feedback: Salah. Pemanen tidak memanggil "periksa dan ambil" hingga tiba
            di jagung.
        - text: Pemanen akan mengambil semua labu.
          correct: false
          feedback: Salah. Pemanen tidak memanggil "periksa dan ambil" hingga tiba
            di jagung.
        - text: Pemanen akan mengambil selada.
          correct: false
          feedback: Salah. Pemanen hanya melakukan satu belokan, dan berakhir di jagung.
        - text: Pemanen akan mengambil jagung.
          correct: true
          feedback: Benar!
        questions:
        - text: Perhatikan definisi fungsi di bawah ini. Apakah yang akan diambil
            oleh pemanen?
      courseE_multi_farmer_functions11_predict_2018:
        answers:
        - text: Pemanen akan mengambil dua labu.
          correct: false
          feedback: Salah. Pemanen bergerak maju sampai ujung jalan, lalu berbalik
            dan bergerak mundur sampai mengambil selada.
        - text: Pemanen akan mengambil semua labu.
          correct: false
          feedback: Salah. Pemanen bergerak maju sampai ujung jalan, lalu berbalik
            dan bergerak mundur sampai mengambil selada.
        - text: Pemanen akan mengambil selada.
          correct: true
          feedback: Benar!
        - text: Pemanen akan mengambil jagung.
          correct: false
          feedback: Salah. Pemanen bergerak maju sampai ujung jalan, lalu berbalik
            dan bergerak mundur sampai mengambil selada.
        questions:
        - text: Perhatikan definisi fungsi di bawah ini. Apakah yang akan diambil
            oleh pemanen?
      courseE_multi_farmer_functions11_predict_2018_2019:
        answers:
        - text: Pemanen akan mengambil dua labu.
          correct: false
          feedback: Salah. Pemanen bergerak maju sampai ujung jalan, lalu berbalik
            dan bergerak mundur sampai mengambil selada.
        - text: Pemanen akan mengambil semua labu.
          correct: false
          feedback: Salah. Pemanen bergerak maju sampai ujung jalan, lalu berbalik
            dan bergerak mundur sampai mengambil selada.
        - text: Pemanen akan mengambil selada.
          correct: true
          feedback: Benar!
        - text: Pemanen akan mengambil jagung.
          correct: false
          feedback: Salah. Pemanen bergerak maju sampai ujung jalan, lalu berbalik
            dan bergerak mundur sampai mengambil selada.
        questions:
        - text: Perhatikan definisi fungsi di bawah ini. Apakah yang akan diambil
            oleh pemanen?
      courseE_prediction_artistFunction1:
        answers:
        - text: Tidak ada. Function tidak dipanggil dalam program.
          correct: false
          feedback: Salah. Function sebenarnya dipanggil dua kali di dalam program.
        - text: Si artis akan mengambar sebuah persegi empat.
          correct: false
          feedback: Salah. Function sebenarnya dipanggil dua kali di dalam program.
        - text: Artis akan menggambar dua persegi empat yang tumpang-tindih.
          correct: false
          feedback: Salah. Panjang setiap sisi persegi empat hanya 100 piksel, tetapi
            si artis melompat sebanyak 175 piksel di antara function.
        - text: Artis akan menggambar dua persegi empat dengan celah kecil di antaranya.
          correct: true
          feedback: Benar! Function dipanggil dua kali di dalam program, dengan lompatan
            di antaranya.
        questions:
        - text: Apa yang akan terjadi ketika Anda menekan "Run"?
      courseE_prediction_artistFunction1_2018:
        answers:
        - text: Tidak ada. Function tidak dipanggil dalam program.
          correct: false
          feedback: Salah. Function sebenarnya dipanggil dua kali di dalam program.
        - text: Si artis akan mengambar sebuah persegi empat.
          correct: false
          feedback: Salah. Function sebenarnya dipanggil dua kali di dalam program.
        - text: Artis akan menggambar dua persegi empat yang tumpang-tindih.
          correct: false
          feedback: Salah. Panjang setiap sisi persegi empat hanya 100 piksel, tetapi
            si artis melompat sebanyak 175 piksel di antara function.
        - text: Artis akan menggambar dua persegi empat dengan celah kecil di antaranya.
          correct: true
          feedback: Benar! Function dipanggil dua kali di dalam program, dengan lompatan
            di antaranya.
        questions:
        - text: Apa yang akan terjadi ketika Anda menekan "Run"?
      courseE_prediction_artistFunction1_2018_2019:
        answers:
        - text: Tidak ada. Function tidak dipanggil dalam program.
          correct: false
          feedback: Salah. Function sebenarnya dipanggil dua kali di dalam program.
        - text: Si artis akan mengambar sebuah persegi empat.
          correct: false
          feedback: Salah. Function sebenarnya dipanggil dua kali di dalam program.
        - text: Artis akan menggambar dua persegi empat yang tumpang-tindih.
          correct: false
          feedback: Salah. Panjang setiap sisi persegi empat hanya 100 piksel, tetapi
            si artis melompat sebanyak 175 piksel di antara function.
        - text: Artis akan menggambar dua persegi empat dengan celah kecil di antaranya.
          correct: true
          feedback: Benar! Function dipanggil dua kali di dalam program, dengan lompatan
            di antaranya.
        questions:
        - text: Apa yang akan terjadi ketika Anda menekan "Run"?
      courseE_prediction_artistFunction1_copy:
        answers:
        - text: Tidak ada. Function tidak dipanggil dalam program.
          correct: false
          feedback: Salah. Function sebenarnya dipanggil dua kali di dalam program.
        - text: Si artis akan mengambar sebuah persegi empat.
          correct: false
          feedback: Salah. Function sebenarnya dipanggil dua kali di dalam program.
        - text: Artis akan menggambar dua persegi empat yang tumpang-tindih.
          correct: false
          feedback: Salah. Panjang setiap sisi persegi empat hanya 100 piksel, tetapi
            si artis melompat sebanyak 175 piksel di antara function.
        - text: Artis akan menggambar dua persegi empat dengan celah kecil di antaranya.
          correct: true
          feedback: Benar! Function dipanggil dua kali di dalam program, dengan lompatan
            di antaranya.
        questions:
        - text: Apa yang akan terjadi ketika Anda menekan "Run"?
      courseE_project_exemplars_2019:
        content1: Tes Halaman Buku Teks Markdown
        markdown: |+
          #Contoh Proyek

          Anda akan memulai tugas akhir Anda. Sebelum Anda mulai, luangkan waktu untuk melihat contoh proyek.

          ##Sprite Lab

          | Tarian Raksasa (Sprite Lab) | Permainan Kue Mangkok (Sprite Lab) |
          |---|---|
          | [![Tarian Raksasa (Sprite Lab)](https://images.code.org/85838ca11b728dce3e1513515c4510e3-image-1556826303297.png "Monster Dance (Sprite Lab")](https://studio.code.org/projects/spritelab/Cj3sVYGhWo2ujgwRoO1FscJazrDPT2qGfU59YXvFXxs/view) | [![Permainan Kue Mangkok (Sprite Lab)](https://images.code.org/c90080aaf05349fb6e1fbb6861e815df-image-1556809855136.png "Permainan Kue Mangkok (Sprite Lab")](https://studio.code.org/projects/spritelab/YMEHR4ps9cDJ0sb4Ks0YrZcpcjGmc4OEiUudZHm-l6g/view) |
          | Coba tambahkan teks atau skor ke permainan ini! | Coba tambahkan teks atau skor ke permainan ini! |

          ##Seniman

          | Pola (Seniman) | Bunga Fungsi (Seniman) |
          |---|---|
          | [![Pola (Seniman)](https://images.code.org/2432878706891dda080b69428ddc4a20-image-1556822714214.png "Pola (Seniman)")](https://studio.code.org/projects/artist/TznMeJRa4SnHWJvUBEoNUw/view) | [![Bunga Fungsi (Seniman)](https://images.code.org/1e6da38baf996dace44581572895a4b8-image-1556822184973.png "Bunga Fungsi (Seniman)")](https://studio.code.org/projects/artist/4uGqFaTnc7V9B6IqCqj21Q/view) |
          | Ayo berkreasi dengan lingkaran bersarang! | Ayo berkreasi dengan fungsi! |

      courseF_bee_variables_8a_2018:
        answers:
        - text: Lebah tidak akan mengumpulkan madu bunga apa pun karena variabel tidak
            disebut "berkumpul".
          correct: false
          feedback: Salah. Nama variabel Anda tidak memengaruhi nilainya.
        - text: Lebah hanya akan mengumpulkan 2 madu bunga.
          correct: true
          feedback: Benar!
        - text: Lebah akan mengumpulkan semua madu bunga.
          correct: false
          feedback: Salah. Variabel diatur kembali ke 0 sebelum dua fungsi panggilan
            terakhir.
        - text: Saya tidak tahu.
          correct: false
          feedback: Variabel diatur kembali ke 0 sebelum dua fungsi panggilan terakhir,
            di mana 1 ditambahkan setiap kali. Lebah kemudian mengumpulkan 2 unit
            madu bunga.
        questions:
        - text: Lihat kode di bawah. Berapa banyak unit madu bunga yang akan dikumpulkan
            lebah di akhir?
        title: Banyak Variabel Lebah
      courseF_bee_variables_8a_2018_2019:
        answers:
        - text: Lebah tidak akan mengumpulkan madu bunga apa pun karena variabel tidak
            disebut "berkumpul".
          correct: false
          feedback: Salah. Nama variabel Anda tidak memengaruhi nilainya.
        - text: Lebah hanya akan mengumpulkan 2 madu bunga.
          correct: true
          feedback: Benar!
        - text: Lebah akan mengumpulkan semua madu bunga.
          correct: false
          feedback: Salah. Variabel diatur kembali ke 0 sebelum dua fungsi panggilan
            terakhir.
        - text: Saya tidak tahu.
          correct: false
          feedback: Variabel diatur kembali ke 0 sebelum dua fungsi panggilan terakhir,
            di mana 1 ditambahkan setiap kali. Lebah kemudian mengumpulkan 2 unit
            madu bunga.
        questions:
        - text: Lihat kode di bawah. Berapa banyak unit madu bunga yang akan dikumpulkan
            lebah di akhir?
        title: Banyak Variabel Lebah
      courseF_external_variableConstant:
        markdown: "<h2>Selengkapnya tentang Variabel</h2>\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\"
          style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>Anda baru
          saja mempelajari satu cara ampuh untuk menggunakan variabel... sebagai konstanta!
          \ \nKetika Anda menggunakan variabel sebagai konstanta, Anda menetapkan
          nilai satu kali, lalu menggunakan nilai yang *sama* itu beberapa kali dalam
          program Anda tanpa mengubahnya setelah Anda mengklik \"Run\".  </h3>\n<br/><hr/>\n<h3>Di
          bagian seri selanjutnya, Anda akan menulis kode dengan variabel yang *memang*
          berubah di dalam program.</h3>\n\n"
      courseF_external_variableConstant_2018:
        markdown: "<h2>Selengkapnya tentang Variabel</h2>\n\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\"
          style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>Anda baru
          saja mempelajari satu cara hebat untuk menggunakan variabel... sebagai konstanta!
          \ \nKetika Anda menggunakan variabel sebagai konstanta, Anda menetapkan
          nilai satu kali, lalu menggunakan nilai yang *sama* beberapa kali dalam
          program Anda tanpa mengubahnya setelah Anda mengklik \"Jalankan\".  </h3>\n<br/><hr/>\n<h3>Di
          bagian seri selanjutnya, Anda akan menulis kode dengan variabel yang *melakukan*
          perubahan di dalam program.</h3>\n\n"
      courseF_external_variableConstant_2018_2019:
        markdown: "<h2>Selengkapnya tentang Variabel</h2>\n\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\"
          style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>Anda baru
          saja mempelajari satu cara hebat untuk menggunakan variabel... sebagai konstanta!
          \ \nKetika Anda menggunakan variabel sebagai konstanta, Anda menetapkan
          nilai satu kali, lalu menggunakan nilai yang *sama* beberapa kali dalam
          program Anda tanpa mengubahnya setelah Anda mengklik \"Jalankan\".  </h3>\n<br/><hr/>\n<h3>Di
          bagian seri selanjutnya, Anda akan menulis kode dengan variabel yang *melakukan*
          perubahan di dalam program.</h3>\n\n"
      courseF_markdown_algorithms_end:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "# **Anda baru saja mempelajari \"algoritma\"!**  \n\n\n\n### **Algoritma
          hanya daftar langkah untuk menyelesaikan tugas**. Hal menyenangkan tentang
          algoritma adalah Anda harus memutuskan yang terjadi, langkah demi langkah.
          \ \n\n###Ketika Anda menulis algoritma untuk mesin, ini disebut **program**.
          \ \n\n---\n\n## **Kosakata untuk Diketahui**\n\n* ### **Algoritma** - Daftar
          langkah untuk menyelesaikan tugas\n\n* ### **Program** - Algoritma yang
          telah dikodekan menjadi sesuatu yang dapat dijalankan oleh mesin\n"
      courseF_markdown_algorithms_intro:
        content1: Tes Halaman Buku Teks Markdown
        markdown: |
          # **Dalam pelajaran ini...**

          ### Pernahkah Anda ingin memberi tahu seseorang apa yang harus dilakukannya? Apakah mereka selalu mendengar Anda?

          ###Hari ini, Anda akan memberi tahu apa yang harus dilakukan oleh mesin, langkah demi langkah- dan akan mendengarkan!

          ---

          ## **Blok untuk Diketahui**

          ![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)

          ![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)

          ![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)
      courseF_markdown_conditionals_end:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "# **Anda baru saja mempelajari \"persyaratan\"!**\n\n###Persyaratan
          sangat berguna dalam ilmu komputer. Bayangkan masuk ke situs web favorit
          Anda dan ketikkan kata sandi Anda. Situs web harus menggunakan persyaratan
          untuk memeriksa *jika* kata sandi yang Anda masukkan cocok dengan kata sandi
          yang telah disimpan untuk nama pengguna Anda. \n\n###`Jika` itu cocok, masuk!
          \n\n### `Lain`, sampaikan kesalahan kepada pengguna.  \n\n---\n\n## **Kosa
          Kata untuk Diketahui**\n\n* ### **Ketentuan** - Sesuatu program yang diperiksa
          sebelum mengizinkan tindakan\n\n* ###**Persyaratan** - Pernyataan yang hanya
          berjalan dalam ketentuan tertentu\n\n"
      courseF_markdown_conditionals_intro:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "#**Dalam pelajaran ini...**\n\n### **Ketentuan** adalah hal-hal
          yang dapat benar atau salah. \n\n###Anda akan mempelajari cara menggunakan
          ketentuan dalam program untuk membuat sesuatu terjadi `ketika`, `hingga`,
          atau `jika` ada sesuatu yang benar!\n---\n\n## **Blok untuk Diketahui**\n\n![](https://images.code.org/8c6cc9ffa31c916fc970c67382d83b8d-image-1524770260439.png)\n\n![](https://images.code.org/c2fbbaf80b348d47ba2dac4497ae2624-image-1524770272898.png)\n\n![](https://images.code.org/6b90e2dfb025609f8762014ff0ba51dc-image-1524770241058.png)\n\n\n"
      courseF_markdown_debugging_end:
        content1: Tes Halaman Buku Teks Markdown
        markdown: |
          # **Anda baru saja mempelajari "debug"!**

          ###**Bug adalah sesuatu yang salah.** Ini adalah kesalahan program. Ketika Anda menemukan dan memperbaiki kesalahan itu, Anda melakukan **debug** pada masalah.

          ###Anda harus berlatih **kegigihan**, kata lain untuk tidak menyerah, menemukan dan memperbaiki semua bug.

          ---

          ## **Kosa Kata untuk Diketahui**

          * ### **Bug** - Bagian dari program yang tidak berfungsi dengan benar

          * ### **Debug** -Menemukan dan memperbaiki masalah algoritma atau program

          * ### **Kegigihan** - Tidak menyerah
      courseF_markdown_debugging_intro:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "#Dalam pelajaran ini...\n\n###Apa yang Anda pikirkan ketika Anda
          memikirkan bug? \n\n###Ketika kebanyakan orang memikirkan bug, mereka memikirkan
          hal-hal yang agak menyeramkan. Dalam ilmu komputer, bug tidak aktif, tetapi
          mereka masih dapat rumit.\n\n###Teka-teki dalam pelajaran ini telah dipecahkan
          untuk Anda! Namun, tidak secepat itu- teka-teki itu sepertinya belum berfungsi.
          Apakah ada bug di balik semua ini? \n\n---\n\n## Blok untuk Diketahui\n\n![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)\n\n![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)\n\n![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)\n"
      courseF_markdown_forloops_end:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "#**Anda baru saja mempelajari \"lingkaran untuk\"!**\n\n###**Lingkaran
          untuk adalah lingkaran di mana Anda menetapkan nilai mulai, berhenti, dan
          langkah.**\n\n###Jenis lingkaran `ulangi` yang baru ini memberikan pengendalian
          lebih besar kepada Anda ketika pengulangan dimulai, ketika berakhir, dan
          apakah lingkaran Anda harus meningkat setiap kali pengulangan berjalan.\n\n###Lebih
          banyak pengendalian berarti Anda dapat memecahkan teka-teki jauh lebih cepat!
          \n\n---\n\n##**Kosa Kata untuk Diketahui**\n\n### **Lingkaran untuk** -
          Lingkaran untuk adalah lingkaran yang memiliki awal, akhir, dan tambahan
          yang telah ditentukan (interval langkah)\n\n"
      courseF_markdown_forloops_end_2019:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "#**Anda baru saja mempelajari \"lingkaran untuk\"!**\n\n###**Lingkaran
          untuk adalah lingkaran di mana Anda menetapkan nilai mulai, berhenti, dan
          langkah.**\n\n###Jenis lingkaran `ulangi` yang baru ini memberikan pengendalian
          lebih besar kepada Anda ketika pengulangan dimulai, ketika berakhir, dan
          apakah lingkaran Anda harus meningkat setiap kali pengulangan berjalan.\n\n###Lebih
          banyak pengendalian berarti Anda dapat memecahkan teka-teki jauh lebih cepat!
          \n\n---\n\n##**Kosa Kata untuk Diketahui**\n\n### **Lingkaran untuk** -
          Lingkaran untuk adalah lingkaran yang memiliki awal, akhir, dan tambahan
          yang telah ditentukan (interval langkah)\n\n"
      courseF_markdown_forloops_intro:
        content1: Tes Halaman Buku Teks Markdown
        markdown: |+
          #**Dalam pelajaran ini...**

          ###Hari ini Anda akan mempelajari jenis lingkaran `ulangi` yang baru. Ini adalah pratinjau dari blok yang akan Anda gunakan:

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ###* Untung*nya, lingkaran baru ini akan menjadikan memecahkan teka-teki seperti ini sangat mudah!

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_forloops_intro_2019:
        content1: Tes Halaman Buku Teks Markdown
        markdown: |+
          #**Dalam pelajaran ini...**

          ###Hari ini Anda akan mempelajari jenis lingkaran `ulangi` yang baru. Ini adalah pratinjau dari blok yang akan Anda gunakan:

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ###* Untung*nya, lingkaran baru ini akan menjadikan memecahkan teka-teki seperti ini sangat mudah!

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_loops_end:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "# **Anda baru saja mempelajari \"lingkaran\"!**  \n\n###**Lingkaran
          adalah tindakan melakukan sesuatu berulang kali.** Kata lain untuk melakukan
          sesuatu lagi adalah berulang.\n\n###Lingkaran sangat berguna untuk pola
          berulang. Mungkin akan membantu jika Anda menulis program tanpa lingkaran
          terlebih dahulu, lalu mencoba menemukan polanya. \n\n###Ketika Anda melihatnya,
          lekatkan pola itu ke dalam blok `ulangi`!\n\n---\n\n##**Kosa Kata untuk
          Diketahui**\n\n* ### **Lingkaran** - Tindakan melakukan sesuatu berulang
          kali\n\n* ### **Ulangi** - Lakukan sesuatu lagi\n"
      courseF_markdown_loops_intro:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "#Dalam pelajaran ini...\n\n###Bayangkan Anda ingin sifat Anda bergerak
          maju **5** kali. Hal ini akan sangat mudah - cukup pindahkan keluar **5**
          blok bergerak maju. Sekarang, bayangkan Anda ingin sifat Anda bergerak maju
          **5.000** kali! \n\n###Berapa lama waktu yang Anda butuhkan untuk memindahkan
          keluar **5.000** blok? \n\n###Berharap ada cara mudah untuk melakukan hal
          ini? Ada!\n\n---\n\n## Blok untuk Diketahui\n\n![](https://images.code.org/2d949be303e653f4ea203cc00f0b06c3-image-1524697677509.png)\n"
      courseF_markdown_nestedloops_end:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "# **Anda baru saja mempelajari \"lingkaran bersarang\"!**\n\n###**Lingkaran
          bersarang adalah lingkaran di dalam lingkaran.** Anggap saja seperti lingkaran
          luar, dengan lingkaran lain yang membuat semuanya menjadi nikmat dan nyaman
          serta bersarang di dalam lingkaran luar. \n\n###Lingkaran bersarang sangat
          layak untuk mengulangi pola dari pola. Itu dapat sangat kuat jika digunakan
          dengan benar!\n\n---\n\n##**Kosa Kata untuk Diketahui**\n\n### __Lingkaran
          Bersarang__ - Lingkaran dalam lingkaran\n\n"
      courseF_markdown_nestedloops_intro:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "#**Dalam pelajaran ini...**\n\n###Pernahkah Anda bertanya-tanya
          apa yang akan terjadi jika Anda meletakkan lingkaran *di dalam lingkaran
          lain*? \n\n###Mungkin hanya membuat Anda gila!\n\n###Jika lingkaran normal
          layak mengulangi pola, menurut Anda, apakah lingkaran dalam lingkaran lain
          akan layak? Ayo cari tahu!\n\n---\n\n## **Blok untuk Diketahui**\n\n![](https://images.code.org/cecea12a6973648b56512ff0990da6fb-image-1524759116715.gif)\n"
      courseF_markdown_variables_end:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "# **Anda baru saja mempelajari \"variabel\"!**\n\n###Untuk menggunakan
          variabel, perlu nama dan nilai. Nama tidak berubah, tetapi nilai dapat berubah.
          Dengan cara ini, Anda dapat menggunakan nama variabel sebagai tempat penampungan
          di mana pun Anda inginkan dalam program Anda! \n\n---\n\n##**Kosa Kata untuk
          Diketahui**\n\n###**Variabel** - Tempat penampungan untuk sepotong informasi
          yang dapat berubah\n\n"
      courseF_markdown_variables_end_2019:
        content1: Tes Halaman Buku Teks Markdown
        markdown: "# **Anda baru saja mempelajari \"variabel\"!**\n\n###Untuk menggunakan
          variabel, perlu nama dan nilai. Nama tidak berubah, tetapi nilai dapat berubah.
          Dengan cara ini, Anda dapat menggunakan nama variabel sebagai tempat penampungan
          di mana pun Anda inginkan dalam program Anda! \n\n---\n\n##**Kosa Kata untuk
          Diketahui**\n\n###**Variabel** - Tempat penampungan untuk sepotong informasi
          yang dapat berubah\n\n"
      courseF_markdown_variables_intro:
        content1: Tes Halaman Buku Teks Markdown
        markdown: |+
          #**Dalam pelajaran ini...**

          ###*Variabel* adalah tempat penampungan untuk informasi yang dapat berubah. Memiliki tempat penampungan memungkinkan untuk menulis program, bahkan ketika Anda tidak akan mengetahui semua nilai Anda sampai nanti!


          ---

          ## **Blok untuk Diketahui**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_markdown_variables_intro_2019:
        content1: Tes Halaman Buku Teks Markdown
        markdown: |+
          #**Dalam pelajaran ini...**

          ###*Variabel* adalah tempat penampungan untuk informasi yang dapat berubah. Memiliki tempat penampungan memungkinkan untuk menulis program, bahkan ketika Anda tidak akan mengetahui semua nilai Anda sampai nanti!


          ---

          ## **Blok untuk Diketahui**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_multi_artist_for10_predict1:
        answers:
        - text: Artis akan menggambar garis lurus yang meningkat ketebalannya dari
            satu sisi ruang permainan ke ruang permainan lainnya.
          correct: false
          feedback: Salah. Artis berbelok di antara pengulangan loop `for`.
        - text: 'Artis akan menggambar spiral dan setiap kali melewati loop `for`,
            garisnya makin panjang dan makin tipis. '
          correct: false
          feedback: Salah. Setiap kali melewati loop `for`, artis menggambar garis
            lebih panjang yang juga lebih tebal.
        - text: Artis akan menggambar spiral dan setiap kali melewati loop `for`,
            garisnya makin panjang dan makin tebal.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Salah. Setiap kali melewati loop `for`, artis menggambar garis
            lebih panjang yang juga lebih tebal.
        markdown: "Kami menggunakan penghitung dari lingkaran `untuk` kami guna mengubah
          lebar kuas pada gambar ini.  \n\n\n"
        questions:
        - text: Apa yang akan terjadi ketika Anda mengklik "Run"?
      courseF_multi_artist_for10_predict1_2018:
        answers:
        - text: Artis akan menggambar garis lurus yang meningkat ketebalannya dari
            satu sisi ruang permainan ke ruang permainan lainnya.
          correct: false
          feedback: Salah. Artis berbelok di antara pengulangan loop `for`.
        - text: 'Artis akan menggambar spiral dan setiap kali melewati loop `for`,
            garisnya makin panjang dan makin tipis. '
          correct: false
          feedback: Salah. Setiap kali melewati loop `for`, artis menggambar garis
            lebih panjang yang juga lebih tebal.
        - text: Artis akan menggambar spiral dan setiap kali melewati loop `for`,
            garisnya makin panjang dan makin tebal.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Salah. Setiap kali melewati loop `for`, artis menggambar garis
            lebih panjang yang juga lebih tebal.
        markdown: "Kami menggunakan penghitung dari lingkaran `untuk` kami guna mengubah
          lebar kuas pada gambar ini.  \n\n\n"
        questions:
        - text: Apa yang akan terjadi ketika Anda mengklik "Run"?
      courseF_multi_artist_for10_predict1_2018_2019:
        answers:
        - text: Artis akan menggambar garis lurus yang meningkat ketebalannya dari
            satu sisi ruang permainan ke ruang permainan lainnya.
          correct: false
          feedback: Salah. Artis berbelok di antara pengulangan loop `for`.
        - text: 'Artis akan menggambar spiral dan setiap kali melewati loop `for`,
            garisnya makin panjang dan makin tipis. '
          correct: false
          feedback: Salah. Setiap kali melewati loop `for`, artis menggambar garis
            lebih panjang yang juga lebih tebal.
        - text: Artis akan menggambar spiral dan setiap kali melewati loop `for`,
            garisnya makin panjang dan makin tebal.
          correct: true
          feedback: Benar!
        - text: Saya tidak tahu.
          correct: false
          feedback: Salah. Setiap kali melewati loop `for`, artis menggambar garis
            lebih panjang yang juga lebih tebal.
        markdown: "Kami menggunakan penghitung dari lingkaran `untuk` kami guna mengubah
          lebar kuas pada gambar ini.  \n\n\n"
        questions:
        - text: Apa yang akan terjadi ketika Anda mengklik "Run"?
      courseF_multi_artist_fwp2_predict1:
        answers:
        - text: Artis akan menggunakan fungsi yang sama untuk menggambar dua kotak
            yang berbeda ukuran.
          correct: true
          feedback: Benar!
        - text: Artis akan menggunakan dua fungsi yang berbeda untuk menggambar dua
            kotak yang berbeda ukuran.
          correct: false
          feedback: Salah.  Penggunaan parameter memudahkan Anda menggunakan satu
            fungsi untuk membuat hasil yang berbeda.
        - text: Artis akan menggunakan dua fungsi yang berbeda untuk menggambar kotak
            berukuran sama dua kali.
          correct: false
          feedback: Salah.  Penggunaan parameter memudahkan Anda menggunakan satu
            fungsi untuk membuat hasil yang berbeda.
        - text: Saya tidak tahu.
          correct: false
          feedback: Program menggunakan parameter untuk mengizinkan satu fungsi membuat
            dua kotak yang berbeda ukuran.
        markdown: |+
          Kami telah menambahkan parameter ke fungsi 'draw a square'.  Klik tombol biru "edit" untuk melihat seluruh definisi fungsi.


        questions:
        - text: Apa yang akan terjadi ketika Anda menjalankan program ini?
      courseF_multi_artist_variables3a_predict1:
        answers:
        - text: Si artis akan menggambar segitiga dengan sisi 50 piksel.
          correct: true
          feedback: Benar!
        - text: Si artis akan menggambar poligon bersisi 50 dengan sisi 3 piksel.
          correct: false
          feedback: Salah. Variabel `length` perlu berada di dalam loop `repeat` agar
            bisa terjadi.
        - text: Si artis akan menggambar tiga sisi terbuka dengan belokan 50 derajat.
          correct: false
          feedback: Salah.  Variabel `length` perlu digunakan di dalam blok `turn`
            agar bisa terjadi.
        - text: Saya tidak tahu.
          correct: false
          feedback: Variabel `length` disetel ke 50 dan digunakan di blok `move forward
            by` sehingga artis akan menggambar segitiga dengan sisi 50 piksel.
        questions:
        - text: Kami telah menyetel variabel "length" ke 50. Apa yang akan terjadi
            ketika Anda mengklik "Run"?
      courseF_multi_artist_variables3a_predict1_2018:
        answers:
        - text: Si artis akan menggambar segitiga dengan sisi 50 piksel.
          correct: true
          feedback: Benar!
        - text: Si artis akan menggambar poligon bersisi 50 dengan sisi 3 piksel.
          correct: false
          feedback: Salah. Variabel `length` perlu berada di dalam loop `repeat` agar
            bisa terjadi.
        - text: Si artis akan menggambar tiga sisi terbuka dengan belokan 50 derajat.
          correct: false
          feedback: Salah.  Variabel `length` perlu digunakan di dalam blok `turn`
            agar bisa terjadi.
        - text: Saya tidak tahu.
          correct: false
          feedback: Variabel `length` disetel ke 50 dan digunakan di blok `move forward
            by` sehingga artis akan menggambar segitiga dengan sisi 50 piksel.
        questions:
        - text: Kami telah menyetel variabel "length" ke 50. Apa yang akan terjadi
            ketika Anda mengklik "Run"?
      courseF_multi_artist_variables3a_predict1_2018_2019:
        answers:
        - text: Si artis akan menggambar segitiga dengan sisi 50 piksel.
          correct: true
          feedback: Benar!
        - text: Si artis akan menggambar poligon bersisi 50 dengan sisi 3 piksel.
          correct: false
          feedback: Salah. Variabel `length` perlu berada di dalam loop `repeat` agar
            bisa terjadi.
        - text: Si artis akan menggambar tiga sisi terbuka dengan belokan 50 derajat.
          correct: false
          feedback: Salah.  Variabel `length` perlu digunakan di dalam blok `turn`
            agar bisa terjadi.
        - text: Saya tidak tahu.
          correct: false
          feedback: Variabel `length` disetel ke 50 dan digunakan di blok `move forward
            by` sehingga artis akan menggambar segitiga dengan sisi 50 piksel.
        questions:
        - text: Kami telah menyetel variabel "length" ke 50. Apa yang akan terjadi
            ketika Anda mengklik "Run"?
      courseF_multi_bee_conditionals1_predict1:
        answers:
        - text: Lebah akan bergerak ke awan dan mencoba mengisap nektar, apa pun risikonya.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya hanya akan mencoba
            mengisap nektar jika ada bunga di bawah awan.
        - text: Lebah akan bergerak ke awan dan hanya mencoba mengisap nektar jika
            ada bunga di bawahnya.
          correct: true
          feedback: Benar!
        - text: Lebah akan bergerak ke awan lalu diam saja, apa pun yang terjadi.
          correct: false
          feedback: Salah. Blok `if at flower` memastikan lebahnya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `if at flower` memastikan lebahnya hanya akan mencoba mengisap
            nektar jika ada bunga di bawah awan.
        markdown: "Awan menutupi pemandangan. Bisa jadi ada bunga di bawah awan ini.
          Jika ada bunga, lebah harus mengumpulkan nektar **satu kali**. \n"
        questions:
        - text: Jika tidak ada bunga, lebah tidak boleh melakukan apa-apa. Cermati
            kode di bawah ini. Menurut Anda apakah yang akan terjadi setelah Anda
            mengklik "Run"?
      courseF_multi_bee_conditionals7_predict2:
        answers:
        - text: Lebah akan mengisap nektar di setiap bunga, sebaliknya, dia akan membuat
            madu.
          correct: true
          feedback: Benar!
        - text: Lebah akan mencoba mengisap nektar dari bunga dan sarang madu.
          correct: false
          feedback: 'Salah. Blok `if at flower` membolehkan lebah mengambil nektar
            di setiap bunga dan membuat madu jika tidak ada bunga (sehingga ada sarang.).

'
        - text: Lebah akan mencoba mengambil madu dari bunga dan sarang.
          correct: false
          feedback: Salah. Salah. Blok `if at flower` memudahkan lebah mengisap nektar
            di setiap bunga dan madu di setiap sarang.
        - text: Saya tidak tahu.
          correct: false
          feedback: Blok `if at flower` memudahkan lebah mengisap nektar di setiap
            bunga, sebaliknya akan membuat madu.
        markdown: "Kadang-kadang awan menutupi bunga, kadang-kadang menutupi sarang
          lebah! Apa pun itu, hanya akan ada **satu** bunga atau **satu** sarang lebah
          di bawah setiap awan. \n"
        questions:
        - text: Cermati kode di bawah ini. Menurut Anda apa yang akan terjadi setelah
            Anda mengklik "Run"?
      courseF_multi_bee_for3_predict1:
        answers:
        - text: 'Lebah akan bergerak maju dan mengumpulkan semua nektar dari setiap
            bunga. '
          correct: false
          feedback: Salah. Loop `for` akan mengizinkan lebah mengumpulkan nektar dalam
            jumlah yang tepat, tetapi hanya disetel untuk mencapai 4 bunga.
        - text: 'Lebah akan bergerak maju dan mengumpulkan semua nektar dari setiap
            bunga, kecuali satu. '
          correct: true
          feedback: Benar!
        - text: 'Lebah akan bergerak maju dan mengumpulkan satu nektar dari setiap
            bunga. '
          correct: false
          feedback: Salah. Loop `for` akan mengizinkan lebah mengumpulkan nektar dalam
            jumlah yang tepat, tetapi hanya disetel untuk mencapai 4 bunga.
        - text: 'Lebah akan bergerak maju dan mencoba mengumpulkan nektar lebih banyak
            daripada yang ada dalam bunga. '
          correct: false
          feedback: Salah. Loop `for` akan mengizinkan lebah mengumpulkan nektar dalam
            jumlah yang tepat, tetapi hanya disetel untuk mencapai 4 bunga.
        markdown: |+
          Ah!  Penggunaan lingkaran `untuk` menjadikan teka-teki ini jauh lebih mudah!


        questions:
        - text: Baca kode di bawah ini. Apa yang akan terjadi saat Anda mengklik "Run"?
      courseF_multi_bee_for3_predict1_2018:
        answers:
        - text: 'Lebah akan bergerak maju dan mengumpulkan semua nektar dari setiap
            bunga. '
          correct: false
          feedback: Salah. Loop `for` akan mengizinkan lebah mengumpulkan nektar dalam
            jumlah yang tepat, tetapi hanya disetel untuk mencapai 4 bunga.
        - text: 'Lebah akan bergerak maju dan mengumpulkan semua nektar dari setiap
            bunga, kecuali satu. '
          correct: true
          feedback: Benar!
        - text: 'Lebah akan bergerak maju dan mengumpulkan satu nektar dari setiap
            bunga. '
          correct: false
          feedback: Salah. Loop `for` akan mengizinkan lebah mengumpulkan nektar dalam
            jumlah yang tepat, tetapi hanya disetel untuk mencapai 4 bunga.
        - text: Saya tidak tahu.
          correct: false
          feedback: Lingkaran `untuk` akan membuat lebah mengumpulkan jumlah madu
            bunga yang tepat, tetapi hanya diatur untuk mencapai 4 bunga.
        markdown: |+
          Ah!  Penggunaan lingkaran `untuk` menjadikan teka-teki ini jauh lebih mudah!


        questions:
        - text: Baca kode di bawah ini. Apa yang akan terjadi saat Anda mengklik "Run"?
      courseF_multi_bee_for3_predict1_2018_2019:
        answers:
        - text: 'Lebah akan bergerak maju dan mengumpulkan semua nektar dari setiap
            bunga. '
          correct: false
          feedback: Salah. Loop `for` akan mengizinkan lebah mengumpulkan nektar dalam
            jumlah yang tepat, tetapi hanya disetel untuk mencapai 4 bunga.
        - text: 'Lebah akan bergerak maju dan mengumpulkan semua nektar dari setiap
            bunga, kecuali satu. '
          correct: true
          feedback: Benar!
        - text: 'Lebah akan bergerak maju dan mengumpulkan satu nektar dari setiap
            bunga. '
          correct: false
          feedback: Salah. Loop `for` akan mengizinkan lebah mengumpulkan nektar dalam
            jumlah yang tepat, tetapi hanya disetel untuk mencapai 4 bunga.
        - text: Saya tidak tahu.
          correct: false
          feedback: Lingkaran `untuk` akan membuat lebah mengumpulkan jumlah madu
            bunga yang tepat, tetapi hanya diatur untuk mencapai 4 bunga.
        markdown: |+
          Ah!  Penggunaan lingkaran `untuk` menjadikan teka-teki ini jauh lebih mudah!


        questions:
        - text: Baca kode di bawah ini. Apa yang akan terjadi saat Anda mengklik "Run"?
      courseF_multi_bee_fwp9_predict1:
        answers:
        - text: Lebah tidak akan mengumpulkan nektar ataupun madu.
          correct: false
          feedback: Salah. Fungsi disetel untuk mengumpulkan nektar atau madu sebanyak-banyaknya
            seperti yang dimasukkan melalui parameter.
        - text: 'Lebah akan mengumpulkan tiga nektar atau madu, lalu dua nektar atau
            madu dalam pola undak-undakan. '
          correct: true
          feedback: Benar. Fungsi disetel untuk mengumpulkan nektar atau madu sebanyak-banyaknya
            seperti yang dimasukkan melalui parameter.
        - text: 'Lebah hanya akan mengumpulkan satu nektar atau madu di setiap pengulangan
            loop. '
          correct: false
          feedback: Salah.  Fungsi disetel untuk mengumpulkan nektar atau madu sebanyak-banyaknya
            seperti yang dimasukkan melalui parameter.
        - text: Saya tidak tahu.
          correct: false
          feedback: Mengklik untuk melihat bagian-dalam fungsi menunjukkan bahwa fungsi
            ini disetel untuk mengumpulkan nektar atau madu sebanyak-banyaknya seperti
            yang dimasukkan melalui parameter.
        markdown: |+
          Di bawah gumpalan awan-awan ini, ada satu bunga dengan 1 nektar, atau satu sarang lebah dengan 1 madu.  Klik tombol biru "edit" pada fungsi untuk melihat isi di dalamnya sebelum menjawab pertanyaan di bawah ini.


        questions:
        - text: Apa yang akan terjadi ketika Anda mengklik "Run"?
      courseF_multi_playlab_variables4c_predictive1:
        answers:
        - text: Perompak mengatakan, "Senang bertemu dengan Anda, Ali." itu saja.
          correct: true
          feedback: 'Benar. '
        - text: Perompak mengatakan, "Senang bertemu dengan Anda." itu saja.
          correct: false
          feedback: Salah. Perhatikan bahwa blok `join` menyisipkan nama yang diberikan
            ke dalam kalimat perompak.
        - text: Perompak mengatakan, "Ali" itu saja.
          correct: false
          feedback: Salah. Perhatikan bahwa blok `join` menyisipkan nama yang diberikan
            ke dalam kalimat perompak.
        - text: Saya tidak tahu.
          correct: false
          feedback: 'Salah. Perhatikan bahwa blok `join` menyisipkan nama yang diberikan
            (Ali) ke dalam kalimat perompak. '
        markdown: "**Puzzle ini menggunakan blok baru bernama blok `ask`.**\n\nBlok
          `ask` menghentikan program dan meminta pengguna memasukkan teks tertentu.
          \n\nApa pun teks yang dimasukkan pengguna lantas disimpan ke variabel yang
          muncul pada akhir blok `ask`.  Dalam kasus ini, ini adalah variabel `name`.\n"
        questions:
        - text: Apa yang akan terjadi jika pengguna memasukkan nama "Ali" saat diminta?
      courseF_project_exemplars_2019:
        content1: Tes Halaman Buku Teks Markdown
        markdown: |+
          # Contoh proyek


          Anda hampir mulai di akhir proyek.Sebelum anda mulai,luangkan waktu untuk melihat contoh proyek.


          ## Sprite Lab

          | Cupcake Game (Sprite Lab) | Helicopter Game (Sprite Lab) |
          |---|---|
          | [![#Bunny Game (Sprite Lab)](https://images.code.org/c90080aaf05349fb6e1fbb6861e815df-image-1556809855136.png)](https://studio.code.org/projects/spritelab/gXM_YU_qL_QWo1o5Wkam96oiFrYY5VUp27m2xKlp7EQ/view) | [![#Helicopter Game (Sprite Lab)](https://images.code.org/1a273fd447b952367792423a70c5087a-image-1556812149075.png)](https://studio.code.org/projects/spritelab/QeROTy1pNyjNPC-ZZdBN1mcpkmTEMUc2FYwXX0SOFAY/view) |
          | Try adding text or a score to this game! | Try adding text or a score to this game! |

          ## Artist

          | Flowers (Artist) | Spiral (Arist) |
          |---|---|
          | [![Flowers (Artist)](https://images.code.org/0f5adf63c318eab8c8acb397d9db7f2a-image-1556821537577.png)](https://studio.code.org/projects/artist/MIMh2pV2IiLm1ZzaiA6N7kKvg534lFck3abLXTsvZU8/view) | [![Spiral (Artist)](https://images.code.org/06514571a8cf2f8b0346006ac1adc219-image-1556819399386.png)](https://studio.code.org/projects/artist/66scPDPWa8RNNHkcXDaXdA/view) |
          | Let's get creative with variables! | Let's get creative with For Loops! |

      coursee_prediction_artistfunction2:
        answers:
        - text: Si artis akan memecahkan puzzle dengan benar.
          correct: false
          feedback: Salah. Loop menggunakan "gambar poligon" bukannya "gambar garis
            poligon".
        - text: Artis akan menggambar empat persegi empat dengan pola jendela.
          correct: true
          feedback: Benar!
        - text: Artis hanya akan menggambar satu garis persegi empat.
          correct: false
          feedback: Salah. Program tidak memanggil "gambar garis poligon".
        - text: Artis akan menggambar empat persegi empat saling bertumpuk.
          correct: false
          feedback: Salah. Loop belok 90 derajat di antara panggilan untuk "menggambar
            poligon".
        questions:
        - text: Apa yang akan terjadi ketika Anda menekan tombol "Run"?
      coursee_prediction_artistfunction2_2018:
        answers:
        - text: Si artis akan memecahkan puzzle dengan benar.
          correct: false
          feedback: Salah. Loop menggunakan "gambar poligon" bukannya "gambar garis
            poligon".
        - text: Artis akan menggambar empat persegi empat dengan pola jendela.
          correct: true
          feedback: Benar!
        - text: Artis hanya akan menggambar satu garis persegi empat.
          correct: false
          feedback: Salah. Program tidak memanggil "gambar garis poligon".
        - text: Artis akan menggambar empat persegi empat saling bertumpuk.
          correct: false
          feedback: Salah. Loop belok 90 derajat di antara panggilan untuk "menggambar
            poligon".
        questions:
        - text: Apa yang akan terjadi ketika Anda menekan tombol "Run"?
      coursee_prediction_artistfunction2_2018_2019:
        answers:
        - text: Si artis akan memecahkan puzzle dengan benar.
          correct: false
          feedback: Salah. Loop menggunakan "gambar poligon" bukannya "gambar garis
            poligon".
        - text: Artis akan menggambar empat persegi empat dengan pola jendela.
          correct: true
          feedback: Benar!
        - text: Artis hanya akan menggambar satu garis persegi empat.
          correct: false
          feedback: Salah. Program tidak memanggil "gambar garis poligon".
        - text: Artis akan menggambar empat persegi empat saling bertumpuk.
          correct: false
          feedback: Salah. Loop belok 90 derajat di antara panggilan untuk "menggambar
            poligon".
        questions:
        - text: Apa yang akan terjadi ketika Anda menekan tombol "Run"?
      csd-post-survey-2017-levelgroup-2018-2nd-semester:
        title: CS Discoveries End of Course Student Survey
      csd-post-survey-2018-markdown-with-link-to-survey_v2:
        markdown: |+
          # CS Discoveries Post-Course Survey

          **Your input and feedback is important to us!** We use it to:

          * understand your experience
          * make improvements to the course

          Thanks for taking the time to help make CS Discoveries even better!

          <a class="btn btn-large btn-success" href="/s/csd-post-survey-2018/stage/1/puzzle/1/page/1" target="top">Click here to complete the CS Discoveries Post-Course Survey</a>

          (opens in a new tab)

          <br>





        teacher_markdown: "**Please have your students complete this survey!!!**\n\n*
          The results are vital for us (code.org) to sustain our courses and make
          improvements.\n* There will be a teacher survey as well, where you can provide
          your own input, which you will be notified about via email.\n\n**To view
          results** -- the post-course survey is a little different. The survey which
          lives in its own unit of the course, and this page simply links to it.\n\n*
          To view anonymized results of the survey in your teacher dashboard, you
          need to (1) view survey/assessments, and then (2) select the post-course
          survey unit as the unit you want view.  \n\n* **More Instructions for viewing
          results of post-course survey**: [[google doc](https://docs.google.com/document/d/1EQfPy0D6lSWA3s3d2hkgVLSRn1vrjLLXaZBSz3-E9aw)]
          [[pdf](https://docs.google.com/document/d/1EQfPy0D6lSWA3s3d2hkgVLSRn1vrjLLXaZBSz3-E9aw/export?format=pdf)]\n\n\n\n\n"
      csd-post-survey-levelgroup-2018:
        title: CS Discoveries End of Course Student Survey
      csd-pre-survey-2017-levelgroup:
        markdown: "# Overview\n\nThe class works in groups to design aluminum foil
          boats that will support as many pennies as possible.  At the end of the
          lesson groups reflect on their experiences with the activity and make connections
          to the types of problem solving they will be doing for the rest of the course.
          \n\n\n## Resources\n\n* [Aluminum Boats](https://docs.google.com/document/d/1C5RMzH0811r8e2XdVbWV-GANm3uIar2_N8hI9jqX2rk/export?format=pdf)
          - Activity Guide (copy as [MS Word](https://docs.google.com/document/d/1C5RMzH0811r8e2XdVbWV-GANm3uIar2_N8hI9jqX2rk/export?format=doc),
          [Google Doc](https://docs.google.com/document/d/1C5RMzH0811r8e2XdVbWV-GANm3uIar2_N8hI9jqX2rk/copy))\n"
        teacher_markdown: |
          [key]

          * [Aluminum Boats - Exemplar](https://docs.google.com/a/code.org/document/d/1qHsuBxLTbCCUwjkUDKP0WywF249kx3s4aLeJyYR2Byo/edit?usp=sharing) - Activity Guide ([PDF](https://docs.google.com/document/d/1qHsuBxLTbCCUwjkUDKP0WywF249kx3s4aLeJyYR2Byo/export?format=pdf) | [DOCX](https://docs.google.com/a/code.org/document/d/1qHsuBxLTbCCUwjkUDKP0WywF249kx3s4aLeJyYR2Byo/edit?usp=sharing))

          [/key]
      csd-pulse-check-survey-1-levelgroup U1Ch2:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U1Ch2_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U1Ch2_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U2Ch1:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U2Ch1_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U2Ch1_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U2Ch2:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U2Ch2_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U2Ch2_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U3Ch1:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U3Ch1_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U3Ch1_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U3Ch2:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U3Ch2_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U3Ch2_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U4Ch1:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U4Ch1_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U4Ch1_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U4Ch2:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U4Ch2_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U4Ch2_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U5Ch1:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U5Ch1_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U5Ch1_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U5Ch2:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U5Ch2_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U5Ch2_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U6Ch1:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U6Ch1_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U6Ch1_2018_2019:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U6Ch2:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U6Ch2_2018:
        title: CS Discoveries Rapid Survey!
      csd-pulse-check-survey-1-levelgroup U6Ch2_2018_2019:
        title: CS Discoveries Rapid Survey!
      grade2_multi_collector_A_predict1:
        answers:
        - text: Laurel akan mengumpulkan 4 buah harta karun menggunakan code ini.
          correct: false
          feedback: Salah.  Laurel mencoba mengumpulkan harta karun di tempat yang
            tidak ada sehingga muncul kesalahan.
        - text: Laurel akan mencoba mengumpulkan harta karun di tempat yang tidak
            ada satu pun sehingga muncul kesalahan.
          correct: true
          feedback: Benar!
        - text: Laurel akan mengumpulkan semua harta karun.
          correct: false
          feedback: Salah.  Laurel mencoba mengumpulkan harta karun di tempat yang
            tidak ada sehingga muncul kesalahan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Laurel mencoba mengumpulkan harta karun di tempat yang tidak ada
            sehingga muncul kesalahan.
        questions:
        - text: Cermati code di bawah ini. Jika code dijalankan sampai akhir (dengan
            mengabaikan kesalahan) berapa buah harta karun yang akan dikumpulkan Laurel?
      grade2_multi_collector_A_predict1_2018:
        answers:
        - text: Laurel akan mengumpulkan 4 buah harta karun menggunakan code ini.
          correct: false
          feedback: Salah.  Laurel mencoba mengumpulkan harta karun di tempat yang
            tidak ada sehingga muncul kesalahan.
        - text: Laurel akan mencoba mengumpulkan harta karun di tempat yang tidak
            ada satu pun sehingga muncul kesalahan.
          correct: true
          feedback: Benar!
        - text: Laurel akan mengumpulkan semua harta karun.
          correct: false
          feedback: Salah.  Laurel mencoba mengumpulkan harta karun di tempat yang
            tidak ada sehingga muncul kesalahan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Laurel mencoba mengumpulkan harta karun di tempat yang tidak ada
            sehingga muncul kesalahan.
        questions:
        - text: Perhatikan kode berikut ini. Menurutmu apa yang akan terjadi saat
            programnya dijalankan?
      grade2_multi_collector_A_predict1_2018_2019:
        answers:
        - text: Laurel akan mengumpulkan 4 buah harta karun menggunakan code ini.
          correct: false
          feedback: Salah.  Laurel mencoba mengumpulkan harta karun di tempat yang
            tidak ada sehingga muncul kesalahan.
        - text: Laurel akan mencoba mengumpulkan harta karun di tempat yang tidak
            ada satu pun sehingga muncul kesalahan.
          correct: true
          feedback: Benar!
        - text: Laurel akan mengumpulkan semua harta karun.
          correct: false
          feedback: Salah.  Laurel mencoba mengumpulkan harta karun di tempat yang
            tidak ada sehingga muncul kesalahan.
        - text: Saya tidak tahu.
          correct: false
          feedback: Laurel mencoba mengumpulkan harta karun di tempat yang tidak ada
            sehingga muncul kesalahan.
        questions:
        - text: Perhatikan kode berikut ini. Menurutmu apa yang akan terjadi saat
            programnya dijalankan?
      gradek1_activity_beNice:
        markdown: "# Tata Tertib Lab Komputer\n  \n<br/><br/>    \n    \n<a href=\"https://docs.google.com/document/d/18KHX5NNlmXX1Eqt8u6LFRzto7PK4dIFNv-tr1F1joUQ/edit?usp=sharing\"
          target=\"_new\">\n<button>\nBuka rencana pelajaran\n</button> \n</a>\n\n<br/><br/>\n<a
          class=\"btn btn-large btn-primary next-stage submitButton\">Lanjutkan</a>\n"
