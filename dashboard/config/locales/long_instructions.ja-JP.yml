---
ja-JP:
  data:
    long_instructions:
      2-3 Artist 1 new: こんにちは、わたしはアーティストです。あなたが書くコードをもとに、わたしはほとんどどんなものでもかくことができます。いくつかのブロックを使って、画像（がぞう）の中の灰色（はいいろ）のラインの上をなぞるようにしてください。(それぞれのラインの長さは
        100 ピクセル)
      2-3 Artist 11: "一辺（いっぺん）が 100 ピクセルの八角形（はちかくけい）を作り、\n 一時停止（いちじていし）の標識（ひょうしき）に枠（わく）をつけましょう。 "
      2-3 Artist 12: "円（えん）をかいて目玉（めだま）を完成（かんせい）させよう！\n\\\r\n\\\r\nアーティストがそれぞれのループごとに
        1 度（ど）ずつ回転（かいてん）するとなると、円（えん）をかくには、そのコードを何回（なんかい）くりかえす必要（ひつよう）がありますか？ "
      2-3 Artist 2 new: |-
        この家（いえ）の壁（かべ）は、未完成（みかんせい）です。
        それぞれの面が 100 であるべきなのに、未完成の壁は 50 しかありません。 壁を完成させましょう。
      2-3 Artist 3.4: |-
        「ジャンプ」のブロックを使うと、線をかかずにアーティストをうごかせます。
        「ジャンプ」と「前にうごく」のりょうほうのブロックを使って、点線をかいてみましょう。
      2-3 Artist 3new: "赤いぼうしの高さは100ピクセルです。赤より70ピクセルひくい黒のぼうしをかき上げてください。\\\r\n(どちらのぼうしも50ピクセルのはばです。)"
      2-3 Artist 4: ネコのために、家を完成（かんせい）させましょう。
      2-3 Artist 6: "この家（いえ）には屋根（やね）が必要（ひつよう）です！三角形（さんかくけい）をかきましょう。 \\\r\n\\\r\nヒント:\n3
        辺（へん）の長さはすべて同じです。\\\r\n\\\r\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"\nwidth=\"300\"/>"
      2-3 Artist 7: '子どもたちみんなが外を見ることができるように、学校のまどをぜんぶかき上げてください。それぞれの正方形のまどの辺の長さは25ピクセルです。 '
      2-3 Artist 8: "納屋（なや）を作りましょう！\\\r\n\\\r\n納屋を 2 つの同じ大きさの正方形（せいほうけい）に分割（ぶんかつ）して、\nそれぞれの動物（どうぶつ）のための部屋（へや）を作りましょう。
        \\\r\n\\\r\nヒント:\n長方形（ちょうほうけい）のはばは 200 ピクセルで、高さは 100 ピクセルです。 \\\r\n\\\r\nこのパズルを解（と）く方法（ほうほう）はたくさんあります。"
      2-3 Artist 9 NEW: この凧（たこ）を完成（かんせい）させてください。
      2-3 Artist Assessment 1: "**課題（かだい）**: 最後（さいご）の歯（は）をかき上げてください。歯の大きさはよこ25ピクセル、たて25ピクセルです。"
      2-3 Artist Debugging 1: |-
        ぼうしのてっぺんのはばを50にしたいのです。直せますか?

        <br/>
      2-3 Artist Debugging 10: |-
        ゲームコントローラの十字キーが細（ほそ）すぎます。

        はばを 10 ピクセルぶん広げよう。

        まずはコードを実行（じっこう）して、なにがまちがっているか確認（かくにん）しよう。
      2-3 Artist Debugging 11: 雪の結晶（けっしょう）を完成（かんせい）させたいんだ。何がまちがってるか、わかるかな？
      2-3 Artist Debugging 2: |-
        このネコのヒゲのコードはまちがっています。

        ぜんぶのヒゲが同じ長さになるように、コードを直してください。
      2-3 Artist Debugging 3: ボートに穴が空いちゃった！線を書いて直してくれないかな？
      2-3 Artist Debugging 5: このコードで足とくつをかきたいのだけど、まちがっています。直（なお）せるかな？
      2-3 Artist Debugging 6: このコードだとイスの足がたりないね！さいごの足をかくためのコードを書こう。
      2-3 Artist Debugging 7: C の字がさかさまだよ！ちゃんと C になるように直（なお）せるかな？
      2-3 Artist Debugging 8: 風車がまだ完成（かんせい）してないね。何がまちがっているか、わかる？
      2-3 Artist Debugging 9: コードのまちがいを直して、花のくきをかこう！アーティストに正しくかいてもらう方法がわかるかな？
      2-3 Artist Debugging Assessment 1: 課題（かだい）：この形は小さすぎます。もっと大きくしましょう。ヒント：それぞれの辺を75ピクセルのばしてみましょう。
      2-3 Artist Free Play: やった！じゆうにあそぼう！なんでもすきなものをかいてね。
      2-3 Artist Functions 1: |-
        こんにちは！ゾンビアーティストです。お絵かき大好き！
        四角いメガネをかくので手伝ってください。ヒント：メガネのつなぎ部分は、レンズの四角より25ピクセル短くかきましょう。
      2-3 Artist Functions 10: "**フリープレイ**：ここに 2 つの関数があります。ひとつは「大きな歯車」をかく big gear
        という関数、もうひとつは「小さな歯車」をかく small gear という関数です。これらを使って、機械の内がわをかいてみましょう。"
      2-3 Artist Functions 11: '"draw a square" という関数の名前を "draw a hexagon" に変えました。hexagon
        は六角形という意味ですが、この関数がかくのは正方形のままです。"draw a hexagon" という関数を一辺が 50 ピクセルの六角形をかくように直して、その関数を使って絵をかいてください。'
      2-3 Artist Functions 11.5: |-
        さっきと同じ「六角形をかく」関数があります。

        メインプログラムを6回ループし、ループするたびに60度回転するとどうなりますか？
      2-3 Artist Functions 12: 関数は、むずかしいものを何回もかくのにうってつけです。"draw a flower" という関数を使って、花だんの残りの花をかいてください。（ヒント：植物は
        100 ビクセルずつはなれています）
      2-3 Artist Functions 2: 関数を使えば新しいブロックを作ることができます！ここでは、正方形をかくためのブロックを "draw a
        square" という名前の関数の中に移動しました。"draw a square" を使って、メガネを作ってみましょう。正方形と正方形の間は 75
        ピクセルあいています。
      2-3 Artist Functions 3: 正方形の一辺の長さが 115 ピクセルになるように関数の中身を変えて、もっと大きなメガネをかいてください。今回は、正方形と正方形の間は
        45 ピクセルです。
      2-3 Artist Functions 4: この 3 つの正方形を「くりかえし」のブロックを使ってかいてみましょう。
      2-3 Artist Functions 9: フリープレイ：雪の絵をかく関数があります。いろいろ試して冬の景色をかいてみましょう！パズルはありません。楽しみましょう！
      2-3 Artist Loops New 1: |-
        ロボットの頭をかきましょう！ 100ピクセルの正方形を作れますか？

        <br/>
      2-3 Artist Loops New 10: たくさんの V をひとつにつなぎましょう。V はループの中でかきましょう。
      2-3 Artist Loops New 11: |-
        もっとカッコイイものを作ろう！

        こんどは 24 回かきましょう。30 度左にまがるブロックをふやして、全体（ぜんたい）を「くりかえし」のブロックの中に入れましょう。
      2-3 Artist Loops New 12: 'それぞれの辺（へん）が 100 ピクセルのダイヤモンドをかきましょう。 '
      2-3 Artist Loops New 13: |-
        はじめからコードが書かれていますね。このコードで1つのダイヤモンドがかけます。

        ループさせてダイヤモンドを3回かきましょう。
      2-3 Artist Loops New 14: |-
        ダイヤモンドのコードをいろいろかえてみて、ほかにどんなパターンが作れるか見てみましょう。

        まがる角度（かくど）、ループする回数をかえてみてください。
      2-3 Artist Loops New 15: |-
        なにかおもしろいものをかいてみよう！
        <br/><br/>
      2-3 Artist Loops New 2: 正方形をかくために使ったコードがここにあります。もし、「くりかえし」のブロックを使って、このコードを 4
        回実行（じっこう）すると何が起（お）きるでしょうか。
      2-3 Artist Loops New 9: それぞれの辺（へん）が50ピクセルのシンプルな「V」の文字をかき、矢印（やじるし）を作りましょう。
      2-3 Artist Nested Loops 1: |-
        これまでループをつかって図形をかいてきましたが、こんどはループの中にさらにループを作ってください。

        このコード全体（ぜんたい）を「くりかえし」ブロックでかこんでください。

        <br/>
      2-3 Artist Nested Loops 10: パターンを完成（かんせい）させるためにコードを12回くりかえしましょう。
      2-3 Artist Nested Loops 11: このコードを4回くりかえして絵を完成（かんせい）させましょう。円をかくごとに90度まがってください。
      2-3 Artist Nested Loops 12: このコードを12回ループしてうずまきを完成（かんせい）させましょう。
      2-3 Artist Nested Loops 2: 三角形を6回くりかえしましょう。それぞれの三角形をかくごとに、60度角度を変える必要（ひつよう）があります。
      2-3 Artist Nested Loops 3: この絵をかくには三角形を12回ループする必要（ひつよう）があります。一周（いっしゅう）分の角度（360）は三角形の数（12）でわれば、三角形を1つかくごとに何度回転（かいてん）するかがわかります。
      2-3 Artist Nested Loops 4: このダイヤモンドを 12 回ループして花をかいてみましょう。ヒント：12 個のダイヤモンドは、12
        個の三角形をかいた時と同じ方法（ほうほう）でかけるよ。それぞれの図形をかいた後は、何度ずつ向（む）きをかえる必要（ひつよう）があるかな？
      2-3 Artist Nested Loops 5: このビルの窓（まど）を入れ子のループを使（つか）って完成（かんせい）させましょう。窓は一辺の長さが20ピクセルで、窓と窓の間の長さも20ピクセルです。
      2-3 Artist Nested Loops 6: 恐竜（きょうりゅう）のヒレには、30 ピクセルのギザギザが 8 つあります。三角形を 8 回ループしましょう。それぞれのループの間で前に進（すす）むことを忘（わす）れずに。
      2-3 Artist Nested Loops 7: 三角形を10回ループして太陽（たいよう）をかきましょう。三角形を1つかくごとに移動（いどう）して回転（かいてん）する必要（ひつよう）があります。一周（いっしゅう）ぶんの角度を三角形の数でわると、何度回転すればいいかがわかります。
      2-3 Artist Nested Loops 8: |-
        絵に草を足してみましょう。
        草を50ピクセルずつはなしてかいてください。
      2-3 Artist Nested Loops 9: さいごに花をかいて完成（かんせい）です。ダイヤモンドを12回くりかえすと花がかけます。
      2-3 Artist Nested Loops Free Play: 自由（じゆう）に遊（あそ）んでください。入れ子のループを使って好（す）きなものをかこう。
      2-3 Bee Conditionals 11: 'にわをとび回って、ミツのある花からミツを集（あつ）めましょう。 '
      2-3 Bee Conditionals 13: すべてのミツを集めて、ハチミツを作ってください。ムラサキ色の花には、ミツがあるか、わかりませんよ。
      2-3 Bee Conditionals 14: できるだけ少ないブロック数で、すべてのミツを集（あつ）めて、はちみつを作ってください。ミツがない花から、ミツはとれませんよ。
      2-3 Bee Conditionals 15: |-
        この階段（かいだん）のパターンはおなじみのはずです。

        できるだけ少ないブロックで、ミツのある花からだけミツ集（あつ）めることができますか？
      2-3 Bee Conditionals 2: おなかすいた！なるべく少ないブロックで、すべての花のミツを集（あつ）めたいです。
      2-3 Bee Conditionals 3: '花のミツをぜんぶあつめて、ハチミツを作ってください。なるべく少ないブロックをつかってね。  '
      2-3 Bee Conditionals 5: |-
        ムラサキ色の花は、まほうのお花です。

        パズルをためすたびに、ムラサキ色の花は、ミツが1つあったり、なかったりします。しかし、コードを実行（じっこう）するまで、数もわかりません！

        ムラサキ色の花にミツがなかった場合は、ミツをあつめないように注意（ちゅうい）してください。さいしょに「もし花のミツが」ブロックをつかって、ミツが1かどうかをチェックしなければなりません。
      2-3 Bee Conditionals Assessment 1: 課題（かだい）：すべてのミツを集めて下さい。ムラサキの花にミツがないときは、ミツをとらないように気をつけましょう。
      2-3 Bee Debugging 1: このブロックが気になります。ミツを集（あつ）めてはちみつを作るためにエラーを直してください。
      2-3 Bee Debugging 10: 花のみつをぜんぶ集（あつ）めて、ぜんぶハチミツにしたいです！ エラーを直してください。
      2-3 Bee Debugging 2: バグが見つかったかな？ エラーを直して花のミツを集（あつ）めよう。
      2-3 Bee Debugging 3: すべての花のミツを集（あつ）めるために、エラーを直してください。
      2-3 Bee Debugging 5: |-
        花のミツのにおいがする！
        エラーを直して、花のミツを集（あつ）めよう。
      2-3 Bee Debugging 6: エラーを直して、花からミツを集（あつ）めてください。
      2-3 Bee Debugging 9: |-
        がまん強くやろう！

        このプログラムのいくつかのまちがいを直しましょう。花のミツをぜんぶあつめてハチミツもぜんぶ作る必要があります。
      2-3 Bee Debugging Assessment 1: |-
        課題（かだい）：今までの成果（せいか）を見せる時が来ました！

        エラーを直して、花のミツをぜんぶ集（あつ）めてハチミツを作りましょう。
      2-3 Bee Functions 1: |-
        関数は、ある仕事をするための命令のかたまりです。

        花からミツを集めるために、関数 `get 2 nectar`を作ろう。
      2-3 Bee Functions 10: ムラサキの花には、ミツが 1 か 0 あります。ミツのあるムササキの花からだけミツを集める関数を作りましょう。
      2-3 Bee Functions 2: ひとつの作業を行うひとまとまりのコードを関数（かんすう）といいます。"get 5" という関数を使うと、一度に花のミツを
        5つとることができます。
      2-3 Bee Functions 4: '"move and nectar" 関数は、ハチを回転させ、花のミツを集め、スタート地点までハチをもどします。この関数を使って花のミツをぜんぶ集めましょう。'
      2-3 Bee Functions Assessment 1: "**テスト**：指定の関数を使って花からミツを集めましょう。"
      2-3 Bee Functions Assessment 2: 課題：回転し、前へすすんで3つのハチミツを作り、ハチが回転したところまでもどる関数を作りましょう。
      2-3 Bee Loops 1: 花にはミツが 1つずつあります。ミツを花から集（あつ）めましょう。
      2-3 Bee Loops 13: 課題（かだい）：「くりかえし」ブロックを使ってミツをすべて集（あつ）めましょう。
      2-3 Bee Loops 3A: すべての花のミツを集（あつ）めるのに「くりかえし」ブロックを使（つか）ってみましょう。
      2-3 Bee Loops 3B: こんどは新しい「くりかえし」ブロックをつかって、すべての花のミツを集（あつ）めて、はちみつを作ってみましょう。
      2-3 Bee Loops 4: |-
        おおいそがしだ！

        先ほどと同じように「くりかえし」ブロックを使（つか）いますが、こんどは「回転」ブロックも使（つか）ってみましょう。
      2-3 Bee Loops 4A: |-
        このパズルでループは何回つかえるかな？

        ループはお友だち！なるべくすくないブロックでこのパズルをクリアするために、いくつかループを使ってください。
      2-3 Bee Loops 5: "「くりかえし」ブロックを使（つか）って階段（かいだん）を降（お）り、できるだけ少ないブロックで花のミツを集（あつ）めましょう。"
      2-3 Bee Loops 7: |-
        お花畑（はなばたけ）だ！

        それぞれのお花からミツを集めましょう。

        7つより少ないブロックでできるかな？
      2-3 Bee Loops 8: |-
        ムラサキの花は、ミツの数がわかりません。
        「以下の間くりかえし」ブロックを使って、花のみつをすべて集めましょう。このくりかえしは条件（じょうけん）が真になるまで続きます。今回は「花のミツ＞0」です。
      2-3 Bee Loops Assessment 1: "**課題（かだい）**：「以下の間」ブロックを使って、お花からすべてのミツを集めましょう。"
      2-3 Maze 1: 'いじわるなブタをつかまえるのをてつだってくれる? 「前にすすむ」をふたついっしょに重（かさ）ねて「実行（じっこう）」をおしてみましょう。 '
      2-3 Maze 12: |-
        「くりかえし」というまほうのブロックが出てきました。「くりかえし」ブロックをつかうと、何度もコードをループさせることができます。

        「くりかえし」の中に「前にすすむ」ブロックを1つだけつかったループを作ることで、ブタさんをつかまえることができるかな？
      2-3 Maze 13: ブタさんのところにつれていって！ 今回は「前へうごく」ブロックが1つだけしかつかえません。
      2-3 Maze 15: "「くりかえし」を2つ使って、なるべく少ない数のブロックでブタさんをつかまえてみよう。"
      2-3 Maze Loops 18: |-
        なるべく少ないブロックでひまわりがほしい！
        「くりかえし」の中に、さらに「くりかえし」を入れて、コードの量（りょう）をへらしてみよう。
      2-3 Maze Loops 19: |-
        レベルを上げてみました！
        ループを使（つか）いつつ、なるべく少ないループでゾンビさんをひまわりにつれて行きましょう。
      2-3 Maze Loops Assessment 1: '課題（かだい）：5ブロックだけで、ひまわりまでつれていってください。 '
      4-5 Artist 1: '四角形をかくのを手伝ってください。(それぞれの線の長さは300ピクセル) '
      4-5 Artist 11: 緑のラインを完成させましょう。ラインの長さは 300 ピクセルで、15 ピクセルはなしてください。
      4-5 Artist 2: 正方形を作り上げるために「くりかえし」ブロックを使って、このコードをループさせてください。
      4-5 Artist 3: 長方形の花だんの周囲の長さは、600です。長辺の長さは 200 です。この長方形をかいてください。
      4-5 Artist 3.5: オーケー、このコードを走らせたらどうなるか考えてみましょう。（「実行」をおしてみるのもよいですね。）つぎに、それをくりかえして図を作り上げてください。毎回（たぶん）ちがう色になるはずです。
      4-5 Artist 4: くりかえしの回数を入れて、色のついた円を作ってください。ヒント：1回転は何度ですか？
      4-5 Artist 5: さいしょからあるループを使ってパズルを作り上げるには、「???」を何に置きかえればいいでしょうか？
      4-5 Artist 6: 正三角形のそれぞれの角度は 60 度です。辺の長さは 200 ピクセルです。図を完成させましょう。
      4-5 Artist 7: この直角三角形のそれぞれの頂点（ちょうてん）の角度は、30°、60°、90°です。ななめの辺の長さは、100ピクセルの高さの倍です。図を作り上げてください。
      4-5 Artist 8: サッカー場の真ん中の線は、サイドラインに対して直角です。このサッカー場の周囲の長さは 800 ピクセルで、長さは 240 ピクセルです。高さはどのくらいでしょう？外がわの線と真ん中の線をかいてください。
      4-5 Artist 9: 図が「かがみうつし」になるように、残りの半分もかいてみましょう。正三角形のそれぞれの辺の長さは 50 ピクセルです。
      4-5 Artist Assessment 1: '課題: ループを使って、正三角形をかきましょう。それぞれの長さは、300 ピクセルです。'
      4-5 Artist Free Draw 1: 自由にお絵かき！思いつくままに図をかいてみましょう。
      4-5 Artist Patterns 1: ループを使って、大きさ 20 ピクセルの正方形をかけるかな？
      4-5 Artist Patterns 10: 'このコードは 2 列の六角形をかきます。これを 4 回くりかえして、ハチの す 全体をかきましょう。ヒント:
        アーティストが画面の外に行かないようにするには、外がわのループで 120 ピクセルもどる必要があるよ。'
      4-5 Artist Patterns 11: このコードを何回ループすれば半円をかけるかな？
      4-5 Artist Patterns 12: くりかえしの部分をコピーして、右ではなく左に回るようにしてみてください。何が起きるでしょうか。これをくりかえして波線をかいてみましょう。
      4-5 Artist Patterns 13: 全体を 4 回ループして、額（がく）を作りましょう。カドの部分に注意してください。ただ 90 度回ればいいわけではありません！3
        度回ることを 60 回くりかえすと半円になります。このコードのどの部分を使えば、丸い角の部分（円の 4 分の 1）がかけるでしょうか。
      4-5 Artist Patterns 2: |-
        「くりかえし」の中に、べつの「くりかえし」を入れることを、「入れ子」と言います。
        「くりかえし」ブロックを足して、15 この正方形を一列に書いてください。
      4-5 Artist Patterns 3: |-
        では次のレベルに進みましょう！
        入れ子のループで、この図形をかいてください。
        横一列をかき終えたら、アーティストのいちをもどして、それから次の一列をかくようにします。
        さいしょからあるブロックたちの、どれかを、くりかえしで使います。
      4-5 Artist Patterns 4: このダイヤモンドは1辺50ピクセルで、角度は120度と60度です。ループを使って、かいてください。
      4-5 Artist Patterns 5: このコードをくりかえして、ダイヤモンドを6こ1列にならべてみましょう。ダイヤモンドのプログラムを2回ではなく3回くりかえすように
        かえたことに注意してください。なぜだと思いますか?
      4-5 Artist Patterns 6: この図形をかくには、さいしょからあるブロックを何回くりかえせばいいでしょうか？
      4-5 Artist Patterns 7: さっきのパズルのコードをいじって、もっと複雑（ふくざつ）なパターンを作ってみましょう。いまダイヤモンドがどれぐらい重なっているか確認してから、さいしょの「うしろへジャンプする」を100から半分の50に変えてみてください。さて今度は、アーティストは2番目の「うしろにジャンプする」でどれぐらいジャンプしないといけないでしょう?
      4-5 Artist Patterns 8: ループを使って、40ピクセルの辺と60度の角を持つ六角形をかきましょう。
      4-5 Artist Patterns 9: 'コードを 3 回くりかえして、列全体をかきましょう。ヒント: 六角形の左はしの頂点から右はしの頂点までの幅（はば）は
        80 ピクセルです。'
      4-5 Artist Patterns 9.5: このコードをループして、六角形を 2 列分かきましょう。2 列目は右側にずれるので気をつけましょう。
      4-5 Artist Patterns Free Play: 自由時間です。オリジナルのパターンを作ってみましょう！
      4-5 Bee Conditionals 1: 雲のせいでよく見えない！雲の下に花があるか調べて、花がある場合だけミツを取りましょう。注意：実行時に変わることがあります！
      4-5 Bee Conditionals 2: |-
        もっと雲がある！

        花のミツを集める前に、雲が花をかくしていないかチェックしてください。

        ヒント：すべての雲が同じようにかくすわけではありません！
      4-5 Bee Conditionals 4: 雲の下には花があるかもしれないし、ハチの巣があるかもしれません！もし花ならミツを集めるのに「もし…やること…でなければ」ブロックを使いましょう。もし花でなければ、ハチの巣があるので、ハチミツを作りましょう。
      4-5 Bee Conditionals 5: |-
        雲の下には花かハチの巣のどちらかがあるでしょう！

        花がある場合はミツを集めるために「もし…やること…でなければ」ブロックを使ってください。
        そうでなければハチの巣があるので、ハチミツを作りましょう。
      4-5 Bee Conditionals 6: |-
        この花には1つ、2つ、または3つのミツがあります。

        花が持っているのと同じミツを手に入れるために「もし…」「もし…やること…でなければ」ブロックを使いましょう。

        ヒント：パズルを実行するたびに花のミツの量は変わることがあります！
      4-5 Bee Conditionals 7: |-
        これらの花には3、2、または1つのミツがあります。

        「check purple flower (ムラサキの花を調べる)」関数を完成させて、その関数を使ってすべてのミツを花から集めてください。
      4-5 Bee Conditionals 8: |-
        「花を調べてはちみつを作る（check flower make honey）」という関数の中身を作ってください。

        関数を作るときは、ムラサキの花のミツが3、2、または1つのミツを持っているかどうかを調べて、すべてのミツを集めましょう。そして前へすすみ、ハチミツを作ってください。
      4-5 Bee Conditionals Assessment 1: "**テスト**：この雲は、ミツを1つ集められる花か、1つのハチミツを作れるハチの巣の、どちらかを
        かくしています。\nミツを集めるかハチミツを作る (get nectar or make honey) 関数を完成させ、それをよび出すことで、ミツを集めるかハチミツを作ってください。 "
      4-5 Bee Debugging 1: ブロックがバグってる。直してくれる？
      4-5 Bee Debugging 6: |-
        ムラサキ色の花は、パズルを実行するたびにミツの数が ちがいます。

        プロックを直して花からすべてのミツを集めてください。
      4-5 Bee Debugging Assessment 1: "**課題（かだい）**：コードを直してください。"
      4-5 Bee Nested Loops 2: '入れ子のループ（ネスト・ループ）を使って、それぞれの花からすべての花のミツを集めてください。 '
      4-5 Bee Nested Loops 4: "それぞれの花からすべての花のミツを集め、ハチの巣でハチミツを作ってください。\n\n入れ子のループ（ネスト・ループ）を使うのです。 "
      4-5 Bee Nested Loops Assessment 1: "**課題（かだい）**：「くりかえし（ループ）」を使って、すべての花のミツを集めて、すべてのハチミツを作ってください。"
      4-5 Maze 7: すぐにひまわりがほしい！11ブロック以下でパズルがとけるかな？
      4-5 Maze 9: |-
        「までをくりかえす」という新しいブロックができました。これにより、ゾンビさんはひまわりを手に入れるまでコマンドをくりかえし続けることができます。

        できるだけ少ないコマンドでこのパズルをとくために「までをくりかえす」ブロックを使ってください。
      4-5 Maze Assessment 1: 課題（かだい）：できるだけ少ないブロックでひまわりにたどりつこう。
      4-5 Maze Conditionals 1: "「までを くりかえします」ブロックを使って、ゾンビさんをヒマワリまで つれていきましょう。"
      4-5 Maze Conditionals 10: "ブロックをあと3つ足して、ゾンビさんが むずかしい迷路（めいろ）を歩くのを助けてくれますか？\\\r\n\\\rもしそれができれば、どんなに長くカーブした道でも歩けるようになります。"
      4-5 Maze Conditionals 2: "「までを くりかえします」ブロックを使って、ゾンビさんをヒマワリまで つれていきましょう。"
      4-5 Maze Conditionals 3: "「もし」ブロックを使って、いつ まがる かを決めてください。ヒント：あともう１つのブロックがひつようです。 "
      4-5 Maze Conditionals 4: Ok。さっきのパズルと同じですが、「もし」ブロックと「くりかえし」ブロックをどうやっていっしょに使ったかを思い出してみましょう。
      4-5 Maze Conditionals 5: ひまわり食べたいの！「もし」ブロックを使って、できるだけ少ない数のブロックで、わたしをそこまで連れて行ってください。
      4-5 Maze Conditionals 6: ひまわり食べたいの！「もし」ブロックを使って、できるだけ少ない数のブロックで、わたしをそこまで連れて行ってください。
      4-5 Maze Conditionals 7: いいね。練習のためにもう一度やりましょう。・・・それほど ちがい はないけれど、パックンフラワーたちに気をつけて！
      4-5 Maze Conditionals 8: "「もし／でなければ」ブロックは条件（じょうけん）を調べて、どちらかの処理（しょり）を実行するものです。このブロックを使ってわたしをひまわりの所へ連れて行って。"
      4-5 Maze Conditionals 9: "「もし／でなければ」ブロックでもう一度練習しよう。１回でクリアできるかな？"
      4-5 Maze Conditionals Assessment 1: "**課題（かだい）**「までを くりかえし」と「もし／でなければ」ブロックを使って、わたしをひまわりの所へ連れて行ってください。できるだけブロックを少なくしてください。"
      4-5 Nested Loops 1: これらの三角形をかくためのコードを完成させてください。さいしょの１つは用意されています。ヒント：３つの三角形をかくのに３６０度回転します。
      4-5 Nested Loops 11: 入れ子の「くりかえし（ループ）」を使って、１０この四角形でできたこの歩道をかくことができますか？それぞれの四角形は３０ピクセルです。
      4-5 Nested Loops 12: 入れ子の「くりかえし（ループ）」を使って、これらの３６この三角形をかけますか？
      4-5 Nested Loops 2: '10回、三角形をかきます。そのためには「くりかえし」ブロックを追加（ついか）し、その中に灰色（はいいろ）のブロックを全部入れます。「くりかえし」のなかに「くりかえし」を入れることを「入れ子」と言います。  '
      4-5 Nested Loops 3: |-
        さいしょからあるコードを別のループの中に入れて、太陽を作りましょう。

        回転する前に三角形の長さだけ前にジャンプする必要があります。
      4-5 Nested Loops 5: 風車（かざぐるま）を作るために、与えられたコードを くりかえし にしましょう。
      4-5 Nested Loops 6: 三角形のコードをくりかえすことで、六角形をかけますか？
      4-5 Nested Loops 7: このデザインを１０回ループさせましょう。ループするたびに、どのくらい回転させればいいですか？
      4-5 Nested Loops 8: 'このデザインを６回くりかえしましょう。くりかえすたびにどれくらい回転する必要があるでしょうか。（ヒント：３６０÷６は？） '
      4-5 Nested Loops 9: ワニの歯を書いてください！
      4-5 Nested Loops Assessment 1: "**課題（かだい）**：入れ子のループ（ネスト・ループ）を使ってこの絵を完成させてください。"
      4-5 While Loops 1: わたしを穴のところまで動かして、シャベル２はいで穴をうめましょう。「あなをうめる」ブロックを使ってください。
      4-5 While Loops 2: わたしを土の山へ動かして、スコップ５はいぶんの土をへらしてください。「つちをかたづける」ブロックを使ってね。
      4-5 While Loops 3: わたしを山まで動かして、すべての土をかたづけてください。それから穴（あな）のところへ行き、穴をすべてうめてください。ヒント：できるだけ少ないブロックで使ってください。
      4-5 While Loops 4: 'すごく大きい穴（あな）を見つけてびっくりしました。シャベル何はいの土がいるのか、わかりません。地面が平らになるまで穴をうめるプログラムを作れますか？
        ヒント：「以下の間くりかえし（while loop）」を使ってみてください。  '
      Alien Defender: "**アイデア** プレイラボのなかにあるゲームをつくろう！"
      CSD U6 iter predict bubbles: "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)"
      Course 4 Artist 1: '四角形をかくのを手伝ってください。(それぞれの線の長さは300ピクセル) '
      Course 4 Artist 12: |-
        自由研究：あなたは、このようなパターンの書き方を、すべて学びました。この絵が気に入ったら、にたデザインを書いてみて。自分のすきなように、作り直してもいいよ。
        ヒントがほしいときは、ランプをクリックしてね。
      Course 4 Artist 13: ここに、真っ白なキャンバスがあります。線のかたちや、スタンプを使って、あなたが書きたいものを、自由に書いてください！
      Course 4 Artist 2: くりかえしを使って、四角形（そとがわの、大きな四角形だけ）を書いてください。(それぞれの辺は300ピクセルです)
      Course 4 Artist 3: "「くりかえし」を使えば、かんたんに、このデザインが書けるよ。まずはプログラムを動かして(「実行」をクリックして)
        何が起こるか見てみよう。その後に「くりかえし」を、使ってデザインを完成させよう。"
      Course 4 Artist 4: くりかえしの回数を入れて、色のついた円を作ってください。ヒント：1回転は何度ですか？
      Course 4 Artist 5: 図が対称（たいしょう）になるように、下に三角形を3つ書きましょう。正三角形のそれぞれの辺の長さは50ピクセルです。ヒント：少しプログラムをかえたら、実行して、動きをみながら考えましょう。
      Course 4 Artist 6: 正三角形を3つ書くプログラムを完成（かんせい）させてください。
      Course 4 Artist 8: 太陽の絵を書いてください。「くりかえし」ブロックを加えて、灰色（はいいろ）のブロック全部を中に入れてみてね。
      Course 4 Artist 8a: この形を、おぼえてますか？ヒントなしで、これを書いてみよう！
      Course 4 Artist 9: このデザインを書くには、10 回くりかえします。ヒント：1回書いたら、少しまがりましょう。
      Course 4 Artist For Loops 6a: |-
        さっきのプログラムを、3ヵ所かえるだけで、この絵を書くことが出来ます！
        ヒント：

        1.  線の太さは？
        2.  まがる向きは？
        3.  いくつ「ずつ」カウントする？
      Course 4 Artist Vars 1: 正三角形を書きましょう。それぞれの長さが100ピクセルぴったりの正三角形です。
      Course 4 Artist Vars 2: 「前に動く"150"ピクセル」のかわりに「前に動く"length"ピクセル」ブロックを使います。"length"は、変数（へんすう）で、あなたの好きな数にできます。この三角形を書くために、"length"に150をセットしてください。
      Course 4 Artist Vars 4: |-
        高さが、はばの2倍の四角形を書きます。
        "width" （ウィドゥス、はばの意味）という変数に100 をセットします。計算ブロックを使ってプログラムを仕上げてください。
        ヒント：四角形の高さは、width × 2 です。
      Course 4 Bee 1: |-
        実行するまで、「？」の下に、何があるかは分かりません！
        「もし」ブロックを使って、「？」の下に、何があるかチェックしてください。そして、もし花だったら、花のミツをとってください。
      Course 4 Bee 2: "「もし～」ブロックを使って、全ての「？」をチェックしてください。そのとき、「？」が花なら、花のミツをとり、「？」がハチの巣なら、ハチミツを作ります！"
      Course 4 Bee 3: "「？」は、花か、ハチの巣か、のどちらかです。「もし～」ブロックを使って、花の時はミツをとって、ちがう (つまりハチの巣)
        時は、ハチミツを作りましょう。"
      Course 4 Maze 4: 使うブロックの数が少なくてすむように、「くりかえし」ブロックを使ってみて・・
      CourseD_Dance_Party_01: |-
        _ダンスパーティーをしよう！_

        さいしょのダンサーを作ろう。
        「新しくつくる」ブロックを、ワークスペースの「セットアップ」ブロックの中に入れて、実行ボタンを押してください。

        -   _もっと情報が必要だったり、追加のチャレンジに挑戦したい時は、左側の電球をクリックしてください。_
      CourseD_Dance_Party_02: |-
        ムースを踊らせてみよう！

        このブロック <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">フロス</title><title name="DIR">-1</title></block></xml> をワークスペースにドラッグしてきます。そして<xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"小節"</title></block></xml> ブロックの下につなげてください。ダンサーは4小節後に新しい動きを はじめます。

        \*\* 小節\*\*は音楽の中で時間の長さを数えるのに使う単位です。このチュートリアルでは、1小節は4拍になります。
      CourseD_Dance_Party_03: |-
        _グルーブしてる？！_

        ワークスペースに <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"小節"</title></block></xml> ブロックを追加して、6小節後にダンサーが新しい動きを始めるようにしましょう。
      CourseD_Dance_Party_04: |-
        _ダンスに、もっと閃きを！_

        ダンサーの後ろに「背景エフェクト」をくわえる、新しいブロックがあります。音楽に合わせてエフェクトを変えてみよう！
      CourseD_Dance_Party_05: |-
        新しいブロックを使って、ダンサーの動きを **2小節ごとに**変えてみよう！

        \*’(次へ)’、’(戻る)’、または ’(ランダム)’を使えば、コードを実行するたび異なる動きをするよう、ダンサーに指示できます。
      CourseD_Dance_Party_06: |-
        _もっとダンサーを増やそう！_

        ’backup\_dancer1’という名前のバックダンサーを追加して、ネコと一緒に踊らせよう。
      CourseD_Dance_Party_08: |-
        各ダンサーは、見ためをコントロールする_プロパティ_ を持っています。

        「おおきさ」を小さくすれば、ダンサーが後ろで踊っているように見えます。2人のバックダンサーが後ろで踊るように、同じ「おおきさ」にしてください。
      CourseD_Dance_Party_09: |-
        ダンサーは、色のレイヤーを追加する「色合い」プロパティを持っています。ダンサーのうちの1人の「色合い」を変えてみましょう。
        \*色合いは、あなたがダンサーの色として選択した色と混ざり合います。
      CourseD_Dance_Party_10: |-
        これで、ダンサーのプロパティを変える方法がわかりました。以下のブロックを使用して、同じプロパティが音楽に反応して自動的に変わるよう設定することもできます。
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"スケール"</title>
        <title name="RANGE">"ベース"</title>
        </block></xml>

        このプログラムでは、音楽の”低音”（低い音）の大きさを利用してダンサーの高さをコントロールします。他のダンサーも、音楽に反応させることができますか？
      CourseD_Dance_Party_11: |-
        <xml><block type="Dancelab_whenKey"></block></xml> ブロックを使うと、上向きの矢印が押されたときにコードを実行することができます。

        ダンスの動きを変更したり、ダンサーのプロパティを変更したり、短い動きを1回だけさせることもできます。クリエイティブになって、あたらしいブロックたちを見てみましょう！
      CourseD_Dance_Party_11_5: |-
        このブロックをチェックしてみましょう。

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"アヒル"</title>
        <title name="LAYOUT">"円"</title>
        </block></xml>

        次は、たくさんのダンサーを一度に作成します！

        "すべてのアヒル”のブロックを使用して、アヒルが全員一度にダンスするコードを書きましょう。
      CourseD_Dance_Party_11b: 思いっきりダンスする時間です！左矢印キーが押されると、ネコが「ダブ」の動きをします。右矢印キーを押したら、ロボットが「ドロップ」の動きをするようにしましょう。
      CourseD_Dance_Party_12: グルーブをつづけて！自分だけのダンスを作成して、友達と共有しましょう。
      CourseE_HOC 2018 Level_1: この先の航海には物資が必要です。**チェスト** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png)
        から**ボート** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        を手に入れましょう。
      CourseE_HOC 2018 Level_10: 海底神殿のどこかに**イカ** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        が隠れています。見つけられるかな？
      CourseE_HOC 2018 Level_11: 黒いコンクリートの周りに**海晶ブロック** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        の壁を作りましょう。すると**コンジット** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        が起動してあなたのチャレンジも終了です！
      CourseE_HOC 2018 Level_2: 広い海では泳ぐよりもボートの方がずっと楽です！桟橋の端まで進んでボートに飛び乗りましょう。
      CourseE_HOC 2018 Level_3: オールでボートを操縦して広い海を渡り**タラ** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png)
        をつかまえましょう。
      CourseE_HOC 2018 Level_4: "**イルカ** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png)
        にタラを食べさせましょう。リピートブロックを使うとより速く海を渡れます。"
      CourseE_HOC 2018 Level_5: どこかに**オウムガイの殻** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        が隠れているよ！沈没船の中を探検して**チェスト** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)
        までたどりついて。
      CourseE_HOC 2018 Level_6: 外はとっても寒そうです！海底神殿に行く途中で**サケ** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        をつかまえよう。
      CourseE_HOC 2018 Level_7a: 海底神殿を見つけました。砂岩を調べて**海晶ブロック** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png)
        のお宝が入っている**チェスト** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        を探そう。
      CourseE_HOC 2018 Level_8: 初めは氷山だったのに今は溶岩？この火山島を通り抜けてサンゴ礁の**熱帯魚** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        を見つけましょう。
      CourseE_HOC 2018 Level_9b: サンゴ礁に着いた。次は**海の中心** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)
        を探そう！青と赤のサンゴを使ってお宝の**チェスト** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png)
        にたどりつこう。
      Dance Party 7: 最後に「私のベル」という新しいベルスプライトを追加します。
      Dance Party 7_2019: 最後に「私のベル」という新しいベルスプライトを追加します。
      Dance Party Freeplay: |-
        さあ、あなたのエイリアンディスコを作りましょう！ひらめきが欲しいですか？次のアイデアを試してみてください。

        -   ベルスプライトを2つ作って、エイリアンにそれぞれ別のダンスの動きをさせる
        -   エイリアンが互いに触れるたびに新しいダンスの動きをさせる
      Dance Party Freeplay_2019: |-
        さあ、あなたのエイリアンディスコを作りましょう！ひらめきが欲しいですか？次のアイデアを試してみてください。

        -   ベルスプライトを2つ作って、エイリアンにそれぞれ別のダンスの動きをさせる
        -   エイリアンが互いに触れるたびに新しいダンスの動きをさせる
      Dance_Party_01: |-
        _ダンスパーティーをしよう！_

        さいしょのダンサーを作ろう。
        「新しくつくる」ブロックを、ワークスペースの「セットアップ」ブロックの中に入れて、実行ボタンを押してください。

        -   _もっと情報が必要だったり、追加のチャレンジに挑戦したい時は、左側の電球をクリックしてください。_
      Dance_Party_02: |-
        ムースを踊らせてみましょう！

        このブロック <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">フロス</title><title name="DIR">-1</title></block></xml> をワークスペースにドラッグしてきます。そして<xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"小節"</title></block></xml> ブロックの下につなげてください。ダンサーは4小節後に新しい動きをはじめます。

        **小節**は音楽の中で時間の長さを数えるのに使う単位です。このチュートリアルでは、1小節は4拍になります。
      Dance_Party_03: |-
        _グルーブしてるかい？_

        ワークスペースに <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"小節"</title></block></xml> ブロックを追加して、6小節後にダンサーが新しい動きを始めるようにしましょう。
      Dance_Party_04: |-
        _ダンスに、もっと閃きを！_

        ダンサーの後ろに「背景エフェクト」をくわえる、新しいブロックがあります。音楽に合わせてエフェクトを変えてみよう！
      Dance_Party_05: |-
        新しいブロックを使って、ダンサーの動きを **2小節ごとに**変えてみよう！

        \*’(次へ)’、’(戻る)’、または ’(ランダム)’を使えば、コードを実行するたび異なる動きをするよう、ダンサーに指示できます。
      Dance_Party_06: |-
        _もっとダンサーを増やそう！_

        ’backup\_dancer1’という名前のバックダンサーを追加して、ネコと一緒に踊らせよう。
      Dance_Party_08: |-
        各ダンサーは、見ためをコントロールする_プロパティ_ を持っています。

        「おおきさ」を小さくすれば、ダンサーが後ろで踊っているように見えます。2人のバックダンサーが後ろで踊るように、同じ「おおきさ」にしてください。
      Dance_Party_09: |-
        ダンサーは、色のレイヤーを追加する「色合い」プロパティを持っています。ダンサーのうちの1人の「色合い」を変えてみましょう。
        \*色合いは、あなたがダンサーの色として選択した色と混ざり合います。
      Dance_Party_10: |-
        これで、ダンサーのプロパティを変える方法がわかりました。以下のブロックを使用して、同じプロパティが音楽に反応して自動的に変わるよう設定することもできます。
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"スケール"</title>
        <title name="RANGE">"ベース"</title>
        </block></xml>

        このプログラムでは、音楽の”低音”（低い音）の大きさを利用してダンサーの高さをコントロールします。他のダンサーも、音楽に反応させることができますか？
      Dance_Party_11: |-
        <xml><block type="Dancelab_whenKey"></block></xml> ブロックを使うと、上向きの矢印が押されたときにコードを実行することができます。

        ダンスの動きを変更したり、ダンサーのプロパティを変更したり、短い動きを1回だけさせることもできます。クリエイティブになって、あたらしいブロックたちを見てみましょう！
      Dance_Party_11_5: |-
        このブロックをチェックしてみましょう。

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"アヒル"</title>
        <title name="LAYOUT">"円"</title>
        </block></xml>

        次は、たくさんのダンサーを一度に作成します！

        "すべてのアヒル”のブロックを使用して、アヒルが全員一度にダンスするコードを書きましょう。
      Dance_Party_11b: 思いっきりダンスする時間です！左矢印キーが押されると、ネコが「ダブ」の動きをします。右矢印キーを押したら、ロボットが「ドロップ」の動きをするようにしましょう。
      Dance_Party_12: グルーブをつづけて！自分だけのダンスを作成して、友達と共有しましょう。
      Dance_Party_extras_battle: |-
        # ダンスクルー

        2人のクルーによるダンスオフです。矢印キーで片方のダンサーを、「w、a、s、d」キーで他方のダンサーをコントロールします。友達とダンスオフをしてみて、それからこのダンスオフをより良くしてみてください。

        -   ダンスのコントロールに使うキーを追加してください
        -   キーが押されたときに、バックアップダンサーも動くようにしてください
        -   可視性の設定を使って4 小節ごとにダンサーを入れ替えてください
      Dance_Party_extras_every_beat: |-
        # 四分音符

        ここにあるダンスのほとんどは全音節を使いますが、各小節は四分音符で構成されています。このダンスでは、「0.25小節ごと」を使って、ダンサーにすべての四分音符に合わせて拍手をさせます。

        このダンスでも_conditional_のブロックを使って、「0.25小節」のブロックでダンスを変更するタイミングをコントロールします。条件ブロック内の数字を変更して、ダンスがどのように変わるか試してみてください。

        -   違う長さの音符で試してみてください (0.5で二分音符、0.125 で八分音符)。
        -   「小節後」イベントをいくつか追加してください。
            \*「小節」を「秒」に切り替えて、その方法でダンスのタイミングを計ってみてください。
      Dance_Party_extras_layout: |-
        # フォーメーションにつきましょう!

        このダンスを見てみてください。ダンス中を通し、「レイアウト」ブロックを使用してバックアップダンサーのフォーメーションを変えています。これらのアイデアを取り入れて、発展させてください。

        -   別のレイアウトでダンサーをもう1グループ作成してください
        -   キーが押されたときにレイアウトを変更してください
        -   ダンサーのフォーメーションを変えるときにプロパティを変更してください
      Dance_Party_extras_on_beat: |-
        # ベース、ミドル、トレブル

        このダンスは、「ピーク」イベントを使用して、音楽の様々な部分の音量が上がるときにコードを始動させします。色々な曲を使って、どのようにダンスが変わるか試してみてください。
      Dance_Party_extras_speed: |-
        # スピードアップ、スローダウン

        最後のダンスは、「速度設定」ブロックを使用してそれぞれのダンサーの動くスピードをコントロールします。歌の色々なタイミングで色々なスピードを試してみてください。どうぞ自由にこのダンスを変更してみてください。または今までのダンスに戻って、もっとクールにしてみましょう。
      Dance_Party_extras_visible: |-
        # どこへ行った？

        このダンスでは、2つのグループのダンサーたちを表示したり非表示にしたりします。それを確認して、自分自身の工夫を追加してみてください。

        -   ダンサーのグループをもう1つ追加してください
        -   矢印キーを使用してダンサーを表示したり非表示にしたりしてください
        -   すべてのダンサーを非表示にして、エキサイティングな背景効果に切り替えてください
      Function intro Ryan: "ワークスペースに、「橋をかける」という名前の **関数** があります。川を渡るために必要なコードはその関数の中にすべて入っています!\\\r\n
        \\\r\n小さな緑色のブロックをワークスペースに 2 回はめこんで、{currentPlayerName} がレッドストーンのたいまつ [redstone_torch]
        にたどり着けるようにしましょう。"
      Function intro Ryan_2019: "ワークスペースに、「橋をかける」という名前の **関数** があります。川を渡るために必要なコードはその関数の中にすべて入っています!\\\r\n
        \\\r\n小さな緑色のブロックをワークスペースに 2 回はめこんで、{currentPlayerName} がレッドストーンのたいまつ [redstone_torch]
        にたどり着けるようにしましょう。"
      Geometric Sun: "**アイデア**多角形を使って、絵をかいてみよう。"
      Geometric Sun_2018: "**アイデア**多角形を使って、絵をかいてみよう。"
      HOC 2018 Level_1: この先の航海には物資が必要です。**チェスト** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png)
        から**ボート** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        を手に入れましょう。
      HOC 2018 Level_10: 海底神殿のどこかに**イカ** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        が隠れています。見つけられるかな？
      HOC 2018 Level_11: 黒いコンクリートの周りに**海晶ブロック** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        の壁を作りましょう。すると**コンジット** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        が起動してあなたのチャレンジも終了です！
      HOC 2018 Level_12: おめでとうございます！目の前には水の世界が広がっています。サンゴ礁を作ろう！火山も！沈没船も！自由に作ってみてください。
      HOC 2018 Level_2: 広い海では泳ぐよりもボートの方がずっと楽です！桟橋の端まで進んでボートに飛び乗りましょう。
      HOC 2018 Level_3: オールでボートを操縦して広い海を渡り**タラ** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png)
        をつかまえましょう。
      HOC 2018 Level_4: "**イルカ** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png)
        にタラを食べさせましょう。リピートブロックを使うとより速く海を渡れます。"
      HOC 2018 Level_5: どこかに**オウムガイの殻** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        が隠れているよ！沈没船の中を探検して**チェスト** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)
        までたどりついて。
      HOC 2018 Level_6: 外はとっても寒そうです！海底神殿に行く途中で**サケ** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        をつかまえよう。
      HOC 2018 Level_7a: 海底神殿を見つけました。砂岩を調べて**海晶ブロック** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png)
        のお宝が入っている**チェスト** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        を探そう。
      HOC 2018 Level_8: 初めは氷山だったのに今は溶岩？この火山島を通り抜けてサンゴ礁の**熱帯魚** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        を見つけましょう。
      HOC 2018 Level_9b: サンゴ礁に着いた。次は**海の中心** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)
        を探そう！青と赤のサンゴを使ってお宝の**チェスト** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png)
        にたどりつこう。
      K-1 Bee Loops 2: "「くりかえし」をつかってハチをうごかし、みつをあつめて、はちみつを作ってください！"
      K-1 Bee Loops 3: "「くりかえし」を3回つかって みつを あつめて、はちみつを作ってください！"
      K-1 Bee Loops 4: "「くりかえし」をつかって、みつをあつめて、はちみつを作ってください！"
      K-1 Bee Loops 5: "「くりかえし」をつかって、みつをあつめて、はちみつを作ってください！"
      K-1 Bee Loops 6: 1つの「くりかえし」をつかって、みつをあつめて、はちみつを作ってください！
      K-1 Maze Loops 10: ブタさんのところまでつれていってください！「くりかえし」をつかうとかんたんです。
      K-1 Maze Loops 11: ブタさんのところまでつれていってください！「くりかえし」をつかうとかんたんです。
      K-1 Maze Loops 12: ブタさんのところまでつれていってください！「くりかえし」をつかうとかんたんです。
      K-1 Maze Loops 2: "「くりかえし」ブロックをつかってブタさんの ところまで つれていって ください。"
      K-1 Maze Loops 3: ブタさんのところまで つれていって ください！「くりかえし」をつかいましょう。
      K-1 Maze Loops 5: ブタさんのところまで つれていって ください！「くりかえし」をつかいましょう。
      K-1 Maze Loops 6: ブタさんのところまで つれていって ください！「くりかえし」をつかいましょう。
      K-1 Maze Loops 7: ブタさんのところまで つれていって ください！「くりかえし」をつかいましょう。
      K-1 Maze Loops 8: ブタさんのところまでつれていってください！「くりかえし」をつかいましょう。
      K-1 Maze Loops Assessment 1: これはテストです！ 「くりかえし」をつかってブタさんの ところまで つれてって！
      MC_HOC_2017_01_RETRY: |-
        ドアが閉まっているけど、そこにAgentが助けにやってきました！

        Agentが重量感知板 [PressurePlate_Up] にたどり着けるように、ワークスペースにある「実行した時」ブロックに「前にすすむ」ブロックをはめ込んでから 「実行」ボタンを押します。そして、矢印キーでプレイヤーを動かして家の外にある **チェスト** [chest] を回収しましょう。
      MC_HOC_2017_01_RETRY_2019: |-
        ドアが閉まっているけど、そこにAgentが助けにやってきました！

        Agentが重量感知板 [PressurePlate_Up] にたどり着けるように、ワークスペースにある「実行した時」ブロックに「前にすすむ」ブロックをはめ込んでから 「実行」ボタンを押します。そして、矢印キーでプレイヤーを動かして家の外にある **チェスト** [chest] を回収しましょう。
      MC_HOC_2017_02_Cole: "{currentPlayerName} は冒険に出発しました! 右側のロックされたドアの奥には、冒険に役立つ
        **地図** [map_empty] があります。この地図を手に入れましょう。\\\r\n \\\r\nAgent を重量感知板 [PressurePlate_Up]
        の上まで動かすコードをワークスペースで作成して、{currentPlayerName} がドアを通れるようにしましょう。 "
      MC_HOC_2017_02_Cole_2019: "{currentPlayerName} は冒険に出発しました! 右側のロックされたドアの奥には、冒険に役立つ
        **地図** [map_empty] があります。この地図を手に入れましょう。\\\r\n \\\r\nAgent を重量感知板 [PressurePlate_Up]
        の上まで動かすコードをワークスペースで作成して、{currentPlayerName} がドアを通れるようにしましょう。 "
      MC_HOC_2017_03_Cole: "冒険の旅をしている {currentPlayerName} には備えとして **コンパス** [compass]
        が必要です。\\\r\n   \\\r\nAgent がゲートを開くコードを書きましょう。 "
      MC_HOC_2017_03_Cole_2019: "冒険の旅をしている {currentPlayerName} には備えとして **コンパス** [compass]
        が必要です。\\\r\n   \\\r\nAgent がゲートを開くコードを書きましょう。 "
      MC_HOC_2017_04POINT5_RYAN: "なんとか通りぬけました! \n\n次に、{currentPlayerName} が迷路を通って
        **斧** [diamond_axe] を無事に手に入れられるようにしましょう"
      MC_HOC_2017_04POINT5_RYAN_2019: "なんとか通りぬけました! \n\n次に、{currentPlayerName} が迷路を通って
        **斧** [diamond_axe] を無事に手に入れられるようにしましょう"
      MC_HOC_2017_04_Cole: "Agent は水の上を動くことができます!\\\r\n \\\r\n「繰り返し」ループを使って {currentPlayerName}
        がドアの奥にある **バケツ** [bucket_empty] にたどり着ければ、このパズルはクリアです。 "
      MC_HOC_2017_04_Cole_2019: "Agent は水の上を動くことができます!\\\r\n \\\r\n「繰り返し」ループを使って {currentPlayerName}
        がドアの奥にある **バケツ** [bucket_empty] にたどり着ければ、このパズルはクリアです。 "
      MC_HOC_2017_05_Cole: "なんと、橋がありません! \\\r\n\\\r\nAgent が橋を作り直すコードを「置く」ブロックを使って書き、{currentPlayerName}
        が **シャベル** [diamond_shovel] にたどり着けるようにしましょう。"
      MC_HOC_2017_05_Cole_2019: "なんと、橋がありません! \\\r\n\\\r\nAgent が橋を作り直すコードを「置く」ブロックを使って書き、{currentPlayerName}
        が **シャベル** [diamond_shovel] にたどり着けるようにしましょう。"
      MC_HOC_2017_06_Cole: "別の川がありますが、前の川よりも幅がずっと広くなっています! \\\r\n \\\r\nこのコードを書きかえて、{currentPlayerName}
        が **つるはし** [diamond_pickaxe] にたどり着けるように Agent に橋をかけさせましょう。"
      MC_HOC_2017_06_Cole_2019: "別の川がありますが、前の川よりも幅がずっと広くなっています! \\\r\n \\\r\nこのコードを書きかえて、{currentPlayerName}
        が **つるはし** [diamond_pickaxe] にたどり着けるように Agent に橋をかけさせましょう。"
      MC_HOC_2017_07_Cole: "行く先に氷があります!  \\\r\n \\\r\n「道を作る」関数を使えば、氷を破壊して {currentPlayerName}
        がトロッコ [minecart_normal] にたどり着けるようになります! "
      MC_HOC_2017_07_Cole_2019: "行く先に氷があります!  \\\r\n \\\r\n「道を作る」関数を使えば、氷を破壊して {currentPlayerName}
        がトロッコ [minecart_normal] にたどり着けるようになります! "
      MC_HOC_2017_10_RETRY: "ワークスペースにある 2 つの関数の違いがわかりますか? \n\nこれらの関数をツールボックスにある他のコードと組み合わせて、トロッコまでの通り道を作り、**火打石と打ち金**
        [flint_and_steel] を回収しましょう。\n "
      MC_HOC_2017_10_RETRY_2019: "ワークスペースにある 2 つの関数の違いがわかりますか? \n\nこれらの関数をツールボックスにある他のコードと組み合わせて、トロッコまでの通り道を作り、**火打石と打ち金**
        [flint_and_steel] を回収しましょう。\n "
      MC_HOC_2017_Ali: '下の関数を見てください。これらを使って、{currentPlayerName} がガストを避けて **エンチャントした本**
        [book_enchanted] に無事にたどり着けるようにするには、どうすればよいでしょうか?  '
      MC_HOC_2017_Ali_2019: '下の関数を見てください。これらを使って、{currentPlayerName} がガストを避けて **エンチャントした本**
        [book_enchanted] に無事にたどり着けるようにするには、どうすればよいでしょうか?  '
      MC_HOC_2017_FP20x20: "**自由にプレイ:** ここからはあなたの自由です! Agent のコードを、この世界の探検に役立ててみましょう。"
      MC_HOC_2017_FP20x20_2019: "**自由にプレイ:** ここからはあなたの自由です! Agent のコードを、この世界の探検に役立ててみましょう。"
      NEW Course 4 Artist Params 2: 50 ピクセルの辺を持つ三角形を書く `draw triangle` 関数を作ります。
      NEW Course 4 Artist Vars 2: 数のブロックを「セット Length は？」と「？回くりかえす」のところに入れて、50ピクセルの長さの三角形を6つ書いてください。
      NEW Course 4 Artist Vars 4: もう一回やってみよう！このカッコイイ六角形を使ったデザインを書くには、「lengh」変数を60にしてみてね。
      NEW Course 4 Artist Vars 6: |-
        100 ピクセルの辺を持つ五角形のパターンを書くよ！
        「セット length は」に、数のブロックをくっつけて、数は100にします。全部の「前に動く？ピクセル」には「length」ブロックを入れて下さい。
        「length」に入れた数が、その後のプログラムで、どこでも使えることが分ったかな？
      Overworld Chop Tree: 木はとても大切な素材です。いろんなものを作ることができます。木のところまで行って、`ブロック破壊（はかい）`
        で木をきりましょう。
      Overworld Chop Tree_2019: 木はとても大切な素材です。いろんなものを作ることができます。木のところまで行って、`ブロック破壊（はかい）`
        で木をきりましょう。
      Overworld House Frame Chosen: 残りの壁は、好きな材料を使って作ってみましょう。 `くりかえし`が役に立つと思うよ・
      Overworld House Frame Chosen_2019: 残りの壁は、好きな材料を使って作ってみましょう。 `くりかえし`が役に立つと思うよ・
      Overworld Move to Sheep: 羊に近づくには"前進"コマンドを追加します。
      Overworld Move to Sheep_2019: 羊に近づくには"前進"コマンドを追加します。
      Overworld Place Wall: 壁を作って家を建てよう。`置く` と `前に すすむ` をくり返して 家を建てよう。
      Overworld Place Wall_2019: 壁を作って家を建てよう。`置く` と `前に すすむ` をくり返して 家を建てよう。
      Overworld Shear Sheep: 羊の毛を刈りましょう！`刈る`で羊から毛をとることができます。
      Overworld Shear Sheep_2019: 羊の毛を刈りましょう！`刈る`で羊から毛をとることができます。
      Robot Doodle: "**アイデア**：リアルな絵をかいてみよう。"
      Robot Doodle_2018: "**アイデア**：リアルな絵をかいてみよう。"
      Standalone_Artist_2: "「左に まがる 120度」と「左に まがる 60度」で、ダイヤモンドを書くよ。それぞれ「150ピクセル」うごかしてね。"
      Standalone_Artist_3: "「前に うごく 100ピクセル」と「右に まがる60度」をつかって、六角形が書けるかな？"
      Standalone_Artist_4: "「くりかえし」ブロックは、すきな回数プログラムを、くりかえします。ここに出ているプログラムを「くりかえし」ブロックの中に入れて、6回くりかえすと、どうなるかな？"
      Standalone_Artist_5: ダイヤモンドを書くプログラムがあります。何回くりかえすと花が書けるかな？
      Standalone_Artist_5.5: "「くりかえし」ブロックをつかって、ダイヤモンドが かんたんに書けるようにしてあります。このプログラムを12回くりかえすと花が書けます。ヒント：ひとつのダイヤモンドを書きおえたら、30度まがりましょう。ずっと同じところにダイヤモンドを書いていたらダメだよ。"
      Standalone_Artist_6: このデザインは、六角形を書くプログラムを 6 回くりかえします。くりかえしのたびに、何度まがればいいかな？ヒント：円の角度を、くりかえしの回数で、わり算すればいいよ。
      Standalone_Artist_7: '関数（かんすう）は、くりかえしと同じように、べんりです。「draw a flower」は、花を書く関数です。「draw
        a flower」ブロックをつかえば、いつでも、花を書くことが出来ます。これと「前に ジャンプ」ブロックを組み合わせて、3つ花を書いてください。ヒント:
        花は 150 ピクセルずつ はなれているよ。'
      Standalone_Artist_8: "「Draw a shape」は、六角形を書くようにプログラムした関数です。まず実行して、この関数が、どう うごくか、みてみてください。さて、正方形や、三角形や、八角形を書くように、この関数の中のプログラムを書き直すことが出来るかな？"
      Standalone_Artist_9: さあ、あなたの好きな絵を書いてみて！すきなことが出来る、空っぽの関数もあるから、つかってね！
      Underground Avoiding Lava: ブロックの下に溶岩があるかもしれません。溶岩をふさいでから前に進みましょう。 `もし`が役立ちます。採掘するために
        `前に すすむ`を追加しましょう。
      Underground Avoiding Lava_2019: ブロックの下に溶岩があるかもしれません。溶岩をふさいでから前に進みましょう。 `もし`が役立ちます。採掘するために
        `前に すすむ`を追加しましょう。
      Underground If Statements: 溶岩に落ちないように、レッドストーンを3つ採掘しましょう。`もし`を使って 溶岩に丸石を 置きましょう。
      Underground If Statements_2019: 溶岩に落ちないように、レッドストーンを3つ採掘しましょう。`もし`を使って 溶岩に丸石を
        置きましょう。
      course1_artist_loops_challenge2: ゲームをしましょう！ なるべく多くのXをかく！ 3行れんぞくしてXをかけるかな？
      course1_artist_loops_challenge3: 2羽のトリさんの家をつくるのを手伝って！
      course1_maze_debugging_challenge1: デバッグして！トリさんが ブタさんの ところに いけるよう プログラムを なおしてください。
      course1_maze_seq_challenge2: それぞれの方向（ほうこう）に 4回までしか うごけません。ブロックが なくなる前に クリアできるかな？
      course1_playlab_events_challenge1: |-
        みんなどこにかくれてるかな？ このゲームでは犬をクリックすると、友だちのネコさんが見つかります！

        ネコさんをクリックするとトリさんが見つかります！ のこりのお友だちを見つけるコードを書けるかな？

        このパズルでは、ヒントをクリックしてください。 クリアの手だすけになります！

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      course1_playlab_events_challenge2: |-
        パーティーをしよう！クリックしたりタップするときのアクションをつけて、おともだちを楽しませよう。

        動物（どうぶつ）たちは何を話すかな？ ほかに何がおきるかな？

        このパズルでは、ヒントをクリックしてください。 おもしろくするヒントをあげるよ！

        \[] [0]
      course2_artist_nestedLoops_challenge1: |-
        同じ図が、かけるかな？

        -   図形の大きさは、両方とも**50ピクセル**
        -   八角形をかくには、**45 度** まがるを使います
        -   三角形をかくには、**120 度** まがるを使います
      course2_artist_nestedLoops_challenge2: |-
        この絵の作り方がわかるかな？

        -   1番目のループは八角形
        -   2番目のループは六角形
        -   3番目のループは正方形
      course2_artist_prog_challenge1: それぞれの動物（どうぶつ）のために部屋（へや）を作ってあげましょう。 このパズルはいろいろなときかたがあるので、楽しんでくだい。
      course2_artist_prog_challenge2: この道路（どうろ）に黄色い線をかいてください。
      course2_bee_conditionals_challenge1: すべての花のみつを集（あつ）めるか、すべてのハチミツを作りましょう。花やハチのすがあるかどうかを、すべての場所（ばしょ）でチェックしてください。
      course2_bee_conditionals_challenge2: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花のところでは、`以下の間
        花のミツ > 0`をつかって、全部のミツを集めよう。
      course2_collector_loops_challenge2: |-
        ループをつかって、たからさがしをしよう！

        このコードをデバッグしてジェムをすべて手に入れよう！
      course2_collector_prog_challenge1: プログラムをじっくりみて！１０この たからもの すべて あつめることが できるかな？
      course2_collector_prog_challenge2: ジェムはぜんぶで20こあるよ。半分より多く集（あつ）めたいな！
      course2_harvester_loops_challenge1: とうもろこしをあつめよう。
      course2_harvester_loops_challenge2: 木とはたけをさけて、レタスをあつめよう！
      course2_maze_programming_challenge1: ブタがかくれてる！さがすのをてつだってくれる？
      course2_maze_programming_challenge2: |-
        ブタのところに行くには、いろいろなほうほうがあります。
        前に進むよりも、後ろにもどったほうが、早く行けることもあります。
      course3_artist_functions_challenge1: 一度定義した関数は、いつでも、どこからでも、何度でも呼び出すことができます。プログラムの中で
        どのように 関数が 使われているのか 見て、プログラムを 修正し、自分なりの いかしたデザインを 作ってみよう。
      course3_artist_functions_challenge2: |-
        あらかじめコーディングされている場所、キャンバスのすみに ジャンプするだけでなく、`ジャンプ` を使えば、どこでも好きな場所に行くことができます！プログラムがどのように動いているのよく見て、あなただけのプログラムを作ろう！

        <xml>
          <block type="jump_to_xy">
            <title name="XPOS">???</title>
            <title name="YPOS">???</title>
            </block></xml>
      course3_bee_debugging_challenge1: ハチが花のミツをどのように集めているか見てください。 同じパターンを使って、すべてのハチミツを作れますか？
      course3_bee_functions_challenge1: このチャレンジも きっとクリアできるよ。見た目よりもむつかしいよ！
      course3_bee_functions_challenge2: チャレンジ問題によくきたね！
      course3_collector_debugging_challenge2: 入れ子のループはマスターしたかな？ これまでに学んだことをいかして、ジェムをすべて集めましょう！
      course3_farmer_condLoops_challenge1: |-
        カボチャは、まがるべき場所のしるしです。_カボチャで右にまがってください。_ それ以外の場合は前にすすみますが、レタスとトウモロコシを集めるのをわすれずに。

        **かくれた作物には、トウモロコシかレタスが1つだけあります。**
      course3_farmer_condLoops_challenge2: |-
        _野菜（やさい）の めいろ だ！_

        カボチャで右にまがり、レタスで左にまがりましょう。作物をすべてを集めよう。
      course3_farmer_until_challenge2: "`もし やること/でなければ`を使って曲がり道を進もう。それぞれの角で、 `つちをかたづける`をくり返そう。"
      course3_maze_debugging_challenge1: _円をかくように、ぐるりと回ればいいかな？_
      course3_maze_debugging_challenge2: _回りすぎると、めまいがするよ！ 4つの「まがる」ブロックだけでドングリをひろえるようにしてね。_
      course3_maze_until_challenge1: ひまわりまで行こう。ノーヒントでチャレンジしよう。
      course3_playLab_challenge1: |-
        _町に**きょうりゅう**がやってきて、**リスたち** がこわがっています！**きし**は、リスたちを助けることができるかな？_

        ルール

        1.  _リスにさわったポイントをゲットします_
        2.  _きょうりゅうにさわったら、ポイントが減ります_

        さっきやったゲームとはちがう種類のゲームです。どんな風に動くかやってみょう。

        ポイントがたまったとき、マイナスになったとき、どうしますか？関数`win game` と `lose game` にどんなプログラムを追加しますか？何を追加するかはヒントを見てみよう！
      course4_artist_concept_challenge2: 下のプログラムを使って、風車を5つかこう。
      course4_artist_functions_challenge2: |-
        あらかじめコーディングされている場所、キャンバスのすみに ジャンプするだけでなく、`ジャンプ` を使えば、どこでも好きな場所に行くことができます！プログラムがどのように動いているのよく見て、あなただけのプログラムを作ろう！

        <xml>
          <block type="jump_to_xy">
            <title name="XPOS">???</title>
            <title name="YPOS">???</title>
            </block></xml>
      course4_artist_fwp_challenge1: このプログラムを実行してみてください、そして何が起こるかを参照し変更をしてください。それがどのように動作するかを理解できますか？(または削除し、完全に別の何かと交換)
      course4_collector_nested_loops_challenge2: "_\"くりかえしを使って宝物を集めよう！\"_ \n\nツールボックスの中にあるブロックだけを使って最低でも2つの宝の山にたどり着こう。できれば4つすべて集めよう。"
      course4_harvester_nested_loops_challenge1: _"ツールボックスの中にあるブロックをつかって、農夫を手伝って！"_
      course4_playlab_variables_challenge1: キャラにジョークを言わせましょう。punchlineにあなたが考えたジョークを入力しましょう。
      courseA_artist_loops10: |-
        ## りくちにもどれるように 石をおいてください！

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops10_2018: |-
        ## りくちにもどれるように 石をおいてください！

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops10_2019: |-
        ## りくちにもどれるように 石をおいてください！

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops11: |-
        ## ふねが見れるよう かいだんをつくってみみよう。

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops11_2018: |-
        ## ふねが見れるよう かいだんをつくってみみよう。

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops11_2019: |-
        ## ふねが見れるよう かいだんをつくってみみよう。

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops12: |-
        じゆうに おもしろいと おもうのもを かいてみよう。

        * * *

        ### アイデア

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops12_2018: |-
        じゆうに おもしろいと おもうのもを かいてみよう。

        * * *

        ### アイデア

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops12_2019: |-
        じゆうに おもしろいと おもうのもを かいてみよう。

        * * *

        ### アイデア

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops2: |-
        アーティストが、２かい せんを かくよう たすけてください。

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2018: |-
        アーティストが、２かい せんを かくよう たすけてください。

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2019: |-
        アーティストが、２かい せんを かくよう たすけてください。

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops3: |-
        アーティストは、5かい せんを かこうとしていますが、うまく いきません。てつだって くれますか？

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops3_2018: |-
        アーティストは、5かい せんを かこうとしていますが、うまく いきません。てつだって くれますか？

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops3_2019: |-
        アーティストは、5かい せんを かこうとしていますが、うまく いきません。てつだって くれますか？

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops4: |-
        <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> ループを つかって、５かい せんを かいてみよう！

        ![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops4_2018: |-
        <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> ループを つかって、５かい せんを かいてみよう！

        ![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops4_2019: |-
        <xml><block type="controls_repeat_simplified_dropdown" block-text="repeat"><title name="TIMES" config="2-6">5</title></block></xml> ループを つかって、５かい せんを かいてみよう！

        ![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops5: "## 7かい せんを ひきます。まっすぐな せんに なるよ。"
      courseA_artist_loops5_2018: "## 7かい せんを ひきます。まっすぐな せんに なるよ。"
      courseA_artist_loops5_2019: "## 7かい せんを ひきます。まっすぐな せんに なるよ。"
      courseA_artist_loops6: |-
        ## 小さな山をかいてみよう。

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops6_2018: |-
        ## 小さな山をかいてみよう。

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops6_2019: |-
        ## 小さな山をかいてみよう。

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops7: <xml><block type="controls_repeat_simplified_dropdown"><title
        name="TIMES" config="3-10">???</title></block></xml> をつかって なみをかいてみよう。
      courseA_artist_loops7_2018: <xml><block type="controls_repeat_simplified_dropdown"><title
        name="TIMES" config="3-10">???</title></block></xml> をつかって なみをかいてみよう。
      courseA_artist_loops8: |-
        ## ボートまで はしごが ひつようです。

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2018: |-
        ## ボートまで はしごが ひつようです。

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2019: |-
        ## ボートまで はしごが ひつようです。

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops9: |-
        **チャレンジ** かいだんをつくって デッキにいってみよう。

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops9_2018: |-
        **チャレンジ** かいだんをつくって デッキにいってみよう。

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops9_2019: |-
        **チャレンジ** かいだんをつくって デッキにいってみよう。

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops_challenge1: |-
        「くりかえし」をつかうと、いちどにたくさんの線を引くことができます。

        家をかくことができるかな？「くりかえし」を使えるところをさがしてみましょう！

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge1_2018: |-
        「くりかえし」をつかうと、いちどにたくさんの線を引くことができます。

        家をかくことができるかな？「くりかえし」を使えるところをさがしてみましょう！

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge1_2019: |-
        「くりかえし」をつかうと、いちどにたくさんの線を引くことができます。

        家をかくことができるかな？「くりかえし」を使えるところをさがしてみましょう！

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge2a: ツールボックスにあるブロックをつかって テントを３つかいてみよう。
      courseA_artist_loops_challenge2a_2018: ツールボックスにあるブロックをつかって テントを３つかいてみよう。
      courseA_artist_loops_challenge2a_2019: ツールボックスにあるブロックをつかって テントを３つかいてみよう。
      courseA_collector_loops1: |-
        **フリープレイ** ローレルの ぼうけん です！かのじょを うごかして たからものを あつめよう。

        ブロックを ワークスペースに ドラッグして、たからものを あつめよう。このレベルをクリアするには、ひとつ いじょうの アイテムを ゲットしよう。
      courseA_collector_loops12: |-
        _"エウレカ！できるだけ、たくさん たからものを あつめてください！"_\
        (ぜんぶ とれなくても だいじょうぶ。)
      courseA_collector_loops12_2018: |-
        _"エウレカ！できるだけ、たくさん たからものを あつめてください！"_\
        (ぜんぶ とれなくても だいじょうぶ。)
      courseA_collector_loops12_2019: |-
        _"エウレカ！できるだけ、たくさん たからものを あつめてください！"_\
        (ぜんぶ とれなくても だいじょうぶ。)
      courseA_collector_loops1_2018: |-
        **フリープレイ** ローレルの ぼうけん です！かのじょを うごかして たからものを あつめよう。

        ブロックを ワークスペースに ドラッグして、たからものを あつめよう。このレベルをクリアするには、ひとつ いじょうの アイテムを ゲットしよう。
      courseA_collector_loops1_2019: |-
        **フリープレイ** ローレルの ぼうけん です！かのじょを うごかして たからものを あつめよう。

        ブロックを ワークスペースに ドラッグして、たからものを あつめよう。このレベルをクリアするには、ひとつ いじょうの アイテムを ゲットしよう。
      courseA_collector_loops2: |-
        ３つ すべてを とってください！ローレルを たからものの ところに うごかして このブロックを つかいます。
          <xml><block type="collector_collect"/></xml>
      courseA_collector_loops3: <xml><block type="maze_moveEast"/></xml> を １つだけ つかって、５つの
        たからもの ぜんぶを とれますか？
      courseA_collector_loops3_2018: <xml><block type="maze_moveEast"/></xml> を １つだけ
        つかって、５つの たからもの ぜんぶを とれますか？
      courseA_collector_loops3_2019: <xml><block type="maze_moveEast" block-text="move
        east"/></xml> を １つだけ つかって、５つの たからもの ぜんぶを とれますか？
      courseA_collector_loops_challenge1: _"バグさがしを てつだってくれる？すすむ むきは わかってるけど、いくつ すすめば
        いいか わからないのです。"_
      courseA_collector_loops_challenge1_2018: _"バグさがしを てつだってくれる？すすむ むきは わかってるけど、いくつ
        すすめば いいか わからないのです。"_
      courseA_collector_loops_challenge1_2019: _"バグさがしを てつだってくれる？すすむ むきは わかってるけど、いくつ
        すすめば いいか わからないのです。"_
      courseA_collector_preLoops7: |-
        ３つ すべてを とってください！ローレルを たからものの ところに うごかして このブロックを つかいます。
          <xml><block type="collector_collect"/></xml>
      courseA_harvester_seq6: 自分でやってみよう！
      courseA_harvester_seq6_2019: 自分でやってみよう！
      courseA_maze_seq1: _"このブロックをつかって ブタのところへ つれていって！"_
      courseA_maze_seq10: "**チャレンジ** バクダンを よけつつ、ブタさんを つかまえて！ \n\n![expandable](https://images.code.org/a656e421bc90e530a7e1ce636e507752-image-1497996976195.gif)"
      courseA_maze_seq11: |-
        パズルのじかんです！ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください！

        ![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)
      courseA_maze_seq12: |-
        ブタさんを つかまえて！

        ![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)
      courseA_maze_seq13_2019: ともかく、ブタをつかまえよう！
      courseA_maze_seq1_2018: _"このブロックをつかって ブタのところへ つれていって！"_
      courseA_maze_seq1_2019: _"このブロックをつかって ブタのところへ つれていって！"_
      courseA_maze_seq2: |-
        _"バグだ！ブタさんの ところへ いけるように なおして。"_

        ![expandable](https://images.code.org/4af4959874b3ca1fdd3008dc4f77add4-image-1497994904322.gif)
      courseA_maze_seq3: |-
        _"ブタさんの ところへ いけるよう プログラムをなおして！"_

        ![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)
      courseA_maze_seq4: "_\"どうも うまくないぞ。\"_ \n\nブロックを けして、トリさんを ブタさんのところに つれていって！\n\n![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)"
      courseA_maze_seq5: |-
        じぶんで はじめから ためしてみよう。

        ![expandable](https://images.code.org/e4ef591b4580db478330c298d1af756f-image-1497997080163.gif)
      courseA_maze_seq6: |-
        ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください！

        ![expandable](https://images.code.org/8f71c406afa60c6898937d950c670205-image-1497996506419.gif)
      courseA_maze_seq6_2018: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください！
      courseA_maze_seq6_2019: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください！
      courseA_maze_seq7: |-
        トリさんが ブタさんのところに いけるよう、ブロックを いれて ください！

        ![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)
      courseA_maze_seq8: |-
        トリさんを ブタさんの ところに つれていって、このレベルをクリアしよう！

        ![expandable](https://images.code.org/fb4735244f74a4e001d1fa7b5c6028f9-image-1497998330218.gif)
      courseA_maze_seq8_2018: トリさんを ブタさんの ところに つれていって、このレベルをクリアしよう！
      courseA_maze_seq8_2019: トリさんを ブタさんの ところに つれていって、このレベルをクリアしよう！
      courseA_maze_seq9: |-
        **チャレンジ** トリさんが ブタさんの ところに いけるよう ブロックを いれて、デバッグしよう！

        ![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)
      courseA_maze_seq_challenge1: デバッグして！トリさんが ブタさんの ところに いけるよう プログラムを なおしてください。
      courseA_maze_seq_challenge1_2018: デバッグして！トリさんが ブタさんの ところに いけるよう プログラムを なおしてください。
      courseA_maze_seq_challenge1_2019: デバッグして！トリさんが ブタさんの ところに いけるよう プログラムを なおしてください。
      courseA_maze_seq_challenge2_2019: みちを たどって トリさんを ブタさんのところに つれてって。ばくだんで はねが とばされないように！
      courseA_playLab_events3: |-
        <xml><block type="studio_whenArrow">
            <title name="VALUE">left</title>
          </block></xml> event blockの下に <xml><block type="studio_move">
            <title name="SPRITE">1</title>
            <title name="DIR">8</title>
          </block></xml> をつけて 犬をうごかせるようにしよう。
        犬を はたまで うごかせばクリアです。
      courseA_playLab_events3_2018: |-
        <xml><block type="studio_whenArrow">
            <title name="VALUE">left</title>
          </block></xml> event blockの下に <xml><block type="studio_move">
            <title name="SPRITE">1</title>
            <title name="DIR">8</title>
          </block></xml> をつけて 犬をうごかせるようにしよう。
        犬を はたまで うごかせばクリアです。
      courseA_playLab_events3_2019: |-
        <xml><block type="studio_whenArrow" block-text="when left arrow">
            <title name="VALUE">left</title>
          </block></xml> event blockの下に <xml><block type="studio_move" block-text="move dog west">
            <title name="SPRITE">1</title>
            <title name="DIR">8</title>
          </block></xml> をつけて 犬をうごかせるようにしよう。
        犬を はたまで うごかせばクリアです。
      courseA_playLab_events4: 右やじるしキーがおされたとき、犬が右にうごくようにしてみよう。
      courseA_playLab_events5: 上やじるしキーと下やじるしキーで犬を上下にうごかしてみよう。
      courseA_playLab_events5_2018: 上やじるしキーと下やじるしキーで犬を上下にうごかしてみよう。
      courseA_playLab_events5_2019: 上やじるしキーと下やじるしキーで犬を上下にうごかしてみよう。
      courseA_playLab_events6_2019: はいけいをかえてみよう、犬がクリックされたときランダムに音がなるようにしてみよう。
      courseA_playlab_events_challenge1: |-
        Oliveをクリックすると、Robinが表示されるよ！残りの文字を表示するコードも作成できるかな？
        このパズルでは、ヒントをクリックしてね！このヒントは、このプロジェクトを行うのに役立ちます！
        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1_2018: |-
        Oliveをクリックすると、Robinが表示されるよ！残りの文字を表示するコードも作成できるかな？
        このパズルでは、ヒントをクリックしてね！このヒントは、このプロジェクトを行うのに役立ちます！
        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1_2019: |-
        Oliveをクリックすると、Robinが表示されるよ！残りの文字を表示するコードも作成できるかな？
        このパズルでは、ヒントをクリックしてね！このヒントは、このプロジェクトを行うのに役立ちます！
        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2: |-
        キャラクターがクリックされたとき、しゃべらせたり いろんなうごきをさせてみよう。
        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>) をクリックして なにができるのかみてみよう。
      courseA_playlab_events_challenge2_2018: |-
        キャラクターがクリックされたとき、しゃべらせたり いろんなうごきをさせてみよう。
        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>) をクリックして なにができるのかみてみよう。
      courseA_playlab_events_challenge2_2019: |-
        キャラクターがクリックされたとき、しゃべらせたり いろんなうごきをさせてみよう。
        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>) をクリックして なにができるのかみてみよう。
      courseB_artist_loops1_2019: これは「アーティスト」という あたらしい パズルです。すきなものを かいて ください。（かきおわったら、「おわり」を
        クリックします）
      courseB_collector_loops1: |-
        **フリープレイ** ローレルの ぼうけん です！かのじょを うごかして たからものを あつめよう。

        ブロックを ワークスペースに ドラッグして、たからものを あつめよう。このレベルをクリアするには、ひとつ いじょうの アイテムを ゲットしよう。
      courseB_collector_loops10_2019: ローレルが どうくつから、ぜんぶの たからを あつめられるよう、たすけて ください。
      courseB_collector_loops3: <xml><block type="maze_moveEast"/></xml> を １つだけ つかって、５つの
        たからもの ぜんぶを とれますか？
      courseB_collector_loops3_2018: <xml><block type="maze_moveEast"/></xml> を １つだけ
        つかって、５つの たからもの ぜんぶを とれますか？
      courseB_collector_loops3_2019: <xml><block type="maze_moveEast" block-text="move
        east"/></xml> を １つだけ つかって、５つの たからもの ぜんぶを とれますか？
      courseB_collector_loops_challenge2a: |-
        _"たからものを あつめよう！"_

        このパズルをクリアするには、**5** つの たからものを ゲットして ください。
      courseB_collector_loops_challenge2a_2018: |-
        _"たからものを あつめよう！"_

        このパズルをクリアするには、**5** つの たからものを ゲットして ください。
      courseB_collector_loops_challenge2a_2019: |-
        _"たからものを あつめよう！"_

        このパズルをクリアするには、**5** つの たからものを ゲットして ください。
      courseC19_playLab_EOC1: |-
        今までやってきたことを使って、ゲームを少しずつ作っていこう。

        ツールボックスにあるブロックを使って、はいけいとゲームの主人公になるキャラを選ぼう。
      courseC19_playLab_EOC3: |-
        ほかのキャラも追加しよう！

        `セット キャラ`でほかのキャラを追加して、ゴールに向けて動かそう。
      courseC19_playLab_EOC6: 完成、ゲームをプレイしてみよう！ともだちとゲームを共有しよう！
      courseC_PlayLab_events6_2019: 上向き矢印キー・下向き矢印キー・左向き矢印キー・右向き矢印キーでペンギンをうごかして、ぜんぶの
        はたに さわってみよう！
      courseC_PlayLab_events7: |-
        `ずっとやること` をつかえば、中に入れためいれいを ずっと くりかえすことが できます。`ずっとやること` をつかって、きょうりゅう（キャラ２）を 上下に 400ピクセル 行ったり来たり させてみよう。

        ![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)
      courseC_PlayLab_events7_2018: |-
        `ずっとやること` をつかえば、中に入れためいれいを ずっと くりかえすことが できます。`ずっとやること` をつかって、きょうりゅう（キャラ２）を 上下に 400ピクセル 行ったり来たり させてみよう。

        ![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)
      courseC_PlayLab_events7_2019: |-
        `ずっとやること` をつかえば、中に入れためいれいを ずっと くりかえすことが できます。`ずっとやること` をつかって、きょうりゅう（キャラ２）を 上下に 400ピクセル 行ったり来たり させてみよう。

        ![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)
      courseC_PlayLab_events8: "ペンギン (actor 1) が きょうりゅうに さわったら、音を ならして、\"いたい！\"と いわせることが
        できるかな？ \nプログラムができたら、ゲームをやってみよう。\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)"
      courseC_PlayLab_events8_2018: "ペンギン (actor 1) が きょうりゅうに さわったら、音を ならして、\"いたい！\"と
        いわせることが できるかな？ \nプログラムができたら、ゲームをやってみよう。\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)"
      courseC_PlayLab_events8_2019: "ペンギン (actor 1) が きょうりゅうに さわったら、音を ならして、\"いたい！\"と
        いわせることが できるかな？ \nプログラムができたら、ゲームをやってみよう。\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)"
      courseC_PlayLab_events_challenge1: |-
        ペンギンが きょうりゅうに さわったときや ポイントを ゲットしたときに、ペンギンが スタート地点に もどるように してみよう。ゲームがもっと楽しくなるよ。

        ペンギンを矢じるしキーでうごかして、ポイントをゲットしよう。クリアしたら ペンギンを スタート地点の `左`に もどしてください。
      courseC_artist_loop1: |-
        すごくきれい！

        くりかえしの前に、`線のかたち`を 入れて いろんな線を 書いてみよう。
      courseC_artist_loops1a: |-
        **フリー プレイ** 少しずつ、大きなものを作ってみよう！どんな絵でもいいのだけど、つぎの絵をかいてみて！

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)

        `ジャンプ 200 、200` でアーティストはプレイエリアの真ん中にジャンプしたら、`スタンプ` で鳥の絵を押します。

        * * *

        完成したら、"おわり" を押してね。
      courseC_artist_loops2a: 30度ずつ角度を変えて、くり返しを使って12回 鳥のスタンプを押そう。
      courseC_artist_loops2a_2018: 30度ずつ角度を変えて、くり返しを使って12回 鳥のスタンプを押そう。
      courseC_artist_loops3a: "楽しいな！  \n\n鳥のスタンプを押した後に、コウモリのスタンプを押すと、こんな感じになるよ。\n\n*
        * *\n\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops3a_2018: "楽しいな！  \n\n鳥のスタンプを押した後に、コウモリのスタンプを押すと、こんな感じになるよ。\n\n*
        * *\n\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops4a: |-
        鳥のスタンプとコウモリのスタンプの間を1ブロック追加して、75ピクセル離そう。`ジャンプ 200 、200` をくり返しの中に入れておけば、いつでも真ん中に戻って来れます！

        * * *

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)
      courseC_artist_loops5a: |-
        おすスタンプを かえたら、どんなふうに なるか やってみよう。

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5a_2018: |-
        おすスタンプを かえたら、どんなふうに なるか やってみよう。

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5a_2019: |-
        おすスタンプを かえたら、どんなふうに なるか やってみよう。

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5b: "くり返しの中に`うごく まえに` と `うごく うしろに` を入れて、うごくピクセルを100、200、400と変えたらどうなん絵がかけるかな？
        \n\n-   くり返しの前に`線のかたち` を追加しよう！\n    * * *\n    ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops5b_2018: "くり返しの中に`うごく まえに` と `うごく うしろに` を入れて、うごくピクセルを100、200、400と変えたらどうなん絵がかけるかな？
        \n\n-   くり返しの前に`線のかたち` を追加しよう！\n    * * *\n    ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops6a: |-
        くりかえしのなかに３つスタンプを入れてみよう！ どんなふうになりましたか？

        -   スタンプを かえて いろいろ ためしてみよう！

        * * *

        ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)
      courseC_artist_loops6a_2018: |-
        くりかえしのなかに３つスタンプを入れてみよう！ どんなふうになりましたか？

        -   スタンプを かえて いろいろ ためしてみよう！

        * * *

        ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)
      courseC_artist_loops7a: |-
        `くりかえし` の回数をかえてためしてみよう。そのとき、円にするにはまがる角度をなんどにすればいい？

        -   まがる回数をかえてみよう
            -   60度のときは、6回くりかえし
            -   20度のときは、18回くりかえし

        * * *

        下のもようは、海ぞく と にんじゃ と きりん を つかって、くりかえしの回数は18回、まががる角度は20度です。

        ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)
      courseC_artist_loops7a_2018: |-
        `くりかえし` の回数をかえてためしてみよう。そのとき、円にするにはまがる角度をなんどにすればいい？

        -   まがる回数をかえてみよう
            -   60度のときは、6回くりかえし
            -   20度のときは、18回くりかえし

        * * *

        下のもようは、海ぞく と にんじゃ と きりん を つかって、くりかえしの回数は18回、まががる角度は20度です。

        ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)
      courseC_artist_loops8a: |-
        好きな絵をかいてみよう。ちがうスタンプで 2つの円を かいてみるのはどうかな？

        * * *

        アイデアが必要、こんなのはどう？

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loops8a_2018: |-
        好きな絵をかいてみよう。ちがうスタンプで 2つの円を かいてみるのはどうかな？

        * * *

        アイデアが必要、こんなのはどう？

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loops8a_2019: |-
        好きな絵をかいてみよう。ちがうスタンプで 2つの円を かいてみるのはどうかな？

        * * *

        アイデアが必要、こんなのはどう？

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loopsPre1a: "プログラムに`くりかえし`を ついかしてみよう。くりかえしの回数は、６回だよ。 \n\nちゅうい　すべての線を書くには、６０度右にまわるを
        くりかえしの中に 入れること。"
      courseC_artist_loopsPre1a_2018: "プログラムに`くりかえし`を ついかしてみよう。くりかえしの回数は、６回だよ。 \n\nちゅうい　すべての線を書くには、６０度右にまわるを
        くりかえしの中に 入れること。"
      courseC_artist_loopsPre1a_2019: "プログラムに`くりかえし`を ついかしてみよう。くりかえしの回数は、６回だよ。 \n\nちゅうい　すべての線を書くには、６０度右にまわるを
        くりかえしの中に 入れること。"
      courseC_artist_loopsPrePre1a: |-
        <xml><block type="jump_to_xy" id="callMe"><title name="XPOS">200</title><title name="YPOS">200</title></block></xml> をつかって、プレイエリアのまんなかに行ってから\
        <xml><block type="draw_move_by_constant"><title name="DIR">moveForward</title><title name="VALUE">50</title></block></xml> で５０ピックセルの線を書いてみよう。
      courseC_artist_prog1: |-
        _"ぼくはアーティスト。いわれた通りに絵をかくよ。"_

        ツールボックスにあるブロックを使って、絵をかいてみよう！
      courseC_artist_prog1_2018: |-
        _"ぼくはアーティスト。いわれた通りに絵をかくよ。"_

        ツールボックスにあるブロックを使って、絵をかいてみよう！
      courseC_artist_prog1_2019: |-
        _"ぼくはアーティスト。いわれた通りに絵をかくよ。"_

        ツールボックスにあるブロックを使って、絵をかいてみよう！
      courseC_artist_prog2: |-
        _"ペットのモンスターにおりを作ろう！"_

        ブロックをワークスペースにドラックして、灰色の線をかこう。\
        （線の長さは100ピクセルです）
      courseC_artist_prog2_2018: |-
        _"ペットのモンスターにおりを作ろう！"_

        ブロックをワークスペースにドラックして、灰色の線をかこう。\
        （線の長さは100ピクセルです）
      courseC_artist_prog2_2019: |-
        _"ペットのモンスターにおりを作ろう！"_

        ブロックをワークスペースにドラックして、灰色の線をかこう。\
        （線の長さは100ピクセルです）
      courseC_artist_prog3: |-
        _"宇宙船には窓を付けて！"_

        四角形の辺の長さは100ピクセルで、、それぞれの角は90度です。
      courseC_artist_prog3_2018: |-
        _"宇宙船には窓を付けて！"_

        四角形の辺の長さは100ピクセルで、、それぞれの角は90度です。
      courseC_artist_prog3_2019: |-
        _"宇宙船には窓を付けて！"_

        四角形の辺の長さは100ピクセルで、、それぞれの角は90度です。
      courseC_artist_prog4: |-
        _"ペットのエイリアンがにげげちゃった！捕まえるのを手伝って！"_

        ロケットが完成したので、ペットを追いかけれるようになりました。\
        (三角形の一辺の長さは120ピクセルで、曲がる角度は120度です。)
      courseC_artist_prog4_2018: |-
        _"ペットのエイリアンがにげげちゃった！捕まえるのを手伝って！"_

        ロケットが完成したので、ペットを追いかけれるようになりました。\
        (三角形の一辺の長さは120ピクセルで、曲がる角度は120度です。)
      courseC_artist_prog4_2019: |-
        _"ペットのエイリアンがにげげちゃった！捕まえるのを手伝って！"_

        ロケットが完成したので、ペットを追いかけれるようになりました。\
        (三角形の一辺の長さは120ピクセルで、曲がる角度は120度です。)
      courseC_artist_prog5: |-
        _"ペットがにげ出した時に備えて名札を作ってあげよう！"_

        外側の長方形をかいて、名札を完成させよう。\
        (長いほう辺は200ピクセル、短いほうは100ピクセルです。)
      courseC_artist_prog5_2018: |-
        _"ペットがにげ出した時に備えて名札を作ってあげよう！"_

        外側の長方形をかいて、名札を完成させよう。\
        (長いほう辺は200ピクセル、短いほうは100ピクセルです。)
      courseC_artist_prog5_2019: |-
        _"ペットがにげ出した時に備えて名札を作ってあげよう！"_

        外側の長方形をかいて、名札を完成させよう。\
        (長いほう辺は200ピクセル、短いほうは100ピクセルです。)
      courseC_artist_prog6: |-
        _"Belleの名札を作って！"_

        一辺が200ピクセルのひし形をかいてみよう。
      courseC_artist_prog7: |-
        **チャレンジ** スペシャルバージョンの名札です！

         かくことができるかな？\
        （長い線は150ピクセルで、短いほうは75ピクセルです。）
      courseC_artist_prog7_2018: |-
        **チャレンジ** スペシャルバージョンの名札です！

         かくことができるかな？\
        （長い線は150ピクセルで、短いほうは75ピクセルです。）
      courseC_artist_prog7_2019: |-
        **チャレンジ** スペシャルバージョンの名札です！

         かくことができるかな？\
        （長い線は150ピクセルで、短いほうは75ピクセルです。）
      courseC_artist_prog8: |-
        Piの名札は、三角形だよ。\
        （一辺は150ピクセル）
      courseC_artist_prog8_2018: |-
        Piの名札は、三角形だよ。\
        （一辺は150ピクセル）
      courseC_artist_prog8_2019: |-
        Piの名札は、三角形だよ。\
        （一辺は150ピクセル）
      courseC_artist_prog_challenge1: 動物たちの部屋をかこう。 パズルの解き方はいろいろあるけど、一辺の長さは100ピクセルだよ。
      courseC_artist_prog_challenge1_2018: 動物たちの部屋をかこう。 パズルの解き方はいろいろあるけど、一辺の長さは100ピクセルだよ。
      courseC_artist_prog_challenge1_2019: 動物たちの部屋をかこう。 パズルの解き方はいろいろあるけど、一辺の長さは100ピクセルだよ。
      courseC_artist_prog_challenge2a: |-
        _"道路に黄色い線をかいて！"_

        線の長さは、それぞれ150、100、200ピクセルです。
      courseC_artist_prog_challenge2a_2018: |-
        _"道路に黄色い線をかいて！"_

        線の長さは、それぞれ150、100、200ピクセルです。
      courseC_artist_prog_challenge2a_2019: |-
        _"道路に黄色い線をかいて！"_

        線の長さは、それぞれ150、100、200ピクセルです。
      courseC_collector_loops_challenge2: |-
        _"たからものをあつめよう！"_

        ５つ いじょう たからものを あつめよう。
      courseC_collector_loops_challenge2_2018: |-
        _"たからものをあつめよう！"_

        ５つ いじょう たからものを あつめよう。
      courseC_collector_loops_challenge2_2019: |-
        _"たからものをあつめよう！"_

        ５つ いじょう たからものを あつめよう。
      courseC_collector_prog1: |-
        **フリープレイ** ローレルの ぼうけん です！かのじょを うごかして たからものを あつめよう。

        ブロックを ワークスペースに ドラッグして、たからものを あつめよう。このレベルをクリアするには、ひとつ いじょうの アイテムを ゲットしよう。
      courseC_collector_prog1_2018: |-
        **フリープレイ** ローレルの ぼうけん です！かのじょを うごかして たからものを あつめよう。

        ブロックを ワークスペースに ドラッグして、たからものを あつめよう。このレベルをクリアするには、ひとつ いじょうの アイテムを ゲットしよう。
      courseC_collector_prog1_2019: |-
        **フリープレイ** ローレルの ぼうけん です！かのじょを うごかして たからものを あつめよう。

        ブロックを ワークスペースに ドラッグして、たからものを あつめよう。このレベルをクリアするには、ひとつ いじょうの アイテムを ゲットしよう。
      courseC_collector_prog2: ローレルをたからもののところまでいごかして、 <xml><block type="collector_collect"/></xml>
        でたからものをあつめます。
      courseC_collector_prog2_2018: ローレルをたからもののところまでいごかして、 <xml><block type="collector_collect"/></xml>
        でたからものをあつめます。
      courseC_collector_prog3: |-
        _"ブロックをじゅんばんにならべて！"_
        ひつようなブロックは、ワークスペースにじゅんびされています。\
        たからものをあつめて、パズルをクリアできるよう ブロックをならべかえてひっつけてみよう。
      courseC_collector_prog3_2018: |-
        _"ブロックをじゅんばんにならべて！"_
        ひつようなブロックは、ワークスペースにじゅんびされています。\
        たからものをあつめて、パズルをクリアできるよう ブロックをならべかえてひっつけてみよう。
      courseC_collector_prog3_2019: |-
        _"ブロックをじゅんばんにならべて！"_
        ひつようなブロックは、ワークスペースにじゅんびされています。\
        たからものをあつめて、パズルをクリアできるよう ブロックをならべかえてひっつけてみよう。
      courseC_collector_prog4: |-
        _"ブロックをじゅんばんにならべて！"_
        ひつようなブロックは、ワークスペースにじゅんびされています。\
        たからものをあつめて、パズルをクリアできるよう ブロックをならべかえてひっつけてみよう。
      courseC_collector_prog4_2018: |-
        _"ブロックをじゅんばんにならべて！"_
        ひつようなブロックは、ワークスペースにじゅんびされています。\
        たからものをあつめて、パズルをクリアできるよう ブロックをならべかえてひっつけてみよう。
      courseC_collector_prog4_2019: |-
        _"ブロックをじゅんばんにならべて！"_
        ひつようなブロックは、ワークスペースにじゅんびされています。\
        たからものをあつめて、パズルをクリアできるよう ブロックをならべかえてひっつけてみよう。
      courseC_collector_prog5: |-
        _"たからものを あつめるのを てつだって！"_
        ブロックのじゅんばんがまちがっているので、正しいじゅんばんにならべなおそう。
      courseC_collector_prog5_2018: |-
        _"たからものを あつめるのを てつだって！"_
        ブロックのじゅんばんがまちがっているので、正しいじゅんばんにならべなおそう。
      courseC_collector_prog5_2019: |-
        _"たからものを あつめるのを てつだって！"_
        ブロックのじゅんばんがまちがっているので、正しいじゅんばんにならべなおそう。
      courseC_collector_prog6: |-
        _"たからものを あつめるのを てつだって！"_
        すべてのたからものを ゲットできるように ブロックをならべなおそう。
      courseC_collector_prog6_2018: |-
        _"たからものを あつめるのを てつだって！"_
        すべてのたからものを ゲットできるように ブロックをならべなおそう。
      courseC_collector_prog6_2019: |-
        _"たからものを あつめるのを てつだって！"_
        すべてのたからものを ゲットできるように ブロックをならべなおそう。
      courseC_collector_prog7: |-
        **チャレンジ** _"このまま うごかしたら どうなるの？"_
        ブロックをならべかえても すべてのたからものを ゲットできないよ。\
        すべてのたからものを ゲットできるよう ブロックを ついかしてみよう。
      courseC_collector_prog7_2018: |-
        **チャレンジ** _"このまま うごかしたら どうなるの？"_
        ブロックをならべかえても すべてのたからものを ゲットできないよ。\
        すべてのたからものを ゲットできるよう ブロックを ついかしてみよう。
      courseC_collector_prog7_2019: |-
        **チャレンジ** _"このまま うごかしたら どうなるの？"_
        ブロックをならべかえても すべてのたからものを ゲットできないよ。\
        すべてのたからものを ゲットできるよう ブロックを ついかしてみよう。
      courseC_collector_prog8: _"このちょうしで がんばって！ すべての たからものを あつめるのを てつだって。"_
      courseC_collector_prog8_2018: _"このちょうしで がんばって！ すべての たからものを あつめるのを てつだって。"_
      courseC_collector_prog8_2019: _"このちょうしで がんばって！ すべての たからものを あつめるのを てつだって。"_
      courseC_collector_prog9: _"すべてのたからものをゲットしよう！"_
      courseC_collector_prog9_2018: _"すべてのたからものをゲットしよう！"_
      courseC_collector_prog9_2019: _"すべてのたからものをゲットしよう！"_
      courseC_collector_prog_challenge2: どうくつの中に たからものが ２０こ あります。１０こ いじょう あつめて パズルを
        クリアしよう！
      courseC_collector_prog_challenge2_2018: どうくつの中に たからものが ２０こ あります。１０こ いじょう あつめて
        パズルを クリアしよう！
      courseC_collector_prog_challenge2_2019: どうくつの中に たからものが ２０こ あります。１０こ いじょう あつめて
        パズルを クリアしよう！
      courseC_flappy_events1: |-
        `クリックしたとき` の下に `ふつうにバタバタする` をひっつけて”実行（じっこう）”してみよう。

        * * *

        クリックするかタップすれば、フラッピーは、まとに むかって うごきます。
      courseC_flappy_events10: "自分だけのゲームを作ってみよう！ \n\nキャラクターやしょうがいぶつもかえることができるよ、それから、パタパタするスピードもね！\n\"おわり\"をおして、このゲームを共有（きょうゆう）すれば、ともだちも
        あそぶことが できます。"
      courseC_flappy_events10_2018: "自分だけのゲームを作ってみよう！ \n\nキャラクターやしょうがいぶつもかえることができるよ、それから、パタパタするスピードもね！\n\"おわり\"をおして、このゲームを共有（きょうゆう）すれば、ともだちも
        あそぶことが できます。"
      courseC_flappy_events10_2019: "自分だけのゲームを作ってみよう！ \n\nキャラクターやしょうがいぶつもかえることができるよ、それから、パタパタするスピードもね！\n\"おわり\"をおして、このゲームを共有（きょうゆう）すれば、ともだちも
        あそぶことが できます。"
      courseC_flappy_events1_2018: |-
        `クリックしたとき` の下に `ふつうにバタバタする` をひっつけて”実行（じっこう）”してみよう。

        * * *

        クリックするかタップすれば、フラッピーは、まとに むかって うごきます。
      courseC_flappy_events1_2019: |-
        `クリックしたとき` の下に `ふつうにバタバタする` をひっつけて”実行（じっこう）”してみよう。

        * * *

        クリックするかタップすれば、フラッピーは、まとに むかって うごきます。
      courseC_flappy_events2: |-
        `実行（じっこう）した時` にひっつけたブロックは、プログラムが はじまったら すぐに 実行（じっこう）されます。

        "実行（じっこう）"ボタンをおしたとき、スピードをふつうにするを ついか してみよう。

        * * *

        まと まで はばたき つづけよう。
      courseC_flappy_events2_2018: |-
        `実行（じっこう）した時` にひっつけたブロックは、プログラムが はじまったら すぐに 実行（じっこう）されます。

        "実行（じっこう）"ボタンをおしたとき、スピードをふつうにするを ついか してみよう。

        * * *

        まと まで はばたき つづけよう。
      courseC_flappy_events2_2019: |-
        `実行（じっこう）した時` にひっつけたブロックは、プログラムが はじまったら すぐに 実行（じっこう）されます。

        "実行（じっこう）"ボタンをおしたとき、スピードをふつうにするを ついか してみよう。

        * * *

        まと まで はばたき つづけよう。
      courseC_flappy_events3: |-
        地めんをついかしました。

        `じめんに ぶつかったとき` に`ゲームオーバー`をひっつけて。

        * * *

        鳥を地めんにぶつけてみよう。
      courseC_flappy_events3_2018: |-
        地めんをついかしました。

        `じめんに ぶつかったとき` に`ゲームオーバー`をひっつけて。

        * * *

        鳥を地めんにぶつけてみよう。
      courseC_flappy_events3_2019: |-
        地めんをついかしました。

        `じめんに ぶつかったとき` に`ゲームオーバー`をひっつけて。

        * * *

        鳥を地めんにぶつけてみよう。
      courseC_flappy_events4: |-
        フラッピーが しょうがいぶつに あたったときの プログラムを かかないと フラッピーは とびつづけます。

        フラッピーが パイプに あたったとき、ゲームオーバーに なるよう`しょうがいぶつに あたったとき` に ブロックを ひっつけよう。
      courseC_flappy_events4_2018: |-
        フラッピーが しょうがいぶつに あたったときの プログラムを かかないと フラッピーは とびつづけます。

        フラッピーが パイプに あたったとき、ゲームオーバーに なるよう`しょうがいぶつに あたったとき` に ブロックを ひっつけよう。
      courseC_flappy_events4_2019: |-
        フラッピーが しょうがいぶつに あたったときの プログラムを かかないと フラッピーは とびつづけます。

        フラッピーが パイプに あたったとき、ゲームオーバーに なるよう`しょうがいぶつに あたったとき` に ブロックを ひっつけよう。
      courseC_flappy_events5: |-
        フラッピーが しょうがいぶつを とおりぬけたとき、ポイントが入るようにしよう。

        `しょうがいぶつを とおりぬけたとき`に ブロックを ひっつけて、フラッピーが パイプの間を とおりぬけたとき、ポイントが入るようにしよう。
      courseC_flappy_events5_2018: |-
        フラッピーが しょうがいぶつを とおりぬけたとき、ポイントが入るようにしよう。

        `しょうがいぶつを とおりぬけたとき`に ブロックを ひっつけて、フラッピーが パイプの間を とおりぬけたとき、ポイントが入るようにしよう。
      courseC_flappy_events5_2019: |-
        フラッピーが しょうがいぶつを とおりぬけたとき、ポイントが入るようにしよう。

        `しょうがいぶつを とおりぬけたとき`に ブロックを ひっつけて、フラッピーが パイプの間を とおりぬけたとき、ポイントが入るようにしよう。
      courseC_flappy_events6: |-
        `ふつうにパタパタする` ブロックのなかにある 小さなやじるしを おすと パタパタする スピードを かえることができます。

        「すこしパタパタする」や「たくさんパタパタする」にしても、ポイントをゲットできるかためしてみよう。
      courseC_flappy_events6_2018: |-
        `ふつうにパタパタする` ブロックのなかにある 小さなやじるしを おすと パタパタする スピードを かえることができます。

        「すこしパタパタする」や「たくさんパタパタする」にしても、ポイントをゲットできるかためしてみよう。
      courseC_flappy_events6_2019: |-
        `ふつうにパタパタする` ブロックのなかにある 小さなやじるしを おすと パタパタする スピードを かえることができます。

        「すこしパタパタする」や「たくさんパタパタする」にしても、ポイントをゲットできるかためしてみよう。
      courseC_flappy_events7: "`実行（じっこう）した時` のうしろにブロックをひっつけて、はいけいをかえてみよう。"
      courseC_flappy_events7_2018: "`実行（じっこう）した時` のうしろにブロックをひっつけて、はいけいをかえてみよう。"
      courseC_flappy_events7_2019: "`実行（じっこう）した時` のうしろにブロックをひっつけて、はいけいをかえてみよう。"
      courseC_flappy_events8: |-
        ゲームを実行（じっこう）した時だけでなく、いつでも はいけいを かえることが できます。

        しょうがいぶつをとおりぬけたときに、はいけいが **ランダム**に かわるように してみよう。
      courseC_flappy_events8_2018: |-
        ゲームを実行（じっこう）した時だけでなく、いつでも はいけいを かえることが できます。

        しょうがいぶつをとおりぬけたときに、はいけいが **ランダム**に かわるように してみよう。
      courseC_flappy_events8_2019: |-
        ゲームを実行（じっこう）した時だけでなく、いつでも はいけいを かえることが できます。

        しょうがいぶつをとおりぬけたときに、はいけいが **ランダム**に かわるように してみよう。
      courseC_flappy_events9: しょうがいぶつに あたったとき、ゲームオーバーではなく、スコアが 0に なるように してみよう。
      courseC_flappy_events9_2018: しょうがいぶつに あたったとき、ゲームオーバーではなく、スコアが 0に なるように してみよう。
      courseC_flappy_events9_2019: しょうがいぶつに あたったとき、ゲームオーバーではなく、スコアが 0に なるように してみよう。
      courseC_harvester_loops1: |-
        前にすすんだあと、くりかえしをつかいます。
        くりかえしをつかって、4つのかぼちゃをあつめよう。
      courseC_harvester_loops10: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops10_2018: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops10_2019: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops11: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops11_2018: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops11_2019: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops1_2018: |-
        前にすすんだあと、くりかえしをつかいます。
        くりかえしをつかって、4つのかぼちゃをあつめよう。
      courseC_harvester_loops1_2019: |-
        前にすすんだあと、くりかえしをつかいます。
        くりかえしをつかって、4つのかぼちゃをあつめよう。
      courseC_harvester_loops2: 前にすすむループ あとに かぼちゃをあつめる ループを プログラムできる？
      courseC_harvester_loops2_2018: 前にすすむループ あとに かぼちゃをあつめる ループを プログラムできる？
      courseC_harvester_loops2_2019: 前にすすむループ あとに かぼちゃをあつめる ループを プログラムできる？
      courseC_harvester_loops3: かぼちゃをあつめよう。
      courseC_harvester_loops3_2018: かぼちゃをあつめよう。
      courseC_harvester_loops3_2019: かぼちゃをあつめよう。
      courseC_harvester_loops4: |-
        とうもろこし も そだってきたぞ！

        とうもうろこし と かぼちゃ を ぜんぶ あつめよう。
      courseC_harvester_loops4_2018: |-
        とうもろこし も そだってきたぞ！

        とうもうろこし と かぼちゃ を ぜんぶ あつめよう。
      courseC_harvester_loops4_2019: |-
        とうもろこし も そだってきたぞ！

        とうもうろこし と かぼちゃ を ぜんぶ あつめよう。
      courseC_harvester_loops5: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops5_2018: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops5_2019: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops6: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops6_2018: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops6_2019: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops7: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops7_2018: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops7_2019: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops8: |-
        **チャレンジ** すべてのとうもろこし と かぼちゃを あつめよう。

        長いプログラムを書くか、短いプログラムになるように考えるのか、すきなやり方でパズルをクリアしよう。
      courseC_harvester_loops8_2018: |-
        **チャレンジ** すべてのとうもろこし と かぼちゃを あつめよう。

        長いプログラムを書くか、短いプログラムになるように考えるのか、すきなやり方でパズルをクリアしよう。
      courseC_harvester_loops8_2019: |-
        **チャレンジ** すべてのとうもろこし と かぼちゃを あつめよう。

        長いプログラムを書くか、短いプログラムになるように考えるのか、すきなやり方でパズルをクリアしよう。
      courseC_harvester_loops9: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops9_2018: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops9_2019: とうもうろこし と かぼちゃ を あつめよう。
      courseC_harvester_loops_challenge2: 木とはたけをさけて、レタスをあつめよう！
      courseC_harvester_loops_challenge2_2018: 木とはたけをさけて、レタスをあつめよう！
      courseC_harvester_loops_challenge2_2019: 木とはたけをさけて、レタスをあつめよう！
      courseC_maze_debugging1: |-
        プログラムにはまちがいあります！

        リスがドングリのところへ行けるようプログラムをなおしてみよう。
      courseC_maze_debugging1_2018: |-
        プログラムにはまちがいあります！

        リスがドングリのところへ行けるようプログラムをなおしてみよう。
      courseC_maze_debugging1_2019: |-
        プログラムにはまちがいあります！

        リスがドングリのところへ行けるようプログラムをなおしてみよう。
      courseC_maze_debugging3: |-
        プログラムにはまちがいあります！

        リスがドングリのところへ行けるようプログラムをなおしてみよう。
      courseC_maze_debugging3_2018: |-
        プログラムにはまちがいあります！

        リスがドングリのところへ行けるようプログラムをなおしてみよう。
      courseC_maze_debugging3_2019: |-
        プログラムにはまちがいあります！

        リスがドングリのところへ行けるようプログラムをなおしてみよう。
      courseC_maze_debugging_challenge2: 回りすぎると、めまいがするよ！ 4つの `まがる` ブロックだけでドングリをひろえるようにしてね。
      courseC_maze_debugging_challenge2_2018: 回りすぎると、めまいがするよ！ 4つの `まがる` ブロックだけでドングリをひろえるようにしてね。
      courseC_maze_debugging_challenge2_2019: 回りすぎると、めまいがするよ！ 4つの `まがる` ブロックだけでドングリをひろえるようにしてね。
      courseC_maze_programming1: このパズルでは、ブロックをドラッグしてくっつけたら「実行」をクリックして、どうなるか見てみよう！
      courseC_maze_programming1_2018: このパズルでは、ブロックをドラッグしてくっつけたら「実行」をクリックして、どうなるか見てみよう！
      courseC_maze_programming1_2019: このパズルでは、ブロックをドラッグしてくっつけたら「実行」をクリックして、どうなるか見てみよう！
      courseC_maze_programming2: ツールボックスからもうひとつ <xml><block type="maze_moveForward"/></xml>
        ブロックをドラッグしてきて、コードをかんせいさせよう。
      courseC_maze_programming2_2018: ツールボックスからもうひとつ <xml><block type="maze_moveForward"/></xml>
        ブロックをドラッグしてきて、コードをかんせいさせよう。
      courseC_maze_programming2_2019: ツールボックスからもうひとつ <xml><block type="maze_moveForward"
        block-text="move forward"/></xml> ブロックをドラッグしてきて、コードをかんせいさせよう。
      courseC_maze_programming3: |-
        _"ブタさんがトリさんのはねをくしゃくしゃにした"_

        よけいなブロックが１つあって、ブタさんのところへ行けません。\
        はい色のブロックの中から それを取り出して、ツールボックスにもどしましょう。
      courseC_maze_programming3_2018: |-
        _"ブタさんがトリさんのはねをくしゃくしゃにした"_

        よけいなブロックが１つあって、ブタさんのところへ行けません。\
        はい色のブロックの中から それを取り出して、ツールボックスにもどしましょう。
      courseC_maze_programming3_2019: |-
        _"ブタさんがトリさんのはねをくしゃくしゃにした"_

        よけいなブロックが１つあって、ブタさんのところへ行けません。\
        はい色のブロックの中から それを取り出して、ツールボックスにもどしましょう。
      courseC_maze_programming4: "_\"道にそって、ブタさんのところへ連れて行って。\"_ \n\nTNTにぶつからないで！羽がなくなちゃうよ。"
      courseC_maze_programming4_2018: "_\"道にそって、ブタさんのところへ連れて行って。\"_ \n\nTNTにぶつからないで！羽がなくなちゃうよ。"
      courseC_maze_programming4_2019: "_\"道にそって、ブタさんのところへ連れて行って。\"_ \n\nTNTにぶつからないで！羽がなくなちゃうよ。"
      courseC_maze_programming5: |-
        _"ブタさんのところにつれて行って！"_

        TNTにぶつからないで。
      courseC_maze_programming5_2018: |-
        _"ブタさんのところにつれて行って！"_

        TNTにぶつからないで。
      courseC_maze_programming5_2019: |-
        _"ブタさんのところにつれて行って！"_

        TNTにぶつからないで。
      courseC_maze_programming6: |-
        _"トリさんがブタをさがすのを手つだって。手つだってくれなかったらおこるよ！"_
        TNTにさわらないように、トリさんをブタさんのところへ連れて行って。
      courseC_maze_programming6_2018: |-
        _"トリさんがブタをさがすのを手つだって。手つだってくれなかったらおこるよ！"_
        TNTにさわらないように、トリさんをブタさんのところへ連れて行って。
      courseC_maze_programming6_2019: |-
        _"トリさんがブタをさがすのを手つだって。手つだってくれなかったらおこるよ！"_
        TNTにさわらないように、トリさんをブタさんのところへ連れて行って。
      courseC_maze_programming7: |-
        _"頭にきたぞ！"_
        **チャレンジ:** このプログラムには、いくつかのバグがあります。
        ブロックをけしたり、ついかしたりしてみよう。
      courseC_maze_programming7_2018: |-
        _"頭にきたぞ！"_
        **チャレンジ:** このプログラムには、いくつかのバグがあります。
        ブロックをけしたり、ついかしたりしてみよう。
      courseC_maze_programming7_2019: |-
        _"頭にきたぞ！"_
        **チャレンジ:** このプログラムには、いくつかのバグがあります。
        ブロックをけしたり、ついかしたりしてみよう。
      courseC_maze_programming8: _"おちついて ブタさんをいっしょにさがそう。"_
      courseC_maze_programming8_2018: _"おちついて ブタさんをいっしょにさがそう。"_
      courseC_maze_programming8_2019: _"おちついて ブタさんをいっしょにさがそう。"_
      courseC_maze_programming8_predict1: _"おちついて ブタさんをいっしょにさがそう。"_
      courseC_maze_programming8_predict1_2018: _"おちついて ブタさんをいっしょにさがそう。"_
      courseC_maze_programming8_predict1_2019: _"おちついて ブタさんをいっしょにさがそう。"_
      courseC_maze_programming9: _"じぶんの すきな ほうほうで ブタのところに 行ってみよう！"_
      courseC_maze_programming9_2018: _"じぶんの すきな ほうほうで ブタのところに 行ってみよう！"_
      courseC_maze_programming9_2019: _"じぶんの すきな ほうほうで ブタのところに 行ってみよう！"_
      courseC_maze_programming_challenge1: 'かくれているブタのところへ行けなくて、こまっている鳥を助けてあげよう！ '
      courseC_maze_programming_challenge1_2018: 'かくれているブタのところへ行けなくて、こまっている鳥を助けてあげよう！ '
      courseC_maze_programming_challenge1_2019: 'かくれているブタのところへ行けなくて、こまっている鳥を助けてあげよう！ '
      courseC_maze_programming_challenge2: |-
        ブタのところに行くには、いろいろなほうほうがあります。
        前に進むよりも、後ろにもどったほうが、早く行けることもあります。
      courseC_maze_programming_challenge2_2018: |-
        ブタのところに行くには、いろいろなほうほうがあります。
        前に進むよりも、後ろにもどったほうが、早く行けることもあります。
      courseC_maze_programming_challenge2_2019: |-
        ブタのところに行くには、いろいろなほうほうがあります。
        前に進むよりも、後ろにもどったほうが、早く行けることもあります。
      courseC_starWars_loops1: |-
        BB-8！ スクラップされたガラクタをあつめて！
        おなじブロックを5つつかってガラクタをあつめます。ガラクタはこんなかたちをしているよ。
      courseC_starWars_loops10: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
         _"行け BB-8！"_

        すばらしい！がんばって！
      courseC_starWars_loops10_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
         _"行け BB-8！"_

        すばらしい！がんばって！
      courseC_starWars_loops10_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
         _"行け BB-8！"_

        すばらしい！がんばって！
      courseC_starWars_loops11: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばって、BB-8！"_

        あともう少し。こんどは自分のすきなほうほうでやってみよう。
      courseC_starWars_loops11_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばって、BB-8！"_

        あともう少し。こんどは自分のすきなほうほうでやってみよう。
      courseC_starWars_loops11_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばって、BB-8！"_

        あともう少し。こんどは自分のすきなほうほうでやってみよう。
      courseC_starWars_loops1_2018: |-
        BB-8！ スクラップされたガラクタをあつめて！
        おなじブロックを5つつかってガラクタをあつめます。ガラクタはこんなかたちをしているよ。
      courseC_starWars_loops1_2019: |-
        BB-8！ スクラップされたガラクタをあつめて！
        おなじブロックを5つつかってガラクタをあつめます。ガラクタはこんなかたちをしているよ。
      courseC_starWars_loops2: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"行け BB-8！"_
        `くりかえし` ブロックの中に １つだけ ブロックを 入れて すべてのスクラップを あつめよう。
      courseC_starWars_loops2_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"行け BB-8！"_
        `くりかえし` ブロックの中に １つだけ ブロックを 入れて すべてのスクラップを あつめよう。
      courseC_starWars_loops2_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"行け BB-8！"_
        `くりかえし` ブロックの中に １つだけ ブロックを 入れて すべてのスクラップを あつめよう。
      courseC_starWars_loops4: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばれ、BB-8！"_
        短いプログラムで すべてのスクラップを あつめるには、`くりかえし`ブロックを ２つ つかいます。
      courseC_starWars_loops4_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばれ、BB-8！"_
        短いプログラムで すべてのスクラップを あつめるには、`くりかえし`ブロックを ２つ つかいます。
      courseC_starWars_loops4_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばれ、BB-8！"_
        短いプログラムで すべてのスクラップを あつめるには、`くりかえし`ブロックを ２つ つかいます。
      courseC_starWars_loops5: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"行け BB-8！"_'
      courseC_starWars_loops5_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"行け BB-8！"_'
      courseC_starWars_loops5_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"行け BB-8！"_'
      courseC_starWars_loops6: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"スクラップを ぜんぶ あつめることが できるかな？"_
        １ついじょうのブロックを中に入れてくりかえしてみよう！下のプログラムを くりかえすことが できるかな？
      courseC_starWars_loops6_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"スクラップを ぜんぶ あつめることが できるかな？"_
        １ついじょうのブロックを中に入れてくりかえしてみよう！下のプログラムを くりかえすことが できるかな？
      courseC_starWars_loops6_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"スクラップを ぜんぶ あつめることが できるかな？"_
        １ついじょうのブロックを中に入れてくりかえしてみよう！下のプログラムを くりかえすことが できるかな？
      courseC_starWars_loops7: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"ぜったい できるよ！"_
        くりかえしを １つだけ つかって すべてのスクラップを あつめることが できるかな？くりかえしの パターンを 見つけて くりかえしの中に 入れてみよう。
      courseC_starWars_loops7_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"ぜったい できるよ！"_
        くりかえしを １つだけ つかって すべてのスクラップを あつめることが できるかな？くりかえしの パターンを 見つけて くりかえしの中に 入れてみよう。
      courseC_starWars_loops7_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"ぜったい できるよ！"_
        くりかえしを １つだけ つかって すべてのスクラップを あつめることが できるかな？くりかえしの パターンを 見つけて くりかえしの中に 入れてみよう。
      courseC_starWars_loops8: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばって、BB-8."_

        **チャレンジ** さっきやったことを思い出して、このパズルをクリアしよう。
      courseC_starWars_loops8_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばって、BB-8."_

        **チャレンジ** さっきやったことを思い出して、このパズルをクリアしよう。
      courseC_starWars_loops8_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"がんばって、BB-8."_

        **チャレンジ** さっきやったことを思い出して、このパズルをクリアしよう。
      courseC_starWars_loops9: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"つきすすめ！"_

        いままでやったことを思い出して、すべてのスクラップをあつめよう！
      courseC_starWars_loops9_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"つきすすめ！"_

        いままでやったことを思い出して、すべてのスクラップをあつめよう！
      courseC_starWars_loops9_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"つきすすめ！"_

        いままでやったことを思い出して、すべてのスクラップをあつめよう！
      courseD_artist_binary1: |-
        マスの色を変えてデザインすることができます。

         "01010101" で １行目を かいてみよう。
      courseD_artist_binary1_2018: |-
        マスの色を変えてデザインすることができます。

         "01010101" で １行目を かいてみよう。
      courseD_artist_binary1_2019: |-
        マスの色を変えてデザインすることができます。

         "01010101" で １行目を かいてみよう。
      courseD_artist_binary2: |-
        1と0でできた文字列をもとに、左から右へ、上から下へとアーティストを動かす命令があります。

        * * *

        アーティストは、1であれば マスを ぬりつぶし、0であれば そのままにします。

        * * *

        **どんなパターンがかかれるか、プログラムを実行してみよう。**
      courseD_artist_binary2_2018: |-
        1と0でできた文字列をもとに、左から右へ、上から下へとアーティストを動かす命令があります。

        * * *

        アーティストは、1であれば マスを ぬりつぶし、0であれば そのままにします。

        * * *

        **どんなパターンがかかれるか、プログラムを実行してみよう。**
      courseD_artist_binary2_2019: |-
        1と0でできた文字列をもとに、左から右へ、上から下へとアーティストを動かす命令があります。

        * * *

        アーティストは、1であれば マスを ぬりつぶし、0であれば そのままにします。

        * * *

        **どんなパターンがかかれるか、プログラムを実行してみよう。**
      courseD_artist_nestedLoops1a: "三角形を６個かいてみよう。 \n\n三角形を１つ かいたら、60度曲がってから 次の三角形を
        かこう。 "
      courseD_artist_nestedLoops1a_2018: "三角形を６個かいてみよう。 \n\n三角形を１つ かいたら、60度曲がってから
        次の三角形を かこう。 "
      courseD_artist_nestedLoops1a_2019: "三角形を６個かいてみよう。 \n\n三角形を１つ かいたら、60度曲がってから
        次の三角形を かこう。 "
      courseD_artist_nestedLoops2: |-
        今度は、もっとも短いプログラムで パズルを クリアしよう。

        三角形を一つかいたら、60度曲がって次の三角形をかきます。
        **くりかえしの入れ子**で プログラムを どれだけ 短く できるかな？
      courseD_artist_nestedLoops2_2018: |-
        今度は、もっとも短いプログラムで パズルを クリアしよう。

        三角形を一つかいたら、60度曲がって次の三角形をかきます。
        **くりかえしの入れ子**で プログラムを どれだけ 短く できるかな？
      courseD_artist_nestedLoops2_2019: |-
        今度は、もっとも短いプログラムで パズルを クリアしよう。

        三角形を一つかいたら、60度曲がって次の三角形をかきます。
        **くりかえしの入れ子**で プログラムを どれだけ 短く できるかな？
      courseD_artist_nestedLoops4: |-
        すごい！こんどは、円でやってみよう。

        -   円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
        -   次の円は、かき終わった場所から 50ピクセル はなれたところから かき始めます。
      courseD_artist_nestedLoops4_2018: |-
        すごい！こんどは、円でやってみよう。

        -   円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
        -   次の円は、かき終わった場所から 50ピクセル はなれたところから かき始めます。
      courseD_artist_nestedLoops4_2019: |-
        すごい！こんどは、円でやってみよう。

        -   円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
        -   次の円は、かき終わった場所から 50ピクセル はなれたところから かき始めます。
      courseD_artist_nestedLoops5: |-
        円をかき終わった後、90度まがるようにしたら どうなるかな？

        (ただし、円をかき終わった後、50ピクセル ジャンプしてから、90度まがるよ)
      courseD_artist_nestedLoops5_2018: |-
        円をかき終わった後、90度まがるようにしたら どうなるかな？

        (ただし、円をかき終わった後、50ピクセル ジャンプしてから、90度まがるよ)
      courseD_artist_nestedLoops5_2019: |-
        円をかき終わった後、90度まがるようにしたら どうなるかな？

        (ただし、円をかき終わった後、50ピクセル ジャンプしてから、90度まがるよ)
      courseD_artist_nestedLoops7: |-
        こんどは、これをかいてみよう。

        -   四角形の一辺の長さは**100 ピクセル** で 角度は**90度**
        -   四角形をかいたら、**60 度** まがる。四角形を6つ かいて 一周するから 360÷6で 60度。
        -   **50 ピクセルジャンプ**してから、つぎの四角形をかく
      courseD_artist_nestedLoops7_2018: |-
        こんどは、これをかいてみよう。

        -   四角形の一辺の長さは**100 ピクセル** で 角度は**90度**
        -   四角形をかいたら、**60 度** まがる。四角形を6つ かいて 一周するから 360÷6で 60度。
        -   **50 ピクセルジャンプ**してから、つぎの四角形をかく
      courseD_artist_nestedLoops7_2019: |-
        こんどは、これをかいてみよう。

        -   四角形の一辺の長さは**100 ピクセル** で 角度は**90度**
        -   四角形をかいたら、**60 度** まがる。四角形を6つ かいて 一周するから 360÷6で 60度。
        -   **50 ピクセルジャンプ**してから、つぎの四角形をかく
      courseD_artist_nestedLoops8: |-
        さっきやったパズルを思い出して、今度は、これを １から かいてみよう。

        -   六角形の辺の長さは**50 ピクセル** で まがる角度は**60 度**
      courseD_artist_nestedLoops8_2018: |-
        さっきやったパズルを思い出して、今度は、これを １から かいてみよう。

        -   六角形の辺の長さは**50 ピクセル** で まがる角度は**60 度**
      courseD_artist_nestedLoops8_2019: |-
        さっきやったパズルを思い出して、今度は、これを １から かいてみよう。

        -   六角形の辺の長さは**50 ピクセル** で まがる角度は**60 度**
      courseD_artist_nestedLoops9: |-
        **チャレンジ** 同じ図が、かけるかな？

        -   図形の大きさは**50 ピクセル**
        -   １つ図形をかいたら、前に50ピクセル ジャンプして、45度 まがる
      courseD_artist_nestedLoops9_2018: |-
        **チャレンジ** 同じ図が、かけるかな？

        -   図形の大きさは**50 ピクセル**
        -   １つ図形をかいたら、前に50ピクセル ジャンプして、45度 まがる
      courseD_artist_nestedLoops9_2019: |-
        **チャレンジ** 同じ図が、かけるかな？

        -   図形の大きさは**50 ピクセル**
        -   １つ図形をかいたら、前に50ピクセル ジャンプして、45度 まがる
      courseD_artist_nestedLoops9_predict1: |-
        **チャレンジ** 同じ図が、かけるかな？

        -   図形の大きさは、両方とも50ピクセル
      courseD_artist_nestedLoops9_predict1_2018: |-
        **チャレンジ** 同じ図が、かけるかな？

        -   図形の大きさは、両方とも50ピクセル
      courseD_artist_nestedLoops9_predict1_2019: |-
        **チャレンジ** 同じ図が、かけるかな？

        -   図形の大きさは、両方とも50ピクセル
      courseD_artist_nestedLoopsFP: |-
        今度は、自分の思い通りに図形をかいていよう！

        アイデアが必要？ こんなのはどう？

        ![expandable](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)
        ![expandable](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)
        ![expandable](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)
      courseD_artist_nestedLoopsFP_2018: |-
        今度は、自分の思い通りに図形をかいていよう！

        アイデアが必要？ こんなのはどう？

        ![expandable](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)
        ![expandable](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)
        ![expandable](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)
      courseD_artist_nestedLoopsFP_2019: |-
        今度は、自分の思い通りに図形をかいていよう！

        アイデアが必要？ こんなのはどう？

        ![expandable](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)
        ![expandable](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)
        ![expandable](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)
      courseD_artist_nestedLoops_challenge1: |-
        同じ図が、かけるかな？

        -   図形の大きさは、両方とも**50ピクセル**
        -   八角形をかくには、**45 度** まがるを使います
        -   三角形をかくには、**120 度** まがるを使います
      courseD_artist_nestedLoops_challenge1_2018: |-
        同じ図が、かけるかな？

        -   図形の大きさは、両方とも**50ピクセル**
        -   八角形をかくには、**45 度** まがるを使います
        -   三角形をかくには、**120 度** まがるを使います
      courseD_artist_nestedLoops_challenge1_2019: |-
        同じ図が、かけるかな？

        -   図形の大きさは、両方とも**50ピクセル**
        -   八角形をかくには、**45 度** まがるを使います
        -   三角形をかくには、**120 度** まがるを使います
      courseD_artist_nestedLoops_challenge2: |-
        プログラムにはバグがあります！バグをなおして、正しい図形が かけるようにできるかな？

        -   1番目のループは八角形
        -   2番目のループは六角形
        -   3番目のループは正方形
      courseD_artist_nestedLoops_challenge2_2018: |-
        プログラムにはバグがあります！バグをなおして、正しい図形が かけるようにできるかな？

        -   1番目のループは八角形
        -   2番目のループは六角形
        -   3番目のループは正方形
      courseD_artist_nestedLoops_challenge2_2019: |-
        プログラムにはバグがあります！バグをなおして、正しい図形が かけるようにできるかな？

        -   1番目のループは八角形
        -   2番目のループは六角形
        -   3番目のループは正方形
      courseD_artist_project1: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“Hi、アレンデールのエルサよ、図形をかくのを手伝って。”_\n\n一辺が**20～50**ピクセル の小さな図形をかいてみましょう。  \n\n<hr/>\n\nつぎの多角形の中から
        1つ かいてみましょう。\\\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \n\nほかにも こんな図形は、どうかしら？\\\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)"
      courseD_artist_project1_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“Hi、アレンデールのエルサよ、図形をかくのを手伝って。”_\n\n一辺が**20～50**ピクセル の小さな図形をかいてみましょう。  \n\n<hr/>\n\nつぎの多角形の中から
        1つ かいてみましょう。\\\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \n\nほかにも こんな図形は、どうかしら？\\\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)"
      courseD_artist_project1_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“Hi、アレンデールのエルサよ、図形をかくのを手伝って。”_\n\n一辺が**20～50**ピクセル の小さな図形をかいてみましょう。  \n\n<hr/>\n\nつぎの多角形の中から
        1つ かいてみましょう。\\\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \n\nほかにも こんな図形は、どうかしら？\\\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)"
      courseD_artist_project1a: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"新しい模様をかいてみましょう。今度は、ジグザグね。"_

        <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" style="float: left; margin: 0 15px 15px 0;" />

        75～105度曲がるくり返して、階段のパターンをかいてみよう。ただし、曲がる方向は、左、右の順番で同じ角度で曲がってね。\
        (どうしてかは、あとで説明します。)
      courseD_artist_project1a_2018: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"新しい模様をかいてみましょう。今度は、ジグザグね。"_

        <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" style="float: left; margin: 0 15px 15px 0;" />

        75～105度曲がるくり返して、階段のパターンをかいてみよう。ただし、曲がる方向は、左、右の順番で同じ角度で曲がってね。\
        (どうしてかは、あとで説明します。)
      courseD_artist_project1a_2019: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"新しい模様をかいてみましょう。今度は、ジグザグね。"_

        <img src="https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png" width="200px" style="float: left; margin: 0 15px 15px 0;" />

        75～105度曲がるくり返して、階段のパターンをかいてみよう。ただし、曲がる方向は、左、右の順番で同じ角度で曲がってね。\
        (どうしてかは、あとで説明します。)
      courseD_artist_project2: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“さあ、いくつか図形をかいてみましょう。”_\n\n図形をかいたら、前にジャンプして、2つ または 3つの図形をかいてみましょう。  \n\n-
        \  図形の長さより**小さければ**、図形は重なります\n-   図形の長さより**大きければ**、図形と図形の間にはすき間ができます。\n\n<hr/>\n\nこんな風に一直線にならべてね。\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>
        \ <br/>\n\nこんな風に丸くするのもいいわね。\n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“さあ、いくつか図形をかいてみましょう。”_\n\n図形をかいたら、前にジャンプして、2つ または 3つの図形をかいてみましょう。  \n\n-
        \  図形の長さより**小さければ**、図形は重なります\n-   図形の長さより**大きければ**、図形と図形の間にはすき間ができます。\n\n<hr/>\n\nこんな風に一直線にならべてね。\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>
        \ <br/>\n\nこんな風に丸くするのもいいわね。\n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“さあ、いくつか図形をかいてみましょう。”_\n\n図形をかいたら、前にジャンプして、2つ または 3つの図形をかいてみましょう。  \n\n-
        \  図形の長さより**小さければ**、図形は重なります\n-   図形の長さより**大きければ**、図形と図形の間にはすき間ができます。\n\n<hr/>\n\nこんな風に一直線にならべてね。\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>
        \ <br/>\n\nこんな風に丸くするのもいいわね。\n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"最後まで行ったら、来た道をもどってみるわよ。\"_\n\n最後まで行ったら、来た道をもどりながら階段のパターンをかいてみよう！  \n\n-
        \  さっきエルサが図形をかいたプログラムを使って、図形をかく、180度曲がる、図形をかく、180度曲がるで、つぎの絵をかくことができます\n\n<hr/>\n\n曲がる角度を76度にしてかいたもの\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project2a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"最後まで行ったら、来た道をもどってみるわよ。\"_\n\n最後まで行ったら、来た道をもどりながら階段のパターンをかいてみよう！  \n\n-
        \  さっきエルサが図形をかいたプログラムを使って、図形をかく、180度曲がる、図形をかく、180度曲がるで、つぎの絵をかくことができます\n\n<hr/>\n\n曲がる角度を76度にしてかいたもの\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project2a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"最後まで行ったら、来た道をもどってみるわよ。\"_\n\n最後まで行ったら、来た道をもどりながら階段のパターンをかいてみよう！  \n\n-
        \  さっきエルサが図形をかいたプログラムを使って、図形をかく、180度曲がる、図形をかく、180度曲がるで、つぎの絵をかくことができます\n\n<hr/>\n\n曲がる角度を76度にしてかいたもの\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project3: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"雪の模様をかこう"_

        `ジャンプ 200 、200` を使って、エルサを真ん中に もどします。方向を変えながら、何回も線の模様をかきます。

        雪の模様ができた！

        * * *

        多角形でかいた見本よ\
        ![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)
        ![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)
        ![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)

        ほかにも こんなのは どうかしら？\
        ![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)
        ![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)
        ![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)
      courseD_artist_project3_2018: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"雪の模様をかこう"_

        `ジャンプ 200 、200` を使って、エルサを真ん中に もどします。方向を変えながら、何回も線の模様をかきます。

        雪の模様ができた！

        * * *

        多角形でかいた見本よ\
        ![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)
        ![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)
        ![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)

        ほかにも こんなのは どうかしら？\
        ![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)
        ![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)
        ![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)
      courseD_artist_project3_2019: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"雪の模様をかこう"_

        `ジャンプ 200 、200` を使って、エルサを真ん中に もどします。方向を変えながら、何回も線の模様をかきます。

        雪の模様ができた！

        * * *

        多角形でかいた見本よ\
        ![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)
        ![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)
        ![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)

        ほかにも こんなのは どうかしら？\
        ![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)
        ![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)
        ![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)
      courseD_artist_project3a: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"雪の模様をかいたら回ってみて"_

        1周するように5、6回まわってみよう。

        -   5回なら 72度
        -   6回なら 60度
            <hr/>

        エルサが6回まわったときの模様

        ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)
      courseD_artist_project3a_2018: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"雪の模様をかいたら回ってみて"_

        1周するように5、6回まわってみよう。

        -   5回なら 72度
        -   6回なら 60度
            <hr/>

        エルサが6回まわったときの模様

        ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)
      courseD_artist_project3a_2019: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"雪の模様をかいたら回ってみて"_

        1周するように5、6回まわってみよう。

        -   5回なら 72度
        -   6回なら 60度
            <hr/>

        エルサが6回まわったときの模様

        ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)
      courseD_artist_project4: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"ちがう雪の模様を重ね合わせたら、どうなるかしら？\"_\n\nこんな風に少し角度を変えて、ちがう雪の模様をかいて重ね合わせてみよう！ "
      courseD_artist_project4_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"ちがう雪の模様を重ね合わせたら、どうなるかしら？\"_\n\nこんな風に少し角度を変えて、ちがう雪の模様をかいて重ね合わせてみよう！ "
      courseD_artist_project4_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"ちがう雪の模様を重ね合わせたら、どうなるかしら？\"_\n\nこんな風に少し角度を変えて、ちがう雪の模様をかいて重ね合わせてみよう！ "
      courseD_artist_project4a: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _"今度は、何をかく？ 冬の世界を楽しみましょう！"_

        今までに作ったプログラムを使って、好きな図形をかいてみましょう！

        -   階段のパターンで左右の曲がる角度を変えたらどうなるかしら？
        -   すすむ長さを長くしたり、短くしたりしたらどうなるかしら？
        -   違う模様を重ねたらどうなるかしら？
      courseD_artist_project4a_2018: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _"今度は、何をかく？ 冬の世界を楽しみましょう！"_

        今までに作ったプログラムを使って、好きな図形をかいてみましょう！

        -   階段のパターンで左右の曲がる角度を変えたらどうなるかしら？
        -   すすむ長さを長くしたり、短くしたりしたらどうなるかしら？
        -   違う模様を重ねたらどうなるかしら？
      courseD_artist_project4a_2019: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)  _"今度は、何をかく？ 冬の世界を楽しみましょう！"_

        今までに作ったプログラムを使って、好きな図形をかいてみましょう！

        -   階段のパターンで左右の曲がる角度を変えたらどうなるかしら？
        -   すすむ長さを長くしたり、短くしたりしたらどうなるかしら？
        -   違う模様を重ねたらどうなるかしら？
      courseD_artist_project5: '![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _"形や角度を変えて、新しい雪の模様を作ってみよう！"_'
      courseD_artist_project5_2018: '![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _"形や角度を変えて、新しい雪の模様を作ってみよう！"_'
      courseD_artist_project5_2019: '![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _"形や角度を変えて、新しい雪の模様を作ってみよう！"_'
      courseD_artist_ramp11: |-
        すごい！ 四角形をかいてみよう！ 使うブロックは前のパズルと ちょっとちがうけど、やり方は同じだよ。

        * * *

        一つのへんの長さは200ピクセルです。１つのへんを かいたら 90度 曲がります。
      courseD_artist_ramp12: |-
        今まで勉強してことを使って、四角形の中に 三角形をかいてみよう。

        * * *

        ##### へんの長さは200ピクセル。四角形のときは90度、三角形のときは120度曲がります。
      courseD_autorun_binary2_2019: |-
        1と0でできた文字列をもとに、左から右へ、上から下へとアーティストを動かす命令があります。

        * * *

        アーティストは、1であれば マスを ぬりつぶし、0であれば そのままにします。

        * * *

        **どんなパターンがかかれるか、プログラムを実行してみよう。**
      courseD_bee_conditionals10: |-
        そこに何があるのか調べたいときは、条件判定文を使ってみましょう。

        ミツを集めてハチミツを作りましょう。
      courseD_bee_conditionals10_2018: |-
        そこに何があるのか調べたいときは、条件判定文を使ってみましょう。

        ミツを集めてハチミツを作りましょう。
      courseD_bee_conditionals10_2019: |-
        そこに何があるのか調べたいときは、条件判定文を使ってみましょう。

        ミツを集めてハチミツを作りましょう。
      courseD_bee_conditionals1_predict1: |-
        _"くもがあって下が見えないよ～！"_

        くもの下に花があるか調べて、花があればミツをとろう。
      courseD_bee_conditionals1_predict1_2018: |-
        _"くもがあって下が見えないよ～！"_

        くもの下に花があるか調べて、花があればミツをとろう。
      courseD_bee_conditionals1_predict1_2019: |-
        _"くもがあって下が見えないよ～！"_

        くもの下に花があるか調べて、花があればミツをとろう。
      courseD_bee_conditionals2: "くもが ふえた！ \n\nくもの下に花が かくれているか 調べて、ミツを集めましょう。もし花があったら、
        _１回だけ_花のミツをとりましょう。\n\nすべてのくもの下に 花があるとは かぎらないよ！"
      courseD_bee_conditionals2_2018: "くもが ふえた！ \n\nくもの下に花が かくれているか 調べて、ミツを集めましょう。もし花があったら、
        _１回だけ_花のミツをとりましょう。\n\nすべてのくもの下に 花があるとは かぎらないよ！"
      courseD_bee_conditionals2_2019: "くもが ふえた！ \n\nくもの下に花が かくれているか 調べて、ミツを集めましょう。もし花があったら、
        _１回だけ_花のミツをとりましょう。\n\nすべてのくもの下に 花があるとは かぎらないよ！"
      courseD_bee_conditionals3: 花があるかどうか調べて、花があれば ミツを集めること。くもの下に花があれば、_１回だけ_花のミツをとろう。
      courseD_bee_conditionals3_2018: 花があるかどうか調べて、花があれば ミツを集めること。くもの下に花があれば、_１回だけ_花のミツをとろう。
      courseD_bee_conditionals3_2019: 花があるかどうか調べて、花があれば ミツを集めること。くもの下に花があれば、_１回だけ_花のミツをとろう。
      courseD_bee_conditionals4: |-
        今回は、花には1つだけミツがありますが、すべての場所に花があるわけではありません。

        できるだけ少ないブロックですべてのミツを集めよう。
      courseD_bee_conditionals4_2018: |-
        今回は、花には1つだけミツがありますが、すべての場所に花があるわけではありません。

        できるだけ少ないブロックですべてのミツを集めよう。
      courseD_bee_conditionals4_2019: |-
        今回は、花には1つだけミツがありますが、すべての場所に花があるわけではありません。

        できるだけ少ないブロックですべてのミツを集めよう。
      courseD_bee_conditionals6: |-
        _"さあ、ハチミツを作ってみよう"_

        ハチの巣がかくれているくもがあります。かくれているのが、ハチの巣かどうか調べてみよう！ハチの巣であれば、ハチはハチミツを作ることができます。
      courseD_bee_conditionals6_2018: |-
        _"さあ、ハチミツを作ってみよう"_

        ハチの巣がかくれているくもがあります。かくれているのが、ハチの巣かどうか調べてみよう！ハチの巣であれば、ハチはハチミツを作ることができます。
      courseD_bee_conditionals6_2019: |-
        _"さあ、ハチミツを作ってみよう"_

        ハチの巣がかくれているくもがあります。かくれているのが、ハチの巣かどうか調べてみよう！ハチの巣であれば、ハチはハチミツを作ることができます。
      courseD_bee_conditionals7: |-
        くもの下には、花かハチの巣が かくれています！

        `もし やること/でなければ` を使って、ミツをあつめたり、ハチミツを作ったりしよう。もし花だったら、_一回だけ_ミツをとります。ハチの巣だったら、_一回だけ_ハチミツを作ります。
      courseD_bee_conditionals7_2018: |-
        くもの下には、花かハチの巣が かくれています！

        `もし やること/でなければ` を使って、ミツをあつめたり、ハチミツを作ったりしよう。もし花だったら、_一回だけ_ミツをとります。ハチの巣だったら、_一回だけ_ハチミツを作ります。
      courseD_bee_conditionals7_2019: |-
        くもの下には、花かハチの巣が かくれています！

        `もし やること/でなければ` を使って、ミツをあつめたり、ハチミツを作ったりしよう。もし花だったら、_一回だけ_ミツをとります。ハチの巣だったら、_一回だけ_ハチミツを作ります。
      courseD_bee_conditionals7_predict2: |-
        くもの下には、花かハチの巣が かくれています！

        `もし やること/でなければ` を使って、ミツをあつめたり、ハチミツを作ったりしよう。ちゅうい：くもにかくれているのは、花が_一つ_が、ハチの巣が_一つ_だよ。
      courseD_bee_conditionals8: |-
        **チャレンジ** くもの下には、花かハチの巣がかくれているよ!

        花だったら、１回だけミツを集めて、
        花でなければ、ハチミツをつくってください(花でなければ、ハチの巣だから)。
      courseD_bee_conditionals8_2018: |-
        **チャレンジ** くもの下には、花かハチの巣がかくれているよ!

        花だったら、１回だけミツを集めて、
        花でなければ、ハチミツをつくってください(花でなければ、ハチの巣だから)。
      courseD_bee_conditionals8_2019: |-
        **チャレンジ** くもの下には、花かハチの巣がかくれているよ!

        花だったら、１回だけミツを集めて、
        花でなければ、ハチミツをつくってください(花でなければ、ハチの巣だから)。
      courseD_bee_conditionals9: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花からはミツが取れて、ハチの巣ではハチミツが作れるよ。くもの下には、花が１つか、ハチの巣が１つ
        かくれています。どちらが かくれているのか 調べてください。
      courseD_bee_conditionals9_2018: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花からはミツが取れて、ハチの巣ではハチミツが作れるよ。くもの下には、花が１つか、ハチの巣が１つ
        かくれています。どちらが かくれているのか 調べてください。
      courseD_bee_conditionals9_2019: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花からはミツが取れて、ハチの巣ではハチミツが作れるよ。くもの下には、花が１つか、ハチの巣が１つ
        かくれています。どちらが かくれているのか 調べてください。
      courseD_bee_conditionals_challenge1: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花からはミツが、ハチの巣ではハチミツを作ることができるよ。花かハチの巣か、どちらがあるのか調べてね。
      courseD_bee_conditionals_challenge1_2018: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花からはミツが、ハチの巣ではハチミツを作ることができるよ。花かハチの巣か、どちらがあるのか調べてね。
      courseD_bee_conditionals_challenge1_2019: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花からはミツが、ハチの巣ではハチミツを作ることができるよ。花かハチの巣か、どちらがあるのか調べてね。
      courseD_bee_conditionals_challenge2: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花のところでは、`以下の間
        花のミツ > 0`をつかって、全部のミツを集めよう。
      courseD_bee_conditionals_challenge2_2018: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花のところでは、`以下の間
        花のミツ > 0`をつかって、全部のミツを集めよう。
      courseD_bee_conditionals_challenge2_2019: すべてのミツを集めて、全部のハチの巣でハチミツを作ろう。花のところでは、`以下の間
        花のミツ > 0`をつかって、全部のミツを集めよう。
      courseD_bee_debugging_challenge1: ハチはどうやってミツを集めているかな？同じやり方でハチミツを作ることができるかな？
      courseD_bee_debugging_challenge1a: |-
        _"ブンブンブン！ 花のミツを集めて ハチミツを 作るのを てつだって！"_

        どうやって ミツを 集めればいいか 考えて。あるパターンを くりかえせば、全部のミツを 集めてハチミツを作ることができるよ。
      courseD_bee_nestedLoops1: |-
        _"**ハチ**は、すごい！"_

        ハチがミツを集めるのを手伝って。
      courseD_bee_nestedLoops1_2018: |-
        _"**ハチ**は、すごい！"_

        ハチがミツを集めるのを手伝って。
      courseD_bee_nestedLoops1_2019: |-
        _"**ハチ**は、すごい！"_

        ハチがミツを集めるのを手伝って。
      courseD_bee_nestedLoops1a: |-
        _"**ハチ**は、すごい！"_

        ハチがミツを集めるのを手伝って。
      courseD_bee_nestedLoops1a_2018: |-
        _"**ハチ**は、すごい！"_

        ハチがミツを集めるのを手伝って。
      courseD_bee_nestedLoops1a_2019: |-
        _"**ハチ**は、すごい！"_

        ハチがミツを集めるのを手伝って。
      courseD_bee_nestedLoops2: 今度は、できるだけ少ないステップでミツを全部集めてみよう。
      courseD_bee_nestedLoops2_2018: 今度は、できるだけ少ないステップでミツを全部集めてみよう。
      courseD_bee_nestedLoops2_2019: 今度は、できるだけ少ないステップでミツを全部集めてみよう。
      courseD_bee_nestedLoops2_predict1: 今度は、できるだけ少ないステップでミツを全部集めてみよう。
      courseD_bee_nestedLoops2_predict1_2018: 今度は、できるだけ少ないステップでミツを全部集めてみよう。
      courseD_bee_nestedLoops2_predict1_2019: 今度は、できるだけ少ないステップでミツを全部集めてみよう。
      courseD_bee_nestedLoops7: "**チャレンジ** できるだけ少ないブロックで、すべてのミツを集めよう。"
      courseD_bee_nestedLoops7_2018: "**チャレンジ** できるだけ少ないブロックで、すべてのミツを集めよう。"
      courseD_bee_nestedLoops7_2019: "**チャレンジ** できるだけ少ないブロックで、すべてのミツを集めよう。"
      courseD_bee_nestedLoops8: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_bee_nestedLoops8_2018: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_bee_nestedLoops8_2019: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_bee_nestedLoops9: ハチミツを作ろう。
      courseD_bee_nestedLoops9_2018: ハチミツを作ろう。
      courseD_bee_nestedLoops9_2019: ハチミツを作ろう。
      courseD_bee_nestedLoops9_predict2: ハチミツを作ろう。
      courseD_bee_nestedLoops9_predict2_2018: ハチミツを作ろう。
      courseD_bee_nestedLoops9_predict2_2019: ハチミツを作ろう。
      courseD_collector_debugging1: |-
        _"なんてこった！"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging10_predict1: |-
        _"たから島だ！"_

        プログラムをかんせいさせて、すべてのたからものを集めて。
      courseD_collector_debugging1a_2018: |-
        _"なんてこった！"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging1a_2019: |-
        _"なんてこった！"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging2: |-
        _"できるよ！"_

        バグをなおして、たからものを全部ゲットしよう。
      courseD_collector_debugging2a_2018: |-
        _"できるよ！"_

        バグをなおして、たからものを全部ゲットしよう。
      courseD_collector_debugging2a_2019: |-
        _"できるよ！"_

        バグをなおして、たからものを全部ゲットしよう。
      courseD_collector_debugging3: |-
        _"がんばって、これはできるかな？"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging3a_2018: |-
        _"がんばって、これはできるかな？"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging3a_2019: |-
        _"がんばって、これはできるかな？"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging4: |-
        _"イライラしないで。きっと できる！"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging4a_2018: |-
        _"イライラしないで。きっと できる！"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging4a_2019: |-
        _"イライラしないで。きっと できる！"_

        バグをなして、すべてのたからものをゲットしよう。
      courseD_collector_debugging5: |-
        _"ローレルを かべにそって 進ませて！"_

        プログラムは すでに できあがっています。バグをなおして、このパズルを クリアしよう。
      courseD_collector_debugging5a_2018: |-
        _"ローレルを かべにそって 進ませて！"_

        プログラムは すでに できあがっています。バグをなおして、このパズルを クリアしよう。
      courseD_collector_debugging5a_2019: |-
        _"ローレルを かべにそって 進ませて！"_

        プログラムは すでに できあがっています。バグをなおして、このパズルを クリアしよう。
      courseD_collector_debugging6: "**Challenge:**  プログラムは すでに できあがっています。バグをなおして、すべてのたからものを集めよう。"
      courseD_collector_debugging8: |-
        _"たからものが、いっぱい！"_

        プログラムをかんせいさせて、すべてのたからものを集めて。
      courseD_collector_debugging8a_2018: |-
        _"たからものが、いっぱい！"_

        プログラムをかんせいさせて、すべてのたからものを集めて。
      courseD_collector_debugging8a_2019: |-
        _"たからものが、いっぱい！"_

        プログラムをかんせいさせて、すべてのたからものを集めて。
      courseD_collector_debugging9: |-
        _"たから島だ！"_

        プログラムをかんせいさせて、すべてのたからものを集めて。
      courseD_collector_debugging9a_2018: |-
        _"たから島だ！"_

        プログラムをかんせいさせて、すべてのたからものを集めて。
      courseD_collector_debugging9a_2019: |-
        _"たから島だ！"_

        プログラムをかんせいさせて、すべてのたからものを集めて。
      courseD_collector_nested_loops_challenge2: "_\"くりかえしを使って宝物を集めよう！\"_ \n\nツールボックスの中にあるブロックだけを使って最低でも2つの宝の山にたどり着こう。できれば4つすべて集めよう。"
      courseD_collector_nested_loops_challenge2_2018: "_\"くりかえしを使って宝物を集めよう！\"_ \n\nツールボックスの中にあるブロックだけを使って最低でも2つの宝の山にたどり着こう。できれば4つすべて集めよう。"
      courseD_collector_nested_loops_challenge2_2019: "_\"くりかえしを使って宝物を集めよう！\"_ \n\nツールボックスの中にあるブロックだけを使って最低でも2つの宝の山にたどり着こう。できれば4つすべて集めよう。"
      courseD_collector_nested_loops_challenge2a: "_\"くりかえしを使って、たからものを集めよう！\"_ \n\nツールボックスにあるブロックを使って、ローレルが
        ２ついじょう たからものを 集めるのを てつだって！４つ全部 集めることも できるよ。"
      courseD_collector_ramp10: ローレルを四角にそって歩かせて、見つけた たからものを ゲットしよう。
      courseD_collector_ramp8: |-
        このパズルはさっきやったパズルと同じだよ。ローレルをたからさがしの旅につれて行こう。

        * * *

        通る道は さっきやったパズルと おなじ。たからものの場所についたら、くりかえしを使って たからものを 集めてね。
      courseD_collector_ramp9: もっとたくさんのたからものを集めよう。ローレルがたからものを集めるのを手つだって！
      courseD_farmer_condLoops1: |-
        _"今日は、トウモロコシを収かくするのを手伝って？"_

        作物がなっているか、農夫がトウモロコシの列をチェックするのを手伝って。条件判定文を使って、芽を調べよう。芽には**0 または 1** 個のトウモロコシがなっています。
      courseD_farmer_condLoops1_2018: |-
        _"今日は、トウモロコシを収かくするのを手伝って？"_

        作物がなっているか、農夫がトウモロコシの列をチェックするのを手伝って。条件判定文を使って、芽を調べよう。芽には**0 または 1** 個のトウモロコシがなっています。
      courseD_farmer_condLoops1_2019: |-
        _"今日は、トウモロコシを収かくするのを手伝って？"_

        作物がなっているか、農夫がトウモロコシの列をチェックするのを手伝って。条件判定文を使って、芽を調べよう。芽には**0 または 1** 個のトウモロコシがなっています。
      courseD_farmer_condLoops2: |-
        _"レタスとトウモロコシを収かくしよう！"_

        畑には、**レタスとトウモロコ**が植えられています！

        農夫が収かくするを手伝って、収かくするのは、 **トウモロコシ** か **レタス** です。
      courseD_farmer_condLoops2_2018: |-
        _"レタスとトウモロコシを収かくしよう！"_

        畑には、**レタスとトウモロコ**が植えられています！

        農夫が収かくするを手伝って、収かくするのは、 **トウモロコシ** か **レタス** です。
      courseD_farmer_condLoops2_2019: |-
        _"レタスとトウモロコシを収かくしよう！"_

        畑には、**レタスとトウモロコ**が植えられています！

        農夫が収かくするを手伝って、収かくするのは、 **トウモロコシ** か **レタス** です。
      courseD_farmer_condLoops3: |-
        _"トウモロコシ、レタス それから カボチャ。収かくするのを手伝って！"_

        なっているのは、いずれかの作物が1つです。
      courseD_farmer_condLoops3_2018: |-
        _"トウモロコシ、レタス それから カボチャ。収かくするのを手伝って！"_

        なっているのは、いずれかの作物が1つです。
      courseD_farmer_condLoops3_2019: |-
        _"トウモロコシ、レタス それから カボチャ。収かくするのを手伝って！"_

        なっているのは、いずれかの作物が1つです。
      courseD_farmer_condLoops4: "_\"おやおや！房にレタスがいっぱいなってる！\"_  \n\nレタスを全部収かくしよう。房には1つ以上レタスがなっているので、レタスがある間、収かくする必要があります。\n\n#####
        (注意 なっているのはレタスだけだよ！)"
      courseD_farmer_condLoops5: |-
        _"作物がいっぱい！"_

        畑にはトウモロコシとレタス、それから、端っこにカボチャが植えられています。全部収かくできるかな？
      courseD_farmer_condLoops5_2018: |-
        _"作物がいっぱい！"_

        畑にはトウモロコシとレタス、それから、端っこにカボチャが植えられています。全部収かくできるかな？
      courseD_farmer_condLoops5_2019: |-
        _"作物がいっぱい！"_

        畑にはトウモロコシとレタス、それから、端っこにカボチャが植えられています。全部収かくできるかな？
      courseD_farmer_condLoops6: |-
        _"遠くのものも収穫しよう！"_

        カボチャを収かくすることができるかな？途中にあるトウモロコシは全部収かくしてね！
      courseD_farmer_condLoops6_2018: |-
        _"遠くのものも収穫しよう！"_

        カボチャを収かくすることができるかな？途中にあるトウモロコシは全部収かくしてね！
      courseD_farmer_condLoops6_2019: |-
        _"遠くのものも収穫しよう！"_

        カボチャを収かくすることができるかな？途中にあるトウモロコシは全部収かくしてね！
      courseD_farmer_condLoops7: "**チャレンジ** トウモロコシ、レタス、カボチャを収かくしよう。"
      courseD_farmer_condLoops7_2018: "**チャレンジ** トウモロコシ、レタス、カボチャを収かくしよう。"
      courseD_farmer_condLoops7_2019: "**チャレンジ** トウモロコシ、レタス、カボチャを収かくしよう。"
      courseD_farmer_condLoops8: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops8_2018: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops8_2019: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops9: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops9_2018: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops9_2019: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops9_predict1: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops9_predict1_2018: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops9_predict1_2019: ウモロコシ、レタス、カボチャを収かくしよう。
      courseD_farmer_condLoops_challenge1: |-
        カボチャのあることで`みぎに まがる`を行います。前に進むとき、途中にあるレタスとトウモロコシを収かくするのを忘れないでね。

        **実っている作物は、トウモロコシかレタスです。**
      courseD_farmer_condLoops_challenge1_2018: |-
        カボチャのあることで`みぎに まがる`を行います。前に進むとき、途中にあるレタスとトウモロコシを収かくするのを忘れないでね。

        **実っている作物は、トウモロコシかレタスです。**
      courseD_farmer_condLoops_challenge1_2019: |-
        カボチャのあることで`みぎに まがる`を行います。前に進むとき、途中にあるレタスとトウモロコシを収かくするのを忘れないでね。

        **実っている作物は、トウモロコシかレタスです。**
      courseD_farmer_condLoops_challenge2: "_\"いろんな作物がなっている迷路だ！\"_ \n\nカボチャのところで右に、レタスの所で左に曲がろう。作物を全部収かくしよう。"
      courseD_farmer_condLoops_challenge2_2018: "_\"いろんな作物がなっている迷路だ！\"_ \n\nカボチャのところで右に、レタスの所で左に曲がろう。作物を全部収かくしよう。"
      courseD_farmer_condLoops_challenge2_2019: "_\"いろんな作物がなっている迷路だ！\"_ \n\nカボチャのところで右に、レタスの所で左に曲がろう。作物を全部収かくしよう。"
      courseD_farmer_until_challenge2: "`もし やること/でなければ`を使って曲がり道を進もう。それぞれの角で、 `つちをかたづける`をくり返そう。"
      courseD_farmer_while1: "_\"やあ、ぼくは農夫だよ。作物を植えるから、畑を平らにするのを手伝って！\"_  \n\n土の山のところまで行って、`つちをたたづける`
        で土をかたづけましょう。"
      courseD_farmer_while1_2018: "_\"やあ、ぼくは農夫だよ。作物を植えるから、畑を平らにするのを手伝って！\"_  \n\n土の山のところまで行って、`つちをたたづける`
        で土をかたづけましょう。"
      courseD_farmer_while1_2019: "_\"やあ、ぼくは農夫だよ。作物を植えるから、畑を平らにするのを手伝って！\"_  \n\n土の山のところまで行って、`つちをたたづける`
        で土をかたづけましょう。"
      courseD_farmer_while3: |-
        _"土の山まで行って、何回 土をかたづければいいのか 教えて。"_

        できるだけ少ないブロックでパズルをクリアしよう。
      courseD_farmer_while3_2018: |-
        _"土の山まで行って、何回 土をかたづければいいのか 教えて。"_

        できるだけ少ないブロックでパズルをクリアしよう。
      courseD_farmer_while3_2019: |-
        _"土の山まで行って、何回 土をかたづければいいのか 教えて。"_

        できるだけ少ないブロックでパズルをクリアしよう。
      courseD_farmer_while4: |-
        _"山になくすのに どれだけ土をかたずければ いいのか わからないよ！"_

        `以下の間`を使って 山をかたづけて。
      courseD_farmer_while4_2018: |-
        _"山になくすのに どれだけ土をかたずければ いいのか わからないよ！"_

        `以下の間`を使って 山をかたづけて。
      courseD_farmer_while4_2019: |-
        _"山になくすのに どれだけ土をかたずければ いいのか わからないよ！"_

        `以下の間`を使って 山をかたづけて。
      courseD_farmer_while4_predict1: |-
        _"山になくすのに どれだけ土をかたずければ いいのか わからないよ！"_

        `以下の間`を使って 山をかたづけて。
      courseD_farmer_while4_predict1_2018: |-
        _"山になくすのに どれだけ土をかたずければ いいのか わからないよ！"_

        `以下の間`を使って 山をかたづけて。
      courseD_farmer_while4_predict1_2019: |-
        _"山になくすのに どれだけ土をかたずければ いいのか わからないよ！"_

        `以下の間`を使って 山をかたづけて。
      courseD_farmer_while6: |-
        穴がいっぱい開いてる！ あなをうめる回数はバラバラです。

        `以下の間`を使えば、簡単に穴をうめることができます。
      courseD_farmer_while6_2018: |-
        穴がいっぱい開いてる！ あなをうめる回数はバラバラです。

        `以下の間`を使えば、簡単に穴をうめることができます。
      courseD_farmer_while6_2019: |-
        穴がいっぱい開いてる！ あなをうめる回数はバラバラです。

        `以下の間`を使えば、簡単に穴をうめることができます。
      courseD_farmer_while8: "**チャレンジ** できるだけ少ないブロックで全部の穴を埋めよう "
      courseD_farmer_while8_2018: "**チャレンジ** できるだけ少ないブロックで全部の穴を埋めよう "
      courseD_farmer_while8_2019: "**チャレンジ** できるだけ少ないブロックで全部の穴を埋めよう "
      courseD_farmer_while_challenge1: 山を平らにして、穴を埋めよう。
      courseD_farmer_while_challenge1_2018: 山を平らにして、穴を埋めよう。
      courseD_farmer_while_challenge1_2019: 山を平らにして、穴を埋めよう。
      courseD_farmer_while_challenge2: 山を平らにして、穴を埋めよう。
      courseD_harvester_nested_loops_challenge1: _"ツールボックスの中にあるブロックをつかって、農夫を手伝って！"_
      courseD_harvester_nested_loops_challenge1_2018: _"ツールボックスの中にあるブロックをつかって、農夫を手伝って！"_
      courseD_harvester_nested_loops_challenge1_2019: _"ツールボックスの中にあるブロックをつかって、農夫を手伝って！"_
      courseD_maze_nestedLoops3: |-
        _"ゾンビは 腹ペコだ！"_

        できるだけ少ない数のブロックで、ゾンビをひまわりのところに行かせよう。
      courseD_maze_nestedLoops3_2018: |-
        _"ゾンビは 腹ペコだ！"_

        できるだけ少ない数のブロックで、ゾンビをひまわりのところに行かせよう。
      courseD_maze_nestedLoops3_2019: |-
        _"ゾンビは 腹ペコだ！"_

        できるだけ少ない数のブロックで、ゾンビをひまわりのところに行かせよう。
      courseD_maze_nestedLoops4: ひまわりまで行きたい！
      courseD_maze_nestedLoops4_2018: ひまわりまで行きたい！
      courseD_maze_nestedLoops4_2019: ひまわりまで行きたい！
      courseD_maze_nestedLoops6: |-
        _"ひまわりが食いたい！"_

        ツールボックスのブロックをつかって、ゾンビをひまわりのところまで連れて行こう。
      courseD_maze_nestedLoops6_2018: |-
        _"ひまわりが食いたい！"_

        ツールボックスのブロックをつかって、ゾンビをひまわりのところまで連れて行こう。
      courseD_maze_nestedLoops6_2019: |-
        _"ひまわりが食いたい！"_

        ツールボックスのブロックをつかって、ゾンビをひまわりのところまで連れて行こう。
      courseD_maze_ramp1: すべてのブロックをひっつけて、"実行（じっこう）" をクリックしたらどうなるか見てみよう。
      courseD_maze_ramp1_2018: すべてのブロックをひっつけて、"実行（じっこう）" をクリックしたらどうなるか見てみよう。
      courseD_maze_ramp1_2019: すべてのブロックをひっつけて、"実行（じっこう）" をクリックしたらどうなるか見てみよう。
      courseD_maze_ramp2: ツールボックスから もうひとつ `前に すすむ` を取り出して、 `実行（じっこう）した時`の下に引っ付けよう。
      courseD_maze_ramp2_2018: ツールボックスから もうひとつ `前に すすむ` を取り出して、 `実行（じっこう）した時`の下に引っ付けよう。
      courseD_maze_ramp2_2019: ツールボックスから もうひとつ `前に すすむ` を取り出して、 `実行（じっこう）した時`の下に引っ付けよう。
      courseD_maze_ramp3: |-
        _"ブタが、おれの羽をくしゃくしゃにした。"_

        よけいなブロックが一つあるので トリさんは かべに ぶつかってしまいます。\
        よけいなブロックを 他のブロックから 切りはなして ツールボックスにもどそう。
      courseD_maze_ramp3_2018: |-
        _"ブタが、おれの羽をくしゃくしゃにした。"_

        よけいなブロックが一つあるので トリさんは かべに ぶつかってしまいます。\
        よけいなブロックを 他のブロックから 切りはなして ツールボックスにもどそう。
      courseD_maze_ramp4: "_\"道にそって、ブタさんのところへ連れて行って。\"_ \n\nTNTにぶつからないで！羽がなくなちゃうよ。"
      courseD_maze_ramp4_2018: "_\"道にそって、ブタさんのところへ連れて行って。\"_ \n\nTNTにぶつからないで！羽がなくなちゃうよ。"
      courseD_maze_ramp5: |-
        _"ブタさんのところにつれて行って！"_

        TNTにぶつからないで。
      courseD_maze_ramp5_2018: |-
        _"ブタさんのところにつれて行って！"_

        TNTにぶつからないで。
      courseD_maze_ramp5_2019: |-
        _"ブタさんのところにつれて行って！"_

        TNTにぶつからないで。
      courseD_maze_ramp5a: ブタさんのところへ行くために、どのように命令を並べればよいか順番に注意してね！
      courseD_maze_ramp5a_2018: ブタさんのところへ行くために、どのように命令を並べればよいか順番に注意してね！
      courseD_maze_ramp5b: "**チャレンジ** トリさんが ブタさんのところに 行けるように 道案内してください！"
      courseD_maze_ramp5b_2018: "**チャレンジ** トリさんが ブタさんのところに 行けるように 道案内してください！"
      courseD_maze_ramp5b_2019: "**チャレンジ** トリさんが ブタさんのところに 行けるように 道案内してください！"
      courseD_maze_ramp5c: トリさんがブタさんのところへ行くのを手伝って。
      courseD_maze_ramp5c_2018: トリさんがブタさんのところへ行くのを手伝って。
      courseD_maze_ramp5d: ブタをつかまえよう。
      courseD_maze_ramp5d_2018: ブタをつかまえよう。
      courseD_maze_ramp5d_2019: ブタをつかまえよう。
      courseD_maze_ramp6: |-
        _"落ち着いて、ブタさんをつかまえるのを手つだって。手つだってくれないと おこるよ！"_

        同じブロックを たくさん ひっつけるなら、`くりかえし` を使ってみよう。プログラムを 短くすることができるよ！
      courseD_maze_ramp7: "_\"頭に来たぞ！\"_  \n\n前にやったことを思い出して、トリさんをブタさんのところへつれて行って！"
      courseD_maze_until10: ひまわりまで行こう。
      courseD_maze_until10_2018: ひまわりまで行こう。
      courseD_maze_until10_2019: ひまわりまで行こう。
      courseD_maze_until10_predict2: ひまわりまで行こう。
      courseD_maze_until10_predict2_2018: ひまわりまで行こう。
      courseD_maze_until10_predict2_2019: ひまわりまで行こう。
      courseD_maze_until4: |-
        _"やあ、おれは ゾンビ。 腹へった。 ヒマワリの... ところへ... 行かなきゃ..."_

        ツールボックスにあるブロックだけで、ゾンビをヒマワリのところへ行かせることができますか？
      courseD_maze_until4_2018: |-
        _"やあ、おれは ゾンビ。 腹へった。 ヒマワリの... ところへ... 行かなきゃ..."_

        ツールボックスにあるブロックだけで、ゾンビをヒマワリのところへ行かせることができますか？
      courseD_maze_until4_2019: |-
        _"やあ、おれは ゾンビ。 腹へった。 ヒマワリの... ところへ... 行かなきゃ..."_

        ツールボックスにあるブロックだけで、ゾンビをヒマワリのところへ行かせることができますか？
      courseD_maze_until5: "`もし` を使って、ゾンビが道を曲がるところを調べよう、そうすれば、ヒマワリに行くことができます。"
      courseD_maze_until5_2018: "`もし` を使って、ゾンビが道を曲がるところを調べよう、そうすれば、ヒマワリに行くことができます。"
      courseD_maze_until5_2019: "`もし` を使って、ゾンビが道を曲がるところを調べよう、そうすれば、ヒマワリに行くことができます。"
      courseD_maze_until6: ひまわりまで行こう。
      courseD_maze_until6_2018: ひまわりまで行こう。
      courseD_maze_until6_2019: ひまわりまで行こう。
      courseD_maze_until7: ひまわりまで行こう。
      courseD_maze_until7_2018: ひまわりまで行こう。
      courseD_maze_until7_2019: ひまわりまで行こう。
      courseD_maze_until8: ひまわりまで行こう。
      courseD_maze_until9: "**チャレンジ** チャンパーをさけて、ひまわりに行こう。"
      courseD_maze_until9_2018: "**チャレンジ** チャンパーをさけて、ひまわりに行こう。"
      courseD_maze_until9_2019: "**チャレンジ** チャンパーをさけて、ひまわりに行こう。"
      courseD_maze_until_challenge1: ひまわりまで行こう。ノーヒントでチャレンジしよう。
      courseD_playLab_cond1: |-
        ゲームを始めるには、かいぞく(キャラ 1) がどの方向にでも 行けるようにしよう。矢じるしキーがおされたら、かいぞくが動くようにしよう。

        * * *

        かいぞくを はたの ところまで 連れて行って。
      courseD_playLab_cond1_2018: |-
        ゲームを始めるには、かいぞく(キャラ 1) がどの方向にでも 行けるようにしよう。矢じるしキーがおされたら、かいぞくが動くようにしよう。

        * * *

        かいぞくを はたの ところまで 連れて行って。
      courseD_playLab_cond2: "ポイントを ゲットしよう！ \n\nかいぞく (キャラ1) が ドラゴン (キャラ2) にタッチしたら
        ポイントをふやしましょう。 "
      courseD_playLab_cond2_2018: "ポイントを ゲットしよう！ \n\nかいぞく (キャラ1) が ドラゴン (キャラ2) にタッチしたら
        ポイントをふやしましょう。 "
      courseD_playLab_cond3: "`ずっと やること`を使って、１秒毎に ドラゴン (キャラ2) の顔を てきとうに 変えてみよう。  "
      courseD_playLab_cond3_2018: "`ずっと やること`を使って、１秒毎に ドラゴン (キャラ2) の顔を てきとうに 変えてみよう。
        \ "
      courseD_playLab_cond3a: |-
        ゲームに おどろきが あるようにするために、今まで学んだ じょうけんの はんていを 使ってみよう。

        かいぞくが ドラゴンに タッチしたとき、ドラゴンの顔が うれしい 顔なら 2ポイント、うれしいで なければ 1ポイント ゲットできるようプログラムを ついかしよう。
      courseD_playLab_cond3a_2018: |-
        ゲームに おどろきが あるようにするために、今まで学んだ じょうけんの はんていを 使ってみよう。

        かいぞくが ドラゴンに タッチしたとき、ドラゴンの顔が うれしい 顔なら 2ポイント、うれしいで なければ 1ポイント ゲットできるようプログラムを ついかしよう。
      courseD_playLab_cond4: |-
        さらに おもしろくしよう！

        ゲームが始まったらすぐに、忍者(キャラ 3) が かいぞくを 追いかけるようにします。 忍者が かいぞくに さわったら、負けでゲームを終わりにします。
      courseD_playLab_cond4_2018: |-
        さらに おもしろくしよう！

        ゲームが始まったらすぐに、忍者(キャラ 3) が かいぞくを 追いかけるようにします。 忍者が かいぞくに さわったら、負けでゲームを終わりにします。
      courseD_playLab_cond5: |-
        勝ちのじょうけんを入れよう。

        `ずっと やること` の中で ポイントが 5以上になったか 調べて、5以上になっていたら 勝ちで ゲームが 終わりになるようにしましょう。
      courseD_playLab_cond5_2018: |-
        勝ちのじょうけんを入れよう。

        `ずっと やること` の中で ポイントが 5以上になったか 調べて、5以上になっていたら 勝ちで ゲームが 終わりになるようにしましょう。
      courseD_playLab_cond6: |-
        ゲームが、むつかしくなったぞ！

        ２つのへんこうをくわえて、ゲームをもっと楽しくしよう。

        * * *

        1.  忍者 (キャラ 3) のスピードをおそくする。

        2.  `ずっと やること`を 使って かいぞくが タコがいるラインより下の"安全地帯"（かいぞくのYの位置が 255よりも 大きいところ）
            にいるか 調べよう。安全地帯にいたら、忍者が **にげる** ように いなければ**おいかける** ようにしよう。
      courseD_playLab_cond6a: |-
        かいぞくが ずっと"安全地帯"にいることができるのは つまらない！

        `もし`を使って、かいぞく（キャラ1）が安全地帯にいる間は、1秒ごとに ポイントが マイナスされるようにしよう。
      courseD_playLab_cond6a_2018: |-
        かいぞくが ずっと"安全地帯"にいることができるのは つまらない！

        `もし`を使って、かいぞく（キャラ1）が安全地帯にいる間は、1秒ごとに ポイントが マイナスされるようにしよう。
      courseD_scrat_ramp1: すべてのブロックをひっつけて、"実行（じっこう）" をクリックしたらどうなるか見てみよう。
      courseD_scrat_ramp2: ツールボックスから もうひとつ `前に すすむ` を取り出して、 `実行（じっこう）した時`の下に引っ付けよう。
      courseD_scrat_ramp3: |-
        余分なブロックが１つあるので、スクラットは道から外れてしまいます。\\

        不要なブロックを 他のブロックから 切りはなして ツールボックスにもどそう。
      courseD_scrat_ramp4: 氷のさけ目にスクラットが落ちないように気を付けて！
      courseD_scrat_ramp5: 氷のさけ目にスクラットが落ちないようにね。
      courseD_scrat_ramp6: くり返しを使って、スクラットがドングリのところへ行くのを手伝って！
      courseD_scrat_ramp8: "**チャレンジ**今までやったことを活かして、ドングリをゲットしよう！"
      courseE_artist_concept1: |-
        絵をかくには

        -   一辺が50ピクセルの六角形をかく
        -   それぞれの六角形は100ピクセルはなす
        -   線の太さは、それぞれ、1、4、8ピクセル
      courseE_artist_concept1_2018: |-
        絵をかくには

        -   一辺が50ピクセルの六角形をかく
        -   それぞれの六角形は100ピクセルはなす
        -   線の太さは、それぞれ、1、4、8ピクセル
      courseE_artist_concept4: |-
        つぎの絵をかいてみよう。

        小さな四角形の一辺は**20 ピクセル**で、 **一列 15 個**です。
      courseE_artist_concept4_2018: |-
        つぎの絵をかいてみよう。

        小さな四角形の一辺は**20 ピクセル**で、 **一列 15 個**です。
      courseE_artist_concept_challenge1: |-
        <img src="https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png" width="200px"/>

        これをかいてみよう！

        この絵は、黒色の形をつかってかかれています。どうやってかけばいいかわかりますか？ 一回でクリアしようと思わないで、何回もチャレンジしてみよう。
      courseE_artist_concept_challenge1_2018: |-
        <img src="https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png" width="200px"/>

        これをかいてみよう！

        この絵は、黒色の形をつかってかかれています。どうやってかけばいいかわかりますか？ 一回でクリアしようと思わないで、何回もチャレンジしてみよう。
      courseE_artist_concept_challenge2: 下のプログラムを使って、風車を5つかこう。
      courseE_artist_concept_challenge2_2018: 下のプログラムを使って、風車を5つかこう。
      courseE_artist_functions1: |-
        _"ゾンビアーティストです。お絵かき大好き！"_
        100ピクセルの四角いメガネをかくので手伝ってください。
        メガネのつなぎ部分は75ピクセルです。
      courseE_artist_functions10: |-
        こんどは、一辺が25ピクセルの六角形で線をかいてみよう。

        -   六角形は、60度曲がるを6回くり返してかきます。
        -   次の六角形をかくときには、25 ピクセル ジャンプ します。
        -   ダイヤモンド型をかくには、60度曲がる と 120度曲がる を交互にくり返します。
      courseE_artist_functions10_2018: |-
        こんどは、一辺が25ピクセルの六角形で線をかいてみよう。

        -   六角形は、60度曲がるを6回くり返してかきます。
        -   次の六角形をかくときには、25 ピクセル ジャンプ します。
        -   ダイヤモンド型をかくには、60度曲がる と 120度曲がる を交互にくり返します。
      courseE_artist_functions10_2019: |-
        こんどは、一辺が25ピクセルの六角形で線をかいてみよう。

        -   六角形は、60度曲がるを6回くり返してかきます。
        -   次の六角形をかくときには、25 ピクセル ジャンプ します。
        -   ダイヤモンド型をかくには、60度曲がる と 120度曲がる を交互にくり返します。
      courseE_artist_functions2: |-
        関数を使えば新しいブロックを作ることができます！

        ここでは、正方形をかくためのブロックを "draw a square" という名前の関数の中に移動しました。"draw a square" を使って、メガネを作ってみましょう。

        * * *

        正方形と正方形の間は 75 ピクセルあいています。
      courseE_artist_functions3: |-
        関数の勉強を続けますが、ちょっとその前に 練習として この星を かいてみよう。

        くり返しを使って、この絵をかいてみよう。
      courseE_artist_functions4: |-
        １つ星がかけたので、こんどは４つかいてみよう！

        -   星のひとつの線の長さは25ピクセル
        -   曲がるのは45度
        -   次の星をかくのに100ピクセルジャンプする
      courseE_artist_functions5: |-
        ４つ星をかいたときよりも、３つかくときのほうがむつかしい？月はジャンプして飛びこえてね！

        ３つだけ星をかいてみよう。
      courseE_artist_functions6: |-
        すごい、がんばってるね！

        四角形を１つかいたら、次の四角形をかく前に90度曲がるをくり返して、まどをかいてみよう。
      courseE_artist_functions7: "関数`draw a window`の中に窓をかく命令を入れよう。命令を何度も書くことなく関数を呼べばいつでもまどをかくことができます。
        \n\n![](https://images.code.org/615a5e93abdaffeed438a976a56fc1f5-image-1497998528859.gif)\n\n関数`draw
        a window`を作って、それを5回繰り返そう。ドアに気を付けてね！\n\n-   ２階は、まどとまどの間が50ピクセル \n-   ２階と１階のまどの間は100ピクセル"
      courseE_artist_functions8: |-
        **チャレンジ**関数の中から 関数を 呼ぶことが できるのを 知ってるかな？

        50ピクセルの四角形で できた もようを かくのに 必要な関数を作ろう。
      courseE_artist_functions9: "次のようなイメージをかいてみよう。\n\n-   三角形の辺の長さは**50 ピクセル** \n-
        \  ダイヤモンド型にするのは、**60 度 曲がると 120 度 曲がる**を 交互にくり返します。"
      courseE_artist_functions_challenge1: 一度定義した関数は、いつでも、どこからでも、何度でも呼び出すことができます。プログラムの中で
        どのように 関数が 使われているのか 見て、プログラムを 修正し、自分なりの いかしたデザインを 作ってみよう。
      courseE_artist_functions_challenge1_2018: 一度定義した関数は、いつでも、どこからでも、何度でも呼び出すことができます。プログラムの中で
        どのように 関数が 使われているのか 見て、プログラムを 修正し、自分なりの いかしたデザインを 作ってみよう。
      courseE_artist_functions_challenge1_2019: 一度定義した関数は、いつでも、どこからでも、何度でも呼び出すことができます。プログラムの中で
        どのように 関数が 使われているのか 見て、プログラムを 修正し、自分なりの いかしたデザインを 作ってみよう。
      courseE_artist_functions_challenge2: |-
        あらかじめコーディングされている場所、キャンバスのすみに ジャンプするだけでなく、`ジャンプ` を使えば、どこでも好きな場所に行くことができます！プログラムがどのように動いているのよく見て、あなただけのプログラムを作ろう！

        <xml>
          <block type="jump_to_xy">
            <title name="XPOS">???</title>
            <title name="YPOS">???</title>
            </block></xml>
      courseE_artist_functions_challenge2_2018: |-
        あらかじめコーディングされている場所、キャンバスのすみに ジャンプするだけでなく、`ジャンプ` を使えば、どこでも好きな場所に行くことができます！プログラムがどのように動いているのよく見て、あなただけのプログラムを作ろう！

        <xml>
          <block type="jump_to_xy">
            <title name="XPOS">???</title>
            <title name="YPOS">???</title>
            </block></xml>
      courseE_artist_functions_challenge2_2019: |-
        あらかじめコーディングされている場所、キャンバスのすみに ジャンプするだけでなく、`ジャンプ` を使えば、どこでも好きな場所に行くことができます！プログラムがどのように動いているのよく見て、あなただけのプログラムを作ろう！

        <xml>
          <block type="jump_to_xy">
            <title name="XPOS">???</title>
            <title name="YPOS">???</title>
            </block></xml>
      courseE_artist_functions_predict1: '関数を使ったパズル '
      courseE_artist_functions_predict1_2018: '関数を使ったパズル '
      courseE_artist_functions_predict1_2019: '関数を使ったパズル '
      courseE_artist_ramp8: |-
        すごい！ 四角形をかいてみよう！ 使うブロックは前のパズルと ちょっとちがうけど、やり方は同じだよ。

        * * *

        ##### 一つの辺の長さは200ピクセルです。１つの辺を かいたら 90度 曲がります。
      courseE_artist_ramp8_2: |-
        すごい！ 四角形をかいてみよう！ 使うブロックは前のパズルと ちょっとちがうけど、やり方は同じだよ。

        * * *

        ##### 一つの辺の長さは200ピクセルです。１つの辺を かいたら 90度 曲がります。
      courseE_artist_ramp9: |-
        こんどは、三角形をかいてみよう。

        * * *

        ##### １つの辺なの長さは100ピクセルで、曲がる角度は120度だよ。
      courseE_artist_ramp9_2: |-
        こんどは、三角形をかいてみよう。

        * * *

        ##### １つの辺なの長さは100ピクセルで、曲がる角度は120度だよ。
      courseE_bee_concept1: "_\"花からミツを集めることができるかな？\"_\n\n花からミツをすべて集めよう。 "
      courseE_bee_concept1_2018: "_\"花からミツを集めることができるかな？\"_\n\n花からミツをすべて集めよう。 "
      courseE_bee_concept2: "ハチミツを作るのを手伝おう。 \n\nハチの巣でハチミツを作ることができます。ハチミツを作るときは、ハチの巣があるかどうか調べてから作ってね。"
      courseE_bee_concept2_2018: "ハチミツを作るのを手伝おう。 \n\nハチの巣でハチミツを作ることができます。ハチミツを作るときは、ハチの巣があるかどうか調べてから作ってね。"
      courseE_bee_concept5: |-
        花からミツを集めるのを手伝って！

        ミツは花から取ることができます。ミツを取るときは、花があるかどうか調べてから取ってね。
      courseE_bee_concept5_2018: |-
        花からミツを集めるのを手伝って！

        ミツは花から取ることができます。ミツを取るときは、花があるかどうか調べてから取ってね。
      courseE_bee_functions10: "_\"ハチミツがほしいな！\"_\n\nつぎのような関数を作ろう \n\n-   ハチの巣があるほうに曲がる\n-
        \  前に すすむ\n-   ハチミツを全部作る\n-   もとの道にもどる \n-   さいしょに向いていた方向を向く"
      courseE_bee_functions2: |-
        関数は、ある仕事をするための命令のかたまりです。

        花からミツを集めるために、関数 `get 2 nectar`を作ろう。
      courseE_bee_functions3: ひとつの作業を行うひとまとまりのコードを関数といいます。"get 5" という関数を使うと、一度に蜜を
        5 とることができます。ループを使って、ブロックの数がなるべく少なくしてください。
      courseE_bee_functions4: "関数`move and get nectar`は、前に進んで ミツをとって もといた場所にもどってきます。
        \n\n 関数`move and get nectar`を使って、すべてのミツを集めましょう。"
      courseE_bee_functions8: |-
        **チャレンジ** 花にあるミツの量は、それぞれの花でちがっています。

        花からすべてのミツを集めて、ハチミツを作って。
      courseE_bee_functions_challenge1: このチャレンジも きっとクリアできるよ。見た目よりもむつかしいよ！
      courseE_farmer_functions1: |-
        _"前に会ったことある？ ぼくは農夫だよ！"_

        農夫がカボチャのところまで行って、しゅうかくするのを手伝って。
      courseE_farmer_functions10b: 新しい関数を２回呼んで このパズルをクリアしよう。
      courseE_farmer_functions11_predict: どっちの一方の関数を消せば、パズルをクリアできます！
      courseE_farmer_functions11_predict_2018: どっちの一方の関数を消せば、パズルをクリアできます！
      courseE_farmer_functions11_predict_2019: どっちの一方の関数を消せば、パズルをクリアできます！
      courseE_farmer_functions1_2018: |-
        _"前に会ったことある？ ぼくは農夫だよ！"_

        農夫がカボチャのところまで行って、しゅうかくするのを手伝って。
      courseE_farmer_functions1_2019: |-
        _"前に会ったことある？ ぼくは農夫だよ！"_

        農夫がカボチャのところまで行って、しゅうかくするのを手伝って。
      courseE_farmer_functions1a: |-
        _"わーい、あっちこっちに作物がなってる！"_

        カボチャに行く とちゅうにある トウモロコシを しゅうかくするのを手伝って！

        * * *

        ##### 注意: カボチャへ行く道のとちゅうには、トウモロコシが あるところ と ないところ があります。 しゅうかくする前に、`もし` を使ってトウモロコシが植わっているか調べよう！
      courseE_farmer_functions2b: |-
        農夫がトウモロコシとカボチャを集めるのを手つだって。

        * * *

        ##### 葉っぱは、トウモロコシになるか、何にもならないかの どちらかだよ。
      courseE_farmer_functions2ba: "_\"機能的！\"_\n\nさっきのパズルでくり返しを使ったのをおぼえてる？  くり返しの中のすべて命令が動くわけではありませんが、ある機能を**利用できます**。
        \ \n\nくり返す命令は、関数`corn and pumpkin`のなかに入れてあります。必要なところに**機能のかたまり**関数`corn and
        pumpkin` をプログラムしてみよう。\n\n* * *\n\n##### 葉っぱは、トウモロコシになるか、何にもならないかの どちらかだよ。"
      courseE_farmer_functions3c: |-
        コーディングしてある部分から、必要な部分を切り取って**関数 定義**なかに入れよう。

        切り取った部分で**関数 呼び出し**するのを わすれないでね。
      courseE_farmer_functions5c: 関数が役立つでしょう
      courseE_farmer_functions6c: |-
        _"Lettuce pick all of the produce!"_

        葉っぱは、トウモロコシ**か**レタスになります。しゅうかくする前にどちらか調べるには、何を追加すればいいかな？

        * * *

        ##### 注: 葉っぱは、**１つの**トウモロコシか**１つの**レタスになります。
      courseE_farmer_functions7b: |-
        _"農夫が道に迷っています！"_

        農夫がカボチャのところに行くのを手伝って、トウモロコシがあれば**左**、レタスがあれば**右**に曲がってね。

        _(道にある作物を しゅうかくするのを わすれないでね！)_
      courseE_farmer_functions8b: "**チャレンジ** すべての曲がり角に同じ目印があるとは限りません。どっちへ行けばいいかを考えてプログラムしよう。
        \n\nどうすればいいか わかるかな？"
      courseE_farmer_functions9b: このパズルをよく見て、パターンを見つけることができるかな？
      courseE_farmer_ramp11a: "でかい山だ！一体、どれだけ 土を かたづければいいんだ。\n\n* * *\n\n`以下の間 山があります`
        を使って、山がなくなるまで 土をかたづけよう！ "
      courseE_farmer_ramp11a_2018: "でかい山だ！一体、どれだけ 土を かたづければいいんだ。\n\n* * *\n\n`以下の間
        山があります` を使って、山がなくなるまで 土をかたづけよう！ "
      courseE_farmer_ramp11a_2019: "でかい山だ！一体、どれだけ 土を かたづければいいんだ。\n\n* * *\n\n`以下の間
        山があります` を使って、山がなくなるまで 土をかたづけよう！ "
      courseE_farmer_ramp12c: "道のつきあたりにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12c_2018: "道のつきあたりにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12c_2019: "道のつきあたりにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12d: "庭のあちらこちらにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12d_2018: "庭のあちらこちらにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12d_2019: "庭のあちらこちらにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12e: "庭のあちらこちらにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12e_2018: "庭のあちらこちらにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12e_2019: "庭のあちらこちらにレタスがあります。\\\n**までを くりかえします** を使ってレタスのところまで行って、**以下の間**
        を使ってレタスを しゅうかく しよう。  "
      courseE_farmer_ramp12g: レタスにたどり着くまで前に進んで、**もし**左に道があれば左に、そうでなければ、右に曲がりましょう。
      courseE_farmer_ramp12g_2018: レタスにたどり着くまで前に進んで、**もし**左に道があれば左に、そうでなければ、右に曲がりましょう。
      courseE_farmer_ramp12g_2019: レタスにたどり着くまで前に進んで、**もし**左に道があれば左に、そうでなければ、右に曲がりましょう。
      courseE_playLab_challenge1: |-
        _町に**きょうりゅう**がやってきて、**リスたち** がこわがっています！**きし**は、リスたちを助けることができるかな？_

        ルール

        1.  _リスにさわったポイントをゲットします_
        2.  _きょうりゅうにさわったら、ポイントが減ります_

        さっきやったゲームとはちがう種類のゲームです。どんな風に動くかやってみょう。

        ポイントがたまったとき、マイナスになったとき、どうしますか？関数`win game` と `lose game` にどんなプログラムを追加しますか？何を追加するかはヒントを見てみよう！
      courseE_playLab_scaffold1: |-
        今までやってきたことを使って、ゲームを少しずつ作っていこう。

        ツールボックスにあるブロックを使って、はいけいとゲームの主人公になるキャラを選ぼう。
      courseE_playLab_scaffold2: |-
        キーがおされたらを使って キーがおされた方向に 主人公を動かします。

        すべてのはたをゲットしてゲームをクリアしよう。
      courseE_playLab_scaffold3: |-
        ほかのキャラも追加しよう！

        `セット キャラ`でほかのキャラを追加して、ゴールに向けて動かそう。
      courseE_playLab_scaffold4: |-
        ゲームが始まったら、複数のキャラが主人公を追いかけてきます。リアルなゲームにするためにポイントが入るようにしよう！

        スコアを変えるには、`キャラが さわったら`を使います。10ポイント取ればゲームをクリアです。
      courseE_playLab_scaffold5: すごい。ゲームに必要なものは、ほんとんど作ってしまいました。もう少しで完成。ゲームの勝ち負けの条件を考えて、条件をクリアするまでゲームを続けましょう。
      courseE_playLab_scaffold6: 完成、ゲームをプレイしてみよう！ともだちとゲームを共有しよう！
      courseF_artist_for1: "**フリープレイ**`まで`と 変数`counter`を使った実験\n\nいくつかブロックをドラックして、どうなるか見てみよう。
        \ "
      courseF_artist_for10: |-
        **フリープレイ** いままでに勉強してきた変数`counter`で つぎのような図形をかいてみよう。

        ![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)
      courseF_artist_for10_2018: |-
        **フリープレイ** いままでに勉強してきた変数`counter`で つぎのような図形をかいてみよう。

        ![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)
      courseF_artist_for10_2019: |-
        **フリープレイ** いままでに勉強してきた変数`counter`で つぎのような図形をかいてみよう。

        ![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)
      courseF_artist_for1_2018: "**フリープレイ**`まで`と 変数`counter`を使った実験\n\nいくつかブロックをドラックして、どうなるか見てみよう。
        \ "
      courseF_artist_for1_2019: "**フリープレイ**`まで`と 変数`counter`を使った実験\n\nいくつかブロックをドラックして、どうなるか見てみよう。
        \ "
      courseF_artist_for2: 50から100ピクセルの三角形の山をかく`くりかえし`を`まで` のなかに入れます。
      courseF_artist_for2_2018: 50から100ピクセルの三角形の山をかく`くりかえし`を`まで` のなかに入れます。
      courseF_artist_for2_2019: 50から100ピクセルの三角形の山をかく`くりかえし`を`まで` のなかに入れます。
      courseF_artist_for3: 20から200ピクセルまで20ピクセルずつ大きくなっていく三角形をかきましょう。
      courseF_artist_for3_2018: 20から200ピクセルまで20ピクセルずつ大きくなっていく三角形をかきましょう。
      courseF_artist_for3_2019: 20から200ピクセルまで20ピクセルずつ大きくなっていく三角形をかきましょう。
      courseF_artist_for5: |-
        さっきのプログラムを少し変えれば、この図形を かくことができます。どこを変えればいいか わかりますか？

        * * *

        ヒント 何かを削除してください！
      courseF_artist_for5_2018: |-
        さっきのプログラムを少し変えれば、この図形を かくことができます。どこを変えればいいか わかりますか？

        * * *

        ヒント 何かを削除してください！
      courseF_artist_for5_2019: |-
        さっきのプログラムを少し変えれば、この図形を かくことができます。どこを変えればいいか わかりますか？

        * * *

        ヒント 何かを削除してください！
      courseF_artist_for6: |-
        90度曲がるところを少し変えるとこんな感じになります。

        さっきのプログラムを修正しよう、ねじ曲がったらせんをかくには、曲がる角度を89度にします。
      courseF_artist_for6_2018: |-
        90度曲がるところを少し変えるとこんな感じになります。

        さっきのプログラムを修正しよう、ねじ曲がったらせんをかくには、曲がる角度を89度にします。
      courseF_artist_for6_2019: |-
        90度曲がるところを少し変えるとこんな感じになります。

        さっきのプログラムを修正しよう、ねじ曲がったらせんをかくには、曲がる角度を89度にします。
      courseF_artist_for7: 'さっきのパズルのプログラムを3カ所変えて、つぎの図形をかいてみよう。  '
      courseF_artist_for7_2018: 'さっきのパズルのプログラムを3カ所変えて、つぎの図形をかいてみよう。  '
      courseF_artist_for7_2019: 'さっきのパズルのプログラムを3カ所変えて、つぎの図形をかいてみよう。  '
      courseF_artist_for9: "**インスピレーション** だんだん色を濃くしていくために`セット アルファ―` にcounterをセットしよう。(六角形にするには、曲がる角度を60度にします。)"
      courseF_artist_for9_2018: "**インスピレーション** だんだん色を濃くしていくために`セット アルファ―` にcounterをセットしよう。(六角形にするには、曲がる角度を60度にします。)"
      courseF_artist_for9_2019: "**インスピレーション** だんだん色を濃くしていくために`セット アルファ―` にcounterをセットしよう。(六角形にするには、曲がる角度を60度にします。)"
      courseF_artist_for_challenge1: |-
        この図形をかくことができるかな？

        <img src="https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png" width="350px"/>
      courseF_artist_for_challenge1_2018: |-
        この図形をかくことができるかな？

        <img src="https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png" width="350px"/>
      courseF_artist_for_challenge1_2019: |-
        この図形をかくことができるかな？

        <img src="https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png" width="350px"/>
      courseF_artist_for_challenge2: |-
        この図形をかくことができるかな？

        <img src="https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png" width="350px"/>
      courseF_artist_for_challenge2_2018: |-
        この図形をかくことができるかな？

        <img src="https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png" width="350px"/>
      courseF_artist_for_challenge2_2019: |-
        この図形をかくことができるかな？

        <img src="https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png" width="350px"/>
      courseF_artist_variables10: "さっきのパズルのプログラムの変数をいろいろ変えてみよう。  \n\n-   `length`
        を150より小さくしてスタートしたら どうなるかな？\n-   くり返しのなかで`length`を1.25倍したら どうなるかな？\n-   角度を119度にしたら
        どうなるかな？"
      courseF_artist_variables10_2018: "さっきのパズルのプログラムの変数をいろいろ変えてみよう。  \n\n-   `length`
        を150より小さくしてスタートしたら どうなるかな？\n-   くり返しのなかで`length`を1.25倍したら どうなるかな？\n-   角度を119度にしたら
        どうなるかな？"
      courseF_artist_variables10_2019: "さっきのパズルのプログラムの変数をいろいろ変えてみよう。  \n\n-   `length`
        を150より小さくしてスタートしたら どうなるかな？\n-   くり返しのなかで`length`を1.25倍したら どうなるかな？\n-   角度を119度にしたら
        どうなるかな？"
      courseF_artist_variables2: "もうひとつくり返しを使って、三角形を3つかこう。   \n\nくり返しの入れ子を使いましょう。"
      courseF_artist_variables2_2018: "もうひとつくり返しを使って、三角形を3つかこう。   \n\nくり返しの入れ子を使いましょう。"
      courseF_artist_variables2_2019: "もうひとつくり返しを使って、三角形を3つかこう。   \n\nくり返しの入れ子を使いましょう。"
      courseF_artist_variables3: |-
        動く長さを50を変数に入れて使います。この方法は、これからのパズルでも使います。

        ![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)
      courseF_artist_variables3_2018: |-
        動く長さを50を変数に入れて使います。この方法は、これからのパズルでも使います。

        ![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)
      courseF_artist_variables3_2019: |-
        動く長さを50を変数に入れて使います。この方法は、これからのパズルでも使います。

        ![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)
      courseF_artist_variables4: 次の三角形をかくのに、アーティストを前と下にジャンプさせるに変数`length`を使おう。
      courseF_artist_variables4_2018: 次の三角形をかくのに、アーティストを前と下にジャンプさせるに変数`length`を使おう。
      courseF_artist_variables4_2019: 次の三角形をかくのに、アーティストを前と下にジャンプさせるに変数`length`を使おう。
      courseF_artist_variables6: |-
        **あれ！**

        三角形の大きさとジャンプするのが60ピクセルになってる。

        変数の値を変えてみるのはどうかな？
      courseF_artist_variables6_2018: |-
        **あれ！**

        三角形の大きさとジャンプするのが60ピクセルになってる。

        変数の値を変えてみるのはどうかな？
      courseF_artist_variables6_2019: |-
        **あれ！**

        三角形の大きさとジャンプするのが60ピクセルになってる。

        変数の値を変えてみるのはどうかな？
      courseF_artist_variables6a: 四角形の一辺の長さとアーティストにジャンプさせるきょりにさっきのパズルで勉強したことを使いましょう。
      courseF_artist_variables6a_2018: 四角形の一辺の長さとアーティストにジャンプさせるきょりにさっきのパズルで勉強したことを使いましょう。
      courseF_artist_variables6a_2019: 四角形の一辺の長さとアーティストにジャンプさせるきょりにさっきのパズルで勉強したことを使いましょう。
      courseF_artist_variables7: "150ピクセルの三角形をかこう。 \n\n変数`length`とくり返しを使おう。"
      courseF_artist_variables7_2018: "150ピクセルの三角形をかこう。 \n\n変数`length`とくり返しを使おう。"
      courseF_artist_variables7_2019: "150ピクセルの三角形をかこう。 \n\n変数`length`とくり返しを使おう。"
      courseF_artist_variables8: |-
        さっきのパズルのプログラムを修正しよう。 今回は、`セット length は`を使って1回繰り返すごとに変数 `length`の値を10増やそう。

        <xml>
        <block type="variables_set" inline="false">
                                <title name="VAR">length</title>
                                <value name="VALUE">
                                  <block type="math_arithmetic" inline="true">
                                    <title name="OP">ADD</title>
                                    <value name="A">
                                      <block type="variables_get">
                                        <title name="VAR">length</title>
                                      </block>
                                    </value>
                                    <value name="B">
                                      <block type="math_number">
                                        <title name="NUM">10</title>
                                      </block>
                                    </value>
                                  </block>
                                </value>
                              </block>
        </xml>

        最初の値は150。
      courseF_artist_variables8_2018: |-
        さっきのパズルのプログラムを修正しよう。 今回は、`セット length は`を使って1回繰り返すごとに変数 `length`の値を10増やそう。

        <xml>
        <block type="variables_set" inline="false">
                                <title name="VAR">length</title>
                                <value name="VALUE">
                                  <block type="math_arithmetic" inline="true">
                                    <title name="OP">ADD</title>
                                    <value name="A">
                                      <block type="variables_get">
                                        <title name="VAR">length</title>
                                      </block>
                                    </value>
                                    <value name="B">
                                      <block type="math_number">
                                        <title name="NUM">10</title>
                                      </block>
                                    </value>
                                  </block>
                                </value>
                              </block>
        </xml>

        最初の値は150。
      courseF_artist_variables8_2019: |-
        さっきのパズルのプログラムを修正しよう。 今回は、`セット length は`を使って1回繰り返すごとに変数 `length`の値を10増やそう。

        <xml>
        <block type="variables_set" inline="false">
                                <title name="VAR">length</title>
                                <value name="VALUE">
                                  <block type="math_arithmetic" inline="true">
                                    <title name="OP">ADD</title>
                                    <value name="A">
                                      <block type="variables_get">
                                        <title name="VAR">length</title>
                                      </block>
                                    </value>
                                    <value name="B">
                                      <block type="math_number">
                                        <title name="NUM">10</title>
                                      </block>
                                    </value>
                                  </block>
                                </value>
                              </block>
        </xml>

        最初の値は150。
      courseF_artist_variables9: |-
        アートしよう！

        前回のパズルで3だったくり返し回数を**30**に変えたらどうなるか見てみよう！線の色やかたちを変えるとカッコよくなるかな。
      courseF_artist_variables9_2018: |-
        アートしよう！

        前回のパズルで3だったくり返し回数を**30**に変えたらどうなるか見てみよう！線の色やかたちを変えるとカッコよくなるかな。
      courseF_artist_variables9_2019: |-
        アートしよう！

        前回のパズルで3だったくり返し回数を**30**に変えたらどうなるか見てみよう！線の色やかたちを変えるとカッコよくなるかな。
      courseF_artist_variablesFP: |-
        **自由時間** いままで勉強したことを使って、自由にかいてみよう。

        正方形、五角形、六角形にしたら どうなるかな？
      courseF_artist_variablesFP_2018: |-
        **自由時間** いままで勉強したことを使って、自由にかいてみよう。

        正方形、五角形、六角形にしたら どうなるかな？
      courseF_artist_variablesFP_2019: |-
        **自由時間** いままで勉強したことを使って、自由にかいてみよう。

        正方形、五角形、六角形にしたら どうなるかな？
      courseF_artist_variables_challenge1: 注意してチャレンジしよう。 変数`length`を使って、このパターンをかいてみよう。
      courseF_artist_variables_challenge1_2018: 注意してチャレンジしよう。 変数`length`を使って、このパターンをかいてみよう。
      courseF_artist_variables_challenge1_2019: 注意してチャレンジしよう。 変数`length`を使って、このパターンをかいてみよう。
      courseF_artist_variables_challenge2: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png" width="250px"/>

        このパターンをかくのに必要なことは、全部勉強したよ！ちょっと難しいけど、クリアできるまでがんばれるかな？
      courseF_artist_variables_challenge2_2018: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png" width="250px"/>

        このパターンをかくのに必要なことは、全部勉強したよ！ちょっと難しいけど、クリアできるまでがんばれるかな？
      courseF_artist_variables_challenge2_2019: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png" width="250px"/>

        このパターンをかくのに必要なことは、全部勉強したよ！ちょっと難しいけど、クリアできるまでがんばれるかな？
      courseF_bee_conditionals10: |-
        そこに何があるのか調べたいときは、条件判定文を使ってみましょう。

        ミツを集めてハチミツを作りましょう。
      courseF_bee_conditionals1_predict1: |-
        _"くもがあって下が見えないよ～！"_

        くもの下に花があるか調べて、花があればミツをとろう。
      courseF_bee_conditionals2: |-
        _"くもがいっぱいで花が見えないよ～！"_

        ミツをとる前にくもの下に花があるか調べてみよう。  花があれば、**1回だけ**ミツをとります。

        注意 くもの下はすべて同じとは限らないよ！
      courseF_bee_conditionals3: 花からミツをとることができますが、花があるか調べる必要があります。くもの下に花があれば、**1回だけ**ミツをとります。
      courseF_bee_conditionals4: |-
        今回は、花には1つだけミツがありますが、すべての場所に花があるわけではありません。

        できるだけ少ないブロックですべてのミツを集めよう。
      courseF_bee_conditionals7_predict2: |-
        くもの下には、花かハチミツがあります！

        `もし やること/でなければ`を使って、ミツをとったりハチミツを作ったりしよう。
      courseF_bee_conditionals8: |-
        **チャレンジ** くもの下には花かハチミツがかくれています！

        花があれば、ミツをとりましょう。花でなければハチの巣なので、ハチミツを作ります。
      courseF_bee_for10: "**チャレンジ** `まで` の使い方を思い出して、パズルをクリアしよう。 \n\nいままでやってきたことを思い出してみよう。"
      courseF_bee_for10_2018: "**チャレンジ** `まで` の使い方を思い出して、パズルをクリアしよう。 \n\nいままでやってきたことを思い出してみよう。"
      courseF_bee_for10_2019: "**チャレンジ** `まで` の使い方を思い出して、パズルをクリアしよう。 \n\nいままでやってきたことを思い出してみよう。"
      courseF_bee_for11: |-
        数を減らしていくときには、インクリメント分だけ**引き算**されます。

        15、12、9、6、3 にするのは、インクリメントをいくつにすればいい？
      courseF_bee_for11_2018: |-
        数を減らしていくときには、インクリメント分だけ**引き算**されます。

        15、12、9、6、3 にするのは、インクリメントをいくつにすればいい？
      courseF_bee_for11_2019: |-
        数を減らしていくときには、インクリメント分だけ**引き算**されます。

        15、12、9、6、3 にするのは、インクリメントをいくつにすればいい？
      courseF_bee_for2: |-
        ミツを集めよう。

        さっきのパズルで勉強したことを使えば、かんたんにクリアすることができます。
      courseF_bee_for2_2018: |-
        ミツを集めよう。

        さっきのパズルで勉強したことを使えば、かんたんにクリアすることができます。
      courseF_bee_for2_2019: |-
        ミツを集めよう。

        さっきのパズルで勉強したことを使えば、かんたんにクリアすることができます。
      courseF_bee_for6: |-
        `まつ` を使って、1づつ減らします。

        **5** から**1**まで**1**づつ減らしながら、ミツを集めましょう。
      courseF_bee_for6_2018: |-
        `まつ` を使って、1づつ減らします。

        **5** から**1**まで**1**づつ減らしながら、ミツを集めましょう。
      courseF_bee_for6_2019: |-
        `まつ` を使って、1づつ減らします。

        **5** から**1**まで**1**づつ減らしながら、ミツを集めましょう。
      courseF_bee_for7: |-
        `まつ`の最後の数字を**"インクリメント"**と呼びます。1回くり返すごとにカウンタは、**インクリメント**の値だけ変わります。

        **インクリメント**を2にして、ミツを集めよう。
      courseF_bee_for7_2018: |-
        `まつ`の最後の数字を**"インクリメント"**と呼びます。1回くり返すごとにカウンタは、**インクリメント**の値だけ変わります。

        **インクリメント**を2にして、ミツを集めよう。
      courseF_bee_for7_2019: |-
        `まつ`の最後の数字を**"インクリメント"**と呼びます。1回くり返すごとにカウンタは、**インクリメント**の値だけ変わります。

        **インクリメント**を2にして、ミツを集めよう。
      courseF_bee_for8: "これをクリアしよう！  \n\n3, 6, 9, 12, 15にするのは**インクリメント**はいくつにすればいい？"
      courseF_bee_for8_2018: "これをクリアしよう！  \n\n3, 6, 9, 12, 15にするのは**インクリメント**はいくつにすればいい？"
      courseF_bee_for8_2019: "これをクリアしよう！  \n\n3, 6, 9, 12, 15にするのは**インクリメント**はいくつにすればいい？"
      courseF_bee_for9: |-
        `計算（けいさん）` ブロックで変数`counter` を使おう！

        変数`counter`は一番小さい数字から始めて、庭を進むの使います。ミツを集めるのにどうやってつかいますか？
      courseF_bee_for9_2018: |-
        `計算（けいさん）` ブロックで変数`counter` を使おう！

        変数`counter`は一番小さい数字から始めて、庭を進むの使います。ミツを集めるのにどうやってつかいますか？
      courseF_bee_for9_2019: |-
        `計算（けいさん）` ブロックで変数`counter` を使おう！

        変数`counter`は一番小さい数字から始めて、庭を進むの使います。ミツを集めるのにどうやってつかいますか？
      courseF_bee_for_challenge1: "`まつ`を使って、ミツを集めることができます！ \n\n``repeat '回 くりかえす\\`を使って、必要なアクションを行おう。"
      courseF_bee_for_challenge1_2018: "`まつ`を使って、ミツを集めることができます！ \n\n``repeat '回 くりかえす\\`を使って、必要なアクションを行おう。"
      courseF_bee_for_challenge1_2019: "`まつ`を使って、ミツを集めることができます！ \n\n``repeat '回 くりかえす\\`を使って、必要なアクションを行おう。"
      courseF_bee_for_challenge2: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      courseF_bee_for_challenge2_2018: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      courseF_bee_for_challenge2_2019: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      courseF_bee_functions2: |-
        関数について勉強しましょう。

        ここからは、_関数 エディター_を使います。このエディターは関数を編集するとき、別ウインドを開きます。ワークスペースで編集しているときは、関数の中を見ることはできません。でも、心配しないで...だいじょうぶ！

        * * *

        花があるときだけミツをとる関数で練習しましょう。関数の中を見るには、青の"編集" ボタンを押します。

        関数`get only nectar`を使って、花からミツを集めましょう。
      courseF_playlab_variables1a: |-
        サッカーをしているキキは、変数 `shout` にセットされたことばをさけびます。

        変数に"Goal!" をセットしてみよう。
      courseF_playlab_variables2b: |-
        キャラにしゃべらせる文章に変数を使うことで、さまざまなバリエーションを作ることができます。

        `つなげる`ブロックの空いているところに、変数`color` を入れてみよう。
      courseF_playlab_variables3b_josh: '変数 `age`には、12がセットされています。変数を使って、キキとブライアンを会話させてみましょう。 '
      courseF_playlab_variables4b: |-
        海ぞくが、ブライアンに質問してきます。

        "実行（じっこう）"をクリックしたら、`しつもん`ブロックがあるので、ブライアンの答えを入力してください。

        正しい会話になるように変数をセットしてください。
      courseF_playlab_variables5c: |-
        `たずねる`と`もし/でなければ` を組み合わせると、おもしろくなります！

        海ぞくが質問してきます。`もし/でなければ` で入力された色が あっているか 判定しているところに 変数`answer`を 入れよう。
      courseF_playlab_variables6c: "これからのパズルは、 `しつもん`と `もし/でなければ`を使って、これからのパズルでは、**自分**で考えてゲームを作っていきます！
        \n\n変数 \"codename\"に値をセットしよう。 `しつもん`で codenameをたずねます。 `もし/でなければ` で入力された答えがあっているか調べましよう。"
      courseF_playlab_variables7b: |-
        あなただけのゲームを作ろう！

        質問と答えを考えて、あなただけのゲームを作ろう。

        アイデアが必要？ヒントをクリックしてみよう。
      courseF_playlab_variables7c: |-
        `しつもん`で色をたずねましょう。

        codenameがあっていれば勝ち、まちがっていれば負けを判定する `もし/でなければ`は、そのままにしておいてね。
      courseF_playlab_variables8c: ツールボックスの中にある`つなげる` を使って、 変数`codename` と `color`の値を入れた勝った時と負けた時のメッセージを作ろう。
      courseF_playlab_variables_challenge1: キャラにジョークを言わせましょう。punchlineにあなたが考えたジョークを入力しましょう。
      courseF_playlab_variables_challenge2: |-
        ゲームのルールです！ネコ（キャラ2）は2ポイント、ペンギン（キャラ3）は3ポイント。ちょうど10ポイントになれば、勝ちです！

        ただし、ネコとペンギンがさわったら、ポイントがマイナスされます。

        * * *

        説明を読んで、必要なブロックを追加しましょう。

        -   矢印キーが押されたとき、犬が動くようにするのは どうすればいいですか？
        -   ネコやペンギンにさわったとき、ポイントが入るようにするのは どうすればいいですか？
        -   ネコとペンギンがさわったとき、ポイントをマイナスするには どうすればいいですか？
      frozen circle: 円をかくことが できる？「???」のところに数をいれて、円をかいてみましょう。
      frozen circle function: "「円をかく」ブロックをつかって、10こ円をかきましょう。円をかいたらジャンプするのをわすれないでね。"
      frozen circle function in circle: こんどは、20こ円をかきましょう。いっこ円をかいたら、ジャンプして、18度まがるのよ。
      frozen circle function with parameter: こんどの「円をかく」ブロックは、「おおきさ」を かえることができるわ！このブロックをつかって、おおきさ5の小さい円と、おおきさ10の大きな円をかいてみて。
      frozen cross: "「くりかえし」ブロックをつかって＋の形をかきましょう。エルサが前にも後ろにもうごけるって、気がついてた？"
      frozen cross rotate: こんどは、線を10本かいてみましょう。それぞれの線をかくとき、どれくらい まがれば いいかしら？
      frozen cross rotate dense: こんどは、線を90本かきましょう！90回で ちょうど360度になるには、どれくらい まがれば いいかしら？ヒント：とても小さい数よ。
      frozen diamond: この4つのブロックを2回くりかえして、ひし形をかいてみましょう。四角形をかくのと にてるけど、まがる角度が ちがうわよ。90
        度じゃなくて、60 度と120 度 まがるのよ。
      frozen diamond mini snowflake: 雪のけっしょうは、色んな形があるって知ってる？さあ、新しい雪のけっしょうを かきましょう。「くりかえし」ブロックをつかって、ひし形を４つ
        かいてね。90度まがるのを わすれないで。
      frozen diamond snowflake: ひし形を10こ かいて、新しい雪のけっしょうをつくりましょう。36度まがると ちょうどいいわよ。
      frozen freeplay: あなたは もう、マスター アーティストよ！じゆうにブロックをつかって、冬のワンダーランドをつくってね。
      frozen perpendicular: |-
        つぎに 2 本の線を、90度の かくどで かいてみましょう！
        「まがる」ブロックと「うごく」ブロックをつかうといいわ。
      frozen snowflake branch: "「雪のけっしょうのエダをかく」ブロックをつかって、３本の えだをかいてみましょう。雪のけっしょうが
        みえてきたかしら？"
      frozen snowflake full: 8回くりかえして、きれいな雪のけっしょうを かきましょう！
      frozen snowflower: ふくざつな雪のもようも、円をつかって かけるわね。おおきさ５の円を５こ、おおきさ１０の円を５こ つかって、この もようを
        かいてみて。
      frozen square iterative: もうすこしで、四角がかけるわ。4本の線で、四角をかきましょう！
      frozen square loop: こんにちは、アレンデール王国のアナよ！「くりかえし」ブロックをつかって、四角形をかいてみて。さっきより少ないブロックで
        かけるはずよ。四角をかくには、何回くりかえせばいいか 考えて、「???」に、数をいれてみましょう。
      frozen square loop 3x: 四角形を 3つ かいてみましょう。ひとつ四角形をかいたら、120度まがると いいわよ。
      frozen square snowflake: この雪のもようが かけるかしら？「くりかえし」ブロックで、四角形を10こ かけばいいわ。四角形をひとつ
        かいたら、「まがる」ブロックで36度まがるのよ。
      grade2_collector_10: |-
        これがさいご！
        たくさんの たからものを あつめて このステージを クリアしよう。
      grade2_collector_10_2018: |-
        これがさいご！
        たくさんの たからものを あつめて このステージを クリアしよう。
      grade2_collector_10_2019: |-
        これがさいご！
        たくさんの たからものを あつめて このステージを クリアしよう。
      grade2_collector_A: ローレルが すべてのたからものを あつめるのを てつだって。
      grade2_collector_A_2018: ローレルが すべてのたからものを あつめるのを てつだって。
      grade2_collector_A_2019: ローレルが すべてのたからものを あつめるのを てつだって。
      grade5_artist_variables_triangles1: |-
        正三角形をかこう。

        一辺は50ピクセルです。
      grade5_artist_variables_triangles1_2018: |-
        正三角形をかこう。

        一辺は50ピクセルです。
      grade5_artist_variables_triangles1_2019: |-
        正三角形をかこう。

        一辺は50ピクセルです。
      iceage_click_hello: "シドをクリックしたとき、シドに何か言わせることができるかな？ \n\"実行（じっこう）\"を押したら、シドをクリックしてみよう！"
      iceage_free_play: |-
        あなたがゲームや物語をつくる番です！ 完成したら、「完了」ボタンをクリックして、友だちが君のゲームをスマホや、タブレット、コンピューターで遊べるようにしよう！
        何を作ろうかな？ヒントをクリックしてみて。
      iceage_hello1: |-
        シド(キャラ 1) は、ぼうけんに 出るために 仲間を集めています。 `実行（じっこう）した時`の下に `言う` を引っ付けて、シドに"こんにちは！"と言わせてみよう。

        "こんにちは！" を入れるのを忘れないでね！
      iceage_hello2: マニー (キャラ2) はシド(キャラ1) に出会って、マニーはシドを冒険に連れ出そうとしています、`キャラ ___ 言う`を2回使って、マニーとシドに
        あいさつをさせよう。
      iceage_move_events: |-
        スクラットがドングリを見つけました！
        矢じるしのときのそれぞれに、違う方向の`動かす キャラ 1`を付けて、スクラットが自由に動き回れるようにしよう。
        プログラムが完成したら、"実行（じっこう）"を押してドングリを集めよう。
      iceage_move_to_actor: ディエゴ（キャラ1）は、マニー（キャラ2）を探しています。二人を会わせることできるかな？`キャラが さわったら`を使って、ディエゴがマニーに会った時に音楽を鳴らそう。
      iceage_move_to_flag: スクラットがドングリを見つけた。200ピクセル動かすことができるかな？
      iceage_repeat: "`ずっと やること` を使えば、コードをずっとくり返すことができます。グラニーを左右に行ったり来たりさせるためにブロックをくり返しのなかに入れてみよう。"
      iceage_sound_and_points: "前のパズルで作ったプログラムでグラニーは、左右を行ったり来たりします。\nシドがグラニーにさわったら、**音を
        鳴らす** と **ポイントを ふやす** を行ってください。 \n\"実行（じっこう）\"を押して、ゲームを始めよう。"
      iceage_throw_hearts: |-
        グラニーが好きなことを シドは わかってほしかった。

        `キャラ なげる`を使って、シド（キャラ1）にハートを投げさせ！
        グラニー（キャラ2）がハートを受け取ったら うれしい顔になるようにしよう。
      iceage_warn_ice_age: |-
        ふぶきがせまっているので、はやく移動しよう！
        背景を氷のもように変えて、シド（キャラ1）のスピードをはやいにしよう。
        ”実行（じっこう）”を押したら、シドを動かして、ディエゴに注意しよう。
      ramp_artist_loops1: |-
        なんて、さわやかな日だ！

        冬が来る前に60ピクセル前に動いて、花にカバーをかけよう。
      ramp_artist_loops1_2018: |-
        なんて、さわやかな日だ！

        冬が来る前に60ピクセル前に動いて、花にカバーをかけよう。
      ramp_artist_loops1_2019: |-
        なんて、さわやかな日だ！

        冬が来る前に60ピクセル前に動いて、花にカバーをかけよう。
      ramp_artist_loops2: 1回ごとに色をてきとうな色に変えて、前にすすむのを5回くり返そう。
      ramp_artist_loops2_2018: 1回ごとに色をてきとうな色に変えて、前にすすむのを5回くり返そう。
      ramp_artist_loops2_2019: 1回ごとに色をてきとうな色に変えて、前にすすむのを5回くり返そう。
      ramp_artist_loops3: "`くりかえし`を使って、いろとりどりの5本の線をかいてみよう。"
      ramp_artist_loops3_2018: "`くりかえし`を使って、いろとりどりの5本の線をかいてみよう。"
      ramp_artist_loops3_2019: "`くりかえし`を使って、いろとりどりの5本の線をかいてみよう。"
      ramp_artist_loops4: ループの最後に75度右に曲がるを追加したら、どうなるかな？
      ramp_artist_loops4_2018: ループの最後に75度右に曲がるを追加したら、どうなるかな？
      ramp_artist_loops5: |-
        くり返しを使えば、簡単に階段をかくことができます！

        くり返しを使って、階段をかいてみよう。

        -   階段の幅は50ピクセル、高さは50ピクセル
        -   すすんだら必ず90度曲がること
      ramp_artist_loops5_2018: |-
        くり返しを使えば、簡単に階段をかくことができます！

        くり返しを使って、階段をかいてみよう。

        -   階段の幅は50ピクセル、高さは50ピクセル
        -   すすんだら必ず90度曲がること
      ramp_artist_loops5_2019: |-
        くり返しを使えば、簡単に階段をかくことができます！

        くり返しを使って、階段をかいてみよう。

        -   階段の幅は50ピクセル、高さは50ピクセル
        -   すすんだら必ず90度曲がること
      ramp_artist_loops6: |-
        階段はさっきのパズルよりも長いけど、プログラムの行数は同じだよ！

        ループの回数を変更して、パズルをクリアしよう。
      ramp_artist_loops6_2018: |-
        階段はさっきのパズルよりも長いけど、プログラムの行数は同じだよ！

        ループの回数を変更して、パズルをクリアしよう。
      ramp_artist_loops6_2019: |-
        階段はさっきのパズルよりも長いけど、プログラムの行数は同じだよ！

        ループの回数を変更して、パズルをクリアしよう。
      ramp_artist_loops7: パターンを見つけて、くり返しを使って短いプログラムにしよう！
      ramp_artist_loops7_2018: パターンを見つけて、くり返しを使って短いプログラムにしよう！
      ramp_artist_loops7_2019: パターンを見つけて、くり返しを使って短いプログラムにしよう！
      ramp_artist_loops8: "**チャレンジ** パターンを見つけて、くり返しを使って短いプログラムにしよう！"
      ramp_artist_loops8_2018: "**チャレンジ** パターンを見つけて、くり返しを使って短いプログラムにしよう！"
      ramp_artist_loops8_2019: "**チャレンジ** パターンを見つけて、くり返しを使って短いプログラムにしよう！"
      ramp_artist_loops9: 一辺が200ピクセルの正方形をかいてパズルをクリアしよう。
      ramp_artist_loops9_2018: 一辺が200ピクセルの正方形をかいてパズルをクリアしよう。
      ramp_artist_loops9_2019: 一辺が200ピクセルの正方形をかいてパズルをクリアしよう。
