{
  "ru-RU": {
    "data": {
      "programming_environments": {
        "weblab": {
          "name": "Веб-лаборатория",
          "description": "Веб-редактор HTML/CSS.",
          "categories": {
            "html_tags": {
              "name": "HTML тэги"
            },
            "css_properties": {
              "name": "Свойства CSS"
            }
          }
        },
        "gamelab": {
          "name": "Лаборатория игр",
          "description": "Лаборатория Игр - это среда программирования, в которой вы можете создавать захватывающие игры и анимацию. Нарисуйте своих персонажей, напишите рабочий код с помощью блоков или JavaScript, а затем поделитесь своей игрой за считанные секунды.",
          "categories": {
            "game_lab": {
              "name": "Лаборатория игр",
              "expressions": {
                "keyDown": {
                  "palette_params": {
                    "code": {
                      "type": "Строка"
                    }
                  }
                },
                "keyWentDown": {
                  "palette_params": {
                    "code": {
                      "type": "Строка"
                    }
                  }
                },
                "keyWentUp": {
                  "palette_params": {
                    "code": {
                      "type": "Строка"
                    }
                  }
                },
                "mouseDown": {
                  "palette_params": {
                    "button": {
                      "type": "Строка"
                    }
                  }
                },
                "mouseIsOver": {
                  "palette_params": {
                    "sprite": {
                      "type": "Спрайт (аним. изображения)"
                    }
                  }
                },
                "mousePressedOver": {
                  "palette_params": {
                    "sprite": {
                      "type": "Спрайт (аним. изображения)"
                    }
                  }
                },
                "mouseWentDown": {
                  "examples": {
                    "Black and White": {
                      "name": "Черно-белый"
                    }
                  },
                  "palette_params": {
                    "button": {
                      "type": "Строка"
                    }
                  }
                },
                "mouseWentUp": {
                  "palette_params": {
                    "button": {
                      "type": "Строка"
                    }
                  }
                },
                "playSound": {
                  "palette_params": {
                    "url": {
                      "type": "Строка"
                    },
                    "loop": {
                      "type": "Булево выражение"
                    }
                  },
                  "short_description": "Воспроизводит звуковой файл MP3, находящийся по указанному URL-адресу."
                },
                "playSpeech": {
                  "palette_params": {
                    "text": {
                      "type": "Строка"
                    },
                    "gender": {
                      "type": "Строка"
                    },
                    "language": {
                      "type": "Строка"
                    }
                  }
                },
                "showMobileControls": {
                  "content": "Изменяет элементы управления на мобильном устройстве, видимые под игровым пространством.",
                  "palette_params": {
                    "spaceButtonVisible": {
                      "type": "Булево выражение"
                    },
                    "dpadVisible": {
                      "type": "Булево выражение"
                    },
                    "dpadFourWay": {
                      "type": "Булево выражение"
                    },
                    "mobileOnly": {
                      "type": "Булево выражение"
                    }
                  },
                  "short_description": "Изменяет элементы управления на мобильном устройстве, видимые под игровым пространством."
                },
                "stopSound": {
                  "palette_params": {
                    "url": {
                      "type": "Строка"
                    }
                  }
                }
              }
            },
            "sprites": {
              "name": "Спрайты",
              "expressions": {
                "getSpeed": {
                  "examples": {
                    "Spiral": {
                      "name": "Спираль"
                    }
                  }
                },
                "sprite.height": {
                  "return_value": "Высота спрайта."
                },
                "mirrorX": {
                  "palette_params": {
                    "dir": {
                      "type": "Число"
                    }
                  }
                },
                "mirrorY": {
                  "palette_params": {
                    "dir": {
                      "type": "Число"
                    }
                  }
                },
                "pointTo": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "setAnimation": {
                  "palette_params": {
                    "label": {
                      "type": "Строка"
                    }
                  }
                },
                "setCollider": {
                  "palette_params": {
                    "type": {
                      "type": "Строка"
                    },
                    "xOffset": {
                      "type": "Число"
                    },
                    "yOffset": {
                      "type": "Число"
                    },
                    "width/radius": {
                      "type": "Число"
                    },
                    "height": {
                      "type": "Число"
                    },
                    "rotationOffset": {
                      "type": "Число"
                    }
                  }
                },
                "setFrame": {
                  "palette_params": {
                    "frame": {
                      "type": "Число"
                    }
                  }
                },
                "setSpeedAndDirection": {
                  "palette_params": {
                    "speed": {
                      "type": "Число"
                    },
                    "angle": {
                      "type": "Число"
                    }
                  }
                },
                "setVelocity": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "sprite.width": {
                  "return_value": "Ширина спрайта."
                },
                "createSprite": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "width": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    },
                    "height": {
                      "type": "Число"
                    }
                  }
                }
              }
            },
            "groups": {
              "name": "Группы",
              "expressions": {
                "add": {
                  "palette_params": {
                    "sprite": {
                      "type": "Спрайт (аним. изображения)"
                    }
                  }
                },
                "contains": {
                  "palette_params": {
                    "sprite": {
                      "type": "Спрайт (аним. изображения)"
                    }
                  }
                },
                "get": {
                  "palette_params": {
                    "i": {
                      "type": "Число"
                    }
                  }
                },
                "pointToEach": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "remove": {
                  "palette_params": {
                    "sprite": {
                      "type": "Спрайт (аним. изображения)"
                    }
                  }
                },
                "setAnimationEach": {
                  "palette_params": {
                    "label": {
                      "type": "Строка"
                    }
                  }
                },
                "setColliderEach": {
                  "palette_params": {
                    "type": {
                      "type": "Строка"
                    },
                    "yOffset": {
                      "type": "Число"
                    },
                    "width/radius": {
                      "type": "Число"
                    },
                    "height": {
                      "type": "Число"
                    },
                    "rotationOffset": {
                      "type": "Число"
                    }
                  }
                },
                "setColorEach": {
                  "palette_params": {
                    "color": {
                      "type": "Цвет"
                    }
                  }
                },
                "setHeightEach": {
                  "palette_params": {
                    "height": {
                      "type": "Число"
                    }
                  }
                },
                "setLifetimeEach": {
                  "palette_params": {
                    "lifetime": {
                      "type": "Число"
                    }
                  }
                },
                "setMirrorXEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Число"
                    }
                  }
                },
                "setMirrorYEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Число"
                    }
                  }
                },
                "setRotateToDirectionEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Булево выражение"
                    }
                  }
                },
                "setRotationEach": {
                  "palette_params": {
                    "angle": {
                      "type": "Число"
                    }
                  }
                },
                "setRotationSpeedEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Число"
                    }
                  }
                },
                "setScaleEach": {
                  "palette_params": {
                    "scale": {
                      "type": "Число"
                    }
                  }
                },
                "setSpeedAndDirectionEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Число"
                    },
                    "angle": {
                      "type": "Число"
                    }
                  }
                },
                "setTintEach": {
                  "palette_params": {
                    "color": {
                      "type": "Цвет"
                    }
                  }
                },
                "setVelocityEach": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "setVelocityXEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Число"
                    }
                  }
                },
                "setVelocityYEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Число"
                    }
                  }
                },
                "setVisibleEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Булево выражение"
                    }
                  }
                },
                "setWidthEach": {
                  "palette_params": {
                    "width": {
                      "type": "Число"
                    }
                  }
                }
              }
            },
            "drawing": {
              "name": "Рисование",
              "expressions": {
                "arc": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    },
                    "w": {
                      "type": "Число"
                    },
                    "h": {
                      "type": "Число"
                    },
                    "start": {
                      "type": "Число"
                    },
                    "stop": {
                      "type": "Число"
                    }
                  }
                },
                "background": {
                  "palette_params": {
                    "color": {
                      "type": "Строка"
                    }
                  }
                },
                "ellipse": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    },
                    "w": {
                      "type": "Число"
                    },
                    "h": {
                      "type": "Число"
                    }
                  }
                },
                "fill": {
                  "palette_params": {
                    "color": {
                      "type": "Строка"
                    }
                  }
                },
                "line": {
                  "palette_params": {
                    "x1": {
                      "type": "Число"
                    },
                    "y1": {
                      "type": "Число"
                    },
                    "x2": {
                      "type": "Число"
                    },
                    "y2": {
                      "type": "Число"
                    }
                  }
                },
                "point": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    },
                    "w": {
                      "type": "Число"
                    },
                    "h": {
                      "type": "Число"
                    }
                  }
                },
                "regularPolygon": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    },
                    "sides": {
                      "type": "Число"
                    },
                    "size": {
                      "type": "Число"
                    }
                  }
                },
                "rgb": {
                  "palette_params": {
                    "r": {
                      "type": "Число"
                    },
                    "g": {
                      "type": "Число"
                    },
                    "b": {
                      "type": "Число"
                    },
                    "a": {
                      "type": "Число"
                    }
                  }
                },
                "shape": {
                  "examples": {
                    "Star": {
                      "name": "Звезда"
                    }
                  },
                  "palette_params": {
                    "x1": {
                      "type": "Число"
                    },
                    "y1": {
                      "type": "Число"
                    },
                    "x2": {
                      "type": "Число"
                    },
                    "y2": {
                      "type": "Число"
                    }
                  }
                },
                "stroke": {
                  "palette_params": {
                    "color": {
                      "type": "Строка"
                    }
                  }
                },
                "strokeWeight": {
                  "palette_params": {
                    "size": {
                      "type": "Число"
                    }
                  }
                },
                "text": {
                  "palette_params": {
                    "str": {
                      "type": "Строка"
                    },
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    },
                    "width": {
                      "type": "Число"
                    },
                    "height": {
                      "type": "Число"
                    }
                  }
                },
                "textAlign": {
                  "palette_params": {
                    "horiz": {
                      "type": "Строка"
                    },
                    "vert": {
                      "type": "Строка"
                    }
                  }
                },
                "textFont": {
                  "palette_params": {
                    "font": {
                      "type": "Строка"
                    }
                  }
                },
                "textSize": {
                  "palette_params": {
                    "pixels": {
                      "type": "Число"
                    }
                  }
                }
              }
            },
            "control": {
              "name": "Управление",
              "expressions": {
                "clearInterval": {
                  "palette_params": {
                    "interval": {
                      "type": "number"
                    }
                  }
                },
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "type": "number"
                    }
                  }
                },
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "type": "number",
                      "description": "Количество миллисекунд между каждым выполнением функции."
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "type": "number",
                      "description": "Количество миллисекунд ожидания перед выполнением функции."
                    }
                  }
                }
              }
            },
            "math": {
              "name": "Математика",
              "expressions": {
                "mathAbs": {
                  "palette_params": {
                    "x": {
                      "type": "number"
                    }
                  }
                },
                "mathMax": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "number"
                    }
                  }
                },
                "mathMin": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "number"
                    }
                  }
                },
                "mathRound": {
                  "palette_params": {
                    "x": {
                      "type": "number"
                    }
                  }
                },
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "value1": {
                      "type": "Число"
                    },
                    "value2": {
                      "type": "Число"
                    }
                  }
                },
                "randomNumber": {
                  "palette_params": {
                    "min": {
                      "type": "number",
                      "description": "Возвращено минимальное число"
                    },
                    "max": {
                      "type": "number",
                      "description": "Возвращено максимальное число"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "min": {
                      "type": "number",
                      "description": "Возвращено минимальное число"
                    },
                    "max": {
                      "type": "number",
                      "description": "Возвращено максимальное число"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "Переменные",
              "expressions": {
                "assign_x": {
                  "short_description": "Присваивает значение существующей переменной. Например, x = 0;"
                },
                "declareAssign_x": {
                  "short_description": "Объявляет переменную с данным именем после \" Var \", и присваивает его значение на правой части выражения"
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Строка для поиска."
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Строка для поиска."
                    }
                  }
                },
                "length": {
                  "return_value": "Длина строки"
                },
                "substring": {
                  "palette_params": {
                    "start": {
                      "type": "number"
                    },
                    "end": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "functions": {
              "name": "функции"
            }
          }
        },
        "applab": {
          "name": "Лаборатория приложений",
          "description": "App Lab является средой программирования, в которой можно создавать простые приложения. Создавай дизайн, пиши код с помощью блоков или JavaScript и смотри результат. После этого в считанные секунды приложением можно поделиться.",
          "categories": {
            "ui_controls": {
              "name": "Элементы управления интерфейса пользователя",
              "expressions": {
                "button": {
                  "short_description": "Создает кнопку на экране, отображающую текст, указанный и на который ссылается данный идентификатор, в месте по умолчанию (0,0)."
                },
                "getProperty": {
                  "palette_params": {
                    "id": {
                      "type": "Строка"
                    },
                    "property": {
                      "type": "Строка"
                    }
                  }
                },
                "onEvent": {
                  "examples": {
                    "Shrink and Grow": {
                      "name": "Сжатие и рост"
                    }
                  },
                  "palette_params": {
                    "type": {
                      "type": "Строка"
                    },
                    "id": {
                      "type": "Строка"
                    },
                    "callback": {
                      "type": "Функция"
                    }
                  }
                },
                "playSound": {
                  "palette_params": {
                    "loop": {
                      "type": "Булево выражение"
                    }
                  },
                  "short_description": "Воспроизводит звуковой файл MP3, находящийся по указанному URL-адресу."
                },
                "playSpeech": {
                  "palette_params": {
                    "text": {
                      "type": "Строка"
                    },
                    "gender": {
                      "type": "Строка"
                    },
                    "language": {
                      "type": "Строка"
                    }
                  }
                },
                "rgb": {
                  "palette_params": {
                    "r": {
                      "type": "Число"
                    },
                    "g": {
                      "type": "Число"
                    },
                    "b": {
                      "type": "Число"
                    },
                    "a": {
                      "type": "Число"
                    }
                  }
                },
                "setNumber": {
                  "palette_params": {
                    "number": {
                      "type": "number"
                    }
                  }
                },
                "setPosition": {
                  "palette_params": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    },
                    "width": {
                      "type": "number"
                    },
                    "height": {
                      "type": "number"
                    }
                  }
                },
                "setProperty": {
                  "palette_params": {
                    "id": {
                      "type": "Строка"
                    },
                    "property": {
                      "type": "Строка",
                      "description": "Свойство, которое нужно изменить."
                    }
                  },
                  "short_description": "Присваивает свойству новое значение для указанного элемента."
                },
                "setScreen": {
                  "short_description": "Устанавливает экран на заданный ScreenID."
                },
                "setSize": {
                  "palette_params": {
                    "height": {
                      "type": "number"
                    },
                    "width": {
                      "type": "number"
                    }
                  }
                },
                "showElement": {
                  "short_description": "Показывает элемент с указанным идентификатором."
                },
                "textLabel": {
                  "short_description": "Создает текстовую метку на экране, отображающую текст, указанный и на который ссылается данный идентификатор, в месте по умолчанию (0,0)."
                }
              }
            },
            "canvas": {
              "name": "Холст",
              "expressions": {
                "circle": {
                  "palette_params": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    },
                    "radius": {
                      "type": "number",
                      "description": "Радиус круга в пикселях."
                    }
                  }
                },
                "createCanvas": {
                  "palette_params": {
                    "[width]": {
                      "type": "number"
                    },
                    "[height]": {
                      "type": "number"
                    }
                  }
                },
                "drawImage": {
                  "palette_params": {
                    "id": {
                      "description": "Положение x в пикселях верхнего левого угла рисуемого изображения."
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях верхнего левого угла рисуемого изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Положение y в пикселях верхнего левого угла рисуемого изображения."
                    },
                    "[width]": {
                      "type": "number"
                    },
                    "[height]": {
                      "type": "number"
                    }
                  }
                },
                "getAlpha": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    }
                  },
                  "short_description": "Возвращает значение альфы (непрозрачности) (от 0 до 255) в цвете пикселя, расположенного в заданной позиции x и y в данных изображения."
                },
                "getBlue": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    }
                  }
                },
                "getGreen": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    }
                  }
                },
                "getImageData": {
                  "palette_params": {
                    "x": {
                      "type": "number",
                      "description": "Позиция x в пикселях для начала съемки."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях для начала съемки."
                    },
                    "width": {
                      "type": "number",
                      "description": "Ширина ограничивающего прямоугольника для захвата данных изображения."
                    },
                    "height": {
                      "type": "number",
                      "description": "Высота ограничивающего прямоугольника для захвата данных изображения."
                    }
                  }
                },
                "getRed": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    }
                  }
                },
                "line": {
                  "palette_params": {
                    "x1": {
                      "type": "number"
                    },
                    "y1": {
                      "type": "number"
                    },
                    "x2": {
                      "type": "number"
                    },
                    "y2": {
                      "type": "number"
                    }
                  }
                },
                "putImageData": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения, для размещения данных на холсте."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения, для размещения данных на холсте."
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях верхнего левого угла прямоугольника."
                    },
                    "y": {
                      "type": "number",
                      "description": "Положение y в пикселях верхнего левого угла прямоугольника."
                    },
                    "width": {
                      "type": "number",
                      "description": "Горизонтальная ширина прямоугольника в пикселях."
                    },
                    "height": {
                      "type": "number",
                      "description": "Вертикальная высота прямоугольника в пикселях."
                    }
                  }
                },
                "setAlpha": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "alphaValue": {
                      "type": "number",
                      "description": "Заданное значение альфы (непрозрачности) (от 0 до 255) в пикселе."
                    }
                  },
                  "short_description": "Задает значение альфы (непрозрачности) (в диапазоне от 0 до 255) в цвете пикселя, расположенного в заданной позиции x и y в данных изображения."
                },
                "setBlue": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "blueValue": {
                      "type": "number",
                      "description": "Количество синего (от 0 до 255), заданное в пикселе."
                    }
                  },
                  "short_description": "Задает количество синего (в диапазоне от 0 до 255) в цвете пикселя, расположенного в заданной позиции x и y в данных изображения, на входное значение BlueValue."
                },
                "setFillColor": {
                  "palette_params": {
                    "color": {
                      "type": "Строка"
                    }
                  }
                },
                "setGreen": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "greenValue": {
                      "type": "number",
                      "description": "Количество зеленого (от 0 до 255), заданное в пикселе."
                    }
                  },
                  "short_description": "Задает количество зеленого (в диапазоне от 0 до 255) в цвете пикселя, расположенного в заданной позиции x и y в данных изображения, на значение входного значения GreenValue."
                },
                "setRGB": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "red": {
                      "type": "number",
                      "description": "Количество красного (от 0 до 255), заданное в пикселе."
                    },
                    "green": {
                      "type": "number",
                      "description": "Количество зеленого (от 0 до 255), заданное в пикселе."
                    },
                    "blue": {
                      "type": "number",
                      "description": "Количество синего (от 0 до 255), заданное в пикселе."
                    },
                    "alpha": {
                      "type": "number",
                      "description": "Опционально. Степень непрозрачности (от 0 до 255), заданная в пикселе. По умолчанию 255 (полная непрозрачность)."
                    }
                  }
                },
                "setRed": {
                  "palette_params": {
                    "imageData": {
                      "type": "Объекта"
                    },
                    "x": {
                      "type": "number",
                      "description": "Положение x в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "y": {
                      "type": "number",
                      "description": "Позиция y в пикселях, начиная с верхнего левого угла изображения."
                    },
                    "redValue": {
                      "type": "number",
                      "description": "Количество красного (от 0 до 255), заданное в пикселе."
                    }
                  },
                  "short_description": "Задает количество красного (в диапазоне от 0 до 255) в цвете пикселя, расположенного в заданной позиции x и y в данных изображения, на входное значение RedValue."
                },
                "setStrokeColor": {
                  "palette_params": {
                    "color": {
                      "type": "Строка"
                    }
                  }
                },
                "setStrokeWidth": {
                  "palette_params": {
                    "width": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "data": {
              "name": "Данные",
              "expressions": {
                "createRecord": {
                  "palette_params": {
                    "record": {
                      "type": "Объекта"
                    }
                  }
                },
                "createRecordSync": {
                  "palette_params": {
                    "table": {
                      "type": "Строка"
                    }
                  }
                },
                "deleteRecord": {
                  "palette_params": {
                    "record": {
                      "type": "Объекта"
                    }
                  }
                },
                "drawChart": {
                  "palette_params": {
                    "options": {
                      "type": "Объекта"
                    }
                  }
                },
                "drawChartFromRecords": {
                  "palette_params": {
                    "tableName": {
                      "description": "Имя таблицы для извлечения записей."
                    },
                    "options": {
                      "type": "Объекта"
                    }
                  }
                },
                "getColumn": {
                  "palette_params": {
                    "table": {
                      "type": "Строка"
                    },
                    "column": {
                      "type": "Строка"
                    }
                  }
                },
                "getKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "Имя ключа, который нужно получить."
                    }
                  }
                },
                "getPrediction": {
                  "palette_params": {
                    "name": {
                      "type": "Строка"
                    },
                    "id": {
                      "type": "Строка"
                    },
                    "callback": {
                      "type": "Функция"
                    }
                  }
                },
                "getUserId": {
                  "short_description": "Получает уникальный идентификатор текущего пользователя этого приложения."
                },
                "onRecordEvent": {
                  "palette_params": {
                    "table": {
                      "description": "Имя таблицы, к которой применяется этот обработчик событий."
                    }
                  }
                },
                "readRecords": {
                  "palette_params": {
                    "terms": {
                      "type": "Объекта"
                    }
                  }
                },
                "readRecordsSync": {
                  "palette_params": {
                    "table": {
                      "type": "Строка"
                    }
                  }
                },
                "setKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "Имя ключа, который нужно сохранить."
                    },
                    "value": {
                      "description": "Данные, которые должны быть сохранены."
                    }
                  },
                  "short_description": "Сохраняет пару ключ/значение в хранилище данных ключ/значение App Lab и вызывает функцию обратного вызова по завершении действия."
                },
                "startWebRequest": {
                  "palette_params": {
                    "url": {
                      "description": "Веб-адрес службы, возвращающей данные."
                    }
                  }
                },
                "updateRecord": {
                  "palette_params": {
                    "record": {
                      "type": "Объекта"
                    }
                  }
                }
              }
            },
            "turtle": {
              "name": "Черепаха",
              "expressions": {
                "arcLeft": {
                  "palette_params": {
                    "angle": {
                      "type": "number"
                    },
                    "radius": {
                      "type": "number"
                    }
                  },
                  "short_description": "Перемещает черепаху вперед и влево по плавной круговой дуге."
                },
                "arcRight": {
                  "palette_params": {
                    "angle": {
                      "type": "number"
                    },
                    "radius": {
                      "type": "number"
                    }
                  }
                },
                "dot": {
                  "palette_params": {
                    "radius": {
                      "type": "number"
                    }
                  }
                },
                "getX": {
                  "short_description": "Получает текущую координату x черепахи в пикселях."
                },
                "getY": {
                  "short_description": "Получает текущую координату y черепахи в пикселях."
                },
                "hide": {
                  "short_description": "Делает черепаху невидимой в ее текущем местоположении."
                },
                "move": {
                  "palette_params": {
                    "x": {
                      "type": "number",
                      "description": "Количество пикселей для перемещения черепахи вправо."
                    },
                    "y": {
                      "type": "number",
                      "description": "Количество пикселей для перемещения черепахи вниз."
                    }
                  }
                },
                "moveBackward": {
                  "palette_params": {
                    "pixels": {
                      "type": "number"
                    }
                  },
                  "short_description": "Перемещает черепаху назад на заданное количество пикселей от текущего направления."
                },
                "moveForward": {
                  "palette_params": {
                    "pixels": {
                      "type": "number"
                    }
                  },
                  "short_description": "Перемещает черепаху вперед на заданное количество пикселей в текущем направлении."
                },
                "moveTo": {
                  "palette_params": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    }
                  },
                  "short_description": "Перемещает черепаху в определенное положение (x, y) на экране."
                },
                "penColor": {
                  "palette_params": {
                    "color": {
                      "type": "Строка"
                    }
                  },
                  "short_description": "Задает цвет ручки, используемой черепахой для рисования линий и точек."
                },
                "penDown": {
                  "short_description": "Опустите ручку так, чтобы черепаха во время движения рисовала за ней линию."
                },
                "penRGB": {
                  "palette_params": {
                    "r": {
                      "type": "Число"
                    },
                    "g": {
                      "type": "number"
                    },
                    "b": {
                      "type": "number"
                    },
                    "a": {
                      "type": "number"
                    }
                  },
                  "short_description": "Используя значения RGBA, задает цвет пера, используемого черепахой для рисования линий и точек."
                },
                "penUp": {
                  "short_description": "Поднимает ручку вверх, чтобы черепаха не рисовала линию во время движения."
                },
                "penWidth": {
                  "palette_params": {
                    "width": {
                      "type": "number"
                    }
                  },
                  "short_description": "Задает ширину линии в пикселях, которую черепаха рисует за собой при движении."
                },
                "show": {
                  "short_description": "Делает черепаху видимой в ее текущем местоположении."
                },
                "speed": {
                  "palette_params": {
                    "value": {
                      "type": "number"
                    }
                  },
                  "short_description": "Задает скорость выполнения приложения, включая скорость черепахи."
                },
                "turnLeft": {
                  "palette_params": {
                    "angle": {
                      "type": "number"
                    }
                  },
                  "short_description": "Поворачивает черепаху влево на заданный угол. Положение черепахи осталось прежним."
                },
                "turnRight": {
                  "palette_params": {
                    "angle": {
                      "type": "number"
                    }
                  },
                  "short_description": "Поворачивает черепаху вправо на заданный угол. Положение черепахи осталось прежним."
                },
                "turnTo": {
                  "palette_params": {
                    "angle": {
                      "type": "number"
                    }
                  },
                  "short_description": "Изменяет направление черепахи на определенный угол. 0 — вверх, 90 — вправо, 180 — вниз и 270 — влево."
                }
              }
            },
            "control": {
              "name": "Управление",
              "expressions": {
                "clearInterval": {
                  "palette_params": {
                    "interval": {
                      "type": "number"
                    }
                  }
                },
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "type": "number",
                      "description": "Значение, возвращаемое функцией setTimeout для отмены."
                    }
                  }
                },
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "type": "number",
                      "description": "Количество миллисекунд между каждым выполнением функции."
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "type": "number",
                      "description": "Количество миллисекунд ожидания перед выполнением функции."
                    }
                  }
                },
                "stopTimedLoop": {
                  "palette_params": {
                    "loop": {
                      "type": "Число"
                    }
                  }
                },
                "timedLoop": {
                  "palette_params": {
                    "ms": {
                      "type": "Число"
                    },
                    "callback": {
                      "type": "Функция"
                    }
                  }
                }
              }
            },
            "math": {
              "name": "Математика",
              "expressions": {
                "mathAbs": {
                  "palette_params": {
                    "x": {
                      "type": "number"
                    }
                  }
                },
                "mathMax": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "number"
                    }
                  }
                },
                "mathMin": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "number"
                    }
                  }
                },
                "mathPow": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "mathRound": {
                  "palette_params": {
                    "x": {
                      "type": "number"
                    }
                  }
                },
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "min": {
                      "type": "number",
                      "description": "Возвращено минимальное число"
                    },
                    "max": {
                      "type": "number",
                      "description": "Возвращено максимальное число"
                    }
                  }
                },
                "randomNumber": {
                  "palette_params": {
                    "min": {
                      "type": "number",
                      "description": "Возвращено минимальное число"
                    },
                    "max": {
                      "type": "number",
                      "description": "Возвращено максимальное число"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "Переменные",
              "expressions": {
                "declareAssign_object": {
                  "examples": {
                    "Choose Your Own Adventure": {
                      "name": "Выбери свое собственное приключение"
                    }
                  }
                },
                "declareAssign_x": {
                  "short_description": "Объявляет переменную с данным именем после \" Var \", и присваивает его значение на правой части выражения"
                },
                "declareAssign_list_123": {
                  "short_description": "Объявление и присвоение массива переменной"
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Строка для поиска."
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Строка для поиска."
                    }
                  }
                },
                "substring": {
                  "palette_params": {
                    "start": {
                      "type": "number"
                    },
                    "end": {
                      "type": "number"
                    }
                  }
                },
                "addPair": {
                  "palette_params": {
                    "key": {
                      "type": "Строка"
                    }
                  },
                  "return_value": "Нет"
                },
                "getValue": {
                  "palette_params": {
                    "key": {
                      "type": "Строка"
                    }
                  }
                },
                "insertItem": {
                  "palette_params": {
                    "index": {
                      "type": "number"
                    }
                  }
                },
                "length": {
                  "return_value": "Длина строки"
                },
                "removeItem": {
                  "palette_params": {
                    "index": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "functions": {
              "name": "функции"
            },
            "advanced": {
              "name": "Расширенный",
              "expressions": {
                "setStyle": {
                  "palette_params": {
                    "id": {
                      "type": "Строка"
                    },
                    "css": {
                      "type": "Строка"
                    }
                  }
                }
              }
            },
            "maker": {
              "name": "Изготовитель",
              "expressions": {
                "createButton": {
                  "palette_params": {
                    "Pin": {
                      "type": "number"
                    }
                  }
                },
                "createLed": {
                  "palette_params": {
                    "Pin": {
                      "type": "number"
                    }
                  }
                },
                "pinMode": {
                  "palette_params": {
                    "pin": {
                      "type": "Число"
                    },
                    "mode": {
                      "type": "Строка"
                    }
                  }
                }
              }
            },
            "circuit": {
              "expressions": {
                "isPressed": {
                  "return_value": "Булево выражение"
                },
                "buzzer.frequency": {
                  "palette_params": {
                    "frequency": {
                      "type": "number"
                    },
                    "duration": {
                      "type": "number"
                    }
                  }
                },
                "buzzer.note": {
                  "palette_params": {
                    "duration": {
                      "type": "number"
                    }
                  }
                },
                "buzzer.play": {
                  "palette_params": {
                    "tempo": {
                      "type": "Число"
                    }
                  }
                },
                "buzzer.playNotes": {
                  "palette_params": {
                    "tempo": {
                      "type": "Число"
                    }
                  }
                },
                "buzzer.playSong": {
                  "palette_params": {
                    "tempo": {
                      "type": "Число"
                    }
                  }
                },
                "blink": {
                  "palette_params": {
                    "interval": {
                      "type": "number"
                    }
                  }
                },
                "color": {
                  "palette_params": {
                    "red": {
                      "type": "number"
                    },
                    "green": {
                      "type": "number"
                    },
                    "blue": {
                      "type": "number"
                    }
                  }
                },
                "intensity": {
                  "palette_params": {
                    "brightness": {
                      "type": "number"
                    }
                  }
                },
                "pulse": {
                  "palette_params": {
                    "interval": {
                      "type": "number"
                    }
                  }
                },
                "led.blink": {
                  "palette_params": {
                    "interval": {
                      "type": "number"
                    }
                  }
                },
                "led.pulse": {
                  "palette_params": {
                    "interval": {
                      "type": "number"
                    }
                  }
                },
                "toggleSwitch.isOpen": {
                  "return_value": "Булево выражение"
                }
              }
            },
            "micro_bit": {
              "expressions": {
                "ledScreen.off": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "ledScreen.on": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                },
                "ledScreen.scrollNumber": {
                  "palette_params": {
                    "number": {
                      "type": "Число"
                    }
                  }
                },
                "ledScreen.scrollString": {
                  "palette_params": {
                    "String": {
                      "type": "Строка"
                    }
                  }
                },
                "ledScreen.toggle": {
                  "palette_params": {
                    "x": {
                      "type": "Число"
                    },
                    "y": {
                      "type": "Число"
                    }
                  }
                }
              }
            }
          }
        },
        "spritelab": {
          "name": "Лаборатория Спрайтов",
          "description": "Лаборатория Спрайтов - это блочная среда программирования, в которой вы можете создавать интерактивные проекты.",
          "categories": {
            "sprites": {
              "name": "Спрайты"
            },
            "world": {
              "name": "Мир"
            },
            "location": {
              "name": "Места"
            },
            "actions": {
              "name": "Действия"
            },
            "events": {
              "name": "События"
            },
            "behaviors": {
              "name": "Режимы работы"
            },
            "loops": {
              "name": "Циклы"
            },
            "variables": {
              "name": "Переменные"
            },
            "math": {
              "name": "Математика"
            },
            "logic": {
              "name": "Логика"
            },
            "functions": {
              "name": "функции"
            },
            "text": {
              "name": "Текст"
            },
            "comments": {
              "name": "Комментарии"
            }
          }
        },
        "javalab": {
          "name": "Java Lab",
          "categories": {
            "java_lab_shortcuts": {
              "name": "Ярлыки Java Лаборатории "
            },
            "general": {
              "name": "Основы Java"
            },
            "org_code_theater": {
              "name": "org.code.theater"
            },
            "org_code_media": {
              "name": "org.code.media"
            },
            "org_code_neighborhood": {
              "name": "org.code.neighborhood"
            },
            "java_io": {
              "name": "java.io"
            },
            "java_util": {
              "name": "java.util"
            },
            "java_lang": {
              "name": "java.lang"
            },
            "control_structures": {
              "name": "Структуры Управления"
            },
            "data_structures": {
              "name": "Структуры Данных"
            }
          }
        }
      }
    }
  }
}