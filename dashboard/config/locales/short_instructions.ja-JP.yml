---
ja-JP:
  data:
    short_instructions:
      2-3 Artist 1 new: こんにちは、わたしはアーティストです。あなたが書くコードをもとに、わたしはほとんどどんなものでもかくことができます。いくつかのブロックを使って、画像（がぞう）の中の灰色（はいいろ）のラインの上をなぞるようにしてください。(それぞれのラインの長さは
        100 ピクセル)
      2-3 Artist 11: "一辺（いっぺん）が 100 ピクセルの八角形（はちかくけい）を作り、\n 一時停止（いちじていし）の標識（ひょうしき）に枠（わく）をつけましょう。 "
      2-3 Artist 12: |-
        目玉をかき上げるために、円を作ろう！
        「くり返す」ブロックの中でアーティストが1度づつまがるとして、ひとつの円をかくためには、そのプログラムを何回くり返せばいいかな? 180回? 360回? 500回?
      2-3 Artist 2 new: "この家（いえ）の壁（かべ）は、未完成（みかんせい）です。\nそれぞれの面が 100 であるべきなのに、未完成の壁は
        50 しかありません。 壁を完成させましょう。 "
      2-3 Artist 3.4: |-
        「ジャンプ」のブロックを使うと、線をかかずにアーティストをうごかせます。
        「ジャンプ」と「前にうごく」のりょうほうのブロックを使って、点線をかいてみましょう。
      2-3 Artist 3new: "赤いぼうしの高さは100ピクセルです。赤より70ピクセルひくい黒のぼうしをかき上げてください。\\\r\n(どちらのぼうしも50ピクセルのはばです。)"
      2-3 Artist 4: ネコのために、家を完成（かんせい）させましょう。
      2-3 Artist 6: この家（いえ）には屋根（やね）が必要（ひつよう）です！三角形（さんかくけい）をかきましょう。 ヒント：3 辺（へん）の長さはすべて同じです。
      2-3 Artist 7: '子どもたちみんなが外を見ることができるように、学校のまどをぜんぶかき上げてください。それぞれの正方形のまどの辺の長さは25ピクセルです。 '
      2-3 Artist 8: それぞれの動物（どうぶつ）のために、長方形を2つの同じサイズの四角形に分けて、部屋（へや）を完成（かんせい）させてください。長方形のはばは200ピクセルで、高さは100ピクセルです。
      2-3 Artist 9 NEW: この凧（たこ）を完成（かんせい）させてください。
      2-3 Artist Assessment 1: '課題（かだい）: 最後（さいご）の歯（は）をかき上げてください。歯の大きさはよこ25ピクセル、たて25ピクセルです。'
      2-3 Artist Debugging 1: ぼうしのてっぺんのはばを50にしたいのです。直せますか?
      2-3 Artist Debugging 10: |-
        ゲームコントローラの十字キーが細（ほそ）すぎます。

        はばを 10 ピクセルぶん広げよう。

        まずはコードを実行（じっこう）して、なにがまちがっているか確認（かくにん）しよう。
      2-3 Artist Debugging 11: 雪の結晶（けっしょう）を完成（かんせい）させたいんだ。何がまちがってるか、わかるかな？
      2-3 Artist Debugging 2: |-
        このネコのヒゲのコードはまちがっています。

        ぜんぶのヒゲが同じ長さになるように、コードを直してください。
      2-3 Artist Debugging 3: ボートに穴が空いちゃった！線を書いて直してくれないかな？
      2-3 Artist Debugging 5: このコードで足とくつをかきたいのだけど、まちがっています。直（なお）せるかな？
      2-3 Artist Debugging 6: このコードだとイスの足がたりないね！さいごの足をかくためのコードを書こう。
      2-3 Artist Debugging 7: C の字がさかさまだよ！ちゃんと C になるように直（なお）せるかな？
      2-3 Artist Debugging 8: 風車がまだ完成（かんせい）してないね。何がまちがっているか、わかる？
      2-3 Artist Debugging 9: コードのまちがいを直して、花のくきをかこう！アーティストに正しくかいてもらう方法がわかるかな？
      2-3 Artist Debugging Assessment 1: 課題（かだい）：この形は小さすぎます。もっと大きくしましょう。ヒント：それぞれの辺を75ピクセルのばしてみましょう。
      2-3 Artist Free Play: やった！じゆうにあそぼう！なんでもすきなものをかいてね。
      2-3 Artist Functions 1: |-
        こんにちは！ゾンビアーティストです。お絵かき大好き！
        四角いメガネをかくので手伝ってください。ヒント：メガネのつなぎ部分は、レンズの四角より25ピクセル短くかきましょう。
      2-3 Artist Functions 10: フリープレイ：ここに 2 つの関数があります。ひとつは「大きな歯車」をかく big gear という関数、もうひとつは「小さな歯車」をかく
        small gear という関数です。これらを使って、機械の内がわをかいてみましょう。
      2-3 Artist Functions 11: '"draw a square" という関数の名前を "draw a hexagon" に変えました。hexagon
        は六角形という意味ですが、この関数がかくのは正方形のままです。"draw a hexagon" という関数を一辺が 50 ピクセルの六角形をかくように直して、その関数を使って絵をかいてください。'
      2-3 Artist Functions 11.5: |-
        さっきと同じ「六角形をかく」関数があります。

        メインプログラムを6回ループし、ループするたびに60度回転するとどうなりますか？
      2-3 Artist Functions 12: 関数は、むずかしいものを何回もかくのにうってつけです。"draw a flower" という関数を使って、花だんの残りの花をかいてください。（ヒント：植物は
        100 ビクセルずつはなれています）
      2-3 Artist Functions 2: 関数を使えば新しいブロックを作ることができます！ここでは、正方形をかくためのブロックを "draw a
        square" という名前の関数の中に移動しました。"draw a square" を使って、メガネを作ってみましょう。正方形と正方形の間は 75
        ピクセルあいています。
      2-3 Artist Functions 3: 正方形の一辺の長さが 115 ピクセルになるように関数の中身を変えて、もっと大きなメガネをかいてください。今回は、正方形と正方形の間は
        45 ピクセルです。
      2-3 Artist Functions 4: この 3 つの正方形を「くりかえし」のブロックを使ってかいてみましょう。
      2-3 Artist Functions 9: フリープレイ：雪の絵をかく関数があります。いろいろ試して冬の景色をかいてみましょう！パズルはありません。楽しみましょう！
      2-3 Artist Loops New 1: ロボットの頭をかきましょう！ 100ピクセルの正方形を作れますか？
      2-3 Artist Loops New 10: たくさんの V をひとつにつなぎましょう。V はループの中でかきましょう。
      2-3 Artist Loops New 11: こんどは 24 回かきましょう。30 度左にまがるブロックをふやして、全体（ぜんたい）を「くりかえし」のブロックの中に入れましょう。
      2-3 Artist Loops New 12: 'それぞれの辺（へん）が 100 ピクセルのダイヤモンドをかきましょう。 '
      2-3 Artist Loops New 13: |-
        はじめからコードが書かれていますね。このコードで1つのダイヤモンドがかけます。

        ループさせてダイヤモンドを3回かきましょう。
      2-3 Artist Loops New 14: |-
        ダイヤモンドのコードをいろいろかえてみて、ほかにどんなパターンが作れるか見てみましょう。
        まがる角度（かくど）、ループする回数をかえてみてください。
      2-3 Artist Loops New 15: なんでも かきたいものを かいてください！
      2-3 Artist Loops New 2: 正方形をかくために使ったコードがここにあります。もし、「くりかえし」のブロックを使って、このコードを 4
        回実行（じっこう）すると何が起（お）きるでしょうか。
      2-3 Artist Loops New 9: それぞれの辺（へん）が50ピクセルのシンプルな「V」の文字をかき、矢印（やじるし）を作りましょう。
      2-3 Artist Nested Loops 1: このコード全体（ぜんたい）を「くりかえし」ブロックでかこんでください。
      2-3 Artist Nested Loops 10: パターンを完成（かんせい）させるためにコードを12回くりかえしましょう。
      2-3 Artist Nested Loops 11: このコードを4回くりかえして絵を完成（かんせい）させましょう。円をかくごとに90度まがってください。
      2-3 Artist Nested Loops 12: このコードを12回ループしてうずまきを完成（かんせい）させましょう。
      2-3 Artist Nested Loops 2: 三角形を6回くりかえしましょう。それぞれの三角形をかくごとに、60度角度を変える必要（ひつよう）があります。
      2-3 Artist Nested Loops 3: この絵をかくには三角形を12回ループする必要（ひつよう）があります。一周（いっしゅう）分の角度（360）は三角形の数（12）でわれば、三角形を1つかくごとに何度回転（かいてん）するかがわかります。
      2-3 Artist Nested Loops 4: このダイヤモンドを 12 回ループして花をかいてみましょう。ヒント：12 個のダイヤモンドは、12
        個の三角形をかいた時と同じ方法（ほうほう）でかけるよ。それぞれの図形をかいた後は、何度ずつ向（む）きをかえる必要（ひつよう）があるかな？
      2-3 Artist Nested Loops 5: このビルの窓（まど）を入れ子のループを使（つか）って完成（かんせい）させましょう。窓は一辺の長さが20ピクセルで、窓と窓の間の長さも20ピクセルです。
      2-3 Artist Nested Loops 6: 恐竜（きょうりゅう）のヒレには、30 ピクセルのギザギザが 8 つあります。三角形を 8 回ループしましょう。それぞれのループの間で前に進（すす）むことを忘（わす）れずに。
      2-3 Artist Nested Loops 7: 三角形を10回ループして太陽（たいよう）をかきましょう。三角形を1つかくごとに移動（いどう）して回転（かいてん）する必要（ひつよう）があります。一周（いっしゅう）ぶんの角度を三角形の数でわると、何度回転すればいいかがわかります。
      2-3 Artist Nested Loops 8: |-
        絵に草を足してみましょう。
        草を50ピクセルずつはなしてかいてください。
      2-3 Artist Nested Loops 9: さいごに花をかいて完成（かんせい）です。ダイヤモンドを12回くりかえすと花がかけます。
      2-3 Artist Nested Loops Free Play: 自由（じゆう）に遊（あそ）んでください。入れ子のループを使って好（す）きなものをかこう。
      2-3 Bee Conditionals 11: 'にわをとび回って、ミツのある花からミツを集（あつ）めましょう。 '
      2-3 Bee Conditionals 12: つかうブロックはなるべく少なくして、ぜんぶのミツをとるのを手つだってください。
      2-3 Bee Conditionals 13: すべてのミツを集めて、ハチミツを作ってください。ムラサキ色の花には、ミツがあるか、わかりませんよ。
      2-3 Bee Conditionals 14: できるだけ少ないブロック数で、すべてのミツを集（あつ）めて、はちみつを作ってください。ミツがない花から、ミツはとれませんよ。
      2-3 Bee Conditionals 15: |-
        この階段（かいだん）のパターンはおなじみのはずです。

        できるだけ少ないブロックで、ミツのある花からだけミツ集（あつ）めることができますか？
      2-3 Bee Conditionals 2: おなかすいた！なるべく少ないブロックで、すべての花のミツを集（あつ）めたいです。
      2-3 Bee Conditionals 3: '花のミツをぜんぶあつめて、ハチミツを作ってください。なるべく少ないブロックをつかってね。  '
      2-3 Bee Conditionals 5: ムラサキ色の花にはミツが、あるのか、ないのか、わかりません。さいしょに「花のミツ」が 1 かどうか「もし」ブロックを使ってかくにんし、ミツがあったら、とってください。
      2-3 Bee Conditionals 6: "「もし」ブロックを使（つか）って、花にミツがあるかチェックしてから、ミツを集（あつ）めてください。"
      2-3 Bee Conditionals 7: それぞれの花にミツがあれば、集（あつ）めてください。
      2-3 Bee Conditionals 8: |-
        この草原には赤色とムラサキ色のお花があります。
        赤い花のミツの数はわかっていますが、ムラサキ色の花のミツの数はわかりません。
        すべてのミツを集（あつ）めてください。
      2-3 Bee Conditionals 9: それぞれの花から、すべてのミツをあつめて下さい。
      2-3 Bee Conditionals Assessment 1: 課題（かだい）：すべてのミツを集めて下さい。ムラサキの花にミツがないときは、ミツをとらないように気をつけましょう。
      2-3 Bee Debugging 1: このブロックが気になります。ミツを集（あつ）めてはちみつを作るためにエラーを直してください。
      2-3 Bee Debugging 10: 花のみつをぜんぶ集（あつ）めて、ぜんぶハチミツにしたいです！ エラーを直してください。
      2-3 Bee Debugging 2: バグが見つかったかな？ エラーを直して花のミツを集（あつ）めよう。
      2-3 Bee Debugging 3: すべての花のミツを集（あつ）めるために、エラーを直してください。
      2-3 Bee Debugging 4: このブロックが気になります。ミツを集（あつ）めてハチミツを作るためにエラーを直してください。
      2-3 Bee Debugging 5: エラーを直して、花からミツを集（あつ）めてください。
      2-3 Bee Debugging 6: エラーを直して、花からミツを集（あつ）めてください。
      2-3 Bee Debugging 7: エラーを直しましょう。すべての花のミツを集（あつ）めて、すべてハチミツにしましょう。
      2-3 Bee Debugging 8: お花がいっぱい！エラーを直して、花のみつをすべて集（あつ）めてください。
      2-3 Bee Debugging 9: |-
        がまん強くやろう！

        このプログラムのいくつかのまちがいを直しましょう。花のミツをぜんぶあつめてハチミツもぜんぶ作る必要があります。
      2-3 Bee Debugging Assessment 1: |-
        課題（かだい）：今までの成果（せいか）を見せる時が来ました！

        エラーを直して、花のミツをぜんぶ集（あつ）めてハチミツを作りましょう。
      2-3 Bee Functions 1: ひとつの作業を行うひとまとまりのコードを関数（かんすう）といいます。"get 2 nectar"（ミツを 2
        とる）という関数を使って、それぞれの花からミツを集めてください。
      2-3 Bee Functions 10: ムラサキの花には、ミツが 1 か 0 あります。ミツのあるムササキの花からだけミツを集める関数を作りましょう。
      2-3 Bee Functions 2: ひとつの作業を行うひとまとまりのコードを関数（かんすう）といいます。"get 5" という関数を使うと、一度に花のミツを
        5つとることができます。
      2-3 Bee Functions 3: それぞれの花から、すべてのミツをあつめて下さい。
      2-3 Bee Functions 4: '"move and nectar" 関数は、ハチを回転させ、花のミツを集め、スタート地点までハチをもどします。この関数を使って花のミツをぜんぶ集めましょう。'
      2-3 Bee Functions 5: ひとつの花にあるミツの量がふえました。今度はミツを 4 つ取れるように関数を直しましょう。
      2-3 Bee Functions 6: 同じ関数を使って 3 つの花からミツを集めましょう。
      2-3 Bee Functions 8: 花のミツを 7 つ集め、前に進み、ハチミツを 7 つ作るための関数を作りましょう。関数を使って、花でミツを集め、ハチの巣でハチミツを作りましょう。
      2-3 Bee Functions 9: 道を進み、花のミツを集め、ハチミツを作り、スタート地点にハチをもどす関数を作りましょう。
      2-3 Bee Functions Assessment 1: テスト：指定の関数を使って花からミツを集めましょう。
      2-3 Bee Functions Assessment 2: 課題：回転し、前へすすんで3つのハチミツを作り、ハチが回転したところまでもどる関数を作りましょう。
      2-3 Bee Loops 1: 花にはミツが 1つずつあります。ミツを花から集（あつ）めましょう。
      2-3 Bee Loops 10: "「以下の間」ループを、2つのループの中で使って、すべての花のミツを集められるかな？"
      2-3 Bee Loops 13: 課題（かだい）：「くりかえし」ブロックを使ってミツをすべて集（あつ）めましょう。
      2-3 Bee Loops 1A: 'こんにちは、ハチです！花からミツを集（あつ）めるのをてつだってください。 '
      2-3 Bee Loops 2: なるべく少ないブロックでミツを集（あつ）め、はちみつを作りましょう。
      2-3 Bee Loops 2A: こんどはループを使（つか）って花のミツを集（あつ）めよう。
      2-3 Bee Loops 3: それぞれのお花からミツを集（あつ）めて、ハチのすでハチミツを作りましょう。
      2-3 Bee Loops 3A: すべての花のミツを集（あつ）めるのに「くりかえし」ブロックを使（つか）ってみましょう。
      2-3 Bee Loops 3B: こんどは新しい「くりかえし」ブロックをつかって、すべての花のミツを集（あつ）めて、はちみつを作ってみましょう。
      2-3 Bee Loops 4: |-
        おおいそがしだ！

        先ほどと同じように「くりかえし」ブロックを使（つか）いますが、こんどは「回転」ブロックも使（つか）ってみましょう。
      2-3 Bee Loops 4A: |-
        このパズルでループは何回つかえるかな？

        ループはお友だち！なるべくすくないブロックでこのパズルをクリアするために、いくつかループを使ってください。
      2-3 Bee Loops 5: "「くりかえし」ブロックを使（つか）って階段（かいだん）を降（お）り、できるだけ少ないブロックで花のミツを集（あつ）めましょう。"
      2-3 Bee Loops 6: "「くりかえし」ブロックをつかってそれぞれのお花からミツをあつめ、ハチのすでハチミツを作りましょう。一番早い方法（ほうほう）を見付けられるかな？"
      2-3 Bee Loops 7: お花畑（はなばたけ）だ！ それぞれのお花からミツを集めましょう。7つより少ないブロックでできるかな？
      2-3 Bee Loops 8: |-
        ムラサキの花は、ミツの数がわかりません。
        「以下の間くりかえし」ブロックを使って、花のみつをすべて集めましょう。このくりかえしは条件（じょうけん）が真になるまで続きます。今回は「花のミツ＞0」です。
      2-3 Bee Loops Assessment 1: 課題（かだい）：「以下の間」ブロックを使って、お花からすべてのミツを集めましょう。
      2-3 Maze 1: 'いじわるなブタをつかまえるのをてつだってくれる? 「前にすすむ」をふたついっしょに重（かさ）ねて「実行（じっこう）」をおしてみましょう。 '
      2-3 Maze 10: 緑の悪者のところにつれていって！(ばくだんに気をつけて)
      2-3 Maze 12: 1つの「くりかえし」ブロックの中に、1つの「前にうごく」ブロックをつかったループを作って、ブタさんをつかまえられる？
      2-3 Maze 13: ブタさんのところにつれていって！ 今回は「前へうごく」ブロックが1つだけしかつかえません。
      2-3 Maze 15: "「くりかえし」を2つ使って、なるべく少ない数のブロックでブタさんをつかまえてみよう。"
      2-3 Maze 16: "「くりかえし」の中にはたくさんのブロックをおくこともできます。最初（さいしょ）からおいてあるブロックの組み合わせをループさせて、ゾンビさんをひまわりのところへ連（つ）れていけるかな？"
      2-3 Maze 16 before: ブタさんをつかまえる一番早い方法（ほうほう）がわかるかな？
      2-3 Maze 2: このブタにはイライラさせられるワ。つかまえるのをてつだって！
      2-3 Maze 3: 足あとをたどっておちょうしもののブタまでつれて行って。でも、TNTには注意（ちゅうい）してね。
      2-3 Maze 4: 緑の悪者のところにつれていって！(ばくだんに気をつけて)
      2-3 Maze 6: おちついてブタをいっしょにさがそう。てつだってくれなかったらおこるよ！
      2-3 Maze 7: 緑の悪者のところにつれていって！(ばくだんに気をつけて)
      2-3 Maze 8: ブタをつかまえたい！
      2-3 Maze 9: 緑の悪者のところにつれていって！(ばくだんに気をつけて)
      2-3 Maze Loops 1: ５つのブロックを使（つか）ってわたしをブタのところへ連（つ）れて行くことができますか？
      2-3 Maze Loops 17: ひまわりまで行きたい！
      2-3 Maze Loops 18: |-
        なるべく少ないブロックでひまわりがほしい！
        「くりかえし」の中に、さらに「くりかえし」を入れて、コードの量（りょう）をへらしてみよう。
      2-3 Maze Loops 19: |-
        レベルを上げてみました！
        ループを使（つか）いつつ、なるべく少ないループでゾンビさんをひまわりにつれて行きましょう。
      2-3 Maze Loops 20: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      2-3 Maze Loops 21: なるべく少ない数のブロックでクリアしよう！
      2-3 Maze Loops Assessment 1: '課題（かだい）：5ブロックだけ使（つか）ってひまわりまでつれていってください。 '
      4-5 Artist 1: '四角形をかくのを手伝ってください。(それぞれの線の長さは300ピクセル) '
      4-5 Artist 11: 緑のラインを完成させましょう。ラインの長さは 300 ピクセルで、15 ピクセルはなしてください。
      4-5 Artist 2: 正方形を作り上げるために「くりかえし」ブロックを使って、このコードをループさせてください。
      4-5 Artist 3: 長方形の花だんの周囲の長さは、600です。長辺の長さは 200 です。この長方形をかいてください。
      4-5 Artist 3.5: オーケー、このコードを走らせたらどうなるか考えてみましょう。（「実行」を おしてみるのも よいですね。）つぎに、それをくりかえして図を完成させてください。毎回（たぶん）ちがう色になるはずです。
      4-5 Artist 4: くりかえしの回数を入れて、色のついた円を作ってください。ヒント：1回転は何度ですか？
      4-5 Artist 5: さいしょからあるループを使ってパズルを作り上げるには、「???」を何に置きかえればいいでしょうか？
      4-5 Artist 6: 正三角形のそれぞれの角度は 60 度です。辺の長さは 200 ピクセルです。図を完成させましょう。
      4-5 Artist 7: この直角三角形のそれぞれの頂点（ちょうてん）の角度は、30°、60°、90°です。ななめの辺の長さは、100ピクセルの高さの倍です。図を作り上げてください。
      4-5 Artist 8: サッカー場の真ん中の線は、サイドラインに対して直角です。このサッカー場の周囲の長さは 800 ピクセルで、長さは 240 ピクセルです。高さはどのくらいでしょう？外がわの線と真ん中の線をかいてください。
      4-5 Artist 9: 図が「かがみうつし」になるように、残りの半分もかいてみましょう。正三角形のそれぞれの辺の長さは 50 ピクセルです。
      4-5 Artist Assessment 1: '課題: ループを使って、正三角形をかきましょう。それぞれの長さは、300 ピクセルです。'
      4-5 Artist Free Draw 1: 自由にお絵かき！思いつくままに図をかいてみましょう。
      4-5 Artist Patterns 1: ループを使って、大きさ 20 ピクセルの正方形をかけるかな？
      4-5 Artist Patterns 10: 'このコードは 2 列の六角形をかきます。これを 4 回くりかえして、ハチの す 全体をかきましょう。ヒント:
        アーティストが画面の外に行かないようにするには、外がわのループで 120 ピクセルもどる必要があるよ。'
      4-5 Artist Patterns 11: 'このコードを何回ループすれば半円をかけるかな？ '
      4-5 Artist Patterns 12: くりかえしの部分をコピーして、右ではなく左に回るようにしてみてください。何が起きるでしょうか。これをくりかえして波線をかいてみましょう。
      4-5 Artist Patterns 13: 全体を 4 回ループして、額（がく）を作りましょう。カドの部分に注意してください。ただ 90 度回ればいいわけではありません！3
        度回ることを 60 回くりかえすと半円になります。このコードのどの部分を使えば、丸い角の部分（円の 4 分の 1）がかけるでしょうか。
      4-5 Artist Patterns 2: |-
        「くりかえし」の中に、べつの「くりかえし」を入れることを、「入れ子」と言います。
        「くりかえし」ブロックを足して、15 この正方形を一列に書いてください。
      4-5 Artist Patterns 3: |-
        では次のレベルに進みましょう！
        入れ子のループで、この図形をかいてください。
        横一列をかき終えたら、アーティストのいちをもどして、それから次の一列をかくようにします。
        さいしょからあるブロックたちの、どれかを、くりかえしで使います。
      4-5 Artist Patterns 4: このダイヤモンドは1辺50ピクセルで、角度は120度と60度です。ループを使って、かいてください。
      4-5 Artist Patterns 5: このコードをくりかえして、ダイヤモンドを6こ1列にならべてみましょう。ダイヤモンドのプログラムを2回ではなく3回くりかえすように
        かえたことに注意してください。なぜだと思いますか?
      4-5 Artist Patterns 6: この図形をかくには、さいしょからあるブロックを何回くりかえせばいいでしょうか？
      4-5 Artist Patterns 7: さっきのパズルのコードをいじって、もっと複雑（ふくざつ）なパターンを作ってみましょう。いまダイヤモンドがどれぐらい重なっているか確認してから、さいしょの「うしろへジャンプする」を100から半分の50に変えてみてください。さて今度は、アーティストは2番目の「うしろにジャンプする」でどれぐらいジャンプしないといけないでしょう?
      4-5 Artist Patterns 8: ループを使って、40ピクセルの辺と60度の角を持つ六角形をかきましょう。
      4-5 Artist Patterns 9: 'コードを 3 回くりかえして、列全体をかきましょう。ヒント: 六角形の左はしの頂点から右はしの頂点までの幅（はば）は
        80 ピクセルです。'
      4-5 Artist Patterns 9.5: このコードをループして、六角形を 2 列分かきましょう。2 列目は右側にずれるので気をつけましょう。
      4-5 Artist Patterns Free Play: 自由時間です。オリジナルのパターンを作ってみましょう！
      4-5 Bee Conditionals 1: 雲のせいでよく見えない！雲の下に花があるか調べて、花がある場合だけミツを取りましょう。注意：実行時に変わることがあります！
      4-5 Bee Conditionals 2: |-
        もっと雲がある！

        花のミツを集める前に、雲が花をかくしていないかチェックしてください。

        ヒント：すべての雲が同じようにかくすわけではありません！
      4-5 Bee Conditionals 3: 今度はハチミツを作りたいです。雲の下にはハチの巣があるかもしれません。それぞれの雲を必ず調べてください。
      4-5 Bee Conditionals 4: 雲の下には花があるかもしれないし、ハチの巣があるかもしれません！もし花ならミツを集めるのに「もし…やること…でなければ」ブロックを使いましょう。もし花でなければ、ハチの巣があるので、ハチミツを作りましょう。
      4-5 Bee Conditionals 5: |-
        雲の下には花かハチの巣のどちらかがあるでしょう！

        花がある場合はミツを集めるために「もし…やること…でなければ」ブロックを使ってください。
        そうでなければハチの巣があるので、ハチミツを作りましょう。
      4-5 Bee Conditionals 6: |-
        この花には1つ、2つ、または3つのミツがあります。

        花が持っているのと同じミツを手に入れるために「もし…」「もし…やること…でなければ」ブロックを使いましょう。

        ヒント：パズルを実行するたびに花のミツの量は変わることがあります！
      4-5 Bee Conditionals 7: |-
        これらの花には3、2、または1つのミツがあります。

        「check purple flower (ムラサキの花を調べる)」関数を完成させて、その関数を使ってすべてのミツを花から集めてください。
      4-5 Bee Conditionals 8: |-
        「花を調べてはちみつを作る（check flower make honey）」という関数の中身を作ってください。

        関数を作るときは、ムラサキの花のミツが3、2、または1つのミツを持っているかどうかを調べて、すべてのミツを集めましょう。そして前へすすみ、ハチミツを作ってください。
      4-5 Bee Conditionals Assessment 1: "**テスト**：この雲は、ミツを1つ集められる花か、1つのハチミツを作れるハチの巣の、どちらかを
        かくしています。\nミツを集めるかハチミツを作る (get nectar or make honey) 関数を完成させ、それをよび出すことで、ミツを集めるかハチミツを作ってください。 "
      4-5 Bee Debugging 1: ブロックがバグってる。直してくれる？
      4-5 Bee Debugging 10: まちがいを見つけて直しましょう。
      4-5 Bee Debugging 11: このコードは正しいかな？
      4-5 Bee Debugging 2: 花のミツを集めてハチミツを作るのをてつだいましょう。
      4-5 Bee Debugging 3: まちがいを見つけて直しましょう。
      4-5 Bee Debugging 4: このブロックではハチミツがとれません。まちがっているのはどこかな？
      4-5 Bee Debugging 5: 何かがおかしい...
      4-5 Bee Debugging 6: |-
        ムラサキ色の花は、パズルを実行するたびにミツの数が ちがいます。

        プロックを直して花からすべてのミツを集めてください。
      4-5 Bee Debugging 7: この関数（function）は、何かが足りてません・・。
      4-5 Bee Debugging 8: この関数の中身はいいのですが、使われ方が変です。
      4-5 Bee Debugging 9: ハチさんがハチミツを作りきれていないのはなぜでしょうか。
      4-5 Bee Debugging Assessment 1: 課題（かだい）：コードを直してください。
      4-5 Bee Nested Loops 1: "「くりかえし」を使ってすべての花のミツを集めてください。"
      4-5 Bee Nested Loops 2: '入れ子のループ（ネスト・ループ）を使って、それぞれの花からすべての花のミツを集めてください。　 '
      4-5 Bee Nested Loops 3: さいしょからあるコードを別の「くりかえし」の中に入れて、すべての花のミツを集めてください。
      4-5 Bee Nested Loops 4: "それぞれの花からすべての花のミツを集め、ハチの巣でハチミツを作ってください。\n\n入れ子のループ（ネスト・ループ）を使うのです。 "
      4-5 Bee Nested Loops 5: 入れ子のループ（ネスト・ループ）を作り出して、すべての花のミツを集めてください。
      4-5 Bee Nested Loops 7: さいしょからあるコードを別のループの中に入れて、入れ子のループ（ネスト・ループ）を作りましょう。そして花からすべてのミツを集めましょう。
      4-5 Bee Nested Loops 9: "「くりかえし」の中に「以下の間（while loop）」を入れ子の形にして、すべての花のミツを集めてください。"
      4-5 Bee Nested Loops Assessment 1: "**課題（かだい）**：「くりかえし（ループ）」を使って、すべての花のミツを集めて、すべてのハチミツを作ってください。"
      4-5 Bee Nested Loops Rows: ならんでいる花から花のミツを集めてください。入れ子のループ（ネスト・ループ）を使ってみてください。
      4-5 Maze 1: 人間さん。ゾンビです。ひまわりのところへどうしても行きたいのです。
      4-5 Maze 10: 4ブロックだけ使ってひまわりにたどり着けますか？
      4-5 Maze 11: ブロックを6つだけ使ってひまわりにたどり着けますか？
      4-5 Maze 12: オーケー、これはちょっとだけ違います。６つのブロックだけでやれますか？
      4-5 Maze 2: ゾンビを ひまわりのところへ つれて行ってください。パックンフラワーの所へ行かないように気をつけて。
      4-5 Maze 3: ひまわりの…ところまで…行かなくては。
      4-5 Maze 4: 使うブロックの数が少なくて すむように「くりかえし」ブロックを使ってみて…
      4-5 Maze 5: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      4-5 Maze 6: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      4-5 Maze 7: すぐにひまわりがほしい！11ブロック以下でパズルがとけるかな？
      4-5 Maze 8: できるだけ少ないブロックでゾンビさんをひまわりのところまでつれていってくさい (パックンフラワーはさけよう！)。
      4-5 Maze 9: |-
        「までをくりかえす」という新しいブロックができました。これにより、ゾンビさんはひまわりを手に入れるまでコマンドをくりかえし続けることができます。

        できるだけ少ないコマンドでこのパズルをとくために「までをくりかえす」ブロックを使ってください。
      4-5 Maze Assessment 1: 課題（かだい）：できるだけ少ないブロックでひまわりにたどりつこう。
      4-5 Maze Conditionals 1: "「までを くりかえします」ブロックを使って、ゾンビさんをヒマワリまで つれていきましょう。"
      4-5 Maze Conditionals 10: "ブロックをあと3つ足して、ゾンビさんが むずかしい迷路（めいろ）を歩くのを助けてくれますか？\\\r\n\\\rもしそれができれば、どんなに長くカーブした道でも歩けるようになります。"
      4-5 Maze Conditionals 2: "「までを くりかえします」ブロックを使って、ゾンビさんをヒマワリまで つれていきましょう。"
      4-5 Maze Conditionals 3: "「もし」ブロックを使って、いつ まがる かを決めてください。ヒント：あともう１つのブロックがひつようです。 "
      4-5 Maze Conditionals 4: Ok。さっきのパズルと同じですが、「もし」ブロックと「くりかえし」ブロックをどうやっていっしょに使ったかを思い出してみましょう。
      4-5 Maze Conditionals 5: ひまわり食べたいの！「もし」ブロックを使って、できるだけ少ない数のブロックで、わたしをそこまで連れて行ってください。
      4-5 Maze Conditionals 6: ひまわり食べたいの！「もし」ブロックを使って、できるだけ少ない数のブロックで、わたしをそこまで連れて行ってください。
      4-5 Maze Conditionals 7: いいね。練習のためにもう一度やりましょう。・・・それほど ちがい はないけれど、パックンフラワーたちに気をつけて！
      4-5 Maze Conditionals 8: "「もし／でなければ」ブロックは条件（じょうけん）を調べて、どちらかの処理（しょり）を実行するものです。このブロックを使ってわたしをひまわりの所へ連れて行って。"
      4-5 Maze Conditionals 9: "「もし／でなければ」ブロックでもう一度練習しよう。１回でクリアできるかな？"
      4-5 Maze Conditionals Assessment 1: "**課題（かだい）**「までを くりかえし」と「もし／でなければ」ブロックを使って、わたしをひまわりの所へ連れて行ってください。できるだけブロックを少なくしてください。"
      4-5 Nested Loops 1: これらの三角形をかくためのコードを完成させてください。さいしょの１つは用意されています。ヒント：３つの三角形をかくのに３６０度回転します。
      4-5 Nested Loops 11: 入れ子の「くりかえし（ループ）」を使って、１０この四角形でできたこの歩道をかくことができますか？それぞれの四角形は３０ピクセルです。
      4-5 Nested Loops 12: 入れ子の「くりかえし（ループ）」を使って、これらの３６この三角形をかけますか？
      4-5 Nested Loops 2: '10回、三角形をかきます。そのためには「くりかえし」ブロックを追加（ついか）し、その中に灰色（はいいろ）のブロックを全部入れます。「くりかえし」のなかに「くりかえし」を入れることを「入れ子」と言います。  '
      4-5 Nested Loops 3: |-
        さいしょからあるコードを別のループの中に入れて、太陽を作りましょう。

        回転する前に三角形の長さだけ前にジャンプする必要があります。
      4-5 Nested Loops 5: 風車（かざぐるま）を作るために、与えられたコードを くりかえし にしましょう。
      4-5 Nested Loops 6: 三角形のコードをくりかえすことで、六角形をかけますか？
      4-5 Nested Loops 7: このデザインを１０回ループさせましょう。ループするたびに、どのくらい回転させればいいですか？
      4-5 Nested Loops 8: 'このデザインを６回くりかえしましょう。くりかえすたびにどれくらい回転する必要があるでしょうか。（ヒント：３６０÷６は？） '
      4-5 Nested Loops 9: ワニの歯を書いてください！
      4-5 Nested Loops Assessment 1: 課題（かだい）：入れ子のループを使ってこの絵を完成させてください。
      4-5 While Loops 1: わたしを穴のところまで動かして、シャベル２はいで穴をうめましょう。「あなをうめる」ブロックを使ってください。
      4-5 While Loops 2: わたしを土の山へ動かして、スコップ５はいぶんの土をへらしてください。「つちをかたづける」ブロックを使ってね。
      4-5 While Loops 3: わたしを山まで動かして、すべての土をかたづけてください。それから穴（あな）のところへ行き、穴をすべてうめてください。ヒント：できるだけ少ないブロックで使ってください。
      4-5 While Loops 4: 'すごく大きい穴（あな）を見つけてびっくりしました。シャベル何はいの土がいるのか、わかりません。地面が平らになるまで穴をうめるプログラムを作れますか？
        ヒント：「以下の間くりかえし（while loop）」を使ってみてください。  '
      4-5 While Loops 5: ２つも大きな穴（あな）があるわ。両方の穴をうめるプログラムを作れますか？
      4-5 While Loops 6: あらまあ、大きな土の山があるわよ。平らな地面になるまで土をかたづけるプログラムを作れますか？
      4-5 While Loops 7: あらまあ、大きな土の山があるわよ。平らな地面になるまで土をかたづけるプログラムを作れますか？
      4-5 While Loops 8: " 大きな穴（あな）と山が１つずつあります。地面と同じ高さにするために、どれくらいシャベルを動かせばいいかな？"
      4-5 While Loops Assessment 1: たくさんの穴（あな）と山があります。地面を平らにするために、土をうめたり、かたづけるのを てつだってください。
      Alien Defender: 'プロジェクトのアイデア: Play Labでディフェンダーゲームを作ろう！'
      CSD U5 black white images pixelation: 0 と 1 を入力して X の形を完成させる
      CSD U5 black white images pixelation 2: スマイリーフェイスを描く (画像を表示するにはここをクリック)
      CSD U5 black white images pixelation 2_2018: スマイリーフェイスを描く (画像を表示するにはここをクリック)
      CSD U5 black white images pixelation 2_2019: スマイリーフェイスを描く (画像を表示するにはここをクリック)
      CSD U5 black white images pixelation 3: イメージを検索するスライダーの幅と高さを変更します(詳細はこちら)
      CSD U5 black white images pixelation 3_2018: イメージを検索するスライダーの幅と高さを変更します(詳細はこちら)
      CSD U5 black white images pixelation 3_2019: イメージを検索するスライダーの幅と高さを変更します(詳細はこちら)
      CSD U5 black white images pixelation 4: スマイリーフェイスに眉毛を追加(画像を表示するにはここをクリック)
      CSD U5 black white images pixelation 4_2018: スマイリーフェイスに眉毛を追加(画像を表示するにはここをクリック)
      CSD U5 black white images pixelation 4_2019: スマイリーフェイスに眉毛を追加(画像を表示するにはここをクリック)
      CSD U5 black white images pixelation 5: 好きなものをかく
      CSD U5 black white images pixelation 5_2018: 好きなものをかく
      CSD U5 black white images pixelation 5_2019: 好きなものをかく
      CSD U5 black white images pixelation_2018: 0 と 1 を入力して X の形を完成させる
      CSD U5 black white images pixelation_2019: 0 と 1 を入力して X の形を完成させる
      CSDU6 arrays select rainbow: 配列の内容を順に画面に書き込みます。(クリックして完全な指示を表示)
      CSDU6 arrays select rainbow_2018: 配列の内容を順に画面に書き込みます。(クリックして完全な指示を表示)
      CSDU6 arrays select rainbow_2019: 配列の内容を順に画面に書き込みます。(クリックして完全な指示を表示)
      Course 4 Artist Binary 3: 3ケタのバイナリ文字列（0と1が三つ）で、このパターンを書いて下さい。
      Course 4 Artist Binary 4: |-
        このプログラムを実行すると、おこった顔が書かれます。
        えがおが書かれるように、プログラムを直してください。
      Course 4 Artist Binary 5: 6ケタのバイナリ文字列を、11回くりかして書けば、このイメージを書くことが出来ますよ。
      Course 4 Artist Binary 6: 一番短いバイナリ文字で、このイメージが書けるように考えて下さい。
      Course 4 Artist Binary 7: このイメージを完成（かんせい）させてください。
      Course 4 Artist Binary Free Play 2: |-
        自由に書きましょう！
        このまっさらなキャンバスに、すきな絵を書いてください。さあ何から書きましょうか！
      Course 4 Artist Binary Free Play 2a: "もっと細かいキャンバスがあります - 16 ピクセル × 16 ピクセルです!
        \\\r \\\rこのビットで何ができるか、見てください。"
      Course 4 Artist Binary Free Play 2b: |-
        ヒントを見たい場合は、ここをクリックします。
        すきな絵を書いてもいいですよ。
      Course 4 Artist Binary pre1: |-
        「Draw binary "01010101"」ブロックを「実行したとき」にくっつけて、実行してください。
        アーティストは、一番目の行にバイナリで「01010101」を書きます。
      Course 4 Artist For Loops 6a: |-
        さっきのプログラムを、3ヵ所かえるだけで、この絵を書くことが出来ます！
        ヒント：

        1.  線の太さは？
        2.  まがる向きは？
        3.  いくつ「ずつ」カウントする？
      Course 4 Bee Params 5: |-
        こんどは、「関数を作る」を使って、全部のプログラムを書いてみましょう。
        「方向」をパラメータにして「ミツを五つ取る」関数を作ってください。
      Course 4 EC 1a: ルールなし、ヒントなしでちょうせんしてみてね。
      Course 4 EC 1b: ルールなし、ヒントなしでちょうせんしてみてね。
      Course 4 EC 2a: ルールなし、ヒントなしでちょうせんしてみてね。
      Course 4 EC 2b: ルールなし、ヒントなしでちょうせんしてみてね。
      Course 4 EC 2c: ルールなし、ヒントなしでちょうせんしてみてね。
      Course 4 Maze 2: ブタの所までつれていって。でも、TNTばくだんに気をつけて！
      Course 4 Maze 3: 'アングリーバードが、ブタの所に行くよう、プログラムしてね。 '
      Course 4 Maze 4: 使うブロックの数が少なくてすむように、「くりかえし」ブロックを使ってみて・・
      Course 4 Maze 5: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      Course 4 SCFL 1: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      Course 4 SCFL 2: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      Course 4 SCFL 3: この図形を書いてみよう！
      Course 4 SCFL 4: この図形を書いてみよう！
      Course 4 SCFL 6: この図形を書いてみよう！くりかえしを、1回だけ使って書けますか？
      Course 4 SCV 1: |-
        この図形を書いて下さい。
        この中には、ギザギザの線で書かれた五角形が、10コ書かれています。
        ギザギザ線の書き方：
        14ピクセルの直線を引き、左に72度まがります。
        そのあと、14ピクセルの直線を引き、右に72度まがります。
        これを5回くりかえします。
        はじめに「太さは1」プロックを追加して、線の太さを1にしてください。
        ヒントが ほしいときは、ランプをクリックしてね。
      Course 4 SCV 2: |-
        この図形を書いて下さい。
        この中には、ギザギザの線で書かれた五角形が、10コ書かれています。
        ギザギザ線の書き方：
        14ピクセルの直線を引き、左に72度まがります。
        そのあと、14ピクセルの直線を引き、右に72度まがります。
        これを5回くりかえします。
        はじめに「太さは1」プロックを追加して、線の太さを1にしてください。
        ヒントが ほしいときは、ランプをクリックしてね。
      Course 4 SCV 4: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      Course 4 SCV 5: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      Course 4 SCV 6: |-
        この図形を書いて下さい。
        この中には、ギザギザの線で書かれた五角形が、10コ書かれています。
        ギザギザ線の書き方：
        14ピクセルの直線を引き、左に72度まがります。
        そのあと、14ピクセルの直線を引き、右に72度まがります。
        これを5回くりかえします。
        はじめに「太さは1」プロックを追加して、線の太さを1にしてください。
        ヒントが ほしいときは、ランプをクリックしてね。
      CourseD_Dance_Party_01: "`新しくつくる`ブロックをワークスペースにドラッグしてひっぱってきてください。それを’セットアップ’ブロックの中につなぎましょう。"
      CourseD_Dance_Party_02: 4小節後にムースが新しい動きを始めるようにしましょう！
      CourseD_Dance_Party_03: では、6小節後にダンサーが新しい動きを始めるようにしましょう！
      CourseD_Dance_Party_04: プログラムに背景エフェクトを追加しましょう。
      CourseD_Dance_Party_05: もう1つ新しいブロックを使用して、ダンサーの動きを2小節ごとに変えてみましょう。
      CourseD_Dance_Party_06: "’backup\\_dancer1’という名前のバックダンサーを追加して、猫と一緒に踊らせてみましょう。"
      CourseD_Dance_Party_08: 両方のバックダンサーを同じ大きさにできますか？
      CourseD_Dance_Party_09: ダンサーの色を変更するには`色合いを設定`ブロックを使用します。
      CourseD_Dance_Party_10: "`続けて始める`を使用して、他のダンサーも音楽に反応させてみましょう。"
      CourseD_Dance_Party_11: "'上キーが押されたとき'ブロックでは、上矢印キーが押された時に実行するコードを設定できます。上矢印キーが押されると、ダンサーが素早い動きをするよう設定してみましょう。"
      CourseD_Dance_Party_11_5: "”すべてのアヒル”ブロックを使用して、アヒルを全員一緒に踊らせましょう。"
      CourseD_Dance_Party_11b: 右矢印キーを押したときにロボットが1回"ドロップ"するようにし、上矢印キーを押したら"フロス"するようにしましょう。
        ドロップとフロスを、できるだけ早く繰り返しましょう！
      CourseD_Dance_Party_12: グルーブをつづけて！自分だけのダンスを作成して、友達と共有しましょう。
      CourseE_HOC 2018 Level_1: チェストからボートを回収しましょう。
      CourseE_HOC 2018 Level_10: この海底遺跡の入り口にたどりつきましょう。
      CourseE_HOC 2018 Level_11: 海底遺跡の中にある海晶ブロックでコンジットを作りましょう。
      CourseE_HOC 2018 Level_2: ドックの奥に向かいましょう。
      CourseE_HOC 2018 Level_3: 開けた海をわたってタラにたどりつきましょう。
      CourseE_HOC 2018 Level_4: ループを使ってイルカにたどりつきましょう。
      CourseE_HOC 2018 Level_5: 沈没船を探検して、チェストにたどりつきましょう。
      CourseE_HOC 2018 Level_6: 氷を通って鮭にたどりつきましょう。
      CourseE_HOC 2018 Level_7a: これらの海底遺跡からチェストを見つけましょう。
      CourseE_HOC 2018 Level_9b: サンゴを道しるべにして、お宝にたどりつきましょう。
      Crack Random Substitution: 'やり方:'
      Crack a Caesar Cipher: 'やり方:'
      Dance Party 7: "「私のベル」という新しいベルスプライトを追加して、それがクリックされたときに、すべてのエイリアンに同じダンスの動きをさせようにします。"
      Dance Party 7_2019: "「私のベル」という新しいベルスプライトを追加して、それがクリックされたときに、すべてのエイリアンに同じダンスの動きをさせようにします。"
      Dance Party Freeplay: さあ、あなたのエイリアンディスコを作ろう！
      Dance Party Freeplay_2019: さあ、あなたのエイリアンディスコを作ろう！
      Dance_Party_01: "`新しくつくる`ブロックをワークスペースにドラッグしてひっぱってきてください。それを’セットアップ’ブロックの中につなぎましょう。"
      Dance_Party_02: 4小節後にムースが新しい動きを始めるようにしましょう！
      Dance_Party_03: では、6小節後にダンサーが新しい動きを始めるようにしましょう！
      Dance_Party_04: プログラムに背景エフェクトを追加しましょう。
      Dance_Party_05: もう1つ新しいブロックを使用して、ダンサーの動きを2小節ごとに変えてみましょう。
      Dance_Party_06: "’backup\\_dancer1’という名前のバックダンサーを追加して、猫と一緒に踊らせてみましょう。"
      Dance_Party_08: 両方のバックダンサーを同じ大きさにできますか？
      Dance_Party_09: ダンサーの色を変更するには`色合いを設定`ブロックを使用します。
      Dance_Party_10: "`続けて始める`を使用して、他のダンサーも音楽に反応させてみましょう。"
      Dance_Party_11: "'上キーが押されたとき'ブロックでは、上矢印キーが押された時に実行するコードを設定できます。上矢印キーが押されると、ダンサーが素早い動きをするよう設定してみましょう。"
      Dance_Party_11_5: "”すべてのアヒル”ブロックを使用して、アヒルを全員一緒に踊らせましょう。"
      Dance_Party_11b: 右矢印キーを押したときにロボットが1回"ドロップ"するようにし、上矢印キーを押したら"フロス"するようにしましょう。
        ドロップとフロスを、できるだけ早く繰り返しましょう！
      Dance_Party_12: グルーブをつづけて！自分だけのダンスを作成して、友達と共有しましょう。
      Function intro Ryan: "「橋をかける」関数を 2 回使って、たいまつまでの道を作りましょう。"
      Function intro Ryan_2019: "「橋をかける」関数を 2 回使って、たいまつまでの道を作りましょう。"
      HOC 2018 Level_1: チェストからボートを回収しましょう。
      HOC 2018 Level_10: この海底遺跡の入り口にたどりつきましょう。
      HOC 2018 Level_11: 海底遺跡の中にある海晶ブロックでコンジットを作りましょう。
      HOC 2018 Level_12: あなたの好きなように水中の世界を作ってみましょう!
      HOC 2018 Level_2: ドックの奥に向かいましょう。
      HOC 2018 Level_3: 開けた海をわたってタラにたどりつきましょう。
      HOC 2018 Level_4: ループを使ってイルカにたどりつきましょう。
      HOC 2018 Level_5: 沈没船を探検して、チェストにたどりつきましょう。
      HOC 2018 Level_6: 氷を通って鮭にたどりつきましょう。
      HOC 2018 Level_7a: これらの海底遺跡からチェストを見つけましょう。
      HOC 2018 Level_9b: サンゴを道しるべにして、お宝にたどりつきましょう。
      Infinity_catch: やじるしキーをつかってアナのところまでエルサ ("２”のキャラ) をうごかせますか？
      Infinity_finale: すきなものをつくってきょうゆうしましょう！
      Infinity_move_collide: ヒロは"１"のキャラです。ヒロをベイマックスのところまでうごかして、タッチしたらおとをさいせいさせましょう。
      Infinity_move_directions: ベイマックスは"２"のキャラです。「うごかす」ブロックをついかし、やじるしキーをつかいながらベイマックスをうごかします。ほかの２人のキャラにタッチさせましょう。
      Infinity_move_right: ヒロは"１"のキャラです。「うごかす」ブロックをつかって、ヒロをベイマックスのところまでうごかしましょう。
      Infinity_repeat: "「いつまでもくりかえす」ブロックをつかって、アナをじょうげに400ピクセルうごかしましょう。"
      Infinity_say: "「いう」ブロックをつかって、アナに「Hi there.」といわせてみましょう。"
      Infinity_shoot: ベイマックスは"２"のキャラです。ベイマックスにヒロのほうにロケットをうたせてください。
      Infinity_shoot_directions: ヒロは"3"のキャラです。4人のキャラのそれぞれにむかって、ヒロに何か撃たせてみましょう。１回撃ったら、次のを撃つ前に１秒待ちましょう。
      Infinity_touch_score: アナがゆきのけっしょうにタッチしたときに、ポイントをかくとくするようにしましょう。「実行」をクリックして、それぞれのゆきのけっしょうにいちどタッチするようにうごかしましょう。
      K-1 Artist Loops 1: 東に四回うごかして、この線をかいてください。
      K-1 Artist Loops 2: "「くりかえし」をつかって、同じ線をかくことができますか。"
      K-1 Artist Loops 3: "「くりかえし」をつかって六本の線をかけますか？"
      K-1 Artist Loops 4: "「くりかえし」で おしろの上の ぶぶんを かくことは できますか？"
      K-1 Artist Loops 5: 何を四回くりかえすと この「かいだん」を かけますか？
      K-1 Artist Loops 6: これは二回の「くりかえし」がひつようです。一つはかいだんをのぼり、もう一つはおります。
      K-1 Artist Loops 7: この２つのループで このパターンを おわらせられますか？
      K-1 Artist Loops 8: この「かいだん」は長いです。
      K-1 Artist Loops 9: 一番かんたんに「かいだん」をかくには？
      K-1 Artist Loops Free Play: フリータイムです。何かおもしろいものをかいてください！
      K-1 Artist1 1: １本の線をつかって、足をかいてください。
      K-1 Artist1 10: "「線をかく」と「ジャンプ」をつかって「X」まで点線を作りましょう。"
      K-1 Artist1 2: ２本の線をつかって、ネコのヒゲをかいてください！
      K-1 Artist1 3: 東に2本、北に2本の線をかいて家を作りましょう！
      K-1 Artist1 4: 山のかたちに線をかいて おしろを作りましょう！
      K-1 Artist1 5: ２本の線をつかって、このお花のくきをかいてください！
      K-1 Artist1 6: ジャンプするブロックをつかって、絵を作り上げましょう！
      K-1 Artist1 9: 線を引いたりジャンプしたりして、点線を作ってください。
      K-1 Artist2 1: 三角形の下に、四角をかいてください。
      K-1 Artist2 2: ジャンプして、家のとなりに四角をかいてください。
      K-1 Artist2 3: 四角の上に、別の四角をかいてください。
      K-1 Artist2 4: 長方形をかいて、ハシを作ってください。
      K-1 Artist2 5: 長方形をかいて、ハシのささえを作りましょう。
      K-1 Artist2 6: ２つの四角をかいて、長方形を作ってください！
      K-1 Artist2 Assessment1: かだい：となりにも四角をかきましょう。
      K-1 Artist2 Free Draw: なんでも好きなものをかいてみましょう！
      K-1 Artist2_7: 長方形をかいて、たんすに一番上のひきだしをつけてあげましょう！
      K-1 Bee 1: わたしを花のところまで うごかして、みつを手に入れて、それから ハチのすまで うごかして、ハチミツを 作ってください。
      K-1 Bee 11: みつを3つゲットして、ハチミツを1つ作りましょう。
      K-1 Bee 13: みつを3つゲットして、ハチミツを1つ作りましょう！
      K-1 Bee 14: わたしを みつのところまで うごかして、みつをひろって、ハチのすまで うごかして、そしてハチミツを作りましょう。
      K-1 Bee 15: みつを2つゲットして、ハチミツを2つ作りましょう！
      K-1 Bee 2: わたしを花のところまで うごかして、みつを手に入れて、それから ハチのすまで うごかして、ハチミツを 作ってください。
      K-1 Bee 3: わたしを花のところまで うごかして、みつを手に入れて、それから ハチのすまで うごかして、ハチミツを 作ってください。
      K-1 Bee 4: みつを2つゲットして、ハチミツを 2つ作りましょう！
      K-1 Bee 5: みつを3つゲットして、ハチミツを3つ作りましょう！
      K-1 Bee 6: みつを2つゲットして、ハチミツを 2つ作りましょう！
      K-1 Bee 7: みつを3つゲットして、ハチミツを2つ作りましょう！
      K-1 Bee 9: みつを2つゲットして、ハチミツを 2つ作りましょう！
      K-1 Bee Loops 1: みつをゲットして ハチミツを作ってください!
      K-1 Bee Loops 10: みつをすべて あつめて、すべて はちみつに しましょう！
      K-1 Bee Loops 11: みつをすべて あつめて、すべて はちみつに しましょう！
      K-1 Bee Loops 12: みつをすべて あつめて、すべて はちみつに しましょう！
      K-1 Bee Loops 2: "「くりかえし」をつかってハチをうごかし、みつをあつめて、はちみつを作ってください！"
      K-1 Bee Loops 3: "「くりかえし」を3回つかって みつを あつめて、はちみつを作ってください！"
      K-1 Bee Loops 4: "「くりかえし」をつかって、みつをあつめて、はちみつを作ってください！"
      K-1 Bee Loops 5: "「くりかえし」をつかって、みつをあつめて、はちみつを作ってください！"
      K-1 Bee Loops 6: 1つの「くりかえし」をつかって、みつをあつめて、はちみつを作ってください！
      K-1 Bee Loops 7: "「くりかえし」をつかって、みつをあつめて、はちみつを作ってください！"
      K-1 Bee Loops 8: "「くりかえし」をつかって、みつをあつめて、はちみつを作ってください！"
      K-1 Bee Loops 9: みつをすべて あつめて、すべて はちみつに しましょう！
      K-1 Bee Puzzle 12: ミツを 3つ ゲットして、ハチミツを 2つ 作りましょう！
      K-1 Building a Foundation Assessment: 三かいだてのピラミッドを作ってください、ピースをつかって いろいろ ためしてみましょう。
      K-1 Maze 10: 'TNT をよけながら、ブタさんのところまで つれていって ください！ '
      K-1 Maze 11: ブタさんを つかまえてください。バクダンに気をつけて、羽がとばされるよ！ヒント：ブタさんは南にいます。
      K-1 Maze 2: 東にうごかして、ブタさんのところまで つれていって ください！
      K-1 Maze 3: 南にうごかして、ブタさんのところまで つれていって ください！
      K-1 Maze 4: 北にうごかして、ブタさんのところまで つれていって ください！
      K-1 Maze 5: 東にうごかして、ブタさんのところまで つれていって ください！
      K-1 Maze 6: ブロックを くみあわせて、ブタさんのところまで つれていって ください。
      K-1 Maze 7: ブロックを くみあわせて、ブタさんのところまで つれていって ください。
      K-1 Maze 8: ブロックを くみあわせて、ブタさんのところまで つれていって ください。
      K-1 Maze 9: ブロックを くみあわせて、ブタさんのところまで つれていって ください。
      K-1 Maze Loops 1: ブタをつかまえたい！
      K-1 Maze Loops 10: ブタさんのところまでつれていってください！「くりかえし」をつかうとかんたんです。
      K-1 Maze Loops 11: ブタさんのところまでつれていってください！「くりかえし」をつかうとかんたんです。
      K-1 Maze Loops 12: ブタさんのところまで つれていって ください！「くりかえし」をつかうとかんたんです。
      K-1 Maze Loops 2: "「くりかえし」ブロックをつかってブタさんの ところまで つれていって ください。"
      K-1 Maze Loops 3: ブタさんのところまでつれていってください！「くりかえし」をつかいましょう。
      K-1 Maze Loops 5: ブタさんのところまでつれていってください！「くりかえし」をつかいましょう。
      K-1 Maze Loops 6: ブタさんのところまでつれていってください！「くりかえし」をつかいましょう。
      K-1 Maze Loops 7: ブタさんのところまでつれていってください！「くりかえし」をつかいましょう。
      K-1 Maze Loops 8: ブタさんのところまでつれていってください！「くりかえし」をつかいましょう。
      K-1 Maze Loops Assessment 1: これはテストです！ 「くりかえし」をつかってブタさんのところまでつれてって！
      K-1 Maze Loops Assessment 2: ループをつかって ブタさんのところまで つれてって！
      K-1 Maze Sequence Assessment 1: これはテストです！ ブロックを くみあわせて、ブタさんのところへ つれていって ください。
      K-1 Maze Sequence Assessment 2: ブロックを くみあわせて、ブタさんのところへ つれていって ください。
      K-1 artist 1 level 10: "「線をかく」と「ジャンプ」をどちらもつかって、点線をかきましょう。"
      K-1 artist 1 level 9: 三本の線をつかって これをかいてください。
      K-1 maze debug 1: プログラムで、ぼくがブタさんのところに、いけるようにして！
      K-1 maze debug 10: ブタさんのところに いけるよう、デバッグしてください。
      K-1 maze debug 11: これはテストです！ ブタさんのところに いけるよう、デバッグしてください。
      K-1 maze debug 2: ブタさんのところに いけるよう、ブロックを 入れて ください！
      K-1 maze debug 3: ブタさんのところに いけるよう、ブロックを けして ください！
      K-1 maze debug 4: このままでは、うまく うごきませんよ！プログラムを なおしてください。
      K-1 maze debug 5: ブタさんのところに いけるよう、デバッグしてください。
      K-1 maze debug 6: ブタさんのところに いけるよう、デバッグしてください。
      K-1 maze debug 7: ブタさんのところに いけるよう、デバッグしてください。
      K-1 maze debug 8: ブタさんのところに いけるよう、デバッグしてください。
      K-1 maze debug 9: ブタさんのところに いけるよう、デバッグしてください。
      MC HOC 2016 Level 10: 自分だけの Minecraft を作ろう！羊やクリーパーをスポーンさせて、思い通りの動きさせよう！
      MC HOC 2016 Level 2-2: ニワトリが凍っています。「まえにすすむ」と「まがる」ブロックを「出現した時」のスロットに追加して、動かしましょう。
      MC HOC 2016 Level 3: 素晴らしい! ニワトリが動いたね!でも、動きが止まってしまったね。Minecraftのゲーム内だと、ニワトリはずっと歩き続けるのにおかしいね。「ずっとくりかえす」ループを使ってニワトリを動かし続けよう。
      MC HOC 2016 Level 4: ニワトリがすべて同じ方向に動いているのは変だね。Minecraftのゲームの中では、ニワトリはランダムに動くことで本物のように見せているね。「ランダムに向きを変える」ブロックを使って、ニワトリをランダムに動かそう。
      MC HOC 2016 Level 5: 牛たちが迷子になっているよ!「向かって一歩動く」のブロックを「ずっとくりかえす」ループの中に置いて、右下の草の場所まで連れて行ってあげよう。
      MC HOC 2016 Level 6: ゾンビをスポーン(出現)させよう。「スポーン」ブロックを使って、夜が来たら 3 体のゾンビがスポーンするようにプログラムしよう。そして、ゾンビたちがあなたを追いかけるようにして、朝まで生き延びよう。
      MC HOC 2016 Level 8: 羊に向かう道が石の壁(かべ)でふさがれているね。ラッキーなことに、ここにクリーパーがいるよ。クリーパーは触れると、しばらくしてから爆発(ばくはつ)するよ。クリーパーの爆発で壁を吹き飛ばして、羊のところへ行こう!
      MC HOC 2016 New Drop: Minecraft では、羊は羊の毛を落とします。「落とす」のブロックを「使用された時」の中に置おいて、それから歩いて行って羊を使ってアイテムを落とさせよう。
      MC HOC 2016 New Spawn: Minecraftのゲーム内では、「スポーン」とはワールドに何かを出現(しゅつげん)させるすることを意味しているよ。「スポーン」ブロックを「実行した時」の下に置いて、ゲームのスタート時に何かがスポーンするようにしよう。
      MC HOC 2016 New Walk: まずは、世界を探検(たんけん)してみよう!矢印キーで移動して、スペースバーを押すかゲームボードをタップするとアイテムやキャラクターを「使用(しよう)」できるよ。ドアを使用して家の中に入ろう。
      MC HOC 2016 SCORE LEVEL: ゲームに欠かせないものといえば、得点(とくてん)だよね。このレベルから、何かがあったときに得点を追加(ついか)できるようになるよ。このレベルでは、アイアンゴーレムと追いかけっこをするゲームを作ってみよう。「スコアに
        1 追加」ブロックを使って、捕まえた時に 1 ポイント獲得できるようにしましょう。5 ポイント獲得で勝利だよ!
      MC HOC 2016 Village Test: 大変だ!ゾンビに囲まれてしまった!アイアンゴーレムをプログラムして、ゾンビを追いかけて攻撃(こうげき)するようにしよう!
      MC_HOC_2017_01_RETRY: Agent を重量感知板の上まで動かしたあと「実行」ボタンを押して、矢印キーでプレイヤーを動かし、家の外にあるチェストを回収しましょう。
      MC_HOC_2017_01_RETRY_2019: Agent を重量感知板の上まで動かしたあと「実行」ボタンを押して、矢印キーでプレイヤーを動かし、家の外にあるチェストを回収しましょう。
      MC_HOC_2017_02_Cole: Agent を重量感知板まで動かして、{currentPlayerName} が地図にたどり着けるようにしましょう。
      MC_HOC_2017_02_Cole_2019: Agent を重量感知板まで動かして、{currentPlayerName} が地図にたどり着けるようにしましょう。
      MC_HOC_2017_03_Cole: Agent にゲートを開けさせるコードを書きましょう。
      MC_HOC_2017_03_Cole_2019: Agent にゲートを開けさせるコードを書きましょう。
      MC_HOC_2017_04POINT5_RYAN: Agent を重量感知板の上まで動かしましょう。
      MC_HOC_2017_04POINT5_RYAN_2019: Agent を重量感知板の上まで動かしましょう。
      MC_HOC_2017_04_Cole: Agent を重量感知板の上まで動かしましょう。
      MC_HOC_2017_04_Cole_2019: Agent を重量感知板の上まで動かしましょう。
      MC_HOC_2017_05_Cole: プレイヤーをシャベルまで動かしましょう。
      MC_HOC_2017_05_Cole_2019: プレイヤーをシャベルまで動かしましょう。
      MC_HOC_2017_06_Cole: このコードを書きかえて、Agent が川に橋をかけるようにしましょう。
      MC_HOC_2017_06_Cole_2019: このコードを書きかえて、Agent が川に橋をかけるようにしましょう。
      MC_HOC_2017_07_Cole: 氷を破壊して、{currentPlayerName} がトロッコにたどり着けるようにしましょう。
      MC_HOC_2017_07_Cole_2019: 氷を破壊して、{currentPlayerName} がトロッコにたどり着けるようにしましょう。
      MC_HOC_2017_10_RETRY: このトロッコを完成させる関数を作りましょう。
      MC_HOC_2017_10_RETRY_2019: このトロッコを完成させる関数を作りましょう。
      MC_HOC_2017_Ali: 関数を使って、溶岩をわたれる道を見つけましょう。
      MC_HOC_2017_Ali_2019: 関数を使って、溶岩をわたれる道を見つけましょう。
      MC_HOC_2017_FP20x20: "**自由にプレイ:**  自分の好きなようにプログラミングしてみましょう!"
      MC_HOC_2017_FP20x20_2019: "**自由にプレイ:**  自分の好きなようにプログラミングしてみましょう!"
      NEW Course 4 Artist Functions 14: '自由時間です。カッコイイ絵を書いて、友だちに見せよう！ '
      NEW Course 4 Artist Params 2: 50 ピクセルの辺を持つ三角形を書く `draw triangle` 関数を作ります。
      NEW Course 4 Artist Params 9: |-
        `draw a square`関数の「編集」をクリックして、`length` パラメータを追加します。「パラメータを追加（ついか）」ボタンの左のボックスに `length` と入れてから、ボタンをおして下さい。
        そして、正方形を三つ書きます。大きさは、25、50、75ピクセルで、それぞれ100ピクセルはなれています。
      NEW Course 4 Bee For Loops 1: "「くりかえし」を使って、すべての花からミツを集めましょう。"
      NEW Course 4 Bee For Loops 8: 3、6、9、12、15の花のミツをとるためには、いくつずつ `counter` を ふやせば良いでしょう？「???」に正しい数をいれて、すべての花のミツを集めてください。
      Overworld Avoid Monsters: Creeperに出くわすとやっかいです。慎重にやり過ごし、安全な家に戻りましょう。
      Overworld Avoid Monsters_2019: Creeperに出くわすとやっかいです。慎重にやり過ごし、安全な家に戻りましょう。
      Overworld Chop Tree: 木はいろいろな物の材料になります。木を切り倒すには、近づいて“ブロックを破壊”コマンドを使います。
      Overworld Chop Tree_2019: 木はいろいろな物の材料になります。木を切り倒すには、近づいて“ブロックを破壊”コマンドを使います。
      Overworld Chop Trees: 日が暮れる前に家を建てる必要があります。木を3本切り倒しましょう。
      Overworld Chop Trees_2019: 日が暮れる前に家を建てる必要があります。木を3本切り倒しましょう。
      Overworld Free Play 20x20: おめでとうございます！ここで学んだことを使えば、掘ったり、建てたり、作ったり、好きなことができます。
      Overworld Free Play 20x20_2019: おめでとうございます！ここで学んだことを使えば、掘ったり、建てたり、作ったり、好きなことができます。
      Overworld House Frame Chosen: |-
        家のまだできていないところを、あなたの気にいったものをつかってたててください。
        ここでは「繰り返し」コマンドがやくに立つと思いますよ。
      Overworld House Frame Chosen_2019: |-
        家のまだできていないところを、あなたの気にいったものをつかってたててください。
        ここでは「繰り返し」コマンドがやくに立つと思いますよ。
      Overworld Move to Sheep: 羊に近づくには"前進"コマンドを追加します。
      Overworld Move to Sheep_2019: 羊に近づくには"前進"コマンドを追加します。
      Overworld Place Wall: 家の建設は壁から始まります。リピートループの中に"置く"と"前進"コマンドを入れて、建設を開始しましょう。
      Overworld Place Wall_2019: 家の建設は壁から始まります。リピートループの中に"置く"と"前進"コマンドを入れて、建設を開始しましょう。
      Overworld Plant Crops: 水の両側で作物を育てておくとお腹がすいても困りません。
      Overworld Plant Crops_2019: 水の両側で作物を育てておくとお腹がすいても困りません。
      Overworld Powered Minecart: 上出来です！資源をたくさん集め、それなりの家ができました。次はマップの端からドアまでレールを敷きましょう。
      Overworld Powered Minecart_2019: 上出来です！資源をたくさん集め、それなりの家ができました。次はマップの端からドアまでレールを敷きましょう。
      Overworld Shear Sheep: '"刈る"コマンドを使って両方の羊から羊毛を集めましょう。'
      Overworld Shear Sheep_2019: '"刈る"コマンドを使って両方の羊から羊毛を集めましょう。'
      Standalone_Artist_1: アーティストへようこそ！はじめに、「前に うごく」ブロックと「右に まがる」ブロックで、正方形をかいてみよう。それぞれの辺は、100
        ピクセルの長さだよ。
      Standalone_Artist_5.5: "「くりかえし」ブロックをつかって、ダイヤモンドが かんたんに書けるようにしてあります。このプログラムを12回くりかえすと花が書けます。ヒント：ひとつのダイヤモンドを書きおえたら、30度まがりましょう。ずっと同じところにダイヤモンドを書いていたらダメだよ。"
      Standalone_Artist_8: "「Draw a shape」は、六角形を書くようにプログラムした関数です。まず実行して、この関数が、どう うごくか、みてみてください。さて、正方形や、三角形や、八角形を書くように、この関数の中のプログラムを書き直すことが出来るかな？"
      Underground Avoiding Lava: 一部のブロックの下には溶岩が隠れていて、前進する前に"if"コマンドでフタをする必要があります。適切な場所に"前進"コマンドを追加して、ブロックを掘りましょう。
      Underground Avoiding Lava_2019: 一部のブロックの下には溶岩が隠れていて、前進する前に"if"コマンドでフタをする必要があります。適切な場所に"前進"コマンドを追加して、ブロックを掘りましょう。
      Underground If Statements: 次は溶岩の中に落ちないようにして、レッドストーンを3つ掘りましょう。溶岩を見つけたら、"If"コマンドを使って丸石を置きます。
      Underground If Statements_2019: 次は溶岩の中に落ちないようにして、レッドストーンを3つ掘りましょう。溶岩を見つけたら、"If"コマンドを使って丸石を置きます。
      Underground Iron: 溶岩は熱くて危険です。丸石を置いて橋を作り、鉄のブロックを2つ以上掘りましょう。
      Underground Iron_2019: 溶岩は熱くて危険です。丸石を置いて橋を作り、鉄のブロックを2つ以上掘りましょう。
      Underground Mining Coal: 地下は暗いけれども、貴重な資源があります。松明を2つ以上置いて、石炭を2個以上掘りましょう。
      Underground Mining Coal_2019: 地下は暗いけれども、貴重な資源があります。松明を2つ以上置いて、石炭を2個以上掘りましょう。
      bounce_1: "「左向きのブロックが押されたとき」のブロックにべつのブロックをつなげて、「実行」ボタンを押してください。左向き矢印を押してパドルをゴールまで動かしましょう"
      bounce_10: 一番上にゴールがあります。ゲームを作るには、「得点」と「敵の得点」ブロックを「ボールがゴールにあるとき」と「ボールがラケットに当たらなかったとき」ブロックに接続します。相手が2回得点する前に自分がどれだけ得点するか見てみましょう
      bounce_10_basketball: 一番上に、ゴールがあります！ゲームを作るには「ポイントを採点する」と「相手のポイントを採点する」ブロックを、「ボールがゴールに入った場合」と「ボールが手を外れた場合」ブロックにつなげます。相手が2回得点する前に、何点とれるか見てみよう。
      bounce_10_sports: 一番上に、ゴールがあります！「ポイントを採点する」と「相手のポイントを採点する」ブロックを、「ボールがゴールに入った場合」と「ボールが手を外れた場合」ブロックにつなげます。相手が2回得点する前に、何点とれるか見てみよう！
      bounce_11: "「実行」ブロックにブロックを足していきましょう。「新しいボールを発射する」ブロックを一箇所以上使いましょう。背景を変更したり、ラケットやボールのスピードを変えてみましょう。対戦相手が二回スコアを決める前に何ポイント得点できるでしょうか？"
      bounce_11_basketball: さあ、「実行した時」ブロックに、ブロックをつなげて行きましょう。「新しいボールを投げる」ブロックを、どこかに使う必要があります。手やボールの、画像やスピードを変えたりして、相手が二回スコアを決める前に、何ポイント得点できるか見てみましょう！
      bounce_11_sports: さあ、「実行した時」ブロックに、ブロックをつなげて行きましょう。「新しいボールを投げる」ブロックを、どこかに使う必要があります。手やボールの、画像やスピードを変えたりして、相手が二回スコアを決める前に、何ポイント得点できるか見てみましょう！
      bounce_12: バウンス ゲームを作成してください。デザインやルールは自由に変更できます。終了したら、完了ボタンをクリックしてください。作成したゲームは、他のユーザが携帯電話からアクセスして遊ぶことができます。
      bounce_12_basketball: 君のバスケットボール ゲームを作ろう。ルールは自由に変更できるよ。完了したら、「完了」ボタンをクリックして、友だちが君のゲームをスマホで試せるようにしよう。
      bounce_12_sports: 君の ゲームを作ろう。あなたが全部きめてください。ルールは自由に変更できるし、スポーツをミックスしたり、自由にやろう！完了したら、「完了」ボタンをクリックして、友だちが君のゲームをスマホで試せるようにしよう。
      bounce_1_basketball: "「左向き矢印が押されたとき」のブロックに、べつのブロックをつなげて「実行」ボタンを押してください。左向き矢印を押して、手を、最終目標まで動かしましょう。"
      bounce_1_sports: 旗を取ろう！「左向き矢印が押されたとき」ブロックに、ブロックをつなげて、「実行」を押し、プレイヤーを旗まで動かそう。
      bounce_2: "「右矢印のとき」と「左矢印のとき」ブロックにブロックを接続します。両方の最終目標に到達するためにラケットを移動します"
      bounce_2_basketball: "「右矢印のとき」と「左矢印のとき」ブロックに、ブロックをつなげます。両方の最終目標に到達するように、手を動かします。"
      bounce_2_sports: 旗が 2 つあります!「左向き矢印が押された場合」と「右矢印キーが押された場合」にブロックをつなげて、プレイヤーが、2
        方向に移動できるようにしよう。
      bounce_3: "「上矢印のとき」ブロックと似たことを試しましょう。頂上の最終目標にラケットを移動します"
      bounce_4: 今回は 4 つのブロックを追加する必要があります。パズルを完了するために4 つの最終目標にラケットを移動します
      bounce_5: ラケットに飛んでおりるボールを送ります。最終目標にボールが確実に届くために「ラケットにボールがヒットするとき」ブロックにブロックをつけます
      bounce_5_basketball: ボールを手の中に落ちるように飛ばします。「ボールが手に当たった場合」ブロックにブロックをくっつけて、ボールが旗に届くようにしてください。
      bounce_5_sports: ホッケー パックが、プレイヤーに向かって投げられます！「ボールが当たった場合」ブロックにブロックをつなげて、旗に当ててください。
      bounce_6: 最終目標は画面の上にあります。パズルを解くために「ボールがあたったとき」ブロックにブロックを接続する必要があります
      bounce_6_basketball: 旗がいちばん上にあります。両方の「ボールが～に当たった場合」ブロックに、ブロックをつなげて、パズルを解いてください。
      bounce_6_sports: 旗がいちばん上にあります。両方の「ボールが～に当たった場合」ブロックに、ブロックをつなげて、パズルを解いてください。
      bounce_7: "「〜のとき」ブロックにブロックを接続します。最終目標にヒットするまでボールをバウンドさせます"
      bounce_7_basketball: それぞれの「〜の場合」ブロックに、ブロックをつなげます。ボールが旗に当たるまで、ボールをバウンドします。
      bounce_7_sports: それぞれの「〜の場合」ブロックに、ブロックをつなげます。ボールが旗に当たるまで、ボールをバウンドします。
      course1_artist_loops_challenge1: |-
        「くりかえし」をつかうと、いちどにたくさんの線を引くことができます。

        家をかくことができるかな？「くりかえし」を使えるところをさがしてみましょう！
      course1_artist_loops_challenge2: ゲームをしましょう！ なるべく多くのXをかく！ 3行れんぞくしてXをかけるかな？
      course1_artist_loops_challenge3: 2羽のトリさんの家をつくるのを手伝って！
      course1_collector_loops_challenge1: バグさがしをてつだって！ すすむほうこうはわかってるけど、どれだけ歩けばいいかわからないの！
      course1_collector_loops_challenge2: "「やじるし」ブロックは、どれも1つしかつかえません。ジェムをぜんぶ手に入れよう！ "
      course1_collector_loops_challenge3: "「やじるし」ブロックは、どれも1つしかつかえません。ジェムをぜんぶ手に入れよう！ "
      course1_maze_debugging_challenge1: ブタさんの ところに いけるよう デバッグしてください。
      course1_maze_seq_challenge1: 道を通って、みどりのブタまで つれてってね。ばくだんに きをつけて、羽が ふきとびます！
      course1_maze_seq_challenge2: それぞれの方向（ほうこう）に 4回までしか うごけません。ブロックが なくなる前に クリアできるかな？
      course1_playlab_events_challenge1: みんなどこにかくれてるかな？ のこりのお友だちを表示（ひょうじ）するコードを書けるかな？
      course1_playlab_events_challenge2: パーティーをしよう！クリックしたりタップするときのアクションをつけて、おともだちを楽しませよう。
      course2_artist_prog_challenge1: それぞれの動物（どうぶつ）のために部屋（へや）を作ってあげましょう。 このパズルはいろいろなときかたがあるので、楽しんでくだい。最短（さいたん）は6ブロックですが、すきなだけ使（つか）ってください。
      course2_artist_prog_challenge2: この道路（どうろ）に黄色い線をかいてください。
      course2_collector_loops_challenge2: 'ジェムをすべてゲットしよう！ '
      course2_collector_prog_challenge1: よく見よう！ 10このジェムをぜんぶ集められるかな？
      course2_collector_prog_challenge2: ジェムはぜんぶで20こあるよ。半分より多くあつめたいな！
      course2_maze_programming_challenge1: ブタがかくれてる！さがすのをてつだってくれる？
      course3_bee_debugging_challenge1: ハチが花のミツをどのように集めているか見てください。 同じパターンを使って、すべてのハチミツを作れますか？
      course3_bee_functions_challenge2: チャレンジ問題によくきたね！
      course3_collector_debugging_challenge2: 入れ子のループはマスターしたかな？ これまでに学んだことをいかして、ジェムをすべて集めましょう！
      course3_farmer_condLoops_challenge1: カボチャで右にまがりましょう。クリアするために作物をすべて集めよう。かくれた作物には、トウモロコシとレタスのどちらか1つしかありません。
      course3_maze_debugging_challenge1: _円をかくように、ぐるりと回ればいいかな？_
      course3_maze_debugging_challenge2: _回りすぎると、めまいがするよ！ 4つの「まがる」ブロックだけでドングリをひろえるようにしてね。_
      course4_artist_fwp_challenge1: このプログラムを実行してみてください、そして何が起こるかを参照し変更をしてください。それがどのように動作するかを理解できますか？(または削除し、完全に別の何かと交換)
      courseA_artist_loops7: "「リピート」ループを使用して、水を波立たせることができます。"
      courseA_artist_loops7_2018: "「リピート」ループを使用して、水を波立たせることができます。"
      courseA_artist_loops7_2019: "「リピート」ループを使用して、水を波立たせることができます。"
      courseA_collector_loops1: ローレルを うごかして、たからものを あつめよう！
      courseA_collector_loops1_2018: ローレルを うごかして、たからものを あつめよう！
      courseA_collector_loops1_2019: ローレルを うごかして、たからものを あつめよう！
      courseA_collector_loops2: このレベルを クリアするには、３つ すべてを とってください。
      courseA_collector_loops2_2018: このレベルを クリアするには、３つ すべてを とってください。
      courseA_collector_loops4: ローレルの うごきを なおして、ぜんぶの たからものを とって ください。
      courseA_collector_loops4_2018: ローレルの うごきを なおして、ぜんぶの たからものを とって ください。
      courseA_collector_loops4_2019: ローレルの うごきを なおして、ぜんぶの たからものを とって ください。
      courseA_collector_loops5: すべての たからものを とってください。
      courseA_collector_loops5_2018: すべての たからものを とってください。
      courseA_collector_loops5_2019: すべての たからものを とってください。
      courseA_collector_loops6: ブロックを たして、ぜんぶの たからものを とりましょう。
      courseA_collector_loops6_2018: ブロックを たして、ぜんぶの たからものを とりましょう。
      courseA_collector_loops6_2019: ブロックを たして、ぜんぶの たからものを とりましょう。
      courseA_collector_loops7: ぜんぶの たからものを とるには、どのブロックを たせば いいかな？
      courseA_collector_loops7_2018: ぜんぶの たからものを とるには、どのブロックを たせば いいかな？
      courseA_collector_loops7_2019: ぜんぶの たからものを とるには、どのブロックを たせば いいかな？
      courseA_collector_loops8: プログラムで、ぜんぶの たからものを とりましょう。
      courseA_collector_loops8_2018: プログラムで、ぜんぶの たからものを とりましょう。
      courseA_collector_loops8_2019: プログラムで、ぜんぶの たからものを とりましょう。
      courseA_collector_loops9: "**チャレンジ** たからものが かいだんに なっています！ローレルが ぜんぶ たからものを とれるように
        プログラミングしてください。"
      courseA_collector_loops9_2018: "**チャレンジ** たからものが かいだんに なっています！ローレルが ぜんぶ たからものを
        とれるように プログラミングしてください。"
      courseA_collector_loops9_2019: "**チャレンジ** たからものが かいだんに なっています！ローレルが ぜんぶ たからものを
        とれるように プログラミングしてください。"
      courseA_collector_preLoops7: このレベルを クリアするには、３つ すべてを とってください。
      courseA_harvester_seq6: 自分でやってみよう！
      courseA_harvester_seq6_2019: 自分でやってみよう！
      courseA_harvester_seq7: 自分でやってみよう！
      courseA_harvester_seq7_2019: 自分でやってみよう！
      courseA_maze_seq1: トリさんを ブタさんの ところに つれていって！
      courseA_maze_seq10: 'チャレンジ：バクダンを よけつつ、ブタさんを つかまえて！ '
      courseA_maze_seq11: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください。
      courseA_maze_seq11_2018: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください。
      courseA_maze_seq11_2019: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください。
      courseA_maze_seq12: 'ブタさんを つかまえて！ '
      courseA_maze_seq12_2018: 'ブタさんを つかまえて！ '
      courseA_maze_seq12_2019: 'ブタさんを つかまえて！ '
      courseA_maze_seq13: ともかく、ブタをつかまえよう！
      courseA_maze_seq13_2018: ともかく、ブタをつかまえよう！
      courseA_maze_seq13_2019: ともかく、ブタをつかまえよう！
      courseA_maze_seq1_2018: トリさんを ブタさんの ところに つれていって！
      courseA_maze_seq1_2019: トリさんを ブタさんの ところに つれていって！
      courseA_maze_seq2: トリさんが、ブタさんのところに いけるよう、プログラムを なおして！
      courseA_maze_seq3: トリさんが、ブタさんのところに いけるよう、プログラムを なおして！
      courseA_maze_seq4: ブタさんのところに、いけるように、いらないブロックを けしてください。
      courseA_maze_seq5: じぶんで はじめから ためしてみよう。
      courseA_maze_seq6: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください！
      courseA_maze_seq6_2018: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください！
      courseA_maze_seq6_2019: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください！
      courseA_maze_seq7: トリさんが ブタさんのところに いけるよう、ブロックを いれて ください！
      courseA_maze_seq8: トリさんを ブタさんの ところに つれていって、このレベルをクリアしよう！
      courseA_maze_seq8_2018: トリさんを ブタさんの ところに つれていって、このレベルをクリアしよう！
      courseA_maze_seq8_2019: トリさんを ブタさんの ところに つれていって、このレベルをクリアしよう！
      courseA_maze_seq9: トリさんが ブタさんの ところに いけるよう ブロックを いれて、デバッグしよう！
      courseA_maze_seq_challenge1: なにかが ちがうよ。プログラムを なおして、トリさんを ブタさんのところに つれていって！
      courseA_maze_seq_challenge1_2018: なにかが ちがうよ。プログラムを なおして、トリさんを ブタさんのところに つれていって！
      courseA_maze_seq_challenge1_2019: なにかが ちがうよ。プログラムを なおして、トリさんを ブタさんのところに つれていって！
      courseA_maze_seq_challenge2: みちを たどって トリさんを ブタさんのところに つれてって。ばくだんで はねが とばされないように！
      courseA_maze_seq_challenge2_2018: みちを たどって トリさんを ブタさんのところに つれてって。ばくだんで はねが とばされないように！
      courseA_maze_seq_challenge2_2019: みちを たどって トリさんを ブタさんのところに つれてって。ばくだんで はねが とばされないように！
      courseB_collector_loops_challenge2a: このパズルをクリアするには、**5** つの たからものを ゲットして ください。
      courseB_collector_loops_challenge2a_2018: このパズルをクリアするには、**5** つの たからものを ゲットして
        ください。
      courseB_collector_loops_challenge2a_2019: このパズルをクリアするには、**5** つの たからものを ゲットして
        ください。
      courseB_maze_seq1: ブロックをつかって、ぼくをブタさんのところに、つれていってください。
      courseB_maze_seq6: ブロックを くみあわせて、トリさんを ブタさんのところへ つれていって ください！
      courseB_maze_seq7: トリさんが ブタさんのところに いけるよう、ブロックを いれて ください！
      courseC_artist_prog5: この家には天井が必要です！三角の屋根をかいてください。ヒント：3つの線はすべて同じ長さです。
      courseC_artist_prog5_2018: この家には天井が必要です！三角の屋根をかいてください。ヒント：3つの線はすべて同じ長さです。
      courseC_artist_prog5_2019: この家には天井が必要です！三角の屋根をかいてください。ヒント：3つの線はすべて同じ長さです。
      courseD_artist_binary1: |-
        「Draw binary "01010101"」ブロックを「実行したとき」にくっつけて、実行してください。
        アーティストは、一番目の行にバイナリで「01010101」を書きます。
      courseD_artist_binary1_2018: |-
        「Draw binary "01010101"」ブロックを「実行したとき」にくっつけて、実行してください。
        アーティストは、一番目の行にバイナリで「01010101」を書きます。
      courseD_artist_binary1_2019: |-
        「Draw binary "01010101"」ブロックを「実行したとき」にくっつけて、実行してください。
        アーティストは、一番目の行にバイナリで「01010101」を書きます。
      courseD_artist_binary4: 3ケタのバイナリ文字列（0と1が三つ）で、このパターンを書いて下さい。
      courseD_artist_binary4_2018: 3ケタのバイナリ文字列（0と1が三つ）で、このパターンを書いて下さい。
      courseD_artist_binary4_2019: 3ケタのバイナリ文字列（0と1が三つ）で、このパターンを書いて下さい。
      courseD_artist_binary6: 6ケタのバイナリ文字列を、11回くりかして書けば、このイメージを書くことが出来ますよ。
      courseD_artist_binary6_2018: 6ケタのバイナリ文字列を、11回くりかして書けば、このイメージを書くことが出来ますよ。
      courseD_artist_binary6_2019: 6ケタのバイナリ文字列を、11回くりかして書けば、このイメージを書くことが出来ますよ。
      courseD_artist_binary7: 一番短いバイナリ文字で、このイメージが書けるように考えて下さい。
      courseD_artist_binary7_2018: 一番短いバイナリ文字で、このイメージが書けるように考えて下さい。
      courseD_artist_binary7_2019: 一番短いバイナリ文字で、このイメージが書けるように考えて下さい。
      courseD_autorun_binary4_2019: 3ケタのバイナリ文字列（0と1が三つ）で、このパターンを書いて下さい。
      courseD_autorun_binary6_2019: 6ケタのバイナリ文字列を、11回くりかして書けば、このイメージを書くことが出来ますよ。
      courseD_autorun_binary7_2019: 一番短いバイナリ文字で、このイメージが書けるように考えて下さい。
      courseD_bee_nestedLoops8: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_bee_nestedLoops8_2018: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_bee_nestedLoops8_2019: "それぞれの花からすべての花のみつを集めてください。\nそしてそれぞれのハチの巣でハチミツを作ってください。\n入れ子のループ（ネスト・ループ）を使うのです。 "
      courseD_maze_nestedLoops4: ひまわりまで行きたい！
      courseD_maze_nestedLoops4_2018: ひまわりまで行きたい！
      courseD_maze_nestedLoops4_2019: ひまわりまで行きたい！
      courseD_maze_nestedLoops6: ひまわりまで行きたい！
      courseD_maze_nestedLoops6_2018: ひまわりまで行きたい！
      courseD_maze_nestedLoops6_2019: ひまわりまで行きたい！
      courseE_artist_functions1: |-
        こんにちは！ゾンビアーティストです。お絵かき大好き！
        四角いメガネを描くので手伝ってください。ヒント：メガネのつなぎ部分は、レンズの四角より25ピクセル短く描きましょう。
      courseE_bee_concept1: '入れ子の繰り返し（ネスト・ループ）を使って、それぞれの花からすべての花のみつを集めてください。　 '
      courseE_bee_concept1_2018: '入れ子の繰り返し（ネスト・ループ）を使って、それぞれの花からすべての花のみつを集めてください。　 '
      courseE_bee_functions1: それぞれの花から、すべてのミツをあつめて下さい。
      courseE_bee_functions3: ひとつの作業を行うひとまとまりのコードを関数といいます。"get 5" という関数を使うと、一度に蜜を
        5 とることができます。ループを使って、ブロックの数がなるべく少なくしてください。
      courseE_bee_functions4: "「動いてみつを集める」の関数は、ハチを回転させ、蜜を集め、スタート地点までハチを戻します。この関数を使って蜜を全部集めましょう。"
      courseF_artist_for7: |-
        さっきのプログラムを、3ヵ所かえるだけで、この絵を書くことが出来ます！
        ヒント：

        1.  線の太さは？
        2.  まがる向きは？
        3.  いくつ「ずつ」カウントする？
      courseF_artist_for7_2018: |-
        さっきのプログラムを、3ヵ所かえるだけで、この絵を書くことが出来ます！
        ヒント：

        1.  線の太さは？
        2.  まがる向きは？
        3.  いくつ「ずつ」カウントする？
      courseF_artist_for7_2019: |-
        さっきのプログラムを、3ヵ所かえるだけで、この絵を書くことが出来ます！
        ヒント：

        1.  線の太さは？
        2.  まがる向きは？
        3.  いくつ「ずつ」カウントする？
      courseF_artist_for_challenge1: この図形を書いてみよう！
      courseF_artist_for_challenge1_2018: この図形を書いてみよう！
      courseF_artist_for_challenge1_2019: この図形を書いてみよう！
      courseF_artist_for_challenge2: この図形を書いてみよう！くりかえしを、1回だけ使って書けますか？
      courseF_artist_for_challenge2_2018: この図形を書いてみよう！くりかえしを、1回だけ使って書けますか？
      courseF_artist_for_challenge2_2019: この図形を書いてみよう！くりかえしを、1回だけ使って書けますか？
      courseF_artist_fwp9: 'フリープレイ: カッコイイのを、書いてみよう！ペンの太さを かえて見ても いいよね。'
      courseF_artist_variables_challenge1: あなたは、このようなパターンの作りかたを、すべて学びました。そんなに難しくないから、どうすれば良いか、考えてみよう。
      courseF_artist_variables_challenge1_2018: あなたは、このようなパターンの作りかたを、すべて学びました。そんなに難しくないから、どうすれば良いか、考えてみよう。
      courseF_artist_variables_challenge1_2019: あなたは、このようなパターンの作りかたを、すべて学びました。そんなに難しくないから、どうすれば良いか、考えてみよう。
      courseF_artist_variables_challenge2: あなたは、このようなパターンの作りかたを、すべて学びました。そんなに難しくないから、どうすれば良いか、考えてみよう。
      courseF_artist_variables_challenge2_2018: あなたは、このようなパターンの作りかたを、すべて学びました。そんなに難しくないから、どうすれば良いか、考えてみよう。
      courseF_artist_variables_challenge2_2019: あなたは、このようなパターンの作りかたを、すべて学びました。そんなに難しくないから、どうすれば良いか、考えてみよう。
      courseF_bee_for8: 3、6、9、12、15の花のミツをとるためには、いくつずつ `counter` を ふやせば良いでしょう？「???」に正しい数をいれて、すべての花のミツを集めてください。
      courseF_bee_for8_2018: 3、6、9、12、15の花のミツをとるためには、いくつずつ `counter` を ふやせば良いでしょう？「???」に正しい数をいれて、すべての花のミツを集めてください。
      courseF_bee_for8_2019: 3、6、9、12、15の花のミツをとるためには、いくつずつ `counter` を ふやせば良いでしょう？「???」に正しい数をいれて、すべての花のミツを集めてください。
      courseF_bee_for_challenge2: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      courseF_bee_for_challenge2_2018: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      courseF_bee_for_challenge2_2019: 出来るだけ少ない数のブロックを使って、このパズルをクリアしよう。
      courseF_bee_functions4: "「動いてみつを集める」の関数は、ハチを回転させ、蜜を集め、スタート地点までハチを戻します。この関数を使って蜜を全部集めましょう。"
      flappy_1: "「クリックしたとき」ブロックに「パタパタする」ブロックを くっつけて、「実行」ボタンを おしてください。クリック（または がめんをタップ）すると、フラッピーは
        もくひょうにむかって とんでいきます。"
      flappy_11: じぶんのフラッピー ゲームを作ろう。みため、ルール、じゅうりょくも、ぜんぶ かえられます。作りおわったら、「おわり」ボタンをクリックして、ともだちにシェアして
        あそんでもらおう。
      flappy_2: こんどは、じめんを みてください。じめんに ぶつかったとき、ゲームがおわる ようにプログラミングしてみよう。「ゲームオーバー」ブロックを
        つかってね。
      flappy_3: フラッピーが とぶ はやさを かえてみよう。「実行したとき」ブロックに、スピードをかえるブロックを くっつければいいよ。
      flappy_4: 障害物（しょうがいぶつ）にぶつかったときのプログラムがないと、Flappyは障害物を通りぬけてしまいます。「障害物にぶつかったとき」ブロックに、なにかブロックをくっつけてください。Flappyがパイプにぶつかったら、「ゲーム終了」するようにしましょう。
      flappy_5: フラッピーが しょうがいぶつを とおりぬけたら、ポイントをゲットするようにプログラミングしよう。「しょうがいぶつを とおりぬけたとき」ブロックで、「1ポイント
        ゲット」ブロックをつかうんだ。
      flappy_6: "「すこしパタパタする」や「たくさんパタパタする」ブロックを つかってみて。そのあとも、ポイントがゲットできるかな。"
      flappy_7: はいけいを かえてみよう。「実行したとき」ブロックに、どのブロックをくっつければ いいかな？
      flappy_8: はいけいは、いつでも かえることが できるよ。しょうがいぶつを とおりぬけたときに、はいけいが ランダムに てきとうに かわるように
        してみよう。
      flappy_9: しょうがいぶつに あたったとき、ゲームは おわらず、とくてんが 0 になるように プログラムを かえてください。
      frozen circle: 円をかくことが できる？「???」のところに数をいれて、円をかいてみましょう。
      frozen circle function: "「円をかく」ブロックをつかって、10こ円をかきましょう。円をかいたらジャンプするのをわすれないでね。"
      frozen circle function in circle: こんどは、20こ円をかきましょう。いっこ円をかいたら、ジャンプして、18度まがるのよ。
      frozen circle function with parameter: こんどの「円をかく」ブロックは、「おおきさ」を かえることができるわ！このブロックをつかって、おおきさ5の小さい円と、おおきさ10の大きな円をかいてみて。
      frozen cross: "「くりかえし」ブロックをつかって＋の形をかきましょう。エルサが前にも後ろにもうごけるって、気がついてた？"
      frozen cross rotate: こんどは、線を10本かいてみましょう。それぞれの線をかくとき、どれくらい まがれば いいかしら？
      frozen cross rotate dense: こんどは、線を90本かきましょう！90回で ちょうど360度になるには、どれくらい まがれば いいかしら？ヒント：とても小さい数よ。
      frozen diamond: この4つのブロックを2回くりかえして、ひし形をかいてみましょう。四角形をかくのと にてるけど、まがる角度が ちがうわよ。90
        度じゃなくて、60 度と120 度 まがるのよ。
      frozen diamond mini snowflake: 雪のけっしょうは、色んな形があるって知ってる？さあ、新しい雪のけっしょうを かきましょう。「くりかえし」ブロックをつかって、ひし形を４つ
        かいてね。90度まがるのを わすれないで。
      frozen diamond snowflake: ひし形を10こ かいて、新しい雪のけっしょうをつくりましょう。36度まがると ちょうどいいわよ。
      frozen freeplay: あなたは もう、マスター アーティストよ！じゆうにブロックをつかって、冬のワンダーランドをつくってね。
      frozen line: こんにちは！アレンデール王国のエルサです。1本の線をかくのを手つだってください。
      frozen perpendicular: |-
        つぎに 2 本の線を、90度の かくどで かいてみましょう！
        「まがる」ブロックと「うごく」ブロックをつかうといいわ。
      frozen snowflake branch: "「雪のけっしょうのエダをかく」ブロックをつかって、３本の えだをかいてみましょう。雪のけっしょうが
        みえてきたかしら？"
      frozen snowflake full: 8回くりかえして、きれいな雪のけっしょうを かきましょう！
      frozen snowflower: ふくざつな雪のもようも、円をつかって かけるわね。おおきさ５の円を５こ、おおきさ１０の円を５こ つかって、この もようを
        かいてみて。
      frozen square iterative: もうすこしで、四角がかけるわ。4本の線で、四角をかきましょう！
      frozen square loop: こんにちは、アレンデール王国のアナよ！「くりかえし」ブロックをつかって、四角形をかいてみて。さっきより少ないブロックで
        かけるはずよ。四角をかくには、何回くりかえせばいいか 考えて、「???」に、数をいれてみましょう。
      frozen square loop 3x: 四角形を 3つ かいてみましょう。ひとつ四角形をかいたら、120度まがると いいわよ。
      frozen square snowflake: この雪のもようが かけるかしら？「くりかえし」ブロックで、四角形を10こ かけばいいわ。四角形をひとつ
        かいたら、「まがる」ブロックで36度まがるのよ。
      grade5_artist_binary11: |-
        自由に書きましょう！
        このまっさらなキャンバスに、すきな絵を書いてください。さあ何から書きましょうか！
      grade5_artist_binary4: 3ケタのバイナリ文字列（0と1が三つ）で、このパターンを書いて下さい。
      grade5_artist_binary5: |-
        このプログラムを実行すると、おこった顔が書かれます。
        えがおが書かれるように、プログラムを直してください。
      grade5_artist_binary8: このイメージを完成（かんせい）させてください。
      grade5_artist_binary9: "もっと細かいキャンバスがあります - 16 ピクセル × 16 ピクセルです! \\\r \\\rこのビットで何ができるか、見てください。"
      k-1 maze 1: 西にうごかして、ブタさんのところまで つれていって あげましょう。
      scrat 16: ドングリ ！ドングリ ！ドングリ ！いちばんすくないブロックでぼくをあそこまでつれていくには、"もしも"ブロックをつかってね。
      scrat 17: よし、練習のためにもう一度やってみよう。さっきとそんなにかわらないけど、壁にきをつけてね。
      scrat 18: '"もし○○そうでなければ××"ブロックは、”もし"の結果によって、○○をするか、××をするかが変わってきます。この新しいブロックをつかって、ぼくをドングリまでつれていってね！'
      scrat 19: "”もし○○でなければ××”ブロックの練習をもう一回やりましょう。一度でクリアできるかな？"
      scrat 20: ブロックをあと3つだけ足して、難しい迷路をクリアしてみよう。もしこの迷路をクリアできたら、どんなに長くてクネクネした道でも、ぼくはドングリまで歩くことができるよ。いそいで！氷がとけてきた！
