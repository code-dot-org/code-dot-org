---
zh-TW:
  data:
    long_instructions:
      2-3 Artist 1 new: "嗨，我是一個藝術家，你可以寫個程式碼來讓我畫出任何東西。現在請你用一些程式積木，讓我沿著圖中的灰色線條畫畫。（每一條線的長度都是
        100 像素）\\\r\n\\\r"
      2-3 Artist 11: '我們來做一個停止的交通標誌吧！畫出一個正八邊形，每邊長 100 像素。 '
      2-3 Artist 12: "建立一個圓形來完成這個眼球！\n\\\r\n\\\r\n如果小藝術家在每次的循環轉向 1 度，要重複這個程式多少次才能畫出一個圓形呢？ "
      2-3 Artist 2 new: 這房子有個半完成的牆。每一邊都應該是 100，但是半完成的牆是只有 50。請試著完成這個牆吧。
      2-3 Artist 3.4: |-
        跳躍積木只會移動小藝術家而不會繪圖。
        同時使用`跳躍-向前`和`移動-向前`積木來畫出這個虛線。
        每個線條長度為 50 像素。
      2-3 Artist 3new: "紅色帽子的高是 100 像素，畫完比它矮 70 像素的黑色帽子。\\\r\n\\\r\n_（注意：每個帽子的寬度都是
        50 像素。）_"
      2-3 Artist 4: 幫助我完成這隻貓的房子。
      2-3 Artist 6: "這個房子需要一個屋頂！畫出這個三角形。\\\r\n\\\r\n提示：三個邊的長度都相同。\\\r\n\\\r\n<img
        src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"\nwidth=\"300\"/>"
      2-3 Artist 7: "畫完學校上頭的最後一組窗戶，這樣每個學生就可以看到窗外景色了。\\\r\n\\\r\n正方形窗戶的外框邊長是 25 像素。 "
      2-3 Artist 8: "是時候蓋個穀倉了！\\\r\n\\\r\n將這個穀倉分割成 2 個相同尺寸的正方形，來替每隻動物建出房間。\\\r\n\\\r\n提示：這個長方形的寬是
        200 像素、高是 100 像素。\\\r\n\\\r\n有很多解決的方式可以完成這個關卡。"
      2-3 Artist 9 NEW: 完成這個風箏
      2-3 Artist 9 REPLACEMENT: 畫完這些梯子！
      2-3 Artist 9: 完成這個風箏
      2-3 Artist Assessment 1: |-
        **評量：**把最後一顆牙齒畫完。
        這顆牙寬：25 像素；高：25像素。
      2-3 Artist Debugging 1: "這個帽子的寬度應該只有 50 像素才是。\\\r\n你能修正它嗎？\\\r\n\\\r\n<br/>\\\r"
      2-3 Artist Debugging 10: "在我的遊戲控制器上的方向鍵太窄了。\\\r\n\\\r\n你能幫我製作寬度有 10 像素的方向鍵嗎？\\\r\n\\\r\n先試試這個程式，看看是哪兒出錯了。"
      2-3 Artist Debugging 11: "我的雪花有個缺口！\\\r\n\\\r\n你可以找到是哪兒出了錯嗎？"
      2-3 Artist Debugging 2: |-
        畫出貓鬍鬚的程式不正確。

        修正這個程式來給貓畫上一樣長的鬍鬚。
      2-3 Artist Debugging 3: "我的船破了個洞！\\\r\n\\\r\n你需要修正什麼地方才能把線接起來？"
      2-3 Artist Debugging 5: "畫出腿和腳的程式有錯。\\\r\n\\\r\n你能修正它嗎？"
      2-3 Artist Debugging 6: "看來我好像坐在缺了個腳的椅子上！\\\r\n\\\r\n編輯程式來畫個椅腳。"
      2-3 Artist Debugging 7: |-
        看起來Ｃ被畫反了！

        你可以將它改正嗎？
      2-3 Artist Debugging 8: "我的老師告訴我們做事要有始有終！\\\r\n\\\r\n幫我完成我的風車，你可以找到錯誤的地方嗎？"
      2-3 Artist Debugging 9: "有個部分斷開了！\\\r\n\\\r\n畫出莖的程式碼不大正確。想一想，要如何才讓小藝術家畫出正確的莖？"
      2-3 Artist Debugging Assessment 1: "**評量：**\\\r\n為什麼這個正方形用了 75 像素的邊長還是太小？\\\r\n\\\r\n程式的哪個地方出錯了？"
      2-3 Artist Free Play: 自由發揮！畫出你想畫的任何東西。
      2-3 Artist Functions 1 a: "「偶…殭屍…畫家，偶愛畫畫！」\n\\\r\n\\\r\n幫殭屍畫副方形眼鏡。 \\\r\n\\\r\n提示：
        正方形的寬度是 100 像素，而鏡圈之間的鼻托比它短 25 像素。\\\r\n\\\r"
      2-3 Artist Functions 1: "「偶…殭屍…畫家，偶愛畫畫！」\n\\\r\n\\\r\n幫殭屍畫副方形眼鏡。 \\\r\n\\\r\n提示：
        正方形的寬度是 100 像素，而鏡圈之間的鼻托比它短 25 像素。\\\r\n\\\r"
      2-3 Artist Functions 10: "**自由發揮：**這裏有 2 個函式，一個是 big gear（大齒輪），另一個是 small gear（小齒輪）。\\\r\n\\\r\n用它們來畫出一台機器的內部！"
      2-3 Artist Functions 11 a: "我們已經將 `draw a square`（畫個正方形）函式重新命名成 `draw a hexagon`（畫個六邊形），但是它還是只能畫出正方形！\\\r\n\\\r\n你可以修改
        `draw a hexagon` 函式，讓它能畫出每邊長 50 像素的六邊形嗎？\n\\\r\n\\\r\n用新的函式把圖案畫出來吧！"
      2-3 Artist Functions 11.5: "這裡是一個相同的 `draw a hexagon`（畫個六邊形）函式。\\\r\n\\\r\n如果你循環主要的程式
        6 次，每次循環都轉 60 度，會發生什麼事呢？"
      2-3 Artist Functions 11: "我們已經將 `draw a square`（畫個正方形）函式重新命名成 `draw a hexagon`（畫個六邊形），但是它還是只能畫出正方形！\\\r\n\\\r\n你可以修改
        `draw a hexagon` 函式，讓它能畫出每邊長 50 像素的六邊形嗎？\n\\\r\n\\\r\n用新的函式把圖案畫出來吧！"
      2-3 Artist Functions 12 Mike: "函式（Functions）很適合用來重複繪製複雜圖案。\\\r\n\\\r\n你可以使用
        `draw a flower`（畫個花朵）函式將播種盒上剩餘的圖案填滿嗎？\\\r\n植物之間的距離是 100 像素。"
      2-3 Artist Functions 12 a: "函式（Functions）很適合用來重複繪製複雜圖案。\\\r\n\\\r\n你可以使用 `draw
        a flower`（畫個花朵）函式將播種盒上剩餘的圖案填滿嗎？\\\r\n植物之間的距離是 100 像素。"
      2-3 Artist Functions 12: "函式（Functions）很適合用來重複繪製複雜圖案。\\\r\n\\\r\n你可以使用 `draw
        a flower`（畫個花朵）函式將播種盒上剩餘的圖案填滿嗎？\\\r\n植物之間的距離是 100 像素。"
      2-3 Artist Functions 2: "函式（Functions）能讓你能夠製作一個屬於自己的新積木！\\\r\n\\\r\n我們已經把繪製一個正方形所需要的所有積木放到一個名叫
        `draw a square` 的函式裡。這一次，使用 `draw a square` 函式來製作個眼鏡。\n\\\r\n\\\r\n鏡片外框之間的距離為
        75 像素。"
      2-3 Artist Functions 3: "編輯 draw a square（畫個正方形）函式，用 115 像素的邊長來畫出較大的鏡片。\\\r\n\\\r\n正方形之間的間隔距離為
        45 像素。"
      2-3 Artist Functions 4: 現在，把這個函式放進迴圈來畫出這 3 個正方形。
      2-3 Artist Functions 9: "**自由發揮：**這裏有個 draw a snowflake（畫個雪花）函式。\n用它來實現一個冬季場景！\\\r\n\\\r\n這是一個自由發揮的關卡，所以沒有要解決的問題，玩得愉快！"
      2-3 Artist Loops 1: |-
        你可以做出邊長 100 像素的六邊形嗎？
        記住，這代表著你只需要轉 60 度。
      2-3 Artist Loops 2: 現在用一個重複積木把圖案畫出來。
      2-3 Artist Loops New 1: "讓我們來畫個機器人的頭吧！你能做出一個邊長為 100 像素的正方形嗎？\\\r\n\\\r\n<br/>\\\r"
      2-3 Artist Loops New 10: 現在我們用迴圈來把一堆的 V 連接在一起。
      2-3 Artist Loops New 11: "是時候搞出個名堂了！\n\\\r\n\\\r\n重建上個關卡的程式，不過這次在迴圈裡添加向左轉 30
        度的程式。然後將重複 8 次改成 24 次。"
      2-3 Artist Loops New 12: 畫一個邊長為 100 畫素的鑽石圖形。
      2-3 Artist Loops New 13: "我們會從一些程式（灰色）開始來建立一個菱形。\\\r\n\\\r\n循環這些灰色的程式來建立有趣的圖案！"
      2-3 Artist Loops New 14: "玩玩這個畫菱形的程式，看看你可以畫出什麼圖案。 \\\r\n\\\r\n試著修改轉向的角度，還有循環的次數。"
      2-3 Artist Loops New 15: "現在，畫你喜歡的任何東西！\\\r\n<br/><br/>\\\r\n\\\r"
      2-3 Artist Loops New 2: "這個關卡和前一關差不多，不過這次，我們只可以用 1 個`移動-向前`積木，還有 1 個`轉向`積木。\\\r\n\\\r\n你可以使用`重複`積木來解決這個問題嗎？"
      2-3 Artist Loops New 9: 畫出一個簡單的 V（兩邊的長度都是 50 像素）以完成這個箭頭符號。
      2-3 Artist Nested Loops 1: "你之前已經用過迴圈來畫圖形，但現在我們要把迴圈放到另一個迴圈裡！\\\r\n\\\r\n放置一個`重複`積木，把工作區上的所有程式包住以畫出這個圖案。\\\r\n\\\r\n<br/>\\\r\n\\\r"
      2-3 Artist Nested Loops 10: 循環這個程式 12 次來完成這個圖案。
      2-3 Artist Nested Loops 11: 循環這個程式 4 次來完成這個圖案。每繞完一圈就轉向 90 度。
      2-3 Artist Nested Loops 12: 循環這個程式 12 次來完成這個漩渦。
      2-3 Artist Nested Loops 2: "現在循環畫出這個三角形 6 次。\n\\\r\n\\\r\n每畫出一次，需要轉向 60 度後再畫下一個。"
      2-3 Artist Nested Loops 3: "你需要循環這個三角形 12 次才能畫出個圖案。\\\r\n\\\r\n用一圈 360 度除以圖形數量
        12，就可以知道每個形狀畫完後要轉向的角度是多少了。"
      2-3 Artist Nested Loops 4: "循環這個菱形 12 次以畫出一朵花！\\\r\n\\\r\n注意：我們在循環菱形 12 次所用的角度，和之前循環三角形
        12 次所使用的角度是一樣的。\\\r\n你知道在每次畫出圖樣後，要轉多少角度嗎？"
      2-3 Artist Nested Loops 5: "用巢狀迴圈來畫出這棟大樓的窗戶。\\\r\n\\\r\n這些窗戶邊長為 20 像素，間距為 20
        像素。"
      2-3 Artist Nested Loops 6: "這隻恐龍的尾巴上有 8 根尖刺。\\\r\n\\\r\n每個尖刺有 30 像素長。\\\r\n\\\r\n將三角形循環
        8 次，並確保在畫出每個三角形之後向前跳！"
      2-3 Artist Nested Loops 7: "循環這個三角形 10 次來畫出這個太陽。\\\r\n\\\r\n你會需要在每次畫三角形後移動然後轉向。\n\\\r\n\\\r\n想一想，每次轉向的角度是多少，角度
        = 一圈的度數除以三角形的個數。"
      2-3 Artist Nested Loops 8: |-
        現在我們來添加一些草到圖片上。

        每簇草的間隔距離為 50 像素。
      2-3 Artist Nested Loops 9: "再加一朵花我們就完成這幅圖囉。\\\r\n\\\r\n循環這個菱形 12 次來畫出這朵花。"
      2-3 Artist Nested Loops Free Play: 自由發揮，使用巢狀迴圈畫些有趣的東西。
      2-3 Bee Conditionals 11: "我想知道那裡有些什麼！\\\r\n\\\r\n幫忙讓我在院子裡飛翔，並收集花朵中的花蜜。 "
      2-3 Bee Conditionals 13: "這裡也太多活要做了吧！\\\r\n\\\r\n使用你所學到的來收集所有花蜜及蜂蜜。"
      2-3 Bee Conditionals 14: |-
        我們把所有東西都放在一起吧！

        利用你學過的技能來幫我收集花蜜，用的積木愈少愈好。

        不要忘了在最後幫它們釀成蜂蜜。
      2-3 Bee Conditionals 15: "不陌生吧，這種樓梯模式的關卡。\\\r\n\\\r\n你可以只在有花蜜的花朵上採集嗎？用的積木愈少愈好。"
      2-3 Bee Conditionals 2: "我是一隻蜜蜂！\\\r\n\\\r\n\\\r\n使用最少的積木幫我採集到花朵中的所有花蜜。"
      2-3 Bee Conditionals 3: "仔細收集花蜜！\\\r\n\\\r\n幫我收集花蜜及蜂蜜，用的積木愈少愈好。  "
      2-3 Bee Conditionals 5: "這些神奇的紫花又開始變化了！\\\r\n\\\r\n每次你在過這個關卡時，紫色的花上可能會有 1 個花蜜，或是什麼也沒有…但除非你開始運行程式，否則你不會知道確切的數量！\\\r\n\\\r\n小心不要在沒有任何花蜜的花朵上採集。\\\r\n你必須先用`如果花蜜…`積木檢查看看是否花蜜數等於
        1。"
      2-3 Bee Conditionals Assessment 1: "**評量：**收集所有的花蜜。\\\r\n小心，不要採集沒有花蜜的紫花。"
      2-3 Bee Debugging 1: "這些積木真是讓我一陣錯亂！\\\r\n\\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。"
      2-3 Bee Debugging 10: "這個關卡讓我腦袋轉個不停！\n\\\r\n\\\r\n修正錯誤（可能不只一個）來收集所有的花蜜及蜂蜜。"
      2-3 Bee Debugging 2: "你可以找到是哪兒出了問題嗎？\\\r\n\\\r\n改正\n錯誤（可能不只一個）並收集到全部花蜜。"
      2-3 Bee Debugging 3: "真是折騰人！\\\r\n\\\r\n修正錯誤（可能不只一個）並收集全部的花蜜。"
      2-3 Bee Debugging 5: "那花看起來真美味！\\\r\n\\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。\\\r\n現在你可以同時使用運行和步進。"
      2-3 Bee Debugging 6: "真是甜蜜的挑戰啊！\\\r\n\\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。"
      2-3 Bee Debugging 9: "有點耐心！\\\r\n\\\r\n你需要修復程式裡的一些問題，才能夠收集所有的花蜜和蜂蜜。"
      2-3 Bee Debugging Assessment 1: "**評量：**是時候看看你學得如何了！\\\r\n\\\r\n改正錯誤（可能不只一個），收集全部的花蜜及蜂蜜。"
      2-3 Bee Functions 1: "函式是一段程式碼，用來執行某個任務。\\\r\n\\\r\n請使用 `get 2 nectar`（採集 2
        個花蜜）函式，從每一朵花中採集花蜜。"
      2-3 Bee Functions 10: "紫花的花蜜會在每次程式運行變成 1 或 0 個。\\\r\n\\\r\n創建一個函式，讓它可以只在有花蜜的紫花中，收集花蜜。"
      2-3 Bee Functions 2: "函式是執行特定任務的一串程式碼。\\\r\n\\\r\n用 `get 5` 這個函式來一次採集 5 個花蜜。"
      2-3 Bee Functions 4: "`Move and get nectar`（移動並採集花蜜）函式讓蜜蜂轉向、收集花蜜，接著再讓蜜蜂轉向回到起始點。\\\r\n\\\r\n使用這個函式來收集所有的花蜜。"
      2-3 Bee Functions Assessment 1: "**評量：**用給定的函式從每朵花上採集花蜜。"
      2-3 Bee Functions Assessment 2: "**評量：** 創建一個函式，功能是轉向，向前移動，釀造 3 個蜂蜜，最後讓蜜蜂回到一開始的位置
        。"
      2-3 Bee Loops 1: "那些花看起來真是香甜可口！\\\r\n\\\r\n從每個花朵上採集花蜜，用的積木愈少愈好。"
      2-3 Bee Loops 13: "**評量：**使用最少量的積木來收集所有的花蜜。"
      2-3 Bee Loops 3A: 使用一個`重複`迴圈來收集所有的花蜜。
      2-3 Bee Loops 3B: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      2-3 Bee Loops 4: "蜜蜂就是那麼忙！\\\r\n\\\r\n幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。"
      2-3 Bee Loops 4A: "在這關中，迴圈應該進行多少次？\\\r\n\\\r\n迴圈是你的朋友！用一些迴圈來減少積木使用數量，並完成這個關卡。"
      2-3 Bee Loops 5: "這個圖形的路徑不同於其他的圖形。\\\r\n\\\r\n你能收集到花蜜嗎？用的積木愈少愈好。"
      2-3 Bee Loops 7: "多麼美麗的一片花田啊！\\\r\n\\\r\n幫助蜜蜂到每朵花上參觀一下。\\\r\n\\\r\n你能在 7 個積木內完成嗎？"
      2-3 Bee Loops 8: |-
        這些紫色的花在每次關卡運行時，就會有不同的花蜜數量。

        使用`當花蜜…`迴圈來收集到所有的花蜜。

        只要條件判斷後是 true（剩下的花蜜數 > 0），這個迴圈就會不斷循環。
      2-3 Bee Loops Assessment 1: "**評量：**使用一個`當…`迴圈來採集這些花朵上的所有花蜜。"
      2-3 Maze 1: "你可以幫我抓住那頑皮的豬嗎？\n\n把幾個`移動-向前`積木放到`當運行時`積木的下面，然後點擊「運行」。 "
      2-3 Maze 12 - One Move Block: "讓我抓到那隻卑鄙的豬！這一次，你只可以使用一個`移動-向前`積木…\\\r\n\\\r\n啊，仔細看，你有看到其它可以幫你抓到豬的積木嗎？"
      2-3 Maze 12: "哇嗚，神奇的積木出現啦！利用`重複`積木，你可以讓一段程式不斷的循環執行。\\\r\n\\\r\n你能在`重複`積木裡只用上一個`移動-向前`積木，透過迴圈的方式來抓到這隻豬嗎？"
      2-3 Maze 13: 讓我抓到那隻豬！這一次，你只能用 1 個`移動-向前`積木。
      2-3 Maze 15: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      2-3 Maze Loops 18: |-
        使用最少的積木帶我吃到向日葵！

        試試把一個`重複`迴圈放到另一個`重複`迴圈裡頭，這樣可以減少積木的使用次數。
      2-3 Maze Loops 19: "我們來把它帶到另一個層次！\n\\\r\n\\\r\n使用迴圈，讓我吃到向日葵，用愈少積木愈好！"
      2-3 Maze Loops Assessment 1: "**評量：**讓我吃到向日葵，但只能用 5 個積木！ "
      4-5 Artist 1: "請幫我畫完我的箱子。(每一條線的長度是 300 像素) \\\r\n\\\r"
      4-5 Artist 10: 點擊「運行」來試試程式，接著，重複它指定次數來完成這個圖案，每次使用不同的顏色。
      4-5 Artist 11: "完成這些綠色的線。\\\r\n\\\r\n它們的長度是 300 像素，線條與線條之間的距離為 15 像素。"
      4-5 Artist 2: 使用`重複`積木來循環這個程式，以完成這個正方形。
      4-5 Artist 3.5: "想一想，當你運行這個程式時會發生什麼事（你也可以直接點擊「運行」來看看）。\\\r\n\\\r\n接著，重複它一定的次數來完成這個圖形！"
      4-5 Artist 3: "這個長方形花圃的周長是 600。\\\r\n長邊的長度是 200。\\\r\n\\\r\n畫出這個長方形，用的積木愈少愈好。"
      4-5 Artist 4: "一個圓（圈）是多少度？\\\r\n藉由迴圈來創造一個彩色的圓。"
      4-5 Artist 5: 我們可以把「???」換成什麼，殭屍才可以用提供的迴圈完成這個圖案？
      4-5 Artist 6: 這個正三角形的三個角都是 60 度，三個邊都是 200 像素。完成這個圖形。
      4-5 Artist 7: "這個直角三角形的角度分別是 30、60、90 度。斜邊的長度是 200 像素。\\\r\n\\\r\n完成這個圖形。"
      4-5 Artist 8: "足球場的半場線與邊線_互相垂直_。\\\r\n這個長方形的周長是 800 像素，長邊是 240 像素。它的高是多少？\\\r\n\\\r\n把邊線與半場線畫出來。"
      4-5 Artist 9: "畫出圖形的右半邊，以讓這個設計對稱。\\\r\n這是個正三角形，邊長為 50 像素。"
      4-5 Artist Assessment 1: "**評量：**用迴圈畫出正三角形。每一邊長 300 像素。"
      4-5 Artist Free Draw 1: 隨便畫吧！把你的靈感變成創作！
      4-5 Artist Patterns 1: "使用迴圈來畫出這個正方形。\\\r\n\\\r\n每個邊長是 20 像素。"
      4-5 Artist Patterns 10: "這個是用來畫出 2 列六邊形的程式 - 循環整個程式 4 次就可以畫出整個蜂窩。\\\r\n\\\r\n你需要在每次的循環之後向後跳躍
        120 像素，以確保小藝術家不會跑出畫面。"
      4-5 Artist Patterns 11: 你需要重複迴圈多少次才可以畫出一個半圓？
      4-5 Artist Patterns 12: |-
        如果要建立另一個像這樣的迴圈，不過把左轉改成右轉，那會發生什麼事呢？

        你可以重複那些程式來畫出波浪嗎？
      4-5 Artist Patterns 13: "現在我們來循環做這件 4 次以建立這個畫框。當心轉角處 - 你不能直接轉向 90 度！\\\r\n\\\r\n如果循環
        3 度 60 次會產生一個半圓，這些程式中的哪些積木可以額外畫出四分之一圓作為畫框圓角呢？"
      4-5 Artist Patterns 2: "如果你放置一個正方形迴圈到其它的迴圈裡，我們稱它為巢狀迴圈（nested loop）。\\\r\n\\\r\n你需要在迴圈最外層添加什麼積木，讓所有
        15 個正方形靠在一起且排成一直線？"
      4-5 Artist Patterns 3: |-
        現在讓我們加深難度！
        我們已經將整個程式積木嵌套在另一個迴圈內，但你需要讓小藝術家回到初始位置來畫出下一行。要在最外層迴圈下添加哪個積木，才能畫完整個網格？
      4-5 Artist Patterns 4: "這個菱形的邊長為 50 像素，角度分別是 120 及 60 度。\\\r\n\\\r\n用一個迴圈把它畫出來。"
      4-5 Artist Patterns 5: "重複這個程式來製作一排 6 個的菱形。\\\r\n\\\r\n注意我們已修改菱形的程式，將重複次數從 2
        改成 3，你覺得那是為什麼？"
      4-5 Artist Patterns 6: "你需要重複這個積木多少次才能畫出網格上的所有菱形？\\\r\n\\\r"
      4-5 Artist Patterns 7: "讓我們修改上一題的代碼來畫出這個更複雜的圖案。注意現在菱形是如何重疊的，試著把第一個「跳躍-向後」積木上的數值從
        100 改成 50（一半的距離）- 現在藝術家應該將第二個「跳躍-向後」上的數值改成多少？\\\r\n\\\r"
      4-5 Artist Patterns 8: 使用一個迴圈來畫出這個六邊形，它的每個邊長是 40 像素，每個角度是 60 度。
      4-5 Artist Patterns 9.5: "讓我們循環這段程式來畫出兩列六邊形。\\\r\n\\\r\n注意第二列是如何被移動到右邊的。"
      4-5 Artist Patterns 9: "現在重複這個程式 3 次來畫出這列圖案。\\\r\n\\\r\n每個六邊形的對角距離為 80 像素。"
      4-5 Artist Patterns Free Play: 自由發揮 - 試著親手做一個自己的圖案！
      4-5 Bee Conditionals 1: "這雲遮住了我的視線！\n\\\r\n\\\r\n檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。\\\r\n注意，它會變來變去的！"
      4-5 Bee Conditionals 2: "雲愈來愈多了！\\\r\n\\\r\n檢查每個雲，在你採集花蜜前看看是不是有花朵藏在裡頭。\\\r\n\\\r\n記住：\n雲底下藏的東西不見得一樣！"
      4-5 Bee Conditionals 4: "有時雲裡面有花朵，有時雲裡藏著蜂窩！\\\r\n\\\r\n使用`如果…否則`積木，如果是花朵就收集花蜜。\\\r\n否則，就釀造蜂蜜（因為它是蜂窩）。"
      4-5 Bee Conditionals 5: "雲下藏的不是花朵就是蜂窩！\\\r\n\\\r\n用`如果…否則`積木，如果是花的話就採集花蜜，\\\r\n否則，就釀造蜂蜜。"
      4-5 Bee Conditionals 6: "我不確定這朵花裡有多少花蜜，也許是 1 或 2 或 3 個。\\\r\n\\\r\n組合這個條件判斷積木（`如果`和`如果…否則`）來取得花朵中實際的花蜜數。\n\\\r\n\\\r\n記住，花蜜的數量會在你每次運行之後改變！"
      4-5 Bee Conditionals 7: |-
        這些花朵上可能有 3、2 或 1 個花蜜。

        完成 `check purple flower`（檢查紫花）這個函式，並使用它來收集花朵上的所有花蜜。
      4-5 Bee Conditionals 8: "寫個 `check flower make honey`（檢查花朵釀造蜂蜜）的函式。\\\r\n\\\r\n你的函式應該要檢查紫花裡有多少的花蜜（1-3
        不等）並採集起來。\\\r\n然後，再向前移動釀造蜂蜜。"
      4-5 Bee Conditionals Assessment 1: "**評量：**雲朵中可能隱藏著帶有花蜜的花朵，或是可裝蜂蜜的蜂窩。\\\r\n\\\r\n完成這個`get
        nectar or make honey`的函式，然後調用它來收集花蜜或蜂蜜。（註：get nectar or make honey 是採到花蜜或釀成蜂蜜的意思）\\\r"
      4-5 Bee Debugging 1: |-
        這些積木真是讓我一陣錯亂！

        你可以修正它們嗎？
      4-5 Bee Debugging 6: "在你每次運行時，紫色的花朵都會有不同數量的花蜜。\\\r\n\\\r\n修正這個程式以在每次運行時都能採集到花朵上的所有花蜜。"
      4-5 Bee Debugging Assessment 1: "**評量：**修正程式碼。"
      4-5 Bee Nested Loops 2: "從每朵花中收集所有的花蜜。\\\r\n\\\r\n需使用巢狀迴圈。 "
      4-5 Bee Nested Loops 4: "收集每一朵花的花蜜，並在每一個蜂窩製造蜂蜜。 \\\r\n\\\r\n使用巢狀迴圈。 "
      4-5 Bee Nested Loops Assessment 1: "**評量：**用迴圈收集所有的花蜜及蜂蜜。"
      4-5 Maze 7: "讓殭屍快一點吃到向日葵！\\\r\n\\\r\n你能用 11 個以下的積木來完成這個關卡嗎？"
      4-5 Maze 9: "現在我們有個新的積木叫做`重複直到`。\\\r\n這可以讓我們持續循環指令，直到殭屍吃到向日葵。\\\r\n\\\r\n使用新的`重複直到`積木來完成這個關卡，用的積木愈少愈好。"
      4-5 Maze Assessment 1: "**評量：**用最少的程式積木取得向日葵。"
      4-5 Maze Conditionals 1: 使用`重複 直到`積木讓殭屍吃到向日葵。
      4-5 Maze Conditionals 10: "你可以只用 3 個積木來幫助殭屍解決更複雜的關卡嗎？ \\\r\n\\\r\n如果你成功了，不管怎樣曲折的路他都能克服！"
      4-5 Maze Conditionals 2: 使用`重複 直到`積木讓殭屍吃到向日葵。
      4-5 Maze Conditionals 3: "使用`如果`積木來幫我決定何時要轉向。\\\r"
      4-5 Maze Conditionals 4: 好啦，這個關卡的解法和上一關很像，但是請記住你是怎麼應用`如果`、`重複直到`積木的。
      4-5 Maze Conditionals 5: "「偶想... 粗... 向日葵！」\\\r\n\\\r\n使用`如果`陳述式，讓殭屍用最少的積木到達向日葵那裡。"
      4-5 Maze Conditionals 6: "「偶想... 粗... 向日葵。」\\\r\n\\\r\n使用`如果`積木，讓殭屍用最少的積木到達向日葵那裡。"
      4-5 Maze Conditionals 7: 這個關卡的解法並不是特別困難，只不過請當心噬殭花！
      4-5 Maze Conditionals 8: "`如果…否則`積木可以檢查一個狀況，接著執行一個操作或另一個。\\\r\n\\\r\n使用這個新積木，讓我吃到向日葵。"
      4-5 Maze Conditionals 9: "再練習一次如何使用`如果…否則`積木！\\\r\n\\\r\n試試先用手指頭追蹤看看，再寫出程式，你能不能一次就成功。"
      4-5 Maze Conditionals Assessment 1: "**評量：**用一個`重複直到`和`如果/否則`積木讓我到向日葵的位置，使用的積木愈少愈好。"
      4-5 Nested Loops 1: "完成程式碼來畫出這些三角形。第一個三角形的程式碼已經幫你建好了。提示：3 個三角形旋轉了 360 度。\\\r\n\\\r"
      4-5 Nested Loops 11: "你可以用巢狀迴圈來畫出在人行道上的 10 個正方形嗎？\\\r\n\\\r\n每個正方形的邊長為 30 像素。"
      4-5 Nested Loops 12: 你可以用巢狀迴圈來畫出這 36 個三角形嗎？
      4-5 Nested Loops 2: "現在將這個迴圈嵌套進另一個迴圈內，以畫出 10 個三角形。 \\\r\n這就是所謂的「巢狀式迴圈」。  "
      4-5 Nested Loops 3: "把起始程式碼嵌進另一個迴圈中來畫出一個太陽。\\\r\n\\\r\n要能夠製作出這樣酷炫的圖案，你必須在轉向之前向前跳一段距離。"
      4-5 Nested Loops 5: 重複執行已有的程式來畫出一個風車。
      4-5 Nested Loops 6: 你可以藉由重複畫三角形的程式碼來畫出一個六邊形嗎？
      4-5 Nested Loops 7: "循環這個圖樣 10 次。\\\r\n\\\r\n你知道在每個圖樣畫完後要轉多少角度嗎？"
      4-5 Nested Loops 8: "重複這個圖案6次。\\\r\n\\\r\n你知道每次重複畫圖案時需要轉多少度？ "
      4-5 Nested Loops 9: 在鱷魚的嘴內畫出牙齒!
      4-5 Nested Loops Assessment 1: "\\*\\* 評量：\\*\\* 使用一個巢狀迴圈來完成這個圖案。"
      4-5 While Loops 1: 把我移動到洞口，然後使用`填充`積木，鏟 2 鏟土填平它。
      4-5 While Loops 2: 把我移動到土堆，然後使用`移除 1`積木，挖除 5 鏟土。
      4-5 While Loops 3: |-
        盡可能使用最少的積木來完成這個關卡！

        讓我移動到土堆上並把土鏟平，再移動到坑洞上並把洞填滿。
      4-5 While Loops 4: "哇，瞧瞧這兒！\\\r\n\\\r\n我不知道要用多少鏟土才可以把它填平。\\\r\n你可以寫一個程式，讓它不斷的用`填充`積木填土，直到地面變平坦嗎？
        \ "
      AWS link: "# 使用這個工具的東西"
      Alien Defender: "**專案點子**：在 Play Lab 裡設計一個獨一無二的遊戲！"
      Alien Defender_2018: "**專案點子**：在 Play Lab 裡設計一個獨一無二的遊戲！"
      App Lab test: <a href="https://docs.google.com/document/d/1HgSfQeUI1zxo-3bL-9jhff0jI2um2A-3vwpvy3JAD38"
        target="_blank">創新專案</a>
      AppLab Intro 4 - Video onEvent: "# onEvent 的用法"
      AppLab Intro 4 - Video share your work: "# 創造並分享你的 App！"
      AppLab Intro 4 - Video share: "# 創造並分享你的 App！"
      Artist Autorun Test: 現在，把這個函式放進迴圈來畫出這 3 個正方形。
      Artist Inspiration: |-
        <img src="https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png"
        width="250px"/>

        **自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！

        如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。

        注意：我們用了`設定透明度`積木來製作 petals（花瓣）向外褪色的效果。
      Bergeron Robot Maze1: "你可以幫我抓住那頑皮的豬嗎？\n\n把幾個`移動-向前`積木放到`當運行時`積木的下面，然後點擊「運行」。 "
      CSD - Predict - Array Length List Printing: "＃迴圈\n—在迴圈中使用列表\\\r\n\\\r\n用迴圈最常見的方法是和列表一起使用。在這個例子當中情況依照列表。\\\r\n\\\r\n什麼會顯示在控制台中呢？"
      CSD - Predict List Accessing: "# 預測\\\r\n\n\\\r\n下方的程式有 4 個東西會被紀錄到主控台，你覺得這個程式在主控台上會輸出些什麼結果？\\\r"
      CSD - for loop - on off: "＃迴圈及 Color LEDs\\\r\n\\\r\n迴圈可以讓一些對全部`colorLed`做的事情更簡單\\\r\n\\\r\n**開始程式：**有兩個按鈕一個是開起全部的`colerLeds`和另一個是關掉全部的。\\\r\n\\\r\n你可以填入所有的功能函數到每個用到一個迴圈的任務來寫你的演算法嗎？"
      CSD For Loops - Check For Understanding: "＃檢入\\\r\n\\\r\n在這個框框中下面解釋這迴圈的三種不同的部分。為什麼每個都很重要？\\\r"
      CSD U1 - PixFilter Full: "# 操作說明移到這裡"
      CSD U3 - Booleans Video: "# 布林表達式影片"
      CSD U3 - Simple Counter Predict: "# \n\n計數器模型（Counter Pattern）\\\r\n\\\r\n這個模型（Pattern）在程式設計中相當的重要。\\\r\n\\\r\n!\\[](\\<<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56>\nPM.png>)\\\r\n
        \   \\\r\n這會用來讓變數增加 1。你可能會稱之為 **計數器模型**，因為這可以讓變數往上數。\n我們很常使用到這個模型，尤其是在繪圖一類的迴圈。我們來看看它長得怎樣\\\r\n\\\r\n\n#
        做做這個\\\r\n\n\\\r\n這個程式會創造出\n一個變數`counter`，然後使用**計數器模型**來讓它開始計數。\n當你運行程式時，你覺得在畫面會出現什麼？\\\r\n\\\r\n\\*\n**解讀程式**
        然後預測輸出會是怎樣。\\\r\n\\*\n**運行程式** 來檢查是否和你的預測一致。\\\r\n\n-   **跟隔壁的人討論看看**.\n    看你能不能解釋你觀察到了什麼？\\\r\n
        \   \\\r"
      CSD U3 - Simple Counter Predict_2018: "# \n\n計數器模型（Counter Pattern）\\\r\n\\\r\n這個模型（Pattern）在程式設計中相當的重要。\\\r\n\\\r\n!\\[](\\<<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56>\nPM.png>)\\\r\n
        \   \\\r\n這會用來讓變數增加 1。你可能會稱之為 **計數器模型**，因為這可以讓變數往上數。\n我們很常使用到這個模型，尤其是在繪圖一類的迴圈。我們來看看它長得怎樣\\\r\n\\\r\n\n#
        做做這個\\\r\n\n\\\r\n這個程式會創造出\n一個變數`counter`，然後使用**計數器模型**來讓它開始計數。\n當你運行程式時，你覺得在畫面會出現什麼？\\\r\n\\\r\n\\*\n**解讀程式**
        然後預測輸出會是怎樣。\\\r\n\\*\n**運行程式** 來檢查是否和你的預測一致。\\\r\n\n-   **跟隔壁的人討論看看**.\n    看你能不能解釋你觀察到了什麼？\\\r\n
        \   \\\r"
      CSD U3 - Simple Counter Predict_2019: "# \n\n計數器模型（Counter Pattern）\\\r\n\\\r\n這個模型（Pattern）在程式設計中相當的重要。\\\r\n\\\r\n!\\[](\\<<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56>\nPM.png>)\\\r\n
        \   \\\r\n這會用來讓變數增加 1。你可能會稱之為 **計數器模型**，因為這可以讓變數往上數。\n我們很常使用到這個模型，尤其是在繪圖一類的迴圈。我們來看看它長得怎樣\\\r\n\\\r\n\n#
        做做這個\\\r\n\n\\\r\n這個程式會創造出\n一個變數`counter`，然後使用**計數器模型**來讓它開始計數。\n當你運行程式時，你覺得在畫面會出現什麼？\\\r\n\\\r\n\\*\n**解讀程式**
        然後預測輸出會是怎樣。\\\r\n\\*\n**運行程式** 來檢查是否和你的預測一致。\\\r\n\n-   **跟隔壁的人討論看看**.\n    看你能不能解釋你觀察到了什麼？\\\r\n
        \   \\\r"
      CSD U3 - images - Embed Project: 成果專案範例
      CSD U3 Counters explaining counters contained 2: "# \n\n計數器模型（Counter Pattern）\\\r\n\\\r\n這個模型（Pattern）在程式設計中相當的重要。\\\r\n\\\r\n!\\[](\\<<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56>\nPM.png>)\\\r\n
        \   \\\r\n這會用來讓變數增加 1。你可能會稱之為 **計數器模型**，因為這可以讓變數往上數。\n我們很常使用到這個模型，尤其是在繪圖一類的迴圈。我們來看看它長得怎樣\\\r\n\\\r\n\n#
        做做這個\\\r\n\n\\\r\n這個程式會創造出\n一個變數`counter`，然後使用**計數器模型**來讓它開始計數。\n當你運行程式時，你覺得在畫面會出現什麼？\\\r\n\\\r\n\\*\n**解讀程式**
        然後預測輸出會是怎樣。\\\r\n\\*\n**運行程式** 來檢查是否和你的預測一致。\\\r\n\n-   **跟隔壁的人討論看看**.\n    看你能不能解釋你觀察到了什麼？\\\r\n
        \   \\\r"
      CSD U3 Counters explaining counters contained 2_2018: "# \n\n計數器模型（Counter Pattern）\\\r\n\\\r\n這個模型（Pattern）在程式設計中相當的重要。\\\r\n\\\r\n!\\[](\\<<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56>\nPM.png>)\\\r\n
        \   \\\r\n這會用來讓變數增加 1。你可能會稱之為 **計數器模型**，因為這可以讓變數往上數。\n我們很常使用到這個模型，尤其是在繪圖一類的迴圈。我們來看看它長得怎樣\\\r\n\\\r\n\n#
        做做這個\\\r\n\n\\\r\n這個程式會創造出\n一個變數`counter`，然後使用**計數器模型**來讓它開始計數。\n當你運行程式時，你覺得在畫面會出現什麼？\\\r\n\\\r\n\\*\n**解讀程式**
        然後預測輸出會是怎樣。\\\r\n\\*\n**運行程式** 來檢查是否和你的預測一致。\\\r\n\n-   **跟隔壁的人討論看看**.\n    看你能不能解釋你觀察到了什麼？\\\r\n
        \   \\\r"
      CSD U3 Counters explaining counters contained 2_2019: "# \n\n計數器模型（Counter Pattern）\\\r\n\\\r\n這個模型（Pattern）在程式設計中相當的重要。\\\r\n\\\r\n!\\[](\\<<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56>\nPM.png>)\\\r\n
        \   \\\r\n這會用來讓變數增加 1。你可能會稱之為 **計數器模型**，因為這可以讓變數往上數。\n我們很常使用到這個模型，尤其是在繪圖一類的迴圈。我們來看看它長得怎樣\\\r\n\\\r\n\n#
        做做這個\\\r\n\n\\\r\n這個程式會創造出\n一個變數`counter`，然後使用**計數器模型**來讓它開始計數。\n當你運行程式時，你覺得在畫面會出現什麼？\\\r\n\\\r\n\\*\n**解讀程式**
        然後預測輸出會是怎樣。\\\r\n\\*\n**運行程式** 來檢查是否和你的預測一致。\\\r\n\n-   **跟隔壁的人討論看看**.\n    看你能不能解釋你觀察到了什麼？\\\r\n
        \   \\\r"
      CSD U3 Counters explaining counters: "# \n\n計數器模型（Counter Pattern）\\\r\n\\\r\n這個模型（Pattern）在程式設計中相當的重要。\\\r\n\\\r\n!\\[](\\<<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56>\nPM.png>)\\\r\n
        \   \\\r\n這會用來讓變數增加 1。你可能會稱之為 **計數器模型**，因為這可以讓變數往上數。\n我們很常使用到這個模型，尤其是在繪圖一類的迴圈。我們來看看它長得怎樣\\\r\n\\\r\n\n#
        做做這個\\\r\n\n\\\r\n這個程式會創造出\n一個變數`counter`，然後使用**計數器模型**來讓它開始計數。\n當你運行程式時，你覺得在畫面會出現什麼？\\\r\n\\\r\n\\*\n**解讀程式**
        然後預測輸出會是怎樣。\\\r\n\\*\n**運行程式** 來檢查是否和你的預測一致。\\\r\n\n-   **跟隔壁的人討論看看**.\n    看你能不能解釋你觀察到了什麼？\\\r\n
        \   \\\r"
      CSD U3 abstraction race template: 賽跑遊戲範本
      CSD U5 black white images pixelation 2: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉\\\r\n\\\r\n!\\[](\\<<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47>\nPM.png>)"
      CSD U5 black white images pixelation 2_2018: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉\\\r\n\\\r\n!\\[](\\<<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47>\nPM.png>)"
      CSD U5 black white images pixelation 2_2019: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉\\\r\n\\\r\n!\\[](\\<<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47>\nPM.png>)"
      CSD U5 black white images pixelation 3: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉"
      CSD U5 black white images pixelation 3_2018: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉"
      CSD U5 black white images pixelation 3_2019: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉"
      CSD U5 black white images pixelation 4: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉"
      CSD U5 black white images pixelation 4_2018: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉"
      CSD U5 black white images pixelation 4_2019: "# 做做看\\\r\n\n\\\r\n使用像素化工具來畫出笑臉"
      CSD U5 black white images pixelation: "# 做做看\\\r\n\n\\\r\n輸入 0 或是 1 來完成這個 X
        形的圖案，如果你想要清除重來，可以點擊「可讀格式」。"
      CSD U5 black white images pixelation_2018: "# 做做看\\\r\n\n\\\r\n輸入 0 或是 1 來完成這個
        X 形的圖案，如果你想要清除重來，可以點擊「可讀格式」。"
      CSD U5 black white images pixelation_2019: "# 做做看\\\r\n\n\\\r\n輸入 0 或是 1 來完成這個
        X 形的圖案，如果你想要清除重來，可以點擊「可讀格式」。"
      CSD U5 collection UPS: "<img src=\"https://images.code.org/db7d21a8d28df27dee3449939038c7a9-image-1488501564775.jpg\"\nstyle=\"float:right;height:250px\">\\\r\n＃＃＃計畫一條路線\\\r\n\\\r\nRoutz是一家導航公司。它有全世界位置的地圖且知道當下有關交通情況的資訊。當你輸入一個你想到達的目的地，它會給你它能找到最棒的路線。\\\r\n\\\r\nRoutz想要增進它的資料庫來提供更棒的導航。你的工作是幫助公司哪個資料他可以搜集來改善那些導航。\\\r\n\\\r\n**哪些資料是Routz應該搜集來改善它的建議以及從哪裡它能得到這些資料？**\\\r\n\\\r"
      CSD U5 collection videos: "\\<img src=\"HTTPs\\://images.code.org/dbefd53cc9aaa2ee1c54f25afc88d860-image-1488492606296.jpg\"style=\"float:right;height:300px\">\\\r\n\\\r\n\n#
        # # 製作一個建議\\\r\n\n\\\r\nMeScreen 是一個使用者可以觀看上傳來自全世界的影片的一個網站。它有數以百萬計的影片和使用者以及每天新進的使用者。\\\r\n\\\r\nMeScreen
        每天建議最佳視頻給每個使用者。你的工作是收集有關於你的使用者和視頻來做出你能做的最棒建議。\\\r\n\\\r\n**你應該收集什麼樣的資訊以及你如何得到他們？**"
      CSD U5 color image: "# 用數字來油漆\\\r\n\n\\\r\n觀察下方的二進制代碼，使用 1 和 0 來創建密碼圖片，如果要繪製每一個方塊，點擊你要的顏色，再點擊方塊。\\\r\n\\\r\n\\\r\n`011
        011 011 011 011 011 011 011\n110 110`\\\r\n\\\r\n`011 011 111 111 111 011
        011 011 110 110`\\\r\n\\\r\n`011 111\n111 111 111 111 011 011 011 011`\\\r\n\\\r\n`011
        011 111 111 111 011 011 011 011\n011`\\\r\n\\\r\n`011 011 011 011 011 011
        011 010 011 011`\\\r\n\\\r\n`011 011 011\n011 011 011 010 010 010 011`\\\r\n\\\r\n`011
        011 011 011 011 011 010 010 010 011`\\\r\n\\\r\n`011\n011 011 011 011 011
        011 000 011 011`\\\r\n\\\r\n`001 001 001 010 010 010 010 000\n010 010`\\\r\n\\\r\n`001
        001 001 001 010 010 010 010 010 010`"
      CSD U6 Catch the Mouse: 嵌入式預測
      CSD U6 Catch the Mouse_2018: 嵌入式預測
      CSD U6 Catch the Mouse_2019: 嵌入式預測
      CSD U6 checkbox: 預測關卡
      CSD U6 colorLeds light pattern: "# \n\n燈光模型\\\r\n\\\r\n用眨眼、切換、顏色來創作你自己的燈光模型。"
      CSD U6 colorLeds light pattern_2018: "# \n\n燈光模型\\\r\n\\\r\n用眨眼、切換、顏色來創作你自己的燈光模型。"
      CSD U6 colorLeds light pattern_2019: "# \n\n燈光模型\\\r\n\\\r\n用眨眼、切換、顏色來創作你自己的燈光模型。"
      CSD U6 interval: 預測關卡
      CSD U6 interval_2018: 預測關卡
      CSD U6 interval_2019: 預測關卡
      CSD U6 iter predict bubbles: "![](https://images.code.org/52f474adbbc3bdd87aaae407c9ebf588-image-1515690462464.png)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 light pattern challenge: "# 燈光模型\\\r\n\n\\\r\n找個伙伴，把你們的燈光模型放在一起。\\\r\n\\\r\n設置這個
        app，讓使用者可以使用他們想要看到的燈光模型。你應該將你的每一種燈光樣式放到函式裡，讓程式變得比較簡易。"
      CSD U6 light pattern challenge_2018: "# 燈光模型\\\r\n\n\\\r\n找個伙伴，把你們的燈光模型放在一起。\\\r\n\\\r\n設置這個
        app，讓使用者可以使用他們想要看到的燈光模型。你應該將你的每一種燈光樣式放到函式裡，讓程式變得比較簡易。"
      CSD U6 light pattern challenge_2019: "# 燈光模型\\\r\n\n\\\r\n找個伙伴，把你們的燈光模型放在一起。\\\r\n\\\r\n設置這個
        app，讓使用者可以使用他們想要看到的燈光模型。你應該將你的每一種燈光樣式放到函式裡，讓程式變得比較簡易。"
      CSD U6 predict LED button: 嵌入式預測
      CSD U6 predict LED button_2018: 嵌入式預測
      CSD U6 predict LED button_2019: 嵌入式預測
      'CSD: Boolean Expressions': "# 布林表達式影片"
      'CSD: Introduction to the Draw Loop_2019': |-
        ## 考量的問題點

        -   draw 這個函式的功能是什麼？
      'CSD: Slider Example': "# RGB 滑桿\\\r\n\n\\\r\n接下來的二個關卡，你將會學習到使用滑桿來取得使用者的輸入值，你將創建這個滑桿來控制按鈕的顏色。在後面的教學內容中你就可以拿來控制燈光！"
      CSDU2 Color Blindness: "# 色盲過濾器\\\r\n\n\\\r\n\\\r\n\\\r"
      CSDU6 - Arrays - indexPractice: "# 索引練習（Index Practice）\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/d3b8a9275703944808bc832c02f19fda-image-1486501806089.09.45\nPM.png\"
        style=\"width: 150px; float: right\">\\\r\n\\\r\n**基本程式**已經提供，可以用來建立清單，名叫
        `colors`。\\\r\n\\\r\n\n-   使用`setProperty` 和顏色清單來改變 `background-color` 以畫出一道彩虹，變數
        `background-color`代表按鈕的顏色，我們已為你設定好了第一個。"
      CSDU6 - Arrays - length: "<img src=\"https://images.code.org/f02914c957acffecbadaa3646388d26c-image-1486499703151.33.50\nPM.png\"
        style=\"width: 200px; float:right\">\\\r\n\\\r\n\n# 清單長度（List Length）\\\r\n\n\\\r\n\\*\n**基本程式**
        已經提供，可以用來創建數個陣列。\\\r\n\\*\n**使用 `list.length` 和 `console.log`** 來決定每個陣列裡的項目數量，輸出的例子如下。"
      CSDU6 - for loop - winning num: "# 除錯\\\r\n\n\\\r"
      CSDU6 - lists - lists 5: "# 除錯\\\r\n\n\\\r"
      CSDU6 - timed loop question timed: 預測一下，當你運行程式時會發生什麼事？
      CSDU6 arrays rainbow: "# 索引練習（Index Practice）\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/d3b8a9275703944808bc832c02f19fda-image-1486501806089.09.45\nPM.png\"
        style=\"width: 150px; float: right\">\\\r\n\\\r\n**基本程式**已經提供，可以用來建立清單，名叫
        `colors`。\\\r\n\\\r\n\n-   使用`setProperty` 和顏色清單來改變 `background-color` 以畫出一道彩虹，變數
        `background-color`代表按鈕的顏色，我們已為你設定好了第一個。"
      CSDU6 frequency template: 做點什麼！
      CSDU6 frequency template_2018: 做點什麼！
      CSDU6 frequency template_2019: 做點什麼！
      CSDU6L06 - lists and colorLeds - Light Display: "# 閃爍\\\r\n\n\\\r\n讓燈光一閃一閃。
        \\\r\n\\\r"
      CSDU6L06 - lists and colorLeds - blink: "# 閃爍\\\r\n\n\\\r\n讓燈光一閃一閃。 \\\r\n\\\r"
      CSDU6L06 - lists and colorLeds - pulse: "# 脈衝\\\r\n\n\\\r\n讓燈光呈現脈衝的效果。\\\r\n\\\r"
      CSDU6L06 - lists and colorLeds -solo light pattern: "# \n\n燈光模型\\\r\n\\\r\n用眨眼、切換、顏色來創作你自己的燈光模型。"
      Calc Vars 2: 你能寫出一個表達式來以月為量計算的`年齡`嗎？
      'Challenge: Buzzer and LED': "# 挑戰\\\r\n\n\\\r\n開始這個挑戰前，和你的老師先確定一下。\\\r\n\\\r\n現在你知道要如何使用
        LED 和蜂鳴器，試著建立一個可以發出多種不同聲音並使用 LED 的 app。你可以製作一個鍵盤或是合成器，當你點擊不同的按鈕時，可以播放出不同的音效。"
      'Challenge: Input and UI': "# 停下來\\\r\n\n\\\r\n你已經到這一課的結尾了，在繼續之前，請向你的老師詢問是否可以開始進行挑戰關卡，這是個額外的挑戰，如果你有空的時候可以拿來鍛鍊你的技能。如果你沒有時間的話，也沒有關係！\\\r\n\\\r\n\n#
        \n\n挑戰\\\r\n\\\r\n移至 <a href=\"https://studio.code.org/p/applab\" target=\"_blank\">\nFull
        App Lab </a> 試著製作你自己的東西。"
      'Challenge: Lights Picker': "# 燈光模型\\\r\n\n\\\r\n找個伙伴，把你們的燈光模型放在一起。\\\r\n\\\r\n設置這個
        app，讓使用者可以使用他們想要看到的燈光模型。你應該將你的每一種燈光樣式放到函式裡，讓程式變得比較簡易。"
      'Challenge: List of Notes': "＃挑戰：隨機按鈕顏色\\\r\n\\\r\n在開始挑戰之前，請與您的老師聯繫。\\\r\n\\\r\n**起始碼：**在螢幕中為你提供一個陣列包含30個按鈕的名字（不包括「新模式」按鈕）。\\\r\n\\\r**寫程式：**每次當「新模式」按鈕被點擊時，在清單中至少有一個隨機按鈕設置為一個隨機的顏色。\\\r"
      'Challenge: Random Button Colors': "＃挑戰：隨機按鈕顏色\\\r\n\\\r\n在開始挑戰之前，請與您的老師聯繫。\\\r\n\\\r\n**起始碼：**在螢幕中為你提供一個陣列包含30個按鈕的名字（不包括「新模式」按鈕）。\\\r\n\\\r**寫程式：**每次當「新模式」按鈕被點擊時，在清單中至少有一個隨機按鈕設置為一個隨機的顏色。\\\r"
      Classroom Assessment Techniques: 下方連結是介紹設計與使用班級評量技巧的相關資源：
      Classroom Management Tips for School Computer Labs: "## \n\n電腦教室的管理策略\\\r\n\\\r\n\\\r\n如果你是個新的電腦老師，可以參考這
        7 個要點，以建立好教室常規，本文由 Angela Watson 概述。\n\\\r\n\\\r\n<br><br>"
      'Collaborative Learning and Group Work: Description and Strategies': '下方可以連結到康奈爾大學的教學卓越中心，當中提供了特定技術的小組學習方式，以幫助設計和實施小組工作活動：  '
      Color Blindness Filter: "# 色盲過濾器\\\r\n\n\\\r\n\\\r\n\\\r"
      Color Contrast Checker: "# 顏色對比\\\r\n\n\\\r\n因為它，我們才能夠看到和閱讀網頁上的內容。但有些人的視力差，有些人是色盲，你要怎麼為這些差異進行設計呢？\\\r\n\\\r\n有個最簡單的方法，就是在網站上使用能形成足夠的對比的不同顏色，來確保大部分的人都可以閱讀你的站台內容。\\\r\n\\\r\n<http://gomedia.com/zine/tutorials/rule-three-contrast-contrast-contrast/\r>\n\\\r\n\\\r\n\n#
        \n\n做做看\\\r\n\\\r\n\n-   使用顏色對比檢查器，看看你在站台使用的顏色是不是有足夠的對比度。"
      Considerations for the 1-to-1 Classroom: "## 1-1 教室\\\r\n\n\\\r\n如果你是初次管理有電腦的教室，參考這篇在教育週上的文章，其中概述了一些需要考量的要點。\\\r\n\\\r\n<br><br>"
      CoureE_HOC 2018 Level_7a: 您找到了水底廢墟。在沙岩中搜尋一個裡面有**海磷石** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png)
        寶藏的**箱子** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)。
      Course 4 Artist 1: "幫我畫個盒子。   \\\r\n（每個線段長度為 200 像素）\\\r\n\\\r\n<br/><br/>\\\r\n\\\r"
      Course 4 Artist 10: "<img src=\"https://images.code.org/c876143212d195192013582f57c6df04-image-1445625392518.36.18.png\"\nwidth=\"150px;\"
        style=\"mix-blend-mode: multiply;\" />\\\r\n\\\r\n**遊戲時間：**這兒有個程式能畫出有趣的圖形。
        \\\r\n\\\r\n如果把它重複個幾次，然後在每次的循環都轉向，會發生什麼事呢？\\\r\n\\\r\n注意當這個圖形的轉向到達了 **420
        度**時，就表示小畫家畫完了，它面對的方向會和一開始畫圖的方向不同，這個新的方向會是初始繪圖方向的_向右 60 度_。\\\r\n\\\r\n\n<hr/>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>重複
        4 次</b></summary>\r\n<br/>\r\n如果你想要在 4 次重複內畫完一個圓形，小畫家需要每次轉 **360 度/4 = 90
        度**。你可以在迴圈外層額外添加「轉向-右方 30 度」積木來做到（因為 **60+30 = 90**）。\n<br/>\r\n<img src=\"https://images.code.org/9da67a628ed72e87520a02a0d917e2af-image-1440132370113.44.12.png\"\nwidth=\"500px;\"
        style=\"mix-blend-mode: multiply;\" />\r\n<br/><br/>\r\n</details>\r\n</h4>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>重複
        6 次</b></summary>\r\n<br/>\r\n當你重複這個圖形 6 次，你轉了 **6x60 度**， 也就是剛好一圈 **360 度**。\r\n<img\nsrc=\"https://images.code.org/b79f96b87097ce3afe8a6a5608d04e36-image-1440132287456.44.27.png\"
        \ width=\"500px;\"  style=\"mix-blend-mode:\nmultiply;\" />\r\n</details>\r\n</h4>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>重複
        12 次</b></summary>\r\n<br/>\r\n如果你想要重複這個圖形 12 次，小畫家每次循環需要轉 **360 度/12 = 30
        度** 。那表示你需要在重複畫出圖形之前先稍微調整小畫家的方向，讓它向左轉 30 度。<br/><br/>\r\n<img src=\"https://images.code.org/ad254952522674496918561096817c66-image-1440132424792.44.01.png\"\nwidth=\"500px;\"
        style=\"mix-blend-mode: multiply;\" />\r\n</details>\r\n</h4>\r\n\r\n現在換你了！你能利用重複初始圖形的方式來創建出每個圖案嗎？
        \ "
      Course 4 Artist 11: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\n挑戰時間到了！
        \ \\\r\n\\\r\n這裡有個圖案，只用了你見到的積木做出來的。想一想，要怎麼重建它？你可以邊做邊試，錯了也沒關係。我們不要求你一次就做對。\\\r\n\\\r\n這些重複的圖形和上個關卡的圖案幾乎相同，除了第一個迴圈裡用的長度比較小以外。 "
      Course 4 Artist 12: |-
        <img src="https://images.code.org/70795d84048767ae7fb65883f476b27c-image-1440050836837.01.09.png"
        width="250px"/>

        自由發揮靈感：你已經學會了製作這樣的圖案所需的知識了！如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。
      Course 4 Artist 13: 還在玩啊？給你一張空白畫布，你可以在上面設計任何東西，隨你高興！
      Course 4 Artist 2: "你可以用迴圈來繪製最外圍的灰色正方形嗎？\\\r\n（每邊邊長為 300 像素）"
      Course 4 Artist 20: "還在玩啊？\\\r\n\\\r\n給你一張空白畫布，你可以在上面設計任何東西，隨你高興！"
      Course 4 Artist 3: "想一想，當你運行這個程式時會發生什麼事（你也可以直接點擊「運行」來看看）。\\\r\n\\\r\n接著，重複它一定的次數來完成這個圖形。"
      Course 4 Artist 4: "一個圓（一圈）是多少度？\\\r\n將這個數字填到重複積木中，來創造一個彩色的圓。"
      Course 4 Artist 5: "畫出另一半圖形，讓它對稱。\\\r\n這是等邊三角形，每條邊是 50 像素。\\\r\n\\\r\n你可能需要多運行幾次代碼來看看需要加上哪些積木。"
      Course 4 Artist 6: 完成程式碼以畫出這 3 個正三角形。
      Course 4 Artist 7: '現在將這個迴圈嵌套進另一個迴圈內，以畫出 10 個三角形。 '
      Course 4 Artist 8: 用迴圈包住這些程式積木，重複執行數次來畫出這個太陽。
      Course 4 Artist 8a: 記得這個圖形嗎？現在我們要讓你建立它，但這次我們不提供任何初始積木！
      Course 4 Artist 9: 循環這個圖樣 10 次並確定在每個圖樣畫完後轉向。
      Course 4 Artist Binary 1: "這裡有一個函式採用 1與 0 的二進位字串，引導藝術家跟隨它們由左至右，由上到下。\\\r\n\\\r\n
        當藝術家看到 1 時會填滿方格，當藝術家看到 0 時則忽略方格。\\\r \n\\\r\n**運行這個程式，看看這位藝術家如何使用二進位繪製這個圖案。**"
      Course 4 Artist Binary 1a: "這裡有一個函式採用 1與 0 的二進位字串，引導藝術家跟隨它們由左至右，由上到下。 當藝術家看到
        1 時會填滿方格，當藝術家看到 0 時則忽略方格。\\\r \n\\\r\n運行這個程式，看看這位藝術家如何使用二進位繪製這個圖案。"
      Course 4 Artist Binary Free Play 2b: "<img src=\"https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！\\\r\n\\\r\n如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。
        \n\\\r\n<br/>\\\r"
      Course 4 Artist Binary pre1: |-
        二進制（Binary）是個只用兩種符號來表達訊息的方法。以下我們將會使用<b>關</b>（用 <b>0</b> 表示）及<b>開</b>（用 <b>1</b> 代表）。

        <hr/>
        我們提供了「像素」網格，讓你在網格中移動並切換特定的像素方格以進行設計。

        <b>你能夠讓小藝術家在網格中的第一行以二進位畫出「01010101」嗎？</b>
      Course 4 Artist Binary ryan: "二進制（Binary）是個只用兩種符號來表達訊息的方法。以下我們將會使用「關」（用 0 表示）及「開」（用
        1 代表）。\\\r\n\\\r\n我們提供了「像素」網格，讓你在網格中移動並切換特定的像素方格以進行設計。你能夠讓小藝術家在網格中的第一行以二進位畫出「01010101」嗎？"
      Course 4 Artist For Loops 1: "使用重複積木來畫出這個邊長 50 像素的三角形。\\\r\n\\\r"
      Course 4 Artist For Loops 10: 自由遊戲時間！隨便你想畫什麼，隨便你想用什麼積木。
      Course 4 Artist For Loops 11: "還記得在上一個階段，我們使用一個變數來控制圖形的邊數嗎？\n現在我們要用 `counter`
        這個變數來做相同的事情。\\\r\n\\\r\n這個圖案從一個三角形開始，且每次增加 1 個邊直到畫出一個十邊形。每個圖形的邊長為 100 像素。
        \\\r\n\\\r\n你要如何使用計數迴圈中的 `counter` 變數來重建圖案呢？"
      Course 4 Artist For Loops 11a: "讓我們總結一下吧！\\\r\n\\\r\n用你所知道的計數迴圈與 `counter` 變數，來創造出每個形狀都比前一個多
        2 條邊的圖案，確保每條邊長是這個多邊形邊數的 10 倍。\\\r\n\\\r\n這裡提供給你一些些參考的程式碼。"
      Course 4 Artist For Loops 12: 那看起來真酷，現在我要接連畫出每個圖形。這次每個邊長是 20 像素。使用跳躍積木，在每個圖形後向前跳
        40 像素。
      Course 4 Artist For Loops 13: 恩…這些圖形變得愈來愈大了！我們不是已經用變數解決過這種問題了嗎？要怎麼用計數器變數來讓這些邊的長度變小呢？試著把向前移動固定數值改成向前移動（100/計數）像素。
      Course 4 Artist For Loops 14: "如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。\n\\\r\n\\\r\n試著用上一關的一些程式碼，但是轉向角度變成
        89 度，來創造漩渦狀的正方形。"
      Course 4 Artist For Loops 15: "**自由發揮：**試著用`計數迴圈`來繪製一些自己的畫作。我們也為你新增了一些有用的變數。"
      Course 4 Artist For Loops 2: |-
        我已經在`計數迴圈`（for loop）裡放了可以畫出三角形的積木，計數是從 50 算到 100，間隔數是 10。

        **注意：**在你點擊「運行」前，好好的看一下程式內容，後面的關卡會用到。
      Course 4 Artist For Loops 3: 參考上個關卡來完成這一關，這個最小的三角形邊長為 20 像素，最大的是 200 像素，每個三角形都比前一個的邊長多
        20 像素。
      Course 4 Artist For Loops 4: '要怎樣利用學過的積木來畫這些正方形？它們之中最小的邊長是 15 像素，最大的是 300 像素，每個正方形的邊長都比上一個長
        15 像素。 '
      Course 4 Artist For Loops 5: "上個關卡表現得很好！讓我們再用一次「計數器」變數積木來畫出這個很酷的圖案。\n\\\r\n\\\r"
      Course 4 Artist For Loops 6: 自由發揮！試著用一個計數迴圈畫出你自己設計的圖案。
      Course 4 Artist For Loops 6a: 修改 3 個小地方，把上個關卡的程式修改成這樣！
      Course 4 Artist For Loops 7: "如果你從這個演算法移除掉 Repeat 3（重複 3），留下計數迴圈裡的「移動」和「轉向」積木，會發生什麼事呢？\\\r\n\\\r\n<br/>\\\r\n在這個螺旋式三角形中，每個邊都比上一個長
        20 像素。\\\r\n\\\r"
      Course 4 Artist For Loops 8: "只是小小的修改了上個可以繪製出這個圖案的程式，你能找出改變了什麼嗎？\\\r\n\\\r\n提示，你需要移除某個東西！
        \ "
      Course 4 Artist For Loops 8a: 只是小小的修改了上個可以繪製出這個圖案的程式，你能找出改變了什麼嗎？
      Course 4 Artist For Loops 9: "你能做出一個螺旋紋嗎？向前移動，從 1 到 75 像素，每次加 1。\\\r\n\\\r"
      Course 4 Artist For Loops Challenge: "**挑戰：** 想一想，要怎麼使用所有學過的東西來畫出這個圖案？這些多邊形的每邊長都是
        40 像素。\\\r\n\\\r\n記住，為了要畫出螺蜁紋，你不能把多邊形閉合，這表示每個圖形的其中一個邊要比較小。"
      Course 4 Artist For Loops Challenge_a: |-
        **挑戰：**
        你能想的到要如何建立這個多邊形圖案嗎？這個圖案的邊長是 40 像素，用你所有學過的東西試試看。
      Course 4 Artist For Loops inspire: "<br/><br/>\\\r\n<img\nsrc=\"https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png\"\nwidth=\"250px\"/>\\\r\n<br/><br/>\\\r\n**自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。"
      Course 4 Artist Functions 12.1: 我們來建立一個函式，名叫 `draw a octagon 20`，用來畫出一個每邊邊長
        20 像素的八邊形。
      Course 4 Artist Functions 13.1: "現在，我們來做個名為 `jump to upper right`（跳到右上邊）的函式。來讓角色移動到你剛畫好八邊形右上角，這樣我們就可以完成這個圖案。
        \ \\\r\n<br/>\\\r\n_提示：要移動到右上角的話，試試在畫八邊形的 3/8 時跳躍。_  "
      Course 4 Artist Functions 14.1: '現在，我們來做個名為 `jump to upper right`（跳到右上邊）的函式。來讓角色移動到你剛畫好八邊形右上角，這樣我們就可以完成這個圖案。  '
      Course 4 Artist Functions Inspiration: "<img src=\"https://images.code.org/cf373e03bede480ae54aec72ce823454-image-1442951867535.54.11.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！\\\r\n\\\r\n如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。 "
      Course 4 Artist Functions challenge: "<img src=\"https://images.code.org/69f1c2b415f907c86aaa6ed2534c3682-image-1442870371171.13.38.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**挑戰階段：**
        使用你在這個階段和其他地方所學，來畫出和上圖一樣的圖案。  "
      Course 4 Artist Functions inspire: "<img src=\"https://images.code.org/6c6ff8e3b5a763926102033a94720f8b-image-1441300952649.19.47.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**自由發揮靈感：**你已經學會了製作這類圖案的所有知識！\\\r\n\\\r\n如果這個圖案給了你一些靈感，你可以創作一些類似的圖案，不然，畫些你自己想畫的。\\\r\n<br/>\\\r\n\\\r\n\n<h4>\r\n<details>\r\n<summary><b>Hints</b></summary>\r\n\\t<br/><br/>\r\n\\t<h5>\r\n\\t<details>\r\n\\t<summary><b>提示\n#1</b></summary>\r\n
        \   \\t<br/>\r\n    \\t用一個計數迴圈，並在嵌套在裡頭的`重複`迴圈中使用它的 `counter` 變數。 \r\n    \\t<br/><br/>\r\n
        \   </details>\r\n\\t</h5>\r\n    \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>提示\n#2</b></summary>\r\n
        \   \\t<br/>\r\n    \\t每次的循環，你都要畫出一個正方形，然後再向前跳躍。\r\n    \\t<br/><br/>\r\n
        \   </details>\r\n\\t</h5>\r\n    \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>提示\n#3</b></summary>\r\n
        \   \\t<br/>\r\n    \\t你要在`重複`積木外頭添加個向左轉 90 度的程式（但還是要放在計數迴圈內喔）。\r\n    \\t<br/><br/>\r\n
        \   </details>\r\n\\t</h5>\r\n    \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>解法</b></summary>\r\n
        \   \\t<br/>\r\n    \\t<br/>\r\n    \\t<img\nsrc=\"https://images.code.org/6b07c5de58a1fa573bef19182105f516-image-1441300922567.14.00.png\"\nwidth=\"450px\"/>\r\n
        \   \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n</details>\r\n</h4>\r\n\r\n<br/>\r\n如果你畫出的正方形大一點或是小一些，會發生什麼事呢？如果你把向左轉改成向右轉呢？"
      Course 4 Artist Inspire: "<img src=\"https://images.code.org/b5e28b084cb331ee030ea3853ed921bd-image-1440060815818.51.21.png\"\nwidth=\"250px\"/>\n**自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。 "
      Course 4 Artist Vars 1: "我們來畫個正三角形。\n\\\r\n\\\r\n它的每邊都是 100 像素長。\\\r\n\\\r\n<br/>\\\r"
      Course 4 Artist Vars 10: "這是畫出大三角形包小三角形的演算法，你可以修改它，讓它使用 `sides`（邊數）變數來畫出每個三角形嗎？\\\r\n\\\r\n</br>\\\r\n仔細看一遍程式，把看到的數字
        3 換成 `sides` 變數，記住要使用 `set sides`（設置邊數）積木。"
      Course 4 Artist Vars 11: "這裡有個複雜的程式，它的概念與上一關相同，你要設定的是 `sides`（邊數）變數，以畫出由正方形組合而成的圖案。\\\r\n\\\r\n\n<p\nstyle=\"font-size:small;
        padding: 15px 15px 15px 40px; background-color:#dcf3f3;\nborder-radius:10px;\">\r\n\\t玩一玩：試著使用一些其他的數字，看看圖案會有什麼變化！\r\n</p>"
      Course 4 Artist Vars 12: |-
        我們將 `sides`（邊數）參數設為 5。添加到算式中的邊數越多，圖形就會變得愈大！

        注意這裡有另外一個參數叫做 `length`（長度）。
        我們可以在「移動-向前」的地方用到它。

        將 length 設成 75 讓每個形狀的邊長變成 75。
      Course 4 Artist Vars 13: "當一個圖形的邊愈多，每個邊的長度就要愈小，這樣你才能讓整個圖案顯示在畫面。\\\r\n\\\r\n我們來重建這個演算式來畫出神奇的圖案，取代原來需手動設置的
        `length`（長度）變數，我們改用運算類型的積木和一個 `sides`（邊數）變數。這可以確保每個圖形都能完整顯示在畫面。\\\r\n\\\r\n每個多邊形的周長都是
        300 像素。"
      Course 4 Artist Vars 14: "**自由發揮**：讓我們一探究竟！現在你的演算法嵌入了又一個循環中。試著改變這兩個變數的值來畫出很酷的圖形。
        \\\r\n\\\r\n如果想看到更好的效果，試試使用顏色積木！在循環裡面使用隨機取色，看看效果如何。"
      Course 4 Artist Vars 2: 取代向前移動 150 像素，`移動`積木現在用了一個變數叫做 `length`（長度）。你可以將 `length`
        設為 150 以畫出這個新的三角形嗎？
      Course 4 Artist Vars 3: '這裡有個畫出正方形的迴圈，但是有些部分遺失了。你能修正它，讓它使用變數 lenght（長度），以找出圖案的每邊該用什麼長度嗎？ '
      Course 4 Artist Vars 4: 現在我想要製作一個長方形，它的高是寬的 2 倍。這裡有個叫作 `width`（寬度）的變數，請把它設為
        100。你能用運算類別裡的積木來完成程式嗎？
      Course 4 Artist Vars 6: "這是可以畫出任何規則多邊形的一些程式。\\\r\n\\\r\n有一個新的變數叫做 `sides`（邊），現在設定為
        4。\\\r\n\\\r\n不管邊數多少，你能使用 `sides` 變數（和運算類積木）來轉向正確的角度嗎？"
      Course 4 Artist Vars 7: "使用你在上個關卡學到的，用 `sides`（邊數）變數來建立這個六邊形。\\\r\n\\\r\n看看你在只修改
        1 個值的情況下能否畫出一個三角形、正方形、五邊形或者八邊形？"
      Course 4 Artist Vars 8: "**自由遊戲：**用不同的邊數來實驗看看，你能修改演算法，讓形狀在不管有多少邊的情況下，尺寸依然保持不變嗎？"
      Course 4 Artist Vars 9: 修改這個演算法，在 `draw a triangle`（畫個三角形）函式中，用 `sides`（邊數）變數來取代固定的數字。不要忘了使用
        `set sides` （邊數設為）積木。
      Course 4 Bee 1: "蜜蜂分不出雲的下面有什麼！\\\r\n\\\r\n使用`如果`積木來檢查在雲底下的是不是花朵。\\\r\n\\\r\n取得花蜜，如果是花朵的話。"
      Course 4 Bee 2: "使用`如果…否則`積木來檢查每個物品，看看它們是花朵還是蜂窩。\\\r\n\\\r\n如果是花朵，就收集一個花蜜…不然，就釀造一個蜂蜜！"
      Course 4 Bee 3: "裡頭不是花朵就是蜂窩。\\\r\n\\\r\n這回，使用`如果…否則`積木。**如果**它是花朵，就收集一個花蜜；**否則**就收集一個蜂蜜。"
      Course 4 Bee 4: "紫色的花朵裡可能有 1-3 個花蜜。\\\r\n\\\r\n這裡有個`如果…否則`積木與另一個`如果…否則`積木合併成了`如果…否則如果…否則`陳述式了。\\\r\n\\\r\n收集到不確定數量的花蜜以完成這個關卡。"
      Course 4 Bee 5: |-
        紫色的花朵裡可能有 1-3 個花蜜。添加一個`如果…否則`積木以組合成`如果…否則如果…否則`積木。
        收集到不確定數量的花蜜以完成這個關卡。
      Course 4 Bee 6: 紫色的花朵裡可能有 1-3 個花蜜。創建一個`如果…否則如果…否則`積木來收集不確定數量的花蜜。
      Course 4 Bee 7: 利用所有你學會的方法來收集到花蜜。紫花裡可能會有 1-3 個不等的花蜜。
      Course 4 Bee For Loops 11: 這個迴圈是哪裡出錯了？看看你能不能修復它，讓蜜蜂收集到花蜜。
      Course 4 Bee Params 1: 寫一序列的指令以收集所有花蜜。使用 `get 3 nectar`（採集 3 個花蜜）這個函式，其功能為轉向，然後移動到目標並採花蜜，最後回到原本的位置。
      Course 4 Bee Params 2: 修改 `get 3 nectar`（採集 3 個花蜜）這個函式，讓我右轉找到花朵，而不是向左轉。
      Course 4 Bee Params 3: "現在，兩邊都有花了！\\\r\n\\\r\n我們已添加了變數 `left`（左）、`right`（右）到函式裡讓你使用，還有個叫
        `direction`（方向）的參數在裡頭。\\\r\n\\\r\n\\\r\n**編輯 `get 3 nectar`（採集 3 個花蜜）函式，讓蜜蜂透過變數
        `left` 或 `right` 往正確的方向轉。**"
      Course 4 Bee Params 5: 讓我們從頭開始 - 你能建立一個含有 `direction`（方向）參數的 `get 5 nectar`（拿
        5 罐花蜜）的函式嗎？
      Course 4 Bee Params 6: |-
        如果我們只用一個函式就能收集到所有花蜜的話，那不是很棒嗎？

        試著添加一個名為 `nectar units`（花蜜數）的新參數到函式，來控制要採集的花蜜數量。你可能也會想為這個函式重新命名！
      Course 4 Bee Params 7: "試著用你的新函式來收集所有的花蜜。\\\r\n\\\r\n<br/>\\\r"
      Course 4 Bee Params 8: "**挑戰：**現在還有蜂蜜也需要處理！\\\r\n\\\r\n重寫你的函式以使用相同數量的蜂蜜和花蜜。怎樣用這些數字來決定你應該做什麼？"
      Course 4 EC 1a: "**終極挑戰：**沒有規則、沒有提示、只有挑戰！"
      Course 4 EC 1b: "**終極挑戰：**沒有規則、沒有提示、只有挑戰！"
      Course 4 EC 2a: "**終極挑戰：**沒有規則、沒有提示、只有挑戰！"
      Course 4 EC 2b: "**終極挑戰：**沒有規則、沒有提示、只有挑戰！"
      Course 4 EC 2c: "**終極挑戰：**沒有規則、沒有提示、只有挑戰！"
      Course 4 EC 2d: "**終極挑戰：**沒有規則、沒有提示、只有挑戰！"
      Course 4 EC 3: "**函式超級挑戰：**使用你在上個階段所學，畫出像這樣的圖像。\\\r\n\\\r\n_注意：如果你帶入參數的話，這個程式會變得更精簡。_\\\r\n\\\r\n<br/>\\\r\n<img\nsrc=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \ \\\r\n\\\r\n\\\r"
      Course 4 EC 3a: "**終極挑戰：**沒有規則、沒有提示、只有挑戰！\\\r\n\\\r\n<br/>\\\r\n<img src=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \ \\\r\n\\\r\n\\\r"
      Course 4 Maze 4: 當你完成關卡後，試著用`重複`積木來減少積木使用數…
      Course 4 Play Lab Params 1: "這裡有個函式叫做 `jump`（跳躍），它可以讓你的主要角色向上跳 100 像素。\\\r\n\\\r\n運行這個程式，用方向鍵來控制小狗，並利用
        `jump` 函式收集所有的旗幟。"
      Course 4 Play Lab Params 10: "我們為你準備了最後一個函式。\\\r\n\n<hr/>\r\n\r\n<h4>\r\n使用一個「如果」陳述式來編程你的遊戲，當
        player_score（玩家分數）達到了一定的數字後，就呼叫 level_up（升級）這個函式。<br/><br/>\r\n</h4>\r\n<i>例如
        player_score > 6</i>\r\n\r\n\r\n<hr/>\r\n<i>玩玩看這個遊戲，達到 level 3 你就可以移動到下個關卡。</i>"
      Course 4 Play Lab Params 2: "現在我們知道有些旗子太高了，跳不上去！讓我們使用「向上」、「向下」方向鍵來讓我們能夠跳躍不同的高度。\\\r\n\\\r\n我們添加一個
        `height`（高度）參數到 `jump`（跳躍）函式裡，\\\r\n\n-   向上鍵用來讓小狗跳 200 像素高 \\\r\n-   向下鍵用來讓小狗跳
        100 像素高。\\\r"
      Course 4 Play Lab Params 3: "我們已經添加另一個參數到 `jump`（跳躍）函式裡，這樣一來我們就可以在其他角色使用它。每個角色有個數字作代表，從
        1 開始算起。\\\r\n\\\r\n<br/>\\\r\n編輯這個 `jump` 函式，讓它使用 `actor`（角色）參數來讓正確的角色跳起來。 "
      Course 4 Play Lab Params 4: "這裡有個函式叫做 `patrol`（巡邏）。\n\\\r\n\\\r\n編輯 `patrol`
        讓貓能夠向上移動 400 像素，再向下 400 像素。"
      Course 4 Play Lab Params 5: 編輯 `patrol`（巡邏）函式，加進一個 `actor`（角色）參數，這樣一來我們就可以為每個在畫面上的角色呼叫它。記住這些角色分別對應數字
        1、2、3。
      Course 4 Play Lab Params 6: 添加一個名為 `speed`（速度）的參數到 `patrol`（巡邏）函式中。試著在「設定速度」積木中使用新的參數，來幫助企鵝趕在其他動物前得到所有旗幟。
      Course 4 Play Lab Params 7: "我們來點有趣的！仔細看看提供的程式碼，你能不能想像每個積木在做些什麼。 \\\r\n\\\r\n當你完成後，使用方向鍵來控制小狗，並收集到所有的旗子。
        \\\r\n\\\r\n**注意：**\n你不需要對程式進行任何修改"
      Course 4 Play Lab Params 8: 使用`當角色碰到`積木，在小狗碰到其他角色時，把狗送回左上方的位置。
      Course 4 Play Lab Params 9: |-
        這是一個早先的遊戲，但是大部分程式都隱藏了。這裡有個新函式叫做 `score_points`（獲得分數）。

        * * *

        #### 編輯這個函式，使得 `points`（分數）參數能被添加到 `player_score` （玩家分數）變數上。

        #### 變數 `player_score` 應該會在每次小狗的派碰到小貓時增加；在每次小貓的三明治碰到小狗時減少。

        * * *

        _注意：當你完成後，點擊「運行」玩玩看，當小狗得到 6 分時，就可以進入下一關。_
      Course 4 Play Lab Vars 1: "這一次你不需要寫任何程式，只要點擊「運行」來玩這個遊戲！\\\r\n\\\r\n<br/>\\\r\n在這個遊戲裡，你扮演一隻狗，要想辦法比貓拿到更多的旗子。使用向下鍵來控制狗，點你玩完了，點擊「完成」。"
      Course 4 Play Lab Vars 2: 上一關的比賽一點都不公平！修改 `dog_speed`（小狗的速度）變數，確保你可以收集到比貓還要多的旗子，誰先拿到
        10 個旗子就勝利！
      Course 4 Play Lab Vars 3: "這裡有個新型態的遊戲！\n\\\r\n\\\r\n這一關你不需要改變任何東西。\\\r\n\\\r\n**指引：**\n使用向左鍵和向右鍵移動，向上鍵是跳，看看你能不能收集到所有旗子。"
      Course 4 Play Lab Vars 4: "現在，我們使用了一個叫作 `height`（高度）的變數來控制小狗能跳躍的高度。更新 `height`
        變數來讓小狗能夠跳得夠高以碰到所有旗子。\\\r"
      Course 4 Play Lab Vars 6: "<h5><b>\r在我們的遊戲中，要怎樣才能獲得分數呢？\r\n</b></h5>\r\n<br/>\r\n\r\n1.
        在每次小狗用派擊中小貓時，加 1 到你的 `points` 變數上。<br/><br/>\r\n2. 使用`當角色2碰到任何東西`事件來觸發分數更新。你可以利用
        `points = points +1` 的方式增加變數值。<br/><br/>\n\r\n3. 分數到達 10 分（每次加 1 分）就過關。\r\n\r\n<br/><br/>\r\n<h4>\r\n**注意：**\n使用向右鍵扔出派！\r\n</h4>"
      Course 4 Play Lab Vars 7: "很好，現在我們來確定這個遊戲不至於太簡單！\\\r\n\\\r\n每當小狗（角色1）被小貓（角色2）的三明治丟到時就扣
        1 分。\\\r\n\\\r\n初始分數 10 分似乎不大困難，我們把分數從 10 改成 0 後再試試吧。"
      Course 4 Play Lab Vars 9: "自由遊戲時間！這裡我們目前為止玩過的所有變數，還有一些是你可能想要的。\\\r\n\\\r\n注意現在在工具箱裡有好多好多可以被組合的積木！在這裡，我們已經將它們分類放好。花點時間去嘗試每一個東西，當你一切就緖，就可以用重複、變數、事件類的各種指令製作一個遊戲或是故事。\\\r\n\\\r\n_提示：可以捲動頁面以查看工作區裡的所有指令。_"
      Course 4 Play Labs For Loops 1: 我們來讓狗從 1 叫到 100。使用計數迴圈（for loop）還有計數器積木，在每循環一次時就念出計數器變數當前數值。
      Course 4 Play Labs For Loops 4: "修改增量是很有用的，但是我們還是在用線性計算（每個數字間隔相同），如果我想要用指數呢？\\\r\n\\\r\n<br/>\\\r\n在不修改計數迴圈的設定下，你能算出
        1、4、9、16、25…（counter 開平方）嗎？"
      Course 4 Play Labs For Loops 4a: "現在，把第 7 關的這些變數混合到你的 `counter`（計數器）變數裡，讓我們來製造些神奇的事。\\\r\n\\\r\n在這個關卡，小狗會從
        **0** 數到 **1000**，每次數的間隔用 `increment`（增量）變數。將 `increment` 變數的初始值設為 10，看看會發生什麼事。"
      Course 4 Play Labs For Loops 5: 在上個階段我們已算出每個數的平方值。試著把 `counter ^ 2` 改成 `counter
        ^3` ，來算出每個數的立方值（1、8、27、64、125、216、343…）。
      Course 4 Play Labs For Loops 5a: "這一關，小狗會變成你的時間管家。\\\r\n\\\r\n小狗會從 **0** 數到
        **30**，間隔數為 increment，這個名為 `increment`（增量）的參數的初始值是 **1**。\\\r\n\\\r\n你可以完成他，讓你在每次點擊小狗的時候，`increment`
        就增加 2 嗎？點擊向前箭頭以運行這個計數迴圈。\\\r\n\\\r\n**注意：**多執行迴圈幾次，在每次中間不要忘了點小狗一下。"
      Course 4 Play Labs For Loops 6a: "現在我們已經知道要怎麼在程式中用變數來控制計數迴圈了。來做個遊戲吧！\\\r\n\\\r\n小狗會用計數迴圈，每次增加
        `increment` 來算數。但這次我們要添加巫師到裡面。你可以修改程式，在每次在巫師身上點一下時，`increment` 就增加 2 嗎？\\\r\n\\\r\n小心，巫師移動得很快的！"
      Course 4 Play Labs For Loops 7a: "現在我們到了某個地方！在小狗數到 30 前，我們要怎麼算出點擊巫師的次數？\\\r\n\\\r\n你可以添加這些積木到巫師角色上，這樣一來每次他被點擊時，這個
        `clicked`（被點到）變數就會加 1。你現在可以不用管 `increment`。\\\r\n\\\r\n**注意：**在你點擊運行後，小狗就會開始計數。"
      Course 4 Play Labs For Loops 8: "現在，幫忙角色們移動指定的一段距離。\\\r\n\\\r\n小狗應該每次移動 2 格（counter
        + 2），小貓每次則移動 2 倍（counter \\* 2），企鵝每次移動 2 次方（counter ^ 2）。先會先到達旗子的位置呢？"
      Course 4 Play Labs For Loops 8a: "為了完成我們的遊戲，我們需要再次用到 `increment`（增量）變數！我們來把它繫結到這個遊戲上。\\\r\n\\\r\n\n1.
        \ 持續追縱巫師被點擊的次數。\\\r\n2.  如果巫師在小狗數到 30 以前被點擊次數超過 10 次，`increment` 就加 1 後再繼續。\\\r\n3.
        \ 如果巫師在小狗數到 30 以前被點擊次數少於 10 次，遊戲就結束。  "
      Course 4 Playlab For Loop Freeplay: "**自由發揮：**使用目前為止你學會的一切製作一個遊戲，包括`計數`迴圈！"
      Course 4 Playlab For Loops 4b: "現在，這二個角色想要比實跑！\\\r\n\\\r\n每個角色一次移動的距離會依 `counter`（計數器）而定，\n但是他們的數字會因為`計數`迴圈而得到不同的數值。\\\r\n\\\r\n你能改變迴圈的間隔數值，來讓他們同時到達終點嗎？"
      Course 4 Playlab For Loops 5b: 調整這些計數迴圈（for loops）的間隔數，以便這兩個角色最後到達完全相同的位置。
      Course 4 Playlab For Loops 6b: "現在我們將以完全不同的方式使用計數迴圈（for loops）！\\\r\n\\\r\n這個遊戲的節奏會變得相當快，因為消失的間隔時間被濃縮了！\\\r\n\n<hr/>\r\n\r\n**編輯這個計數迴圈以創建一個充滿趣味的遊戲
        ！** \r\n\r\n<hr/>\r\n\r\n「運行」程式後盡你所能不停點擊獨角獸，你可以打敗我們的最高紀錄 24 分嗎？ "
      Course 4 SCF 1: "**函式超級挑戰：**使用建議的函式來畫出四列的六角形，注意到我們的偶數列是如何移動到右邊的嗎？"
      Course 4 SCF 1a: "**函式超級挑戰：**想一想，要怎麼樣用最少的積木來收集到所有花蜜？\\\r"
      Course 4 SCF 1b: "**函式超級挑戰：**想一想，要怎麼樣用最少的積木來收集到所有花蜜？\\\r\n\\\r"
      Course 4 SCF 2: "**函式超級挑戰：**用你在上個關卡學到的來畫出像這樣的圖形。\\\r\n\\\r\n_注意：如果你合併了參數，程式碼會變得更精簡。_
        \ "
      Course 4 SCF 3 Fail 1: "**函式超級挑戰 1：**\n\\\r\n\\\r"
      Course 4 SCF 3 Fail 2: "**函式超級挑戰 1：**\n\\\r\n\\\r"
      Course 4 SCF 3: "**函式超級挑戰：**使用你在上個階段所學，畫出像這樣的圖像。\\\r\n\\\r\n_注意：如果你帶入參數的話，這個程式會變得更精簡。_\\\r\n\\\r\n<br/>\\\r\n<img\nsrc=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \\\r\n\\\r\n\\\r  "
      Course 4 SCFL 1: "**計數迴圈超級挑戰：**完成這個關卡，用的積木愈少愈好。"
      Course 4 SCFL 1a: "**計數迴圈超級挑戰：**你能讓鼠奎特吃到橡樹果嗎？用的積木愈少愈好。"
      Course 4 SCFL 1b: "**計數迴圈超級挑戰：**你能讓鼠奎特吃到橡樹果嗎？用的積木愈少愈好。"
      Course 4 SCFL 2: "**計數迴圈超級挑戰：**完成這個關卡，用的積木愈少愈好。\\\r\n<br/>\\\r"
      Course 4 SCFL 3: "**計數迴圈超級挑戰：**想一想，要用什麼方法重建這個圖案？\\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"\nwidth=\"350px\"/>\\\r"
      Course 4 SCFL 4: "**計數迴圈超級挑戰：**想一想，要用什麼方法重建這個圖案？\\\r\n\\\r\n<img src=\"https://images.code.org/407f502735beec686187451bdf67aada-image-1446002848700.59.34.png\"\nwidth=\"350px\"/>"
      Course 4 SCFL 5: "**計數迴圈超級挑戰 5：**想一想，要用什麼方法重建這個圖案？\\\r\n\\\r\n<img src=\"https://images.code.org/407f502735beec686187451bdf67aada-image-1446002848700.59.34.png\"\nwidth=\"350px\"/>\\\r\n\\\r\n\n<h4>\r\n<details>\r\n<summary><b>提示</b></summary>\r\n\\t<br/><br/>\r\n\\t<h5>\r\n\\t<details>\r\n\\t<summary><b>提示\n#1</b></summary>\r\n
        \   \\t<br/>\r\n    \\t用設置顏色的積木產生紅、綠、藍的色彩變化。紅色的值會一直和 counter 變數一樣，綠色則是 255
        - counter，藍色則維持 255. \r\n    \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n
        \   \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>提示\n#2</b></summary>\r\n
        \   \\t<br/>\r\n    \\t每個形狀都是正方形，邊長相當於 counter 的數值，從 5 開始，每次增加 5，一直到 200 像素。\r\n
        \   \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n    \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>提示\n#3</b></summary>\r\n
        \   \\t<br/>\r\n    \\t小藝術家在每次的正方形之後轉向 15 度。\r\n    \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n
        \   \r\n    <h5>\r\n\\t<details>\r\n\\t<summary><b>解法</b></summary>\r\n    \\t<br/>\r\n
        \   \\t<br/>\r\n    \\t<img\nsrc=\"https://images.code.org/0bf4c87e33459f832258939ec53ad595-image-1446002848701.59.15.png\"\nwidth=\"450px\"/>\r\n
        \   \\t<br/><br/>\r\n    </details>\r\n\\t</h5>\r\n</details>\r\n</h4>"
      Course 4 SCFL 6: "**計數迴圈超級挑戰：**想一想，要用什麼方法重建這個圖案？\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"\nwidth=\"350px\"/>"
      Course 4 SCFL 7: "**計數迴圈超級挑戰：**小藝術家想要加些波浪！想一想，要怎麼樣重建這樣的圖案？\n\\\r\n\\\r\n<img
        src=\"https://images.code.org/fba3423f2e9a405d4d3859de32cdb0f3-image-1446102880655.13.36.png\"\nwidth=\"350px\"/>"
      Course 4 SCFP 1: 建立一個帶參數的函式，讓小藝術家能往前、往後跳躍 x 像素，還有往上、往下 y 像素（使用正數和負數）。
      Course 4 SCV 1: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**變數超級挑戰：**你現在學會了所有東西，能做出這樣圖案了！這個關卡相當困難，在想出解決方法前，你能堅持得了嗎？"
      Course 4 SCV 2: "<img src=\"https://images.code.org/85f0b27009edd86eff78692004b9ed52-image-1444712655590.02.32.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**變數超級挑戰：**你現在學會了所有東西，能做出這樣圖案了！這個關卡相當困難，在想出解決方法前，你能堅持得了嗎？"
      Course 4 SCV 3: |-
        **變數超級挑戰：** 你現在已經學會完成所有關卡該知道的事了！這個遊戲相當的困難。在找到解法前，你能堅持的住嗎？

        * * *

        現在玩個捉人遊戲！捉到小貓可以獲得 2 分，捉到企鵝可以獲得 3 分。得到 10 分就勝利！
        不過要小心的地方是，當小貓和企鵝互抓時，牠們會把分數偷回去。

        **要讓遊戲能如說明一樣運行，要添加些必須的積木。**

        -   **要怎樣用方向鍵來控制小狗？**
        -   **當小狗碰到企鵝或小貓時，你要如何才能加分？**
        -   **當小貓和企鵝碰在一起時，你要怎麼才能減分？**
      Course 4 SCV 4: "**變數超級挑戰：**完成這個關卡，用的積木愈少愈好。"
      Course 4 SCV 5: "**變數超級挑戰：**完成這個關卡，用的積木愈少愈好。"
      Course 4 SCV 6: "<img src=\"https://images.code.org/499fc71a0a06bacb68a9789ad57f8148-image-1445574373673.16.44.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**變數超級挑戰：**你現在學會了所有東西，能做出這樣圖案了！這個關卡相當困難，在想出解決方法前，你能堅持得了嗎？
        \ "
      Course 4 SCVP 1: 建立一個帶參數的函式，讓小藝術家能往前、往後跳躍 x 像素，還有往上、往下 y 像素（使用正數和負數）。
      Course 4 Variables Assessment: 你可以用 `sides`（邊數）變數來創建這個圖像嗎？每一邊的長度應該是 50 像素。
      CourseD_Dance_Party_01: |-
        _來舉行一場舞會！_

        將「創建一個新的」程式積木拖曳至工作區中，並把它放到「設定」積木裡頭，以建立第一個舞者。

        -   _如果你想要更多資訊或其它挑戰，也可以按一下左側的燈泡。_
      CourseD_Dance_Party_02: |-
        讓這隻麋鹿跳舞！

        拖曳出 <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> 程式積木到工作區上。連接到在 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"小節"</title></block></xml> 程式積木之的後面。您的舞者應該在第 4 個小節之後開始新的動作。

        **小節**用於計算音樂中的時間。在本教學課程中，一小節的長度為四拍。
      CourseD_Dance_Party_03: |-
        _跟著音浪一起流動！_

        添加 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"小節"</title></block></xml> 程式積木到工作區。讓舞者在 6 個小節後開始新的動作。
      CourseD_Dance_Party_04: |-
        _這支舞需要一些閃光！_

        拿出工具箱的新積木，為舞者添加背景，並加上特效，讓它隨著時間和音樂變化！
      CourseD_Dance_Party_05: |-
        使用另一個新的程式積木，讓舞者**每 2 個小節**改變動作！

        -   選擇「下一個」、「下一個」或「隨機」告訴舞者每次執行程式時執行不同的動作。
      CourseD_Dance_Party_06: |-
        _我們需要更多舞者！_

        建立一個名為 `backup_dancer1` 的舞者，為皮斯貓伴舞。
      CourseD_Dance_Party_08: |-
        每個舞者都會有自己的 _屬性集_ ，用來控制它的外觀。

        你可以用縮小 _尺寸_ 讓這舞者看起來像站在舞台上比較後面的地方。你能讓兩個伴舞舞者的尺寸保持一致嗎？
      CourseD_Dance_Party_09: |-
        舞者有個「色調」屬性，可以在身上添加一層顏色。試著改變其中一個舞者的色調。

        -   色調會在到舞者原來色彩上疊加指定的顏色。
      CourseD_Dance_Party_10: |-
        現在我們已經知道如何改變舞者的屬性。我們也可以讓這些屬性自動回應音樂，使用的積木為：
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_unicorn</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        此程式使用音樂的「低音」音量（比較低的聲音）來控制一個舞者的大小。你是否能讓其他舞者也隨著音樂有變化？
      CourseD_Dance_Party_11: |-
        <xml><block type="Dancelab_whenKey"></block></xml> 這個積木可讓你在按下按鍵時執行其中的程式。

        你可以變更舞蹈的動作、舞者的屬性，或者做一個快速動作。發揮創意，善用這些新的積木！
      CourseD_Dance_Party_11_5: |-
        有看到這個積木嗎？

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        現在你可以一次建立一群舞者了！

        嘗試用一些「全部鴨子」積木來編寫程式，這可以讓所有的鴨子一起跳舞。
      CourseD_Dance_Party_11b: |-
        跳舞時間到啦！按下向左鍵時，貓會做 dab 的動作。現在試著讓機器人在按下向右鍵時，做出 drop 的動作，還有按下向上鍵時，做出 clap 的動作。

        **連續按下按鍵讓機器人做出 drop-clap-drop-clap 的動作，看看你能做多快！**
      CourseD_Dance_Party_12: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      CourseE_HOC 2018 Level_1: 在啟程前，先準備一些必需品和補給品吧。打開**箱子** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png)
        以取得**小船** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)。
      CourseE_HOC 2018 Level_10: 有一隻**烏賊** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        躲在這片海洋遺址中，您找得到牠嗎？
      CourseE_HOC 2018 Level_11: 使用**海磷石** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        在黑色混凝土周圍建造一面牆。這將啟用**導管** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        並完成您的挑戰！
      CourseE_HOC 2018 Level_2: 在一望無際的大海中，划船肯定比游泳輕鬆！走到碼頭那兒搭船吧。
      CourseE_HOC 2018 Level_3: 拿起船槳駕駛小船，先去抓條**鱈魚**![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png)！
      CourseE_HOC 2018 Level_4: 將鱈魚餵給**海豚** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png)。使用重複方塊以更快的速度穿越大海。
      CourseE_HOC 2018 Level_5: 某個地方藏有**鸚鵡螺殼** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)！探索沉船以找出**箱子**
        ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)。
      CourseE_HOC 2018 Level_6: 外面看起來很冷！在前往水底廢墟的路上捕捉一尾**鮭魚** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)。
      CourseE_HOC 2018 Level_7a: 您找到了水底廢墟。在沙岩中搜尋一個裡面有**海磷石** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png)
        寶藏的**箱子** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)。
      CourseE_HOC 2018 Level_8: 一開始是冰山，現在又是熔岩？穿越這座火山島，並在珊瑚礁中尋找**熱帶魚** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)。
      CourseE_HOC 2018 Level_9b: 您終於抵達珊瑚礁，現在尋找**海洋之心** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)！使用藍色和紅色的珊瑚抵達藏有寶藏的**箱子**
        ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png)。
      CourseF_PlayLab_vars10: "自由遊戲時間！這裡我們目前為止玩過的所有變數，還有一些是你可能想要的。\\\r\n\\\r\n注意現在在工具箱裡有好多好多可以被組合的積木！在這裡，我們已經將它們分類放好。花點時間去嘗試每一個東西，當你一切就緖，就可以用重複、變數、事件類的各種指令製作一個遊戲或是故事。\\\r\n\\\r\n_提示：可以捲動頁面以查看工作區裡的所有指令。_"
      CourseF_PlayLab_vars2: 上一關的比賽一點都不公平！修改 `dog_speed`（小狗的速度）變數，確保你可以收集到比貓還要多的旗子，誰先拿到
        10 個旗子就勝利！
      CourseF_PlayLab_vars3: "這裡有個新型態的遊戲！\n\\\r\n\\\r\n這一關你不需要改變任何東西。\\\r\n\\\r\n**指引：**\n使用向左鍵和向右鍵移動，向上鍵是跳，看看你能不能收集到所有旗子。"
      CourseF_PlayLab_vars4: "現在，我們使用了一個叫作 `height`（高度）的變數來控制小狗能跳躍的高度。更新 `height`
        變數來讓小狗能夠跳得夠高以碰到所有旗子。\\\r"
      CourseF_PlayLab_vars6: |-
        <h5><b>
        在我們的遊戲中，要怎樣才能獲得分數呢？
        </b></h5>
        <br/>

        1.  在每次小狗用派擊中小貓時，加 1 到你的 `points` 變數上。<br/><br/>

        2.  使用`當角色2碰到任何東西`事件來觸發分數更新。你可以利用 `points = points +1` 的方式增加變數值。<br/><br/>

        3.  分數到達 10 分（每次加 1 分）就過關。

        <br/><br/>

        <h4>
        **注意：**使用向右鍵扔出派！
        </h4>
      CourseF_PlayLab_vars7: |-
        <h5><b>
        在我們的遊戲中，要怎樣才能獲得分數呢？
        </b></h5>
        <br/>

        1.  在每次小狗用派擊中小貓時，加 1 到你的 `points` 變數上。<br/><br/>

        2.  使用`當角色2碰到任何東西`事件來觸發分數更新。你可以利用 `points = points +1` 的方式增加變數值。<br/><br/>

        3.  分數到達 10 分（每次加 1 分）就過關。

        <br/><br/>

        <h4>
        **注意：**使用向右鍵扔出派！
        </h4>
      CourseF_PlayLab_vars8: |-
        <h5><b>
        在我們的遊戲中，要怎樣才能獲得分數呢？
        </b></h5>
        <br/>

        1.  在每次小狗用派擊中小貓時，加 1 到你的 `points` 變數上。<br/><br/>

        2.  使用`當角色2碰到任何東西`事件來觸發分數更新。你可以利用 `points = points +1` 的方式增加變數值。<br/><br/>

        3.  分數到達 10 分（每次加 1 分）就過關。

        <br/><br/>

        <h4>
        **注意：**使用向右鍵扔出派！
        </h4>
      CourseF_PlayLab_vars9: "很好，現在我們來確定這個遊戲不至於太簡單！\\\r\n\\\r\n每當小狗（角色1）被小貓（角色2）的三明治丟到時就扣
        1 分。\\\r\n\\\r\n初始分數 10 分似乎不大困難，我們把分數從 10 改成 0 後再試試吧。"
      Craft Aquatic - allthethings: 移動到海燈籠那裡。
      Dance Party 3 - Validated: |-
        建立個名為 `alien2` 的角色。

        讓牠在被點擊時做個不同的舞蹈動作。
      Dance Party 3: |-
        建立個名為 `alien2` 的角色。

        讓牠在被點擊時做個不同的舞蹈動作。
      Dance Party Predict: |-
        \*\* 猜猜看：\*\* 這裡有個名叫 `alien1` 的角色！

        當你點擊牠時，你覺得會發生什麼事？
      Dance Party Template 1_2019: 範本
      Dance Party Template 2_2019: 範本
      Dance_Events_Example_Video: 使用事件讓你的舞蹈派對有更多互動！
      Dance_Party_01: |-
        _來舉行一場舞會！_

        將「創建一個新的」程式積木拖曳至工作區中，並把它放到「設定」積木裡頭，以建立第一個舞者。

        -   _如果你想要更多資訊或其它挑戰，也可以按一下左側的燈泡。_
      Dance_Party_01_low: |-
        _來舉行一場舞會！_

        將「創建一個新的」程式積木拖曳至工作區中，並把它放到「設定」積木裡頭，以建立第一個舞者。

        -   _如果你想要更多資訊或其它挑戰，也可以按一下左側的燈泡。_
      Dance_Party_02: |-
        讓這隻麋鹿跳舞！

        拖曳出 <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> 程式積木到工作區上。連接到在 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"小節"</title></block></xml> 程式積木之的後面。您的舞者應該在第 4 個小節之後開始新的動作。

        **小節**用於計算音樂中的時間。在本教學課程中，一小節的長度為四拍。
      Dance_Party_03: |-
        _跟著音浪一起流動！_

        添加 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"小節"</title></block></xml> 程式積木到工作區。讓舞者在 6 個小節後開始新的動作。
      Dance_Party_04: |-
        _這支舞需要一些閃光！_

        拿出工具箱的新積木，為舞者添加背景，並加上特效，讓它隨著時間和音樂變化！
      Dance_Party_05: |-
        使用另一個新的程式積木，讓舞者**每 2 個小節**改變動作！

        -   選擇「下一個」、「下一個」或「隨機」告訴舞者每次執行程式時執行不同的動作。
      Dance_Party_06: |-
        _我們需要更多舞者！_

        建立一個名為 `backup_dancer1` 的舞者，為皮斯貓伴舞。
      Dance_Party_08: |-
        每個舞者都會有自己的 _屬性集_ ，用來控制它的外觀。

        你可以用縮小 _尺寸_ 讓這舞者看起來像站在舞台上比較後面的地方。你能讓兩個伴舞舞者的尺寸保持一致嗎？
      Dance_Party_09: |-
        舞者有個「色調」屬性，可以在身上添加一層顏色。試著改變其中一個舞者的色調。

        -   色調會在到舞者原來色彩上疊加指定的顏色。
      Dance_Party_10: |-
        現在我們已經知道如何改變舞者的屬性。我們也可以讓這些屬性自動回應音樂，使用的積木為：
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_unicorn</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        此程式使用音樂的「低音」音量（比較低的聲音）來控制一個舞者的大小。你是否能讓其他舞者也隨著音樂有變化？
      Dance_Party_11.5_test: |-
        有看到這個積木嗎？

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        現在你可以一次建立一群舞者了！

        嘗試用一些「全部鴨子」積木來編寫程式，這可以讓所有的鴨子一起跳舞。
      Dance_Party_11: |-
        <xml><block type="Dancelab_whenKey"></block></xml> 這個積木可讓你在按下按鍵時執行其中的程式。

        你可以變更舞蹈的動作、舞者的屬性，或者做一個快速動作。發揮創意，善用這些新的積木！
      Dance_Party_11_5: |-
        有看到這個積木嗎？

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        現在你可以一次建立一群舞者了！

        嘗試用一些「全部鴨子」積木來編寫程式，這可以讓所有的鴨子一起跳舞。
      Dance_Party_11b: |-
        跳舞時間到啦！按下向左鍵時，貓會做 dab 的動作。現在試著讓機器人在按下向右鍵時，做出 drop 的動作，還有按下向上鍵時，做出 clap 的動作。

        **連續按下按鍵讓機器人做出 drop-clap-drop-clap 的動作，看看你能做多快！**
      Dance_Party_12: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      Dance_Party_6: |-
        _我們需要更多的舞者！_

        用 <xml><block type="Dancelab_makeNewDanceSprite"><title name="COSTUME">"鴨子"</title><title name="NAME">backup\_dancer1</title><title name="LOCATION">{x: 300, y: 200}</title></block></xml> 來產生一個叫做 `backup_dancer1` 的新舞者，和皮斯貓一同跳舞。
      Dance_Party_extras_battle: |-
        # 舞蹈團隊

        這是兩個舞者的舞蹈。方向鍵控制其中一位舞者；w、a、s、d 鍵控制另一位舞者。可以和朋友一起跳支舞，然後改良你的舞蹈。以下是一些修改的點子：

        -   添加更多按鍵來控制舞蹈。
        -   讓在後面伴舞的舞者也在按下按鍵時做出反應。
        -   通過設置舞者的可見度，每 4 個節拍替換舞者一次。
      Dance_Party_extras_every_beat: |-
        # 四分音符

        大部分的舞蹈採用完整節拍，但其實每個節拍都由 4 個四分音符組成。這支舞蹈使用了 `1/4 節拍` 讓舞者在每個四分音符拍手。

        這種舞蹈還使用「條件指令」來控制在什麼時候`每 1/4 個節拍`可以改變舞蹈。嘗試更改條件，看看舞蹈會變得怎樣。以下是一些其它的點子，你可以試試：

        -   嘗試使用其它節奏（1/2 拍或 1/8 拍）。
        -   在`每次經過_小節後`積木之後添加其它事件。
        -   用「秒」替換「節拍」，並嘗試以這種方式為舞蹈計時。
      Dance_Party_extras_layout: |-
        # 讓我們加入陣形！

        來欣賞這個舞蹈的效果吧，它用了`分佈`來改變整個舞蹈舞者的隊形。你可以試試以下的方法加以延伸：

        -   創建第二組舞者，讓他們使用不同的隊形。
        -   用事件來重新分佈舞者，比方說按下按鍵時更改隊形。
        -   在舞者變換隊形後，接著改變屬性。
      Dance_Party_extras_on_beat: |-
        # 低音、中音和高音

        這支舞蹈會在音樂的不同音頻時變換動作，使用的是「峰值」事件來觸發程式。你可以試試更換歌曲，看看舞蹈會變得怎樣。
      Dance_Party_extras_speed: |-
        # 加速、減速

        最後的這個舞蹈使用`跳舞速度設為`積木來控制每位舞者的動作的速度。嘗試在歌曲中的不同節點使用不同的速度。隨意對舞蹈進行修改，或使用之前的舞蹈加以改編。
      Dance_Party_extras_visible: |-
        # 他們要去哪？

        這個舞蹈顯示和隱藏了兩組不同的舞者。你可以試試下面的方法，看看效果如何。

        -   添加另一組舞者。
        -   使用方向鍵來顯示和隱藏舞者。
        -   隱藏所有舞者並切換一個讓人興奮的背景效果。
      ECS Unit 3 Challenge Selection: "# 挑戰概覽\n\n> 你的挑戰有哪些？ \\\r\n> \\\r\n\n## Enter
        the lesson you selected for your\n\nchallenge in the text box below.\\\r\n\\\r\nHTML
        Beginners:\\\r\n\\\r\n\n-   Day 3-4,5:\n    Basic HTML - Paragraph, Header,
        Strong, and EM Tags\\\r\n-   Day 6--7: HTML -\n    Images\\\r\n-   Day 14:
        HTML - Links\\\r\n    \\\r\n    CSS Beginners:\\\r\n    \\\r\n-   Day 8-10:\n
        \   Basic CSS \\\r\n    \\\r\n    More Experienced with HTML and CSS:\\\r\n
        \   \\\r\n-   Day 11-13:\n    HTML and CSS \\\r\n-   Day 17-19: HTML and CSS:
        Create Your Own Webpage\\\r\n-   Day\n    22-25: Unit Final Project\\\r\n-
        \  Day 18-21 Final Unit Project\\\r\n    \\\r\n    \\\r\n    Now\n    that
        you've selected a lesson, head to the forum and **share which lesson\n    you
        plan to complete** for your challenge.\\\r\n    \\\r\n    #### \\<a href=\"<http://forum.code.org/c/ecs/ecs-unit3>\"\n
        \   target=\\_blank>Forums <i class=\"fa fa-external-link\" /></a>"
      ECS Unit 4 Challenge Selection: "# 挑戰概覽\n\n> 你的挑戰有哪些？ \\\r\n> \\\r\n\n## Enter
        the lesson you selected for your\n\nchallenge in the text box below.\\\r\n\\\r\n是編程新手嗎？\\\r\n\\\r\n\n-
        \  Day 2-3:\n    Scratch - Name Project\\\r\n-   Day 4: Scratch - Knock Knock
        Joke\\\r\n-   Day 5-6:\n    Scratch - Moving Sprites \\\r\n    \\\r\n    New
        to Scratch:\\\r\n    \\\r\n-   Day 7-8: Scratch\n-   Event Driven Programming\\\r\n-
        \  Day 9: Scratch - Broadcast Roleplay\\\r\n-   Day\n    10-13: Scratch -
        Broadcasting\\\r\n    \\\r\n    Some Experience with Scratch and Programming:\\\r\n
        \   \\\r\n-   \\-\n    Day 18, 19: Rock Paper Scissors and Timer\\\r\n-   Day
        20-23: Scratch - Timing\n    Game\\\r\n-   Day 25-30: Unit Final Project\\\r\n
        \   \\\r\n    \\\r\n    \\\r\n    Now that you've selected\n    a lesson,
        head to the forum and **share which lesson you plan to complete**\n    for
        your challenge.\\\r\n    \\\r\n    #### \\<a href=\"<http://forum.code.org/c/ecs/ecs-unit4>\"\n
        \   target=\\_blank>Forums <i class=\"fa fa-external-link\" /></a>"
      ECS Unit 5 Challenge Selection: "# 你的挑戰有哪些？\n\n\\\r\n\\\r\n\n## Enter the lesson
        you selected for your challenge in the text box\n\nbelow.\\\r\n\\\r\n\n-   Day
        1 - 3: Room data project, set up final project\\\r\n-   Day\n    4 - 5: Developing
        research questions\\\r\n-   Day 6 - 7: Building group norms\\\r\n-   \\-\n
        \   Day 8: Check in Day\\\r\n-   Day 9 - 11: Maps, identifying variables,
        subsetting\n    data, sorting data, frequency of types.\\\r\n-   Day 12: Bubble
        Charts\\\r\n-   Day\n    13: Review: Bubble Charts\\\r\n-   Day 14 - 15: Bar
        Plots\\\r\n-   Day 16: Mosaic\n    Plots\\\r\n-   Day 17: Review: Bar and
        Mosaic Plots\\\r\n-   Day 18 - 20: Mean, Median,\n    Minimum, Maximum, Histograms,
        Box Plots\\\r\n-   Day 21: Review: Mean, Median,\n    Minimum, Maximum\\\r\n-
        \  Days 22 - 24: Filtering Text data (remove punctuation,\n    remove case,
        remove stop words, stemming), Analyzing word counts.\\\r\n-   Day\n    25:
        Review: Text Data\\\r\n-   Day 26 - 27: Incorporate  data techniques into\n
        \   final project\\\r\n-   Day 28 - 29: Build project presentations\\\r\n-
        \  Day 30: Present\n    final project\\\r\n    \\\r\n    Now that you've selected
        a lesson, head to the forum\n    and **share which lesson you plan to complete**
        for your challenge.\\\r\n    \\\r\n    #### \n    <a href=\"http://forum.code.org/c/ecs/ecs-unit5\"
        target=_blank>Forums <i\n    class=\"fa fa-external-link\" /></a>"
      Fish Tank Template: 專案範本
      Fish Tank Template_2019: 專案範本
      Fish Tank Template_simple: 專案範本
      Food Fight!: "我們為你準備了最後一個函式。\\\r\n\n<hr/>\r\n\r\n<h4>\r\n使用一個「如果」陳述式來編程你的遊戲，當
        player_score（玩家分數）達到了一定的數字後，就呼叫 level_up（升級）這個函式。<br/><br/>\r\n</h4>\r\n<i>例如
        player_score > 6</i>\r\n\r\n\r\n<hr/>\r\n<i>玩玩看這個遊戲，達到 level 3 你就可以移動到下個關卡。</i>"
      Formative versus Summative Assessment: 下面的連結中提供了形成性和總結性評量的定義和範例：
      Function intro Ryan: "您的工作空間中有一個名為「建造橋樑」的**功能**。您要過河所需的代碼都建置在內！\\\r\n \\\r\n在您的工作空間中短按兩次小型的綠色方塊，即可修正路徑並讓
        {currentPlayerName} 前往紅石火把 [redstone_torch] 的位置。"
      Function intro Ryan_2019: "您的工作空間中有一個名為「建造橋樑」的**功能**。您要過河所需的代碼都建置在內！\\\r\n \\\r\n在您的工作空間中短按兩次小型的綠色方塊，即可修正路徑並讓
        {currentPlayerName} 前往紅石火把 [redstone_torch] 的位置。"
      GameLab Livecode Demo 1: "# 讓角色動起來\\\r\n\n\\\r\n要開始這個範例，請依下列步驟操作：\\\r\n\\\r\n\n1.
        \ 使用 createSprite() 積木來建立一個新的角色。\\\r\n2.  切換到「動作」頁籤，並選擇角色的圖像。\\\r\n3.  使用
        sprite.setAnimation() 積木來設置角色的動作。\\\r\n4.  使用迴圈增量（慢慢增加）它的 x 和 y 值，就可以移動角色。\\\r"
      GameLab Livecode Demo 4: "# 創作一個你自己的玩意兒\\\r\n\n\\\r\n我們已經能夠創建一個簡單的遊戲了，花些時間再探索一下並添加一個你自己的遊戲。注意在工具箱裡現在有一堆新的積木可以用囉，試試它們，看看可不可以用在你的遊戲裡。"
      Geometric Pattern: "**專案點子：** 創作一個圖案，用幾何思維，這需要毅力和規劃！"
      Geometric Sun: "**專案點子：** 創作一個圖案，用幾何思維，這需要毅力和規劃！"
      Geometric Sun_2018: "**專案點子：** 創作一個圖案，用幾何思維，這需要毅力和規劃！"
      Geometric Sun_2019: "**專案點子：** 創作一個圖案，用幾何思維，這需要毅力和規劃！"
      HOC 2018 Level_1: 在啟程前，先準備一些必需品和補給品吧。打開**箱子** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png)
        以取得**小船** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)。
      HOC 2018 Level_10: 有一隻**烏賊** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        躲在這片海洋遺址中，您找得到牠嗎？
      HOC 2018 Level_11: 使用**海磷石** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        在黑色混凝土周圍建造一面牆。這將啟用**導管** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        並完成您的挑戰！
      HOC 2018 Level_12: 恭喜！廣闊的水世界正等著您。建造一個珊瑚礁！一座火山！一艘沉船！您自己決定。
      HOC 2018 Level_2: 在一望無際的大海中，划船肯定比游泳輕鬆！走到碼頭那兒搭船吧。
      HOC 2018 Level_3: 拿起船槳駕駛小船，先去抓條**鱈魚**![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png)！
      HOC 2018 Level_4: 將鱈魚餵給**海豚** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png)。使用重複方塊以更快的速度穿越大海。
      HOC 2018 Level_5: 某個地方藏有**鸚鵡螺殼** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)！探索沉船以找出**箱子**
        ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)。
      HOC 2018 Level_6: 外面看起來很冷！在前往水底廢墟的路上捕捉一尾**鮭魚** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)。
      HOC 2018 Level_7a: 您找到了水底廢墟。在沙岩中搜尋一個裡面有**海磷石** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png)
        寶藏的**箱子** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)。
      HOC 2018 Level_8: 一開始是冰山，現在又是熔岩？穿越這座火山島，並在珊瑚礁中尋找**熱帶魚** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)。
      HOC 2018 Level_9b: 您終於抵達珊瑚礁，現在尋找**海洋之心** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)！使用藍色和紅色的珊瑚抵達藏有寶藏的**箱子**
        ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png)。
      HOC Dance 4_draft: |-
        使用另一個新的程式積木，讓舞者**每 2 個小節**改變動作！

        -   選擇「下一個」、「下一個」或「隨機」告訴舞者每次執行程式時執行不同的動作。
      HOC Dance 5: |-
        我們需要更多的舞者！

        用 <xml>
        <block type="Dancelab_makeNewDanceSprite">

        <title name="COSTUME">"鴨子"</title>
        <title name="NAME">backup_dancer1</title>
        <title name="LOCATION">{x: 300, y: 200}</title>
        </block></xml> 來產生一個叫做 `backup_dancer1` 的新舞者，和皮斯貓一同跳舞。
      HOC Dance 5_draft: |-
        _我們需要更多舞者！_

        建立一個名為 `backup_dancer1` 的舞者，為皮斯貓伴舞。
      HOC Dance 8: |-
        現在我們已經知道如何改變舞者的屬性。我們也可以讓這些屬性自動回應音樂，使用的積木為：
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">dancer1</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        此程式使用音樂的「低音」音量（比較低的聲音）來控制一個舞者的大小。你是否能讓其他舞者也隨著音樂有變化？
      HOC Dance 8_draft: |-
        現在我們已經知道如何改變舞者的屬性。我們也可以讓這些屬性自動回應音樂，使用的積木為：
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">dancer1</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        此程式使用音樂的「低音」音量（比較低的聲音）來控制一個舞者的大小。你是否能讓其他舞者也隨著音樂有變化？
      HOC Dance 9_draft: |-
        <xml><block type="Dancelab_whenKey"></block></xml> 這個積木可讓你在按下按鍵時執行其中的程式。

        你可以變更舞蹈的動作、舞者的屬性，或者做一個快速動作。發揮創意，善用這些新的積木！
      HOC Dance Freeplay: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      HOC Dance Freeplay_draft: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      HOC Dance Predraw: 隨著音樂律動！建立一支自己的舞蹈，與朋友分享。
      Harvesting: |-
        喔哦，我弄丟了地圖，種了什麼也搞不清楚！每個芽苗可以種出**玉米** ![picture of corn](https://images.code.org/cac3133c40781553a70066a67298b2b5-image-1472493202556.png)
        、**豌豆** ![picture of beans](https://images.code.org/5e379ff595be17722237d9685b29fd96-image-1472493220871.png)
        、**南瓜** ![picture of pumpkin](https://images.code.org/03cf76a978e0788ccb53f14e9d264695-image-1472493237148.png)
        。你可以寫些程式來收成這些作物嗎？不管它們是什麼。
      Inspirational Artwork: |-
        <img src="https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png"
        width="250px"/>

        **自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！

        如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。

        注意：我們用了`設定透明度`積木來製作 petals（花瓣）向外褪色的效果。
      InspirationalArtwork: |-
        你已經學會了所有需要創建這個模式的知識了！

        如果這個圖形引起了你的聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。
      InspirationalArtwork_2018: |-
        你已經學會了所有需要創建這個模式的知識了！

        如果這個圖形引起了你的聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。
      InspirationalArtwork_2019: |-
        你已經學會了所有需要創建這個模式的知識了！

        如果這個圖形引起了你的聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。
      Just for Testing: 其它測試說明
      K-1 Bee Loops 2: 使用一個「重複」迴圈來移動、接著採集花蜜、然後釀造蜂蜜！
      K-1 Bee Loops 3: 使用 3 個「重複」迴圈來採集花蜜和釀造蜂蜜！
      K-1 Bee Loops 4: 使用「重複」迴圈來採集花蜜、釀造蜂蜜、接著移動！
      K-1 Bee Loops 5: 使用「重複」迴圈讓我收集到花蜜和蜂蜜！
      K-1 Bee Loops 6: 使用一個「重複」迴圈來採集花蜜、釀造蜂蜜、接著移動！
      K-1 Maze Loops 10: "讓我抓到那隻豬！\\\r\n用「重複」迴圈會讓問題更容易解決。"
      K-1 Maze Loops 11: "讓我抓到那隻豬！\\\r\n用「重複」迴圈會讓這件事變得更容易。"
      K-1 Maze Loops 12: "讓我抓到那隻豬！\\\r\n用「重複」迴圈會讓這件事變得更容易。"
      K-1 Maze Loops 2: 使用`重複`積木讓我抓到豬！
      K-1 Maze Loops 3: "讓我抓到那隻豬！\\\r\n一定要用重複迴圈。"
      K-1 Maze Loops 5: "讓我抓到那隻豬！\\\r\n一定要用重複迴圈。"
      K-1 Maze Loops 6: "讓我抓到那隻豬！\\\r\n一定要用重複迴圈。"
      K-1 Maze Loops 7: "讓我抓到那隻豬！\\\r\n一定要用重複迴圈。"
      K-1 Maze Loops 8: 使用「重複」迴圈讓我抓到豬。
      K-1 Maze Loops Assessment 1: "我們來看看你學得怎麼樣！\\\r\n使用「重複」迴圈來讓我抓到這頭豬！"
      K2.0 sequence 12: |-
        讓我抓到那頭豬！

        ![](https://images.code.org/f908ff77eb81ee85d405a7ba66cc2986-image-1467933103380.gif)
      K2.0 sequence 5: |-
        移動以讓憤怒鳥抓到這頭豬！

        ![](https://images.code.org/0b324bc0f684f7a22171acd8b38c8d9f-image-1467931807767.gif)
      LaurelDebugging4Video1: "這是冒險家 Laurel！\\\r\n\\\r\n讓她四處移動，並盡可能獲得最多的寶石。"
      MC Agent Freeplay: "**自由發揮：**現在換你表現囉，在 Agent 上編程來探索這個世界。"
      MC_HOC_2017 Agent Test: "按一下「執行」，即可使用**箭頭按鍵**移動玩家。 \n\n若要完成此關卡，您將必須到門的位置並開門
        (使用**空白鍵**)，這樣您就可前往門內的橙色方塊。"
      MC_HOC_2017_01: "按一下「執行」，即可使用**箭頭按鍵**移動玩家。 \n\n若要完成此關卡，您將必須到門的位置並開門 (使用**空白鍵**)，這樣您就可前往門內的橙色方塊。"
      MC_HOC_2017_01_Cole: 您必須在途中收集所有工具。使用**箭頭按鍵**四處移動，在路徑上抵達箱子的位置便可贏得遊戲
      MC_HOC_2017_01_Kiki: 若要玩此關卡，按一下遊戲空間下方的橙色「執行」按鈕，然後使用**箭頭按鍵**讓玩家四處移動。
      MC_HOC_2017_01_RETRY: |-
        房門反鎖住了，代理 Agent 快來幫忙！

        將「移動-向前」積木黏貼到工作區域的「當運行時」積木下，讓代理 Agent 走到壓力板 [PressurePlate_Up] 以打開房門。接著再用方向鍵走出房子，然後收集 **箱子** [chest]。
      MC_HOC_2017_01_RETRY_2019: |-
        房門反鎖住了，代理 Agent 快來幫忙！

        將「移動-向前」積木黏貼到工作區域的「當運行時」積木下，讓代理 Agent 走到壓力板 [PressurePlate_Up] 以打開房門。接著再用方向鍵走出房子，然後收集 **箱子** [chest]。
      MC_HOC_2017_02: 玩家必須進入秘密樹叢。撰寫代碼，幫助 Agent 打開大門，讓他可以前往壓板。
      MC_HOC_2017_02_Cole: "{currentPlayerName} 即將踏上冒險旅程！請先打開右邊上鎖的門，取得裡頭的**地圖** [map_empty]。\\\r\n
        \\\r\n在工作區域中加入程式讓代理 Agent 移至壓力板 [PressurePlate_Up]，這樣 {currentPlayerName}
        才可以順利進入。"
      MC_HOC_2017_02_Cole_2019: "{currentPlayerName} 即將踏上冒險旅程！請先打開右邊上鎖的門，取得裡頭的**地圖**
        [map_empty]。\\\r\n \\\r\n在工作區域中加入程式讓代理 Agent 移至壓力板 [PressurePlate_Up]，這樣 {currentPlayerName}
        才可以順利進入。"
      MC_HOC_2017_02_Kiki: "玩家已出發踏上冒險旅程，但首先他們必須先在上鎖的門後找到藏起來的火把。 \n\n設定 Agent 的程式以往前移動兩次，即可沿著白色路徑前進並抵達壓板，這樣他就可以為玩家開門。"
      MC_HOC_2017_02_Will: "若要完成此關卡，玩家必須進入秘密樹林，然後在上鎖的門後找到橙色方塊。 \n\n工作空間中的代碼可讓 Agent
        往前移動兩次以前往壓板，並為愛莉克斯或史提夫開門。"
      MC_HOC_2017_03_Cole: |-
        繼續冒險！玩家 {currentPlayerName} 需要先準備好**羅盤** [compass] 才不會迷路。

        幫代理 Agent 寫個程式，讓它先把門打開。
      MC_HOC_2017_03_Cole_2019: |-
        繼續冒險！玩家 {currentPlayerName} 需要先準備好**羅盤** [compass] 才不會迷路。

        幫代理 Agent 寫個程式，讓它先把門打開。
      MC_HOC_2017_03_Kiki: "玩家的冒險旅程將在秘密樹林中打開上鎖的門後開始！ \n\n撰寫代碼，幫助 Agent 開門以讓他前往壓板。"
      MC_HOC_2017_04: 變更上一個版圖的循環，讓 Agent 可以在這條河較寬的部分開闢路徑。
      MC_HOC_2017_04POINT5_Cole: "您已安全離開沼澤！現在，讓玩家安全地抵達橙色方塊。 \n\n找到簡單的圖形，並使用循環來通過前兩個壓板，幫助
        Agent 清除路徑。"
      MC_HOC_2017_04POINT5_RYAN: "您已經安全通過！ \n\n現在，讓 {currentPlayerName} 安全地通過迷宮以收集**斧頭**
        [diamond_axe]"
      MC_HOC_2017_04POINT5_RYAN_2019: "您已經安全通過！ \n\n現在，讓 {currentPlayerName} 安全地通過迷宮以收集**斧頭**
        [diamond_axe]"
      MC_HOC_2017_04_Cole: "Agent 可以過河了！\\\r\n \\\r\n使用「重複」循環以解決此版圖，並幫助 {currentPlayerName}
        前往門後的**桶子** [bucket_empty]。"
      MC_HOC_2017_04_Cole_2019: "Agent 可以過河了！\\\r\n \\\r\n使用「重複」循環以解決此版圖，並幫助 {currentPlayerName}
        前往門後的**桶子** [bucket_empty]。"
      MC_HOC_2017_04_Kiki: "進入秘密樹叢，就可以抵達這片美麗的綠洲！若要完成此關卡，玩家必須前往小屋中的橙色方塊。 \n\n使用「重複」循環，幫助
        Agent 一路前往壓板，使用壓板即可開啟小屋大門。"
      MC_HOC_2017_05: "循環不一定有幫助。 \n\n這些仙人掌長在不起眼的圖形中，因此循環無法正確地清除這些仙人掌。相反的，我們為您提供名為「破壞並移動」的功能，此功能可以在每次
        Agent 遇到障礙時幫您清除障礙。"
      MC_HOC_2017_05_Cole: "糟糕，橋沒了！ \n\n設定 Agent 的代碼，以使用「放置」方塊來重建橋樑，這樣 {currentPlayerName}
        才能抵達**鏟子** [diamond_shovel] 的位置。"
      MC_HOC_2017_05_Cole_2019: "糟糕，橋沒了！ \n\n設定 Agent 的代碼，以使用「放置」方塊來重建橋樑，這樣 {currentPlayerName}
        才能抵達**鏟子** [diamond_shovel] 的位置。"
      MC_HOC_2017_05_Josh: "糟糕，橋沒了！ \n\n幫助 Agent 重建橋樑，讓玩家可以前往**鏟子**的位置。"
      MC_HOC_2017_05_Kiki: "是時候讓玩家離開秘密樹叢，並繼續冒險旅程了，不過橋沒了！ \n\n幫助 Agent 重建橋樑然後移動木板，這樣玩家才能前往橙色方塊。"
      MC_HOC_2017_06_Cole: "又是一條河，但這條河寬多了！\\\r\n \\\r\n修正此代碼，幫助 Agent 建造橋樑，這樣 {currentPlayerName}
        才能前往**十字鎬** [diamond_pickaxe] 的位置。"
      MC_HOC_2017_06_Cole_2019: "又是一條河，但這條河寬多了！\\\r\n \\\r\n修正此代碼，幫助 Agent 建造橋樑，這樣
        {currentPlayerName} 才能前往**十字鎬** [diamond_pickaxe] 的位置。"
      MC_HOC_2017_06_Josh: "又是一條河，但這條河寬多了！ \n\n修正此代碼，幫助 Agent 建造橋樑以過河。"
      MC_HOC_2017_06_Kiki: "又是一條河，但這條河寬多了！ \n\n修正此代碼，幫助 Agent 建造橋樑以過河。"
      MC_HOC_2017_07_Cole: "路上有冰塊！\\\r\n \\\r\n「清除路徑」的功能可幫助您破壞冰塊，並讓 {currentPlayerName}
        前往礦車 [minecart_normal]！"
      MC_HOC_2017_07_Cole_2019: "路上有冰塊！\\\r\n \\\r\n「清除路徑」的功能可幫助您破壞冰塊，並讓 {currentPlayerName}
        前往礦車 [minecart_normal]！"
      MC_HOC_2017_07_Kiki: "循環不是重複代碼的唯一方式！ \n\n這裡我們為您提供了名稱為「清除仙人掌」的功能，此功能可在您每次使用時幫助您清除三株仙人掌。使用兩個「清除仙人掌」方塊以清除路徑，前往橙色方塊。"
      MC_HOC_2017_07a_Kiki: 現在，請編輯此循環已幫助 Agent 清除前往橙色方塊的路徑。
      MC_HOC_2017_08_Cole: "現在，您不需要破壞才能移動，您將必須放置一個方塊。 \n\n變更所提供的沙漠使用功能。"
      MC_HOC_2017_08_Kiki: "現在，您不需要破壞仙人掌，而是必須在熔岩上放置石頭，然後再破壞砂岩。 \n\n變更此關卡使用的功能。"
      MC_HOC_2017_08_RY: "現在您有**兩個**可以選擇使用的功能！ \n\n使用這些功能，快速建造讓 {currentPlayerName}
        可以橫跨熔岩的橋樑。"
      MC_HOC_2017_08_Will: "現在您有**兩個**可以選擇使用的功能！ \n\n使用這些功能，快速建造讓玩家可以橫跨熔岩的橋樑。"
      MC_HOC_2017_09_Cole: 使用功能幫助 Agent 破壞玩家通往壓板路徑上的巨大泥土方塊。
      MC_HOC_2017_09_Kiki: "此起始代碼不可移除。 \n\n新增指令至「建立軌跡」功能，讓工作空間中的程式可以引導 Agent 前往壓板。"
      MC_HOC_2017_09_RS_CLONE: 修正此功能以補洞，然後站在壓板上以清除前往火把的路徑。
      MC_HOC_2017_10_Cole: 使用此功能來清除礦車的路徑，然後走入地獄入口。
      MC_HOC_2017_10_Cole_old: 請嘗試從一開始建立功能，讓 Agent 可以更輕鬆地完成此礦車，並讓玩家可以前往橙色方塊。
      MC_HOC_2017_10_Kiki: 請嘗試從一開始建立功能，讓 Agent 可以更輕鬆地完成此礦車，並讓玩家可以前往橙色方塊。
      MC_HOC_2017_10_RETRY: "您是否可找出工作空間中兩個功能之間的不同處？\\\r\n \\\r\n使用這些功能與工具箱中的其他代碼來清除前往礦車的路徑，然後收集**打火鐮**
        [flint_and_steel]。\\\r\n "
      MC_HOC_2017_10_RETRY_2019: "您是否可找出工作空間中兩個功能之間的不同處？\\\r\n \\\r\n使用這些功能與工具箱中的其他代碼來清除前往礦車的路徑，然後收集**打火鐮**
        [flint_and_steel]。\\\r\n "
      MC_HOC_2017_10_RYAN: 請嘗試從一開始建立功能，讓 Agent 可以更輕鬆地完成此礦車，並讓玩家可以前往橙色方塊。
      MC_HOC_2017_10_RYAN2: 請嘗試從一開始建立功能，讓 Agent 可以更輕鬆地完成此礦車，並讓玩家可以前往橙色方塊。
      MC_HOC_2017_11_Kiki: 現在看你表現了！看看你可以在這片凍湖打造出什麼。
      MC_HOC_2017_13_Cole: "**自由發揮：**現在換你表現囉，在 Agent 上編程來探索這個世界。"
      MC_HOC_2017_4.5v2: "您已安全離開沼澤！現在，讓玩家安全地抵達橙色方塊。 \n\n找到簡單的圖形，並使用循環來通過前兩個壓板，幫助 Agent
        清除路徑。"
      MC_HOC_2017_Ali: 請查看下方的功能。您要如何使用這些功能來避開地獄幽靈，並幫助 {currentPlayerName} 安全拿到**附魔書**
        [book_enchanted]？
      MC_HOC_2017_Ali_2019: 請查看下方的功能。您要如何使用這些功能來避開地獄幽靈，並幫助 {currentPlayerName} 安全拿到**附魔書**
        [book_enchanted]？
      MC_HOC_2017_FP10x10: "**自由遊戲：**現在，就看您的表現了！您可以挑戰自己，在此關卡中收集到所有鑽石嗎？ "
      MC_HOC_2017_FP10x10_RE: "**自由遊戲：**現在，就看您的表現了！您可以挑戰自己，在此關卡中收集到所有鑽石嗎？ "
      MC_HOC_2017_FP20x20: "**自由發揮：**現在換你表現囉，在 Agent 上編程來探索這個世界。"
      MC_HOC_2017_FP20x20_2019: "**自由發揮：**現在換你表現囉，在 Agent 上編程來探索這個世界。"
      MC_HOC_2017_Ryan_03: "您知道嗎？您可以在循環中加入多段代碼。 \n\n使用「重複」循環，在水中放置方塊，幫助 Agent 建造渡河橋樑。"
      MC_HOC_2017_Ryan_05: "有時候，您必須破壞擋住玩家路徑的東西。 \n使用「破壞」方塊來清除 Agent 和壓板之間的所有仙人掌。"
      MC_HOC_Kiki_02: 有人必須先在壓板上，然後側門才會開啟。幫助 Agent 抵達壓板，這樣玩家才能離開房屋。
      Mike Test Bee Conditionals 1: "這雲遮住了我的視線！\n\\\r\n\\\r\n檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。\\\r\n注意，它會變來變去的！"
      Mike Test Bee Conditionals 2: "**評量：**收集所有的花蜜。\\\r\n小心，不要採集沒有花蜜的紫花。"
      MikeTest1: Markdown
      NEW Course 4 Artist Functions 1: "你能使用一個重複迴圈，畫出一個邊長 100 像素的正方形嗎？\\\r\n\\\r"
      NEW Course 4 Artist Functions 10.1: 用上個關卡的函式畫出這個圖案。
      NEW Course 4 Artist Functions 10: "點擊「編輯」，把所有積木放到函式定義中，來畫出邊長 40 像素的正方形。\\\r\n\\\r"
      NEW Course 4 Artist Functions 11: "現在我們想創建一個新函式，名為 `draw a line of squares`（畫排正方形），用來將六個正方形畫在一橫列上。\\\r\n\\\r\n你可以用我們為你準備好的函式
        `draw a square 20` 來建立出這個新函式嗎？\\\r\n<br/><br/>\\\r\n\\\r\n_注意：我們已經把筆跡調得比較細了。點一下
        `draw a square 20` 函式上的「編輯」來看看如何完成！_"
      NEW Course 4 Artist Functions 12: 使用上一關的 draw a line of squares 函式來畫出這個圖案。
      NEW Course 4 Artist Functions 13: "你可以使用 `draw a line of squares`（畫出方格邊）函式畫出一個星形嗎？
        \\\r\n\\\r\n（請確定在你轉向 144 度之前`移動-向前` 了 60 像素！）"
      NEW Course 4 Artist Functions 14: |-
        自由發揮時間到了！
        你想畫什麼都可以！
      NEW Course 4 Artist Functions 2: "你可以畫出 3 個正方形嗎？\\\r\n\\\r\n每個正方形的邊長是 100 像素，且之間要相隔
        20 像素。"
      NEW Course 4 Artist Functions 3: "這裡有個新的積木，稱為函式積木。點擊「編輯」，然後在裡頭添加能畫出一個邊長 100
        像素的正方形所需的積木。\\\r\n\\\r\n當你編輯完這個函式後，點擊「關閉」來返回你的程式。"
      NEW Course 4 Artist Functions 4: '使用 draw a square（畫個正方形）函式來畫出這個圖案。 '
      NEW Course 4 Artist Functions 5: "Draw a square（畫個正方形）積木是如何知道要執行哪些指令的呢？點擊在 draw
        a square 積木上頭的「編輯」，在函式編輯器中的這些積木就是用來定義函式的。\\\r\n\\\r\n<br/>\\\r\n當你完成定義後，點擊「儲存並關閉」接著再點擊「運行」就可以看到結果。\\\r\n\\\r"
      NEW Course 4 Artist Functions 6: "你能用 draw a square（畫個正方形）函式積木來畫出這個圖形嗎？提示：正方形之間的距離為
        20 像素。\\\r\n\\\r"
      NEW Course 4 Artist Functions 7: "你已經掌握函式積木的使用技巧了嗎？讓我們修改一下代碼，來讓正方形的邊長變成 200像素。\\\r\n\\\r\n在「編輯」上點一下以進入
        draw a square（畫個正方形）函式。\\\r\n\\\r\n記住點擊「關閉」以離開函式編輯器。 "
      NEW Course 4 Artist Functions 8: 我們已經創建了一個新的函式給你，叫做 draw a triangle（畫個三角形）。你可以編輯這個函式定義以畫出每邊長
        100 像素的三角形嗎？
      NEW Course 4 Artist Functions 9: 你可以只用 1 個積木來完成關卡嗎？
      NEW Course 4 Artist Functions inspire: "<img src=\"https://images.code.org/5e50e6ef0cafb40a8b697ea158047412-image-1441260841174.11.12.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！\\\r\n\\\r\n如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。\n\\\r\n\\\r"
      NEW Course 4 Artist Params 1: "我們來定義這個函式，來畫出一個邊長為 50 像素的正方形。點擊「編輯」來開始。\\\r\n\\\r"
      NEW Course 4 Artist Params 10: "建立一個 draw a hexagon（畫個六邊形）函式積木，裡頭帶有 length（長度）參數。\\\r\n\\\r\n這個六邊形的邊長為
        100 像素。"
      NEW Course 4 Artist Params 11: "你想得到要怎麼畫出這個形狀嗎？\\\r\n\\\r\n編輯函式來使用 sides（邊長）參數。"
      NEW Course 4 Artist Params 12: "你可以完成這個畫嗎？\\\r\n\\\r\n所有形狀的邊長都是 100 像素。"
      NEW Course 4 Artist Params 13: |-
        讓我們編輯 draw a polygon（畫個多邊形）這個函式。

        它已經有 sides（邊數）參數了，現在讓我們添加一個 length（長度）參數到上頭。

        每個圖形的周長是 200 像素，你知道當周長固定時，正多變形的邊長要怎麼樣計算出來嗎？
      NEW Course 4 Artist Params 14: "編輯 draw a spiral edge（畫個螺旋紋），使用 length（長度）和
        sides（邊數）參數，然後重建這些圖形。\\\r\n\\\r\n\n-   最小的正方形邊長是 5 像素。\\\r\n-   最小的三角形邊長是
        10 像素。\\\r\n-   最小的六邊形邊長是 2 像素。\\\r\n-   所有圖形最大邊長是 100 像素。  "
      NEW Course 4 Artist Params 15: "**自由發揮：**這兒除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！用不同的筆跡寬度來看看你能畫出什麼不一樣的圖形！"
      NEW Course 4 Artist Params 2: 創建一個名為 `draw triangle`（畫個三角形）的函式以製作一個邊長 50 像素的三角形。
      NEW Course 4 Artist Params 3: "現在讓我們使用這個函式在一列上畫出 5 個三角形。\\\r\n\\\r\n三角形的間距為
        30 像素。"
      NEW Course 4 Artist Params 4: 你有察覺這個函式積木有什麼不一樣嗎？點擊「運行」來看看發生什麼事。
      NEW Course 4 Artist Params 5: "將 length（長度）參數積木裡的問號（???）換成數字。\\\r\n\\\r\n這個五邊形的邊長是
        100 像素。"
      NEW Course 4 Artist Params 6: "在 length（參數）的問號處填入正確的數字以畫出這些圖形。\\\r\n\\\r\n正方形和三角形的邊長是
        100 像素，\\\r\n六邊形的邊長是 75 像素。 "
      NEW Course 4 Artist Params 7: "你能完成這個圖案嗎？ \n\n每一次畫的三角形的邊長比前一個多 25 像素。\n第一個三角形的邊長是
        25 像素。"
      NEW Course 4 Artist Params 8: |-
        畫出三角形的函式壞掉了。

        你可以修正這個函式，以分別畫出邊長為 25、50、75 的三角形嗎？
      NEW Course 4 Artist Params 9: "點擊「編輯」來完成 draw a square（畫個正方形）函式的定義，並且加一個參數。\\\r\n它應該像三角形一樣有一個
        length（長度）參數。\\\r\n\\\r\n**這次，畫出 3 個正方形**，邊長分別為 25、50、75 像素，每個正方形相隔 100 像素。"
      NEW Course 4 Artist Params inspire: |-
        <img src="https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png"
        width="250px"/>

        **自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！

        如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。

        注意：我們用了`設定透明度`積木來製作 petals（花瓣）向外褪色的效果。
      NEW Course 4 Artist Vars 12: 現在，重新建立最後一關的演算法，並創作一個邊長 150 像素的五邊形。
      NEW Course 4 Artist Vars 2: '拖曳數字積木到「設定長度」積木和「重複」積木裡，以畫出一連串的 50 像素長的三角形。 '
      NEW Course 4 Artist Vars 4: "讓我們再試一次！\\\r\n\\\r\n你可以將 length（長度）變數設為 60，以完成這個酷炫的六邊形圖案嗎？"
      NEW Course 4 Artist Vars 6: "設定正確的 length（長度），並將 length 變數拖曳到正確的位置，以畫出邊長為 100
        像素的五角形。\\\r\n\\\r\n看看你是不是能一次就能設定好 length 的值和程式碼？"
      NEW Course 4 Bee For Loops 10a: "準備好接受挑戰了嗎？善用所學，試著解決這個問題。\\\r\n\\\r\n記住：在你想出所有步驟前，你可能必須要運行程式好多次。"
      NEW Course 4 Bee For Loops 2: "添加需要的代碼來讓蜜蜂收集到所有的花蜜。\\\r\n\\\r\n看看你需要用到多少程式碼才能完成關卡！\\\r\n（我們會在下一個關卡學到更簡單的辦法。)"
      NEW Course 4 Bee For Loops 3: '啊，計數循環（for loop）讓事情變得簡單多了！你需要的程式碼都在這兒，看一看它是如何放在一起的，然後點擊「運行」看看它怎麼工作。 '
      NEW Course 4 Bee For Loops 4 4: 現在，我們需要向前移動，移動距離為計數器的次數，接著採集花蜜，採集個數也是計數器的次數。你可以使用
        2 個「重複」迴圈來完成這個挑戰嗎？
      NEW Course 4 Bee For Loops 4: '把計數迴圈裡的問號（???）換成蜜蜂必須收集的最大花蜜數。 '
      NEW Course 4 Bee For Loops 5 5: 你已經掌握計數循環的使用技巧了嗎？讓我們來幫助蜜蜂取得剩餘的花蜜。
      NEW Course 4 Bee For Loops 5: 你也可以使用一個「計數迴圈」來倒數，試著從 5 數到 1，間隔數為 1 的方式來採集這些花蜜。
      NEW Course 4 Bee For Loops 6: "在你的計數迴圈上的最後一個數字叫做 increment（增量），每次過了一個循環，counter
        變數會依照增量的值改變。\\\r\n\\\r\n試試每次增量 2，以收集到這些花朵。"
      NEW Course 4 Bee For Loops 7: "現在，我們來組合 counter（計數器）變數和一個運算積木！怎樣透過 counter 變數減少積木使用數來遊覽花園呢？\\\r\n\\\r\n這次你要怎麼做才能收集到
        3、6、9、12、15個花蜜呢？counter 變數就是秘密武器！\\\r\n\\\r\n<br/>\\\r\n記住：如果你的循環是遞增計數的，增量就會在每次循環加到
        counter 裡。\\\r\n\\\r"
      NEW Course 4 Bee For Loops 8: |-
        你明白了吧！

        如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      NEW Course 4 Bee For Loops 95: 仔細看看你建立的計數迴圈中的每個片段。想一想，哪個數字需要被加倍才能完成這個關卡？為什麼呢？
      NEW Course 4 Play Lab Params 11: "自由活動時間到了！\n好好享用工具箱的所有積木吧。\\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>這裡有些點子。</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n
        \       \\t<li><strong>追著跑</strong>\n- 讓角色 2 來回走動，然後使用你的方向鍵移動角色 1，追著角色 1 跑，直到他們碰在一起。
        </li>\r\n            <li><strong>打地鼠</strong>\n- 讓一個角色在隨機位置突然出現，在他消失前點擊他就得分。
        </li>\r\n            <li><strong>猜誰先出現</strong> - 讓二個角色都先消失，隨機的改變位置，並隨機出現其中一個角色。點擊第一個出現的角色就得分，如果點擊到第二個出現的角色就扣分！
        </li>\r\n        </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      NEW Course 4 Play Labs For Loops 8a: "\\*挑戰：\\*\\* 你可以使用「計數迴圈」從上而下的讓每個角色先說出自己的角色編號，然後在畫面上消失嗎？ "
      New Minecraft Hero Project: "**自由發揮：**現在換你表現囉，在 Agent 上編程來探索這個世界。"
      Overworld Move to Sheep: 添加第二個「移動-向前」指令，到達綿羊的位置。
      Overworld Move to Sheep_2018: 添加第二個「移動-向前」指令，到達綿羊的位置。
      Overworld Move to Sheep_2019: 添加第二個「移動-向前」指令，到達綿羊的位置。
      PS - test - pixelation: "# 做做看\\\r\n\n\\\r\n輸入 0 或是 1 來完成這個 X 形的圖案，如果你想要清除重來，可以點擊「可讀格式」。"
      PS FR test 7-25: 這裡是\*一些**\*標記**
      PS copy 2-3 Bee Conditionals 5: "這些神奇的紫花又開始變化了！\\\r\n\\\r\n每次你在過這個關卡時，紫色的花上可能會有
        1 個花蜜，或是什麼也沒有…但除非你開始運行程式，否則你不會知道確切的數量！\\\r\n\\\r\n小心不要在沒有任何花蜜的花朵上採集。\\\r\n你必須先用`如果花蜜…`積木檢查看看是否花蜜數等於
        1。"
      Predict Loop I: "# 預測\\\r\n\n\\\r\n什麼輸出會作為這個迴圈的結果呢？"
      Predict Loop I_2018: "# 預測\\\r\n\n\\\r\n什麼輸出會作為這個迴圈的結果呢？"
      Predict Loop I_2019: "# 預測\\\r\n\n\\\r\n什麼輸出會作為這個迴圈的結果呢？"
      Repeat Predict Contained: "＃預測\\\r\n\\\r\n這下面的迴圈將會運作幾次呢？"
      Room Escape Workshop - free play: "# 你做到了！\\\r\n\n\\\r\n你成功逃出房間了！現在我們來自訂它。\\\r\n\\\r\n你可以：\\\r\n\\\r\n\\*\n添加更多的房間\\\r\n\n-
        \  在房間裡添加更多能和使用者互動的物品。\\\r\n-   \\*\n    為房間加上更多的裝飾"
      Ryan_Demo: |-
        讓這隻麋鹿跳舞！

        拖曳出 <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> 程式積木到工作區上。連接到在 <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"小節"</title></block></xml> 程式積木之的後面。您的舞者應該在第 4 個小節之後開始新的動作。

        **小節**用於計算音樂中的時間。在本教學課程中，一小節的長度為四拍。
      Standalone_Artist_2: "畫出這個菱形，它的角度分別是 120 和 60 度，邊長則是 150 像素。\\\r\n\\\r"
      Standalone_Artist_3: "你能畫出這個六邊形嗎？它的每個邊長 100 像素，每個角度 60 度。\\\r\n\\\r"
      Standalone_Artist_4: 現在你有了一個新的積木可以玩囉，這個積木是迴圈（loop），它能將一連串的指令重複執行。如果你循環這些指令 6
        次，會發生什麼事呢？
      Standalone_Artist_5.5: "注意我們是如何利用重複積木把畫一個菱形的程式再簡化的。接著，我們要把這個程式放到迴圈裡，並循環整個序列
        12 次以畫出這朵花。提示：每畫完一次菱形後，你需要轉向 30 度，這樣子你才不會畫在相同的菱形上。\\\r\n\\\r"
      Standalone_Artist_5: "你需要重複菱形多少次，才能畫出這朵花呢？\\\r\n\\\r"
      Standalone_Artist_6: "循環這個畫六邊形的程式 6 次以創作出這個花樣。你知道每畫完一次六邊形要轉多少角度嗎？提示：把一圈的度數除以循環次數。\\\r\n\\\r"
      Standalone_Artist_7: "函式是另一種編程的工具，它可以幫助你避免重複打相同的程式編碼。這個函式會畫出花朵，所以你可以在任何你想要的時候用它來畫花朵。用這個函式和新的「跳躍」積木來繪製這些花朵。提示：花朵之間的間隔距離是
        150 像素。\\\r\n\\\r"
      Standalone_Artist_8: "這裡有個函式名為 Draw a shape（畫個形狀），我們已經編寫了程式來畫出六角形。運行這個程式看看它會做些什麼，並試著修改函式看會發生什麼事。你可以讓它畫出一個正方形、三角形、八角形嗎？\\\r\n\\\r"
      Standalone_Artist_9: "現在繼續創作任何你想要的圖案！你得到了一個空的函式，讓你想做啥就做啥！\\\r\n\\\r"
      Testing Quantum Farmer: "哇，瞧瞧這兒！\\\r\n\\\r\n我不知道要用多少鏟土才可以把它填平。\\\r\n你可以寫一個程式，讓它不斷的用`填充`積木填土，直到地面變平坦嗎？
        \ "
      Text Compression 1: |-
        找出文本中的規律（重複的單字或短語），在右側的詞典中輸入你找到的字詞，當你在詞典中輸入時，就會以象徵的符號將文本中的字詞取代。

        <img src="http://code.org/api/hour/begin_text_compression.png">
      U1L13 Text Compression: 找出文本中的規律（重複的單字或短語），在右側的詞典中輸入你找到的字詞，當你在詞典中輸入時，就會以象徵的符號將文本中的字詞取代。
      U1L6 Free Response Reflection: |-
        字數不得超過 50 字，描述一個數字系統的概念。

        為什麼數字系統需要規則才有用？
      U1L6 Free Response Reflection_2018: |-
        字數不得超過 50 字，描述一個數字系統的概念。

        為什麼數字系統需要規則才有用？
      U1L6 Free Response Reflection_2019: |-
        字數不得超過 50 字，描述一個數字系統的概念。

        為什麼數字系統需要規則才有用？
      U1L7 Free Response Reflection: |-
        在下方空白處寫下你從這課學習到了什麼，包含：

        3 個記憶（你學習到什麼），

        2 個意見（你注意到什麼），

        1 個洞察（你理解到什麼）。
      U1L7 Free Response Reflection_2018: |-
        在下方空白處寫下你從這課學習到了什麼，包含：

        3 個記憶（你學習到什麼），

        2 個意見（你注意到什麼），

        1 個洞察（你理解到什麼）。
      U1L7 Free Response Reflection_2019: |-
        在下方空白處寫下你從這課學習到了什麼，包含：

        3 個記憶（你學習到什麼），

        2 個意見（你注意到什麼），

        1 個洞察（你理解到什麼）。
      U1L9 Free Response Assessment: 選擇一個你今天最愛的學習主題。說說你學到了什麼，還有它和我們今天創建和使用的數字系統有什麼關係。
      U2L05 Reflection 1: 用你自己的方式說明，在今天的挑戰中，你需要克服的主要障礙是什麼？這些問題和網路上遇到的真實問題有什麼關聯？
      U2L05 Reflection 1_2018: 用你自己的方式說明，在今天的挑戰中，你需要克服的主要障礙是什麼？這些問題和網路上遇到的真實問題有什麼關聯？
      U2L05 Reflection 1_2019: 用你自己的方式說明，在今天的挑戰中，你需要克服的主要障礙是什麼？這些問題和網路上遇到的真實問題有什麼關聯？
      U2L14 Free Response Getting Started: "破解程式和解密訊息有什麼不同？\\\r"
      U2L14 Free Response Getting Started_2018: "破解程式和解密訊息有什麼不同？\\\r"
      U2L14 Free Response Getting Started_2019: "破解程式和解密訊息有什麼不同？\\\r"
      U3 - Sprites and Mod - Wrap Many Squares: "# Stuff"
      U3 Variables misconceptions 2: 程式 2 會輸出什麼？
      U3 Variables misconceptions 3: 程式 3 會輸出什麼？
      U3 Variables misconceptions 4: 程式 4 會輸出什麼？
      U3L02 Free Response Wrap Up: |-
        通過回答以下問題總結您的第一個應用實驗室課程的經驗:

        -   使用如此小的一組基本命令進行程式設計，有什麼讓你感到驚訝的？
        -   你能用這樣一套有限的工具來創造嗎？
        -   這項活動最令人沮喪的是什麼？如果你能添加一個額外的簡單命令, 它將是什麼, 為什麼？
      U3L02 Free Response Wrap Up_2018: |-
        通過回答以下問題總結您的第一個應用實驗室課程的經驗:

        -   使用如此小的一組基本命令進行程式設計，有什麼讓你感到驚訝的？
        -   你能用這樣一套有限的工具來創造嗎？
        -   這項活動最令人沮喪的是什麼？如果你能添加一個額外的簡單命令, 它將是什麼, 為什麼？
      U3L02 Free Response Wrap Up_2019: |-
        通過回答以下問題總結您的第一個應用實驗室課程的經驗:

        -   使用如此小的一組基本命令進行程式設計，有什麼讓你感到驚訝的？
        -   你能用這樣一套有限的工具來創造嗎？
        -   這項活動最令人沮喪的是什麼？如果你能添加一個額外的簡單命令, 它將是什麼, 為什麼？
      U3L03 Free Response Reflection: 在下方空白處回應老師的提問。
      U3L04 Free Response Reflection: 回應老師的提示如下。
      U3L06 Free Response Reflection: 在下方空白處回應老師的提問。
      U3L13 - Debug Id plus logic problem: "# 除錯 1"
      U3L2 Free Response Reflection: 在下方空白處回應老師的提問。
      U4 - Objects - Template Contacts: "![](https://images.code.org/53a5bdfb7f4ec83174756c8e094558fd-image-1449518131328.png)"
      U4 - Objects - Template Contacts_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 - Objects - Template Contacts_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 Model App: "# 這是提供給 U4 model app 的範本"
      U4 Model App_2018: "# 這是提供給 U4 model app 的範本"
      U4 Model App_2019: "# 這是提供給 U4 model app 的範本"
      U4L02 - Objects - Template1: "# 範本"
      U4L02 - Objects - Template1_2018: "# 範本"
      U4L02 - Objects - Template1_2019: "# 範本"
      U4L02 Free Response: 這裡有免費回應提示。
      U4L03 Free Response: 這裡有免費回應提示。
      U4L04 Free Response: 這裡有免費回應提示。
      U4L05 Free Response: 這裡有免費回應提示。
      U4L06 Free Response: 這裡有免費回應提示。
      U4L07 Free Response: 這裡有免費回應提示。
      U4L08 Free Response: 這裡有免費回應提示。
      U4L09 Free Response: 這裡有免費回應提示。
      U4L10 Free Response: 這裡有免費回應提示。
      U4L11 Free Response: 這裡有免費回應提示。
      U4L12 Free Response: 這裡有免費回應提示。
      U4L13 Free Response: 這裡有免費回應提示。
      U4L14 Free Response: 這裡有免費回應提示。
      U4L15 Free Response: 這裡有免費回應提示。
      U4L16 Free Response: 這裡有免費回應提示。
      U4L17 Free Response: 這裡有免費回應提示。
      U4L18 Free Response: 這裡有免費回應提示。
      U4L19 Free Response: 這裡有免費回應提示。
      U4L20 Free Response: 這裡有免費回應提示。
      U4L21 Free Response: 這裡有免費回應提示。
      U4L22 Free Response: 這裡有免費回應提示。
      U4L23 Free Response: 這裡有免費回應提示。
      U4L24 Free Response: 這裡有免費回應提示。
      U4LXX Free Response: 這裡有免費回應提示。
      Unit 2 RGB Mapping: "# RGB 色彩\\\r\n\n\\\r\n所有的色彩，不論他們有沒有名字，都可以用不同級別的紅、綠、藍三色光描述出來，這就是所謂的
        RGB 值（Red、Green、Blue）。你可以使用左側的小工具試試不同的 RGB 值，並看看這些色彩的變化。\\\r\n\\\r\n\n-   **點擊「運行」可以開始左側的小工具，**\n
        \   使用滑杆來調整紅色、綠色、藍色色光的級數，\\\r\n-   \\*\n    下方的每個色彩有他們自己 RGB 值，在下面方塊中輸入你得到的數值。\\\r\n
        \   \\\r\n    A) red: 216, green: 191, blue: 216 - rgb(216,191,216)\\\r\n
        \   \\\r\n    B)\n    red: 255, green: 239, blue: 213 - rgb(255,239,213)\\\r\n
        \   \\\r\n    C) red: 255, green:\n    140, blue: 105 - rgb(255,140,105)\\\r\n
        \   \\\r\n    D) red: 123, green: 104, blue: 238\n-   rgb(123,104,238)\\\r\n
        \   \\\r\n    E) red: 107, green: 142, blue: 35 - rgb(107,142,35)\\\r\n    \\\r\n
        \   \\\r\n    <div\n    style=\"font-size: 16px\">\r\n    <br />\r\n    <details>\r\n
        \   <summary>**為什麼紅加綠會變成黃色？**</summary>\r\n    <p>當你混合顏料時，紅色和綠色混合後會變成咖啡色，但是
        RGB 的混合是光線不是顏料，RGB 使用了_加色混合_，在加色混合中，紅加綠等於黃，紅加藍等於品紅，藍加綠等於青色。當你混成這三個主要顏色（紅、綠、藍）時會變成白，你可以在<a
        href=\"https://en.wikipedia.org/wiki/Additive_color\">Wikipedia\n-   Additive
        Color</a>上閱讀到更多訊息。\\\r\n    </p> </details>\r\n    <details>\r\n    <summary>**RGB
        可以混合出多少顏色？**</summary>\r\n    <p>\r\n    你可以透過 RGB 製作出超過 1600 萬種的顏色。\r\n    </p></details>\r\n
        \   </div>\r"
      What is the difference between formative and summative assessment?: 下面的連結中提供了形成性和總結性評量的定義和範例：
      'Widget: Text Compression': 找出文本中的規律（重複的單字或短語），在右側的詞典中輸入你找到的字詞，當你在詞典中輸入時，就會以象徵的符號將文本中的字詞取代。
      'Widget: Text Compression_2018': 找出文本中的規律（重複的單字或短語），在右側的詞典中輸入你找到的字詞，當你在詞典中輸入時，就會以象徵的符號將文本中的字詞取代。
      'Widget: Text Compression_2019': 找出文本中的規律（重複的單字或短語），在右側的詞典中輸入你找到的字詞，當你在詞典中輸入時，就會以象徵的符號將文本中的字詞取代。
      aE1: "<img src=\"https://images.code.org/fa3c416b74ff9071455535955bc4df35-image-1465507662295.gif\"\nstyle=\"float:left;
        width:100px; margin: 0 20px 80px 100px;\"/>\\\r\n\\\r\n\n<div\nstyle=\"color:
        #7665a0; font-size: 1.6em; line-height: 1.4em;\">\r\n首先，我們需要餐巾！\r\n\r\n選一個你最愛的形狀：\r\n-
        正方形（簡單）\r\n- 三角形（適中）\r\n- 六邊形（困難）\r\n\r\n</div>\r\n<br/>\r\n\r"
      aE2: "<img src=\"https://images.code.org/2a67ea28a0fb9f674fd764b350b297da-image-1465514320176.gif\"\nstyle=\"width:400px;
        margin: 0 20px 20px 10px;\"/>\\\r\n\\\r\n\n<div style=\"color:\n#7665a0; font-size:
        1.6em; line-height: 1.4em;\" >現在我們足夠的數量分給大家！\r\n<br/><br/>\r\n\r\n我們把剛剛做出的形狀排列，一列
        14 個餐巾。  \r\n<br/>\r\n當你放置一個迴圈到另一個迴圈裡時，我們稱它是巢狀迴圈。 \r\n\r\n要怎樣把前個階段的程式變成迴圈，才能把
        14 個餐巾排成一列呢？</div>\r"
      aE3: "<img src=\"https://images.code.org/e9fe83556eec68be9ebd7de9a16267b1-image-1465516277348.gif\"\nstyle=\"width:400px;
        margin: 0 20px 20px 100px;\" loop=\"infinite\"/>\\\r\n\\\r\n\n<div\nstyle=\"color:
        #7665a0; font-size: 1.6em; line-height: 1.4em;\" >\r\n我們得到一塊桌布囉！ <br/></br>\r\n\r\n拿出你的餐巾，然後用另一個**外層迴圈**把它們一個個的縫起來，就能為我們的桌子做個桌布了。\r\n</div>\r\n\r"
      aE3alternate: "\\\r\n\n<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n如果使用者選擇了五邊形餐巾，然後修改線條的寬度或顏色，這個交替顯示的圖像會是什麼樣子。\r\n</div>\r\n\r"
      aE3alternateB: "\\\r\n\n<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n如果使用者選擇了三角形餐巾，然後修改線條的寬度或顏色，這個交替顯示的圖像會是什麼樣子。\r\n</div>\r\n\r"
      aE4: "\\\r\n\n<div style=\"color: #7665a0; font-size: 1.6em;\nline-height: 1.4em;\"
        >\r\n喔不！我們的餐巾都太小了！ \r\n<br/><br/>\r\n我們要讓餐巾變成 2 倍大，但桌布的尺寸保持不變，你要修改哪些數字才能完成？\r\n<br/><br/>\r\n（如三角形圖像所示）\r\n</div>\r\n\r"
      aE5: "\\\r\n\n<div style=\"color: #7665a0; font-size: 1.6em;\nline-height: 1.4em;\"
        >\r\n我們來看看一些窗飾！\r\n<br/><br/>\r\n這是你用來畫出一列餐巾的原始程式。放個 4 列就可以製作出個花樣來裝飾你的窗框了。\r\n</div>\r\n\r"
      aE6: "<div style=\"color: #7665a0; font-size: 1.6em; line-height:\n1.4em;\"
        >\r\n客人需要有可以坐的東西！\r\n<br/><br/>\r\n小藝術家想不到要怎麼做出有趣的椅子，你知道要循環畫這個半圓多少次才可以完成？\r\n</div>"
      aE7: "<div style=\"color: #7665a0; font-size: 1.6em; line-height:\n1.4em;\"
        >\r\n來帶流光怎麼樣？\r\n<br/><br/>\r\n如果你建立另一個像這樣的迴圈，但是將向右轉改成向左轉，會發生什麼事呢？\r\n\r\n你可以重複這些來畫出這個波浪嗎？\r\n</div>"
      aE8: "<div style=\"color: #7665a0; font-size: 1.6em; line-height:\n1.4em;\"
        >\r\n小藝術家想要做個相框當作派對禮物！\r\n<br/><br/>\r\n把製作彩帶的程式循環 4 次，就可以做出這個相框。\r\n<br/><br/>我們已經添加了一個特別的積木，叫做
        `curvy corner`（彎曲的角落），它可以幫你做出花俏的邊角！ \r\n</div>"
      aEfreeplay: "<div style=\"color: #7665a0; font-size: 1.6em;\nline-height: 1.4em;\"
        >\r\n<b>自由發揮：</b>\r\n我們需要一些裝飾品來裝飾這個房子。\r\n<br/><br/>\r\n你可以設計個飾品點綴一下嗎？\r\n</div>\r\n<br/>\r\n<h4>\r\n<details>\r\n<summary>需要點子？</summary>\r\n<br/>\r\n<br/>\r\n來個菱形格狀桌巾吧！
        \r\n<img src=\"https://images.code.org/2c092ea5edbb33405c019110df3f5710-image-1466095499984.43.56.png\"\nwidth=\"200px\"/>
        \ \r\n<hr/>\r\n<br/>\r\n華麗的線條怎麼樣！\r\n<img src=\"https://images.code.org/361d2ad667853418a040ec9383505169-image-1466096394561.56.12.png\"\nwidth=\"200px\"/>
        \ \r\n<hr/>\r\n\r\n<br/>做個全新的玩意！  \r\n<img\nsrc=\"https://images.code.org/6809a1bd2a364ae7e0ff42745ec1fe1b-image-1466097871045.23.44.png\"\nwidth=\"200px\"/>
        \ \r\n<hr/>\r\n\r\n\r\n</details>\r\n</h4>\r\n\r"
      artistLoopsK2: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n現在，用一個`重複`積木來畫出這個線條 5 次！<br/><br/>\r\n</div>\r\n\r\n<img src=\"https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif\"\nwidth=\"300\"/>\r"
      artistLoopsK2gradek_artist_loops3: "<div style=\"color: #7665a0; font-size:\n1.6em;
        line-height: 1.4em;\" >\r\n現在，用一個`重複`積木來畫出這個線條 5 次！<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif\"\nwidth=\"300\"/>\r"
      artistLoopsK3: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n畫一個 8 步長的線段，這會成為我們王國的土地！<br/><br/>\r\n</div>\r\n\r\n<img src=\"https://images.code.org/c00b930eb5fb13ae946847adc51c9bd3-image-1467935631246.gif\"\nwidth=\"300\"/>\r"
      artistLoopsK4: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n現在我們需要一個帶有吊橋的城堡，修正這個程式，讓吊橋直立而不是掉下來的。<br/><br/>\r\n</div>\r\n\r\n<img\nsrc=\"https://images.code.org/84b93e1b9dad3ee52a46c767524d3558-image-1467935697224.gif\"\nwidth=\"300\"/>\r"
      artistLoopsK5: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n現在我們需要修一下城堡的頂部。你可以循環這個程式 3 次嗎？<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/f418ccba20b7230baba1328143bd0092-image-1467935762464.gif\"\nwidth=\"300\"/>\r"
      artistLoopsK6: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n有人困卡在塔裡了！修復樓梯讓他們能脫困。<br/><br/>\r\n</div>\r\n\r\n<img src=\"https://images.code.org/1efb95ca15f66b46145725769d3d279c-image-1467935856461.gif\"\nwidth=\"300\"/>\r"
      artistLoopsK7: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n這座塔真可愛，樓下不知道有什麼麼？建造另一個樓梯到下面看看！<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/af040c27be11c3a639e18c440c8a047c-image-1467936046481.gif\"\nwidth=\"300\"/>\r"
      artistLoopsK8: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n哇！那兒有個花園！幫忙修復這些階梯，我才能到那兒看看。<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/bf368872da36217b0d19261fc6b84bf6-image-1467936147116.gif\"\nwidth=\"300\"/>\r"
      artistLoopsK9: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n**挑戰：**  太可愛了！我們在花園裡四處走走吧。<br/><br/>\r\n</div>\r\n\r\n<img src=\"https://images.code.org/cb5646ef57f68b47fa6c2762253a7044-image-1467936260174.gif\"\nwidth=\"300\"/>\r"
      artistLoopsKA: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n那些石頭長錯位置了…幫我移動他們，這樣我才不會掉下去！<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/5ba9e8e5c1524eec2b0ba3e4684b0cef-image-1467936361364.gif\"\nwidth=\"300\"/>\r"
      artistLoopsKB: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n看！有個劇院耶。幫我做些椅子，這樣一來我們才可以欣賞舞台劇。<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/c4263306ebb0ad1d99fe6f200a790d0c-image-1467936424533.gif\"\nwidth=\"300\"/>\r"
      artistLoopsKFP: "畫畫時間到了！使用你所學到的來畫出一個圖案。\\\r\n\\\r\n\n<hr/>\r\n<h3>一些點子</h3>\r\n<table>\r\n<tr>\r\n<td>\r\n<img\nsrc=\"https://images.code.org/8f4f2a68dae2cf0aa82cc0a49ea4df04-image-1466787750475.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一隻唱歌的蝸牛</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/732ce5dd91c7f49f06e88da1a9f664f3-image-1466794904255.gif\"\nwidth=\"150\"/><br/>\r\n<h4>偉大城市</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/37fdd6fdd761df09fd4949d5e43f0a7f-image-1466795165642.gif\"\nwidth=\"150\"/><br/>\r\n<h4>音樂會</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/f7bf86b0f86669d82ee2c1565738b9cb-image-1466794447737.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一個生日蛋糕</h4><br/><br/>\r\n</td>\r\n\r\n</tr>\r\n</table>\r"
      beeDebugVideo1: 收集所有的花蜜。
      collector example: "使用`收集`積木來取得所有的黃金：\\\r\n\\\r\n<xml>\\\r\n  <block type=\"collector_collect\"/></xml>"
      collectorSkinVideo1: "移動 Laurel 到黃金那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集 1 堆黃金以完成這個關卡。"
      collectorSkinVideo2: "移動 Laurel 到黃金那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集 1 堆黃金以完成這個關卡。"
      conditionals_forvideo_harvester: 收集所有的玉米和生菜，然後收成南瓜。
      course1_artist_loops_challenge2: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      course1_maze_debugging_challenge1: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      course2_harvester_loops_challenge1: 收集所有的玉米。
      course2_harvester_loops_challenge2: |-
        收集所有的生菜。
        注意避開樹木和田地！
      course2_playlab_stage17_11: "創作屬於你自己的故事。當你做完後記得點擊完成，讓朋友們能在手機上觀看你做的故事。\\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>需要一些靈感嗎？</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n
        \       \\t<li><strong>誰在那？</strong> - 讓所有角色以隨機圖片的方式顯示，這樣子就沒有人知道下一個出現的會是什麼。</li>\r\n
        \           <li><strong>冒險之旅</strong>\n- 改變背景，接著讓角色們互相對話，說出他們現在在哪裡。</li>\r\n
        \           <li><strong>彈跳球</strong> - 讓一個角色依方向鍵移動（使用當按向上鍵時、當按向下鍵時積木），接著在它撞到其他角色時，播放隨機音效）\n</li>\r\n
        \       </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      course3_artist_concept_challenge1: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\n挑戰時間到了！
        \ \\\r\n\\\r\n這裡有個圖案，只用了你見到的積木做出來的。想一想，要怎麼重建它？你可以邊做邊試，錯了也沒關係。我們不要求你一次就做對。\\\r\n\\\r\n這些重複的圖形和上個關卡的圖案幾乎相同，除了第一個迴圈裡用的長度比較小以外。 "
      course4_artist_fwp_challenge1: 試著運行這個程式，然後做些改變看看會發生什麼事。你能清楚的知道它是怎麼運作的嗎？（或著刪除它，然後用完全不同的程式碼來取代它）
      courseA_artist_loops10: "<div style=\"color: #7665a0;\nfont-size: 1.6em; line-height:
        1.4em;\" >\r\n是時候回到地面上了。幫幫我放上一些石頭，讓我不會掉下去！<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/5ba9e8e5c1524eec2b0ba3e4684b0cef-image-1467936361364.gif\"\nwidth=\"300\"/>\r"
      courseA_artist_loops10_2018: "<div style=\"color: #7665a0;\nfont-size: 1.6em;
        line-height: 1.4em;\" >\r\n是時候回到地面上了。幫幫我放上一些石頭，讓我不會掉下去！<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/5ba9e8e5c1524eec2b0ba3e4684b0cef-image-1467936361364.gif\"\nwidth=\"300\"/>\r"
      courseA_artist_loops10_2019: "<div style=\"color: #7665a0;\nfont-size: 1.6em;
        line-height: 1.4em;\" >\r\n是時候回到地面上了。幫幫我放上一些石頭，讓我不會掉下去！<br/><br/>\r\n</div>\r\n\r\n<img
        src=\"https://images.code.org/5ba9e8e5c1524eec2b0ba3e4684b0cef-image-1467936361364.gif\"\nwidth=\"300\"/>\r"
      courseA_artist_loops11: "<div style=\"color: #7665a0;\nfont-size: 1.6em; line-height:
        1.4em;\" >\r\n幫我建些階梯，我想看著船航行到遠方。<br/>\r\n</div>\r\n\r\n<img src=\"https://images.code.org/0dfa647dbc835fae09989a0fbfd798c7-image-1470871168220.gif\"\nwidth=\"300\"/>\r"
      courseA_artist_loops11_2018: "<div style=\"color: #7665a0;\nfont-size: 1.6em;
        line-height: 1.4em;\" >\r\n幫我建些階梯，我想看著船航行到遠方。<br/>\r\n</div>\r\n\r\n<img src=\"https://images.code.org/0dfa647dbc835fae09989a0fbfd798c7-image-1470871168220.gif\"\nwidth=\"300\"/>\r"
      courseA_artist_loops11_2019: "<div style=\"color: #7665a0;\nfont-size: 1.6em;
        line-height: 1.4em;\" >\r\n幫我建些階梯，我想看著船航行到遠方。<br/>\r\n</div>\r\n\r\n<img src=\"https://images.code.org/0dfa647dbc835fae09989a0fbfd798c7-image-1470871168220.gif\"\nwidth=\"300\"/>\r"
      courseA_artist_loops2: |-
        幫小藝術家畫出這兩個線條。

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2018: |-
        幫小藝術家畫出這兩個線條。

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2019: |-
        幫小藝術家畫出這兩個線條。

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops8: "<div style=\"color: #7665a0; font-size:\n1.6em; line-height:
        1.4em;\" >\r\n我們需要一個梯子到船上。<br/>\r\n</div>\r\n<img\nsrc=\"https://images.code.org/6e4dc767e55d11400f35c6680bbfe1e3-image-1470788284437.gif\"\nwidth=\"300\"/>"
      courseA_artist_loops8_2018: "<div style=\"color: #7665a0; font-size:\n1.6em;
        line-height: 1.4em;\" >\r\n我們需要一個梯子到船上。<br/>\r\n</div>\r\n<img\nsrc=\"https://images.code.org/6e4dc767e55d11400f35c6680bbfe1e3-image-1470788284437.gif\"\nwidth=\"300\"/>"
      courseA_artist_loops8_2019: "<div style=\"color: #7665a0; font-size:\n1.6em;
        line-height: 1.4em;\" >\r\n我們需要一個梯子到船上。<br/>\r\n</div>\r\n<img\nsrc=\"https://images.code.org/6e4dc767e55d11400f35c6680bbfe1e3-image-1470788284437.gif\"\nwidth=\"300\"/>"
      courseA_bee_seq1: 幫蜜蜂拿到一個花蜜！
      courseA_bee_seq12: 幫蜜蜂拿到一個花蜜！
      courseA_bee_seq4: 自己試試！
      courseA_bee_seq7: 添加兩個積木以完成這個關卡！
      courseA_collector_loops1: "這是冒險家 Laurel！\\\r\n\\\r\n讓她四處移動，並盡可能獲得最多的寶石。"
      courseA_collector_loops1_2018: "這是冒險家 Laurel！\\\r\n\\\r\n讓她四處移動，並盡可能獲得最多的寶石。"
      courseA_collector_loops1_2019: "這是冒險家 Laurel！\\\r\n\\\r\n讓她四處移動，並盡可能獲得最多的寶石。"
      courseA_collector_loops2: "移動 Laurel 到寶石那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集 3
        堆寶石以完成這個關卡。"
      courseA_collector_loops2_2018: "移動 Laurel 到寶石那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集
        3 堆寶石以完成這個關卡。"
      courseA_collector_loops2_2019: "移動 Laurel 到寶石那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集
        3 堆寶石以完成這個關卡。"
      courseA_collector_loops3: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseA_collector_loops3_2018: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseA_collector_loops3_2019: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseA_collector_preLoops7: "移動 Laurel 到寶石那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集
        3 堆寶石以完成這個關卡。"
      courseA_harvester_loops1: 幫助農夫撿起所有的玉米！
      courseA_harvester_loops11: 自己試試看！
      courseA_harvester_loops11_2019: 自己試試看！
      courseA_harvester_loops1_2019: 幫助農夫撿起所有的玉米！
      courseA_harvester_loops7: 換你自己試試！
      courseA_harvester_loops7_2019: 換你自己試試！
      courseA_harvester_seq1: 幫助農夫撿起所有的玉米！
      courseA_harvester_seq13: 幫助農夫撿起玉米！
      courseA_harvester_seq13_2019: 幫助農夫撿起玉米！
      courseA_harvester_seq1_2019: 幫助農夫撿起所有的玉米！
      courseA_harvester_seq2_2019: 使用 **3 個** <xml><block type="maze_moveWest" block-text="move
        west"/></xml> 積木，讓農夫到達玉米的位置！
      courseA_harvester_seq6: 自己試試！
      courseA_harvester_seq6_2019: 自己試試！
      courseA_harvester_seq9: 添加兩個積木以完成這個關卡！
      courseA_harvester_seq9_2019: 添加兩個積木以完成這個關卡！
      courseA_maze_ramp3_2018: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      courseA_maze_ramp4_2018: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseA_maze_ramp5_2018: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseA_maze_ramp5a_2018: 自己試試這個！
      courseA_maze_ramp5a_2019: 自己試試這個！
      courseA_maze_seq1: _「使用這些積木，試著讓我抓到這隻壞豬豬！」_
      courseA_maze_seq10: |-
        **挑戰：** 繞過 TNT 炸藥，讓鳥抓到豬！

        ![expandable](https://images.code.org/a656e421bc90e530a7e1ce636e507752-image-1497996976195.gif)
      courseA_maze_seq11: "移動以讓鳥抓到猪。\\\r\n\\\r\n<img src=\"https://images.code.org/c2e2d7ea98a18d899c6de183ce6d82e1-image-1471385293382.gif\"\nwidth=\"200px\"/>\\\r"
      courseA_maze_seq11_2018: "移動以讓鳥抓到猪。\\\r\n\\\r\n<img src=\"https://images.code.org/c2e2d7ea98a18d899c6de183ce6d82e1-image-1471385293382.gif\"\nwidth=\"200px\"/>\\\r"
      courseA_maze_seq11_2019: "移動以讓鳥抓到猪。\\\r\n\\\r\n<img src=\"https://images.code.org/c2e2d7ea98a18d899c6de183ce6d82e1-image-1471385293382.gif\"\nwidth=\"200px\"/>\\\r"
      courseA_maze_seq12: "抓到那頭豬！\\\r\n\\\r\n<img src=\"https://images.code.org/f908ff77eb81ee85d405a7ba66cc2986-image-1467933103380.gif\"\nwidth=\"200px\"/>\\\r"
      courseA_maze_seq12_2018: 抓到那頭豬！
      courseA_maze_seq12_2019: 抓到那頭豬！
      courseA_maze_seq1_2018: _「使用這些積木，試著讓我抓到這隻壞豬豬！」_
      courseA_maze_seq1_2019: _「使用這些積木，試著讓我抓到這隻壞豬豬！」_
      courseA_maze_seq3: "_「修正這個程式，好讓我抓到這頭豬！」_\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/629cddc754f9ad02929f06fc68462e4d-image-1467924800613.gif\"\nwidth=\"200\"/>"
      courseA_maze_seq3_2018: "_「修正這個程式，好讓我抓到這頭豬！」_\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/629cddc754f9ad02929f06fc68462e4d-image-1467924800613.gif\"\nwidth=\"200\"/>"
      courseA_maze_seq4: "_\"有個地方不大正確。\"_\n\\\r\n\\\r\n「移除」一個積木好讓鳥能抓到這頭豬！\\\r\n\\\r\n<img
        src=\"https://images.code.org/dd6d92233199ee0f524caa4051b99275-image-1467920800577.gif\"\nwidth=\"200px\"/>"
      courseA_maze_seq4_2018: "_\"有個地方不大正確。\"_\n\\\r\n\\\r\n「移除」一個積木好讓鳥能抓到這頭豬！\\\r\n\\\r\n<img
        src=\"https://images.code.org/dd6d92233199ee0f524caa4051b99275-image-1467920800577.gif\"\nwidth=\"200px\"/>"
      courseA_maze_seq5: "在開始時試試這個。\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/43001078c4df6feea1a6edf025192d85-image-1467929743355.gif\"\nwidth=\"200px\"/>"
      courseA_maze_seq5_2018: 測試一下吧。
      courseA_maze_seq5_2019: 測試一下吧。
      courseA_maze_seq6: "移動以讓鳥抓到這頭豬！\\\r\n\\\r\n<img src=\"https://images.code.org/0b324bc0f684f7a22171acd8b38c8d9f-image-1467931807767.gif\"\nwidth=\"200px\"/>"
      courseA_maze_seq6_2018: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseA_maze_seq6_2019: 先往一個方向移動，接著再往另一個方向移動，讓鳥能夠抓到這頭豬！
      courseA_maze_seq7: "想一想少了什麼，然後添加一些積木讓鳥抓到這頭豬！\\\r\n\\\r\n<img src=\"https://images.code.org/b9803e12911694d8bb18bd55304f85d5-image-1467932006704.gif\"\nwidth=\"200px\"/>"
      courseA_maze_seq7_2018: "想一想少了什麼，然後添加一些積木讓鳥抓到這頭豬！\\\r\n\\\r\n<img src=\"https://images.code.org/b9803e12911694d8bb18bd55304f85d5-image-1467932006704.gif\"\nwidth=\"200px\"/>"
      courseA_maze_seq8: "完成這個關卡，讓鳥抓到猪！\\\r\n\\\r\n<img src=\"https://images.code.org/1eb9139e2887083dc80b98d9aeb3bef2-image-1467932105884.gif\"\nwidth=\"200px\"/>"
      courseA_maze_seq8_2018: 完成這個關卡，讓鳥抓到這頭豬！
      courseA_maze_seq8_2019: 完成這個關卡，讓鳥抓到這頭豬！
      courseA_maze_seq9: |-
        **挑戰：** 找出這個關卡的錯誤，添加積木讓鳥抓到這頭豬！

        ![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)
      courseA_maze_seq9_2018: |-
        **挑戰：** 找出這個關卡的錯誤，添加積木讓鳥抓到這頭豬！

        ![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)
      courseA_maze_seq_challenge1: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseA_maze_seq_challenge1_2018: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseA_maze_seq_challenge1_2019: 替這個關卡除錯，移除多餘的積木並添加缺少的積木，讓憤怒鳥抓到這頭豬！
      courseB_Scrat_ramp5a_2018: 自己試試這個！
      courseB_Scrat_ramp5a_2019: 自己試試這個！
      courseB_artist_loops10: "你覺得當小藝術家回到家時看到了什麼？用你學過的技能來畫出這個圖形。\\\r\n\\\r\n\n<hr/>\r\n<h3>Ideas</h3>\r\n<table>\r\n<tr>\r\n<td>\r\n<img\nsrc=\"https://images.code.org/8f4f2a68dae2cf0aa82cc0a49ea4df04-image-1466787750475.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一隻唱歌的蝸牛</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/732ce5dd91c7f49f06e88da1a9f664f3-image-1466794904255.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一座大城市</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/37fdd6fdd761df09fd4949d5e43f0a7f-image-1466795165642.gif\"\nwidth=\"150\"/><br/>\r\n<h4>A
        Concert</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/f7bf86b0f86669d82ee2c1565738b9cb-image-1466794447737.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一個生日蛋糕</h4><br/><br/>\r\n</td>\r\n\r\n</tr>\r\n</table>\r"
      courseB_artist_loops10_2018: "你覺得當小藝術家回到家時看到了什麼？用你學過的技能來畫出這個圖形。\\\r\n\\\r\n\n<hr/>\r\n<h3>Ideas</h3>\r\n<table>\r\n<tr>\r\n<td>\r\n<img\nsrc=\"https://images.code.org/8f4f2a68dae2cf0aa82cc0a49ea4df04-image-1466787750475.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一隻唱歌的蝸牛</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/732ce5dd91c7f49f06e88da1a9f664f3-image-1466794904255.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一座大城市</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/37fdd6fdd761df09fd4949d5e43f0a7f-image-1466795165642.gif\"\nwidth=\"150\"/><br/>\r\n<h4>A
        Concert</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/f7bf86b0f86669d82ee2c1565738b9cb-image-1466794447737.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一個生日蛋糕</h4><br/><br/>\r\n</td>\r\n\r\n</tr>\r\n</table>\r"
      courseB_artist_loops10_2019: "你覺得當小藝術家回到家時看到了什麼？用你學過的技能來畫出這個圖形。\\\r\n\\\r\n\n<hr/>\r\n<h3>Ideas</h3>\r\n<table>\r\n<tr>\r\n<td>\r\n<img\nsrc=\"https://images.code.org/8f4f2a68dae2cf0aa82cc0a49ea4df04-image-1466787750475.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一隻唱歌的蝸牛</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/732ce5dd91c7f49f06e88da1a9f664f3-image-1466794904255.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一座大城市</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/37fdd6fdd761df09fd4949d5e43f0a7f-image-1466795165642.gif\"\nwidth=\"150\"/><br/>\r\n<h4>A
        Concert</h4><br/><br/>\r\n</td>\r\n\r\n<td>\r\n<img\nsrc=\"https://images.code.org/f7bf86b0f86669d82ee2c1565738b9cb-image-1466794447737.gif\"\nwidth=\"150\"/><br/>\r\n<h4>一個生日蛋糕</h4><br/><br/>\r\n</td>\r\n\r\n</tr>\r\n</table>\r"
      courseB_artist_loops6: 灌木叢後面還有美麗的葡萄樹開滿了花。 你可以爬上藤和看到它在哪裡嗎？
      courseB_artist_loops6_2018: 灌木叢後面還有美麗的葡萄樹開滿了花。 你可以爬上藤和看到它在哪裡嗎？
      courseB_artist_loops6_2019: 灌木叢後面還有美麗的葡萄樹開滿了花。 你可以爬上藤和看到它在哪裡嗎？
      courseB_artist_loops7: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops7_2018: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops7_2019: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      courseB_artist_loops_challenge2: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_artist_loops_challenge2_2018: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_artist_loops_challenge2_2019: 我們來玩個遊戲！盡可能畫多一些的 X！你有辦法每一排畫出 3 個嗎？
      courseB_collector_loops1: "這是冒險家 Laurel！\\\r\n\\\r\n讓她四處移動，並盡可能獲得最多的寶石。"
      courseB_collector_loops1_2018: "這是冒險家 Laurel！\\\r\n\\\r\n讓她四處移動，並盡可能獲得最多的寶石。"
      courseB_collector_loops1_2019: "這是冒險家 Laurel！\\\r\n\\\r\n讓她四處移動，並盡可能獲得最多的寶石。"
      courseB_collector_loops2: "移動 Laurel 到寶石那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集 4
        堆寶石以完成這個關卡。"
      courseB_collector_loops2_2018: "移動 Laurel 到寶石那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集
        4 堆寶石以完成這個關卡。"
      courseB_collector_loops2_2019: "移動 Laurel 到寶石那兒，然後使用`收集`積來把它撿起來。\\\r\n\\\r\n收集
        4 堆寶石以完成這個關卡。"
      courseB_collector_loops3: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseB_collector_loops3_2018: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseB_collector_loops3_2019: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseB_collector_loops3_predict1: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseB_collector_loops_challenge2a: |-
        _快拿到那些寶石！_

        幫 Laurel 拿到至少 **5** 塊寶石才能過關。
      courseB_collector_loops_challenge2a_2018: |-
        _快拿到那些寶石！_

        幫 Laurel 拿到至少 **5** 塊寶石才能過關。
      courseB_collector_loops_challenge2a_2019: |-
        _快拿到那些寶石！_

        幫 Laurel 拿到至少 **5** 塊寶石才能過關。
      courseB_collector_prog3: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      courseB_iceage_loops11: 幫鼠奎特拿到橡樹果實！
      courseB_iceage_loops11_2019: 幫鼠奎特拿到橡樹果實！
      courseB_iceage_loops11_forVideo: 幫鼠奎特拿到橡樹果實！
      courseB_iceage_loops12: 拿到橡樹果實，不管你用什麼方法！
      courseB_iceage_loops12_2019: 拿到橡樹果實，不管你用什麼方法！
      courseB_iceage_loops6: 你能添加一個迴圈來拿到橡樹果實？
      courseB_iceage_loops6_2019: 你能添加一個迴圈來拿到橡樹果實？
      courseB_iceage_loops7: 鼠奎特真的很想拿到橡樹果實！
      courseB_iceage_loops7_2019: 鼠奎特真的很想拿到橡樹果實！
      courseB_iceage_loops8: 你有辦法修好這個程式嗎？
      courseB_iceage_loops8_2019: 你有辦法修好這個程式嗎？
      courseB_maze_seq3: _「修正這個程式，使我抓到這頭豬！」_
      courseB_maze_seq9: "**挑戰：**繞開 TNT 炸蘗，讓鳥能夠抓到豬！"
      courseB_maze_seq9_challenge1: _那隻豬現在藏在哪裡？_
      courseB_maze_seqCold: "**挑戰：**找出這個關卡的錯誤，添加積木以修正程式，讓鳥可以抓到這頭豬！"
      courseB_starWars_prog11: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Keep going!"_'
      courseB_starWars_prog11_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Keep going!"_'
      courseB_starWars_prog11_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Keep going!"_'
      courseB_starWars_prog3: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Keep going, BB-8!"_'
      courseB_starWars_prog3_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Keep going, BB-8!"_'
      courseB_starWars_prog3_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Keep going, BB-8!"_'
      courseB_starWars_prog4: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Get it, BB-8!"_'
      courseB_starWars_prog4_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Get it, BB-8!"_'
      courseB_starWars_prog4_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Get it, BB-8!"_'
      courseB_starWars_prog6: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"You can do it!"_'
      courseB_starWars_prog6_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"You can do it!"_'
      courseB_starWars_prog6_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"You can do it!"_'
      courseB_starWars_prog7: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Go get it!"_'
      courseB_starWars_prog7_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Go get it!"_'
      courseB_starWars_prog7_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Go get it!"_'
      courseB_starWars_prog8: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _「繼續努力，BB-8。."_

        **挑戰**：收集到所有的廢金屬。
      courseB_starWars_prog8_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _「繼續努力，BB-8。."_

        **挑戰**：收集到所有的廢金屬。
      courseB_starWars_prog8_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _「繼續努力，BB-8。."_

        **挑戰**：收集到所有的廢金屬。
      courseB_starWars_prog9: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"You can do it!"_'
      courseB_starWars_prog9_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"You can do it!"_'
      courseB_starWars_prog9_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"You can do it!"_'
      courseC_collector_prog8: _「就是這樣！繼續幫助我收集所有的硬幣。」_
      courseC_collector_prog8_2018: _「就是這樣！繼續幫助我收集所有的硬幣。」_
      courseC_collector_prog8_2019: _「就是這樣！繼續幫助我收集所有的硬幣。」_
      courseC_collector_prog9: _「讓我們獲得所有的硬幣！」_
      courseC_collector_prog9_2018: _「讓我們獲得所有的硬幣！」_
      courseC_collector_prog9_2019: _「讓我們獲得所有的硬幣！」_
      courseC_collector_progA: 幫 Laurel 收集到所有寶石。
      courseC_harvester_loops10: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops10_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops10_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops11: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops11_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops11_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops3: 收集所有的南瓜。
      courseC_harvester_loops3_2018: 收集所有的南瓜。
      courseC_harvester_loops3_2019: 收集所有的南瓜。
      courseC_harvester_loops5: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops5_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops5_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops6: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops6_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops6_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops7: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops7_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops7_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops9: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops9_2018: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops9_2019: 收集所有的玉米和所有的南瓜。
      courseC_harvester_loops_challenge1: 收集所有的玉米。
      courseC_harvester_loops_challenge2: |-
        收集所有的生菜。
        注意避開樹木和田地！
      courseC_harvester_loops_challenge2_2018: |-
        收集所有的生菜。
        注意避開樹木和田地！
      courseC_harvester_loops_challenge2_2019: |-
        收集所有的生菜。
        注意避開樹木和田地！
      courseC_harvester_loops_forVid: 收集所有的玉米和所有的南瓜。
      courseC_maze_loops2_predict1: "哇嗚，神奇的積木出現啦！\\\r\n利用`重複`積木，你可以讓一段程式不斷的循環執行。\\\r\n\\\r\n你能在`重複`積木裡只用上一個`移動-向前`積木，透過迴圈的方式來抓到這隻豬嗎？"
      courseC_maze_loops5: _「愈快抓到豬愈好！」_
      courseC_maze_programming1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming1_2019: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseC_maze_programming4: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseC_maze_programming4_2018: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseC_maze_programming4_2019: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseC_maze_programming5: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseC_maze_programming5_2018: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseC_maze_programming5_2019: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseC_maze_programming8: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_2018: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_2019: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_predict1: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_predict1_2018: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming8_predict1_2019: _「保持冷靜，幫我找到那隻壞豬豬」_
      courseC_maze_programming9: _「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」_
      courseC_maze_programming9_2018: _「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」_
      courseC_maze_programming9_2019: _「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」_
      courseC_starWars_loops10_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Go BB-8!"_

        You are doing great! Keep it up!
      courseC_starWars_loops5: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Go BB-8!"_'
      courseC_starWars_loops5_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Go BB-8!"_'
      courseC_starWars_loops5_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Go BB-8!"_'
      courseD_artist_functions8: "**挑戰：**盡可能做出你想要的函式，用函式來繪製邊長為 50 像素的正方形。"
      courseD_artist_nestedLoops1a: |-
        現在循環畫出這個三角形 6 次。

        每畫出一次，需要轉向 60 度後再畫下一個。
      courseD_artist_nestedLoops1a_2018: |-
        現在循環畫出這個三角形 6 次。

        每畫出一次，需要轉向 60 度後再畫下一個。
      courseD_artist_nestedLoops1a_2019: |-
        現在循環畫出這個三角形 6 次。

        每畫出一次，需要轉向 60 度後再畫下一個。
      courseD_artist_nestedLoops9_predict1: "**挑戰：** 想想看要怎麼畫出像這樣的圖案？ \\\r\n\\\r\n\n-
        \  兩個形狀的邊長都是 50 像素"
      courseD_artist_nestedLoops9_predict1_2018: "**挑戰：** 想想看要怎麼畫出像這樣的圖案？ \\\r\n\\\r\n\n-
        \  兩個形狀的邊長都是 50 像素"
      courseD_artist_nestedLoops9_predict1_2019: "**挑戰：** 想想看要怎麼畫出像這樣的圖案？ \\\r\n\\\r\n\n-
        \  兩個形狀的邊長都是 50 像素"
      courseD_artist_ramp11: "太好了，現在我們用小藝術家畫出一個正方形！這些方塊有些不同，但是概念是一樣的。\\\r\n\n<hr/>\r\n每個正方形的邊長是
        200 像素，每個角是 90 度。"
      courseD_artist_ramp12: "使用你學到的方法，來畫出這個正方形中的三角形。 \\\r\n\n<hr/> \r\n邊長都是 200 像素。你需要轉向
        90 度來畫出正方形，還有轉向 120 度來畫出三角形。"
      courseD_bee_conditionals1: "_「這雲擋住了我的視線 ！」_ \n\n檢查看看雲下面藏了什麼，如果是花，就把花蜜採集起來。"
      courseD_bee_conditionals1_predict1: "_「這雲擋住了我的視線 ！」_ \n\n檢查看看雲下面藏了什麼，如果是花，就把花蜜採集起來。"
      courseD_bee_conditionals1_predict1_2018: "_「這雲擋住了我的視線 ！」_ \n\n檢查看看雲下面藏了什麼，如果是花，就把花蜜採集起來。"
      courseD_bee_conditionals1_predict1_2019: "_「這雲擋住了我的視線 ！」_ \n\n檢查看看雲下面藏了什麼，如果是花，就把花蜜採集起來。"
      courseD_bee_conditionals7_predict2: "有時雲裡面有花朵，有時雲裡藏著蜂窩！\\\r\n\\\r\n使用`如果…否則`積木，如果是花朵就收集花蜜。\n否則，就釀造蜂蜜（因為它是蜂窩）。"
      courseD_bee_conditionals7_predict2_2018: "有時雲裡面有花朵，有時雲裡藏著蜂窩！\\\r\n\\\r\n使用`如果…否則`積木，如果是花朵就收集花蜜。\n否則，就釀造蜂蜜（因為它是蜂窩）。"
      courseD_bee_conditionals7_predict2_2019: "有時雲裡面有花朵，有時雲裡藏著蜂窩！\\\r\n\\\r\n使用`如果…否則`積木，如果是花朵就收集花蜜。\n否則，就釀造蜂蜜（因為它是蜂窩）。"
      courseD_bee_nestedLoops2: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_2018: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_2019: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1_2018: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops2_predict1_2019: 這次，幫蜜蜂收集所有花蜜，用的積木愈少愈好。
      courseD_bee_nestedLoops5: 使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。
      courseD_bee_nestedLoops6: 收集所有的花蜜。
      courseD_bee_nestedLoops7: "**挑戰：**想辦法用這些積木，得到所有的花蜜。"
      courseD_bee_nestedLoops7_2018: "**挑戰：**想辦法用這些積木，得到所有的花蜜。"
      courseD_bee_nestedLoops7_2019: "**挑戰：**想辦法用這些積木，得到所有的花蜜。"
      courseD_bee_nestedLoops8: 使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。
      courseD_bee_nestedLoops8_2018: 使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。
      courseD_bee_nestedLoops8_2019: 使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。
      courseD_bee_nestedLoops9: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_2018: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_2019: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_predict2: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_predict2_2018: 釀造全部的蜂蜜。
      courseD_bee_nestedLoops9_predict2_2019: 釀造全部的蜂蜜。
      courseD_bounce_events1: 移動到旗幟那兒！在「當按向左鍵時」積木下添加程式，點擊「運行」讓球員移動到目標旗幟。
      courseD_collector_ramp10: "和之前的路徑一樣，不過這次要沿路收集到發現到的寶藏。\\\r"
      courseD_collector_ramp8: "這關很像上一關，不過現在我們是要幫 Laurel 完成探險！\\\r\n\n<hr/>\r\n\r\n和之前的走法相同，不過這次試試改用一個重複迴圈來收集到寶藏。\r"
      courseD_collector_ramp9: 有更多寶藏了，你可以幫 Laurel 收集到所有的寶藏嗎？
      courseD_farmer_condLoops7: "**挑戰：**收集所有的玉米和生菜，然後收成南瓜。"
      courseD_farmer_condLoops7_2018: "**挑戰：**收集所有的玉米和生菜，然後收成南瓜。"
      courseD_farmer_condLoops7_2019: "**挑戰：**收集所有的玉米和生菜，然後收成南瓜。"
      courseD_farmer_condLoops8: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops8_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops8_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1_2018: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_condLoops9_predict1_2019: 收集所有的玉米和生菜，然後收成南瓜。
      courseD_farmer_conditionals1: "_「嗨，我是個農夫。我需要你幫我將農地整平，好讓我可以耕作！」_\\\r\n\\\r\n移到土堆那兒，使用「移除」積木來把土堆刪掉。"
      courseD_farmer_conditionals4: |-
        _「我不知道這堆土裡有多少污泥！」_

        使用`當…時`迴圈，幫助農夫移除全部的土堆。
      courseD_farmer_conditionals8: "**挑戰：**填滿所有的洞，使用的積木愈少愈好。 "
      courseD_farmer_while1: "_「嗨，我是個農夫。我需要你幫我將農地整平，好讓我可以耕作！」_\\\r\n\\\r\n移到土堆那兒，使用「移除」積木來把土堆刪掉。"
      courseD_farmer_while1_2018: "_「嗨，我是個農夫。我需要你幫我將農地整平，好讓我可以耕作！」_\\\r\n\\\r\n移到土堆那兒，使用「移除」積木來把土堆刪掉。"
      courseD_farmer_while1_2019: "_「嗨，我是個農夫。我需要你幫我將農地整平，好讓我可以耕作！」_\\\r\n\\\r\n移到土堆那兒，使用「移除」積木來把土堆刪掉。"
      courseD_farmer_while4: |-
        _「我不知道這堆土裡有多少污泥！」_

        使用`當…時`迴圈，幫助農夫移除全部的土堆。
      courseD_farmer_while4_2018: |-
        _「我不知道這堆土裡有多少污泥！」_

        使用`當…時`迴圈，幫助農夫移除全部的土堆。
      courseD_farmer_while4_2019: |-
        _「我不知道這堆土裡有多少污泥！」_

        使用`當…時`迴圈，幫助農夫移除全部的土堆。
      courseD_farmer_while4_predict1: |-
        _「我不知道這堆土裡有多少污泥！」_

        使用`當…時`迴圈，幫助農夫移除全部的土堆。
      courseD_farmer_while4_predict1_2018: |-
        _「我不知道這堆土裡有多少污泥！」_

        使用`當…時`迴圈，幫助農夫移除全部的土堆。
      courseD_farmer_while4_predict1_2019: |-
        _「我不知道這堆土裡有多少污泥！」_

        使用`當…時`迴圈，幫助農夫移除全部的土堆。
      courseD_farmer_while8: "**挑戰：**填滿所有的洞，使用的積木愈少愈好。 "
      courseD_farmer_while8_2018: "**挑戰：**填滿所有的洞，使用的積木愈少愈好。 "
      courseD_farmer_while8_2019: "**挑戰：**填滿所有的洞，使用的積木愈少愈好。 "
      courseD_farmer_while_challenge1: 填滿所有的坑垌，並移走全部的土堆。
      courseD_farmer_while_challenge1_2018: 填滿所有的坑垌，並移走全部的土堆。
      courseD_farmer_while_challenge1_2019: 填滿所有的坑垌，並移走全部的土堆。
      courseD_farmer_while_challenge2: 填滿所有的坑垌，並移走全部的土堆。
      courseD_farmer_while_challenge2_2018: 填滿所有的坑垌，並移走全部的土堆。
      courseD_iceage_loops11: 幫鼠奎特拿到橡樹果實！
      courseD_iceage_loops11_2019: 幫鼠奎特拿到橡樹果實！
      courseD_iceage_loops12: 拿到橡樹果實，不管你用什麼方法！
      courseD_iceage_loops12_2019: 拿到橡樹果實，不管你用什麼方法！
      courseD_iceage_loops6: 你能添加一個迴圈來拿到橡樹果實？
      courseD_iceage_loops6_2019: 你能添加一個迴圈來拿到橡樹果實？
      courseD_iceage_loops7: 鼠奎特真的很想拿到橡樹果實！
      courseD_iceage_loops7_2019: 鼠奎特真的很想拿到橡樹果實！
      courseD_iceage_loops8: 你有辦法修好這個程式嗎？
      courseD_iceage_loops8_2019: 你有辦法修好這個程式嗎？
      courseD_maze_intro5a_2019: 仔細計算網格上的空格！
      courseD_maze_nestedLoops4: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops4_2018: 帶我到那朵向日葵的位置!
      courseD_maze_nestedLoops4_2019: 帶我到那朵向日葵的位置!
      courseD_maze_ramp1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp1_2019: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_maze_ramp2: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_maze_ramp2_2018: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_maze_ramp2_2019: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_maze_ramp3: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      courseD_maze_ramp3_2018: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      courseD_maze_ramp3_2019: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      courseD_maze_ramp4: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseD_maze_ramp4_2018: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseD_maze_ramp4_2019: "\\*「順著路徑讓我抓到那隻蠢豬。」\\\r\n\\\r\n當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！"
      courseD_maze_ramp5: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseD_maze_ramp5_2018: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseD_maze_ramp5_2019: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseD_maze_ramp5a_2019: 仔細計算網格上的空格！
      courseD_maze_ramp5c: 幫憤怒鳥抓到豬。
      courseD_maze_ramp5c_2018: 幫憤怒鳥抓到豬。
      courseD_maze_ramp5c_2019: 幫鼠奎特拿到橡樹果實。
      courseD_maze_ramp5d: 讓鳥抓到這隻豬！
      courseD_maze_ramp5d_2018: 讓鳥抓到這隻豬！
      courseD_maze_ramp5d_2019: 讓鳥抓到這隻豬！
      courseD_maze_ramp6: "_「冷靜！幫我抓到這頭壞豬，不然我就真的要變成憤怒鳥啦！」_\\\r\n\\\r\n當你有很多相同指令的積木時，試著將它們放到`重複`迴圈裡，這樣子就盡量減少積木的使用數。"
      courseD_maze_ramp7: "_「我真的要憤怒了！」_\\\r\n\\\r\n\\\r\n**挑戰：**\n使用你學到的方法來讓我抓到這頭豬！"
      courseD_maze_until10: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until10_predict2_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until6: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until6_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until6_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until7_2019: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until8: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until8_2018: 幫助殭屍，讓牠吃到向日葵。
      courseD_maze_until9: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_maze_until9_2018: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_maze_until9_2019: "**挑戰：**避開食僵花，並幫助僵屍移動到向日葵那兒。"
      courseD_scrat_ramp1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_scrat_ramp1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseD_scrat_ramp2: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_scrat_ramp2_2018: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseD_scrat_ramp4: 小心別讓鼠奎特踩到裂開的冰！
      courseD_scrat_ramp4_2018: 小心別讓鼠奎特踩到裂開的冰！
      courseD_scrat_ramp5: 小心別撞到冰！
      courseD_scrat_ramp5_2018: 小心別撞到冰！
      courseD_scrat_ramp6: 用一個迴圈幫助鼠奎特拿到橡樹果實！
      courseD_scrat_ramp6_2018: 用一個迴圈幫助鼠奎特拿到橡樹果實！
      courseD_scrat_ramp7: 幫鼠奎特拿到橡樹果實！
      courseD_scrat_ramp7_2018: 幫鼠奎特拿到橡樹果實！
      courseE_artist_concept_challenge1: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\n挑戰時間到了！
        \ \\\r\n\\\r\n這裡有個圖案，只用了你見到的積木做出來的。想一想，要怎麼重建它？你可以邊做邊試，錯了也沒關係。我們不要求你一次就做對。\\\r\n\\\r\n這些重複的圖形和上個關卡的圖案幾乎相同，除了第一個迴圈裡用的長度比較小以外。 "
      courseE_artist_concept_challenge1_2018: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\n挑戰時間到了！
        \ \\\r\n\\\r\n這裡有個圖案，只用了你見到的積木做出來的。想一想，要怎麼重建它？你可以邊做邊試，錯了也沒關係。我們不要求你一次就做對。\\\r\n\\\r\n這些重複的圖形和上個關卡的圖案幾乎相同，除了第一個迴圈裡用的長度比較小以外。 "
      courseE_artist_concept_challenge1_2019: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\n挑戰時間到了！
        \ \\\r\n\\\r\n這裡有個圖案，只用了你見到的積木做出來的。想一想，要怎麼重建它？你可以邊做邊試，錯了也沒關係。我們不要求你一次就做對。\\\r\n\\\r\n這些重複的圖形和上個關卡的圖案幾乎相同，除了第一個迴圈裡用的長度比較小以外。 "
      courseE_artist_ramp11: "太好了，現在我們用小藝術家畫出一個正方形！這些方塊有些不同，但是概念是一樣的。\\\r\n\n<hr/>\r\n每個正方形的邊長是
        200 像素，每個角是 90 度。"
      courseE_artist_ramp12: "使用你學到的方法，來畫出這個正方形中的三角形。 \\\r\n\n<hr/> \r\n邊長都是 200 像素。你需要轉向
        90 度來畫出正方形，還有轉向 120 度來畫出三角形。"
      courseE_bee_functions2: "函式是一段程式碼，用來執行某個任務。\\\r\n\\\r\n請使用 `get 2 nectar`（採集
        2 個花蜜）函式，從每一朵花中採集花蜜。"
      courseE_bee_functions2_2018: "函式是一段程式碼，用來執行某個任務。\\\r\n\\\r\n請使用 `get 2 nectar`（採集
        2 個花蜜）函式，從每一朵花中採集花蜜。"
      courseE_bee_functions3: 在這個關卡創建名為 get 5 的函式以一次拿取 5 個花蜜。
      courseE_bee_functions3_2018: 在這個關卡創建名為 get 5 的函式以一次拿取 5 個花蜜。
      courseE_collector_ramp10: "和之前的路徑一樣，不過這次要沿路收集到發現到的寶藏。\\\r"
      courseE_collector_ramp8: "這關很像上一關，不過現在我們是要幫 Laurel 完成探險！\\\r\n\n<hr/>\r\n\r\n和之前的走法相同，不過這次試試改用一個重複迴圈來收集到寶藏。\r"
      courseE_collector_ramp9: "和之前的路徑一樣，不過這次要沿路收集到發現到的寶藏。\\\r"
      courseE_farmer_concept4: |-
        現在讓我們加深難度！
        我們已經將整個程式積木嵌套在另一個迴圈內，但你需要讓小藝術家回到初始位置來畫出下一行。要在最外層迴圈下添加哪個積木，才能畫完整個網格？
      courseE_farmer_functions10b: 使用你的新函式兩次以完成這個關卡。
      courseE_farmer_functions10b_2018: 使用你的新函式兩次以完成這個關卡。
      courseE_farmer_functions4b: 使用你的新函式以完成這個關卡。
      courseE_farmer_functions4b_2018: 使用你的新函式以完成這個關卡。
      courseE_farmer_functions5c: 你的函式會在這裡派上用場。
      courseE_farmer_functions5c_2018: 你的函式會在這裡派上用場。
      courseE_farmer_functions6b: 撿起所有的農產品。
      courseE_farmer_ramp11b: 讓我們再試試這個方法，不過這次有更多的土堆！
      courseE_farmer_ramp11b_2018: 讓我們再試試這個方法，不過這次有更多的土堆！
      courseE_farmer_ramp11b_2019: 讓我們再試試這個方法，不過這次有更多的土堆！
      courseE_farmer_ramp12: 撿起所有的生菜。
      courseE_farmer_ramp12_2018: 撿起所有的生菜。
      courseE_farmer_ramp12_forswap: 撿起所有的生菜。
      courseE_farmer_ramp12_forswap_2018: 撿起所有的生菜。
      courseE_farmer_ramp12_forswap_2019: 撿起所有的生菜。
      courseE_maze_ramp1: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseE_maze_ramp1_2018: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      courseE_maze_ramp2: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseE_maze_ramp2_2018: 從工具箱中拖曳出另一個`移動-向前`積木，把它放在`當運行時`積木下，就可以完成程式。
      courseE_maze_ramp3: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      courseE_maze_ramp3_2018: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      courseE_maze_ramp4: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseE_maze_ramp4_2018: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseE_maze_ramp5: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseE_maze_ramp5_2018: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseE_maze_ramp6: "_「冷靜！幫我抓到這頭壞豬，不然我就真的要變成憤怒鳥啦！」_\\\r\n\\\r\n當你有很多相同指令的積木時，試著將它們放到`重複`迴圈裡，這樣子就盡量減少積木的使用數。"
      courseE_maze_ramp6_2018: "_「冷靜！幫我抓到這頭壞豬，不然我就真的要變成憤怒鳥啦！」_\\\r\n\\\r\n當你有很多相同指令的積木時，試著將它們放到`重複`迴圈裡，這樣子就盡量減少積木的使用數。"
      courseE_maze_ramp7: "_「我真的要憤怒了！」_\\\r\n\\\r\n**挑戰：**\n使用你學到的方法來讓我抓到這頭豬！"
      courseE_maze_ramp7_2018: "_「我真的要憤怒了！」_\\\r\n\\\r\n**挑戰：**\n使用你學到的方法來讓我抓到這頭豬！"
      courseE_multi_maze_ramp5: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseF_artist_for1: "**自由發揮：** 用 `計數` 迴圈及 `counter` 變數來實驗看看。  \n\n拖曳出幾個積木，看看會發生什麼事。"
      courseF_artist_for1_2018: "**自由發揮：** 用 `計數` 迴圈及 `counter` 變數來實驗看看。  \n\n拖曳出幾個積木，看看會發生什麼事。"
      courseF_artist_for1_2019: "**自由發揮：** 用 `計數` 迴圈及 `counter` 變數來實驗看看。  \n\n拖曳出幾個積木，看看會發生什麼事。"
      courseF_artist_for2: 在`計數`迴圈裡放個`重複`迴圈，就可以創建出這堆邊長從 50 像素到 100 像素的三角形。
      courseF_artist_for2_2018: 在`計數`迴圈裡放個`重複`迴圈，就可以創建出這堆邊長從 50 像素到 100 像素的三角形。
      courseF_artist_for2_2019: 在`計數`迴圈裡放個`重複`迴圈，就可以創建出這堆邊長從 50 像素到 100 像素的三角形。
      courseF_artist_for6: |-
        如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。

        試著用上一關的一些程式碼，但是轉向角度變成 89 度，來創造漩渦狀的正方形。
      courseF_artist_for6_2018: |-
        如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。

        試著用上一關的一些程式碼，但是轉向角度變成 89 度，來創造漩渦狀的正方形。
      courseF_artist_for6_2019: |-
        如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。

        試著用上一關的一些程式碼，但是轉向角度變成 89 度，來創造漩渦狀的正方形。
      courseF_artist_for_Template: |-
        如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。

        試著用上一關的一些程式碼，但是轉向角度變成 89 度，來創造漩渦狀的正方形。
      courseF_artist_for_Template_2018: |-
        如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。

        試著用上一關的一些程式碼，但是轉向角度變成 89 度，來創造漩渦狀的正方形。
      courseF_artist_for_Template_2019: |-
        如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。

        試著用上一關的一些程式碼，但是轉向角度變成 89 度，來創造漩渦狀的正方形。
      courseF_artist_fwp1: 今天，我們來試試功能強大函式編輯器，看看是否你能弄清楚如何編輯 draw a square（畫個正方形）函式並從中找到程式中的錯誤。
      courseF_artist_fwp1_2018: 今天，我們來試試功能強大函式編輯器，看看是否你能弄清楚如何編輯 draw a square（畫個正方形）函式並從中找到程式中的錯誤。
      courseF_artist_fwp2: "編輯這個函式，並在裡頭使用名為 length（長度）的參數。\\\r\n\\\r\n每個正方形的邊長應該會比上一個大
        25 像素。第一個正方形的每邊長 25 像素，將問號（???）改成正確的數字，以畫出這個圖案。"
      courseF_artist_fwp2_2018: "編輯這個函式，並在裡頭使用名為 length（長度）的參數。\\\r\n\\\r\n每個正方形的邊長應該會比上一個大
        25 像素。第一個正方形的每邊長 25 像素，將問號（???）改成正確的數字，以畫出這個圖案。"
      courseF_artist_fwp2_predict1: "編輯這個函式，並在裡頭使用名為 `length`（長度）的參數。\\\r\n\\\r\n每個正方形的邊長應該會比上一個大
        25 像素。第一個正方形的每邊長 25 像素，將問號（???）改成正確的數字，以畫出這個圖案。"
      courseF_artist_fwp2_predict1_2018: "編輯這個函式，並在裡頭使用名為 `length`（長度）的參數。\\\r\n\\\r\n每個正方形的邊長應該會比上一個大
        25 像素。第一個正方形的每邊長 25 像素，將問號（???）改成正確的數字，以畫出這個圖案。"
      courseF_artist_fwp3: "現在試著在 scratch 上創建這個函式！ \\\r\n\\\r\n創建一個名為 draw a square（畫個正方形）的函式，並使用它來畫出四個盒子的邊框。\\\r\n請確定你添加了一個
        length（長度）參數！\\\r\n\\\r\n\n<hr/>\r\n從右上角開始，這個盒子的寬度為 50、100、150、200。"
      courseF_artist_fwp3_2018: "現在試著在 scratch 上創建這個函式！ \\\r\n\\\r\n創建一個名為 draw a
        square（畫個正方形）的函式，並使用它來畫出四個盒子的邊框。\\\r\n請確定你添加了一個 length（長度）參數！\\\r\n\\\r\n\n<hr/>\r\n從右上角開始，這個盒子的寬度為
        50、100、150、200。"
      courseF_artist_fwp4: |-
        做得好！現在編輯這個函式，裡頭添加一個參數以代表多邊形的邊數。

        所有圖形的邊長都是 100 像素。
      courseF_artist_fwp4_2018: |-
        做得好！現在編輯這個函式，裡頭添加一個參數以代表多邊形的邊數。

        所有圖形的邊長都是 100 像素。
      courseF_artist_fwp5: "使用上個關卡的函式來畫出這一系列的圖形。  \\\r\n\\\r\n\\\r\n這個三角形的邊長為 21 像素，而接下來的圖形的邊長都比上一個長
        7 像素。\\\r\n使用 multipication（多重）積木，讓這個功能只要呼叫一個函式就可以完成。\\\r\n\n<hr/>\r\nmultipication（多重）積木就像這樣![](https://images.code.org/55e293447c6b26bbbcf29cda2036706b-image-1481322763779.png)\r\n\r"
      courseF_artist_fwp5_2018: "使用上個關卡的函式來畫出這一系列的圖形。  \\\r\n\\\r\n\\\r\n這個三角形的邊長為
        21 像素，而接下來的圖形的邊長都比上一個長 7 像素。\\\r\n使用 multipication（多重）積木，讓這個功能只要呼叫一個函式就可以完成。\\\r\n\n<hr/>\r\nmultipication（多重）積木就像這樣![](https://images.code.org/55e293447c6b26bbbcf29cda2036706b-image-1481322763779.png)\r\n\r"
      courseF_artist_fwp6: |-
        **挑戰：** 編輯函式 draw a spiral edge（畫個螺旋圖）以使用 length（邊長）和 sides（邊數）參數，然後重建出這些圖形。

        這個正方形是從 3 像素到 90 像素。

        -   這個六邊形是從 3 像素到 100 像素。
        -   這個三角形是從 3 像素到 95 像素。
      courseF_artist_fwp6_2018: |-
        **挑戰：** 編輯函式 draw a spiral edge（畫個螺旋圖）以使用 length（邊長）和 sides（邊數）參數，然後重建出這些圖形。

        這個正方形是從 3 像素到 90 像素。

        -   這個六邊形是從 3 像素到 100 像素。
        -   這個三角形是從 3 像素到 95 像素。
      courseF_artist_fwp7: "完成這個 draw a spiral edge（畫個螺旋圖）函式，並詢問螺旋圖中間最小的長度。\\\r\n\\\r\n\\-\n正方形螺旋圖中間最小的長度為
        50 像素。\\\r\n\n-   The\n    螺旋圖最外圈中最長的長度是 200 像素。\\\r"
      courseF_artist_fwp7_2018: "完成這個 draw a spiral edge（畫個螺旋圖）函式，並詢問螺旋圖中間最小的長度。\\\r\n\\\r\n\\-\n正方形螺旋圖中間最小的長度為
        50 像素。\\\r\n\n-   The\n    螺旋圖最外圈中最長的長度是 200 像素。\\\r"
      courseF_artist_fwp8: "想一想，要怎麼使用你剛剛創建的函式來畫出這個圖案？\\\r\n\\\r\n\n-   紅色的螺旋圖形是 50
        到 200 像素\\\r\n-   藍色的螺旋圖形是 25 到 125 像素\\\r\n-   綠色的螺旋圖形是 100 到 300 像素\\\r"
      courseF_artist_fwp8_2018: "想一想，要怎麼使用你剛剛創建的函式來畫出這個圖案？\\\r\n\\\r\n\n-   紅色的螺旋圖形是
        50 到 200 像素\\\r\n-   藍色的螺旋圖形是 25 到 125 像素\\\r\n-   綠色的螺旋圖形是 100 到 300 像素\\\r"
      courseF_artist_fwp9: "**自由發揮：**這兒除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！用不同的筆跡寬度來看看你能畫出什麼不一樣的圖形！"
      courseF_artist_fwp9_2018: "**自由發揮：**這兒除了你寫的函式，還有更多的函式讓你發揮。畫些令人驚嘆的東西吧！用不同的筆跡寬度來看看你能畫出什麼不一樣的圖形！"
      courseF_artist_variablesFP: "**自由活動：**用你學過的東西，繪製出自己的作品。\\\r\n\\\r\n你知道怎麼畫出帶變數正方形、五角形、六角形嗎？"
      courseF_artist_variablesFP_2018: "**自由活動：**用你學過的東西，繪製出自己的作品。\\\r\n\\\r\n你知道怎麼畫出帶變數正方形、五角形、六角形嗎？"
      courseF_artist_variablesFP_2019: "**自由活動：**用你學過的東西，繪製出自己的作品。\\\r\n\\\r\n你知道怎麼畫出帶變數正方形、五角形、六角形嗎？"
      courseF_artist_variables_FP: "**自由活動：**用你學過的東西，繪製出自己的作品。\\\r\n\\\r\n你知道怎麼畫出帶變數正方形、五角形、六角形嗎？"
      courseF_bee_conditionals1_predict1: "_「這雲擋住了我的視線 ！」_ \n\n檢查看看雲下面藏了什麼，如果是花，就把花蜜採集起來。"
      courseF_bee_conditionals1_predict1_2018: "_「這雲擋住了我的視線 ！」_ \n\n檢查看看雲下面藏了什麼，如果是花，就把花蜜採集起來。"
      courseF_bee_conditionals7_predict2: "有時雲裡面有花朵，有時雲裡藏著蜂窩！\\\r\n\\\r\n使用`如果…否則`積木，如果是花朵就收集花蜜。\n否則，就釀造蜂蜜（因為它是蜂窩）。"
      courseF_bee_conditionals7_predict2_2018: "有時雲裡面有花朵，有時雲裡藏著蜂窩！\\\r\n\\\r\n使用`如果…否則`積木，如果是花朵就收集花蜜。\n否則，就釀造蜂蜜（因為它是蜂窩）。"
      courseF_bee_for8: |-
        你明白了吧！

        如果要依次收集 3、6、9、12、15 個花蜜，要在**每次的數字後加多少**呢？
      courseF_bee_for8_2018: |-
        你明白了吧！

        如果要依次收集 3、6、9、12、15 個花蜜，要在**每次的數字後加多少**呢？
      courseF_bee_for8_2019: |-
        你明白了吧！

        如果要依次收集 3、6、9、12、15 個花蜜，要在**每次的數字後加多少**呢？
      courseF_bee_for_challenge2: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_for_challenge2_2018: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_for_challenge2_2019: 盡可能使用最少的程式積木來完成這個關卡。
      courseF_bee_for_challenge3: "**計數迴圈超級挑戰：**完成這個關卡，用的積木愈少愈好。"
      courseF_bee_fwp1: 檢查看看，雲的下面是不是藏著帶著花蜜的花朵。
      courseF_bee_fwp1_2018: 檢查看看，雲的下面是不是藏著帶著花蜜的花朵。
      courseF_bee_fwp2: "這兒放著用來完成上一關的積木。  \\\r\n我們把它放進一個函式，接著呼叫這個函式，讓程式自動去檢查橫列上是否有花蜜。
        \ \\\r\n\n<hr/>\r\n也許你現在會覺得這個步驟有些怪，不過，它對以後會非常有幫助！\nbut it will be really helpful
        soon!"
      courseF_bee_fwp2_2018: "這兒放著用來完成上一關的積木。  \\\r\n我們把它放進一個函式，接著呼叫這個函式，讓程式自動去檢查橫列上是否有花蜜。
        \ \\\r\n\n<hr/>\r\n也許你現在會覺得這個步驟有些怪，不過，它對以後會非常有幫助！\nbut it will be really helpful
        soon!"
      courseF_bee_fwp3: |-
        是時候測試這個函式了！

        我們來看看它是不是可以容易的收集到這 3 個橫列上的所有花蜜。
      courseF_bee_fwp3_2018: |-
        是時候測試這個函式了！

        我們來看看它是不是可以容易的收集到這 3 個橫列上的所有花蜜。
      courseF_bee_fwp4: "**要如何讓函式能維持運作？**   \\\r\n\\\r\n我們需要做一些調整。點擊「編輯」，添加一個 `length`（長度）參數到函式裡，這樣一來，就算列數與長度不相同，函式也能正常運作囉。"
      courseF_bee_fwp4_2018: "**要如何讓函式能維持運作？**   \\\r\n\\\r\n我們需要做一些調整。點擊「編輯」，添加一個
        `length`（長度）參數到函式裡，這樣一來，就算列數與長度不相同，函式也能正常運作囉。"
      courseF_bee_fwp5: "_「目前為止你做的都很好！」_\\\r\n\\\r\n我們來使用這個函式收集花蜜。"
      courseF_bee_fwp5_2018: "_「目前為止你做的都很好！」_\\\r\n\\\r\n我們來使用這個函式收集花蜜。"
      courseF_bee_fwp6: "你可以讓程式變得更精鍊、更有效率一些。方法就是把其它的編程元素合併到這些函式。 \\\r\n\n<hr/>\r\n若要建置一個短小精美的程式來完成關卡，你可以在你的函式裡使用哪些積木呢？"
      courseF_bee_fwp6_2018: "你可以讓程式變得更精鍊、更有效率一些。方法就是把其它的編程元素合併到這些函式。 \\\r\n\n<hr/>\r\n若要建置一個短小精美的程式來完成關卡，你可以在你的函式裡使用哪些積木呢？"
      courseF_bee_fwp7: "**挑戰：** 有個地方看起來不大一樣，修改你的函式讓它也可以釀造蜂蜜。"
      courseF_bee_fwp7_2018: "**挑戰：** 有個地方看起來不大一樣，修改你的函式讓它也可以釀造蜂蜜。"
      courseF_maze_ramp13: |-
        是時候把所有的憤怒鳥關卡放在一塊了！

        使用巢狀迴圈讓鳥逮到豬。
      courseF_maze_ramp15: "_「我真的要憤怒了！」_\\\r\n\\\r\n**挑戰：**\n使用你學到的方法來讓我抓到這頭豬！"
      courseF_maze_ramp4: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseF_maze_ramp4_2018: |-
        _「順著路徑讓我抓到那隻蠢豬。」_

        當心別碰到 TNT 炸藥，不然我的羽毛會滿天飛！
      courseF_maze_ramp5: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseF_maze_ramp5_2018: "\\*「順著路徑，讓我抓到那頭豬！」\\\r\n\\\r\n注意別被 TNT 炸到。"
      courseF_maze_ramp6: "_「冷靜！幫我抓到這頭壞豬，不然我就真的要變成憤怒鳥啦！」_\\\r\n\\\r\n當你有很多相同指令的積木時，試著將它們放到`重複`迴圈裡，這樣子就盡量減少積木的使用數。"
      courseF_maze_ramp6_2018: "_「冷靜！幫我抓到這頭壞豬，不然我就真的要變成憤怒鳥啦！」_\\\r\n\\\r\n當你有很多相同指令的積木時，試著將它們放到`重複`迴圈裡，這樣子就盡量減少積木的使用數。"
      courseF_maze_ramp7: "_「我真的要憤怒了！」_\\\r\n\\\r\n**挑戰：**\n使用你學到的方法來讓我抓到這頭豬！"
      courseF_playlab_variables0: "這是獨腳海盜，他是個非常難以理解的怪咖！\\\r\n\\\r\n透過修改程式裡的文字部分來解譯他說的話：\\\r\n\n-
        \  把「arrrg」改成「a」\\\r\n-   把「ye」改成「e」\\\r\n    \\\r"
      courseF_playlab_variables1: "這是獨腳海盜，他是個非常難以理解的怪咖！\\\r\n\\\r\n透過修改程式裡的文字部分來解譯他說的話：\\\r\n\n-
        \  把「arrrg」改成「a」\\\r\n-   把「ye」改成「e」\\\r\n    \\\r"
      courseF_playlab_variables2: "現在，修改變數來解譯一下獨腳海盜說的話，只有 2 個地方要改！\\\r\n\\-「arrrg」應該是「a」\\\r\n\n-
        \  「ye」應該是「e」\\\r\n    \\\r"
      courseF_playlab_variables2a: "現在，修改變數來解譯一下獨腳海盜說的話，只有 2 個地方要改！\\\r\n\\-「arrrg」應該是「a」\\\r\n\n-
        \  「ye」應該是「e」\\\r\n    \\\r"
      courseF_playlab_variables3b: 用變數 `age` 取代固定的年齡 `12`，幫 Kiki 和 Brain 完成對話。
      courseF_playlab_variables3b_josh: 用變數 `age` 取代固定的年齡 `12`，幫 Kiki 和 Brain 完成對話。
      courseF_playlab_variables3b_josh_2018: 用變數 `age` 取代固定的年齡 `12`，幫 Kiki 和 Brain
        完成對話。
      course_playlab_variables1: "這是獨腳海盜，他是個非常難以理解的怪咖！\\\r\n\\\r\n透過修改程式裡的文字部分來解譯他說的話：\\\r\n\n-
        \  把「arrrg」改成「a」\\\r\n-   把「ye」改成「e」\\\r\n    \\\r"
      course_playlab_variables2: "現在，修改變數來解譯一下獨腳海盜說的話，只有 2 個地方要改！\\\r\n\\-「arrrg」應該是「a」\\\r\n\n-
        \  「ye」應該是「e」\\\r\n    \\\r"
      course_playlab_variables3: "現在，修改變數來解譯一下獨腳海盜說的話，只有 2 個地方要改！\\\r\n\\-「arrrg」應該是「a」\\\r\n\n-
        \  「ye」應該是「e」\\\r\n    \\\r"
      coursef_maze_ramp3: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      coursef_maze_ramp3_2018: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      csp-post-survey-2017-q36-e: 我擔心是因為另一個原因：
      csp-post-survey-2017-q36-e_2018: 我擔心是因為另一個原因：
      csp-pre-survey-2017-q36-e: 我擔心是因為另一個原因：
      csp-pre-survey-2017-q36-e_2018: 我擔心是因為另一個原因：
      csp-pre-survey-2017-q36-e_2019: 我擔心是因為另一個原因：
      frozen circle function in circle: 現在我們來建立 20 個互有重疊的圓，在每個圓之後轉向 18 度。
      frozen circle function with parameter: 這裡有一個「建立一個圓形」的程式積木，可以畫出不同大小的圓。您可以用這個來建立一個大小為
        5 的小圓，跟一個大小為 10 的較大的圓嗎？
      frozen circle function: 使用新的「建立一個圓形」積木讓我建立 10 個相互重疊的圓形。不要忘了在每次畫一個圓之後向前跳。
      frozen circle: 圓是一個特殊的形狀。您能想到中間的問號應該要選擇哪一個數字，才能畫出一個圓嗎？
      frozen cross rotate dense: 現在我們來重複 90 次！要重複 90 次的話，每次要幾度才能轉到 360 度呢？提示：這是個非常小的數字。
      frozen cross rotate: 現在試著重複 10 次吧。你覺得每次畫出線之後，需要轉向幾度呢？
      frozen cross: 將這些指令放入「重複」積木裡來畫出一個加號。注意到了嗎？艾莎可以向後移動了。
      frozen diamond mini snowflake: 你知道每個雪花的形狀都不同嗎？讓我們用另一個「重複」積木創造一個新的雪花，它是由 4 個重複的平行四邊形所組成，每畫完一個平行四邊形就向右轉
        90 度。
      frozen diamond snowflake: 現在，讓我們創建新的雪花圖案，通過使用「重複」積木來畫出平行四邊形 10 次，每畫一個之後轉向 36
        度。
      frozen diamond: 將這些程式放到「重複」積木裡來畫出平行四邊形，它就像一個長方形，但角度不同。我們要畫的是有 60 度和 120 度角的四邊形，而長方形的所有角度都是
        90 度。
      frozen freeplay: 您已經變成一個專業的藝術家囉！開始打造一個冬季仙境吧。
      frozen perpendicular: 現在看看我們能不能畫出 2 條線，然後讓 2 條線成 90 度。除了「移動-向前」積木外，你還需要用到「轉向-右方」或「轉向-左方」的積木喔。
      frozen snowflake branch: 用用看「建立雪花分支」積木，建立 3 個分支，讓它一開始像個雪花。
      frozen snowflake full: 現在我們來重複它 8 次以製作出美麗的雪花！
      frozen snowflake full_b: 現在我們來重複它 **8** 次以製作出美麗的雪花！
      frozen snowflake full_test: 現在我們來重複它 **8** 次以製作出美麗的雪花！
      frozen snowflower: 精細複雜的雪花樣式其實可以用非常簡單的形狀來產生。您可以畫重複五個大小為 5 的圓，以及五個大小為 10 個圓嗎？
      frozen square iterative: 看來我們已經畫出了正方形的一半了！來，我們一起把 4 條線組合起來，變成一個正方形吧！
      frozen square loop 3x: 這次我們來建立 3 個正方形吧！每個正方形完成後，記得要轉 120 度，再畫下一個正方形。
      frozen square loop: 嗨，我是艾倫戴爾的安娜公主！讓我們用「重複」積木畫個正方形，這樣一來我們就可以用較少的積木完成。你覺得要「重複」幾次（???）才能畫出一個正方形呢？
      frozen square snowflake: 你可以用「重複」積木來畫 10 次正方形，每次轉 36 度嗎？這樣可以繪製出一個雪花喔！
      grade1_adventurer_loops2: Laurel 要怎麼只使用一個`東 -->`積木收集所有的 5 個寶藏？
      grade1_artist_loops6: "**挑戰：**有個隱藏的花園！讓我們隨便逛逛。"
      grade1_artist_loops7a: "**挑戰：**可愛極了！讓我們在花園裡散個步。"
      grade2_CaringForNewPet_0: 在這一關，把所有的積木放在一起，然後點擊「運行」看看結果如何！
      grade2_CaringForNewPet_11: _「保持冷靜，幫我找到那隻壞豬豬」_
      grade2_CaringForNewPet_2: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      grade2_CaringForNewPet_2courseC_maze_programming3: "_「這隻豬真的把我惹毛了！」_\\\r\n\\\r\n有個積木會讓鳥崩潰，把它移除掉（拖曳回工具箱）。\\\r"
      grade2_MakeDogTag_8: 現在我們用迴圈來把一堆的 V 連接在一起。
      grade2_MakeDogTag_9: "是時候搞出個名堂了！\n\\\r\n\\\r\n重建上個關卡的程式，不過這次在迴圈裡添加向左轉 30 度的程式。然後將重複
        8 次改成 24 次。"
      grade2_PuppyLoops_10: "我的老師告訴我們做事要有始有終！\\\r\n\\\r\n幫我完成我的風車，你可以找到錯誤的地方嗎？"
      grade2_PuppyLoops_2: "哇嗚，神奇的積木出現啦！利用`重複`積木，你可以讓一段程式不斷的循環執行。\\\r\n\\\r\n你能在`重複`積木裡只用上一個`移動-向前`積木，透過迴圈的方式來抓到這隻豬嗎？"
      grade2_PuppyLoops_4: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      grade2_PuppyLoops_8: |-
        畫出貓鬍鬚的程式不正確。

        修正這個程式來給貓畫上一樣長的鬍鬚。
      grade2_PuppyLoops_9: |-
        看起來Ｃ被畫反了！

        你可以將它改正嗎？
      grade2_collector_2: 讓 Laurel  移動到寶石處，然後用「採集」積木把它撿起來。
      grade2_collector_9: _「讓我們獲得所有的硬幣！」_
      grade2_collector_9a: "**挑戰：**拿到所有的硬幣。"
      grade2_collector_A: 幫 Laurel 收集到所有寶石。
      grade2_collector_A_2018: 幫 Laurel 收集到所有寶石。
      grade2_collector_A_2019: 幫 Laurel 收集到所有寶石。
      grade2_collector_pre1: "_「哈囉，我是 Laurel。我正在狗狗公園找寶石！」_  \n\n利用這些程式積木，看看你能不能幫 Laurel
        收集到寶石。"
      grade2_link_RunMarco_partner: |-
        <a href="https://www.allcancode.com/runmarco"></a><img
        src="https://images.code.org/c754e82a395ab69e5c1e3b2dfe8bf9ff-image-1486603338831.22.10.png"
        width="400px"/></a>
      grade2_maze_debuggingFP: _「現在，幫我偷襲這隻豬，不管用什麼辦法，你想得到的都行！」_
      grade2_maze_intro10: 解決這個關卡。
      grade2_maze_intro6: 就是這樣，我想我們已經準備好了，試著解決一些關卡。
      grade2_maze_intro9: 解決這個關卡。
      grade2_puppy_loops2: "哇嗚，神奇的積木出現啦！利用`重複`積木，你可以讓一段程式不斷的循環執行。\\\r\n\\\r\n你能在`重複`積木裡只用上一個`移動-向前`積木，透過迴圈的方式來抓到這隻豬嗎？"
      grade2_puppy_loops4: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      grade2_puppy_loops5: _「愈快抓到豬愈好！」_
      grade3_ConditionalsElse_1: "這雲遮住了我的視線！\n\\\r\n\\\r\n檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。\\\r\n注意，它會變來變去的！"
      grade3_ConditionalsElse_2: "雲愈來愈多了！\\\r\n\\\r\n檢查每個雲，在你採集花蜜前看看是不是有花朵藏在裡頭。\\\r\n\\\r\n記住：\n雲底下藏的東西不見得一樣！"
      grade3_ConditionalsElse_4: "有時雲裡面有花朵，有時雲裡藏著蜂窩！\\\r\n\\\r\n使用`如果…否則`積木，如果是花朵就收集花蜜。\\\r\n否則，就釀造蜂蜜（因為它是蜂窩）。"
      grade3_ConditionalsElse_5: "雲下藏的不是花朵就是蜂窩！\\\r\n\\\r\n用`如果…否則`積木，如果是花的話就採集花蜜，\\\r\n否則，就釀造蜂蜜。"
      grade3_ConditionalsElse_6: "我不確定這朵花裡有多少花蜜，也許是 1 或 2 或 3 個。\\\r\n\\\r\n組合這個條件判斷積木（`如果`和`如果…否則`）來取得花朵中實際的花蜜數。\n\\\r\n\\\r\n記住，花蜜的數量會在你每次運行之後改變！"
      grade3_ConditionalsElse_7: |-
        這些花朵上可能有 3、2 或 1 個花蜜。

        完成 `check purple flower`（檢查紫花）這個函式，並使用它來收集花朵上的所有花蜜。
      grade3_ConditionalsElse_8: "寫個 `check flower make honey`（檢查花朵釀造蜂蜜）的函式。\\\r\n\\\r\n你的函式應該要檢查紫花裡有多少的花蜜（1-3
        不等）並採集起來。\\\r\n然後，再向前移動釀造蜂蜜。"
      grade3_ConditionalsElse_9: "**評量：**雲朵中可能隱藏著帶有花蜜的花朵，或是可裝蜂蜜的蜂窩。\\\r\n\\\r\n完成這個`get
        nectar or make honey`的函式，然後調用它來收集花蜜或蜂蜜。（註：get nectar or make honey 是採到花蜜或釀成蜂蜜的意思）\\\r"
      grade3_ConditionalsElse_TeacherIDo: "雲下藏的不是花朵就是蜂窩！\\\r\n\\\r\n用`如果…否則`積木，如果是花的話就採集花蜜，\\\r\n否則，就釀造蜂蜜。"
      grade3_Conditionals_1: "我是一隻蜜蜂！\\\r\n\\\r\n\\\r\n使用最少的積木幫我採集到花朵中的所有花蜜。"
      grade3_Conditionals_10: "這裡也太多活要做了吧！\\\r\n\\\r\n使用你所學到的來收集所有花蜜及蜂蜜。"
      grade3_Conditionals_11 BAD: "**評量：**使用一個`當…`迴圈來採集這些花朵上的所有花蜜。"
      grade3_Conditionals_11: "我們把所有東西都放在一起吧！\\\r\n\\\r\n利用你學過的技能來幫我收集花蜜，用的積木愈少愈好。\\\r\n\\\r\n不要忘了在最後幫它們釀成蜂蜜。"
      grade3_Conditionals_12: "不陌生吧，這種樓梯模式的關卡。\\\r\n\\\r\n你可以只在有花蜜的花朵上採集嗎？用的積木愈少愈好。"
      grade3_Conditionals_13: "**評量：**收集所有的花蜜。\\\r\n小心，不要採集沒有花蜜的紫花。"
      grade3_Conditionals_2: "仔細收集花蜜！\\\r\n\\\r\n幫我收集花蜜及蜂蜜，用的積木愈少愈好。  "
      grade3_Conditionals_3: "這些神奇的紫花又開始變化了！\\\r\n\\\r\n每次你在過這個關卡時，紫色的花上可能會有 1 個花蜜，或是什麼也沒有…但除非你開始運行程式，否則你不會知道確切的數量！\\\r\n\\\r\n小心不要在沒有任何花蜜的花朵上採集。\\\r\n你必須先用`如果花蜜…`積木檢查看看是否花蜜數等於
        1。"
      grade3_Conditionals_8: "我想知道那裡有些什麼！\\\r\n\\\r\n幫忙讓我在院子裡飛翔，並收集花朵中的花蜜。 "
      grade3_Debugging_1: "這些積木真是讓我一陣錯亂！\\\r\n\\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。"
      grade3_Debugging_5: "那花看起來真美味！\\\r\n\\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。\\\r\n現在你可以同時使用運行和步進。"
      grade3_Debugging_6: "真是甜蜜的挑戰啊！\\\r\n\\\r\n修正錯誤（可能不只一個）來收集到所有的花蜜。"
      grade3_Debugging_9: "有點耐心！\\\r\n\\\r\n你需要修復程式裡的一些問題，才能夠收集所有的花蜜和蜂蜜。"
      grade3_Loops_10: "蜜蜂就是那麼忙！\\\r\n\\\r\n幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。"
      grade3_Loops_11: "這個圖形的路徑不同於其他的圖形。\\\r\n\\\r\n你能收集到花蜜嗎？用的積木愈少愈好。"
      grade3_Loops_3: 使用一個`重複`迴圈來收集所有的花蜜。
      grade3_Loops_4: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      grade3_Loops_6: "在這關中，迴圈應該進行多少次？\\\r\n\\\r\n迴圈是你的朋友！用一些迴圈來減少積木使用數量，並完成這個關卡。"
      grade3_Loops_7: "那些花看起來真是香甜可口！\\\r\n\\\r\n從每個花朵上採集花蜜，用的積木愈少愈好。"
      grade3_Loops_TeacherIDo: "那些花看起來真是香甜可口！\\\r\n\\\r\n從每個花朵上採集花蜜，用的積木愈少愈好。"
      grade3_RunningFarm_10: 收集所有的玉米和生菜，然後收成南瓜。
      grade3_RunningFarm_11a: 收集所有的玉米和生菜，然後收成南瓜。
      grade3_RunningFarm_7: "**挑戰：**收集所有的玉米和生菜，然後收成南瓜。"
      grade3_RunningFarm_9: |-
        你可以幫我最後一次嗎？
        我想要在雜草叢生前盡可能採收到最多的作物。
        你覺得我們可以有多少收成呢？
      grade3_bee_conditionals_quantum1: "_「這雲擋住了我的視線 ！」_ \n\n檢查看看雲下面藏了什麼，如果是花，就把花蜜採集起來。"
      grade3_bee_conditionals_quantum2: "雲愈來愈多了！\\\r\n\\\r\n檢查每個雲，在你採集花蜜前看看是不是有花朵藏在裡頭。\\\r\n\\\r\n記住：\n雲底下藏的東西不見得一樣！"
      grade3_maze_Loop1: "**評量：**讓我吃到向日葵，但只能用 5 個積木！ "
      grade3_maze_loops2: 帶我到那朵向日葵的位置!
      grade3_maze_nestedLoops2: "哇嗚，神奇的積木出現啦！利用`重複`積木，你可以讓一段程式不斷的循環執行。\\\r\n\\\r\n你能在`重複`積木裡只用上一個`移動-向前`積木，透過迴圈的方式來抓到這隻豬嗎？"
      grade3_maze_nestedLoops3: 讓我抓到那隻豬！這一次，你只能用 1 個`移動-向前`積木。
      grade3_maze_nestedLoops4: 這個關卡裡，2 個 `重複` 迴圈可以幫你使用最少的積木數來抓到豬！
      grade4_arist_nested_loop_circles1: "\\*\\* 評量：\\*\\* 使用一個巢狀迴圈來完成這個圖案。"
      grade4_arist_nested_loop_flags1: 重複執行已有的程式來畫出一個風車。
      grade4_arist_nested_loop_polygons1: "循環這個圖樣 10 次。\\\r\n\\\r\n你知道在每個圖樣畫完後要轉多少角度嗎？"
      grade4_arist_nested_loop_polygons2: "重複這個圖案6次。\\\r\n\\\r\n你知道每次重複畫圖案時需要轉多少度？ "
      grade4_arist_nested_loop_squares1: "你可以用巢狀迴圈來畫出在人行道上的 10 個正方形嗎？\\\r\n\\\r\n每個正方形的邊長為
        30 像素。"
      grade4_arist_nested_loop_triangles2: "現在將這個迴圈嵌套進另一個迴圈內，以畫出 10 個三角形。 \\\r\n這就是所謂的「巢狀式迴圈」。
        \ "
      grade4_arist_nested_loop_triangles3: 你可以藉由重複畫三角形的程式碼來畫出一個六邊形嗎？
      grade4_arist_nested_loop_triangles4: 在鱷魚的嘴內畫出牙齒!
      grade4_arist_nested_loop_triangles5: "把起始程式碼嵌進另一個迴圈中來畫出一個太陽。\\\r\n\\\r\n要能夠製作出這樣酷炫的圖案，你必須在轉向之前向前跳一段距離。"
      grade4_arist_nested_loop_triangles6: 你可以用巢狀迴圈來畫出這 36 個三角形嗎？
      grade4_artist_freeplay: 創建你自己的專案！這個作品會被儲存到你的作品集，這樣一來你就可以隨時修改它！
      grade4_artist_functions2: "函式（Functions）能讓你能夠製作一個屬於自己的新積木！\\\r\n\\\r\n我們已經把繪製一個正方形所需要的所有積木放到一個名叫
        `draw a square` 的函式裡。這一次，使用 `draw a square` 函式來製作個眼鏡。\n\\\r\n\\\r\n鏡片外框之間的距離為
        75 像素。"
      grade4_artist_functionsChallenge0: "**挑戰：**盡可能做出你想要的函式，用函式來繪製邊長為 50 像素的正方形。"
      grade4_artist_functions_challenge: "**函式超級挑戰：**使用建議的函式來畫出四列的六角形，注意到我們的偶數列是如何移動到右邊的嗎？"
      grade4_artist_functions_challenge2: "**函式超級挑戰：**使用建議的函式來畫出四列的六角形，注意到我們的偶數列是如何移動到右邊的嗎？"
      grade4_artist_nestedLoops_challenge: "<img src=\"https://images.code.org/c876143212d195192013582f57c6df04-image-1445625392518.36.18.png\"\nwidth=\"150px;\"
        style=\"mix-blend-mode: multiply;\" />\\\r\n\\\r\n**遊戲時間：**這兒有個程式能畫出有趣的圖形。
        \\\r\n\\\r\n如果把它重複個幾次，然後在每次的循環都轉向，會發生什麼事呢？\\\r\n\\\r\n注意當這個圖形的轉向到達了 **420
        度**時，就表示小畫家畫完了，它面對的方向會和一開始畫圖的方向不同，這個新的方向會是初始繪圖方向的_向右 60 度_。\\\r\n\\\r\n\n<hr/>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>重複
        4 次</b></summary>\r\n<br/>\r\n如果你想要在 4 次重複內畫完一個圓形，小畫家需要每次轉 **360 度/4 = 90
        度**。你可以在迴圈外層額外添加「轉向-右方 30 度」積木來做到（因為 **60+30 = 90**）。\n<br/>\r\n<img src=\"https://images.code.org/9da67a628ed72e87520a02a0d917e2af-image-1440132370113.44.12.png\"\nwidth=\"500px;\"
        style=\"mix-blend-mode: multiply;\" />\r\n<br/><br/>\r\n</details>\r\n</h4>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>重複
        6 次</b></summary>\r\n<br/>\r\n當你重複這個圖形 6 次，你轉了 **6x60 度**， 也就是剛好一圈 **360 度**。\r\n<img\nsrc=\"https://images.code.org/b79f96b87097ce3afe8a6a5608d04e36-image-1440132287456.44.27.png\"
        \ width=\"500px;\"  style=\"mix-blend-mode:\nmultiply;\" />\r\n</details>\r\n</h4>\r\n\r\n<h4>\r\n<details>\r\n<summary><b>重複
        12 次</b></summary>\r\n<br/>\r\n如果你想要重複這個圖形 12 次，小畫家每次循環需要轉 **360 度/12 = 30
        度** 。那表示你需要在重複畫出圖形之前先稍微調整小畫家的方向，讓它向左轉 30 度。<br/><br/>\r\n<img src=\"https://images.code.org/ad254952522674496918561096817c66-image-1440132424792.44.01.png\"\nwidth=\"500px;\"
        style=\"mix-blend-mode: multiply;\" />\r\n</details>\r\n</h4>\r\n\r\n現在換你了！你能利用重複初始圖形的方式來創建出每個圖案嗎？
        \ "
      grade4_artist_nestedLoops_challenge2: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\n挑戰時間到了！
        \ \\\r\n\\\r\n這裡有個圖案，只用了你見到的積木做出來的。想一想，要怎麼重建它？你可以邊做邊試，錯了也沒關係。我們不要求你一次就做對。\\\r\n\\\r\n這些重複的圖形和上個關卡的圖案幾乎相同，除了第一個迴圈裡用的長度比較小以外。 "
      grade4_artist_nested_loop_circles1: "\\*\\* 評量：\\*\\* 使用一個巢狀迴圈來完成這個圖案。"
      grade4_artist_nested_loop_flags1: 重複執行已有的程式來畫出一個風車。
      grade4_artist_nested_loop_polygons1: "循環這個圖樣 10 次。\\\r\n\\\r\n你知道在每個圖樣畫完後要轉多少角度嗎？"
      grade4_artist_nested_loop_squares1: "你可以用巢狀迴圈來畫出在人行道上的 10 個正方形嗎？\\\r\n\\\r\n每個正方形的邊長為
        30 像素。"
      grade4_artist_nested_loop_triangles1: "完成程式碼來畫出這些三角形。第一個三角形的程式碼已經幫你建好了。提示：3
        個三角形旋轉了 360 度。\\\r\n\\\r"
      grade4_artist_nested_loop_triangles3: |-
        你可以藉由重複畫三角形的程式碼來畫出一個六邊形嗎？
        提示：6 × ? = 360
      grade4_artist_nested_loop_triangles5: "把起始程式碼嵌進另一個迴圈中來畫出一個太陽。\\\r\n\\\r\n要能夠製作出這樣酷炫的圖案，你必須在轉向之前向前跳一段距離。"
      grade4_artist_nested_loop_triangles6: 你可以用巢狀迴圈來畫出這 36 個三角形嗎？
      grade4_artist_parameters_squares1: "點擊「編輯」來完成 draw a square（畫個正方形）函式的定義，並且加一個參數。\\\r\n它應該像三角形一樣有一個
        length（長度）參數。\\\r\n\\\r\n**這次，畫出 3 個正方形**，邊長分別為 25、50、75 像素，每個正方形相隔 100 像素。"
      grade4_artist_parameters_triangles2: 你有察覺這個函式積木有什麼不一樣嗎？點擊「運行」來看看發生什麼事。
      grade4_artist_parameters_triangles2b: "你能完成這個圖案嗎？ \n\n每一次畫的三角形的邊長比前一個多 25 像素。\n第一個三角形的邊長是
        25 像素。"
      grade4_artist_parameters_triangles3: "你能完成這個圖案嗎？ \n\n每一次畫的三角形的邊長比前一個多 25 像素。\n第一個三角形的邊長是
        25 像素。"
      grade4_artist_parameters_triangles4: |-
        畫出三角形的函式壞掉了。

        你可以修正這個函式，以分別畫出邊長為 25、50、75 的三角形嗎？
      grade4_artist_parameters_trianglesx: "你能完成這個圖案嗎？ \n\n每一次畫的三角形的邊長比前一個多 25 像素。\n第一個三角形的邊長是
        25 像素。"
      grade4_bee_conditionals_nested_loops: "**評量：**收集所有的花蜜。\\\r\n小心，不要採集沒有花蜜的紫花。"
      grade4_bee_conditionals_new1: "**評量：**收集所有的花蜜。\\\r\n小心，不要採集沒有花蜜的紫花。"
      grade4_bee_conditionals_quantum1: "這雲遮住了我的視線！\n\\\r\n\\\r\n檢查看看雲的下面是不是有花朵，只有在有花朵的時候才採集花蜜。\\\r\n注意，它會變來變去的！"
      grade4_bee_conditionals_quantum2: "雲愈來愈多了！\\\r\n\\\r\n檢查每個雲，在你採集花蜜前看看是不是有花朵藏在裡頭。\\\r\n\\\r\n記住：\n雲底下藏的東西不見得一樣！"
      grade4_bee_conditionals_quantum4: "有時雲裡面有花朵，有時雲裡藏著蜂窩！\\\r\n\\\r\n使用`如果…否則`積木，如果是花朵就收集花蜜。\\\r\n否則，就釀造蜂蜜（因為它是蜂窩）。"
      grade4_bee_conditionals_quantum5: "雲下藏的不是花朵就是蜂窩！\\\r\n\\\r\n用`如果…否則`積木，如果是花的話就採集花蜜，\\\r\n否則，就釀造蜂蜜。"
      grade4_bee_functions2: "函式是一段程式碼，用來執行某個任務。\\\r\n\\\r\n請使用 `get 2 nectar`（採集
        2 個花蜜）函式，從每一朵花中採集花蜜。"
      grade4_bee_functions3: 在這個關卡創建名為 get 5 的函式以一次拿取 5 個花蜜。
      grade4_bee_nestedLoops2: "**挑戰：**想辦法用這些積木，得到所有的花蜜。"
      grade4_bee_nestedLoops4: 使用巢狀迴圈來收集每一朵花的花蜜，並在每一個蜂巢製造蜂蜜。
      grade4_frozen_freeplay: 您已經變成一個專業的藝術家囉！開始打造一個冬季仙境吧。
      grade4_frozen_functions0: 圓是一個特殊的形狀。您能想到中間的問號應該要選擇哪一個數字，才能畫出一個圓嗎？
      grade4_frozen_functions1a: 使用新的「建立一個圓形」積木讓我建立 10 個相互重疊的圓形。不要忘了在每次畫一個圓之後向前跳。
      grade4_frozen_functions2: 現在我們來建立 20 個互有重疊的圓，在每個圓之後轉向 18 度。
      grade4_frozen_functions3: 這裡有一個「建立一個圓形」的程式積木，可以畫出不同大小的圓。您可以用這個來建立一個大小為 5 的小圓，跟一個大小為
        10 的較大的圓嗎？
      grade4_frozen_functions4: 精細複雜的雪花樣式其實可以用非常簡單的形狀來產生。您可以畫重複五個大小為 5 的圓，以及五個大小為
        10 個圓嗎？
      grade4_frozen_nested_loop_diamonds2: 你知道每個雪花的形狀都不同嗎？讓我們用另一個「重複」積木創造一個新的雪花，它是由
        4 個重複的平行四邊形所組成，每畫完一個平行四邊形就向右轉 90 度。
      grade4_frozen_nested_loop_diamonds3: 現在，讓我們創建新的雪花圖案，通過使用「重複」積木來畫出平行四邊形 10 次，每畫一個之後轉向
        36 度。
      grade4_frozen_square: 嗨，我是艾倫戴爾的安娜公主！讓我們用「重複」積木畫個正方形，這樣一來我們就可以用較少的積木完成。你覺得要「重複」幾次（???）才能畫出一個正方形呢？
      grade4_frozen_square_loop1: 嗨，我是艾倫戴爾的安娜公主！讓我們用「重複」積木畫個正方形，這樣一來我們就可以用較少的積木完成。你覺得要「重複」幾次（???）才能畫出一個正方形呢？
      grade4_frozen_square_loop2: 這次我們來建立 3 個正方形吧！每個正方形完成後，記得要轉 120 度，再畫下一個正方形。
      grade4_frozen_square_loop3: 你可以用「重複」積木來畫 10 次正方形，每次轉 36 度嗎？這樣可以繪製出一個雪花喔！
      grade4_playlab_freeplay: "自由活動時間到了！\n好好享用工具箱的所有積木吧。\\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>這裡有些點子。</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n
        \       \\t<li><strong>追著跑</strong>\n- 讓角色 2 來回走動，然後使用你的方向鍵移動角色 1，追著角色 1 跑，直到他們碰在一起。
        </li>\r\n            <li><strong>打地鼠</strong>\n- 讓一個角色在隨機位置突然出現，在他消失前點擊他就得分。
        </li>\r\n            <li><strong>猜誰先出現</strong> - 讓二個角色都先消失，隨機的改變位置，並隨機出現其中一個角色。點擊第一個出現的角色就得分，如果點擊到第二個出現的角色就扣分！
        </li>\r\n        </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      grade4_playlab_test: |-
        <h5><b>
        在我們的遊戲中，要怎樣才能獲得分數呢？
        </b></h5>
        <br/>

        1.  在每次小狗用派擊中小貓時，加 1 到你的 `points` 變數上。<br/><br/>

        2.  使用`當角色2碰到任何東西`事件來觸發分數更新。你可以利用 `points = points +1` 的方式增加變數值。<br/><br/>

        3.  分數到達 10 分（每次加 1 分）就過關。

        <br/><br/>

        <h4>
        **注意：**使用向右鍵扔出派！
        </h4>
      grade4_playlab_test2: "這裡有個函式叫做 `jump`（跳躍），它可以讓你的主要角色向上跳 100 像素。\\\r\n\\\r\n運行這個程式，用方向鍵來控制小狗，並利用
        `jump` 函式收集所有的旗幟。"
      grade4_review_artist2: "這個房子需要一個屋頂！畫出這個三角形。\\\r\n\\\r\n提示：三個邊的長度都相同。\\\r\n\\\r\n<img
        src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"\nwidth=\"300\"/>"
      grade4_review_artist3: |-
        跳躍積木只會移動小藝術家而不會繪圖。
        同時使用`跳躍-向前`和`移動-向前`積木來畫出這個虛線。
        每個線條長度為 50 像素。
      grade4_review_bee1: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      grade4_review_bee3: "蜜蜂就是那麼忙！\\\r\n\\\r\n幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。"
      grade5_artist_binary10: "<img src=\"https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png\"\nwidth=\"250px\"/>\\\r\n\\\r\n**自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！\\\r\n\\\r\n如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。
        \n\\\r\n<br/>\\\r"
      grade5_artist_binary2: "這裡有一個函式採用 1與 0 的二進位字串，引導藝術家跟隨它們由左至右，由上到下。\\\r\n\\\r\n
        當藝術家看到 1 時會填滿方格，當藝術家看到 0 時則忽略方格。\\\r \n\\\r\n**運行這個程式，看看這位藝術家如何使用二進位繪製這個圖案。**"
      grade5_artist_for_loops10: |-
        **挑戰：**
        你能想的到要如何建立這個多邊形圖案嗎？這個圖案的邊長是 40 像素，用你所有學過的東西試試看。
      grade5_artist_for_loops5: "只是小小的修改了上個可以繪製出這個圖案的程式，你能找出改變了什麼嗎？\\\r\n\\\r\n提示，你需要移除某個東西！"
      grade5_artist_for_loops6: |-
        如果每次都多轉或少轉一些角度，那麼你可以創作出一種規律效果。

        試著用上一關的一些程式碼，但是轉向角度變成 89 度，來創造漩渦狀的正方形。
      grade5_artist_for_loops7a: 把角度變小成 72 度，以畫出螺旋狀的五邊形。
      grade5_artist_for_loops8: "還記得在上一個階段，我們使用一個變數來控制圖形的邊數嗎？\n現在我們要用 `counter` 這個變數來做相同的事情。\\\r\n\\\r\n這個圖案從一個三角形開始，且每次增加
        1 個邊直到畫出一個十邊形。每個圖形的邊長為 100 像素。 \\\r\n\\\r\n你要如何使用計數迴圈中的 `counter` 變數來重建圖案呢？"
      grade5_artist_for_loops9: "讓我們總結一下吧！\\\r\n\\\r\n用你所知道的計數迴圈與 `counter` 變數，來創造出每個形狀都比前一個多
        2 條邊的圖案，確保每條邊長是這個多邊形邊數的 10 倍。\\\r\n\\\r\n這裡提供給你一些些參考的程式碼。"
      grade5_artist_for_loopsfreeplay11: "<br/><br/>\\\r\n<img\nsrc=\"https://images.code.org/9b5897e059bb29bd2faf8504659a3cfc-image-1440719685627.49.33.png\"\nwidth=\"250px\"/>\\\r\n<br/><br/>\\\r\n**自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。"
      grade5_artist_freeplay: 創建你自己的專案！這個作品會被儲存到你的作品集，這樣一來你就可以隨時修改它！
      grade5_artist_functionparameters10: |-
        <img src="https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png"
        width="250px"/>

        **自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！

        如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。

        注意：我們用了`設定透明度`積木來製作 petals（花瓣）向外褪色的效果。
      grade5_artist_functionparameters9a: "完成這個 draw a spiral edge（畫個螺旋圖）函式，並詢問螺旋圖中間最小的長度。\\\r\n\\\r\n\\-\n正方形螺旋圖中間最小的長度為
        50 像素。\\\r\n\n-   The\n    螺旋圖最外圈中最長的長度是 200 像素。\\\r"
      grade5_artist_functionparameters_6: |-
        做得好！現在編輯這個函式，裡頭添加一個參數以代表多邊形的邊數。

        所有圖形的邊長都是 100 像素。
      grade5_artist_parameters_squares1: "點擊「編輯」來完成 draw a square（畫個正方形）函式的定義，並且加一個參數。\\\r\n它應該像三角形一樣有一個
        length（長度）參數。\\\r\n\\\r\n**這次，畫出 3 個正方形**，邊長分別為 25、50、75 像素，每個正方形相隔 100 像素。"
      grade5_artist_parameters_squares2a: "編輯這個函式，並在裡頭使用名為 `length`（長度）的參數。\\\r\n\\\r\n每個正方形的邊長應該會比上一個大
        25 像素。第一個正方形的每邊長 25 像素，將問號（???）改成正確的數字，以畫出這個圖案。"
      grade5_artist_parameters_triangles2: "你能完成這個圖案嗎？ \n\n每一次畫的三角形的邊長比前一個多 25 像素。\n第一個三角形的邊長是
        25 像素。"
      grade5_artist_parameters_triangles2a: 你有察覺這個函式積木有什麼不一樣嗎？點擊「運行」來看看發生什麼事。
      grade5_artist_parameters_triangles4: |-
        畫出三角形的函式壞掉了。

        你可以修正這個函式，以分別畫出邊長為 25、50、75 的三角形嗎？
      grade5_artist_variables_freeplay10: "**自由遊戲：**用不同的邊數來實驗看看，你能修改演算法，讓形狀在不管有多少邊的情況下，尺寸依然保持不變嗎？"
      grade5_artist_variables_freeplay14: "**自由發揮**：讓我們一探究竟！現在你的演算法嵌入了又一個循環中。試著改變這兩個變數的值來畫出很酷的圖形。
        \\\r\n\\\r\n如果想看到更好的效果，試試使用顏色積木！在循環裡面使用隨機取色，看看效果如何。"
      grade5_artist_variables_freeplay15: "<img src=\"https://images.code.org/b5e28b084cb331ee030ea3853ed921bd-image-1440060815818.51.21.png\"\nwidth=\"250px\"/>\n**自由發揮靈感：**你已經學會了製作這樣的圖案所需的知識了！如果這個圖案讓你有些聯想，試試畫出一些類似的圖像。要不然，就畫畫你想畫的一些東西。 "
      grade5_artist_variables_hexagons1: "讓我們再試一次！\\\r\n\\\r\n你可以將 length（長度）變數設為
        60，以完成這個酷炫的六邊形圖案嗎？"
      grade5_artist_variables_letterT11: "這裡有個複雜的程式，它的概念與上一關相同，你要設定的是 `sides`（邊數）變數，以畫出由正方形組合而成的圖案。\\\r\n\\\r\n\n<p\nstyle=\"font-size:small;
        padding: 15px 15px 15px 40px; background-color:#dcf3f3;\nborder-radius:10px;\">\r\n\\t玩一玩：試著使用一些其他的數字，看看圖案會有什麼變化！\r\n</p>"
      grade5_artist_variables_octagons13: "當一個圖形的邊愈多，每個邊的長度就要愈小，這樣你才能讓整個圖案顯示在畫面。\\\r\n\\\r\n我們來重建這個演算式來畫出神奇的圖案，取代原來需手動設置的
        `length`（長度）變數，我們改用運算類型的積木和一個 `sides`（邊數）變數。這可以確保每個圖形都能完整顯示在畫面。\\\r\n\\\r\n每個多邊形的周長都是
        300 像素。"
      grade5_artist_variables_pentagon8: "使用你在上個關卡學到的，用 `sides`（邊數）變數來建立這個六邊形。\\\r\n\\\r\n看看你在只修改
        1 個值的情況下能否畫出一個三角形、正方形、五邊形或者八邊形？"
      grade5_artist_variables_pentagon9: 現在，重新建立最後一關的演算法，並創作一個邊長 150 像素的五邊形。
      grade5_artist_variables_pentagons1: "設定正確的 length（長度），並將 length 變數拖曳到正確的位置，以畫出邊長為
        100 像素的五角形。\\\r\n\\\r\n看看你是不是能一次就能設定好 length 的值和程式碼？"
      grade5_artist_variables_pentagons12: "我們將 `sides`（邊數）參數設為 5。添加到算式中的邊數越多，圖形就會變得愈大！\\\r\n\\\r\n<br/>\\\r\n注意這裡有另外一個參數叫做
        `length`（長度）。\n\\\r\n我們可以在「移動-向前」的地方用到它。\n\\\r\n\\\r\n將 length 設成 75 讓每個形狀的邊長變成
        75。"
      grade5_artist_variables_rectangle6: 現在我想要製作一個長方形，它的高是寬的 2 倍。這裡有個叫作 `width`（寬度）的變數，請把它設為
        100。你能用運算類別裡的積木來完成程式嗎？
      grade5_artist_variables_square7: "這是可以畫出任何規則多邊形的一些程式。\\\r\n\\\r\n有一個新的變數叫做 `sides`（邊），現在設定為
        4。\\\r\n\\\r\n不管邊數多少，你能使用 `sides` 變數（和運算類積木）來轉向正確的角度嗎？"
      grade5_artist_variables_triangles2: 取代向前移動 150 像素，`移動`積木現在用了一個變數叫做 `length`（長度）。你可以將
        `length` 設為 150 以畫出這個新的三角形嗎？
      grade5_artist_variables_triangles3: '拖曳數字積木到「設定長度」積木和「重複」積木裡，以畫出一連串的 50 像素長的三角形。 '
      grade5_bee_for_loops5: 現在，我們需要向前移動，移動距離為計數器的次數，接著採集花蜜，採集個數也是計數器的次數。你可以使用 2 個「重複」迴圈來完成這個挑戰嗎？
      grade5_bee_for_loops6: 你也可以使用一個「計數迴圈」來倒數，試著從 5 數到 1，間隔數為 1 的方式來採集這些花蜜。
      grade5_bee_for_loops8: |-
        你明白了吧！

        如果要依次收集 3、6、9、12、15 個花蜜，要在每次的數字後加多少呢？
      grade5_bee_parameters_new3: |-
        是時候測試這個函式了！

        我們來看看它是不是可以容易的收集到這 3 個橫列上的所有花蜜。
      grade5_bee_parameters_new4: "**要如何讓函式能維持運作？**   \\\r\n\\\r\n我們需要做一些調整。點擊「編輯」，添加一個
        `length`（長度）參數到函式裡，這樣一來，就算列數與長度不相同，函式也能正常運作囉。"
      grade5_bee_parameters_new8a: 使用你的新函式以畫出這個螺旋圖形。
      grade5_bee_parameters_new9a: 使用你的新函式以畫出這個螺旋圖形。
      grade5_playlab_freeplay: "自由活動時間到了！\n好好享用工具箱的所有積木吧。\\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>這裡有些點子。</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n
        \       \\t<li><strong>追著跑</strong>\n- 讓角色 2 來回走動，然後使用你的方向鍵移動角色 1，追著角色 1 跑，直到他們碰在一起。
        </li>\r\n            <li><strong>打地鼠</strong>\n- 讓一個角色在隨機位置突然出現，在他消失前點擊他就得分。
        </li>\r\n            <li><strong>猜誰先出現</strong> - 讓二個角色都先消失，隨機的改變位置，並隨機出現其中一個角色。點擊第一個出現的角色就得分，如果點擊到第二個出現的角色就扣分！
        </li>\r\n        </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      grade5_playlab_variables1: "這一次你不需要寫任何程式，只要點擊「運行」來玩這個遊戲！\\\r\n\\\r\n<br/>\\\r\n在這個遊戲裡，你扮演一隻狗，要想辦法比貓拿到更多的旗子。使用向下鍵來控制狗，點你玩完了，點擊「完成」。"
      grade5_playlab_variables10: 編輯 `patrol`（巡邏）函式，加進一個 `actor`（角色）參數，這樣一來我們就可以為每個在畫面上的角色呼叫它。記住這些角色分別對應數字
        1、2、3。
      grade5_playlab_variables11: 添加一個名為 `speed`（速度）的參數到 `patrol`（巡邏）函式中。試著在「設定速度」積木中使用新的參數，來幫助企鵝趕在其他動物前得到所有旗幟。
      grade5_playlab_variables12: "我們來點有趣的！仔細看看提供的程式碼，你能不能想像每個積木在做些什麼。 \\\r\n\\\r\n當你完成後，使用方向鍵來控制小狗，並收集到所有的旗子。
        \\\r\n\\\r\n**注意：**\n你不需要對程式進行任何修改"
      grade5_playlab_variables13: 使用`當角色碰到`積木，在小狗碰到其他角色時，把狗送回左上方的位置。
      grade5_playlab_variables14: "自由活動時間到了！\n好好享用工具箱的所有積木吧。\\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>這裡有些點子。</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n
        \       \\t<li><strong>追著跑</strong>\n- 讓角色 2 來回走動，然後使用你的方向鍵移動角色 1，追著角色 1 跑，直到他們碰在一起。
        </li>\r\n            <li><strong>打地鼠</strong>\n- 讓一個角色在隨機位置突然出現，在他消失前點擊他就得分。
        </li>\r\n            <li><strong>猜誰先出現</strong> - 讓二個角色都先消失，隨機的改變位置，並隨機出現其中一個角色。點擊第一個出現的角色就得分，如果點擊到第二個出現的角色就扣分！
        </li>\r\n        </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>\r"
      grade5_playlab_variables2: 上一關的比賽一點都不公平！修改 `dog_speed`（小狗的速度）變數，確保你可以收集到比貓還要多的旗子，誰先拿到
        10 個旗子就勝利！
      grade5_playlab_variables3: "這裡有個新型態的遊戲！\n\\\r\n\\\r\n這一關你不需要改變任何東西。\\\r\n\\\r\n**指引：**\n使用向左鍵和向右鍵移動，向上鍵是跳，看看你能不能收集到所有旗子。"
      grade5_playlab_variables4: "現在，我們使用了一個叫作 `height`（高度）的變數來控制小狗能跳躍的高度。更新 `height`
        變數來讓小狗能夠跳得夠高以碰到所有旗子。\\\r"
      grade5_playlab_variables71: "這是一個早先的遊戲，但是大部分程式都隱藏了。這裡有個新函式叫做 `score_points`（獲得分數）。\\\r\n<br/>\\\r\n\n<hr>\r\n<br/>\r\n<h4>\r\n編輯這個函式，使得
        `points`（分數）參數能被添加到 `player_score` （玩家分數）變數上。 \r\n<br/>\r\n變數 `player_score`
        應該會在每次小狗的派碰到小貓時增加；在每次小貓的三明治碰到小狗時減少。 \r\n</h4>\r\n<br/>\r\n<hr>\r\n*注意：當你完成後，點擊「運行」玩玩看，當小狗得到
        6 分時，就可以進入下一關。"
      grade5_playlab_variables81: "我們為你準備了最後一個函式。\\\r\n\n<hr/>\r\n\r\n<h4>\r\n使用一個「如果」陳述式來編程你的遊戲，當
        player_score（玩家分數）達到了一定的數字後，就呼叫 level_up（升級）這個函式。<br/><br/>\r\n</h4>\r\n<i>例如
        player_score > 6</i>\r\n\r\n\r\n<hr/>\r\n<i>玩玩看這個遊戲，達到 level 3 你就可以移動到下個關卡。</i>"
      grade5_playlab_variables9: "這裡有個函式叫做 `patrol`（巡邏）。\n\\\r\n\\\r\n編輯 `patrol`
        讓貓能夠向上移動 400 像素，再向下 400 像素。"
      grade5_playlab_variables_freeplay: "自由遊戲時間！這裡我們目前為止玩過的所有變數，還有一些是你可能想要的。\\\r\n\\\r\n注意現在在工具箱裡有好多好多可以被組合的積木！在這裡，我們已經將它們分類放好。花點時間去嘗試每一個東西，當你一切就緖，就可以用重複、變數、事件類的各種指令製作一個遊戲或是故事。\\\r\n\\\r\n_提示：可以捲動頁面以查看工作區裡的所有指令。_"
      gradek_artist_loops1: |-
        幫小藝術家畫出這兩個線條。

        ![](https://images.code.org/7ddc7b43ef27197559c7defb0af56d03-image-1470776934855.gif)
      level 'grade3_Loops_10: "蜜蜂就是那麼忙！\\\r\n\\\r\n幫助蜜蜂收集所有的花蜜及蜂蜜，用的積木愈少愈好。"
      level 'grade3_Loops_11: "這個圖形的路徑不同於其他的圖形。\\\r\n\\\r\n你能收集到花蜜嗎？用的積木愈少愈好。"
      level 'grade3_Loops_3: 使用一個`重複`迴圈來收集所有的花蜜。
      level 'grade3_Loops_4: 現在使用`重複`積木來收集所有的花蜜和蜂蜜。
      level 'grade3_Loops_5: "多麼美麗的一片花田啊！\\\r\n\\\r\n幫助蜜蜂到每朵花上參觀一下。\\\r\n\\\r\n你能在
        7 個積木內完成嗎？"
      level 'grade3_Loops_6: "在這關中，迴圈應該進行多少次？\\\r\n\\\r\n迴圈是你的朋友！用一些迴圈來減少積木使用數量，並完成這個關卡。"
      level 'grade3_Loops_7: "那些花看起來真是香甜可口！\\\r\n\\\r\n從每個花朵上採集花蜜，用的積木愈少愈好。"
      playEventsK1: "這個遊戲稱為「Play Lab」。\\\r\n\\\r\n看看你能不能善用每個積木。"
      playEventsK2: "小狗想要說 Hi there。\\\r\n\\\r\n你可以幫幫牠嗎？\\\r\n\\\r\n![](https://images.code.org/f32d285fa6f45e1f8d042c04c55f32c8-image-1467988839292.gif)"
      playEventsK3: "小狗想要搔搔耳朵！\\\r\n\\\r\n你可以寫個程式讓牠被點擊時變得開心嗎？\\\r\n\\\r\n![](https://images.code.org/04fb37990455b215e0f20884363092d0-image-1467988943134.gif)"
      playEventsK4: "你可以在按向上鍵時，讓小狗往小鳥那走去嗎？\\\r\n\\\r\n![](https://images.code.org/2fbf6c793bb77a961fa7a52f27e4c59d-image-1467989013878.gif)"
      playEventsK5: "現在添加程式，在你點擊向前箭頭時，讓羅賓飛走。\\\r\n\\\r\n![](https://images.code.org/a7e224c5f13e39e5342011f8a76d3b6b-image-1467989101328.gif)"
      playEventsK6: "讓小鳥在被點一下時和小狗說話。\\\r\n\\\r\n![](https://images.code.org/fc80b1febbb7a472026b6bf2c535b2f4-image-1467989171517.gif)"
      playEventsK7: "在這個有趣的場景下還能做些什麼呢？\\\r\n<br/>\\\r\n\\\r\n\n<h5>\r\n<details>\r\n<summary><b>需要些靈感嗎？</b></summary>\r\n\\t<br/>\r\n\\t<h5>\r\n\\t\\t<ul>\r\n
        \       \\t<li><strong>對話</strong>\n- 當你在他們上面點一下時，精靈之間會互相交談。</li>\r\n            <li><strong>彈力球</strong>\n-
        讓一個精靈發出聲音，當其他的精靈撞到她時。</li>\r\n            <li><strong>方向鍵</strong>\n- 寫個程式，用方向鍵控制精靈的移動方向！</li>\r\n
        \       </ul>\r\n\\t</h5>\r\n</details>\r\n</h5>"
      ramp_artist_loops7: 找到規律，用迴圈讓這個程式更精簡！
      ramp_artist_loops7_2018: 找到規律，用迴圈讓這個程式更精簡！
      ramp_artist_loops7_2019: 找到規律，用迴圈讓這個程式更精簡！
      ramp_artist_loops9: 畫出一個每邊長 200 像素的正方形以過關。
      ramp_artist_loops9_2018: 畫出一個每邊長 200 像素的正方形以過關。
      ramp_artist_loops9_2019: 畫出一個每邊長 200 像素的正方形以過關。
      test_sarah: hi
      test_sarah_freeresponse: 這是目前遇到的問題…
