"el":
  slides:
    maze_intro:
      1:
        image: σημειώσεις/hoc1_1.jpg
        text: Καλώς ήρθες στην πρώτη σου Ώρα του Κώδικα! Ας ξεκινήσουμε με μια πρώτη
          γεύση  προγραμματισμού.
      2:
        image: σημειώσεις/hoc1_2.jpg
        text: Θα χρησιμοποιήσουμε το Blockly, μια οπτική γλώσσα προγραμματισμού στην
          οποία μπορείς να μετακινείς πλακίδια για να γράψεις κώδικα.
      3:
        image: σημειώσεις/hoc1_3.jpg
        text: Στα περισσότερα προγράμματα πρέπει κάποιος να πληκτρολογήσει τον κώδικα
          του προγράμματος, αλλά στο Blockly ο προγραμματισμός είναι οπτικός. Κάθε
          πλακίδιο αντιστοιχεί σε μια γραμμή «πραγματικού» κώδικα.
      4:
        image: σημειώσεις/hoc1_4.jpg
        text: Θα μάθεις τις βασικές αρχές της επιστήμης των υπολογιστών, έννοιες που
          χρησιμοποιούνται παντού από την κατασκευή εφαρμογών μέχρι τον έλεγχο οχήματος
          στον Άρη.
      5:
        image: σημειώσεις/hoc1_5.jpg
        text: Το πρόγραμμα είναι ένα σύνολο οδηγιών που πρέπει να εκτελέσει ο υπολογιστής.
      6:
        image: σημειώσεις/hoc1_6.jpg
        text: Ο στόχος του πρώτου προγράμματος είναι να καθοδηγήσει το πουλί (Angry
          Bird)  ώστε να κινηθεί μέσα στο λαβύρινθο και να πιάσει το πράσινο γουρουνάκι.
      7:
        image: σημειώσεις/hoc1_7.jpg
        text: Στο αριστερό μέρος της οθόνης εμφανίζεται ο λαβύρινθος μέσα στον οποίο
          εκτελείται το πρόγραμμα. Οι εντολές για κάθε puzzle εμφανίζονται κάτω από
          το λαβύρινθο.
      8:
        image: σημειώσεις/hoc1_8.jpg
        text: Η μεσαία εργαλειοθήκη έχει εντολές για το Θυμωμένο Πουλί. Θα τις χρησιμοποιήσεις
          για να φτιάξεις τον κώδικά σου.
      9:
        image: σημειώσεις/hoc1_9.jpg
        text: Στα δεξιά είναι ο χώρος εργασίας σου, όπου θα μεταφέρετε πλακίδια από
          την εργαλειοθήκη για να φτιάξεις το πρόγραμμά σου. Για να διαγράψεις ένα
          πλακίδιο σύρε το στα σκουπίδια στη γωνία.
      10:
        image: σημειώσεις/hoc1_10.jpg
        text: Κάθε πλακίδιο είναι μια εντολή. Εάν σύρεις το πλακίδιο «μετακίνηση προς
          τα εμπρός» στο χώρο εργασίας σου και πατήστε το «Εκτέλεση Προγράμματος»,
          το πουλί κάνει ένα βήμα στο λαβύρινθο.
      11:
        image: σημειώσεις/hoc1_11.jpg
        text: Για να κάνεις πάνω από μία ενέργεια, μπορείς να σύρεις πολλά μπλοκ στην
          περιοχή εργασίας σου και να τα συνδέσεις. Το πουλί θα εκτελέσει τις εντολές
          από επάνω προς τα κάτω.
      12:
        image: σημειώσεις/hoc1_12.jpg
        text: Εάν εκτελέσεις ένα πρόγραμμα και θέλεις να το διορθώσεις και προσπαθήσεις
          ξανά, πάτησε το πλήκτρο «Επαναφορά».
      13:
        image: σημειώσεις/hoc1_13.jpg
        text: Πάμε να πιάσουμε εκείνα τα γουρουνάκια!
    artist_intro:
      1:
        image: σημειώσεις/stage5_1.jpg
        text: Γεια σου, είμαι ο JR! Κάθε ομάδα αγωνιστικών αυτοκινήτων χρειάζεται
          επιστήμονες υπολογιστών για να κερδίσει. Αυτοί αναλύουν τα δεδομένα από
          το αυτοκίνητο για να το κάνουν να πάει πιο γρήγορα.
      2:
        image: σημειώσεις/stage5_2.jpg
        text: Σε αυτά τα παζλ, θα γίνεις ένας καλλιτέχνης που σχεδιάζει γραμμή πίσω
          του όπου πηγαίνει.
      3:
        image: σημειώσεις/stage5_3.jpg
        text: Αυτό το πλακίδιο λέει «προχώρησε προς τα εμπρός για 100 εικονοστοιχεία».
          Τα εικονοστοιχεία είναι μικροσκοπικές τελείες στην οθόνη σου.
      4:
        image: σημειώσεις/stage5_4.jpg
        text: Αυτό το πλακίδιο λέει «στρίψε δεξιά κατά 90 μοίρες.» Αυτό θα κάνει τον
          καλλιτέχνη σου να στρίψει όπως έκανε το πλακίδιο «στρίψε» στα παζλ του λαβύρινθου.
      5:
        image: σημειώσεις/stage5_5.jpg
        text: Κάνε κλικ στο βέλος σε ένα από αυτά τα πλακίδια για να αλλάξεις το πόσο
          προχωρεί ή στρίβει ο καλλιτέχνης. Παίξε λίγο για να εξοικειωθείς με αυτά
          τα νέα πλακίδια.
    farmer_intro:
      1:
        image: σημειώσεις/stage9_1.jpg
        text: Γεια σου, είμαι η Πάολα! Σε αυτά τα παζλ, είσαι μία γεωργός που πρέπει
          να κάνει τον αγρό της εντελώς επίπεδο για να αρχίσει να φυτεύει σπαρτά.
      2:
        image: σημειώσεις/stage9_2.jpg
        text: Θα πρέπει να τη βοηθήσεις να αφαιρέσει όλους τους σωρούς βρωμιάς και
          να καλύψει όλες τις τρύπες.
      3:
        image: σημειώσεις/stage9_3.jpg
        text: Τα νέα πλακίδια αφαιρούν 1 φτυαριά βρωμιάς από έναν σωρό και γεμίζουν
          μια τρύπα με 1 φτυαριά βρωμιάς.
      4:
        image: σημειώσεις/stage9_4.jpg
        text: Οι σωροί και οι τρύπες έχουν διαφορετικά μεγέθη, οπότε πρέπει να πεις
          στη γεωργό πόσες φτυαριές να χρησιμοποιήσει.
    flappy_intro:
      1:
        image: notes/flappy01.jpg
        text: Γεια σου, είμαι η Κάτια! Ένα από τα πιο συναρπαστικά πράγματα της επιστήμης
          των υπολογιστών είναι ότι τα προγράμματα υπολογιστών μπορεί να γίνουν διαδραστικά.
      2:
        image: notes/flappy02.jpg
        text: Κάθε φορά που κάποιος κάνει κλικ ή πληκτρολογεί η αγγίζει την οθόνη
          αφής ενός υπολογιστή ή τηλεφώνου, αυτή η πράξη παράγει ένα ΣΥΜΒΑΝ και υπάρχει
          συνήθως ένα κομμάτι κώδικα που αποφασίζει τι θα γίνει όταν πραγματοποιείται
          ένα ΣΥΜΒΑΝ.
      3:
        image: notes/flappy03.jpg
        text: 'Για παράδειγμα, μπορείς να έχετε έναν ΧΕΙΡΙΣΤΗ-ΣΥΜΒΑΝΤΩΝ που να λέει
          «όταν γίνει κλικ με το ποντίκι, παίξε έναν ήχο» '
      4:
        image: notes/flappy04.jpg
        text: Έχεις ποτέ ακούσει για το παιχνίδι FlappyBird; Χρησιμοποιώντας χειριστές
          Γεγονότων, θα μάθουμε πως να προγραμματίζουμε τη δική μας έκδοση του FlappyBird!
      5:
        image: notes/flappy05.jpg
        text: Ο κώδικας που θα γράψεις περιλαμβάνει μεταφορά και απόθεση πλακιδίων
          που αντιπροσωπεύουν εντολές για τον υπολογιστή. Στο παρασκήνιο, καθένα από
          αυτά τα πλακίδια αντιπροσωπεύεται από πραγματικό κώδικα.
      6:
        image: notes/flappy06.jpg
        text: 'Αν θες να ρίξεις μια ματιά στο χώρο εργασίας, υπάρχουν κάποια πράσινα
          πλακίδια που τα γεμίσαμε για σένα - αυτά είναι οι «χειριστές γεγονότων» '
      7:
        image: notes/flappy07.jpg
        text: Αν θέλεις να κάνεις το πουλί να ΦΤΕΡΟΥΓΙΣΕΙ όταν κάνεις ΚΛΙΚ με το ποντίκι,
          μπορείς να το κάνεις προσθέτοντας το πλακίδιο «ΦΤΕΡΟΥΓΙΣΜΑ» στον κατάλληλο
          χειριστή γεγονότων, και πλέον στο παιχνίδι σου όταν κάνεις κλικ με το ποντίκι,
          το πουλί θα φτερουγίσει.
      8:
        image: notes/flappy08.jpg
        text: Με κάθε παζλ σε αυτή την δραστηριότητα θα παρουσιάζουμε νέους τύπους
          γεγονότων με τη μορφή των πράσινων πλακιδίων στο χώρο εργασίας και μπορείς
          να αποφασίζεις για τα κατάλληλα πλακίδια που θα προσθέτεις ως απάντηση σε
          αυτά τα γεγονότα.
      9:
        image: notes/flappy09.jpg
        text: Όταν δεις ένα αναπτυσσόμενο σαν κι αυτό, αυτό σημαίνει ότι μπορείς να
          αλλάξεις τις ρυθμίσεις - όπως το ποιος ήχος να παιχτεί όταν ο φλάπι χτυπήσει
          στο έδαφος.
      10:
        image: notes/flappy10.jpg
        text: Στο τελικό παζλ θα μπορέσεις να δημιουργήσεις το δικό σου παιχνίδι και
          να το μοιραστείς με τους φίλους σου. Καλή διασκέδαση!
    loop_times:
      1:
        image: σημειώσεις/hoc2_1.jpg
        text: Γεια σου, είμαι ο Μάρκος! Ας μάθουμε για βρόχους. Χρησιμοποιώντας βρόχους
          μπορείς να πεις σε έναν υπολογιστή να επαναλάβει κάθε σύνολο ενεργειών ξανά
          και ξανά, χιλιάδες ή ακόμη και δισεκατομμύρια φορές.
      2:
        image: σημειώσεις/hoc2_2.jpg
        text: Σε αυτό το παζλ, θέλουμε να κάνουμε το πουλί να μετακινηθεί προς τα
          εμπρός 5 βήματα για να πιάσει το γουρούνι.
      3:
        image: σημειώσεις/hoc2_3.jpg
        text: Μπορούμε να χρησιμοποιήσουμε το νέο πλακίδιο «επανάληψης» για να μας
          βοηθήσει.
      4:
        image: σημειώσεις/hoc2_4.jpg
        text: Αντί να χρησιμοποιήσεις 5 πλακίδια "μετακίνηση προς τα εμπρός"...
      5:
        image: σημειώσεις/hoc2_5.jpg
        text: Μπορούμε να βάλουμε το πλακίδιο "μετακίνηση προς τα εμπρός" στο εσωτερικό
          του πλακιδίου "επανάληψη" και να γράψουμε έναν αριθμό στο πλακίδιο για να
          του πούμε πόσες φορές να το επαναλάβει.
      6:
        image: σημειώσεις/hoc2_6.jpg
        text: 'Και αυτό είναι σημαντικό: μπορείς να βάλεις περισσότερες από μία εντολές
          μέσα σε ένα πλακίδιο «επανάληψη».'
      7:
        image: σημειώσεις/hoc2_7.jpg
        text: Απόλαυσε το νέο σου πλακίδιο «επανάληψη»!
    loop_until:
      1:
        image: σημειώσεις/hoc3_1.jpg
        text: Γεια σου, είμαι ο Chris. Πριν πάω στους Miami Heat πήγα στο πανεπιστήμιο
          Georgia Tech να σπουδάσω Επιστήμη των Υπολογιστών. Ας δοκιμάσουμε ένα νέο
          πλακίδιο, τo «επανάλαβε μέχρι».
      2:
        image: σημειώσεις/hoc3_2.jpg
        text: Κι αν δεν ξέραμε πόσο μακριά πρέπει να πάει το πουλί για να φτάσει το
          γουρούνι;
      3:
        image: σημειώσεις/hoc3_3.jpg
        text: Αν βάλουμε ένα πλακίδιο «μετακίνηση προς τα εμπρός» στο εσωτερικό του
          πλακιδίου «επανάληψη μέχρι», το πουλί θα κινηθεί προς τα εμπρός, ΜΕΧΡΙ να
          φτάσει το γουρούνι (ή να πέσει πάνω σε έναν τοίχο).
      4:
        image: σημειώσεις/hoc3_4.jpg
        text: 'Είναι σημαντικό: όπως και πριν, μπορούμε να βάλουμε πολλά πλακίδια
          μέσα στο «επανάλαβε μέχρι» και όλα αυτά μαζί θα επαναληφθούν.'
    if:
      1:
        image: σημειώσεις/hoc4_1.jpg
        text: 'Γεια σου, είμαι ο Βασίλης! Ας μάθουμε μια νέα θεμελιώδη έννοια: τις
          εντολές  «εάν». Αυτός είναι ο τρόπος με τον οποίο οι υπολογιστές παίρνουν
          αποφάσεις.'
      2:
        image: σημειώσεις/hoc4_2.jpg
        text: 'Χρησιμοποιείς τις εντολές «εάν» καθημερινά στη ζωή σου. Κάθε πρωί,
          πριν βγεις για να πας στο σχολείο, σκέφτεσαι: αν βρέχει έξω, πρέπει να φορέσω
          το παλτό μου.'
      3:
        image: σημειώσεις/hoc4_3.jpg
        text: Μπορούμε να πούμε στο ζόμπι να ελέγξει ΕΑΝ υπάρχει μονοπάτι αριστερά,
          και αν πράγματι βρει μονοπάτι στα αριστερά, να τον κάνουμε να στρίψει προς
          αυτή την κατεύθυνση.
      4:
        image: σημειώσεις/hoc4_4.jpg
        text: Για να γράψεις τον κώδικα για αυτό, σύρε έξω το πλακίδιο «εάν» και βάλε
          ένα πλακίδιο «στρίψε αριστερά» μέσα του.
      5:
        image: σημειώσεις/hoc4_5.jpg
        text: Τώρα, εάν βάλουμε ένα πλακίδιο «προχώρησε εμπρός» πάνω από αυτό και
          ένα πλακίδιο «επανάλαβε» γύρω από όλα, κάθε φορά που κινείται το ζόμπι,
          θα ελέγχει εάν υπάρχει μονοπάτι στα αριστερά και θα στρίβει. Η εντολή «επανάλαβε»
          είναι κρίσιμη, για τον έλεγχο της στροφής σε κάθε βήμα.
      6:
        image: σημειώσεις/hoc4_6.jpg
        text: Οι εντολές «εάν» είναι πραγματικά σημαντικές στην επιστήμη των υπολογιστών.
          Ένα από τα πρώτα προγράμματα που έγραψα ήταν ένα παιχνίδι τρίλιζας και υπήρχε
          μια εντολή «εάν» που έλεγε ΕΑΝ ο αντίπαλος είναι ένα βήμα πριν κερδίσει,
          τότε μπλόκαρε το σημείο από το οποίο μπορεί να κερδίσει.
      7:
        image: σημειώσεις/hoc4_7.jpg
        text: Καλή διασκέδαση με το πλακίδιο «εάν»!
    if_else:
      1:
        image: σημειώσεις/hoc5_1.jpg
        text: Καλημέρα, λέγομαι Saloni. Χρησιμοποιώ την επιστήμη των υπολογιστών ηια
          να βοηθήσω να λύσουμε προβλήματα υγείας και ιατρικής. Ας μάθουμε για το
          μπλοκ "εάν - αλλιώς". Μοιάζει με το μπλοκ "εάν" αλλά έχει ένα επιπλέον κομμάτι
          που λέγεται "αλλιώς".
      2:
        image: σημειώσεις/hoc5_2.jpg
        text: Αν βάλω ένα μπλοκ "προχώρησε μπροστά" στο σημείο που λέει do (κάνε)
          και ένα μπλοκ "στρίψε αριστερά" εκεί που λέει "αλλιώς", αυτό σημαίνει ότι
          το ζόμπι έχει δύο επιλογές. ΑΝ υπάρχει μπροστά μονοπάτι τότε το ζόμπι θα
          προχωρήσει προς τα εμπρός, ΑΛΛΙΩΣ (αν δεν υπάρχει μονοπάτι) το ζόμπι θα
          στρίψει προς τα αριστερά.
      3:
        image: σημειώσεις/hoc5_3.jpg
        text: Ακριβώς όπως και με το μπλοκ "εαν", μπορούμε να βάλουμε τα μπλοκ "εάν
          - αλλιώς" μέσα σε μπλοκ επανάληψης ώστε το ζόμπι να συνεχίσει να κινείται
          και το μπλοκ "εάν - αλλιώς" να συνεχίσει να ελέγχει αν πρέπει κάπου να στρίψει.
      4:
        image: σημειώσεις/hoc5_4.jpg
        text: Ας πάμε λοιπόν τα ζόμπι εκεί που πρέπει!
    if_else_scrat:
      1:
        image: notes/saloni_ifelse_scrat1.jpg
        text: Μια πρόταση "εάν - αλλιώς" είναι μια απόφαση ανάμεσα σε δύο πράγματα.
          Ας δούμε πώς μπορούμε να χρησιμοποιήσουμε μια πρόταση "εάν - αλλιώς" με
          το φίλο μας το σκίουρο Σκρατ.
      2:
        image: notes/saloni_ifelse_scrat2.jpg
        text: Αυτό το μπλοκ μοιάζει με το μπλοκ "εάν" αλλά κάτω έχει ένα επιπλέον
          κομμάτι που λέει "αλλιώς". Αν βάλω ένα μπλοκ "προχώρησε μπροστά" στο σημείο
          που λέει do (κάνε) και ένα μπλοκ "στρίψε αριστερά" εκεί που λέει "αλλιώς",
          αυτό σημαίνει ότι ο σκίουρος Σκρατ έχει δύο επιλογές. ΑΝ υπάρχει μπροστά
          μονοπάτι τότε ο σκίουρος Σκρατ θα προχωρήσει προς τα εμπρός, ΑΛΛΙΩΣ (αν
          δεν υπάρχει μονοπάτι) θα στρίψει προς τα αριστερά.
      3:
        image: notes/saloni_ifelse_scrat3.jpg
        text: Είναι η λήψη μιας απόφασης και η εκτέλεση μίας από δύο ενέργειες βάσει
          αυτής της απόφασης. Όπως κάνουμε και με τα μπλοκ "εάν", μπορείτε να βάλετε
          μπλοκ "εάν - αλλιώς" μέσα στα μπλοκ επανάληψης.
      4:
        image: notes/saloni_ifelse_scrat4.jpg
        text: Ας βοηθήσουμε λοιπόν τον σκίουρο Σκρατ να πιάσει το βελανίδι!
    function:
      1:
        image: σημειώσεις/stage13_1.jpg
        text: Γεια σου, είμαι η Μπρίνα, μηχανικός στο Instagram. Μια συνάρτηση είναι
          ορισμένες γραμμές κώδικα που θέλετε να χρησιμοποιήσετε ξανά και ξανά, έτσι
          αντί να γράφετε αυτόν τον κώδικα κάθε φορά, μπορείτε απλά να χρησιμοποιήσετε
          ένα μπλοκ.
      2:
        image: σημειώσεις/stage13_2.jpg
        text: Πρόκειται να μάθουμε πώς να ορίζουμε συναρτήσεις. Οι ορισμοί των συναρτήσεων
          έχουν ένα αστέρι στη γωνία. Το όνομα της συνάρτησης γράφετε ψηλά στην πρώτη
          γραμμή.
      3:
        image: σημειώσεις/stage13_3.jpg
        text: Τα μπλοκ που πάνε μέσα στον ορισμό μας λένε τι κάνει. Έτσι το όνομα
          αυτής της συνάρτησης που ορίζουμε είναι «γέμισε 5» και αποτελείται από ένα
          μπλοκ "επανάλαβε" και ένα μπλοκ "γέμισε".
      4:
        image: σημειώσεις/stage13_4.jpg
        text: Ο ορισμός βρίσκεται στο χώρο εργασίας, αλλά ο γεωργός μας δε θα εκτελέσει
          τη συνάρτηση μέχρι να σύρουμε το πλακίδιο συνάρτησης «γέμισε 5» από την
          κατηγορία συναρτήσεων.
      5:
        image: notes/stage13_5.jpg
        text: 'Ας βάλουμε τη "διασκέδαση" πίσω στη "ΣΥΝάρτηση!" '
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: 'Γεια σου, είμαι ο Μακέντ! Ας μάθουμε για το "όσο μπλοκ." '
      2:
        image: notes/stage9_6.jpg
        text: Το μπλοκ "εφ' όσον" θα κάνει οτιδήποτε τοποθετήσετε μέσα του ΑΡΚΕΙ η
          δήλωση στην κορυφή είναι ΑΛΗΘΗΣ.
      3:
        image: notes/stage9_7.jpg
        text: Για παράδειγμα, εάν ο γεωργός στέκεται σε έναν σωρό, θα συνεχίζει να
          αφαιρεί 1 φτυαριά ΟΣΟ υπάρχει βρωμιά από κάτω του.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Γεια σου, είμαι η Τριν, και δουλεύω για την Pixar. Έχω εργαστεί για
          πολλές ταινίες, συμπεριλαμβανομένου του Σρεκ.
      2:
        image: notes/stage11_2.jpg
        text: Αυτός είναι ο νέος βρόχος "μετρητής". Θα εκτελεί ενέργειες ξανά και
          ξανά και μπορείτε να κάνετε τις ενέργειες αυτές να αλλάζουν ελαφρώς κάθε
          φορά.
      3:
        image: notes/stage11_3.jpg
        text: Σε αυτό το παράδειγμα, ο βρόχος "μετρητής" λέει "μέτρησε με μετρητή
          από 50 μέχρι 90 με βήμα 10" και μέσα σε αυτόν, έχουμε το μπλοκ "σχεδίασε
          ένα τετράγωνο". Σύρετε το μπλοκ "μετρητής" από την ενότητα "Μεταβλητές"
          στη θέση "μήκος".
      4:
        image: notes/stage11_4.jpg
        text: Αυτό σημαίνει ότι ο καλλιτέχνης πρόκειται να σχεδιάσει ένα τετράγωνο
          που έχει πλευρές μήκους 50 εικονοστοιχείων, μετά θα αυξήσει κατά 10 το μέγεθος
          και θα σχεδιάσει ένα τετράγωνο με μήκος πλευρών 60 εικονοστοιχεία. Έπειτα
          θα συνεχίσει να αυξάνει κατά 10 και να σχεδιάζει τετράγωνα μέχρι να φτάσει
          το 90. Έτσι θα έχουμε τετράγωνα των 50, 60, 70, 80 και 90.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Γεια σου, είμαι η Τζανέτ, και είμαι ένας μηχανικός στη Zynga.
      2:
        image: notes/stage15_2.jpg
        text: Και αν θέλουμε να σχεδιάσουμε πολλά τρίγωνα που οι πλευρές τους να έχουν
          διαφορετικά μεγέθη;
      3:
        image: notes/stage15_3.jpg
        text: Θα μπορούσαμε να γράψουμε όλο αυτό τον κώδικα με το χέρι ή μπορούμε
          να χρησιμοποιήσουμε μια συνάρτηση με παραμέτρους.
      4:
        image: notes/stage15_4.jpg
        text: Για να το κάνετε αυτό, κάντε κλικ στο μπλε αστέρι στον ορισμό της συνάρτησης
          «σχεδίασε ένα τρίγωνο». Στη συνέχεια, σύρετε το "εισάγετε όνομα" μέσα στο
          μπλοκ "εισαγωγή".
      5:
        image: σημειώσεις/stage15_5.jpg
        text: Στη συνέχεια, αν γράψετε "μήκος" στο σημείο όπου λέει "x" και πατήσετε
          "Enter" θα δημιουργήσετε ένα μήκος εισόδου για τη συνάρτησή σας.
      6:
        image: σημειώσεις/stage15_6.jpg
        text: Στη συνέχεια, κάντε κλικ πάνω στο αστέρι. Τώρα, θέλετε να κάνετε κλικ
          στην κατηγορία μεταβλητές και να σύρετε το μπλοκ "μήκος" μέσα στο μπλοκ
          "προχώρησε μπροστά" στον ορισμό της συνάρτησης. Και απομακρύνετε τον παλιό
          αριθμό μπλοκ.
      7:
        image: σημειώσεις/stage15_7.jpg
        text: Για να χρησιμοποιήσετε τη συνάρτησή σας με παραμέτρους, κάντε κλικ στην
          κατηγορία συναρτήσεων και σύρετε τη συνάρτηση με όνομα "σχεδίασε ένα τρίγωνο
          με μήκος".
      8:
        image: σημειώσεις/stage15_8.jpg
        text: Τώρα μπορείτε να χρησιμοποιήσετε το μπλοκ "μαθηματικά" για να εισάγετε
          διαφορετικούς αριθμούς ώστε να σχεδιάσετε τρίγωνα διαφόρων μεγεθών.
    hoc_wrapup:
      1:
        image: σημειώσεις/hoc6_1.jpg
        text: Συγχαρητήρια! Με το τελευταίο παζλ που λύσατε, γράψατε τον κώδικα που
          μπορεί να πει σε οποιοδήποτε robot πώς να βρει την έξοδο σε έναν λαβύρινθο
          που δεν έχει πολύπλοκους διαδρόμους ή σε μια σήραγγα οποιουδήποτε μήκους.
          Το ρομπότ σας μπορεί να είναι ένα ζόμπι, ένα πουλί, ένα όχημα που κινείται
          στον πλανήτη Άρη, ή ακόμη και ένα αυτο-οδηγούμενο (χωρίς οδηγό) αυτοκίνητο.
      2:
        image: σημειώσεις/hoc6_2.jpg
        text: Οι βασικές έννοιες που χρησιμοποίησες είναι η καρδιά κάθε προγράμματος
          ή εφαρμογής που μπορεί να συναντήσεις.  Μάθαμε για βρόχους επανάληψης, για
          εντολές "επανάλαβε μέχρι", για εντολές "εάν" και "εάν αλλιώς".
      3:
        image: σημειώσεις/hoc6_3.jpg
        text: Αν σου άρεσε η πρώτη σου ώρα στον προγραμματισμό, επισκέψου τον ιστότοπο
          code.org για να συνεχίσεις την εκπαίδευσή σου στην Πληροφορική! Μόλις ολοκληρώσεις
          την 20ώρη σειρά μαθημάτων μας, θα έχεις κατακτήσει τις βασικές γνώσεις του
          προγραμματισμού και θα μπορείς να αρχίσεις να μαθαίνεις πώς να γράψεις εφαρμογές
          για κινητά, οδηγίες για ρομπότ, παιχνίδια και ότι άλλο φανταστείς.
      4:
        image: σημειώσεις/hoc6_4.jpg
        text: |
          Η τεχνολογία αλλάζει όλα όσα κάνουμε και δεν έχει σημασία αν είσαι μικρός ή μεγάλος:
          ο προγραμματισμός είναι διασκεδαστικός, δημιουργικός και όλοι μπορούν να μάθουν!
    20_wrapup:
      1:
        image: notes/bird.png
        text: Προβολή σημειώσεων, προσεχώς!
    frozen_intro:
      1:
        image: notes/frozen1_1.jpg
        text: Γεια, είμαι η  Lyndsey. Είμαι μοντέλο, ηθοποιός και γράφω και δικές
          μου εφαρμογές. Ας χρησιμοποιήσουμε κώδικα για να συνεργαστούμε με την Άννα
          και την Έλσα καθώς εξερευνούν την ομορφιά και τη μαγεία του πάγου.
      2:
        image: notes/frozen1_2.jpg
        text: Θα φτιάξετε νιφάδες χιονιού και μοτίβα καθώς κάνετε πατινάζ και θα δημιουργήσετε
          μια μαγική Χριστουγεννιάτικη εικόνα την οποία μπορείτε να μοιραστείτε και
          με τους φίλους σας.
      3:
        image: notes/frozen1_3.jpg
        text: Για την επόμενη ώρα, θα μάθετε τα πρώτα βήματα του προγραμματισμού (κώδικα).
          Ο παραδοσιακός προγραμματισμός συνήθως γίνεται με κείμενο, αλλά εμείς θα
          χρησιμοποιήσουμε το Blockly, με οπτικά μπλοκ που μπορείτε να σύρετε και
          να αποθέσετε για να γράψετε προγράμματα. Ακόμα και οι φοιτητές στο πανεπιστήμιο,
          με αυτή τη μέθοδο μαθαίνουν τα βασικά. Κάτω από τα μπλοκ, δημιουργείτε κώδικα.
      4:
        image: notes/frozen1_4.jpg
        text: Ένα πρόγραμμα είναι ένα σύνολο εντολών που λέει στον υπολογιστή τι να
          κάνει. Ας φτιάξουμε έναν κώδικα, ή πρόγραμμα, που θα βοηθήσει την Έλσα να
          φτιάξει μια ευθεία γραμμή. Μετά θα το χρησιμοποιήσουμε για να φτιάξουμε
          πιο πολύπλοκα μοτίβα.
      5:
        image: notes/frozen1_5.jpg
        text: Η οθόνη σου είναι χωρισμένη σε τρία μέρη. Αριστερά είναι ο πάγος όπου
          θα τρέξει το πρόγραμμά σου. Οι οδηγίες για κάθε πίστα είναι γραμμένες ακριβώς
          από κάτω.
      6:
        image: notes/frozen1_6.jpg
        text: Στη μέση είναι η εργαλειοθήκη σου, όπου κάθε μπλοκ είναι μια ενέργεια
          που μπορεί να κάνει η Έλσα ή η Άννα.
      7:
        image: notes/frozen1_7.jpg
        text: Η άσπρη περιοχή δεξιά λέγεται περιοχή εργασίας και εκεί θα φτιάξουμε
          το πρόγραμμά μας. Για να μετακινηθείς στον πάγο πρέπει να χρησιμοποιήσεις
          το μπλοκ "προχώρησε μπροστά".
      8:
        image: notes/frozen1_8.jpg
        text: Εδώ το μπλοκ "Προχώρησε μπροστά" λέει "προχώρησε μπροστά κατά 100 pixel".
          Όταν πατάμε "Τρέξτε" τι γίνεται; Η Έλσα προχωρά μια απόσταση πάνω στον πάγο,
          συγκεκριμένα 100 pixel! Τα pixel είναι πολύ μικρά τετραγωνάκια στην οθόνη
          του υπολογιστή σου.
      9:
        image: notes/frozen1_9.jpg
        text: Το άλλο μπλοκ λέει "στρίψε δεξιά κατά 90 μοίρες". Όταν το χρησιμοποιούμε,
          η Έλσα στρίβει κατά μια συγκεκριμένη γωνία. Μπορείτε να παίξετε με το πόσο
          στρίβει η Έλσα. Ξεκινάμε να μετράμε τη γωνία από το μονοπάτι που είναι μπροστά
          από την Έλσα. Άρα αυτό είναι 90 μοίρες. Και αυτό είναι 120 μοίρες.
      10:
        image: notes/frozen1_10.jpg
        text: Θυμήσου ότι μπορείς να αλλάξεις τα pixel και τις μοίρες κάνοντας κλικ
          στα βελάκια δίπλα τους.
    frozen_loops:
      1:
        image: notes/frozen2_1.jpg
        text: Γεια, είμαι η Πάολα! Οι υπολογιστές μπορούν εύκολα να επαναλαμβάνουν
          ενέργειες. Εσείς μπορείτε να μετρήσετε ως το 10, το 20 ή το 100. Όμως ένας
          υπολογιστής μπορεί να μετρήσει ως το ένα δισεκατομμύριο - ή και τρισεκατομμύριο!
          Δεν πρόκειται να βαρεθεί και θα το κάνει μέσα σε λίγα μόνο δευτερόλεπτα.
          Είτε πρόκειται για μέτρημα, ή για ζωγραφική, ή για οτιδήποτε άλλο, οι υπολογιστές
          μπορούν να επαναλαμβάνουν ενέργειες εκατοντάδες - ή και δισεκατομμύρια -
          φορές.
      2:
        image: notes/frozen2_2.jpg
        text: Στον προγραμματισμό, αυτά λέγονται βρόχοι. Βρόχος είναι η συνεχής επανάληψη
          του κώδικά σου. Στην επόμενη πίστα, ο στόχος σου είναι να βοηθήσεις την
          Άννα να φτιάξει ένα τετράγωνο με το μπλοκ "Επανάλαβε".
      3:
        image: notes/frozen2_3.jpg
        text: Όσα μπλοκ κώδικα βάλεις μέσα στο μπλοκ "Επανάλαβε" θα επαναληφθούν διαδοχικά
          όσες φορές θέλεις.
      4:
        image: notes/frozen2_4.jpg
        text: Για να σχεδιάσεις ένα τετράγωνο, μπορείς να χρησιμοποιήσεις το μπλοκ
          "Προχώρησε μπροστά" και το μπλοκ "Στρίψε δεξιά" 4 φορές. Αλλά είναι ευκολότερο
          να πεις στον υπολογιστή "Προχώρησε μπροστά" και "Στρίψε δεξιά" μία φορά
          και μετά να του πεις να επαναλάβει αυτές τις δύο ενέργειες 4 φορές. Για
          να το κάνεις αυτό, πρέπει να βάλεις τα μπλοκ "Προχώρησε μπροστά" και "Στρίψε
          δεξιά" μέσα σε μπλοκ "Επανάλαβε".
      5:
        image: notes/frozen2_5.jpg
        text: Θυμήσου ότι μπορείς να αλλάζεις τον αριθμό στο μπλοκ "Επανάλαβε" όσο
          θέλεις, και οι ενέργειες μέσα στο μπλοκ αυτό θα επαναλαμβάνονται τόσες φορές
          όσες θέλεις.
    frozen_functions:
      1:
        image: notes/frozen3_1.jpg
        text: Γεια, είμαι ο Chris Bosh. Είμαι επαγγελματίας μπασκετμπολίστας και έγραφα
          κώδικα όταν ήμουν στο Πανεπιστήμιο.
      2:
        image: notes/frozen3_2.jpg
        text: Μία από τις σημαντικότερες έννοιες της επιστήμης των υπολογιστών είναι
          ο ορισμός νέων εντολών. Οι περισσότερες γλώσσες προγραμματισμού δεν έχουν
          πάνω από 100 λέξεις (εντολές). Η τέχνη και η μαγεία είναι να ορίζεις τις
          δικές σου λέξεις μέσα από αυτό το βασικό λεξιλόγιο.
      3:
        image: notes/frozen3_3.jpg
        text: Μόλις διδάξεις σε έναν υπολογιστή πώς να κάνει μια ενέργεια χρησιμοποιώντας
          αυτή την ακολουθία εντολών, μπορείς να δώσεις ένα δικό σου όνομα σε μια
          ενέργεια ώστε να μπορείς εύκολα να την επαναλάβεις μετά. Όταν ορίσεις μια
          δική σου εντολή και της δώσεις όνομα, είναι αυτό που λέμε συνάρτηση.
      4:
        image: notes/frozen3_4.jpg
        text: Γεια, λέγομαι Jess. Όταν προγραμματίζεις με μπλοκ, χρησιμοποιείς συναρτήσεις
          αν υπάρχει ένα σύνολο εντολών που θες να χρησιμοποιήσεις πολλές φορές. Για
          παράδειγμα, έχεις γράψει κώδικα που δημιουργεί ένα τετράγωνο.
      5:
        image: notes/frozen3_5.jpg
        text: Μπορείς λοιπόν να ορίσεις μια συνάρτηση που λέγεται "φτιάξε ένα τετράγωνο".
      6:
        image: notes/frozen3_6.jpg
        text: Τώρα έχεις ένα νέο μπλοκ το οποίο μπορείς να χρησιμοποιήσεις πολλές
          φορές για να φτιάξεις πολλά τετράγωνα.
      7:
        image: notes/frozen3_7.jpg
        text: Πολλά απλά σχήματα μπορούν να χρησιμοποιηθούν για τη δημιουργία πιο
          πολύπλοκων μοτίβων. Στην επόμενη δραστηριότητα, ο κώδικας που έγραψες για
          να φτιάξεις έναν κύκλο είναι διαθέσιμος ως νέα συνάρτηση που μπορεί να κάνει
          κύκλους διαφορετικού μεγέθους. Μπορείτε να τη χρησιμοποιήσετε για να βοηθήσετε
          την Έλσα να φτιάξει πολύπλοκα και όμορφα σχέδια στο χιόνι;
    C3_playlab_create_game:
      1:
        image: notes/playlab_1.png
        text: Μέχρι τώρα έφτιαχνες μια κινούμενη εικόνα ή μια ιστορία που έκανε το
          ίδιο πράγμα κάθε φορά. Τώρα μπορείς να φτιάξεις ένα διαδραστικό παιχνίδι
          που μπορείς κι εσύ να παίξεις!
      2:
        image: notes/playlab_2.png
        text: Υπάρχει το μπλοκ "όταν το βέλος" και το μπλοκ "μετακίνησε τον ηθοποιό".
          Μπορείς να συνδυάσεις αυτά τα μπλοκ για να μετακινείς τους ηθοποιούς με
          τα βελάκια.
      3:
        image: notes/playlab_3.png
        text: Υπάρχουν και κάποια μπλοκ που κάνουν κάτι όταν συγκρούονται οι ηθοποιοί
          ή όταν κάνουμε κλικ πάνω τους. Δείτε τα και καλή διασκέδαση!
    playlab_intro:
      1:
        image: notes/playlab_intro_1.png
        text: We're going to create games using Play Lab. Good games have a story,
          and every story has actors. We'll learn how to make our actors like witches,
          alinens, and animals speak, move, and interact with each other. By the end
          of this tutorial, you can build a game from scratch and share it with your
          friends.
      2:
        image: notes/playlab_intro_2.png
        text: Your screen is split into 3 main parts. On the left is the game space
          where your program will run. The instructions for each level are written
          below.
      3:
        image: notes/playlab_intro_3.png
        text: The middle area is the toolbox, and each of these blocks is a piece
          of code. The white space on the right is called the workspace and this is
          where we'll build our program.
      4:
        image: notes/playlab_intro_4.png
        text: To start off, you'll need to link your blocks to the orange "when run"
          block. You can link multiple blocks together by dragging them out until
          you see the yellow line, and then they'll snap together.
      5:
        image: notes/playlab_intro_5.png
        text: In this first puzzle, our actor is a penguin and we'll be making it
          say "Hello!" by dragging the say block out, linking it to the when run block,
          and typing in "Hello." We can also make the penguin move by using the move
          right and move left blocks. Once you have your blocks in place, hit the
          run button to see what you've programmed.
      6:
        image: notes/playlab_intro_6.png
        text: Get started and by the end, you'll be able to create your own game with
          all kinds of players that can interact, turn happy or sad, score points,
          or throw fireballs, or even vanish each other. It's all up to you and the
          game you want to make.
    playlab_events:
      1:
        image: notes/playlab_events_1.png
        text: Now, we're going to learn about something that all game programmers
          use everyday. They're called events. An event tells your program to listen
          for when something happens. When that thing happens, it performs an action.
      2:
        image: notes/playlab_events_2.png
        text: Some examples of events are listening for a mouse click, an arrow button,
          or a tap on the screen.
      3:
        image: notes/playlab_events_3.png
        text: Here, we're going to make the space bot greet the earthlings when a
          player clicks on him. We'll use the "when clicked" block and attach the
          "say" block to it. When the player clicks on the space bot, everything attached
          to this "when clicked" event block will be performed. What does your alien
          say?
      4:
        image: notes/playlab_events_4.png
        text: There are also "when arrow" blocks. If you link the "move" blocks to
          these, you can start to move your actors up, down, left, or right. Step
          by step, your game is getting more interactive.
    playlab_repeat_forever:
      1:
        image: notes/playlab_repeat_forever_1.png
        text: This is the "repeat forever" block. Anything inside this block will
          happen forever in the game.
      2:
        image: notes/playlab_repeat_forever_2.png
        text: If we want an actor to do something repeatedly, without the player having
          to do anything, we'll put those blocks inside the "repeat forever" block.
      3:
        image: notes/playlab_repeat_forever_3.png
        text: In this next puzzle, our goal is to help the wizard patrol the boundaries
          of the kingdom, left and right continuously. Learning how the repeat commands
          works, will save you a ton of time later when you build your own game.
