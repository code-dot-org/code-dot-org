---
ja-JP:
  data:
    dsls:
      2-3 Algorithms Multi 1:
        title: 複数の選択肢
        questions:
        - text: 与えられた画像のためのアルゴリズムを選びましょう
        answers:
        - text: 正方形から始めます<br/>正方形の上に三角形を置きます<br/>正方形の下に三角形を置きます
        - {}
        - text: 正方形から始めます<br/>正方形の上に平行四辺形を置きます<br/>三角形を平行四辺形の右に置きます
        - text: 正方形から始めます<br/>三角形を正方形の下に置きます<br/>平行四辺形を三角形の右に置きます
      2-3 Algorithms Multi 2:
        title: 複数の選択肢
        content1: 三角形から始めます<br/>正方形を三角形の下に置きます<br/>もう一つの三角形を正方形の下に置きます
        questions:
        - text: どの絵がこのアルゴリズムに従って<em>いない</em>でしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 Big Event Match 1:
        title: 一致
        content2: 一致するボタンの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 Binary Match 1:
        title: 一致
        content2: キーを使って一致する文字の組み合わせをえらびましょう。
        questions:
        - text: "<strong>N</strong>"
        - text: "<strong>O</strong>"
        - text: "<strong>P</strong>"
        - text: "<strong>Q</strong>"
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 Conditionals Multi 1:
        title: 複数の選択肢
        questions:
        - text: ゲームのルールによると、カードの組み合わせの点数が正しいのはどれでしょう？
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 Getting Loopy Multi 1:
        title: 複数の選択肢
        questions:
        - text: この流れをループを使って簡単にする方法はないでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 Graph Paper Match 1:
        title: 一致
        content1: 一致するマス目のプログラムの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
      2-3 Graph Paper Multi 1:
        title: 複数の選択肢
        questions:
        - text: この画像を描いたのはどのプログラムでしょうか？
        answers:
        - {}
        - {}
        - {}
      2-3 Maze Match 2:
        title: 迷路パズル
        content1: 一致するパズルのブロックの組み合わせをえらびましょう。
        pre_title: 'やり方:'
        questions:
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
      2-3 Maze Multi 2:
        title: めいろ選択問題（せんたくもんだい）
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 Relay Programming Multi 1:
        title: 複数の選択肢
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
      2-3 Relay Programming Multi 2:
        title: 複数の選択肢
        questions:
        - text: 正しい画像プログラムはどれですか？
        answers:
        - {}
        - {}
        - {}
      2-3 artist debug multi 1:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 artist functions multi 1:
        title: アーティスト ファンクション選択問題（せんたくもんだい）
        questions:
        - text: 与えられた関数を使ってこの画像を描くことができるように、正しいブロックをえらびましょう。
        answers:
        - {}
        - {}
        - {}
      2-3 artist loops match 1:
        content2: 一致する組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 artist loops multi 1:
        title: アーティストループ 選択問題（せんたくもんだい）
        questions:
        - text: このループではどんな形が描かれるでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 artist loops multi 2:
        title: アーティストループ 選択問題（せんたくもんだい）
        questions:
        - text: このプログラムで描いた図形はどれでしょう？
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 artist match 1:
        title: アーティストの一致
        content1: 一致する組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 bee conditionals multi 1:
        questions:
        - text: 下のどっちの比較がtrueになるでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 bee conditionals multi 3:
        questions:
        - text: 正しいブロックを選んでください。
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 bee loops multi 1:
        title: みつばちループ選択問題（せんたくもんだい）
        questions:
        - text: すべての花のミツを集めるブロックはどれでしょう？
        answers:
        - {}
        - {}
        - {}
        - {}
      2-3 maze match 1:
        title: 迷路はどれに一致するか
        content1: 一致するパズルのブロックの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
      2-3 maze multi 1:
        title: めいろ選択問題（せんたくもんだい）
        questions:
        - text: 正しいブロックの組み合わせはどれでしょう？
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 Algorithms Match 1:
        title: 一致
        content1: サイコロレースゲームの手順を一致させましょう。
        questions:
        - text: "<h4>1)</h4>"
        - text: "<h4>2)</h4>"
        - text: "<h4>3)</h4>"
        - text: "<h4>4)</h4>"
        answers:
        - text: "<h4>プレイヤー１の点数をゼロにします</h4>"
        - text: "<h4>プレイヤー１がサイコロを振ります</h4>"
        - text: "<h4>プレイヤー１の出た目を合計点数に加えます</h4>"
        - text: "<h4>プレイヤーの点数を比較して誰が勝ったか見てみましょう</h4>"
      4-5 Algorithms Multi 1:
        title: 複数の選択肢
        questions:
        - text: どのアイテムがアルゴリズムを記述するのが最も難しいですか?
        answers:
        - text: 歯を磨く
        - text: クッキーを焼く
        - text: 食料品リストから買い物をする
        - text: バナナ
      4-5 Computational Thinking Match 1:
        title: 一致
        content1: これらの車両を分解しました。分解した部品リストを一致させましょう。
        questions:
        - text: "<h3>車輪/片面: 2<br/>窓/片面: 0</h3>"
        - text: "<h3>車輪/片面: 2<br/>窓/片面: 1</h3>"
        - text: "<h3>車輪/片面: 2<br/>窓/片面: 6</h3>"
        - text: "<h3>車輪/片面: 3<br/>窓/片面: 2</h3>"
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 Computational Thinking Multi 1:
        title: 複数の選択肢
        questions:
        - text: シアトルは大きな町。<br/>ユージーンは中くらいの町<br/> ヒルビューは小さな町。
        answers:
        - text: シアトル _____ _____ _____。
        - text: _____ は、_____ 都市です。
        - text: _____は_____ _____。
        - text: Eugene は _____ 都市です。
      4-5 Crowdsourcing Multi 1:
        title: 複数の選択肢
        questions:
        - text: どの写真がクラウドソーシングを表していますか?
        answers:
        - {}
        - {}
      4-5 Crowdsourcing Multi 2:
        title: 複数の選択肢
        questions:
        - text: クラウドソーシングの実践に適した活動はどれだろうと思いますか？
        answers:
        - text: 部屋の掃除
        - text: デザートを食べる
        - text: 髪をとかす
        - text: 顔を洗う
      4-5 Digital Footprint Multi 1:
        title: 複数の選択肢
        questions:
        - text: インターネット上で公開や共有しても大丈夫なのは、次のうちどれでしょうか？
        answers:
        - text: あなたの誕生日
        - text: あなたの好きな食べ物
        - text: あなたの住所
        - text: 親のクレジットカード番号
      4-5 Internet Multi 1:
        title: 複数の選択肢
        questions:
        - text: Code.org にログオンする時、DNSはあなたを、どの IP アドレスに連れていくでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 Internet Multi 2:
        title: 複数の選択肢
        questions:
        - text: もしDNSがIPアドレス100.42.50.110のページを送信したすると、どのウェブサイトが該当しますか?
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 Songwriting Multi 1:
        title: 複数の選択肢
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 Suncatchers Match 1:
        title: 一致
        content1: SKILL表を使い、PROGRAMとできる単語を一致させましょう
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 Suncatchers Multi 1:
        title: 複数の選択肢
        questions:
        - text: プログラム 1 とまったく同じ順序 <em>では無い</em> のは、下のどのプログラムですか?
        answers:
        - {}
        - {}
        - {}
      4-5 artist loops multi 1:
        title: アーティストループ 選択問題（せんたくもんだい）
        questions:
        - text: どのくみあわせでこの絵がかけますか？
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 artist multi 1:
        title: アーティスト選択問題（せんたくもんだい）
        questions:
        - text: 一辺の長さが100の正方形を描くブロックはどれでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 artist multi 2:
        title: アーティスト選択問題（せんたくもんだい）
        questions:
        - text: 対称（たいしょう）な図形（ずけい）はどれですか？
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 bee conditionals multi 1:
        title: 正しいものを選ぼう
        questions:
        - text: 正しいブロックを選んでください。
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 bee debug multi 1:
        title: みつばちデバッグ選択問題（せんたくもんだい）
        questions:
        - text: どのバージョンの関数をつかえばよいでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 bee loops multi 1:
        title: みつばちループ選択問題（せんたくもんだい）
        questions:
        - text: どのコードが正（ただ）しいくみあわせですか？
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 maze conditionals multi 1:
        title: めいろ：条件文（じょうけんぶん）選択問題（せんたくもんだい）
        questions:
        - text: どのコードが正（ただ）しいですか？
        answers:
        - {}
        - {}
        - {}
        - {}
      4-5 maze match 1:
        title: 迷路パズル
        content1: 一致するパズルのブロックの組み合わせをえらびましょう。
        pre_title: 'やり方:'
        questions:
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
      4-5 maze multi 1:
        title: めいろ選択問題（せんたくもんだい）
        questions:
        - text: どのコードが正（ただ）しいですか？
        answers:
        - {}
        - {}
        - {}
        - {}
      Begin planning your project:
        title: タイトル
        content1: 説明
        markdown: "# 設計のプロセス\nソフトウエアの設計とは、たくさんの小さな問題を解決することです。最も大きな問題は、最初に何を作るか決めることです。\n\nこのプロセスはソフトウエアの設計だけでなく、あるゆることに使うことができます。\n\n<!--
          Translate the terms \"Define\", \"Prepare\", \"Try\", \"Reflect\" and change
          font size and positioning as needed-->\n<div style=\"position: relative;
          text-align: center; font-size: 1em\">\n  <img src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\"
          alt=\"Design Process\" style=\"width: 50%;\">\n  <div style=\"position:
          absolute; top: 24%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">定義</div> \n  <div style=\"position: absolute; top: 52%; left: 61%;
          transform: translateX(-61%); font-weight: bold;\">準備</div>\n  <div style=\"position:
          absolute; top: 79%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">実行</div>\n  <div style=\"position: absolute; top: 52%; left: 39%;
          transform: translateX(-39%); font-weight: bold;\">振り返り</div>\n</div>\n\n*
          **定義**\n  * どのようなプログラムを作りますか？\n  * 制約条件はありますか？\n  * 完成したら どんのように動きますか？\n*
          **準備**\n  * 意見を出しあう / どのようなことができるのか調べる\n  * いろいろ較べてみる\n  * 計画を作る\n* **実行**\n
          \ * 計画に従って実行する\n* **振り返り**\n  * 定義で決めた結果を得られたか？\n  * 何を学んだか、もっと良くするために何をすればいいか？\n
          \ * 新たな問題は見つかった？\n\n# コースの概要\nこれから、準備してあるゲームを利用してゲーム作りを体験します。つぎに、経験したことを活かしてオリジナルのゲームを作成して、作ったゲームをみんなの前で発表して、意見をもらいます。これはプログラムを作るうえで、とても重要なことです。
          これを経験することで よりよいプログラムを効率よく開発できるようになります。\n\nこのコースでは設計のプロセスについて、学びます。\n\n1.
          **定義と準備**\n   * 準備してあるゲームをプレイして、アイデアを考えたり、どのようなことができるかを理解します。\n   * 意見を出しあって、新しいプログラムを作る計画や準備されたプログラムを変更するする計画を立てます。\n1.
          **実行**\n   * 計画に従って、プログラムを作成します\n1. **振り返りと改善**\n   * ほかのグループが作ったプログラムを見て、自分たちのプログラムの改善ポイントを探します。\n1.
          **発表**\n   * できあがったプログラムをみんなの前で発表します！\n"
      Begin planning your project_2018:
        title: 計画を立てることから始める
        content1: 説明
        markdown: "# 設計のプロセス\nソフトウエアの設計とは、たくさんの小さな問題を解決することです。最も大きな問題は、最初に何を作るか決めることです。\n\nこのプロセスはソフトウエアの設計だけでなく、あるゆることに使うことができます。\n\n<!--
          Translate the terms \"Define\", \"Prepare\", \"Try\", \"Reflect\" and change
          font size and positioning as needed-->\n<div style=\"position: relative;
          text-align: center; font-size: 1em\">\n  <img src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\"
          alt=\"Design Process\" style=\"width: 50%;\">\n  <div style=\"position:
          absolute; top: 24%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">定義</div> \n  <div style=\"position: absolute; top: 52%; left: 61%;
          transform: translateX(-61%); font-weight: bold;\">準備</div>\n  <div style=\"position:
          absolute; top: 79%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">実行</div>\n  <div style=\"position: absolute; top: 52%; left: 39%;
          transform: translateX(-39%); font-weight: bold;\">振り返り</div>\n</div>\n\n*
          **定義**\n  * どのようなプログラムを作りますか？\n  * 制約条件はありますか？\n  * 完成したら どんのように動きますか？\n*
          **準備**\n  * 意見を出しあう / どのようなことができるのか調べる\n  * いろいろ較べてみる\n  * 計画を作る\n* **実行**\n
          \ * 計画に従って実行する\n* **振り返り**\n  * 定義で決めた結果を得られたか？\n  * 何を学んだか、もっと良くするために何をすればいいか？\n
          \ * 新たな問題は見つかった？\n\n# コースの概要\nこれから、準備してあるゲームを利用してゲーム作りを体験します。つぎに、経験したことを活かしてオリジナルのゲームを作成して、作ったゲームをみんなの前で発表して、意見をもらいます。これはプログラムを作るうえで、とても重要なことです。
          これを経験することで よりよいプログラムを効率よく開発できるようになります。\n\nこのコースでは設計のプロセスについて、学びます。\n\n1.
          **定義と準備**\n   * 準備してあるゲームをプレイして、アイデアを考えたり、どのようなことができるかを理解します。\n   * 意見を出しあって、新しいプログラムを作る計画や準備されたプログラムを変更するする計画を立てます。\n1.
          **実行**\n   * 計画に従って、プログラムを作成します\n1. **振り返りと改善**\n   * ほかのグループが作ったプログラムを見て、自分たちのプログラムの改善ポイントを探します。\n1.
          **発表**\n   * できあがったプログラムをみんなの前で発表します！\n"
      Begin planning your project_2018_2019:
        title: 計画を立てることから始める
        content1: 説明
        markdown: |+
          # プロジェクトのれい

          さいごのプロジェクトを始めます。始める前に、いくつか れいを 見てみましょう。

          | Hungry Squirrel | Alien Story |
          |---|---|
          | [![Hungry Squirrel (Play Lab)](https://images.code.org/3fda61d18026d6661dccf4b09baea111-image-1565115158327.PNG "Hungry Squirrel (Play Lab")](https://studio.code.org/projects/playlab/HN1zAX4Om6zdsxVsBBug9Y8mlzKSWUAXhjzRl-64YRs/view) | [![Alien Story (Play Lab)](https://images.code.org/0bd5ed3674ac9fe3304e27e68974c35f-image-1565115240833.PNG "Alien Story (Play Lab")](https://studio.code.org/projects/playlab/I_8rcKtpLFRAn8flROC15Oc-KnDu-bkKBnSORoIDs0o/view) |
          | 音を ついかしよう！ | 別のシーンをついかしよう！|

      BigEvent-Unplugged:
        markdown: |
          # ビッグ イベント

          コンピューター の せかいでは、イベントは、コンピューターを うごかすときに つかう めいれいの 1つです。このレッスンでは、おしたボタンで ちがう うごきを させられることを まなびます。
      BinaryBracelets-Unplugged:
        markdown: |
          # バイナリー形式

          コンピュータがわかる形式で あなたの名前を かいてみよう！

          ![](https://images.code.org/ed15a484276c0989e4adb5daf480f68a-image-1557870226222.png)
      BinaryImages-Unplugged:
        markdown: |
          # バイナリー イメージ

          ２つの数字（0 と 1）だけで もようをかく方法を 伝えましょう。
      CSD Header Size MC:
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD Header Size MC_2018:
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD Header Size MC_2018_2019:
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U2 Design Project:
        title: タイトル
        content1: 説明
      CSD U2 Design Project_2018:
        title: タイトル
        content1: 説明
      CSD U2 Design Project_2018_2019:
        title: タイトル
        content1: 説明
      CSD U2 L2 Overview:
        title: タイトル
        content1: 説明
      CSD U2 L3 Overview:
        title: タイトル
        content1: 説明
      CSD U2 L4 Overview:
        title: タイトル
        content1: 説明
      CSD U2 L5 Overview:
        title: タイトル
        content1: 説明
      CSD U2 L6 Overview:
        title: タイトル
        content1: 説明
      CSD U2 Lesson 6 Overview:
        content1: 説明
      CSD U2 expand project:
        title: タイトル
        content1: 説明
      CSD U2 expand project_2018:
        title: タイトル
        content1: 説明
      CSD U2 expand project_2018_2019:
        title: タイトル
        content1: 説明
      CSD U2 image debug match:
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U2 lists match:
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U2 lists match_2018:
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U2 lists match_2018_2019:
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U2 project guide:
        content1: 説明
      CSD U2 project guide_2018:
        content1: 説明
      CSD U2 project guide_2018_2019:
        content1: 説明
      CSD U3 - conditionals - Matching:
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U3 - conditionals - Matching_2018:
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U3 - conditionals - Matching_2018_2019:
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U3 Boolean MC:
        title: タイトル
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Boolean MC_2018:
        title: タイトル
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Boolean MC_2018_2019:
        title: タイトル
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Card Examples_2018:
        content1: 説明
      CSD U3 Card Examples_2018_2019:
        content1: 説明
      CSD U3 Functions Prediction define first:
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Functions Prediction define first_2018:
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Functions Prediction define first_2018_2019:
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Keypress Matching:
        questions:
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
      CSD U3 Keypress Matching_2018:
        questions:
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
      CSD U3 Keypress Matching_2018_2019:
        questions:
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
      CSD U3 Sprite Movement Predict Multi:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Sprite Movement Predict Multi_2018:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Sprite Movement Predict Multi_2018_2019:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Sprites intro predict multi:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Sprites intro predict multi_2018:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 Sprites intro predict multi_2018_2019:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 combining rep:
        title: タイトル
        content1: 説明
      CSD U3 combining rep_2018:
        title: タイトル
        content1: 説明
      CSD U3 combining rep_2018_2019:
        title: タイトル
        content1: 説明
      CSD U3 drawSprites placement match:
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 drawSprites placement match_2019:
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U3 game intro:
        content1: 説明
      CSD U3 game intro_2018:
        content1: 説明
      CSD U3 game intro_2018_2019:
        content1: 説明
      CSD U3 platform intro:
        content1: 説明
      CSD U3 platform intro_2018:
        content1: 説明
      CSD U3 platform intro_2018_2019:
        content1: 説明
      CSD U5 Encryption 1:
        title: タイトル
        content1: 説明
      CSD U5 Encryption 1_2018:
        title: タイトル
        content1: 説明
      CSD U5 Encryption 1_2018_2019:
        title: タイトル
        content1: 説明
      CSD U5 Encryption 2:
        content1: 説明
      CSD U5 Encryption 2_2018:
        content1: 説明
      CSD U5 Encryption 2_2018_2019:
        content1: 説明
      CSD U5 L13 SFLP Interpreting Data:
        title: タイトル
        content1: 説明
      CSD U5 crosstab warmup:
        content1: 説明
      CSD U5 crosstab warmup_2018:
        content1: 説明
      CSD U5 crosstab warmup_2018_2019:
        content1: 説明
      CSD U5 data visualization:
        title: タイトル
        content1: 説明
      CSD U5 data visualization_2018:
        title: タイトル
        content1: 説明
      CSD U5 data visualization_2018_2019:
        title: タイトル
        content1: 説明
      CSD U5 student record:
        title: タイトル
        content1: 説明
      CSD U5 student record_2018:
        title: タイトル
        content1: 説明
      CSD U5 student record_2018_2019:
        title: タイトル
        content1: 説明
      CSD U6 LED create intro:
        content1: 説明
      CSD U6 LED create intro_2018:
        content1: 説明
      CSD U6 LED create intro_2018_2019:
        content1: 説明
      CSD U6 array multi:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U6 array multi_2018:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U6 array multi_2018_2019:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U6 final intro:
        content1: 説明
      CSD U6 final intro_2018:
        content1: 説明
      CSD U6 final intro_2018_2019:
        content1: 説明
      CSD U6 setProperty predict multi:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      CSD U6 setProperty predict multi_2018:
        questions:
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      ConditionalsWithCards-Unplugged:
        markdown: |
          # 条件判定について

          トランプを使って、"もし 赤いカードなら、1ポイント ゲット" や "もし 黒いカードなら、1ポイント ゲット" といったルールを作ってみよう。
      Crowdsourcing-Unplugged:
        markdown: |
          # 助け合うこと

          助け合うこと とは、コンピュータ サイエンスの世界で 問題を解決しようとするとき、あなたが一人でがんばるよりも、クラスのみんなで協力したほうが、はやく解決できる ということを 意味します。
      DesigningForAccessibilityMarkdownLevel_2019:
        markdown: |
          # 使いやすさの設計

          * コンピュータ サイエンスの世界で、**使いやすさ** とは、障害を持った人でも使える技術のことです。
          * 障害には、肉体的、聴覚,、視覚など さまざまなものが あります。
          * 障害は多様で、**スマートフォンのアプリ**をどのように使うかなど、様々な面に影響を与えます。
          * 障害を持った人にも 使いやすいアプリを設計することで、すべての人とって 使いやすいものになります！

          ![](https://images.code.org/0c670d0d9078657a870df0ca799492cb-image-1557166420066.png)
      DigitalCitizenship-Unplugged:
        markdown: |
          # デジタル市民権

          ネットで公開すると危険な情報があります。このレッスンでは、公開しても安全な情報と個人情報について学びます。
      DigitalFootprint-Unplugged:
        markdown: |
          # インターネット上の 足あと

          インターネットで かきこみをすると 足あとが のこります。
      DigitalSharing-Unplugged:
        markdown: |
          # 共有

          とくに インタネットを世界で 所有権と著作権を尊重することの課題と利点について学びます。
      EnvelopeVariables-Unplugged:
        markdown: |
          # 変数

          変数を使えば様々なことができるようになります。このレッスンでは、変数とは何か、どのように使うのかを説明します。
      ForLoopFun-Unplugged:
        markdown: |
          # くり返し

          くり返しを使うことで、同じことを何回も実施することができます。これから、くり返しの使い方について、学んでいきます。
      GettingLoopy-Unplugged:
        markdown: |
          # くりかえし

          ダンスをれいに くりかえしについて まなびます。
      GoingPlacesSafely-unplugged:
        markdown: |
          # あんぜんな ばしょに 行こう

          インタネットは いろいろなことが できますが、きけんな ばしょでも あります。インタネットを あんぜんに つかいましょう！

          <p align=center>
      GraphPaperProgramming-Unplugged:
        markdown: |
          # グラフ用紙を使ったプログラミング

          友だちが同じもようをかけるように、アルゴリズム（もようのかき方）を書いてみよう。
      HappyLoops-Unplugged:
        markdown: |
          # ハッピー ループ

          このレッスンでは、くりかえし について まなびます！

          ![](https://images.code.org/6aac7f675f0c69033f42ccac6a733f68-image-1557769673400.png)
      HappyMaps-Unplugged:
        markdown: |
          # ハッピー マップ

          キャラをうごかして めいろを クリアする ほうほうを かんがえよう。
      Internet Simulator Setup:
        content1: 説明
      Internet Simulator Setup 2:
        title: タイトル
        content1: 説明
      Internet Simulator Setup 3:
        content1: 説明
      Internet-Unplugged:
        markdown: |
          # インターネット

          紙を使って、教室にインターネットを作ります。
      K-1 Artist 1 Multi 1:
        title: 複数の選択肢
        questions:
        - text: どのブロックが正（ただ）しいくみあわせですか？
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Artist 1 Multi 2:
        title: 複数の選択肢
        questions:
        - text: しかくをかくくみあわせはどれですか？
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Artist 2 Match 2:
        title: 一致
        content2: 種類別に形を一致させてください。
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Bee 1 Multi 1:
        title: 複数の選択肢
        questions:
        - text: 左（ひだり）にある花（はな）のみつの数（かず）はいくつでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Bee 1 Multi 2:
        title: 複数の選択肢
        questions:
        - text: 左（ひだり）にある花（はな）のみつの数（かず）はいくつでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Bee Loops Match 1:
        title: 一致
        content2: ブロックを一致させましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Big Event Match 1:
        title: 一致
        content2: 一致するボタンの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
      K-1 Digital Footprint Multi 1:
        title: 複数の選択肢
        questions:
        - text: どの動物が<strong> もっとも安全ではない </strong>デジタル足あとを、のこしますか？
        answers:
        - {}
        - {}
        - {}
      K-1 Getting Loopy Multi 1:
        title: 複数の選択肢
        questions:
        - text: この流れをループを使って簡単にする方法はないでしょうか？
        answers:
        - {}
        - {}
        - {}
      K-1 Happy Maps Multi 1:
        title: 複数の選択肢
        questions:
        - text: どの矢印を選べば、Flurbはお宝をゲットできますか？
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Keep it Private Multi 1:
        title: 複数の選択肢
        questions:
        - text: オンラインで<strong>共有すべきではない</strong>情報はどれでしょう？
        answers:
        - {}
        - {}
        - {}
      K-1 Maze Debugging Multi 1:
        title: 複数の選択肢
        questions:
        - text: どのブロックがさいごになればいいでしょうか？
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Maze Loops Multi 1:
        title: 複数の選択肢
        questions:
        - text: 正しいリピートブロックをえらびましょう。
        answers:
        - {}
        - {}
        - {}
      K-1 Maze Loops Multi 2:
        title: 複数の選択肢
        questions:
        - text: 正しいリピートブロックをえらびましょう。
        answers:
        - {}
        - {}
        - {}
      K-1 Maze Match 1:
        title: 一致
        content2: ブロックとパズルを一致させましょう。
        pre_title: 'やり方:'
        questions:
        - {}
        - {}
        - {}
        - {}
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Maze Multiple Choice 2:
        title: 迷路
        questions:
        - text: 答えはどれでしょう？
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Move It Multi 1:
        title: 複数の選択肢
        questions:
        - text: どのアルゴリズム（命令のセット）を選べば、Flurbは花をゲットできますか？
        answers:
        - {}
        - {}
        - {}
        - {}
      K-1 Plant a Seed Multi 1:
        title: 複数の選択肢
        questions:
        - text: このアルゴリズムの？を埋めましょう。
        answers:
        - {}
        - {}
        - {}
      K-1 Plant a Seed Multi 2:
        title: 複数の選択肢
        questions:
        - text: このアルゴリズムの？を埋めましょう。
        answers:
        - {}
        - {}
        - {}
      K-1 Word Search Multi 1:
        title: 複数の選択肢
        questions:
        - text: '"MOVE"のつづりはどれでしょう？'
        answers:
        - {}
        - {}
        - {}
      K-1 Word Search Multi 3:
        title: 複数の選択肢
        questions:
        - text: このつづりはどの単語でしょう？
        answers:
        - {}
        - {}
        - text: 南
      MoveItMoveIt-Unplugged:
        markdown: |
          # うごかせ、うごかせ

          ちずを みながら コマンドをつかって ゴールにすすみましょう。
      Multi-Screen Apps:
        title: タイトル
        content1: 説明
      MyLoopyRoboticFriends-Unplugged:
        markdown: |
          # ロボットに同じ動きをくり返させる

          くりかえしをつかえば、プログラムを 短くできます！
      MyRoboticFriends-Unplugged:
        markdown: |
          # ロボットの友だち

          ロボットのためにプログラムを書くことで、プログラムについて学びます。
      New Challenge Introduction:
        title: タイトル
        content1: 説明
      OPD-K5 Stage3aGo:
        title: タイトル
        content1: 説明
      PicturingData-Unplugged:
        markdown: |
          # データをあつめる

          プレイラボのプロジェクトを使って、データをあつめて、よそく しましょう。

          ![](https://images.code.org/606a78c09a01133a1bbc1aa9c76f3320-image-1557334268558.png)
      PowerOfWords-Unplugged:
        markdown: |
          # ことばの力

          ネットで だれかに 意地悪を されたときのことについて、学びます。
      PowerfulPasswords-Unplugged:
        markdown: |
          # 強力なパスワード

          なぜ、パスワードを使うのか調べて、パスワードをつかうメリットについて学びます。強力で安全なパスワードを作る方法と それを いじする方法について学びます。

          ![](https://images.code.org/9e082a5564a289bccc8e2dd79a2cae9f-image-1557869939256.png)
      Prepare for your presentation:
        title: タイトル
        content1: 説明
        markdown: |
          # 作品発表

          作品発表の時間です！先生が、どのように発表すればいいのか くわしく説明してくれます。
      Prepare for your presentation_2018:
        title: 発表の準備
        markdown: |
          # 作品発表

          作品発表の時間です！先生が、どのように発表すればいいのか くわしく説明してくれます。
      PrivatePersonalInformation-Unplugged:
        markdown: |
          # 個人情報の保護

          ネットで 公開してもいい情報 と 公開してはいけない情報 の 違い について、学びます。

          ![](https://images.code.org/872576b170b9d8aec9b29f684a1ad94e-image-1557878406833.png)
      RelayProgramming-Unplugged:
        markdown: |
          # リレー プログラミング
          チームに分かれて、みんなでもようをかくプログラムを作成します。
      ScreenOutTheMean-Unplugged:
        markdown: |
          # いじめられたとき

          ネットで だれかに いじめられたときのことについて、学びます。
      SimonSays-Unplugged:
        markdown: |
          # サイモンさんから

          ゲームをしたり、コマンドがどのように動作するか考えたりすることは、正しい答えをたどり着くのに必要なことです。
      Songwriting-Unplugged:
        markdown: |
          # 作曲

          歌のコーラスの例えに、関数の定義と使い方について学ぼう。
      'Technique: Frequency Analysis':
        content1: 説明
      Terminology Recap:
        content1: 説明
      TheRightAppMarkdownLevel_2019:
        markdown: |
          # 正しい アプリ

          * みんなが、コンピューターをつかいます。とくに、スマートフォンは。
          * スマートフォンのアプリで ともだちと はなしたり、おんがくを きいたり、かいものをしたり、ネットをしたりすることができます。
          * どのようなことをしたいのか、すべてのひとが つかいやすいのか かんがえることは、プログラマーにとって たいせつなことです！

          ![](https://images.code.org/fb17eeb9238d2f26c6ab40c9841517a7-image-1555611687284.png)
      behaviors 1 predict:
        questions:
        - text: '`mystery behavior`がどのように動くか、 "編集"ボタンを押して見てみよう。中を見て、どのように動くか 予測してみよう。'
        answers:
        - text: スプライトはクルクル回る
          feedback: ふせいかい
        - text: スプライトは小さくなる
          feedback: せいかい！
        - text: スプライトは動く
          feedback: ふせいかい
        - text: スプライトの色が変わる
          feedback: 不正解
      behaviors 4 predict:
        questions:
        - text: 予測してみよう！衛星は銀河まで、どのように進みますか？
        answers:
        - text: 西に行ってから、南に行く
          feedback: ふせいかい
        - text: ななめに進む
          feedback: せいかい！
        - text: ジグザグに行く
          feedback: '不正解 '
        - text: 南に行ってから、西に行く
          feedback: 不正解
      courseC_multi_artist_prog6_predict1:
        questions:
        - text: プログラムを実行（じっこう）したら、どんな図形が書けますか？
        answers:
        - text: 正三角形。
          feedback: ふせいかい。正方形でした。
        - text: まっすぐな線。
          feedback: ふせいかい。正方形でした。
        - text: 正方形。
          feedback: せいかい！
        - text: わかりません
          feedback: 正方形。
      courseC_multi_artist_prog6_predict1_2018:
        questions:
        - text: プログラムを実行（じっこう）したら、どんな図形が書けますか？
        answers:
        - text: 正三角形。
          feedback: ふせいかい。正方形でした。
        - text: まっすぐな線。
          feedback: ふせいかい。正方形でした。
        - text: 正方形
          feedback: せいかい！
        - text: わかりません
          feedback: 正方形。
      courseC_multi_artist_prog6_predict1_2018_2019:
        questions:
        - text: プログラムを実行（じっこう）したら、どんな図形が書けますか？
        answers:
        - text: 正三角形。
          feedback: ふせいかい。正方形でした。
        - text: まっすぐな線。
          feedback: ふせいかい。正方形でした。
        - text: 正方形
          feedback: せいかい！
        - text: わかりません
          feedback: 正方形。
      courseC_multi_harvester_loops11_predict1:
        questions:
        - text: プログラムを実行（じっこう）したら、いくつ カボチャを あつめることが できますか？
        answers:
        - feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - feedback: せいかい！
        - feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: わかりません
          feedback: ３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
      courseC_multi_harvester_loops11_predict1_2018:
        questions:
        - text: プログラムを実行（じっこう）したら、いくつ カボチャを あつめることが できますか？
        answers:
        - feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - feedback: せいかい！
        - feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: わかりません
          feedback: ３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
      courseC_multi_harvester_loops11_predict1_2018_2019:
        questions:
        - text: プログラムを実行（じっこう）したら、いくつ カボチャを あつめることが できますか？
        answers:
        - feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - feedback: せいかい！
        - feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: わかりません
          feedback: ３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
      courseC_multi_maze_debugging8_predict1:
        questions:
        - text: '下のプログラムをじっくり見て、どこがまちがっているのか考えてみよう。 '
        answers:
        - text: プログラムは まちがっていない。スクラットは、ドングリに たどりつける。
          feedback: ふせいかい。スクラットが さいごに まがる ほうこうが、まちがっています。
        - text: スクラットが さいごに まがる ほうこうが、まちがっています。
          feedback: せいかい！
        - text: スクラットは ドングリの 手前までしか いけません。
          feedback: ふせいかい。スクラットは、まちがった ほうこうに まがってしまいます。
        - text: わかりません
          feedback: 'まちがっているのは、スクラットがさいごに まがる ほうこうです。 '
      courseC_multi_maze_debugging8_predict1_2018:
        questions:
        - text: '下のプログラムをじっくり見て、どこがまちがっているのか考えてみよう。 '
        answers:
        - text: プログラムは まちがっていない。スクラットは、ドングリに たどりつける。
          feedback: ふせいかい。スクラットが さいごに まがる ほうこうが、まちがっています。
        - text: スクラットが さいごに まがる ほうこうが、まちがっています。
          feedback: せいかい！
        - text: スクラットは ドングリの 手前までしか いけません。
          feedback: ふせいかい。スクラットは、まちがった ほうこうに まがってしまいます。
        - text: わかりません
          feedback: 'まちがっているのは、スクラットがさいごに まがる ほうこうです。 '
      courseC_multi_maze_debugging8_predict1_2018_2019:
        questions:
        - text: '下のプログラムをじっくり見て、どこがまちがっているのか考えてみよう。 '
        answers:
        - text: プログラムは まちがっていない。スクラットは、ドングリに たどりつける。
          feedback: ふせいかい。スクラットが さいごに まがる ほうこうが、まちがっています。
        - text: スクラットが さいごに まがる ほうこうが、まちがっています。
          feedback: せいかい！
        - text: スクラットは ドングリの 手前までしか いけません。
          feedback: ふせいかい。スクラットは、まちがった ほうこうに まがってしまいます。
        - text: わかりません
          feedback: 'まちがっているのは、スクラットがさいごに まがる ほうこうです。 '
      courseC_multi_maze_programming8_predict1:
        questions:
        - text: "”実行（じっこう）”ボタンをおしたら どうなるか考えてみよう。"
        answers:
        - text: トリさんは ブタの一歩手前まで行くことができる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは ブタのところへ 行くことができる。
          feedback: せいかい！
        - text: トリさんは TNTにぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: わかりません
          feedback: このプログラムで トリさんは ブタのところに 行くことができます。
      courseC_multi_maze_programming8_predict1_2018:
        questions:
        - text: "”実行（じっこう）”ボタンをおしたら どうなるか考えてみよう。"
        answers:
        - text: トリさんは ブタの一歩手前まで行くことができる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは ブタのところへ 行くことができる。
          feedback: せいかい！
        - text: トリさんは TNTにぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: わかりません
          feedback: このプログラムで トリさんは ブタのところに 行くことができます。
      courseC_multi_maze_programming8_predict1_2018_2019:
        questions:
        - text: "”実行（じっこう）”ボタンをおしたら どうなるか考えてみよう。"
        answers:
        - text: トリさんは ブタの一歩手前まで行くことができる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは ブタのところへ 行くことができる。
          feedback: せいかい！
        - text: トリさんは TNTにぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: わかりません
          feedback: このプログラムで トリさんは ブタのところに 行くことができます。
      courseC_multi_starWars_predict1:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: BB-8は、じっとしている。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: １つ前にすすむ。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: ５回前にすすんで、すべてのスクラップをあつめる。
          feedback: せいかい！
        - text: わかりません
          feedback: くりかえしブロックにより、BB-8は５回前にすすみます。
      courseC_multi_starWars_predict1_2018:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: BB-8は、じっとしている。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: １つ前にすすむ。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: ５回前にすすんで、すべてのスクラップをあつめる。
          feedback: せいかい！
        - text: わかりません
          feedback: くりかえしブロックにより、BB-8は５回前にすすみます。
      courseC_multi_starWars_predict1_2018_2019:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: BB-8は、じっとしている。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: １つ前にすすむ。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: ５回前にすすんで、すべてのスクラップをあつめる。
          feedback: せいかい！
        - text: わかりません
          feedback: くりかえしブロックにより、BB-8は５回前にすすみます。
      courseC_multi_starWars_predict2:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: さいしょの くりかえしで 行きすぎてしまう。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: さいしょの くりかえしの かずが たりなくて、スクラップを ぜんぶ あつめられない。
          feedback: せいかい！
        - text: BB-8は、すべてのスクラップを あつめることが できる。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: わかりません
          feedback: さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
      courseC_multi_starWars_predict2_2018:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: さいしょの くりかえしで 行きすぎてしまう。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: さいしょの くりかえしの かずが たりなくて、スクラップを ぜんぶ あつめられない。
          feedback: せいかい！
        - text: BB-8は、すべてのスクラップを あつめることが できる。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: わかりません
          feedback: さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
      courseC_multi_starWars_predict2_2018_2019:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: さいしょの くりかえしで 行きすぎてしまう。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: さいしょの くりかえしの かずが たりなくて、スクラップを ぜんぶ あつめられない。
          feedback: せいかい！
        - text: BB-8は、すべてのスクラップを あつめることが できる。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: わかりません
          feedback: さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
      courseD_external_binary1:
        title: ０か1で もようを かいてみよう
      courseD_external_binary1_2018:
        title: ０か1で もようを かいてみよう
      courseD_external_binary1_2018_2019:
        title: ０か1で もようを かいてみよう
      courseD_multi_artist_binary8_predict1:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どのパターンが かかれるかな？'
        answers:
        - text: A
          feedback: ふせいかい
        - text: B
          feedback: ふせいかい
        - text: C
          feedback: ふせいかい
        - text: D
          feedback: せいかい！
      courseD_multi_artist_binary8_predict1_2018:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どのパターンが かかれるかな？'
        answers:
        - text: A
          feedback: ふせいかい
        - text: B
          feedback: ふせいかい
        - text: C
          feedback: ふせいかい
        - text: D
          feedback: せいかい！
      courseD_multi_artist_binary8_predict1_2018_2019:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どのパターンが かかれるかな？'
        answers:
        - text: A
          feedback: ふせいかい
        - text: B
          feedback: ふせいかい
        - text: C
          feedback: ふせいかい
        - text: D
          feedback: せいかい！
      courseD_multi_artist_nestedLoops9_predict1:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どの図形がかけますか？"
        answers:
        - text: A
          feedback: せいかい！
        - text: B
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: C
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: わかりません
          feedback: 五角形を かく くりかえしを ４回 くりかえして 一周しています。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

      courseD_multi_artist_nestedLoops9_predict1_2018:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どの図形がかけますか？"
        answers:
        - text: A
          feedback: せいかい！
        - text: B
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: C
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: わかりません
          feedback: 五角形を かく くりかえしを ４回 くりかえして 一周しています。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

      courseD_multi_artist_nestedLoops9_predict1_2018_2019:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どの図形がかけますか？"
        answers:
        - text: A
          feedback: せいかい！
        - text: B
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: C
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: わかりません
          feedback: 五角形を かく くりかえしを ４回 くりかえして 一周しています。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

      courseD_multi_bee_conditionals1_predict1:
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
      courseD_multi_bee_conditionals1_predict1_2018:
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
      courseD_multi_bee_conditionals1_predict1_2018_2019:
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
      courseD_multi_bee_conditionals7_predict2:
        questions:
        - text: このプログラムを動かしたら、どうなるかな？ちゅうい：くもにかくれているのは、花が_一つ_ か、ハチの巣が_一つ_だよ。
        answers:
        - text: ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: わかりません
          feedback: "`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。"
      courseD_multi_bee_conditionals7_predict2_2018:
        questions:
        - text: このプログラムを動かしたら、どうなるかな？ちゅうい：くもにかくれているのは、花が_一つ_ か、ハチの巣が_一つ_だよ。
        answers:
        - text: ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: わかりません
          feedback: "`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。"
      courseD_multi_bee_conditionals7_predict2_2018_2019:
        questions:
        - text: '"実行（じっこう）" をクリックしたら、どうなりますか？ただし、くもの下にかくれているのは、ハチの巣が*1つ* か 花が *1つ*
            です。'
        answers:
        - text: ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: わかりません
          feedback: "`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。"
      courseD_multi_bee_nestedLoops2_predict1:
        questions:
        - text: '"実行（じっこう）"をクリックしたら どうなりますか？プログラムは くりかえしが 入れ子に なっているよ。'
        answers:
        - text: ハチは、１回だけ 前に 進んで ミツを ゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは ミツを ２つゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは すべてのミツを ゲットする。
          feedback: せいかい！
        - text: わかりません
          feedback: ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
      courseD_multi_bee_nestedLoops2_predict1_2018:
        questions:
        - text: '"実行（じっこう）"をクリックしたら どうなりますか？プログラムは くりかえしが 入れ子に なっているよ。'
        answers:
        - text: ハチは、１回だけ 前に 進んで ミツを ゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは ミツを ２つゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは すべてのミツを ゲットする。
          feedback: せいかい！
        - text: わかりません
          feedback: ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
      courseD_multi_bee_nestedLoops2_predict1_2018_2019:
        questions:
        - text: '"実行（じっこう）"をクリックしたら どうなりますか？プログラムは くりかえしが 入れ子に なっているよ。'
        answers:
        - text: ハチは、１回だけ 前に 進んで ミツを ゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは ミツを ２つゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは すべてのミツを ゲットする。
          feedback: せいかい！
        - text: わかりません
          feedback: ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
      courseD_multi_bee_nestedLoops9_predict2:
        questions:
        - text: '"実行（じっこう）"をクリックしたら ハチは いくつミツを 集めることが できますか？'
        answers:
        - feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - feedback: せいかい！
        - feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: わかりません
          feedback: ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回 くりかえすので、８つ
            ミツを 集めることができます。
      courseD_multi_bee_nestedLoops9_predict2_2018:
        questions:
        - text: '"実行（じっこう）"をクリックしたら ハチは いくつミツを 集めることが できますか？'
        answers:
        - feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - feedback: せいかい！
        - feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: わかりません
          feedback: ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回 くりかえすので、８つ
            ミツを 集めることができます。
      courseD_multi_bee_nestedLoops9_predict2_2018_2019:
        questions:
        - text: '"実行（じっこう）"をクリックしたら ハチは いくつミツを 集めることが できますか？'
        answers:
        - feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - feedback: せいかい！
        - feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: わかりません
          feedback: ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回 くりかえすので、８つ
            ミツを 集めることができます。
      courseD_multi_collector_debugging10_predict1:
        questions:
        - text: '"実行（じっこう）"ボタンをクリックしても、たからものを 全部 集めることができないのは どうして？答えをよくみて、回答してね。'
        answers:
        - text: 曲がる方向がまちがえているから。
          feedback: ふせいかい、まちがっているのは、そこだけじゃないよ。くりかえしの回数も足りないよ。
        - text: 'たからものを全部集めるには、くりかえしの回数が足りないから。 '
          feedback: ふせいかい、まちがっているのは、そこだけじゃないよ。曲がる方向もまちがえてるよ。
        - text: 曲がる方向*と*くりかえしの回数が まちがっているから。
          feedback: せいかい！
        - text: わかりません
          feedback: 曲がる方向*と*くりかえしの回数が まちがっているから。
      courseD_multi_farmer_condLoops9_predict1:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: 全部の作物をしゅうかくできる。
          feedback: ふせいかい、カボチャを しゅうかくする めいれいは ありません。
        - text: さくもつを ひとつも しゅうかく できない。
          feedback: ふせいかい、かいだんじょうに進んで、そこにあるトウモロコシやレタスを しゅかく しますが、カボチャだけは しゅうかく しません。
        - text: カボチャ以外のものは、しゅうかくできる。
          feedback: せいかい！
        - text: わかりません
          feedback: かいだんじょうに進んで、そこにあるトウモロコシやレタスを しゅかく しますが、カボチャだけは しゅうかく しません。
        markdown: |
          葉っぱは、トウモロコシとレタスになります。
          <br/>
      courseD_multi_farmer_condLoops9_predict1_2018:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: 全部の作物をしゅうかくできる。
          feedback: ふせいかい、カボチャをとる命令はありません。
        - text: 通った道にある作物を ひとつも 収かくしません。
          feedback: ふせいかい、農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしていません。
        - text: カボチャ以外の作物は、全部収かくする。
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしていません。
        markdown: |
          葉っぱは、トウモロコシとレタスになります。
          <br/>
      courseD_multi_farmer_condLoops9_predict1_2018_2019:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: 全部の作物をしゅうかくできる。
          feedback: ふせいかい、カボチャをとる命令はありません。
        - text: 通った道にある作物を ひとつも 収かくしません。
          feedback: ふせいかい、農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしていません。
        - text: カボチャ以外の作物は、全部収かくする。
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしていません。
        markdown: |
          葉っぱは、トウモロコシとレタスになります。
          <br/>
      courseD_multi_farmer_ramp13:
        questions:
        - {}
        answers:
        - text: 農夫は道を歩いて行って、カボチャをしゅうかくします。
          feedback: ふせいかい、`ピック カボチャ`がくりかえしの中にあるで、農夫は、さいごに カボチャを しゅうかくするのではなく、前に進むごとに
            カボチャを しゅうかくします。
        - text: 農夫は前に進むごとにカボチャをしゅうかくするが、カボチャをゲットすることはできない。
          feedback: せいかい！
        - text: 農夫や４回前に進んで、カボチャをゲットする。
          feedback: ふせいかい、`ピック カボチャ`がくりかえしの中にあるで、農夫は、さいごに カボチャを しゅうかくするのではなく、前に進むごとに
            カボチャを しゅうかくします。
        - text: わかりません
          feedback: "`ピック カボチャ`がくりかえしの中にあるで、農夫は、さいごに カボチャを しゅうかくするのではなく、前に進むごとに カボチャを
            しゅうかくします。"
        markdown: |+
          見たことのあるブロックで書かれたプログラムがあります。このプログラムを実行したら、どうなるかわかりますか？


      courseD_multi_farmer_while10_predict2:
        questions:
        - text: このプログラムを動かしたら、どうなるかな？
        answers:
        - text: 山もあなもなくなって、まっ平になる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        - text: 山が、平らになる。
          feedback: せいかい！
        - text: あなが なくなる。
          feedback: ふせいかい、`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。
        - text: わかりません
          feedback: "`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。"
      courseD_multi_farmer_while10_predict2_2018:
        questions:
        - text: このプログラムを動かしたら、どうなるかな？
        answers:
        - text: 山もあなもなくなって、まっ平になる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        - text: 山が、平らになる。
          feedback: せいかい！
        - text: あなが なくなる。
          feedback: ふせいかい、`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。
        - text: わかりません
          feedback: "`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。"
      courseD_multi_farmer_while10_predict2_2018_2019:
        questions:
        - text: このプログラムを動かしたら、どうなるかな？
        answers:
        - text: 山もあなもなくなって、まっ平になる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        - text: 山が、平らになる。
          feedback: せいかい！
        - text: あなが なくなる。
          feedback: ふせいかい、`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。
        - text: わかりません
          feedback: "`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。"
      courseD_multi_farmer_while4_predict1:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫はずっと土を かたづけ つづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫は山がなくなるまで、土をかたづけつづける。
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は山がなくなるまで、土をかたづけつづけます。
      courseD_multi_farmer_while4_predict1_2018:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫はずっと土を かたづけ つづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫は山がなくなるまで、土をかたづけつづける。
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は山がなくなるまで、土をかたづけつづけます。
      courseD_multi_farmer_while4_predict1_2018_2019:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫はずっと土を かたづけ つづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫は山がなくなるまで、土をかたづけつづける。
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は山がなくなるまで、土をかたづけつづけます。
      courseD_multi_maze_until10_predict2:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: ゾンビは すぐに 右に曲がって、動けなくなる。
          feedback: せいかい！
        - text: ゾンビは、ひまわりに たどり着ける。
          feedback: ふせいかい、まっすぐ 行けるかどうか 調べるより *前に* 右に道があるか 調べるので、まちがった方向に行ってしまいます。
        - text: ゾンビは、右に曲がったら、その一角を回りつづける。
          feedback: ふせいかい、ゾンビは、まっすぐか 右に曲がる しかできません。左に曲がれないので、すぐに動けなくなってしまいます。
        - text: わかりません
          feedback: まっすぐ 行けるかどうか 調べるより *前に* 右に道があるか 調べるので、まちがった方向に行ってしまいます。
      courseD_multi_maze_until10_predict2_2018:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: ゾンビは行ったり来たりをくり返す。
          feedback: せいかい！
        - text: ゾンビは、ひまわりに たどり着ける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返す。
        - text: ゾンビは、右に曲がったら、その一角を回りつづける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返す。
        - text: わかりません
          feedback: このプログラムでは、ゾンビは行ったり来たりをくり返します。
      courseD_multi_maze_until10_predict2_2018_2019:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: ゾンビは行ったり来たりをくり返す。
          feedback: せいかい！
        - text: ゾンビは、ひまわりに たどり着ける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返す。
        - text: ゾンビは、右に曲がったら、その一角を回りつづける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返す。
        - text: わかりません
          feedback: このプログラムでは、ゾンビは行ったり来たりをくり返します。
      courseD_multi_maze_until2_predict1:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: トリさんは、まったく動かない。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんは ブタのところへ 行くことができる。
          feedback: せいかい！
        - text: 道をまっすぐ進んで、TNTに ぶつかる。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: わかりません
          feedback: 道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
      courseD_multi_maze_until2_predict1_2018:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: トリさんは、まったく動かない。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんは ブタのところへ 行くことができる。
          feedback: せいかい！
        - text: 道をまっすぐ進んで、TNTに ぶつかる。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: わかりません
          feedback: 道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
      courseD_multi_maze_until2_predict1_2018_2019:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: トリさんは、まったく動かない。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんは ブタのところへ 行くことができる。
          feedback: せいかい！
        - text: 道をまっすぐ進んで、TNTに ぶつかる。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: わかりません
          feedback: 道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
      courseD_multi_scrat_predict1:
        questions:
        - text: "”実行（じっこう）”ボタンを押したら、どうなりますか？"
        answers:
        - text: スクラットは、まったく動かない。
          feedback: 不正解、 'くりかえし' の中に'前に すすむ'が入っているので、スクラットは前に3回進みます。
        - text: スクラットは前に3回進んで、曲がって、また、前に3回進んでドングリをゲットする！
          feedback: せいかい！
        - text: スクラットは前に進んで、曲がって、海に落ちてしまう。
          feedback: 不正解、 'くりかえし' の中に'前に すすむ'が入っているので、スクラットは前に3回進みます。
        - text: わかりません
          feedback: "'くりかえし'の中に '前に すすむ'があるので、スクラットは3回前に進みます。曲がって、さらに前に3回進んでドングリをゲットします。"
      courseE_multi_bee_functions_predict1:
        questions:
        - text: さっきのパズルと まったく同じプログラムがあります。今回は つくるハチミツの量が ちがっています。"実行（じっこう）"をクリックしたら
            どうなるかな？
        answers:
        - text: 同じプログラムで このパズルも クリアできるよ。
          feedback: 正解、作るハチミツの量が変わっても だいじょうぶ。関数は量が変わっても うまくいくように 作られています。
        - text: ハチミツを全部作ることはできない。
          feedback: 不正解、関数は 0になるまで ハチミツを作るように 作られています。
        - text: ハチミツをたくさん作ろうとする。
          feedback: 不正解、関数は 0になるまで ハチミツを作るように 作られています。
        - text: わかりません
          feedback: このプログラムでパズルをクリアできます。プログラムは 0になるまで ハチミツを作るように 作られています。
      courseE_multi_farmer_functions11_predict:
        questions:
        - text: 農夫は何をしゅうかくするかな？
        answers:
        - text: カボチャを２つしゅうかくする。
          feedback: 不正解、農夫はトウモロコシをしゅうかくした後、関数 "調べて しゅうかくする"を呼ばない。
        - text: カボチャを全部しゅうかくする。
          feedback: 不正解、農夫はトウモロコシをしゅうかくした後、関数 "調べて しゅうかくする"を呼ばない。
        - text: レタスをしゅうかくする。
          feedback: 不正解、農夫は1回曲がって、トウモロコシのとこまで行って終わります。
        - text: トウモロコシをしゅうかくする。
          feedback: せいかい！
      courseE_multi_farmer_functions11_predict_2018:
        questions:
        - text: 農夫は何をしゅうかくするかな？
        answers:
        - text: カボチャを２つしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: カボチャを全部しゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: レタスをしゅうかくする。
          feedback: せいかい！
        - text: トウモロコシをしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
      courseE_multi_farmer_functions11_predict_2018_2019:
        questions:
        - text: 農夫は何をしゅうかくするかな？
        answers:
        - text: カボチャを２つしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: カボチャを全部しゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: レタスをしゅうかくする。
          feedback: せいかい！
        - text: トウモロコシをしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
      courseE_prediction_artistFunction1:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
      courseE_prediction_artistFunction1_2018:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
      courseE_prediction_artistFunction1_2018_2019:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
      courseE_project_exemplars_2019:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # プロジェクトの例

          最後のプロジェクトをはじめます。始める前に、他のプロジェクトを見てみましょう。

          ## スプライト ラボ

          | モンスター ダンス (スプライト ラボ) | カップケーキ ゲーム (スプライト ラボ) |
          |---|---|
          | [![Monster Dance (Sprite Lab)](https://images.code.org/85838ca11b728dce3e1513515c4510e3-image-1556826303297.png "Monster Dance (Sprite Lab")](https://studio.code.org/projects/spritelab/S2l_b6LHSmSULTBF7CibJm1rTsngztJyu5pgORe7GBs/view) | [![Cupcake Game (Sprite Lab)](https://images.code.org/c90080aaf05349fb6e1fbb6861e815df-image-1556809855136.png "Cupcake Game (Sprite Lab")](https://studio.code.org/projects/spritelab/gXM_YU_qL_QWo1o5Wkam96oiFrYY5VUp27m2xKlp7EQ/view) |
          | ゲームに文字やスコアを追加しよう！ | ゲームに文字やスコアを追加しよう！ |

          ## アーティスト

          | パターン (アーティスト) | 花もよう (アーティスト) |
          |---|---|
          | [![Pattern (Artist)](https://images.code.org/2432878706891dda080b69428ddc4a20-image-1556822714214.png "Pattern (Artist)")](https://studio.code.org/projects/artist/TznMeJRa4SnHWJvUBEoNUw/view) | [![Function Flowers (Artist)](https://images.code.org/1e6da38baf996dace44581572895a4b8-image-1556822184973.png "Function Flowers (Artist)")](https://studio.code.org/projects/artist/4uGqFaTnc7V9B6IqCqj21Q/view) |
          | かり返しの入れ子を使ってみよう！ | 関数を使ってみよう！ |

      courseF_bee_variables_8a_2018:
        title: ハチと変数
        questions:
        - text: 終点まで行ったとき、ハチは いくつ ミツを 集めますか？
        answers:
        - text: 0、変数"花のミツをとる"を使っていないから。
          feedback: 不正解、変数の名前はプログラムの動きに関係ありません。
        - text: 2つ
          feedback: せいかい！
        - text: 全部
          feedback: 不正解、最後に関数を2回呼ぶ前に、変数を0にしています。
        - text: わかりません
          feedback: 関数を1回呼べば変数は1増えますが、最後に関数を2回呼ぶ前に、変数を0にしています。なので、ハチはミツを2つ集めます。
      courseF_bee_variables_8a_2018_2019:
        title: ハチと変数
        questions:
        - text: 終点まで行ったとき、ハチは いくつ ミツを 集めますか？
        answers:
        - text: 0、変数"花のミツをとる"を使っていないから。
          feedback: 不正解、変数の名前はプログラムの動きに関係ありません。
        - text: 2つ
          feedback: せいかい！
        - text: 全部
          feedback: 不正解、最後に関数を2回呼ぶ前に、変数を0にしています。
        - text: わかりません
          feedback: 関数を1回呼べば変数は1増えますが、最後に関数を2回呼ぶ前に、変数を0にしています。なので、ハチはミツを2つ集めます。
      courseF_external_variableConstant:
        markdown: |+
          <h2>変数について</h2>

          <img src="https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png" style="padding-left: 30px; width:300px; float:right;"/>
          <h3>決まった値を入れておくための変数の学習は順調に進んでいます！
          決まった値を入れておくために変数を使うのであれば、値を入れるのは1回です。変数を使えば、"実行"して値を変えたくなった時、1か所変えるだけでプログラムの中で**同じ**値を使うことができます。</h3>
          <br/><hr/>
          <h3>次のパートでは、プログラムの中で値が*変わる*変数をプログラムしてみましょう。</h3>

      courseF_external_variableConstant_2018:
        markdown: "<h2>変数について</h2>\n\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\"
          style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>決まった値を入れておくための変数の学習は順調に進んでいます！
          \n決まった値を入れておくために変数を使うのであれば、値を入れるのは1回です。変数を使えば、\"実行\"して値を変えたくなった時、1か所変えるだけでプログラムの中で**同じ**値を使うことができます。</h3>\n<br/><hr/>\n<h3>次のパートでは、プログラムの中で値が*変わる*変数をプログラムしてみましょう。</h3>\n\n"
      courseF_external_variableConstant_2018_2019:
        markdown: "<h2>変数について</h2>\n\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\"
          style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>決まった値を入れておくための変数の学習は順調に進んでいます！
          \n決まった値を入れておくために変数を使うのであれば、値を入れるのは1回です。変数を使えば、\"実行\"して値を変えたくなった時、1か所変えるだけでプログラムの中で**同じ**値を使うことができます。</h3>\n<br/><hr/>\n<h3>次のパートでは、プログラムの中で値が*変わる*変数をプログラムしてみましょう。</h3>\n\n"
      courseF_markdown_algorithms_end:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: "# **\"アルゴリズム\"について 学びましょう！**  \n\n\n\n### **アルゴリズムは、目的を達成するために必要な仕事を書いたリストです**。アルゴリズムのおもしろいところは、1つ1つ仕事を実行したら、どうなるのか考えなければならないところです。\n\n###
          コンピュータ用のアルゴリズムを書くことが、**プログラミング**です。  \n\n---\n\n## **用語**\n\n* ### **アルゴリズム**
          -目的を達成するために必要な仕事を書いたリスト\n\n* ### **プログラミング** - コンピュータで実行できる言語で書かれたアルゴリズム\n"
      courseF_markdown_algorithms_intro:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |
          # **レッスンの内容**

          ### だれかにしてほしいことを くわしく説明して たのんだことはある？たのんだ人は、ちゃんと聞いてくれた？

          ### 今日は、コンピュータに 何を してほしいか 1つ1つ たのみましょう。そうすれば、ちゃんと 言うことを 聞いてくれます。

          ---

          ## **使うブロック**

          ![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)

          ![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)

          ![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)
      courseF_markdown_conditionals_end:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: "# **\"条件文\"について 学びましょう！**\n\n### 条件文は、コンピュータの世界では とてもよく使います。ウエブサイトにログインしようとパスワードを入力するときを思い出して。
          ウエブサイトでは条件文を使って、入力されたパスワードが*あっているかどうか*チェックします。\n\n### `もし` パスワードがあっていれば、ログイン！
          \n\n### `そうでなければ`、エラーメッセージを出す。\n\n---\n\n## **用語**\n\n* ### **条件** - 命令を実行するかどうか決めるためのもの\n\n*
          ### **条件文** - ある条件のときだけ、実行されるもの\n\n"
      courseF_markdown_conditionals_intro:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### **条件** とは、真または偽になる事がらです。

          ### プログラムで`～の間`、 `～まで` や `もし`を使って、条件を判定してプログラムの動きを変える方法を学びます。
          ---

          ## **使うブロック**

          ![](https://images.code.org/8c6cc9ffa31c916fc970c67382d83b8d-image-1524770260439.png)

          ![](https://images.code.org/c2fbbaf80b348d47ba2dac4497ae2624-image-1524770272898.png)

          ![](https://images.code.org/6b90e2dfb025609f8762014ff0ba51dc-image-1524770241058.png)


      courseF_markdown_debugging_end:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |
          # **"デバッグ"について勉強しよう！**

          ### **バグとは、まちがいにつながるものです。** バグは、プログラムの間違いです。間違いを見つけて修正することを、**デバッグする** と言います。

          ### バグを見つけて修正するには、**しんぼう強く**やることが必要です、べつの言葉でいうと あきらめるな です。

          ---

          ## **用語**

          * ### **バグ** - プログラムの正しく動かないところ

          * ### **デバッグ** - プログラムやアルゴリズムの問題を見つけて、修正すること

          * ### **しんぼう強く** - あきらめないこと
      courseF_markdown_debugging_intro:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |
          #レッスンの内容

          ### バグって聞いたことある？

          ### ほとんどの人は虫を思い出して、気持ち悪いと思ったり、ムズムズしたりするよね。コンピュータの世界では、バグは生き物の虫のことではありませんが、あまりうれしくないものです。

          ### すでにいくつかのパズルをクリアしてきました！ プログラムは、すぐには、ちゃんと動くように見えなかったよね。そのとき、バグが かくれていなかった？

          ---

          ## 使うブロック

          ![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)

          ![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)

          ![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)
      courseF_markdown_forloops_end:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # **"まつ"について、学習します！**

          ### **”まつ”は、始めと終わりと、変分を指定するくり返しです。**

          ### 新しい種類の`くりかえし` は、始めの値と終わりの値と一回くり返したときに変更する値lでコントロールすることができます。

          ### コントロールすることで、より早くパズルをクリアできるようになります。

          ---

          ## **用語**

          ### **まつ ループ** - ”まつ”は、あらかじめ決めた始めの値、終わりの値、インクリメント（値を変更する間隔）をもつループです。

      courseF_markdown_forloops_end_2019:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # **"まつ"について、学習します！**

          ### **”まつ”は、始めと終わりと、変分を指定するくり返しです。**

          ### 新しい種類の`くりかえし` は、始めの値と終わりの値と一回くり返したときに変更する値lでコントロールすることができます。

          ### コントロールすることで、より早くパズルをクリアできるようになります。

          ---

          ## **用語**

          ### **まつ ループ** - ”まつ”は、あらかじめ決めた始めの値、終わりの値、インクリメント（値を変更する間隔）をもつループです。

      courseF_markdown_forloops_intro:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### 新しい種類の`くり返し`について学びます。これから使うブロックです。

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ### *まつ*のくり返しを使うと、このようなパズルを かんたんに クリアすることが できます！

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_forloops_intro_2019:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### 新しい種類の`くり返し`について学びます。これから使うブロックです。

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ### *まつ*のくり返しを使うと、このようなパズルを かんたんに クリアすることが できます！

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_loops_end:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: "# **\"ループ\"について 学びましょう！**  \n\n### **ループとは、何回も何回も あることを 行うことです。**
          別の言葉で、もう一度行うことをくり返しといいます。\n\n### ループは、あるパターンをくり返すのにとても便利です。はじめに ループを 使わずにプログラムを書いてみて、それから、パターンを見つけます。\n\n###
          パターンが見つかったら、それを`くりかえし`ブロックの中に入れます！\n\n---\n\n## **用語**\n\n* ### **ループ**
          - あることを何回も何回も行うこと\n\n* ### **くり返し** - もう一度行うこと\n"
      courseF_markdown_loops_intro:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: "# レッスンの内容...\n\n### 前に進むの**5**回実施するときを考えてみて。前にすすむのブロックを**5**回 ドラックして持ってくるだけだから
          かんたん だよね。でも**5,000**回の時は、どうかな？ \n\n### **5,000** ブロック、ドラックして持ってくるのに何時間かかる？\n\n###
          もっと かんたんな方法を 知りたくない？ここに あるよ!\n\n---\n\n## 使うブロック\n\n![](https://images.code.org/2d949be303e653f4ea203cc00f0b06c3-image-1524697677509.png)\n"
      courseF_markdown_nestedloops_end:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # **"ループの入れ子"について 学びましょう！**

          ### **入れ子のループとは、ループの中にあるループことです。** ループが中に入っている外側のループとその中に入っている入れ子にされたループを考えてみて。

          ### 入れ子のループは、パターンの中にあるパターンをくり返すときに役立ちます。使いこなすことができれば、とても強力です！

          ---

          ## **用語**

          ### __入れ子のループ__ - ループの中にあるループ

      courseF_markdown_nestedloops_intro:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |
          # レッスンの内容...

          ### *ループの中に*ループを入れたらどうなるか考えたことがある？

          ### 今度はそれをやってみましょう！

          ### ループは あるパターンを くり返すのが得意ですが、 ループの中にループを使うのはどんなとき？考えてみよう！
          ---

          ## **使うブロック**

          ![](https://images.code.org/cecea12a6973648b56512ff0990da6fb-image-1524759116715.gif)
      courseF_markdown_variables_end:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: "# **\"変数\"について、学習しました！**\n\n### 変数を使うには、名前と値が必要です。名前は後から変えることはできませんが、値はいつでも変えることができます。プログラムで値を入れておくための箱にして、変数の名前を使うことができます！
          \n\n---\n\n## **用語**\n\n### **変数** - 変更可能な情報を入れておくための箱\n\n"
      courseF_markdown_variables_end_2019:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: "# **\"変数\"について、学習しました！**\n\n### 変数を使うには、名前と値が必要です。名前は後から変えることはできませんが、値はいつでも変えることができます。プログラムで値を入れておくための箱にして、変数の名前を使うことができます！
          \n\n---\n\n## **用語**\n\n### **変数** - 変更可能な情報を入れておくための箱\n\n"
      courseF_markdown_variables_intro:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### *変数* とは、情報を入れておくための箱で中身を変えることができます。箱の中にプログラムで情報を入れておけば、いちいち値を覚えておく必要はありません！


          ---

          ## **使うブロック**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_markdown_variables_intro_2019:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### *変数* とは、情報を入れておくための箱で中身を変えることができます。箱の中にプログラムで情報を入れておけば、いちいち値を覚えておく必要はありません！


          ---

          ## **使うブロック**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_multi_artist_for10_predict1:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: アーティストは だんだん太くなっていく 真っすぐな 線を かく。
          feedback: 不正解、 `まつ`のくり返しのなかで 曲がっています。
        - text: 'だんだん長くて細くなっていく うずまき模様を かく '
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        - text: だんだん長くて 太くなっていく うずまき模様を かく 。
          feedback: せいかい！
        - text: わかりません
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        markdown: |+
          `まつ`のcounterは、線の幅に使われています。


      courseF_multi_artist_for10_predict1_2018:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: アーティストは だんだん太くなっていく 真っすぐな 線を かく。
          feedback: 不正解、 `まつ`のくり返しのなかで 曲がっています。
        - text: 'だんだん長くて細くなっていく うずまき模様を かく '
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        - text: だんだん長くて 太くなっていく うずまき模様を かく 。
          feedback: せいかい！
        - text: わかりません
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        markdown: |+
          `まつ`のcounterは、線の幅に使われています。


      courseF_multi_artist_for10_predict1_2018_2019:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: アーティストは だんだん太くなっていく 真っすぐな 線を かく。
          feedback: 不正解、 `まつ`のくり返しのなかで 曲がっています。
        - text: 'だんだん長くて細くなっていく うずまき模様を かく '
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        - text: だんだん長くて 太くなっていく うずまき模様を かく 。
          feedback: せいかい！
        - text: わかりません
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        markdown: |+
          `まつ`のcounterは、線の幅に使われています。


      courseF_multi_artist_fwp2_predict1:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: アーティストは同じ関数を使って、ちがう大きさの正方形を2つかく。
          feedback: せいかい！
        - text: アーティストは別々の関数を使って、ちがう大きさの正方形を2つかく。
          feedback: 不正解、パラメータを変えることで 1つの関数で ちがう大きさの正方形をかいています。
        - text: アーティストは別々の関数を使って、同じ大きさの正方形を2つかく。
          feedback: 不正解、パラメータを変えることで 1つの関数で ちがう大きさの正方形をかいています。
        - text: わかりません
          feedback: パラメータを変えることで 1つの関数で ちがう大きさの正方形を2つ かいています。
        markdown: |+
          関数 '正方形をかく'にパラメータが追加されました。 "編集" をクリックして、関数の中身を見てみよう。


      courseF_multi_artist_variables3a_predict1:
        questions:
        - text: 変数 "length"に50をセットしました。"実行（じっこう）"をクリックしたら どうなるかな？
        answers:
        - text: 一辺が50ピクセルの三角形をかく。
          feedback: せいかい！
        - text: 一辺が3ピクセルの50角形をかく。
          feedback: 不正解、変数`length`は、`くりかえし`の回数ではありません。
        - text: 50度曲がった線を3本かく
          feedback: 不正解、変数`length`は、`まがる`角度ではありません。
        - text: わかりません
          feedback: "`動く 前に`の前で 変数`length`に50をセットしているので、アーティストは 一辺が 50ピクセルの三角形をかきます。"
      courseF_multi_artist_variables3a_predict1_2018:
        questions:
        - text: 変数 "length"に50をセットしました。"実行（じっこう）"をクリックしたら どうなるかな？
        answers:
        - text: 一辺が50ピクセルの三角形をかく。
          feedback: せいかい！
        - text: 一辺が3ピクセルの50角形をかく。
          feedback: 不正解、変数`length`は、`くりかえし`の回数ではありません。
        - text: 50度曲がった線を3本かく
          feedback: 不正解、変数`length`は、`まがる`角度ではありません。
        - text: わかりません
          feedback: "`動く 前に`の前で 変数`length`に50をセットしているので、アーティストは 一辺が 50ピクセルの三角形をかきます。"
      courseF_multi_artist_variables3a_predict1_2018_2019:
        questions:
        - text: 変数 "length"に50をセットしました。"実行（じっこう）"をクリックしたら どうなるかな？
        answers:
        - text: 一辺が50ピクセルの三角形をかく。
          feedback: せいかい！
        - text: 一辺が3ピクセルの50角形をかく。
          feedback: 不正解、変数`length`は、`くりかえし`の回数ではありません。
        - text: 50度曲がった線を3本かく
          feedback: 不正解、変数`length`は、`まがる`角度ではありません。
        - text: わかりません
          feedback: "`動く 前に`の前で 変数`length`に50をセットしているので、アーティストは 一辺が 50ピクセルの三角形をかきます。"
      courseF_multi_bee_conditionals1_predict1:
        questions:
        - text: 花がなければハチは何もしません。プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        markdown: 'くもで下に何があるか見えません。くもの下には、花があるかもしれません。花があれば、**一度だけ**ミツを集めましょう。

'
      courseF_multi_bee_conditionals7_predict2:
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
        answers:
        - text: ハチは花からミツは集めるが、ハチミツは作らない。
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: 不正解、`もし 花で` で、ハチは花からミツを集め、花でなかったら（ハチの巣だったら）ハチミツを作ります。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: 不正解、`もし 花で` で、ハチは花からミツを集め、ハチの巣でハチミツを作ります。
        - text: わかりません
          feedback: "`もし 花で` で、ハチは花からミツを集め、ハチの巣でハチミツを作ります。"
        markdown: 'くもの下には花があることもあるし、ハチの巣があることもあります！ どちらであっても、くもの下にあるのは、花が**1つ**か、ハチの巣が**1つ**です。

'
      courseF_multi_bee_for3_predict1:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: 'ハチはすべての花からミツを集めることができる。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 1つの花を除いて、ハチはすべての花からミツを集めることができる。
          feedback: せいかい！
        - text: 'ハチはすべての花からミツを1つづつ集める。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 'ハチは花にあるよりも たくさんのミツを 集めようとする。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        markdown: |+
          うーん！  このパズルは、`まつ` を使えば かんたんにクリアすることができる！


      courseF_multi_bee_for3_predict1_2018:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: 'ハチはすべての花からミツを集めることができる。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 1つの花を除いて、ハチはすべての花からミツを集めることができる。
          feedback: せいかい！
        - text: 'ハチはすべての花からミツを1つづつ集める。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 'わかりません '
          feedback: "`回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。"
        markdown: |+
          うーん！  このパズルは、`まつ` を使えば かんたんにクリアすることができる！


      courseF_multi_bee_for3_predict1_2018_2019:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: 'ハチはすべての花からミツを集めることができる。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 1つの花を除いて、ハチはすべての花からミツを集めることができる。
          feedback: せいかい！
        - text: 'ハチはすべての花からミツを1つづつ集める。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 'わかりません '
          feedback: "`回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。"
        markdown: |+
          うーん！  このパズルは、`まつ` を使えば かんたんにクリアすることができる！


      courseF_multi_bee_fwp9_predict1:
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
        answers:
        - text: ハチは、ミツもハチミツも集めない。
          feedback: 不正解、関数はパラメータにセットした数だけ、ミツかハチミツを集めます。
        - text: 'ハチは階段状に動いて、最初に3つ、次に2つのミツかハチミツを集める。 '
          feedback: 不正解、関数はパラメータにセットした数だけ、ミツかハチミツを集めます。
        - text: '1回のくり返しでミツかハチミツを1つ集める。 '
          feedback: 不正解、関数はパラメータにセットした数だけ、ミツかハチミツを集めます。
        - text: わかりません
          feedback: クリックして関数の中を見れば、パラメータにセットされた数だけ、ミツかハチミツを集めているのがわかります。
        markdown: |+
          くもの下には、花が1つか、ハチの巣が1つあります。下の質問に答える前に、関数ブロックの”編集”をクリックして、中を見てみよう。


      courseF_multi_playlab_variables4c_predictive1:
        questions:
        - text: 質問に "Ali"と答えたら どうなりますか？
        answers:
        - text: かいぞくは、"Pleasure to meet you, Ali." と言う。
          feedback: '正解 '
        - text: かいぞくは"Pleasure to meet you." と言う。
          feedback: 不正解、 `つなげる`を使えば、かいぞくのことばと質問の答えをつなげることができます。
        - text: かいぞくは、"Ali"と言う。
          feedback: 不正解、 `つなげる`を使えば、かいぞくのことばと質問の答えをつなげることができます。
        - text: わかりません
          feedback: '不正解、`つなげる`を使えば、かいぞくのことばに質問の答え（Ali）をつなげることができます。 '
        markdown: |
          **このパズルでは、新たなブロック`しつもん` を使います。**

          `しつもん` ブロックはプログラムを停止させて、答えを入れるためのウインドを開きます。

          入力した答えは、`しつもん`の後ろに指定した変数にセットされます。今回は、変数`name`にセットされます。
      courseF_project_exemplars_2019:
        title: Test Markdown Textbook Page
        content1: Test Markdown Textbook Page
        markdown: |+
          # プロジェクトの例

          最後のプロジェクトを始めます。始める前に、プロジェクトの例を見てみましょう。

          ## Sprite Lab

          | Cupcake Game (Sprite Lab) | Helicopter Game (Sprite Lab) |
          |---|---|
          | [![#Bunny Game (Sprite Lab)](https://images.code.org/c90080aaf05349fb6e1fbb6861e815df-image-1556809855136.png)](https://studio.code.org/projects/spritelab/gXM_YU_qL_QWo1o5Wkam96oiFrYY5VUp27m2xKlp7EQ/view) | [![#Helicopter Game (Sprite Lab)](https://images.code.org/1a273fd447b952367792423a70c5087a-image-1556812149075.png)](https://studio.code.org/projects/spritelab/QeROTy1pNyjNPC-ZZdBN1mcpkmTEMUc2FYwXX0SOFAY/view) |
          | ゲームに言葉やスコアを追加してみましょう！ | ゲームに言葉やスコアを追加してみましょう！ |

          ## Artist

          | Flowers (Artist) | Spiral (Arist) |
          |---|---|
          | [![Flowers (Artist)](https://images.code.org/0f5adf63c318eab8c8acb397d9db7f2a-image-1556821537577.png)](https://studio.code.org/projects/artist/MIMh2pV2IiLm1ZzaiA6N7kKvg534lFck3abLXTsvZU8/view) | [![Spiral (Artist)](https://images.code.org/06514571a8cf2f8b0346006ac1adc219-image-1556819399386.png)](https://studio.code.org/projects/artist/66scPDPWa8RNNHkcXDaXdA/view) |
          | 変数を使って創作してみましょう！ | くり返しを使って創作してみましょう！|

      coursee_prediction_artistfunction2:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
        answers:
        - text: アーティストは、ちゃんと絵をかいて、パズルをクリアする。
          feedback: 不正解、くり返しの中で呼ばれているのは、関数"多角形の列をかく"ではなく 関数"多角形をかく" です。
        - text: アーティストは４つの正方形でできた まど をかく。
          feedback: せいかい！
        - text: アーティストは、一番上の列だけかく。
          feedback: 不正解、プログラムの中で関数"多角形の列をかく"を呼んでいません。
        - text: アーティストは、枠のなかに４つ四角形をかく。
          feedback: 不正解、くり返しのなかで関数"多角形をかく"を呼んだら90度曲がっています。
      coursee_prediction_artistfunction2_2018:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
        answers:
        - text: アーティストは、ちゃんと絵をかいて、パズルをクリアする。
          feedback: 不正解、くり返しの中で呼ばれているのは、関数"多角形の列をかく"ではなく 関数"多角形をかく" です。
        - text: アーティストは４つの正方形でできた まど をかく。
          feedback: せいかい！
        - text: アーティストは、一番上の列だけかく。
          feedback: 不正解、プログラムの中で関数"多角形の列をかく"を呼んでいません。
        - text: アーティストは、枠のなかに４つ四角形をかく。
          feedback: 不正解、くり返しのなかで関数"多角形をかく"を呼んだら90度曲がっています。
      coursee_prediction_artistfunction2_2018_2019:
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
        answers:
        - text: アーティストは、ちゃんと絵をかいて、パズルをクリアする。
          feedback: 不正解、くり返しの中で呼ばれているのは、関数"多角形の列をかく"ではなく 関数"多角形をかく" です。
        - text: アーティストは４つの正方形でできた まど をかく。
          feedback: せいかい！
        - text: アーティストは、一番上の列だけかく。
          feedback: 不正解、プログラムの中で関数"多角形の列をかく"を呼んでいません。
        - text: アーティストは、枠のなかに４つ四角形をかく。
          feedback: 不正解、くり返しのなかで関数"多角形をかく"を呼んだら90度曲がっています。
      grade2_multi_collector_A_predict1:
        questions:
        - text: 下のプログラムを実行（じっこう）したら、ローレルは たからものを いくつ あつめますか？
        answers:
        - text: ４つ
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: ローレルは、たからものが ないところで たからものを あつめようとします。
          feedback: せいかい！
        - text: ローレルは すべての たからものを あつめることができる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: わかりません
          feedback: ローレルは たからものが ないところで たからものを あつめようとする。
      grade2_multi_collector_A_predict1_2018:
        questions:
        - text: プログラムを 実行したら どうなりますか？
        answers:
        - text: ４つ
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: ローレルは、たからものが ないところで たからものを あつめようとします。
          feedback: せいかい！
        - text: ローレルは すべての たからものを あつめることができる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: わかりません
          feedback: ローレルは たからものが ないところで たからものを あつめようとする。
      grade2_multi_collector_A_predict1_2018_2019:
        questions:
        - text: プログラムを 実行したら どうなりますか？
        answers:
        - text: ４つ
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: ローレルは、たからものが ないところで たからものを あつめようとします。
          feedback: せいかい！
        - text: ローレルは すべての たからものを あつめることができる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: わかりません
          feedback: ローレルは たからものが ないところで たからものを あつめようとする。
      gradek1_activity_beNice:
        title: コンピュータはともだちです。
        markdown: "# Behaving in the Computer Lab\n  \n<br/><br/>    \n    \n<a href=\"https://docs.google.com/document/d/18KHX5NNlmXX1Eqt8u6LFRzto7PK4dIFNv-tr1F1joUQ/edit?usp=sharing\"
          target=\"_new\">\n<button>\nレッスン プラン\n</button> \n</a>\n\n<br/><br/>\n<a
          class=\"btn btn-large btn-primary next-stage submitButton\">Continue</a>\n"
