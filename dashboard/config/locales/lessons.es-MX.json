{
  "es-MX": {
    "data": {
      "lessons": {
        "csd5-2022/Representation Matters": {
          "name": "Asuntos de Representación",
          "overview": "**Pregunta del día: ¿Cómo afectan los datos en las decisiones que tomamos cada día?**\n\nEn la primera lección de la unidad de datos, los estudiantes obtienen una visión general de lo que son los datos y de cómo se utilizan para resolver problemas. Los estudiantes comenzarán la lección con un breve análisis y luego realizarán una reflexión común para comprender qué son los datos. A continuación, se dividen en grupos y utilizan un conjunto de datos para recomendar varios tipos de comidas a personas con diversos criterios. Cada grupo tiene las opciones de comidas representadas de distintas maneras (imágenes, recetas, menú, información nutricional), algunas representaciones tienen más ventajas que otras. Finalmente, los grupos comparan sus respuestas y analizan de qué manera el tener distintas representaciones de los datos de las comidas influyó en la forma en la que resolvieron los distintos problemas.",
          "purpose": "Esta lección presenta un número importante de ideas que los estudiantes explorarán a lo largo de este capítulo. Podrán ver cómo los mismos objetos pueden ser representados de distintas formas. En el capítulo 1, aprenderán los distintos sistemas de representación que las computadoras utilizan para representar la información. También descubrirán la importancia de la representación cuando utilizamos datos para tomar decisiones. En el segundo capítulo de esta unidad, los estudiantes estudiarán más detenidamente las formas en las que los humanos y las computadoras pueden hacer uso de estos datos para tomar decisiones.",
          "student_overview": "**Pregunta del día: ¿Cómo afectan los datos en las decisiones que tomamos cada día?**\n\nEn esta lección, explorarás qué son los datos y cómo se utilizan para resolver problemas. "
        },
        "csd5-2022/Patterns and Representation": {
          "name": "Patrones y representación",
          "overview": "**Pregunta del día: ¿Cómo podemos crear un sistema para representar la información?**\n\nEn esta lección, los estudiantes crearán su propio sistema para representar información. Comenzarán con una lluvia de ideas de los distintos sistemas que ya utilizan para representar las respuestas sí y no. Luego trabajarán en grupos pequeños para crear un sistema que pueda representar a cada letra en el alfabeto usando distintas tarjetas. Estas tendrán uno de los 6 dibujos posibles (6 animales, 6 colores, etc.), por lo que para representar todo el alfabeto los estudiantes tendrán que utilizar patrones de varias tarjetas en representación de cada letra. Los estudiantes crearán mensajes con sus sistemas y los intercambian con otros grupos para asegurarse de que el sistema funcione correctamente. En el análisis final, la clase revisará las ventajas y desventajas de los distintos sistemas en funcionamiento, reflexionando acerca de las características que todos estos tienen en común, también reconocerán que hay muchas soluciones posibles para este problema y que lo importante es que todos utilicen el mismo sistema arbitrario para comunicarse.",
          "purpose": "En esta lección, los estudiantes explorarán por sí mismos las cualidades de un buen sistema para representar información. A través de la creación y la comprobación de sus sistemas llegarán a la conclusión de que:\n\n1.  Existen muchos más sistemas con los que se puede representar la información\n2.  Las personas deben acordar una serie de reglas para que estos sistemas funcionen\n\nLas características de los sistemas que los estudiantes crearán en esta lección servirán como punto de referencia en las siguientes lecciones cuando deban explorar los sistemas de representación utilizados actualmente en las computadoras.\n\nEn las siguientes lecciones se presentará a los estudiantes el concepto de binario y cómo las computadoras utilizan señales on-off o los números “0 y 1” para representar información. Aunque es posible que este concepto aparezca en la actividad inicial, debería introducirse formalmente en la siguiente lección.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos crear un sistema para representar la información?**\n\nEn esta lección, crearás un sistema para representar información trabajando con un grupo para crear un sistema que pueda representar cualquier letra del alfabeto usando solo una pila de tarjetas. "
        },
        "csd5-2022/ASCII and Binary Representation": {
          "name": "ASCII y representación binaria",
          "overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar letras y palabras?**\n\nEn esta lección, los estudiantes aprenderán a utilizar su primer sistema binario para codificar información, el sistema ASCII que es capaz de representar letras y otros caracteres. Para comenzar la lección, el docente introduce el tema comunicando a los estudiantes que las computadoras deben representar la información utilizando “on” u “off”. Luego, se presenta a los estudiantes el sistema ASCII, el cual es utilizado para representar texto usando símbolos binarios. Los estudiantes practicarán cómo utilizar este sistema antes de codificar su propio mensaje en él. Al finalizar la lección se llevará a cabo una conversación en la que se resumirán los objetivos de aprendizaje claves de esta actividad.",
          "purpose": "Esta lección es una oportunidad para conectar a los estudiantes con las herramientas que se utilizan en el mundo real y repasar los contenidos que los estudiantes aprendieron en las lecciones anteriores. Los estudiantes aprenderán el concepto de binario, que es un “bit” de información y podrán practicar utilizando un sistema binario. Los estudiantes repasarán el hecho de que los patrones de bits pueden ser utilizados para representar información y reflexionarán acerca de por qué el tener patrones de la misma longitud (en este caso 7 bits) hace que sea más fácil la utilización de un sistema.",
          "student_overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar letras y palabras?**\n\nEn esta lección, aprenderás sobre el sistema binario y ASCII utilizado para representar texto. "
        },
        "csd5-2022/Representing Images": {
          "name": "Representar imágenes",
          "overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar imágenes?**\n\nEn esta lección, los estudiantes aprenderán cómo las computadoras pueden representar imágenes. Para comenzar esta lección, tendrán que plantearse el desafío de demostrar toda la complejidad de una visión en un patrón binario. Mediante una serie de imágenes que muestran esta transformación, se introducirá el concepto de separar las imágenes en pequeños cuadrados o “pixeles”, los que pueden encenderse o apagarse individualmente para crear una imagen completa. Luego, los estudiantes completan una serie de desafíos utilizando la Herramienta de Pixelación para dibujar imágenes en blanco y negro. Los juegos han sido diseñados para demostrar los desafíos que implica esta forma de representar imágenes. En la actividad de cierre, los estudiantes harán conexiones entre el sistema para representar imágenes y el sistema para representar texto que aprendieron en la lección anterior.",
          "purpose": "Esta lección presenta otro sistema utilizado comúnmente para representar información en binario. Lo más evidente al realizar la actividad con la herramienta de pixelación, será que 1 significa “On” y que 0 significa “Off”. Sin embargo, algo que no será tan notorio es que el ancho y alto de la imagen deberá coincidir para poder interpretar la información de la imagen binaria. Finalmente, esta es una oportunidad para explorar la elaboración de los sistemas de representación de información binaria. Es muy difícil representar una imagen que no ha sido procesada. La idea de convertirla en una cuadricula de cuadrados en blanco y negro simplifica este desafío y lo convierte en un problema que los científicos de la computación sabrían cómo solucionar. Si bien la actividad principal de esta lección dará la impresión de únicamente teclear unos y ceros, en realidad revela mucho acerca de la idea que las personas tienen sobre la representación de información en binario, y de los desafíos e intercambios se generan como resultados.",
          "student_overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar imágenes?**\n\nEn esta lección, continuarás explorando cómo puedes crear sistemas para representar información, pero esta vez utilizando imágenes binarias."
        },
        "csd5-2022/Representing Numbers": {
          "name": "Representación de los Números",
          "overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar números?**\n\nEn esta lección, los estudiantes aprenderán acerca del sistema binario. Con un conjunto de tarjetas que representan la ubicación de los valores en un sistema de números binario (base-2) a través de una serie de puntos, los estudiantes podrán convertir bits en “on” y “off” al poner las tarjetas hacia arriba o hacia abajo, luego observarán los números que los distintos patrones arrojan como resultado. Finalmente, los estudiantes extienden el patrón a un sistema genérico de 4 bits.",
          "purpose": "Los estudiantes aprenderán a utilizar el sistema binario para representar números enteros. A diferencia del sistema ASCII, el cual es representado como un mapeo arbitrario de patrones de bit a caracteres, los números binarios son presentados en el contexto de patrones compuestos por números. Los estudiantes utilizarán estos patrones para determinar las representaciones binarias de los distintos números, en lugar de solo analizarlos en una tabla.",
          "student_overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar números?**\n\nEn esta lección, aprenderás sobre el sistema numérico binario real."
        },
        "csd5-2022/Combining Representations": {
          "name": "Combinar representaciones",
          "overview": "**Pregunta del día: ¿Cómo pueden distinguir las computadoras la diferencia entre los códigos binarios para letras, números o imágenes?**\n\nEn esta lección, los estudiantes utilizarán los tres tipos de sistemas de representación binaria (caracteres ASCII, número binario e imágenes) para decodificar la información de un registro. Después de analizar y decodificar una serie de bits, se les explica a los estudiantes que, para comprender la información binaria, primero deben entender el sistema que se está utilizando y el significado de la información codificada. Luego decodificarán un registro basado en una estructura  que se utiliza para representar a una mascota.",
          "purpose": "En lecciones anteriores, los estudiantes utilizaron diferentes sistemas de representación de forma independiente. Aquí, analizarán varios sistemas de representación que son utilizados dentro del mismo registro. Deben comprender que lo más importante no es solamente conocer los diversos códigos, sino también crear reglas acerca de los códigos que se están utilizando y en qué puntos del registro hacerlo.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden distinguir las computadoras la diferencia entre los códigos binarios para letras, números o imágenes?**\n\nEn esta lección, combinarás ASCII, binario e imágenes para explorar formas de codificar tipos de información más complejos. "
        },
        "csd5-2022/Keeping Data Secret": {
          "name": "Mantener los datos en secreto",
          "overview": "**Pregunta del día: ¿Cómo podemos mantener los datos en secreto y protegerlos de su uso indebido?**\n\nLos estudiantes continúan explorando la representación de los datos en una tarjeta perforada y comienzan a evaluar si es conveniente mantener alejados del dominio público aquellos datos que contienen información personal o confidencial. Una vez que los estudiantes comprenden las razones por las que se deben proteger los datos, aprenden el sistema de encriptación binaria, el cual les permitirá encriptar y desencriptar datos en sus tarjetas perforadas, para que luego puedan enviarse mensajes secretos utilizando este método. La lección termina con un análisis acerca de la importancia de proteger nuestra información y cómo podemos lograr esto a través de encriptado.",
          "purpose": "Mientras trabajaban con la codificación y decodificación de datos, los estudiantes no estaban enfocados en proteger los datos utilizados, incluso cuando estos contienen información personal y confidencial (como, por ejemplo, sus direcciones o números de teléfono). En esta lección, reflexionarán acerca de las formas en las que pueden asegurar que sólo el destinatario del mensaje pueda leer los datos que ellos están enviando. La lección se enmarca en situaciones de la vida real, como, por ejemplo, proteger el historial médico. Esto permite que los estudiantes puedan apreciar como este asunto se extiende a otros escenarios de la vida real que puedan afectar sus vidas sin que ellos estén conscientes de esto.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos mantener los datos en secreto y protegerlos de su uso indebido?**\n\nEn esta lección, explorarás diferentes niveles de seguridad, observarás la importancia de la privacidad y aprenderás a cifrar información."
        },
        "csd5-2022/Create a Representation": {
          "name": "Proyecto - Crear una representación",
          "overview": "**Pregunta del día: ¿Cómo puedo representar información compleja utilizando sistemas binarios?**\n\nEn esta lección, los estudiantes diseñan una estructura para representar su día perfecto utilizando los sistemas de representación binaria que aprendieron en el capítulo anterior. Para comenzar, escribirán una breve descripción de su día perfecto y luego lo revisarán con un compañero para identificar las piezas claves de la información que creen que una computadora pueda registrar. Como clase, los estudiantes decidirán de qué forma una tarjeta perforada con bytes de información será interpretada para representar aquellas piezas de información. Luego, los estudiantes utilizarán el ASCII, número binario y los formatos de imagen aprendidos para representar sus días perfectos. Intercambiarán tarjetas perforadas e intentarán decodificar el día perfecto de los otros estudiantes, La lección finaliza con una reflexión.",
          "purpose": "Esta lección impulsa a los estudiantes a tratar de resolver algunos de los desafíos de representar información a una computadora. Las computadoras son buenas representando algunos tipos de información, como números o caracteres, pero esto requiere que las personas representen información de formas que no siempre capturan la experiencia análoga de un objeto o una experiencia. Este proyecto también cumple la función de un proyecto acumulativo del capítulo, reuniendo los distintos sistemas de representación ya aprendidos por los estudiantes. A medida que avanzan al siguiente capítulo, los estudiantes verán más de cerca las formas en las que la información es utilizada para tomar decisiones, después de haber sido convertida a un formato que puede ser insertado a una computadora.",
          "student_overview": "**Pregunta del día: ¿Cómo puedo representar información compleja utilizando sistemas binarios?**\n\nEn esta lección, explorarás cómo usar los formatos ASCII, binario y de imagen para representar tu día perfecto."
        },
        "csd5-2022/Problem Solving and Data": {
          "overview": "**Pregunta del día: ¿Cómo podemos utilizar datos para resolver los problemas en nuestra comunidad?**\n\nEn esta lección, los estudiantes utilizan el proceso de resolución de problemas que aprendieron al inicio de este curso para resolver problemas de datos. Luego de repasar el proceso, la clase debe tomar una decisión: construir una biblioteca, un refugio de animales o una estación de bomberos en una ciudad. Los estudiantes trabajan en equipo para buscar información en Internet que los ayude a decidir lo que deberían construir. Luego, utilizar esta información para elaborar un argumento que pueda convencer al consejo municipal de que su elección es la correcta. Después, deben esquematizar lo que han hecho al proceso de resolución de problemas, utilizado durante todo el curso, comparando el proceso de resolución de problemas utilizado en general a su aplicación específica en problemas de datos.",
          "purpose": "Durante la primera mitad de esta unidad, los estudiantes han explorado como las computadoras pueden representar distintos tipos de información o datos. En esta lección, aprenderán como los datos pueden ser utilizados para resolver problemas del mundo real, repasando el proceso de resolución de problemas y utilizándolo en el análisis de datos.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar datos para resolver los problemas en nuestra comunidad?**\n\nEn esta lección, decidirás en qué se necesitan más recursos en una ciudad para ver cómo usar los datos para resolver problemas."
        },
        "csd5-2022/Structuring Data": {
          "name": "Estructurar Datos",
          "overview": "**Pregunta del día: ¿Cómo podemos hacer que el procesamiento de datos sea más fácil para las computadoras?**\n\nEn esta lección, los estudiantes exploran aún más la recopilación e interpretación de datos, incluyendo la limpieza y visualización de estos. Primero, los estudiantes analizarán cómo el presentar datos de distintas maneras puede ayudar a las personas a comprenderlos mejor, y luego crearán la visualización de sus propios datos. Utilizando los resultados de una encuesta acerca del ingrediente de pizza preferido de las personas, los estudiantes deberán decidir qué hacer con aquellos datos que no se ajustan al esquema de visualización que eligieron. Finalmente, los estudiantes analizan qué partes de este proceso pueden ser automatizadas por una computadora y cuales necesitan de un humano para tomar decisiones.",
          "purpose": "Esta lección demuestra que los datos sin procesar deben ser interpretados de tal manera que puedan ayudar a las personas a tomar una decisión. Los estudiantes trabajarán tanto en la visualización como en la limpieza de datos, y analizarán cómo los datos pueden ser malinterpretados cuando no se limpian correctamente. Los estudiantes también observarán que los datos deben ser estructurados de una forma en particular para que puedan ser utilizados por una computadora.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos hacer que el procesamiento de datos sea más fácil para las computadoras?**\n\nEn esta lección, aprenderás cómo presentar los datos de diferentes maneras que pueden ayudar a las personas a comprender mejor los datos, así como qué partes del proceso puede realizar una computadora y qué partes necesitan un ser humano. "
        },
        "csd5-2022/Interpreting Data": {
          "name": "Interpretar Datos",
          "overview": "**Pregunta del día: ¿De qué forma los patrones de datos pueden ayudarnos a tomar decisiones?**\n\nLos estudiantes comienzan la lección analizando una encuesta acerca de las preferencias de pasteles, en la que los encuestados pueden especificar el sabor del pastel y el glaseado. Analizarán las formas en las que el conocer la relación entre las preferencias del pastel y su glaseado los puede ayudar a decidir mejor qué combinación pueden recomendar. Luego, se les presenta la tabulación cruzada, la cual les permitirá graficar las relaciones que existen entre las distintas preferencias.  Utilizarán esta técnica para encontrar relaciones en una encuesta de preferencias, y luego reflexionarán acerca de los distintos tipos de problemas que este proceso les podría ayudar a resolver.",
          "purpose": "En la lección anterior, los estudiantes utilizaron la visualización de datos para tomar una decisión utilizando una sola fuente de datos (los ingredientes de una pizza). En esta lección, aprenderán a encontrar relaciones entre las variables utilizando la tabulación cruzada en las respuestas a las distintas preguntas de una encuesta. El ser capaces de determinar la forma en la que las respuestas a las distintas alternativas se relacionan entre sí, les permitirá hacer predicciones acerca de los usuarios basadas en sus respuestas anteriores. En el proyecto final, utilizarán este mismo tipo de análisis, que los ayudará a diseñar un algoritmo para sus recomendaciones.",
          "student_overview": "**Pregunta del día: ¿De qué forma los patrones de datos pueden ayudarnos a tomar decisiones?**\n\nEn esta lección, aprenderás acerca de la tabulación cruzada que te permitirá graficar las relaciones entre varios datos. "
        },
        "csd5-2022/Making Decisions with Data": {
          "name": "Tomar Decisiones con Datos",
          "overview": "**Pregunta del día - ¿Cómo pueden los patrones en los datos ayudarnos a tomar decisiones?**\n\nEn esta lección, los estudiantes practican la toma de decisiones con datos basados en problemas familiares diseñados para estudiantes de enseñanza media. Los estudiantes trabajan en grupos analizando formas en las que podrían utilizar los datos presentados para tomar una decisión, luego la clase comenta sus decisiones finales. No todas las preguntas tienen respuestas correctas, en algunos casos los estudiantes podrán y deberán decidir si deben o no recolectar más información. La lección finaliza con una discusión acerca de cómo distintas personas pueden llegar a distintas conclusiones a partir de los mismos datos, o cómo el recopilar distintos datos podría haber afectado las decisiones que tomaron.",
          "purpose": "Los estudiantes comienzan a explorar el proceso de resolución de problemas de datos, tomando decisiones con datos que ya han sido recopilados e interpretados. Es posible que los estudiantes de este curso no tengan experiencia con esta forma de tomar decisiones basadas en datos. El  propósito de esta lección es contextualizar este paso del proceso dentro de las decisiones que quizás les sean más habituales en su vida cotidiana.\n\nLa toma de decisiones con datos no es un proceso predecible. Distintas personas podrían sacar distintas conclusiones con los mismos datos. Es importante que los estudiantes tomen sus decisiones de acuerdo a los datos recolectados, pero por lo general esto no sería una respuesta “completamente correcta” Esta lección es una oportunidad para introducir los matices respecto a la toma de decisiones en un contexto controlado y compartido, antes de que los estudiantes comiencen por su parte a recolectar más información.",
          "student_overview": "**Pregunta del día - ¿Cómo pueden los patrones en los datos ayudarnos a tomar decisiones?**\n\nEn esta lección, tendrás la oportunidad de practicar el proceso de resolución de problemas de datos que aprendiste en la lección anterior. "
        },
        "csd5-2022/Automating Data Decisions": {
          "name": "Automatizar Decisiones Basadas en Datos",
          "overview": "**Pregunta del día: ¿Cómo pueden ayudarnos las computadoras a tomar decisiones?**\n\nEn esta lección, los estudiantes verán un ejemplo simple de cómo las computadoras son capaces de completar el paso de la toma de decisiones dentro del proceso de resolución de problemas. Los estudiantes tendrán la tarea de crear un algoritmo que sugiera un lugar de vacaciones. Luego elaborarán las reglas que una computadora podría usar para tomar una decisión de forma automática. Los estudiantes compartirán sus reglas y qué elecciones tomarían utilizando los datos de la clase. Luego aplican sus reglas utilizando los datos de sus compañeros para comprobar si sus reglas tomarían la misma decisión que una persona. La lección concluye con un análisis acerca de las ventajas y desventajas de utilizar a las computadoras para automatizar el proceso de resolución de problemas con datos.",
          "purpose": "Esta lección demuestra a los estudiantes que el último paso del proceso de resolución de problemas con datos, tomar una decisión, es algo que una computadora puede hacer automáticamente con un algoritmo. Se basa en la lección anterior, en la cual se demuestra la importancia de diseñar la forma en la que recolectamos datos para que estos puedan interpretarse. Esto aplica especialmente a las computadoras, las que se ajustan mejor a los datos de selección múltiple que analizarán en esta lección.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden ayudarnos las computadoras a tomar decisiones sobre los datos?**\n\nEn esta lección, examinarás cómo se podría usar una computadora para completar el paso de toma de decisiones del proceso de resolución de problemas de datos."
        },
        "csd5-2022/Problem Solving with Big Data": {
          "name": "La resolución de problemas con Big Data",
          "overview": "**Pregunta del día: ¿Cómo se recolectan nuestros datos y por qué son útiles?**\n\nEn esta lección, los estudiantes podrán ver de qué forma las organizaciones recolectan y utilizan los datos para resolver problemas en el mundo real. A los estudiantes se les presentan tres situaciones que podrán resolver utilizando datos y analizando qué tipos de datos necesitarían y de qué formas podrían recolectarlos. Cada problema está diseñado para reflejar un servicio existente en el mundo real. Después de realizar esta lluvia de ideas, los estudiantes verán un video acerca de un servicio del mundo real y tomarán apuntes acerca de los tipos datos que son recolectados y cómo estos son utilizados por este servicio. En la etapa final de la lección, los estudiantes deberán escribir en sus bitácoras si los datos han sido proporcionados por un usuario activamente, pasivamente o por sensores.",
          "purpose": "En esta lección los estudiantes podrán ver tres ejemplos de cómo se utiliza el proceso de resolución de problemas de datos en problemas del mundo real. Esta lección amplía los tipos de problemas que los estudiantes perciben como problemas de datos, y los ayuda a relacionar lo que saben acerca de los datos con sus propias experiencias utilizando servicios de Internet populares. Los ejemplos también ofrecen una oportunidad para reflexionar acerca del hecho de que ellos mismos, ya sea voluntaria o involuntariamente, producen datos que las compañías recolectan y utilizan.",
          "student_overview": "**Pregunta del día: ¿Cómo se recolectan nuestros datos y por qué son útiles?**\n\nEn esta lección, los estudiantes verán cómo las organizaciones recopilan y utilizan los datos para resolver problemas reales en el mundo real. "
        },
        "csd5-2022/Data and Machine Learning": {
          "name": "Datos y Aprendizaje Automático ",
          "overview": "**Pregunta del día: ¿Cómo pueden “aprender” las máquinas?**\n\nEn esta lección, se presenta a los estudiantes los conceptos de inteligencia artificial (AI) y aprendizaje automático (ML), utilizando la herramienta (widget) de inteligencia artificial para Oceanos. Primero, los estudiantes deberán clasificar objetos en las categorías de “pescar” y “no pescar” en una actividad en la que intentarán eliminar los desechos que están en el océano. Luego, deberán expandir su conjunto de datos de entrenamiento para incluir a otras criaturas marinas que pertenecen al agua. En la segunda parte de la actividad, los estudiantes deberán escoger sus propias etiquetas para clasificar imágenes de peces generadas al azar. Estos datos de entrenamiento se utilizarán para un modelo de aprendizaje automático que debería ser capaz de clasificar nuevas imágenes por sí solo.",
          "purpose": "En las lecciones anteriores, los estudiantes han visto cómo podemos usar datos para tomar decisiones. También hemos visto que nuestros datos se pueden recolectar constantemente y que el resultado de estos produce una gran cantidad de datos que deben ser analizados, una tarea que es imposible de realizar para un humano. Este tutorial está diseñado para que mediante una breve introducción, los estudiantes aprendan sobre el aprendizaje automático, un tipo de inteligencia artificial que puede ser utilizada para tomar decisiones acerca de grandes cantidades de datos. Los estudiantes explorarán cómo se utilizan los datos de almacenamiento para que un modelo de aprendizaje automático pueda clasificar nuevos datos. ",
          "student_overview": "**Pregunta del día: ¿Cómo pueden “aprender” las máquinas?**\n\nEn esta lección, podrás trabajar con Inteligencia Artificial y aprender sobre el Aprendizaje Automático. "
        },
        "csd5-2022/Project - Make a Recommendation": {
          "name": "Proyecto - Hacer una Recomendación ",
          "overview": "**Pregunta del día: ¿Cómo puedo utilizar datos para hacer mis propias recomendaciones?**\n\nPara finalizar esta unidad, los estudiantes diseñarán un motor de recomendación basado en los datos recolectados y analizados que obtuvieron de sus compañeros. Después de ver el ejemplo de una aplicación de recomendación, los estudiantes trabajarán con la guía de proyecto para completar esta actividad en varios días. En los primeros pasos, los estudiantes deben escoger la decisión con la que quieren ayudar al usuario, los datos que necesitarán para dar la recomendación, elaborarán una encuesta, y recolectarán la información acerca de las elecciones de sus compañeros. Luego, interpretarán los datos y utilizarán lo que han aprendido para crear un algoritmo de recomendación. Finalmente, utilizan sus algoritmos para hacer recomendaciones a algunos de sus compañeros. Los estudiantes realizarán una revisión por pares y harán los ajustes necesarios a sus proyectos, y luego prepararán la presentación que harán frente a la clase.",
          "purpose": "El propósito de este proyecto es evaluar el segundo capítulo de la unidad. Los estudiantes deberían demostrar que pueden aplicar el proceso de resolución de problemas con datos en un problema o área de su interés. En este proyecto los estudiantes realizarán muchas de las actividades que realizaron en clases, todas ellas en un mismo proyecto. Por ejemplo, los estudiantes ya han utilizado la tabulación cruzada para encontrar relaciones entre las preferencias y han elaborado algoritmos de recomendación, pero en este proyecto, utilizarán las relaciones encontradas en los datos para crear algoritmos. La última etapa de esta actividad no exige una forma específica en la que los estudiantes deben presentar sus trabajos, usted puede elegir el método que más se ajuste a su clase.",
          "student_overview": "**Pregunta del día: ¿Cómo puedo utilizar datos para hacer mis propias recomendaciones?**\n\nEn esta lección, diseñarás un motor de recomendaciones basado en los datos que recopiles y analices de tus compañeros de clase. "
        },
        "csd5-2022/CS Discoveries Post-Course Survey": {
          "name": "Encuesta de fin de curso de Descubrimientos de Ciencias de la Computación"
        },
        "csd3-2022/Programming for Entertainment": {
          "name": "Programación para Entretenimiento",
          "overview": "**Pregunta del día: ¿Cómo se usan las ciencias de la computación en el entretenimiento?**\n\nLos estudiantes analizan los “problemas” causados por el aburrimiento y la autoexpresión, y reflexionan acerca de cómo enfrentan estas situaciones en su vida personal. Luego, exploran el rol que tienen las ciencias de la computación, específicamente la programación, en algunas formas específicas de entretenimiento o como un medio para la autoexpresión.",
          "preparation": "-   Revisa los enlaces a los recursos de investigación en Code Studio\n-   Imprime una copia de la guía de actividad para cada grupo de tres alumnos\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si estás enseñando de forma virtual, valora la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "El propósito de esta lección es iniciar esta unidad de programación captando la atención de todos los estudiantes independientemente de sus intereses o experiencias. Si bien en las últimas lecciones los estudiantes deberán desarrollar un videojuego, recomendamos no dar tanta relevancia a _este_ tema. La intención de esta lección es ampliar la perspectiva de los estudiantes acerca de la relevancia de la programación en las distintas formas de entretenimiento y autoexpresión. Esta nueva perspectiva ayudará a los estudiantes durante toda la unidad, en especial cuando deban decidir cómo aplicar las distintas habilidades de programación que aprenden.",
          "student_overview": "estudiantes\n**Pregunta del día: ¿Cómo se usan las ciencias de la computación en el entretenimiento?**\n\nEn esta lección, los estudiantes explorarán cómo la informática, y específicamente la programación, desempeña un papel en el entretenimiento o como vehículo para la autoexpresión. "
        },
        "csd3-2022/Plotting Shapes": {
          "name": "Trazar Formas",
          "overview": "**¿Cómo podemos comunicar de forma clara lo que queremos dibujar en la pantalla?**\n\nLos estudiantes exploran los desafíos al querer comunicar cómo dibujar con figuras y utilizan una herramienta que puede solucionar este problema en el Game Lab. La actividad inicial muestra los desafíos al querer comunicar la posición de algo sin ningún punto de referencia. En la actividad principal, los estudiantes exploran una herramienta que les permite colocar figuras de manera interactiva en la cuadrícula de 400 por 400 del Game Lab. Luego, enseñarán a un compañero a dibujar una imagen oculta empleando esta herramienta. Esta actividad prepara a los estudiantes para los próximos desafíos al programar en el Web Lab.\nAntes de comenzar el análisis, los estudiantes podrán crear sus propias imágenes para comunicar a sus compañeros.",
          "purpose": "El objetivo principal de esta lección es que los estudiantes se familiaricen con el sistema de coordenadas que utilizarán en el Game Lab. Es posible que los estudiantes no tengan experiencia usando una cuadrícula de coordenadas o que tengan dificultades con el eje-y \"volteado” en el Game Lab. Al emplear la herramienta de dibujo, los estudiantes se verán forzados a pensar en otros detalles que deben saber al utilizar el Game Lab y que aprenderán en la próxima lección cuando comiencen a programar. Estos incluyen el orden que deben mantener al dibujar, la necesidad de especificar el color y el hecho de que los círculos se deben ubicar en el centro y los cuadrados al lado superior izquierdo. En la próxima clase y al realizar las actividades de programación, los estudiantes deberán comunicar posiciones, por lo que es crucial que todos tengan esa habilidad al finalizar esta lección.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos comunicar de forma clara lo que queremos dibujar en una pantalla?**\n\nEn esta lección, explorarás los desafíos de comunicar instrucciones claras utilizando una herramienta Game Lab para dibujar formas en la cuadrícula del Game Lab."
        },
        "csd3-2022/Drawing in Game Lab": {
          "name": "Dibujar en el Game Lab",
          "overview": "**Pregunta del día: ¿Cómo podemos comunicar a una computadora cómo dibujar algo en la pantalla?**\n\nEn esta lección, los estudiantes trabajarán en el Game Lab, una herramienta que les permitirá colocar formas en la pantalla y que utilizarán durante toda la unidad. Aprenderán los conceptos básicos de la depuración y secuenciación, y comandos simples. Al finalizar la lección, los estudiantes serán capaces de programar imágenes como las que hicieron con la herramienta de dibujo en la lección anterior.",
          "preparation": "-   Prepara un proyector u otro medio para mostrar los vídeos si quieres verlos en clase\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores\n-   Si estás enseñando virtualmente, valora la posibilidad de consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "El propósito principal de esta lección es que los estudiantes puedan familiarizarse con la programación y que aprendan los conceptos básicos de la secuenciación y depuración que aplicarán durante toda esta unidad. Los estudiantes comienzan la lección explorando el entorno de desarrollo interactivo de GameLab (IDE), luego aprenderán los tres comandos ([\\`rect\\`(#4dd0e1)](/docs/gamelab/rect/), [\\`ellipse\\`(#4dd0e1)](/docs/gamelab/ellipse/), and [\\`fill\\`(#4dd0e1)](/docs/gamelab/fill/)) que necesitarán para codificar los mismos tipos de imágenes que crearon en papel en la lección anterior. Los niveles de desafío permiten a los estudiantes que tienen más experiencia en programación explorar aún más el Game Lab.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos comunicar a una computadora cómo dibujar algo en la pantalla?**\n\nEn esta lección, los estudiantes comenzarán a usar Game Lab para colocar formas en la pantalla mientras trabaja con los conceptos de secuenciación y depuración. "
        },
        "csd3-2022/Shapes and Parameters": {
          "name": "Formas y parámetros",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos utilizar parámetros para dar instrucciones más específicas a la computadora?\\*\\*\n\nEn esta lección, los estudiantes continúan trabajando con el Game Lab, modificando la altura y el ancho de las formas que utilizan para dibujar. Esta lección inicia con un análisis que conecta la función del bloque expandido (por ejemplo, distintos tamaños de formas) con la necesidad de utilizar más entradas o parámetros. Los estudiantes aprenden cómo dibujar con versiones del  [\\`ellipse()\\`(#4dd0e1)](/docs/gamelab/ellipse/) y [\\`rect()\\`(#4dd0e1)](/docs/gamelab/rect/) que incluyen parámetros de altura y ancho. También aprenden a utilizar el bloque [\\`background()\\`(#4dd0e1)](/docs/gamelab/background/).",
          "preparation": "-   Revisa la secuencia de niveles en Code Studio\n-   Visita el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias adicionales o recursos compartidos por otros profesores.\n-   Si estás enseñando de forma virtual, considera revisar nuestras [Modificaciones de lecciones virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "En esta lección, los estudiantes podrán expandir sus habilidades de dibujo mientras continúan desarrollando habilidades de programación. Deberán analizar el plano de coordenadas x-y, considerar el orden de su código y aumentar la complejidad de sus programas. Esta lección está enfocada principalmente en el desarrollo de habilidades.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar parámetros para dar instrucciones más específicas a la computadora?**\n\nEn esta lección, los estudiantes continuarán trabajando en Game Lab y aumentarán su familiaridad con el dibujo de formas en la pantalla mediante la manipulación de los \"parámetros\" de las formas que está utilizando para dibujar. "
        },
        "csd3-2022/Variables": {
          "name": "Variables",
          "overview": "Pregunta del día: ¿Cómo podemos utilizar las variables para almacenar más información en nuestros programas?\n\nEn esta lección, los estudiantes aprenden a utilizar variables para etiquetar un número. Los estudiantes comienzan la lección con una descripción básica del propósito de una variable como un elemento de almacenamiento del modelo de entrada, salida, almacenamiento y procesamiento. Los niveles de esta lección refuerzan el modelo de una variable como una forma de etiquetar o dar nombre a un número.",
          "preparation": "-   Revisa la progresión de niveles en Code Studio\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si estás enseñando de forma virtual, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "En esta lección, los estudiantes trabajarán con variables por primera vez, por lo tanto, es normal que no comprendan algunas de sus funciones. Al finalizar la lección, los estudiantes deben comprender que las variables son una forma de etiquetar un valor en sus programas para más adelante poder usarlo como referencia o reutilizarlo. En la siguiente lección, los estudiantes conocerán los números aleatorios y al trabajar con ellos y aprenderán los distintos usos de las variables.  \n\nUtilizar variables para modificar dibujos es una habilidad que requiere mucha planificación. Si bien en esta lección los estudiantes modificarán una gran cantidad de programas, no se espera que compongan programas usando variables para modificar las características de un dibujo. En las siguientes lecciones, los estudiantes ampliarán sus conocimientos acerca de las variables y conocerán y otras formas de usarlas.",
          "student_overview": "\\*\\*Pregunta del día:  ¿Cómo podemos utilizar las variables para almacenar información en nuestros programas?\n\nEn esta lección, conocerás las variables, un concepto importante en la programación que se utiliza para almacenar valores en tus programas."
        },
        "csd3-2022/Random Numbers": {
          "name": "Números aleatorios",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos hacer que nuestros programas tengan comportamiento distinto cada vez que se ejecutan?\\*\\*\n\nLos estudiantes conocerán el bloque de [\\`randomNumber()\\`(#FFB74D)](/docs/gamelab/randomNumber/) y cómo pueden usarlo para crear nuevos comportamientos en sus programas. Luego, aprenderán a actualizar las variables mientras utilizan un programa. Estas nuevas herramientas permitirán que los estudiantes puedan dibujar imágenes aleatorias.",
          "preparation": "-   Revisa la progresión de niveles en Code Studio\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si estás enseñando de forma virtual, considera revisar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "En esta lección, se presenta la aleatoriedad, un elemento que motiva el uso de variables y ayuda a los estudiantes a hacer que sus programas sean más llamativos. Durante la actividad, los estudiantes trabajarán con una variable que se actualiza varias veces en el programa, permitiéndoles entender mejor como pueden utilizar las variables.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos hacer que nuestros programas se comporten de forma diferente cada vez que se ejecutan?**\n\nEn esta lección, aprenderás a utilizar el bloque randomNumber() para crear nuevos comportamientos en tus programas."
        },
        "csd3-2022/Sprites": {
          "name": "Sprites",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos utilizar sprites para llevar el registro de la cantidad de información en nuestros programas?\\*\\* \n\nPara crear imágenes más atractivas y detalladas, los estudiantes aprenderán acerca de los objetos sprite. Esta lección comienza con un análisis acerca de qué tipos de información un programa debe registrar, luego presenta a los sprites como una forma de llevar el registro de esa información. Los estudiantes aprenden a asignar una imagen a cada sprite, esto aumentará la complejidad de lo que puedan dibujar en la pantalla.",
          "preparation": "-   (Opcional) Imprime una copia de la guía de actividad para cada alumno\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Llevar registro de todas las formas y de las distintas variables que controlan sus aspectos puede ser algo complejo. Habría muchas variables y todas ellas tendrían distintos nombres. Es por esto que los informáticos crearon algo llamado **objeto**, el cual permite que el nombre de una variable controle la forma y todos sus aspectos. En el Gamel Lab, utilizamos objetos llamados **sprite**. Un sprite es un rectángulo con **propiedades** para controlar su aspecto. Las propiedades son las variables que están unidas al sprite. Puedes acceder a ellas a través del **dot notation**. \n\nAl usar la pestaña de animación, los estudiantes pueden crear o importar imágenes para utilizarlas como sprites. Luego, estos sprites les servirán como una herramienta para crear animaciones, ya que pueden cambiar y actualizar sus propiedades durante la ejecución de un programa.",
          "student_overview": "**Pregunta del día:  ¿Cómo podemos usar los sprites para ayudarnos a realizar un seguimiento de mucha información en nuestros programas?**\n\nHoy aprenderás sobre los sprites, que no solo te pueden dar una forma de realizar el seguimiento de varias piezas de información en tus programas, sino que también te permitirán crear imágenes más interesantes y divertidas."
        },
        "csd3-2022/Sprite Properties": {
          "name": "Propiedades de Sprite",
          "overview": "\\*\\* Pregunta del día:¿Cómo podemos utilizar las propiedades de los sprite para cambiar su apariencia en pantalla?\\*\\*\n\nLos estudiantes expanden su conocimiento al trabajar con las propiedades de los sprite. La lección comienza con un resumen acerca de qué es una sprite, luego los estudiantes trabajan en el Game Lab utilizando las propiedades y cambiando la apariencia de los sprites. Finalmente, reflexionarán acerca del vínculo que existe entre las propiedades y las variables.",
          "purpose": "En la lección anterior, cuando se presentó el concepto de los sprites, los estudiantes se enfocaron en crear un sprite y asignarla a una animación. Esta lección explora aquellos elementos que permiten a los sprite ser una herramienta de programación tan potente como para tener la capacidad de que sus propiedades se puedan modificar mientras un programa se está ejecutando. Estos conocimientos establecen las bases para las actividades que los estudiantes deberán realizar el resto de la unidad, ya que podrán acceder y manipular las propiedades de las sprite para generar comportamientos interesantes en sus programas.",
          "student_overview": "\\*\\* Pregunta del día: ¿Cómo podemos utilizar las propiedades de los sprite para cambiar su apariencia en pantalla?\\*\\*\n\nEn esta lección, continuarán su trabajo con los sprite, utilizando sus propiedades para cambiar su apariencia. "
        },
        "csd3-2022/Text": {
          "name": "Texto",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos utilizar el texto para mejorar nuestras escenas y animaciones?\\*\\*\n\nEsta lección presenta los comandos de texto del Game Lab, dándole a los estudiantes la oportunidad de practicar el uso del plano de coordenadas y los parámetros. Al inicio de la lección, los estudiantes deberán agregar texto a una caricatura creada en el Game Lab. Luego, ingresarán a Code Studio en dónde aprenderán a poner el texto en la pantalla y a controlar otras propiedades del texto, como por ejemplo, el tamaño. Los estudiantes que completen la evaluación antes, pueden ingresar a los niveles de desafío y aprender más trabajando con bloques relacionados con las propiedades del texto. ",
          "purpose": "En esta lección, se presenta el texto, un elemento necesario para los estudiantes ahora que comienzan a construir programas más complejos, como por ejemplo, juegos con marcador de puntuaciones. Este es el último tipo de elemento que los estudiantes colocarán en la pantalla. En las próximas lecciones, los estudiantes aprenderán a controlar el movimiento y las interacciones de estos elementos.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar el texto para mejorar nuestras escenas y animaciones?**\n\nEn esta lección, aprenderás a utilizar los comandos de texto del Game Lab para añadir subtítulos a tus escenas. "
        },
        "csd3-2022/Mini-Project - Captioned Scenes": {
          "name": "Mini-proyecto - Escenas Subtituladas",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos usar el Game Lab para expresar nuestra creatividad?\\*\\*\n\nLuego de un breve repaso del código que han aprendido hasta el momento, los estudiantes se enfrentan a su primer proyecto creativo de la unidad. Utilizando el modelo del proceso de resolución de problemas, los estudiantes definen la escena que quieren crear, preparan el código que usarán,  intentan poner su plan en acción en el Game Lab y luego reflexionan sobre sus creaciones. También tendrán la oportunidad de compartir sus creaciones con sus compañeros.",
          "purpose": "Esta lección es una oportunidad para que los estudiantes expresen su creatividad utilizando las habilidades que han aprendido. Algunos estudiantes pasarán más tiempo en la pestaña de animación que programando. Comuníqueles que pueden pasar tiempo en las partes de la actividad que más les interesan, siempre y cuando cumplan con los requerimientos de la tarea.\n\nLa flexibilidad de esta lección, permite al docente decidir el tiempo que los estudiantes destinarán a realizar sus actividades, considerando el horario establecido para la implementación del curso.",
          "student_overview": "\\*\\* Pregunta del día: ¿Cómo podemos usar el Game Lab para expresar nuestra creatividad?\\*\\*\n\nEn esta lección, tendrán la oportunidad de expresar su creatividad utilizando el proceso de resolución de problemas para diseñar y programar la escena que ustedes quieran. "
        },
        "csd3-2022/The Draw Loop": {
          "name": "El bucle 'dibujar'",
          "overview": "**Pregunta del día: Cómo podemos animar nuestras imágenes en Game Lab?**\n\nEn esta lección, los estudiantes conocerán el ciclo de dibujo, uno de los paradigmas de programación principales en el Game Lab. Para comenzar la lección, los estudiantes revisarán algunos flipbooks no digitales, para comprender que varios cuadros con distintas animaciones dan la sensación de estar en movimiento. Luego, los estudiantes verán un video en el cual se explica cómo al utilizar el ciclo de dibujo en el Game Lab se puede crear la misma sensación de movimiento en sus programas. Los estudiantes combinarán el ciclo de dibujo con los números aleatorios para manipular animaciones simples con puntos y luego con sprites.",
          "preparation": "-   Imprime y monta los manipulativos\n-   Prepara el vídeo\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-1-lessons-1-17/36192) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "El ciclo de dibujo es un componente principal del Game Lab. El hecho de que el Game Lab utilice esta función repetidamente y muchas veces por segundo (30 veces por defecto) es lo que le permite generar animaciones. Esta lección tiene dos objetivos. El primero es que los estudiantes puedan analizar que la animación en general depende de mostrar muchas imágenes, cada una con pequeñas diferencias, en una secuencia. El segundo objetivo es que los estudiantes entiendan que en ciclo de dibujo es lo que permite generar este comportamiento en el Game Lab. Al finalizar esta lección, los estudiantes deben comprender que los comandos en el ciclo de dibujo se ejecutan después del resto del código, pero que se ejecutan repetidamente para crear una animación. Los estudiantes podrán aprender más acerca de este comportamiento en las próximas dos lecciones, sin embargo, una comprensión de los conceptos en esta lección les servirá como base para el resto de la unidad.",
          "student_overview": "\\*\\* Pregunta del día: ¿Cómo podemos animar nuestras imágenes en el Game Lab?\\*\\*\n\nEn esta lección, aprenderás a utilizar el ciclo de dibujo con números aleatorios para crear tus primeras animaciones. "
        },
        "csd3-2022/Sprite Movement": {
          "name": "Movimiento de sprites",
          "overview": "**Pregunta del día: Cómo podemos controlar el movimiento de los sprite en el Game Lab?**\n\nEn esta lección, los estudiantes aprenderán a controlar el movimiento de un sprite utilizando un elemento llamado patrón de contador, el cual puede cambiar de forma progresiva las propiedades de los sprite. Los estudiantes pensarán en las distintas maneras en las que pueden animar a las sprites controlando sus propiedades, luego explorarán el patrón de contador en Code Studio. Después de examinar el código, los estudiantes intentarán usar el patrón de contador para crear varios tipos de movimientos sprite.",
          "purpose": "Esta lección complementa los conocimientos acerca del ciclo de dibujo que los estudiantes adquirieron para crear programas con movimiento _intencional_. Al incrementar o disminuir las propiedades del sprite, como por ejemplo [\\`sprite.x\\`(#f78183)](/docs/gamelab/sprite.x/), los estudiantes pueden escribir programas capaces de mover a los sprites en patrones esperados en lugar de los patrones aleatorios que utilizaron anteriormente. Las animaciones que los estudiantes aprendan en esta lección serán la base para todas las animaciones y juegos que realicen durante el resto de la unidad.",
          "student_overview": "**Pregunta del día: Cómo podemos controlar el movimiento de los sprite en el Game Lab?**\n\nEn esta lección, aprenderás a controlar el movimiento de los sprite utilizando un patrón de contador. "
        },
        "csd3-2022/Mini-Project - Animation": {
          "name": "Mini-proyecto - Animación",
          "overview": "**Pregunta del día: ¿Cómo podemos combinar diferentes patrones de programación para hacer una animación completa?**\n\nEn esta lección, los estudiantes deberán combinar los distintos métodos que han aprendido para crear una escena animada. Primero, repasarán los tipos de movimiento y animación que han aprendido y hacen una lista con los tipos de escenas que podrían necesitar ese movimiento. A continuación, comienzan a planificar las escenas animadas, que crearán en el Game Lab.",
          "purpose": "Esta es una instancia para que los estudiantes puedan expresar su creatividad utilizando los conocimientos que han aprendido. Algunos estudiantes querrán pasar más tiempo dibujando en la pestaña de animación que programando. Motive a los estudiantes a pasar tiempo en aquellas partes de la actividad que más les interesen, siempre y cuando cumplan con los requerimientos de la tarea.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos combinar diferentes patrones de programación para hacer una animación completa?**\n\nEn esta lección, combinarás todos los conceptos que has aprendido en las lecciones anteriores para crear y diseñar tu primera escena animada."
        },
        "csd3-2022/Conditionals": {
          "name": "Condicionales",
          "overview": "**Pregunta del día: ¿Cómo pueden los programas reaccionar a los cambios mientras se están ejecutando?**\n\nEsta lección introduce las expresiones booleanas y condicionales, que permiten que un programa se ejecute de forma distinta dependiendo de si una condición es verdadera. Los estudiantes comienzan jugando un juego breve en el que deberán responder si se cumplen o no ciertas condiciones. Luego ingresan a Code Studio, en donde aprenderán cómo una computadora evalúa las expresiones booleanas y como estas pueden usarse para estructurar un programa.",
          "purpose": "Esta lección se basa en el modelo booleano con el que los estudiantes experimentaron en la lección \"Sin conexión: Booleanos\". Al igual que antes, comenzarán a usar booleanos directamente antes de utilizarlos para gatillar las sentencias _si_. En la próxima lección, los estudiantes conocerán algunos bloques productores de booleanos como el [\\`keyDown()\\`(#fff176)](/docs/gamelab/keyDown/), el cual puede usarse para reemplazar a las comparaciones booleanas simples para escribir programas que respondan a la entrada del usuario.",
          "student_overview": "**Pregunta del día:  ¿Cómo pueden los programas reaccionar a los cambios mientras se están ejecutando?**\n\nEn esta lección, aprenderás acerca de las expresiones booleanas y condicionales, las que te permiten crear programas que se ejecuten de forma distinta dependiendo de si una condición es o no verdadera. "
        },
        "csd3-2022/Keyboard Input": {
          "name": "Entrada de teclado",
          "overview": "**Pregunta del día: ¿Cómo pueden nuestros programas reaccionar a la entrada de un usuario?**\n\nContinuando la introducción a booleanos y sentencias _si_ de la lección anterior, se presenta a los estudiantes un nuevo bloque llamado [\\`keyDown()\\`(#fff176)](/docs/gamelab/keyDown/) el cual devuelve a un booleano y puede ser usado en sentencias condicionales para mover los sprites por la pantalla. Al finalizar esta lección, los estudiantes habrán escrito programas en los que los sprites en la pantalla serán controlados por los usuarios utilizando el teclado como un método de entrada.",
          "purpose": "Una forma común de utilizar las condicionales es para comprobar distintos tipos de entrada del usuario, en especial las teclas presionadas. El hecho de que un usuario pueda interactuar con un programa, hace que este sea mucho más interesante y dinámico. Es muy difícil crear un juego que no cuente con interacción. Por lo tanto, la introducción de las condicionales y las entradas de usuario para que pueda tomar decisiones son un paso fundamental en la creación de videojuegos.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden nuestros programas reaccionar a la entrada del usuario?**\n\nEn esta lección, aprenderás a utilizar el bloque keyDown() que permitirá a tus programas responder a la entrada del usuario. "
        },
        "csd3-2022/Mouse Input": {
          "name": "Entrada de Ratón",
          "overview": "**Pregunta del día: ¿De qué otras formas puede reaccionar una computadora a la entrada de un usuario?**\n\nEn esta lección, los estudiantes continúan explorando maneras de utilizar sentencias condicionales para captar la entrada del usuario. Para complementar a los comandos de teclado que aprendieron en la lección anterior, en esta clase los estudiantes aprenderán varias formas de captar la entrada del mouse. También ampliarán sus conocimientos acerca de las condicionales para incluir \"else\", una condicional que permite que la computadora ejecute una determinada sección de código cuando una condición es verdadera, y una sección diferente de código cuando no lo es.",
          "purpose": "Los estudiantes han aprendido a tomar decisiones simples utilizando las condicionales. En ocasiones, será necesario tomar decisiones basadas en si la condición por la cual preguntamos originalmente era falsa. En estos casos es en dónde aparecen las sentencias \"else\". Las sentencias else corresponden a una segunda sentencia anexada a una sentencia si. Las sentencias else se ejecutan cuando las condicionales a las que están anexadas son falsas.\n\nEn esta lección, se presenta este concepto junto con nuevos comandos de entrada del mouse. Estos nuevos conocimientos permitirán que los estudiantes gradualmente construyan programas que utilizan distintas formas de entrada.",
          "student_overview": "\\*\\*Pregunta del día: ¿De qué otras formas puede reaccionar el ordenador a la entrada del usuario?\n\nEn esta lección, ampliarás lo que has aprendido sobre las sentencias if y explorarás las sentencias if-else. También aprenderás a utilizar el mouse para obtener información del usuario que puedes utilizar en tus sentencias condicionales. "
        },
        "csd3-2022/Project - Interactive Card": {
          "name": "Proyecto - Tarjeta Interactiva",
          "overview": "**Pregunta del día:  ¿Qué habilidades y prácticas son importantes a la hora de crear un programa interactivo?**\n\nEn este proyecto de culminación del capítulo 1, los estudiantes planifican y desarrollan una tarjeta de felicitación interactiva utilizando todas las técnicas de programación que han aprendido hasta el momento.",
          "preparation": "-   Imprime una copia de la guía de proyecto para cada alumno\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-interactive-card-interactive-animations-and-games-lesson-17/36208) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Esta evaluación de finalización de capítulo es una buena instancia para que los estudiantes utilicen todos los conocimientos que han adquirido hasta el momento (dibujar, variables, sprites, imágenes, condicionales, entradas de usuario). Los estudiantes aún deberían trabajar con un código de fácil lectura y que no requiere abstracciones de alto nivel. El darle la oportunidad de expresar su creatividad, después de haber aprendido todos estos nuevos conceptos, hará que se entusiasmen por aprender más en el capítulo 2.",
          "student_overview": "**Pregunta del día:  ¿Qué habilidades y prácticas son importantes a la hora de crear un programa interactivo?**\n\nEn esta lección, planificarás y desarrollarás una tarjeta de felicitación interactiva utilizando todos los conceptos y técnicas de programación que has aprendido hasta ahora."
        },
        "csd3-2022/Velocity": {
          "name": "Velocidad",
          "overview": "**Pregunta del día:  ¿Cómo pueden los lenguajes de programación ocultar patrones complicados para que sea más fácil programar?**\n\nTras un breve repaso de cómo se utiliza el \"patrón de contador\" para mover los sprites, se presenta a los estudiantes la idea de ocultar esos patrones en un solo bloque. Luego, los estudiantes se dirigen a Code Studio para probar nuevos bloques que establecen la velocidad de un sprite directamente, y observan las distintas formas en que pueden codificar comportamientos más complejos en sus sprites.  ",
          "purpose": "Esta lección trata un tema de gran importancia en el capítulo: el comportamiento complejo que se puede representar de formas más simples para que sea más fácil de escribir y razonar acerca del código. \n\nEn esta lección, los estudiantes aprenderán a utilizar los bloques de velocidad para simplificar el código que mueve a un sprite por la pantalla. Esto significa un cambio en la manera de presentar nuevos bloques. Mientras que los bloques anteriores se presentaron como activadores de nuevos comportamientos, ahora se presentan como una herramienta para simplificar el código que los estudiantes habían escrito usando los bloques anteriores. En las próximas lecciones, los estudiantes aprenderán de qué maneras este método de manejar la complejidad les permite generar comportamientos de sprite más interesantes.",
          "student_overview": "**Pregunta del día:  ¿Cómo pueden los lenguajes de programación ocultar patrones complicados para que sea más fácil programar?**\n\nEn esta lección, aprenderás a establecer la velocidad de un sprite que utiliza el patrón de contador para mover tus sprites. "
        },
        "csd3-2022/Collision Detection": {
          "name": "Detección de colisiones",
          "overview": "**Pregunta del día: ¿Cómo puede la programación ayudar a simplificar los problemas complicados?**\n\nLos estudiantes aprenderán acerca de la detección de colisiones en la computadora. En parejas, explorarán cómo una computadora podría utilizar las propiedades de ubicación, el tamaño de los sprites y las matemáticas para detectar si dos sprites se están tocando. Luego, usarán el bloque [\\`isTouching()\\`(#f78183)](/docs/gamelab/isTouching/) para crear distintos efectos cuando los sprites colisionen, y practicarán el uso del bloque para modelar varias interacciones.",
          "preparation": "-   Imprime copias de la guía de actividad para que cada pareja de alumnos tenga una parte A y una parte B.\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-2-lessons-18-27/36193) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Esta lección introduce formalmente el uso de abstracciones, formas simples para representar una complejidad subyascente. \n\nEn la lección anterior, los estudiantes tuvieron la oportunidad de utilizar un bloque para representar un código complejo. En esta lección, los estudiantes explorarán esta idea en el contexto del desafío matemático, complejo e intencional de determinar si dos sprites se están tocando. Utilizando un solo bloque para representar esta complejidad, en este caso el bloque isTouching, se hace más simple escribir y comprender el código, esto permite que los estudiantes puedan apreciar el valor de usar estas abstracciones. En las próximas lecciones, los estudiantes continuarán construyendo con la abstracción [\\`isTouching()\\`(#f78183)](/docs/gamelab/isTouching/) con el objetivo de crear interacciones de sprite más complejas.",
          "student_overview": "**Pregunta del día: ¿Cómo puede la programación ayudar a simplificar los problemas complicados?**\n\nEn esta lección, aprenderás sobre la detección de colisiones explorando cómo un ordenador podría utilizar las matemáticas, la ubicación del sprite y el tamaño para detectar si los sprites se están tocando. "
        },
        "csd3-2022/Mini-Project - Side Scroller": {
          "name": "Mini-Proyecto - Desplazamiento Lateral",
          "overview": "**Pregunta del día:  ¿Cómo se pueden usar los nuevos tipos de movimientos sprite y la detección de colisión para crear un juego?**\n\nLos estudiantes aplican lo aprendido acerca de la detección de colisión y de establecer la velocidad para crear un juego simple. Luego de analizar un juego de muestra, los estudiantes piensan en que tipo de juego les gustaría crear, luego utilizan un proceso estructurado para programarlo en Code Studio.",
          "purpose": "Esta es una instancia para que los estudiantes puedan expresar su creatividad utilizando los conocimientos que han aprendido. Motívelos a pasar tiempo en aquellas partes de la actividad que más les interesen, siempre y cuando cumplan con los requerimientos de la tarea. Esta lección puede ser modificada para que sea más breve o más extensa dependiendo de las limitaciones de tiempo. ",
          "student_overview": "**Pregunta del día:  ¿Cómo se pueden utilizar los nuevos tipos de movimiento de los sprites y la detección de colisiones para crear un juego?**\n\nEn esta lección, utilizarás lo que has aprendido sobre la detección de colisiones y la velocidad para crear un sencillo juego de desplazamiento lateral."
        },
        "csd3-2022/Complex Sprite Movement": {
          "name": "Movimiento Complejo de Sprites",
          "overview": "**Pregunta del día: ¿Cómo se pueden combinar los bloques anteriores en nuevos patrones para hacer movimientos interesantes?**\n\nLos estudiantes aprenderán a combinar las propiedades de velocidad de los sprites con el patrón de contador para crear movimientos de sprites más complejos. Después de repasar los dos conceptos, explorarán varios escenarios en los que se utilizarán la velocidad en el patrón de contador, y observarán los distintos tipos de movimiento que se obtienen como el resultado. Particularmente, los estudiantes aprenderán a simular la gravedad. A continuación, reflexionarán sobre cómo han podido obtener nuevos comportamientos combinando bloques y patrones que ya conocían.",
          "purpose": "En esta lección, no se presentan nuevos bloques y de hecho solo se utilizan patrones que los estudiantes ya conocieron en el capítulo 1. En lugar de eso, esta lección demuestra que el combinar herramientas, particularmente las abstracciones que aprendieron en las últimas dos lecciones, les permite construir nuevos comportamientos para sus sprites. También se resalta el hecho de que las abstracciones no solo simplifican el código, sino que pueden utilizarse para construir bloques con comportamientos aún más complejos.  ",
          "student_overview": "**Pregunta del día: ¿Cómo se pueden combinar los bloques anteriores en nuevos patrones para hacer movimientos interesantes?**\n\nEn esta lección, aprenderás a combinar las propiedades de velocidad de los sprites con el patrón de contador para crear movimientos de sprite más complejos. "
        },
        "csd3-2022/Collisions": {
          "name": "Colisiones",
          "overview": "**Pregunta del día: ¿Cómo pueden los programadores basarse en abstracciones para crear más abstracciones?**\n\nEn esta lección, los estudiantes programarán sus sprites para que puedan interactuar de nuevas formas. Después de un breve repaso acerca de cómo utilizaron el bloque [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/), los estudiantes imaginarán de que otras maneras podrían interactuar los sprites. Más tarde, usarán el bloque [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/) para que un sprite empuje a otro por la pantalla y finalmente practicarán con los cuatro bloques de colisión ([\\`collide\\`(#f78183)](/docs/gamelab/collide/), [\\`displace\\`(#f78183)](/docs/gamelab/displace/), [\\`bounce\\`(#f78183)](/docs/gamelab/bounce/), y [\\`bounceOff\\`(#f78183)](/docs/gamelab/bounceOff/)).",
          "purpose": "En esta lección, se presentan las colisiones, otra abstracción que permitirá que los estudiantes puedan manipular a sus sprites de nuevas maneras. Si bien los estudiantes podrían haber escrito sus propios comandos de desplazamiento, colisión o rebote, la habilidad de ignorar aquellos detalles en este código les permitirá enfocar toda su atención en la estructura de alto nivel de los juegos que deseen construir.\n\nLa intención de esta clase es que los estudiantes puedan utilizar los comandos que aprendieron en el segundo capítulo. Esta será la última vez que aprendan nuevos comportamientos de sprite, después de esta lección, los estudiantes se enfocaran en las formas de organizar el código, el que se tornará cada vez más complejo.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los programadores basarse en abstracciones para crear más abstracciones?**\n\nEn esta lección, aprenderás a utilizar los nuevos bloques de colisión (colisionar, desplazar, rebotar y bounceOff) para hacer que tu sprite interactúe de nuevas maneras. "
        },
        "csd3-2022/Mini-Project - Flyer Game": {
          "name": "Mini-Proyecto - Juego con Objetos Voladores",
          "overview": "**Pregunta del día:  ¿Cómo se pueden utilizar los nuevos tipos de colisiones y el movimiento de modelado para crear un juego?**\n\nLos estudiantes aplicarán los conocimientos aprendidos acerca de la simulación de la gravedad y los distintos tipos de colisiones para crear juegos sencillos que contienen objetos voladores. Después de ver un juego de muestra, los estudiantes intercambiarán ideas acerca de los tipos de juegos que les gustaría crear. Finalmente, programarán el juego en Code Studio siguiendo un proceso estructurado.",
          "purpose": "Esta es una instancia para que los estudiantes puedan expresar su creatividad utilizando los conocimientos que han aprendido. Motívelos a pasar tiempo en aquellas partes de la actividad que más les interesen, siempre y cuando cumplan con los requerimientos de la tarea. ",
          "student_overview": "**Pregunta del día: ¿Cómo se pueden utilizar los nuevos tipos de colisiones y el modelado del movimiento para crear un juego?**\n\nEn esta lección, utilizarás lo que has aprendido sobre la simulación de la gravedad y los diferentes tipos de colisiones para crear un juego sencillo con objetos voladores."
        },
        "csd3-2022/Functions": {
          "name": "Funciones",
          "overview": "**Pregunta del día: ¿De qué forma los programadores pueden utilizar funciones para crear sus propias abstracciones?**\n\nLos estudiantes aprenderán a crear funciones para organizar su código, hacerlo más fácil de leer y eliminar bloques de código repetido. Primero, analizarán qué tipo de bloques nuevos les gustaría tener en el Game Lab y qué tipo de contenido estos albergarían. Luego, los estudiantes aprenderán a crear funciones en el Game Lab. Usarán estas funciones para eliminar bloques de código extensos de su ciclo de dibujo y para reemplazar fragmentos de código repetidos utilizando una sola función.",
          "purpose": "En las lecciones anteriores, los estudiantes aprendieron a utilizar muchas abstracciones en sus programas, incluyendo las propiedades de velocidad, el bloque isTouching y las colisiones. Estas abstracciones les han permitido construir programas más complejos sin prestar atención a los detalles de la creación de los distintos comportamientos. En esta lección, los estudiantes aprenderán a construir sus propias abstracciones mediante la creación de funciones.\n\nLos estudiantes usarán estas funciones para descomponer el código en pequeños fragmentos más fáciles de analizar. Estos conocimientos preparan a los estudiantes para la transición del capítulo, que va desde desarrollar habilidades técnicas hasta el proceso organizacional que deben utilizar para desarrollar un software.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los programadores utilizar las funciones para crear sus propias abstracciones?**\n\nEn esta lección, aprenderás a organizar mejor tu código utilizando funciones para hacer que el código de tu programa sea más legible y eliminar bloques de código repetidos. "
        },
        "csd3-2022/The Game Design Process": {
          "name": "El Proceso de Diseño de Juegos",
          "overview": "**Pregunta del día:  ¿De qué forma el tener un plan nos ayuda a que un proyecto grande sea más fácil de completar?**\n\nEsta lección presenta a los estudiantes el proceso que utilizarán para diseñar juegos durante el resto de la unidad. Este proceso está acompañado de una guía de proyecto en la cual los estudiantes deberán definir sus sprites, variables y funciones antes de empezar a programar su juego. Como primera actividad, los estudiantes se dirigirán al Game Lab para probar un juego de código oculto. Luego, conversarán acerca de la ubicación de los sprites, variables y funciones en el juego.\nMás tarde, trabajarán en la guía de proyecto, en ella, podrán ver una de las formas en la que se puede ejecutar el juego. Los estudiantes tendrán que completar una serie de niveles antes de llegar al final de la lección, en dónde podrán mejorar y personalizar el juego. ",
          "preparation": "-   Imprime copias de la guía de proyecto si vas a entregar copias físicas a los alumnos.  Ten en cuenta que esta guía de proyecto se rellena intencionadamente. (Véanse las notas en el Plan de la lección).\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-2-lessons-18-27/36193) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, considera consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview)",
          "purpose": "Esta lección presenta las animaciones fotograma a fotograma, y es la primera de una serie de lecciones acerca del proceso de construcción de un software.\n\nMientras que las lecciones anteriores se enfocaban en el uso de abstracciones para gestionar la complejidad del código, esta lección se centra en gestionar la complejidad del proceso de desarrollo de un software. La lección explora progresivamente el proceso de desarrollo de un software, dando a los estudiantes una guía de proyecto completa, brindando el código inicial, y mostrándoles el proceso de implementación. En las siguientes lecciones, los estudiantes deberán completar la mayor parte de esta guía y el proceso del proyecto final individualmente.",
          "student_overview": "**Pregunta del día:  ¿Cómo tener un plan ayuda a hacer más fácil un proyecto de gran envergadura?**\n\nEn esta lección, explorarás el proceso que utilizarás durante el resto de la unidad al diseñar juegos. "
        },
        "csd3-2022/Using the Game Design Process": {
          "name": "Uso del Proceso de Diseño de Juegos",
          "overview": "**Pregunta del día:  ¿Cómo puede el proceso de resolución de problemas ayudar a los programadores a gestionar grandes proyectos?**\n\nEn esta lección de varios días, los estudiantes usan el proceso de resolución de problemas de la Unidad 1 para crear un juego de salto de plataforma. Comenzarán analizando un ejemplo de este juego y luego definirán el aspecto del juego que quieren crear. A continuación, utilizarán un proceso estructurado para planificar los fondos, las variables, los sprites y las funciones que necesitarán para implementar su juego. Después de escribir el código, los estudiantes reflexionarán acerca de cómo pueden mejorar el juego e implementarán esos cambios.",
          "preparation": "-   Imprime un ejemplar de la guía de proyecto para cada alumno o pareja de alumnos\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/resource-hub-interactive-animations-and-games-chapter-2-lessons-18-27/36193) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, puedes consultar nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Los estudiantes ya aprendieron todos los elementos de programación que se necesitan para crear un juego. En esta lección se repasan muchos de esos conceptos mientras los estudiantes siguen un proceso estructurado que les ayudará a organizar el trabajo. Continuarán utilizando la guía de proyecto de la lección anterior, pero esta vez la completarán de manera individual y luego la utilizarán para construir un juego. Esta actividad preparará a los estudiantes para el proyecto final, en donde deberán ser capaces de escribir su propio programa desde el principio.",
          "student_overview": "**Pregunta del día:  ¿Cómo puede el proceso de resolución de problemas ayudar a los programadores a gestionar grandes proyectos?**\n\nEn esta lección de varios días, utilizarás el proceso de resolución de problemas para crear un juego de saltos de plataforma."
        },
        "csd3-2022/Project - Design a Game": {
          "name": "Proyecto - Diseñar un Juego",
          "overview": "**Pregunta del día: ¿Cómo pueden las cinco prácticas de las ciencias de la computación (resolución de problemas, perseverancia, comunicación, colaboración y creatividad) ayudar a los programadores a completar grandes proyectos?**\n\nLos estudiantes planificarán y desarrollarán su propio juego utilizando la guía de proyecto de las dos lecciones anteriores. Ya sea individualmente o en parejas, los estudiantes tendrán que decidir el tipo de juego que quieren crear, inspirándose en un conjunto de juegos de muestra. Luego, completarán una guía de proyecto en blanco en donde describirán el comportamiento del juego y analizarán las variables, los sprites y las funciones que necesitarán crear. En Code Studio, una serie de niveles les indicarán una secuencia general que pueden usar para implementar este plan. A lo largo del proceso, los estudiantes compartirán sus proyectos con sus compañeros para la revisión por pares e incorporarán esta retroalimentación a su juego. Al final de la lección, los estudiantes compartirán sus juegos con sus compañeros. Este proyecto puede abarcar de 3 a 5 períodos de clase.",
          "preparation": "-   Imprime copias de la guía de proyecto, una para cada alumno/par de alumnos.\n-   Imprime copias de la rúbrica, una para cada estudiante/par de estudiantes.\n-   Imprime copias de la guía de revisión por pares, una para cada estudiante/par de estudiantes.\n-   Revisa ejemplos de juegos en Code Studio\n-   Consulta el foro [\"Sala de Profesores\"](https://forum.code.org/t/project-hub-design-a-game-interactive-animations-and-games-lesson-27/36211) donde los profesores verificados pueden encontrar estrategias o recursos adicionales compartidos por otros profesores.\n-   Si enseñas de forma virtual, consulta nuestras [Modificaciones de Lecciones Virtuales](https://docs.google.com/document/d/16yHyWom69h5OFd-4yYiuwSq9MOdan9sv3Q0R0tzmtD8/preview).",
          "purpose": "Esta es la última lección de la unidad 3, y en ella los estudiantes tendrán la posibilidad de trabajar en el Game Lab y crear su propio juego desde el comienzo. La experiencia en utilizar la guía de proyecto ayudará a los estudiantes a ver el alcance de sus proyectos y cómo sus ideas llegaron a completarse. Si bien este proyecto es una oportunidad para que los estudiantes demuestren sus habilidades técnicas, los estudiantes también necesitarán colaborar con sus compañeros, dar retroalimentación constructiva y utilizar el proceso de resolución de problemas para enfrentar los obstáculos que se presenten. Los estudiantes deben ser los protagonistas de este proyecto, para luego proporcionar una conclusión memorable y motivadora de esta unidad de Descubrimientos CS.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden las cinco prácticas de las ciencias de la computación (resolución de problemas, la persistencia, la comunicación, la colaboración y creatividad) ayudar a los programadores a completar grandes proyectos?**\n\nEn esta lección, utilizarás el proceso de resolución de problemas para planificar y construir un juego original."
        },
        "csd3-2022/CS Discoveries Post-Course Survey": {
          "name": "Encuesta de fin de curso de Descubrimientos de Ciencias de la Computación"
        },
        "csd6-2021/Innovations in Computing": {
          "name": "Innovaciones en Computación",
          "overview": "Para iniciar la unidad final de este curso, los estudiantes investigarán acerca de las innovaciones en computación. En esta lección los estudiantes estarán expuestos a una mayor variedad de factores de formas de la computación (cómo se ve una computadora) y analizarán aquellas áreas que han sido impactadas por la computación. Más adelante, en esta unidad, y a medida que desarrollen sus propios artefactos computacionales, los estudiantes volverán a analizar los dispositivos que vieron en esta lección.",
          "preparation": "-   Revise los enlaces de las páginas de recursos en Code Studio\n-   Prepare el video [El Internet de las cosas](https://www.youtube.com/watch?v=xQGsubJNbQw&feature=youtu.be) o [Las ciencias de la computación están cambiando todo](https://www.youtube.com/watch?v=QvyTEx1wyOY)\t\n-   Imprima una copia de la guía de actividades para cada estudiante",
          "purpose": "Esta lección sienta las bases para que los estudiantes comprendan de qué formas podría utilizarse su tablero de circuitos para modelar un artefacto computacional innovador. El objetivo es lograr que los estudiantes reflexionen acerca de cómo las computadoras pueden ser incorporadas en la mayoría de las áreas y procesos, y también que tengan presente los impactos potenciales de este tipo de aplicación.",
          "student_overview": "En esta lección, los estudiantes explorarán una amplia variedad de plataformas informáticas nuevas e innovadoras mientras amplían su comprensión de lo que una computadora puede ser."
        },
        "csd6-2021/Designing Screens with Code": {
          "name": "Diseñar pantallas a través del código",
          "overview": "En la unidad 4, los estudiantes aprendieron acerca del desarrollo de aplicaciones en el App Lab, esto requería utilizar una pantalla aparte para la mayoría de las interacciones. Presentaremos el bloque [\\`setProperty()\\`(#fff176)](/docs/applab/setProperty/) con el fin de expandir el tipo de aplicaciones que los estudiantes pueden crear y para motivarlos a pensar en nuevas formas en las que los usuarios pueden interactuar con aplicaciones. Este comando puede usarse para establecer el contenido y las propiedades de distintos elementos de interfaz de usuario (UI), lo que permitirá a los estudiantes escribir programas que actualicen la información de solo una pantalla en lugar de crear pantallas duplicadas de forma manual. En esta lección los estudiantes construirán aplicaciones simples que requieren una sola pantalla, y cuyo contenido se podrá cambiar utilizando [\\`setProperty()\\`(#fff176)](/docs/applab/setProperty/).",
          "purpose": "Esta lección permitirá que los estudiantes programen en el App Lab antes de presentarles la Circuit Playground, y también presenta el concepto de un _setter_. En la unidad 4, los estudiantes utilizaron [\\`setScreen()\\`(#fff176)](/docs/applab/setScreen/) para lograr que sus aplicaciones respondan a la interacción del usuario. Si bien, esta es una técnica simple y práctica, puede causar duplicación de contenido en las distintas pantallas. Al utilizar _setters_, y más adelante _getters_, los estudiantes pueden escribir aplicaciones que cambien el contenido de una sola pantalla, ya sea mostrando y ocultando o cambiando el contenido o aspecto de distintos elementos.\n\nUna vez que los estudiantes hayan aprendido acerca de la utilización de getters y setters con elementos de interfaz de usuario, anímelos a pensar críticamente acerca de cuándo se pueden usar pantallas separadas en la fase de diseño de una aplicación. Si las pantallas tienen más similitudes que diferencias, es probable que sea más efectivo solamente cambiar los elementos en la pantalla en reacción a la entrada, en lugar de duplicar el contenido a través de las distintas pantallas. Si bien en esta lección únicamente se presentará el [\\`setProperty()\\`(#fff176)](/docs/applab/setProperty/), los estudiantes tendrán la posibilidad de conocer el comando asociado [\\`getProperty()\\`(#fff176)](/docs/applab/getProperty/) en las próximas lecciones.",
          "student_overview": "En esta lección, los estudiantes comenzarán a crear aplicaciones que permitan una gran cantidad de interacción y funcionalidad del usuario... ¡aunque sean solo una pantalla!"
        },
        "csd6-2021/The Circuit Playground": {
          "name": "El Circuito Playground",
          "overview": "En esta lección, los estudiantes tendrán su primera oportunidad de escribir programas que utilicen el Circuit Playground. Después de realizar una inspección visual del tablero y crear hipótesis sobre posibles funcionalidades, los estudiantes trabajan en línea, donde aprenderán a escribir aplicaciones que controlan un LED. Al combinar las pantallas del App Lab con el Circuit Playground, pueden empezar a integrar elementos del tablero como un dispositivo de salida mientras utilizan el App Lab para la entrada del usuario.",
          "preparation": "-   Asegúrese que las computadoras cuenten con los drivers y el software necesario para conectar el Circuit Playground ([puede encontrar los detalles aquí](//studio.code.org/maker/setup))\n-   Prepare un tablero y un cable USB para cada pareja de estudiantes",
          "purpose": "Como esta lección es la primera introducción al uso del Circuit Playground, los estudiantes contarán con el tiempo suficiente para acostumbrarse a conectar el hardware. Aprovechando sus conocimientos del controlador de eventos en el App Lab, podremos configurar rápidamente una aplicación que demuestre el potencial de la computación física, mostrándoles un poco más que un simple LED de color rojo.",
          "student_overview": "En esta lección, los estudiantes conocerán el Circuit Playground, el tablero de circuito que se utilizará en el resto de esta unidad. "
        },
        "csd6-2021/Input Unplugged": {
          "name": "Entrada Desconectada",
          "overview": "Como preparación para profundizar en la programación con el App Lab, los estudiantes explorarán de qué manera los distintos programas escritos en el Game Lab y App Lab manejan las entradas de los usuarios. Después de comparar y contrastar los enfoques que vieron en los ejemplos de aplicaciones, los estudiantes formarán grupos para representar dos modelos diferentes de entrada (condicionales en un ciclo infinito y eventos asincrónicos) y entender mejor cómo funcionan.",
          "preparation": "-   Prepare los recursos para mostrar ejemplos de los programas para toda la clase.\n-   La mitad de un mazo de cartas para cada grupo de tres estudiantes o [deck-of-cards.js.org](https://deck-of-cards.js.org).\n-   Imprima una copia de la guía de actividades para cada equipo de 4 estudiantes.",
          "purpose": "Esta lección busca ayudar a los estudiantes en la transición desde el _ciclo de dibujo_ y el modelo de condicionales de entrada utilizado en el Game Lab, hacia el modelo dirigido por eventos que se utiliza en el App Lab. Si bien en la unidad 4, los estudiantes experimentaron y aprendieron un poco acerca de la programación dirigida por eventos, una mayor comprensión de cómo funcionan los eventos los ayudará a responder ante aquellos que se presenten al usar el Circuit Playground más adelante en esta unidad.",
          "student_overview": "En esta lección, los estudiantes experimentarán dos formas diferentes en que una aplicación puede recopilar información de un usuario, mientras aprenden más sobre el modelo de programación basado en eventos que se usa en App Lab."
        },
        "csd6-2021/Board Events": {
          "name": "Eventos del tablero",
          "overview": "Esta lección es una transición en la que los estudiantes pasarán de ver al Circuit Playground como solamente un dispositivo de salida a utilizarlo como una herramienta de entrada y salida. Comenzando con los botones de hardware y alternando los botones de hardware y el switch, los estudiantes aprenderán a usar [\\`onBoardEvent()\\`(#f78183)](/docs/applab/onBoardEvent/), de forma análoga a [\\`onEvent()\\`(#fff176)](/docs/applab/onEvent/), con el fin de recibir entradas provenientes de sus Circuit Playgrounds.",
          "purpose": "Esta lección marca la transición entre utilizar el tablero únicamente como un dispositivo de salida a usarlo como entrada y salida. El bloque [\\`onBoardEvent()\\`(#f78183)](/docs/applab/onBoardEvent/) funciona de manera muy parecida al [\\`onEvent()\\`(#fff176)](/docs/applab/onEvent/), la mayor diferencia entre ambos es que el primer parámetro es un objeto del tablero (una variable) mientras que [\\`onEvent()\\`(#fff176)](/docs/applab/onEvent/) utiliza una identidad de elemento de interfaz de usuario (una secuencia).",
          "student_overview": "En esta lección, los estudiantes aprenderán cómo usar los botones de hardware y el interruptor del Circuit Playground que le dará la entrada al Circuit Playground."
        },
        "csd6-2021/Getting Properties": {
          "name": "Obtener propiedades",
          "overview": "Esta lección introduce a los estudiantes el bloque [\\`getProperty\\`(#fff176)](/docs/applab/getProperty/), el cual les permitirá acceder a las propiedades de distintos elementos usando código. Para comenzar, los estudiantes practicarán el uso del bloque para determinar lo que el usuario ha ingresado en varios elementos de interfaz de usuario. Luego, los estudiantes utilizarán [\\`getProperty\\`(#fff176)](/docs/applab/getProperty/) y [\\`setProperty\\`(#fff176)](/docs/applab/setProperty/) junto al patrón contador para hacer que los elementos se muevan a través de la pantalla. En esta lección, los estudiantes también conocerán otros elementos como el control deslizante, y un nuevo activador de evento: el `onChange`.",
          "purpose": "Hasta ahora, los estudiantes sólo han utilizado el evento que consiste en la pulsación de un botón para recopilar la información de la pantalla del App Lab. Utilizar [\\`getProperty\\`(#fff176)](/docs/applab/getProperty/) permite a los estudiantes recopilar una gran cantidad de información del usuario. Obtener las propiedades también permite a los estudiantes crear programas que no requieran conocer las propiedades de un elemento cuando el código está escrito, haciéndolos más dinámicos e interactivos. Estas características serán importantes cuando los estudiantes logren crear un juego interactivo en las próximas lecciones. ",
          "student_overview": "En esta lección, los estudiantes aprenderán cómo acceder a las propiedades de diferentes elementos con código. "
        },
        "csd6-2021/Analog Input": {
          "name": "Entrada Analógica",
          "overview": "En esta lección, los estudiantes explorarán cómo tres sensores análogos (sonido, luz y temperatura) se pueden utilizar para escribir programas que respondan a los cambios en el ambiente. El uso de estos sensores marcará un hito en la forma en la que los usuarios interactúan con un programa. Al usar estos sensores como una entrada, no será necesario que el usuario interactúe directamente con la aplicación, y si lo hace será más bien de manera indirecta y sin darse cuenta.",
          "preparation": "-   Prepare el video [r analog-digital-video/csd/2021]\n-   Si su salón de clases no cuenta con mucha luz, será necesario tener a su alcance linternas u otras fuentes de iluminación para probar los sensores de luz",
          "purpose": "Esta lección se basa en la lección anterior al introducir sensores análogos. Estos sensores efectúan una conversión de lo análogo a lo digital, y permiten a los programas detectar cosas representadas por un número de 10 bits (0-1023).",
          "student_overview": "En esta lección, podrás explorar las entradas análogas en el Circuit Playground, escribiendo programas que respondan al entorno a través de sensores."
        },
        "csd6-2021/The Program Design Process": {
          "name": "El Proceso de Diseño de Programas",
          "overview": "Esta lección presenta a los estudiantes el proceso que usarán para diseñar programas propios a lo largo de esta unidad. Este proceso se centra en una guía de proyecto que pide a los estudiantes que esbocen sus pantallas, identifiquen elementos del Circuit Playground a utilizar, definan variables, y describan eventos antes de que empiecen a programar. Este proceso es similar al proceso de diseño de juegos que utilizamos en la Unidad 3. En esta lección, los estudiantes comienzan por un \"juego de la cuerda\" donde se oculta el código. Debaten sobre cómo tendrían que ser los componentes del tablero, los eventos y las variables para crear el programa. Luego, se les da una guía de proyecto terminado que muestra una forma de implementar el proyecto. Los estudiantes realizan este proceso a través de una serie de niveles. Al final de la lección, tienen la oportunidad de hacer mejoras al programa para personalizarlo.",
          "preparation": "-   Entregue a los estudiantes copias de la guía de proyecto",
          "purpose": "Esta lección permite que los estudiantes practiquen el desarrollo de un programa a gran escala, preparándolos para que más adelante puedan hacerlo de manera independiente. Mientras que las lecciones anteriores se enfocaban en el desarrollo de habilidades para utilizar elementos específicos del Circuit Playground y conceptos de programación relacionados con este, esta lección se enfoca en combinar todo lo aprendido hasta ahora para crear un programa más complejo. Esta lección muestra el proceso de desarrollo de un software, entregando a los estudiantes una guía de proyecto previamente completada, el código inicial, y guiándolos en todos los pasos para la implementación de su proyecto. En las próximas lecciones, los estudiantes deberán completar gran parte de esta guía por si solos, y para el proyecto final, seguirán todo este proceso de forma independiente.",
          "student_overview": "En esta lección, aprenderás sobre el proceso que usarás para diseñar tus propios programas a lo largo de esta unidad. "
        },
        "csd6-2021/Project: Make a Game": {
          "name": "Proyecto - Crear un Juego",
          "overview": "En este proyecto, los estudiantes diseñarán y elaborarán un juego que utilice las nuevas entradas y salidas que ahora tienen a su disposición. Este es un proyecto de carácter abierto, que empodera a los estudiantes a analizar más a fondo la utilización de salidas físicas en una aplicación, mientras tienen la oportunidad de revisar el proceso de desarrollo de un programa y prueban las nuevas características disponibles con la ayuda del Circuit Playground.",
          "preparation": "-   Imprima una copia de la guía del proyecto para cada grupo de estudiante\n-   Imprima una copia de la rúbrica para cada estudiante",
          "purpose": "Esta evaluación de final de capítulo es un buen momento para que los estudiantes apliquen todo lo aprendido en una sola actividad (controladores de eventos, usar el tablero como una salida, etc.). El proyecto es de carácter abierto y permite que los estudiantes analicen más a fondo el uso de salidas físicas en una aplicación. Esta es una buena oportunidad para motivar a los estudiantes a revisar los programas escribieron anteriormente en esta unidad o en la unidad 4 y analizar cómo se beneficiarían al usar el tablero para la salida de información.",
          "student_overview": "En esta lección, tomarás lo que aprendiste en el capítulo uno y desarrollarás una aplicación de tu propio diseño que usa la pizarra para generar información."
        },
        "csd6-2021/Arrays and Color LEDs": {
          "name": "Arreglos y LED de Colores",
          "overview": "Un arreglo es una colección ordenada de elementos, generalmente del mismo tipo. En esta lección, los estudiantes aprenden maneras de acceder a un valor específico o aleatorio de una lista mediante su índice. Luego, aprenden a acceder al arreglo colorLEDs que controla el comportamiento de los LED de colores en Circuit Playground. Los estudiantes controlarán el color y la intensidad de cada LED, y luego usarán lo que han aprendido para programar patrones luminosos y crear un espectáculo de luces en el Circuit Playground.",
          "purpose": "Los arreglos son estructuras de datos comunes en las ciencias de la computación, y se utilizan para almacenar y acceder a la información de forma más fácil. Esta lección prepara a los estudiantes para acceder a elementos dentro de estos conjuntos, sin embargo, aún no se presenta la creación y modificación de arreglos, los estudiantes aprenderán acerca de esto en la próxima lección. Los estudiantes conocerán el anillo de LED de colores, el cual será presentado como un arreglo llamado [\\`colorLeds\\`(#f78183)](/docs/applab/colorLeds/). Los estudiantes aprenden cómo acceder y controlar cada LED en el arreglo de manera independiente, preparándolos para acceder a varios LEDs en la iteración del próximo capítulo.",
          "student_overview": "En esta lección, aprenderás cómo acceder al arreglo colorLEDs que controla el comportamiento de los LED de color en el Circuit Playground. "
        },
        "csd6-2021/Making Music": {
          "name": "Crear música",
          "overview": "En esta lección, los estudiantes utilizarán el timbre para crear sonidos, notas y canciones. Esta lección comienza con una breve reseña de los parámetros de frecuencia y duración del timbre para continuar con el concepto de las notas. Las notas permiten a los estudiantes restringirse a las frecuencias que se usan en la música occidental (Western) y les brindan una capa de abstracción que los ayuda a entender cuáles frecuencias pueden sonar bien juntas. Cuando los estudiantes ya sean capaces de tocar notas en el timbre, utilizarán arreglos para mantener y tocar secuencias de notas, formando canciones simples.",
          "purpose": "En esta lección, los estudiantes podrán expresar su creatividad al utilizar el timbre, al presentar el concepto de “nota” y al utilizar arreglos para mantener colecciones secuenciales de notas. Al utilizar notas en lugar de frecuencias, los estudiantes contarán con una capa de abstracción que les facilitará identificar los sonidos que pueden ser utilizados para crear música. Los arreglos proporcionarán una forma de agrupar sonidos en una secuencia, para que se puedan reproducir como música. Usar el bloque `playNotes` para repetir un conjunto de notas establecerá bases conceptuales para que los estudiantes puedan trabajar con ciclos `for` en la próxima lección.",
          "student_overview": "En esta lección, utilizarás la función de timbre de Circuit Playground en toda su extensión al producir sonidos, notas y canciones. "
        },
        "csd6-2021/Arrays and For Loops": {
          "name": "Arreglos y Ciclos for",
          "overview": "Utilizar un _ciclo for_ para repetir todos los elementos de un arreglo es un recurso realmente útil en la mayoría de los lenguajes de programación. En esta lección, los estudiantes aprenden los aspectos básicos de cómo se puede usar un _ciclo for_ para repetir código, y luego lo combinan con lo que han aprendido sobre arreglos para escribir programas que procesen todos los elementos de un arreglo. Los estudiantes utilizan ciclos for para pasar por un elemento de la lista a la vez sin tener que escribir código para cada elemento. Hacia el final de la lección, los estudiantes aplicarán esto con la lista `colorLed` en el tablero para crear una aplicación que cambie todos los LED cada vez que se hace clic en un botón.",
          "purpose": "A medida que los estudiantes comienzan a usar arreglos de forma más frecuente, surge un patrón común en el que desean ejecutar código en cada uno de los elementos de un arreglo. Si bien los ciclos for son estructuras generalmente útiles para repetir código, son particularmente útiles para iterar sobre un arreglo. En esta lección nos basamos en la comprensión de arreglos que los estudiantes han desarrollado en las dos últimas lecciones, al introducir el ciclo for, el cual combina una variable, el patrón contador, y una condicional, todo en una misma estructura.",
          "student_overview": "En esta lección, aprenderás a combinar listas y ciclos for para escribir código que afecte a todos los elementos de una lista, independientemente de su longitud. "
        },
        "csd6-2021/Accelerometer": {
          "name": "Acelerómetro ",
          "overview": "En esta lección los estudiantes explorarán el acelerómetro y sus funciones. Se familiarizan con sus eventos y propiedades, y crearán una serie de programas utilizando el acelerómetro de forma similar a como se utiliza en otras aplicaciones reales.",
          "purpose": "Esta lección da a los estudiantes una oportunidad para trabajar con el sensor del acelerómetro y explorar sus propiedades de orientación y eventos de tablero específicos. Los estudiantes conocerán los propósitos y usos del acelerómetro en dispositivos y programas reales, y crearán sus propias versiones de algunas de estas aplicaciones. Para hacer esto, los estudiantes deberán recordar lo que aprendieron acerca del patrón contador para crear aplicaciones funcionales basadas en acelerómetros. ",
          "student_overview": "En esta lección, explorarás el acelerómetro y sus capacidades. "
        },
        "csd6-2021/Functions with Parameters": {
          "name": "Funciones con parámetros",
          "overview": "Esta lección comienza con un repaso rápido de los parámetros, en el contexto de los bloques del App Lab que los estudiantes han visto en las últimas lecciones. A continuación, los estudiantes observarán ejemplos de parámetros que se encuentran dentro de funciones creadas por usuarios en el App Lab e intentarán utilizar parámetros para crear y llamar a funciones por sí solos con el fin de poder utilizarlas para controlar varios elementos de una misma pantalla. Más tarde, los estudiantes utilizarán ciclos for para iterar sobre un arreglo, pasando cada elemento a una función. Al concluir esta lección, los estudiantes aplicarán sus conocimientos en la creación de un juego que consiste en capturar estrellas.",
          "purpose": "En las lecciones anteriores, los estudiantes utilizaron funciones para definir bloques de código que pueden utilizarse en distintos lugares dentro de un programa. En esta lección los estudiantes aprenderán a utilizar parámetros para generalizar el propósito de una función. Los parámetros permiten que el programa pueda especificar los detalles del desempeño de una función cuando se le llama, en lugar de cuando se define el programa. Si bien en las unidades anteriores los estudiantes ya habían aprendido acerca de las funciones con parámetros, esta es la primera vez que se les pedirá definir o llamar sus propias funciones. Los estudiantes también aprenderán a utilizar el ciclo for iterativamente para pasar los elementos de un arreglo a una función como parámetros, permitiéndoles usar la misma función en varios elementos en la pantalla.",
          "student_overview": "En esta lección, crearás y llamarás a funciones con parámetros, usará ciclos for para iterar sobre una arreglo, y finalmente usará lo que has aprendido para crear un juego de captura de estrellas."
        },
        "csd6-2021/Circuits and Physical Prototypes": {
          "name": "Circuitos y Prototipos Físicos",
          "overview": "Como preparación para el capítulo final de este proyecto, los estudiantes aprenderán a desarrollar el prototipo de un objeto físico que incluya al Circuit Playground, Utilizando un modelo de la guía de planificación del proyecto, los estudiantes aprenderán a conectar circuitos simples que sean capaces comunicar el diseño deseado de un producto, utilizando materiales económicos y fáciles de encontrar como el cartón y la cinta para ductos.",
          "preparation": "-   Reúna los materiales para la construcción del prototipo:\n    -   Materiales para la estructura (cartón, cartulinas, etc.)\n    -   Material para las conexiones (cinta adhesiva, pegamento, silicona caliente, etc.) \n    -   Herramientas de construcción (tijeras, corcheteras, etc.)\n    -   Otros materiales (vasos, apretadores, platos de papel, etc.)\n-   Prepare los materiales para el cableado:\n    -   Cable con pinzas (incluidos en el kit del circuit Playground)\n    -   LED (incluidos en el kit del Circuit Playground)\n    -   Otros materiales conductores (cables, clips para papel, papel aluminio, etc)\n    -   Botones e interruptores (opcional)\n-   Imprima una copia de la guía del proyecto para cada grupo de 2 ó 3 estudiantes\n-   Prepare un botón de ejemplo para mostrarlo a la clase",
          "purpose": "El objetivo de esta lección es mostrar a los estudiantes cómo sus ideas acerca del diseño físico de un producto pueden impactar el proceso de un prototipo y presentar nuevas habilidades prácticas que facilitarán la elaboración de sus proyectos finales.",
          "student_overview": "En esta lección, cablearás circuitos simples para crear un prototipo físico utilizando materiales de bajo costo y fáciles de encontrar."
        },
        "csd6-2021/Project: Prototype an Innovation": {
          "name": "Proyecto - Prototipo de una Innovación",
          "overview": "En este proyecto de finalización de curso, los estudiantes trabajarán en equipos para desarrollar y probar el prototipo de un dispositivo computacional innovador basado en el Circuit Playground. Los grupos crearán programas que permitan interacciones de usuario únicas e interesantes utilizando las entradas y salidas disponibles en el tablero. ",
          "preparation": "-   Recolecte los materiales para la construcción del prototipo físico, como:\n    -   Cartón\n    -   Tijeras\n    -   Cinta adhesiva\n    -   Pegamento\n    -   Papel aluminio\n-   Imprima una copia de la guía del proyecto para cada pareja\n-   Imprima una copia de la revisión por pares para cada estudiante\n-   Imprima una copia de la rúbrica para cada estudiante",
          "purpose": "Esta lección es la culminación de la unidad 6 y brinda a los estudiantes la oportunidad de construir un proyecto por sí solos y a partir de cero, utilizando las herramientas del fabricante (Maker Toolkit). Si bien este proyecto es una buena oportunidad para que los estudiantes demuestren sus habilidades técnicas, también deberán demostrar otras capacidades como: la colaboración con sus compañeros, la entrega de retroalimentación constructiva y la resolución de problemas iterativos de los obstáculos que se presenten. Este proyecto debería ser en su mayoría dirigido por el estudiante, y proporcionar una conclusión inspiradora y memorable a la última unidad de Descubrimientos de las Ciencias de la Computación.",
          "student_overview": "En este proyecto final, tendrás el desafío de desarrollar y probar un prototipo de un dispositivo que interactúe con el mundo físico a través de varios tipos de entrada y salida y permita interacciones de usuario únicas e interesantes. "
        },
        "csd6-2021/CS Discoveries Post-Course Survey": {
          "name": "Encuesta de fin de curso de Descubrimientos de Ciencias de la Computación"
        },
        "csd5-2021/Representation Matters": {
          "name": "Asuntos de Representación",
          "overview": "**Pregunta del día: ¿Cómo afectan los datos en las decisiones que tomamos cada día?**\n\nEn la primera lección de la unidad de datos, los estudiantes obtienen una visión general de lo que son los datos y de cómo se utilizan para resolver problemas. Los estudiantes comenzarán la lección con un breve análisis y luego realizarán una reflexión común para comprender qué son los datos. A continuación, se dividen en grupos y utilizan un conjunto de datos para recomendar varios tipos de comidas a personas con diversos criterios. Cada grupo tiene las opciones de comidas representadas de distintas maneras (imágenes, recetas, menú, información nutricional), algunas representaciones tienen más ventajas que otras. Finalmente, los grupos comparan sus respuestas y analizan de qué manera el tener distintas representaciones de los datos de las comidas influyó en la forma en la que resolvieron los distintos problemas.",
          "preparation": "-   Imprima copias de los Datos de Comidas para que cada grupo pueda tener una de las cuatro páginas\n-   Imprima una copia de la guía de actividades para cada grupo",
          "purpose": "Esta lección presenta un número importante de ideas que los estudiantes explorarán a lo largo de este capítulo. Podrán ver cómo los mismos objetos pueden ser representados de distintas formas. En el capítulo 1, aprenderán los distintos sistemas de representación que las computadoras utilizan para representar la información. También descubrirán la importancia de la representación cuando utilizamos datos para tomar decisiones. En el segundo capítulo de esta unidad, los estudiantes estudiarán más detenidamente las formas en las que los humanos y las computadoras pueden hacer uso de estos datos para tomar decisiones.",
          "student_overview": "**Pregunta del día: ¿Cómo afectan los datos en las decisiones que tomamos cada día?**\n\nEn esta lección, explorarás qué son los datos y cómo se utilizan para resolver problemas. "
        },
        "csd5-2021/Patterns and Representation": {
          "name": "Patrones y representación",
          "overview": "**Pregunta del día: ¿Cómo podemos crear un sistema para representar la información?**\n\nEn esta lección, los estudiantes crearán su propio sistema para representar información. Comenzarán con una lluvia de ideas de los distintos sistemas que ya utilizan para representar las respuestas sí y no. Luego trabajarán en grupos pequeños para crear un sistema que pueda representar a cada letra en el alfabeto usando distintas tarjetas. Estas tendrán uno de los 6 dibujos posibles (6 animales, 6 colores, etc.), por lo que para representar todo el alfabeto los estudiantes tendrán que utilizar patrones de varias tarjetas en representación de cada letra. Los estudiantes crearán mensajes con sus sistemas y los intercambian con otros grupos para asegurarse de que el sistema funcione correctamente. En el análisis final, la clase revisará las ventajas y desventajas de los distintos sistemas en funcionamiento, reflexionando acerca de las características que todos estos tienen en común, también reconocerán que hay muchas soluciones posibles para este problema y que lo importante es que todos utilicen el mismo sistema arbitrario para comunicarse.",
          "preparation": "-   Imprima una copia de la guía de actividades para cada grupo de 2-3 estudiantes\n-   Imprima y corte una copia del recurso manipulativo para cada grupo de 2-3 estudiantes",
          "purpose": "En esta lección, los estudiantes explorarán por sí mismos las cualidades de un buen sistema para representar información. A través de la creación y la comprobación de sus sistemas llegarán a la conclusión de que:\n\n1.  Existen muchos más sistemas con los que se puede representar la información\n2.  Las personas deben acordar una serie de reglas para que estos sistemas funcionen\n\nLas características de los sistemas que los estudiantes crearán en esta lección servirán como punto de referencia en las siguientes lecciones cuando deban explorar los sistemas de representación utilizados actualmente en las computadoras.\n\nEn las siguientes lecciones se presentará a los estudiantes el concepto de binario y cómo las computadoras utilizan señales on-off o los números “0 y 1” para representar información. Aunque es posible que este concepto aparezca en la actividad inicial, debería introducirse formalmente en la siguiente lección.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos crear un sistema para representar la información?**\n\nEn esta lección, crearás un sistema para representar información trabajando con un grupo para crear un sistema que pueda representar cualquier letra del alfabeto usando solo una pila de tarjetas. "
        },
        "csd5-2021/ASCII and Binary Representation": {
          "name": "ASCII y representación binaria",
          "overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar letras y palabras?**\n\nEn esta lección, los estudiantes aprenderán a utilizar su primer sistema binario para codificar información, el sistema ASCII que es capaz de representar letras y otros caracteres. Para comenzar la lección, el docente introduce el tema comunicando a los estudiantes que las computadoras deben representar la información utilizando “on” u “off”. Luego, se presenta a los estudiantes el sistema ASCII, el cual es utilizado para representar texto usando símbolos binarios. Los estudiantes practicarán cómo utilizar este sistema antes de codificar su propio mensaje en él. Al finalizar la lección se llevará a cabo una conversación en la que se resumirán los objetivos de aprendizaje claves de esta actividad.",
          "preparation": "-   Imprima copias de la guía de actividades - 1 para cada estudiante\n-   Imprima copias de el recurso de texto ASCII - 1 para cada estudiante",
          "purpose": "Esta lección es una oportunidad para conectar a los estudiantes con las herramientas que se utilizan en el mundo real y repasar los contenidos que los estudiantes aprendieron en las lecciones anteriores. Los estudiantes aprenderán el concepto de binario, que es un “bit” de información y podrán practicar utilizando un sistema binario. Los estudiantes repasarán el hecho de que los patrones de bits pueden ser utilizados para representar información y reflexionarán acerca de por qué el tener patrones de la misma longitud (en este caso 7 bits) hace que sea más fácil la utilización de un sistema.",
          "student_overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar letras y palabras?**\n\nEn esta lección, aprenderás sobre el sistema binario y ASCII utilizado para representar texto. "
        },
        "csd5-2021/Representing Images": {
          "name": "Representar imágenes",
          "overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar imágenes?**\n\nEn esta lección, los estudiantes aprenderán cómo las computadoras pueden representar imágenes. Para comenzar esta lección, tendrán que plantearse el desafío de demostrar toda la complejidad de una visión en un patrón binario. Mediante una serie de imágenes que muestran esta transformación, se introducirá el concepto de separar las imágenes en pequeños cuadrados o “pixeles”, los que pueden encenderse o apagarse individualmente para crear una imagen completa. Luego, los estudiantes completan una serie de desafíos utilizando la Herramienta de Pixelación para dibujar imágenes en blanco y negro. Los juegos han sido diseñados para demostrar los desafíos que implica esta forma de representar imágenes. En la actividad de cierre, los estudiantes harán conexiones entre el sistema para representar imágenes y el sistema para representar texto que aprendieron en la lección anterior.",
          "preparation": "-   Practicar utilizando la herramienta de pixelación por aproximadamente 10 minutos como preparación para responder a las preguntas",
          "purpose": "Esta lección presenta otro sistema utilizado comúnmente para representar información en binario. Lo más evidente al realizar la actividad con la herramienta de pixelación, será que 1 significa “On” y que 0 significa “Off”. Sin embargo, algo que no será tan notorio es que el ancho y alto de la imagen deberá coincidir para poder interpretar la información de la imagen binaria. Finalmente, esta es una oportunidad para explorar la elaboración de los sistemas de representación de información binaria. Es muy difícil representar una imagen que no ha sido procesada. La idea de convertirla en una cuadricula de cuadrados en blanco y negro simplifica este desafío y lo convierte en un problema que los científicos de la computación sabrían cómo solucionar. Si bien la actividad principal de esta lección dará la impresión de únicamente teclear unos y ceros, en realidad revela mucho acerca de la idea que las personas tienen sobre la representación de información en binario, y de los desafíos e intercambios se generan como resultados.",
          "student_overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar imágenes?**\n\nEn esta lección, continuarás explorando cómo puedes crear sistemas para representar información, pero esta vez utilizando imágenes binarias."
        },
        "csd5-2021/Representing Numbers": {
          "name": "Representación de los Números",
          "overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar números?**\n\nEn esta lección, los estudiantes aprenderán acerca del sistema binario. Con un conjunto de tarjetas que representan la ubicación de los valores en un sistema de números binario (base-2) a través de una serie de puntos, los estudiantes podrán convertir bits en “on” y “off” al poner las tarjetas hacia arriba o hacia abajo, luego observarán los números que los distintos patrones arrojan como resultado. Finalmente, los estudiantes extienden el patrón a un sistema genérico de 4 bits.",
          "purpose": "Los estudiantes aprenderán a utilizar el sistema binario para representar números enteros. A diferencia del sistema ASCII, el cual es representado como un mapeo arbitrario de patrones de bit a caracteres, los números binarios son presentados en el contexto de patrones compuestos por números. Los estudiantes utilizarán estos patrones para determinar las representaciones binarias de los distintos números, en lugar de solo analizarlos en una tabla.",
          "student_overview": "**Pregunta del día: ¿Qué sistemas utilizan las computadoras para representar números?**\n\nEn esta lección, aprenderás sobre el sistema numérico binario real."
        },
        "csd5-2021/Combining Representations": {
          "name": "Combinar representaciones",
          "overview": "**Pregunta del día: ¿Cómo pueden distinguir las computadoras la diferencia entre los códigos binarios para letras, números o imágenes?**\n\nEn esta lección, los estudiantes utilizarán los tres tipos de sistemas de representación binaria (caracteres ASCII, número binario e imágenes) para decodificar la información de un registro. Después de analizar y decodificar una serie de bits, se les explica a los estudiantes que, para comprender la información binaria, primero deben entender el sistema que se está utilizando y el significado de la información codificada. Luego decodificarán un registro basado en una estructura  que se utiliza para representar a una mascota.",
          "preparation": "-   Asegúrese de tener la herramienta binaria de 8 bits y la tabla de binario a ASCII listos para practicar con la clase",
          "purpose": "En lecciones anteriores, los estudiantes utilizaron diferentes sistemas de representación de forma independiente. Aquí, analizarán varios sistemas de representación que son utilizados dentro del mismo registro. Deben comprender que lo más importante no es solamente conocer los diversos códigos, sino también crear reglas acerca de los códigos que se están utilizando y en qué puntos del registro hacerlo.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden distinguir las computadoras la diferencia entre los códigos binarios para letras, números o imágenes?**\n\nEn esta lección, combinarás ASCII, binario e imágenes para explorar formas de codificar tipos de información más complejos. "
        },
        "csd5-2021/Keeping Data Secret": {
          "name": "Mantener los datos en secreto",
          "overview": "**Pregunta del día: ¿Cómo podemos mantener los datos en secreto y protegerlos de su uso indebido?**\n\nLos estudiantes continúan explorando la representación de los datos en una tarjeta perforada y comienzan a evaluar si es conveniente mantener alejados del dominio público aquellos datos que contienen información personal o confidencial. Una vez que los estudiantes comprenden las razones por las que se deben proteger los datos, aprenden el sistema de encriptación binaria, el cual les permitirá encriptar y desencriptar datos en sus tarjetas perforadas, para que luego puedan enviarse mensajes secretos utilizando este método. La lección termina con un análisis acerca de la importancia de proteger nuestra información y cómo podemos lograr esto a través de encriptado.",
          "purpose": "Mientras trabajaban con la codificación y decodificación de datos, los estudiantes no estaban enfocados en proteger los datos utilizados, incluso cuando estos contienen información personal y confidencial (como, por ejemplo, sus direcciones o números de teléfono). En esta lección, reflexionarán acerca de las formas en las que pueden asegurar que sólo el destinatario del mensaje pueda leer los datos que ellos están enviando. La lección se enmarca en situaciones de la vida real, como, por ejemplo, proteger el historial médico. Esto permite que los estudiantes puedan apreciar como este asunto se extiende a otros escenarios de la vida real que puedan afectar sus vidas sin que ellos estén conscientes de esto.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos mantener los datos en secreto y protegerlos de su uso indebido?**\n\nEn esta lección, explorarás diferentes niveles de seguridad, observarás la importancia de la privacidad y aprenderás a cifrar información."
        },
        "csd5-2021/Project - Create a Representation": {
          "name": "Crear una Representación",
          "overview": "**Pregunta del día: ¿Cómo puedo representar información compleja utilizando sistemas binarios?**\n\nEn esta lección, los estudiantes diseñan una estructura para representar su día perfecto utilizando los sistemas de representación binaria que aprendieron en el capítulo anterior. Para comenzar, escribirán una breve descripción de su día perfecto y luego lo revisarán con un compañero para identificar las piezas claves de la información que creen que una computadora pueda registrar. Como clase, los estudiantes decidirán de qué forma una tarjeta perforada con bytes de información será interpretada para representar aquellas piezas de información. Luego, los estudiantes utilizarán el ASCII, número binario y los formatos de imagen aprendidos para representar sus días perfectos. Intercambiarán tarjetas perforadas e intentarán decodificar el día perfecto de los otros estudiantes, La lección finaliza con una reflexión.",
          "purpose": "Esta lección impulsa a los estudiantes a tratar de resolver algunos de los desafíos de representar información a una computadora. Las computadoras son buenas representando algunos tipos de información, como números o caracteres, pero esto requiere que las personas representen información de formas que no siempre capturan la experiencia análoga de un objeto o una experiencia. Este proyecto también cumple la función de un proyecto acumulativo del capítulo, reuniendo los distintos sistemas de representación ya aprendidos por los estudiantes. A medida que avanzan al siguiente capítulo, los estudiantes verán más de cerca las formas en las que la información es utilizada para tomar decisiones, después de haber sido convertida a un formato que puede ser insertado a una computadora.",
          "student_overview": "**Pregunta del día: ¿Cómo puedo representar información compleja utilizando sistemas binarios?**\n\nEn esta lección, explorarás cómo usar los formatos ASCII, binario y de imagen para representar tu día perfecto."
        },
        "csd5-2021/Problem Solving and Data": {
          "name": "La resolución de problemas y los datos",
          "overview": "**Pregunta del día: ¿Cómo podemos utilizar datos para resolver los problemas en nuestra comunidad?**\n\nEn esta lección, los estudiantes utilizan el proceso de resolución de problemas que aprendieron al inicio de este curso para resolver problemas de datos. Luego de repasar el proceso, la clase debe tomar una decisión: construir una biblioteca, un refugio de animales o una estación de bomberos en una ciudad. Los estudiantes trabajan en equipo para buscar información en Internet que los ayude a decidir lo que deberían construir. Luego, utilizar esta información para elaborar un argumento que pueda convencer al consejo municipal de que su elección es la correcta. Después, deben esquematizar lo que han hecho al proceso de resolución de problemas, utilizado durante todo el curso, comparando el proceso de resolución de problemas utilizado en general a su aplicación específica en problemas de datos.",
          "purpose": "Durante la primera mitad de esta unidad, los estudiantes han explorado como las computadoras pueden representar distintos tipos de información o datos. En esta lección, aprenderán como los datos pueden ser utilizados para resolver problemas del mundo real, repasando el proceso de resolución de problemas y utilizándolo en el análisis de datos.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar datos para resolver los problemas en nuestra comunidad?**\n\nEn esta lección, decidirás en qué se necesitan más recursos en una ciudad para ver cómo usar los datos para resolver problemas."
        },
        "csd5-2021/Structuring Data": {
          "name": "Estructurar Datos",
          "overview": "**Pregunta del día: ¿Cómo podemos hacer que el procesamiento de datos sea más fácil para las computadoras?**\n\nEn esta lección, los estudiantes exploran aún más la recopilación e interpretación de datos, incluyendo la limpieza y visualización de estos. Primero, los estudiantes analizarán cómo el presentar datos de distintas maneras puede ayudar a las personas a comprenderlos mejor, y luego crearán la visualización de sus propios datos. Utilizando los resultados de una encuesta acerca del ingrediente de pizza preferido de las personas, los estudiantes deberán decidir qué hacer con aquellos datos que no se ajustan al esquema de visualización que eligieron. Finalmente, los estudiantes analizan qué partes de este proceso pueden ser automatizadas por una computadora y cuales necesitan de un humano para tomar decisiones.",
          "purpose": "Esta lección demuestra que los datos sin procesar deben ser interpretados de tal manera que puedan ayudar a las personas a tomar una decisión. Los estudiantes trabajarán tanto en la visualización como en la limpieza de datos, y analizarán cómo los datos pueden ser malinterpretados cuando no se limpian correctamente. Los estudiantes también observarán que los datos deben ser estructurados de una forma en particular para que puedan ser utilizados por una computadora.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos hacer que el procesamiento de datos sea más fácil para las computadoras?**\n\nEn esta lección, aprenderás cómo presentar los datos de diferentes maneras que pueden ayudar a las personas a comprender mejor los datos, así como qué partes del proceso puede realizar una computadora y qué partes necesitan un ser humano. "
        },
        "csd5-2021/Interpreting Data": {
          "name": "Interpretar Datos",
          "overview": "**Pregunta del día: ¿De qué forma los patrones de datos pueden ayudarnos a tomar decisiones?**\n\nLos estudiantes comienzan la lección analizando una encuesta acerca de las preferencias de pasteles, en la que los encuestados pueden especificar el sabor del pastel y el glaseado. Analizarán las formas en las que el conocer la relación entre las preferencias del pastel y su glaseado los puede ayudar a decidir mejor qué combinación pueden recomendar. Luego, se les presenta la tabulación cruzada, la cual les permitirá graficar las relaciones que existen entre las distintas preferencias.  Utilizarán esta técnica para encontrar relaciones en una encuesta de preferencias, y luego reflexionarán acerca de los distintos tipos de problemas que este proceso les podría ayudar a resolver.",
          "purpose": "En la lección anterior, los estudiantes utilizaron la visualización de datos para tomar una decisión utilizando una sola fuente de datos (los ingredientes de una pizza). En esta lección, aprenderán a encontrar relaciones entre las variables utilizando la tabulación cruzada en las respuestas a las distintas preguntas de una encuesta. El ser capaces de determinar la forma en la que las respuestas a las distintas alternativas se relacionan entre sí, les permitirá hacer predicciones acerca de los usuarios basadas en sus respuestas anteriores. En el proyecto final, utilizarán este mismo tipo de análisis, que los ayudará a diseñar un algoritmo para sus recomendaciones.",
          "student_overview": "**Pregunta del día: ¿De qué forma los patrones de datos pueden ayudarnos a tomar decisiones?**\n\nEn esta lección, aprenderás acerca de la tabulación cruzada que te permitirá graficar las relaciones entre varios datos. "
        },
        "csd5-2021/Making Decisions with Data": {
          "name": "Tomar Decisiones con Datos",
          "overview": "**Pregunta del día - ¿Cómo pueden los patrones en los datos ayudarnos a tomar decisiones?**\n\nEn esta lección, los estudiantes practican la toma de decisiones con datos basados en problemas familiares diseñados para estudiantes de enseñanza media. Los estudiantes trabajan en grupos analizando formas en las que podrían utilizar los datos presentados para tomar una decisión, luego la clase comenta sus decisiones finales. No todas las preguntas tienen respuestas correctas, en algunos casos los estudiantes podrán y deberán decidir si deben o no recolectar más información. La lección finaliza con una discusión acerca de cómo distintas personas pueden llegar a distintas conclusiones a partir de los mismos datos, o cómo el recopilar distintos datos podría haber afectado las decisiones que tomaron.",
          "preparation": "-   Imprima copias de la guía de actividades\n-   Imprima copias del Proceso de Resolución de Problemas con Datos. Entregue una a cada grupo",
          "purpose": "Los estudiantes comienzan a explorar el proceso de resolución de problemas de datos, tomando decisiones con datos que ya han sido recopilados e interpretados. Es posible que los estudiantes de este curso no tengan experiencia con esta forma de tomar decisiones basadas en datos. El  propósito de esta lección es contextualizar este paso del proceso dentro de las decisiones que quizás les sean más habituales en su vida cotidiana.\n\nLa toma de decisiones con datos no es un proceso predecible. Distintas personas podrían sacar distintas conclusiones con los mismos datos. Es importante que los estudiantes tomen sus decisiones de acuerdo a los datos recolectados, pero por lo general esto no sería una respuesta “completamente correcta” Esta lección es una oportunidad para introducir los matices respecto a la toma de decisiones en un contexto controlado y compartido, antes de que los estudiantes comiencen por su parte a recolectar más información.",
          "student_overview": "**Pregunta del día - ¿Cómo pueden los patrones en los datos ayudarnos a tomar decisiones?**\n\nEn esta lección, tendrás la oportunidad de practicar el proceso de resolución de problemas de datos que aprendiste en la lección anterior. "
        },
        "csd5-2021/Automating Data Decisions": {
          "name": "Automatizar Decisiones Basadas en Datos",
          "overview": "**Pregunta del día: ¿Cómo pueden ayudarnos las computadoras a tomar decisiones?**\n\nEn esta lección, los estudiantes verán un ejemplo simple de cómo las computadoras son capaces de completar el paso de la toma de decisiones dentro del proceso de resolución de problemas. Los estudiantes tendrán la tarea de crear un algoritmo que sugiera un lugar de vacaciones. Luego elaborarán las reglas que una computadora podría usar para tomar una decisión de forma automática. Los estudiantes compartirán sus reglas y qué elecciones tomarían utilizando los datos de la clase. Luego aplican sus reglas utilizando los datos de sus compañeros para comprobar si sus reglas tomarían la misma decisión que una persona. La lección concluye con un análisis acerca de las ventajas y desventajas de utilizar a las computadoras para automatizar el proceso de resolución de problemas con datos.",
          "purpose": "Esta lección demuestra a los estudiantes que el último paso del proceso de resolución de problemas con datos, tomar una decisión, es algo que una computadora puede hacer automáticamente con un algoritmo. Se basa en la lección anterior, en la cual se demuestra la importancia de diseñar la forma en la que recolectamos datos para que estos puedan interpretarse. Esto aplica especialmente a las computadoras, las que se ajustan mejor a los datos de selección múltiple que analizarán en esta lección.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden ayudarnos las computadoras a tomar decisiones sobre los datos?**\n\nEn esta lección, examinarás cómo se podría usar una computadora para completar el paso de toma de decisiones del proceso de resolución de problemas de datos."
        },
        "csd5-2021/Problem Solving with Big Data": {
          "name": "La resolución de problemas con Big Data",
          "overview": "**Pregunta del día: ¿Cómo se recolectan nuestros datos y por qué son útiles?**\n\nEn esta lección, los estudiantes podrán ver de qué forma las organizaciones recolectan y utilizan los datos para resolver problemas en el mundo real. A los estudiantes se les presentan tres situaciones que podrán resolver utilizando datos y analizando qué tipos de datos necesitarían y de qué formas podrían recolectarlos. Cada problema está diseñado para reflejar un servicio existente en el mundo real. Después de realizar esta lluvia de ideas, los estudiantes verán un video acerca de un servicio del mundo real y tomarán apuntes acerca de los tipos datos que son recolectados y cómo estos son utilizados por este servicio. En la etapa final de la lección, los estudiantes deberán escribir en sus bitácoras si los datos han sido proporcionados por un usuario activamente, pasivamente o por sensores.",
          "preparation": "-   Imprima copias de la guía de actividades\n-   Prepare el proyector si planea mostrar videos a la clase ",
          "purpose": "En esta lección los estudiantes podrán ver tres ejemplos de cómo se utiliza el proceso de resolución de problemas de datos en problemas del mundo real. Esta lección amplía los tipos de problemas que los estudiantes perciben como problemas de datos, y los ayuda a relacionar lo que saben acerca de los datos con sus propias experiencias utilizando servicios de Internet populares. Los ejemplos también ofrecen una oportunidad para reflexionar acerca del hecho de que ellos mismos, ya sea voluntaria o involuntariamente, producen datos que las compañías recolectan y utilizan.",
          "student_overview": "**Pregunta del día: ¿Cómo se recolectan nuestros datos y por qué son útiles?**\n\nEn esta lección, los estudiantes verán cómo las organizaciones recopilan y utilizan los datos para resolver problemas reales en el mundo real. "
        },
        "csd5-2021/Data and Machine Learning": {
          "name": "Datos y Aprendizaje Automático ",
          "overview": "**Pregunta del día: ¿Cómo pueden “aprender” las máquinas?**\n\nEn esta lección, se presenta a los estudiantes los conceptos de inteligencia artificial (AI) y aprendizaje automático (ML), utilizando la herramienta (widget) de inteligencia artificial para Oceanos. Primero, los estudiantes deberán clasificar objetos en las categorías de “pescar” y “no pescar” en una actividad en la que intentarán eliminar los desechos que están en el océano. Luego, deberán expandir su conjunto de datos de entrenamiento para incluir a otras criaturas marinas que pertenecen al agua. En la segunda parte de la actividad, los estudiantes deberán escoger sus propias etiquetas para clasificar imágenes de peces generadas al azar. Estos datos de entrenamiento se utilizarán para un modelo de aprendizaje automático que debería ser capaz de clasificar nuevas imágenes por sí solo.",
          "preparation": "-   Revise y complete la tabulación en línea. Si no utilizará la aplicación Inteligencia Artificial para Océanos, busque otras alternativas. ",
          "purpose": "En las lecciones anteriores, los estudiantes han visto cómo podemos usar datos para tomar decisiones. También hemos visto que nuestros datos se pueden recolectar constantemente y que el resultado de estos produce una gran cantidad de datos que deben ser analizados, una tarea que es imposible de realizar para un humano. Este tutorial está diseñado para que mediante una breve introducción, los estudiantes aprendan sobre el aprendizaje automático, un tipo de inteligencia artificial que puede ser utilizada para tomar decisiones acerca de grandes cantidades de datos. Los estudiantes explorarán cómo se utilizan los datos de almacenamiento para que un modelo de aprendizaje automático pueda clasificar nuevos datos. ",
          "student_overview": "**Pregunta del día: ¿Cómo pueden “aprender” las máquinas?**\n\nEn esta lección, podrás trabajar con Inteligencia Artificial y aprender sobre el Aprendizaje Automático. "
        },
        "csd5-2021/Project - Make a Recommendation": {
          "name": "Proyecto - Hacer una Recomendación ",
          "overview": "**Pregunta del día: ¿Cómo puedo utilizar datos para hacer mis propias recomendaciones?**\n\nPara finalizar esta unidad, los estudiantes diseñarán un motor de recomendación basado en los datos recolectados y analizados que obtuvieron de sus compañeros. Después de ver el ejemplo de una aplicación de recomendación, los estudiantes trabajarán con la guía de proyecto para completar esta actividad en varios días. En los primeros pasos, los estudiantes deben escoger la decisión con la que quieren ayudar al usuario, los datos que necesitarán para dar la recomendación, elaborarán una encuesta, y recolectarán la información acerca de las elecciones de sus compañeros. Luego, interpretarán los datos y utilizarán lo que han aprendido para crear un algoritmo de recomendación. Finalmente, utilizan sus algoritmos para hacer recomendaciones a algunos de sus compañeros. Los estudiantes realizarán una revisión por pares y harán los ajustes necesarios a sus proyectos, y luego prepararán la presentación que harán frente a la clase.",
          "preparation": "-   Imprima copias de la guía del proyecto\n-   Imprima copias de la rúbrica\n-   Imprima copias de la guía de revisión por pares",
          "purpose": "El propósito de este proyecto es evaluar el segundo capítulo de la unidad. Los estudiantes deberían demostrar que pueden aplicar el proceso de resolución de problemas con datos en un problema o área de su interés. En este proyecto los estudiantes realizarán muchas de las actividades que realizaron en clases, todas ellas en un mismo proyecto. Por ejemplo, los estudiantes ya han utilizado la tabulación cruzada para encontrar relaciones entre las preferencias y han elaborado algoritmos de recomendación, pero en este proyecto, utilizarán las relaciones encontradas en los datos para crear algoritmos. La última etapa de esta actividad no exige una forma específica en la que los estudiantes deben presentar sus trabajos, usted puede elegir el método que más se ajuste a su clase.",
          "student_overview": "**Pregunta del día: ¿Cómo puedo utilizar datos para hacer mis propias recomendaciones?**\n\nEn esta lección, diseñarás un motor de recomendaciones basado en los datos que recopiles y analices de tus compañeros de clase. "
        },
        "csd5-2021/CS Discoveries Post-Course Survey": {
          "name": "Encuesta de fin de curso de Descubrimientos de Ciencias de la Computación"
        },
        "csd3-2021/Programming for Entertainment": {
          "name": "Programación para Entretenimiento",
          "overview": "**Pregunta del día: ¿Cómo se usan las ciencias de la computación en el entretenimiento?**\n\nLos estudiantes analizan los “problemas” causados por el aburrimiento y la autoexpresión, y reflexionan acerca de cómo enfrentan estas situaciones en su vida personal. Luego, exploran el rol que tienen las ciencias de la computación, específicamente la programación, en algunas formas específicas de entretenimiento o como un medio para la autoexpresión.",
          "preparation": "-   Revise los enlaces de recursos de investigación en Code Studio\n-   Imprima una copia de la guía de actividades para cada grupo de tres estudiantes",
          "purpose": "El propósito de esta lección es iniciar esta unidad de programación captando la atención de todos los estudiantes independientemente de sus intereses o experiencias. Si bien en las últimas lecciones los estudiantes deberán desarrollar un videojuego, recomendamos no dar tanta relevancia a _este_ tema. La intención de esta lección es ampliar la perspectiva de los estudiantes acerca de la relevancia de la programación en las distintas formas de entretenimiento y autoexpresión. Esta nueva perspectiva ayudará a los estudiantes durante toda la unidad, en especial cuando deban decidir cómo aplicar las distintas habilidades de programación que aprenden.",
          "student_overview": "estudiantes\n**Pregunta del día: ¿Cómo se usan las ciencias de la computación en el entretenimiento?**\n\nEn esta lección, los estudiantes explorarán cómo la informática, y específicamente la programación, desempeña un papel en el entretenimiento o como vehículo para la autoexpresión. "
        },
        "csd3-2021/Plotting Shapes": {
          "name": "Trazar Formas",
          "overview": "**¿Cómo podemos comunicar de forma clara lo que queremos dibujar en la pantalla?**\n\nLos estudiantes exploran los desafíos al querer comunicar cómo dibujar con figuras y utilizan una herramienta que puede solucionar este problema en el Game Lab. La actividad inicial muestra los desafíos al querer comunicar la posición de algo sin ningún punto de referencia. En la actividad principal, los estudiantes exploran una herramienta que les permite colocar figuras de manera interactiva en la cuadrícula de 400 por 400 del Game Lab. Luego, enseñarán a un compañero a dibujar una imagen oculta empleando esta herramienta. Esta actividad prepara a los estudiantes para los próximos desafíos al programar en el Web Lab.\nAntes de comenzar el análisis, los estudiantes podrán crear sus propias imágenes para comunicar a sus compañeros.",
          "purpose": "El objetivo principal de esta lección es que los estudiantes se familiaricen con el sistema de coordenadas que utilizarán en el Game Lab. Es posible que los estudiantes no tengan experiencia usando una cuadrícula de coordenadas o que tengan dificultades con el eje-y \"volteado” en el Game Lab. Al emplear la herramienta de dibujo, los estudiantes se verán forzados a pensar en otros detalles que deben saber al utilizar el Game Lab y que aprenderán en la próxima lección cuando comiencen a programar. Estos incluyen el orden que deben mantener al dibujar, la necesidad de especificar el color y el hecho de que los círculos se deben ubicar en el centro y los cuadrados al lado superior izquierdo. En la próxima clase y al realizar las actividades de programación, los estudiantes deberán comunicar posiciones, por lo que es crucial que todos tengan esa habilidad al finalizar esta lección.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos comunicar de forma clara lo que queremos dibujar en una pantalla?**\n\nEn esta lección, explorarás los desafíos de comunicar instrucciones claras utilizando una herramienta Game Lab para dibujar formas en la cuadrícula del Game Lab."
        },
        "csd3-2021/Drawing in Game Lab": {
          "name": "Dibujar en el Game Lab",
          "overview": "**Pregunta del día: ¿Cómo podemos comunicar a una computadora cómo dibujar algo en la pantalla?**\n\nEn esta lección, los estudiantes trabajarán en el Game Lab, una herramienta que les permitirá colocar formas en la pantalla y que utilizarán durante toda la unidad. Aprenderán los conceptos básicos de la depuración y secuenciación, y comandos simples. Al finalizar la lección, los estudiantes serán capaces de programar imágenes como las que hicieron con la herramienta de dibujo en la lección anterior.",
          "preparation": "-   Lea el Foro\n-   Prepare el proyector u otros medios que necesite si desea mostrar el contenido a la clase",
          "purpose": "El propósito principal de esta lección es que los estudiantes puedan familiarizarse con la programación y que aprendan los conceptos básicos de la secuenciación y depuración que aplicarán durante toda esta unidad. Los estudiantes comienzan la lección explorando el entorno de desarrollo interactivo de GameLab (IDE), luego aprenderán los tres comandos ([\\`rect\\`(#4dd0e1)](/docs/gamelab/rect/), [\\`ellipse\\`(#4dd0e1)](/docs/gamelab/ellipse/), and [\\`fill\\`(#4dd0e1)](/docs/gamelab/fill/)) que necesitarán para codificar los mismos tipos de imágenes que crearon en papel en la lección anterior. Los niveles de desafío permiten a los estudiantes que tienen más experiencia en programación explorar aún más el Game Lab.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos comunicar a una computadora cómo dibujar algo en la pantalla?**\n\nEn esta lección, los estudiantes comenzarán a usar Game Lab para colocar formas en la pantalla mientras trabaja con los conceptos de secuenciación y depuración. "
        },
        "csd3-2021/Shapes and Parameters": {
          "name": "Formas y parámetros",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos utilizar parámetros para dar instrucciones más específicas a la computadora?\\*\\*\n\nEn esta lección, los estudiantes continúan trabajando con el Game Lab, modificando la altura y el ancho de las formas que utilizan para dibujar. Esta lección inicia con un análisis que conecta la función del bloque expandido (por ejemplo, distintos tamaños de formas) con la necesidad de utilizar más entradas o parámetros. Los estudiantes aprenden cómo dibujar con versiones del  [\\`ellipse()\\`(#4dd0e1)](/docs/gamelab/ellipse/) y [\\`rect()\\`(#4dd0e1)](/docs/gamelab/rect/) que incluyen parámetros de altura y ancho. También aprenden a utilizar el bloque [\\`background()\\`(#4dd0e1)](/docs/gamelab/background/).",
          "preparation": "-   Revise el nivel de secuenciación en Code Studio",
          "purpose": "En esta lección, los estudiantes podrán expandir sus habilidades de dibujo mientras continúan desarrollando habilidades de programación. Deberán analizar el plano de coordenadas x-y, considerar el orden de su código y aumentar la complejidad de sus programas. Esta lección está enfocada principalmente en el desarrollo de habilidades.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar parámetros para dar instrucciones más específicas a la computadora?**\n\nEn esta lección, los estudiantes continuarán trabajando en Game Lab y aumentarán su familiaridad con el dibujo de formas en la pantalla mediante la manipulación de los \"parámetros\" de las formas que está utilizando para dibujar. "
        },
        "csd3-2021/Variables": {
          "name": "Variables",
          "overview": "Pregunta del día: ¿Cómo podemos utilizar las variables para almacenar más información en nuestros programas?\n\nEn esta lección, los estudiantes aprenden a utilizar variables para etiquetar un número. Los estudiantes comienzan la lección con una descripción básica del propósito de una variable como un elemento de almacenamiento del modelo de entrada, salida, almacenamiento y procesamiento. Los niveles de esta lección refuerzan el modelo de una variable como una forma de etiquetar o dar nombre a un número.",
          "preparation": "-   Revise el nivel de progreso en Code Studio",
          "purpose": "En esta lección, los estudiantes trabajarán con variables por primera vez, por lo tanto, es normal que no comprendan algunas de sus funciones. Al finalizar la lección, los estudiantes deben comprender que las variables son una forma de etiquetar un valor en sus programas para más adelante poder usarlo como referencia o reutilizarlo. En la siguiente lección, los estudiantes conocerán los números aleatorios y al trabajar con ellos y aprenderán los distintos usos de las variables.  \n\nUtilizar variables para modificar dibujos es una habilidad que requiere mucha planificación. Si bien en esta lección los estudiantes modificarán una gran cantidad de programas, no se espera que compongan programas usando variables para modificar las características de un dibujo. En las siguientes lecciones, los estudiantes ampliarán sus conocimientos acerca de las variables y conocerán y otras formas de usarlas.",
          "student_overview": "\\*\\*Pregunta del día:  ¿Cómo podemos utilizar las variables para almacenar información en nuestros programas?\n\nEn esta lección, conocerás las variables, un concepto importante en la programación que se utiliza para almacenar valores en tus programas."
        },
        "csd3-2021/Random Numbers": {
          "name": "Números aleatorios",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos hacer que nuestros programas tengan comportamiento distinto cada vez que se ejecutan?\\*\\*\n\nLos estudiantes conocerán el bloque de [\\`randomNumber()\\`(#FFB74D)](/docs/gamelab/randomNumber/) y cómo pueden usarlo para crear nuevos comportamientos en sus programas. Luego, aprenderán a actualizar las variables mientras utilizan un programa. Estas nuevas herramientas permitirán que los estudiantes puedan dibujar imágenes aleatorias.",
          "preparation": "Revise el nivel de progreso en Code Studio",
          "purpose": "En esta lección, se presenta la aleatoriedad, un elemento que motiva el uso de variables y ayuda a los estudiantes a hacer que sus programas sean más llamativos. Durante la actividad, los estudiantes trabajarán con una variable que se actualiza varias veces en el programa, permitiéndoles entender mejor como pueden utilizar las variables.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos hacer que nuestros programas se comporten de forma diferente cada vez que se ejecutan?**\n\nEn esta lección, aprenderás a utilizar el bloque randomNumber() para crear nuevos comportamientos en tus programas."
        },
        "csd3-2021/Sprites": {
          "name": "Sprites",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos utilizar sprites para llevar el registro de la cantidad de información en nuestros programas?\\*\\* \n\nPara crear imágenes más atractivas y detalladas, los estudiantes aprenderán acerca de los objetos sprite. Esta lección comienza con un análisis acerca de qué tipos de información un programa debe registrar, luego presenta a los sprites como una forma de llevar el registro de esa información. Los estudiantes aprenden a asignar una imagen a cada sprite, esto aumentará la complejidad de lo que puedan dibujar en la pantalla.",
          "preparation": "-   (Opcional) Imprima una copia de la guía de actividades para cada estudiantes",
          "purpose": "Llevar registro de todas las formas y de las distintas variables que controlan sus aspectos puede ser algo complejo. Habría muchas variables y todas ellas tendrían distintos nombres. Es por esto que los informáticos crearon algo llamado **objeto**, el cual permite que el nombre de una variable controle la forma y todos sus aspectos. En el Gamel Lab, utilizamos objetos llamados **sprite**. Un sprite es un rectángulo con **propiedades** para controlar su aspecto. Las propiedades son las variables que están unidas al sprite. Puedes acceder a ellas a través del **dot notation**. \n\nAl usar la pestaña de animación, los estudiantes pueden crear o importar imágenes para utilizarlas como sprites. Luego, estos sprites les servirán como una herramienta para crear animaciones, ya que pueden cambiar y actualizar sus propiedades durante la ejecución de un programa.",
          "student_overview": "**Pregunta del día:  ¿Cómo podemos usar los sprites para ayudarnos a realizar un seguimiento de mucha información en nuestros programas?**\n\nHoy aprenderás sobre los sprites, que no solo te pueden dar una forma de realizar el seguimiento de varias piezas de información en tus programas, sino que también te permitirán crear imágenes más interesantes y divertidas."
        },
        "csd3-2021/Sprite Properties": {
          "name": "Propiedades de Sprite",
          "overview": "\\*\\* Pregunta del día:¿Cómo podemos utilizar las propiedades de los sprite para cambiar su apariencia en pantalla?\\*\\*\n\nLos estudiantes expanden su conocimiento al trabajar con las propiedades de los sprite. La lección comienza con un resumen acerca de qué es una sprite, luego los estudiantes trabajan en el Game Lab utilizando las propiedades y cambiando la apariencia de los sprites. Finalmente, reflexionarán acerca del vínculo que existe entre las propiedades y las variables.",
          "purpose": "En la lección anterior, cuando se presentó el concepto de los sprites, los estudiantes se enfocaron en crear un sprite y asignarla a una animación. Esta lección explora aquellos elementos que permiten a los sprite ser una herramienta de programación tan potente como para tener la capacidad de que sus propiedades se puedan modificar mientras un programa se está ejecutando. Estos conocimientos establecen las bases para las actividades que los estudiantes deberán realizar el resto de la unidad, ya que podrán acceder y manipular las propiedades de las sprite para generar comportamientos interesantes en sus programas.",
          "student_overview": "\\*\\* Pregunta del día: ¿Cómo podemos utilizar las propiedades de los sprite para cambiar su apariencia en pantalla?\\*\\*\n\nEn esta lección, continuarán su trabajo con los sprite, utilizando sus propiedades para cambiar su apariencia. "
        },
        "csd3-2021/Text": {
          "name": "Texto",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos utilizar el texto para mejorar nuestras escenas y animaciones?\\*\\*\n\nEsta lección presenta los comandos de texto del Game Lab, dándole a los estudiantes la oportunidad de practicar el uso del plano de coordenadas y los parámetros. Al inicio de la lección, los estudiantes deberán agregar texto a una caricatura creada en el Game Lab. Luego, ingresarán a Code Studio en dónde aprenderán a poner el texto en la pantalla y a controlar otras propiedades del texto, como por ejemplo, el tamaño. Los estudiantes que completen la evaluación antes, pueden ingresar a los niveles de desafío y aprender más trabajando con bloques relacionados con las propiedades del texto. ",
          "purpose": "En esta lección, se presenta el texto, un elemento necesario para los estudiantes ahora que comienzan a construir programas más complejos, como por ejemplo, juegos con marcador de puntuaciones. Este es el último tipo de elemento que los estudiantes colocarán en la pantalla. En las próximas lecciones, los estudiantes aprenderán a controlar el movimiento y las interacciones de estos elementos.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos utilizar el texto para mejorar nuestras escenas y animaciones?**\n\nEn esta lección, aprenderás a utilizar los comandos de texto del Game Lab para añadir subtítulos a tus escenas. "
        },
        "csd3-2021/Mini-Project: Captioned Scenes": {
          "name": "Mini-proyecto - Escenas Subtituladas",
          "overview": "\\*\\* Pregunta del día: ¿Cómo podemos usar el Game Lab para expresar nuestra creatividad?\\*\\*\n\nLuego de un breve repaso del código que han aprendido hasta el momento, los estudiantes se enfrentan a su primer proyecto creativo de la unidad. Utilizando el modelo del proceso de resolución de problemas, los estudiantes definen la escena que quieren crear, preparan el código que usarán,  intentan poner su plan en acción en el Game Lab y luego reflexionan sobre sus creaciones. También tendrán la oportunidad de compartir sus creaciones con sus compañeros.",
          "purpose": "Esta lección es una oportunidad para que los estudiantes expresen su creatividad utilizando las habilidades que han aprendido. Algunos estudiantes pasarán más tiempo en la pestaña de animación que programando. Comuníqueles que pueden pasar tiempo en las partes de la actividad que más les interesan, siempre y cuando cumplan con los requerimientos de la tarea.\n\nLa flexibilidad de esta lección, permite al docente decidir el tiempo que los estudiantes destinarán a realizar sus actividades, considerando el horario establecido para la implementación del curso.",
          "student_overview": "\\*\\* Pregunta del día: ¿Cómo podemos usar el Game Lab para expresar nuestra creatividad?\\*\\*\n\nEn esta lección, tendrán la oportunidad de expresar su creatividad utilizando el proceso de resolución de problemas para diseñar y programar la escena que ustedes quieran. "
        },
        "csd3-2021/The Draw Loop": {
          "name": "El bucle 'dibujar'",
          "overview": "**Pregunta del día: Cómo podemos animar nuestras imágenes en Game Lab?**\n\nEn esta lección, los estudiantes conocerán el ciclo de dibujo, uno de los paradigmas de programación principales en el Game Lab. Para comenzar la lección, los estudiantes revisarán algunos flipbooks no digitales, para comprender que varios cuadros con distintas animaciones dan la sensación de estar en movimiento. Luego, los estudiantes verán un video en el cual se explica cómo al utilizar el ciclo de dibujo en el Game Lab se puede crear la misma sensación de movimiento en sus programas. Los estudiantes combinarán el ciclo de dibujo con los números aleatorios para manipular animaciones simples con puntos y luego con sprites.",
          "preparation": "-   Imprima y prepare los manipulativos\n-   Prepare el video",
          "purpose": "El ciclo de dibujo es un componente principal del Game Lab. El hecho de que el Game Lab utilice esta función repetidamente y muchas veces por segundo (30 veces por defecto) es lo que le permite generar animaciones. Esta lección tiene dos objetivos. El primero es que los estudiantes puedan analizar que la animación en general depende de mostrar muchas imágenes, cada una con pequeñas diferencias, en una secuencia. El segundo objetivo es que los estudiantes entiendan que en ciclo de dibujo es lo que permite generar este comportamiento en el Game Lab. Al finalizar esta lección, los estudiantes deben comprender que los comandos en el ciclo de dibujo se ejecutan después del resto del código, pero que se ejecutan repetidamente para crear una animación. Los estudiantes podrán aprender más acerca de este comportamiento en las próximas dos lecciones, sin embargo, una comprensión de los conceptos en esta lección les servirá como base para el resto de la unidad.",
          "student_overview": "\\*\\* Pregunta del día: ¿Cómo podemos animar nuestras imágenes en el Game Lab?\\*\\*\n\nEn esta lección, aprenderás a utilizar el ciclo de dibujo con números aleatorios para crear tus primeras animaciones. "
        },
        "csd3-2021/Sprite Movement": {
          "name": "Movimiento de sprites",
          "overview": "**Pregunta del día: Cómo podemos controlar el movimiento de los sprite en el Game Lab?**\n\nEn esta lección, los estudiantes aprenderán a controlar el movimiento de un sprite utilizando un elemento llamado patrón de contador, el cual puede cambiar de forma progresiva las propiedades de los sprite. Los estudiantes pensarán en las distintas maneras en las que pueden animar a las sprites controlando sus propiedades, luego explorarán el patrón de contador en Code Studio. Después de examinar el código, los estudiantes intentarán usar el patrón de contador para crear varios tipos de movimientos sprite.",
          "purpose": "Esta lección complementa los conocimientos acerca del ciclo de dibujo que los estudiantes adquirieron para crear programas con movimiento _intencional_. Al incrementar o disminuir las propiedades del sprite, como por ejemplo [\\`sprite.x\\`(#f78183)](/docs/gamelab/sprite.x/), los estudiantes pueden escribir programas capaces de mover a los sprites en patrones esperados en lugar de los patrones aleatorios que utilizaron anteriormente. Las animaciones que los estudiantes aprendan en esta lección serán la base para todas las animaciones y juegos que realicen durante el resto de la unidad.",
          "student_overview": "**Pregunta del día: Cómo podemos controlar el movimiento de los sprite en el Game Lab?**\n\nEn esta lección, aprenderás a controlar el movimiento de los sprite utilizando un patrón de contador. "
        },
        "csd3-2021/Mini-Project: Animation": {
          "name": "Mini-proyecto - Animación",
          "overview": "**Pregunta del día: ¿Cómo podemos combinar diferentes patrones de programación para hacer una animación completa?**\n\nEn esta lección, los estudiantes deberán combinar los distintos métodos que han aprendido para crear una escena animada. Primero, repasarán los tipos de movimiento y animación que han aprendido y hacen una lista con los tipos de escenas que podrían necesitar ese movimiento. A continuación, comienzan a planificar las escenas animadas, que crearán en el Game Lab.",
          "purpose": "Esta es una instancia para que los estudiantes puedan expresar su creatividad utilizando los conocimientos que han aprendido. Algunos estudiantes querrán pasar más tiempo dibujando en la pestaña de animación que programando. Motive a los estudiantes a pasar tiempo en aquellas partes de la actividad que más les interesen, siempre y cuando cumplan con los requerimientos de la tarea.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos combinar diferentes patrones de programación para hacer una animación completa?**\n\nEn esta lección, combinarás todos los conceptos que has aprendido en las lecciones anteriores para crear y diseñar tu primera escena animada."
        },
        "csd3-2021/Conditionals": {
          "name": "Condicionales",
          "overview": "**Pregunta del día: ¿Cómo pueden los programas reaccionar a los cambios mientras se están ejecutando?**\n\nEsta lección introduce las expresiones booleanas y condicionales, que permiten que un programa se ejecute de forma distinta dependiendo de si una condición es verdadera. Los estudiantes comienzan jugando un juego breve en el que deberán responder si se cumplen o no ciertas condiciones. Luego ingresan a Code Studio, en donde aprenderán cómo una computadora evalúa las expresiones booleanas y como estas pueden usarse para estructurar un programa.",
          "purpose": "Esta lección se basa en el modelo booleano con el que los estudiantes experimentaron en la lección \"Sin conexión: Booleanos\". Al igual que antes, comenzarán a usar booleanos directamente antes de utilizarlos para gatillar las sentencias _si_. En la próxima lección, los estudiantes conocerán algunos bloques productores de booleanos como el [\\`keyDown()\\`(#fff176)](/docs/gamelab/keyDown/), el cual puede usarse para reemplazar a las comparaciones booleanas simples para escribir programas que respondan a la entrada del usuario.",
          "student_overview": "**Pregunta del día:  ¿Cómo pueden los programas reaccionar a los cambios mientras se están ejecutando?**\n\nEn esta lección, aprenderás acerca de las expresiones booleanas y condicionales, las que te permiten crear programas que se ejecuten de forma distinta dependiendo de si una condición es o no verdadera. "
        },
        "csd3-2021/Keyboard Input": {
          "name": "Entrada de teclado",
          "overview": "**Pregunta del día: ¿Cómo pueden nuestros programas reaccionar a la entrada de un usuario?**\n\nContinuando la introducción a booleanos y sentencias _si_ de la lección anterior, se presenta a los estudiantes un nuevo bloque llamado [\\`keyDown()\\`(#fff176)](/docs/gamelab/keyDown/) el cual devuelve a un booleano y puede ser usado en sentencias condicionales para mover los sprites por la pantalla. Al finalizar esta lección, los estudiantes habrán escrito programas en los que los sprites en la pantalla serán controlados por los usuarios utilizando el teclado como un método de entrada.",
          "purpose": "Una forma común de utilizar las condicionales es para comprobar distintos tipos de entrada del usuario, en especial las teclas presionadas. El hecho de que un usuario pueda interactuar con un programa, hace que este sea mucho más interesante y dinámico. Es muy difícil crear un juego que no cuente con interacción. Por lo tanto, la introducción de las condicionales y las entradas de usuario para que pueda tomar decisiones son un paso fundamental en la creación de videojuegos.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden nuestros programas reaccionar a la entrada del usuario?**\n\nEn esta lección, aprenderás a utilizar el bloque keyDown() que permitirá a tus programas responder a la entrada del usuario. "
        },
        "csd3-2021/Mouse Input": {
          "name": "Entrada de Ratón",
          "overview": "**Pregunta del día: ¿De qué otras formas puede reaccionar una computadora a la entrada de un usuario?**\n\nEn esta lección, los estudiantes continúan explorando maneras de utilizar sentencias condicionales para captar la entrada del usuario. Para complementar a los comandos de teclado que aprendieron en la lección anterior, en esta clase los estudiantes aprenderán varias formas de captar la entrada del mouse. También ampliarán sus conocimientos acerca de las condicionales para incluir \"else\", una condicional que permite que la computadora ejecute una determinada sección de código cuando una condición es verdadera, y una sección diferente de código cuando no lo es.",
          "purpose": "Los estudiantes han aprendido a tomar decisiones simples utilizando las condicionales. En ocasiones, será necesario tomar decisiones basadas en si la condición por la cual preguntamos originalmente era falsa. En estos casos es en dónde aparecen las sentencias \"else\". Las sentencias else corresponden a una segunda sentencia anexada a una sentencia si. Las sentencias else se ejecutan cuando las condicionales a las que están anexadas son falsas.\n\nEn esta lección, se presenta este concepto junto con nuevos comandos de entrada del mouse. Estos nuevos conocimientos permitirán que los estudiantes gradualmente construyan programas que utilizan distintas formas de entrada.",
          "student_overview": "\\*\\*Pregunta del día: ¿De qué otras formas puede reaccionar el ordenador a la entrada del usuario?\n\nEn esta lección, ampliarás lo que has aprendido sobre las sentencias if y explorarás las sentencias if-else. También aprenderás a utilizar el mouse para obtener información del usuario que puedes utilizar en tus sentencias condicionales. "
        },
        "csd3-2021/Project - Interactive Card": {
          "name": "Proyecto - Tarjeta Interactiva",
          "overview": "**Pregunta del día:  ¿Qué habilidades y prácticas son importantes a la hora de crear un programa interactivo?**\n\nEn este proyecto de culminación del capítulo 1, los estudiantes planifican y desarrollan una tarjeta de felicitación interactiva utilizando todas las técnicas de programación que han aprendido hasta el momento.",
          "preparation": "-   Revise el foro\n-   Imprima una copia de la guía del proyecto para cada estudiante",
          "purpose": "Esta evaluación de finalización de capítulo es una buena instancia para que los estudiantes utilicen todos los conocimientos que han adquirido hasta el momento (dibujar, variables, sprites, imágenes, condicionales, entradas de usuario). Los estudiantes aún deberían trabajar con un código de fácil lectura y que no requiere abstracciones de alto nivel. El darle la oportunidad de expresar su creatividad, después de haber aprendido todos estos nuevos conceptos, hará que se entusiasmen por aprender más en el capítulo 2.",
          "student_overview": "**Pregunta del día:  ¿Qué habilidades y prácticas son importantes a la hora de crear un programa interactivo?**\n\nEn esta lección, planificarás y desarrollarás una tarjeta de felicitación interactiva utilizando todos los conceptos y técnicas de programación que has aprendido hasta ahora."
        },
        "csd3-2021/Velocity": {
          "name": "Velocidad",
          "overview": "**Pregunta del día:  ¿Cómo pueden los lenguajes de programación ocultar patrones complicados para que sea más fácil programar?**\n\nTras un breve repaso de cómo se utiliza el \"patrón de contador\" para mover los sprites, se presenta a los estudiantes la idea de ocultar esos patrones en un solo bloque. Luego, los estudiantes se dirigen a Code Studio para probar nuevos bloques que establecen la velocidad de un sprite directamente, y observan las distintas formas en que pueden codificar comportamientos más complejos en sus sprites.  ",
          "purpose": "Esta lección trata un tema de gran importancia en el capítulo: el comportamiento complejo que se puede representar de formas más simples para que sea más fácil de escribir y razonar acerca del código. \n\nEn esta lección, los estudiantes aprenderán a utilizar los bloques de velocidad para simplificar el código que mueve a un sprite por la pantalla. Esto significa un cambio en la manera de presentar nuevos bloques. Mientras que los bloques anteriores se presentaron como activadores de nuevos comportamientos, ahora se presentan como una herramienta para simplificar el código que los estudiantes habían escrito usando los bloques anteriores. En las próximas lecciones, los estudiantes aprenderán de qué maneras este método de manejar la complejidad les permite generar comportamientos de sprite más interesantes.",
          "student_overview": "**Pregunta del día:  ¿Cómo pueden los lenguajes de programación ocultar patrones complicados para que sea más fácil programar?**\n\nEn esta lección, aprenderás a establecer la velocidad de un sprite que utiliza el patrón de contador para mover tus sprites. "
        },
        "csd3-2021/Collision Detection": {
          "name": "Detección de colisiones",
          "overview": "**Pregunta del día: ¿Cómo puede la programación ayudar a simplificar los problemas complicados?**\n\nLos estudiantes aprenderán acerca de la detección de colisiones en la computadora. En parejas, explorarán cómo una computadora podría utilizar las propiedades de ubicación, el tamaño de los sprites y las matemáticas para detectar si dos sprites se están tocando. Luego, usarán el bloque [\\`isTouching()\\`(#f78183)](/docs/gamelab/isTouching/) para crear distintos efectos cuando los sprites colisionen, y practicarán el uso del bloque para modelar varias interacciones.",
          "preparation": "-   Imprima copias de la guía de actividades. Considere que cada pareja de estudiantes debe tener la parte A y B de la guía",
          "purpose": "Esta lección introduce formalmente el uso de abstracciones, formas simples para representar una complejidad subyascente. \n\nEn la lección anterior, los estudiantes tuvieron la oportunidad de utilizar un bloque para representar un código complejo. En esta lección, los estudiantes explorarán esta idea en el contexto del desafío matemático, complejo e intencional de determinar si dos sprites se están tocando. Utilizando un solo bloque para representar esta complejidad, en este caso el bloque isTouching, se hace más simple escribir y comprender el código, esto permite que los estudiantes puedan apreciar el valor de usar estas abstracciones. En las próximas lecciones, los estudiantes continuarán construyendo con la abstracción [\\`isTouching()\\`(#f78183)](/docs/gamelab/isTouching/) con el objetivo de crear interacciones de sprite más complejas.",
          "student_overview": "**Pregunta del día: ¿Cómo puede la programación ayudar a simplificar los problemas complicados?**\n\nEn esta lección, aprenderás sobre la detección de colisiones explorando cómo un ordenador podría utilizar las matemáticas, la ubicación del sprite y el tamaño para detectar si los sprites se están tocando. "
        },
        "csd3-2021/Mini-Project: Side Scroller": {
          "name": "Mini-Proyecto - Desplazamiento Lateral",
          "overview": "**Pregunta del día:  ¿Cómo se pueden usar los nuevos tipos de movimientos sprite y la detección de colisión para crear un juego?**\n\nLos estudiantes aplican lo aprendido acerca de la detección de colisión y de establecer la velocidad para crear un juego simple. Luego de analizar un juego de muestra, los estudiantes piensan en que tipo de juego les gustaría crear, luego utilizan un proceso estructurado para programarlo en Code Studio.",
          "purpose": "Esta es una instancia para que los estudiantes puedan expresar su creatividad utilizando los conocimientos que han aprendido. Motívelos a pasar tiempo en aquellas partes de la actividad que más les interesen, siempre y cuando cumplan con los requerimientos de la tarea. Esta lección puede ser modificada para que sea más breve o más extensa dependiendo de las limitaciones de tiempo. ",
          "student_overview": "**Pregunta del día:  ¿Cómo se pueden utilizar los nuevos tipos de movimiento de los sprites y la detección de colisiones para crear un juego?**\n\nEn esta lección, utilizarás lo que has aprendido sobre la detección de colisiones y la velocidad para crear un sencillo juego de desplazamiento lateral."
        },
        "csd3-2021/Complex Sprite Movement": {
          "name": "Movimiento Complejo de Sprites",
          "overview": "**Pregunta del día: ¿Cómo se pueden combinar los bloques anteriores en nuevos patrones para hacer movimientos interesantes?**\n\nLos estudiantes aprenderán a combinar las propiedades de velocidad de los sprites con el patrón de contador para crear movimientos de sprites más complejos. Después de repasar los dos conceptos, explorarán varios escenarios en los que se utilizarán la velocidad en el patrón de contador, y observarán los distintos tipos de movimiento que se obtienen como el resultado. Particularmente, los estudiantes aprenderán a simular la gravedad. A continuación, reflexionarán sobre cómo han podido obtener nuevos comportamientos combinando bloques y patrones que ya conocían.",
          "purpose": "En esta lección, no se presentan nuevos bloques y de hecho solo se utilizan patrones que los estudiantes ya conocieron en el capítulo 1. En lugar de eso, esta lección demuestra que el combinar herramientas, particularmente las abstracciones que aprendieron en las últimas dos lecciones, les permite construir nuevos comportamientos para sus sprites. También se resalta el hecho de que las abstracciones no solo simplifican el código, sino que pueden utilizarse para construir bloques con comportamientos aún más complejos.  ",
          "student_overview": "**Pregunta del día: ¿Cómo se pueden combinar los bloques anteriores en nuevos patrones para hacer movimientos interesantes?**\n\nEn esta lección, aprenderás a combinar las propiedades de velocidad de los sprites con el patrón de contador para crear movimientos de sprite más complejos. "
        },
        "csd3-2021/Collisions": {
          "name": "Colisiones",
          "overview": "**Pregunta del día: ¿Cómo pueden los programadores basarse en abstracciones para crear más abstracciones?**\n\nEn esta lección, los estudiantes programarán sus sprites para que puedan interactuar de nuevas formas. Después de un breve repaso acerca de cómo utilizaron el bloque [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/), los estudiantes imaginarán de que otras maneras podrían interactuar los sprites. Más tarde, usarán el bloque [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/) para que un sprite empuje a otro por la pantalla y finalmente practicarán con los cuatro bloques de colisión ([\\`collide\\`(#f78183)](/docs/gamelab/collide/), [\\`displace\\`(#f78183)](/docs/gamelab/displace/), [\\`bounce\\`(#f78183)](/docs/gamelab/bounce/), y [\\`bounceOff\\`(#f78183)](/docs/gamelab/bounceOff/)).",
          "purpose": "En esta lección, se presentan las colisiones, otra abstracción que permitirá que los estudiantes puedan manipular a sus sprites de nuevas maneras. Si bien los estudiantes podrían haber escrito sus propios comandos de desplazamiento, colisión o rebote, la habilidad de ignorar aquellos detalles en este código les permitirá enfocar toda su atención en la estructura de alto nivel de los juegos que deseen construir.\n\nLa intención de esta clase es que los estudiantes puedan utilizar los comandos que aprendieron en el segundo capítulo. Esta será la última vez que aprendan nuevos comportamientos de sprite, después de esta lección, los estudiantes se enfocaran en las formas de organizar el código, el que se tornará cada vez más complejo.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los programadores basarse en abstracciones para crear más abstracciones?**\n\nEn esta lección, aprenderás a utilizar los nuevos bloques de colisión (colisionar, desplazar, rebotar y bounceOff) para hacer que tu sprite interactúe de nuevas maneras. "
        },
        "csd3-2021/Mini-Project: Flyer Game": {
          "name": "Mini-Proyecto - Juego con Objetos Voladores",
          "overview": "**Pregunta del día:  ¿Cómo se pueden utilizar los nuevos tipos de colisiones y el movimiento de modelado para crear un juego?**\n\nLos estudiantes aplicarán los conocimientos aprendidos acerca de la simulación de la gravedad y los distintos tipos de colisiones para crear juegos sencillos que contienen objetos voladores. Después de ver un juego de muestra, los estudiantes intercambiarán ideas acerca de los tipos de juegos que les gustaría crear. Finalmente, programarán el juego en Code Studio siguiendo un proceso estructurado.",
          "purpose": "Esta es una instancia para que los estudiantes puedan expresar su creatividad utilizando los conocimientos que han aprendido. Motívelos a pasar tiempo en aquellas partes de la actividad que más les interesen, siempre y cuando cumplan con los requerimientos de la tarea. ",
          "student_overview": "**Pregunta del día: ¿Cómo se pueden utilizar los nuevos tipos de colisiones y el modelado del movimiento para crear un juego?**\n\nEn esta lección, utilizarás lo que has aprendido sobre la simulación de la gravedad y los diferentes tipos de colisiones para crear un juego sencillo con objetos voladores."
        },
        "csd3-2021/Functions": {
          "name": "Funciones",
          "overview": "**Pregunta del día: ¿De qué forma los programadores pueden utilizar funciones para crear sus propias abstracciones?**\n\nLos estudiantes aprenderán a crear funciones para organizar su código, hacerlo más fácil de leer y eliminar bloques de código repetido. Primero, analizarán qué tipo de bloques nuevos les gustaría tener en el Game Lab y qué tipo de contenido estos albergarían. Luego, los estudiantes aprenderán a crear funciones en el Game Lab. Usarán estas funciones para eliminar bloques de código extensos de su ciclo de dibujo y para reemplazar fragmentos de código repetidos utilizando una sola función.",
          "purpose": "En las lecciones anteriores, los estudiantes aprendieron a utilizar muchas abstracciones en sus programas, incluyendo las propiedades de velocidad, el bloque isTouching y las colisiones. Estas abstracciones les han permitido construir programas más complejos sin prestar atención a los detalles de la creación de los distintos comportamientos. En esta lección, los estudiantes aprenderán a construir sus propias abstracciones mediante la creación de funciones.\n\nLos estudiantes usarán estas funciones para descomponer el código en pequeños fragmentos más fáciles de analizar. Estos conocimientos preparan a los estudiantes para la transición del capítulo, que va desde desarrollar habilidades técnicas hasta el proceso organizacional que deben utilizar para desarrollar un software.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden los programadores utilizar las funciones para crear sus propias abstracciones?**\n\nEn esta lección, aprenderás a organizar mejor tu código utilizando funciones para hacer que el código de tu programa sea más legible y eliminar bloques de código repetidos. "
        },
        "csd3-2021/The Game Design Process": {
          "name": "El Proceso de Diseño de Juegos",
          "overview": "**Pregunta del día:  ¿De qué forma el tener un plan nos ayuda a que un proyecto grande sea más fácil de completar?**\n\nEsta lección presenta a los estudiantes el proceso que utilizarán para diseñar juegos durante el resto de la unidad. Este proceso está acompañado de una guía de proyecto en la cual los estudiantes deberán definir sus sprites, variables y funciones antes de empezar a programar su juego. Como primera actividad, los estudiantes se dirigirán al Game Lab para probar un juego de código oculto. Luego, conversarán acerca de la ubicación de los sprites, variables y funciones en el juego.\nMás tarde, trabajarán en la guía de proyecto, en ella, podrán ver una de las formas en la que se puede ejecutar el juego. Los estudiantes tendrán que completar una serie de niveles antes de llegar al final de la lección, en dónde podrán mejorar y personalizar el juego. ",
          "preparation": "-   Imprima copias de la guía de actividades si planea entregarlas en formato físico. Existen partes de esta guía de actividades que han sido completadas de manera intencional. (Ver notas en el plan de lección.)",
          "purpose": "Esta lección presenta las animaciones fotograma a fotograma, y es la primera de una serie de lecciones acerca del proceso de construcción de un software.\n\nMientras que las lecciones anteriores se enfocaban en el uso de abstracciones para gestionar la complejidad del código, esta lección se centra en gestionar la complejidad del proceso de desarrollo de un software. La lección explora progresivamente el proceso de desarrollo de un software, dando a los estudiantes una guía de proyecto completa, brindando el código inicial, y mostrándoles el proceso de implementación. En las siguientes lecciones, los estudiantes deberán completar la mayor parte de esta guía y el proceso del proyecto final individualmente.",
          "student_overview": "**Pregunta del día:  ¿Cómo tener un plan ayuda a hacer más fácil un proyecto de gran envergadura?**\n\nEn esta lección, explorarás el proceso que utilizarás durante el resto de la unidad al diseñar juegos. "
        },
        "csd3-2021/Using the Game Design Process": {
          "name": "Uso del Proceso de Diseño de Juegos",
          "overview": "**Pregunta del día:  ¿Cómo puede el proceso de resolución de problemas ayudar a los programadores a gestionar grandes proyectos?**\n\nEn esta lección de varios días, los estudiantes usan el proceso de resolución de problemas de la Unidad 1 para crear un juego de salto de plataforma. Comenzarán analizando un ejemplo de este juego y luego definirán el aspecto del juego que quieren crear. A continuación, utilizarán un proceso estructurado para planificar los fondos, las variables, los sprites y las funciones que necesitarán para implementar su juego. Después de escribir el código, los estudiantes reflexionarán acerca de cómo pueden mejorar el juego e implementarán esos cambios.",
          "preparation": "-   Imprima una copia de la guía de proyecto para cada estudiante o pareja",
          "purpose": "Los estudiantes ya aprendieron todos los elementos de programación que se necesitan para crear un juego. En esta lección se repasan muchos de esos conceptos mientras los estudiantes siguen un proceso estructurado que les ayudará a organizar el trabajo. Continuarán utilizando la guía de proyecto de la lección anterior, pero esta vez la completarán de manera individual y luego la utilizarán para construir un juego. Esta actividad preparará a los estudiantes para el proyecto final, en donde deberán ser capaces de escribir su propio programa desde el principio.",
          "student_overview": "**Pregunta del día:  ¿Cómo puede el proceso de resolución de problemas ayudar a los programadores a gestionar grandes proyectos?**\n\nEn esta lección de varios días, utilizarás el proceso de resolución de problemas para crear un juego de saltos de plataforma."
        },
        "csd3-2021/Project - Design a Game": {
          "name": "Proyecto - Diseñar un Juego",
          "overview": "**Pregunta del día: ¿Cómo pueden las cinco prácticas de las ciencias de la computación (resolución de problemas, perseverancia, comunicación, colaboración y creatividad) ayudar a los programadores a completar grandes proyectos?**\n\nLos estudiantes planificarán y desarrollarán su propio juego utilizando la guía de proyecto de las dos lecciones anteriores. Ya sea individualmente o en parejas, los estudiantes tendrán que decidir el tipo de juego que quieren crear, inspirándose en un conjunto de juegos de muestra. Luego, completarán una guía de proyecto en blanco en donde describirán el comportamiento del juego y analizarán las variables, los sprites y las funciones que necesitarán crear. En Code Studio, una serie de niveles les indicarán una secuencia general que pueden usar para implementar este plan. A lo largo del proceso, los estudiantes compartirán sus proyectos con sus compañeros para la revisión por pares e incorporarán esta retroalimentación a su juego. Al final de la lección, los estudiantes compartirán sus juegos con sus compañeros. Este proyecto puede abarcar de 3 a 5 períodos de clase.",
          "preparation": "-   Imprima copias de la guía de proyecto, una para cada estudiante o para cada pareja.\n-   Imprima copias de la rúbrica, una para cada estudiante o para cada pareja.\n-   Imprima copias de la guía revisión por pares, una para cada estudiante o para cada pareja.\n-   Revise los juegos de muestra en Code Studio",
          "purpose": "Esta es la última lección de la unidad 3, y en ella los estudiantes tendrán la posibilidad de trabajar en el Game Lab y crear su propio juego desde el comienzo. La experiencia en utilizar la guía de proyecto ayudará a los estudiantes a ver el alcance de sus proyectos y cómo sus ideas llegaron a completarse. Si bien este proyecto es una oportunidad para que los estudiantes demuestren sus habilidades técnicas, los estudiantes también necesitarán colaborar con sus compañeros, dar retroalimentación constructiva y utilizar el proceso de resolución de problemas para enfrentar los obstáculos que se presenten. Los estudiantes deben ser los protagonistas de este proyecto, para luego proporcionar una conclusión memorable y motivadora de esta unidad de Descubrimientos CS.",
          "student_overview": "**Pregunta del día: ¿Cómo pueden las cinco prácticas de las ciencias de la computación (resolución de problemas, la persistencia, la comunicación, la colaboración y creatividad) ayudar a los programadores a completar grandes proyectos?**\n\nEn esta lección, utilizarás el proceso de resolución de problemas para planificar y construir un juego original."
        },
        "csd3-2021/lesson-1": {
          "name": "Encuesta de fin de curso de Descubrimientos de Ciencias de la Computación"
        },
        "csd1-2021/Intro to Problem Solving": {
          "name": "Introducción a la resolución de problemas",
          "overview": "**Pregunta del día: ¿Cómo podemos trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, los estudiantes trabajan en grupo para diseñar barcos de papel aluminio que puedan soportar el peso de una gran cantidad de monedas. Los grupos tendrán dos intentos para trabajar en sus barcos con el objetivo de que en el segundo intento el barco pueda soportar más monedas que en el anterior. La estructura de esta actividad es un adelanto a los distintos pasos del proceso de resolución de problemas que se presentarán con mayor detalle en la siguiente lección.  Al final de la lección, los estudiantes reflexionan acerca de sus experiencias y las relacionan con los tipos de resolución de problemas que aprenderán durante el resto del curso.\n\n**Existen versiones alternativas de esta lección:** \n\n-   [Mesa de periódico](/s/csd1-2021/lessons/9/)\n-   [Puente de Espagueti](/s/csd1-2021/lessons/10/)\n-   [Torre de papel](/s/csd1-2021/lessons/11/)",
          "preparation": "**Para cada grupo**\n\n-   2 trozos de papel de aluminio, 12,7x12,7 centímetros cada uno\n-   Un recipiente de al menos 7 a 13 centímetros de alto para llenar de agua \n-   Varias toallas de papel o trapos para colocar bajo el recipiente \n-   15 monedas pequeñas\n-   Una copia de la guía de actividades \n\n**Para el docente**\n\n-   Una copia de la guía de actividades\n-   Un recipiente de al menos 7 a 13 centímetros de alto para llenar de agua \n-   50 monedas pequeñas \n-   Toallas de papel o trapos extra ",
          "purpose": "Esta lección es una forma entretenida de presentar el concepto de resolución de problemas que se utilizará durante todo el curso. Los estudiantes aprenderán a trabajar en equipo y a utilizar su creatividad sin restricciones. El problema de los barcos de papel de  aluminio se puede sustituir por cualquier otra actividad en la que los estudiantes definan sus metas, elaboren un plan, intenten una solución y evalúen sus resultados para luego mejorar desde esa base de forma sistemática. El hecho de que esta actividad no sea de carácter “computacional” es intencional. La ciencia de la computación es una disciplina de resolución de problemas. Al realizar como primer experimento una actividad que no es de carácter computacional, nuestra clase se transforma en un espacio de aprendizaje, enfocado en la solución de problemas generales y presentando las ciencias de la computación como una “nueva herramienta” que podemos usar para enfrentar distintos problemas. ",
          "student_overview": "**Pregunta del día: ¿Qué puede ayudarnos a trabajar juntos y a resolver problemas en equipo?**\n\nTrabajarás con un grupo para diseñar y probar un barco de papel de aluminio que soporte el mayor número posible de monedas de un céntimo. "
        },
        "csd1-2021/The Problem Solving Process": {
          "name": "El proceso de resolución de problemas",
          "overview": "**Pregunta del día: ¿Qué pasos podemos utilizar para resolver distintos problemas?**\n\nEsta lección es una introducción al proceso de resolución de problemas formal, que los estudiantes utilizarán durante todo el curso, Definir - Preparar - Intentar - Reflexionar. Los estudiantes comenzarán esta lección realizando una lluvia de ideas de los distintos tipos de problemas a los que se enfrentan día a día. Luego, conocerán los cuatro pasos del proceso de resolución de problemas y trabajarán en conjunto para relacionar estos conceptos con sus propias experiencias resolviendo problemas. Primero, los estudiantes relacionan estos cuatro pasos con las actividades realizadas en la clase anterior, luego con un problema que son hábiles resolviendo, y finalmente con uno que les gustaría resolver mejor. Al final de la lección, la clase recopila una lista de estrategias útiles para cada paso del proceso y con esta información realizan un póster que les será útil durante la unidad y el curso.",
          "preparation": "Para cada estudiante \n\n-   Imprima copias de la guía de actividades\n\nPara la clase\n\n-   Cartulina\n-   Marcadores o lápices de color",
          "purpose": "El objetivo de esta lección es relacionar el proceso de resolución de problemas con las experiencias que los estudiantes tengan en solucionar problemas cotidianos. En las siguientes unidades de Descubrimientos de las ciencias de la computación se presentarán problemas en contextos conocidos y desconocidos. Un proceso de solución de problemas estructurado será una herramienta importante para ayudar a los estudiantes en la superación de desafíos nuevos y complejos.",
          "student_overview": "**Pregunta del día: ¿Qué pasos podemos utilizar para resolver distintos problemas?**\n\nAprenderás sobre el proceso de resolución de problemas que usamos en las Ciencias de la Computación y te sumergirás en algunas estrategias para implementar cada paso."
        },
        "csd1-2021/Exploring Problem Solving": {
          "name": "Exploración de la resolución de problemas",
          "overview": "**Pregunta del día: ¿Cómo podemos aplicar el proceso de resolución de problemas en diferentes tipos de problemas?**\n\nCon el objetivo de comprender mejor la importancia de cada paso, en esta lección, los estudiantes trabajarán con el proceso de resolución de problemas para solucionar tres problemas distintos. Resolverán una búsqueda de palabras, organizarán los asientos para una fiesta de cumpleaños y rediseñarán el salón de clases. Los problemas se vuelven cada vez más complejos y mal definidos, con el objetivo de demostrar cómo el proceso de resolución de problemas puede ser útil al enfrentar este tipo de situaciones. La lección concluye con los estudiantes reflexionando acerca de sus experiencias con el proceso de resolución de problemas. Tendrán que justificar la inclusión de cada paso y harán una lluvia de ideas con las preguntas o estrategias que puedan ayudarlos a definir problemas abiertos, ya que este suele ser el paso más importante. \n\nEs muy probable que se necesiten dos periodos de clase para completar esta lección. Los dos primeros problemas se pueden realizar en una sola clase, pero el tercero deberá trasladarse a la próxima.\n\n**Existen versiones alternativas de esta lección disponibles.** \n\n-   [Temática de animales](/s/csd1-2021/lessons/12/)\n-   [Temática de juegos](/s/csd1-2021/lessons/13/)",
          "preparation": "-   Imprima la guía de actividades para cada estudiante\n-   Una hoja de papel para el problema de la fiesta de cumpleaños\n-   Cartulina para registrar las estrategias de la definición de problemas en la discusión final",
          "purpose": "En esta lección, los estudiantes adquieren más práctica utilizando el proceso de resolución de problemas en distintos contextos. En las actividades se destaca que el proceso de resolución de problemas es de gran ayuda, especialmente cuando nos enfrentamos a problemas mal definidos. El paso de definición es fundamental en el proceso de resolución de problemas, es por esto que en la última actividad los estudiantes aprenden estrategias y preguntas que les serán útiles para definir mejor los problemas. Las actividades y problemas analizados hoy ayudarán para que, en la siguiente lección, los estudiantes puedan opinar y entender qué tipos de problemas pueden resolver las computadoras.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos aplicar el Proceso de Resolución de Problemas a muchos tipos de problemas diferentes?**\n\n¡Hoy aplicarás el Proceso de Resolución de Problemas a tres problemas diferentes que serán cada vez más complejos!"
        },
        "csd1-2021/What is a Computer?": {
          "name": "¿Qué es una computadora?",
          "overview": "**Pregunta del día: ¿Qué es una computadora?**\n\nEn esta lección, los estudiantes definirán el concepto de computadora. Al inicio de la lección, la clase comentará cuales son las posibles definiciones de “computadora” y luego anotará los resultados en la pizarra. A continuación, los estudiantes trabajarán en grupo y elaborarán un cartel en el que clasificarán las imágenes como: \"es una computadora\" o \"no es una computadora”. Los grupos presentarán sus carteles y explicarán las razones para elegir algunas de las categorizaciones. Finalmente, el docente presentará una definición de lo que es una computadora y permitirá a los estudiantes comparar sus carteles con la nueva definición.",
          "preparation": "**Para cada grupo**  \n\n-   Imprima copias de la guía de actividades. Tenga en cuenta que hay dos conjuntos de imágenes, pero cada grupo sólo necesita uno.\n-   Tijeras \n-   Cartulina\n-   Marcadores o lápices de color \n-   Pegamento o cinta adhesiva para pegar las imágenes ",
          "purpose": "Esta lección está basada en la resolución de problemas de las lecciones anteriores y explica detalladamente cómo se utiliza la computación en la resolución de problemas. En esta lección, los estudiantes aprenderán que existen distintos tipos de computadoras y que éstas utilizan la información como parte del proceso de resolución de problemas. En las próximas lecciones aprenderán a reconocer los “problemas de información” y cómo las computadoras pueden resolverlos.",
          "student_overview": "**Pregunta del día: ¿Qué es un ordenador?**\n\n¡En esta lección, trabajarás con un grupo para averiguar qué hace a un ordenador ser un ordenador!"
        },
        "csd1-2021/Input and Output": {
          "name": "Entrada y salida",
          "overview": "**Pregunta del día: ¿Cómo utilizan las computadoras la entrada y la salida para obtener y dar la información que necesitan para resolver problemas?**\n\nEn esta lección los estudiantes aprenderán cómo las computadoras obtienen y dan información al usuario a través de entradas y salidas. En primer lugar, los estudiantes deciden qué información necesitarían para resolver un \"problema de pensamiento\" y utilizan esa información para elaborar una recomendación. Después, identifican las entradas y salidas de ese proceso. A continuación, los estudiantes analizan una aplicación que realiza el mismo proceso y determinan cómo esa aplicación introduce y genera la información. Finalmente, consideran otros tipos de entradas y salidas que las computadoras pueden utilizar para ayudar a resolver problemas.",
          "preparation": "-   Haga copias de la guía de actividades",
          "purpose": "En la lección anterior, los estudiantes hicieron una lluvia de ideas sobre las características que pueden ayudar a clasificar los dispositivos como computadoras. Esta lección presenta la entrada y la salida como una de estas características, y hace que los estudiantes identifiquen diferentes métodos de entrada o salida en aplicaciones cotidianas.",
          "student_overview": "**Pregunta del día: ¿Cómo utilizan las computadoras la entrada y la salida para obtener y dar la información que necesitan para resolver problemas?**\n\nEn esta lección los estudiantes aprenderán cómo las computadoras obtienen y dan información al usuario a través de entradas y salidas. "
        },
        "csd1-2021/Processing": {
          "name": "Procesamiento",
          "overview": "**Pregunta del día: ¿Cuáles son las distintas formas en las que una computadora puede procesar la información?**\n\nEn esta lección, los estudiantes conocerán cuatro tipos comunes de procesamiento: si/entonces (condicionales); encontrar coincidencias (búsqueda); contar y comparar. Estos tipos de procesamiento serán presentados con ejemplos de varias aplicaciones. Los estudiantes analizarán más aplicaciones para determinar qué tipo de procesamiento utiliza cada una. A continuación, crearán su propia aplicación y decidirán qué tipos de procesamiento necesitaría esta para funcionar. Finalmente, realizarán una lluvia de ideas acerca de qué otros tipos de procesamientos (no incluidos en la lección principal) podrían ser útiles.",
          "purpose": "Esta lección presenta el concepto de procesamiento dentro de la resolución de problemas computacionales. La definición de procesamiento presentada en esta lección es intencionalmente fácil de comprender. El objetivo de esta lección no es que los estudiantes escriban algoritmos específicos para las aplicaciones de ejemplo, sino que entiendan principalmente que el procesamiento es todo lo que una computadora hace para convertir las entradas en salidas, y que existen distintas formas en las que puede hacer este trabajo. ",
          "student_overview": "**Pregunta del día: ¿Cuáles son las diferentes formas en que los ordenadores pueden procesar la información?**\n\nEn esta lección, aprenderás los cuatro tipos de procesamiento que los ordenadores pueden utilizar para convertir la entrada en salida.  "
        },
        "csd1-2021/Storage": {
          "name": "Almacenamiento",
          "overview": "**Pregunta del día: ¿Por qué el almacenamiento es una parte importante del proceso informático?**\n\nEsta lección presenta el último elemento del modelo computacional de la unidad: el almacenamiento. Como primera actividad, los estudiantes probarán una aplicación de \"selección de atuendos” y debatirán acerca de cuál es la información que se almacena y qué información se introduce (como entrada) cada vez que se ejecuta la aplicación. Luego, analizarán varias aplicaciones, determinarán qué información debería ser almacenada, y crearán directrices para decidir qué información almacenar. A continuación, repasarán los cuatro componentes del modelo computacional estudiados en este capítulo: entrada, salida, almacenamiento y procesamiento.  Los estudiantes tendrán una última oportunidad de volver a revisar los elementos que en lecciones anteriores clasificaron como \"computadoras”. La lección termina con una reflexión, los estudiantes comparten sus ideas de aplicaciones y cómo podrían utilizar el almacenamiento en ellas.",
          "preparation": "-   Imprima una copia de la guía de actividades para cada alumno",
          "purpose": "En el capítulo 1 de esta unidad, los estudiantes aprendieron acerca del proceso de resolución de problemas. En el capítulo 2, los estudiantes aprendieron cómo las computadoras resuelven problemas. En esta etapa del curso, los estudiantes ya saben que las computadoras: son máquinas de procesamiento de información que pueden hacer cuatro cosas con la información (entrada, salida, almacenamiento y procesamiento), son capaces de recibir información de entrada y salida, y son capaces de realizar tareas de almacenamiento y procesamiento. \nEn esta última lección, antes del proyecto final de la unidad, los estudiantes analizarán qué tipos de entrada son necesarios para resolver un problema específico y describirán el procesamiento y el almacenamiento que una computadora debería hacer para producir el resultado deseado. Con todos estos conocimientos, los estudiantes serán capaces de diseñar una aplicación para enfrentar un problema y explicar su funcionamiento.",
          "student_overview": "**Pregunta del día: ¿Por qué el almacenamiento es una parte importante del proceso informático?**\n\nEsta lección presenta el último elemento del modelo computacional de la unidad: el almacenamiento."
        },
        "csd1-2021/Project - Propose an App": {
          "name": "Proyecto - Propuesta de aplicación",
          "overview": "**Pregunta del día: ¿Cómo puede ayudarnos el modelo IOSP a diseñar una aplicación capaz de resolver problemas?**\n\nPara terminar el aprendizaje del proceso de resolución de problemas y el modelo computacional de entrada, salida, almacenamiento y procesamiento, los estudiantes propondrán una aplicación diseñada para resolver un problema cotidiano. Este proyecto se llevará a cabo durante varios días. Los estudiantes crearán un cartel que destaque las características de su aplicación y lo presentarán a la clase. Una guía de proyecto proporcionará instrucciones paso a paso para ayudar a los estudiantes a organizar sus ideas. El proyecto está diseñado para trabajar en pares, pero también puede realizarse de forma individual.",
          "preparation": "-   Imprima una copia de [r app-proposal-project/csd/2021] para cada pareja\n-   Cartulina, marcadores, y otros materiales para elaborar carteles",
          "purpose": "Este proyecto combina dos temas estudiados anteriormente en esta unidad. La resolución de problemas y el modelo computacional con sus cuatro elementos (entrada, salida, almacenamiento y procesamiento). El propósito de unir ambos temas es que los estudiantes puedan identificar problemas cotidianos y encontrar formas de solucionarlos mediante el uso de la tecnología. Los estudiantes colaborarán entre sí, mediante la creación de una aplicación y también comentando el trabajo de sus compañeros. Esta es una forma de trabajo que utilizarán durante todo el curso. El proyecto es una experiencia creativa que da a los estudiantes la oportunidad de acercar el campo de las ciencias de la computación a sus propios intereses y ambiciones.",
          "student_overview": "**Pregunta del día: ¿Cómo puede ayudarnos el modelo IOSP a diseñar una aplicación capaz de resolver problemas?**\n\nPara esta lección, los estudiantes dedicarán algunos días creando una idea para una aplicación que permita solucionar un problema del mundo real utilizando el modelo computacional de entrada, salida, almacenamiento y procesamiento. "
        },
        "csd1-2021/Intro to Problem Solving - Newspaper Table (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - La mesa de periódicos (Lección 1 Alternativa)",
          "overview": "**Pregunta del día: ¿Cómo podemos trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, los estudiantes trabajarán en grupo para diseñar mesas de periódico que puedan sostener la mayor cantidad de libros posibles. Los grupos tendrán dos intentos para trabajar en sus mesas, con el objetivo de que en el segundo intento la mesa pueda soportar más libros que en el anterior. La estructura de esta actividad es un adelanto a los distintos pasos del proceso de resolución de problemas que se presentarán con mayor detalle en la siguiente lección. Al final de la lección, los estudiantes reflexionarán acerca de sus experiencias y las relacionarán con los tipos de resolución de problemas que aprenderán durante el resto del curso.\n\n**Esta es una actividad alternativa a [Introducción a la solución de problemas Barcos de aluminio](/s/csd1-2021/lessons/1/)**",
          "preparation": "**Para cada grupo**\n\n-   2 periódicos\n-   1 rollo de cinta adhesiva\n-   Una copia de la guía de actividades\n\n**Para el docente**\n\n-   10 ó 20 libros con pesos similares.",
          "purpose": "Esta lección es una forma entretenida de presentar el concepto de resolución de problemas que se utilizará durante todo el curso. Los estudiantes aprenderán a trabajar en equipo y a utilizar su creatividad sin restricciones. El problema de las mesas de papel se puede sustituir por cualquier otra actividad en la que los estudiantes definan sus metas, elaboren un plan, intenten una solución y evalúen sus resultados para luego mejorar desde esa base de forma sistemática. El hecho de que esta actividad no sea de carácter “computacional” es intencional. La ciencia de la computación es una disciplina de resolución de problemas. Al realizar como primer experimento una actividad que no es de carácter computacional, estamos presentando a nuestra clase como un espacio de aprendizaje, enfocado en la solución de problemas generales y presentando a las ciencias de la computación como una “nueva herramienta” que podemos usar para enfrentar distintos problemas. ",
          "student_overview": "**Pregunta del día: ¿Cómo podemos trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, trabajarás con un grupo para diseñar, construie, probar, y reflexionar sobre mesas de periódico que puedan sostener la mayor cantidad de libros posibles. "
        },
        "csd1-2021/Intro to Problem Solving - Spaghetti Bridge (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - El puente de espaguetis (Lección 1 Alternativa)",
          "overview": "**Pregunta del día ¿Cómo podemos trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, los estudiantes trabajan en grupos para diseñar puentes de espagueti capaces de sostener la mayor cantidad de libros posible. Los grupos tendrán dos oportunidades para trabajar en sus puentes, con el objetivo de que el puente pueda soportar más libros en el segundo intento. La estructura de esta actividad es un adelanto a los distintos pasos del proceso de resolución de problemas que se presentarán con mayor detalle en la siguiente lección.  Al final de la lección, los estudiantes reflexionarán acerca de sus experiencias y las relacionarán con los tipos de resolución de problemas que aprenderán durante el resto del curso.\n\n**Esta es una actividad alternativa a [Introducción a la solución de problemas Barcos de aluminio](/s/csd1-2021/lessons/1/)**",
          "preparation": "**Para cada grupo**\n\n-   1 paquete de espagueti (aproximadamente 1/2 kg)\n-   1 pistola de silicona caliente / pegamento termo fusible\n-   Una copia de la guía de actividades\n\n**Para el docente**\n\n-   10 ó 20 libros con pesos y tamaños similares",
          "purpose": "Esta lección es una forma entretenida de presentar el concepto de resolución de problemas que se utilizará durante todo el curso. Los estudiantes aprenderán a trabajar en equipo y a utilizar su creatividad sin restricciones. Este problema se puede sustituir por cualquier otra actividad en la que los estudiantes definan sus metas, elaboren un plan, intenten una solución y evalúen sus resultados para luego mejorar desde esa base de forma sistemática. El hecho de que esta actividad no sea de carácter “computacional” es intencional. La ciencia de la computación es una disciplina de resolución de problemas. Al realizar como primer experimento una actividad que no es de carácter computacional, estamos presentando a nuestra clase como un espacio de aprendizaje, enfocado en la solución de problemas generales y presentando a las ciencias de la computación como una “nueva herramienta” que podemos usar para enfrentar distintos problemas. ",
          "student_overview": "**Pregunta del día ¿Cómo podemos trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, los estudiantes trabajan en grupos para diseñar puentes de espagueti capaces de sostener la mayor cantidad de libros posible. "
        },
        "csd1-2021/Intro to Problem Solving - Paper Tower (Alternate Lesson 1)": {
          "name": "Introducción a la Resolución de Problemas - La Torre de Papel (Lección 1 Alternativa)",
          "overview": "**Pregunta del día: ¿Cómo podemos trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, los estudiantes trabajarán en grupos para diseñar torres de papel que puedan mantenerse en pie lo más alto posible. Los grupos tendrán dos oportunidades para trabajar en sus torres, con el objetivo de que en el segundo intento la torre pueda ser más alta que en la vez anterior. La estructura de esta actividad es un adelanto a los distintos pasos del proceso de resolución de problemas que se presentarán con mayor detalle en la siguiente lección. Al final de la lección, los estudiantes reflexionarán acerca de sus experiencias y las relacionarán con los tipos de resolución de problemas que aprenderán durante el resto del curso.\n\n**Esta es una actividad alternativa a[Introducción a la solución de problemas - Barcos de aluminio](/s/csd1-2021/lessons/1/)**",
          "preparation": "**Para cada grupo**\n\n-   10 hojas de papel de 21 x 27 centímetros\n-   Espacio para construir la torre\n-   Una copia de la guía de actividades\n\n**Para el docente**\n\n-   Hojas de papel extra \n-   Temporizador\n-   Regla",
          "purpose": "Esta lección es una forma entretenida de presentar el concepto de resolución de problemas que se utilizará durante todo el curso. Los estudiantes aprenderán a trabajar en equipo y a utilizar su creatividad sin restricciones. Este problema, se puede sustituir por cualquier otra actividad en la que los estudiantes definan sus metas, elaboren un plan, intenten una solución y evalúen sus resultados para luego mejorar desde esa base de forma sistemática. El hecho de que esta actividad no sea de carácter “computacional” es intencional. La ciencia de la computación es una disciplina de resolución de problemas. Al realizar como primer experimento una actividad que no es de carácter computacional, estamos presentando a nuestra clase como un espacio de aprendizaje, enfocado en la solución de problemas generales y presentando a las ciencias de la computación como una “nueva herramienta” que podemos usar para enfrentar distintos problemas. ",
          "student_overview": "**Pregunta del día: ¿Cómo podemos trabajar juntos y resolver problemas en equipo?**\n\nEn esta lección, los estudiantes trabajarán en grupos para diseñar, construir, probar y reflexionar sobre una torre de papel que puedan hacer tan alto como sea posible. "
        },
        "csd1-2021/Exploring Problem Solving - Animals Theme (Alternate Lesson 3)": {
          "name": "Exploración de la Resolución de Problemas - Temática Animales (Lección Alternativa 3)",
          "overview": "**Pregunta del día: ¿Cómo podemos aplicar el proceso de resolución de problemas en diferentes tipos de problemas?**\n\nCon el objetivo de comprender mejor la importancia de cada paso, en esta lección, los estudiantes trabajarán con el proceso de resolución de problemas para solucionar tres problemas distintos. Resolverán tangramas, elegirán una mascota para varias personas y planificarán un evento de adopción de mascotas. Los problemas se vuelven cada vez más complejos y mal definidos, con el objetivo de demostrar cómo el proceso de resolución de problemas puede ser útil al enfrentar este tipo de situaciones. La lección concluye con los estudiantes reflexionando acerca de sus experiencias con el proceso de resolución de problemas. Tendrán que justificar la inclusión de cada paso y harán una lluvia de ideas con las preguntas o estrategias que puedan ayudarlos a definir problemas abiertos, ya que este suele ser el paso más importante.\n\nEs muy probable que se necesiten dos períodos de clase para completar esta lección. Los dos primeros problemas se pueden realizar en una sola clase, pero el tercero deberá trasladarse a la próxima.\n\n**Esta es una actividad alternativa a [Explorando la resolución de problemas](/s/csd1-2021/lessons/3/)**",
          "preparation": "-   Imprima la guía de actividades para cada estudiante\n-   Entregue las piezas de los Tangramas a cada grupo, o imprima una hoja de un Tangrama y proporcione tijeras a cada grupo\n-   Cartulina para registrar las estrategias de la definición de problemas en la discusión final",
          "purpose": "En esta lección los estudiantes adquieren más práctica utilizando el proceso de resolución de problemas en distintos contextos. En las actividades, se destaca que el proceso de resolución de problemas es de gran ayuda, especialmente cuando nos enfrentamos a problemas mal definidos. El paso de definición es fundamental en el proceso de resolución de problemas, es por esto que en la última actividad los estudiantes aprenden estrategias y preguntas que les serán útiles para definir mejor los problemas. Las actividades y problemas analizados hoy ayudarán para que, en la siguiente lección, los estudiantes puedan opinar y entender qué tipos de problemas pueden resolver las computadoras.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos aplicar el proceso de resolución de problemas en diferentes tipos de problemas?**\n\nCon el objetivo de comprender mejor la importancia de cada paso, en esta lección, los estudiantes trabajarán con el proceso de resolución de problemas para solucionar tres problemas distintos. "
        },
        "csd1-2021/Exploring Problem Solving - Games Theme (Alternate Lesson 3)": {
          "name": "Explorar la Resolución de Problemas - Temática Juegos (Lección 3 Alternativa)",
          "overview": "**Pregunta del día: ¿Cómo podemos aplicar el proceso de resolución de problemas en diferentes tipos de problemas?**\n\nCon el objetivo de comprender mejor la importancia de cada paso, en esta lección, los estudiantes trabajarán con el proceso de resolución de problemas para solucionar tres problemas distintos. Resolverán un laberinto, organizarán un equipo para correr lo más rápido posible y diseñarán un juego. Los problemas se vuelven cada vez más complejos y mal definidos, con el objetivo de demostrar cómo el proceso de resolución de problemas puede ser útil al enfrentar este tipo de situaciones. La lección concluye con los estudiantes reflexionando acerca de sus experiencias con el proceso de resolución de problemas. Tendrán que justificar la inclusión de cada paso y harán una lluvia de ideas con las preguntas o estrategias que puedan ayudarlos a definir problemas abiertos, ya que este suele ser el paso más importante. \n\nEs muy probable que se necesiten dos períodos de clase para completar esta lección. Los dos primeros problemas se pueden realizar en una sola clase, pero el tercero deberá trasladarse a la próxima.\n\n**Esta es una actividad alternativa a [Explorando la resolución de problemas](/s/csd1-2021/lessons/3/)**",
          "preparation": "-   Imprima la guía de actividades para cada estudiante\n-   Papel borrador\n-   Cartulina para registrar las estrategias de la definición de problemas en la discusión final",
          "purpose": "En esta lección los estudiantes adquieren más práctica utilizando el proceso de resolución de problemas en distintos contextos. En las actividades, se destaca que el proceso de resolución de problemas es de gran ayuda, especialmente cuando nos enfrentamos a problemas mal definidos. El paso de definición es fundamental en el proceso de resolución de problemas, es por esto que en la última actividad los estudiantes aprenden estrategias y preguntas que les serán útiles para definir mejor los problemas. Las actividades y problemas analizados hoy ayudarán para que, en la siguiente lección, los estudiantes puedan opinar y entender qué tipos de problemas pueden resolver las computadoras.",
          "student_overview": "**Pregunta del día: ¿Cómo podemos aplicar el proceso de resolución de problemas en diferentes tipos de problemas?**\n\nCon el objetivo de comprender mejor la importancia de cada paso, en esta lección, los estudiantes trabajarán con el proceso de resolución de problemas para solucionar tres problemas distintos. "
        }
      }
    }
  }
}