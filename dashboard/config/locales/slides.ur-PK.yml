---
ur:
  slides:
    20_wrapup:
      1:
        text: جلد ہی آنے والے نوٹ دکھائیں!
    C1_artist_intro:
      1:
        text: یہ آپ کو اپنی طرف متوجہ بلاکس ہیں. وہ سرمئی لائنوں میں بھرنے کے لئے
          جانے کے لئے جانے کے لئے کی ضرورت ہے جہاں آرٹسٹ منتقل کرنے کے لئے صحیح ایک
          کا استعمال کریں.
      2:
        text: یہ چھلانگ بلاکس ہیں. جب آپ ان کا استعمال کرتے ہیں، تو آپ کا آرٹسٹ چلتا
          ہے لیکن اپنی طرف متوجہ نہیں کرتا، لہذا اگلے گرے لائن پر جانے کے لئے ان کا
          استعمال کریں.
    C1_bee_level_intro:
      1:
        text: شہد کی مکھیوں سپر ٹھنڈی نہیں ہیں؟ پہیلیاں کے اس اگلے سیٹ میں، آپ کا
          مقصد مکھی پھولوں کو حاصل کرنے اور پھولوں سے امرت حاصل کرنے اور شہد بنانے
          کے لئے heycomb پر پرواز کرنے میں مدد کرنے کے لئے ہے. آپ کو اس مشق کے لئے
          “امرت حاصل” اور “شہد بنانے” بلاکس استعمال کرنے کی ضرورت ہو گی.
      2:
        text: 'ہر پھول میں نیکٹروں کی مختلف تعداد ہوتی ہے: 1، 2، 3، یا اس سے زیادہ۔
          ہم جانتے ہیں کہ سرخ پھولوں میں کتنی امرت ہے، کونے میں تھوڑی سی تعداد کی
          طرف سے. لہذا آپ کو آگے بڑھنے سے پہلے پھول سے تمام امرت حاصل کرنے کے لئے
          اس بات کا یقین ہو. اس کے علاوہ، ہر شہد صرف اتنا شہد پکڑ سکتا ہے: 1، 2، 3،
          یا اس سے زیادہ. لہذا شہد کے طور پر زیادہ سے زیادہ شہد بنانے کے لئے اس بات
          کا یقین کریں.'
      3:
        text: آپ کو تمام امرت حاصل کرنے کے قابل ہیں اور تمام شہد بنانے کے لئے، آپ
          کو کامیاب اور اگلے سطح پر جائیں. دوسری صورت میں، آپ کو اس پہیلی کو دوبارہ
          کوشش کرنے کی ضرورت ہے. تھوڑی دیر کے ارد گرد کھیلیں اور دیکھیں کہ یہ “مکھی”
          ایک پروگرامر کی طرح محسوس ہوتا ہے!
    C1_bee_loops:
      1:
        text: ایک لوپ سرگرمی کی تکرار ہے. تو معائنہ کرنے کے لئے ایک چھتے میں جا رہا،
          میں نے ایک فریم میں نظر آتے ہیں اور پھر میں نے اسے واپس ڈال دیا، تو میں
          نے کہ ایک ہی سرگرمی کو دوبارہ بار بار بار. یہ ایک ہی سرگرمی ایک سے زیادہ
          بار کر، کے ارد گرد looping ہے.
      2:
        text: اس سطح میں ہم چاہتے ہیں کہ شہد کی مکھی پھول سے تین امرا جمع کرے۔ تین
          “امرت حاصل کریں” بلاکس کا استعمال کرنے کے بجائے، آپ کو دوبارہ استعمال کرنے
          کے لئے جا رہے ہیں بلاک امرت تین بار حاصل کرنے کے لئے. مارو “چلائیں” اور
          آپ کو یہ حق مل گیا ہے تو دیکھیں. اچھا!
    C1_bigevent_unplugged:
      1:
        text: اس سبق کو بڑا واقعہ کہا جاتا ہے۔ یہ سب ہم اپنے پروگراموں کو کنٹرول کر
          سکتے ہیں کہ کس طرح کے بارے میں ہے اور اصل میں جس طرح ایک پروگرام کے واقعات
          کا استعمال کرتے ہوئے مکھی پر چلتا ہے، ایک بٹن کے دھکا یا ایک ماؤس کے کلک
          کی طرح تبدیل.
      2:
        text: اس سبق کے لئے، آپ کو ایک کاغذ ریموٹ کنٹرول کے ساتھ کنٹرول کیا جائے گا.
          یہ صرف ایک حقیقی لائیو ویڈیو گیم کی طرح ہے.
      3:
        text: واقعہ ایک ایسا عمل ہوتا ہے جس کی وجہ سے کچھ ہونے کا سبب بنتا ہے۔ یہ
          آپ کو ایک ماؤس اور ایک ویب پیج کے بوجھ پر بٹن پر کلک کریں جب کی طرح ہے.
          یہ ایک واقعہ ہے. جب آپ اپنی اسکرین کو سکرال کرنے کے لئے ایک ٹیبلٹ پر چھوتے
          ہیں، تو یہ ایک واقعہ بھی ہے. واقعات صارف دے کا ایک عظیم طریقہ ہیں آپ کے
          پروگرام کو براہ راست جب بھی وہ ضرورت ہے یا کرنا چاہتے ہیں.
      4:
        text: ایسی چیزیں ہوتی ہیں جن کا ہم سب جواب دیتے ہیں۔ ہم بھوکا محسوس کرتے ہیں
          اور ہم فرج یا جاتے ہیں. ہم نے میل مین آتے سنا ہے اور وہ ہمارے میل میل میل
          باکس میں رکھتا ہے اور پھر ہم اپنے میل کو حاصل کرتے ہیں. وہ صرف ایک بٹن دھکا
          یا ایک جوسٹک منتقل کرنے کے واقعات کی طرح ہیں. وہ کچھ ایسا ہوتا ہے جو ہمیں
          کچھ کرنے کے لئے متحرک کرتا ہے.
      5:
        text: ویڈیو گیمز میں، “اپ ڈیٹ” نامی ایک ایونٹ ہے اور یہ 30 یا 60 بار ایک سیکنڈ
          ہوتا ہے. ویڈیو گیم پروگرامرز کے لئے جو بٹن یا جوسٹک کے مقابلے میں ایک واقعہ
          کے طور پر تقریبا زیادہ اہم ہے.
      6:
        text: ہم کے لئے دیکھ رہے ہیں اہم واقعہ یہ ہے کہ “اپ ڈیٹ” ٹک ہو رہا ہے. اور
          پھر ہم جیوسٹک کو ٹک میں چیک کرتے ہیں. تو ہم کہتے ہیں، “اوہ، کسی نے بٹن اس
          فریم دھکا دیا ہے؟ جی ہاں یا نہیں؟” واقعات کے بغیر، کھلاڑی حرکت نہیں کر سکتا
          تھا، آپ کود نہیں سکتے تھے، آپ کو کنٹرول کرنے کے قابل نہیں ہو گا کہ کیا ہو
          رہا ہے. ویڈیو گیم کچھ بھی متحرک کرنے کے قابل نہیں ہو گا.
    C1_building_foundation:
      1:
        text: ریت مجسمہ میں آپ کو معلوم ہو گیا ہے کہ ناکامی پروگرام کا حصہ ہے. لیکن
          اگر آپ برقرار رہیں تو، یہ صرف آپ کے لئے بہتر اور زیادہ دلچسپ ہے. استقامت
          کھیل کا نام ہے۔ اس کے ساتھ رہو، آپ اسے پسند کریں گے.
      2:
        text: اس سبق کو بنیاد بنانا کہا جاتا ہے۔ اس سبق میں، ہم ایک ایسے کام پر کام
          کریں گے جس کا مطلب واقعی مشکل ہے. آپ کو پتہ چل جائے گا کہ کس طرح کم از کم
          ان کپ میں سے ایک کے طور پر لمبا ڈھانچہ بنانا ہے اور یہ ایک کتاب کے وزن کو
          برقرار رکھنے کے لئے کافی مضبوط ہو جائے گا.
      3:
        text: ایسا وقت ہو سکتا ہے کہ ہماری تخلیق کام نہ کرے۔ ہم frusrated ہو اور ترک
          کرنا چاہتے ہیں کہ اوقات ہو سکتا ہے. ان لمحات کی ایک بہت ہو سکتا ہے. لیکن
          اگر ہم کوشش جاری رکھیں، تو اسے بار بار اپنا بہترین شاٹ دیں، پھر ہمیں اس
          بات کا یقین ہے کہ ہم اسے طویل عرصہ تک حاصل کر لیں.
      4:
        text: جب آپ واقعی میں چھوڑنا چاہتے ہیں تو استقامت وہاں پھانسی کے بارے میں
          ہے. اگر آپ کچھ نیا اور مختلف بنانا چاہتے ہیں تو راستے میں بہت سی ناکامیاں
          ہوگی۔
      5:
        text: مستقل طور پر چال چلنا اور آپ کو چھوڑنے کی بجائے آپ کی ناکامیوں سے سیکھنے
          کا انتخاب کرنا ہے کیونکہ آپ مایوس ہیں. مایوسی اصل میں صرف کونے کے ارد گرد
          حیرت انگیز کچھ ہے کا مطلب ہے. تو آپ اسے حاصل کرنے سے پہلے چھوڑ نہیں ہے.
          ووو!
    C1_getting_loopy:
      1:
        text: ہیلو، میرا نام میرل کوٹب ہے اور میں ایلومنیٹ کا خالق ہوں۔ میرے کام میں،
          کچھ ایسی چیز ہے جو ہم رقص اور پروگرامنگ لائٹس دونوں میں استعمال کرتے ہیں.
          اور یہ کہ loops ہے! لوپس ایک کارروائی بار بار بار کر رہے ہیں.
      2:
        text: آپ hula ہوپ کتائی رکھنے کے لئے اپنے اعمال کی طرح، ایک سے زیادہ بار کچھ
          دہرانے جب، میں نے اس کارروائی کی ایک لوپ کارکردگی کا مظاہرہ کر رہا ہوں.
          یہ ایک لوپ ہے. یہ ایک لوپ ہے. اور یہ ایک لوپ ہے.
      3:
        text: آج ہم ایک رقص پارٹی کے لئے جا رہے ہیں. ہم ایک نیا رقص کے ساتھ loops
          کے باہر کام کریں گے. تکرار. ہم ایک رقص کا استعمال کرتے ہوئے loops کے بارے
          میں جاننے کے لئے جا رہے ہیں. آپ کو آسان اقدامات کے ایک جوڑے کو سیکھنے اور
          رقص مکمل کرنے کے بار بار ان کو دہرائیں گے.
      4:
        text: یہاں وہ مراحل ہیں جو آپ کو سیکھنے کی ضرورت ہے. اپنے ہاتھوں کو تالیاں.
          اپنے ہاتھوں کو اپنے سر کے پیچھے رکھو. اپنے ہاتھوں کو اپنی کمر پر رکھو. اپنا
          بائیں ہاتھ اوپر اٹھائیں۔ اپنا داہنا ہاتھ اوپر اٹھائیں۔ بہت آسان، ٹھیک ہے؟
          آپ کو پتہ چل جائے گا کہ آپ loops میں کچھ رقص اقدامات ڈال کر ہدایات کو کم
          کر سکتے ہیں.
      5:
        text: ہم اصل میں ہمارے رقص میں loops کا استعمال کرتے ہیں. رقاص کمپیوٹر پہنے
          ہوئے ہیں، سب ایک ہی نیٹ ورک میں ہیں۔ میں بار بار ایک ہی رقاص کے ذریعے روشنی
          لوپ سکتا ہے. لوپ میں میں ایک iteration ہو سکتا ہے جہاں میں کہیں گے آپ لوپ
          جانا چاہتے ہیں ان چھ رقاص کے ذریعے بار بار اور پھر لوپ کے اندر اندر آپ کو
          روشنی کی رفتار میں اضافہ کرنا چاہتے ہیں. اور یہ کہ تمام loops کے ذریعے پیدا
          کیا ہے. لوپس کمپیوٹر سائنس میں اہم ہیں کیونکہ وہ ہمارے کام کو چھوٹا اور
          آسان بناتے ہیں.
    C1_going_places_safely:
      1:
        text: میرا نام یرمیاہ ہے۔ ہیلو! میری عمر سات سال ہے۔ مجھے اپنی ماں کے کمپیوٹر
          پر کھیلنے سے محبت ہے لیکن مجھے ہمیشہ پہلے اجازت ملتی ہے. “ماں، کیا میں کمپیوٹر
          پر جا سکتا ہوں؟ اس بات کا یقین شہد!”
      2:
        text: مجھے اپنی ماں کے کمپیوٹر سے محبت ہے کیونکہ میں انٹرنیٹ پر جا سکتا ہوں.
          انٹرنیٹ کی طرح آپ کے پڑوس کی طرح ہے. آپ ٹھنڈی جگہوں کا دورہ کر سکتے ہیں،
          آپ کے خاندان اور دوستوں سے بات کر سکتے ہیں اور آپ کو نئی چیزوں کے بہت سے
          سیکھ سکتے ہیں.
      3:
        text: کل، میں نے ایک چڑیا گھر کا دورہ کیا جو میرے گھر کے قریب ہے. میں نے ایک
          بچے کو زیبرا دیکھا. میں نے اس کی تصویر لی اور اس کی لٹیروں کا رنگ بدل دیا،
          پھر ایک ٹوپی بھی شامل کی اور اسے اپنے عجیب جانوروں کے مجموعہ میں شامل کر
          دیا۔ بہت اچھا! بعد ازاں، میں بہت دور ایک جگہ چلا گیا۔ میں نے کینیا کا دورہ
          کیا. یہ افریقہ کا ایک ملک ہے۔ وہاں بہت سے زیبرے رہتے ہیں۔
      4:
        text: کبھی کبھی انٹرنیٹ پر میں ان لوگوں سے بات کرتا ہوں جنہیں میں جانتا ہوں،
          جیسے میری دادی جو دوسری حالت میں رہتی ہے. ہیلو دادی! وہ مجھے کوکیز بنا رہی
          ہے کہ وہ مجھے میری سالگرہ کے لئے بھیجیں گے. “سوادج، میں نے انٹرنیٹ smellorama
          تھا چاہتے ہیں!” میں انٹرنیٹ پر مختلف لوگوں سے بات کر سکتا ہوں، جیسے میرے
          کزن لیکن میں صرف ان لوگوں سے بات کرتا ہوں جنہیں میں جانتا ہوں.
      5:
        text: مجھے انٹرنیٹ پر سب سے زیادہ پسند ہے کہ میں مذاق کھیل کھیلنے کے لئے حاصل
          کرتا ہوں. سکور! میں نئی چیزوں کو اپنی طرف متوجہ اور تخلیق کرنا بھی پسند
          کرتا ہوں اور اپنے دوستوں کے ساتھ اس کا اشتراک کرتا ہوں. ڈاؤن لوڈ، اتارنا!
          کبھی کبھی میں ویب سائٹس کا دورہ کرتا ہوں جہاں میں نئی چیزیں سیکھتا ہوں لیکن
          میں ہمیشہ ویب سائٹس پر رہتا ہوں جو میرے لئے صحیح ہیں. واہ، ڈایناسور!
      6:
        text: 'انٹرنیٹ ایک سپر مزہ جگہ ہے. لیکن جیسے ہی آپ اپنے پڑوس میں سڑک پار کرتے
          ہیں، تو آپ کو آن لائن جانے پر بھی محتاط رہنا ہوگا. یہاں یاد رکھنے کے لئے
          تین اصول ہیں. قاعدہ نمبر 1: ہمیشہ اپنے والدین سے پہلے پوچھیں۔ قاعدہ نمبر
          2: صرف ان لوگوں سے بات کریں جنہیں آپ جانتے ہیں۔ قاعدہ نمبر 3: ایسے مقامات
          پر رہیں جو آپ کے لئے صحیح ہیں.'
      7:
        text: واہ، کہ مذاق تھا! رات کے کھانے کا وقت. میں اب لاگ ان کر رہا ہوں. میں
          اگلے ملاحظہ کر سکتے ہیں جہاں دیکھنے کے لئے دوبارہ لاگ ان کرنے کے لئے انتظار
          نہیں کر سکتے.
    C1_happy_maps_unplugged:
      1:
        text: اس سبق کو خوش نقشے کہا جاتا ہے۔ آج ہم والا ہمارے پیارے تھوڑا دوست Flurb
          اس کے پھل کو حاصل کرنے میں مدد کر رہے ہیں.
      2:
        text: اپنے Flurb آپ کے پھل کے لئے جانا بنائیں. ایسا کرنے کے لئے آپ Flurb جاؤ
          اور تیر کے ساتھ اس کی براہ راست کرنے کی ضرورت ہے جس طرح پتہ لگانے کی ضرورت
          ہو گی. سیب کو حاصل کرنے کے لئے Flurb کے لئے، Flurb کو کیا سمت جانا ہے؟ یہ
          اوپر جانے بنانے کے لئے لائن.
      3:
        text: اسے حاصل کرنے کے لئے آپ اس سمت کو دائرہ کرتے ہیں جو اسے جانا ہے.
      4:
        text: نقشہ ہے کہ آپ کو حل کرنے کی کوشش کر رہے ہیں اگلے gluing تیر کی طرف سے
          آپ الگورتھم بنائیں. دوسرا یہ ایک ہی ہے لیکن یہ نیچے جا رہا ہے.
      5:
        text: یہ کاغذ کے ساتھ پروگرامنگ کی طرح ہے. اور یہ بات ہے!
    C1_maze_debugging:
      1:
        text: ڈیبگنگ مسائل کو تلاش اور فکسنگ کر رہا ہے. مسائل کو ڈیبگ کرنے کے بہت
          سے طریقے ہیں. سب سے آسان میں سے ایک قدم قدم کی طرف منتقل کرنا ہے جب تک کہ
          آپ کہاں تلاش کرتے ہیں جہاں کچھ غلط ہو جاتا ہے. یہاں میں بیم پر واپس ہینڈسپرنگ
          کرنے کی کوشش کر رہا ہوں لیکن میں گر رہا ہوں.
      2:
        text: میں قدم بہ قدم ہر حصے سے گزرا اور احساس ہوا کہ میری غلطی کہاں تھی۔ میں
          صحیح طریقے سے بیم پر اپنے ہاتھ نہیں ڈال رہا تھا. لہذا میں نے اپنے نئے ہاتھ
          کی پوزیشن کے ساتھ بیم پر ایک اور واپس ہینڈسپینگ کی کوشش کی اور میں نے اسے
          مل گیا. مجھے واقعی خوشی تھی کہ میں نے اپنی پیٹھ کے ہینڈسپینگ کو ڈیبگ کیا.
      3:
        text: ڈیبگنگ کے بارے میں جاننے کے لئے، ہم اسٹیج پر پہلے سے ہی بلاکس کے ایک
          سیٹ کے ساتھ شروع کرتے ہیں. آپ محسوس کریں گے کہ یہ بلاکس آپ کو مقصد تک نہیں
          پہنچیں گے. ہمیں حل کو ڈیبگ کرنے اور اسے ٹھیک کرنے کی ضرورت ہے. کیا غلط ہوا؟
          آپ کو ایک اور بلاک مغرب جا رکھنے کی ضرورت ہے کہ محسوس کریں گے.
      4:
        text: کی ایک اور مغرب بلاک انہوں نے مزید کہا کی طرف سے اس کو ٹھیک کرتے ہیں
          اور آپ کو یہ صحیح ہے تو دیکھنے کے لئے رن مارنے. ہاں، تم نے یہ مل گیا!
    C1_maze_intro_sequencing:
      1:
        text: اس پہیلی کے لئے، آپ کو سور پرندوں کو حاصل کرنے کی ضرورت ہے. پہیلی کو
          دیکھو اور اسے لینے کی ضرورت ہے کیا ہدایات کو دیکھتے ہیں.
      2:
        text: آپ کو ٹول باکس سے ورک اسپیس پر بلاکس کو ھیںچنے کی ضرورت ہے. اس بات کو
          یقینی بنائیں کہ یہ “جب چلائیں” بلاک کے تحت ہے اور جب آپ سوچتے ہیں کہ آپ
          کو صحیح حل مل گیا ہے، تو آپ “چلائیں” پر کلک کریں اور پرندوں کو سور پر جائیں.
    C1_maze_loops:
      1:
        text: کمپیوٹر میں واقعی اچھے ہیں کہ ایک حکم دہرانے ہے. ایک شخص کے طور پر،
          آپ واقعی بور ہو جائے گا اگر آپ کو ایک ہی بات کرنا پڑا تو ایک قطار میں بہت
          سے اور بہت سے بار. لیکن ایک کمپیوٹر ایک ہی بات لاکھوں یا اس سے بھی اربوں
          بار کر سکتے ہیں اور بور نہیں ہو اور واقعی اچھی طرح سے باہر لے جانے کے قابل
          ہو.
      2:
        text: مثال کے طور پر، اگر میں فیس بک پر سب کو ایک ای میل بھیجنے کی طرف سے
          سالگرہ مبارک ہو تو، مجھے صدی سے زیادہ لگ سکتا ہے کہ اصل میں ان تمام ای میلز
          کو سب کو لکھیں. لیکن کوڈ کی صرف چند لائنوں کے ساتھ، میرے پاس ایک نظام ہو
          سکتا ہے فیس بک پر ہر ایک کو ایک ای میل بھیجیں جو انہیں سالگرہ مبارک ہو.
      3:
        text: اس سطح میں سور کو پرندوں کو حاصل کرنے کے لئے... ورکشاپ پر تین شمالی
          بلاکس کو ھیںچیں بجائے، آپ “دوبارہ” بلاک استعمال کریں گے. ورک اسپیس پر “دوبارہ”
          بلاک کو ڈریگ کریں اور نمبر 3 درج کریں. پھر “چالو شمال” بلاک کو “دوبارہ”
          بلاک میں گھسیٹیں اور “چلائیں” کو ماریں تاکہ یہ دیکھنے کے لئے کہ آیا آپ نے
          اسے صحیح کیا ہے. مبارک ہو، آپ کو مل گیا!
    C1_moveitmoveit_unplugged:
      1:
        text: اس سبق کو کہا جاتا ہے اسے منتقل کریں، اسے منتقل کریں. ایک ساتھ مل کر
          ہم نے اپنے دوستوں کو حاصل کرنے کے لئے ایک پروگرام لکھنے کے لئے جا رہے ہیں
          کمپاس کے ساتھ شروع سے مسکراہٹ چہرے مقصد کے لئے گلاب.
      2:
        text: لیکن مسکراہٹ کا سامنا ہے اور صرف ایک شخص جانتا ہے کہ وہاں کیسے جانا
          ہے. چلو اس پروگرام کو شروع کر دیا.
      3:
        text: ایک پروگرام ایک الگورتھم ہے کہ کچھ میں کوڈت کیا گیا ہے کہ ایک مشین کی
          طرف سے چلایا جا سکتا ہے. ہم میں سے بیشتر ایک پروگرام کے بارے میں سوچتے ہیں
          کہ کچھ کے طور پر ہم ایک کمپیوٹر کے لئے لکھتے ہیں. پروگرام اس کے لئے بہت
          اچھے ہیں لیکن وہ دوسری جگہوں پر بھی مددگار ہیں. آپ اپنا کھیل بنا سکتے ہیں
          یا اس سے بھی آپ کے لئے چیزیں کرنے کے لئے ایک روبوٹ پروگرام کر سکتے ہیں.
    C1_pair_programming:
      1:
        text: آج ہم جوڑی پروگرامنگ کے بارے میں جاننے کے لئے جا رہے ہیں. جوڑی پروگرامنگ
          میں آپ ایک ٹیم کے طور پر کام کرتے ہیں. دو لوگوں کو ایک کمپیوٹر کا استعمال
          کیوں کرنا چاہئے؟ کیونکہ دو سر ایک سے بہتر ہوتے ہیں۔ جوڑی پروگرامنگ میں آپ
          اور آپ کے ساتھی ایک کمپیوٹر پر ایک دوسرے کے ساتھ بیٹھ کر جا رہے ہیں اور
          آپ دونوں ایک ہی منصوبے پر کام کرنے جا رہے ہیں.
      2:
        text: جوڑی پروگرامنگ میں، ایک شخص ڈرائیور ہے اور دوسرا شخص نیویگیٹر ہے، جیسے
          گاڑی چلانا. ڈرائیور کمپیوٹر پر بیٹھتا ہے اور ایک کی بورڈ اور ماؤس یا ٹچ
          اسکرین کا استعمال کرتے ہوئے اور کمپیوٹر کے اہم اعمال کو کنٹرول کرتا ہے.
          دوسرا شخص نیویگیٹر ہے. نیویگیٹر ڈرائیور کے سوالات کا جواب دینے اور ممکنہ
          مسائل یا غلطیوں کی طرف اشارہ کرکے ڈرائیور کی مدد کرتا ہے.
      3:
        text: مواصلات کامیاب جوڑی پروگرامنگ کی کلید ہے. کوئی توہین نہیں، احترام کرو،
          ایک بوسی نیویگیٹر نہ بنو، کیونکہ کوئی بھی پس پردہ ڈرائیور پسند نہیں کرتا.
          آپ اور آپ کے ساتھی کو ہمیشہ بات کرنی چاہئے. ڈرائیور اس بات کی وضاحت کر سکتا
          ہے کہ وہ کیا کر رہی ہے۔ اور نیویگیٹر میں مدد مل سکتی ہے کہ اگلے کیا کرنا
          ہے.
      4:
        text: نیویگیٹر کو بڑی تصویر کے بارے میں سوچنا چاہئے اور ڈرائیور تفصیلات پر
          توجہ مرکوز کرتا ہے. دونوں کردار اہم ہیں۔ جوڑی پروگرامنگ ایک ٹیم کے طور پر
          مل کر کام کرنے کے بارے میں ہے.
    C1_planting_seed:
      1:
        text: اس سبق کو بیج لگانا کہا جاتا ہے اور یہ الگورتھم کو سمجھنے میں ہماری
          مدد کرے گا. الگورتھم مخصوص ہدایات ہیں جو حکم کی وضاحت کرتے ہیں جس میں کچھ
          کرنا ہے. ناشتا کھانے یا اپنے دانتوں کو برش کی طرح بھی روزمرہ چیزیں ایک کام
          حاصل کرنے کے لئے چھوٹے اقدامات کی ضرورت ہوتی ہے کہ الگورتھم ہیں.
      2:
        text: کمپیوٹر واقعی ہوشیار ہو سکتے ہیں لیکن وہ صرف آپ کو سمجھ سکتے ہیں اگر
          آپ انہیں بتائیں کہ آپ قدم بہ قدم کیا چاہتے ہیں. الگورتھم کے بارے میں بڑی
          بات یہ ہے کہ اگر آپ ترتیب میں ہدایات پر عمل کریں، آپ کو کچھ ایسا کر سکتے
          ہیں جو آپ کو معلوم نہیں تھا کہ کس طرح وقت سے آگے کرنا ہے. یہ ایک ہدایت کی
          پیروی کی طرح ہے.
      3:
        text: آج ہم ایک الگورتھم کا استعمال کرتے ہوئے ہمارے اپنے بیج پلانٹ جا رہے
          ہیں. تصاویر کے علاوہ کاٹنے کی طرف سے آپ کے اپنے الگورتھم بنائیں. ایک بیج
          لگانے میں اقدامات ظاہر ہے کہ تصاویر کو منتخب کریں اور صحیح ترتیب میں ان
          تصاویر کا بندوبست کریں.
      4:
        text: اب، یہ آپ کو دیکھنے کے لئے اگر آپ کے الگورتھم کام کرتا ہے وقت ہے. الگورتھم
          میں بہت احتیاط سے اقدامات پر عمل کریں. کیا وہ صحیح ترتیب میں ہیں؟ کیا آپ
          الگورتھم کی پیروی کرکے بیج لگانے میں کامیاب ہوئے ہیں؟ یہ تصاویر کے ساتھ
          پروگرامنگ کی طرح ہے!
      5:
        text: جب ہم چاکلیٹ بنانا چاہتے ہیں، اس عمل کے لئے بہت سے بڑے اقدامات ہیں اور
          ان بڑے اقدامات میں سے ہر ایک چھوٹے اقدامات کا ایک سیٹ ہے اور مختلف ترکیبیں
          یا الگورتھم ہیں ہم کس طرح چاکلیٹ چاکلیٹ چاہتے ہیں پر منحصر ہے. ہر قدم اہم
          ہے حتٰی کہ چھوٹے بھی، تاکہ ایک قدم کے بغیر باقی حصہ مکمل نہ ہو سکے۔ الگورتھم
          کہ دوسروں کو سمجھ سکتے ہیں کی تشکیل واقعی اہم ہے. یہی وجہ ہے کہ ہر قدم کو
          لکھنا پڑتا ہے تاکہ جو بھی کرے اس کا نتیجہ یکساں ہو جائے۔
    C1_playlab_storytelling:
      1:
        text: تخلیقی حاصل کرنے اور کہانی بتانے کے لئے اپنی کوڈنگ کی مہارت کا استعمال
          کرنے کا وقت. آپ کی کہانی اداکاروں پڑے گا اور آپ ان اداکاروں بات کرتے ہیں
          اور ایک دوسرے کے ساتھ بات چیت کرنے کے قابل ہو جائے گا. سوچنا شروع کریں کہ
          آپ کس قسم کی کہانی بتانا چاہتے ہیں.
      2:
        text: بلی ہمیشہ کتے سے خوفزدہ رہا ہے اور کیا اگر بلی کے اعداد و شمار سے پتہ
          چلتا ہے کہ کتا اچھا بننے کی کوشش کر رہا ہے؟ “جب چلائیں” بلاک سب کچھ شروع
          ہوتا ہے. “اقدام” بلاک آپ کے کردار کو منتقل کرے گا اور “کا کہنا ہے کہ” بلاک
          آپ کے کردار کو جو بھی آپ ٹائپ کریں کہہ دے گا.
      3:
        text: یہ آپ کو دوسرے بلاکس تک لنک کر سکتے ہیں جس میں “اداکاروں ٹکرانے جب”
          بلاک ہے.
      4:
        text: میں کتے پر آ کر کہہ رہا تھا “ہیلو” لیکن پھر بلی خوفزدہ ہو گئی تو وہ
          بھاگ گیا. “آہ” اگر زیادہ وقت ہوتا تو یہ ایک خوشگوار اختتام ہوتا. آخر!
    C1_spelling_bee_intro:
      1:
        text: یہ ہجے کی مکھی کی سطح ہے۔ مکھی منتقل کرنے کے لئے پہیلی ٹکڑے ٹکڑے کا
          استعمال کریں. یہ چلتا ہے کے طور پر، یہ الفاظ جادو حروف جمع کرے گا.
      2:
        text: ملاحظہ کریں کہ اگر آپ اس لفظ کو جادو کرسکتے ہیں جو آپ کو مرحلے کے نیچے
          باکس میں دیتے ہیں. لیکن محتاط شہد کی مکھی! غلط سمت منتقل کرنے سے وہ حروف
          شامل ہوں گے جو آپ نہیں چاہتے ہیں.
    C1_zuck_repeat_loop:
      1:
        text: کمپیوٹر میں واقعی اچھے ہیں کہ ایک حکم دہرانے ہے. ایک شخص کے طور پر،
          آپ واقعی بور ہو جائے گا اگر آپ کو ایک ہی بات کرنا پڑا تو ایک قطار میں بہت
          سے اور بہت سے بار. لیکن ایک کمپیوٹر ایک ہی بات لاکھوں یا اس سے بھی اربوں
          بار کر سکتے ہیں اور بور نہیں ہو اور واقعی اچھی طرح سے باہر لے جانے کے قابل
          ہو.
      2:
        text: مثال کے طور پر، اگر میں فیس بک پر سب کو ایک ای میل بھیجنے کی طرف سے
          سالگرہ مبارک ہو تو، مجھے صدی سے زیادہ لگ سکتا ہے کہ اصل میں ان تمام ای میلز
          کو سب کو لکھیں. لیکن کوڈ کی صرف چند لائنوں کے ساتھ، میرے پاس ایک نظام ہو
          سکتا ہے فیس بک پر ہر ایک کو ایک ای میل بھیجیں جو انہیں سالگرہ مبارک ہو.
      3:
        text: اس مثال میں، آپ کا مقصد سور حاصل کرنے کے لئے پرندوں کو منتقل کرنے کے
          لئے ہونے جا رہا ہے. اب، ہم بار بار بلاک استعمال کرنے کے قابل ہو جائے کرنے
          کے لئے جا رہے ہیں ترتیب میں یہ بہت آسانی سے ایسا کرنے کے قابل ہو جائے کرنے
          کے لئے. آپ کمپیوٹر کو ایک اقدام آگے بڑھانے کے لئے پانچ بار کمانڈ دینے کی
          طرف سے ایسا کر سکتے ہیں یا تو پرندوں کو ایک قدم کو آگے بڑھانے کے لئے سور
          کو ہر وقت یا آپ کو صرف کمپیوٹر بتا سکتے ہیں ایک بار آگے بڑھنے کے لئے، اور
          پھر اسے بتاو کہ پانچ بار دہرانے کے لئے اور یہ ایک ہی بات کروں گا.
      4:
        text: ایسا کرنے کے لئے، آپ کو اپنے اقدام آگے کمانڈ ھیںچیں اور پھر آپ کو دوبارہ
          بلاک کے اندر ڈال دیا. اور تم اس پر کلک کریں اور یہ بتاو کہ کتنی بار آپ کو
          بلاک دوبارہ کرنے کے لئے یہ بتانے کے لئے کر سکتے ہیں کتنے اقدامات آپ اسے
          آگے لے جانا چاہتے ہیں.
      5:
        text: ایک اور بات یہ ہے کہ آپ کے طور پر بہت سے حکم دیتا ہے کے طور پر ڈال کر
          سکتے ہیں آپ دوبارہ بلاک کے اندر چاہتے ہیں. تو اس مثال میں، آپ کو یہ کہہ
          رہے ہیں آگے منتقل کرنے کے لئے اور بائیں باری ہے، جو یہ پانچ بار کروں گا.
          مزہ کرو!
    C2_artist_debugging:
      1:
        text: یہاں ہم نے پہلے ہی ہمارے کام کی جگہ میں کچھ بلاکس ہے. لیکن کچھ غلط ہے.
      2:
        text: چلو رفتار کو سست کرکے اس کوڈ کو ڈیبگ کرتے ہیں اور اسے دیکھتے ہیں کیونکہ
          یہ قدم بہ قدم ہر بلاک مرحلہ سے گزرتا ہے.
      3:
        text: اوہ، مسئلہ ہے! بلی کی whiskers 75 پکسلز طویل ہیں، 25 نہیں.
    C2_artist_intro:
      1:
        text: آپ کو بھی دوڑ کے لئے کوالیفائی نہیں کرے گا اگر آپ کو کمپیوٹر سائنس میں
          ماہر ہیں جو لوگوں کی ضرورت نہیں ہے کیونکہ زیادہ سے زیادہ اعداد و شمار کے
          کاریں جمع اور ضرورت لوگوں کو ہے کہ پروگراموں لکھ سکتے ہیں کہ کس طرح آپ کو
          کارکردگی کی تعمیر کے لئے کس طرح باہر اعداد و شمار کرنے کے لئے جاری اعداد
          و شمار کر سکتے ہیں کے قابل ہو جائے کرنے کے لئے.
      2:
        text: ان پہیلیاں میں، آپ کو مختلف سائز اپنی طرف متوجہ کرنے کے لئے ایک پنسل
          کا استعمال کرتا ہے کہ ایک آرٹسٹ ہو جائے گا. جہاں بھی آپ کا آرٹسٹ جاتا ہے،
          وہ آپ کے پیچھے ایک لائن کھینچ لے گا.
      3:
        text: کینوس کے ارد گرد منتقل کرنے کے لئے، آپ کو آگے بڑھانے کے بلاک کا استعمال
          کریں گے. یہاں اقدام فارورڈ بلاک کا کہنا ہے کہ 100 پکسلز کی طرف سے آگے بڑھیں.
          جب ہم رن مارا، کیا ہوتا ہے؟ آرٹسٹ ایک مخصوص رقم آگے بڑھتا ہے اور یہ رقم
          100 پکسلز ہوتی ہے. پکسلز آپ کے کمپیوٹر کی سکرین پر بنیادی طور پر بہت چھوٹے
          چوکوں ہیں.
      4:
        text: ہم اس پہیلی میں ہے دوسرے بلاک کا کہنا ہے کہ 90 ڈگری کی طرف سے صحیح باری
          ہے. اور جب ہم اسے باہر کھینچتے ہیں تو ہمارے آرٹسٹ کو ایک خاص مقدار میں تبدیل
          کر دیتا ہے. لہذا آپ اس کے ارد گرد کھیل سکتے ہیں کہ آپ کتنی دور آرٹسٹ کو
          تبدیل کرنا چاہتے ہیں. یہ 90 ڈگری کی باری ہے۔
      5:
        text: اور یہ 120 ڈگری کی باری ہے. اور یاد رکھیں، آپ کو پکسلز اور ڈگری کے لئے
          تعداد کے آگے تیر پر کلک کر کے ان اقدار کو تبدیل کر سکتے ہیں. اپنے آرٹسٹ
          کے ساتھ ڈرائنگ کا لطف اٹھائیں!
    C2_artist_loops:
      1:
        text: یہاں ہم دوبارہ استعمال کرنے جا رہے ہیں بلاک ہمیں اقدامات کو بچانے میں
          مدد کرنے کے لئے جب ہم اپنے آرٹسٹ پروگرامنگ کر رہے ہیں. ہمارے پاس پہلے سے
          ہی ہمارے اسٹیج پر کچھ بلاکس ہیں لیکن وہ ہمیں شروع کرنے کے لئے صرف وہاں ہیں.
      2:
        text: لوپ ان بلاکس چار بار پورے مربع اپنی طرف متوجہ کرنے کے لئے، ہم صرف بار
          بار بلاک ھیںچیں اور اقدام فارورڈ ڈال دیا اور دوبارہ بلاک کے اندر صحیح بلاکس
          کی باری ہے. ہم رن مارا جب، آرٹسٹ چوک مکمل کرنے کے لئے ان اقدامات چار بار
          دہرایا جائے گا.
    C2_bee_conditionals:
      1:
        text: یہ مشروط بلاک ہے. اس میں کہا گیا ہے کہ اگر کوئی امرت یا شہد ہے جو کسی
          عدد سے کم، برابر یا اس سے زیادہ ہے تو پھر کچھ کریں.
      2:
        text: یہ اس وقت مفید ہے جب ہم نہیں جانتے کہ کتنا امرت یا شہد حاصل کرنا ہے،
          جیسا کہ ہم یہاں اس سوالیہ نشان کے ساتھ دیکھتے ہیں.
      3:
        text: اس مثال میں، ہم کہنے جا رہے ہیں اگر جامنی پھول 0 سے زیادہ امرت ہے، امرت
          حاصل کریں. یہ ہماری مکھی کو بتائے گا کہ جب تک وہ وہاں موجود ہے امرت حاصل
          کرتے رہیں. تا-دہ!
    C2_bee_debugging:
      1:
        text: کیا آپ نے کبھی ایک پروگرام کو ڈیبگنگ کے بارے میں سنا ہے؟ اس طرح آپ کو
          پتہ چلتا ہے کہ کیا کام نہیں کر رہا ہے. جب آپ کوڈ کو ڈیبگ کرتے ہیں، تو آپ
          غلطیوں کی شناخت اور ہٹاتے ہیں.
      2:
        text: یہاں ہمیں اپنے کام کی جگہ پر پہلے سے ہی چند بلاکس دیئے گئے ہیں. ہم بلاکس
          کے ذریعے چلنے کے لئے قدم بٹن استعمال کرنے کے لئے جا رہے ہیں، قدم بہ قدم،
          اگر یہ صحیح حل ہے اور جہاں ہم اسے ٹھیک کرنے کی ضرورت ہو سکتی ہے کو دیکھنے
          کے لئے.
      3:
        text: ایسا لگتا ہے کہ ہمارا مسئلہ ہے! ہم ایک اور اقدام آگے بلاک کی ضرورت ہے.
          قدم کے بٹن کی شناخت کی طرف سے ہمیں ہماری مسئلہ ڈیبگ میں مدد ملتی ہے جہاں
          غلطی ہے تو ہم اسے ٹھیک کر سکتے ہیں.
    C2_bee_loops:
      1:
        text: ایک لوپ سرگرمی کی تکرار ہے. معائنہ کرنے کے لئے ایک چھتے میں جا رہے ہیں،
          میں نے ایک فریم میں نظر آتے ہیں، اور پھر میں نے اسے واپس ڈال دیا. مجھے لگتا
          ہے کہ ایک ہی سرگرمی ایک سے زیادہ بار دہرائیں. یہ ایک ہی سرگرمی ایک سے زیادہ
          بار کر، کے ارد گرد looping ہے.
      2:
        text: یہ دوبارہ بلاک ہے. جو کچھ بھی آپ دہرائیں بلاک کے اندر ڈالیں گے وہ ان
          اعمال کو بار بار بار دہرائیں گے جو آپ اسے بتائیں گے. مثال کے طور پر، اس
          سطح میں، بلکہ آگے منتقل ھیںچیں اور تین بار امرت حاصل کرنے کے بجائے، ہم صرف
          انہیں باہر ھیںچیں جا رہے ہیں ہر ایک بار اور کارروائی تین بار دہرائیں. جس
          نے اِس کو آسان کر دیا!
    C2_binary_bracelets:
      1:
        text: یہ بائنری کمگن سبق ہے. ہم اپنے ابتدائی پہلوؤں کو ایک کڑا پر کوڈ کرنے
          جا رہے ہیں جسے ہم پہن سکتے ہیں اور اپنے تمام دوستوں کو دکھا سکتے ہیں!
      2:
        text: بائنری صرف دو اختیارات کا استعمال کرتے ہوئے معلومات کی نمائندگی کرنے
          کا ایک طریقہ ہے. کبھی کبھی لوگ صرف 1s اور 0s کے طور پر اس کے بارے میں سوچتے
          ہیں. لیکن آپ کے مجموعے کے ساتھ بائنری کی نمائندگی کر سکتے ہیں پر یا بند،
          اوپر اور نیچے، میں اور باہر یا واقعی مخالف کے کسی بھی سیٹ.
      3:
        text: ہیلو، میں اورین ہوں اور میں پروگرام روبوٹ یہاں کھیلیں IM میں. ان کی
          سب سے بنیادی سطح پر تمام کمپیوٹر اور روبوٹ دماغ تھوڑا الیکٹرانک دروازے ہیں.
          جب دروازہ کھلا ہوتا ہے تو بجلی اس کے اندر سے بہہ سکتی ہے اور جب اسے بند
          کیا جاتا ہے تو بجلی نہیں رہ سکتی۔
      4:
        text: روبوٹ پر بائنری کی ایک مثال روبوٹ کی آنکھوں ہے. روبوٹ کی آنکھیں ایل
          ای ڈی ہیں اور وہ روشنی ہیں جو یا تو یا بند ہیں. یہ ایک بائنری نظام ہے، ایک
          یا دوسرے. ہم بائنری تعداد کی نمائندگی کرنے کے لئے لائٹس استعمال کر سکتے
          ہیں. اگر ہم روبوٹ کا ایک سیٹ ہے، ہم کہہ سکتے ہیں کہ سب سے پہلے روبوٹ 1s
          جگہ ہے اور دوسرا روبوٹ 2s جگہ ہے، تیسری روبوٹ 4s جگہ ہے اور اسی طرح. یہی
          وجہ ہے کہ آپ کو ایک بائنری نمبر کی نمائندگی کرتے ہیں کس طرح ہے. روبوٹ ان
          بائنری آنکھوں کے ساتھ ایسا کریں گے اور آپ کے لئے اسے باہر شمار کریں گے.
    C2_conditionals_with_cards:
      1:
        text: اس سبق کو کارڈ کے ساتھ مشروط کہا جاتا ہے. ہر روز آپ جو کچھ دیکھتے اور
          سُنتے ہیں اُس کی بنیاد پر فیصلے کرتے ہیں۔
      2:
        text: میں پارک پر چلنا چاہتا ہوں لیکن سب سے پہلے مجھے یہ فیصلہ کرنا ہوگا کہ
          مجھے چھتری لانا چاہئے یا نہیں. تو میں کھڑکی سے باہر نظر آتے ہیں. یہ ابر
          آلود ہے تو میں اپنی چھتری لے جا رہا ہوں. ورنہ، میں کچھ دھوپ لے جاؤں گا.
          میں نے بہتر چھتری لے جائے گا لگتا ہے. جو میں دیکھتا ہوں اور سنتا ہوں اس
          بات کا تعین کرتا ہوں کہ میں پارک میں کیا لے جاتا ہوں۔
      3:
        text: مشروط کھیل میں بھی استعمال کیا جاتا ہے. آج ہم مشق کرنے جا رہے ہیں ایک
          کارڈ کھیل کے ساتھ مشروط استعمال کرتے ہوئے. اس کھیل میں، جو کارڈ میں اپنی
          طرف متوجہ کرتا ہوں اس بات کا تعین کرتا ہے کہ میرے دوست کیا کرنے جا رہے ہیں.
          میں نے ایک سات اپنی طرف متوجہ تو، سب claps. ورنہ، ہر کوئی کہتا ہے” awwwww۔”
          چلو اس کی کوشش کرتے ہیں! “Awwe” “چیئرز”
      4:
        text: میں شرط رکھتا ہوں کہ آپ ایسے کھیل بنا سکتے ہیں جو مشروط کے ساتھ بھی
          زیادہ مزہ ہیں. یہ ایک کوشش دے دو! کنڈیشنلز وہ ہیں جو کمپیوٹرز کو ہوشیار
          لگاتے ہیں. ایک کمپیوٹر پروگرام جس میں مشروط شامل ہوتے ہیں وہ صارف پر رد
          عمل کر سکتا ہے اور اس کے عمل کو تبدیل کر سکتا ہے۔
      5:
        text: اپنے پسندیدہ ویڈیو گیم کے بارے میں سوچو. کیا آپ دوسروں کے مقابلے میں
          کچھ اعمال کے لئے زیادہ پوائنٹس حاصل کرتے ہیں؟ یہ اس لئے ہوتا ہے کیونکہ کمپیوٹر
          مشروط استعمال کر رہا ہے. یہ ایک کمپیوٹر فیصلہ کرنے کا طریقہ ہے. کس طرح کے
          بارے میں، آپ کو ہدف مارا تو، آپ دس پوائنٹس کماتے ہیں. ورنہ، آپ تین کھو دیتے
          ہیں. جب آپ جانتے ہیں کہ کس طرح مشروط کام کرتے ہیں، تو آپ ہر قسم کے دلچسپ
          کھیل بنا سکتے ہیں.
    C2_digital_footprint:
      1:
        text: آپ کے سر پر آپ کو آپ کی ٹوپی پکڑ اور آپ کے سمارٹ آپ کو بتائیں گے کہ
          آپ کہاں ہیں اور چڑیا گھر کے بارے میں سوچنے کے لئے، اور آپ اور آپ کو ہیلو
          نوڈ کرنے کے لئے! اپنے سر کا استعمال کریں جب آپ آن لائن ہوں تو آپ کے دماغ
          کے اندر کیا رکھنا اور جاننا کہ کس طرح محفوظ رہنا ہے، اپنی زندگی کو کچھ نجی
          جگہ کیسے دینا ہے! آپ کے سر سے نیچے آپ کے انگلیوں کو روکنے کے لئے، اس کے
          بارے میں سوچنا. آپ کی ناک تک آپ کے پاؤں سے، روکنے اور آن لائن سوچتے ہیں!
      2:
        text: بڑھنے اور بڑھنے کے لئے اپنے دل کا استعمال کریں، اور اپنے آپ کو ایک صحت
          مند چمک دینے کے لئے، اور ایک ویلنٹائن بنانے کے لئے، کسی کو بتاو کہ تم میرا
          ہو جائے گا! جب آپ آن لائن ہوں تو اپنے دل کا استعمال کریں، محسوس کریں کہ
          صحیح اور ہمیشہ قسم کی ہے، اور اپنے دوستوں کا احترام ظاہر کریں، انٹرنیٹ پر
          منصفانہ اور اچھا ہونا. آپ کے سر سے نیچے آپ کے انگلیوں کو روکنے کے لئے، اس
          کے بارے میں سوچنا. آپ کی ناک تک آپ کے پاؤں سے، روکنے اور آن لائن سوچتے ہیں!
      3:
        text: گیلے ہو رہی سے اپنے کپڑے رکھنے کے لئے، اور آپ کے پسندیدہ آستین پہننے
          کے لئے اور آپ کو پرواز اور یقین بنانے میں مدد کرنے کے لئے، اپنے پالتو جانوروں
          کو گلے لگانے کے لئے اپنے بازو کا استعمال کریں. جب آپ آن لائن ہیں تو اپنے
          بازو کا استعمال کریں، وقفے اور توازن وقت لینے کے لئے اور اپنے آپ کو چڑھنے
          کے لئے اپنے آپ کو ایک درخت تلاش کرنے کے لئے اپنے ٹیک کو چھوڑ دیں. آپ کے
          سر سے نیچے آپ کے انگلیوں کو روکنے کے لئے، اس کے بارے میں سوچنا. آپ کی ناک
          تک آپ کے پاؤں سے، روکنے اور آن لائن سوچتے ہیں!
      4:
        text: آپ کے کھانے کو ذخیرہ کرنے کے لئے، اور اس کے growling کے موڈ کو سننے
          کے لئے، ایک پیٹ فلاپ بنانے کے لئے، اور سوڈا پاپ میں گیس محسوس کرنے کے لئے
          آپ کی گٹ کا استعمال کریں. جب آپ آن لائن ہوں تو اپنی گٹ کا استعمال کریں،
          مخصوص علامات کو دیکھنے کے بارے میں جاننے کے لئے، اور راستے کی رہنمائی کرنے
          کے لئے اور آپ کو بتانے کے لئے کہ یہ ٹھیک نہیں ہے. آپ کے سر سے نیچے آپ کے
          انگلیوں کو روکنے کے لئے، اس کے بارے میں سوچنا. آپ کی ناک تک آپ کے پاؤں سے،
          روکنے اور آن لائن سوچتے ہیں!
      5:
        text: تو آپ کے سر کے ساتھ سوچتے ہیں، اور اپنے دل سے محسوس کرتے ہیں، اپنے بازو
          سے توازن رکھتے ہیں، آن لائن اپنی گٹ کو سنتے ہیں. چلانے کے لئے اور لات، اور
          کود اور ایک pogo چھڑی پر اچھال، اور بلاک کے ارد گرد رقص کرنے کے لئے، اور
          آپ بدبودار جرابوں میں ساتھ چھوڑ کرنے کے لئے اپنے ٹانگوں کا استعمال کریں.
          آپ لائن کو پار کرنے والے bullies کے لئے کھڑے ہو جاؤ، اور قد کھڑے ہو، عظیم
          اور چھوٹے مخلوق کے لئے اچھا ہو یاد کرنے کے لئے، آپ آن لائن ہیں جب آپ کی
          ٹانگوں کا استعمال کریں.
      6:
        text: آپ کے سر سے نیچے آپ کے انگلیوں کو روکنے کے لئے، اس کے بارے میں سوچنا.
          آپ کی ناک تک آپ کے پاؤں سے، روکنے اور آن لائن سوچتے ہیں! لہذا اپنے سر کے
          ساتھ سوچیں، اور اپنے دل سے محسوس کریں، اپنے بازو سے توازن کریں، اپنی گٹ
          کو سنیں، اپنی ٹانگوں کے ساتھ کھڑے ہو جائیں۔ آپ کے سر سے نیچے آپ کے انگلیوں
          کو روکنے کے لئے، اس کے بارے میں سوچنا. آپ کی ناک تک آپ کے پاؤں سے، روکنے
          اور آن لائن سوچتے ہیں!
    C2_digital_footprint_v2:
      1:
        text: ہر بار جب آپ آن لائن جاتے ہیں، تو آپ ایک ایسے اثرات چھوڑتے ہیں جو تلاش،
          نقل، مشترکہ، نشر اور مستقل ہو سکتے ہیں. آپ کس قسم کے ڈیجیٹل اثرات چھوڑ رہے
          ہیں؟ آپ کس قسم کے ڈیجیٹل اثرات چھوڑنا چاہتے ہیں؟
    C2_graph_paper:
      1:
        text: اس سبق کو “گراف کاغذ پروگرامنگ” کہا جاتا ہے اور یہ سب الگورتھم کے بارے
          میں ہے. آج ہم صرف ہاتھ تیار تیر کا استعمال کرتے ہوئے، سادہ سیاہ اور سفید
          تصاویر بہلانا کرنے کے لئے کس طرح ایک دوسرے کو ظاہر ہے کہ پروگراموں کو لکھنے
          کے لئے سیکھنے کے لئے جا رہے ہیں.
      2:
        text: ایک الگورتھم ایک کام کو مکمل کرنے کے لئے ہدایات کی ایک فہرست ہے. ہم
          کٹورا بنانے کے لئے ہدایات کے اس سیٹ پر عمل کریں گے. آپ کو کچھ کرنے کا طریقہ
          سمجھنے کے لئے کسی اور کی ضرورت ہے جب الگورتھم واقعی مددگار ہیں.
      3:
        text: اگر آپ ایک کمپیوٹر کے لئے ایک الگورتھم لکھ رہے ہیں، آپ کو تھوڑا چھوٹے
          اقدامات کرنے کے لئے اسے توڑنے کے لئے ہے. تو اس قطار کو ختم کریں اور اگلے
          پر جائیں، پھر اگلے ایک، اور آپ کو کیا جائے گا.
      4:
        text: میں نے اپنے کام میں الگورتھم استعمال کرتے ہیں. میں اقدامات کے تمام نیچے
          لکھیں تو میں دوبارہ کہ ایک ہی ٹکڑا بہلانا کر سکتے ہیں، یا میں ایسا کرنے
          کے لئے کسی اور کو سکھا سکتے ہیں. گلاس کو بھٹی میں رکھو، اسے ایک دوسرے کے
          ساتھ فیوز کریں، کٹورا بنانے کے لئے باقی ہدایات پر عمل کریں. الگورتھم آپ
          کو کچھ حاصل کرنے کے لئے ایک سڑک کا نقشہ دے.
    C2_maze_intro:
      1:
        text: عام طور پر پروگرامنگ متن میں تمام ہے لیکن ہم بلاکلی استعمال کریں گے
          جس میں بصری بلاکس کا استعمال کرتا ہے کہ آپ کو پروگرام لکھنے کے لئے ڈریگ
          اور ڈراپ. ہڈ کے تحت، آپ اب بھی کوڈ پیدا کر رہے ہیں. شروع کرنے کے لئے، ہم
          نے اس کے انڈے چرا لیا ہے کہ برائی سواروں کو حاصل کرنے کے لئے ایک بھولبلییا
          کے ذریعے اس کے ناراض برڈ منتقل کرنے میں مدد ملے گی کہ ایک پروگرام کے لئے
          کوڈ کی تعمیر کے لئے جا رہے ہیں.
      2:
        text: بلاکلی کو تین اہم حصوں میں تقسیم کیا جاتا ہے. بائیں پر آپ کے پروگرام
          چلائے گا جہاں پرندوں کی بھولبلییا، ہے. ہر سطح کے لئے ہدایات بھولبلییا ذیل
          میں لکھا جاتا ہے. یہ درمیانی علاقہ ٹول باکس ہے اور ان بلاکس میں سے ہر ایک
          ایک ایسا کمانڈ ہے جسے پرندے سمجھ سکتا ہے۔ حق پر سفید جگہ کام کی جگہ کہا
          جاتا ہے اور یہ ہے جہاں ہم اپنے پروگرام کی تعمیر کریں گے.
      3:
        text: اگر میں اقدام بلاک کو ہمارے کام کی جگہ پر ھیںچیں اور “چلائیں” دبائیں
          تو کیا ہوتا ہے؟ پرندہ گرڈ پر ایک ڈبہ آگے بڑھتا ہے۔ اور اگر میں چاہتا ہوں
          کہ پرندوں کو ایک باکس آگے بڑھنے کے بعد کچھ کرنا ہو؟ میں نے ہمارے پروگرام
          کے لئے ایک اور بلاک شامل کر سکتے ہیں.
      4:
        text: میں “دائیں باری” بلاک کو منتخب کرنے جا رہا ہوں اور پیلے رنگ کے تیر ظاہر
          ہونے تک میں اسے اپنے اقدام بلاک کے تحت ھیںچوں گا. پھر میں اسے چھوڑ دونگا
          اور دو بلاکس ایک دوسرے کے ساتھ تصویر کریں گے. جب میں دوبارہ “چلائیں” دبائیں
          تو، پرندوں کو ہمارے کام کی جگہ پر اوپر سے نیچے تک سجا دیا جاتا ہے کہ حکموں
          کو انجام دے گا.
      5:
        text: اگر آپ نے کبھی ایک بلاک کو حذف کرنا چاہتے ہیں، تو اسے اسٹیک سے ہٹا دیں
          اور اسے ردی کی ٹوکری میں گھسیٹیں. آپ کو چلانے کے مارا ہے کے بعد، آپ کو ہمیشہ
          شروع کرنے کے لئے پرندوں کو واپس حاصل کرنے کے لئے ری سیٹ کے بٹن کو مار سکتا
          ہے. اب ان سواروں کو حاصل کرتے ہیں!
    C2_paper_airplanes:
      1:
        text: اس سبق کو حقیقی زندگی الگورتھم کہا جاتا ہے۔ الگورتھم ایسی چیزوں کی وضاحت
          کرتے ہیں جو لوگ روزمرہ کرتے ہیں. ایک birdhouse کی تعمیر کے لئے کوکی کی ترکیبیں
          اور ہدایات روزمرہ الگورتھم دونوں ہیں.
      2:
        text: آج ہم والا بنانے، تخلیق، اور ایک کاغذ ہوائی جہاز کے لئے ایک الگورتھم
          ٹیسٹ کر رہے ہیں. لیکن سب سے پہلے، ہم چھوٹے اقدامات پر عمل کرنے کے لئے آسان
          میں اس بڑے منصوبے کو توڑنے کی ضرورت ہے. ایک کاغذ ہوائی جہاز بنانے کے لئے،
          ہمیں یہ فیصلہ کرنے کی ضرورت ہے کہ کون سے اقدامات اٹھانے اور انہیں لے جانے
          کے لۓ کیا حکم ہے.
      3:
        text: آپ سب سے پہلے تصاویر کے علاوہ کاٹنے کی طرف سے آپ کے الگورتھم تخلیق کریں
          گے. اگلا، آپ کو ایک کاغذ ہوائی جہاز بنانے اور صحیح ترتیب میں ان تصاویر کا
          بندوبست کرنے کے لئے کی ضرورت اقدامات کو ظاہر ہے کہ 6 تصاویر منتخب کریں گے.
          آپ کے حکم میں سب کچھ ہے کے بعد، آپ کو ایک اور طالب علم کی ٹیم کے ساتھ یلگوردمز
          تجارت کرے گا الگورتھم باہر کی جانچ کرنے کے لئے اگر الگورتھم کام کرتا ہے
          کو دیکھنے کے لئے. ایک اچھی طرح سے ڈیزائن الگورتھم بہترین کاغذ ہوائی جہاز
          بنانے کے لئے بہت اہم ہے.
      4:
        text: جب ہم چاکلیٹ بنانا چاہتے ہیں، تو اس عمل میں بہت سے بڑے اقدامات ہیں.
          اور ان بڑے اقدامات میں سے ہر ایک کے چھوٹے اقدامات کا اپنا سیٹ ہے. اور مختلف
          ترکیبیں ہیں، یا الگورتھم، ہم کس طرح چاکلیٹ ذائقہ چاہتے ہیں پر منحصر ہے.
          ہر قدم اہم ہے، یہاں تک کہ چھوٹے بھی. لہٰذا ایک قدم کے بغیر باقی تمام کام
          مکمل نہیں ہو سکتے۔ الگورتھم کہ دوسروں کو سمجھ سکتے ہیں کی تشکیل واقعی اہم
          ہے. یہی وجہ ہے کہ ہر قدم کو لکھنا پڑتا ہے لہٰذا اس سے کوئی فرق نہیں پڑتا
          کہ وہ کون کرتا ہے، نتیجہ ایک ہی ہوتا ہے۔
    C2_playlab_createstory:
      1:
        text: اب تک آپ ایک حرکت پذیری یا ایک کہانی بنا رہے ہیں جو ہر بار جب آپ اسے
          چلاتے ہیں تو بالکل وہی کام کرتا ہے. اب آپ ایک انٹرایکٹو کھیل بنا سکتے ہیں
          کہ آپ اصل میں کھیل سکتے ہیں.
      2:
        text: کوشش کرنے کے لئے کچھ نئے بلاکس ہیں. “جب تیر” بلاک اور “اقدام اداکار”
          بلاک ہے. آپ تیر چابیاں کے ساتھ کے ارد گرد اداکاروں کو منتقل کرنے کے لئے
          ایک دوسرے کے ساتھ ان بلاکس ڈال سکتے ہیں. اور کچھ بلاکس ہیں جو چیزیں کرتے
          ہیں جب اداکار ٹکراتے ہیں یا کلک کیے جاتے ہیں. ان کی جانچ پڑتال کریں اور
          مزہ ہے!
    C2_relay_programming:
      1:
        text: آج ہم ریلے پروگرامنگ کرنے جا رہے ہیں. یہ دباؤ کے تحت پروگرامنگ کے بارے
          میں ہے اور غلطیوں کو ڈیبگنگ جو کبھی کبھی ہوتا ہے جب آپ واقعی کام کرتے ہیں
          تیزی سے یا ٹیموں میں. ہم کوڈنگ انکرن کرنے کے لئے گراف کاغذ پروگرامنگ کا
          استعمال کریں گے، اور ریلے ریس کا استعمال کرتے ہوئے ایک ڈیڈ لائن ہونے کا
          انکرن کریں گے.
      2:
        text: ریلے پروگرامنگ میں، ٹیمیں گراف کاغذ کے پروگرام کو ختم کرنے کے لئے دوڑ
          رہی ہوں گی. آپ کو آپ کی ٹیم کے کام کی جانچ پڑتال کرنے کے لئے ہے، یا اسے
          ڈیبگ، ایک غلطی ہے تو اسے ٹھیک، آپ کے تیر کا اضافہ، اور واپس چلانے کے لئے
          اور آپ کی ٹیم کے ساتھ ٹیگ.
      3:
        text: پروگرامرز اپنے الگورتھم یا کوڈ میں مسائل کو تلاش کرنے اور حل کرنے کے
          لئے بہت کچھ ڈیبگنگ استعمال کرتے ہیں. مسائل کو ڈیبگ کرنے کے بہت سے طریقے
          ہیں. سب سے آسان میں سے ایک قدم قدم کی طرف سے منتقل کرنے کے لئے ہے جب تک
          کہ آپ کو پتہ چلتا ہے کہ کچھ غلط ہو جاتا ہے، پھر اسے ٹھیک کریں.
      4:
        text: یہاں، میں ایک واپس handSpring کرنے کی کوشش کر رہا ہوں، لیکن میں گر رہا
          ہوں. میں ہر حصے میں قدم بہ قدم چلتا ہوں، اور احساس کرتا ہوں کہ میری غلطی
          کہاں تھی۔ میرے کوچ میں صحیح طریقے سے بیم پر اپنے ہاتھ نہیں ڈال رہا تھا مجھے
          دکھایا. لہذا میں نے اپنے نئے ہاتھ کی پوزیشن کے ساتھ بیم پر ایک اور واپس
          ہینڈسپرنگ کی کوشش کی، اور میں نے اسے پھنس دیا! مجھے واقعی خوشی تھی کہ میں
          نے اپنی پیٹھ کے ہینڈسپینگ کو ڈیبگ کیا. ہم نے اسے سوچا! ڈیبگنگ مسائل کو تلاش
          اور فکسنگ کر رہا ہے. اچھا، اچھا کام!
    C2_zuck_repeat_loop:
      1:
        text: ایک بات یہ ہے کہ کمپیوٹر واقعی میں اچھے ہیں حکم دہرانے ہے. ایک شخص کے
          طور پر، آپ واقعی بور ہو جائے گا اگر آپ کو ایک ہی بات کرنا پڑا تو ایک قطار
          میں بہت سے بار. لیکن ایک کمپیوٹر ایک ہی چیز لاکھوں یا اس سے بھی اربوں بار
          کر سکتے ہیں، اور بور نہیں ہو اور واقعی اچھی طرح سے اس کو لے جانے کے قابل
          ہو.
      2:
        text: تو مثال کے طور پر اگر میں فیس بک پر سب کو سالگرہ مبارک ہو تو انہیں ایک
          ای میل بھیجنے کی طرف سے، مجھے ایک صدی سے زیادہ لگ سکتا ہے کہ اصل میں سب
          کو ان ای میلز کو لکھنے کے لئے. لیکن کوڈ کی صرف چند لائنوں کے ساتھ، میرے
          پاس ایک نظام ہو سکتا ہے فیس بک پر ہر ایک کو ایک ای میل بھیجیں جو انہیں سالگرہ
          مبارک ہو. تو یہ ہے کہ loops ہیں، اور کیوں وہ قیمتی ہیں، اور کچھ ہے کہ کمپیوٹر
          بہت اچھی طرح سے کر سکتے ہیں.
      3:
        text: اس مثال میں آپ کا مقصد سور حاصل کرنے کے لئے پرندوں کو منتقل کرنے کے
          لئے ہونے جا رہا ہے. اب ہم والا بہت آسانی سے ایسا کرنے کے قابل ہو جائے کرنے
          کے لئے “دوبارہ” بلاک استعمال کرنے کے قابل ہو جائے کرنے کے لئے کر رہے ہیں.
          آپ یا تو کمپیوٹر کو “آگے بڑھائیں” کمانڈ پانچ بار دے کر سکتے ہیں تاکہ پرندوں
          کو ایک قدم ہر بار سور کو آگے بڑھایا جا سکے.
      4:
        text: یا آپ کمپیوٹر کو صرف ایک بار “آگے بڑھنے” کے لئے بتا سکتے ہیں، اور پھر
          اسے “دوبارہ” کرنے کے لئے بتا سکتے ہیں کہ 5 بار، اور یہ ایک ہی بات کرے گا.
          لہذا ایسا کرنے کے لئے آپ اپنے “آگے بڑھیں” کمانڈ کو گھسیٹیں، اور پھر آپ اسے
          “دوبارہ” بلاک کے اندر ڈال دیں. اور آپ اس پر کلک کر سکتے ہیں اور یہ بتا سکتے
          ہیں کہ کتنی بار آپ بلاک کو دوبارہ بتانا چاہتے ہیں تاکہ یہ بتائیں کہ آپ اسے
          آگے بڑھانا چاہتے ہیں.
      5:
        text: اب ایک اور بات یہ ہے کہ آپ “دوبارہ” بلاک کے اندر اندر چاہتے ہیں کے طور
          پر بہت سے حکم دیتا ہے ڈال سکتے ہیں. تو اس مثال میں آپ کو یہ کہہ رہے ہیں
          آگے منتقل کرنے کے لئے اور بائیں باری ہے، جو یہ پانچ بار کریں گے. ٹھیک ہے
          اچھا کام اور مزہ ہے!
    C3_artist_functions:
      1:
        text: کمپیوٹر پروگرامنگ میں عظیم چیزوں میں سے ایک ہے ایک بار آپ کو ایک کمپیوٹر
          سکھایا ہے کس طرح ایک کارروائی کرنے کے لئے، آپ کو پھر اس تقریب کو فون کر
          سکتے ہیں. آپ اسے ایک نام دیتے ہیں اور پھر آپ اسے فون کرسکتے ہیں. یہ واقعی
          زبان میں توسیع کی طرح ہے.
      2:
        text: ہم نے تعمیر کردہ پروگرام میں، ہم نے سیکھا کہ چار بار منتقل اور تبدیل
          کرکے ایک مربع کو کیسے ڈراؤ. ہم نے اس تقریب کو لے اور اسے ایک نام دے سکتے
          ہیں، ایک مربع اپنی طرف متوجہ، تاکہ کسی بھی وقت ہم ایسا کرنا چاہتے ہیں، ہم
          صرف ایک مربع اپنی طرف متوجہ کا کہنا ہے کہ اور اسے واپس جائیں گے اور اس تقریب،
          اس کوڈ کو پکاریں گے. یہ ہمارے لئے کیا ہو جائے گا. ہم نے اس تصور کو اپنی
          پروگرامنگ زبان میں شامل کیا ہے.
    C3_artist_intro:
      1:
        text: آپ کو بھی دوڑ کے لئے کوالیفائی نہیں کرے گا اگر آپ کو کمپیوٹر سائنس میں
          ماہر ہیں جو لوگوں کی ضرورت نہیں ہے کیونکہ زیادہ سے زیادہ اعداد و شمار کے
          کاریں جمع اور ضرورت لوگوں کو ہے کہ پروگراموں لکھ سکتے ہیں کہ کس طرح آپ کو
          کارکردگی کی تعمیر کے لئے کس طرح باہر اعداد و شمار کرنے کے لئے جاری اعداد
          و شمار کر سکتے ہیں کے قابل ہو جائے کرنے کے لئے.
      2:
        text: ان پہیلیاں میں، آپ کو مختلف سائز اپنی طرف متوجہ کرنے کے لئے ایک پنسل
          کا استعمال کرتا ہے کہ ایک آرٹسٹ ہو جائے گا. جہاں بھی آپ کا آرٹسٹ جاتا ہے،
          وہ آپ کے پیچھے ایک لائن کھینچ لے گا.
      3:
        text: کینوس کے ارد گرد منتقل کرنے کے لئے، آپ کو آگے بڑھانے کے بلاک کا استعمال
          کریں گے. یہاں اقدام فارورڈ بلاک کا کہنا ہے کہ 100 پکسلز کی طرف سے آگے بڑھیں.
          جب ہم رن مارا، کیا ہوتا ہے؟ آرٹسٹ ایک مخصوص رقم آگے بڑھتا ہے اور یہ رقم
          100 پکسلز ہوتی ہے. پکسلز آپ کے کمپیوٹر کی سکرین پر بنیادی طور پر بہت چھوٹے
          چوکوں ہیں.
      4:
        text: ہم اس پہیلی میں ہے دوسرے بلاک کا کہنا ہے کہ 90 ڈگری کی طرف سے صحیح باری
          ہے. اور جب ہم اسے باہر کھینچتے ہیں تو ہمارے آرٹسٹ کو ایک خاص مقدار میں تبدیل
          کر دیتا ہے. لہذا آپ اس کے ارد گرد کھیل سکتے ہیں کہ آپ کتنی دور آرٹسٹ کو
          تبدیل کرنا چاہتے ہیں. یہ 90 ڈگری کی باری ہے۔
      5:
        text: اور یہ 120 ڈگری کی باری ہے. اور یاد رکھیں، آپ کو پکسلز اور ڈگری کے لئے
          تعداد کے آگے تیر پر کلک کر کے ان اقدار کو تبدیل کر سکتے ہیں. اپنے آرٹسٹ
          کے ساتھ ڈرائنگ کا لطف اٹھائیں!
    C3_artist_nested_loops:
      1:
        text: جب آپ کسی دوسرے لوپ کے اندر ایک لوپ ڈال دیا، ہم کہتے ہیں کہ ایک گھوںسلا
          لوپ. مثال کے طور پر، یہاں ہم نے کوڈ دیا ہے پہلے سے ہی ایک مثلث اپنی طرف
          متوجہ کرنے کے لئے لمبائی 100 پکسلز کے اطراف کے ساتھ بار بار بلاک کا استعمال
          کرتے ہوئے تین، ایک مثلث کے ہر طرف کے لئے ایک بار مقرر.
      2:
        text: لیکن ہم چھ مثلث اپنی طرف متوجہ کرنا چاہتے ہیں. ایسا کرنے کے لئے، ہم
          اس لوپ لے جا رہے ہیں اور ایک اور بار بار بلاک کے اندر اس کی جگہ. بہت ٹھنڈا!
    C3_bee_conditionals:
      1:
        text: یہ مشروط بلاک ہے. اس میں کہا گیا ہے کہ اگر کوئی امرت یا شہد ہے جو کسی
          عدد سے کم، برابر یا اس سے زیادہ ہے تو پھر کچھ کریں.
      2:
        text: یہ اس وقت مفید ہے جب ہم نہیں جانتے کہ کتنا امرت یا شہد حاصل کرنا ہے،
          جیسا کہ ہم یہاں اس سوالیہ نشان کے ساتھ دیکھتے ہیں.
      3:
        text: اس مثال میں، ہم کہنے جا رہے ہیں اگر جامنی پھول 0 سے زیادہ امرت ہے، امرت
          حاصل کریں. یہ ہماری مکھی کو بتائے گا کہ جب تک وہ وہاں موجود ہے امرت حاصل
          کرتے رہیں. تا-دہ!
    C3_bee_debugging:
      1:
        text: کیا آپ نے کبھی ایک پروگرام کو ڈیبگنگ کے بارے میں سنا ہے؟ اس طرح آپ کو
          پتہ چلتا ہے کہ کیا کام نہیں کر رہا ہے. جب آپ کوڈ کو ڈیبگ کرتے ہیں، تو آپ
          غلطیوں کی شناخت اور ہٹاتے ہیں.
      2:
        text: یہاں ہمیں اپنے کام کی جگہ پر پہلے سے ہی چند بلاکس دیئے گئے ہیں. ہم بلاکس
          کے ذریعے چلنے کے لئے قدم بٹن استعمال کرنے کے لئے جا رہے ہیں، قدم بہ قدم،
          اگر یہ صحیح حل ہے اور جہاں ہم اسے ٹھیک کرنے کی ضرورت ہو سکتی ہے کو دیکھنے
          کے لئے.
      3:
        text: ایسا لگتا ہے کہ ہمارا مسئلہ ہے! ہم ایک اور اقدام آگے بلاک کی ضرورت ہے.
          قدم کے بٹن کی شناخت کی طرف سے ہمیں ہماری مسئلہ ڈیبگ میں مدد ملتی ہے جہاں
          غلطی ہے تو ہم اسے ٹھیک کر سکتے ہیں.
    C3_bee_functions:
      1:
        text: کمپیوٹر سائنس میں سب سے اہم تصورات میں سے ایک یہ ہے کہ نئے حکموں کی
          وضاحت کیسے کی جائے، کمپیوٹر زبان میں اپنے الفاظ کو کیسے شامل کیا جائے. زیادہ
          تر کمپیوٹر زبانوں میں صرف ایک سو الفاظ یا احکام ہوتے ہیں۔ آرٹ اور جادو ان
          عمارت بلاکس سے باہر آپ کے اپنے نئے الفاظ کی وضاحت میں ہے.
      2:
        text: ہم کھیلوں میں یہ ہر وقت کرتے ہیں. مثال کے طور پر، باسکٹ بال میں، آپ
          کو ڈربل کرنے کا طریقہ سیکھنے کی طرف سے شروع کرتے ہیں، کس طرح ایک لے اپ کرنا،
          کس طرح دوبارہ واپس لوٹنے کے لئے. ایک بار جب آپ نے ان بنیادی چالوں کو سیکھا
          ہے، تو آپ نئی چالیں سیکھتے ہیں اور ان بلڈنگ بلاکس کو ایک پک اور رول کی طرح
          جمع کرتے ہیں یا دیتے ہیں اور جاتے ہیں. اس کے بعد آپ زیادہ پیچیدہ ڈرامے کرنے
          کے لئے وہاں سے جا سکتے ہیں. ایک بار جب آپ اس کھیل کو سیکھتے ہیں اور اسے
          ایک نام دیتے ہیں، تو ٹیم پر ہر کوئی جانتا ہے کہ یہ کیسے کرنا ہے.
      3:
        text: اسی طرح ایک بار آپ کو ایک کمپیوٹر سکھایا ہے ایک بار ایک کارروائی کرنے
          کے لئے کس طرح حکم دیتا ہے کے ان انداز کا استعمال کرتے ہوئے، آپ کو اس کارروائی
          کے لئے اپنا نام بنا سکتے ہیں تو یہ آسان ہے بعد میں دوبارہ کرنے کے لئے. جب
          آپ اپنے حکم کی وضاحت اور اسے ایک نام دے، کہ ایک تقریب کہا جاتا ہے. اب ہم
          شہد کی مکھی کی مدد کے لئے افعال کا استعمال کرنے جا رہے ہیں.
      4:
        text: اس مثال میں، ہماری تقریب 2 امرت حاصل کہا جاتا ہے، یہ سبز بلاک یہیں.
          ہم جانتے ہیں کہ 2 امرت اس گرے باکس کو دیکھ کر کیا کرتا ہے جو تقریب تعریف
          ہے. ہم وہاں اندر نظر ڈالیں تو، حاصل 2 امرت امرت حاصل کرنے کے لئے جا رہا
          ہے اور پھر دوبارہ امرت حاصل. ہمیشہ گرے باکس کے اندر کیا ہے میں دیکھو تاکہ
          آپ جانتے ہیں کہ ان سبز تقریب بلاکس کیا کر سکتے ہیں.
    C3_bee_nested_loops:
      1:
        text: اب ہم مکھی کے ساتھ گھوںسلا loops استعمال کرنے کے لئے جا رہے ہیں. ہمیں
          کچھ سٹارٹر کوڈ دیا گیا ہے جو مکھی کو آگے بڑھنے اور تین بار امرت حاصل کرنے
          کے لئے بتاتا ہے اور پھر دائیں باری ہے. چلو کوڈ کے اس پورے ٹکڑا لے اور ایک
          اور دوبارہ بلاک کے اندر گھوںسلا اور تین بار دہرانے کے لئے مقرر. ہو گیا!
    C3_bounce:
      1:
        text: آپ کو آپ کے دوستوں کے ساتھ اشتراک کرنے کے قابل ہو جائے گا کہ آپ کے بہت
          ہی اچھال کھیل پیدا کرنے جا رہے ہیں! کس طرح ڈاؤن لوڈ، اتارنا!
      2:
        text: شروع کرنے کے لئے، ہم اپنے کی بورڈ پر تیر کی چابیاں پیڈل کنٹرول اپ لنک
          کرنے کے لئے ہے.
      3:
        text: ہم جب بائیں تیر بلاک منسلک کی طرف سے ایسا کر سکتے ہیں اقدام بائیں بلاک
          اور جب دائیں تیر بلاک اقدام حق بلاک کرنے کے لئے بلاک. اسے جانے دو اور آپ
          کو کوئی وقت میں آپ کے اپنے اچھال کھیل پروگرامنگ کیا جائے گا!
    C3_computational_thinking:
      1:
        text: یہ سبق کمپیوٹیشنل سوچ ہے. کبھی کبھی ایک نیا کھیل سیکھنے مشکل ہو سکتا
          ہے، ٹھیک ہے؟ سب سے پہلے یہ واقعی الجھن لگ سکتا ہے اور کبھی کبھی، آپ کو قوانین
          سکھانے کے لئے وہاں کوئی نہیں ہے، لہذا آپ کو اپنے طور پر یہ پتہ لگانا ہوگا.
      2:
        text: اچھی خبر یہ ہے کہ جب آپ کچھ سوچ چالوں کو جانتے ہیں تو آپ اپنے آپ کو
          چیزوں کو بہتر بنا سکتے ہیں. یہ چالیں مسائل کو دیکھنے اور حل کرنے کے منفرد
          طریقے ہیں. اس سبق میں، آپ کو چار چالوں کے بارے میں جاننے اور ایک کھیل کے
          قوانین کا پتہ لگانے کے لئے اپنے دوستوں کے ساتھ ان پر عمل کریں گے.
      3:
        text: جب آپ چھوٹے ٹکڑوں میں ایک بڑا مسئلہ توڑ دیتے ہیں، تو آپ اپنے دماغ کو
          بڑے مسئلے کو پھیلانے کے لئے استعمال کر رہے ہیں. ایک بار ہم نے کئی چھوٹے
          مسائل میں بڑا مسئلہ سڑے ہے، ہم اپنے اگلے چال پر جا سکتے ہیں، جس میں پیٹرن
          میچ کہا جاتا ہے.
      4:
        text: یہی وجہ ہے کہ جب ہم چیزوں کے درمیان مماثلت کے لئے نظر آتے ہیں. ایک بار
          جب میں ان چیزوں کو تلاش کرتا ہوں جو ایک ہی ہیں، میں یہ سمجھ سکتا ہوں کہ
          چیزیں مختلف ہیں. جب میں ان اختلافات کو ہٹا دیں، کہ تجرید کہا جاتا ہے.
      5:
        text: میں نے ایک مسئلہ کو حل کرنے کے لئے اقدامات سوچا ہے کے بعد، میں نے ایک
          مخصوص حکم میں ان اقدامات ڈال کر سکتے ہیں ایک الگورتھم کہا جاتا ہے تاکہ کسی
          کو اس مسئلے کو حل کرنے کے لئے میری ہدایات استعمال کر سکتے ہیں. ہم ان چار
          اقدامات کو استعمال کرنے کے لئے جا رہے ہیں کہ کس طرح کوئی قواعد کے ساتھ کھیل
          کھیلنے کے لئے پتہ لگانے کے لئے. کھیل کے اختتام تک، آپ کو اس طرح لگتا ہے
          کہ کچھ کھیلنے کے قابل ہو جائے گا!
    C3_crowdsourcing:
      1:
        text: اس سبق کو crowdsourcing کہا جاتا ہے. اس سبق میں ہم کارڈ کا ایک ڈیک استعمال
          کریں گے تاکہ یہ جاننے کے لئے کہ کچھ چیزیں گروہوں میں کرنا کتنا آسان ہو سکتا
          ہے بجائے ان سب کو اکیلے کرنے کی کوشش کریں. تو کچھ دوستوں کو پکڑو اور کچھ
          خوفناک بناؤ. Crowdsourcing تیزی سے کچھ ختم کرنے کے لئے لوگوں کے ایک بڑے
          گروپ سے مدد مل رہی ہے.
      2:
        text: کمپیوٹر سائنس میں، ہم ہر وقت crowdsourcing کا استعمال کرتے ہیں. ہزاروں
          amateurs اور پیشہ ور افراد معلومات کے اربوں اور اربوں ٹکڑوں کے ذریعے تلاش
          کرنے کے لئے مل کر اپنے کمپیوٹرز سے منسلک کرتے ہیں. اگلے مارسین اعظم نمبر،
          یا اس سے بھی ممکن غیر ملکی مواصلات جیسی چیزوں کی تلاش میں ہیں.
      3:
        text: جب آپ ایک فلم دیکھتے ہیں تو، فلم کا ہر سیکنڈ 24 انفرادی تصاویر ہے، ہم
          ان فریموں کو فون کرتے ہیں. لہذا ان تصاویر میں سے ہر ایک کو پیدا کرنے اور
          پیش کرنے اور سب کو ایک ساتھ رکھنے کی ضرورت ہے. میری ٹیم اور میں، ہم سب سافٹ
          ویئر ڈویلپرز ہیں. ہم سب سافٹ ویئر کا ایک ٹکڑا پیدا کرنے کے لئے مل کر کام
          کرتے ہیں جو اصل میں ایک تصویر تخلیق کرتا ہے، حتمی تصویر پیدا کرتا ہے کہ
          آپ اسکرین پر دیکھتے ہیں. یہ ایک ایسا آلہ ہے جو فنکاروں اور دیگر ڈویلپرز
          اپنی ٹیم ورک کے حصے کے طور پر استعمال کرسکتے ہیں اور ان کے عمل کو اسکرین
          پر ان تصاویر کو تخلیق کرنے کے قابل ہو سکتے ہیں.
      4:
        text: مثال کے طور پر، نمو کی تلاش میں، جب کچلنے اور squirt اور ان کے تمام
          دوستوں مشرقی آسٹریلوی موجودہ کے ذریعے پرواز کر رہے ہیں. آپ کی طرف سے بہہ
          پانی کی تصاویر دیکھ رہے ہیں، آپ کچھی کے پیچھے رنگ دیکھ رہے ہیں، آپ مچھلی
          کے اطراف دیکھ رہے ہیں. ان چیزوں میں سے سب ریاضی اور کمپیوٹر پروگراموں کے
          ذریعے پیدا کر رہے ہیں کہ ہم لکھتے ہیں، کہ ہم تو آرٹسٹ کو دے اور وہ کہ حتمی
          تصویر بنانے کے لئے لے اور اس کی موافقت اور یہ خوبصورت نظر آتے ہیں اور مزہ
          نظر آتے ہیں.
    C3_dice_race:
      1:
        text: اس سبق کو نرد دوڑ کہا جاتا ہے۔ تقریبا ہر کوئی کمپیوٹر کھیل کھیلنے کے
          لئے پسند کرتا ہے. کیا آپ نے کبھی اس بارے میں سوچا ہے کہ کمپیوٹر پروگرامرز
          کس طرح ایک پروگرام میں کھیل کے اقدامات کو تبدیل کرتے ہیں؟ کمپیوٹر گیمز بنانے
          اور کسی بھی مسئلے کو حل کرنے میں پہلا قدم سوچ اور منصوبہ بندی کی ضرورت ہوتی
          ہے.
      2:
        text: مسئلہ حل کرنے کا سوچ قدم ایک الگورتھم پیدا کرتا ہے، جو کسی مسئلے کو
          حل کرنے یا کام کو ختم کرنے کے لئے قدم کی منصوبہ بندی کی طرف سے ایک قدم ہے.
          اس سبق میں، آپ کو ایک نرد دوڑ کھیل کے لئے ایک الگورتھم پیدا کریں گے. اس
          کے بعد آپ اپنے دوستوں سے پوچھیں گے کہ وہ کھیل کھیلنے کے اقدامات پر عمل کر
          سکتے ہیں تو یہ دیکھنے کے لئے آپ کی منصوبہ بندی کی کوشش کریں گے. پروگرامر
          اس بات کا یقین کرنے کے بعد کہ اقدامات درست ہیں، اس وقت الگورتھم کو ایک پروگرام
          میں ترجمہ کرنے کا وقت ہے جس میں کمپیوٹر سمجھ سکتا ہے.
      3:
        text: تقریبا سب کچھ ہم ہر روز ایک الگورتھم کی ضرورت ہوتی ہے، اقدامات کی ایک
          فہرست آپ کو ایک کام کو ختم کرنے کے لئے پیروی کر سکتے ہیں. اسکول کے لئے تیار
          ہو رہی ہے یا اپنے دوستوں کے ساتھ ایک مذاق دن کی منصوبہ بندی یا ایک ناشتا
          فکسنگ کے بارے میں سوچو. ان کاموں میں سے کسی کو مکمل کرنے کے لئے، آپ کو اسے
          چھوٹے اقدامات میں توڑنے کی ضرورت ہوگی اور بعض اوقات مرحلے کو مخصوص ترتیب
          میں ہونا ضروری ہے.
      4:
        text: ایک سینڈوچ بنانے کے بارے میں سوچو. اس سے کوئی فرق نہیں پڑتا کہ آپ سب
          سے پہلے کابینہ سے کون سا اجزاء نکالتے ہیں. لیکن آپ مونگ پھلی کا مکھن پھیل
          نہیں سکتے جب تک کہ آپ جار کھولیں. کمپیوٹر الگورتھم اور پروگراموں کی ضرورت
          ہے ان کو ظاہر کرنے کے لئے کہ کس طرح بھی سادہ چیزیں جو ہم اس کے بارے میں
          سوچ کے بغیر کر سکتے ہیں کرنا ہے.
      5:
        text: ایک الگورتھم سوچ ہے کیا ہونے کی ضرورت ہے جبکہ پروگرام اصل ہدایات کمپیوٹر
          کو دی گئی ہے ایسا کرنے کے لئے. ایک الگورتھم ایک پروگرام میں ترجمہ کیا جا
          کرنے کے لئے ہے اس سے پہلے کہ ایک کمپیوٹر اسے چلا سکتے ہیں. اقدامات میں ایک
          کام توڑ ایک الگورتھم کہا جاتا ہے کبھی کبھی مشکل ہے. لیکن کسی بھی نئی مہارت
          کی طرح، یہ مشق کے ساتھ آسان اور آسان ہو جاتا ہے.
    C3_farmer_while:
      1:
        text: جبکہ loops آپ روزمرہ کی زندگی میں کیا کرتے ہیں کے لئے بہت ملتے جلتے
          ہیں. آپ کو آپ کی گاڑی دھونے رہے ہیں ذرا تصور کریں، یہ صاف ہے جب تک آپ scrubrubing
          رکھیں گے. جبکہ یہ صاف نہیں ہے، صفائی جاری رکھیں. آپ ان چیزوں کا ہر وقت اندازہ
          کر رہے ہیں.
      2:
        text: ہم نے آپ کے کسان کی مدد کرنے کے لئے ایک نئی شکل مل گئی ہے. اسے تھوڑی
          دیر کا بلاک کہا جاتا ہے۔ یہ اصل میں بہت آسان ہے. جبکہ سب سے اوپر ایک بیان
          سچ ہے، کچھ کرو. مثال کے طور پر، جبکہ ایک ڈھیر حرکت ایک hayful ہے. آگے بڑھو
          اور اسے اپنے کسان کے ساتھ آزمائیں.
    C3_functional_suncatchers:
      1:
        text: یہ سبق فعال سنکیچر ہے. آپ افعال کا استعمال کرتے ہوئے ان خوبصورت suncatchers
          پیدا کیا جائے گا. ان suncatchers میں سے ایک بنانے میں کئی اقدامات ہیں. آپ
          کو کئی بار دہرانے کے لئے اقدامات میں سے کچھ.
      2:
        text: ایک suncatcher بنانے کے عمل کو آسان بنانے میں پہلا قدم یہ معلوم ہے کہ
          ہم بار بار بار دوبارہ کیا ہے. ہم گروپ میں ان اقدامات کر سکتے ہیں جو ہم ایک
          تقریب کہتے ہیں.
      3:
        text: لیکن عین مطابق اقدامات پر عمل کرنے کے مقابلے میں ایک خوبصورت سنکیچر
          پیدا کرنے کے لئے زیادہ ہے. کبھی کبھی ہم تخلیقی ہو اور ہم استعمال کر رہے
          ہیں موتیوں کا رنگ تبدیل کرنا چاہتے ہیں. ہم مختلف رنگ کے موتیوں کا استعمال
          کرتے ہیں تو ہم ہر suncatcher منفرد بنا سکتے ہیں.
      4:
        text: آپ suncatcher منفرد تمہارا ہو جائے گا جب آپ کے بارے میں سوچنے کے لئے
          سیکھنے متغیر کے طور پر موتیوں کی مالا جو ایک لفظ ہے کہ معلومات کے لئے ایک
          پلیس ہولڈر کا مطلب ہے کہ تبدیل کر سکتے ہیں. افعال اور متغیر کا استعمال کرتے
          ہوئے خوبصورت suncatchers پیدا مزہ ہے!
    C3_internet:
      1:
        text: یہ سبق انٹرنیٹ کے بارے میں ہے. انٹرنیٹ ایک بہت مصروف جگہ ہے اور اس مصروف
          سڑک کی طرح ہے. ان کی منزلوں تک پہنچنے کے لیے گاڑیاں جیسے پیغامات زوم کر
          رہے ہیں۔ پیغامات انٹرنیٹ کے ذریعے بہت تیزی سے منتقل ہوتے ہیں.
      2:
        text: انٹرنیٹ کیسے کام کرتا ہے اس پر عمل کرنا آپ کو یہ سمجھنے میں مدد کرے
          گا کہ جب آپ انٹرنیٹ استعمال کرتے ہیں تو کیا ہو رہا ہے. آپ سیکھ سکتے ہیں
          کہ پیغامات آپ کے کمپیوٹر سے پسندیدہ ویب سائٹ یا کسی دوست سے ای میل ان باکس
          میں کیسے پہنچتے ہیں۔ جیسے ہی آپ سڑکوں کو جانتے ہیں اور نشانیاں پڑھ سکتے
          ہیں جب مصروف سڑکوں پر تشریف لے جانا آسان ہے، انٹرنیٹ سفر اتنا پیچیدہ نہیں
          ہے جب آپ جانتے ہیں کہ مناظر کے پیچھے کیا جاتا ہے.
      3:
        text: انٹرنیٹ پر پیغامات بھیجنا تھوڑا سا میل میں پیغامات بھیجنے کی طرح ہے
          لیکن چند اختلافات کے ساتھ. میں Google.com پر یہاں ہوں. اس ویب سائٹ کے لئے
          آئی پی ایڈریس یہ نمبر ہے. آپ میل میں اپنے ریٹرن ایڈریس کے طور پر آئی پی
          ایڈریس کے بارے میں سوچ سکتے ہیں. میں وہاں نیچے دفتر میں کسی کو میل میں ایک
          پیغام بھیجنے کے لئے چاہتے ہیں کہ تصور کرتے ہیں. کیا آپ اس دروازے پر یو آر
          ایل اور آئی پی ایڈریس دیکھتے ہیں؟ میں نے یہ پیغام لکھا ہے اور بھیجنے کو
          ہٹ دیا ہے.
      4:
        text: پوسٹل سروس کے برعکس سب سے پہلے ایسا ہوتا ہے کہ انٹرنیٹ پیغام کو چھوٹے
          حصوں میں توڑ دیتا ہے تاکہ اسے زیادہ آسانی سے بھیجا جا سکے۔ ان چھوٹے حصوں
          کو پیکٹ کہا جاتا ہے۔ پیغام کا ہر پیکٹ ایک وقت میں منزل پر پہنچایا جاتا ہے۔
          ان پیکٹوں کو صحیح ترتیب میں ایک ساتھ رکھا جاتا ہے تاکہ رسیور پیغام کو صحیح
          طریقے سے پڑھ سکے۔ یقینا، انٹرنیٹ کس طرح کام کرتا ہے کے بارے میں جاننے کے
          لئے بہت سی چیزیں ہیں لیکن یہ ایک عظیم آغاز ہے. آپ ایک پریمی انٹرنیٹ صارف
          بننے کے لئے اپنے راستے پر ہیں! اپنے خاندان اور دوستوں کو بتانے کے لئے اس
          بات کا یقین رکھو کہ آپ نے کیا سیکھا ہے!
      5:
        text: میرا نام Amanda کیمپ ہے اور میں گوگل میں ایک سافٹ ویئر انجینئر ہوں.
          میں ایک ٹیم پر کام کرتا ہوں جو بیک اپ سرور پر کام کرتا ہے جو پروفائلز اور
          رابطوں کو ذخیرہ کرتا ہے. میرے کام میں، ہم اس بارے میں بہت سوچتے ہیں کہ آپ
          کے فون جیسے دیگر آلات پر رابطے کیسے بھیجے جا سکتے ہیں. زیادہ تر لوگوں کے
          رابطے کی ایک بہت ہے، آپ کہہ سکتے ہیں، 1000 رابطے اور ہم ان تمام رابطوں کو
          ایک ہی وقت میں آپ کے فون پر بھیجنے کے لئے نہیں چاہتے کیونکہ یہ ایک پیغام
          کی بہت بڑی ہے. جس طرح انٹرنیٹ بڑے پیغامات کو پیکٹ میں ٹوٹتا ہے اسی طرح،
          ہم پیجنگ نامی تصور کا استعمال کرتے ہیں جہاں ہم ایک وقت میں صرف آپ کے فون
          کو 100 روابط بھیج سکتے ہیں اور آپ کے فون کو ہم سے جواب دے سکتے ہیں اور اگلے
          100 کا مطالبہ کرسکتے ہیں.
      6:
        text: سافٹ ویئر کے بارے میں سب سے زیادہ دلچسپ بات یہ ہے کہ یہ پوری دنیا پر
          اثر انداز کر سکتا ہے. میں نے سب سے پہلے پروگرام سیکھا جب میں انیس کے بارے
          میں تھا. میرے خیال میں میں کالج میں پہلے سے ہی ایک سوفومور یا جونیئر تھا۔
          پہلا پروگرام جو مجھے لکھنا یاد ہے وہ کچھ ہے جو سیلسیس کو فارن ہائیٹ میں
          تبدیل کرتا ہے. مجھے پروگرامنگ پسند ہے کیونکہ مجھے لوگوں کی مدد کرنا پسند
          ہے. میں گوگل پر ایسے پروگرام لکھ سکتا ہوں جو دنیا بھر میں لوگوں کی مدد کرتے
          ہیں اور یہ واقعی ذہن میں ڈالنے والا اور دلچسپ ہے۔
    C3_maze_conditionals:
      1:
        text: لوگ روزانہ فیصلے کرتے ہیں۔ مثال کے طور پر، آپ کو باہر جانے سے پہلے،
          آپ کو ایک اگر بیان ہے کہ اگر یہ بارش ہو رہی ہے، تو میں نے اپنی جیکٹ حاصل
          کرنے کی ضرورت ہے. جب آپ ان قسم کے بیانات کا فیصلہ کرتے ہیں تو کمپیوٹر حیرت
          انگیز ہوتے ہیں کہ وہ قابل اعتماد طور پر ان چیزوں اور ناقابل یقین رفتار پر
          عملدرآمد کرسکتے ہیں. ایک کمپیوٹر پروگرام واقعی ریاضی کا تھوڑا سا ہے اور
          کچھ اگر بیانات جہاں فیصلہ کیا جاتا ہے.
      2:
        text: اگر بلاک زومبی کو فیصلہ کرنے میں مدد ملتی ہے. یہ کچھ چیک کرتا ہے. مثال
          کے طور پر، بلاک کا کہنا ہے کہ اگر بائیں طرف ایک راستہ ہے استعمال کرتے ہیں،
          اور اس کے اندر ایک باری بائیں کمانڈ ڈال دیا. ہم زومبی کو اس کے ارد گرد کی
          جانچ پڑتال کرنے کے لئے کہہ رہے ہیں، بائیں طرف ایک راستہ ہے اور اگر ایسا
          ہے تو، اس باری کو بنانے کے.
      3:
        text: اس کے بعد ہم اس کے دہرایا اندر اقدام آگے بلاک استعمال کرتے ہیں جب تک
          یہ صرف براہ راست جانا چاہتا ہے کے طور پر آگے بڑھتے ہوئے رکھنے کے لئے حاصل
          کرنے کے لئے. پھر جب ایک باری ہے، تو بلاک بائیں طرف اس باری بنانے کے لئے
          بتا دیں گے. آپ دیکھ سکتے ہیں کہ اگر ہم ایسا کریں گے، اگر ہم بائیں جانب موڑ
          لیں اور دوسری صورت میں آگے بڑھیں تو ہم اپنا مقصد حاصل کر لیں گے۔
      4:
        text: یہ ایک اگر بیان کا استعمال کرتے ہوئے کی ایک مثال ہے جو واقعی کمپیوٹر
          پروگرامنگ میں ایک بنیادی تصور ہے. میں نے سیکھا سب سے پہلے چیزوں میں سے ایک
          یہ تھا کہ کس طرح ایک پروگرام لکھنے کے لئے جو TIC-دوس-پیر ادا کیا. میرے پاس
          یہ کہنا تھا کہ اگر دوسرا شخص جیتنے والا ہے تو، آگے بڑھیں اور اس جگہ کو بلاک
          کریں. اگر بیانات استعمال کرنے کا طریقہ سیکھنے کا مزہ لیں، یہ ایک اہم تصور
          ہے.
    C3_maze_level_4:
      1:
        text: اس مثال میں، آپ کا مقصد سورج مکھی کو زومبی حاصل کرنے کے لئے ہے. ہم پانچ
          اقدام آگے بلاکس استعمال کر سکتے ہیں یا ہم آگے منتقل کرنے کے لئے کمپیوٹر
          کو بتا سکتے ہیں اور ایک بار بار بلاک کا استعمال کرتے ہوئے پانچ بار دہرائیں.
      2:
        text: یہ وقت بچاتا ہے اور اسے آسان بناتا ہے. اس کا استعمال کرنے کے لئے، صرف
          دہرایا بلاک کے اندر منتقل آگے بلاک ڈال دیا. چلائیں مارو اور زومبی سوادج
          سورج مکھی کے لئے آگے پانچ بار منتقل ہو جائے گا.
    C3_playlab_create_game:
      1:
        text: اب تک آپ ایک حرکت پذیری یا ایک کہانی بنا رہے ہیں جو ہر بار جب آپ اسے
          چلاتے ہیں تو بالکل وہی کام کرتا ہے. اب آپ ایک انٹرایکٹو کھیل بنا سکتے ہیں
          کہ آپ اصل میں کھیل سکتے ہیں.
      2:
        text: کوشش کرنے کے لئے کچھ نئے بلاکس ہیں. “جب تیر” بلاک اور “اقدام اداکار”
          بلاک ہے. آپ تیر چابیاں کے ساتھ کے ارد گرد اداکاروں کو منتقل کرنے کے لئے
          ایک دوسرے کے ساتھ ان بلاکس ڈال سکتے ہیں. اور کچھ بلاکس ہیں جو چیزیں کرتے
          ہیں جب اداکار ٹکراتے ہیں یا کلک کیے جاتے ہیں. ان کی جانچ پڑتال کریں اور
          مزہ ہے!
    C3_songwriting_with_parameters:
      1:
        text: یہ گیت لکھنے کا سبق ہے۔ موسیقی ایک کمپیوٹر پروگرام کی طرح ایک بہت ہے.
          تحریری نوٹ اور الفاظ گلوکار کو بتاتے ہیں کہ بالکل کیا کرنا ہے. موسیقی کے
          کچھ حصے بار بار استعمال ہوتے ہیں۔
      2:
        text: ہم اِس کو کورس کہتے ہیں۔ کمپیوٹر پروگرام میں، پروگرام کے وہ حصے جو بار
          بار استعمال ہوتے ہیں، فنکشن کہلاتے ہیں۔ جب آپ گیتوں کی دھن پڑھتے ہیں اور
          یہ لفظ کورس کہتا ہے، تو کیا آپ کورس کا لفظ گاتے ہیں؟ جی نہیں، آپ یہ دیکھنے
          کے لیے کہ کون سے الفاظ کورس کو بناتے ہیں صفحے کے اوپری حصے پر نظر ڈالتے
          ہیں۔
      3:
        text: اس سبق میں، آپ کو تھوڑا بنی FOO FOO نامی ایک پاگل چھوٹا سا گانا سیکھیں
          گے. اِس گیت کا ایک کورس ہوتا ہے جسے آپ کئی مرتبہ بار بار گائیں گے۔ ایک
          تقریب کوڈ کا ایک ٹکڑا ہے جسے آپ فون کر سکتے ہیں اور بار بار استعمال کرتے
          ہیں. یہ پروگرامنگ کو آسان اور زیادہ موثر بنا دیتا ہے لہذا آپ کو دوبارہ آپ
          کی تقریب کے اقدامات کو لکھنے کی ضرورت نہیں ہے. آپ اسے صرف ایک بار لکھ سکتے
          ہیں!
    C4_bee_conditional:
      1:
        text: یہ مشروط بلاک ہے. اس کا کہنا ہے کہ اگر آپ پھول یا شہد میں ہیں تو پھر
          کچھ کریں. یہ اس وقت مفید ہے جب ہم نہیں جانتے کہ ہم اس سوال کے نشان کے ساتھ
          یہاں کتنا شہد یا امرت حاصل کرنا چاہتے ہیں.
      2:
        text: اس مثال میں، ہم یہ کہنے جا رہے ہیں، اگر یہ پھول ہے، تو تمام امرت حاصل
          کریں اور پھر دوسرا استعمال کریں یہ کہنے کے لئے، اگر یہ شہد ہے تو شہد بنائیں۔
          تا-دہ!
    C4_conditionals:
      1:
        text: ہم نے کہا جاتا ہے کہ ایک نیا بلاک ہے/اور بلاک. یہ صرف اگر بلاک کی طرح
          ایک مشروط بیان ہے آپ سے پہلے پہیلیاں میں استعمال کیا ہے. لیکن اب نچلے حصے
          میں ایک نیا حصہ ہے جو اور کہتا ہے. اگر اور بلاک مکھی کو دو سیٹ کے اعمال
          کے درمیان فیصلہ کرنے کی اجازت دیتا ہے. اگر مکھی ایک پھول پر ہے تو، مکھی
          آپ کے پہلے حصے میں ڈالنے والے اعمال کا سیٹ کرے گی جہاں یہ کہتا ہے کہ کرتے
          ہیں. اگر شہد کی مکھی پھول پر نہیں ہے تو، مکھی آپ کو سلاٹ میں ڈالنے والے
          اعمال کا سیٹ کرے گی جہاں یہ کہیں اور ہے.
      2:
        text: اگر بیانات یہ ہیں کہ کمپیوٹر کس طرح فیصلے کرنے کے قابل ہیں. انسان کمپیوٹر
          کے لیے ایسے حالات مرتب کرتے ہیں جو کہتے ہیں کہ اگر کمپیوٹر کو کسی خاص صورت
          حال کے ساتھ پیش کیا جائے تو ایسا کریں۔ ورنہ، جو صرف دوسری صورت میں مطلب
          ہے، ایسا کرتے ہیں. ہمارے اگر اور بلاک کے سب سے اوپر کا کہنا ہے کہ اگر پھول
          میں. لیکن ہمارے بلاک کے سب سے اوپر دیگر باتیں کہہ سکتے ہیں، جیسے اگر امرت
          2 کے برابر ہے یا اگر آگے ایک راستہ ہے، ہمارے بلاک اسی طرح سے برتاؤ کریں
          گے. کہ اگر سب سے اوپر بیان سچ ہے تو یہ اعمال کا پہلا سیٹ کرے گا. لیکن اگر
          سب سے اوپر بیان غلط ہے، تو یہ اعمال کا دوسرا سیٹ کرے گا.
    C4_for_loops:
      1:
        text: جب آپ لوپ آپ کے کوڈ کو ایک بار بار بلاک کا استعمال کرتے ہیں، کس طرح
          کمپیوٹر جانتا ہے جب یہ کافی بار بار بار بار ہے؟ دوبارہ بلاک اصل میں کوڈ
          کا ایک سے زیادہ بہتر ٹکڑا چھپا رہا ہے لوپ کے لئے ایک بلایا جاتا ہے جس میں
          ایک ابتدائی قیمت سے شمار ایک مخصوص اضافہ کی طرف سے ختم ہونے کی قیمت.
      2:
        text: مثال کے طور پر، ایک تکرار تین بلاک 1 کی طرف سے 1 سے 3 تک شمار ہوتا ہے.
          ہر بار یہ شمار ہوتا ہے، یہ لوپ کے اندر کوڈ چلتا ہے. لوپ کے لئے جانتا ہے
          کہ کتنی بار یہ ایک انسداد متغیر کا استعمال کرتے ہوئے کی طرف سے چلایا ہے
          جو لوپ کے آغاز میں شروع قیمت پر مقرر کیا گیا ہے اور اضافہ اس میں شامل ہے
          ہر وقت لوپ چلایا جاتا ہے. جیسے ہی انسداد متغیر ختم ہونے کی قیمت سے زیادہ
          ہے، لوپ چل رہا ہے رک جاتا ہے.
      3:
        text: لوپ کے لئے ایک حقیقی کا استعمال کرتے ہوئے کا فائدہ بجائے دوبارہ بلاک
          کی یہ ہے کہ آپ اصل میں انسداد متغیر دیکھ سکتے ہیں اور اپنے لوپ میں استعمال
          کرتے ہیں. مثال کے طور پر، اگر میرے پاس پھولوں کا سلسلہ ہے اور پہلے والے
          میں ایک امرت ہے، دوسرے میں دو امرت ہیں اور تیسرے میں تین ہیں، میں ہر بار
          'انسداد' امرت جمع کرنے کے لئے شہد کی مکھی کو بتانے کے لئے لوپ کا استعمال
          کر سکتا ہوں، جو پہلے پھول میں ایک، دوسرے پر دو اور تیسرے نمبر پر تین.
      4:
        text: اس کے علاوہ ایک لوپ کے لئے میں، آپ کو ایک ہر وقت کے مقابلے میں دوسرے
          نمبر کی طرف سے کاؤنٹر اضافہ کر سکتے ہیں. آپ ممکنہ طور پر 2s، 4s یا اس سے
          بھی ایک رقم کی طرف سے شمار کر سکتے ہیں جو ہر وقت کے ذریعے تبدیل ہوتا ہے.
    C4_for_loops_bee:
      1:
        text: جب آپ لوپ آپ کے کوڈ کو ایک بار بار بلاک کا استعمال کرتے ہیں، کس طرح
          کمپیوٹر جانتا ہے جب یہ کافی بار بار بار بار ہے؟ دوبارہ بلاک اصل میں کوڈ
          کا ایک سے زیادہ بہتر ٹکڑا چھپا رہا ہے لوپ کے لئے ایک بلایا جاتا ہے جس میں
          ایک ابتدائی قیمت سے شمار ایک مخصوص اضافہ کی طرف سے ختم ہونے کی قیمت.
      2:
        text: مثال کے طور پر، ایک تکرار تین بلاک 1 کی طرف سے 1 سے 3 تک شمار ہوتا ہے.
          ہر بار یہ شمار ہوتا ہے، یہ لوپ کے اندر کوڈ چلتا ہے. لوپ کے لئے جانتا ہے
          کہ کتنی بار یہ ایک انسداد متغیر کا استعمال کرتے ہوئے کی طرف سے چلایا ہے
          جو لوپ کے آغاز میں شروع قیمت پر مقرر کیا گیا ہے اور اضافہ اس میں شامل ہے
          ہر وقت لوپ چلایا جاتا ہے. جیسے ہی انسداد متغیر ختم ہونے کی قیمت سے زیادہ
          ہے، لوپ چل رہا ہے رک جاتا ہے.
      3:
        text: لوپ کے لئے ایک حقیقی کا استعمال کرتے ہوئے کا فائدہ بجائے دوبارہ بلاک
          کی یہ ہے کہ آپ اصل میں انسداد متغیر دیکھ سکتے ہیں اور اپنے لوپ میں استعمال
          کرتے ہیں. مثال کے طور پر، اگر میرے پاس پھولوں کا سلسلہ ہے اور پہلے والے
          میں ایک امرت ہے، دوسرے میں دو امرت ہیں اور تیسرے میں تین ہیں، میں ہر بار
          'انسداد' امرت جمع کرنے کے لئے شہد کی مکھی کو بتانے کے لئے لوپ کا استعمال
          کر سکتا ہوں، جو پہلے پھول میں ایک، دوسرے پر دو اور تیسرے نمبر پر تین.
      4:
        text: اس کے علاوہ ایک لوپ کے لئے میں، آپ کو ایک ہر وقت کے مقابلے میں دوسرے
          نمبر کی طرف سے کاؤنٹر اضافہ کر سکتے ہیں. آپ ممکنہ طور پر 2s، 4s یا اس سے
          بھی ایک رقم کی طرف سے شمار کر سکتے ہیں جو ہر وقت کے ذریعے تبدیل ہوتا ہے.
    C4_for_loops_no_bee:
      1:
        text: جب آپ لوپ آپ کے کوڈ کو ایک بار بار بلاک کا استعمال کرتے ہیں، کس طرح
          کمپیوٹر جانتا ہے جب یہ کافی بار بار بار بار ہے؟ دوبارہ بلاک اصل میں کوڈ
          کا ایک سے زیادہ بہتر ٹکڑا چھپا رہا ہے لوپ کے لئے ایک بلایا جاتا ہے جس میں
          ایک ابتدائی قیمت سے شمار ایک مخصوص اضافہ کی طرف سے ختم ہونے کی قیمت.
      2:
        text: مثال کے طور پر، ایک تکرار تین بلاک 1 کی طرف سے 1 سے 3 تک شمار ہوتا ہے.
          ہر بار یہ شمار ہوتا ہے، یہ لوپ کے اندر کوڈ چلتا ہے. لوپ کے لئے جانتا ہے
          کہ کتنی بار یہ ایک انسداد متغیر کا استعمال کرتے ہوئے کی طرف سے چلایا ہے
          جو لوپ کے آغاز میں شروع قیمت پر مقرر کیا گیا ہے اور اضافہ اس میں شامل ہے
          ہر وقت لوپ چلایا جاتا ہے. جیسے ہی انسداد متغیر ختم ہونے کی قیمت سے زیادہ
          ہے، لوپ چل رہا ہے رک جاتا ہے. لوپ کے لئے ایک حقیقی کا استعمال کرتے ہوئے
          کا فائدہ بجائے دوبارہ بلاک کی یہ ہے کہ آپ اصل میں انسداد متغیر دیکھ سکتے
          ہیں اور اپنے لوپ میں استعمال کرتے ہیں.
    C4_function_create:
      1:
        text: اب آپ تقریب بلاکس میں ترمیم کی ہے کہ، یہ شروع سے ایک نئی تقریب بلاک
          پیدا کرنے کے لئے وقت ہے. یہ واقعی بہت آسان ہے. آپ ٹول باکس افعال کہا جاتا
          ہے ایک قسم ہے دیکھیں گے. آپ کو اس پر کلک کریں تو، آپ کو ایک تقریب تخلیق
          کہا جاتا ہے ایک سنتری بٹن دیکھیں گے. اس پر کلک کرنے سے تقریب ایڈیٹر ہے کہ
          آپ نے پہلے ہی موجودہ تقریب بلاکس میں ترمیم کرنے کے لئے استعمال کیا ہے لاتا
          ہے.
      2:
        text: بس پہلے کی طرح، آپ کو آپ کی تقریب کا نام کی طرف سے شروع کر دیا، کے لئے
          ایک وضاحت نیچے لکھ تقریب کیا کرنا چاہیے ہے. مثال کے طور پر، یہ ایک مربع
          اپنی طرف متوجہ یا ایک مثلث اپنی طرف متوجہ اور پھر نیچے سفید کام کی جگہ میں
          ٹول باکس سے بلاکس ھیںچیں. تقریب کے لئے سبز ریپنگ بلاک کے اندر ان بلاکس کو
          ھیںچیں یاد رکھیں.
      3:
        text: ایک بار جب آپ کر لیں تو، محفوظ کریں اور باہر نکلیں پر کلک کریں. یہ اہم
          پہیلی کام کی جگہ پر آپ کو واپس لے جائے گا. آپ کی تخلیق کردہ نئی تقریب آپ
          کے ٹول باکس میں فنکشن زمرے میں سبز بلاک کے طور پر دکھائے جائیں گے. گھسیٹیں
          اور اہم کام کی جگہ میں اس کو چھوڑ اور پہیلی کو حل کرنے کے لئے کسی دوسرے
          بلاک کی طرح استعمال کرتے ہیں.
    C4_function_edit:
      1:
        text: کمپیوٹر پروگرامنگ میں عظیم چیزوں میں سے ایک ہے ایک بار آپ کو ایک کمپیوٹر
          سکھایا ہے کس طرح ایک کارروائی کرنے کے لئے، آپ کو پھر اس تقریب کو فون کر
          سکتے ہیں. آپ اسے ایک نام دیتے ہیں اور پھر آپ اسے فون کرسکتے ہیں. یہ واقعی
          زبان میں توسیع کی طرح ہے.
      2:
        text: ہم نے تعمیر کردہ پروگرام میں، ہم نے سیکھا کہ چار بار منتقل اور تبدیل
          کرکے ایک مربع کو کیسے ڈراؤ. ہم اس تقریب کو لے اور اسے ایک نام دے سکتے ہیں،
          ایک مربع اپنی طرف متوجہ تاکہ کسی بھی وقت ہم ایسا کرنا چاہتے ہیں، ہم صرف
          ایک مربع اپنی طرف متوجہ کا کہنا ہے کہ اور اسے واپس جائیں گے اور اس تقریب،
          اس کوڈ کو بلائیں گے اور یہ ہمارے لئے کیا ہو جائے گا. ہم نے اس تصور کو اپنی
          پروگرامنگ زبان میں شامل کیا ہے.
      3:
        text: اس پہیلی میں، ہم نے پہلے ہی ایک آپ کے لئے ایک مربع تقریب اپنی طرف متوجہ
          پیدا کیا ہے. آپ کو ایک سبز بلاک کے طور پر ٹول باکس میں دیکھیں گے. آپ کو
          کیا کرنے کی ضرورت ہو گی اسی کوڈ لکھنا ہے آپ نے پہلے لکھا ایک مربع اپنی طرف
          متوجہ کرنے کے لئے اور اس تقریب میں ڈال دیا. ایسا کرنے کے لئے، سبز میں ترمیم
          کے اختیار پر کلک کریں ایک مربع بلاک کو اپنی طرف متوجہ کریں. یہ فنکشن ایڈیٹر
          کھول دے گا. فنکشن ایڈیٹر کے تین حصے ہوتے ہیں۔ ایک جگہ ہے جہاں آپ کو آپ کی
          تقریب کا نام. یہ سبز بلاک پر اس تقریب سے پہلے ظاہر ہو جائے گا. اس کے بعد
          آپ کی تقریب کیا کرنا چاہیے ہے کی ایک مختصر وضاحت لکھیں.
      4:
        text: اس صورت میں، یہ ایک مربع کو اپنی طرف متوجہ کرنے کے لئے سمجھا جاتا ہے.
          اس کے نیچے سفید جگہ کام کی جگہ ہے اور کام کی جگہ کی طرح کام کرتا ہے جو آپ
          پہلے ہی استعمال کر رہے ہیں. اس کام کی جگہ میں ٹول باکس سے بلاکس کو ڈریگ
          اور ڈراپ کریں. بلاکس کہ ایک مربع بنانے کے لئے یاد رکھیں سبز ریپنگ بلاک کے
          اندر تقریب کے لئے. ایک بار جب آپ کر لیں تو، محفوظ کریں اور باہر نکلیں پر
          کلک کریں. یہ اہم پہیلی کام کی جگہ پر آپ کو واپس لے جائے گا. اب آپ کو صرف
          پہیلی کو حل کرنے کے لئے کسی بھی دوسرے بلاک کی طرح مربع تقریب بلاک اپنی طرف
          متوجہ استعمال کر سکتے ہیں.
    C4_function_parameters:
      1:
        text: یہاں 50 پکسل اطراف کے ساتھ ایک مربع دیتی ہے کہ ایک تقریب ہے. یہ بہت
          اچھا ہے لیکن کیا اگر میں نے اطراف 50 پکسلز کے ساتھ ایک مربع اپنی طرف متوجہ
          کرنا چاہتے تھے اور 100 پکسلز کے اطراف کے ساتھ ایک اور مربع؟ ہم دو علیحدہ
          افعال ہے کہ تقریبا ایک ہی بات ہے بنانے کے لئے نہیں ہونا چاہئے. اس کے بجائے،
          ہم ایک پیرامیٹر کے ساتھ ایک تقریب کا استعمال کر سکتے ہیں.
      2:
        text: پیرامیٹرز ہمیں ایک تقریب میں اقدار کو منتقل کرنے کی اجازت دیتے ہیں جو
          تقریب کے اندر متغیر کے طور پر استعمال کیا جاتا ہے. چلو اس تقریب کی طرح کہا
          جاتا ہے ایک پیرامیٹر انہوں نے مزید کہا جاتا ہے کی کوشش کرتے ہیں تو ہم اسے
          پیدا کرنے کے لئے استعمال کر سکتے ہیں مختلف سائز کے چوکوں. فنکشن ایڈیٹر میں،
          آپ پہلے کی طرح نام اور وضاحت میں ترمیم کرسکتے ہیں لیکن اب آپ پیرامیٹر بھی
          شامل کرسکتے ہیں. جگہ میں اپنے پیرامیٹر کا نام لکھیں اور پیرامیٹر شامل کریں
          پر کلک کریں. یہ آپ کے پیدا کردہ پیرامیٹر کے نام کے ساتھ ایک سرخ بلاک بنائے
          گا. اب ہم پیرامیٹر کے ساتھ 100 بلاک کی طرف سے آگے بڑھنے کی جگہ لے سکتے ہیں
          لمبائی تو یہ لمبائی کی طرف سے آگے بڑھ جائے گا.
      3:
        text: ٹول باکس میں افعال کی قسم سے محفوظ کریں اور بند کریں اور اپنے نئے تخلیق
          ایک مربع بلاک کو ڈریگ کریں پر کلک کریں. آپ کی لمبائی کے آگے ایک خالی جگہ
          ہے محسوس کریں گے کیونکہ تقریب جاننا چاہتا ہے کہ پیرامیٹر کی لمبائی کیا قدر
          ہونا چاہئے. ریاضی زمرے سے ایک نمبر بلاک ھیںچیں اور اس جگہ میں رکھیں. آپ
          کو مختلف سائز کے چوکوں بنانے کے لئے مختلف لمبائی کے ساتھ بار بار تقریب استعمال
          کر سکتے ہیں کس طرح ملاحظہ کریں؟ اپنے آپ کے لئے کوشش کریں!
    C4_intro:
      1:
        text: عام طور پر پروگرامنگ متن میں تمام ہے لیکن ہم بلاکلی استعمال کریں گے
          جس میں بصری بلاکس کا استعمال کرتا ہے کہ آپ کو پروگرام لکھنے کے لئے ڈریگ
          اور ڈراپ. ہڈ کے تحت، آپ اب بھی کوڈ پیدا کر رہے ہیں. شروع کرنے کے لئے، ہم
          نے اس کے انڈے چرا لیا ہے کہ برائی سواروں کو حاصل کرنے کے لئے ایک بھولبلییا
          کے ذریعے اس کے ناراض برڈ منتقل کرنے میں مدد ملے گی کہ ایک پروگرام کے لئے
          کوڈ کی تعمیر کے لئے جا رہے ہیں.
      2:
        text: بلاکلی کو تین اہم حصوں میں تقسیم کیا جاتا ہے. بائیں پر آپ کے پروگرام
          چلائے گا جہاں پرندوں کی بھولبلییا، ہے. ہر سطح کے لئے ہدایات بھولبلییا ذیل
          میں لکھا جاتا ہے. یہ درمیانی علاقہ ٹول باکس ہے اور ان بلاکس میں سے ہر ایک
          ایک ایسا کمانڈ ہے جسے پرندے سمجھ سکتا ہے۔ حق پر سفید جگہ کام کی جگہ کہا
          جاتا ہے اور یہ ہے جہاں ہم اپنے پروگرام کی تعمیر کریں گے.
      3:
        text: اگر میں اقدام بلاک کو ہمارے کام کی جگہ پر ھیںچیں اور “چلائیں” دبائیں،
          کیا ہوتا ہے؟ پرندہ گرڈ پر ایک ڈبہ آگے بڑھتا ہے۔ اور اگر میں چاہتا ہوں کہ
          پرندوں کو ایک باکس آگے بڑھنے کے بعد کچھ کرنا ہو؟ میں نے ہمارے پروگرام کے
          لئے ایک اور بلاک شامل کر سکتے ہیں.
      4:
        text: میں “دائیں باری” بلاک کو منتخب کرنے جا رہا ہوں اور پیلے رنگ کے تیر ظاہر
          ہونے تک میں اسے اپنے اقدام بلاک کے تحت ھیںچوں گا. پھر میں اسے چھوڑ دونگا
          اور دو بلاکس ایک دوسرے کے ساتھ تصویر کریں گے. جب میں دوبارہ “چلائیں” دبائیں
          تو، پرندوں کو ہمارے کام کی جگہ پر اوپر سے نیچے تک سجا دیا جاتا ہے کہ حکموں
          کو انجام دے گا.
      5:
        text: اگر آپ نے کبھی ایک بلاک کو حذف کرنا چاہتے ہیں، تو اسے اسٹیک سے ہٹا دیں
          اور اسے ردی کی ٹوکری میں گھسیٹیں. آپ کو چلانے کے مارا ہے کے بعد، آپ کو ہمیشہ
          شروع کرنے کے لئے پرندوں کو واپس حاصل کرنے کے لئے ری سیٹ کے بٹن کو مار سکتا
          ہے. اب ان سواروں کو حاصل کرتے ہیں!
    C4_math_artist:
      1:
        text: اگر میں ایک مستطیل 50 پکسلز لمبا اپنی طرف متوجہ کرنا چاہتے ہیں اور یہ
          کہ دو مرتبہ وسیع ہے کے طور پر یہ قد ہے، میں کس طرح پروگرام کریں گے کمپیوٹر
          ایسا کرنے کے لئے؟ ٹھیک ہے، میں فنکار کو پچاس تک جانے کے لئے کہہ سکتا ہوں،
          دائیں مڑیں، اور پھر 100 سے زیادہ جائیں اور پوری چیز کو دو بار منتقل کریں.
          لیکن پھر میں کمپیوٹر کے لئے ریاضی کر رہا ہوں.
      2:
        text: آپ کے سر میں دو کی طرف سے پچاس ضرب کہ مشکل نہیں ہو سکتا ہے لیکن کمپیوٹر
          ریاضی کر میں واقعی اچھے ہیں تو ہم جب بھی ممکن ہو ان کے لئے اسے چھوڑ دینا
          چاہئے. اگر میں صرف بجائے اونچائی نامی ایک متغیر استعمال کیا جاتا ہے، تو
          میں آسانی سے پچاس اونچائی کو تبدیل کر سکتا ہے اور پھر اپنے الگورتھم کو تبدیل
          کرنے کے لئے آرٹسٹ کو بتانے کے لئے اونچائی کی طرف سے جانا، دائیں باری ہے
          اور پھر اونچائی 2 اوقات کی طرف سے ختم ہو جاؤ، جو ہمیں ایک مستطیل دیتا ہے
          کہ دو بار وسیع طور پر یہ لمبا ہے کے طور پر وسیع ہے.
    C4_unplugged_algorithms:
      1:
        text: اس سبق کو تنگرام الگورتھم کہتے ہیں۔ ایک tangram دوسری شکلیں بنانے کے
          لئے ایک ساتھ ڈال دیا جا سکتا ہے کہ سات ٹکڑے ٹکڑے کے ساتھ ایک پہیلی ہے. آپ
          کو ایک دوسرے کے ساتھ پہیلی ڈال کرنے کے لئے کس طرح آپ کے ساتھی کو وضاحت کرنے
          کے لئے ایک الگورتھم کا استعمال کرتے ہوئے کیا جائے گا.
      2:
        text: ایک الگورتھم صرف فہرست اقدامات میں سے ایک ہے کہ آپ کو ایک کام کو مکمل
          کرنے کے لئے لے جا سکتے ہیں. ہم انہیں ہر روز خریداری کی فہرست اور ترکیبیں
          جیسی چیزوں کے ساتھ استعمال کرتے ہیں. اگر آپ کو ایک الگورتھم سادہ رکھیں،
          اس کی تشریح کرنے کے طریقوں میں سے بہت سے ہیں اور جو کوئی بھی انجام دیتا
          ہے کہ الگورتھم بالکل وہی جو آپ چاہتے تھے نہیں مل سکتا ہے. اگر آپ اس بات
          کو یقینی بنانا چاہتے ہیں کہ سب بالکل اسی چیز کے ساتھ ختم ہو جاتا ہے، تو
          آپ کے الگورتھم کو تفصیلی اور بہت مخصوص کرنے کی ضرورت ہوگی.
      3:
        text: میں ایک الگورتھم آج استعمال کر رہا ہوں ایک پینٹنگ مکمل کرنے کے لئے.
          میں کچھ بھیڑیوں کی پینٹنگ کرنے کی کوشش کرنا چاہتا تھا لیکن میں سب سے زیادہ
          حیرت انگیز پینٹر نہیں ہوں. خوش قسمتی سے میری طرف سے لوگوں کے لئے، تعداد
          کی طرف سے پینٹ نہیں ہے. چالیس رنگ ہیں اور یہ ہر حصے کو پینٹ کرنے کے لئے
          جس رنگ آپ کو بتا کہ تھوڑا حروف اور نمبر ہے. نمبروں کی طرف سے پینٹ مجھے بتاتا
          ہے بالکل وہی جو رنگ استعمال کرنے کے لئے اور جہاں.
      4:
        text: میں ہدایات پر عمل کرنے کے قابل ہوں اور پینٹنگ خوفناک لگ باہر آ جائے
          گا تو یہ بہت مخصوص ہے. یہ ایک عظیم الگورتھم ہے. ہدایات کافی مخصوص نہیں تھے
          تو, میرے بھیڑیوں کے طور پر اچھا نظر نہیں آئے گا. جب آپ واقعی کسی چیز کو
          بالکل اسی طرح تبدیل کرنا چاہتے ہیں جس طرح آپ نے اس کی منصوبہ بندی کی ہے،
          تو یہ انتہائی عین مطابق ہونا بہتر ہے.
    C4_unplugged_binary:
      1:
        text: ہر ٹیم، جو شخص ہدایت دے رہا ہے وہ شخص ہے جو کاغذ رکھتا ہے، اسے یہ معلوم
          کرنا ہوگا کہ ان کی آف علامت کیا ہو گی اور ان کی علامت کیا ہونے والی ہے.
          بائنری میں، اس قسم کی دو حروف کے ساتھ ایک حروف تہجی کی طرح ہے. ایک اور بی
          ہونے کی طرح آپ کے پورے حروف تہجی ہو لیکن آپ کو ایک 0 اور 1 مل گیا ہے.
      2:
        text: سب سے زیادہ عام طریقہ آپ بائنری استعمال کرتے ہیں تو بیان میں ہے. یہ
          پروگرامنگ سے ایک کلاسک چیز ہے. پروگرام کے ساتھ ساتھ چلتا ہے اور یہ کہتا
          ہے کہ اگر کچھ سچ ہے، تو ایسا کریں. یا یہ سچ نہیں ہے اور آپ کچھ اور کرتے
          ہیں. اگر آپ کچھ کرنا چاہتے ہیں تو شاید تھوڑا زیادہ پیچیدہ. اس کے بجائے اگر
          ایک بیان، آپ کمپیوٹر میں کسی تصویر یا آواز کی طرح کسی چیز کے ساتھ کام کرنا
          چاہتے ہیں.
      3:
        text: 'ایک کمپیوٹر صرف بائنری لیکن ایک تصویر جانتا ہے، یہ بائنری نہیں ہے،
          یہ لوگ اور zeros نہیں ہے تو آپ ایسا کیسے کرتے ہیں؟ یہاں ایک مثال ہے: آپ
          کے پاس یہ خوبصورت تصویر ہے. اب ایک تصویر بنیادی طور پر معلومات کی ایک شکل
          ہے. تمام معلومات بائنری ایک یا دوسرے راستے میں انکوڈڈ کیا جا سکتا ہے، آپ
          کو صرف یہ معلوم کرنا ہوگا کہ یہ کیسے کرنا ہے.'
      4:
        text: آپ تصور کرتے ہیں کہ ہم اس پانڈا ریچھ پر گرڈ ڈالنے جا رہے ہیں اور ہر
          مربع کے لئے، ہم یہ فیصلہ کرنے جا رہے ہیں کہ آیا اس مربع زیادہ سیاہ یا زیادہ
          سفید ہے. اور پھر ہم اسے اس طرح رنگنے کے لئے جا رہے ہیں. اب گرڈ پر ہر سیل
          یا تو سیاہ یا سفید ہے اور پھر سیاہ چوکوں ہم کہتے ہیں کہ ان zeros (بائنری
          ہندسوں) ہیں اور سفید چوکوں ہیں، دوسرے بائنری ہندسوں ہیں. آخر میں، آپ کو
          صرف ہیں اور zeros کے ایک گروپ کے ساتھ چھوڑ رہے ہیں. یہی وجہ ہے کہ آپ بائنری
          میں اس تصویر کی نمائندگی کرتے ہیں کس طرح ہے.
    C4_unplugged_forloops:
      1:
        text: یہ سبق لوپ تفریح کے لئے کہا جاتا ہے. اس سبق میں، ہم ایک نرد کھیل کھیلنے
          کے لئے ایک نمبر لائن استعمال کریں گے. ہر کھلاڑی ایک ابتدائی قیمت، ایک روکنے
          کی قیمت، اور ہمارے وقفہ تفویض کرنے کے لئے تین بار رول کرے گا. ہر باری کے
          دوران، ہم اپنے شروع کی قیمت دائرے، اور ہر قدر ہے کہ اقدامات کی ایک ہی تعداد
          ہے ہمارے وقفہ قدر کے طور پر آگے. جب ہم اپنے روکنے کی قیمت حاصل کرتے ہیں
          تو ہم چکر روکتے ہیں. سب سے زیادہ سکور جیت کے ساتھ شخص!
      2:
        text: loops کے مقامات کی ایک بہت ہاتھ میں آ سکتے ہیں اور آپ کو ایک موسمیات
          بننے کے لئے تھے تو، آپ کو ہر وقت loops کے لئے استعمال کریں گے. ہیلو، میں
          بیکی ہوں. میں ہوا موسمیات کے ماہر کے طور پر EverPower تجدید قابل تجدید میں
          کام کرتا ہوں. میں کولمبیا دریا گورج کے علاقے کے لئے ہوا کی رفتار کی پیشن
          گوئی کرتا ہوں جہاں کمپنی ہوا کے فارموں کا مالک ہے.
      3:
        text: ہم یہ سمجھنے کی کوشش کر رہے ہیں کہ وہاں کتنی ہوا ہو گی تاکہ ہم جانتے
          ہوں کہ کتنی طاقت outpted ہونے والی ہے۔ ہم یہ معلومات حقیقی وقت توانائی کے
          تاجروں کو دیتے ہیں. وہ اس بات کی بنیاد پر بجلی خریدتے ہیں اور فروخت کرتے
          ہیں کہ ہم انہیں بتاتے ہیں کہ پاور گرڈ متوازن ہے، آپ کی روشنی جاری رہتی ہے،
          اور ہم اپنے فارموں سے باہر نکلنے والی توانائی کی مقدار کو زیادہ سے زیادہ
          کرتے ہیں.
      4:
        text: ہم یہاں پورٹلینڈ میں EverPower تجدید کے لئے قومی کنٹرول سینٹر میں ہیں
          اور یہ وہ جگہ ہے جہاں ہمارے پاس ملک بھر میں ہمارے تمام فارموں سے آنے والی
          معلومات موجود ہیں. یہاں تک کہ آج کے بلند ترین پاور کمپیوٹرز ہر جگہ فضا کو
          انکرن نہیں کر سکتے۔ کمپیوٹر کی پیشن گوئی کے ماڈل میں، ہم نے ایک گرڈ کہتے
          ہیں کیا ہے. ہر گرڈ پوائنٹ ایک طول بلد، طول البلد ہے۔ ہم طبیعیات کا حساب
          اور کوشش کرتے ہیں اور ہوا کی رفتار، درجہ حرارت، دباؤ، چیز کی اس طرح کے اعداد
          و شمار کرنے کے لئے ہے.
      5:
        text: چونکہ یہ کافی بڑی grids ہیں اور ہم پوائنٹس کی ایک بہت میں یہ کر رہے
          ہیں ہم ان چیزوں پر looping رہے ہیں لاکھوں اور لاکھوں بار. سب کچھ میں loops
          کے لئے استعمال کریں گے کرتے ہیں. یہاں مثال کے طور پر وہاں لوپ کے لئے ایک
          ہے. جب آپ ہوا کی پیشن گوئی کر رہے ہیں، تو بہت سے مختلف پیرامیٹرز ہیں جو
          اس میں جاتے ہیں انسان کے لئے یہ ناممکن ہو جائے گا کہ وہ بیٹھ کر ان تمام
          حسابات کریں. بہت سے مختلف پہلوؤں ہے کیا ہو رہا ہے کو متاثر کیا جا رہا ہے
          ہوا کے ساتھ ہو رہا ہے کہ ہم ایک کمپیوٹر ماڈل کی ضرورت ہے اس کی پیشن گوئی
          کرنے کے لئے.
    C4_unplugged_madlibs:
      1:
        text: اس سبق میں، ہم خالی کہانیوں میں کچھ بھرنے کے ساتھ کھیل رہے ہوں گے. آپ
          کے پاس ایک ٹیمپلیٹ ہے جو آپ اسی طرح کی کہانیاں تخلیق کرنے کے لئے بھر سکتے
          ہیں جو بہت ہی تفریق اختلافات ہیں.
      2:
        text: اس سبق میں ہم نے یہ بھی سیکھا کہ کس طرح دو کہانیوں سے ایک خلاصہ سانچہ
          بنانا ہے جو پہلے ہی پیدا ہو چکے ہیں۔ تجرید اختلافات اور تفصیلات کو دور کرنے
          کا فن ہے تاکہ آپ دیکھ سکیں کہ کس طرح ایک حل بہت سے مختلف مسائل کے لئے کام
          کرسکتا ہے. یہ کمپیوٹر سائنس میں بہت مددگار ہے کیونکہ یہ ہمیں افعال پیدا
          کرنے کی اجازت دیتا ہے جو کئی مختلف حالات میں مفید ثابت ہوسکتا ہے.
    C4_unplugged_parameters:
      1:
        text: اس سبق کو پیرامیٹرز کے ساتھ گیت لکھنا کہا جاتا ہے. ہم یہاں کچھ گانے
          لکھنے جا رہے ہیں. کبھی کبھار کورس ہر مرتبہ جب آپ اِسے گاتے ہیں تو تھوڑا
          سا مختلف ہوتا ہے۔ آپ پرانے میکڈونلڈ ایک فارم تھا یاد ہے؟ کورس ہر جانور کے
          لئے تھوڑا سا مختلف ہے. اور اس فارم پر، اس کی ایک گائے تھی، ای آئی-آئی-او.
          ہر کورس میں چھوٹی سی تبدیلی ہم پیرامیٹرز فون کچھ کا استعمال کرتے ہوئے دکھایا
          جا سکتا ہے.
      2:
        text: کبھی کبھی ایک فنکشن کو پیرامیٹر کی ضرورت ہوتی ہے. ایک پیرامیٹر معلومات
          کا ایک اضافی ٹکڑا ہے جسے آپ ایک خاص ضرورت کے لئے اپنی مرضی کے مطابق کرنے
          کے لئے ایک فنکشن میں منتقل کرسکتے ہیں. جب آپ اپنے دوستوں کے ساتھ آئس کریم
          سنڈے بناتے ہیں تو، آپ کمپیوٹر پروگرام میں پیرامیٹرز کی طرح ایک عمل استعمال
          کر رہے ہیں.
      3:
        text: ونیلا آئس کریم کی ڈسک ہر سنڈی کے لئے ایک ہی ہوسکتا ہے لیکن جب آپ اپنے
          دوستوں سے پوچھتے ہیں کہ وہ کون سے ٹاپنگ چاہتے ہیں، تو آپ بہت سے مختلف مجموعے
          حاصل کرسکتے ہیں. ٹاپنگ فنکشن کا نام ہے لیکن ہر قسم کی ٹاپنگ ایک پیرامیٹر
          ہے. افعال اور پیرامیٹرز عظیم کمپیوٹر پروگراموں اور عظیم سنڈیوں کو بھی بنانے
          کے لئے مل کر کام کرتے ہیں.
    C4_unplugged_variables:
      1:
        text: اس سبق کو لفافے میں متغیر کہتے ہیں۔ ہم سزائیں تعمیر کر سکتے ہیں کہ کس
          طرح جاننے کے لئے جا رہے ہیں جب ہم اب بھی معلومات کے ٹکڑے لاپتہ ہیں. ہم میں
          سے زیادہ تر پہلے سے ہی ایک خالی میں بھرنے کے خیال سے واقف ہیں. ہم ایسا کرتے
          ہیں جب ہم اپنے ہوم ورک پر اپنا نام ڈال رہے ہیں. کبھی کبھی ایک سے زیادہ لفظ
          ہے کہ باہر بھرا ہوا کرنے کی ضرورت ہے اور اس صورت میں، ہم اس خالی ایک لیبل
          دے تاکہ ہم جانتے ہیں کہ معلومات کا جو ٹکڑا کہاں جاتا ہے.
      2:
        text: متغیرات معلومات کے ٹکڑے کے لئے جگہ دار ہیں جو تبدیل کر سکتے ہیں. لاپتہ
          معلومات کے لئے ایک متغیر کا استعمال کرتے ہوئے کی طرف سے، ہم جو کچھ بھی ہم
          کر رہے تھے پر کام جاری رکھ سکتے ہیں اور بعد میں لاپتہ معلومات میں کسی اور
          کو بھرنے دے سکتے ہیں. سافٹ ویئر میں، ہم متغیرات کو بہت استعمال کرتے ہیں.
          ہم نام، ای میل ایڈریس، اور یہاں تک کہ صارف نام کے لئے جگہ ہولڈرز کے طور
          پر متغیر استعمال کرتے ہیں. اس طرح ہم اس پروگرام کو یہ بتانے دے سکتے ہیں
          کہ صارف ان میں برتا ہے کے بعد ان کی تفصیلات کہاں دکھائے جائیں گے. ہم متغیر
          ہمارے کام میں ہر وقت استعمال کرتے ہیں.
      3:
        text: کسی بھی وقت آپ کو بعد کے لئے معلومات کا ایک ٹکڑا ذخیرہ کرنے کی ضرورت
          ہے، ہم ایک متغیر استعمال کرتے ہیں. آتے ہیں کہ ہمیں صارف نے ٹویٹ کیا ہے اس
          کی تعداد کو شمار کرنے کی ضرورت ہے. ہر بار جب صارف ٹویٹس کرتا ہے، ہم اس نمبر
          میں ایک شامل کریں گے اور ہر بار صارف ٹویٹ کو حذف کرے گا، ہم اس نمبر کو ایک
          کرکے کم کر دیں گے. کسی بھی وقت ہم کتنی بار معلوم کرنے کی ضرورت ہے کہ صارف
          نے ٹویٹ کیا ہے، ہم صرف اس متغیر میں نظر ڈالیں گے.
    C4_variables_artist:
      1:
        text: ایک متغیر ایک کنٹینر ہے جس میں آپ کو ایک قدر ذخیرہ کر سکتے ہیں. جب آپ
          کو ایک الگورتھم میں اس متغیر کا استعمال کرتے ہیں، یہ کنٹینر کھولتا ہے اور
          اندر قدر میں لگ رہا ہے. یہ آپ کو ہوشیار یلگوردمز لکھنے کی اجازت دیتا ہے
          جو مختلف طریقے سے متغیر میں ذخیرہ کردہ قیمت پر منحصر ہے.
      2:
        text: مثال کے طور پر، اگر آپ کو سالگرہ مبارک ہو کہنے کے لئے ایک الگورتھم لکھنا
          چاہتا تھا، آپ کو 10 تبدیل کر رہے ہیں! میرے چھوٹے بھائی کے لئے، یہ اب بہت
          اچھا ہے لیکن جب میں اسے اگلے سال چلاتا ہوں تو میں یہ کہنا چاہتا ہوں، سالگرہ
          مبارک ہو، آپ 11 سال کر رہے ہیں! میں نے اپنے بھائی کی عمر کو ذخیرہ کرنے کے
          لئے ایک متغیر نامی عمر پیدا کر سکتے ہیں اور سالگرہ مبارک ہو کا کہنا ہے کہ
          میرے الگورتھم لکھنے کے لئے، آپ کی بجائے 'عمر' تبدیل کر رہے ہیں. کیونکہ متغیر
          تبدیل کر سکتے ہیں، ہر سال میں متغیر 'عمر' کو اپ ڈیٹ کر سکتے ہیں برابر 'عمر'
          کے علاوہ 1.
      3:
        text: اس پہیلی میں، ہم ایک متغیر کا استعمال کرتے ہوئے جا رہے ہیں کہ لائن کی
          لمبائی مقرر کرے گا ہمارے آرٹسٹ ڈرا دیتی ہے. بعد میں ہمارے کوڈ میں، اقدام
          آگے بلاک اس کی لمبائی متغیر میں نظر آئے گا دیکھنے کے لئے کیا قیمت آپ نے
          اسے مقرر کیا ہے.
    C4_variables_playlab:
      1:
        text: ایک متغیر ایک کنٹینر ہے کہ آپ میں ایک قدر ذخیرہ کر سکتے ہیں. جب آپ کو
          ایک الگورتھم میں اس متغیر کا استعمال کرتے ہیں، یہ کنٹینر کھولتا ہے اور اندر
          قدر میں لگ رہا ہے. یہ آپ کو ہوشیار یلگوردمز لکھنے کی اجازت دیتا ہے جو مختلف
          طریقے سے متغیر میں ذخیرہ کردہ قیمت پر منحصر ہے.
      2:
        text: اب آپ کو مختلف کھیل دیا جاتا ہے جہاں playlab کوشش کرنے جا رہے ہیں اور
          آپ کو کھیل کو تبدیل کرنے کے لئے رفتار، اونچائی، سکور کی طرح متغیر کی اقدار
          کو تبدیل کر سکتے ہیں. آپ کو تبدیل کرنے کے لئے کھیل کے الگورتھم کو تبدیل
          کرنے کی ضرورت نہیں کرے گا یہ کس طرح ادا کرتا ہے، صرف متغیر.
      3:
        text: جلانے کے لئے میرے کام میں اور کتابوں کے لئے ایکس رے پر، ہم بہت سے مختلف
          طریقوں سے متغیر لاگو ہوتے ہیں. ایک طریقہ ہے کہ آپ کو ایک متغیر استعمال کر
          سکتے ہیں ایک کتاب کے صفحے کی تعداد کو ذخیرہ کرنے کے لئے ہے. ایک صارف کسی
          صفحے پر فونٹ کے سائز کو بڑھا اور کم کر سکتا ہے۔ فونٹ کے سائز کی بنیاد پر،
          کتاب میں صفحات کی تعداد تبدیل ہو سکتی ہے. ہم متغیر میں صفحات کی تعداد کو
          ذخیرہ کرنے کی طرف سے ایڈجسٹ کر سکتے ہیں.
    MC_2018_loops:
      1:
        text: بہت اچھا! ہم نے ایک کوڈفش پکڑ لیا ہے! آپ کو ایک ڈالفن کے لئے ایک codfish
          کھانا کھلانا تو جانتے تھے، ڈالفن خزانہ ہو سکتا ہے جہاں ایک جہاز کی تباہی
          کے لئے آپ کی رہنمائی کرے گا؟ ہمیں قریب ہونا چاہیے. پہیلیاں کے اگلے سیٹ trickier
          ہونے کے پابند ہیں، لہذا ہم بہتر کچھ کوڈنگ کی مہارت سیکھتے ہیں. یہ کیا ہے؟
          ایک غار؟
      2:
        text: خوش آمدید، بہادر! میرا نام سکویڈ ہے. میں نے آپ کو آخری پہیلیاں میں سے
          کچھ میں اور زیادہ حکم دیتا ہے کے اسی سیٹ کا استعمال کر رہے تھے محسوس کیا.
          تھوڑا سا تھکا ہوا ہوگا. کیا تم نے کبھی آپ کی طرح بار بار کچھ کرنے کے لئے
          ایک طریقہ تھا چاہتے ہیں, آپ جانتے ہیں, برتن دھونے یا تھکا ہوا یا بور ہو
          رہی ہے کے بغیر اپنے دانت برش? یہ اچھا ہو گا.
      3:
        text: کمپیوٹر پر اور بار بار ایک ہی بات کر میں واقعی اچھے ہیں loops کوڈنگ
          کا استعمال کرتے ہوئے. جب آپ اپنے پروگرام کو اسی ہدایات کو کئی بار کرنا چاہتے
          ہیں، تو آپ ایک لوپ استعمال کرسکتے ہیں!
      4:
        text: لوپ بلاک ہدایات پر مشتمل ہے جو مقصد تک پہنچنے تک دہرایا جاتا ہے. ایک
          بار جب آپ کا پروگرام “مقصد تک دوبارہ دہرائیں” لوپ شروع کرتا ہے، تو یہ ہدایات
          کو اس وقت تک دہراتا رہے گا جب تک کہ یہ مقصد تک نہ پہنچ جائے۔
      5:
        text: اپنے آپ کے لئے یہ کوشش کریں! ان حکموں کو رکھیں جو آپ “مقصد تک دوبارہ
          کریں” بلاک کے اندر دوبارہ کرنا چاہتے ہیں، “چلائیں” پر کلک کریں، اور اسے
          دیکھیں!
      6:
        text: ٹھیک ہے، یہ ایک چھوٹا سا عجیب تھا. کون جانتا تھا کہ squids کوڈ کر سکتے
          ہیں؟ میں نے تو یہاں تک نہیں سوچا تھا کہ اُن کی انگلیاں ہیں۔ تو اب ہم loops
          کے بارے میں جانتے ہیں. ہمیں کچھ اور خزانہ بیگ کرنے کے لئے ان کا استعمال
          کرتے ہیں.
    applab_intro_designmode:
      1:
        text: آپ کی اپنی اطلاقات کی تعمیر کے لئے آپ کو شروع سے سکرین اور عناصر ڈیزائن
          شروع کرنے کی ضرورت کے لئے جا رہے ہیں. ایپ لیب ڈیزائن موڈ کے ساتھ ایسا کرنا
          آسان بناتا ہے.
      2:
        text: ڈیزائن موڈ میں جانے کے لئے اپنی ایپ کے اوپر سوئچ کا استعمال کریں.
      3:
        text: آپ اسکرین پر انہیں گھسیٹنے سے نئے عناصر شامل کرسکتے ہیں. آپ ان کے ارد
          گرد مختلف مقامات پر منتقل کر سکتے ہیں اور نیچے دائیں کونے کو گھسیٹنے کی
          طرف سے ان کے سائز کو تبدیل کر سکتے ہیں.
      4:
        text: ایک عنصر کی خصوصیات کو تبدیل کرنے کے لئے دائیں جانب کنٹرول کا استعمال
          کرتے ہیں. مثال کے طور پر، اس بٹن کے متن، رنگ، اور فونٹ سائز کو تبدیل کرنا
          بہت آسان ہے.
      5:
        text: آپ کو آپ کی سکرین پر ایک نیا عنصر شامل کرتے ہیں تو یہ بٹن 1 کی طرح ایک
          عام ID مل جائے گا. اس بٹن کی شناخت کو تبدیل کرنے کا ایک اچھا خیال ہے جیسے
          “rightButton” زیادہ معنی خیز چیز. تاکہ آپ کو معلوم ہو جائے گا کہ یہ کون
          سا ہے جب آپ پروگرام میں جاتے ہیں.
      6:
        text: اگر آپ غلطی سے آپ کے اے پی پی میں ایک عنصر شامل کرتے ہیں، تو اسے باہر
          ھیںچیں یا حذف کریں.
      7:
        text: اسکرین عنصر میں گھسیٹنے سے آپ اپنی ایپ میں مکمل طور پر نئی اسکرینز شامل
          کرسکتے ہیں
      8:
        text: سب سے اوپر ڈراپ ڈاؤن سے آپ اپنی تخلیق کردہ اسکرینوں کے درمیان تیزی سے
          آگے اور پیچھے سوئچ کرسکتے ہیں.
      9:
        text: آپ کی ایپ کے اندر، آپ کو ان تمام اسکرینوں کے درمیان سوئچ کرنے کا ایک
          طریقہ کی ضرورت ہوگی، لہذا سیٹ اسکرین بلاک کو ٹول باکس میں شامل کیا گیا ہے.
          ایک بٹن کے کلک پر اسکرینوں کو تبدیل کرنے کے لئے “OnEvent” بلاک کے اندر “SetScreen”
          استعمال کریں.
      10:
        text: اگلے چند سطحوں میں آپ کو ایک ہی منصوبے پر کام کر رہے ہوں گے. سب سے پہلے
          آپ کو ایک بٹن شامل کریں گے تو آپ کو ایک نئی سکرین شامل کریں گے اور آخر میں
          آپ کو کوڈ لکھیں گے تاکہ بٹن نئی سکرین پر سوئچ.
    applab_intro_events:
      1:
        text: اطلاقات واقعی ڈاؤن لوڈ، اتارنا ہیں اس قسم کی طرح ہے کیونکہ آپ کے اپنے
          کاروبار شروع کرنے کی طرح میرا مطلب ہے، آپ کو زمین سے سب کچھ ڈیزائن کرنے
          کے لئے حاصل، آپ کو سب کچھ منظم کرنے کے لئے حاصل، اور آپ کو صرف کوڈ کے ساتھ
          پیدا کیا ہے کہ کام کے اس ٹکڑے کے مالک ہیں.
      2:
        text: اب جب کہ آپ اپنی ایپ کی نظر کو تبدیل کر سکتے ہیں تو ہم واقعات کا جواب
          دے کر اسے انٹرایکٹو بناتے ہیں! واقعات صارف کے اعمال ہوتے ہیں جیسے بٹن پر
          کلک کرنا، مینو کے ذریعے طومار کرنا، یا تصویر پر منڈانا. انٹرایکٹو اطلاقات
          واقعات کا جواب دینے کے طریقوں کی ضرورت ہوتی ہے، جیسے میں اس بٹن پر کلک کرتا
          ہوں تو آواز چل رہا ہے. ایپ لیب میں ایسا کرنے کے لئے آپ کو 'OnEvent' نامی
          ایک نیا بلاک استعمال کرنے کی ضرورت ہے.
      3:
        text: یہ پروگرام اسکرین کو نیلے رنگ میں مقرر کرتا ہے. میں نے اس بٹن پر کلک
          کریں جب سکرین سبز باری چاہتے ہیں. سب سے پہلے میں ایک onEvent بلاک میں ھیںچیں
          کرنے کی ضرورت ہو گی. ہوورنگ کی طرف سے مجھے پتہ ہے کہ بٹن کی شناخت ہے “BigButton”
          تو میں نے سب سے پہلے ڈراپ ڈاؤن میں اس کا انتخاب کریں گے.
      4:
        text: اگلا میں ایونٹ کی قسم کا انتخاب کریں گے. آپ سے منتخب کر سکتے ہیں اختیارات
          میں سے بہت سے ہے لیکن اب میں ایک باقاعدہ پرانی کلک کے طور پر اسے چھوڑ دونگا.
      5:
        text: 'آخر میں ایونٹ پر اندر کوڈ شامل کریں گے کہ سکرین کے پس منظر کا رنگ تبدیل
          ہو جائے گا. آپ اس بلاک کو ایک جملے کی طرح پڑھ سکتے ہیں: “اس واقعہ پر کہ
          بٹن پر کلک کیا جاتا ہے یہ سب کوڈ چلائیں.”'
      6:
        text: چلو اس کا امتحان لیتے ہیں۔ ایک onEvent کے باہر بلاکس اب بھی ابھی تک
          چلتے ہیں تو اسکرین نیلے رنگ سے شروع ہوتا ہے.
      7:
        text: اور جب میں بڑے بٹن پر کلک کریں کوڈ میرے OnEvent کے اندر چلتا ہے اور
          میری سکرین سبز بدل جاتا ہے.
      8:
        text: اگر آپ ایونٹ کے بعد مزید چیزوں کو تبدیل کرنا چاہتے ہیں، اسکرین پر متن
          کی طرح، صرف onEvent پر زیادہ کوڈ شامل کریں.
      9:
        text: آپ کے پروگرام کو مزید واقعات کا جواب دینے کے لئے ایونٹ بلاکس پر زیادہ
          شامل کریں. بس اس بات کو یقینی بنائیں کہ انہیں ایک دوسرے کے اندر نہ ڈالیں.
          اب یہ وقت ہے کہ اپنے آپ کو آزمائیں. مزہ کرو!
    applab_intro_share:
      1:
        text: اب جب کہ آپ نے ایپ لیب کی کچھ بنیادی باتیں سیکھ لی ہیں جیسے بٹن، آوازیں،
          تصاویر، ٹیکسٹ اور نئی اسکرینوں کو شامل کرنا آپ ہر قسم کی ایپس بنا سکتے ہیں۔
      2:
        text: اگلے درجے میں آپ کو اپلی کیشن مل جائے گا جو آپ نے ابھی تعمیر مکمل کی
          ہے. ایک چھوٹی سی تخلیقی صلاحیتوں کے ساتھ، آپ اپنے دوستوں کے لئے ایک شخصیت
          کوئز میں تبدیل کر سکتے ہیں، ایک تہنیتی کارڈ جو آپ اپنے خاندان کے ساتھ اشتراک
          کر سکتے ہیں یا آپ کے اپنے ایڈونچر کھیل کا انتخاب کرسکتے ہیں. ان اطلاقات
          میں سے تمام آپ نے پہلے ہی سیکھا ہے مہارت کا ایک مجموعہ ہیں، اور میں شرط
          رکھتا ہوں کہ آپ اس سے بھی زیادہ کے ساتھ آ سکتے ہیں.
      3:
        text: ایک بار جب آپ اپنی ایپ کے ساتھ کام کر رہے ہیں تو آپ اسے آسانی سے اپنے
          فون پر بھیج سکتے ہیں تاکہ یہ دیکھ سکیں کہ یہ کیسے لگ رہا ہے. بس “اشتراک
          کریں” پر کلک کریں اور یہاں اپنا فون نمبر درج کریں.
      4:
        text: آپ کو ایک ٹیکسٹ پیغام موصول ہوگا جو آپ کو فوری طور پر آپ کی ایپ کھولنے
          دے گا۔
      5:
        text: آپ سوشل میڈیا پر اپنی ایپ کا ایک لنک بھی اشتراک کرسکتے ہیں یا اسے دوسرے
          لوگوں کو کھیلنے اور اشتراک کرنے کے لئے code.org پبلک گیلری، نگارخانہ میں
          پوسٹ کرسکتے ہیں.
      6:
        text: آپ کو صرف اپلی کیشن لیب کیا کر سکتے ہیں کی سطح کھرچائی ہے. مکمل اپلی
          کیشن لیب میں زیادہ اعلی درجے کی صارف کے تعامل، نئے اسکرین عناصر اور یہاں
          تک کہ بلٹ ان ڈیٹا بیس کی خصوصیات ہیں تاکہ آپ فوری طور پر مکمل خصوصیات والے
          اطلاقات بنا سکیں. “code.org/applab” میں آپ کو مکمل آلے اور بہت سے خیالات
          مل جائیں گے اگر آپ جا رہے ہیں.
      7:
        text: سواری کے ساتھ ساتھ آنے کے لئے شکریہ. اب اپنی پہلی ایپ کی تعمیر کریں
          اور اشتراک کریں، اور ایپ لیب کے ساتھ ایپس کی تعمیر جاری رکھیں!
    applab_intro_sounds:
      1:
        text: اگلا آپ اپنی ایپ میں تصاویر اور آوازوں کو شامل کرنے کے بارے میں سیکھیں
          گے. آو آواز کے اختیارات کی جانچ پڑتال کرکے شروع کریں.
      2:
        text: آلے کے باکس میں آپ کو “PlaySound” نامی ایک نیا بلاک مل جائے گا. اسے
          ورک اسپیس میں گھسیٹیں. آپ ڈراپ ڈاؤن پر کلک کرکے کھیلنے کے لئے آواز منتخب
          کر سکتے ہیں پھر “انتخاب کریں” پر کلک کریں.
      3:
        text: یہاں سے آپ یا تو اپنے کمپیوٹر سے صوتی فائل اپ لوڈ کرسکتے ہیں، یا صوتی
          لائبریری سے آواز تلاش کرسکتے ہیں. ساؤنڈ لائبریری میں آلات، پس منظر کی موسیقی
          یا حیوانات جیسے بہت سے مختلف اقسام موجود ہیں۔
      4:
        text: ایک بار جب آپ چاہتے ہیں کہ آواز مل جائے تو، “انتخاب کریں” پر کلک کریں.
          جب یہ بلاک چلتا ہے، تو یہ آپ کی منتخب کردہ آواز ادا کرے گا.
      5:
        text: اپنے عناصر میں تصاویر شامل کرنے کے لئے آپ صرف setProperty بلاک استعمال
          کرسکتے ہیں. دوسری ڈراپ ڈاؤن میں تصویر کی جائیداد کو منتخب کریں
      6:
        text: پھر تیسرے ڈراپ سے “منتخب کریں” کو منتخب کریں.
      7:
        text: یہاں سے آپ اپنے کمپیوٹر سے ایک تصویر اپ لوڈ کرسکتے ہیں یا آپ آئکن لائبریری
          میں شبیہیں کی ایک بڑی لائبریری دیکھ سکتے ہیں.
      8:
        text: واپس کوڈ موڈ میں آپ اپنے آئکن کے آئکن رنگ کو تبدیل کرنے کے لئے “setProperty”
          بلاک استعمال کرسکتے ہیں. ایک بار جب آپ نے منتخب کیا ہے کہ آپ کا آئیکن استعمال
          کرنے کے لئے “چلائیں” پر کلک کریں یہ دیکھنے کے لئے کہ یہ کیسے لگ رہا ہے.
      9:
        text: یہ سب کچھ اِس کے لیے ہے! اب آپ اپنی ایپس کو مزید مزہ اور متحرک بنانے
          کے لئے تصاویر اور آوازوں کو شامل کرنا شروع کر سکتے ہیں.
    applab_intro_welcome:
      1:
        text: میرا نام میلانی ہے۔ میں code.org میں ایک انٹرن ہوں اور میں بھی ایک کمپیوٹر
          سائنس کے طالب علم ہوں. مجھے کمپیوٹر سائنس پسند ہے کیونکہ یہ واقعی تخلیقی
          ہے. میں مسئلہ حل کرنے کے لئے حاصل. میں نے سب کچھ تقریب کس طرح میں یہ کرنا
          چاہتے ہیں بنانے کے لئے حاصل. لیکن میں بھی ڈیزائنر بننا چاہتا ہوں. میں آرٹسٹ
          بنتا ہوں اور اس کے تخلیقی پہلو پر سب کچھ منتخب کرتا ہوں.
      2:
        text: اپلی کیشن لیب کے ساتھ آپ کی اپنی اطلاقات بنانا آسان ہے! چاہے آپ کوڈنگ
          کے لئے نئے ہیں یا کچھ تجربہ رکھتے ہیں. اپلی کیشن لیب نئے ایپس کی تعمیر اور
          اپنے دوستوں کے ساتھ ان کا اشتراک کرنے کے لئے ایک عظیم آلہ ہے.
      3:
        text: یہ ایک اپلی کیشن لیب ہے. بائیں طرف آپ کی ایپ ہے. دائیں جانب یہ چلانے
          کر دے گا کہ کوڈ ہے. آپ ٹول باکس سے بلاکس میں گھسیٹنے کی طرف سے آپ کے پروگرام
          کی تعمیر. شروع کرنے کے لئے آپ کو صرف 'setproperty' نامی ایک بلاک پڑے گا.
      4:
        text: سیٹ پراپرٹی بلاک آپ کی سکرین پر عناصر کی نظر کو تبدیل کرتا ہے. بٹن،
          لیبلز، یا اس سے بھی اسکرین خود کی طرح. سب سے پہلے آپ کو فیصلہ کرنے کی ضرورت
          ہے کہ آپ کون سا عنصر تبدیل کرنا چاہتے ہیں. آپ کو آپ کی اے پی پی میں ایک
          عنصر پر ہور تو آپ کا نام یا ID یہاں دیکھ سکتے ہیں. پھر پہلے ڈراپ سے اس ID
          کو منتخب کریں.
      5:
        text: عناصر بہت سے خصوصیات ہیں جو آپ اپنے متن کا رنگ، پس منظر کا رنگ یا فونٹ
          سائز کی طرح تبدیل کرسکتے ہیں. آپ مکمل فہرست دیکھ سکتے ہیں اور منتخب کرسکتے
          ہیں کہ آپ دوسری ڈراپ میں کونسی پراپرٹی تبدیل کرنا چاہتے ہیں.
      6:
        text: آخری ڈراپ نیچے یہ ہے کہ آپ اس قدر کو لکھیں گے جسے آپ استعمال کرنا چاہتے
          ہیں قیمت استعمال کرنا چاہتے ہیں. بلاک آپ کے لئے ایک تجویز کرے گا. لیکن آپ
          ہمیشہ مختلف رنگوں یا نمبروں میں اپنے آپ کو ٹائپ کرسکتے ہیں.
      7:
        text: 'ایک بار جب آپ کر رہے ہیں، تو بلاک ایک سزا کی طرح تھوڑا سا پڑھتا ہے:
          ''سبز پر بٹن 1 کے پس منظر کا رنگ سیٹ کریں. '' آپ کوڈ میں تعمیر کر رہے ہیں
          تبدیلیوں کو دیکھنے کے لئے چلانے مارو. اگر آپ ری سیٹ کرتے ہیں تو آپ اپنی
          ایپ کے بارے میں دیگر چیزوں کو تبدیل کرنے کے لئے مزید بلاکس میں ھیںچیں کرسکتے
          ہیں. تلاوت کی طرح!'
      8:
        text: اس ٹیوٹوریل کے لئے ہم بلاک موڈ میں کام کریں گے لیکن ایپ لیب بھی متن
          میں کام کرنے کی حمایت کرتا ہے.
      9:
        text: کسی بھی طرح آپ جاوا سکرپٹ، ویب کی زبان میں پروگرامنگ کیا جائے گا. ہر
          سطح پر ایک مقصد، ہدایات اور آپ کو پیدا کرنے کا ارادہ کر رہے ہیں کی ایک تصویر
          ہے.
      10:
        text: کیا تم نے کبھی پھنس گئے ہیں تو، اس تصویر پر کلک کریں اور یہ بالکل کس
          طرح کی سطح کو مکمل کرنے کے لئے آپ کو دکھائے گا. لیکن دیکھو اگر آپ اسے اپنے
          طور پر سب سے پہلے کر سکتے ہیں.
      11:
        text: آپ کو اس سطح کے لئے مقصد مکمل کر لیا ہے ایک بار پر منتقل کرنے کے لئے
          ختم کلک کریں. یہ سب کچھ اِس کے لیے ہے! اگلے سطح پر جانے کے لئے اور ایک اپلی
          کیشن لیب کے ساتھ اپنے ایڈونچر شروع کرنے کے لئے نارنجی “جاری” بٹن مارو!
    artist_intro:
      1:
        text: ہیلو، میں جے آر ہوں! ہر ریس کار ٹیم کو جیتنے کے لئے کمپیوٹر سائنسدانوں
          کی ضرورت ہے. وہ گاڑی سے اعداد و شمار کا تجزیہ کرتے ہیں تاکہ اسے تیزی سے
          بڑھایا جا سکے.
      2:
        text: ان پہیلیوں میں، آپ کو وہ جانا ہر جگہ ان کے پیچھے ایک لائن ڈرا دیتا ہے
          کہ ایک آرٹسٹ ہو جائے گا.
      3:
        text: اس بلاک کا کہنا ہے کہ “100 پکسلز کی طرف سے آگے بڑھیں.” پکسلز آپ کی سکرین
          پر صرف واقعی چھوٹے نقطوں ہیں.
      4:
        text: اس بلاک کا کہنا ہے کہ “90 ڈگری سے دائیں جانب موڑیں.” یہ آپ کے آرٹسٹ
          بھولبلییا پہیلیاں میں “باری” بلاکس کے طور پر ایک ہی رقم تبدیل ہو جائے گا.
      5:
        text: آرٹسٹ آگے بڑھتا ہے یا بدل جاتا ہے رقم تبدیل کرنے کے لئے ان بلاکس میں
          سے کسی میں تیر پر کلک کریں. ان نئے بلاکس کے ساتھ واقف حاصل کرنے کے لئے کے
          ارد گرد کھیلتے ہیں.
    csd_concept_binary_data:
      1:
        text: ہیلو! میرا نام لیمور فرائیڈ ہے، اور میں یہاں اڈفرٹ انڈسٹریز میں انجینئر
          ہوں۔ اور یہ ہے جہاں میں انجینئرنگ اور ڈیزائن کرتا ہوں، اور میں فیشن اور
          موسیقی اور ٹیکنالوجی کے لئے سرکٹس ڈیزائن کرتا ہوں.
      2:
        text: میرا نام فیڈریکو گومز سواریز ہے، اور میں مائیکروسافٹ ہیک کے ساتھ سافٹ
          ویئر ڈویلپر ہوں. اور میں ٹیکنالوجی کا استعمال کرتا ہوں تاکہ ہمارے دور کے
          کچھ بڑے سماجی مسائل کو حل کرنے میں مدد ملے.
      3:
        text: آپ نے سنا ہو سکتا ہے کہ کمپیوٹر لوگ اور صفر پر کام کرتے ہیں. لیکن تقریبا
          کوئی بھی آج اصل میں ان لوگوں اور zeros کے ساتھ براہ راست معاملہ ہے. لیکن
          لوگ اور zeroes ایک بڑا کردار ادا کرتے ہیں کہ کس طرح کمپیوٹرز اندر پر کام
          کرتے ہیں.
      4:
        text: ایک کمپیوٹر کے اندر برقی تار اور سرکٹس ہوتے ہیں جو کمپیوٹر میں تمام
          معلومات لے جاتے ہیں۔ آپ کس طرح ذخیرہ کرتے ہیں یا بجلی کا استعمال کرتے ہوئے
          معلومات کی نمائندگی کرتے ہیں؟
      5:
        text: ٹھیک ہے، اگر آپ کے پاس ایک تار ہے جس میں بجلی اس کے ذریعے بہہ رہی ہے،
          تو سگنل یا تو ہو سکتا ہے. یہ بہت زیادہ انتخاب نہیں ہے، لیکن یہ واقعی ایک
          اہم آغاز ہے. ایک تار کے ساتھ، ہم نے ایک ہاں یا نہیں، سچ یا غلط نمائندگی
          کر سکتے ہیں، ایک یا صفر، یا صرف دو اختیارات کے ساتھ کچھ اور. ایک تار کی
          اس پر/بند حالت کو تھوڑا سا کہا جاتا ہے، اور یہ معلومات کا سب سے چھوٹا ٹکڑا
          ہے جسے کمپیوٹر ذخیرہ کر سکتا ہے.
      6:
        text: 'اگر آپ زیادہ تاروں کا استعمال کرتے ہیں تو آپ زیادہ بٹس حاصل کرتے ہیں:
          زیادہ سے زیادہ اور صفر. زیادہ بٹس کے ساتھ آپ کو زیادہ پیچیدہ معلومات کی
          نمائندگی کر سکتے ہیں. لیکن یہ سمجھنے کے لئے، ہم بائنری نمبر نظام کہا جاتا
          ہے کچھ کے بارے میں جاننے کی ضرورت ہے.'
      7:
        text: 'دشملو تعداد کے نظام میں، ہم صفر سے نو دس ہندسوں ہے، اور یہ کہ کس طرح
          ہم سب شمار کرنے کے لئے سیکھا ہے. ثنائی عدد نظام میں، ہمارے پاس صرف دو ہندسے
          ہوتے ہیں: صفر اور ایک. ان دو ہندسوں سے ہم کسی بھی عدد تک شمار کر سکتے ہیں۔'
      8:
        text: یہ کس طرح کام کرتا ہے. ایک دشملو تعداد کے نظام میں ہم سب کے لئے استعمال
          کر رہے ہیں، ایک بڑی تعداد میں ہر پوزیشن ایک مختلف قدر ہے. ایک 1 پوزیشن،
          10 پوزیشن، 100 پوزیشن، اور اسی طرح ہے. مثال کے طور پر، 100 پوزیشن میں ایک
          9 900 ہے. بائنری میں، ہر پوزیشن بھی ایک قدر کی جاتی ہے. لیکن 10 کی طرف سے
          ہر وقت ضرب کی بجائے، ہم 2 سے ضرب. تو 1 پوزیشن، 2 پوزیشن، 4 پوزیشن، 8 پوزیشن،
          اور اسی طرح ہے. مثال کے طور پر، بائنری میں نمبر 9 1001 ہے. قدر کا حساب کرنے
          کے لئے، ہم 1 بار 8، کے علاوہ 0 بار 4، کے علاوہ 0 اوقات 2، کے علاوہ 1 بار
          1 شامل کریں. کمپیوٹر ہمارے لئے یہ کرتے ہیں کیونکہ تقریبا کوئی بھی اس ریاضی
          کرتا ہے. کیا اہم بات یہ ہے کہ کسی بھی تعداد میں صرف ایک اور zeros کے ساتھ
          نمائندگی کی جا سکتی ہے، یا تاروں کے ایک گروپ کی طرف سے ہے کہ پر یا بند ہیں.
          آپ جتنے زیادہ تاروں کا استعمال کرتے ہیں، آپ جتنی بڑی تعداد میں ذخیرہ کرسکتے
          ہیں. 8 تاروں کے ساتھ، آپ 0 اور 255 کے درمیان نمبروں کو ذخیرہ کرسکتے ہیں.
          یہ 8 ہیں. صرف 32 تاروں کے ساتھ، آپ کو 0 سے 4 ارب سے زیادہ تمام طریقے سے
          ذخیرہ کر سکتے ہیں. بائنری تعداد کے نظام کا استعمال کرتے ہوئے، آپ کو آپ کی
          طرح کسی بھی تعداد کی نمائندگی کر سکتے ہیں.
      9:
        text: لیکن دیگر اقسام کی معلومات کے بارے میں کیا خیال ہے؟ متن، تصاویر، یا
          آواز کی طرح؟ یہ پتہ چلتا ہے کہ یہ سب چیزیں بھی نمبروں کے ساتھ نمائندگی کی
          جا سکتی ہیں. حروف تہجی میں تمام حروف کے بارے میں سوچو. آپ ہر خط کو ایک نمبر
          تفویض کر سکتے ہیں. A 1 ہو سکتا ہے، B 2، اور اسی طرح ہو سکتا ہے. پھر آپ اعداد
          کی ترتیب کے طور پر کسی بھی لفظ یا پیراگراف کی نمائندگی کر سکتے ہیں. اور
          جیسا کہ ہم نے دیکھا، ان اعداد کو بجلی کے سگنل پر یا بند کے طور پر محفوظ
          کیا جا سکتا ہے. ہر لفظ آپ کو ہر ویب صفحہ یا آپ کے فون پر دیکھتے ہیں اس طرح
          ایک نظام کا استعمال کرتے ہوئے کی نمائندگی کی ہے.
      10:
        text: اب، ہم تصاویر، ویڈیوز، اور تمام گرافکس پر غور کریں جو آپ اسکرین پر دیکھتے
          ہیں.
      11:
        text: ان تصاویر میں سے تمام پکسلز نامی نوعمر نقطوں سے بنا رہے ہیں، اور ہر
          پکسل ایک رنگ ہے. رنگوں میں سے ہر ایک کی تعداد کے ساتھ نمائندگی کی جا سکتی
          ہے. جب آپ عام تصویر پر غور ان پکسلز کے لاکھوں ہے، اور عام ویڈیو فی سیکنڈ
          30 تصاویر سے پتہ چلتا ہے اب ہم یہاں اعداد و شمار کی ایک بہت کے بارے میں
          بات کر رہے ہیں.
      12:
        text: ہر آواز بنیادی طور پر ہوا میں کمپن کی ایک سلسلہ ہے. کمپن ایک waveform
          کے طور پر گراف کی نمائندگی کی جا سکتی ہے. اس موج پر کسی بھی نقطہ کو ایک
          عدد سے ظاہر کیا جا سکتا ہے۔ اور اس طرح کسی بھی آواز کو اعداد کے سلسلے میں
          توڑا جا سکتا ہے۔ اگر آپ اعلی معیار کی آواز چاہتے ہیں تو، آپ 32 بٹ آڈیو یا
          8 بٹ آڈیو منتخب کریں گے. مزید بٹس کی تعداد کی ایک اعلی رینج کا مطلب ہے.
      13:
        text: جب آپ کوڈ لکھنے یا آپ کی اپنی اے پی پی بنانے کے لئے ایک کمپیوٹر کا استعمال
          کرتے ہیں، آپ کو ان لوگوں اور zeros کے ساتھ براہ راست نمٹنے نہیں کر رہے ہیں.
          لیکن آپ تصاویر یا آواز یا ویڈیو کے ساتھ نمٹنے کی جائے گی. لہذا اگر آپ کو
          سمجھنے کے لئے چاہتے ہیں کہ کس طرح کمپیوٹر کے اندر کام کرتے ہیں، یہ سب نیچے
          آتا ہے ان سادہ ہیں اور zeros اور بجلی کے سگنل ان کے پیچھے سرکٹ میں.
    csd_concept_circuits_logic:
      1:
        text: سرکٹس کے بارے میں میں نے دریافت کیا ہے سب سے بہترین چیزوں میں سے ایک
          یہ ہے کہ سرکٹری ایک آرٹ فارم ہوسکتا ہے جیسے میرے پاس تخلیقی خیال ہے، میں
          سرکٹس کا استعمال کرتے ہوئے اس تخلیقی خیال کو حاصل کرسکتا ہوں. لہذا اگر آپ
          کے پاس خیالات ہیں، تو آپ ان خیالات کو زندگی میں لانے کے لئے ٹیکنالوجی کا
          استعمال کرسکتے ہیں.
      2:
        text: کمپیوٹر کی ہر ان پٹ یا آؤٹ پٹ مؤثر طریقے سے ایک قسم کی معلومات ہوتی
          ہے، جسے برقی سگنل یا ون اور زروس کو آن یا آف سے ظاہر کیا جا سکتا ہے۔
      3:
        text: ان پٹ کے طور پر آنے والی معلومات پر عمل کرنے کے لئے، اور آؤٹ پٹ کی معلومات
          بنانے کے لئے، ایک کمپیوٹر کو ان پٹ سگنل میں ترمیم اور جمع کرنے کی ضرورت
          ہے. ایسا کرنے کے لیے ایک کمپیوٹر لاکھوں نوے الیکٹرانک اجزاء کا استعمال کرتا
          ہے، جو مل کر سرکٹس بنانے کے لیے آتے ہیں۔
      4:
        text: چلو سرکٹس میں ترمیم اور عمل کر سکتے ہیں کہ کس طرح پر ایک قریبی نظر ڈالیں
          معلومات ہیں اور zeros میں نمائندگی کی ہے کہ. یہ ایک ناقابل یقین حد تک سادہ
          سرکٹ ہے. یہ ایک برقی سگنل، پر یا بند لیتا ہے، اور یہ اس کو پھینک دیتا ہے.
          تو اگر آپ کو دے سگنل یہ ایک 1 ہے، سرکٹ آپ کو ایک 0 دیتا ہے، اور اگر آپ سرکٹ
          0 دے، یہ آپ کو ایک 1 دیتا ہے. جو سگنل اندر جاتا ہے وہ سگنل کے برابر نہیں
          ہوتا جو باہر نکلتا ہے، اور اسی طرح ہم اس سرکٹ کو نہیں کہتے ہیں.
      5:
        text: زیادہ پیچیدہ سرکٹس ایک سے زیادہ سگنل لے سکتے ہیں اور انہیں جمع کر سکتے
          ہیں، اور آپ کو ایک مختلف نتیجہ دے سکتے ہیں. اس مثال میں ایک سرکٹ دو برقی
          سگنل لے گا، اب ہر ایک 1 یا 0 ہو سکتا ہے۔ اگر اندر آنے والے سگنل میں سے کوئی
          ایک 0 ہے، تو نتیجہ بھی 0 ہے. یہ سرکٹ صرف آپ کو دے گا 1, پہلی سگنل اور دوسرا
          سگنل دونوں ہیں تو ایک 1, اور اس طرح ہم سرکٹ فون اور.
      6:
        text: اس طرح بہت سے چھوٹے سرکٹس ایسے ہوتے ہیں جو سادہ منطقی حسابان انجام دیتے
          ہیں۔ ان سرکٹس کو ایک ساتھ منسلک کرکے، ہم زیادہ پیچیدہ سرکٹس بنا سکتے ہیں
          جو زیادہ پیچیدہ حسابان انجام دیتے ہیں.
      7:
        text: مثال کے طور پر، آپ کو 2 بٹس کا اضافہ کر دیتی ہے کہ ایک سرکٹ بنا سکتے
          ہیں ایک ساتھ مل کر ایک یوگیر کہا جاتا ہے. یہ سرکٹ 2 انفرادی بٹس میں لیتا
          ہے، ہر ایک 1 یا 0، اور رقم کا حساب کرنے کے لئے ایک دوسرے کے ساتھ ان کا اضافہ
          کر دیتی ہے. رقم 0 کے علاوہ 0 0 برابر ہو سکتا ہے، 0 کے علاوہ 1 1 برابر، یا
          1 کے علاوہ 1 2 کے برابر ہے. آپ کو دو تاروں باہر آنے کی ضرورت ہے کیونکہ یہ
          دو بائنری ہندسوں تک لے جا سکتے ہیں رقم کی نمائندگی کرنے کے لئے. ایک بار
          جب آپ کے پاس دو بٹس معلومات شامل کرنے کے لئے ایک واحد یوڈر ہے، تو آپ ان
          اضافی سرکٹس کے ساتھ مل کر بہت بڑی تعداد کو شامل کرنے کے لئے ایک دوسرے کے
          ساتھ مل کر رکھ سکتے ہیں.
      8:
        text: مثال کے طور پر، یہاں ایک 8 بٹ یوڈر نمبر 25 اور 50 کا اضافہ کرتا ہے.
          ہر عدد کو 8 بٹس استعمال کرتے ہوئے ظاہر کیا جاتا ہے جس کے نتیجے میں 16 مختلف
          برقی سگنل پیدا ہوتے ہیں جو سرکٹ میں جاتے ہیں۔ ایک 8 بٹ یوجک کے لئے سرکٹ
          اس کے اندر بہت کم adders کے ہے, جو ایک ساتھ مل کر, رقم کا حساب.
      9:
        text: مختلف برقی سرکٹس دیگر سادہ حسابان جیسے ذلت یا ضرب انجام دے سکتے ہیں۔
          اصل میں، تمام معلومات پروسیسنگ آپ کے کمپیوٹر کرتا ہے صرف بہت سے اور چھوٹے
          سادہ آپریشن کے بہت سے ایک دوسرے کے ساتھ ڈال دیا ہے. کمپیوٹر کی طرف سے کیا
          ہر انفرادی آپریشن اتنا آسان ہے، یہ ایک انسان کی طرف سے کیا جا سکتا ہے، لیکن
          کمپیوٹرز کے اندر یہ سرکٹس جس طرح تیزی سے ہیں.
      10:
        text: واپس دن میں، یہ سرکٹس بڑے اور چپکے تھے، اور ایک 8 بٹ یوڈر ایک فرج کے
          جتنے بڑے ہو سکتے تھے، اور ان کو سادہ حساب کرنے میں چند منٹ لگتے تھے۔ آج،
          کمپیوٹر سرکٹس سائز میں خرد ہیں، اور جس طرح تیزی سے. چھوٹے کمپیوٹرز بھی تیز
          کیوں ہیں؟ ٹھیک ہے، کیونکہ سرکٹ جتنا چھوٹا ہوتا ہے، برقی سگنل کو اتنا ہی
          کم فاصلہ جانا پڑتا ہے۔ بجلی صرف روشنی کی رفتار سے حرکت کرتی ہے، یہی وجہ
          ہے کہ جدید سرکٹس اربوں حساب فی سیکنڈ انجام دے سکتے ہیں۔
      11:
        text: تو چاہے آپ ایک کھیل کھیل رہے ہیں، ایک ویڈیو ریکارڈ کر رہے ہیں، یا کائنات
          کی تلاش، آپ ممکنہ طور پر ٹیکنالوجی کے ساتھ کیا کر سکتے ہیں سب کچھ معلومات
          کی ضرورت ہے بہت جلد عملدرآمد کی جائے. یہ سب پیچیدگی کے نیچے صرف نوجوان تھوڑا
          سرکٹس کے بہت سے ہے کہ ویب سائٹس، ویڈیوز، موسیقی، اور کھیل میں بائنری سگنل
          کی باری ہے. یہ سرکٹس ہمیں بیماری کی تشخیص اور علاج کے لیے ڈی این اے کو ڈی
          این اے کو ڈی کوڈ کرنے میں بھی مدد کر سکتے ہیں۔ تو آپ ان تمام سرکٹس کے ساتھ
          کیا کرنا چاہیں گے؟
    csd_concept_computer:
      1:
        text: میرا نام مائے لی کھو ہے اور میں ایک ڈیزائنر اور ایک موجد ہوں۔ تو میں
          نے ڈیزائن کیا ہے چیزوں میں سے کچھ ایپل میں کیا گیا ہے، اور اب میں مصنوعات
          ڈیزائن بچوں کے لئے تاکہ وہ اسکول میں ایک آسان وقت ہو سکتا ہے استعمال کرنے
          کے لئے. میری دوسری ملازمتوں میں DJ-ing اور رقص شامل ہیں.
      2:
        text: کمپیوٹر ہر جگہ ہیں! وہ لوگوں کی جیب میں ہیں، وہ لوگوں کی گاڑیوں میں
          ہیں، لوگ انہیں اپنی کلائیوں پر رکھتے ہیں. وہ ابھی آپ کے بیگ میں ہو سکتا
          ہے. لیکن کمپیوٹر کو کمپیوٹر کیا بناتا ہے؟ کمپیوٹر کو ویسے بھی کمپیوٹر کیا
          بناتا ہے؟ اور یہ کیسے کام کرتا ہے؟
      3:
        text: ہیلو میں نعت ہوں! میں ایکس باکس کے اصل ڈیزائنرز میں سے ایک تھا. میں
          کمپیوٹر کے ساتھ کام کر رہا ہوں کیونکہ میں شاید سات سال کا تھا اور اب میں
          مجازی حقیقت پر کام کرتا ہوں. انسانوں کی حیثیت سے، ہم نے ہمیشہ مسائل کو حل
          کرنے میں مدد کے لئے آلات بنائے ہیں. ایک وہیل بارو، ہتھوڑا، یا پرنٹنگ پریس،
          یا ٹریلر جیسے اوزار.
      4:
        text: ان تمام ایجادات نے دستی کام میں ہماری مدد کی۔ وقت گزرنے کے ساتھ ساتھ،
          لوگوں کو حیران ہونا شروع کر دیا کہ آیا کوئی مشین ڈیزائن اور تعمیر کی جا
          سکتی ہے تاکہ ہم اس سوچ کے کام میں مدد کریں جو ہم کرتے ہیں، جیسے مساوات کو
          حل کرنا یا آسمان میں ستاروں سے باخبر رہنا. بجائے گندگی اور پتھر کی طرح جسمانی
          چیزوں کو منتقل یا ہیرا پھیری کرنے کے بجائے، ان مشینوں کو معلومات جوڑتوڑ
          کرنے کے لئے ڈیزائن کیا جائے کرنے کی ضرورت ہوگی. جیسا کہ کمپیوٹر سائنس کے
          علمبروں نے ایک سوچ مشین کو ڈیزائن کرنے کا طریقہ دریافت کیا، انہیں احساس
          ہوا کہ اسے چار مختلف کاموں کو انجام دینا پڑا.
      5:
        text: یہ ان پٹ لینے کی ضرورت ہوگی، معلومات کو ذخیرہ کرنے کی ضرورت ہوگی اور
          پھر نتائج کو آؤٹ پٹ کریں گے. اب یہ آسان لگ سکتا ہے، لیکن یہ چار چیزیں تمام
          کمپیوٹرز کے لئے عام ہیں. یہی وجہ ہے کہ ایک کمپیوٹر کو کمپیوٹر بناتا ہے.
      6:
        text: کمپیوٹر بنیادی کیلکولیٹر کے طور پر شروع ہوا، جو پہلے سے ہی اس وقت بہت
          اچھا تھا، اور وہ صرف اس وقت نمبروں کو ہیرا پھیری کر رہے تھے. لیکن اب ہم
          ایک دوسرے سے بات کرنے کے لئے ان کا استعمال کر سکتے ہیں، ہم کھیل کھیلنے کے
          لئے ان کا استعمال کر سکتے ہیں، روبوٹ کنٹرول کرتے ہیں، اور کسی بھی پاگل بات
          یہ ہے کہ آپ شاید تصور کر سکتے ہیں. جدید کمپیوٹر اُن چپچپا پرانی مشینوں کی
          طرح کچھ بھی نظر نہیں آتے مگر وہ پھر بھی یہی چار کام کرتے ہیں۔
      7:
        text: سب سے پہلے، ہم ان پٹ کے بارے میں بات کرنے جا رہے ہیں. آپ کمپیوٹرز کو
          بتا سکتے ہیں کہ کی بورڈ کے ساتھ کیا کرنا ہے، آپ انہیں بتا سکتے ہیں کہ ماؤس،
          مائیکروفون، کیمرے کے ساتھ کیا کرنا ہے. یہ تمام مختلف آدانوں ایک کمپیوٹر
          کی معلومات دے، جو اس کے بعد یاد میں محفوظ کیا جاتا ہے.
      8:
        text: ایک کمپیوٹر کا پروسیسر میموری سے معلومات لیتا ہے. یہ اسے manipolates
          یا ایک الگورتھم کا استعمال کرتے ہوئے تبدیل، جو حکم دیتا ہے کی صرف ایک سیریز
          ہے. اور پھر یہ عملدرآمد کی معلومات بھیجتا ہے واپس میموری میں ذخیرہ کیا جائے
          کرنے کے لئے دوبارہ. یہ اس وقت تک جاری رہتا ہے جب تک عملدرآمد کی معلومات
          آؤٹ پٹ ہونے کے لئے تیار نہیں ہوجاتی
      9:
        text: کمپیوٹر آؤٹ پٹ کی معلومات کا انحصار اس بات پر ہوتا ہے کہ کمپیوٹر کیا
          کرنے کے لئے ڈیزائن کیا گیا ہے. ایک کمپیوٹر ڈسپلے متن، تصاویر، ویڈیوز، یا
          انٹرایکٹو گیمز دکھا سکتا ہے - یہاں تک کہ مجازی حقیقت! کمپیوٹر کی پیداوار
          میں روبوٹ کو کنٹرول کرنے کے لئے سگنل بھی شامل ہوسکتا ہے.
      10:
        text: اور کون جانتا ہے کہ کل کے کمپیوٹر کیسا ہوں گے؟ میری امید یہ ہے کہ آپ
          کو یہ فیصلہ کرنے میں مدد ملے گی کہ آپ کل کے کمپیوٹر کس طرح نظر آتے ہیں.
          لیکن تمام کمپیوٹرز بھر میں، قطع نظر ٹیکنالوجی کی مختلف اقسام کے وہ استعمال
          کرتے ہیں، وہ ہمیشہ ان چار چیزوں کو کر رہے ہیں. وہ معلومات میں لے جاتے ہیں،
          وہ اسے اعداد و شمار کے طور پر ذخیرہ کرتے ہیں، وہ اس پر عملدرآمد کرتے ہیں،
          اور پھر وہ نتائج کو پیداوار دیتے ہیں.
    csd_concept_hardware_software:
      1:
        text: ہیلو، میرا نام ایریکا گومز ہے اور میں Amazon.com میں انجینئرنگ مینیجر
          ہوں. ٹیک میں کام کرنے کے بارے میں سب سے اچھی چیزوں میں سے ایک، اور خاص طور
          پر ایمیزون میں، میں اپنے کتے کو روزانہ کام کرنے کے لئے میرے ساتھ لانے کے
          لئے حاصل ہے. میرا کام اس بات کا یقین کرنے میں مدد کرنا ہے کہ سافٹ ویئر دروازے
          سے باہر نکل جاتا ہے اور اس کا کام میری میز کے نیچے نیپ اور بہت زور سے خراب
          کرنا ہے.
      2:
        text: 'میرا نام جیروم ہولمین ہے، اور میں ٹیم ایکس باکس پر ایک پروگرام مینیجر
          ہوں اور میرے پاس بہت مزہ کام ہے: بنیادی طور پر ہارڈ ویئر اور سافٹ ویئر کو
          ایک ساتھ لانے کے لئے آپ کو وہ تمام کھیل جو آپ اپنے ایکس باکس پر پسند کرتے
          ہیں.'
      3:
        text: جب آپ کمپیوٹنگ ڈیوائس کے اندر نظر آتے ہیں تو آپ سرکٹس، چپس، تاروں، مقررین،
          پلگ ان، اور دیگر چیزوں کے تمام قسم کے ایک گروپ کو دیکھتے ہیں. یہ ہارڈ ویئر
          ہے.
      4:
        text: لیکن جو آپ کو نظر نہیں آتا وہ سافٹ ویئر ہے. سافٹ ویئر اس مشین پر چلنے
          والے تمام کمپیوٹر پروگرام یا کوڈ ہیں۔ سافٹ ویئر اطلاقات اور کھیلوں سے ویب
          صفحات تک کچھ بھی ہوسکتا ہے اور ڈیٹا سائنس سافٹ ویئر جو مجھے اور میری ٹیمیں
          ایمیزون میں استعمال کرتے ہیں تاکہ گاہکوں کے برتاؤ کو سمجھنے کے لئے.
      5:
        text: لیکن ہارڈ ویئر اور سافٹ ویئر کس طرح ایک دوسرے کے ساتھ بات چیت کرتے ہیں؟
          چلو کمپیوٹر کے مرکزی پروسیسنگ یونٹ، یا سی پی یو کو دیکھنے میں شروع کرتے
          ہیں.
      6:
        text: سی پی یو ماسٹر چپ ہے جو کمپیوٹر کے دیگر تمام حصوں کو کنٹرول کرتا ہے.
          ایک سی پی یو مختلف چیزوں کو کرنے کی ضرورت ہے لہذا اس کے اندر چھوٹے، آسان
          حصوں ہیں جو مخصوص کاموں کو سنبھالتے ہیں. اس میں سادہ ریاضی اور منطق کرنے
          کے لئے سرکٹس ہیں. اس کے پاس کمپیوٹر کے مختلف حصوں سے معلومات بھیجنے اور
          وصول کرنے کے لئے دیگر سرکٹس ہیں.
      7:
        text: سی پی یو کا حقیقی جادو یہ ہے کہ یہ کس طرح جانتا ہے کہ کون سا سرکٹس استعمال
          کرنا ہے اور ان کا استعمال کب کرنا ہے. سی پی یو سادہ حکم دیتا ہے جو اسے بتاتا
          ہے کہ کون سا سرکٹ کسی مخصوص کام کو کرنے کے لئے استعمال کرنا ہے. مثال کے
          طور پر ایک “add” کمانڈ سی پی یو کو بتاتا ہے کہ وہ اپنے بیرونی سرکٹ کو نئے
          نمبر کا حساب لگانے کے لیے استعمال کرے۔ اور پھر “اسٹور” کمانڈ سی پی یو کو
          بتاتا ہے کہ وہ اس نتیجے کو میموری میں بچانے کے لئے مختلف سرکٹ استعمال کرے.
      8:
        text: صرف تعداد کی طرح، ان سادہ حکم دیتا ہے کے تمام بائنری ہیں اور zeros میں
          یا پر اور بجلی کے سگنل بند کی نمائندگی کی جا سکتی ہے. بائنری حکم دیتا ہے
          میموری میں محفوظ ہیں اور CPU fetches اور ایک کے بعد ایک ترتیب میں ان کو
          executes. حکموں کی یہ ترتیب، حقیقت میں، ایک بہت سادہ کمپیوٹر پروگرام ہے.
      9:
        text: ثنائی کوڈ سافٹ ویئر کی سب سے بنیادی شکل ہے اور یہ کمپیوٹر کے تمام ہارڈ
          ویئر کو کنٹرول کرتا ہے۔ ان دنوں، کوئی بھی بائنری میں سافٹ ویئر لکھتا ہے.
          یہ ہمیشہ کے لیے لے جائے گا!
      10:
        text: آج، ہم جو سافٹ ویئر لکھتے ہیں وہ اس (ازگر)، یا اس (روبی)، یا اس سے بھی
          (بلاکلی) کی طرح لگتا ہے. ان کی طرح پروگرامنگ زبانوں آپ انگریزی کی طرح ایک
          بہت لگ رہا ہے کہ کچھ میں حکم دیتا ہے میں ٹائپ کرتے ہیں.
      11:
        text: اسکرین پر ایک مستطیل اپنی طرف متوجہ کرنے کے لئے، آپ کو صرف ایک کمانڈ
          کی ضرورت ہے. اس اعلی سطحی کمانڈ کو سینکڑوں، یا ہزاروں میں تبدیل کیا جاتا
          ہے، آسان بائنری حکم دیتا ہے جو سی پی یو سمجھتا ہے. سافٹ ویئر CPU کو بتاتا
          ہے کہ کیا کرنا ہے، لیکن جب آپ موسیقی سن رہے ہیں، اور ویب براؤز کر رہے ہیں،
          اور ایک دوست کے ساتھ بات چیت، آپ کا کمپیوٹر ایک ہی وقت میں سافٹ ویئر کے
          ایک سے زیادہ ٹکڑے چل رہا ہے.
      12:
        text: لہذا، ان تمام پروگراموں کو پہلی جگہ میں کمپیوٹر پر کیسے ملتا ہے، اور
          سی پی یو ان سب کو ایک ہی وقت میں کیسے چلا سکتا ہے؟ تلاش کرنے کے لئے ہمیں
          آپریٹنگ سسٹم پر نظر ڈالنا پڑے گا.
      13:
        text: کمپیوٹر کا آپریٹنگ سسٹم ماسٹر پروگرام ہوتا ہے جو اس بات کا انتظام کرتا
          ہے کہ سافٹ ویئر کو کمپیوٹر کی ہارڈ ویئر کا استعمال کیسے ملتا ہے۔ مثال کے
          طور پر، میں ونڈوز آپریٹنگ سسٹم بنانے میں مدد کرتا ہوں جو زیادہ تر ذاتی کمپیوٹرز
          پر چلتا ہے.
      14:
        text: آپریٹنگ سسٹم خصوصی صلاحیتوں کے ساتھ ایک پروگرام ہے جو اسے کمپیوٹر پر
          دوسرے سافٹ ویئر کو کنٹرول کرنے دیتا ہے. یہ آپ کو آپ کے کمپیوٹر کی میموری
          میں لوڈ کرکے نئے پروگراموں کو انسٹال کرنے کی اجازت دیتا ہے. یہ فیصلہ کرتا
          ہے کہ مرکزی پروسیسنگ یونٹ کے ذریعہ کوئی پروگرام کب چلایا جاتا ہے اور آیا
          وہ پروگرام کمپیوٹر کے ان پٹ اور آؤٹ پٹ آلات تک رسائی حاصل کر سکتا ہے یا
          نہیں۔ اور جب آپ کو لگتا ہے کہ آپ کے کمپیوٹر بہت سے پروگراموں کو ایک بار
          میں چل رہا ہے، حقیقت میں، یہ آپریٹنگ سسٹم ہے کہ تیزی سے اشتراک کرنے کے پروگراموں
          کے درمیان سوئچنگ ہے کہ CPU ایک سیکنڈ کے مختلف کے لئے.
      15:
        text: ہر کمپیوٹر کے اندر ایک آپریٹنگ سسٹم مینیجنگ سافٹ ویئر ہوتا ہے جو کمپیوٹر
          کی ہارڈ ویئر کو کنٹرول کرتا ہے۔
      16:
        text: سافٹ ویئر سادہ بائنری کوڈ سے بنا حکموں کا ایک سلسلہ ہے، اور یہ کہ بائنری
          کوڈ صرف برقی سگنل ہے جو اربوں چھوٹے سرکٹس کے ذریعے بہہ رہا ہے.
      17:
        text: کمپیوٹر میں ہر قسم کی حیرت انگیز چیزیں کرنے کی صلاحیت ہوتی ہے۔ لیکن
          صرف ایک ہی چیز جو کمپیوٹر کو ہوشیار، یا مفید بناتی ہے، آپ ہی ہیں. جب آپ
          کوڈ سیکھتے ہیں تو آپ اس مسئلے کی وضاحت کرتے ہیں جسے آپ حل کرنا چاہتے ہیں،
          اور سافٹ ویئر لکھتے ہیں جو ان خیالات کو حقیقت میں بدل دیتا ہے.
    csd_concept_how_computers_work:
      1:
        text: 'ہر جگہ آپ دیکھتے ہیں، کمپیوٹر دنیا کو تبدیل کر رہے ہیں. چاہے وہ ہمارے
          ڈیسک ٹاپ پر ہوں، ہمارے گھروں میں، ہماری جیب میں، یا کہیں اور کے بارے میں.
          لیکن جب ہم میں سے اکثر اس انقلابی ٹیکنالوجی کو روزانہ استعمال کرتے ہیں،
          ہم اکثر یہ نہیں پوچھتے: “کمپیوٹر کیسے کام کرتے ہیں؟” اس سیریز میں، آپ کو
          سیکھنے کے لئے جا رہے ہیں کس طرح کمپیوٹر واقعی کام کرتے ہیں، کیا ایک کمپیوٹر
          ایک کمپیوٹر بناتا ہے کے ساتھ شروع. اس کے بعد، آپ دیکھیں گے کہ کس طرح کمپیوٹر
          کے اندر معلومات کی نمائندگی کی جاتی ہے چھوٹے بجلی کے سگنل دماغ بوگگلنگ رفتار
          پر اور دور جا رہے ہیں کا استعمال کرتے ہوئے.'
      2:
        text: اس کے بعد، آپ سیکھیں گے کہ کس طرح کمپیوٹر سرکٹس کا استعمال کرتے ہوئے
          سادہ ریاضی سے پوری مجازی دنیاؤں کو تخروپن کرنے کے لئے سب کچھ کرنا ہے. اگلا،
          آپ کو باہر زوم اور ایک کمپیوٹر کے مختلف حصوں میں نظر ڈالیں گے کہ اصل میں
          ان پٹ، پیداوار، اور یہ کہ تمام معلومات کو ذخیرہ. آخر میں، آپ کو ایک نظر
          ڈالیں گے کیا کوڈ اصل میں ہے اور کس طرح سافٹ ویئر ہارڈ ویئر کو کنٹرول کرتا
          ہے. تو چاہے آپ صرف ان آلات کے بارے میں جاننا چاہتے ہیں جو آپ ہر روز استعمال
          کرتے ہیں یا آپ مستقبل کی بدعات کو ڈیزائن کرنا چاہتے ہیں، پہلا قدم سیکھنا
          ہے کہ کمپیوٹر کیسے کام کرتے ہیں.
    csd_concept_memory_cpu_input_output:
      1:
        text: ہیلو، میرا نام میڈیسن میکسی ہے. میرے پاس لومیا نامی کمپنی ہے، اور ہم
          سمارٹ لباس اور سمارٹ نرم اچھی مصنوعات کے لئے سمارٹ کپڑے بنانے پر توجہ مرکوز
          کرتے ہیں. یہ ٹیکسٹائل کے لئے آتا ہے جب آسمان کی حد ہے.
      2:
        text: میرا نام ڈینیل اپپلسٹون ہے، اور میں اوتھرمشین کمپنی کا سی ای او ہوں.
          ہم ایک ڈیسک ٹاپ کی گھسائی مشین کی تعمیر. ایک گھسائی کرنے والی مشین گھومنے
          والی کاٹنے کا آلہ لیتا ہے اور اسے 3D اعتراض بنانے کے لیے مواد کے ذریعے حرکت
          کرتا ہے۔
      3:
        text: ہڈ کے تحت، تمام کمپیوٹر ایک ہی چار بنیادی چیزیں کرتے ہیں. وہ ان پٹ معلومات،
          معلومات کو ذخیرہ اور عمل کرتے ہیں، اور پھر، آؤٹ پٹ کی معلومات. ان چیزوں
          میں سے ہر ایک کمپیوٹر کے مختلف حصے کی طرف سے کیا جاتا ہے.
      4:
        text: ان پٹ آلات ہیں جو باہر کی دنیا سے ان پٹ لے اور بائنری معلومات میں تبدیل.
          اس معلومات کو ذخیرہ کرنے کے لئے میموری ہے. ایک مرکزی پروسیسنگ یونٹ یا سی
          پی یو ہے، جہاں تمام حسابان کیے جاتے ہیں۔ اور، آخر میں، آؤٹ پٹ آلات ہیں جو
          معلومات لیتے ہیں اور اسے جسمانی پیداوار میں تبدیل کرتے ہیں.
      5:
        text: پہلے ان پٹ کے بارے میں بات کرتے ہیں. کمپیوٹر بہت سے مختلف قسم کے ان
          پٹ لے سکتے ہیں، جیسے کمپیوٹر کی بورڈ، فون کا ٹچ پیڈ، کیمرہ، مائیکروفون یا
          GPS. لیکن یہاں تک کہ ایک کار، ایک ترماسٹیٹ، یا ڈرون پر سینسر بھی مختلف ان
          پٹ آلات ہیں.
      6:
        text: اب، کس طرح ان پٹ ایک کمپیوٹر کے ذریعے سفر کی ایک سادہ مثال کے طور پر
          نظر آتے ہیں اور پیداوار بن جاتا ہے. جب آپ اپنی کی بورڈ پر ایک کلید دبائیں
          - چلو خط “بی” کہتے ہیں. کلیدی تختہ حرف کو ایک عدد میں تبدیل کر دیتا ہے۔
          یہ تعداد بائنری، ہیں اور zeros کے طور پر بھیجا جاتا ہے، کمپیوٹر میں.
      7:
        text: اس نمبر سے شروع ہونے سے، سی پی یو کا حساب لگاتا ہے کہ کس طرح پکسل کی
          طرف سے خط “بی” پکسل کو ظاہر کرنا ہے. سی پی یو میموری سے مرحلہ وار ہدایات
          کی درخواست کرتا ہے، جو یہ بتاتا ہے کہ کس طرح خط “بی” کو اپنی طرف متوجہ کرنا
          ہے. سی پی یو ان ہدایات کو چلاتا ہے اور نتائج کو میموری میں پکسلز کے طور
          پر ذخیرہ کرتا ہے.
      8:
        text: آخر میں، اس پکسل کی معلومات سکرین پر بائنری میں بھیجا جاتا ہے. سکرین
          ایک آؤٹ پٹ آلہ ہے، جو بائنری سگنل بدلتا چھوٹے روشنی اور رنگوں میں جو آپ
          دیکھتے ہیں قضاء.
      9:
        text: یہ سب اتنی جلدی ہوتا ہے کہ یہ فوری طور پر محسوس ہوتا ہے، لیکن ہر خط
          کو ظاہر کرنے کے لئے ایک کمپیوٹر ہزاروں ہدایات چلاتا ہے، اس وقت سے شروع ہوتا
          ہے جب آپ کی انگلی کلیدی نقطہ پر دباؤ ڈالتی ہے.
      10:
        text: اس مثال میں، آؤٹ پٹ آلہ سکرین تھا، لیکن پیداوار کے بہت سے مختلف اقسام
          ہیں جو کمپیوٹر سے بائنری سگنل لے اور جسمانی دنیا میں کچھ کرتے ہیں. مثال
          کے طور پر، ایک اسپیکر آواز ادا کرے گا، اور ایک 3D پرنٹر کسی چیز کو پرنٹ
          کرے گا. آؤٹ پٹ آلات جسمانی حرکت کو بھی کنٹرول کرسکتے ہیں جیسے روبوٹک بازو،
          گاڑی کی موٹر، یا میری کمپنی بنانے والی گھسائی مشین کے کاٹنے والے آلے کی
          طرح. آدانوں اور آؤٹ پٹ کی نئی اقسام کمپیوٹرز کو مکمل طور پر نئے طریقوں سے
          دنیا کے ساتھ بات چیت کرنے دیتی ہیں. میموری اور سی پی یو کی رفتار اور سائز
          میں بہتری کی طرف سے اس کی مدد کی گئی ہے.
      11:
        text: ایک کام جتنا زیادہ پیچیدہ ہوتا ہے اور جتنی زیادہ معلومات ان پٹ یا آؤٹ
          پٹ ہوتی ہے، اتنی ہی زیادہ پروسیسنگ پاور اور میموری کمپیوٹر کی ضرورت ہوتی
          ہے۔ کسی سکرین پر ٹائپنگ حروف آسان ہو سکتے ہیں لیکن پیچیدہ 3D گرافکس کرنا
          یا ہائی ڈیفی فلم ریکارڈ کرنا، جدید کمپیوٹرز میں اکثر اس تمام معلومات پر
          عملدرآمد کرنے کے لیے ایک سے زیادہ سی پی یو ہوتے ہیں اور اسے ذخیرہ کرنے کے
          لیے میموری کی بہت سی گیگا بائٹس ہوتی ہیں۔
      12:
        text: 'کوئی بات نہیں یہ آپ کو کمپیوٹر کے ساتھ کیا کرنا چاہتے ہیں کیا ہے، ہر
          ایک کارروائی کے بارے میں ہے: جسمانی دنیا سے معلومات inputing، ذخیرہ کرنے
          اور اس کی معلومات پر عمل، اور کچھ پیداوار جسمانی دنیا میں واپس ہو رہی ہے.'
    farmer_intro:
      1:
        text: ہیلو، میں پاؤلا ہوں! ان پہیلیاں میں، آپ کو فصلیں لگانے شروع کرنے کے
          لئے اس کے میدان کو مکمل طور پر فلیٹ حاصل کرنے کے لئے ہے جو ایک کسان ہیں.
      2:
        text: تم نے اس کی گندگی کے تمام ڈھیر کو دور کرنے اور تمام سوراخ میں بھرنے
          میں مدد کرنے کے لئے ہے.
      3:
        text: نئے بلاکس کو ہٹا دیں 1 ایک ڈھیر سے گندگی کی shvelful اور میں بھرنے 1
          ایک سوراخ کرنے کے لئے گندگی کے shvelful.
      4:
        text: ڈھیر اور سوراخ مختلف سائز کے ہیں، لہذا آپ کو کسان کو بتانے کی ضرورت
          ہے کہ کتنے shvelfuls استعمال کرنے کے لئے.
    flappy_intro:
      1:
        text: ہیلو، میں کیٹی ہوں! کمپیوٹر سائنس کے بارے میں سب سے زیادہ دلچسپ چیزوں
          میں سے ایک یہ ہے کہ ایک کمپیوٹر پروگرام انٹرایکٹو ہو سکتا ہے.
      2:
        text: کسی بھی وقت کسی کلکس یا نلکوں یا ایک کمپیوٹر یا فون پر اقسام، کہ ایک
          واقعہ پیدا کرتا ہے، اور کچھ کوڈ ہے کہ ایک واقعہ اس وقت ہوتی ہے جب کیا کرنا
          ہے فیصلہ کرتا ہے.
      3:
        text: 'مثال کے طور پر، آپ کو ایک ایونٹ ہینڈلر کا کہنا ہے کہ ہو سکتا ہے “جب
          ماؤس کلک کیا جاتا ہے، ایک آواز کھیلتے ہیں” '
      4:
        text: کیا تم نے کبھی کھیل FlappyBird کے بارے میں سنا ہے؟ ایونٹ ہینڈلرز کا
          استعمال کرتے ہوئے، ہم FlappyBird کے اپنے اپنی مرضی کے مطابق ورژن پروگرام
          کرنے کے لئے سیکھنے کے لئے جا رہے ہیں!
      5:
        text: آپ لکھیں گے کوڈ گھسیٹنے اور بلاکس گر شامل ہے کہ کمپیوٹر کے لئے حکم دیتا
          ہے کی نمائندگی کرتے ہیں. ہڈ کے تحت، ان بلاکس میں سے ہر ایک کو حقیقی کوڈ
          کی طرف سے نمائندگی کی جاتی ہے.
      6:
        text: 'اگر آپ ورک اسپیس پر نظر ڈالیں تو، کچھ سبز بلاکس موجود ہیں جو آپ کے
          لئے بھرے ہوئے ہیں - یہ “ایونٹ ہینڈلرز” ہیں '
      7:
        text: اگر آپ پرندوں فلیپ کرنا چاہتے ہیں جب آپ ماؤس پر کلک کریں، آپ کو “فلیپ”
          بلاک مناسب ایونٹ ہینڈلر منسلک کی طرف سے ایسا کر سکتے ہیں، اور اب آپ کے کھیل
          میں جب بھی آپ ماؤس پر کلک کریں، پرندوں فلیپ گا.
      8:
        text: اس سرگرمی میں سے ہر ایک پہیلی میں ہم نے ورکشاپ پر سبز بلاکس کے طور پر
          واقعات کی نئی اقسام متعارف کرائیں گے، اور آپ کو ان واقعات کے جواب میں شامل
          کرنے کے لئے مناسب بلاکس فیصلہ کر سکتے ہیں.
      9:
        text: جب آپ اس طرح ایک ڈراپ نیچے تیر دیکھتے ہیں، تو اس کا مطلب یہ ہے کہ آپ
          ترتیبات کو تبدیل کرسکتے ہیں - جیسے فلاپی زمین کو مار دیتی ہے.
      10:
        text: حتمی پہیلی میں آپ کو آپ کے اپنے کھیل بنانے کے لئے اور اپنے دوستوں کے
          ساتھ اشتراک کرنے کے قابل ہو جائے گا. مزہ کرو!
    frozen_functions:
      1:
        text: ہائے، میں کرس بُش ہوں۔ میں ایک پروفیشنل باسکٹ بال پلیئر ہوں، اور میں
          نے کالج میں کوڈ کیا ہے۔
      2:
        text: کمپیوٹر سائنس کے سب سے اہم ترین کونسیپٹس میں ایک تصور یہ ہے کہ نئے کمانڈز
          کیسے ڈیفائن (وضع) کئے جائیں۔ زیادہ تر کمپیوٹر لینگویجز میں تقریباً محض 100
          الفاظ یا کمانڈز ہوتے ہیں۔ اور واقعتاً، اصل فن اور جادو ان ہی بلڈنگ بلاکس
          کو خود آپ کے اپنے وضع کئے ہوئے نئے الفاظ میں ڈھال دینا ہے۔
      3:
        text: ایک بار آپ کمپیوٹر کے بارے میں یہ جان جاتے ہیں کہ ایکشن کے لیے کمانڈز
          کو کیسے سیکوئنس میں استعمال کیا جاتا ہے، تو پھر آپ اسے بعد میں دہرانا بہت
          ہی آسان ہوتا ہے۔ جب آپ اپنے کمانڈز خود ڈیزائن کر لیتے ہیں اور اسے نام دیتے
          ہیں، تو اس عمل کو ایک فنکشن کہتے ہیں۔
      4:
        text: ہائے، میں جیمز ہوں۔ جب بلاکس سے پروگرامنگ کرنا ہو تو، آپ ایسے فنکشن
          استعمال کریں گے، اگر اس میں آپ ایک سیٹ آف ایکشنز بار بار اور کئی مرتبہ استعمال
          کرنا چاہیں۔ مثال کے طور پر ایک اسکوائر کری-ایٹ کرنے کے لیے آپنے کوڈ لکھا۔
      5:
        text: 'آپ اس کو "کری-ایٹ آ اسکوائر" کے نام سے ایک فنکشن کے طور ڈیفائن کرسکتے
          ہیں۔ '
      6:
        text: اب آپ کے پاس نیا بلاک ہے جو کہ آپ ملٹیپل مرتبہ ملٹیپل اسکوائرز بنانے
          کے لیے استعمال کرسکتے ہیں۔
      7:
        text: بہت سے سمپل شیپس بے شمار کامپلیکس پیٹرن تیار کرنے میں استمعال کئے جاسکتے
          ہیں۔ اگلے پزل میں، کچھ دیر پہلے آپ نے جو کوڈ سرکل بنانے کے لیے لکھا، وہ
          بطور ایک نیو فنکشن آپ کے پاس موجود ہے جو کہ مختلف سائزوں کے مختلف سرکلز
          بنا سکتا ہے۔ کیا آپ اس کو استعمال کرتے ہوئے، سنو میں پیچیدہ اور خوبصورت
          پیٹرینز بنانے کے لیے، ایلسا کی مدد کرسکتے ہیں؟
    frozen_intro:
      1:
        text: ہائے، میرا نام لینڈسے ہے۔ میں ماڈل، ایکٹ کرنے کے ساتھ اپنی اپپس خود
          لکھتی ہوں۔ آئیں اینا اور ایلسا کو جوائن کرنے کے لیے کوڈ کو استعمال کریں
          اورسیکھیں کہ میجک اینڈ بیوٹی آف آئس کو وہ کیسے ایکسپلور کر رہی ہیں۔
      2:
        text: آپ آئس-اسکیٹنگ کرتے ہوۓ سنوفلیکس اور پیٹرنز کری-ایٹ کریں گے اور ونٹر
          ونڈرلینڈ بھی جو بعد میں آپ اپنے دوستوں کے ساتھ شیئر بھی کرسکیں گے!
      3:
        text: اگلے آوور میں، آپ ہاؤ-ٹو-کوڈ کی بیسکس سیکھنے جا رہے ہیں۔ ٹریڈیشنل پروگرامنگ
          عام طور پر ٹیکسٹ (الفاظ) میں ہوتی ہے، لیکن ہم Blockly استعمال کریں گے، جس
          میں ویژول بلاکس استعمال میں آتے ہیں جن کو آپ پروگرامز لکھنے کے لیے ڈریگ
          اور ڈراپ کرسکتے ہیں۔ اور اصل میں آپ کوڈ کری-ایٹ کر رہے ہیں۔ یونیورسٹی لیول
          کے اسٹوڈنٹ بھی اسی طرح سے بیسکس سیکھتے ہیں۔
      4:
        text: ایک پروگرام دراصل انسٹرکشنز کا ایک سیٹ ہوتا ہے جو کہ کمپیوٹر کو بتاتا
          ہے کہ کیا کرنا ہے۔ آئیں ایک کوڈ تیار کرتے ہیں، یا ایک پروگرام، جس میں ایلسا
          کی مدد سے ایک سمپل لائن کری-ایٹ کرنا ہے۔ بعد میں ہم اسے مزید کامپلیکس پیٹرنز
          بنانے کے لئے استعمال کریں گے ۔
      5:
        text: آپ کی اسکرین تین بڑے حصوں میں اسپلٹ ہوئی ہے۔ لیفٹ پر، آئس سرفیس ہے جہاں
          آپ اپنا پروگرام رَن کریں گے۔ ہر لیول کی مخصوص انسٹرکشن، سرفیس کے بالکل نیچے
          لکھی ہوئی موجود ہیں۔
      6:
        text: یہ مڈل ایریا دراصل ٹول باکس ہے، اور ان میں سے ہر ایک بلاکس ایک منفرد
          ایکشن کا حامل ہے جو کہ ایلسا اور ایننا انجام دے سکتی ہیں۔
      7:
        text: رائٹ سائڈ پر وائٹ سپیس کو ورک اسپیس کہتے ہیں، اور یہ وہ جگہ ہے جہاں
          ہم اپنا پروگرام تیار کریں گے۔ آئس سرفیس میں چلنے کرنے کے لیے، آپ "سامنے
          چلیں" بلاک کو استعمال کریں گے۔
      8:
        text: یہاں، یہ "سامنے چلیں" بلاک کہتا ہے، "سامنے چلیں 100 پکسلز"۔ جب ہم "رَن"
          پریس کریں گے، تو کیا ہوگا؟ اسکرین پر ایلسا ایک مخصوص حد آگے بڑھتی ہے، اصل
          میں صرف 100 پکسلز! پکسل دراصل آپ کی کمپیوٹر اسکرین کے بہت چھوٹے اسکوائرز
          ہوتے ہیں۔
      9:
        text: اس پزل میں ہمارے پاس جو بلاک ہیں یہ بتا رہے ہیں کہ "دائیں طرف مڑیں 90
          ڈگریز"۔ اور جب ہم اس "دائیں طرف مڑیں" کو استعمال کرتے ہیں تو یہ ایلسا کو
          ایک سرٹین اماؤنٹ (متعین قدر) پر ٹرن کر دیتے ہیں۔ اب آپ جس طرح اور جہاں تک
          چاہیں ایلسا کو ٹرن کرسکتے ہیں۔ یہ اینگل ایلسا کے پاتھ سے آگے تک میژرڈ (ناپ)
          سکتا ہے۔ لہذا، یہ ایک 90 ڈگری ٹرن ہے۔ اور یہ ایک 120 ڈگری ٹرن ہے۔
      10:
        text: یاد رکھیں، آپ پکسلز کے نمبرز اور ڈگریز کو، ایروز کے ساتھ ان پر کلکنگ
          کرتے ہوئے تبدیل کرسکتے ہیں۔
    frozen_loops:
      1:
        text: ہائے، میں پاؤلا ہوں! دہرانے کے عمل میں کمپیوٹر بہت کارآمد ہوتے ہیں۔
          آپ 10، 20، یا 100 تک گنتی کرسکتے ہیں۔ لیکن کمپیوٹر ایک بلیئن یا ایک ٹریلئن
          تک بھی گنتی کرسکتا ہے۔ وہ یہ کرتے ہوئے بیزار نہیں ہوتا اور اسے اس کام میں
          صرف چند سیکنڈز لگیں گے۔ چاہے یہ کاؤنٹنگ کرنا ہو، یا ڈرائنگ، یا کچھ بھی –
          کمپیوٹر ایسے کاموں کو سینکڑوں بلکہ یہاں تک کہ بلیئن مرتبہ بھی دہرا سکتا
          ہے۔
      2:
        text: پروگرامنگ کی زبان میں، ہم اسے ایک لوپ کہتے ہیں۔ ایک لوپ دراصل بار بار
          دہرانے کے عمل کا کوڈ ہوتا ہے۔ اگلے پزل کے لیے، آپ کا گول یہ ہے کہ اینا کے
          ساتھ "دہرائیں" بلاک استمعال کر کے ایک اسکوائر کری-ایٹ کرنا ہے۔
      3:
        text: آپ کوڈ کا کوئی بھی بلاک جو آپ "رپیٹ" بلاک کے اندر رکھیں گے وہ اتنی ہی
          مرتبہ ترتیب کے مطابق رپیٹ ہوگا جتنی بار آپ چاہیں گے۔
      4:
        text: ایک اسکوائر ڈرا کرنے کے لیے، آپ "موو فاروڈ" اور "ٹرن رائٹ" بلاک 4 مرتبہ
          استعمال کر سکتے ہیں۔ لیکن اس سے آسان طریقہ یہ ہوگا کہ آپ کمپیوٹر کو بتائیں
          کہ وہ ایک بار "موو فارورڈ" اور "ٹرن رائٹ بائی 90 ڈگریز" کرے، اور پھر اس
          سے کہیں کہ وہ 4 مرتبہ تک اس کام کو دہرائے۔ اس کو یہ کہنے کے لیے، آپ کو "موو
          فارورڈ" اور "ٹرن رائٹ" بلاک کو "رپیٹ" بلاک کے اندر لگانا ہوگا۔
      5:
        text: یا رکھیں، آپ کسی بھی عمل کو دہرانے کے لیے "رپیٹ" بلاک میں دہرانے کی
          تعداد تبدیل کرسکتے ہیں، اور یہ وہی کچھ اتنی بار دہرائے گا جتنی بار بلاک
          کے اندر دہرانے کا نمبر دیا ہوگا۔
    function:
      1:
        text: ہیلو، میں برنا ہوں، انسٹاگرام میں ایک انجینئر. ایک تقریب کوڈ کی بعض
          لائنوں ہے کہ آپ کو بار بار استعمال کرنا چاہتے ہیں، تو بجائے اس کوڈ کو لکھنے
          کی بجائے ہر بار، آپ کو صرف ایک بلاک استعمال کر سکتے ہیں.
      2:
        text: ہم افعال کی وضاحت کرنے کا طریقہ سیکھنے کے لئے جا رہے ہیں. فنکشن کی تعریفیں
          کونے میں ایک ستارہ ہوتا ہے۔ فنکشن کا نام اوپر کی سطر پر لکھا جاتا ہے۔
      3:
        text: تعریف کے اندر جانے والے بلاکس ہمیں بتائیں کہ یہ کیا کرتا ہے. تو اس فنکشن
          تعریف “بھریں 5" کہا جاتا ہے اور یہ ایک “دوبارہ” بلاک اور ایک “بھرنے” بلاک
          سے بنا ہے.
      4:
        text: تعریف کام کی جگہ پر بیٹھتی ہے، لیکن ہمارے کسان فنکشن کو اس وقت تک نہیں
          چلائیں گے جب تک کہ ہم اپنے “بھریں 5" فنکشن بلاک کو فنکشن زمرے سے باہر نہ
          نکال لیں.
      5:
        text: Let's put the "fun" back in "FUNction!"
    gumball_events:
      1:
        text: اب ہم کچھ کے بارے میں جاننے کے لئے جا رہے ہیں تمام کھیل پروگرامرز روزانہ
          استعمال کرتے ہیں. انہیں واقعات کہا جاتا ہے۔ ایک ایونٹ آپ کے پروگرام بتاتا
          ہے کے لئے سننے کے لئے جب کچھ ہوتا ہے اور پھر جب یہ ہوتا ہے، کھیل ایک کارروائی
          انجام دیتا ہے.
      2:
        text: واقعات کی کچھ مثالیں ماؤس کلک یا اوپر یا نیچے تیر کی کلید یا اسکرین
          پر ایک ٹیپ کے لئے سن رہی ہیں.
      3:
        text: یہاں، ہم اداکار کو کچھ کہنے جا رہے ہیں جب کھلاڑی اس پر کلک کرتا ہے.
          ہم جب کلک کردہ بلاک کا استعمال کریں گے اور “کہتے ہیں” بلاک کو اس سے منسلک
          کریں گے. جب کھلاڑی کلک کرتا ہے تو، اس بلاک سے منسلک تمام بلاکس کو انجام
          دیا جائے گا.
      4:
        text: تیر بلاکس جب بھی ہیں. آپ کو ان کے لئے اقدام بلاکس لنک، تو آپ کو تیر
          چابیاں کے ساتھ، نیچے، بائیں، دائیں، اپنے اداکاروں کو منتقل کرنے کے لئے شروع
          کر سکتے ہیں. تھوڑا سا آپ کا کھیل زیادہ انٹرایکٹو ہو رہی ہے.
    gumball_intro:
      1:
        text: اگر آپ اپنا کھیل بنانا چاہتے ہیں، تو یہ واقعی آسان ہے. آپ کو صرف پروگرامنگ
          کے چند مبادیات کی ضرورت ہے اور آپ کو ایک کھیل کھیلنے شروع کر سکتے ہیں جو
          آپ نے پیدا کیا ہے.
      2:
        text: کیا آپ کے پاس پسندیدہ ویڈیو گیم ہے؟ ہم PlayLab میں صرف اس طرح کھیل پیدا
          کرنے کی طرف ایک قدم اٹھانے کے لئے جا رہے ہیں. اچھا کھیل ایک کہانی ہے اور
          ہر کہانی اداکار ہے. ایسے اداکار جو ایک دوسرے کے ساتھ بات چیت، حرکت اور تعامل
          جیسے کام کرتے ہیں۔ ہو سکتا ہے کہ کھیل کے قوانین کی بنیاد پر بھی سکور پوائنٹس.
          آج، ہم سیکھیں گے کہ یہ سب چیزیں ایک ایک کرکے تفریح اداکاروں کے ساتھ کیسے
          کریں اور پھر شروع سے ایک کھیل کی تعمیر کریں جو فون پر مشترکہ اور کھیلا جا
          سکتا ہے.
      3:
        text: آج، ہم سیکھیں گے کہ یہ سب چیزیں ایک ایک کرکے تفریح اداکاروں کے ساتھ
          کیسے کریں اور پھر شروع سے ایک کھیل کی تعمیر کریں جو فون پر مشترکہ اور کھیلا
          جا سکتا ہے.
      4:
        text: آپ کی سکرین تین اہم حصوں میں تقسیم کیا جاتا ہے. بائیں جانب کھیل کی جگہ
          ہے جہاں آپ کا پروگرام چلایا جائے گا. ہر سطح کے لیے ہدایات ذیل میں لکھی گئی
          ہیں۔
      5:
        text: یہ درمیانی علاقہ آلے کا خانہ ہے اور ان بلاکس میں سے ہر ایک کوڈ کا ایک
          ٹکڑا ہے۔
      6:
        text: حق پر سفید جگہ کام کی جگہ کہا جاتا ہے اور یہ ہے جہاں ہم اپنے پروگرام
          کی تعمیر کریں گے.
      7:
        text: شروع کرنے کے لئے، آپ کو اپنے بلاکس کو سنتری سے منسلک کرنے کی ضرورت ہوگی
          جب بلاک چلائیں. آپ ان کو باہر گھسیٹنے کی طرف سے ایک دوسرے کے ساتھ ایک سے
          زیادہ بلاکس لنک کر سکتے ہیں آپ کو پیلے رنگ کی لائن کو دیکھ کر اور پھر وہ
          ایک دوسرے کے ساتھ تصویر کریں گے.
      8:
        text: اس پہلی پہیلی میں، ہم اداکاروں کو “کہنا” بلاک کو جب رن بلاک اور آپ کے
          پیغام میں ٹائپ کرنے سے منسلک کر کے کچھ کہہ دیں گے. ایک بار جب آپ اپنے بلاکس
          کو جگہ میں رکھتے ہیں، تو آپ کو پروگرام کیا دیکھنے کے لئے رن بٹن کو مارا.
      9:
        text: شروع ہو جاؤ اور آخر کی طرف سے آپ کو بات چیت، سکور پوائنٹس، چیزیں پھینک،
          اور ایک دوسرے کو غائب کر سکتے ہیں کہ کھلاڑیوں کے تمام قسم کے ساتھ آپ کے
          اپنے کھیل پیدا کرنے کے قابل ہو جائے گا. یہ سب آپ پر منحصر ہے!
    gumball_repeat:
      1:
        text: کیا آپ تصور کر سکتے ہیں اگر آپ کو ہمیشہ اور ہمیشہ کے لئے کچھ دوبارہ
          کرنا پڑا؟ امید ہے کہ آپ کو کبھی نہیں کرنا پڑے کیونکہ کمپیوٹر چیزوں کو دوبارہ
          کرنے میں واقعی اچھے ہیں.
      2:
        text: یہ دوبارہ ہمیشہ کے لئے بلاک ہے. اس بلاک کے اندر کچھ بھی کھیل میں ہمیشہ
          کے لئے ہو جائے گا. اگر ہم ایک اداکار چاہتے ہیں کہ کھلاڑی کے بغیر کچھ بار
          بار کچھ کرنا ہو تو، ہم ان بلاکس کو ہمیشہ کے لئے دہرانے کے اندر اندر ڈال
          دیں گے.
      3:
        text: یہ اگلے پہیلی میں، ہمارا مقصد اداکار مسلسل ایک کام کرنے میں مدد کرنے
          کے لئے ہے. سیکھنا کہ کس طرح دوبارہ حکم دیتا ہے کام آپ کو ایک ٹن وقت کے بعد
          بچائے گا جب آپ اپنے کھیل کی تعمیر کرتے ہیں.
    hello_world_congrats:
      1:
        image: notes/hoc_hello_world_2021_freeplay_01.jpg
        text: مبارک ہو! آپ نے کمپیوٹر سائنس کی بنیادی باتیں سیکھی ہیں. اب آپ سپرائٹ
          لیب استعمال کر سکتے ہیں جو کچھ بھی آپ چاہتے ہیں پیدا کرنے کے لئے.
      2:
        image: notes/hoc_hello_world_2021_freeplay_02.jpg
        text: آپ کو ملبوسات کا کہنا ہے کہ ایک بٹن نظر آئے گا. جب آپ اس پر کلک کریں،
          آپ کو ایک لائبریری سے نئے سپرائٹ ملبوسات منتخب کر سکتے ہیں.
      3:
        image: notes/hoc_hello_world_2021_freeplay_03.jpg
        text: تم نے بھی اپنے آپ کو اپنی طرف متوجہ کر سکتے ہیں! آپ کو پسند ایک کاسٹیوم
          ہے ایک بار، آپ کے کوڈ پر واپس جاؤ.
      4:
        image: notes/hoc_hello_world_2021_freeplay_04.jpg
        text: اب، آپ سپرائٹ کے لئے اس کاسٹیوم کو منتخب کریں.
      5:
        image: notes/hoc_hello_world_2021_freeplay_05.jpg
        text: اگر آپ ٹول باکس میں نظر آتے ہیں، تو آپ کو کچھ نئے برانڈ کے بلاکس مل
          جائیں گے جو آپ نے پہلے نہیں دیکھا ہے. مثال کے طور پر، آپ کو آپ کے سپرائٹ
          مزہ اور دلچسپ طریقوں میں منتقل حاصل کرنے کے لئے کی اجازت دے گا کہ رویے بلاکس
          کے بہت سے ہیں.
      6:
        image: notes/hoc_hello_world_2021_freeplay_06.jpg
        text: آپ استعمال کر سکتے ہیں “جب چھوتا ہے” ایونٹ بلاک کو کنٹرول کرنے کے لئے
          کیا ہوتا ہے جب دو sprites ایک دوسرے میں ٹکرانا.
      7:
        image: notes/hoc_hello_world_2021_freeplay_07.jpg
        text: "“اثر تخلیق کریں” بلاک کو تلاش کریں. یہ طاقتور بلاک sprites کی ایک پوری
          گروپ بنانے کے لئے استعمال کیا جا سکتا ہے کہ پھٹ، یا پاپ، یا کمانڈ پر بارش."
      8:
        image: notes/hoc_hello_world_2021_freeplay_08.jpg
        text: ارد گرد نظر آتے ہیں، اور ان نئے بلاکس اور خصوصیات کے ساتھ استعمال کرنے
          کی کوشش کریں. ٹیوٹوریل کے اختتام پر، اپنے دوستوں کے ساتھ اپنی تخلیق کے لنک
          کا اشتراک کرنے کے لئے “اشتراک کریں” کے بٹن پر کلک کریں.
      9:
        image: notes/hoc_hello_world_2021_freeplay_09.jpg
        text: آپ تمام طاقتور مہارت آپ سپرائٹ لیب میں اطلاقات، کھیل اور دیگر نئے پروگراموں
          کی ترقی شروع کرنے کی ضرورت ہے! اچھے کے لئے آپ کی نئی طاقتوں کا استعمال کریں.
          آپ کاغذ پر کچھ پیدا کر رہے تھے، یا ایک دوست کے ساتھ بات کر رہے تھے تو صرف
          آپ کی طرح، قسم اور احترام رہو.
      10:
        image: notes/hoc_hello_world_2021_freeplay_10.jpg
        text: تو تم کیا پیدا کرو گے؟ آپ اپنے بارے میں ایک کہانی بتا سکتے ہیں... یا
          اپنے خاص کرداروں کے ساتھ ایک بنا سکتے ہیں. شاید آپ اپنے اگلے اسکول کے منصوبے
          کے لئے اپنے نئے کمپیوٹر سائنس کی مہارت بھی استعمال کریں گے! آپ کی تخیل بڑھاتے
          اور مزہ ہے!
    hello_world_events:
      1:
        image: notes/hoc_hello_world_2021_events_01.jpg
        text: اب جب کہ آپ نے سپریٹ لیب استعمال کرنے کے لئے کس طرح سیکھا ہے، آپ کو
          بنانے کے لئے چاہتے ہیں جا رہے ہیں آپ کے پروگرام رد عمل کا اظہار جب کسی کو
          اس کے ساتھ ادا کرتا ہے. ایسا کرنے کے لئے، آپ کو واقعات استعمال کرنے کے لئے
          جا رہے ہیں. ایک ایونٹ کچھ کے لئے سننے کے لئے آپ کے پروگرام بتاتا ہے، اور
          پھر فورا رد عمل کا اظہار.
      2:
        image: notes/hoc_hello_world_2021_events_02.jpg
        text: واقعات کی کچھ مثالیں ماؤس کلک، ایک تیر بٹن، یا اسکرین پر ایک ٹیپ کے
          لئے سن رہے ہیں. “جب کلک کیا” جیسے بلاکس کو ایونٹ بلاکس کہا جاتا ہے. ایونٹ
          بلاک سے جڑا کوڈ اس وقت چلتا ہے جب مناسب کارروائی کا پتہ چلا ہو۔
      3:
        image: notes/hoc_hello_world_2021_events_03.jpg
        text: مثال کے طور پر، اگر میں اس “کا کہنا ہے کہ” بلاک منسلک “جب کلک کیا” ایونٹ،
          میری سپرائٹ کچھ کہیں گے جب صارف کلکس یا اس پر نلکے. واقعہ بلاکس آپ کے مرکزی
          پروگرام میں تصویر نہیں ہے کہ نوٹس. اس کے بجائے، وہ اپنے چھوٹے پروگرام بناتے
          ہیں.
      4:
        image: notes/hoc_hello_world_2021_events_04.jpg
        text: آپ کو ایک سے زیادہ sprites ہے تو، آپ کو ایک انٹرایکٹو کہانی بتانے کے
          لئے اضافی واقعات استعمال کر سکتے ہیں.
      5:
        image: notes/hoc_hello_world_2021_events_05.jpg
        text: آپ جلد ہی سپریٹ لیب میں بھی زیادہ کرنے کا طریقہ سیکھنے کی جائے گی، بشمول
          ایک سپرائٹ کے سائز یا ظہور کو تبدیل کرنے، مختلف پس منظر کی ترتیب، آواز کھیل،
          اور زیادہ. کیا آپ اپنے sprites کرنا چاہتے ہیں جب کسی کو ان کے ساتھ بات چیت؟
          یہ آپ پر منحصر ہے!
    hello_world_intro:
      1:
        image: notes/hoc_hello_world_2021_introduction_01.jpg
        text: ہیلو! میرا نام ایرن ہے، اور میں یہاں Code.org میں ایک سافٹ ویئر انجینئر
          ہوں. میں بہت حوصلہ افزائی کر رہا ہوں، کیونکہ مجھے ٹیوٹوریل پر کام کرنا پڑا
          ہے جو آپ کرنے والے ہیں! ہم اسے “ہیلو ورلڈ” کہتے ہیں۔
      2:
        image: notes/hoc_hello_world_2021_introduction_02.jpg
        text: "“ہیلو ورلڈ” کمپیوٹر سائنس میں ایک مشہور جملہ ہے اور اس جملے کو ظاہر
          کرنا کمپیوٹر سائنس سیکھنے میں ایک عام پہلا قدم ہے۔ اگلے گھنٹے کے دوران،
          آپ کو کمپیوٹر سائنس کے ساتھ شروع کرنے کے لئے جا رہے ہیں سپرائٹ لیب میں پروگرامنگ
          کی طرف سے."
      3:
        image: notes/hoc_hello_world_2021_introduction_03.jpg
        text: سپرائٹ لیب ایک ایسا آلہ ہے جسے آپ تصوراتی اور تفریح منصوبوں کی تعمیر
          کے لئے استعمال کرسکتے ہیں. آپ کو آپ کی سکرین تین اہم حصوں میں تقسیم کیا
          جاتا ہے کہ دیکھیں گے. بائیں طرف کھیل کی جگہ ہے. یہ ہے جہاں آپ sprites دکھائے
          گا.
      4:
        image: notes/hoc_hello_world_2021_introduction_04.jpg
        text: Sprites آپ کو ایک کہانی یا کھیل میں ایک کردار یا شے کی طرح، کے ساتھ
          بات چیت کر سکتے ہیں کہ سکرین پر اشیاء ہیں.
      5:
        image: notes/hoc_hello_world_2021_introduction_05.jpg
        text: یہ درمیانی علاقہ ٹول باکس ہے۔ آپ سبق کے ذریعے جانے کے طور پر کوڈ کے
          نئے بلاکس اس خلا میں دستیاب ہو جائے گا.
      6:
        image: notes/hoc_hello_world_2021_introduction_06.jpg
        text: دائیں جانب کی جگہ کام کی جگہ ہے. آپ کو ٹول باکس سے باہر بلاکس ھیںچیں
          کر سکتے ہیں، اور کام کی جگہ میں آپ کے پروگرام کی تعمیر کے لئے.
      7:
        image: notes/hoc_hello_world_2021_introduction_07.jpg
        text: ہر سطح کے لئے ہدایات سکرین کے سب سے اوپر پر یہاں ہو جائے گا. اگر آپ
          اشارہ چاہتے ہیں تو، روشنی بلب پر کلک کریں.
      8:
        image: notes/hoc_hello_world_2021_introduction_08.jpg
        text: شروع کرنے کے لئے، ایک سپرائٹ بناتے ہیں! یہ بلاک آپ کو آپ سپرائٹ ایک
          کپڑے اور ایک مقام دے کی اجازت دیتا ہے. کاسٹیوم وہ لفظ ہے جسے ہم سپرائٹ کی
          ظاہری شکل بیان کرنے کے لیے استعمال کرتے ہیں۔ سپرائٹ کے مقام کو تبدیل کرنے
          کے لئے، آپ کو مقام بلاک میں پن آئکن پر کلک کر سکتے ہیں، اور پھر جہاں آپ
          اسے جانا چاہتے ہیں پر کلک کریں.
      9:
        image: notes/hoc_hello_world_2021_introduction_09.jpg
        text: اب سپرائٹ خود متعارف کرانے ہے! سپرائٹ کچھ کہنا بنانے کے لئے، اس “کہو”
          بلاک کا استعمال کرتے ہیں، اور یہ آپ کے پروگرام میں شامل کریں. اس بات کو
          یقینی بنائیں کہ آپ کے “کہو” بلاک میں منتخب کردہ کاسٹیوم آپ کے سپرائٹ میں
          کاسٹیوم سے ملتا ہے.
      10:
        image: notes/hoc_hello_world_2021_introduction_10.jpg
        text: جب آپ “چلائیں” دبائیں، سپرائٹ کہیں گے جو کچھ بھی متن آپ اسے بتا. اب
          یہ سپرائٹ لیب کے ساتھ شروع کرنے کا وقت ہے، اور آپ کی تخیل آپ کی طرف جاتا
          ہے جہاں دیکھیں!
    hoc-dance-ai-warmup:
      2:
        text: ہیلو! میرا نام میرل کوٹب ہے اور میں ایک رقاصہ، سافٹ ویئر ڈویلپر اور
          ILuminate کا خالق ہوں.
      3:
        text: کمپیوٹر سائنس متعدد طریقوں سے تخلیقی صلاحیتوں سے متعلق ہے۔ بے حد، واقعی.
          میرا مطلب ہے، ایک بار جب آپ کو سافٹ ویئر لکھنے کی صلاحیت ہے تو آپ خیالات
          کو کسی بھی چیز میں ڈال سکتے ہیں. میں اسے ہلکے سوٹ کے ساتھ کرتا ہوں. آپ کو
          سافٹ ویئر لکھنے کے لئے اوزار ہے ایک بار آپ کو کیا کر سکتے ہیں اتنا ہے، اور
          امکانات واقعی لامتناہی ہیں.
      5:
        text: آپ کو مختلف رقاص کو منتخب کرنے کے لئے کوڈ کے بلاکس کا استعمال کرتے ہوئے
          کیا جائے گا، ان کے رقص کی چالوں کو تبدیل کریں، انہیں موسیقی کا جواب دیں،
          اور انہیں انٹرایکٹو بنائیں.
    hoc_dance_congrats:
      1:
        text: 'کوڈ کے گھنٹے | رقص پارٹی: پارٹی پر!'
      2:
        text: مبارک ہو! آپ نے کمپیوٹر سائنس کی بنیادی باتیں سیکھی ہیں. اب آپ اپنے
          دوستوں کے ساتھ اشتراک کرنے کے لئے آپ کے اپنے ڈیزائن کی ایک رقص پارٹی بنانے
          کے لئے ان بلاکس کا استعمال کر سکتے ہیں.
      3:
        text: اگر آپ آلے کے باکس میں نظر آتے ہیں تو، آپ کو کچھ برانڈ کے نئے بلاکس
          مل جائیں گے جو آپ نے پہلے نہیں دیکھا ہے. مثال کے طور پر، آپ اسکرین پر مختلف
          طریقوں سے رقاصوں کا بندوبست کرنے کے لئے ترتیب بلاک استعمال کرسکتے ہیں.
      4:
        text: ارد گرد نظر آتے ہیں اور ان نئے بلاکس اور خصوصیات کے ساتھ استعمال کرنے
          کی کوشش کریں. کیا آپ اپنے پسندیدہ گانا کو احتیاط سے کوریوگرافڈ رقص بنائیں
          گے؟
      5:
        text: یا اپنے دوستوں کے ساتھ رقص آف؟
      6:
        text: یا مکمل طور پر کچھ اور؟
      7:
        text: ٹیوٹوریل کے اختتام پر آپ اپنے دوستوں کے ساتھ اپنی تخلیق کے لئے ایک لنک
          کا اشتراک کرسکتے ہیں. آپ کی تخیل بڑھاتے ہیں اور صرف مزہ ہے!
    hoc_dance_congrats_2019:
      1:
        text: 'کوڈ کے گھنٹے | رقص پارٹی: پارٹی پر!'
      2:
        text: مبارک ہو! آپ نے کمپیوٹر سائنس کی بنیادی باتیں سیکھی ہیں. اب آپ اپنے
          دوستوں کے ساتھ اشتراک کرنے کے لئے آپ کے اپنے ڈیزائن کی ایک رقص پارٹی بنانے
          کے لئے ان بلاکس کا استعمال کر سکتے ہیں.
      3:
        text: اگر آپ آلے کے باکس میں نظر آتے ہیں تو، آپ کو کچھ برانڈ کے نئے بلاکس
          مل جائیں گے جو آپ نے پہلے نہیں دیکھا ہے. مثال کے طور پر، آپ اسکرین پر مختلف
          طریقوں سے رقاصوں کا بندوبست کرنے کے لئے ترتیب بلاک استعمال کرسکتے ہیں.
      4:
        text: ارد گرد نظر آتے ہیں اور ان نئے بلاکس اور خصوصیات کے ساتھ استعمال کرنے
          کی کوشش کریں. کیا آپ اپنے پسندیدہ گانا کو احتیاط سے کوریوگرافڈ رقص بنائیں
          گے؟
      5:
        text: یا اپنے دوستوں کے ساتھ رقص آف؟
      6:
        text: یا مکمل طور پر کچھ اور؟
      7:
        text: ٹیوٹوریل کے اختتام پر آپ اپنے دوستوں کے ساتھ اپنی تخلیق کے لئے ایک لنک
          کا اشتراک کرسکتے ہیں. آپ کی تخیل بڑھاتے ہیں اور صرف مزہ ہے!
    hoc_dance_events:
      1:
        text: 'کوڈ کا گھنٹہ | رقص پارٹی: واقعات'
      2:
        text: میں تلون سیاہ ہوں. میں ایک گلوکار، نغمہ نگار، اور تفریح کرنے والا ہوں۔
          مجھے لگتا ہے کہ کمپیوٹر سائنس سیکھنے کے لئے بہت اہم ہے کیونکہ کمپیوٹر سائنس
          مستقبل ہے، اور مجھے لگتا ہے کہ لوگوں کے لئے یہ ضروری ہے کہ وہ ٹیکنالوجی
          کے کنٹرول میں رہیں جو لفظی طور پر ان کی زندگی کو کنٹرول کر رہا ہے.
      3:
        text: موسیقی کے ساتھ صرف صحیح وقت پر مختلف رقص کی چالوں کو بنانے کے لئے، آپ
          کو واقعات کہا جاتا ہے کچھ استعمال کر سکتے ہیں. ایک ایونٹ آپ کے پروگرام بتاتا
          ہے کچھ کے لئے سننے کے لئے ہو اور پھر فوری رد عمل کا اظہار.
      4:
        text: واقعات کی کچھ مثالیں ماؤس کلک، ایک تیر بٹن، یا اسکرین پر ایک ٹیپ کے
          لئے سن رہے ہیں. اب ہم جو ایونٹ استعمال کرنے جا رہے ہیں وہ گیت میں تبدیلی
          کے لئے سنیں گے. تبدیلی ایک نیا رقص کرنے کے لئے آپ کے رقاصہ کو متحرک کرے
          گا.
      5:
        text: پروفیشنل رقاص گیت کی دھڑکن گن کر اپنی کوریوگرافی کی مشق کرتے ہیں۔
      6:
        text: موسیقی میں، ایک پیمانہ دھڑکن کی ایک مخصوص تعداد کی طرف اشارہ کرتا ہے.
          سب سے زیادہ مقبول گیتوں میں، ایک پیمانہ چار دھڑک طویل ہے.
      7:
        text: اپنے رقاصوں کو ڈھیلے جانے کے لۓ، آپ کو سبز ایونٹ بلاک کی ضرورت ہوگی.
          اس ایونٹ بلاک کا کہنا ہے کہ، “4 اقدامات کے بعد”.
      8:
        text: آپ کو ایک جامنی رنگ “ہمیشہ کے لئے کرتے ہیں” بلاک ھیںچیں تو، آپ کو ایسا
          کرنے کے لئے آپ کے رقاصہ کے لئے ایک رقص منتخب کر سکتے ہیں. کیونکہ یہ “4 اقدامات
          کے بعد” ایونٹ بلاک کے تحت ہے، آپ کا رقاصہ ان کے رقص شروع کرنے سے پہلے گیت
          کے چار اقدامات کا انتظار کرے گا.
      9:
        text: ڈسپلے ایریا کے اوپری حصے میں پیمائش کے کاؤنٹر پر نظر رکھیں۔
      10:
        text: دیکھو اور رقص کوڈ کو متحرک کرے گا کہ ایونٹ کے لئے سن. اور حق کیو پر،
          ہمارے رقاصہ جا شروع ہوتا ہے.
    hoc_dance_events_2019:
      1:
        text: 'کوڈ کا گھنٹہ | رقص پارٹی: واقعات'
      2:
        text: میرا نام ایرن ہے، اور میں یہاں Code.org میں ایک سافٹ ویئر انجینئر ہوں،
          اور میں نے ڈانس پارٹی کی تعمیر میں مدد کی.
      3:
        text: موسیقی کے ساتھ صرف صحیح وقت پر مختلف رقص کی چالوں کو بنانے کے لئے، آپ
          کو واقعات کہا جاتا ہے کچھ استعمال کر سکتے ہیں. ایک ایونٹ آپ کے پروگرام کو
          بتاتا ہے کہ کچھ ہونے کے لئے “سن” اور پھر فورا رد عمل کا اظہار.
      4:
        text: واقعات کی کچھ مثالیں ماؤس کلک، ایک تیر بٹن، یا اسکرین پر ایک ٹیپ کے
          لئے سن رہے ہیں.
      5:
        text: یہاں ہم آپ کو سکرین پر تیر کے بٹن دبائیں جب ایک اقدام انجام دینے کے
          لئے ایک رقاصہ پروگرام کے لئے جا رہے ہیں، یا آپ کی بورڈ پر چابیاں.
      6:
        text: ہم “تیر اپ جب” ایونٹ بلاک استعمال کرتے ہیں اور ایک سے رابطہ قائم کر
          سکتے ہیں “ایک بار کرتے ہیں” اس کو بلاک. جب کوئی اپ تیر کلید دباتا ہے تو،
          “جب اپ تیر” بلاک کے ساتھ منسلک کوڈ چلایا جاتا ہے. آپ کونسی رقص اقدام کا
          انتخاب کریں گے؟
      7:
        text: اس بات کو یقینی بنائیں کہ آپ کا انتخاب ڈانسر کی قسم آپ کو “سیٹ اپ” بلاک
          کے اندر پیدا کردہ رقاصوں میں سے ایک سے ملتا ہے، یا آپ کچھ بھی نہیں دیکھ
          سکتے ہیں.
      8:
        text: بالآخر، آپ اپنے رقاصوں کو ہر کلید کے ساتھ مختلف چالوں کو انجام دینے
          کے لئے اس طرح کے مزید واقعات تخلیق کرسکتے ہیں. اسے آزمائیں، اور کوڈ کی چند
          لائنوں کے ساتھ آپ اپنے انٹرایکٹو رقص بنا سکتے ہیں.
    hoc_dance_measures_2019:
      1:
        text: 'کوڈ کا گھنٹہ | رقص پارٹی: اقدامات'
      2:
        text: میں تلون سیاہ ہوں. میں ایک گلوکار، نغمہ نگار، اور تفریح کرنے والا ہوں۔
          مجھے لگتا ہے کہ کمپیوٹر سائنس سیکھنے کے لئے بہت اہم ہے کیونکہ کمپیوٹر سائنس
          مستقبل ہے، اور مجھے لگتا ہے کہ لوگوں کے لئے یہ ضروری ہے کہ وہ ٹیکنالوجی
          کے کنٹرول میں رہیں جو لفظی طور پر ان کی زندگی کو کنٹرول کر رہا ہے.
      3:
        text: اب ہم جو ایونٹ استعمال کرنے جا رہے ہیں وہ گیت میں تبدیلی کے لئے سنیں
          گے. یہ تبدیلی آپ کو ایک نیا رقص کرنے کے رقاصہ کو متحرک کرے گا.
      4:
        text: پروفیشنل رقاص گیت کی دھڑکن گن کر اپنی کوریوگرافی کی مشق کرتے ہیں۔ موسیقی
          میں، ایک پیمانہ دھڑکن کی ایک مخصوص تعداد کی طرف اشارہ کرتا ہے. سب سے زیادہ
          مقبول گیتوں میں، ایک پیمانہ چار دھڑک طویل ہے.
      5:
        text: اپنے رقاصوں کو ڈھیلے جانے کے لۓ، آپ کو سبز ایونٹ بلاک کی ضرورت ہوگی.
          اس ایونٹ بلاک کا کہنا ہے کہ، “4 اقدامات کے بعد”.
      6:
        text: آپ کو ایک جامنی رنگ “ہمیشہ کے لئے کرتے ہیں” بلاک ھیںچیں تو، آپ کو ایسا
          کرنے کے لئے آپ کے رقاصہ کے لئے ایک رقص منتخب کر سکتے ہیں. کیونکہ یہ “4 اقدامات
          کے بعد” ایونٹ بلاک کے تحت ہے، آپ کا رقاصہ ان کے رقص شروع کرنے سے پہلے گیت
          کے چار اقدامات کا انتظار کرے گا.
      7:
        text: ڈسپلے ایریا کے اوپری حصے میں پیمائش کے کاؤنٹر پر نظر رکھیں۔
      8:
        text: دیکھو اور رقص کوڈ کو متحرک کرے گا کہ ایونٹ کے لئے سن. اور حق کیو پر،
          ہمارے رقاصہ جا شروع ہوتا ہے.
    hoc_dance_properties:
      1:
        text: 'کوڈ کا گھنٹہ | رقص پارٹی: پراپرٹیز'
      2:
        text: میرا نام ماریا ہے میں یونیورسٹی آف واشنگٹن میں جونیئر ہوں اور میں ایمیزون
          فیوچر انجینئر ہوں۔
      3:
        text: میں کمپیوٹر سائنس سے محبت کرتا ہوں کیونکہ یہ مسئلہ کو حل کرنے اور تنقیدی
          سوچ کو شامل کرتا ہے اور کام کے گھنٹوں کو کسی چیز میں ڈالنے کے بعد آپ واقعی
          ٹھنڈا اور اس سے فائدہ مند کچھ حاصل کرسکتے ہیں.
      4:
        text: اب تک، آپ کو کچھ مختلف قسم کے رقاصوں کے ساتھ کھیلنے کا موقع ملا ہے اور
          آپ نے انہیں مختلف قسم کے رقص چالوں کو کرنے کے لئے پروگرام کیا ہے. لیکن یہ
          اقدامات واقعی کیسے کام کرتے ہیں؟
      5:
        text: رقص کا ہر اقدام تصاویر کے ایک سلسلے سے بنا ہوتا ہے جسے فریم کہتے ہیں۔
          ہر فریم اس سے پہلے ایک سے تھوڑا مختلف ہے. جب آپ کا پروگرام چلتا ہے تو، کمپیوٹر
          ایک فریم کے بعد ایک فریم دکھاتا ہے. انہیں اتنی تیزی سے دکھایا جاتا ہے کہ
          ایسا لگتا ہے جیسے رقاصہ حرکت کر رہا ہے۔ یہ تمام حرکت پذیری کے پیچھے راز
          ہے.
      6:
        text: نہ صرف آپ اپنے رقاصہ کی چالوں کو تبدیل کر سکتے ہیں، آپ رقاصہ کی خصوصیات
          بھی تبدیل کر سکتے ہیں. پراپرٹیز اسکرین پر رقاصہ کی پوزیشن، رقاصہ کا سائز
          اور رقاصہ کا رنگ جیسی چیزوں کو بیان کرتے ہیں۔
      7:
        text: رقاصہ کی خصوصیات کو تبدیل کرنے کے لئے آپ کو ایک سیٹ بلاک استعمال کریں
          گے. آئیے اپنے رقاصوں کو چھوٹا دکھانے کے لیے ایک سیٹ بلاک استعمال کریں۔ سب
          سے پہلے، سیٹ بلاک کو اپنے پروگرام میں گھسیٹیں. اس کے بعد، رقاصہ کو منتخب
          کریں جسے آپ تبدیل کرنا چاہتے ہیں اور اس سائز میں ٹائپ کریں جو اسکرین پر
          ظاہر ہوگا.
      8:
        text: مکمل سائز 100 ہے. آپ کو ایک کم تعداد کا انتخاب کرتے ہیں، کہ رقاصہ چھوٹے
          گا. رقاصہ جتنا چھوٹا ہوتا ہے اتنا ہی دور نظر آتا ہے۔ بیک اپ رقاصوں کو بنانے
          کا یہ ایک بہترین طریقہ ہے.
      9:
        text: سیٹ بلاک کا استعمال کرتے ہوئے، آپ رقاصہ کے طول و عرض، گردش، پوزیشن اور
          رنگ کو بھی تبدیل کرسکتے ہیں. ان خصوصیات کے ساتھ ارد گرد کھیلنے سے آپ ہر
          قسم کی تبدیلیاں کر سکتے ہیں اور ان کو گیت کے مختلف حصوں سے منسلک کرسکتے
          ہیں.
      10:
        text: یاد رکھیں، آپ صرف پہلے ہی موجود ہے کہ ایک رقاصہ کی خصوصیات مقرر کر سکتے
          ہیں. اس بات کو یقینی بنائیں کہ آپ کا سیٹ بلاک “نیا رقاصہ بنائیں” بلاک کے
          بعد آتا ہے. تجربے تخلیقی ہو، اور مزہ کرنے کے لئے آزاد محسوس کرتے ہیں.
    hoc_dance_properties_2019:
      1:
        text: 'کوڈ کا گھنٹہ | رقص پارٹی: پراپرٹیز'
      2:
        text: میرا نام ماریا ہے میں یونیورسٹی آف واشنگٹن میں جونیئر ہوں اور میں ایمیزون
          فیوچر انجینئر ہوں۔
      3:
        text: میں کمپیوٹر سائنس سے محبت کرتا ہوں کیونکہ یہ مسئلہ کو حل کرنے اور تنقیدی
          سوچ کو شامل کرتا ہے اور کام کے گھنٹوں کو کسی چیز میں ڈالنے کے بعد آپ واقعی
          ٹھنڈا اور اس سے فائدہ مند کچھ حاصل کرسکتے ہیں.
      4:
        text: اب تک آپ کو کچھ مختلف قسم کے رقاصوں کو کھیلنے کا موقع ملا ہے اور آپ
          نے انہیں مختلف قسم کے رقص چالوں کو کرنے کے لئے پروگرام کیا ہے. لیکن یہ اقدامات
          واقعی کیسے کام کرتے ہیں؟
      5:
        text: رقص کا ہر اقدام تصاویر کے ایک سلسلے سے بنا ہوتا ہے جسے فریم کہتے ہیں۔
          ہر فریم اس سے پہلے ایک سے تھوڑا مختلف ہے. جب آپ کا پروگرام چلتا ہے تو، کمپیوٹر
          ایک فریم کے بعد ایک فریم دکھاتا ہے. انہیں اتنی تیزی سے دکھایا جاتا ہے کہ
          ایسا لگتا ہے جیسے رقاصہ حرکت کر رہا ہے۔ یہ تمام حرکت پذیری کے پیچھے راز
          ہے.
      6:
        text: نہ صرف آپ اپنے رقاصہ کی چالوں کو تبدیل کر سکتے ہیں، آپ رقاصہ کی خصوصیات
          بھی تبدیل کر سکتے ہیں. پراپرٹیز اسکرین پر رقاصہ کی پوزیشن، رقاصہ کا سائز
          اور رقاصہ کا رنگ جیسی چیزوں کو بیان کرتے ہیں۔
      7:
        text: رقاصہ کی خصوصیات کو تبدیل کرنے کے لئے آپ کو ایک سیٹ بلاک استعمال کریں
          گے. آئیے اپنے رقاصوں کو چھوٹا دکھانے کے لیے ایک سیٹ بلاک استعمال کریں۔ سب
          سے پہلے، سیٹ بلاک کو اپنے پروگرام میں گھسیٹیں.
      8:
        text: اس کے بعد، ایک رقاصہ منتخب کریں جسے آپ تبدیل کرنا چاہتے ہیں، اور اس
          سائز میں ٹائپ کریں جو وہ اسکرین پر دکھائے جائیں گے. مکمل سائز 100 ہے. آپ
          کو ایک کم تعداد کا انتخاب کرتے ہیں، کہ رقاصہ چھوٹا کر دے گا. رقاصہ جتنا
          چھوٹا ہوتا ہے اتنا ہی دور نظر آتا ہے۔
      9:
        text: سیٹ بلاک کا استعمال کرتے ہوئے، آپ رقاصہ کے طول و عرض، گردش، پوزیشن اور
          رنگ کو بھی تبدیل کرسکتے ہیں. ان خصوصیات کے ساتھ ارد گرد کھیلنے سے آپ ہر
          قسم کی تبدیلیاں کر سکتے ہیں اور ان کو گیت کے مختلف حصوں سے منسلک کرسکتے
          ہیں.
      10:
        text: یاد رکھیں، آپ صرف پہلے ہی موجود ہے کہ ایک رقاصہ کی خصوصیات مقرر کر سکتے
          ہیں. اس بات کو یقینی بنائیں کہ آپ کا سیٹ بلاک “نیا رقاصہ بنائیں” بلاک کے
          بعد آتا ہے. تجربے تخلیقی ہو، اور مزہ کرنے کے لئے آزاد محسوس کرتے ہیں!
    hoc_dance_warmup:
      1:
        text: 'کوڈ کا گھنٹہ | رقص پارٹی: وارم اپ'
      2:
        text: ہیلو! میرا نام میرل کوٹب ہے اور میں ایک رقاصہ، سافٹ ویئر ڈویلپر اور
          ILuminate کا خالق ہوں.
      3:
        text: لہذا، کمپیوٹر سائنس متعدد طریقوں سے تخلیقی صلاحیتوں سے متعلق ہے. بے
          حد، واقعی. میرا مطلب ہے، ایک بار جب آپ کو سافٹ ویئر لکھنے کی صلاحیت ہے تو
          آپ خیالات کو کسی بھی چیز میں ڈال سکتے ہیں. میں اسے ہلکے سوٹ کے ساتھ کرتا
          ہوں. آپ کو سافٹ ویئر لکھنے کے لئے اوزار ہے ایک بار آپ کو کیا کر سکتے ہیں
          اتنا ہے، اور امکانات واقعی لامتناہی ہیں.
      4:
        text: اگلے گھنٹے کے دوران، آپ کو آپ کے اپنے رقص پارٹی پروگرامنگ کی طرف سے
          کمپیوٹر سائنس کے ساتھ شروع کرنے کے لئے جا رہے ہیں! ہم نے آپ کے ساتھ کھیلنے
          کے لئے کچھ ہٹ موسیقی اور عظیم رقاص کی ایک ٹیم کو جمع کیا ہے.
      5:
        text: آپ کو مختلف رقاص کو منتخب کرنے کے لئے کوڈ کے بلاکس کا استعمال کرتے ہوئے
          کیا جائے گا، ان کے رقص کی چالوں کو تبدیل کریں، انہیں موسیقی کا جواب دیں،
          اور انہیں انٹرایکٹو بنائیں.
      6:
        text: آپ کو آپ کی سکرین تین اہم حصوں میں تقسیم کیا جاتا ہے کہ دیکھیں گے. بائیں
          طرف کھیل کی جگہ ہے. یہ ہے جہاں آپ کے رقاصوں کو دکھایا جائے گا.
      7:
        text: یہ درمیانی علاقہ ٹول باکس ہے۔ آپ سبق کے ذریعے جانے کے طور پر کوڈ کے
          نئے بلاکس اس خلا میں دستیاب ہو جائے گا.
      8:
        text: دائیں جانب کی جگہ کام کی جگہ ہے. آپ اپنے پروگرام کی تعمیر کے لئے ٹول
          باکس سے باہر اور ورک اسپیس میں بلاکس کو ھیںچیں کر سکتے ہیں.
      9:
        text: ہر سطح کے لئے ہدایات سکرین کے سب سے اوپر پر یہاں ہو جائے گا. اگر آپ
          کو اشارہ کی ضرورت ہے تو، صرف روشنی بلب پر کلک کریں.
      10:
        text: شروع کرنے کے لئے، چلو اس سرخ بلاک کے ساتھ ایک نیا رقاصہ بناتے ہیں. سب
          سے پہلے، ٹول باکس سے باہر ھیںچیں اور اس سنتری “سیٹ اپ” بلاک کے تحت اسے سنیپ.
          یہ رقاصہ ایک بلی ہے اور اس کا نام “my_first_dancer” ہے۔ آپ یہاں کلک کر کے
          جو کچھ بھی آپ چاہتے ہیں نام تبدیل کر سکتے ہیں.
      11:
        text: آپ یہ بھی تبدیل کر سکتے ہیں کہ رقاصہ اس کے ساتھ آپ کے ڈرامے کی جگہ میں
          کہاں ظاہر ہوتا ہے.
      12:
        text: کھیل کی جگہ کے اوپر موسیقی کو منتخب کرنے کے لئے ایک مینو ہے. تو آپ کے
          پسندیدہ تلاش مزہ ہے سے منتخب کرنے کے لئے گانے، نغمے کی ایک ٹن ہیں. کھیل
          کی جگہ کے تحت رن بٹن ہے. جب آپ رن پریس کرتے ہیں تو، آپ اپنے پروگرام کے رقاصوں
          کو کھیل کی جگہ میں دکھائی دیتے ہیں اور موسیقی ادا کرے گی.
      13:
        text: اپنے آپ کو آزمائیں! اور اگر آپ پھنس محسوس کر رہے ہیں، تو یہ ٹھیک ہے!
          بس اٹھ جاؤ اور منتقل ہو جاؤ، اور آپ کو یہ معلوم کرنے سے پہلے، آپ کو آپ کی
          اپنی رقص پارٹی بنا دیا ہے گے. تو، تم کیا پیدا کرو گے؟
    hoc_dance_warmup_2019:
      1:
        text: 'کوڈ کا گھنٹہ | رقص پارٹی: وارم اپ'
      2:
        text: ہیلو! میرا نام میرل کوٹب ہے اور میں ایک رقاصہ، سافٹ ویئر ڈویلپر اور
          ILuminate کا خالق ہوں.
      3:
        text: کمپیوٹر سائنس متعدد طریقوں سے تخلیقی صلاحیتوں سے متعلق ہے۔ بے حد، واقعی.
          میرا مطلب ہے، ایک بار جب آپ کو سافٹ ویئر لکھنے کی صلاحیت ہے تو آپ خیالات
          کو کسی بھی چیز میں ڈال سکتے ہیں. میں اسے ہلکے سوٹ کے ساتھ کرتا ہوں. آپ کو
          سافٹ ویئر لکھنے کے لئے اوزار ہے ایک بار آپ کو کیا کر سکتے ہیں اتنا ہے، اور
          امکانات واقعی لامتناہی ہیں.
      4:
        text: اگلے گھنٹے کے دوران، آپ کو آپ کے اپنے رقص پارٹی پروگرامنگ کی طرف سے
          کمپیوٹر سائنس کے ساتھ شروع کرنے کے لئے جا رہے ہیں! ہم نے آپ کے ساتھ کھیلنے
          کے لئے کچھ ہٹ موسیقی اور عظیم رقاص کی ایک ٹیم کو جمع کیا ہے.
      5:
        text: آپ کو مختلف رقاص کو منتخب کرنے کے لئے کوڈ کے بلاکس کا استعمال کرتے ہوئے
          کیا جائے گا، ان کے رقص کی چالوں کو تبدیل کریں، انہیں موسیقی کا جواب دیں،
          اور انہیں انٹرایکٹو بنائیں.
      6:
        text: آپ کو آپ کی سکرین تین اہم حصوں میں تقسیم کیا جاتا ہے کہ دیکھیں گے. بائیں
          طرف کھیل کی جگہ ہے. یہ ہے جہاں آپ کے رقاصوں کو دکھایا جائے گا.
      7:
        text: درمیانی علاقہ ٹول باکس ہے۔ آپ سبق کے ذریعے جانے کے طور پر کوڈ کے نئے
          بلاکس اس خلا میں دستیاب ہو جائے گا.
      8:
        text: دائیں جانب کی جگہ کام کی جگہ ہے. آپ اپنے پروگرام کی تعمیر کے لئے ٹول
          باکس سے باہر اور ورک اسپیس میں بلاکس کو ھیںچیں کر سکتے ہیں.
      9:
        text: ہر سطح کے لئے ہدایات سکرین کے سب سے اوپر پر یہاں ہو جائے گا. اگر آپ
          کو اشارہ کی ضرورت ہے تو، صرف روشنی بلب پر کلک کریں.
      10:
        text: شروع کرنے کے لئے، چلو اس سرخ بلاک کے ساتھ ایک نیا رقاصہ بناتے ہیں. سب
          سے پہلے، ٹول باکس سے باہر ھیںچیں اور اس سنتری “سیٹ اپ” بلاک کے تحت اسے سنیپ.
          یہ رقاصہ ایک بلی ہے۔
      11:
        text: آپ یہ بھی تبدیل کر سکتے ہیں کہ رقاصہ اس کے ساتھ آپ کے ڈرامے کی جگہ میں
          کہاں ظاہر ہوتا ہے.
      12:
        text: کھیل کی جگہ کے اوپر موسیقی کو منتخب کرنے کے لئے ایک مینو ہے. تو آپ کے
          پسندیدہ تلاش مزہ ہے سے منتخب کرنے کے لئے گانے، نغمے کی ایک ٹن ہیں. کھیل
          کی جگہ کے تحت رن بٹن ہے. جب آپ رن پریس کرتے ہیں تو، آپ اپنے پروگرام کے رقاصوں
          کو کھیل کی جگہ میں دکھائی دیتے ہیں اور موسیقی ادا کرے گی.
      13:
        text: اپنے آپ کو آزمائیں! اور اگر آپ پھنس محسوس کر رہے ہیں، تو یہ ٹھیک ہے،
          صرف اٹھو اور آگے بڑھ جاؤ! اور اس سے پہلے کہ آپ یہ جان لیں، آپ اپنی رقص پارٹی
          بنا چکے ہوں گے. تو، تم کیا پیدا کرو گے؟
    hoc_wrapup:
      1:
        text: مبارک ہو! آپ کو حل کردہ آخری پہیلی کے ساتھ، آپ کو صرف کوڈ لکھا ہے جو
          کسی بھی روبوٹ کو بتا سکتا ہے کہ یہ کس طرح کسی بھی لمبائی کی غیر شاخ بھولبلییا
          یا سرنگ کے ذریعہ راستہ تلاش کرنا ہے، چاہے یہ ایک زومبی، ایک پرندہ، ایک مریخ
          روور، یا اس سے بھی خود ڈرائیونگ کار ہے.
      2:
        text: آپ نے استعمال کیا بنیادی تصورات ہر پروگرام یا اے پی پی کے دل میں ہیں
          جو آپ کبھی کوشش کریں گے. ہم بار بار loops کے بارے میں سیکھا، بیانات تک دہرائیں،
          اگر بیانات، اور اگر بیانات.
      3:
        text: اگر آپ اپنے کوڈ کے پہلے گھنٹے کو پسند کرتے ہیں تو، کمپیوٹر سائنس میں
          اپنی تعلیم جاری رکھنے کے لئے code.org پر جائیں! ایک بار جب آپ ہمارے 20 گھنٹے
          کا کورس مکمل کرتے ہیں تو، آپ پروگرامنگ کی بنیادی باتیں حاصل کریں گے، اور
          فون ایپس، روبوٹ ہدایات، کھیل لکھنے کے بارے میں سیکھنے شروع کر سکتے ہیں،
          آپ اسے نام دیتے ہیں.
      4:
        text: 'ٹیکنالوجی ہمارے ہر کام کو بدل رہی ہے اور اس سے کوئی فرق نہیں پڑتا کہ
          آپ نوجوان ہیں یا بوڑھے ہیں: پروگرامنگ مزہ ہے، یہ تخلیقی ہے، اور کوئی بھی
          سیکھ سکتا ہے!'
    iceage_events:
      1:
        text: اب ہم کچھ کے بارے میں جاننے کے لئے جا رہے ہیں تمام کھیل پروگرامرز روزانہ
          استعمال کرتے ہیں. انہیں واقعات کہا جاتا ہے۔ ایک ایونٹ آپ کے پروگرام بتاتا
          ہے کے لئے سننے کے لئے جب کچھ ہوتا ہے اور پھر جب یہ ہوتا ہے، کھیل ایک کارروائی
          انجام دیتا ہے.
      2:
        text: واقعات کی کچھ مثالیں ماؤس کلک یا اوپر یا نیچے تیر کی کلید یا اسکرین
          پر ایک ٹیپ کے لئے سن رہی ہیں.
      3:
        text: یہاں، ہم اداکار کو کچھ کہنے جا رہے ہیں جب کھلاڑی اس پر کلک کرتا ہے.
          ہم جب کلک کردہ بلاک کا استعمال کریں گے اور “کہتے ہیں” بلاک کو اس سے منسلک
          کریں گے. جب کھلاڑی کلک کرتا ہے تو، اس بلاک سے منسلک تمام بلاکس کو انجام
          دیا جائے گا.
      4:
        text: تیر بلاکس جب بھی ہیں. آپ کو ان کے لئے اقدام بلاکس لنک، تو آپ کو تیر
          چابیاں کے ساتھ، نیچے، بائیں، دائیں، اپنے اداکاروں کو منتقل کرنے کے لئے شروع
          کر سکتے ہیں. تھوڑا سا آپ کا کھیل زیادہ انٹرایکٹو ہو رہی ہے.
    iceage_intro:
      1:
        text: اگر آپ اپنا کھیل بنانا چاہتے ہیں، تو یہ واقعی آسان ہے. آپ کو صرف پروگرامنگ
          کے چند مبادیات کی ضرورت ہے اور آپ کو ایک کھیل کھیلنے شروع کر سکتے ہیں جو
          آپ نے پیدا کیا ہے.
      2:
        text: کیا آپ کے پاس پسندیدہ ویڈیو گیم ہے؟ ہم PlayLab میں صرف اس طرح کھیل پیدا
          کرنے کی طرف ایک قدم اٹھانے کے لئے جا رہے ہیں. اچھا کھیل ایک کہانی ہے اور
          ہر کہانی اداکار ہے. ایسے اداکار جو ایک دوسرے کے ساتھ بات چیت، حرکت اور تعامل
          جیسے کام کرتے ہیں۔ ہو سکتا ہے کہ کھیل کے قوانین کی بنیاد پر بھی سکور پوائنٹس.
          آج، ہم سیکھیں گے کہ یہ سب چیزیں ایک ایک کرکے تفریح اداکاروں کے ساتھ کیسے
          کریں اور پھر شروع سے ایک کھیل کی تعمیر کریں جو فون پر مشترکہ اور کھیلا جا
          سکتا ہے.
      3:
        text: آج، ہم سیکھیں گے کہ یہ سب چیزیں ایک ایک کرکے تفریح اداکاروں کے ساتھ
          کیسے کریں اور پھر شروع سے ایک کھیل کی تعمیر کریں جو فون پر مشترکہ اور کھیلا
          جا سکتا ہے.
      4:
        text: آپ کی سکرین تین اہم حصوں میں تقسیم کیا جاتا ہے. بائیں جانب کھیل کی جگہ
          ہے جہاں آپ کا پروگرام چلایا جائے گا. ہر سطح کے لیے ہدایات ذیل میں لکھی گئی
          ہیں۔
      5:
        text: یہ درمیانی علاقہ آلے کا خانہ ہے اور ان بلاکس میں سے ہر ایک کوڈ کا ایک
          ٹکڑا ہے۔
      6:
        text: حق پر سفید جگہ کام کی جگہ کہا جاتا ہے اور یہ ہے جہاں ہم اپنے پروگرام
          کی تعمیر کریں گے.
      7:
        text: شروع کرنے کے لئے، آپ کو اپنے بلاکس کو سنتری سے منسلک کرنے کی ضرورت ہوگی
          جب بلاک چلائیں. آپ ان کو باہر گھسیٹنے کی طرف سے ایک دوسرے کے ساتھ ایک سے
          زیادہ بلاکس لنک کر سکتے ہیں آپ کو پیلے رنگ کی لائن کو دیکھ کر اور پھر وہ
          ایک دوسرے کے ساتھ تصویر کریں گے.
      8:
        text: اس پہلی پہیلی میں، ہم اداکاروں کو “کہنا” بلاک کو جب رن بلاک اور آپ کے
          پیغام میں ٹائپ کرنے سے منسلک کر کے کچھ کہہ دیں گے. ایک بار جب آپ اپنے بلاکس
          کو جگہ میں رکھتے ہیں، تو آپ کو پروگرام کیا دیکھنے کے لئے رن بٹن کو مارا.
      9:
        text: شروع ہو جاؤ اور آخر کی طرف سے آپ کو بات چیت، سکور پوائنٹس، چیزیں پھینک،
          اور ایک دوسرے کو غائب کر سکتے ہیں کہ کھلاڑیوں کے تمام قسم کے ساتھ آپ کے
          اپنے کھیل پیدا کرنے کے قابل ہو جائے گا. یہ سب آپ پر منحصر ہے!
    iceage_repeat:
      1:
        text: کیا آپ تصور کر سکتے ہیں اگر آپ کو ہمیشہ اور ہمیشہ کے لئے کچھ دوبارہ
          کرنا پڑا؟ امید ہے کہ آپ کو کبھی نہیں کرنا پڑے کیونکہ کمپیوٹر چیزوں کو دوبارہ
          کرنے میں واقعی اچھے ہیں.
      2:
        text: یہ دوبارہ ہمیشہ کے لئے بلاک ہے. اس بلاک کے اندر کچھ بھی کھیل میں ہمیشہ
          کے لئے ہو جائے گا. اگر ہم ایک اداکار چاہتے ہیں کہ کھلاڑی کے بغیر کچھ بار
          بار کچھ کرنا ہو تو، ہم ان بلاکس کو ہمیشہ کے لئے دہرانے کے اندر اندر ڈال
          دیں گے.
      3:
        text: یہ اگلے پہیلی میں، ہمارا مقصد اداکار مسلسل ایک کام کرنے میں مدد کرنے
          کے لئے ہے. سیکھنا کہ کس طرح دوبارہ حکم دیتا ہے کام آپ کو ایک ٹن وقت کے بعد
          بچائے گا جب آپ اپنے کھیل کی تعمیر کرتے ہیں.
    if:
      1:
        text: 'ہیلو، میں بل ہوں! آئیے ایک نیا بنیادی تصور سیکھتے ہیں: “اگر” بیانات.
          اس طرح کمپیوٹر فیصلے کرتے ہیں.'
      2:
        text: آپ “اگر” بیانات خود روزانہ استعمال کرتے ہیں. ہر صبح باہر جانے سے پہلے،
          آپ کہتے ہیں کہ اگر باہر بارش ہو رہی ہے تو مجھے اپنی جیکٹ پہننے کی ضرورت
          ہے.
      3:
        text: ہم زومبی کو چیک کرنے کے لئے بتا سکتے ہیں اگر بائیں طرف کا راستہ ہے،
          اور اگر وہ بائیں جانب راستہ ڈھونڈتا ہے، تو ہم اسے اس سمت میں تبدیل کرسکتے
          ہیں.
      4:
        text: اس کے لئے کوڈ لکھنے کے لئے، ہمارے “اگر” بلاک کو باہر ھیںچیں اور اس کے
          اندر ایک “بائیں باری” بلاک ڈال دیا.
      5:
        text: اب، اگر ہم اس کے اوپر ایک “آگے بڑھیں” بلاک اور ہر چیز کے ارد گرد ایک
          “دوبارہ” بلاک ڈالیں، ہر بار زومبی چلتا ہے، تو وہ چیک کرے گا کہ بائیں طرف
          کوئی راستہ ہے اور باری ہے یا نہیں. ہر مرحلے پر ایک موڑ کی جانچ پڑتال کرنے
          کے لئے، “دوبارہ” کمانڈ اہم ہے.
      6:
        text: اگر بیانات کمپیوٹر سائنس میں واقعی اہم ہیں. میں نے لکھا سب سے پہلے پروگراموں
          میں سے ایک TIC-دوس-پاؤں کھیل تھا, اور ایک بیان ہے کہ اگر دوسرے شخص کے بارے
          میں جیتنے کے لئے ہے کہا کہ اگر ایک بیان تھا, ان کو جیتنے کی اجازت دیتا ہے
          کہ جگہ بلاک.
      7:
        text: "“اگر” بلاک کا استعمال کرتے ہوئے مزہ کرو!"
    if_else:
      1:
        text: ہیلو، میرا نام سیلونی ہے۔ میں صحت اور طب میں مسائل کو حل کرنے میں مدد
          کے لئے کمپیوٹر سائنس کا استعمال کرتا ہوں. آئیے “اگر اور” بلاک کے بارے میں
          سیکھیں. یہ “اگر” بلاک کی طرح لگتا ہے، لیکن آخر میں اس کا ایک اضافی حصہ ہے
          جو “اور” کہتا ہے.
      2:
        text: اگر میں اس جگہ میں “آگے بڑھیں” بلاک رکھتا ہوں تو یہ کہتا ہے کہ “کرتے
          ہیں” اور ایک “بائیں باری” بلاک جہاں یہ کہتا ہے کہ “اور” اس کا مطلب یہ ہے
          کہ زومبی 2 اختیارات کے درمیان انتخاب کرے گا. اگر آگے ایک راستہ ہے تو، زومبی
          آگے بڑھے گا، اور دوسری صورت میں (آگے کوئی راستہ نہیں ہے)، زومبی بائیں باری
          ہوگی.
      3:
        text: بس “اگر” بلاک کی طرح، ہم “اگر اور” بلاکس کو “دوبارہ” بلاکس کے اندر ڈال
          سکتے ہیں تاکہ زومبی آگے بڑھ رہے اور “اگر اور” بلاک کہیں تبدیل کرنے کے لئے
          ہے تو جانچ پڑتال جاری رکھے گا.
      4:
        text: اب، وہ تعلق رکھتے ہیں جہاں ان لوگوں zombies حاصل!
    if_else_scrat:
      1:
        text: اگر کوئی بیان دو چیزوں کے درمیان فیصلہ ہوتا ہے۔ چلو دیکھتے ہیں کہ ہم
          کس طرح ہمارے دوست کے ساتھ ایک اگر اور بیان استعمال کر سکتے ہیں گلہری Scrat.
      2:
        text: یہ بلاک “if” بلاک جیسا ہی لگتا ہے، لیکن نیچے ایک اضافی حصہ ہے جو “اور”
          کہتا ہے. اگر میں ایک “آگے بڑھیں” بلاک رکھتا ہوں جہاں یہ کہتا ہے کہ “کرتے
          ہیں” اور ایک “بائیں باری” بلاک جہاں یہ کہتا ہے “اور”، اس کا مطلب ہے کہ اگر
          آگے بڑھنے کا راستہ ہے تو گلہری آگے بڑھے گی. اگر آگے کوئی راستہ نہیں ہے تو
          سکریٹ بائیں جانب مڑ جائے گا۔
      3:
        text: یہ فیصلہ کر رہا ہے اور اس فیصلے کی بنیاد پر دو اقدامات میں سے ایک کر
          رہا ہے۔ اور صرف “اگر” بلاکس کی طرح، آپ “دہرائیں” بلاکس کے اندر “اگر اور”
          بلاکس ڈال سکتے ہیں.
      4:
        text: اب کی گلہری کہ acorn حاصل Scrat مدد کرتے ہیں!
    infinity_playlab_events:
      1:
        text: اب ہم کچھ کے بارے میں جاننے کے لئے جا رہے ہیں کہ تمام کھیل پروگرامرز
          روزانہ استعمال کرتے ہیں. انہیں واقعات کہا جاتا ہے۔ ایک واقعہ آپ کے پروگرام
          بتاتا ہے جب کچھ ہوتا ہے کے لئے سننے کے لئے. اور پھر جب یہ ہوتا ہے، تو یہ
          ایک عمل انجام دیتا ہے. واقعات کی کچھ مثالیں ماؤس کلک، ایک تیر بٹن، یا اسکرین
          پر ایک ٹیپ کے لئے سن رہے ہیں.
      2:
        text: یہاں، ہم Baymax ہیرو کو چھو اور کھلاڑی اپ/نیچے تیر چابیاں یا اپ/نیچے
          بٹن کا استعمال کرتا ہے جب Rapunzel چھو کرنے کے لئے نیچے منتقل کرنے کے لئے
          منتقل کرنے کے لئے جا رہے ہیں. ہم جب اپ تیر بلاک کا استعمال کریں اور اس کے
          لئے اقدام اداکار اپ بلاک منسلک کریں گے، لہذا جب کھلاڑی اپ تیر کلید پریس
          کرتا ہے، “جب تیر اپ” بلاک چلایا جاتا ہے سے منسلک سب کچھ. ہم Baymax کو نیچے
          منتقل کرنے کے لئے بھی یہی کام کریں گے. قدم بہ قدم آپ کا کھیل زیادہ انٹرایکٹو
          ہو رہا ہے.
    infinity_playlab_intro:
      1:
        text: تو آپ کس گریڈ میں ہیں؟ سیکنڈ. دسویں گریڈ. پہلی جماعت. میں آٹھویں جماعت
          میں تھا جب میں نے پروگرام سیکھا. جب میں چھٹی جماعت میں تھا تو مجھے اپنا
          پہلا کمپیوٹر ملا تھا۔ کیا مجھے حوصلہ افزائی ہو جاتا ہے لوگوں کے مسائل کو
          حل کرنے کے قابل کیا جا رہا ہے. آپ اپنے آپ کا اظہار کر سکتے ہیں، آپ کو ایک
          خیال سے چیزوں کی تعمیر کر سکتے ہیں.
      2:
        text: کمپیوٹر سائنس کالج کے طلبہ اور پیشہ ور افراد اگلے بیس یا تیس سال تک
          بہت سی باتوں کی بنیاد رکھتے ہیں۔ مجھے پروگرامنگ پسند ہے کیونکہ مجھے لوگوں
          کی مدد کرنا پسند ہے. مجھے لوگوں کی زندگیوں کو آسان بنانے والا ہے کہ کچھ
          تعمیر کرنے کا موقع ملتا ہے. مجھے لگتا ہے کہ یہ ایک سپر پاور کے قریب ترین
          چیز ہے. شروع کرنا سب سے اہم حصہ ہے. میں اپنے آپ کو ابتدائی ہوں اور میں چاہتا
          ہوں کہ آپ میرے ساتھ سیکھیں.
      3:
        text: میں جان ویچی ہوں، میں پوپ کیپ گیمز کے شریک بانیوں میں سے ایک ہوں. ہم
          پودوں بمقابلہ زومبی، Bezeweeld، اور Peggle کی طرح کھیل بناتے ہیں. کھیلوں
          کے بارے میں بہت کچھ نہیں ہے کہ آپ کا کوڈ کتنا کامل ہے، یہ آپ کا فن کتنا
          کامل نہیں ہے، اس کے بارے میں یہ محسوس ہوتا ہے کہ یہ کس طرح محسوس ہوتا ہے
          اور یہ کتنا مزہ ہے. آپ صرف اس کی کوشش کر کے اس احساس کو حاصل کر سکتے ہیں،
          ایسا کرنے سے، سیکھنے اور اپنانے اور کھیل بنانے کی اپنی مہارت کو تکرار کر
          کے.
      4:
        text: کیا آپ کے پاس پسندیدہ ویڈیو گیم ہے؟ ٹھیک ہے، ہم کھیلیں لیب کا استعمال
          کرتے ہوئے اس طرح کھیل بنانے کی طرف ایک قدم اٹھانے جا رہے ہیں. اچھا کھیل
          ایک کہانی ہے اور ہر کہانی اداکار ہے. اداکار ایک دوسرے کے ساتھ بات چیت، حرکت
          اور بات چیت جیسے کام کرتے ہیں۔ ہو سکتا ہے کہ کھیل کے قوانین کی بنیاد پر
          بھی سکور پوائنٹس. آج ہم اینا، یلسا، ہیرو، Baymax، اور Rapunzel کی طرح ڈزنی
          کے حروف کے ساتھ، ان سب چیزوں کو ایک کر کے، ایک کرنے کے لئے کس طرح سیکھ جائے
          گا. ہم شروع سے ایک کھیل تعمیر کریں گے کہ اشتراک کیا جا سکتا ہے اور ایک فون
          پر ادا کیا.
      5:
        text: آپ کی سکرین تین اہم حصوں میں تقسیم کیا جاتا ہے. بائیں جانب کھیل کی جگہ
          ہے، جہاں آپ کا پروگرام چل جائے گا. ہر سطح کے لیے ہدایات ذیل میں لکھی گئی
          ہیں۔ یہ درمیانی علاقے ٹول باکس ہے، اور ان بلاکس میں سے ہر ایک کے کوڈ کا
          ایک ٹکڑا ہے. حق پر سفید جگہ کام کی جگہ کہا جاتا ہے، اور یہ ہے جہاں ہم اپنے
          پروگرام کی تعمیر کریں گے.
      6:
        text: شروع کرنے کے لئے، آپ کو اپنے بلاکس کو سنتری “جب چلائیں” بلاک سے منسلک
          کرنے کی ضرورت ہوگی. آپ ان کو باہر گھسیٹنے کی طرف سے ایک دوسرے کے ساتھ ایک
          سے زیادہ بلاکس لنک کر سکتے ہیں آپ کو پیلے رنگ کا خاکہ دیکھ، اور پھر وہ ایک
          دوسرے کے ساتھ تصویر کریں گے. اس پہلی پہیلی میں ہیرو اداکار 1 ہے اور بایمیکس
          اداکار 2 ہے۔ ہم گھسیٹنے کی طرف سے Baymax کو حاصل کرنے کے لئے Hiro منتقل
          کرنے کے لئے کی ضرورت ہے “حق منتقل” بلاک باہر بلاک اور “جب چلائیں” بلاک کرنے
          کے لئے اس سے منسلک. ایک بار جب آپ اپنے بلاکس کو جگہ میں رکھتے ہیں تو، آپ
          کو پروگرام کیا ہے دیکھنے کے لئے “چلائیں” بٹن کو مارا.
      7:
        text: شروع ہو جاؤ اور آخر کی طرف سے آپ کو بات چیت، سکور پوائنٹس، microbots،
          چیری، saucepans، sparkles، اور برف پھینک کر سکتے ہیں کہ ان حیرت انگیز اداکاروں
          کے ساتھ آپ کے اپنے کھیل پیدا کرنے کے قابل ہو جائے گا.. اور ایک دوسرے کو
          غائب. یہ سب آپ پر منحصر ہے!
    infinity_playlab_repeat_forever:
      1:
        text: کیا آپ تصور کر سکتے ہیں اگر آپ کو ہمیشہ اور ہمیشہ کے لئے کچھ دوبارہ
          کرنا پڑا؟ امید ہے کہ آپ کو کبھی نہیں کرنا پڑے گا کیونکہ کمپیوٹر چیزوں کو
          دوبارہ کرنے میں واقعی اچھے ہیں. یہ دوبارہ ہمیشہ کے لئے بلاک ہے. اس بلاک
          کے اندر کچھ بھی کھیل میں ہمیشہ کے لئے ہو جائے گا.
      2:
        text: ہم نے ایک اداکار چاہتا تھا تو بار بار کچھ کرنے کے لئے کھلاڑی کے بغیر
          کچھ بھی کرنے کے لئے، ہم ان بلاکس ڈال دیں گے دہرائیں ہمیشہ کے لئے بلاک کے
          اندر. یہ اگلے پہیلی میں، ہمارا مقصد انّا مسلسل اوپر اور نیچے چلنے میں مدد
          کرنے کے لئے ہے. سیکھنا کہ کس طرح دوبارہ حکم دیتا ہے کام آپ کو ایک ٹن وقت
          کے بعد بچائے گا جب آپ اپنے کھیل کی تعمیر کرتے ہیں.
    lesson_planning:
      1:
        image: notes/lesson_planning_1.png
        text: CS بنیادی سبق آپ کو یہ بتانے کے لئے جائزہ لینے کے ساتھ شروع ہوتا ہے
          کہ سبق کیا احاطہ کرے گا.
      2:
        image: notes/lesson_planning_2.png
        text: اسباق میں وارم اپ، سرگرمیاں اور لپیٹیں ہوتی ہیں۔ اگر آپ اپنے سبق کی
          منصوبہ بندی کرنا چاہتے ہیں تو، آپ ان تجاویز کو ذہن میں رکھنا چاہتے ہیں.
      3:
        image: notes/lesson_planning_3.png
        text: 1. ایک سرپل نصاب ڈیزائن استعمال کرنے کی کوشش کریں. تصورات کو ایک بار
          متعارف کرائیں اور پھر ان پر نظر ثانی کریں.
      4:
        image: notes/lesson_planning_4.png
        text: 2. غیر فعال سبق کے ساتھ آن لائن سبق کو یکجا کرکے مرکب سیکھنے کا تجربہ
          بنائیں.
      5:
        image: notes/lesson_planning_5.png
        text: 3. اپنے نصاب کو چھوٹے حصوں میں توڑیں۔
      6:
        image: notes/lesson_planning_6.png
        text: 4. اس بات کو یقینی بنائیں کہ آپ مقامی معیار اور کالج اور کیریئر کی تیاری
          کی مہارت پر سیدھ کریں.
    loop_for:
      1:
        text: ہیلو، میں Triina ہوں، اور میں Pixar کے لئے کام کرتے ہیں. میں Shrek سمیت
          فلموں کے ایک گروپ پر کام کیا ہے.
      2:
        text: یہ ہماری نئی “انسداد” لوپ ہے. یہ بار بار اعمال انجام دے گا اور آپ ہر
          وقت اعمال کو تھوڑا سا تبدیل کر سکتے ہیں.
      3:
        text: اس مثال میں، ہمارے “کاؤنٹر” لوپ کا کہنا ہے کہ “10 کی طرف سے 50 سے 90
          تک کاؤنٹر کے ساتھ شمار کریں اور اس کے اندر، ہمارے پاس “مربع ڈرا” بلاک ہے.
          “متغیر” سیکشن سے “کاؤنٹر” بلاک کو “لمبائی” جگہ میں گھسیٹیں.
      4:
        text: اس کا مطلب یہ ہے کہ ہمارے فنکار 50 پکسل لمبائی اطراف ہے کہ ایک مربع
          اپنی طرف متوجہ کرنے کے لئے جا رہا ہے، تو یہ اس کے لئے 10 کا اضافہ کریں اور
          60 پکسل لمبائی اطراف کے ساتھ ایک مربع اپنی طرف متوجہ کرے گا. پھر یہ 10 کا
          اضافہ کرتے رہیں گے اور چوکوں کو ڈرائنگ کریں گے جب تک کہ یہ 90 تک پہنچ جائے.
          تو ہم 50، 60، 70، 80، اور 90 کے چوکوں پڑے گا.
    loop_times:
      1:
        text: ہیلو، میں مارک ہوں! چلو loops کے بارے میں سیکھتے ہیں. loops کا استعمال
          کرتے ہوئے آپ کو ایک کمپیوٹر بتا سکتے ہیں اور اس سے زیادہ، ہزاروں یا اس سے
          بھی اربوں بار اعمال کے کسی بھی سیٹ کو دہرانے کے لئے.
      2:
        text: اس پہیلی میں، ہم پرندوں کو سور کو حاصل کرنے کے لئے آگے 5 خالی جگہوں
          کو منتقل کرنا چاہتے ہیں.
      3:
        text: ہم نئے استعمال کر سکتے ہیں “دہرائیں” بلاک ہماری مدد کرنے کے لئے.
      4:
        text: 5 “آگے بڑھنے” بلاکس کو گھسیٹنے کے بجائے...
      5:
        text: ہم “آگے بڑھیں” بلاک کے اندر “آگے بڑھیں” بلاک رکھ سکتے ہیں اور بلاک میں
          ایک نمبر لکھ سکتے ہیں تاکہ یہ بتانے کے لیے کتنی بار بار دہرایا جائے۔
      6:
        text: 'اور یہ ضروری ہے: آپ “دوبارہ” بلاک کے اندر ایک سے زیادہ کمانڈ ڈال سکتے
          ہیں.'
      7:
        text: اپنے نئے “دوبارہ” بلاک کا استعمال کرتے ہوئے لطف اندوز!
    loop_until:
      1:
        text: ہیلو، میں کرس ہوں. میامی ہیٹ میں شامل ہونے سے پہلے، میں کمپیوٹر سائنس
          کا مطالعہ کرنے کے لئے جارجیا ٹیک گیا. چلو ہمارے نئے بلاک کی کوشش کریں، “تک
          دوبارہ” بلاک.
      2:
        text: کیا اگر ہم نہیں جانتے تھے کہ پرندوں کو سور حاصل کرنے کے لئے کس حد تک
          منتقل ہونا پڑا تھا؟
      3:
        text: اگر ہم “آگے بڑھیں” بلاک کے اندر “آگے بڑھیں” بلاک ڈالیں تو پرندہ آگے
          بڑھے گا جب تک کہ یہ سور تک پہنچ جائے (یا ایک دیوار میں حادثے).
      4:
        text: 'اور یہ ضروری ہے: پہلے کی طرح، ہم “تک دوبارہ” بلاک کے اندر ایک سے زیادہ
          بلاکس ڈال سکتے ہیں، اور وہ سب کو بار بار کیا جائے گا.'
    loop_while:
      1:
        text: Hi, I'm Makinde! Let's learn about the "while block."
      2:
        text: "“جبکہ بلاک” آپ اس کے اندر جو کچھ بھی کرتے ہیں وہ کریں گے جب تک کہ سب
          سے اوپر بیان درست ہے."
      3:
        text: مثال کے طور پر اگر کسان ڈھیر پر کھڑا ہے تو وہ 1 شولفل کو ہٹانا جاری
          رکھے گی جبکہ اس کے نیچے ابھی بھی ایک ڈھیر موجود ہے۔
    maze_intro:
      1:
        text: آپ کے کوڈ کے پہلے گھنٹے میں خوش آمدید! چلو صحیح پروگرامنگ کے اپنے پہلے
          ذائقہ میں کودو.
      2:
        text: ہم Blockly، ایک بصری پروگرامنگ زبان کا استعمال کرتے ہوئے کیا جائے گا
          آپ کو ڈریگ اور ڈراپ جہاں کوڈ لکھنے کے لئے بلاکس.
      3:
        text: زیادہ تر کوڈ ٹائپ کیا جاتا ہے، لیکن بلاکلی بصری ہے. ہر بلاکس “حقیقی”
          کوڈ کی ایک لائن کے مساوی ہے.
      4:
        text: آپ کمپیوٹر سائنس، تصورات کی بنیادیں سیکھیں گے جو مریخ روور کو کنٹرول
          کرنے کے لئے اطلاقات بنانے سے کہیں بھی استعمال ہوتے ہیں.
      5:
        text: ایک پروگرام آپ کے کمپیوٹر کی پیروی کرنے کے لئے ہدایات کا ایک سیٹ ہے.
      6:
        text: آپ کے پہلے پروگرام کا مقصد ایک گرین سور کو مارنے کے لئے ایک بھولبلییا
          کے ذریعے ایک ناراض برڈ حاصل کرنے کے لئے ہے.
      7:
        text: بائیں طرف بھولبلییا ہے جہاں آپ کے پروگرام چلایا جاتا ہے. ہر پہیلی کے
          لئے ہدایات بھولبلییا ذیل میں ہیں.
      8:
        text: درمیانی ٹول باکس ناراض برڈ کے لئے حکم دیتا ہے. آپ اپنے کوڈ کی تعمیر
          کے لئے ان کا استعمال کریں گے.
      9:
        text: حق پر آپ کے کام کی جگہ ہے جہاں آپ کو اپنے پروگرام کی تعمیر کے لئے ٹول
          باکس سے بلاکس ھیںچیں گے. کسی بلاک کو حذف کرنے کے لئے، اسے کونے میں ردی کی
          ٹوکری میں گھسیٹیں.
      10:
        text: ہر بلاک ایک ہدایات ہے. اگر آپ اپنے ورک اسپیس پر “آگے بڑھیں” بلاک کو
          ھیںچیں اور “چلائیں پروگرام” دبائیں تو، پرندوں کو بھولبلییا پر ایک جگہ چلتا
          ہے.
      11:
        text: ایک سے زیادہ کارروائی کرنے کے لئے، آپ اپنے ورک اسپیس پر بہت سے بلاکس
          کو ھیںچیں اور انہیں ایک دوسرے کے ساتھ منسلک کرسکتے ہیں. پرندہ اوپر سے نیچے
          تک احکامات کرے گا.
      12:
        text: اگر آپ کسی پروگرام کو چلاتے ہیں اور اسے ٹھیک کرنا چاہتے ہیں اور دوبارہ
          کوشش کریں تو، “ری سیٹ کریں” بٹن دبائیں.
      13:
        text: چلو ان سواروں کو حاصل کرتے ہیں!
    mc_2016_congrats:
      1:
        text: مبارک ہو! آپ نے Minecraft کی دنیا کو زندگی میں لانے کے لئے کمپیوٹر سائنس
          کے حکموں کا استعمال کرنا سیکھا ہے. اب آپ ڈویلپر ہیں. آپ نے تمام احکامات
          اور تمام مخلوق کو کھلا دیا ہے. آپ کیا ہوتا ہے کا انتخاب کرتے ہیں.
      2:
        text: جب آپ اپنا کھیل بنا رہے ہوں تو، اس لنک کو حاصل کرنے کے لئے اشتراک کا
          انتخاب کریں جسے آپ اپنے دوستوں کے ساتھ اشتراک کرسکتے ہیں یا اپنے فون پر
          اپنا کھیل کھیلنے کے لئے کرسکتے ہیں. مزہ کرو! میں آپ کے مائنکرافٹ کے ورژن
          کو کھیلنے کے منتظر ہوں.
    mc_2016_events:
      1:
        text: اس اگلے سطح پر، آپ اسٹیو یا ایلیکس یا تو ہو کرنے کے لئے منتخب کر سکتے
          ہیں. اوپر، نیچے، بائیں، اور دائیں منتقل کرنے کے لئے اپنے کی بورڈ پر تیر
          کے بٹن دبائیں. اب آپ جہاں چاہیں ایک سطح کے ارد گرد منتقل کر سکتے ہیں. ایک
          مخلوق کو استعمال کرنے کے لئے، صرف اس کی طرف چلنا، اس کا سامنا کرنا پڑتا
          ہے، اور اسپیس بار دبائیں.
      2:
        text: اگر آپ ٹچ اسکرین کا استعمال کر رہے ہیں تو، اوپر، نیچے، بائیں اور دائیں
          جانب منتقل کرنے کے لئے سوائپ کریں. پھر اپنے سامنے موجود آئٹم استعمال کرنے
          کے لیے گیم پر ٹیپ کریں۔
      3:
        text: لیکن جب آپ اسے استعمال کرتے ہیں تو کیا ہوتا ہے؟ آپ کو ان کی قینچ جب
          Minecraft میں، بھیڑ ڈراپ اون، آپ کو ان کو مارا جب گائے دور بھاگتے ہیں، اور
          آپ کو ان کے قریب ہو جب creepers دھماکے. یہ رد عمل واقعات نامی کسی چیز کی
          بدولت ہوتا ہے. واقعات آپ کے پروگرام کو سننے یا انتظار کرنے کے لئے بتاتے
          ہیں جب کچھ ہوتا ہے. اور جب یہ ہوتا ہے، تو ایک کارروائی انجام دیتے ہیں.
      4:
        text: اب تک، آپ نے ایک واقعہ کا استعمال کیا ہے. کوڈ آپ میں ڈال دیا “جب spawned”
          سلاٹ چلتا ہے جب آپ کی مخلوق پیدا کیا جاتا ہے یا جب کھیل شروع ہوتا ہے. اگلی
          چند سطحوں پر آپ کے پاس واقعات کے لئے نئے سلاٹس ہوں گے جیسے “جب چھوا” جو
          آپ مخلوق کو چھوتے وقت چلتا ہے، یا “جب استعمال کیا جاتا ہے” جب آپ مخلوق کو
          استعمال کرتے ہیں. یا، اگر آپ چاہتے ہیں کہ آپ کی زومبی غائب ہو جائے جب سورج
          آتا ہے تو، “جب دن” سلاٹ میں ڈالیں
    mc_2016_intro:
      1:
        text: ہیلو، میرا نام جینس ہے اور میں Minecraft کے لیڈ تخلیقی ڈیزائنر ہوں.
          اگلے گھنٹے میں، آپ اپنے Minecraft کھیل بنا دیں گے. یہ Minecraft کی طرح لگتا
          ہے لیکن دنیا نے روک دیا ہے. بھیڑیں حرکت نہیں کر رہی ہیں، مرغیاں انڈے نہیں
          دے رہی ہیں، اور زومبی ابھی بھی کھڑی ہیں۔ Minecraft دنیا کو کام کرنے کے لئے
          کوڈ کو شامل کرنے کے لئے یہ آپ پر منحصر ہے.
      2:
        text: 'میرا نام میلیسا ہے اور میں Minecraft میں ایک صارف محقق ہوں. میں واقعی
          میں دلچسپی رکھتا ہوں کہ لوگ کس طرح سوچتے ہیں اور ٹیکنالوجی کے ساتھ بات چیت
          کرتے ہیں اور اسی طرح یہ کام میرے لئے بہترین کام ہے کہ کمپیوٹر انجینئرنگ
          کو نفسیات کے ساتھ ملا دیں: لوگ کیسے سوچتے ہیں اور برتاؤ کرتے ہیں.'
      3:
        text: آپ دیکھیں گے کہ آپ کی اسکرین کو تین اہم حصوں میں تقسیم کیا گیا ہے. ابھی
          دنیا منجمد ہے لیکن ہم کوڈ کے ساتھ اس کو ٹھیک کرنے کے لئے جا رہے ہیں.
      4:
        text: 2) یہ درمیانی علاقہ ٹول باکس ہے. ان بلاکس میں سے ہر ایک ایک ایسا کمانڈ
          ہے جسے مرغیاں، بھیڑ اور دیگر مائنکرافٹ مخلوقات سمجھ سکتے ہیں۔
      5:
        text: 3) دائیں جانب کی جگہ کو ورک اسپیس کہا جاتا ہے اور یہ ہے کہ ہم اپنے پروگرام
          کی تعمیر کریں گے.
      6:
        text: آپ کیا کرنا بھول جاتے ہیں تو، ہر سطح کے لئے ہدایات سب سے اوپر ہیں.
      7:
        text: شروع کرنے کے لئے، ہم ایک چکن پروگرام کے لئے جا رہے ہیں. چلو “آگے بڑھیں”
          کمانڈ کو ورک اسپیس میں گھسیٹیں. جب میں نے “چلائیں” مارا تو چکن آگے بڑھتا
          ہے ایک قدم. مزید جانے کے لئے، میں سب سے پہلے “آگے بڑھیں” بلاک کے نیچے ایک
          اور “آگے بڑھیں” بلاک کو ھیںچیں گے جب تک کہ نمایاں ظاہر نہ ہو. پھر میں اسے
          چھوڑ دونگا اور دو بلاکس ایک دوسرے کے ساتھ تصویر لیں گے. اگر میں نے دوبارہ
          “چلائیں” مارا تو، چکن دو قدم چلتا ہے.
      8:
        text: اگر آپ نے کبھی ایک بلاک کو حذف کرنا چاہتے ہیں، تو صرف اسٹیک سے ہٹا دیں
          اور ٹول باکس پر اسے واپس گھسیٹیں.
      9:
        text: "“چلائیں” کو مارنے کے بعد آپ کھیل کو دوبارہ ترتیب دینے اور شروع کرنے
          کے لئے ہمیشہ “ری سیٹ” کے بٹن کو مار سکتے ہیں. اب، یہ آپ کی باری ہے کہ آپ
          Minecraft کے اپنے اپنے ورژن کو بنائیں. مزہ کرو!"
    mc_2016_loops:
      1:
        text: ہیلو، میں لیزا ہوں. میں Minecraft پر ایک سافٹ ویئر ڈویلپر ہوں اور میں
          اس کھیل میں کچھ جانوروں اور دشمنوں پر کام کرتا ہوں. جانوروں میں سے ایک جس
          پر میں نے کام کیا وہ اوسیلوٹ ہے. میں نے اس حصے پر کام کیا جہاں آپ ایک اوسیلوٹ
          ایک مچھلی کو کھانا کھلا سکتے ہیں جسے آپ اپنی بلی میں لے سکتے ہیں.
      2:
        text: انسانوں کے طور پر، ہم واقعی بور ہو جاتے ہیں اگر ہمیں ایک ہی کام بار
          بار کرنا پڑتا ہے. لیکن کمپیوٹر کے بارے میں ٹھنڈی بات یہ ہے کہ وہ ایک ہی
          بات کر سکتے ہیں لاکھوں یا اس سے بھی اربوں بار ایک قطار میں بور کے بغیر.
          اس تکرار کو لوپ کہا جاتا ہے اور Minecraft میں ہر مخلوق لوپس استعمال کرتی
          ہے.
      3:
        text: اس سے پہلے، ہمیں سکرین کے پار منتقل کرنے کے لئے ایک چکن ملا لیکن پھر
          وہ رک گئی. Minecraft میں، مرغیاں ہمیشہ اور ہمیشہ کے لئے گھومتے ہیں. چلو
          ہمارے ٹول باکس سے “ہمیشہ کے لئے” لوپ استعمال کرتے ہیں تاکہ ہمارے مرغیوں
          کو ہمیشہ کے لئے بھی گھوم رہے ہیں. لوپس کی طاقت آپ کو ٹن وقت بچائے گی اور
          ہر قسم کے صاف اختیارات کھولیں گے کیونکہ آپ اپنے مائنکرافٹ کے اپنے ورژن کی
          تعمیر کرتے ہیں.
    mc_2016_spawn:
      1:
        text: کھیلوں میں، spawn تخلیق کے طور پر ایک ہی چیز کا مطلب ہے. اس سطح میں،
          سورج نیچے چلا جاتا ہے جب zombies انڈے بناتے ہیں. ایسا کرنے کے لئے، ہم “جب
          رات” بلاک استعمال کریں گے.
      2:
        text: چونکہ ہم چاہتے ہیں کہ زومبی رات کو پھیلانے کے لئے ہم “جب رات” بلاک کے
          تحت “سپان زومبی” بلاک شامل کریں گے. جیسے ہی وہ انڈے رہے ہیں کے طور پر، ہر
          زومبی آپ کو ان میں ڈال دیا ہے کہ کوڈ چلائیں گے “جب spawned” واقعہ سلاٹ.
          مزہ سپوننگ زومبی ہے!
    mc_2017_agent_intro:
      1:
        text: 'اسٹیسی: اسٹیمپی، لِزی، پریسٹن - میرے ساتھ آنے کے لئے شکریہ۔ جو میں
          آپ کو دکھانا چاہتی ہوں وہ اس اونچی سطح مرتفع کے اوپر واقع ہے مجھے لگتا ہے
          کہ آپ کو یہ بہت پسند آئے گا!'
      2:
        text: ایک منٹ رکو - ٹریک میں ایک گڑھا ہے! (چلاتے ہوئے)
      3:
        text: 'کیا سب ٹھیک ہیں؟ اسٹیمپی: آہ، مجھے مسئلہ نظر آ گیا ہے۔ دیکھو! ٹریک
          میں ایک گڑھا تھا۔ اسٹیسی: واقعی، اسٹیمپی؟ لِزی: شاید ہمیں اسے ٹھیک کرنے
          کے لئے بلاکس جمع کرنے چاہئیں۔ پریسٹن: آئیں اسے ایک ریس بناتے ہیں۔ واپس اوپر
          پہنچنے والا پہلا فرد جیت جائے گا۔ اسٹیسی: ٹھیک ہے، ترتیب بنائیں، تیار ہو
          جائیں، چلیں! ٹھیک ہے، میں بس اس کی کچھ پکی مٹی اکٹھی کرنے لگی ہوں۔ رکو۔
          دوستو، میں کھدائی نہیں کر سکتی! پریسٹن: میں بھی نہیں۔ لِزی: میں بھی نہیں
          کر سکتی۔ اسٹیسی: ٹھیک ہے، یہ واقعی عجیب ہے۔ اسٹیمپی، کیا آپ کھدائی کر سکتے
          ہو؟ اسٹیمپی: میں کھدائی نہیں کر سکتا! اسٹیسی: ٹھیک ہے، سب پُرسکون رہیں اسٹیمپی:
          کیا گیم خراب ہو گئی ہے؟ اسٹیسی: اگر ایسا ہوا ہے، تو ہم اسے کیسے ٹھیک کریں
          گے؟ لِزی: مجھے نہیں معلوم۔ اسٹیمپی: کیا کوئی جانتا ہے کہ Minecraft کوڈ کیسے
          لکھتے ہیں؟'
      4:
        text: "(شرارت سے) پریسٹن: یہ کیا ہے؟ اسٹیمپی: میں نے پہلے کبھی ان میں سے کسی
          کو بھی نہیں دیکھا ہے۔ لِزی: یہ بہت دلکش ہے! اسٹیسی: ہاں یہ ہے...کیا اسے
          سدھایا جا سکتا ہے؟ پریسٹن: ٹھیک ہے، کیا ہو رہا ہے؟ کسی کو اصلی دنیا میں
          واپس جانے اور اسے ٹھیک کرنے کی ضرورت ہے۔ تمام: یہ نہیں! اسٹیسی: نہیں میں-
          (آہ بھرتے ہوئے۔) ٹھیک ہے، میں جاؤں گی۔"
      5:
        text: اوہ، ٹھیک ہے، ارے، تو میں اب حقیقی دنیا میں ہوں۔ میں Minecraft کے دفاتر
          تلاش کرنے کی کوشش کرنے کے لئے جا رہی ہوں.
      6:
        text: لیکن، مجھے آپ کی مدد کی ضرورت ہوگی۔ ٹیوٹوریل کرنا شروع کریں، کوڈ کرنا
          سیکھنا شروع کریں، اور میں کچھ لیولز کے بعد آپ لوگوں سے ملوں گی، ٹھیک ہے؟
          مجھے اچھی قسمت کی دعا دیں! میرے خیال میں یہ اس طرف ہے۔ او! کیکٹس! میں ٹھیک
          ہوں!
      7:
        text: آور آف کوڈ چیلنج مکمل کرنے کے لیے، آپ کو ایجنٹ کو پروگرام کرنے کے لیے
          کوڈ لکھنا ہوگا۔ آپ اپنے راستے میں حائل کسی بھی رکاوٹوں کو ہٹانے کے لئے اپنے
          ایجنٹ کے ساتھ مل کر کام کریں گے، تاکہ آپ اپنے سفر کے لیے ضروری اشیاء کو
          اٹھا سکیں۔ صرف ایجنٹ بلاکس رکھ سکتا ہے اور توڑ سکتا ہے، اور صرف آپ اشیاء
          جمع کر سکتے ہیں۔ آپ کی سکرین کو تین مرکزی حصوں میں تقسیم کر دیا جاتا ہے۔
          بائیں جانب Minecraft ہے۔
      8:
        text: درمیان والی جگہ اُن کمانڈز پر مشتمل ایک ٹول باکس ہے جنہیں ایجنٹ سمجھ
          سکتا ہے۔
      9:
        text: اور دائیں جانب، کام کی جگہ ہے۔ اسی جگہ پر آپ ایجنٹ کو کنٹرول کرنے کے
          لیے اپنا پروگرام بنانے کے لیے کمانڈز کو جمع کرتے ہیں۔
      10:
        text: ایجنٹ چل سکتا ہے، مڑ سکتا ہے، اور پریشر پلیٹوں کو فعال کر سکتا ہے۔ یہ
          بلاکس کو ختم کر سکتا ہے اور انہیں جگہ پر رکھ سکتا ہے۔ جب یہ ان مائن کارٹ
          ریلوں کی طرح بلاک رکھتا ہے، تو یہ اسے اپنے نیچے رکھتا ہے۔
      11:
        text: آپ کیا کرنا بھول جاتے ہیں تو، ہر سطح کے لئے ہدایات سب سے اوپر ہیں.
      12:
        text: اگر آپ دوبارہ کوشش کرنا چاہتے ہیں، تو آپ نیلے رنگ کے ری سیٹ بٹن کو دبا
          کر ہر چیز کو وہیں دوبارہ سیٹ کر سکتے ہیں جہاں سے یہ شروع ہوا تھا۔ اور اگر
          آپ کو کوڈ کا ایک بلاک حذف کرنے کی ضرورت ہے، تو اسے اپنے کام کی جگہ سے ٹول
          باکس پر گھسیٹ کر لائیں۔ ایجنٹ کو حرکت میں لانے کے لئے رن دبانا یاد رکھیں۔
          ٹھیک ہے، آگے بڑھیں اور پہلے چند لیول کو آزمائیں۔ آپ کی قسمت اچھی ہو!
    mc_2017_congratulations:
      1:
        text: 'پریسٹن: مبارکباد!'
      2:
        text: 'لِزی: مبارکباد!'
      3:
        text: 'اسٹیمپی: مبارک ہو، آپ نے یہ کر دکھایا!'
      4:
        text: 'اسٹیسی: مبارکباد دوستو، آپ نے اسے مکمل طور پر واقعی میں بہت خوب کیا!
          اور اب آپ نے آور آف کوڈ مکمل کر لیا ہے، آپ Minecraft میں کوڈنگ شروع کر سکتے
          ہیں۔ آپ نے لوپس، فنکشنز، اور سافٹ ویئر ایجنٹ جو کرتا ہے کے بارے میں سیکھا
          ہے۔'
      5:
        text: اب، یہ آزادانہ کھیل کے لیول کا وقت ہے، جہاں آپ ڈویلپر ہیں۔ کسی باقی
          بچ جانے والے وقت کو دریافت، کان کنی اور تعمیر کرنے کے لیے اپنے خود کے فنکشنز
          لکھنے کے لئے استعمال کریں۔
      6:
        text: 'آپ اس لیول پر جو کوڈ لکھتے ہیں اسے Minecraft پر اپنی Minecraft دنیا
          میں لے جا سکتے ہیں: تعلیمی ایڈیشن۔ بس ''ختم'' پر کلک کریں اور اپنی دنیا
          میں استعمال کرنے کے لیے لنک حاصل کرنے کے لئے ہدایات پر عمل کریں۔ تاکہ ایجنٹ
          کے ساتھ کوڈنگ جاری رکھ سکیں۔ مزے کریں، اور بہت اعلٰی!'
      7:
        text: 'اسٹیسی: اور میں واپس آ گئی ہوں! ٹھیک ہے، دوستو، یہ ایجنٹ ہے! میں آپ
          کو دکھاتی ہوں کہ یہ کیا کر سکتا ہے۔ دیکھو، یہ کر رہا ہے! میں نے اسے کہا
          کہ ان ٹیرا کوٹا بلاکس میں سے ایک سیڑھی بنانے کا کہا، اب ہم اسے یہاں سے نکلنے
          کے لیے استعمال کر سکتے ہیں۔ اور دوستو، یہ صرف سیڑھیاں نہیں ہیں۔ میں جو بھی
          چاہوں ایجنٹ کو وہ کرنے کا کہہ سکتی ہوں، اور یہ میرے لیے کرے گا۔'
      8:
        text: 'اسٹیمپی: وہ آپ نے کیسے کیا؟ اسٹیسی: یہ دراصل آسان تھا۔ میں نے بس کوڈ
          استعمال کیا!'
    mc_2017_functions:
      1:
        text: 'پریسٹن: میں ڈینگ مارنے کی کوشش نہیں کر رہا، لیکن میں پارکور میں کافی
          اچھا ہوں۔ لِزی: چلو سوتے ہیں کیونکہ آج کے دن ہی اسٹیسی واپس آتی ہے۔'
      2:
        text: 'اسٹیسی: ٹھیک ہے دوستو، میں Minecraft کے دفاتر سے واپس آگئی ہوں، اور
          مجھے لگتا ہے کہ میں اپنی گیم میں موجود مسئلے کو حل کرنے کے بارے میں جانتی
          ہوں۔ میرے خیال میں، میں ایک فنکشن استعمال کر سکتی ہوں۔ مجھے بس یہ کھولنے
          دیں۔'
      3:
        text: تو ایک فنکشن ایک مخصوص کام کو پورا کرنے کے لیے ہدایات کا ایک مخصوص مجموعہ
          ہوتا ہے، جیسے کسی چیز کی ترکیب کی طرح۔ اگلے چند لیولز میں، آپ کو ان فنکشنز
          تک رسائی حاصل ہوگی جنہیں آپ پزلز حل کرنے کے لیے استعمال کر سکتے ہیں۔
      4:
        text: فنکشن میں موجود کوڈ کو دیکھیں جب یہ کام کی جگہ پر ہو کہ یہ کیا کرتا
          ہے۔
      5:
        text: پھر، اس نام والا بلاک ٹول باکس میں ڈھونڈیں اور اسے ٹول باکس سے جب چلائیں
          بلاک پر گھسیٹ کر لائیں۔
      6:
        text: یاد رکھیں، جب آپ کو کچھ کرنے کے لیے ہدایات کا ایک ہی سیٹ چلانے کی ضرورت
          ہو تو آپ ہر مرتبہ ایک ہی فنکشن استعمال کر سکتے ہیں، جیسے پل تعمیر کرنا۔
          خوس قسمت رہو، مجھے معلوم ہے کہ آپ یہ کر سکتے ہیں!
    mc_2017_repeat:
      1:
        text: 'اسٹیمپی: مجھے تجسس ہے کہ اسٹیسی اب کیا کر رہی ہوگی؟'
      2:
        text: 'اسٹیسی: واہ، مجھے لگتا ہے کہ میں صحیح جگہ پر ہوں۔ یہ حیرت انگیز ہے!'
      3:
        text: مجھے لگتا ہے جیسے میں Minecraft میں واپس آ گئی ہوں! ہیلو۔ آپ کیسی ہیں؟
          ہیلو؟
      4:
        text: 'اوہ، یہاں پر کریپر ہے۔ تم کچھ نہیں کرتے، کیا کرتے ہو؟ کیٹی: اسٹیسی؟
          اسٹیسی: ہیلو، کیٹی؟ کیٹی: ہاں، Minecraft میں خوش آمدید!'
      5:
        text: 'اسٹیسی: یہ حیرت انگیز ہے. تو آپ ایک ڈویلپر کی حیثیت سے یہاں روزانہ
          کام کرتی ہیں، درست؟ کیٹی: ہاں، یہ بہت شاندار ہے۔ میں Minecraft مارکیٹ پلیس
          ٹیم میں ڈویلپر ہوں۔ اسٹیسی: آپ کتنی کوڈنگ زبانیں جانتی ہیں؟ کیٹی: اپنے کیریئر
          میں، میں نے شاید ایک درجن سے زیادہ زبانوں کے ساتھ کام کیا ہے۔ اسٹیسی: ایک
          درجن؟ کیٹی: ہاں۔ اسٹیسی: تو اب، کیا آپ کو اس چھوٹے گولم لڑکے کے بارے میں
          کچھ معلوم نہیں ہوگا جو خود کو ایجنٹ کہتا ہے؟ کیٹی: ہم ایجنٹ کو ان کاموں
          کے لیے استعمال کرتے ہیں جنہیں اسٹیو یا الیکس نہیں کر سکتے، جیسے آتش فشاں
          مادہ کے  پار جانا۔ اسٹیسی: ٹھیک ہے، میں کوڈ کرنا سیکھنا چاہتی ہوں، اور وہ
          کوڈ کرنا سیکھنا چاہتے ہیں، تو پہلی چیزوں میں سے وہ ایک کیا ہے جو آپ کو سیکھنے
          کے وقت جاننے کی ضرورت ہے؟'
      6:
        text: 'کیٹی: خوب، آپ کو لوپس کو استعمال کرنے کا طریقہ سیکھنے کی ضرورت ہے۔
          لوپس وہ چیزیں ہیں جنہیں ڈویلپرز کمپیوٹر کو کمانڈ دینے کے لیے لکھتے ہیں جسے
          بار بار چلایا جا سکتا ہے۔ اسٹیسی: سمجھ گئی، لہذا میرے خیال میں دراصل اس
          میں سے کچھ آگے والے لیولز میں آ رہا ہے، لہذا آگے بڑھیں اور لوپس کو آزمائیں۔'
      7:
        text: اگلے لیول میں، آپ ایجنٹ کو راستے میں آگے بڑھانے کے لئے ایک لوپ استعمال
          کر سکتے ہیں۔ دہرائیں بلاک کو کام کی جگہ پر گھسیٹ کر لائیں اور دہرائیں بلاک
          کے اندر آگے بڑھیں بلاک رکھیں۔ یہ کمپیوٹر کو ایک صف میں ایک ہی چیز کو کئی
          بار کرنے کا کہتا ہے جس سے بلاکس کے ایک پورے گچھے کو کام کی جگہ پر گھسیٹ
          کر لانے کی ضرورت نہیں رہتی۔ آپ دہرائیں بلاک میں نمبر ڈال کر انتخاب کر سکتے
          ہیں کہ کتنی بار دہرانا ہے۔
      8:
        text: آپ دہرائیں بلاک میں بھی موڑ اور متعدد کمانڈز ڈال سکتے ہیں، لیکن ابھی
          کے لیے ایجنٹ کو چند قدم آگے بڑھانے کے لیے دہرائیں استعمال کرنے کی کوشش کریں۔
          یاد رکھیں، اگر آپ کسی پزل پر پھنس جاتے ہیں تو آپ ہمیشہ نیلا ری سیٹ بٹن دبا
          سکتے ہیں اور دوبارہ کوشش کر سکتے ہیں۔
      9:
        text: 'اگر آپ کیٹی جیسا مزے کا کام کرنے کے بارے میں سوچ رہے ہیں، تو آگے بڑھیں
          اور ہر لیول ختم کرنے پر کوڈ دکھائیں بٹن پر کلک کریں۔ یہ دراصل آپ کو جاوا
          اسکرپٹ کوڈ دکھائے گا جسے کیٹی جیسا کوئی بھی فرد استعمال کرتا ہے جیسے جب
          وہ دراصل Minecraft کو پروگرام کر رہی ہوتی ہے۔ کیٹی: ہاں، سب کی اچھی قسمت
          رہے!'
    mc_2018_closing:
      1:
        text: 'ایمی لی 33: مبارک ہو! تم نے یہ کیا!'
      2:
        text: 'سکویڈ: مبارک ہو!'
      3:
        text: 'نیٹی: تم نے یہ کیا! مبارک ہو!'
      4:
        text: 'ٹوموہاک: مبارک ہو!'
      5:
        text: کیسا بڑا دن ہے! تمام خزانہ شکار نے ہمیں ایک Minecraft کنڈوئیر بنانے،
          نوٹیلس گولے تلاش کرنے اور خزانہ چیسٹ کو دریافت کرنے کی قیادت کی. میں صرف
          prismarine کے رنگ سے محبت کرتا ہوں. ہم نے بھی loops اور conditشنals کے ساتھ
          کوڈ کرنے کا طریقہ سیکھا.
      6:
        text: کوڈنگ کی بات کرتے ہوئے، اس جدوجہد میں ایک اور سطح ہے. آپ بہادر، اس کے
          لئے تیار ہیں؟
      7:
        text: یہ ایک مفت کھیل کی سطح ہے اور آپ کو ناقابل یقین چیز استعمال کرنے اور
          تعمیر کرنے کے لئے اپنی کوڈنگ کی مہارت ڈال سکتے ہیں.
      8:
        text: ہمم... آپ کا خزانہ، ایک پانی کے اندر اندر یادگار، ایک مرجان محل کو چھپانے
          کے لئے ایک جگہ؟ آہ... بہت سے خیالات. ایک بار بار کارروائی پیدا کرنے کے لئے
          loops کا استعمال کرتے ہوئے کی کوشش کریں، اور conditedals ان تمام غیر متوقع
          منظرنامے کے لئے تیار کرنے کے لئے.
      9:
        text: آپ نے یقینی طور پر اپنے آپ کو اب تک ایک نڈر کوڈر ثابت کیا ہے، اور میں
          آپ کی تعمیر کو دیکھنے کے لئے انتظار نہیں کر سکتا. اور امید ہے کہ کوڈ کے
          ساتھ آپ کی مہم جوئی یہاں ختم نہیں ہے. بون سفر!
    mc_2018_conditionals:
      1:
        text: واہ! ایک اور تین پہیلیاں حل! اور ہم نے پکڑ لیا ہے... ایک سامن. سونے
          کے ڈھیر کے طور پر بالکل دلچسپ نہیں ہے، لیکن ہم لے لیں گے جو ہم حاصل کرسکتے
          ہیں. اور میں nautilus شیل بعد میں ہاتھ میں آ جائے گا کہ ایک احساس ہے. میں
          ان کھنڈرات میں lurks کیا حیرت ہے. شاید ایک اور اشارہ! آئیے اندر ایک نظر
          ڈالیں.
      2:
        text: میرا نام نیٹی ہے اور میرے کھنڈرات میں خوش آمدید. ہم حالات کی بنیاد پر
          ہر وقت فیصلے کرتے ہیں. اگر بارش کی طرح لگتی ہے تو پھر ہم چھتری پکڑ لیں گے۔
          اگر ہم بھوکے ہیں، تو ہم ایک ناشتا کھائیں گے.
      3:
        text: اگر ہم ایک ریپر دیکھتے ہیں، تو ہم مخالف سمت میں چلتے ہیں. کمپیوٹر بھی
          اس قسم کے فیصلے کرتے ہیں. وہ اصل میں کوڈ کا استعمال کرتے ہوئے حالات کا جواب
          دے سکتے ہیں.
      4:
        text: اپنے کوڈ کمانڈز کا استعمال کرتے ہوئے اس طرح کے جواب کو پروگرام کرنے
          کے لئے، اگر راستہ بلاک کو منتخب کریں.
      5:
        text: کمانڈ بنانے کے لئے ڈراپ ڈاؤن منتخب کریں.
      6:
        text: مثال کے طور پر، اگر آپ کمانڈ لکھتے ہیں “اگر حق کا راستہ” اور جگہ مشروط
          کے اندر دائیں باری ہے، تو جب اسٹیو دائیں جانب کھلے راستے تک پہنچ جاتا ہے
          تو وہ ہمیشہ صحیح ہو جائے گا. اگر دائیں جانب کوئی افتتاحی نہیں ہے، تو وہ
          صحیح نہیں ہو گا. آپ کو اس طرح کے پانی کے اندر اندر اندر گفاوں میں پراسرار
          کھنڈرات کے طور پر غیر متوقع حالات میں کوڈ چلانے جب حکم دیتا ہے مددگار ہیں
          تو یہ مشروط.
      7:
        text: بلاکس اگر استعمال کرنے کی کوشش کریں اور ایک سپن کے لئے آپ کے کوڈ لے.
      8:
        text: واہ! نیٹی کے کھنڈر بہت اچھے تھے۔ میں واقعی میں اپنے والدین کے گھر سے
          باہر منتقل ہوگا. تو آپ کیا سوچتے ہیں؟ ہمیں حتمی پہیلیاں مکمل کرنے کے لئے
          حالات صحیح ہیں؟ چلو اسے جانے دو.
    mc_2018_intro:
      1:
        text: ہیلو! آپ صرف وقت میں ہیں. بحری سفر آبی میں خوش آمدید. میں پوشیدہ پانی
          کے اندر خزانہ تلاش کرنے کے لئے ایک جدوجہد پر سوار کرنے کے بارے میں ہوں اور
          میں آپ کی مدد کرنے کے لئے بہت خوش ہوں. کون جانتا ہے کہ ہم ان پراسرار آبی
          گزرگاہوں کے ساتھ کیا سامنا کریں گے؟ ہم اس گودی پر کہیں ہماری پہلی گائیڈ
          سے ملنے کے لئے مراد ہیں.
      2:
        text: خوش آمدید، بہادر! سفر آبی مکمل کرنے کے لئے آپ کو کوڈ کا استعمال کرتے
          ہوئے پہیلیاں کی ایک سیریز کو حل کرنے کی ضرورت ہو گی. یہ کس طرح کام کرتا
          ہے. آپ کی سکرین تین اہم حصوں میں تقسیم کیا جاتا ہے.
      3:
        text: بائیں جانب، آپ کو Minecraft دنیا نظر آئے گی.
      4:
        text: درمیانی علاقے آپ کے ٹول باکس ہے جہاں آپ کوڈنگ کمانڈز تلاش کرسکتے ہیں.
      5:
        text: اور دائیں جانب بڑے علاقے آپ کے ورک اسپیس ہے. یہ ہے جہاں آپ کو آپ کے
          پروگرام کی تعمیر اور آپ کی نقل و حرکت کو کنٹرول کرنے کا حکم دیتا ہے اسٹیک
          کر سکتے ہیں.
      6:
        text: ہر سطح کی ہدایات صفحے کے سب سے اوپر پر ہیں. طویل اور مختصر ہدایات کے
          درمیان تبدیل کرنے کے لئے پلس سائن پر کلک کریں۔
      7:
        text: ٹول باکس سے بلاکس کو ورک اسپیس میں گھسیٹنے کی کوشش کریں، ان کو اسٹاکنگ
          کریں، اور پھر اپنے حکموں پر عملدرآمد کرنے کے لئے رن بٹن پر کلک کریں.
      8:
        text: آپ کو یہ صحیح حاصل کرنے کے لئے چند بار کوشش کرنے کی ضرورت ہو سکتی ہے
          اور پہیلیاں میں سے کچھ ایک سے زیادہ حل ہے لہذا تجربہ کیا کام کرتا ہے کو
          دیکھنے کے لئے.
      9:
        text: اگر آپ دوبارہ کوشش کرنا چاہتے ہیں تو، جہاں آپ نے شروع کیا تھا وہاں جانے
          کے لئے ری سیٹ بٹن پر کلک کریں.
      10:
        text: اگر آپ کو ایک کمانڈ حذف کرنے کی ضرورت ہے تو، صرف اپنے ورک اسپیس سے بلاک
          کو ٹول باکس میں واپس گھسیٹیں. یاد رکھیں، “چلائیں” پر کلک کریں یہ دیکھنے
          کے لئے کہ آپ کا کوڈ عمل میں کیا لگتا ہے.
      11:
        text: ٹھیک ہے، کافی کے ارد گرد گڑبڑ، ساتھی بہادر. کی کچھ پانی کے اندر اندر
          خزانہ تلاش کرنے کے لئے کوڈنگ شروع کرتے ہیں.
    mc_congrats_no_share:
      1:
        text: مبارک ہو! تم نے صرف کمپیوٹر سائنس کے بنیادی عمارت بلاکس سیکھا.
      2:
        text: اب آپ اپنی تخلیق کی تعمیر کے لئے ان بلاکس کا استعمال کرسکتے ہیں. کوئی
          زیادہ ہدایات اور حل کرنے کے لئے کوئی پہیلیاں ہیں. آپ چاہتے ہیں کچھ بھی تعمیر
          کر سکتے ہیں. آپ کو منتخب کرنے کے لئے حاصل.
      3:
        text: "[طلباء بات کر رہے ہیں] یہ حقیقی حاصل کرنے کے بارے میں ہے. قینچ. میں
          نے مشعلوں سے ایک L بنایا میں نے برچ کے تختے سے باہر ایک A بنا دیا. اس نے
          کام کیا، یہ کام کیا. ہم نے اون سے ایک گھر بنایا!"
      4:
        text: اب آپ جو چاہیں تعمیر کر سکتے ہیں. مزہ کرو!
    mc_congrats_share:
      1:
        text: مبارک ہو! تم نے صرف کمپیوٹر سائنس کے بنیادی عمارت بلاکس سیکھا.
      2:
        text: اب آپ اپنی تخلیق کی تعمیر کے لئے ان بلاکس کا استعمال کرسکتے ہیں. کوئی
          زیادہ ہدایات اور حل کرنے کے لئے کوئی پہیلیاں ہیں. آپ چاہتے ہیں کچھ بھی تعمیر
          کر سکتے ہیں. آپ کو منتخب کرنے کے لئے حاصل.
      3:
        text: "[طلباء بات کر رہے ہیں] یہ حقیقی حاصل کرنے کے بارے میں ہے. قینچ. میں
          نے مشعلوں سے ایک L بنایا میں نے برچ کے تختے سے باہر ایک A بنا دیا. اس نے
          کام کیا، یہ کام کیا. ہم نے اون سے ایک گھر بنایا!"
      4:
        text: جب آپ اپنی تخلیق کر رہے ہوں تو، اپنے دوستوں کے ساتھ اشتراک کرنے کے لئے
          ایک لنک حاصل کرنے کے لئے اشتراک کا انتخاب کریں. مزہ کرو!
    mc_if_statements:
      1:
        text: اب ہم اگر بیانات کے بارے میں جاننے کے لئے جا رہے ہیں. اگر بیانات پروگرام
          سیکھنے کا بنیادی حصہ ہیں. وہ کمپیوٹر کو فیصلے کرنے میں مدد کرتے ہیں.
      2:
        text: تمام کمپیوٹرز اگر بیانات، میرے فون سمیت استعمال کرتے ہیں. مثال کے طور
          پر، جب میں اپنے فون کو غیر مقفل کرتا ہوں، تو یہ کچھ کوڈ چلتا ہے جو کہتا
          ہے کہ اگر میں پاسورڈ صحیح طریقے سے درج کرتا ہوں، تو فون کو غیر مقفل کریں.
          دوسری صورت میں، یہ ایک غلطی کا پیغام دکھاتا ہے.
      3:
        text: آپ استعمال کر سکتے ہیں اگر آپ کے کوڈ میں بیانات سٹیو اور یلس وہ دنیا
          میں دیکھتے ہیں پر رد عمل کا اظہار کرنے کے لئے. مثلاً اگر ان کے سامنے کوئی
          چٹان ہو تو وہ بائیں مڑ سکتے ہیں۔ یا اگر وہ کسی درخت میں بھاگ جائیں تو دائیں
          پھیر لیں۔
      4:
        text: اس صورت میں ہم لاوا میں گرنا نہیں چاہتے۔ یہ لاوا کے لئے منصوبہ بندی
          کرنے کے لئے آسان ہے. ہم اسے سکرین پر دیکھ سکتے ہیں. لیکن لاوا کے بارے میں
          کیا خیال ہے کہ ہم پتھر کے نیچے نہیں کر سکتے؟
      5:
        text: ہم پتھر کی کان کے بعد، ہمیں چیک کرنے کی ضرورت ہوگی اگر آگے بڑھنے سے
          پہلے اس جگہ میں کوئی لاوا ہے. اگر وہاں لاوا ہے تو ہم آگے بڑھنے سے پہلے اپنے
          کردار کے سامنے ایک پتھر رکھنا چاہتے ہیں۔ اس طرح ہم محفوظ طریقے سے آگے بڑھ
          سکتے ہیں. زیادہ کان کنی کے لئے وقت! اور اپنے قدم کو دیکھنے کے لئے if بیان
          کا استعمال کرنا یاد رکھیں.
    mc_intro:
      1:
        text: میرا نام جینس برجنسٹن ہے لیکن میں جیب کے نام سے بہتر طور پر جانا جاتا
          ہوں. میں مائنکرافٹ پر لیڈ ڈویلپر ہوں، یہاں اسٹاک ہوم میں موجانگ میں. مجھے
          لگتا ہے کہ میں گیارہ یا شاید بارہ سال کا تھا اور میں نے پروگرامنگ شروع کر
          دیا کیونکہ میں کھیل بنانا چاہتا تھا. میرے والد کے دوستوں میں سے ایک نے مجھے
          بتایا کہ کھیل بنانے کے لئے، آپ کو پروگرام کرنے کا طریقہ سیکھنے کی ضرورت
          ہے. اس طرح میں نے شروع کیا ہے. مجھے ڈیزائن کرنا اور کھیلوں کے فن تعمیر کا
          پتہ لگانا پسند ہے. یہی ہے جو میں واقعی میں Minecraft کے بارے میں پسند کرتا
          ہوں.
      2:
        text: اگلے گھنٹے کے دوران، آپ کمپیوٹر سائنس کی بنیادی باتیں سیکھنے کے لئے
          ایلیکس یا سٹیو پروگرامنگ کرکے ایک مائنکرافٹ دنیا کے مصنوعی ٹکڑے کے ذریعے
          منتقل کرنے کے لئے جا رہے ہیں.
      3:
        text: روایتی پروگرامنگ متن میں عام طور پر ہے لیکن آج ہم استعمال کریں گے Blockly،
          ایک نظام ہے جو بصری بلاکس کا استعمال کرتا ہے کہ آپ کو ڈریگ اور ڈراپ پروگراموں
          کو لکھنے کے لئے کر سکتے ہیں. ہڈ کے تحت، آپ جاوا سکرپٹ کوڈ پیدا کر رہے ہیں.
      4:
        text: تصورات آپ سیکھیں گے کیا کمپیوٹر پروگرامرز ہر روز استعمال کرتے ہیں اور
          کمپیوٹر سائنس کی بنیاد ہیں. یہاں Mojang میں، ہم Minecraft کام کرنے کے لئے
          ان ہی تصورات کا استعمال کرتے ہیں.
      5:
        text: شروع کرنے سے پہلے، آپ اپنے کردار کو منتخب کریں گے. میں یلیکس منتخب کرنے
          کے لئے جا رہا ہوں. چلو اس کی سکرین کے ارد گرد منتقل کرنے میں مدد ملے گی
          کہ ایک پروگرام کے لئے کوڈ کی تعمیر کرتے ہیں.
      6:
        text: آپ کی سکرین تین اہم حصوں میں تقسیم کیا جاتا ہے. بائیں جانب Minecraft
          پلے اسپیس ہے جہاں آپ کا پروگرام چلایا جائے گا. ہر سطح کے لیے ہدایات ذیل
          میں لکھی گئی ہیں۔
      7:
        text: یہ درمیانی علاقہ ٹول باکس ہے اور ان بلاکس میں سے ہر ایک ایک کمانڈ ہے
          جو ایلیکس کے اعمال کی ہدایت کرتا ہے.
      8:
        text: حق پر سفید جگہ کام کی جگہ کہا جاتا ہے اور یہ ہے جہاں ہم اپنے پروگرام
          کی تعمیر کریں گے.
      9:
        text: اگر ہم MoveForard () گھسیٹیں؛ ہمارے ورک اسپیس کو بلاک کریں اور پھر چلائیں
          پر کلک کریں، کیا ہوتا ہے؟ یلیکس گرڈ پر ایک جگہ آگے بڑھتا ہے.
      10:
        text: اور اگر ہم ایک جگہ آگے بڑھنے کے بعد کچھ کرنا چاہتے ہیں تو کیا ہوگا؟
          ہم اپنے پروگرام کے لئے ایک اور بلاک شامل کر سکتے ہیں. میں turnDight منتخب
          کرنے کے لئے جا رہا ہوں ()؛ بلاک اور میں اسے اپنے MoveForورڈ کے نیچے ھیںچیں
          گے ()؛ اس سنتری لائن ظاہر ہوتا ہے جب تک کہ بلاک. پھر میں اسے چھوڑ دونگا
          اور دو بلاکس ایک دوسرے کے ساتھ تصویر کریں گے. جب ہم دوبارہ چلائیں پریس،
          یلیکس حکم دیتا ہے کہ انجام دے گا اوپر سے سجا دیئے ہمارے ورک اسپیس میں نیچے.
      11:
        text: اگر آپ نے کبھی ایک بلاک کو حذف کرنا چاہتے ہیں، صرف اسٹیک سے واپس ٹول
          باکس پر ھیںچیں.
      12:
        text: 'اپنی تبدیلیوں کو کالعدم کرنے اور سطح کو شروع کرنے کے لئے، ورک اسپیس
          کے اوپری دائیں کونے میں شروع اوور بٹن کا استعمال کریں. ایک اور بات: آپ کو
          باری بلاکس پر تھوڑا مثلث دیکھتے ہیں؟ کسی بھی وقت آپ ان مثلث کو دیکھتے ہیں،
          اس کا مطلب یہ ہے کہ آپ ایک مختلف اختیار منتخب کرسکتے ہیں. کی کوڈنگ شروع
          کرتے ہیں!'
    mc_repeat:
      1:
        text: میں لڈیا ونٹر ہوں، Mojang کی برانڈ ڈائریکٹر اور ہم نے مائنکرافٹ نامی
          ایک چھوٹا سا کھیل بنایا.
      2:
        text: Minecraft میں کرنے کے لئے میرا پسندیدہ چیز دریافت ہے. مجھے غاروں میں
          ایڈونچر سے محبت ہے اور میں دیکھ سکتا ہوں کہ میں کیا تلاش کر سکتا ہوں. جیسا
          کہ کوئی پروگرامر نہیں ہے، میں واقعی میں Minecraft سبق کے ذریعے جانے کے لئے
          بہت حوصلہ افزائی کرتا ہوں اور اصل میں اپنے آپ کو کچھ کوڈنگ سیکھتا ہوں.
      3:
        text: آخری سطح کو بہت سے MoveForورڈ ()؛ بلاکس کی ضرورت تھی. ہم صرف MoveForورڈ
          انجام دینے کے لئے کمپیوٹر بتا سکتا ہے تو یہ آسان ہو جائے گا (); کمانڈ چار
          یا پانچ بار. خوش قسمتی سے ہمارے لئے، کمپیوٹر بہت اچھے ہیں بار بار loops
          کے ساتھ حکم دہرانے میں.
      4:
        text: Minecraft کی تعمیر کرتے وقت، ہم نئی دنیا بنانے کے لئے تمام ابتدائی مواد
          رکھنے کے لئے دوبارہ لوپ استعمال کرتے ہیں. یہ بلاکس کے ہزاروں اور ہزاروں
          ہے. ہم نے بھی چھوٹے طریقوں میں loops کا استعمال کرتے ہیں، مثال کے طور پر
          یلیکس کے پاؤں آگے اور پیچھے منتقل کرنے کے لئے کے طور پر وہ چلتا ہے. دہرائیں
          loops پروگرامنگ کا ایک طاقتور حصہ ہیں.
      5:
        text: رات کی سطح کے اگلے جوڑے میں تو آ رہا ہے، ہم محفوظ رہنے کے لئے ایک گھر
          کی تعمیر کے لئے جا رہے ہیں. ہم بار بار استعمال کرنے کے لئے جا رہے ہیں بلاک
          بہت آسانی سے ایسا کرنے کے لئے.
      6:
        text: ہمارے گھر کی ایک دیوار کی تعمیر کے لئے, ہم یا تو MoveForard کے لئے یلیکس
          بتا سکتے ہیں (); اور چار بار planks کی جگہ یا ہم MoveForard کرنے کے لئے
          اسے بتا سکتے ہیں (); اور ایک تختہ جگہ, پھر اس کمانڈ لے اور اس کارروائی کو
          ایک سے زیادہ بار انجام دینے کے لئے دوبارہ بلاک کا استعمال. اب ہم بار بار
          بلاک پر کلک کریں گے اور اسے بتائیں گے کہ ہم نے اس کارروائی کو انجام دینے
          کے لئے کتنی بار چاہتے ہیں. اب رات کے گرنے سے پہلے ہمارے گھر کی تعمیر کرتے
          ہیں! مزہ کرو.
    opd_closing:
      1:
        image: notes/opd_closing_1.png
        text: مبارک ہو! آپ نے تدریس کمپیوٹر سائنس کے بنیادی اصول آن لائن کورس مکمل
          کیا. اب آپ اساتذہ کی بڑھتی ہوئی کمیونٹی کا حصہ ہیں جو اپنے طالب علموں کو
          مستقبل کے لئے تیار کر رہے ہیں.
      2:
        image: notes/opd_closing_2.png
        text: 'اگر آپ کو مزید مدد کی ضرورت ہے تو ان وسائل کو چیک کریں: 1. forum.code.org
          2. @teachcode ٹویٹر 3 پر. سٹوڈیو کوڈ.org '
    parameters:
      1:
        text: ہیلو، میں Janete ہوں، اور میں زینگا میں ایک انجینئر ہوں.
      2:
        text: ہم ترکون کا ایک گروپ کو اپنی طرف متوجہ کرنا چاہتے ہیں تو کیا ہوگا اور
          ان کی لمبائی مختلف سائز ہو؟
      3:
        text: ہم ہاتھ کی طرف سے ہے کہ تمام کوڈ باہر لکھ سکتے ہیں یا ہم پیرامیٹرز کے
          ساتھ ایک تقریب استعمال کر سکتے ہیں.
      4:
        text: ایسا کرنے کے لئے، “مثلث ڈرا” فنکشن تعریف پر نیلے ستارے پر کلک کریں.
          پھر “ان پٹ” بلاک میں “ان پٹ نام” گھسیٹیں.
      5:
        text: اس کے بعد اگر آپ جگہ میں “لمبائی” لکھتے ہیں جہاں یہ “X” کا کہنا ہے کہ
          اور “درج کریں” دبائیں آپ کو آپ کی تقریب کے لئے لمبائی ان پٹ بنا دیں گے.
      6:
        text: پھر اسٹار پر کلک کریں. اب، آپ متغیر زمرہ پر کلک کرنا چاہتے ہیں اور “لمبائی”
          بلاک کو اپنی فنکشن تعریف کے “آگے بڑھائیں” بلاک میں گھسیٹیں. اور پرانی تعداد
          کے بلاک کو دور ھیںچیں.
      7:
        text: پیرامیٹرز کے ساتھ آپ کی تقریب کو استعمال کرنے کے لئے، افعال کے زمرے
          پر کلک کریں اور اپنے “لمبائی کے ساتھ ایک مثلث اپنی طرف متوجہ” فنکشن کو ھیںچیں.
      8:
        text: اب آپ کو مختلف سائز کے مثلث کو اپنی طرف متوجہ کرنے کے لئے ان پٹ مختلف
          تعداد ریاضی بلاک استعمال کر سکتے ہیں.
    playlab_events:
      1:
        text: اب، ہم کچھ کے بارے میں جاننے کے لئے جا رہے ہیں کہ تمام کھیل پروگرامرز
          روزانہ استعمال کرتے ہیں. انہیں واقعات کہا جاتا ہے۔ ایک واقعہ آپ کے پروگرام
          بتاتا ہے جب کچھ ہوتا ہے کے لئے سننے کے لئے. جب وہ چیز ہوتی ہے، تو یہ ایک
          عمل انجام دیتا ہے.
      2:
        text: واقعات کی کچھ مثالیں ماؤس کلک، ایک تیر بٹن، یا اسکرین پر ایک ٹیپ کے
          لئے سن رہے ہیں.
      3:
        text: یہاں، ہم خلائی بوٹ زمین کو سلام کرنے جا رہے ہیں جب ایک کھلاڑی اس پر
          کلک کرتا ہے. ہم “جب کلک کیا” بلاک استعمال کریں گے اور “کا کہنا ہے کہ” بلاک
          اس سے منسلک کریں گے. جب کھلاڑی خلائی بوٹ پر کلک کرتا ہے تو، اس سے منسلک
          سب کچھ “جب کلک کیا جاتا ہے” ایونٹ بلاک کارکردگی کا مظاہرہ کیا جائے گا. آپ
          کے اجنبی کیا کہتے ہیں؟
      4:
        text: "“جب تیر” بلاکس بھی ہیں. اگر آپ “اقدام” بلاکس کو ان سے منسلک کرتے ہیں،
          تو آپ اپنے اداکاروں کو اوپر، نیچے، بائیں یا دائیں منتقل کرنا شروع کر سکتے
          ہیں. قدم بہ قدم، آپ کا کھیل زیادہ انٹرایکٹو ہو رہا ہے."
    playlab_intro:
      1:
        text: ہم کھیلیں لیب کا استعمال کرتے ہوئے کھیل بنانے کے لئے جا رہے ہیں. اچھا
          کھیل ایک کہانی ہے، اور ہر کہانی اداکار ہے. ہم سیکھیں گے کہ کیسے ہمارے اداکاروں
          کو جادوگروں، اجنبیوں اور جانوروں کی طرح بولنا، منتقل کرنا اور ایک دوسرے
          کے ساتھ بات چیت کرنا ہے۔ اس ٹیوٹوریل کے اختتام تک، آپ کو خرگوش سے ایک کھیل
          کی تعمیر اور اپنے دوستوں کے ساتھ اشتراک کر سکتے ہیں.
      2:
        text: آپ کی سکرین 3 اہم حصوں میں تقسیم کیا جاتا ہے. بائیں جانب کھیل کی جگہ
          ہے جہاں آپ کا پروگرام چلایا جائے گا. ہر سطح کے لیے ہدایات ذیل میں لکھی گئی
          ہیں۔
      3:
        text: درمیانی علاقے ٹول باکس ہے، اور ان بلاکس میں سے ہر ایک کے کوڈ کا ایک
          ٹکڑا ہے. حق پر سفید جگہ کام کی جگہ کہا جاتا ہے اور یہ ہے جہاں ہم اپنے پروگرام
          کی تعمیر کریں گے.
      4:
        text: شروع کرنے کے لئے، آپ کو اپنے بلاکس کو سنتری “جب چلائیں” بلاک سے منسلک
          کرنے کی ضرورت ہوگی. آپ کو ایک دوسرے کے ساتھ ایک سے زیادہ بلاکس لنک کر سکتے
          ہیں آپ کو پیلے رنگ کی لائن دیکھ جب تک ان کو باہر گھسیٹنے، اور پھر وہ ایک
          دوسرے کے ساتھ تصویر کریں گے.
      5:
        text: اس پہلی پہیلی میں، ہمارے اداکار ایک پینگوئن ہے اور ہم اسے “ہیلو!” کا
          کہنا ہے کہ بلاک باہر گھسیٹنے کی طرف سے, جب رن بلاک سے منسلک, اور میں ٹائپ
          “ہیلو.” ہم نے بھی اقدام دائیں کا استعمال کرتے ہوئے کی طرف سے پینگوئن اقدام
          بنانے اور بائیں بلاکس منتقل کر سکتے ہیں. ایک بار جب آپ اپنے بلاکس کو جگہ
          میں رکھتے ہیں، تو آپ کو پروگرام کیا ہے دیکھنے کے لئے رن بٹن کو مارا.
      6:
        text: شروع ہو جاؤ اور آخر کی طرف سے، آپ کو بات چیت، خوش یا اداس کی باری، سکور
          پوائنٹس، یا fireballs پھینک، یا اس سے بھی ایک دوسرے کو غائب کر سکتے ہیں
          کہ کھلاڑیوں کے تمام قسم کے ساتھ آپ کے اپنے کھیل بنانے کے قابل ہو جائے گا.
          یہ آپ اور آپ کو بنانے کے لئے چاہتے ہیں کھیل پر منحصر ہے.
    playlab_repeat_forever:
      1:
        text: یہ “ہمیشہ کے لئے دوبارہ” بلاک ہے. اس بلاک کے اندر کچھ بھی کھیل میں ہمیشہ
          کے لئے ہو جائے گا.
      2:
        text: اگر ہم چاہتے ہیں کہ ایک اداکار بار بار کچھ کرے، کھلاڑی کو کچھ بھی کرنے
          کے بغیر، ہم ان بلاکس کو “ہمیشہ کے لئے دوبارہ” بلاک کے اندر ڈال دیں گے.
      3:
        text: یہ اگلے پہیلی میں، ہمارا مقصد وزرڈ ریاست کی حدود گشت، بائیں اور دائیں
          مسلسل مدد کرنے کے لئے ہے. سیکھنا کہ کس طرح دوبارہ کام کرتا ہے، جب آپ اپنے
          کھیل کی تعمیر کرتے ہیں تو بعد میں آپ کو ایک ٹن وقت بچائے گا.
    poemart_celebration:
      1:
        image: notes/hoc_poem_art_2021_celebration_01.jpg
        text: مبارک ہو! آپ نے صرف کمپیوٹر سائنس کی بنیادی باتیں سیکھیں اور نظم کے
          موڈ کو کیسے تلاش کیا. اب آپ اپنے دوستوں کے ساتھ اشتراک کرنے کے لئے اپنی
          خود کی متحرک نظم بنا سکتے ہیں.
      2:
        image: notes/hoc_poem_art_2021_celebration_02.jpg
        text: کیا آپ احتیاط سے پوری نظم کے لئے ایک سادہ منظر کا انتخاب کریں گے؟
      3:
        image: notes/hoc_poem_art_2021_celebration_03.jpg
        text: یا کیا آپ اپنی نظم کی ہر سطر کے لئے ایک نیا منظر تخلیق کرنے کے لئے بہت
          سے واقعات کا استعمال کریں گے؟
      4:
        image: notes/hoc_poem_art_2021_celebration_04.jpg
        text: ٹیوٹوریل کے اختتام پر آپ اپنے دوستوں کے ساتھ اپنی تخلیق کے لئے ایک لنک
          کا اشتراک کرسکتے ہیں.
      5:
        image: notes/hoc_poem_art_2021_celebration_05.jpg
        text: آپ کی تخیل بڑھاتے اور مزہ ہے!
    poemart_events:
      1:
        image: notes/hoc_poem_art_2021_events_01.jpg
        text: بعض اوقات کسی نظم کا مزاج نظم کے ذریعے جزوی انداز میں تبدیلی کرتا ہے۔
          ایک خوش آواز نظم کے طور پر شروع ہو سکتا ہے اداس ہو جاتا ہے، یا شاید اندھیرا
          روشنی میں بدل جاتا ہے.
      2:
        image: notes/hoc_poem_art_2021_events_02.jpg
        text: اس سرگرمی میں آپ کے واقعات کے ساتھ کام کیا جائے گا. آپ اس ایونٹ بلاک
          کو اپنے پروگرام کے دوران تبدیل کرنے کے لئے استعمال کرسکتے ہیں جب آپ کی نظم
          میں ایک مخصوص لائن ظاہر ہوتی ہے. واقعہ بلاکس آپ کے مرکزی پروگرام میں تصویر
          نہیں ہے کہ نوٹس. اس کے بجائے، وہ اپنے چھوٹے پروگرام بناتے ہیں.
      3:
        image: notes/hoc_poem_art_2021_events_03.jpg
        text: 'اپنی نظم کے ذریعے پڑھیں اور ایک لمحے کو تلاش کریں جہاں موڈ شفٹیں. شمار
          کریں کہ کس لائن پر ہوتا ہے: ایک، دو، تین. آپ کے ایونٹ بلاک میں، لائن کی
          تعداد درج کریں.'
      4:
        image: notes/hoc_poem_art_2021_events_04.jpg
        text: اس کے بعد کسی چیز میں پروگرام موڈ میں تبدیلی کی عکاسی کرنے کے لئے جب
          اس لائن کی سکرین پر ظاہر ہوتا ہے. جب آپ “چلائیں” دبائیں تو آپ دیکھ سکتے
          ہیں کہ آپ کیا کوڈڈ کرتے ہیں.
    poemart_imagery:
      1:
        image: notes/hoc_poem_art_2021_imagery_01.jpg
        text: شاعری میں مصنفین نقش نگاری کا استعمال قاری کے ذہن میں تصویر رنگا نے
          کے لیے کرتے ہیں۔ جب ہم مگرمچھ کا لفظ دیکھتے ہیں تو ہم خود بخود اپنے ذہن
          میں ایک سبز مگرمچھ تصور کرتے ہیں۔ ایک حرکت پذیری میں اس طرح ایک تصویر حاصل
          کرنے کے لئے ہم sprites استعمال کریں گے.
      2:
        image: notes/hoc_poem_art_2021_imagery_02.jpg
        text: یہ آپ کو ایک سپرائٹ بنانے کی اجازت دیتا ہے کہ ایک نیا سپرائٹ بلاک بنانے
          اور اس کے لئے ایک کاسٹیوم منتخب کریں. سپرائٹ آپ نظم کے ساتھ جاتا ہے لگتا
          ہے کہ کے لئے ایک کپڑے کا انتخاب کریں.
      3:
        image: notes/hoc_poem_art_2021_imagery_03.jpg
        text: سپرائٹ کے مقام کو تبدیل کرنے کے لئے، آپ کو مقام بلاک میں پن آئکن پر
          کلک کر سکتے ہیں، اور پھر کلک کریں جہاں آپ اسے کھیل کی جگہ میں جانا چاہتے
          ہیں.
      4:
        image: notes/hoc_poem_art_2021_imagery_04.jpg
        text: اگلے چند سطحوں میں آپ کو کچھ نئے بلاکس نظر آئے گا. یہ بلاک آپ سپرائٹ
          کے سائز کو تبدیل کرنے کی اجازت دیتا ہے. یہ بلاک آپ کے رویے کے ساتھ آپ سپرائٹ
          متحرک کرنے کی اجازت دیتا ہے.
      5:
        image: notes/hoc_poem_art_2021_imagery_05.jpg
        text: اگر کوئی نظم آوارہ بادلوں کا تذکرہ کرتی ہے تو سب سے پہلے بادل سپرائٹ
          بناؤ، پھر اس رویے کے بلاک کو منتخب کریں، اسے باہر کھینچ لیں اور آوارہ گردی
          کا انتخاب کریں۔
      6:
        image: notes/hoc_poem_art_2021_imagery_06.jpg
        text: اس بات کو یقینی بنائیں کہ آپ سپرائٹ ملبوسات میچ. جب آپ چلائیں دبائیں
          گے تو آپ پڑھیں گے اور ایک آوارہ بادل دیکھیں گے.
      7:
        image: notes/hoc_poem_art_2021_imagery_07.jpg
        text: اب آپ نظم میں الفاظ کی وضاحت کرنے کے لیے لغوی تصاویر کا اضافہ کر سکتے
          ہیں۔ مزہ کرو!
    poemart_intro:
      1:
        image: notes/hoc_poem_art_2021_introduction_01.jpg
        text: میرا نام کائیا ہے اور میں شاعر اور کمپیوٹر سائنس کا طالب علم ہوں۔ میں
          نے کوڈنگ سے بہت کچھ سیکھا ہے جس نے مجھے ایک بہتر شاعر بنا دیا ہے، اور میری
          شاعری کے بارے میں بہت کچھ مجھے کوڈنگ میں بہتر بنا دیا ہے، صرف اس لئے کہ
          آپ کو ان الفاظ کے بارے میں سوچنا پڑتا ہے جو آپ منتخب کرتے ہیں اور جو آپ
          تخلیق کرنے جا رہے ہیں ایک بار یہ سب ایک ساتھ آتا ہے.
      2:
        image: notes/hoc_poem_art_2021_introduction_02.jpg
        text: اگلے ایک گھنٹے میں، آپ ایک متحرک نظم بنا کر کمپیوٹر سائنس اور شاعری
          کے بارے میں سیکھ رہے ہیں. جوہر شاعری میں لفظوں کے ساتھ فن بنا رہا ہے۔ میں
          اپنے آپ کو اظہار کرنے کے لیے شاعری تخلیق کرتا ہوں؛ جب میں اپنے منفرد انداز
          اور تال کو استعمال کر کے لکھتا ہوں تو سامعین کے تخیل اور جذبات کو ہلچل دینے
          کی کوشش کرتا ہوں۔
      3:
        image: notes/hoc_poem_art_2021_introduction_03.jpg
        text: فن کی طرح نظموں کی تشریح کئی مختلف طریقوں سے کی جا سکتی ہے۔ ایک ہی نظم
          کا مطلب مختلف لوگوں کے لیے بہت مختلف چیزیں ہو سکتا ہے اور ہر نظم کا اپنا
          مزاج ہوتا ہے۔ مزاج وہ احساس ہے جو آپ کو ایک نظم سے ملتا ہے۔ بعض اوقات لوگ
          بعض رنگوں اور تصورات کو مختلف موڈ سے ملاتے ہیں۔
      4:
        image: notes/hoc_poem_art_2021_introduction_04.jpg
        text: مثال کے طور پر، رنگ پیلے رنگ مجھے خوش محسوس کرتا ہے. اور جب میں خوف
          جیسے موڈ کے بارے میں سوچتا ہوں تو میں کبھی کبھی اپنے سر میں اندھیری اور
          طوفانی رات کی تصویر بناتا ہوں۔ اس سرگرمی میں آپ کو یہ محسوس ہوتا ہے کہ کس
          طرح کی بنیاد پر ایک نظم کے موڈ کی وضاحت اور متحرک کرنے کا موقع ملے گا.
      5:
        image: notes/hoc_poem_art_2021_introduction_05.jpg
        text: چلو آپ کو کوڈ کا استعمال کرتے ہوئے یہ کروں گا کہ کس طرح پر ایک نظر ڈالیں.
          آپ کو آپ کی سکرین تین اہم حصوں میں تقسیم کیا جاتا ہے کہ دیکھیں گے. بائیں
          طرف کھیل کی جگہ ہے. یہ وہ جگہ ہے جہاں آپ کی متحرک نظم نظر آئے گی۔ ہر نظم
          کا ایک عنوان اور ایک مصنف ہوتا ہے۔
      6:
        image: notes/hoc_poem_art_2021_introduction_06.jpg
        text: یہ درمیانی علاقہ ٹول باکس ہے۔ آپ سبق کے ذریعے جانے کے طور پر کوڈ کے
          نئے بلاکس اس خلا میں دستیاب ہو جائے گا.
      7:
        image: notes/hoc_poem_art_2021_introduction_07.jpg
        text: دائیں جانب کی جگہ کام کی جگہ ہے. آپ اپنے پروگرام کی تعمیر کے لئے ٹول
          باکس سے باہر اور ورک اسپیس میں بلاکس کو ھیںچیں کر سکتے ہیں.
      8:
        image: notes/hoc_poem_art_2021_introduction_08.jpg
        text: ہر سطح کے لئے ہدایات سکرین کے سب سے اوپر پر یہاں ہو جائے گا. اگر آپ
          اشارہ چاہتے ہیں تو، روشنی بلب پر کلک کریں.
      9:
        image: notes/hoc_poem_art_2021_introduction_09.jpg
        text: سب سے پہلے، ایک نظم منتخب کریں جو آپ پسند کرتے ہیں. ہر قسم کی نظمیں
          ہیں اور آپ ہر سطح پر ایک نیا انتخاب کر سکتے ہیں.
      10:
        image: notes/hoc_poem_art_2021_introduction_10.jpg
        text: اگلا، آپ اپنی نظم کو متحرک کرنے کے لئے ٹول باکس سے بلاکس کو اپنے ورک
          اسپیس میں ڈریگ کریں گے. آپ پس منظر کا رنگ یا اثر منتخب کر سکتے ہیں جو آپ
          کی نظم کے موڈ سے ملتا ہے، پھر اپنی نظم کو عمل میں دیکھنے کے لیے “چلائیں”
          پر کلک کریں۔
      11:
        image: notes/hoc_poem_art_2021_introduction_11.jpg
        text: مختلف نظموں کو پڑھنے میں کچھ وقت گزاریں اور ایک ایسے شخص کو تلاش کریں
          جو آپ میں جذبات کو جنم دیتا ہے. آپ کو لگتا ہے کہ کس طرح کے بارے میں سوچو،
          اور آپ تصور اور کوڈ کے ذریعے اس احساس کو کس طرح بات چیت کر سکتے ہیں.
    repeat_block:
      1:
        image: notes/repeat_block.png
        text: ایک بار بار بلاک آپ کو اس کے اندر کوڈ لوپ کی اجازت دیتا ہے کے طور پر
          کئی بار کے طور پر آپ اسے بتا.
    starwars_blocks_congrats:
      1:
        text: ہیلو، میرا نام ایلس ہے اور میں یہاں Code.org میں پروڈکٹ اور انجینئرنگ
          ٹیمیں چلاتی ہوں اور میں نے اس ٹیوٹوریل پر کام کیا ہے جسے آپ مکمل طور پر
          کھیل رہے ہیں۔
      2:
        text: آپ نے اسے آخری لیول تک پہنچا دیا۔ مبارکباد! آپ نے ہر وہ چیز سیکھ لی
          ہے جس کی آپ کو اپنی اسٹار وارز گیم بنانے کے لیے جاننے کی ضرورت ہوتی ہے۔
          اب مزید کوئی ہدایات نہیں ہیں، حل کرنے کے لئے کوئی پزل نہیں ہیں۔ آپ خود کی
          گیم بنا سکتے ہیں اور آپ اس کے کام کرنے کے طریقوں کا انتخاب کرتے ہیں۔ ایک
          اور بات، آپ نے مزید زیادہ کرنے کے لئے نئی آوازیں اور نئی کماںڈز غیر مقفل
          کی ہیں۔
      3:
        text: "[طلباء گفتگو کرتے ہوئے] لہذا ہم نے دراصل ایک گیم بنائی جہاں آپ پفر
          پِگز حاصل کرنے پر اپنے پوائنٹس حاصل کرتے ہیں۔ ٹوسٹ ہر بار ہوتا ہے جب آپ
          پفر پگ حاصل کرتے ہیں تو اسٹارم ٹروپر نمودار ہوتا ہے۔ دراصل جب پوری اسکرین
          پفر پگز سے بھر جاتی ہے اور پھر جب آپ ان میں سے 10,000 کو چھوتے ہیں، تو آپ
          جیت جاتے ہیں۔"
      4:
        text: "[طلباء گفتگو کرتے ہوئے] ہم نے ایک ایسی گیم بنائی ہے جہاں آپ ہار نہیں
          سکتے اور جسے چیز کو بھی آپ مارتے ہیں وہ آپ کو پوائنٹس دیتا ہے۔ میرے پروگرام
          کے لئے، میں نے کلیدیں الٹ دی ہیں تاکہ جب بھی آپ اوپر والے پر کلک کرتے ہیں
          تو آپ کا کردار نیچے چلا جاتا ہے اور جب آپ دائیں پر کلک کرتے ہیں تو آپ کا
          کردار بائیں طرف چلا جاتا ہے۔ یہ واقعی بہت مشکل ہے! اگر آپ گیم کے ڈویلپر
          ہیں تو بعض اوقات آپ کو صرف ایک فائدہ، ایک غیرمنصفانہ فائدہ حاصل ہوتا ہے۔
          کیا میں نے یہ  کر دکھایا؟ آہا!"
      5:
        text: جب آپ اپنی گیم بنا لیتے ہیں، تو لنک حاصل کرنے کے لئے اشتراک کا انتخاب
          کریں جس کا آپ دوستوں کے ساتھ اشتراک کر سکتے ہیں یا اپنے فون پر اپنی گیم
          کھیل سکتے ہیں۔ مزے کریں!
    starwars_blocks_events:
      1:
        text: ہیلو، میرا نام چاریٹا کارٹر ہے۔ میں یہاں والٹ ڈزنی امیجینیئرنگ میں ایک
          سینئر تخلیقی پروڈیوسر ہوں۔ میں ٹیموں کی رہنمائی کی ذمہ دار ہوں جو دراصل
          وہ کشش پیدا کرتی ہیں جن کا ہمارے مہمانوں تجربہ کرتے ہیں۔ ہم ہمیشہ ایسے طریقوں
          کی تلاش میں رہتے ہیں جنہیں ہم بہتر بنا سکتے ہیں اور اپنے مہمانوں کے لیے
          بہتر تجربہ بنا سکیں اور ٹیکنالوجی سب سے زیادہ اہم ہے۔
      2:
        text: مبارکباد، آپ نے یہ کر دکھایا! آپ نے BB-8 پروگرام کیا۔ اب مجھے لگتا ہے
          کہ ہم کسی مشکل چیز کے لیے تیار ہیں۔ آئیں اس کے لیے چلتے ہیں۔ اب چونکہ آپ
          نے پروگرامنگ کی بنیادی باتیں سیکھ لی ہیں، اب ہم اپنی گیم بنانے کے لیے وقت
          پر واپس آرہے ہیں، جس میں R2-D2 اور C-3PO کردار تشکیل دینا۔
      3:
        text: 'ایک گیم بنانے کے لیے، ہمیں کسی ایسی چیز کے بارے میں جاننے کی ضرورت
          ہوتی ہے جسے گیم پروگرامرز ہر روز استعمال کرتے ہیں: انہیں ایونٹس کہا جاتا
          ہے۔ ایونٹس آپ کے پروگرام کو کچھ واقع ہونے کے دوران سننے یا انتظار کرنے کا
          کہتے ہیں اور پھر جب یہ ہو جاتا ہے، تو یہ ایک کارروائی کرتا ہے۔'
      4:
        text: ایونٹس کی کچھ مثالیں ماؤس کلک، تیر والے بٹن یا اسکرین پر ٹیپ کے لیے
          سننا ہے۔
      5:
        text: یہاں ہم ایک باغی پائلٹ کو پیغام دینے کے لیے R2-D2 کو اوپر کی جانب لے
          جانے لگے ہیں اور پھر دوسرے باغی پائلٹ تک نیچے لے جائیں گے۔ ہم اسے چلانے
          کے لیے ایونٹس کا استعمال کریں گے۔ جب کھلاڑی اوپر/نیچے تیر والے بٹنوں، یا
          اوپر/نیچے والے بٹنوں کا استعمال کرتا ہے۔
      6:
        text: ہم whenUp() ایونٹ بلاک کا استعمال کرتے ہیں اور goUp() بلاک کو اس سے
          منسلک کرتے ہیں۔ جب کھلاڑی اوپر تیر والے بٹن کو دباتا ہے، تو whenUp() بلاک
          سے منسلک کوڈ چلنے لگتا ہے۔ اور ہم R2-D2 کو نیچے کی طرف لانے کے لیے بھی ایسا
          ہی کریں گے۔ اب اپنے ڈروئیڈ کو پیشگی میں کنٹرول کرنے کے لیے تمام کوڈ لکھنے
          کے بجائے، ہم R2-D2 سے بٹن دبانے پر ایونٹس پر ردعمل کرا سکتے ہیں جس سے وہ
          اسکرین پر ادھر ادھر جاتا ہے۔
      7:
        text: قدم بہ قدم، آپ کی گیم مزید متعامل ہوتی جا رہی ہے۔
    starwars_blocks_intro:
      1:
        text: 'ہیلو میں کیتھلین کینیڈی ہوں اور میں اسٹار وارز: دی فورس اویکنز کی پروڈیوسر
          ہوں۔ آج آپ ہمارے ستاروں میں سے ایک، BB-8 کے ساتھ کام کریں گے۔ BB-8 ایک کروی
          ڈروئیڈ ہے۔ وہ جو کرتا ہے اور جو بھی حرکت کرتا ہے اسے کمپیوٹر سافٹ ویئر کے
          ذریعے کنٹرول کیا جاتا ہے۔ کمپیوٹر سائنس ہر صنعت کو متاثر کرتی ہے، مارکیٹنگ
          سے لے کر نگہداشت صحت اور فلم تک۔ درحقیقت، سینکڑوں کمپیوٹر انجینئرز مل کر
          دی فورس اویکنز جیسی فلم بنانے کے لیے کام کرتے ہیں۔'
      2:
        text: ہیلو، میں راچیل روز ہوں۔ میں ILM میں ایک سینئر R&D انجینئر ہوں اور میں
          اینیمیشن اور مخلوق بنانے کی ٹیم کی قیادت کرتی ہوں۔ دی فورس اویکنز میں، میں
          کرداروں کی رگز تیار کرنے میں مدد کرنے کی ذمہ دار ہوں جو اس کردار کے وہ حصے
          ہوتے ہیں جو حرکت کرتے ہیں جس سے کردار بہت دور ایک کہکشاں میں انتہائی قابل
          یقین دکھائی دے سکتا ہے۔
      3:
        text: اگلے گھنٹے میں، ہم اپنی اسٹار وارز گیم بنانے جا رہے ہیں جو ہم آپ کو
          پروگرامنگ کے بنیادی تصورات سکھائے گی۔ عام طور پر پروگرام کرنا ہی وہ تمام
          متن ہوتا ہے لیکن ہم یہاں بلاکس استعمال کرنے لگے ہیں تاکہ ہم پروگرام لکھنے
          کے لیے گھسیٹ کر لائیں اور چھوڑ سکیں۔ شروع کرنے کے لیے، ہم سکریپ کے تمام
          حصوں کو جمع کرنے کے لیے BB-8 کے چلنے کے لئے پروگرام کرنے کے لئے رے کے ساتھ
          کام کرنے لگے ہیں۔
      4:
        text: آپ کی سکرین کو تین حصوں میں تقسیم کر دیا جاتا ہے۔ بائیں جانب اسٹار وارز
          گیم کی جگہ ہے جہاں کوڈ چلے گا۔ ہر لیول کے لیے ہدایات گیم اسپیس کے نیچے لکھی
          جاتی ہیں۔
      5:
        text: یہ وسطی جگہ ٹول باکس ہے اور ان میں سے ہر بلاک ایک کمانڈ ہے جسے BB-8
          سمجھ سکتا ہے۔
      6:
        text: دائیں جانب سفید جگہ کو کام کی جگہ کہا جاتا ہے اور یہیں پر ہم اپنا پروگرام
          بنانے لگے ہیں۔
      7:
        text: اگر میں moveLeft(); کو اپنی کام کی جگہ پر گھسیٹ کر لاتی ہوں، تو کیا
          ہوتا ہے؟ BB-8 گرڈ پر ایک بلاک دائیں آگے بڑھتا ہے۔
      8:
        text: اور اگر میں moveLeft(); بلاک کے بعد BB-8 سے کچھ کرانا چاہتی ہوں تو کیا؟
          میں اپنے پروگرام میں ایک اور بلاک شامل کر سکتی ہوں۔ میں moveUp(); بلاک کا
          انتخاب کرنے لگی ہوں اور جب تک ہائی لائٹ ظاہر نہیں ہوتا میں اسے اپنے moveLeft();
          بلاک کے نیچے گھسیٹ لاؤں گی۔ پھر میں اسے چھوڑ دوں گی اور دو بلاکس آپس میں
          مل جائیں گے۔ جب میں دوبارہ چلائیں دباتی ہوں، تو BB-8 ان کمانڈز کو انجام
          دے گا جو ہماری کام کی جگہ پر اوپر سے نیچے تک لگائی گئی ہیں۔
      9:
        text: اگر آپ کبھی کسی بلاک کو حذف کرنا چاہتے ہیں، تو اسے بس انبار سے ہٹا دیں
          اور اسے واپس ٹول باکس میں گھسیٹ کر لائیں۔
      10:
        text: آپ چلائیں دبانے کے بعد، آپ BB-8 کو دوبارہ شروع پر لانے کے لیے ہمیشہ
          دوبارہ سیٹ کریں بٹن کو دبا سکتے ہیں۔ تو آئیں اب شروع کرتے ہیں!
    starwars_congrats:
      1:
        text: ہیلو، میرا نام ایلس ہے اور میں یہاں Code.org میں پروڈکٹ اور انجینئرنگ
          ٹیمیں چلاتی ہوں اور میں نے اس ٹیوٹوریل پر کام کیا ہے جسے آپ مکمل طور پر
          کھیل رہے ہیں۔
      2:
        text: آپ نے اسے آخری لیول تک پہنچا دیا۔ مبارکباد! آپ نے ہر وہ چیز سیکھ لی
          ہے جس کی آپ کو اپنی اسٹار وارز گیم بنانے کے لیے جاننے کی ضرورت ہوتی ہے۔
          اب مزید کوئی ہدایات نہیں ہیں، حل کرنے کے لئے کوئی پزل نہیں ہیں۔ آپ خود کی
          گیم بنا سکتے ہیں اور آپ اس کے کام کرنے کے طریقوں کا انتخاب کرتے ہیں۔ ایک
          اور بات، آپ نے مزید زیادہ کرنے کے لئے نئی آوازیں اور نئی کماںڈز غیر مقفل
          کی ہیں۔
      3:
        text: "[طلباء گفتگو کرتے ہوئے] لہذا ہم نے دراصل ایک گیم بنائی جہاں آپ پفر
          پِگز حاصل کرنے پر اپنے پوائنٹس حاصل کرتے ہیں۔ ٹوسٹ ہر بار ہوتا ہے جب آپ
          پفر پگ حاصل کرتے ہیں تو اسٹارم ٹروپر نمودار ہوتا ہے۔ دراصل جب پوری اسکرین
          پفر پگز سے بھر جاتی ہے اور پھر جب آپ ان میں سے 10,000 کو چھوتے ہیں، تو آپ
          جیت جاتے ہیں۔"
      4:
        text: "[طلباء گفتگو کرتے ہوئے] ہم نے ایک ایسی گیم بنائی ہے جہاں آپ ہار نہیں
          سکتے اور جسے چیز کو بھی آپ مارتے ہیں وہ آپ کو پوائنٹس دیتا ہے۔ میرے پروگرام
          کے لئے، میں نے کلیدیں الٹ دی ہیں تاکہ جب بھی آپ اوپر والے پر کلک کرتے ہیں
          تو آپ کا کردار نیچے چلا جاتا ہے اور جب آپ دائیں پر کلک کرتے ہیں تو آپ کا
          کردار بائیں طرف چلا جاتا ہے۔ یہ واقعی بہت مشکل ہے! اگر آپ گیم کے ڈویلپر
          ہیں تو بعض اوقات آپ کو صرف ایک فائدہ، ایک غیرمنصفانہ فائدہ حاصل ہوتا ہے۔
          کیا میں نے یہ  کر دکھایا؟ آہا!"
      5:
        text: جب آپ اپنی گیم بنا لیتے ہیں، تو لنک حاصل کرنے کے لئے اشتراک کا انتخاب
          کریں جس کا آپ دوستوں کے ساتھ اشتراک کر سکتے ہیں یا اپنے فون پر اپنی گیم
          کھیل سکتے ہیں۔ مزے کریں!
    starwars_events:
      1:
        text: ہیلو، میرا نام چاریٹا کارٹر ہے۔ میں یہاں والٹ ڈزنی امیجینیئرنگ میں ایک
          سینئر تخلیقی پروڈیوسر ہوں۔ میں ٹیموں کی رہنمائی کی ذمہ دار ہوں جو دراصل
          وہ کشش پیدا کرتی ہیں جن کا ہمارے مہمانوں تجربہ کرتے ہیں۔ ہم ہمیشہ ایسے طریقوں
          کی تلاش میں رہتے ہیں جنہیں ہم بہتر بنا سکتے ہیں اور اپنے مہمانوں کے لیے
          بہتر تجربہ بنا سکیں اور ٹیکنالوجی سب سے زیادہ اہم ہے۔
      2:
        text: مبارکباد، آپ نے یہ کر دکھایا! آپ نے BB-8 پروگرام کیا۔ اب مجھے لگتا ہے
          کہ ہم کسی مشکل چیز کے لیے تیار ہیں۔ آئیں اس کے لیے چلتے ہیں۔ اب چونکہ آپ
          نے پروگرامنگ کی بنیادی باتیں سیکھ لی ہیں، اب ہم اپنی گیم بنانے کے لیے وقت
          پر واپس آرہے ہیں، جس میں R2-D2 اور C-3PO کردار تشکیل دینا۔
      3:
        text: 'ایک گیم بنانے کے لیے، ہمیں کسی ایسی چیز کے بارے میں جاننے کی ضرورت
          ہوتی ہے جسے گیم پروگرامرز ہر روز استعمال کرتے ہیں: انہیں ایونٹس کہا جاتا
          ہے۔ ایونٹس آپ کے پروگرام کو کچھ واقع ہونے کے دوران سننے یا انتظار کرنے کا
          کہتے ہیں اور پھر جب یہ ہو جاتا ہے، تو یہ ایک کارروائی کرتا ہے۔'
      4:
        text: ایونٹس کی کچھ مثالیں ماؤس کلک، تیر والے بٹن یا اسکرین پر ٹیپ کے لیے
          سننا ہے۔
      5:
        text: یہاں ہم ایک باغی پائلٹ کو پیغام دینے کے لیے R2-D2 کو اوپر کی جانب لے
          جانے لگے ہیں اور پھر دوسرے باغی پائلٹ تک نیچے لے جائیں گے۔ ہم اسے چلانے
          کے لیے ایونٹس کا استعمال کریں گے۔ جب کھلاڑی اوپر/نیچے تیر والے بٹنوں، یا
          اوپر/نیچے والے بٹنوں کا استعمال کرتا ہے۔
      6:
        text: ہم whenUp() ایونٹ بلاک کا استعمال کرتے ہیں اور goUp() بلاک کو اس سے
          منسلک کرتے ہیں۔ جب کھلاڑی اوپر تیر والے بٹن کو دباتا ہے، تو whenUp() بلاک
          سے منسلک کوڈ چلنے لگتا ہے۔ اور ہم R2-D2 کو نیچے کی طرف لانے کے لیے بھی ایسا
          ہی کریں گے۔
      7:
        text: ایسا کرنے کے لیے، ہم ایک whenUp() نامی کمانڈ استعمال کریں گے۔ جب آپ
          کمانڈ کو ٹول باکس سے باہر کھسیٹ کر لاتے ہیں، تو آپ دیکھیں گے کہ یہ سیمی
          کولن کی بجائے کرلی بریکٹ سے شروع اور ختم ہوتی ہے۔ اس سے ہمیں دوسری کمانڈز
          کو درمیان میں رکھنے کی جگہ ملتی ہے۔ ہر وہ کمانڈ جو ہم ان بریکٹس کے اندر
          رکھتے ہیں چلنے لگے گی جب کھلاڑی اوپر والے تیر کو دباتا ہے۔
      8:
        text: ہم چاہتے ہیں کہ R2-D2 اوپر جائے تو آئیے ایک goUp(); بلاک کو کمانڈ کے
          اندر ڈالیں۔ اور ہم R2-D2 کو نیچے کی طرف لے جانے کے لیے بھی ایسا ہی کریں
          گے۔
      9:
        text: اب اپنے ڈروئیڈ کو پیشگی میں کنٹرول کرنے کے لیے تمام کوڈ لکھنے کے بجائے،
          ہم R2-D2 سے بٹن دبانے پر ایونٹس پر ردعمل کرا سکتے ہیں جس سے وہ اسکرین پر
          ادھر ادھر جاتا ہے۔ قدم بہ قدم، آپ کی گیم مزید متعامل ہوتی جا رہی ہے۔
    starwars_intro:
      1:
        text: 'ہیلو، میں کیتھلین کینیڈی ہوں اور میں اسٹار وارز: دی فورس اویکنز کی
          پروڈیوسر ہوں۔ آج آپ ہمارے ستاروں میں سے ایک، BB-8 کے ساتھ کام کریں گے۔ BB-8
          ایک کروی ڈروئیڈ ہے۔ وہ جو کرتا ہے اور جو بھی حرکت کرتا ہے اسے کمپیوٹر سافٹ
          ویئر کے ذریعے کنٹرول کیا جاتا ہے۔ کمپیوٹر سائنس ہر صنعت کو متاثر کرتی ہے،
          مارکیٹنگ سے لے کر نگہداشت صحت اور فلم تک۔ درحقیقت، سینکڑوں کمپیوٹر انجینئرز
          مل کر دی فورس اویکنز جیسی فلم بنانے کے لیے کام کرتے ہیں۔'
      2:
        text: ہیلو میں راچیل روز ہوں، میں ILM میں ایک سینئر R&D انجینئر ہوں اور میں
          اینیمیشن اور مخلوق بنانے کی ٹیم کی قیادت کرتی ہوں۔ دی فورس اویکنز میں، میں
          کرداروں کی رگز تیار کرنے میں مدد کرنے کی ذمہ دار ہوں جو اس کردار کے وہ حصے
          ہوتے ہیں جو حرکت کرتے ہیں جس سے کردار بہت دور ایک کہکشاں میں انتہائی قابل
          یقین دکھائی دے سکتا ہے۔
      3:
        text: اگلے گھنٹے میں، ہم اپنی اسٹار وارز گیم بنانے جا رہے ہیں۔ ہم آپ کو پروگرامنگ
          کے بنیادی تصورات سکھائیں گے۔ عام طور پر پروگرام کرنا ہی وہ تمام متن ہوتا
          ہے لیکن ہم یہاں بلاکس استعمال کرنے لگے ہیں تاکہ ہم پروگرام لکھنے کے لیے
          گھسیٹ کر لائیں اور چھوڑ سکیں۔ اس کے پیچھے، آپ بدستور کوڈ بنا رہے ہوتے ہیں۔
          بلاکس کے ساتھ بنیادی باتیں آزمانے کے بعد، ہم آپ کو جاوا اسکرپٹ پر تبدیل
          کریں گے، جو ویب پر سب سے زیادہ مقبول پروگرامنگ زبانوں میں سے ایک ہے۔
      4:
        text: شروع کرنے کے لیے، ہم سکریپ کے تمام حصوں کو جمع کرنے کے لیے BB-8 کے چلنے
          کے لئے پروگرام کرنے کے لئے رے کے ساتھ کام کرنے لگے ہیں۔ آپ کی سکرین کو تین
          حصوں میں تقسیم کر دیا جاتا ہے۔ بائیں جانب اسٹار وارز گیم کی جگہ ہے، جہاں
          کوڈ چلے گا۔ ہر لیول کے لیے ہدایات گیم اسپیس کے نیچے لکھی جاتی ہیں۔
      5:
        text: یہ وسطی جگہ ٹول باکس ہے اور ان میں سے ہر بلاک ایک کمانڈ ہے جسے BB-8
          سمجھ سکتا ہے۔
      6:
        text: دائیں جانب سفید جگہ کو کام کی جگہ کہا جاتا ہے اور یہیں پر ہم اپنا پروگرام
          بنانے لگے ہیں۔
      7:
        text: اگر میں moveLeft(); کو اپنی کام کی جگہ پر گھسیٹ کر لاتی ہوں اور چلائیں
          دباتی ہوں، تو کیا ہوتا ہے؟ BB-8 گرڈ پر ایک بلاک دائیں آگے بڑھتا ہے۔
      8:
        text: اور اگر میں moveLeft(); بلاک کے بعد BB-8 سے کچھ کرانا چاہتی ہوں تو کیا؟
          میں اپنے پروگرام میں ایک اور بلاک شامل کر سکتی ہوں۔ میں moveUp(); بلاک کا
          انتخاب کرنے لگی ہوں اور جب تک ہائی لائٹ ظاہر نہیں ہوتا میں اسے اپنے moveLeft();
          بلاک کے نیچے گھسیٹ لاؤں گی۔  پھر میں اسے چھوڑ دوں گی اور دو بلاکس آپس میں
          مل جائیں گے۔
      9:
        text: جب میں دوبارہ چلائیں دباتی ہوں، تو BB-8 ان کمانڈز کو انجام دے گا جو
          ہماری کام کی جگہ پر اوپر سے نیچے تک لگائی گئی ہیں۔ اگر آپ کبھی کسی بلاک
          کو حذف کرنا چاہتے ہیں، تو اسے بس انبار سے ہٹا دیں اور اسے واپس ٹول باکس
          میں گھسیٹ کر لائیں۔
      10:
        text: آپ چلائیں دبانے کے بعد، آپ BB-8 کو دوبارہ شروع پر لانے کے لیے ہمیشہ
          دوبارہ سیٹ کریں بٹن کو دبا سکتے ہیں۔ تو آئیں اب شروع کرتے ہیں!
    starwars_typing:
      1:
        text: بلاکس کے اندر ہم جو استعمال کرتے رہے ہیں وہ جاوا اسکرپٹ کمانڈ ہیں۔ جاوا
          اسکرپٹ آج کل کے پروفیشنل ڈویلپرز کے لیے سب سے زیادہ مقبول پروگرامنگ زبان
          ہے۔ بلاکس کوڈ کرنا سیکھنا شروع کرنے کا ایک بہترین طریقہ ہیں اور درحقیقت،
          ہارورڈ اور برکلے جیسی بڑی یونیورسٹیاں اس طرح سے پڑھانا شروع کرتی ہیں۔ لیکن
          جب ہم بنیادی باتیں سیکھ لیتے ہیں، تو انجینئر ٹائپ کر کے کوڈ لکھتے ہیں کیونکہ
          اس سے ہم تیزی سے کام کر سکتے ہیں۔
      2:
        text: بلاکس کے اندر ہم جو استعمال کرتے رہے ہیں وہ جاوا اسکرپٹ کمانڈ ہیں۔ جاوا
          اسکرپٹ آج کل کے پروفیشنل ڈویلپرز کے لیے سب سے زیادہ مقبول پروگرامنگ زبان
          ہے۔ بلاکس کوڈ کرنا سیکھنا شروع کرنے کا ایک بہترین طریقہ ہیں اور درحقیقت،
          ہارورڈ اور برکلے جیسی بڑی یونیورسٹیاں اس طرح سے پڑھانا شروع کرتی ہیں۔ لیکن
          جب ہم بنیادی باتیں سیکھ لیتے ہیں، تو انجینئر ٹائپ کر کے کوڈ لکھتے ہیں کیونکہ
          اس سے ہم تیزی سے کام کر سکتے ہیں۔
      3:
        text: اپنی کام کی جگہ کے بالائی دائیں کونے میں، آپ بلاک سے بطور متن کوڈ ٹائپ
          کرنے پر تبدیل کرنے کے لیے کسی بھی پزل پر متن بٹن دکھائیں پر کلک کر سکتے
          ہیں۔
      4:
        text: اگلے سبق میں، ہم آپ کو ٹائپنگ موڈ میں شروع کریں گے۔ یہاں آپ ابھی بھی
          ٹول باکس سے بلاک کو گھسیٹ کر لا سکتے ہیں یا آپ کمانڈ کا نام ٹائپ کر سکتے
          ہیں۔ جیسے ہی آپ ٹائپ کرنا شروع کرتے ہیں، تو آپ کو ممکنہ کمانڈز کے نام نیچے
          دکھائے جائیں گے جہاں آپ ٹائپ کر رہے ہیں۔ کمانڈ کا پورا نام ٹائپ کرنے کے
          بجائے، آپ تیزی سے آگے بڑھنے کے لیے ان میں سے ایک کو منتخب کر سکتے ہیں۔ میرے
          کام میں، میں کوڈ لکھتے وقت تمام وقت خودکار مکمل خصوصیت استعمال کرتی ہوں۔
      5:
        text: جب آپ کوڈ ٹائپ کر رہے ہوتے ہیں، تو کمپیوٹر کو آپ کے آپ کے عین درست بننے
          کی ضرورت ہوتی ہے۔ آپ کو کمانڈ کے نام کے عین درست ہجے اور بڑے حروف، بشمول
          قوسین اور سیمی کولن، میں لکھنے کی ضرورت ہوتی ہے۔ یہاں تک کہ ایک معمولی ٹائپنگ
          کی غلطی کے ساتھ بھی، BB-8 کوڈ کو نہیں سمجھ سکتا اور نہ ہی حرکت کر سکے گا۔
      6:
        text: جب آپ لائن پر کوئی غلطی کرتے ہیں، تو ایڈیٹر اسے آپ کے لیے نمایاں کر
          دیتا ہے تاکہ آپ اسے ٹھیک کرنے کے لیے اپنے متن کو تبدیل کرنے کی کوشش کر سکیں۔
      7:
        text: اگر آپ پھنس جاتے ہیں، تو آپ ہمیشہ اسٹارٹ اوور بٹن سے بالکل آغاز سے شروع
          کر سکتے ہیں اور اوپر دائیں کونے میں کلک کر کے کسی بھی وقت بلاک موڈ پر واپس
          جا سکتے ہیں۔ ٹھیک ہے، آئیں ٹائپنگ کو آزماتے ہیں! اور اگر آپ غلطیاں کر دیتے
          ہیں، تو مایوس مت ہوں۔ اسے درست کرنے کے لیے ہر ایک کو چند کوششوں کی ضرورت
          ہوتی ہے۔
    teaching_csf_how_it_works:
      1:
        image: notes/teaching_cs_fundamentals_1.png
        text: یہ کورس مراحل میں ٹوٹ گیا ہے.
      2:
        image: notes/teaching_cs_fundamentals_2.png
        text: پہلے چند مراحل متعارف کرائے جائیں گے کہ کمپیوٹر سائنس کیا ہے، ساتھ ساتھ
          کچھ کلیدی الفاظ بھی.
      3:
        image: notes/teaching_cs_fundamentals_3.png
        text: اگلا، آپ سیکھیں گے کہ کس طرح آپ کے طالب علموں کو کوڈ کرنا ہوگا. کورس
          کے آخری مراحل آپ کو آپ کے کلاس روم میں کمپیوٹر سائنس کو سکھانے کے لئے ایک
          منصوبہ بنانے میں مدد ملے گی. کورس کے دوران، آپ کو پلگ ان دونوں کی مثالیں
          دیکھیں گے - یا آن لائن - سبق، ساتھ ساتھ ان پلگ ان سبق جو کمپیوٹر کے بغیر
          کئے جاتے ہیں.
      4:
        image: notes/teaching_cs_fundamentals_4.png
        text: سیکھنے کا پلیٹ فارم آپ کی ترقی کو ٹریک کرے گا، لہذا آپ کسی بھی وقت چھوڑ
          سکتے ہیں.
    tutorial_puzzle_challenge:
      1:
        text: جب آپ اولیویا بڑھتے ہیں تو آپ کیا کرنا چاہتے ہیں؟ ایک خلائی مسافر۔ کیا
          آپ کو معلوم ہے کہ کمپیوٹر پروگرامر کیا ہے؟ جی ہاں، ام نہیں. ام انتظار کیا؟
          مجھے واقعی اس بات کا یقین نہیں ہے کہ اس کی وضاحت کیسے کی جائے کمپیوٹر پروگرامنگ
          بہت آسان ہے. یہ ایک ہدایت کی طرح ہدایات کا ایک سیٹ ہے، آپ کو اپنے مطلوبہ
          نتائج حاصل کرنے کے لئے مرحلہ وار ان کی پیروی کرنا ہوگا.
      2:
        text: میں پکسلز کی تعداد کو تبدیل کر سکتے ہیں، لائن کی لمبائی، اس ڈراپ ڈاؤن
          کا استعمال کرتے ہوئے. یہ دوبارہ کب تک تھا؟ آپ رن بٹن کے نیچے دیکھ کر دوبارہ
          ہدایات دیکھ سکتے ہیں. یہاں میں اقدام آگے بلاک کا استعمال کیا اور میں 100
          پکسلز منتخب کرنے کے لئے جا رہا ہوں. میں اسے ٹول باکس یا ردی کی ٹوکری میں
          گھسیٹنے سے ایک بلاک کو حذف کر سکتا ہوں. چلو اسے واپس ڈال دیا.
      3:
        text: رن دبانے سے کوڈ چلائیں. ٹھیک ہے کہ کام نہیں کیا! میں ری سیٹ دبائیں گے
          اور پتہ چلتا ہوں کہ کیا غلط ہے. آپ چاہیں اور پہیلیاں چھوڑ دیں اور ان کے
          پاس واپس آ چاہتے ہیں کے طور پر آپ کو کئی بار کے طور پر ایک پہیلی کی کوشش
          کر سکتے ہیں. بس اپنی پوری کوشش کرنے کے لئے اس بات کو یقینی بنائیں اور ترک
          نہ کرو. چلو ایک اور اقدام آگے بڑھائیں. یہ اب بھی کام نہیں کیا. میں دوسرے
          بلاکس کے درمیان ایک بلاک رکھ سکتا ہوں.
      4:
        text: چلو ایک باری بلاک لے اور اس اقدام فارورڈز کے درمیان میں جگہ. بائیں 45
          ڈگری کی باری ہے. چلو اسے دوبارہ چلاتے ہیں. ری سیٹ کریں، چلائیں، خوفناک!
          یہاں ایک اور پہیلی ہے. کبھی کبھی آپ کو مکمل کرنے کے لئے سٹارٹر کوڈ دیا جاتا
          ہے. یہاں مجھے مناسب لمبائی اور ڈگری شامل کرنے کی ضرورت ہے.
      5:
        text: آپ کو کبھی کبھی غلطی سے سٹارٹر کوڈ کو ردی کی ٹوکری کر سکتے ہیں. پھر
          آپ کیا کرتے ہیں؟ آپ واضح پہیلی دبائیں اور پھر سب سے زیادہ شروع کر سکتے ہیں.
          میں مختلف پکسل علاقوں میں اس نمبر بلاک کو ھیںچیں جا رہا ہوں. پکسلز کے لئے
          100، ڈگری کے لئے 45 اور پکسلز کے لئے 100 دوبارہ منتخب کریں. بہت اچھا! یہاں
          کوڈ سٹوڈیو مکھی ہے۔ مجھے شہد کی مکھی کو ہر پھول میں منتقل کرنے اور امرت
          حاصل کرنے کی ضرورت ہے.
      6:
        text: پہلا پھول تین بلاکس دور ہے لہذا مجھے تین اقدام فارورڈز کی ضرورت ہے.
          پھر ایک حاصل امرت، پھر ایک اور امرت حاصل. ٹھیک ہے کہ کام نہیں کیا! میں حاصل
          نیکر کے درمیان آگے ایک اور اقدام رکھیں گے اور اسے دوبارہ چلائیں گے. ہاں،
          یہ کام کرتا ہے! آپ نے صرف کوڈ سٹوڈیو آرٹسٹ اور مکھی کی پہیلیاں استعمال کرنے
          کا طریقہ سیکھا. کوڈ سٹوڈیو پہیلی چیلنج پر گڈ لک.
    unplug1:
      1:
        text: جب آپ اولیویا بڑھتے ہیں تو آپ کیا کرنا چاہتے ہیں؟ ام، ایک خلائی مسافر!
          کیا آپ کو معلوم ہے کہ کمپیوٹر پروگرامر کیا ہے؟ ہاں، ام، نہیں. ام، کیا؟ مجھے
          سچ میں یقین نہیں ہے کہ اس کی وضاحت کیسے کی جائے. کمپیوٹر پروگرامنگ بہت آسان
          ہے. یہ ایک ہدایت کی طرح ہدایات کا ایک سیٹ ہے. آپ چاہتے ہیں کہ آخری نتیجہ
          حاصل کرنے کے لئے آپ کو قدم بہ قدم قدم پر عمل کرنا ہوگا.
      2:
        text: کمپیوٹر سائنس دنیا پر اثر انداز کرنے کا ایک طریقہ ہے۔ یہ موسیقی ویڈیو
          ہوسکتی ہے، یہ کھیل ہوسکتا ہے، پتہ چلا ہے کہ کوئی کسی اور سے متعلق ہے یا
          نہیں. آپ جانتے ہیں، لوگوں کے دوستوں کو تلاش کریں. تم اصل میں زندگی کو بچانے
          کے کہ دوسرے پاگل چیزوں کے تمام قسم کے کر سکتے ہیں. میرے خیال میں آپ کو ایک
          ڈرائیو کرنا پڑے گا. یہ ایک پینٹ برش کی طرح میرے لئے ہے. مجھے لگتا ہے کہ
          عظیم پروگرامنگ عظیم آرٹ سے مختلف نہیں ہے.
      3:
        text: جب میں آخر میں پروگرامنگ کا تھوڑا سا سیکھا، کہ خالی دیوار دروازے کے
          ایک گروپ میں حل اور آپ کو ان کو کھولنے اور کورس کے تو آپ کو ان کے پیچھے
          تلاش دروازے کے ایک گروپ کے ساتھ بھرا ہوا ایک دالان ہے. پروگرامنگ مزہ اور
          آسان ہے. آپ کچھ بھی کر سکتے ہیں جو آپ کا ذہن کرنا چاہتا ہے۔ آخر میں آپ
          کو روشنی میں آتا ہے کافی دروازے کھولنے کے لئے شروع. میرے لئے ایک مکمل پروگرام
          روشنی کے ساتھ بھرا ہوا ایک ساخت کی طرح ہے. تمام کونے روشن کر رہے ہیں. لوگوں
          کی تعداد جن سے آپ چھو سکتے ہیں اور ان کے ساتھ بات چیت کرسکتے ہیں وہ کچھ
          ایسی چیز ہے جسے دنیا نے پہلے کبھی نہیں دیکھا ہے.
      4:
        text: اس سیریز میں ہمارا پہلا سبق یہ ہے کہ کمپیوٹر سائنس کیا ہے، کمپیوٹر سائنسدان
          کیا کرتا ہے اور آپ ٹیکنالوجی کے استعمال میں کس طرح زیادہ ذمہ دار ہو سکتے
          ہیں. یہ ایک بہت اہم سبق ہے لیکن یہ تھوڑا سا متن بھاری ہے. آخر میں، آپ اپنے
          ابتدائی طور پر استعمال کرتے ہوئے اپنی مرضی کے مطابق انکوڈنگ بنانے کے لئے
          حاصل کرتے ہیں. یہ ایک مزہ سرگرمی ہے اور یہ بہت بااختیار بنانے ہے بائنری
          ان چیزوں میں سے ایک ہے کیونکہ بہت تکنیکی محسوس ہوتا ہے لیکن ایک بار جب آپ
          اسے سمجھتے ہیں، یہ آپ کو ایک خفیہ زبان بولتے ہیں کی طرح ہے.
    unplug10:
      1:
        text: یہ سرگرمی ایک آسان سمجھنے کے طریقے سے وضاحت کرتی ہے کہ انٹرنیٹ کیسے
          کام کرتا ہے. ہم ان تمام اصطلاحات کی وضاحت کرتے ہیں جن کی آپ کو سادہ اصطلاحات
          میں ضرورت ہوگی تاکہ طلباء ای میل کی طرح ترسیل پیغامات کو انکرن کر سکیں۔
      2:
        text: طالب علم تین ٹرانسمیشن طریقوں میں سے ایک ہونے کا ڈرامہ کرتے ہوئے پیغامات
          منتقل کریں گے. وائرلیس انٹرنیٹ، ڈی ایس ایل یا فائبر آپٹک. وائی فائی کی نمائندگی
          کرتے ہیں جو طالب علموں کو پہننا پڑے گا پیغام وہ ان کے سر پر منتقل کر رہے
          ہیں وائی فائی سب سے زیادہ امکان ہے کیونکہ کچھ معلومات چھوڑ کرنے کے لئے.
      3:
        text: ڈی ایس ایل یا کیبل ہونے کا دعوی کرنے والے طلباء اپنے ہاتھ کے پیچھے پیغام
          لے جائیں گے، جہاں ان کی معلومات چھوڑنے کا امکان تھوڑا سا کم ہوتا ہے. اور
          فائبر آپٹک کی نمائندگی کرنے والے طالب علموں کو دونوں ہاتھوں سے لے جانے کے
          لئے مل جائے گا. یہ سرگرمی کسی ایسی چیز کو سمجھنے کا بہترین طریقہ ہے جو ہم
          میں سے بہت سے لوگ ہر روز استعمال کرتے ہیں.
    unplug11:
      1:
        text: تو اب وقت آ گیا ہے کہ آپ پیچھے ہٹ جائیں اور ان پچھلے انیس اسباق میں
          جو کچھ آپ نے کیا ہے اس کا پرندوں کی آنکھ کا جائزہ لیں۔ طالب علموں کو یہ
          کہنے کا یہ بہترین وقت ہے کہ انہوں نے ابھی جو کچھ کیا ہے وہ ایک بہت بڑی کامیابی
          ہے. انہوں نے ان سبقوں پر زیادہ سے زیادہ سیکھا ہے جو زیادہ تر بالغوں کو کمپیوٹر
          سائنس کے بارے میں جانتے ہیں.
      2:
        text: ایک کلاس کے طور پر یا چھوٹے گروپوں میں ان کے پسندیدہ سبق کے بارے میں
          بحث کریں. ایک بار جب آپ اپنی سیکھی ہوئی ہر چیز پر نظر ڈالیں، تو یہ وہ جگہ
          ہے جہاں آپ کے طالب علموں کی تخلیقی صلاحیتوں کو چمک سکتا ہے. ان کو گروہوں
          میں تقسیم کر دیں اور انہیں اپنی طرف سے ایک غیرمعمولی سبق بنا دیں ہر گروپ
          کو ایک اہم تصور، جیسے افعال یا الگورتھم کو تفویض کریں اور ان کے استعمال
          کے لئے ہاتھ پر بہت سارے کرافٹ مواد موجود ہیں. کیا ہر گروپ اپنی نئی غیر فعال
          سرگرمی پیش کرتا ہے یا طالب علم کی تخلیق کردہ سرگرمیوں میں سے کچھ کرنے کے
          لئے ایک اور دن بھی مقرر کرتا ہے.
      3:
        text: Code.org پر یہاں سب سے، ہم امید کرتے ہیں کہ آپ نے اس کورس کے دوران ایک
          ٹن مزہ لیا ہے. اور کیا آپ کا خواب بہترین نئی ایپ بنانا ہے، بیماریوں کا علاج
          کرنے میں مدد کے لئے پروگرامنگ کا استعمال کریں، یا آپ صرف ایک ستاری مسئلہ
          حل کرنا چاہتے ہیں، یہ کورس ان خوابوں کو حاصل کرنے میں پہلا قدم تھا.
    unplug2:
      1:
        text: کمپیوٹیشنل سوچ پر سبق آپ کو ایک بڑا مشکل مسئلہ لینے اور کئی آسان مسائل
          میں اسے توڑنے کے لئے کس طرح سکھانے کا ارادہ ہے. اس سبق کا مقصد ہدایات کا
          ایک سیٹ لکھنا ہے جو کسی سبق کی منصوبہ بندی میں شامل راکشسوں میں سے ایک کو
          اپنی طرف متوجہ کرنے کے لئے پیروی کر سکتا ہے.
      2:
        text: 'طلباء ہدایات لکھنے کے لئے گروپوں میں ٹوٹ جائیں گے اور پھر وہ ان کو
          دوسرے گروپ کے ساتھ تبدیل کر دیں گے جو عفریت کو اپنی طرف متوجہ کرنا پڑے گا.
          گروپ کمپیوٹیشنل سوچ کے چار مراحل کا استعمال کرتے ہوئے ہدایات لکھیں گے: سڑنا،
          پیٹرن محل وقوع، تجرید اور الگورتھم.'
      3:
        text: سب سے پہلے گروپوں ایک کھیل کی منصوبہ بندی کا مطلب ہے جس کا مطلب کام
          سڑنا گا. اس کے بعد وہ فہرست میں تمام راکشسوں کے درمیان پیٹرن کے لئے نظر
          آئے گا. وہ راکشسوں کے درمیان اختلافات کے پار آئے تو، وہ خلاصہ یا ان کی تفصیلات
          کو ہٹا دیں گے. مثال کے طور پر، کیٹلاگ میں ایک راکشس vegitas آنکھوں ہے اور
          ایک اور spritem آنکھوں ہے. لیکن ان دونوں کی آنکھیں ہیں تاکہ ہم ایک لکیر
          لکھ سکیں جو کہتی ہے کہ اس عفریت کی خالی آنکھیں ہیں۔
      4:
        text: تو طالب علموں کو لکھنے کے قابل ہو جائے گا ہدایات کا ایک سیٹ، ایک الگورتھم
          کہا جاتا ہے، اس فہرست کے ساتھ راکشسوں 'حصوں شیلیوں کیا ہونا چاہئے کے لئے
          خالی ہے. یہ ہدایات کا مجموعہ ہے جو وہ دوسرے طالب علموں کو اپنے بہت ہی عفریت
          کو دوبارہ بنانے کے لیے پاس کریں گے۔
    unplug3:
      1:
        text: گراف کاغذ پروگرامنگ میں، ہم اس بات کی وضاحت کرنے میں مدد کرتے ہیں کہ
          لوگوں کو صرف تیر اور سکریبلز کا استعمال کرتے ہوئے ڈرائنگ کو دوبارہ بنانے
          میں مدد کرنے کی کوشش کی طرف سے کوڈنگ کیسے کام کرتا ہے. ایک شخص کو گراف کاغذ
          پر ایک چھوٹی سی ڈرائنگ دی جاتی ہے اور انہیں صرف مخصوص تیر استعمال کرتے ہوئے
          گزرنے کی ضرورت ہوتی ہے اور اس ڈرائنگ کو دوبارہ بنانے کا طریقہ بیان کرنے
          کی کوشش کی جاتی ہے۔
      2:
        text: 'اس سرگرمی میں، آپ استعمال کر سکتے ہیں صرف علامات یہ ہیں: ایک مربع آگے
          بڑھیں، ایک مربع پسماندہ، ایک مربع اوپر منتقل کریں، ایک مربع نیچے منتقل کریں،
          اگلے رنگ میں تبدیل کریں، اور رنگ کے ساتھ اپنے مربع میں بھریں. ہم نے اس کوڈت
          ہے ایک بار، ہم کوڈ کو پڑھنے اور کوشش کریں اور تصویر بہلانا کر سکتے ہیں جو
          کسی دوسرے شخص کو اسے ہاتھ کر سکتے ہیں کر سکتے ہیں.'
    unplug4:
      1:
        text: گراف کاغذ پروگرامنگ میں، ہم اس بات کی وضاحت کرنے میں مدد کرتے ہیں کہ
          لوگوں کو صرف تیر اور سکریبلز کا استعمال کرتے ہوئے ڈرائنگ کو دوبارہ بنانے
          میں مدد کرنے کی کوشش کی طرف سے کوڈنگ کیسے کام کرتا ہے. ایک شخص کو گراف کاغذ
          پر ایک چھوٹی سی ڈرائنگ دی جاتی ہے اور انہیں صرف مخصوص تیر استعمال کرتے ہوئے
          گزرنے کی ضرورت ہوتی ہے اور اس ڈرائنگ کو دوبارہ بنانے کا طریقہ بیان کرنے
          کی کوشش کی جاتی ہے۔
      2:
        text: سرگرمی کے دوسرے نصف حصے میں، ہم طالب علموں سے پوچھتے ہیں کہ وہ سولہ
          ایک جیسی مستطیل بنانے کے لئے کاغذ کا ایک ٹکڑا گنا کر سکتے ہیں کتنے مختلف
          طریقوں سے. اس کے بعد آپ اس بات پر تبادلہ خیال کریں گے کہ کس طرح ایک سے زیادہ
          حل اسی نتیجے میں نکل سکتے ہیں اور بعض حالات میں کچھ حل کیوں بہتر ہیں.
    unplug5:
      1:
        text: گراف کاغذ پروگرامنگ میں، ہم اس بات کی وضاحت کرنے میں مدد کرتے ہیں کہ
          لوگوں کو صرف تیر اور سکریبلز کا استعمال کرتے ہوئے ڈرائنگ کو دوبارہ بنانے
          میں مدد کرنے کی کوشش کی طرف سے کوڈنگ کیسے کام کرتا ہے. ایک شخص کو گراف کاغذ
          پر ایک چھوٹی سی ڈرائنگ دی جاتی ہے اور انہیں صرف مخصوص تیر استعمال کرتے ہوئے
          گزرنے کی ضرورت ہوتی ہے اور اس ڈرائنگ کو دوبارہ بنانے کا طریقہ بیان کرنے
          کی کوشش کی جاتی ہے۔
      2:
        text: سرگرمی کے دوسرے نصف حصے میں، ہم طالب علموں سے پوچھتے ہیں کہ وہ سولہ
          ایک جیسی مستطیل بنانے کے لئے کاغذ کا ایک ٹکڑا گنا کر سکتے ہیں کتنے مختلف
          طریقوں سے. اس کے بعد آپ اس بات پر تبادلہ خیال کریں گے کہ کس طرح ایک سے زیادہ
          حل اسی نتیجے میں نکل سکتے ہیں اور بعض حالات میں کچھ حل کیوں بہتر ہیں.
    unplug6:
      1:
        text: یہ سرگرمی کارڈ کے ساتھ کوڈنگ کہا جاتا ہے اور یہ کسی بھی عمر کے لئے بہت
          اچھا ہے. جیسا کہ آپ نے پہلے سبق میں اگر بیانات کے ساتھ سیکھا، بلاکلی کے
          دوران، اگر بیانات ان کے بارے میں ایک ٹکڑا ہے تو آپ کو یہ معلوم کرنے کے لئے
          اندازہ کرنا ہوگا کہ یہ سچ ہے یا غلط ہے. یہ مشروط ہے اور یہ مختلف طریقوں
          سے بہت سے استعمال کیا جا سکتا ہے.
      2:
        text: ہم کاغذ پر پروگرام بنانے کی طرف سے اس کا فائدہ اٹھاتے ہیں جو آپ کو تاش
          کھیلنے کے بے ترتیب ڈراپ کا استعمال کرتے ہوئے چلاتے ہیں. آپ کا کہنا ہے کہ
          اگر ایک بیان ہے کہ ہو سکتا ہے کی طرح اگر کارڈ آپ کو اپنی طرف متوجہ 8 سے
          زیادہ ہے، آپ کو ایک نقطہ ملتا ہے. دوسری صورت میں، آپ کے مخالف کو ایک نقطہ
          ملتا ہے. آپ آرام دہ اور پرسکون محسوس کرتے ہیں کے طور پر آپ کے طور پر آسان
          یا کے طور پر پیچیدہ بنا سکتے ہیں.
    unplug7:
      1:
        text: آپ جانتے ہیں کہ کیسے جب آپ ایک گیت کے لیے دھن کو دیکھتے ہیں اور وہ
          بالکل ابتدا میں کورس کی وضاحت کرتے ہیں اور پھر باقی گیت کے لیے، وہ آپ کو
          صرف کورس میں واپس بھیج دیتے ہیں؟ یہی وجہ ہے کہ آپ کو ایک تقریب کہتے ہیں
          کہ کس طرح ہے.
      2:
        text: اِس سبق میں، ہم اپنے گیت کے آغاز میں کورس کی وضاحت کرتے ہیں اور پھر
          ہم اپنے گیت میں سے گاتے ہیں اور واپس چلے جاتے ہیں اور ہم غور کرتے ہیں کہ
          طبقہ کورس کا لفظ نہیں گاتا، وہ خود بخود اوپر کی جانب چلے جاتے ہیں جہاں پر
          ہم کورس کی وضاحت کرتے ہیں اور اُس میں سے گاتے ہیں۔ ہم ایک عظیم تعارف کے
          طور پر استعمال کرتے ہیں کہ کس طرح سمجھنے کے لئے ایک پروگرام کیا کر رہا ہے
          جب اس کی وضاحت کرتا ہے اور ایک تقریب کو بلاتا ہے.
      3:
        text: ہم پرانے میکڈونلڈ سمیت واقف گانے استعمال کرتے ہیں کہ کس طرح ایک کورس
          بار بار کہا جاتا ہے اور کبھی کبھی ایک کورس کس طرح تبدیل ہو سکتا ہے کے بارے
          میں بات کرنے کے لئے. جب آپ کے پاس پرانے میکڈونلڈ کی طرح گانا ہے، جہاں بعض
          الفاظ تبدیل ہوتے ہیں، تو پیرامیٹرز کے خیال کو متعارف کرانے کے لئے یہ ایک
          بہترین جگہ ہے. کے ذریعے کچھ الفاظ گزر رہا ہے تاکہ آپ کو آپ کی تقریب میں
          اضافی معلومات بھیج سکتے ہیں. ایک بار جب ہم اس بات کا یقین کر لیں کہ سب لوگ
          اسے حاصل کرتے ہیں، تو آپ اپنے واقف گانے، نغمے لے سکتے ہیں اور اپنے آپ کو
          توڑ سکتے ہیں. آپ کو ایک دوسرے کے ساتھ یہ پتہ کر سکتے ہیں تو ملاحظہ کریں.
    unplug8:
      1:
        text: تجرید پر ہمارا سبق madlibs کے واقف تصور کا استعمال کرتا ہے، جہاں آپ
          بنیادی طور پر ایک کہانی میں ایک خالی ڈالیں جو بہت سے مختلف الفاظ سے بھرا
          ہوا جا سکتا ہے. ہم اس خیال کو لیتے ہیں، بچوں کو چیلنج کرتے ہیں کہ وہ اپنی
          کہانیوں کے لئے اپنے الفاظ کے ساتھ آئیں، اور واقعی تجرید کے تصور کی وضاحت
          کریں.
      2:
        text: یہ سب کے افعال کے بارے میں ہے اور آپ کو ایک تقریب ہو سکتا ہے کہ کس طرح،
          پرانے میکڈونلڈ میں کی طرح، آپ کو آپ کے کورس کے لئے ایک ساخت ہے جہاں لیکن
          آپ کو تھوڑا سا ہے کہ تبدیلیاں اور آپ کو تبدیل کر سکتے ہیں کہ چھوٹی سی بات
          باہر خلاصہ آپ کے اپنے لفظ کے ساتھ میں بھر سکتے ہیں کے ذریعے ہر وقت. لیکن
          کبھی کبھی آپ کو تبدیل ہے کہ تین الفاظ ہے اور تو آپ کو تین پیرامیٹرز کے ساتھ
          میں ان کو بھرنے، کہ اب بھی بہت مددگار ہے.
      3:
        text: آپ کو ایک تقریب ہے کہ مختلف مسائل کے بہت سے ہینڈل کر سکتے ہیں. بہت سے
          بار لوگ ان تمام مسائل کے لئے علیحدہ افعال لکھیں گے، اس بات کا احساس نہیں
          کہ صرف ایک چھوٹا سا فرق ہے. اگر وہ صرف ایک چھوٹا سا فرق کو ہینڈل کرنے کا
          ایک طریقہ تلاش کر سکتے ہیں، وہ صرف ایک تقریب بار بار دوبارہ استعمال کر سکتے
          ہیں، بجائے 14 مختلف افعال ہونے کی.
    unplug9:
      1:
        text: ریلے پروگرامنگ ایک انتہائی مزہ سبق ہے جو کمپیوٹر سائنس سے زیادہ راستے
          میں ملتا ہے. کبھی کبھی سب کو تھوڑا سا antsy ہو رہی ہے اور آپ کو ان کے پاؤں
          پر انہیں حاصل کرنے کے لئے چاہتے ہیں. یہ کمپیوٹر سائنس میں کچھ جوش و خروش
          شامل کرنے کا ایک بہترین طریقہ ہے.
      2:
        text: آپ سب کو دو گروپوں میں توڑ دیتے ہیں جہاں وہ ایک لائن میں کھڑے ہوتے ہیں
          اور ریلے سٹائل چلاتے ہیں. ہر گروپ میں پہلا شخص کمرے کے دوسری طرف چلتا ہے
          جہاں آپ کے پاس گراف کاغذ ڈرائنگ اور کاغذ کا ایک خالی ٹکڑا ان کے لئے انتظار
          کر رہا ہے. وہ اس تصویر کو بنانے کے لئے پہلا قدم لکھتے ہیں، اپنی لائن پر
          واپس چلاتے ہیں، اگلے کھلاڑی کو ٹیگ کرتے ہیں جو اگلے مرحلے کو لکھنے کے لئے
          واپس جاتا ہے.
      3:
        text: یہ ڈیبگنگ کے خیال میں حاصل کرنے کے لئے ایک عظیم طریقہ ہے، آپ کے اپنے
          کام کو مستحکم کرنے کی ضرورت ہے، اور آپ سے پہلے کیا لوگوں کے کام کی جانچ
          پڑتال کرنے کی ضرورت ہے. آپ فوری طور پر سمجھ لیں گے کہ یہ کتنا اہم ہے کہ
          آپ اپنی کوڈنگ میں محتاط رہیں جب پوری ٹیم آپ پر منحصر ہے.
    what_is_an_event:
      1:
        image: notes/what_is_an_event.png
        text: ایک واقعہ کچھ ہونے کے لئے سننے کے لئے آپ کے پروگرام بتاتا ہے. جب یہ
          چیز ہوتی ہے تو، پروگرام ایک عمل انجام دیتا ہے. ایک کمپیوٹر ایک ماؤس کلک
          کے لئے سن سکتا ہے، ایک تیر کے بٹن پر دبائیں، یا سکرین پر ایک نل.
    what_is_cs:
      1:
        image: notes/what_is_cs.png
        text: کوڈنگ آپ کو کمپیوٹر پر دی جانے والی ہدایات کا سیٹ ہے. کمپیوٹر سائنس
          ایک ایسا میدان ہے جہاں لوگ بڑے مسائل کو حل کرنے کے لیے کمپیوٹر کی طاقت کا
          استعمال کرتے ہیں۔ کمپیوٹر سائنس میں کوڈنگ شامل ہے، لیکن اس میں دوسری چیزیں
          بھی شامل ہیں، جیسے کہ انٹرنیٹ کس طرح کام کرتا ہے اور معاشرے پر اثر انداز
          ہوتا ہے، بڑے اعداد و شمار کے ساتھ کیا کرنا ہے، اور بڑے مسائل کو کیسے توڑنا
          ہے. کمپیوٹر سائنس مسئلہ حل کرنے، تنقیدی سوچ، اور استقامت کے بارے میں ہے.
    writing_first_program:
      1:
        image: notes/writing_first_program_1.png
        text: Code.org ایک بصری، ڈریگ اور ڈراپ پروگرامنگ زبان استعمال کرتا ہے جسے
          بلاکلی کہتے ہیں۔ بلاکلی پروگراموں کی تعمیر اور پہیلیاں حل کرنے کے لئے بلاکس
          کہا جاتا رنگارنگ ہدایات کا استعمال کرتا ہے.
      2:
        image: notes/writing_first_program_2.png
        text: ہر پہیلی کے چار حصے ہوتے ہیں۔
      3:
        image: notes/writing_first_program_3.png
        text: کھیل کا علاقہ بائیں جانب ہے، جہاں آپ کا پروگرام چلتا ہے.
      4:
        image: notes/writing_first_program_4.png
        text: مرکز میں ٹول باکس کا علاقہ ہے، جس میں آپ کی ضرورت ہے تمام بلاکس ہیں.
      5:
        image: notes/writing_first_program_5.png
        text: دائیں جانب ورک اسپیس ہے، جہاں آپ اپنے پروگرام کی تعمیر کے لئے بلاکس
          کو ھیںچیں گے.
      6:
        image: notes/writing_first_program_6.png
        text: ورک اسپیس کے اوپر ہر پہیلی کے لئے ہدایات ہیں.
      7:
        image: notes/writing_first_program_7.png
        text: اگر آپ ٹول باکس سے بہت سے بلاکس کو باہر ھیںچیں، صرف ٹول باکس میں اضافی
          بلاک واپس گھسیٹیں. اپنے پروگرام کی کوشش کرنے کے لئے چلائیں مارو، اور دوبارہ
          کوشش کرنے کے لئے ری سیٹ کریں.
