---
ru:
  data:
    callout:
      text:
        Infinity_move_collide_callout: Воспроизведение звука, когда это событие происходит
        Infinity_move_directions_callout: Какой блок поможет Баймакс двигаться вверх
          при нажатии стрелки вверх?
        Infinity_move_directions_callout_arrow: Используй эти стрелки для управления
        Infinity_move_right_runbutton: Добавь сюда блок «переместить»
        Infinity_repeat_callout: Размести блоки «переместить» внутри
        actions_category: Панель инструментов теперь выглядит по-новому! Теперь здесь
          появился блок «Действия».
        add_and_drag_parameter: Напиши здесь название параметра, нажми добавить, и
          затем перенеси его в определение функции
        arrows_move_actor: Используй стрелки для перемещения персонажа
        bee_for_loop: Перенеси сюда наибольшее количество нектара, которое может собрать
          пчела
        category_explanation: У вас есть все те же блоки, но сейчас они разложены
          по категориям
        change_here: Внести изменения
        craft_callout_moveforward: Этот код проверит наличие лавы, можешь добавить
          команду движения вперед?
        craft_callout_preplaced: Мы поместили сюда несколько блоков, чтобы помочь
          тебе начать работу
        craft_callout_preplaced_house: Этот код начнет строить твой дом. Сможешь закончить
          эту задачу?
        craft_drag_block_callout: Перетащи блок «двигаться вперед();» и поставь его
          под другим блоком
        craft_inside_repeat: Повторяй действия, помещая блоки сюда
        craft_run_button_callout: Нажмите «Выполнить», чтобы протестировать свою программу
        craft_what_is_iron: Добывайте это железо!
        create_function: Нажмите здесь, чтобы открыть меню «Функции». Затем нажмите
          на кнопку «Создать функцию».
        degrees_per_side: Раздели 360 на число сторон, чтобы получить значение градуса
          каждого угла.
        drag_blocks: Перетащите блок «переместить» и поставьте его ниже другого блока
        draw_square_hint: 'Подсказка: используйте циклический алгоритм рисования квадрата,
          который вы создали в предыдущей головоломке.'
        edit_add_parameter: Нажми «Редактировать», чтобы добавить параметр в свою
          функцию
        edit_draw_square: Используйте эту кнопку, чтобы редактировать функцию и добавить
          цикл.
        edit_function: Нажмите здесь для редактирования функции.
        edit_get_nectar: Используйте эту кнопку, чтобы редактировать функцию и изменить
          направление полета пчелы за нектаром.
        fill_in_actor: Заполни «???» числами, которые соответствуют каждому персонажу
          (1, 2 и 3)
        frozen_circle_function_in_circle_turn: Не забывай поворачивать после создания
          каждого круга.
        frozen_circle_function_with_parameter_circle: Используй блок «создать круг»
          и меняй размер.
        frozen_create_square: Присоедини больше блоков, чтобы создать квадрат
        frozen_diamond_repeat: Используй блок «повторить» для создания этой фигуры.
        frozen_snowflake_branch: Используй блок «создать ветвь снежинки»
        function_editor_draw_square: Это определение вашей функции. Эти блоки выполняются
          каждый раз, когда используется блок «нарисовать квадрат»
        get_nectar: Используйте новый блок «собрать нектар».
        gray_block_explanation: Серые блоки невозможно удалить. Сможешь решить головоломку?
        house_hint: Ничего страшного, если картинка пока не похожа на домик. Мы исправим
          это в следующей головоломке.
        if_bee_nectar: Используйте блок «если», чтобы решить, будет ли пчела собирать
          нектар
        if_else_bee: Используй блок «если/иначе», чтобы пчела брала нектар из цветка,
          или делала мед, если это не цветок.
        instructions_repeat_explanation: Инструкции для каждой головоломки повторяются
          здесь
        jigsaw_click: Нажмите этот блок!
        length_parameter: Можете изменить эту функцию, чтобы она использовала параметр
          «длина»?
        logic_category: Откройте окно «Логика», чтобы найти блок «если/иначе».
        move_elsa_forward: Возьми блок «двигаться вперед» и прицепи его к блоку «При
          запуске», чтобы Эльза пошла вперед
        name_function: Напиши здесь название своей функции
        place_counter_variable: Перенеси переменную счетчика во внутрь этого блока
        place_length_variable: Перенеси переменную длины сюда, чтобы заменить ею вопросительные
          знаки
        place_variable: Перенеси переменную во внутрь этого блока
        playlab_add_blocks: Добавить блоки здесь
        playlab_add_move: Добавьте блоки «переместить» во внутрь блока «повторить»
        playlab_add_score: Добавить блок результатов здесь
        playlab_arrow_keys: Не забудь использовать их, чтобы передвигать ведьму после
          нажатия на кнопку «Выполнить»
        playlab_drag_say: Перенеси сюда блок «сказать» и напиши «Привет»
        playlab_move_girl: Используй блок «переместить вправо», чтобы переместить
          Теннисистку
        playlab_play_sound: Добавить блок «воспроизвести звук» здесь
        playlab_use_twice: Используй этот блок дважды, и не забудь изменить номер
          персонажа
        repeat: Разместите блоки внутри цикла, чтобы команды повторялись
        repeat_blocks: Используй блок «повторить» и расположи его вокруг блоков на
          рабочем пространстве
        repeat_blocks_1: "(1) Перемести этот блок на рабочее пространство и расположи
          его вокруг серых блоков"
        repeat_blocks_2: "(2) Передвинь сюда блок «повторить» и расположи его вокруг
          серых блоков"
        repeat_full_circle: Введи,количество перемещений, необходимых зомби для прохождения
          круга.
        replace_questions: Используй раскрывающийся список, чтобы заменить «???» на
          число
        replace_questions_degree: Используй раскрывающийся список, чтобы заменить
          «???» на необходимый градус поворота
        right_arrow_fireball: Используй стрелку вправо для стрельбы огненными шарами
        run: Нажмите «Выполнить», чтобы протестировать свою программу
        set_length: Воспользуйтесь этим блоком, чтобы задать правильное значение «длины».
        set_sides: Воспользуйтесь этим блоком для определения значения «стороны»,
          чтобы решить эту головоломку.
        set_sprite_image: Прикрепите блок «установить изображение персонажа» к блоку
          «когда начнется история», чтобы использовать персонажа для этой истории
        set_variable: Перенеси сюда блок с числом, чтобы присвоить значение переменной
        show_code_explanation: Нажмите здесь, чтобы увидеть код программы, которую
          вы создаете
        snowflake_dropdown: Используй данный раскрывающийся список для создания разных
          снежинок!
        studio_say_text: Между этими кавычками напишите фразу для вашего персонажа
        turn_elsa: Используй блок «поворот», чтобы Эльза повернулась. Число в раскрывающемся
          списке означает, сколько раз Эльза повернется.
        watch_again: Нажмите здесь, чтобы посмотреть видео еще раз
        which_equation: Какое уравнение сделает каждую сторону короче у фигур с большим
          количеством сторон?
        write_draw_square_function: Перенеси сюда блоки из панели инструментов, чтобы
          нарисовать квадрат
        write_draw_triangle_function: Перенеси сюда блоки из панели инструментов,
          чтобы нарисовать треугольник
    concept:
      description:
        function: функции
        if: Блок «если»
        if_else: Блок «если/иначе»
        loop_for: Блок «цикл по счетчику»
        loop_times: Блок «повторить несколько раз»
        loop_until: Блок «повторять до»
        loop_while: Блок «пока»
        parameters: Процедуры с параметрами
        sequence: Последовательность
    game:
      name:
        Applab: Лаборатория приложений
        Artist: Художник
        Artist2: Художник 2
        Artist3: Художник 3
        Artist4: Художник 4
        Artist5: Художник 5
        ArtistEC: Художник
        Bounce: Прыжок
        Custom: Художник
        CustomStudio: Лаборатория игр
        Farmer: Фермер
        Farmer2: Фермер 2
        Farmer3: Фермер 3
        Flappy: Порхающая птичка
        Gamelab: Лаборатория игр
        Jigsaw: Головоломки
        Maze: Лабиринт
        MazeEC: Лабиринт
        MazeStep: 'Лабиринт: пошаговый режим'
        Multi: Выбор разных вариантов
        NetSim: Интернет-симулятор
        Spritelab: Лаборатория Спрайтов
        StudioEC: Лаборатория игр
        TextMatch: Текстовые совпадения
        Unplug1: Введение в Информатику
        Unplug10: Интернет
        Unplug11: Итоги
        Unplug2: Вычислительное мышление
        Unplug3: Программирование на бумаге в клеточку
        Unplug4: Алгоритмы
        Unplug5: Процедуры
        Unplug6: Условные команды
        Unplug7: Написание песни
        Unplug8: Абстракция
        Unplug9: Эстафетное программирование
        Webapp: Лаборатория приложений
        Wordsearch: Поиск по слову
    level:
      instructions:
        Custom_builder: Перетаскивай блоки из панели инструментов в рабочую область,
          чтобы создать желаемый уровень. Когда будешь готов, нажми «Выполнить».
        applab_ec_simple: Создай свое приложение, используя блоки в панели инструментов.
        jigsaw_1: Нажми на блок
        jigsaw_10: Собери картинку из блоков
        jigsaw_11: Собери картинку из блоков
        jigsaw_12: Собери картинку из блоков
        jigsaw_13: Собери картинку правильно!
        jigsaw_2: Перетащи блок к цели
        jigsaw_3: Собери картинку из блоков
        jigsaw_4: Собери картинку из блоков
        jigsaw_5: Собери картинку из блоков
        jigsaw_6: Собери картинку из блоков
        jigsaw_7: Собери картинку из блоков
        jigsaw_8: Собери картинку из блоков
        jigsaw_9: Собери картинку из блоков
        maze_2_1: Эта свинья меня сильно раздражает. Помоги мне добраться до нее!
        maze_2_10: Сейчас последняя попытка — ты можешь это сделать, используя только
          4 блока?
        maze_2_11: Уважаемый человек.  Мой зомби. Мой голодный. Нужно... добраться...
          до подсолнуха. Можешь доставить меня к нему, используя только 5 блоков?
        maze_2_12: Окей, это задание похоже на предыдущее, но есть маленькое отличие.
          Можешь выполнить задание, используя только 5 блоков?
        maze_2_13: 'Используй новый блок «если», чтобы я мог решать, когда поворачивать.
          Подсказка: тебе понадобится еще один блок, но запомни, как мы его разместили,
          чтобы в следующий раз ты мог сделать это сам.'
        maze_2_14: Хорошо, это похоже на прошлую задачу, но тебе надо помнить, как
          ты использовал блоки «если» и «повторить» вместе.
        maze_2_15: Моя хотеть подсолнух! Используй блок «если», чтобы привести меня
          к нему, используя наименьшее количество блоков.
        maze_2_16: Хорошо, давай еще раз для тренировки — это задание не слишком отличается,
          но остерегайся зубастиков!
        maze_2_17: Блоки «если/иначе» проверяют условие, после чего выполняют одно
          действие ИЛИ другое. Чтобы помочь мне добраться до подсолнуха, попробуй
          использовать этот новый блок.
        maze_2_18: Еще один случай для использования блока «если-иначе»; сможешь сделать
          правильно с первой попытки?
        maze_2_19: Сможешь добавить всего 3 блока, чтобы помочь мне пройти более сложный
          лабиринт? Если сделаешь все правильно, я смогу ходить по любой извилистой
          дороге, независимо от ее длины.
        maze_2_2: 'Можешь помочь мне поймать непослушную свинью? Чтобы помочь мне
          достичь цели, составь вместе несколько блоков «двигаться вперед» и нажми
          «Выполнить». '
        maze_2_2_5: Наметь путь и проведи меня к глупой свинье. Остерегайся взрывчатки,
          а не то перья полетят!
        maze_2_3: Проведи меня к зелёному чудищу! (Остерегайся взрывчатки)
        maze_2_4: Сохраняй спокойствие и помоги мне найти вредную свинью. Иначе я
          могу разозлиться!
        maze_2_5: Есть способ добраться до глупой свиньи, используя только 2 блока.
          Догадываешься, как это сделать?
        maze_2_6: Попробуй довести меня до зеленого пришельца, используя только три
          блока.
        maze_2_7: Помоги мне прогнать вредную свинью, используя как можно меньше блоков.
          Попробуй использовать несколько блоков «повторить несколько раз».
        maze_2_8: 'Серый цвет блока означает, что такой блок нельзя удалить. Реши
          головоломку, используя блок «повторить», который повторяет действие 3 раза.
          Попробуй разместить внутри серого блока «повторить» эти 3 блока: «переместить»,
          «переместить», «повернуть».'
        maze_2_9: Теперь попробуй новый блок «повторять до», он будет повторять действия,
          пока я не доберусь до надоедливой свиньи.
        maze_3_1: Мне нужно добраться до свиньи! Пару раз введи вызов функции «двигаться
          ()», и я смогу вернуть свои яйца.
        maze_3_2: Напиши мне программу, чтобы я мог добраться до свиньи.
        maze_3_3: Как мне добраться до свиньи? Позаботься о том, чтобы я не столкнулся
          с ящиком со взрывчаткой!
        maze_3_4: А-а-а-а! Напиши мне программу, чтобы я обошел взрывчатку и добрался
          до свиньи.
        maze_karel_1_1: Привет, я фермер. Мне нужна твоя помощь, чтобы выровнять поле
          на моей ферме и подготовить его для посадки. Перемести меня к куче земли
          и используй блок «убрать», чтобы убрать ее.
        maze_karel_1_10: Я работаю допоздна, уже стемнело, и я не могу сказать, насколько
          кучи большие. Сейчас мне недоступны все те возможности, которые предоставлял
          блок «пока». Перемещай меня вдоль поля и, если встретится куча, убери ее.
        maze_karel_1_11: 'Снаружи по-прежнему темно. Перемещай меня по полю. Если
          встретится куча, убери ее, если яма — засыпь ее. Подсказка: используй выпадающее
          меню опций блока «если».'
        maze_karel_1_2: Теперь передвинь меня к яме и заполни ее ДВУМЯ лопатами земли,
          используя блок «засыпать».
        maze_karel_1_3: Подведи меня к куче земли и скажи, сколько лопат нужно убрать,
          используя как можно меньше блоков.
        maze_karel_1_4: 'Можешь помочь мне убрать все четыре кучи земли? Подсказка:
          используй блок «повторить», если умеешь.'
        maze_karel_1_5: 'Помоги мне засыпать во все эти ямы по 5 лопат земли. Подсказка:
          ты можешь поместить блок «повторить» внутрь блока «пока».'
        maze_karel_1_6: Убери все кучи земли, используя как можно меньше блоков. Новые
          опции в выпадающем меню блока «пока» позволяют мне проверить, нахожусь ли
          я рядом с кучей или рядом с ямой.
        maze_karel_1_7: Ух ты, я нашел действительно глубокую яму! Я не знаю, сколько
          лопат земли нужно, чтобы ее засыпать. Ты можешь написать программу для заполнения
          ямы до тех пор, пока поверхность не станет ровной?
        maze_karel_1_8: Помоги мне засыпать яму в конце поля, используя как можно
          меньше блоков.
        maze_karel_1_9: 'Сделай так, чтобы я убрал все эти кучи земли. Старайся использовать
          как можно меньше блоков. Подсказка: используй блок «пока».'
        maze_karel_2_1: 'Используя блоки, помоги мне убрать все кучи и засыпать все
          ямы на поле. Попробуй использовать циклы вместо большого числа блоков. Подсказка:
          цикл можно поместить внутри другого цикла.'
        maze_karel_2_10: Перемещай меня по полю и используй две этих функции, чтобы
          помочь мне раскидать все кучи и засыпать все ямы.
        maze_karel_2_2: Мы создали наш собственный блок под названием «засыпать 5»
          и поместили его в группу «Функции». Используй его, чтобы помочь мне засыпать
          эту яму.
        maze_karel_2_3: Используй новый блок функции «засыпать 5», чтобы я мог засыпать
          все ямы. Блок «засыпать 5» нужно взять из группы «Функции».
        maze_karel_2_4: Создай новую функцию, убирающую 7 лопат земли. Потом используй
          ее, чтобы написать программу, которая поможет мне убрать все кучи.
        maze_karel_2_5: Создай новую функцию, которая убирает 6 лопат земли из кучи,
          и используй ее, чтобы помочь мне выровнять все кучи.
        maze_karel_2_6: 'Используй две новые функции: «засыпать 8» и «убрать 8», чтобы
          помочь мне сравнять с землей кучу и засыпать яму.'
        maze_karel_2_7: На моем поле корова! Напиши новую функцию, которая позволит
          мне обойти корову и убрать кучу. Помести все нужные блоки внутрь новой функции.
        maze_karel_2_8: Используй эту новую функцию «Избежать корову и убрать 1»,
          чтобы помочь мне разобраться с кучами.
        maze_karel_2_9: Итак, вот функция, которая позволяет убрать 4 разных кучи
          земли, расположенные вертикально в ряд. Примени эту функцию внутри цикла,
          чтобы получить возможность убрать все кучи земли, используя всего несколько
          новых блоков.
        maze_karel_debug_function_1: Что нужно изменить в этой программе, чтобы помочь
          мне убрать все кучи?
        maze_karel_debug_function_2: Можешь отладить программу, чтобы я смог выровнять
          свое поле?
        maze_karel_debug_function_3: 'Измени эту программу, и я уберу все кучи на
          своем поле. '
        maze_karel_debug_if: Помоги! Исправь программу, чтобы мое поле стало совсем
          ровным.
        maze_karel_debug_if_else: Отладь эту программу, и я смогу засыпать все ямы
          и убрать все кучи.
        maze_karel_debug_repeat: Отладь эту программу для меня, чтобы мое поле стало
          чистым и ровным.
        maze_karel_debug_seq_1: Добро пожаловать на этап отладки! Мой код работает
          неправильно. Можешь найти ошибку и исправить ее, что я смог выровнять поле
          и подготовить его к посадке?
        maze_karel_debug_seq_2: Что не так с этой программой? Что тебе нужно исправить,
          чтобы я смог убрать эту кучу?
        maze_karel_debug_while: Как изменить эту программу, чтобы помочь мне засыпать
          яму?
        maze_wordsearch_k_1: Перемести меня по буквам EAST (ВОСТОК)
        maze_wordsearch_k_13: Перемести меня в одном направлении, потом в другом по
          буквам DEBUG (ОТЛАДКА)
        maze_wordsearch_k_15: Перемести меня в одном направлении, потом в другом по
          буквам ABOVE (ВЫШЕ)
        maze_wordsearch_k_16: Перемести меня в одном направлении, потом в другом по
          буквам BELOW (НИЖЕ)
        maze_wordsearch_k_2: Перемести меня по буквам SOUTH (ЮГ)
        maze_wordsearch_k_20: А теперь проверка! Перемести меня в одном направлении,
          потом в другом по буквам STORY (ИСТОРИЯ)
        maze_wordsearch_k_3: Перемести меня по буквам WEST (ЗАПАД)
        maze_wordsearch_k_4: Перемести меня по буквам NORTH (СЕВЕР)
        maze_wordsearch_k_6: Перемести меня на восток, потом на юг по буквам JUMP
          (ПРЫЖОК)
        maze_wordsearch_k_9: Перемести меня в одном направлении, потом в другом по
          буквам CODE (КОД)
        mazestep_1: Описание шага лабиринта здесь
        mazestep_2: Описание шага лабиринта здесь
        mazestep_3: Описание шага лабиринта здесь
        mazestep_4: Описание шага лабиринта здесь
        mazestep_5: Описание шага лабиринта здесь
        studio_c2_1: Вы можете заставить собаку сказать «hello world»?
        studio_c2_10: Ты можешь добавить блоки, чтобы изменить задний фон и скорость
          пингвина, а затем переместить его с помощью стрелок, чтобы заработать очки?
        studio_c2_11: Создай свою собственную историю. После завершения нажми кнопку
          «Готово», чтобы друзья могли сыграть в твою игру на своих телефонах.
        studio_c2_2: Ты можешь заставить собаку сказать что-то, и после неё, кошку?
        studio_c2_3: Ты можешь написать программу, чтобы собака двигалась к коту?
        studio_c2_4: Ты можешь написать программу, чтобы собака подошла к коту, а
          кот сказал «Привет», когда собака подойдет к нему?
        studio_c2_5: Ты можешь написать программу, чтобы осьминог сказал «Привет»
          при нажатии на него мышкой?
        studio_c2_6: Ты можешь написать программу, чтобы пингвин передвигался с помощью
          клавиш со стрелкой вверх / вниз / влево / вправо и достиг всех целей?
        studio_c2_7: Блок «повторять бесконечно» позволяет повторять код бесконечное
          число раз. Ты можешь присоединить блоки, чтобы этот динозавр постоянно двигался
          вверх и вниз?
        studio_c2_8: Ты можешь сделать так, чтобы пингвин сказал «Ай!», и воспроизводился
          звук удара, если он наткнется на динозавра, а затем переместить его с помощью
          стрелок, чтобы это произошло?
        studio_c2_9: Ты можешь добавить блок, чтобы начислять очки, когда пингвин
          натыкается на осьминога, а затем перемещать его с помощью стрелок, чтобы
          заработать очки?
        studio_c3_game_1: Ты можешь написать программу, чтобы осьминог сказал «Привет»
          при нажатии на него мышкой?
        studio_c3_game_2: Вы можете написать программу, чтобы заставить пингвина передвигаться
          с помощью клавиш вверх / вниз / влево / вправо и поразить все цели?
        studio_c3_game_3: Блок «repeat forever» позволяет запускать код непрерывно.
          Вы сможете прикрепить блоки, чтобы переместить этого динозавра вверх и вниз
          несколько раз?
        studio_c3_game_4: Ты можешь сделать так, чтобы пингвин сказал «Ай!», и воспроизводился
          звук удара, если он наткнется на динозавра, а затем переместить его с помощью
          стрелок, чтобы это произошло?
        studio_c3_game_5: Ты можешь добавить блок, чтобы начислять очки, когда пингвин
          натыкается на осьминога, а затем перемещать его с помощью стрелок, чтобы
          заработать очки?
        studio_c3_game_6: Ты можешь добавить блоки, чтобы изменить задний фон и скорость
          пингвина, а затем переместить его с помощью стрелок, чтобы заработать очки?
        studio_c3_game_7: Создай свою игру. После завершения нажми кнопку «Готово»,
          чтобы друзья могли сыграть в твою игру на своих телефонах.
        studio_c3_story_1: Вы можете заставить собаку сказать «hello world»?
        studio_c3_story_2: Ты можешь сделать так, чтобы собака, а затем и кот сказали
          что-то?
        studio_c3_story_3: Ты можешь написать программу, чтобы собака двигалась к
          коту?
        studio_c3_story_4: Вы можете написать программу, которая заставит собаку подойти
          к кошке, и сказать «hello», когда собака подойдет к нему?
        studio_c3_story_5: Можешь добавить блок, чтобы осьминог стал счастливым?
        studio_c3_story_6: Создай свою собственную историю. После завершения нажми
          кнопку «Готово», чтобы друзья могли сыграть в твою игру на своих телефонах.
        studio_ec_sandbox: Создай свою игру. После завершения нажми кнопку «Готово»,
          чтобы друзья могли сыграть в твою игру на своих телефонах.
        studio_full_sandbox: Создай свою игру. После завершения нажми кнопку «Готово»,
          чтобы друзья могли сыграть в твою игру на своих телефонах.
        studio_gumball_click_hello: Ты можешь помочь Антону объявить старт забега
          словами «На старт, внимание, марш!»? Для проверки программы не забудь нажать
          на Антона после нажатия кнопки «Выполнить»!
        studio_gumball_free_play: Создай собственную игру или историю. После завершения
          нажми кнопку «Готово», чтобы друзья могли сыграть в твою игру на своих телефонах,
          планшетах или компьютерах.
        studio_gumball_hello1: Анаис хочет завести новых друзей. Ты поможешь ей сказать
          «Привет», перетащив блок «сказать» в рабочую область и введя слово «Привет»
          внутри?
        studio_gumball_hello2: Дарвин (персонаж 1) и его брат Гамбол (персонаж 2)
          направляются в школу.  Помоги им поприветствовать друг друга, дважды использовав
          блок «персонаж говорит».
        studio_gumball_join_food_fight: Присоединяйся к закидыванию едой! Используй
          команду «персонаж бросает объект вправо», чтобы Банан Джо (персонаж 1) смог
          бросить еду в Антона (персонаж 2)! Сделай так, чтобы при попадании еды в
          Антона, он сердился.
        studio_gumball_move_events: Дарвин участвует в соревновании по собиранию флажков!
          Дай ему возможность бегать по кругу, присоединив блок «переместить» к каждому
          из событий. Когда закончишь, нажми «Выполнить» и попробуй собрать все флажки.
        studio_gumball_move_to_actor: Гамбол (персонаж 1) и Дарвин (персонаж 2) опоздали
          на соревнования! Помоги Гамболу переместиться на 200 пикселей вниз к Дарвину,
          используя блок «переместить персонаж».  Затем присоедини блок к событию
          «когда персонаж касается», чтобы при их встрече воспроизводился звуковой
          сигнал.
        studio_gumball_move_to_flag: Банан Джо почти победил в забеге!  Помоги ему
          пройти последние 200 пикселей, используя блок «переместить».
        studio_gumball_repeat: Блок «повторять бесконечно» позволяет повторять код
          бесконечное число раз.  Ты можешь присоединить к нему блоки, чтобы Гамбол
          размялся перед забегом, постоянно перемещаясь вправо и влево?
        studio_gumball_sound_and_points: Большая часть кода, позволяющая Антону (персонаж
          2) перемещаться влево и вправо, а Банану Джо (персонаж 1) перемещаться вокруг
          экрана, уже написана.  Ты можешь закончить код и присоединить блоки к событию
          «когда персонаж касается», чтобы при столкновении Банана Джо и Антона воспроизводился
          звуковой сигнал и начислялись очки?  Нажми «Выполнить», чтобы запустить
          игру.
        studio_gumball_warn_food_fight: Дарвин только что избежал закидывания едой!
          Измени фон на «персонажи» и увеличь скорость Дарвина, затем нажми «Выполнить»
          и перемести его к Пенни, чтобы он смог ее предупредить.
        studio_iceage_click_hello: Ты поможешь Сиду позвать друзей, когда на него
          нажимают мышкой? Не забудь нажать на него после запуска программы.
        studio_iceage_free_play: Пришло время создать собственную игру или историю!
          После завершения нажми кнопку «Готово», чтобы друзья могли сыграть в твою
          игру на своих телефонах, планшетах или компьютерах.
        studio_iceage_hello1: Сид хочет собрать всех для нового приключения. Ты поможешь
          ему сказать «Привет», перетащив блок «сказать» в рабочую область и введя
          внутри блока слово «Привет»?
        studio_iceage_hello2: Сид (персонаж 1) нашел Мэнни (персонаж 2) и хочет пригласить
          его принять участие в приключении.  Помоги им поприветствовать друг друга,
          дважды использовав блок «персонаж говорит».
        studio_iceage_move_events: Скрат все еще ищет желуди! Дай ему возможность
          бегать по кругу, присоединив блок «переместить» к каждому из событий и изменив
          направление движения для каждой клавиши со стрелкой. Когда закончишь, нажми
          «Выполнить» и попробуй собрать все желуди.
        studio_iceage_move_to_actor: Диего (персонаж 1) ищет Мэнни (персонаж 2). Помоги
          Диего переместиться на 200 пикселей вниз к Мэнни, используя блок «переместить
          персонаж». Затем присоедини блок к событию «когда персонаж касается», чтобы
          при их встрече воспроизводился звуковой сигнал.
        studio_iceage_move_to_flag: Скрат ищет свой желудь!  Помоги ему пройти последние
          200 пикселей, используя блок «переместить».
        studio_iceage_repeat: Блок «повторять бесконечно» позволяет повторять код
          бесконечное число раз. Ты можешь присоединить блоки к блоку «повторять бесконечно»,
          чтобы Грэнни выполняла ряд действий, непрерывно перемещаясь влево и вправо?
        studio_iceage_sound_and_points: Большая часть кода, позволяющая Грэнни перемещаться
          влево и вправо, а Сиду перемещаться вокруг экрана, уже написана. Можешь
          закончить код и присоединить блоки к событию «когда персонаж касается»,
          чтобы при столкновении Сида и Грэнни воспроизводился звуковой сигнал и начислялись
          очки? Нажми «Выполнить», чтобы запустить игру.
        studio_iceage_throw_hearts: Сид хочет сказать своей бабушке Грэнни, что он
          ее любит. Используй команду «персонаж посылает», чтобы Сид (персонаж 1)
          послал сердечки Грэнни (персонаж 2)! Сделай так, чтобы Грэнни становилась
          счастливой, когда в нее попадают сердечки.
        studio_iceage_warn_ice_age: Ледниковый период наступает, поэтому всем нужно
          двигаться быстрее! Измени фон на «ледяной» и увеличь скорость Сида, затем
          нажми «Выполнить» и перемести его к Диего, чтобы он смог его предупредить.
        studio_k1_1: Вы можете заставить собаку сказать «hello world»?
        studio_k1_2: Ты можешь сделать так, чтобы собака, а затем и кот сказали что-то?
        studio_k1_3: Ты можешь написать программу, чтобы собака двигалась к коту?
        studio_k1_4: Сделай так, чтобы собака подошла к коту, а кот после этого сказал
          «Привет».
        studio_k1_5: Можешь добавить блок, чтобы осьминог стал счастливым?
        studio_k1_6: Создай свою собственную историю! Перемещай кота и собаку с места
          на место и сделай так, чтобы они говорили.
        studio_playlab_1: Пингвин хочет сказать «Привет», можешь помочь ему?
        studio_playlab_10: Создай свою игру. После завершения нажми кнопку «Готово»,
          чтобы друзья могли сыграть в твою игру на своих телефонах.
        studio_playlab_2: Пещерный мальчик (персонаж 1) и Жасмин (персонаж 2) хотели
          бы сказать друг другу «Привет». Ты можешь помочь им, дважды используя блок
          «сказать»?
        studio_playlab_3: Ты поможешь Теннисистке добраться до флага?
        studio_playlab_4: Ты поможешь Теннисисту (персонаж 1) добраться до Теннисистки
          (персонаж 2) и воспроизвести звук, когда он доберется туда?
        studio_playlab_5: Ты поможешь Космоботу сказать «Привет, земляне» при нажатии
          на него мышкой? Не забудь нажать на него после нажатия кнопки «Выполнить»
        studio_playlab_6: Ты поможешь Ведьме двигаться с помощь клавиш со стрелкой,
          вверх / вниз / влево / вправо,, чтобы добраться до всех волшебных огненных
          шаров?
        studio_playlab_7: Блок «повторять бесконечно» позволяет повторять код бесконечное
          число раз. Ты можешь присоединить к нему блок, чтобы помочь волшебнику постоянно
          двигаться вправо и влево?
        studio_playlab_8: Ты можешь разместить блоки так, чтобы каждый раз, когда
          единорог прикасается к волшебнику, начислялись очки и воспроизводился звук,
          а затем после начисления двигать его с помощью клавиш со стрелками?
        studio_playlab_9: Создай фон для сцены инопланетного вторжения и помоги Космоботу
          быстрее добраться до инопланетянина, изменяя его скорость. Затем двигай
          его с помощью стрелок, чтобы он добрался до инопланетянина и предупредил
          всех о вторжении
        turtle_1_1: Привет, я художник. Ты можешь написать код, чтобы я смог нарисовать
          почти все, что угодно. Используй несколько блоков, чтобы я рисовал поверх
          серых линий на картинке.
        turtle_1_10: 'Получилось! Теперь рисуй все, что хочешь. Несколько забавных
          идей: человечек, снежинка или спираль. Попробуй также новый блок «задать
          ширину». Удачи!'
        turtle_1_2: 'Теперь нарисуй квадрат. ПРИМЕЧАНИЕ: используй свой любимый цвет,
          выбрав его в новом блоке «выбрать цвет».'
        turtle_1_3: Нарисуй квадрат, используя только 3 блока.
        turtle_1_4: 'Нарисуй треугольник со сторонами разного цвета, используя опцию
          «случайный цвет», которая каждый раз выбирает новый цвет. Подсказка: ты
          должен указать, на какой угол нужно поворачивать, выбрав соответствующее
          число в блоке поворота.'
        turtle_1_5: А теперь, чтобы попрактиковаться, нарисуй треугольник, а затем
          квадрат, чтобы нарисовать конверт.
        turtle_1_6: 'Знаешь, как нарисовать эти треугольник и квадрат? Подсказка:
          нарисуй сначала треугольник, а затем определи, на какой угол нужно повернуть,
          чтобы нарисовать квадрат.'
        turtle_1_7: 'А теперь давай усложним задачу: посмотрим, сможешь ли ты нарисовать
          эти зеленые очки. Размер стороны квадрата — 100 пикселей, а располагаются
          квадраты на расстоянии 50 пикселей друг от друга. Не забудь, что нужно рисовать
          зеленым цветом!'
        turtle_1_8: Так, попробуй догадаться, что произойдет при запуске кода (или
          нажми «Выполнить», чтобы узнать). Повтори код достаточное число раз, чтобы
          завершить рисунок. Каждый раз цвета будут разными.
        turtle_1_9: Знаешь, на какое число нужно заменить вопросительные знаки, чтобы
          нарисовать окружность?
        turtle_2_1: 'Привет. Моя — зомби-художник. Моя любит рисовать! Помоги мне
          нарисовать квадрат особым цветом. Важное примечание: у тебя есть те же блоки,
          что и раньше, но сейчас они организованы в группы.'
        turtle_2_10: Вот код, чтобы поэкспериментировать с различными спиралями.  Что
          произойдет, если изменить значение угла поворота? Или задать в цикле случайный
          цвет?  Нарисуй все, что тебе хочется.
        turtle_2_2: Добро пожаловать на уровень, позволяющий использовать функции,
          с помощью которых ты сможешь создавать новые блоки! Используй новый блок
          «нарисовать квадрат» из группы «Функции», чтобы нарисовать небольшой зеленый
          квадрат размером 50x50.
        turtle_2_3: Используй блок «повторить» (из группы «Циклы»), чтобы нарисовать
          3 квадрата размером 100, со смещением 120 градусов относительно друг друга.
          Сделай это 3 разными случайными цветами.
        turtle_2_4: 'А теперь давай повеселимся. Измени код так, чтобы нарисовать
          36 квадратов со стороной 100 пикселей каждый, со смещением 10 градусов относительно
          друг друга. Подсказка: используй ползунок, чтобы я двигался быстрее.'
        turtle_2_5: Нарисуй квадраты со сторонами размером 50, 60, 70, 80 и 90 пикселей.  Тебе
          необходимо использовать функцию «нарисовать квадрат» пять раз.
        turtle_2_6: 'Эта программа будет использовать счетчик, чтобы нарисовать такие
          же квадраты, как в прошлый раз. Тебе нужно, чтобы размер квадрата задавался
          счетчиком, поэтому используй блок «счетчик». Подсказка: это группа «Переменные».'
        turtle_2_7: Вот программа для рисования спирали, но блоки отключены, так что
          они не будут работать. Напиши новую программу с помощью блока «считать с
          шагом» (из группы «Циклы») и блок «счетчик» (из группы «Переменные»), чтобы
          нарисовать такую же спираль.
        turtle_2_7_5: Введена новая функция «нарисовать снеговика» (в группе «Функции»).
          Нарисуй двух снеговиков высотой 250 и 100.
        turtle_2_8: А теперь задание посложнее. Используй функцию «нарисовать снеговика»
          и новый блок «прыгнуть вперед» (из группы «Действия»). Нарисуй 3 снеговиков
          разных цветов на расстоянии 100 пикселей друг от друга.
        turtle_2_9: Используй цикл «считать с шагом», чтобы нарисовать семью снеговиков
          высотой 110, 100, 90, 80 и 70. Все снеговики должны находиться на расстоянии
          60 пикселей друг от друга.
        turtle_3_1: Эта головоломка показывает, как работают функции «нарисовать квадрат»
          и «нарисовать окружность».  Создание функции не подразумевает выполнения
          входящих в нее блоков.  Чтобы нарисовать квадрат, тебе нужно применить блок
          «нарисовать квадрат».
        turtle_3_10: Тебе удалось многое узнать! Теперь используй свое знание, чтобы
          нарисовать все, что хочешь. Попробуй нарисовать звезду, спираль или необычную
          снежинку.
        turtle_3_2: Используя функцию «нарисовать квадрат» как образец, создай функцию
          «нарисовать треугольник» и используй ее.
        turtle_3_3: 'Нарисуй треугольные ограждения вокруг котов и квадратное ограждение
          вокруг коровы.  Совет: тестируй программу по мере продвижения вперед.'
        turtle_3_4: Посмотрим, сможешь ли ты сообразить, как использовать блоки «нарисовать
          квадрат» и «нарисовать треугольник» (и некоторые другие блоки), чтобы нарисовать
          дом вокруг льва.
        turtle_3_5: 'Теперь создай новую функцию «нарисовать дом» и используй ее,
          чтобы приютить двух котов. Подсказка: создай новую функцию с помощью блока
          «выполнить некоторое действие» и введи свой текст, чтобы назвать блок.'
        turtle_3_6: 'Используя функцию «нарисовать квадрат» в качестве образца, добавь
          параметр «длина» в функцию «нарисовать треугольник». Затем нарисуй треугольники
          разных размеров. (Подсказка: нажми на звездочку для добавления параметра
          к функции)'
        turtle_3_7: Добавь параметр «длина» в функцию «нарисовать дом» и построй большой
          дом для слона (со сторонами длиной 150 пикселей)
        turtle_3_8: Измени функцию «нарисовать дом» так, чтобы я закончил рисовать
          новый дом в правом нижнем углу. Используй эту измененную функцию, чтобы
          нарисовать три дома.
        turtle_3_9: Сможешь самостоятельно переделать функцию «нарисовать дом»? Попробуй,
          а затем нарисуй ряд домов.
        turtle_4_1: 'Можешь нарисовать треугольник (со сторонами 100 пикселей) , используя
          только 3 блока? Подсказка: используй блок «повторить».'
        turtle_4_10: Это решение предыдущей головоломки. Сколько раз тебе следует
          повторить эти действия, чтобы закончить рисунок?
        turtle_4_11: Попробуй менять цифры в блоках «повернуть» и «повторить», чтобы
          получить разные рисунки. Или поэкспериментируй, меняя другие части кода,
          чтобы нарисовать все, что тебе хочется.
        turtle_4_2: Добавь блок «повернуть вправо на 90 градусов» куда-нибудь в середину
          программы на рабочей области, чтобы нарисовать эти треугольники.
        turtle_4_3: Это код, который ты написал, чтобы нарисовать один треугольник.
          Можешь добавить блоки «повторить» и «повернуть», чтобы нарисовать красивый
          цветок?
        turtle_4_4: 'Это тот же код, что и в предыдущей головоломке, но с поворотом
          лишь на 36 градусов после рисования предыдущего треугольника. Сколько раз
          нужно повторить поворот? (Подсказка: 360 градусов составят полный круг)'
        turtle_4_5: 'Это тот же код, что и в предыдущей головоломке, но поворот повторяется
          36 раз. На сколько градусов должен быть каждый поворот? (Подсказка: 360
          градусов составят полный круг)'
        turtle_4_6: Можешь нарисовать квадрат со стороной 20 пикселей, используя только
          3 блока?
        turtle_4_7: 'Это код для рисования квадрата из предыдущей головоломки. Можешь
          повторить его, чтобы нарисовать 10 прилегающих друг к другу квадратов в
          виде лестницы? Подсказка: нужно добавить всего 2 блока.'
        turtle_4_8: Это решение предыдущей головоломки. Можешь добавить всего 2 блока,
          чтобы закончить рисунок?
        turtle_4_9: Это решение предыдущей головоломки. На сколько градусов тебе нужно
          поворачивать, чтобы закончить рисунок? (Возможно, тебе потребуется несколько
          попыток)
        turtle_5_1: Попробуй запустить эту программу и внести изменения, чтобы увидеть,
          что происходит.  Можешь понять, как она работает? (Или удали её и замени
          чем-то совсем другим)
        turtle_5_2: Попробуй запустить эту программу и внести изменения, чтобы увидеть,
          что происходит.  Можешь понять, как она работает? (Или удали её и замени
          чем-то совсем другим)
        turtle_5_3: Попробуй запустить эту программу и внести изменения, чтобы увидеть,
          что происходит.  Можешь понять, как она работает? (Или удали её и замени
          чем-то совсем другим)
        turtle_5_4: Попробуй запустить эту программу и внести изменения, чтобы увидеть,
          что происходит.  Можешь понять, как она работает? (Или удали её и замени
          чем-то совсем другим)
        turtle_5_5: Попробуй запустить эту программу и внести изменения, чтобы увидеть,
          что происходит.  Можешь понять, как она работает? (Или удали её и замени
          чем-то совсем другим)
        turtle_5_6: Попробуй запустить эту программу и внести изменения, чтобы увидеть,
          что происходит.  Можешь понять, как она работает? (Или удали её и замени
          чем-то совсем другим)
        turtle_ec_1_10: 'Получилось! Теперь рисуй все, что хочешь. Несколько забавных
          идей: человечек, снежинка или спираль. Также попробуй применить новый блок
          «Ширина_пера». Удачи!'
        turtle_ec_1_2: 'Теперь нарисуй квадрат. ПРИМЕЧАНИЕ: используй свой любимый
          цвет, выбрав его в новом блоке «Цвет_пера».'
    trophy:
      name:
        Bronze: Бронзовый
        Gold: Золотой
        Silver: Серебряный
    video:
      name:
        C1_artist_intro: Художник - Введение
        C1_bee_level_intro: Уровень пчелы. Введение
        C1_bee_loops: 'Пчела: Циклы'
        C1_bigevent_unplugged: Большое Событие
        C1_building_foundation: Строительство опоры
        C1_getting_loopy: Зацикливание
        C1_going_places_safely: Безопасное путешествие
        C1_happy_maps_unplugged: Весёлые карты
        C1_maze_debugging: Лабиринт. Отладка
        C1_maze_intro_sequencing: Лабиринт. Введение в последовательности
        C1_maze_loops: 'Лабиринт: Циклы'
        C1_moveitmoveit_unplugged: Вперед, вперед
        C1_pair_programming: Программирование в парах
        C1_planting_seed: Посади семена
        C1_playlab_storytelling: Лаборатория игр. Создай историю
        C1_spelling_bee_intro: Пишущая пчела. Введение
        C1_zuck_repeat_loop: 'Лабиринт: Циклы'
        C2_artist_debugging: 'Художник: отладка'
        C2_artist_intro: Художник - Введение
        C2_artist_loops: 'Художник: Циклы'
        C2_bee_conditionals: 'Пчела: условные команды'
        C2_bee_debugging: 'Пчела: Отладка'
        C2_bee_loops: 'Пчела: Циклы'
        C2_binary_bracelets: Двоичные браслеты
        C2_conditionals_with_cards: Условные команды
        C2_digital_footprint: Твой цифровой след
        C2_digital_footprint_v2: Твой цифровой след
        C2_graph_paper: Программирование на бумаге в клеточку
        C2_maze_intro: Лабиринт - Введение
        C2_paper_airplanes: Бумажные самолетики
        C2_playlab_createstory: Лаборатория игр. Создай историю
        C2_relay_programming: Эстафетное программирование
        C2_zuck_repeat_loop: 'Лабиринт: Циклы'
        C3_artist_functions: 'Художник: Процедуры'
        C3_artist_intro: Художник - Введение
        C3_artist_nested_loops: Вложенные циклы
        C3_bee_conditionals: 'Пчела: условные команды'
        C3_bee_debugging: 'Пчела: Отладка'
        C3_bee_functions: 'Пчела: Процедуры'
        C3_bee_nested_loops: Вложенные циклы
        C3_bounce: Прыжок
        C3_computational_thinking: Вычислительное мышление
        C3_crowdsourcing: Краудсорсинг
        C3_dice_race: Гонки кубиков
        C3_farmer_while: Циклы «пока»
        C3_functional_suncatchers: Функциональные витражи
        C3_internet: интернет
        C3_maze_conditionals: 'Лабиринт: условные команды'
        C3_maze_level_4: 'Лабиринт: Циклы'
        C3_playlab_create_game: Лаборатория игр. Создай игру
        C3_songwriting_with_parameters: Написание песен с использованием параметров
        C4_bee_conditional: 'Пчела: условные команды'
        C4_conditionals: Условные команды
        C4_for_loops: Циклы с параметром
        C4_for_loops_bee: Циклы с параметром
        C4_for_loops_no_bee: Циклы с параметром
        C4_function_create: Создание функций
        C4_function_edit: Редактирование функций
        C4_function_parameters: Процедуры с параметрами
        C4_intro: Введение
        C4_loops_zombie: Циклы
        C4_math_artist: Программирование Художника, с использованием математики
        C4_unplugged_algorithms: Алгоритмы с танграмами
        C4_unplugged_binary: Двоичный
        C4_unplugged_forloops: Циклы с параметром
        C4_unplugged_madlibs: Пропуски
        C4_unplugged_parameters: Написание песен с параметрами
        C4_unplugged_variables: Переменные в конвертах
        C4_variables_artist: Переменные. Художник
        C4_variables_playlab: Переменные. Лаборатория игр
        CDEF_Video_SpritesInAction: Спрайты в действии
        CSA-PL-1d-arrays-new-values: Ввод значений в одномерные массивы
        CSA-PL-Printing-in-Java: Печать на Java
        CSA-PL-conditionals: Условные Выражения в Java
        CSA-PL-debugging-22: Отладка в Java Лаборатории
        CSA-PL-debugging-temp: Введение в отладку в лаборатории Java - шаблон
        CSA-PL-first-program: Написание Программы на Java
        CSA-PL-for-loops: Для циклов в Java
        CSA-PL-intro-to-arrays: Одномерные (1D) массивы
        CSA-PL-intro-to-java-lab: Java Лаборатория - Основы
        CSA-PL-multi-selection-statements: Выражения Множественного выбора
        CSA-PL-two-way-selection: Двусторонний выбор
        CSA-PL-variables: Создание Переменных в Java
        CSD_Unit6_InteractiveArtExemplar: Интерактивный Художественный Образец
        CSD_u6_variables_part1: 'CSD: Переменные'
        CSF-Teaching-Problem-Solving: Решение проблем обучения CSF
        CSF_EF_cs_matters: Вопросы Информатики
        CSF_Going_Places_Safely: Мой Онлайн-Район
        CSF_Power_of_Words: Сила Слов
        CSF_SpriteLabIntro_CDEF: Это лаборатория спрайтов
        CSF_SpriteLab_Intro_v2: Представляем Лабораторию спрайтов
        CSF_SpriteLab_SpritesInAction_CDEF: Спрайты в действии
        CSF_SpriteLab_SpritesInAction_v2: Спрайты в действии
        CSF_Spritelab_MakeSprite_CDEF: Как создать спрайт в Лаборатории спрайтов?
        CSF_Spritelab_MakeSprite_v2: Как создать спрайт?
        CSF_StarWars_ProjectIntro: Введение в проект Звездные войны
        CSF_Super_Digital_Citizen: Очень Цифровой Гражданин
        CSF_a_b_artist_loops: Циклы в исполнителе Художник
        CSF_artist_angles: Углы в художнике
        CSF_bb8_loops_C-F: Циклы с BB-8
        CSF_bb8_skinOverview_C-F: BB-8
        CSF_bb8_skinOverview_K-1: BB-8
        CSF_collector_k1_blocks: 'Оснвы CS: Коллектор'
        CSF_collector_repeat_loops: Коллектор Повторяет Циклы
        CSF_collector_text_blocks: 'Оснвы CS: Коллектор'
        CSF_create_functions: Создание Функций
        CSF_debugging_k1_blocks: Отладка
        CSF_debugging_text_blocks: Отладка
        CSF_harvester_loops_K1: Циклы в харвестере
        CSF_harvester_skinOverview_K-1: Харвестер
        CSF_if_allskins: Блок Если
        CSF_ifelse_allskins: Использование Если/Иначе блоков
        CSF_ifelseifelse_allskins: Использование Если/ЕслиИначе/Иначе блоков
        CSF_loops_AB: Циклы
        CSF_maze_intro_k1_blocks: Введение в Студию Кода
        CSF_maze_intro_text_blocks: Введение в Студию Кода
        CSF_my_robotic_friends: Мои друзья роботы
        CSF_scrat_loops_CF: Циклы в ледниковом периоде
        CSF_scrat_loops_K1: Циклы в ледниковом периоде
        CSF_skinOverview_Harvester: Харвестер
        CSF_stevie_big_project: Стиви и Большой Проект
        CSF_unspotted_bugs: Незамеченные Баги
        CSF_zuck_loops_short: Повторить Циклы
        CS_Changing_Everything: Информатика изменяет всё
        Getting_Started_BasicFeatures: Базовые возможности Code.org
        Gettting_Started_ClassSection: Создание Классной Сессии
        Gettting_Started_Progress: Прогресс, Обратная связь и оценка
        Gettting_Started_StudentExperience: Опыт студента
        MC_2018_loops: 'Майнкрафт: Водное путешествие. Повторять пока'
        PL-Video-21: Добро пожаловать в профессиональное обучение Code.org!
        PL_CSD_CircuitPlayground_Overview: Обзор Окружной Игровой Площадки
        PL_CSD_CircuitPlayground_Overview_AppsWithDevices: Обзор игрового блока Circuit
        PL_CSD_CircuitPlayground_Setup: Настройка игровой площадки
        PL_CSD_MicroBit_Intro: Знакомство с микро:BIT
        PL_CSD_TeacherTips_Advise: Подсказки учителя - Напутствие новым Учителям
        PL_CSD_TeacherTips_Debugging: Подсказки учителя - Дебаггинг
        PL_CSD_TeacherTips_IntroToCSD: Подсказки учителя - Введение в открытия CS
        PL_CSD_TeacherTips_LeadLearner: Подсказки учителя - Ведущий Ученик
        PL_CSD_TeacherTips_PairProgramming: Подсказки Учителя - Парное Программирование
        PL_CSD_TeacherTips_ProblemSolvingProcess: Подсказки Учителя - Процесс Решения
          Проблем
        PL_CSD_Unit4_AppTesting: Бумажный Прототип - Тестирование
        PL_CSP_EIPMOverview: Руководство по урокам EIPM
        PL_CSP_TeacherTips_APExam: 'Советы учителям: Подготовка к экзамену AP'
        PL_CSP_TeacherTips_Advice: 'Советы преподавателям: Консультация Новых Преподавателей
          Информатики'
        PL_CSP_TeacherTips_Debugging: 'Советы учителям: Помощь в Отладке'
        PL_CSP_TeacherTips_EIPM: 'Советы учителям: Процесс EPM'
        PL_CSP_TeacherTips_IntroToCSP: 'Советы учителям: Введение в Принципы Информатики'
        PL_CSP_TeacherTips_LeadLearner: 'Советы учителям: Как стать Ведущим Учеником'
        PL_CS_Journeys_Overview: Занятия по информатике
        PL_Equity_in_CS_Education: Равноправие в образовании CS
        PL_overview_CSD: Какие есть открытия в области информатики?
        PL_overview_CSP: Что такое Принципы Информатики?
        Unplug1: Что такое информатика?
        Unplug10: интернет
        Unplug11: Итоги
        Unplug2: Вычислительное мышление
        Unplug3: Программирование на бумаге в клеточку
        Unplug4: Алгоритмы
        Unplug5: Процедуры
        Unplug6: Условные команды
        Unplug7: Написание песен
        Unplug8: Абстракция
        Unplug9: Эстафетное программирование
        alg_10_conditionals: Информатика в Алгебре - Условные команды
        alg_11_coordinate_plane: Информатика в Алгебре - Плоскость Координат
        alg_12_biggame_variables: 'Информатика в Алгебре - Большая Игра: Переменные'
        alg_13_biggame_animation: 'Информатика в Алгебре - Большая Игра: Анимация'
        alg_14_biggame_booleans: 'Информатика в Алгебре - Большая Игра: Логические
          значения'
        alg_15_biggame_update_player: 'Информатика в Алгебре - Большая Игра: Обновление
          Игрока'
        alg_16_biggame_collision_detection: 'Информатика в Алгебре - Большая Игра:
          Обнаружение Конфликтов'
        alg_17_sambat_compound_booleans: Информатика в Алгебре - Составные Логические
          значения
        alg_1_intro: Информатика в Алгебре - Введение
        alg_2_eval_block: Информатика в Алгебре - Блоки Оценивания
        alg_3_pemdas: Информатика в Алгебре - Порядок Операций
        alg_4_data_types: Информатика в Алгебре - Типы Данных
        alg_5_contracts: Информатика в Алгебре - Контракты
        alg_6_variables: Информатика в Алгебре - Переменные
        alg_7_function: Информатика в Алгебре - Функции
        alg_8_design_recipe: Информатика в Алгебре - Набор правил Структуры кода
        alg_9_booleans: Информатика в Алгебре - Логические значения
        applab_hoc_designmode: Час кода лаборатории приложений - дизайн режим
        applab_hoc_onevent: Час кода лаборатории приложений - onEvent
        applab_hoc_setproperty: Час кода лаборатории приложений - установить свойство
        applab_hoc_share: Час кода лаборатории приложений - предоставление общего
          доступа
        applab_hoc_welcome: Час кода лаборатории приложений - добро пожаловать
        applab_intro_designmode: Лаборатория приложений - дизайн режим
        applab_intro_events: Лаборатория приложений - сделай его интерактивным
        applab_intro_share: Лаборатория приложений - поделись своим приложением
        applab_intro_sounds: Лаборатория приложений - изображения и звуки
        applab_intro_welcome: Лаборатория приложений - начало работы
        artist_intro: Художник - Введение
        c_and_c_digital_sharing: Публикация цифровых произведений
        c_and_c_great_to_create: Честность в творчестве и игре
        code-break: Возьми перерыв на код.
        codebreak_e01: 'Code Break 1.0: Алгоритмы с Хиллом Харпером'
        codebreak_e02: 'Code Break 2.0: Прототипы с Марком Кубаном и Линдси Скотт'
        codebreak_e03: 'Code Break 3.0: Шифрование с Эштоном Катчером и Мией Гил Эпнер'
        codebreak_e04: 'Code Break 4.0: Цифровая информация с Майком Кригером и Элис
          Килер'
        codebreak_e05: 'Code Break 5.0: Моделирование и данные с Биллом Гейтсом'
        codebreak_e06: 'Code Break 6.0: Интернет с Кигэн-Майкл Скотт и Винтом Серфом'
        codebreak_e07: 'Code Break 7.0: Условные обозначения с Сэлом Ханом и Фло Вон'
        codebreak_e08: 'Code Break 8.0: Переменные с Ярой Шахиди и Фаззи Хосровшахи'
        codebreak_e09: 'Code Break 9.0: События с Macklemore & Scott Forstall'
        codebreak_e10: 'Code Break 10.0: AI с Кэт Грэм и Кейт Парк'
        codebreak_e11: 'Code Break 11.0: Абстракция с Сьюзен Войчицки и Чайной Энн
          Макклейн'
        codebreak_e12: 'Code Break 12.0: железо с Алоэ Блэсс, Брет Тейлор и Паола
          Мехиа'
        conditionals_with_cards: Откреплённый урок в действии - Условные обозначения
          с картами
        cs-principles-intro-to-objects: 'Принципы CS: введение в объекты'
        csa-alias-video: Эквивалентности и Псевдонимы
        csa-day-in-pm-pl: Чем занимается менеджер проекта?
        csa-equals-video: Метод .equals()
        csa-example-solution-1: 'Кодирование в реальном времени: пример решения '
        csa-multi-select-pl: Операторы множественного выбора в Java
        csa-pl-calling-methods: Вызов методов в Java
        csa-pl-compareTo: Метод compareTo ()
        csa-pl-creating-objects: Создание объектов
        csa-pl-documentation: Документация в Java Lab
        csa-pl-equals-book: Написание метода equals() для класса Book
        csa-pl-intro-to-equality: Введение в Эквивалентность
        csa-pl-intro-to-equals-method: Введение в метод .equals()
        csa-pl-intro-to-oop: Введение в объектно-ориентированное программирование
        csa-pl-intro-to-pm: Введение в управление проектами
        csa-pl-intro-to-strings: Введение в строки в Java
        csa-pl-vocab-pm: Словарь по управлению проектами
        csa-pl-vpl-m1-unit-3: Разработка Программного Обеспечения в Модуле 3
        csa-pl-welcome-to-Neighborhood: Добро пожаловать в The Neighborood
        csa-user-stories: Истории Пользователей в Разработке Программного Обеспечения
        csa_accessor_methods: 'CSA: методы доступа'
        csa_calling_methods: 'CSA: методы вызова'
        csa_casting: 'CSA: Кастинг'
        csa_column_major_traversal: 'CSA: Пересечение колонны и мажора'
        csa_conditional_statements: 'CSA: условные заявления'
        csa_constructors: 'CSA: Конструкторы'
        csa_creating_a_scanner_object: 'CSA: создание объекта сканера'
        csa_creating_objects: 'CSA: создание объектов'
        csa_creating_variables: 'CSA: создание переменных'
        csa_enhanced_for_loops: 'CSA: улучшено для циклов'
        csa_enhanced_for_loops_and_2d_arrays: 'CSA: улучшено для циклов и двумерных
          массивов'
        csa_equals_and_aliases: 'CSA: равенства и псевдонимы'
        csa_for_loops: 'CSA: Для циклов'
        csa_images_and_pixels: 'CSA: изображения и пиксели'
        csa_inheritance: 'CSA: Наследование'
        csa_instance_variables_and_attributes: 'CSA: переменные и атрибуты экземпляра'
        csa_modifying_values_in_a_1d_array: 'CSA: изменение значений в одномерном
          массиве'
        csa_multi-selection_statements: 'CSA: заявления о множественных отборах'
        csa_mutator_methods: 'CSA: методы мутаторов'
        csa_nested_loops: 'CSA: вложенные циклы'
        csa_object_oriented_programming: 'CSA: объектно-ориентированное программирование'
        csa_one_dimensional_arrays: 'CSA: одномерные (одномерные) массивы'
        csa_overloaded_constructors: 'CSA: перегруженные конструкторы'
        csa_polymorphism: 'CSA: полиморфизм'
        csa_printing_in_java: 'CSA: печать на Java'
        csa_private_methods: 'CSA: частные методы'
        csa_random_numbers: 'CSA: случайные числа'
        csa_recursion: 'CSA: Рекурсия'
        csa_remving_data_from_an_arraylist: 'CSA: удаление данных из ArrayList'
        csa_row_major_traversal: 'CSA: Обход между строками и основными строками'
        csa_scanner_class_methods: 'CSA: методы класса сканера'
        csa_searching_algorithms: 'CSA: алгоритмы поиска'
        csa_software_engineering_code_reviews: 'CSA: Инженерия программного обеспечения
          — обзоры кода'
        csa_sorting_algorithms: 'CSA: алгоритмы сортировки'
        csa_static_methods: 'CSA: статические методы'
        csa_static_variables: 'CSA: статические переменные'
        csa_the_arraylist_class: 'CSA: класс ArrayList'
        csa_the_equals_method: 'CSA: метод equals ()'
        csa_the_tostring_method: 'CSA: метод toString ()'
        csa_two_dimensional_arrays: 'CSA: двумерные (2D) массивы'
        csa_two_way_selection_and_not: 'CSA: двусторонний выбор, а не'
        csa_welcome_to_the_theater: 'CSA: Добро пожаловать в театр'
        csa_while_loops: 'CSA: Пока циклы'
        csa_working_with_2d_array_elements: 'CSA: работа с элементами 2D-массива'
        csa_working_with_arraylist_data: 'CSA: работа с данными ArrayList'
        csa_wrapper_classes_part_1: 'CSA: Классы оберток, часть 1'
        csa_wrapper_classes_part_2: 'CSA: Классы оберток, часть 2'
        csa_writing_a_method: 'CSA: написание метода'
        csc-ecosystems-intro: Введение в экосистемы
        csc-event-short-intro: Краткое введение в события
        csc-poem-art-intro: Вступительное Видео
        csc-poem-art-outro: Заключительное Видео
        csc-sprite-lab-pixel-editor: Нарисуйте свой собственный спрайт
        csc-starquilts-intro: 'CSC: Стеганые одеяла со звездами'
        csc_animal_adaptations_intro: Введение в адаптацию животных
        csc_fm_pilot: Функциональные машины (пилот)
        csc_fm_pilot_v2: 'Введение в функциональные машины '
        csc_timecapsule_intro: Введение Капсулы Времени
        csd_app_lab_design_mode: Лаборатория CSD приложений - Режим Разработки
        csd_app_lab_events: Лаборатория CSD приложений - События
        csd_applab_arrays: Введение в массивы
        csd_applab_designmode: 'CS Discoveries: App Lab - Режим проектирования'
        csd_applab_designmode_short: App Lab - Режим дизайна
        csd_applab_loops: Циклы в Лаборатории приложений
        csd_applab_parameters: Процедуры с параметрами
        csd_concept_binary_data: 'Как работают компьютеры: двоичный код и данные'
        csd_concept_circuits_logic: 'Как работают компьютеры: схемы и логика'
        csd_concept_computer: Что Делает Компьютер, Компьютер?
        csd_concept_hardware_software: 'Как работают компьютеры: аппаратное и программное
          обеспечение'
        csd_concept_how_computers_work: Введение в работу компьютеров
        csd_concept_memory_cpu_input_output: 'Как работают компьютеры: память, процессор,
          ввод и вывод'
        csd_concept_search: Как Работает Поиск
        csd_debugging: Отладка
        csd_external_amazon_data: Как большие данные используются в рекомендательных
          системах Amazon для изменения нашей жизни
        csd_external_netflix_data: Как Netflix делает предложения телешоу и фильмов?
        csd_external_waze_data: Почему Так Много Пользователей Одержимы Waze?
        csd_gamelab_animation_tab: Вкладка Анимация
        csd_gamelab_booleans: Логические выражения
        csd_gamelab_conditional_statements: Условные операторы
        csd_gamelab_functions: Вызов и определение функций
        csd_gamelab_if_else: Операторы Если/Иначе
        csd_gamelab_velocity: Скорость
        csd_how_teamwork_works: Как устроена командная работа?
        csd_ml_ethics_ai: 'Этика и ИИ '
        csd_ml_how_ai_works: Как ИИ Работает
        csd_ml_import_model: Импортирование в AI модели
        csd_ml_intro_ai_lab_july2021: Введение в AI лаборатории
        csd_ml_intro_to_ai_lab: Введение в AI лаборатории
        csd_ml_model_cards_july2021: Карточки моделей в AI Lab
        csd_ml_numerical_ai_lab: Числовые данные в ИИ лаборатории
        csd_ml_training_testing_ai_lan: Тренировка и Тесты в AI Lab
        csd_pair_programming: Программирование в парах
        csd_problem_solving_process: Процесс решения проблем
        csd_sprite_properties: Свойства спрайтов
        csd_teamwork_and_disagreement: Командная работа - устранение разногласий
        csd_u6_call_define_functions: 'CSD: Вызов и Определение Функций'
        csd_u6_circuit_playground: Физические вычисления
        csd_u6_if_statements: 'CSD: Условные Выражения'
        csd_u6_variables_part2: Переменные - Часть 2
        csd_weblab_css_1: Введение в CSS - Часть 1
        csd_weblab_css_2: Введение в CSS - Часть 2
        csd_weblab_intro_1: Введение в Web Практику - Часть 1
        csd_weblab_intro_2: Введение в Web практику - Часть 2
        csd_weblab_intro_3: Введение в Web Практикум - Часть 3
        csd_what_computers_are: Что такое компьютер?
        csd_what_computers_do: Что делают компьютеры?
        csf21pilot_events: 'Лаборатория Спроайтов: спрайты в действии'
        csf21pilot_prompts: 'Лаборатория спрайтов: текст и подсказки'
        csf_follow_the_digital_trail: Следуйте по Цифровому следу
        csf_lots_of_sprites: 'Лаборатория Спрайтов: Много Спрайтов'
        csf_my_online_neighborhood_2020: Мой Онлайн-Район
        csf_private_and_personal_information: Private and Personal Information
        csp-pd-welcome: Добро пожаловать в семью!
        csp_U1L14_tipstricks: 'Модуль 1, урок 14: советы для учителей'
        csp_applab_functions: Функции. Введение
        csp_applab_functions_parameters: Процедуры с параметрами
        csp_applab_loops: Циклы
        csp_applab_parameters: Процедуры с параметрами
        csp_concept_rgb: Немного о пикселях
        csp_cs_is_changing_everything: Информатика изменяет всё
        csp_defining_calling_functions: Определение и вызов функций
        csp_global_vs_local: Отладка Глобальных Переменных в сравнении с Локальными
        csp_pixelation_bw: Инструмент пикселизации чёрного и белого
        csp_pixelation_color_1: Инструмент пикселизации цвета - часть 1
        csp_pixelation_color_2: Инструмент пикселизации цвета - часть 2
        csp_pixelation_color_3: Инструмент пикселизации цвета - часть 3
        csp_textcompression: Виджет сжатия текста
        csp_textcompression_new: Виджет сжатия текста
        csp_tutorial_datatab: Вкладка "Данные" в App Lab
        csp_tutorial_datavis1: Визуализатор данных в App Lab - Часть 1
        csp_tutorial_datavis2: Визуализатор данных в App Lab - Часть 2
        csp_tutorial_libraries: Библиотеки в App Lab
        elem_pd_2: Информатика в Начальной школе - PD видео 2/2
        enter_your_own_poem: Введите свое стихотворение
        farmer_intro: Фермер. Введение
        flappy_intro: Порхающая птичка. Введение
        frozen_functions: Функции. Введение
        frozen_intro: Час кода. Введение
        frozen_loops: Циклы. Введение
        function: Процедуры
        gumball_events: Час кода. Гамбол. События
        gumball_intro: Час кода. Гамбол. Введение
        gumball_repeat: Час кода. Гамбол. Операторы цикла
        hello_world_congrats: Привет, мир - Делайте, что вам хочется
        hello_world_events: Привет, мир - Программирование с событиями
        hello_world_intro: Привет, мир - Добро пожаловать в Sprite Lab
        hint_videos_d_11_11_first: 'Видео-подсказки: D.11.11 первая'
        hint_videos_d_11_11_last: 'Видео-подсказки: D.11.11 последняя'
        hint_videos_d_11_3_first: 'Видео-подсказки: D.11.3 первая'
        hint_videos_d_11_3_last: 'Видео-подсказки: D.11.3 последняя'
        hint_videos_d_11_4_first: 'Видео-подсказки: D.11.4 первая'
        hint_videos_d_11_4_last: 'Видео-подсказки: D.11.4 последняя'
        hint_videos_d_11_5_first: 'Видео-подсказки: D.11.5 первая'
        hint_videos_d_11_5_last: 'Видео-подсказки: D.11.5 последняя'
        hint_videos_d_11_6_first: 'Видео-подсказки: D.11.6 первая'
        hint_videos_d_11_6_last: 'Видео-подсказки: D.11.6 последняя'
        hint_videos_d_11_7_first: 'Видео-подсказки: D.11.7 первая'
        hint_videos_d_11_7_last: 'Видео-подсказки: D.11.7 последняя'
        hint_videos_d_11_9_first: 'Видео-подсказки: D.11.9 первая'
        hint_videos_d_11_9_last: 'Видео-подсказки: D.11.9 последняя'
        hoc_dance_congrats: Танцевальная вечеринка – вечеринка началась!
        hoc_dance_congrats_2019: Танцевальная вечеринка 2019 г. – вечеринка началась!
        hoc_dance_events: Танцевальная вечеринка – события
        hoc_dance_events_2019: Танцевальная вечеринка 2019 г. – события
        hoc_dance_measures_2019: Танцевальная вечеринка 2019 г. – такты
        hoc_dance_properties: Танцевальная вечеринка – свойства
        hoc_dance_properties_2019: Танцевальная вечеринка 2019 г. – свойства
        hoc_dance_warmup: Танцевальная вечеринка - разминка
        hoc_dance_warmup_2019: Танцевальная вечеринка 2019 г. – подготовка
        hoc_wrapup: Итоги часа кода
        how-to-k5-workshops: 'Основы CS на Code.org: Тестирование ребёнка, Одобрение
          учителя'
        iceage_events: Час кода. Ледниковый период. События
        iceage_intro: Час кода. Ледниковый период. Введение
        iceage_repeat: Час кода. Ледниковый период. Операторы цикла
        if: Блок «если»
        if_else: Блок «если/иначе»
        if_else_scrat: Блок «если/иначе»
        infinity_playlab_events: Лаборатория игр. События
        infinity_playlab_intro: Лаборатория игр. Введение
        infinity_playlab_repeat_forever: Лаборатория игр. Блок «повторять бесконечно»
        lesson_planning: Планирование урока
        loop_for: Блок «цикл по счетчику»
        loop_times: Блок «повторить несколько раз»
        loop_until: Блок «повторять до»
        loop_while: Блок «пока»
        maze_intro: Лабиринт - Введение
        mc_2016_congrats: Час Кода Minecraft - Поздравления
        mc_2016_events: Час Кода Minecraft - События
        mc_2016_intro: Minecraft Час Кода - Введение
        mc_2016_loops: Minecraft Час Кода - Циклы
        mc_2016_spawn: Minecraft Час Кода - Вариации
        mc_2017_agent_intro: Майнкрафт Час Кода - Исполнитель
        mc_2017_congratulations: Час Кода Minecraft - Поздравления
        mc_2017_functions: Час Кода Minecraft - Функции
        mc_2017_puzzle_1: Майнкрафт Час Кода - Исполнитель
        mc_2017_puzzle_12: Майнкрафт Час Кода - Свободный уровень игры
        mc_2017_puzzle_3: Minecraft Час Кода - Циклы
        mc_2017_puzzle_8: Час Кода Minecraft - Функции
        mc_2017_repeat: Minecraft Час Кода - Циклы
        mc_2018_closing: 'Майнкрафт: Водное путешествие. Поздравления'
        mc_2018_conditionals: 'Майнкрафт: Водное путешествие. Условия'
        mc_2018_intro: 'Майнкрафт: Водное путешествие. Введение'
        mc_congrats_no_share: Minecraft. Поздравления
        mc_congrats_share: Minecraft. Поздравления
        mc_if_statements: Minecraft. Оператор «если»
        mc_intro: Minecraft. Введение
        mc_repeat: Minecraft. Повтор
        oceans_machine_learning: Машинное обучение
        oceans_societal_implications: Общественная Значимость
        oceans_training_data: Обучающие данные
        opd_closing: 'Изучаем основы информатики: Заключение и Следующие шаги'
        outbreak_events: 'Симулятор Вспышки Эпидемии: События'
        outbreak_intro: 'Симулятор Вспышки Эпидемии: Введение'
        outbreak_mike: CodeBytes Эпизод 3 с Майком - Симулятор вспышки
        outbreak_outro: 'Симулятор Вспышки Эпидемии: Свободная Игра'
        outbreak_scientist: 'Симулятор Вспышки Эпидемии: Думай Как Ученый'
        parameters: Процедуры с параметрами
        playlab_2021: Лаборатория игр. Введение
        playlab_2021_reader: Лаборатория игр. Введение
        playlab_events: Лаборатория игр. События
        playlab_intro: Лаборатория игр. Введение
        playlab_repeat_forever: Лаборатория игр. Блок «повторять бесконечно»
        poemart_celebration: Торжество в Искустве Поэзии
        poemart_events: События в Искустве Поэзии
        poemart_imagery: Образ в Искустве Поэзии
        poemart_intro: Введение в поэтическое искусство
        poembot-pilot-haiku: Боты Haiku - Покажите ваших Haiku [PILOT]
        poembot-pilot-prompts: Боты Haiku - подсказка с выбором [PILOT]
        poembot-pilot-text: Боты Haiku - Сохранение текста [PILOT]
        poembot-playtest-events: Игровой тест PoemBot - события
        poembot-playtest-intro: Игровой тест PoemBot - введение
        poembot-playtest-sprites: Игровой тест PoemBot - спрайты
        poetry_module_conditionals: Условные операторы - Кодирование и поэзия
        poetry_module_multichoiceprompts: Подсказки с несколькими вариантами - Кодирование
          и поэзия
        poetry_module_planningapp: Планирование приложения Poem Generator - Кодирование
          и поэзия
        poetry_module_textandvariables: Текст и переменные - Кодирование и поэзия
        poetry_module_variables: Переменные - Кодирование и поэзия
        repeat_block: Использование блока Повтор
        rough_poemart_congrats: v1 Poem Art Поздравления
        rough_poemart_events: v1 Poem Art События
        rough_poemart_imagery: v1 Poem Art Изображение
        rough_poemart_intro: v1 Poem Art Введение
        songwriting_with_functions: Откреплённый урок в действии - Написание песен
          с функциями
        star_quilts_intro_to_artist: 'Одеяла Star: знакомство с художником'
        starquilts_intro_artist: Вступление к "Звездным Одеялам"
        starwars_blocks_congrats: 'Звездные войны: Создайте галактику, используя код.
          Поздравления'
        starwars_blocks_events: 'Звездные войны: Создайте галактику, используя код.
          События'
        starwars_blocks_intro: 'Звездные войны: Создайте галактику, используя код.
          Введение'
        starwars_congrats: 'Звездные войны: Создайте галактику, используя код. Поздравления'
        starwars_events: 'Звездные войны: Создайте галактику, используя код. События'
        starwars_intro: 'Звездные войны: Создайте галактику, используя код. Введение'
        starwars_typing: 'Звездные войны: Создайте галактику, используя код. Язык
          JavaScript'
        teaching_cs_pair_programming: 'Изучаем основы информатики: Парное программирование'
        teaching_csf_how_it_works: 'Изучаем основы информатики: Как работает курс'
        teaching_problem_solving: 'Изучаем основы информатики: Учимся решать проблемы'
        tutorial_puzzle_challenge: Урок. Головоломка
        u5-traversals-get-list-explanation: Code.org [levelbuilder] - Вступительное
          видео - Блок данных
        u7-libraries-explanation: 'App Lab: Создавайте свои собственные блоки - Как
          использовать библиотеки'
        upload_sprites_backgrounds: Загрузка собственных спрайтов и фонов
        what-is-creativity: Что такое творчество?
        what_is_an_event: Что такое событие?
        what_is_cs: Что такое информатика?
        why-should-teach-unplugged-activities: 'FAQ: Почему я должен учить "откреплённым"
          действиям?'
        why_unplugged_lessons: Получение "откреплённого"
        writing_first_program: Напишите вашу первую программу!
