---
es-ES:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Si utiliza el bloque para hacerme 'avanzar 100 píxeles',
          sacaré una línea automáticamente.
        2-3_Artist_1_new_b: "¿Tienes problemas girando la esquina? Usa el bloque `girar
          a la derecha 90 grados`."
      2-3 Artist 11:
        2-3_Artist_11_a: "¿Tienes problemas con los ángulos? Necesitas ir 360 grados
          en 8 vueltas.  ¿Qué es 360/8? "
      2-3 Artist 12:
        2-3_Artist_12_a: Hay 360 grados en un círculo, así que si el artista gira
          1 grado cada vez en el lazo, tendrá que hacerlo 360 veces.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: El artista parece no estar apuntando en la dirección correcta.
          ¿Puedes hacerlo girar primero antes de dibujar la línea?
      2-3 Artist 3new:
        2-3_Artist_3new_a: "¿Cuánto es 100-70?  Basado en el problema de la historia,
          así es que tal alto el sombrero tiene que ser!"
        2-3_Artist_3new_b: El artista parece no estar apuntando en la dirección correcta.
          ¿Puedes hacerlo girar primero antes de dibujar la línea?
      2-3 Artist 4:
        2-3_Artist_4_a: Para terminar la casa, ¡todo lo que tenemos que hacer es dibujar
          un cuadrado!
      2-3 Artist 6:
        2-3_Artist_6_a: 'Para hacer esos pequeños ángulos, tienes que girar _más lejos_
          cada vez que hecho con la Plaza.   '
        2-3_Artist_6_b: Como ya estoy mirando hacia la derecha, es más fácil empezar
          por avanzar, y luego hacer vueltas a la izquierda para crear el triángulo.
        2-3_Artist_6_c: Cada lado del triángulo es de la misma longitud que cada lado
          de la Plaza... ¡100 píxeles!
      2-3 Artist 7:
        2-3_Artist_7_a: La forma más sencilla de resolver este rompecabezas es dibujar
          el primer cuadrado y acabar con el artista apuntando hacia abajo antes de
          comenzar el segundo cuadrado.
      2-3 Artist 8:
        2-3_Artist_8_a: Si cortar 200 por la mitad, ¿de cuántos píxeles de ancho necesita
          ser cada cuadrado?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Este diamante es realmente sólo un cuadrado de lado
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: Recuerda, quieres que el panel de control sea 10
          píxeles \* mayor \*... así que no olvides \*\* añadir \*\* 10 a cualquier
          número que cambies.
        2-3_Artist_Debugging_10_b: "\\*\\* ¡Está bien usar ensayo y error aquí! \\*\\*\n\nComienza
          por cambiar un número a la vez.    \n\n ¿Que números de hacen qué?\n\nSi
          te pierdes, simplemente haz clic en \"Comenzar nuevamente\"."
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Consejo: Cada barba es de 75 píxeles de largo.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Una de las vueltas es 15 grados más pequeña.
        2-3_Artist_Debugging_3_b: Si el programa se ejecuta demasiado rápido para
          ver lo que está ocurriendo, trate de frenar usando la barra deslizante.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: "¿Qué pasa si haces que el artista se mueva o salte
          hacia atrás después de que dibuje la primera línea?"
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          ¿Cuántas veces se repitió mi forma?

          ¿Cuantas veces _debería_ repetirse la forma?

          ¿Donde se puede cambiar eso en el programa?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: "¡El artista necesita girar 60 grados más a la izquierda
          antes de comenzar a dibujar!"
        2-3_Artist_Debugging_9_b: No necesitas agregar otro bloque para obtener el
          giro completo, ¡solamente agrega 60 grados al bloque de `girar a la izquierda`
          que ya hay allí!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: Los cuadrados tienen 100 píxeles de lado cada uno,
          lo que significa que te habrás movido 175 píxeles hacia adelante antes de
          dibijar el segundo cuadrado.
        2-3_Artist_Functions_1_b: Está bien dibujar líneas superpuestas para realizar
          los anteojos.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Deberás cambiar no solo la cantidad y el largo
          de los lados dentro de la función, sino que también deberás cambiar el ángulo
          con el que el artista gira entre cada lado.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Intenta ejecutar el código primero para ver que
          necesitarás agregar.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          Tu programa deberá:

          -   Usar función
          -   Mover hacia adelante 100 + 75 píxeles
          -   Usar función
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: El artista necesita girar 120 grados entre cada
          cuadrado para completar este diseño.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_b: Tu nuevo giro debería ir al **final** del código
          dentro del bucle.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Antes de iniciar el diamante, el artista necesita
          girar 60 grados a la izquierda para llegar al camino correcto.
        2-3_Artist Loops_New_12_b: Luego que el artista se mueve hacia adelante 100
          píxeles, deberá girar a la derecha 120 grados para lograr realizar la esquina
          fina.
        2-3_Artist Loops_New_12_c: El artista necesita girar a la derecha solamente
          60 grados para crear una esquina amplia.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: |-
          Al final de cada diamante, el artista ya estará mirando en la dirección correcta para iniciar el siguiente.

          Por esto no se necesita agregar un bloque extra de `girar a la izquierda` antes de comenzar nuevamente.
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: El artista necesita girar 45 grados a la derecha
          antes de empezar a dibujar.
        2-3_Artist_Loops_New_9_b: Esta V es la mitad de un cuadrado.  ¿Cuál sería
          el código para dibujar la mitad de un cuadrado?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Recuerda poner todos los bloques grises dentro
          de tu bucle.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: |-
          ¿Necesitas ayuda con los ángulos?
          **360/12 = 30**
        2-3_Artist_Nested_Loops_3_b: Recuerda poner todo el código gris y tu bloque
          de girar dentro de un bucle.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: |-
          ¿Necesitas ayuda con los ángulos?
          **360/12 = 30**
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: Utilice el bloque 'salto adelante' llegar desde
          la parte superior de una plaza el lugar donde se iniciará la siguiente.
          Si sus plazas son 20 píxeles de alto y 20 píxeles apartes, ¿cuánto necesita
          saltar?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: "¿Hasta qué punto gire en cada lazo?    ¿Qué
          es 360/10?"
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          ¿Necesitas ayuda para encontrar el ángulo correcto?

          **360/12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: "¿Teniendo un tiempo difícil averiguar cómo bajar
          los bloques?  ¡Intentar tratar la flor roja exactamente igual que una flor
          morada!"
        2-3_Bee_Conditionals_14_b: "¿Si la flor roja fuera púrpura, podría usted averiguar
          cómo utilizar un bucle extra 'repetición' para reducir el código?"
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Recuerde: Flores de color púrpura sólo néctar
          ya sea 0 o 1 y puede cambiar cada vez que se ejecuta el programa.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: El código será acortado si usa un bucle cada vez
          que avanza, otro bucle para recolectar néctar y otro para hacer miel.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: Recuerde:! las flores púrpuras cambian entre 0 y
          1 de néctar cuando ejecuta su programa!
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Una vez que encuentras y arreglas el bloque incorrecto,
          ¿ves algún patrón que pueda hacerse más simple usando un ciclo `repetir`?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Una vez que encuentras y arreglas el bloque incorrecto,
          ¿ves algún patrón que pueda hacerse más simple usando un ciclo `repetir`?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: "¿Hay algún lugar donde la abeja haga algo que no tiene
          sentido? ¿Qué pasa cuando cambias ese bloque?"
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: No tienes que usar un bucle con una función. Intenta
          moverte, usa las funciones, luego avanza y usa las funciones de nuevo.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: No tienes que usar un bucle con una función. Intenta
          moverte, usa las funciones, luego avanza y usa las funciones de nuevo.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco
          Agrega algunos bloques, luego pruébalo. Agrega más, luego intenta de nuevo. ¡Pronto, lo lograras!
          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco.
          Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!
        2-3_Bee_Functions_8_b: |-
          Recuerda construir tu código dentro del bloque de función verde.
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: Deberías terminar con cuatro bloques dentro de tu bucle.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: Deberías tener 6 bloques dentro de tu bucle.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Necesitas dos bucles `repetir` diferentes, uno después
          del otro.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: Deberías terminar con cinco bloques dentro de tu bucle.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_4A_b: La última parte del programa puede terminarse escribiendo
          código al final de su programa fuera de su bucle.
        2-3_Bee_Loops_4A_c: Si aún no puedes detectar los bucles, intenta codificarlo
          primero, luego ve lo que puedes combinar en un bucle 'repetir' al final.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Si no puedes detectar los bloques para colocar `repetir`
          inmediatamente, comienza por codificar cada movimiento y busca un patrón.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Si no puedes decir qué debería ir en el bucle 'repetir',
          intenta arrastrar los bloques uno por uno y ve si puedes encontrar un patrón.
        2-3_Bee_Loops_6_b: Aquí deberían haber 6 bloques dentro del bucle 'repetir'
          cuando hayas terminado.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: La primera acción será un giro, en lugar de un movimiento.
        2-3_Bee_Loops_7_b: 'Si no puedes imaginar el bucle desde el principio, intenta
          programarlo a lo largo del camino, luego busca un patrón.  '
      2-3 Maze 1:
        2-3_Maze_1_a: Para usar un bloque `avanzar`, arrástralo desde el área de la
          barra de herramientas al espacio de trabajo y conéctelo al bloque`al ejecutar`.
      2-3 Maze 16:
        2-3_Maze_16_a: Si el patrón es difícil de ver, intenta programarlo todo primero
          y ve qué cosas se repiten una y otra vez antes de colocar los bucles.
        2-3_Maze_16_b: Para poner muchos bloques dentro de un bucle 'repetir', simplemente
          arrastra un bucle hacia el espacio de trabajo, luego arrastra todos los
          bloques desde el programa de inicio dentro de él!
      2-3 Maze 6:
        2-3_Maze_6_a: "¡Aquí tienes dos caminos para resolver el puzzle!"
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Si el patrón es difícil de ver, intenta programarlo todo
          primero y ve qué cosas se repiten una y otra vez antes de colocar los bucles.
        2-3_Maze_Loops_17_b: ¿Se borró el código de inicio? ¡Haga clic en "volver
          a empezar" para recuperarlo!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Si el patrón es difícil de ver, intenta programarlo todo
          primero y ve qué cosas se repiten una y otra vez antes de colocar los bucles.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Si estas atascado, intenta escribir el código sin bucles
          primero y busca patrones.
        2-3_Maze_Loops_19_b: Poner un bucle de repetición dentro de otro puede ayudar
          a disminuir la cantidad de bloques utilizados.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Busca un patrón de escalera en este laberinto para encontrar
          dónde un bucle puede ser usado.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Si tienes problemas para encontrar el patrón de escalera,
          intenta cubrir los caminos bloqueados con tu dedo.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: Dentro de tu ciclo, asegúrate de que el artista salta hacia
          atrás y hacia arriba después de dibujar cada línea.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          Si el lecho de flores mide 600 píxeles y dos de los lados tienen 200 píxeles de largo, aquí se explica cómo se suman los lados cortos:
          **600 - 200 - 200 = 200**
          Eso significa que ambos lados cortos suman hasta 200 píxeles.
          \*\* ¿Qué es 200/2? \*\*
        4-5_Artist_3_b: Si tu no puedes ver donde esta el bucle 'repetir' inmediatamente,
          intenta programar toda la solución y busca el patrón.
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          ¡Hay 360 grados en un círculo!
          ¡Esa es la cantidad de veces que necesitas repetir este código (convirtiendo 1 grado por vez) antes de que termine el círculo!
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          Prueba y error es un gran método, pero también puede resolver el problema dividiendo el ángulo de 90 grados en tercios.

          \*\* 90/3 = **\_** \*\*
      4-5 Artist 7:
        4-5_Artist_7_a: "¿Qué ángulo es el más pequeño? ¿En qué ángulo está parado
          el artista? "
      4-5 Artist 8:
        4-5_Artist_8_a: "Los lados largos son 240 píxeles cada uno. Eso significa
          que los 2 lados cortos deben sumar:\n\n\\*\\* 800 - 240 - 240 = 320 \\*\\*\n\n¿Qué
          es \\*\\* 320/2 \\*\\*? "
        4-5_Artist_8_b: |-
          ¡Esta imagen se puede hacer de 2 maneras!

          -   Dibuja dos rectángulos que son \*\* 120 \*\* de largo y \*\* 160 \*\* de alto, con un lado superpuesto

          -   Dibuja un rectángulo que sea \*\* 240 \*\* de largo y \*\* 160 \*\* alto, luego agregua una línea en el medio.
      4-5 Artist 9:
        4-5_Artist_9_a: Cuando un triángulo es un equilátero, los lados y ángulos
          son iguales.
        4-5_Artist_9_b: Necesitarás dibujar tres triángulos del mismo tamaño. No olvides
          pasar a tu nueva posición tras cada uno.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: Solo necesitas dibujar el triángulo exterior para
          completar este puzzle.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: Si hay 360 grados en un círculo y cada vuelta gira
          3 grados, ¿cuántas veces necesitarías trazar la mitad de un círculo completo?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Ten en cuenta que dado que los cuadrados tienen 20
          píxeles de largo, tendrás que saltar 20 píxeles antes de comenzar su siguiente
          cuadrado.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Ten cuidado de sacar el bloque completo de "código
          de la barra de herramientas cada vez que pruebas uno nuevo.
        4-5_Artist_Patterns_3_b: Si tu código se vuelve demasiado confuso, siempre
          puedes hacer clic en "volver a empezar" y ¡volver a intentarlo!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: |-
          Ahora, cuando el artista termina cada diamante, se encuentra en la dirección opuesta a la que necesita para comenzar la siguiente.

          ¿Cuántos grados el necesita para girarse y ponerse en línea recta?
      4-5 Bee Conditionals 4:
        remember_quantum: |-
          \*\* Recuerda: \*\* Este puzzle cambia cada vez que se ejecuta.

          Querras usar un bloque condicional (`Si` o`Si /si no`) para resolver el desafío.
      4-5 Bee Conditionals 5:
        remember_quantum: |-
          \*\* Recuerda: \*\* Este puzzle cambia cada vez que se ejecuta.

          Querras usar un bloque condicional (`Si` o`Si /si no`) para resolver el desafío.
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Puedes resolver este rompecabezas usando solo los
          bloques en el espacio de trabajo. ¿En qué orden deberían ir?
        4-5 Bee Conditionals 6_b: Asegúrate de verificar si la flor tiene más de \*\*
          0 \*\* néctar al menos \*\* 3 \*\* veces para resolver este puzzle.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: Si tienes problemas para descubrir lo que no está bien,
          intente ejecutarlo para ver dónde estan las cosas mal.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Intente tratar este puzzle como un rectángulo
          largo donde la abeja necesita avanzar, luego gire a la izquierda varias
          veces para completar el camino.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          Si no puedes ver cómo usar los bucles para resolver el rompecabezas de inmediato, intenta resolverlo primero, luego busca un patrón.

          ¿Debería poner 'repetir' para acortar el código?
      4-5 Maze 4:
        4-5_Maze_4_a: Si estas teniendo dificultades para averiguar dónde colocar
          la repetición, intenta codificar todo y busca un patrón.
      4-5 Maze 5:
        4-5_Maze_5_a: Intenta usar un bucle de "repetir" cada vez que necesites \`avanzar´
          más de dos pasos.
        4-5_Maze_5_b: Tu puedes usar mas de un bucle 'repetir' en el puzzle.
      4-5 Maze 6:
        4-5_Maze_6_a: |-
          Intenta trazar un camino con tu dedo.
          ¿Es el camino más corto que puedes encontrar?
      4-5 Maze 7:
        4-5_Maze_7_a: |-
          \*\* ¿Quieres que tu código sea lo más pequeño posible? \*\*

          Busca patrones en tus bloques. ¿Ves algo que se repite? ¡Intenta poner un bucle en su lugar!
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          No olvides hacer un giro después de tu bucle interno.

          Estarás formando un bucle de 6 triángulos en 360 grados.

          \*\* 360/6 =? \*\*
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          Este diseño se repetirá 10 veces terminando en 360 grados.

          \*\* 360/10 =? \*\*
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          Tienes que repetir el bucle 6 veces terminando en 360 grados.

          \*\* 360/6 =? \*\*
      4-5 While Loops 8:
        4-5_While_Loops_8_a: Cada elemento necesitara su propio bucle 'mientras'.
      Course 4 Artist 11:
        Course_4_Artist_11_a: 'El semi-hexágono tiene una \*\* longitud de 30 \*\*
          y gira a la derecha por \*\* 60 grados \*\*.  '
        Course_4_Artist_11_b: 'El triángulo 2/3 tiene una \*\* longitud de 80 \*\*
          y gira a la derecha por \*\* 120 grados \*\*. '
      Course 4 Artist 12:
        Course_4_Artist_12_a: 'Cada forma repetida es la combinación de \*\* la mitad
          de un hexágono \*\*, seguida de \*\* 2/3 de un triángulo \*\*. '
        Course_4_Artist_12_b: 'La forma de la unidad es casi la misma que en el último
          puzzle, excepto que el medio hexágono es un poco más grande. '
        Course_4_Artist_12_c: "1.  Las primeras tres líneas tienen 60 píxeles de largo
          y necesitas girar 60 grados.\n     2) Las siguientes dos líneas tienen 80
          píxeles de largo y necesitas girar 120 grados "
      Course 4 Artist 6:
        Course_4_Artist_6_a: Hay 3 triángulos dentro de la rotación de 360 grados...
          ¿Cuántas veces 3 entra en 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: |-
          ¿Necesitas ayuda para calcular qué tan lejos girar?

          Hay 3 triángulos dentro de la rotación de 360 grados.

          ¿Cuántas veces 3 entran en 360?
      Course 4 Artist 9:
        Course_4_Artist_9_a: |-
          ¿Necesitas saber cuánto girar?

          ¿Qué es 360 dividido por 10?
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: Este código usa dos `bucle para`. Uno
          cuenta de 1 a 8, el otro cuenta de 8 a 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Cada `bucle contar` tiene tres repeticiones.
          El primero dibuja el conjunto más a la izquierda de 1s, el segundo dibuja
          los 0s en el medio y el tercero dibuja los 1s a la derecha.
        Course_4_Artist_Binary_Free_Play_2b_c: En cada repetición necesitas `contador`
          para 1s y`16- (contador 2x)`para 0s.
        Course_4_Artist_Binary_Free_Play_2b_d: "\\*\\* Solución: \\*\\* \n\n<xml><block
          type=\"when_run\" deletable=\"false\" movable=\"false\"> <next><block type=\"controls_for_counter\"
          inline=\"true\"> <mutation counter=\"counter\"></mutation> <value name=\"FROM\">
          <block type=\"math_number\"> <title name=\"NUM\"> 1</title></block></value>
          <value name=\"TO\"> <block type=\"math_number\"> <title name=\"NUM\"> 8</title></block></value>
          <value name=\"BY\"> <block type=\"math_number\"> <title name=\"NUM\"> 1</title></block></value>
          <statement name=\"DO\"> <block type=\"controls_repeat_ext\" inline=\"true\">
          <value name=\"TIMES\"> <block type=\"variables_get\"> <title name=\"VAR\">
          contador de</title></block></value> <statement name=\"DO\"> <block type=\"procedures_callnoreturn\"
          inline=\"true\"> <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation>
          <value name=\"ARG0\"> <block type=\"text\"> <title name=\"TEXT\"> 1</title></block></value></block></statement>
          <next><block type=\"controls_repeat_ext\" inline=\"true\"> <value name=\"TIMES\">
          <block type=\"math_arithmetic\" inline=\"true\"> <title name=\"OP\"> menos</title>
          <value name=\"A\"> <block type=\"math_number\"> <title name=\"NUM\"> 16</title></block></value>
          <value name=\"B\"> <block type=\"math_arithmetic\" inline=\"true\"> <title
          name=\"OP\"> multiplicar</title> <value name=\"A\"> <block type=\"variables_get\">
          <title name=\"VAR\"> contador</title></block></value> <value name=\"B\">
          <block type=\"math_number\"> <title name=\"NUM\"> 2</title></block></value></block></value></block></value>
          <statement name=\"DO\"> <block type=\"procedures_callnoreturn\" inline=\"true\">
          <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation> <value name=\"ARG0\">
          <block type=\"text\"> <title name=\"TEXT\"> 0</title></block></value></block></statement>
          <next><block type=\"controls_repeat_ext\" inline=\"true\"> <value name=\"TIMES\">
          <block type=\"variables_get\"> <title name=\"VAR\"> contador de</title></block></value>
          <statement name=\"DO\"> <block type=\"procedures_callnoreturn\" inline=\"true\">
          <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation> <value name=\"ARG0\">
          <block type=\"text\"> <title name=\"TEXT\"> 1</title></block></value></block></statement></block></next></block></next></block></statement>
          <next><block type=\"controls_for_counter\" inline=\"true\"> <mutation counter=\"counter\"></mutation>
          <value name=\"FROM\"> <block type=\"math_number\"> <title name=\"NUM\">
          8</title></block></value> <value name=\"TO\"> <block type=\"math_number\">
          <title name=\"NUM\"> 1</title></block></value> <value name=\"BY\"> <block
          type=\"math_number\"> <title name=\"NUM\"> 1</title></block></value> <statement
          name=\"DO\"> <block type=\"controls_repeat_ext\" inline=\"true\"> <value
          name=\"TIMES\"> <block type=\"variables_get\"> <title name=\"VAR\"> contador
          de</title></block></value> <statement name=\"DO\"> <block type=\"procedures_callnoreturn\"
          inline=\"true\"> <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation>
          <value name=\"ARG0\"> <block type=\"text\"> <title name=\"TEXT\"> 1</title></block></value></block></statement>
          <next><block type=\"controls_repeat_ext\" inline=\"true\"> <value name=\"TIMES\">
          <block type=\"math_arithmetic\" inline=\"true\"> <title name=\"OP\"> menos</title>
          <value name=\"A\"> <block type=\"math_number\"> <title name=\"NUM\"> 16</title></block></value>
          <value name=\"B\"> <block type=\"math_arithmetic\" inline=\"true\"> <title
          name=\"OP\"> se multiplican</title> <value name=\"A\"> <block type=\"variables_get\">
          <title name=\"VAR\"> contador</title></block></value> <value name=\"B\">
          <block type=\"math_number\"> <title name=\"NUM\"> 2</title></block></value></block></value></block></value>
          <statement name=\"DO\"> <block type=\"procedures_callnoreturn\" inline=\"true\">
          <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation> <value name=\"ARG0\">
          <block type=\"text\"> <title name=\"TEXT\"> 0</title></block></value></block></statement>
          <next><block type=\"controls_repeat_ext\" inline=\"true\"> <value name=\"TIMES\">
          <block type=\"variables_get\"> <title name=\"VAR\"> contador de</title></block></value>
          <statement name=\"DO\"> <block type=\"procedures_callnoreturn\" inline=\"true\">
          <mutation name=\"draw\"> <arg name=\"binary\"></arg></mutation> <value name=\"ARG0\">
          <block type=\"text\"> <title name=\"TEXT\"> 1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block>
          </xml>"
      Course 4 Artist For Loops 11:
        Course_4_Artist_For_Loops_11_a: "¡El ángulo de giro cambiará con cada forma!\n\nUse
          el bloque matemático para ingresar 360 dividido por el número de lados que
          tiene la forma para obtener el ángulo correcto. "
      Course 4 Artist For Loops 11a:
        Course_4_Artist_For_Loops_11a_a: '360 dividido por el número de lados que
          tiene una forma es la cantidad de grados que deberá girar. '
        Course_4_Artist_For_Loops_11a_b: 'Cada vez, deberá avanzar 10 veces la longitud
          del número actual de lados. '
      Course 4 Artist For Loops 3:
        Course_4_Artist_For_Loops_3_a: Para hacer que el bucle `para` impulse su movimiento,
          asegúrese de estar usando`contador` como distancia.
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: |-
          \*\* ¿Cuál es el número más pequeño que necesitará?
          ¿Cuál es el número más grande?
          ¿Qué tan grande es el aumento en cada ocasión? \*\*

          Esas son las preguntas que debe realizar para completar los espacios en blanco del ciclo `para`.
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: La forma más grande tiene 19 lados.
          El más pequeño tiene solo dos.
        Course_4_Artist_For_Loops_Challenge_b: El bucle 'para' cuenta hasta dos cada
          vez que se ejecuta.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: La base de este código es la misma que
          la solución al desafío anterior... con un par de cambios.
        Course_4_Artist_For_Loops_inspire_b: Intenta con un bucle 'para' que va de
          3 a 10 con un incremento de 1.
        Course_4_Artist_For_Loops_inspire_c: Hay dos iteraciones del mismo bucle de
          repetición dentro del bucle `para`, pero la segunda repetición gira en la
          dirección opuesta.
        Course_4_Artist_For_Loops_inspire_d: "**Solución:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: Comienza con el código del último
          puzzle y agregue un `giro a la derecha` adicional de tres grados dentro
          del ciclo de repetición.
        Course_4_Artist_Functions_Inspiration_b: Intenta girar más de 90 grados fuera
          del bucle `repetir`, pero aún dentro del bucle`para`.
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: Parte de entender cómo usar funciones
          es averiguar cuáles necesita y cuáles no.
        Course_4_Artist_Functions_challenge_b: Use un bucle `para`, luego use su contador
          de variable dentro de un bucle`repetir` anidado.
        Course_4_Artist_Functions_challenge_c: En cada iteración, debe dibujar un
          cuadrado y luego saltar hacia adelante.
        Course_4_Artist_Functions_challenge_d: Tendras que girar a la izquierda 90
          grados fuera de tu `repetir`, pero aún dentro del bucle `para`.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: Después de completar un cuadrado, intente saltar
          la mitad de su longitud antes de girar y hacer otro.
        Course_4_Artist_Inspire_b: Cada cuadrado y salto se repite cuatro veces (usando
          un giro a la izquierda en el medio) para formar una unidad completa similar
          a un molinete.
        Course_4_Artist_Inspire_c: Cada molinete también se repite cuatro veces, con
          un giro a la derecha de \*\* 360 / lados \*\*.
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: Necesita dos bucles de repetir (uno dentro del
          otro) ambos repitiendo 'lados' veces.
        Course_4_Artist_Vars_13_b: |-
          El ciclo de repetición interno dibuja un octágono (girando a la izquierda).

          Luego, debe avanzar y girar a la derecha solo en el bucle externo.
        Course_4_Artist_Vars_13_c: Para ajustar la forma para que permanezca del mismo
          tamaño cuando cambia el número de lados, use el bloque matemático para dividir
          la longitud en píxeles por el número de lados.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: Para dibujar un polígono regular, gire \*\* 360
          / lados \*\* cada vez.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: Si divide su longitud inicial por el número de lados,
          la longitud de cada lado se acortará a medida que el número de lados aumente.
      Course 4 Bee Params 7:
        notice_pattern: "¿Ves un patrón en cómo cambia la cantidad de néctar? "
        count_with_for: Tenga en cuenta que el néctar se incrementa en pasos. ¿Qué
          tipo de bloque puede usar para hacer lo mismo muchas veces mientras cuenta?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: Está bien pedir un número de miel y un número de
          néctar cada vez. Si no hay nada de algo, el número puede ser 0.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: Debes hacer clic en "editar" en la función de
          salto y actualizarla para que use el parámetro `altura`.
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: Asegúrese de establecer el número de `velocidad_perro`a
          algo más grande que`velocidad_gato`.
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: "¿Qué agregarías a tu bucle `para`en cada
          ocasión para omitir los números pares?"
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: Las banderas están a unos 330 píxeles de
          distancia de los personajes.
        Course_4_Playlab_For_Loops_4b_b: "¿Qué se puede hacer para que cada personaje
          alcance 330 píxeles en el mismo número de movimientos con diferentes números
          de inicio y parada?"
        Course_4_Playlab_For_Loops_4b_c: Recuerde, no importa cuánto se haya pasado
          un personaje de la bandera en su último paso, siempre que le tome a cada
          personaje el mismo número de pasos para llegar a la bandera.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: Los personajes están a unos 175 píxeles del
          centro.
        Course_4_Playlab_For_Loops_5b_b: Recuerde, el próximo paso de un personaje
          será más largo que el anterior, ya que el contador sigue creciendo.
      Course 4 SCF 1:
        Course_4_SCF_1_a: Cada hexágono tiene 40 lados de píxeles.
        Course_4_SCF_1_b: Hay un salto de 120 píxeles entre cada hexágono en cada
          línea horizontal.
        Course_4_SCF_1_c: |-
          Antes de dibujar la segunda fila de hexágonos, debe girar a la derecha 60 grados y avanzar 40 píxeles.

          Una vez que estás en la ubicación vertical correcta, debes volver a girar tu artista y retroceder 320 píxeles hacia atrás.
        Course_4_SCF_1_d: "Antes de dibujar la tercera fila de hexágonos, debes girar
          a la derecha 60 grados y avanzar 40 píxeles.\n\nUna vez que estás en la
          ubicación vertical correcta, debes volver a girar tu artista y retroceder
          440 píxeles (120 píxeles más que tu función de desplazamiento 'hacia abajo
          / adelante'). "
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Recuerda tus funciones desde la etapa 16.
        Course_4_SCF_1a_c: Deberías considerar usar un `bucle para`. No para los pasos,
          sino para el parámetro de la función.
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: |-
          Tenga en cuenta que la forma de todos los puntos de miel es similar.

          Buen lugar para una función!
        Course_4_SCF_1b_c: Deberías considerar usar un `bucle para` para la distancia
          que recorre la abeja.
      Course 4 SCF 2:
        Course_4_SCF_2_a: Cada octágono tiene 40 píxeles por lado.
        Course_4_SCF_2_b: Hay un salto de 136 píxeles entre cada octágono en cada
          línea horizontal.
        Course_4_SCF_2_c: "Antes de dibujar la segunda fila de octágonos, debes girar
          a la derecha 45 grados y avanzar 96 píxeles.\n\nUna vez que estás en la
          ubicación vertical correcta, debes volver a girar tu artista y retroceder
          408 píxeles. "
        Course_4_SCF_2_d: |-
          Tenga en cuenta que debido a que hay menos octágonos en las filas pares, no tiene que retroceder más para llegar al punto de partida de las filas impares.

          Esto significa que puede usar la misma función para todas las filas.
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        Course_4_SCF_3_b: 'Esta es una serie de octógonos con lados que son ''contador''
          píxeles de largo. '
        Course_4_SCF_3_c: 'Cada octágono se llama desde dentro de un bucle ''para''
          que va de 200 hasta 2 por 2. '
        Course_4_SCF_3_d: 'No olvides dar vuelta de 22.5 grados al final de cada iteración. '
        Course_4_SCF_3_e: Tanto el color de cada octágono como el ancho del lápiz
          están controlados por la variable \`contador '.
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_1_b: 'Intente usar dos bucles `para`: uno para trepar y agarrar
          néctar, y el otro para bajar y hacer miel.'
        Course_4_SCFL_1_c: |-
          Observe que un bucle `para` necesita varios bucles regulares dentro en que se repita 'contador' veces para hacer el patrón creciente de escalera.

          El otro bucle `para` solo necesita un bucle regular para hacer una cantidad 'contador' de miel.
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_a: Puede que tengas que desplazarte más lejos en general
          para usar la menor cantidad de bloques.
        Course_4_SCFL_1a_b: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_1a_c: Un `bucle para` te ayudará a ejecutar el mismo patrón,
          pero con un número variable de pasos. Tenga en cuenta que el número de pasos
          necesarios disminuye de 7 a 5 por 1.
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Intenta usando un 'bucle para'.
        Course_4_SCFL_1b_b: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        Course_4_SCFL_2_b: Observe que hay tres puntos durante cada iteración de este
          bucle `para` donde se detiene para interactuar con los objetos.
        Course_4_SCFL_2_c: Durante cada iteración del ciclo `para`, el número de cada
          objeto se relaciona con la variable`contador` de alguna manera.
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: El 'ancho de pluma' es 1. El primer cuadro tiene 50 de
          píxeles de lado, y cada cuadrado es 50 píxeles más amplio que el anterior.
        Course_4_SCFL_3_b: La opacidad en el pincel siempre es `contador` / 2.
        Course_4_SCFL_3_c: Después de hacer cada cuadrado, no te olvides de moverte
          hacia atrás, girar, moverte de nuevo, ¡y luego retroceder!
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: El cambio de color ocurre usando el bloque `set color with
          red, green, blue`. El rojo siempre tiene el valor de `contador`, el verde
          siempre es`255 - contador`, y el azul permanece constante en 255 exactamente.
        Course_4_SCFL_4_b: Cada figura es un cuadro con lados que son de 'counter'
          píxeles de largo, comenzando con 5px, e incrementándose por 5px todo el
          camino hasta 200px.
        Course_4_SCFL_4_c: El artista gira 15 grados entre cada cuadro.
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: El cambio de color ocurre utilizando el bloque 'definir
          color con rojo, verde, azul'. Rojo es la constante definida como 255, verde  es
          siempre el valor de 'contador', y azul es siempre '255-contador'.
        Course_4_SCFL_6_b: El código para esto es mucho más simple de lo que usted
          podría pensar. Solo defina el color dentro del 'ciclo for', avance, luego
          gire.
        Course_4_SCFL_6_c: 'El `control de flujo` va de 5 a 250 por 2. '
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: El cambio de color ocurre usando el bloque `set color con
          rojo, verde, azul`. Rojo está configurado como `contador`. El verde es `255
          - contador`, y el azul se establece constante en 255.
        Course_4_SCFL_7_b: 'Este dibujo se hace usando dos ''controles de flujos''
          similares. Uno va de 5 a 200 por 2, el otro va de 200 a 5 por 2. '
        Course_4_SCFL_7_c: Dentro de cada `control de flujo` avanzas 5 píxeles antes
          de girar en`360 / counter`. ¡No olvides poner tu pincel en el "contador"
          antes de hacer algo!
        Course_4_SCFL_7_d: Tendrás que girar a la izquierda 225 grados entre los dos
          `for loops`.
      Course 4 SCV 1:
        Course_4_SCV_1_a: 'Las variables son útiles ya que usted puede sumarlas cada
          vez mediante un lazo. '
        Course_4_SCV_1_b: Este rompecabezas tiene un lazo que crea un polígono, un
          lazo que repite el polígono 'lados' veces, luego otro lazo que lo hace todo
          de nuevo después de sumar 5 a 'lados'.
        Course_4_SCV_1_c: Usar una variable para 'lados' y una para 'longitud' hace
          al código más limpio ya que usted puede reutilizar el mismo código múltiples
          veces, en vez de crear una nueva copia para cada conjunto de números.
      Course 4 SCV 2:
        Course_4_SCV_2_b: 'Este diseño utiliza lazos anidados (tres niveles). Todos
          los lazos se ejecutan ''lados'' veces. '
        Course_4_SCV_2_c: El artista gira a la izquierda cuando se crea cada decágono,
          pero gira a la derecha en los otros dos lazos.
        Course_4_SCV_2_d: Para evitar que todos sus 10 pétalos de "flores" sean dibujados
          en el mismo lugar, asegúrese de saltar hacia adelante por `longitud`/`lados`
          antes de girar 360/`lados` grados como parte de su lazo más externo.
      Course 4 SCV 3:
        Course_4_SCV_3_a: 'Utilice su block de matemáticas para sumar y restar puntos
          a los puntos variables cuando los sprites choquen. '
        Course_4_SCV_3_b: Usted puede cambiar el parámetro de cuán lejos se mueve
          su sprite cada vez que una de las teclas flecha es presionada.
      Course 4 SCV 4:
        Course_4_SCV_4_a: Tres variables le ayudarán aquí. Una para las unidades de
          néctar, una para unidades de miel, y una para cuán lejos la abeja debería
          moverse en cada iteración.
        Course_4_SCV_4_b: 'Será muy útil usar tres lazos dentro de su lazo principal.
          Uno para moverse hacia adelante, uno para recolectar néctar y otro para
          hacer miel. '
        Course_4_SCV_4_c: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
      Course 4 SCV 5:
        Course_4_SCV_5_b: Cada vez mediante el lazo, las flores tienen dos veces menos
          néctar y la abeja necesitará hacer una miel más.
        Course_4_SCV_5_c: Note que al principio del lazo exterior, las abejas se mueven
          tantas veces como haya néctar en la siguiente flor.
      Course 4 SCV 6:
        Course_4_SCV_6_b: 'Usted se beneficiará de la creación de 8 variables: red1,
          green1, blue1, red2, green2, blue2, longitud, y lados.'
        Course_4_SCV_6_c: Cada uno de los 5 lados de la forma se divide en pedazos
          de "largo" / "lados" donde el zig es verde azulado (rgb = 0,175,200) y el
          zag es morado (rgb = 100, 50, 150).
        Course_4_SCV_6_d: 'Para zig, gire a la izquierda en `360` /`lados`. Para zag,
          gire a la derecha en `360` /`lados`. '
        Course_4_SCV_6_e: 'El resto del programa es muy estándar para hacer una rotación
          completa de 360 grados de esa forma, excepto que estamos superponiendo las
          formas a la mitad, por lo que tenemos que girar a la derecha por `180` /`lados`,
          lo que significa que necesitamos dos veces tantos de ellos como de costumbre
          (repeticiones `lados` \*`2`). '
      CourseD_Dance_Party_01:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Asegúrate de que el bailarín aparezca en la pantalla.

          _Este nivel termina después de 4 compases._
        challenges: |-
          **Desafíos opcionales**

          -   Elige una canción diferente para reproducir.
          -   ¡Elige uno diferente que se parezca a un alce!
          -   Renombra a tu bailarín.
      CourseD_Dance_Party_02:
        validation: |-
          **¿Cómo paso este nivel?**

          -   El bailarín tiene que cambiar a un movimiento nuevo después de 4 compases.

          _El nivel termina después de 8 compases._
      CourseD_Dance_Party_03:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Después de 6 compases, tu bailarín tiene que hacer un baile diferente del que hacía después de 4 compases.

          _El nivel termina después de 12 compases._
      CourseD_Dance_Party_04:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Tienes que hacer que el efecto de fondo cambie en algún momento del séptimo compás de la canción.

          _Este nivel termina después de 10 compases._
        challenges: |-
          **Desafío opcional**

          Cambia el efecto de fondo en diferentes momentos durante la canción conectando el bloque nuevo con los de los compases <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.
      CourseD_Dance_Party_06:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitarás tener al menos dos bailarines.

          _Este nivel termina después de 6 compases._
        challenges: |-
          **Desafío opcional**

          -   Añade un tercer bailarín (¡o tantos como quieras!)
          -   Haz que todos tus bailarines realicen diferentes movimientos en diferentes momentos de la canción.
      CourseD_Dance_Party_08:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Dos bailarines deben tener un tamaño diferente de 100.

          _Este nivel termina después de 6 compases._
        challenges: |-
          **Desafío opcional**

          -   Experimenta cambiando otras propiedades (anchura, altura, rotación, etc.).
      CourseD_Dance_Party_09:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Cambia la tonalidad de por lo menos un bailarín.

          _Este nivel termina después de 8 compases._
      CourseD_Dance_Party_10:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Se deben cambiar las propiedades de dos o más bailarines.

          _Este nivel termina después de 8 compases._
      CourseD_Dance_Party_11:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Usa tu creatividad!

          _Este nivel termina después de 8 compases._
      CourseD_Dance_Party_11_5:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Usa tu creatividad!

          _Este nivel termina después de 8 compases._
      CourseD_Dance_Party_11b:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Utiliza el bloque «cuando flecha izquierda pulsada» para indicar al Robot que haga un movimiento de baile cuando la pulses.

          _Este nivel termina después de 8 compases._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: Mira las **linternas del mar** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          ¿Cómo podrías usar un condicional con ellas para atravesar el monumento
          oceánico?
      CourseE_HOC 2018 Level_7a:
        aquatic7: Puedes utilizar el bloque "si en ruta" para ayudarte a hacer los
          giros de forma correcta.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: "¡Qué arrecife de coral más bonito! ¡Estás en tu **derecho**
          de usar coral azul, pero asegúrate de que el coral rojo quede a la **izquierda**!"
      Dance_2019_01:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Asegúrate de que el bailarín aparezca en la pantalla.

          _Este nivel termina después de 4 compases._
      Dance_2019_04:
        validation: |-
          **¿Cómo paso este nivel?**

          -   El bailarín tiene que cambiar a un movimiento nuevo después de 4 compases.

          _El nivel termina después de 8 compases._
      Dance_2019_05:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Después de 6 compases, tu bailarín tiene que hacer un baile diferente del que hacía después de 4 compases.

          _El nivel termina después de 12 compases._
      Dance_Party_01:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Asegúrate de que el bailarín aparezca en la pantalla.

          _Este nivel termina después de 4 compases._
        challenges: |-
          **Desafíos opcionales**

          -   Elige una canción diferente para reproducir.
          -   ¡Elige uno diferente que se parezca a un alce!
          -   Renombra a tu bailarín.
      Dance_Party_02:
        validation: |-
          **¿Cómo paso este nivel?**

          -   El bailarín tiene que cambiar a un movimiento nuevo después de 4 compases.

          _El nivel termina después de 8 compases._
      Dance_Party_03:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Después de 6 compases, tu bailarín tiene que hacer un baile diferente del que hacía después de 4 compases.

          _El nivel termina después de 12 compases._
      Dance_Party_04:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Tienes que hacer que el efecto de fondo cambie en algún momento del séptimo compás de la canción.

          _Este nivel termina después de 10 compases._
        challenges: |-
          **Desafío opcional**

          Cambia el efecto de fondo en diferentes momentos durante la canción conectando el bloque nuevo con los de los compases <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.
      Dance_Party_06:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Necesitarás tener al menos dos bailarines.

          _Este nivel termina después de 6 compases._
        challenges: |-
          **Desafío opcional**

          -   Añade un tercer bailarín (¡o tantos como quieras!)
          -   Haz que todos tus bailarines realicen diferentes movimientos en diferentes momentos de la canción.
      Dance_Party_08:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Dos bailarines deben tener un tamaño diferente de 100.

          _Este nivel termina después de 6 compases._
        challenges: |-
          **Desafío opcional**

          -   Experimenta cambiando otras propiedades (anchura, altura, rotación, etc.).
      Dance_Party_09:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Cambia la tonalidad de por lo menos un bailarín.

          _Este nivel termina después de 8 compases._
      Dance_Party_10:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Se deben cambiar las propiedades de dos o más bailarines.

          _Este nivel termina después de 8 compases._
      Dance_Party_11:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Usa tu creatividad!

          _Este nivel termina después de 8 compases._
      Dance_Party_11_5:
        validation: |-
          **¿Cómo paso este nivel?**

          -   ¡Usa tu creatividad!

          _Este nivel termina después de 8 compases._
      Dance_Party_11b:
        validation: |-
          **¿Cómo paso este nivel?**

          -   Utiliza el bloque «cuando flecha izquierda pulsada» para indicar al Robot que haga un movimiento de baile cuando la pulses.

          _Este nivel termina después de 8 compases._
      Function intro Ryan:
        Function_intro_Ryan_b: Si llamas a las funciones correctamente, este es el
          camino por el que ira...
        Function_intro_Ryan_a: "¡Puedes invocar una función muchas veces dentro de
          tu programa! Intenta invocarla dos veces para resolver este rompecabezas."
      Function intro Ryan_2019:
        Function_intro_Ryan_b: Si llamas a las funciones correctamente, este es el
          camino por el que ira...
        Function_intro_Ryan_a: "¡Puedes invocar una función muchas veces dentro de
          tu programa! Intenta invocarla dos veces para resolver este rompecabezas."
      HOC 2018 Level_10:
        voyage_aquatic_10a: Mira las **linternas del mar** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          ¿Cómo podrías usar un condicional con ellas para atravesar el monumento
          oceánico?
      HOC 2018 Level_7a:
        aquatic7: Puedes utilizar el bloque "si en ruta" para ayudarte a hacer los
          giros de forma correcta.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: "¡Qué arrecife de coral más bonito! ¡Estás en tu **derecho**
          de usar coral azul, pero asegúrate de que el coral rojo quede a la **izquierda**!"
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Arrastra un bloque de "avanzar" de la caja de herramientas
          al espacio de trabajo y colócalo debajo del bloque de "al ejecutar"
        MC_HOC_2017_01_RETRY_b: No te olvides de hacer clic en "Ejecutar" para ejecutar
          el código del Agent.
        MC_HOC_2017_01_RETRY_c: Una vez el Agent haya ejecutado todo su código, podrás
          desplazar al jugador con las flechas direccionales.
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Arrastra un bloque de "avanzar" de la caja de herramientas
          al espacio de trabajo y colócalo debajo del bloque de "al ejecutar"
        MC_HOC_2017_01_RETRY_b: No te olvides de hacer clic en "Ejecutar" para ejecutar
          el código del Agent.
        MC_HOC_2017_01_RETRY_c: Una vez el Agent haya ejecutado todo su código, podrás
          desplazar al jugador con las flechas direccionales.
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Haz que el Agent se desplace hacia adelante dos espacios
          para que se sitúe en el plato de presión. Eso abrirá la puerta para tu jugador.
        MC_HOC_2017_02_Cole_b: "¡Pulsa \"Ejecutar\"! \nPuedes ejecutar tu código incluso
          si no es el correcto. Ejecuta y reinicia tu código todas las veces que quieras
          hasta que observes qué es lo que falla."
        MC_HOC_2017_02_Cole_c: Una vez el Agent haya abierto la puerta, utiliza las
          flechas direccionales para mover al jugador por el mapa.
        MC_HOC_2017_02_Cole_d: "¡Asegúrate que el agente está siguiendo el camino
          marcado en el mapa!"
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Haz que el Agent se desplace hacia adelante dos espacios
          para que se sitúe en el plato de presión. Eso abrirá la puerta para tu jugador.
        MC_HOC_2017_02_Cole_b: "¡Pulsa \"Ejecutar\"! \nPuedes ejecutar tu código incluso
          si no es el correcto. Ejecuta y reinicia tu código todas las veces que quieras
          hasta que observes qué es lo que falla."
        MC_HOC_2017_02_Cole_c: Una vez el Agent haya abierto la puerta, utiliza las
          flechas direccionales para mover al jugador por el mapa.
        MC_HOC_2017_02_Cole_d: "¡Asegúrate que el agente está siguiendo el camino
          marcado en el mapa!"
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Una vez lleves al Agent al plato de presión, podrás
          utilizar las flechas direccionales para llevar al jugador hasta la brújula.
        MC_HOC_2017_03_Cole_b: ¿Te parece que el código es demasiado largo? Intenta
          utilizar un bucle de "repetición" y comprueba si puedes acortarlo.
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Una vez lleves al Agent al plato de presión, podrás
          utilizar las flechas direccionales para llevar al jugador hasta la brújula.
        MC_HOC_2017_03_Cole_b: ¿Te parece que el código es demasiado largo? Intenta
          utilizar un bucle de "repetición" y comprueba si puedes acortarlo.
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: Utiliza el bloque de "girar a la derecha" para
          modificar la dirección del Agent.
        MC_HOC_2017_04POINT5_RYAN_a: El Agent solo tiene que llegar al primer plato
          de presión para que Alex o Steve puedan llegar al hacha.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: Utiliza el bloque de "girar a la derecha" para
          modificar la dirección del Agent.
        MC_HOC_2017_04POINT5_RYAN_a: El Agent solo tiene que llegar al primer plato
          de presión para que Alex o Steve puedan llegar al hacha.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: El Agent tiene que "avanzar" 7 veces. ¿Cómo puedes
          utilizar un bucle de "repetición" para que eso suceda?
        MC_HOC_2017_04_Cole_c: "¡Pulsa \"Ejecutar\"! \nPuedes ejecutar tu código incluso
          si no es el correcto. Ejecuta y reinicia tu código todas las veces que quieras
          hasta que observes qué es lo que falla."
        MC_HOC_2017_04_Cole_b: Una vez el Agent llegue al plato de presión, abrirá
          la puerta para el jugador.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: El Agent tiene que "avanzar" 7 veces. ¿Cómo puedes
          utilizar un bucle de "repetición" para que eso suceda?
        MC_HOC_2017_04_Cole_c: "¡Pulsa \"Ejecutar\"! \nPuedes ejecutar tu código incluso
          si no es el correcto. Ejecuta y reinicia tu código todas las veces que quieras
          hasta que observes qué es lo que falla."
        MC_HOC_2017_04_Cole_b: Una vez el Agent llegue al plato de presión, abrirá
          la puerta para el jugador.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: ¿Sabías que puedes poner más de un elemento de código
          en un bucle? Intenta poner un tablón **y** avanzar dentro de una "repetición"
          para completar este rompecabezas.
        MC_HOC_2017_05_Cole_b: Haz que el Agente cruce el río, construyendo un puente
          mientras vas.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: ¿Sabías que puedes poner más de un elemento de código
          en un bucle? Intenta poner un tablón **y** avanzar dentro de una "repetición"
          para completar este rompecabezas.
        MC_HOC_2017_05_Cole_b: Haz que el Agente cruce el río, construyendo un puente
          mientras vas.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: "¿Cuántas veces se ejecuta este bucle? ¿Cuántas veces
          _debería_ ejecutarse?"
        MC_HOC_2017_06_Cole_b: "¡Ayuda al Agente a construir un puente a través del
          agua! "
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: "¿Cuántas veces se ejecuta este bucle? ¿Cuántas veces
          _debería_ ejecutarse?"
        MC_HOC_2017_06_Cole_b: "¡Ayuda al Agente a construir un puente a través del
          agua! "
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Todo lo que necesitas que el agente haga es limpiar
          el camino hasta llegar al carro de la mina.
        MC_HOC_2017_07_Cole_a: Para resolver este rompecabezas, intenta averiguar
          para qué sirve la función de "despejar camino" e invócala tantas veces como
          consideres necesario utilizando el pequeño bloque verde de "despejar camino"
          en la caja de herramientas.
        MC_HOC_2017_07_Cole_b: Intenta combinar los bloques de función con otros bloques
          de la caja de herramientas para solucionar este rompecabezas.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Todo lo que necesitas que el agente haga es limpiar
          el camino hasta llegar al carro de la mina.
        MC_HOC_2017_07_Cole_a: Para resolver este rompecabezas, intenta averiguar
          para qué sirve la función de "despejar camino" e invócala tantas veces como
          consideres necesario utilizando el pequeño bloque verde de "despejar camino"
          en la caja de herramientas.
        MC_HOC_2017_07_Cole_b: Intenta combinar los bloques de función con otros bloques
          de la caja de herramientas para solucionar este rompecabezas.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: "¿No sabes a dónde ir? ¡Intenta encontrar la línea
          punteada!"
        MC_HOC_2017_10_Cole_a: "¡Utiliza las funciones para que resolver este rompecabezas
          sea más sencillo!"
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: "¿No sabes a dónde ir? ¡Intenta encontrar la línea
          punteada!"
        MC_HOC_2017_10_Cole_a: "¡Utiliza las funciones para que resolver este rompecabezas
          sea más sencillo!"
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "¡Pulsa \"Ejecutar\"! \nPuedes ejecutar tu código incluso
          si no es el correcto. Ejecuta y reinicia tu código todas las veces que quieras
          hasta que observes qué es lo que falla."
        MC_HOC_2017_08_RY_b: Hay MUCHAS maneras de resolver este rompecabezas. ¡Prueba
          varias!
        MC_HOC_2017_08_RY_c: Intenta seguir la línea punteada para un camino simple
          a través de la lava.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "¡Pulsa \"Ejecutar\"! \nPuedes ejecutar tu código incluso
          si no es el correcto. Ejecuta y reinicia tu código todas las veces que quieras
          hasta que observes qué es lo que falla."
        MC_HOC_2017_08_RY_b: Hay MUCHAS maneras de resolver este rompecabezas. ¡Prueba
          varias!
        MC_HOC_2017_08_RY_c: Intenta seguir la línea punteada para un camino simple
          a través de la lava.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Haz que el Agent construya varios puentes para que
          Alex o Steve puedan caminar más allá de los bordes del mapa.
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Haz que el Agent construya varios puentes para que
          Alex o Steve puedan caminar más allá de los bordes del mapa.
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: Intenta editar la función de `dibuja una
          línea de cuadrados` para que no tengas que decidirlo dos veces.
        NEW_Course_4_Artist_Functions_13_c: "¿Qué código necesitarías si estás intentando
          hacer una estrella usando líneas regular en vez de cajas?"
      NEW Course 4 Artist Functions 4:
        NEW_Course_4_Artist_Functions_4_a: Tendrás que usar un bloque de `gira a la
          derecha con 120 grados` luego de cada cuadro.
      NEW Course 4 Artist Functions 9:
        NEW_Course_4_Artist_Functions_9_a: Intenta ejecutar el código antes de añadir
          algún bloque. ¿Qué hace que el dibujo se vea un poco mal?
        NEW_Course_4_Artist_Functions_9_b: Si no puedes encontrar exactamente lo que
          está mal, intenta reducirle la velocidad al artista moviendo el control
          deslizante a la izquierda.
      NEW Course 4 Artist Params 11:
        NEW_Course_4_Artist_Params_11_a: Hay más de un número que necesita ser reemplazado
          por una variable dentro de la función.
      NEW Course 4 Artist Params 13:
        NEW_Course_4_Artist_Params_13_a: 'Vas a necesitar dividir el _perímetro_ por
          el número de lados para mantener las formas en el mismo tamaño a pesar de
          todo. '
      NEW Course 4 Artist Params inspire:
        brush_width: Establecemos el grosor del pincel a 1, luego el color a azul
          antes de hacer cualquier otra cosa.
        double_loop: Intenta colocar un 'bucle para' dentro de un bucle 'repetir '.
        specifics: |-
          El `bucle para` se ejecuta de tres a diecisiete para cada uno de los seis" pétalos "antes de pasar a crear el siguiente, dibujando formas con solo un número impar de lados.

          El bloque `establecer alfa` usa la división para atenuar el color a medida que el contador aumenta.
        after: Cuando hayas terminado con cada "pétalo", asegúrate de "avanzar" 20
          píxeles antes de hacer una rotación de 60 grados.
      NEW Course 4 Bee For Loops 8:
        NEW_Course_4_Bee_For_Loops_8_a: "Si tu bucle cuenta hacia arriba, el incremento
          es añadido a tu variable de contabilidad cada vez a través. \n\n¿Qué necesitas
          agregarle a cada número para obtener el número tras ese?"
      Overworld Avoid Monsters:
        mc_8_a: Hay pocos caminos que puede tomar. ¿Cuál es el más corto?
        mc_8_b: Utilice 'repetir' lazos' para simplificar su código.
        mc_8_c: Su meta es entrar en la puerta de la casa en la parte superior de
          la pantalla.
      Overworld Avoid Monsters_2019:
        mc_8_a: Hay pocos caminos que puede tomar. ¿Cuál es el más corto?
        mc_8_b: Utilice 'repetir' lazos' para simplificar su código.
        mc_8_c: Su meta es entrar en la puerta de la casa en la parte superior de
          la pantalla.
      Overworld Chop Tree:
        mc_2_a: Usted necesita 'avanzar' dos veces para pararse en frente del árbol.
        mc_2_b: El comando 'destruir bloque' corta el árbol en frente de usted.
      Overworld Chop Tree_2019:
        mc_2_a: Usted necesita 'avanzar' dos veces para pararse en frente del árbol.
        mc_2_b: El comando 'destruir bloque' corta el árbol en frente de usted.
      Overworld Chop Trees:
        mc_4_a: Puede talar árboles en cualquier orden. ¿Qué camino toma el menor
          número de bloques?
        mc_4_b: El comando 'destruir bloque' corta el árbol en frente de usted.
      Overworld Chop Trees_2019:
        mc_4_a: Puede talar árboles en cualquier orden. ¿Qué camino toma el menor
          número de bloques?
        mc_4_b: El comando 'destruir bloque' corta el árbol en frente de usted.
      Overworld House Frame Chosen:
        mc_6_a: Haga click en la flecha sobre el bloque 'colocar' para escoger lo
          que quiere colocar.
        mc_6_b: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          que pasa, aunque aun no hayas resuelto el rompecabezas.  "
        mc_6_c: Usted puede poner más de un bloque dentro de un lazo 'repetir'.
      Overworld House Frame Chosen_2019:
        mc_6_a: Haga click en la flecha sobre el bloque 'colocar' para escoger lo
          que quiere colocar.
        mc_6_b: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          que pasa, aunque aun no hayas resuelto el rompecabezas.  "
        mc_6_c: Usted puede poner más de un bloque dentro de un lazo 'repetir'.
      Overworld Move to Sheep:
        mc_1_a: El bloque 'avanzar' está en la parte superior del cuadro de herramientas.
        mc_1_b: Asegúrate de que ambos bloques `mover hacia adelante` estén rotos
          al bloque `cuando corre`.
      Overworld Move to Sheep_2019:
        mc_1_a: El bloque 'avanzar' está en la parte superior del cuadro de herramientas.
        mc_1_b: Asegúrate de que ambos bloques `mover hacia adelante` estén rotos
          al bloque `cuando corre`.
      Overworld Place Wall:
        mc_5_a: Use primero el bloque 'colocar', y luego el bloque 'mover'.
        mc_5_b: Asegúrese de que ambos bloques están dentro del lazo 'repetir' para
          ejecutar el código más de una vez.
        mc_5_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          que pasa, aunque aun no hayas resuelto el rompecabezas.  "
      Overworld Place Wall_2019:
        mc_5_a: Use primero el bloque 'colocar', y luego el bloque 'mover'.
        mc_5_b: Asegúrese de que ambos bloques están dentro del lazo 'repetir' para
          ejecutar el código más de una vez.
        mc_5_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          que pasa, aunque aun no hayas resuelto el rompecabezas.  "
      Overworld Plant Crops:
        mc_7_a: Use el bloque 'cultivo de plantas' para plantar un cultivo en el espacio
          donde está parado.
        mc_7_b: Ambas franjas de tierra marrón oscuro junto al agua necesitan ser
          llenadas con cultivos.
        mc_7_c: Usted puede poner más de un bloque dentro de un lazo 'repetir'.
      Overworld Plant Crops_2019:
        mc_7_a: Use el bloque 'cultivo de plantas' para plantar un cultivo en el espacio
          donde está parado.
        mc_7_b: Ambas franjas de tierra marrón oscuro junto al agua necesitan ser
          llenadas con cultivos.
        mc_7_c: Usted puede poner más de un bloque dentro de un lazo 'repetir'.
      Overworld Powered Minecart:
        mc_13_a: Utilice 'colocar riel' para colocar un riel en el cuadro en el que
          está.
        mc_13_b: Utilice los lazos 'repetir' para hacer su código más corto.
      Overworld Powered Minecart_2019:
        mc_13_a: Utilice 'colocar riel' para colocar un riel en el cuadro en el que
          está.
        mc_13_b: Utilice los lazos 'repetir' para hacer su código más corto.
      Overworld Shear Sheep:
        mc_3_a: El bloque 'esquilar ' obtiene la oveja en frente de usted. ¿Está frente
          a la oveja?
        mc_3_b: Si necesita cambiar la dirección en la que mira, utilice un bloque
          de 'girar'.
        mc_3_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          que pasa, aunque aun no hayas resuelto el rompecabezas.  "
      Overworld Shear Sheep_2019:
        mc_3_a: El bloque 'esquilar ' obtiene la oveja en frente de usted. ¿Está frente
          a la oveja?
        mc_3_b: Si necesita cambiar la dirección en la que mira, utilice un bloque
          de 'girar'.
        mc_3_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          que pasa, aunque aun no hayas resuelto el rompecabezas.  "
      Underground Avoiding Lava:
        mc_11_a: Todo el código está en su lugar para asegurarse de la lava y enfrentarla.
          Todo lo que necesitas hacer es agregar un bloque para moverte.
        mc_11_b: "¿Debería su comando 'avanzar' ir dentro de la instrucción 'if' o
          después?"
      Underground Avoiding Lava_2019:
        mc_11_a: Todo el código está en su lugar para asegurarse de la lava y enfrentarla.
          Todo lo que necesitas hacer es agregar un bloque para moverte.
        mc_11_b: "¿Debería su comando 'avanzar' ir dentro de la instrucción 'if' o
          después?"
      Underground If Statements:
        mc_12_a: Los espacios con puntos rojos son donde usted encontrará Redstone.
        mc_12_b: "¿Puede utilizar un lazo 'repetir' para hacer su código más corto?"
        mc_12_c: 'Usa un argumento `y si` para revisar si hay espacios con lava, entonces
          coloca rocas. '
      Underground If Statements_2019:
        mc_12_a: Los espacios con puntos rojos son donde usted encontrará Redstone.
        mc_12_b: "¿Puede utilizar un lazo 'repetir' para hacer su código más corto?"
        mc_12_c: 'Usa un argumento `y si` para revisar si hay espacios con lava, entonces
          coloca rocas. '
      Underground Iron:
        mc_10_a: "¡Los bloques de hierro son los espacios punteados detrás de la antorcha!
          ¿Cómo va a llegar allá?"
        mc_10_b: Cuando está parado el borde de la lava, utilice 'colocar adoquín
          adelante' para un camino seguro.¡Luego, podrá caminar sobre el!
        mc_10_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          que pasa, aunque aun no hayas resuelto el rompecabezas.  "
      Underground Iron_2019:
        mc_10_a: "¡Los bloques de hierro son los espacios punteados detrás de la antorcha!
          ¿Cómo va a llegar allá?"
        mc_10_b: Cuando está parado el borde de la lava, utilice 'colocar adoquín
          adelante' para un camino seguro.¡Luego, podrá caminar sobre el!
        mc_10_c: "¡No tengas miedo de cometer un error! Ejecuta el código para ver
          que pasa, aunque aun no hayas resuelto el rompecabezas.  "
      Underground Mining Coal:
        mc_9_a: "¿Está frente al camino correcto? El 'bloque destruir' explota el
          bloque en frente de usted."
        mc_9_b: "¡Las machas negras en el muro son carbón! Utilice 'destruir bloque'
          en estas para minar el carbón."
        mc_9_c: Utilice 'poner antorcha' para poner una antorcha en el espacio donde
          está parado.
      Underground Mining Coal_2019:
        mc_9_a: "¿Está frente al camino correcto? El 'bloque destruir' explota el
          bloque en frente de usted."
        mc_9_b: "¡Las machas negras en el muro son carbón! Utilice 'destruir bloque'
          en estas para minar el carbón."
        mc_9_c: Utilice 'poner antorcha' para poner una antorcha en el espacio donde
          está parado.
      behaviors 2:
        behavior hint: "Trata de editar los comportamientos! \n\n-   A que direccion
          necesita el pjaro moverse?"
      behaviors 3:
        behavior hint: "¡Intenta editar los comportamientos! \\*¿Qué valor está controlando
          la velocidad de cada sprite?"
      behaviors 3a:
        behavior hint: "¡Intenta editar los comportamientos! \\*¿Qué valor está controlando
          la velocidad de cada sprite?"
      behaviors 5:
        target hint: Puedes elegir cualquiera de los cuatro juguetes. ¿Cuál quiere
          la mascota?
        behavior hint: Edita el comportamiento para resolver el puzzle. El personaje
          debe moverse en dos direcciones diferentes para moverse en diagonal.
      behaviors 6:
        behavior hint: "¡Intenta editar los comportamientos! \\*¿Qué valor está controlando
          la velocidad de cada sprite?"
      behaviors 7:
        behaviors_hint1: Puedes crear un nuevo comportamiento que usa dos acciones
          diferentes o combinar dos comportamientos existentes.
        sprites_idea1: |-
          Para divertirte, puedes usar un comportamiento similar para hacer el barco volar hacia el espacio o un figura correr hacia el primer plano. ¡Prueba de cambiar el fondo y disfraces de los sprites en tu escena!

          ![](<https://images.code.org/7070e44239b53f4b33a5b4fe054bb61c-image-1567714335486.2019-09-05 16_05_19.gif>)

          ![](<https://images.code.org/278494432d56f1f5d41e345a51223695-image-1567714335485.2019-09-05 16_11_12.gif>)
      comment_intro_maze_2018:
        courseC_maze_programming4_a: Los comentarios también son útiles cuando otras
          personas intentan leer tu código.
        courseC_maze_programming4_b: 'Agrega un comentario cuando cambies de dirección:
          ¿qué hubiera pasado si hubieras girado en sentido contrario?'
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: Puedes usar bloques `saltar` para moverte a otros espacios.
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_a: 'Bloques como este: <xml> <block type="simple_move_up_left"/></xml>
          ¡permitirá que tu artista se mueva de forma inclinada!'
        courseA_artist_loops_challenge2_b: "¡Cuando terminas una casa de ave, `salta`
          a la siguiente!"
        courseA_artist_loops_challenge2_c: Necesitarás MUCHOS bloques dentro del bucle
          para este desafío.
      course1_artist_loops_challenge4:
        courseB_artist_loops_challenge1_c: 'Necesitarás `mover` o `saltar` sobre algunas
          líneas dos veces. '
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada
          bucle si algo va mal.
        courseA_collector_loops_challenge1_b: No necesitas usar un bucle si solo estás
          haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la
          cueva, pero solo necesitas mover y coleccionar 5 veces. ¿Sabes por qué?
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_c: |-
          Muévete al Este dos veces entre cada camino.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Puedes hacerlo con solamente 14 bloques. Haz click y pide una pista más para ver la solución.
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba con esto!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_collector_loops_challenge4:
        courseB_collector_loops_challenge2_a: Si algo va mal, no tengas miedo a comenzar
          de nuevo. ¡No te rindas!
        courseB_collector_loops_challenge2_b: |-
          Si repites este patrón, ¡Laurel no se golpeará con la pared del fondo de la cueva!

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: "¡Intenta usar un bloque `repetir` para
          recoger el tesoro final!"
        courseB_collector_loops_challenge2_d: |-
          Prueba con esta solución:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: Algunos caminos te guiarán al TNT, si vas muy
          lejos.
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_a: No necesitas añadir o eliminar bloques para
          completar este puzzle.
        courseB_maze_seq_challenge2_b: Reorganiza los bloques y toma el camino del
          medio.
      course1_maze_seq_challenge1:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con los dedos.
          ¡Recuerda no contar el espacio en el que comienzas!
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_a: El camino más corto puede que no funcione esta
          vez.
        courseB_maze_seq_challenge1_b: Intenta moverte al oeste para empezar.
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_e: "Finalmente, haz aparecer a Wendel el
          Mago cuando hagas clic en Spiff!\n\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Intenta crear un buce anidad para
          crear 4 octágonos. Gira 45 grados para hacer el octágono. Salta, entonces
          gira 90 grados luego de cada uno.
        courseD_artist_nestedLoops_challenge1_b: Añade el código para arrastrar un
          triángulo dentro de tu bucle anidado. Usa giros de 120 grados para tu triángulo.
        courseD_artist_nestedLoops_challenge1_c: |-
          Use un bucle anidado:
          \-Repite 8 veces
          \-dibuja un octágono
          \-dibuja un triángulo
          \-salta hacia adelante 50 pixeles
          \-gira a la derecha 90 grados
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 'El rectángulo tiene 200 píxeles de ancho
          y 100 píxeles de alto. '
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: "¿Puedes encontrar un camino que llegue
          a cada flor y panal sin golpear ningún árbol? El mejor camino es una espiral.
          \n\n\\*\\* Puedes resolver esto sin ningún giro a la izquierda. \\*\\*"
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: "¡Usa bucles para no quedarte sin bloques
          `junta`!"
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Puedes usar el comando `collect` más
          a menudo para recolectar el tesoro adicional.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Puedes usar el comando `collect` más
          a menudo para recolectar el tesoro adicional.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: "¡Ni siquiera pienses en intentar esto
          sin bucles!"
        courseC_harvester_loops_challenge1_b: Puedes repetir `mueve hacia adelante`
          y `elige maíz` todas las veces que necesites hacerlo, luego haz `gira a
          la derecha` en cada esquina.
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Una forma de resolver estos puzles parece
          un zig-zag. ¡Otra tiene forma de espiral! Hay muchos modos de solucionar
          un puzle como este. ¡Insiste!
        courseC_harvester_loops_challenge2_b: Puedes repetir `avanzar` y `recolecta
          lechuga` tantas veces como te haga falta, después, gira en cada esquina.
        courseC_harvester_loops_challenge2_c: |-
          El patrón en zig-zag puede repetirse dos veces para acabar el puzle ¡sólo con 20 bloques!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          El patrón en espiral puede ser programado ¡sólo con 18 bloques!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Piensa que este camino está formado por dos
          trozos diferentes. Cada uno tiene un patrón que puedes repetir.
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _"Si me mandas hacia atrás, ¡ten especial
          cuidado para que gire en el sentido correcto!"_
        courseC_maze_programming_challenge2_b: "¡La solución más corta usa solo 5
          bloques, pero usa el bloque de \\`repetir!"
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco.
          Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco.
          Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!
      course3_bee_functions_challenge3:
        courseF_bee_functions_challenge1_a: Puedes usar las funciones en la caja de
          herramientas para ayudarlo. ¡Puedes invocar una función dentro de la definición
          de otra función!
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_a: |-
          Si hay un camino a la derecha, deberías hacer lo siguiente:

          -   Obtén cualquier néctar o haz miel.
          -   Gira a la derecha hacia el camino lateral.
          -   Muévete hasta final de la ruta lateral.
          -   Dobla a la derecha.

          Si repites las acciones anteriores dos veces, estarás listo para retroceder por la ruta principal.

          \*\* ¡Solo haz clic para obtener otra sugerencia si deseas ver la solución completa! \*\*
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: El botón de `PASO` puede ser muy útil
          en este desafío.
      course3_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: La cantidad de cada vegetal en cada
          espacio varía. Usa bucles "while" para éstos.
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: "¿Izquierda o derecha? ¡Decide tú!"
        courseC_maze_debugging_challenge1_b: El camino de Scrat es la forma de un
          rectángulo! Necesita girar en el mismo sentido cada vez!
        courseC_maze_debugging_challenge1_c: Si te quedas atascado, siempre puedes
          volver a empezar, o eliminar todo el código y encontrar tu propio camino!
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: Una manera de resolver esto es añadir
          más pasos hacia adelante y entre los turnos.
        courseC_maze_debugging_challenge2_b: "¡Si te estás atorando, siempre puedes
          empezar de nuevo o remover todos los códigos y encontrar tu solución!"
      course4_artist_variables_challenge1:
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberá girar
          a la izquierda dos veces, girar a la derecha dos veces y avanzar un total
          de cuatro veces.
      course4_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_b: |-
          Mira cuánto maíz hay disponible para sembrar en cada espacio. ¿Ves el paterno contrario? El parámetro `longitud` debería ser usado para establecer el valor máximo en el `para el bucle`.

          ¡No olvides que el grajero se mueva hacia atrás por el camino principal tras sembrar!
      course4_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          Comience asegurándose de que entiende cómo funciona esta _supuesta_ función. A medida que la agricultora se mueve por cada camino, solo intentará recolectar maíz. En cambio, ¿cómo puedes hacer que revise cada una de las 3 verduras y elegir solo la que encuentra?

          Agregue declaraciones condicionales a la función para buscar maíz, calabazas y lechuga.
      courseA_artist_loops2:
        courseA_artist_loops2_a: ¿No sabes cómo dibujar una línea? Comienza uniendo
          bloques al bloque <xml><block type="when_run"/></xml> para ver qué pasa.
        courseA_artist_loops2_b: Usa este bloque <xml><block type="simple_move_right"/></xml>
          para resolver este rompecabezas.
      courseA_artist_loops2_2018:
        courseA_artist_loops2_a: ¿No sabes cómo dibujar una línea? Comienza uniendo
          bloques al bloque <xml><block type="when_run"/></xml> para ver qué pasa.
        courseA_artist_loops2_b: Usa este bloque <xml><block type="simple_move_right"/></xml>
          para resolver este rompecabezas.
      courseA_artist_loops2_2019:
        courseA_artist_loops2_a: ¿No sabes cómo dibujar una línea? Comienza uniendo
          bloques al bloque <xml><block type="when_run"/></xml> para ver qué pasa.
        courseA_artist_loops2_b: Usa este bloque <xml><block type="simple_move_right"/></xml>
          para resolver este rompecabezas.
      courseA_artist_loops3:
        courseA_artist_loops3_a: Sigue de forma lenta con tu dedo lo que hace tu programa
          para saber donde está el error.
        courseA_artist_loops3_b: |-
          Necesitarás usar un bloque como este para resolver este rompecabezas.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2018:
        courseA_artist_loops3_a: Sigue de forma lenta con tu dedo lo que hace tu programa
          para saber donde está el error.
        courseA_artist_loops3_b: |-
          Necesitarás usar un bloque como este para resolver este rompecabezas.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2019:
        courseA_artist_loops3_a: Sigue de forma lenta con tu dedo lo que hace tu programa
          para saber donde está el error.
        courseA_artist_loops3_b: |-
          Necesitarás usar un bloque como este para resolver este rompecabezas.

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops4:
        courseA_artist_loops4_a: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops4_b: |-
          Como solo puedes usar un <xml><block type="simple_move_right"/></xml>

          bloque, intenta ponerlo dentro del <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> bucle.
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops4_b: |-
          Como solo puedes usar un <xml><block type="simple_move_right"/></xml>

          bloque, intenta ponerlo dentro del <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> bucle.
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops4_b: |-
          Como solo puedes usar un <xml><block type="simple_move_right"/></xml>

          bloque, intenta ponerlo dentro del <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> bucle.
      courseA_artist_loops5:
        courseA_artist_loops5_a: ¡Trata de usar lo que aprendiste sobre el bloque
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> para completar este puzzle!
        courseA_artist_loops5_b: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops5_c: Ya que solo puedes usar un solo bloque <xml><block
          type="simple_move_right"/></xml>, trata poniéndolo dentro de el repetir
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml>.
      courseA_artist_loops5_2018:
        courseA_artist_loops5_a: ¡Trata de usar lo que aprendiste sobre el bloque
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> para completar este puzzle!
        courseA_artist_loops5_b: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops5_c: Ya que solo puedes usar un solo bloque <xml><block
          type="simple_move_right"/></xml>, trata poniéndolo dentro de el repetir
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml>.
      courseA_artist_loops5_2019:
        courseA_artist_loops5_a: ¡Trata de usar lo que aprendiste sobre el bloque
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> para completar este puzzle!
        courseA_artist_loops5_b: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseA_artist_loops5_c: Ya que solo puedes usar un solo bloque <xml><block
          type="simple_move_right"/></xml>, trata poniéndolo dentro de el repetir
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml>.
      courseA_artist_loops6:
        courseA_artist_loops6_b: Necesitarás 2 bloques en 2 direcciones para resolver
          este acertijo.
      courseA_artist_loops6_2018:
        courseA_artist_loops6_b: Necesitarás 2 bloques en 2 direcciones para resolver
          este acertijo.
      courseA_artist_loops6_2019:
        courseA_artist_loops6_b: Necesitarás 2 bloques en 2 direcciones para resolver
          este acertijo.
      courseA_artist_loops7:
        courseA_artist_loops7_b: Escribe el código ara una ola primero, luego repite
          eso para dibujar los otros dos.
        courseA_artist_loops7_c: Recuerda que puedes poner más de un bloque en un
          bucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml>.
      courseA_artist_loops7_2018:
        courseA_artist_loops7_b: Escribe el código ara una ola primero, luego repite
          eso para dibujar los otros dos.
        courseA_artist_loops7_c: Recuerda que puedes poner más de un bloque en un
          bucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title> </block></xml>.
      courseA_artist_loops7_2019:
        courseA_artist_loops7_b: Escribe el código ara una ola primero, luego repite
          eso para dibujar los otros dos.
        courseA_artist_loops7_c: Recuerda que puedes poner más de un bloque en un
          bucle <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title> </block></xml>.
      courseA_artist_loops8:
        courseA_artist_loops8_a: Intenta ejecutar el código para ver lo que ha sido
          escrito para ti.
        courseA_artist_loops8_b: "¿Cómo repetirías el código que te han dado?"
        courseA_artist_loops8_c: |-
          ¿Qué hace el código?\
          ¿Qué se supone que debe hacer?\
          ¿Qué te dice eso?
      courseA_artist_loops8_2018:
        courseA_artist_loops8_a: Intenta ejecutar el código para ver lo que ha sido
          escrito para ti.
        courseA_artist_loops8_b: "¿Cómo repetirías el código que te han dado?"
        courseA_artist_loops8_c: |-
          ¿Qué hace el código?\
          ¿Qué se supone que debe hacer?\
          ¿Qué te dice eso?
      courseA_artist_loops8_2019:
        courseA_artist_loops8_a: Intenta ejecutar el código para ver lo que ha sido
          escrito para ti.
        courseA_artist_loops8_b: "¿Cómo repetirías el código que te han dado?"
        courseA_artist_loops8_c: |-
          ¿Qué hace el código?\
          ¿Qué se supone que debe hacer?\
          ¿Qué te dice eso?
      courseA_artist_loops9:
        courseA_artist_loops9_a: Añade otro bloque al código que se te da, para poder
          dibujar el resto de las escaleras.
        courseA_artist_loops9_b: "El bloque que agregas debe ir dentro del \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>
          bucle."
        courseA_artist_loops9_c: Si no puedes averiguar en dónde poner el bucle, intenta
          escribiendo tu código paso por paso y mira los patrones.
      courseA_artist_loops9_2018:
        courseA_artist_loops9_a: Añade otro bloque al código que se te da, para poder
          dibujar el resto de las escaleras.
        courseA_artist_loops9_b: "El bloque que agregas debe ir dentro del \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>
          bucle."
        courseA_artist_loops9_c: Si no puedes averiguar en dónde poner el bucle, intenta
          escribiendo tu código paso por paso y mira los patrones.
      courseA_artist_loops9_2019:
        courseA_artist_loops9_a: Añade otro bloque al código que se te da, para poder
          dibujar el resto de las escaleras.
        courseA_artist_loops9_b: "El bloque que agregas debe ir dentro del \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>
          bucle."
        courseA_artist_loops9_c: Si no puedes averiguar en dónde poner el bucle, intenta
          escribiendo tu código paso por paso y mira los patrones.
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_a: 'Bloques como este: <xml> <block type="simple_move_up_left"/></xml>
          ¡permitirán que tu artista se mueva de forma inclinada!'
        courseA_artist_loops_challenge2_b: "¡Cuando termines una tienda, `salta` dos
          veces hacia arriba para ir a la siguiente!"
        courseA_artist_loops_challenge2_c: Todos tus bloques deberán estar dentro
          de un bucle para finalizar este acertijo.
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_a: 'Bloques como este: <xml> <block type="simple_move_up_left"/></xml>
          ¡permitirán que tu artista se mueva de forma inclinada!'
        courseA_artist_loops_challenge2_b: "¡Cuando termines una tienda, `salta` dos
          veces hacia arriba para ir a la siguiente!"
        courseA_artist_loops_challenge2_c: Todos tus bloques deberán estar dentro
          de un bucle para finalizar este acertijo.
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_a: 'Bloques como este: <xml> <block type="simple_move_up_left"/></xml>
          ¡permitirán que tu artista se mueva de forma inclinada!'
        courseA_artist_loops_challenge2_b: "¡Cuando termines una tienda, `salta` dos
          veces hacia arriba para ir a la siguiente!"
        courseA_artist_loops_challenge2_c: Todos tus bloques deberán estar dentro
          de un bucle para finalizar este acertijo.
      courseA_collector_loops1:
        courseA_collector_loops1_a: |-
          Después de haber pasado a un cuadrado con tesoro, usa este bloque para recoger el tesoro.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Una solución simple sería moverte al Este 2 veces,
          luego obtendrás el tesoro.
      courseA_collector_loops1_2018:
        courseA_collector_loops1_a: |-
          Después de haber pasado a un cuadrado con tesoro, usa este bloque para recoger el tesoro.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Una solución simple sería moverte al Este 2 veces,
          luego obtendrás el tesoro.
      courseA_collector_loops1_2019:
        courseA_collector_loops1_a: |-
          Después de haber pasado a un cuadrado con tesoro, usa este bloque para recoger el tesoro.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Una solución simple sería moverte al Este 2 veces,
          luego obtendrás el tesoro.
      courseA_collector_loops2:
        courseA_collector_loops2_a: Tendrás que moverte antes de coleccionar algún
          tesoro.
        courseA_collector_loops2_b: |-
          Después de haber pasado a un cuadrado con tesoro, usa este bloque para recoger el tesoro.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: Tendrás que moverte antes de coleccionar algún
          tesoro.
        courseA_collector_loops2_b: |-
          Después de haber pasado a un cuadrado con tesoro, usa este bloque para recoger el tesoro.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: Tendrás que moverte antes de coleccionar algún
          tesoro.
        courseA_collector_loops2_b: |-
          Después de haber pasado a un cuadrado con tesoro, usa este bloque para recoger el tesoro.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3:
        courseA_collector_loops3_a: |-
          Intenta usar lo siguiente:

          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bucle!
        courseA_collector_loops3_b: |-
          Recuerda, puedes insertar más de 1 bloque:
           <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bucle.
      courseA_collector_loops3_2018:
        courseA_collector_loops3_a: |-
          Intenta usar lo siguiente:

          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bucle!
        courseA_collector_loops3_b: |-
          Recuerda, puedes insertar más de 1 bloque:
           <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bucle.
      courseA_collector_loops3_2019:
        courseA_collector_loops3_a: "Intente user un \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml> \n\nbucle!"
        courseA_collector_loops3_b: |-
          Recuerda, puedes insertar más de 1 bloque:
           <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bucle.
      courseA_collector_loops4:
        courseA_collector_loops4_a: Para cambiar la distancia que recorre Laurel,
          cambia el número de veces que se ejecutará el bucle.
        courseA_collector_loops4_b: |-
          ¡No olvides que Laurel necesita andar y recoger el tesoro después de terminar el siguiente bucle!
           <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseA_collector_loops4_2018:
        courseA_collector_loops4_a: Para cambiar la distancia que recorre Laurel,
          cambia el número de veces que se ejecutará el bucle.
        courseA_collector_loops4_b: |-
          ¡No olvides que Laurel necesita andar y recoger el tesoro después de terminar el siguiente bucle!
           <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseA_collector_loops4_2019:
        courseA_collector_loops4_a: Para cambiar la distancia que recorre Laurel,
          cambia el número de veces que se ejecutará el bucle.
        courseA_collector_loops4_b: |-
          ¡No olvides que Laurel necesita andar y recoger el tesoro después de terminar el siguiente bucle!
           <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseA_collector_loops5:
        courseA_collector_loops5_a: Si no puedes averiguar la respuesta de inmediato,
          intenta usar un trozo de papel para averiguar qué flechas necesitarás y
          buscar un patrón.
        courseA_collector_loops5_b: Intenta dividir el problema en dos partes, moviéndote
          hacia los lados y hacia abajo.
        courseA_collector_loops5_c: |-
          Para que Laurel se mueva hacia el oeste y pueda recoger el tesoro, seguramente querrás empezar con un bucle como este:
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: Si no puedes averiguar la respuesta de inmediato,
          intenta usar un trozo de papel para averiguar qué flechas necesitarás y
          buscar un patrón.
        courseA_collector_loops5_b: Intenta dividir el problema en dos partes, moviéndote
          hacia los lados y hacia abajo.
        courseA_collector_loops5_c: |-
          Para que Laurel se mueva hacia el oeste y pueda recoger el tesoro, seguramente querrás empezar con un bucle como este:
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: Si no puedes averiguar la respuesta de inmediato,
          intenta usar un trozo de papel para averiguar qué flechas necesitarás y
          buscar un patrón.
        courseA_collector_loops5_b: Intenta dividir el problema en dos partes, moviéndote
          hacia los lados y hacia abajo.
        courseA_collector_loops5_c: |-
          Para que Laurel se mueva hacia el oeste y pueda recoger el tesoro, seguramente querrás empezar con un bucle como este:
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseA_collector_loops6:
        courseA_collector_loops6_a: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
        courseA_collector_loops6_b: "La solución más corta consiste en usar  2 bucles
          seguidos como este:\n <xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml> "
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
        courseA_collector_loops6_b: "La solución más corta consiste en usar  2 bucles
          seguidos como este:\n <xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml> "
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
        courseA_collector_loops6_b: "La solución más corta consiste en usar  2 bucles
          seguidos como este:\n <xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml> "
      courseA_collector_loops7:
        courseA_collector_loops7_a: Si no puedes averiguar lo que viene luego, intenta
          ejecutar el código para ver en donde finaliza Laurel.
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: Si no puedes averiguar lo que viene luego, intenta
          ejecutar el código para ver en donde finaliza Laurel.
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: Si no puedes averiguar lo que viene luego, intenta
          ejecutar el código para ver en donde finaliza Laurel.
      courseA_collector_loops8:
        courseA_collector_loops8_a: Si estás teniendo problemas para resolver el acertijo,
          intenta escribir movimientos en una hoja de papel y ver el patrón.
        courseA_collector_loops8_b: Intenta separar el acertijo en 3 problemas separados
          y escribir los bucles para cada uno.
        courseA_collector_loops8_c: Recuerda que puedes escribir con un pedazo de
          el código a la vez, luego presiona "Ejecutar" para saber a dónde necesitas
          ir a partir de aquí.
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: Si estás teniendo problemas para resolver el acertijo,
          intenta escribir movimientos en una hoja de papel y ver el patrón.
        courseA_collector_loops8_b: Intenta separar el acertijo en 3 problemas separados
          y escribir los bucles para cada uno.
        courseA_collector_loops8_c: Recuerda que puedes escribir con un pedazo de
          el código a la vez, luego presiona "Ejecutar" para saber a dónde necesitas
          ir a partir de aquí.
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: Si estás teniendo problemas para resolver el acertijo,
          intenta escribir movimientos en una hoja de papel y ver el patrón.
        courseA_collector_loops8_b: Intenta separar el acertijo en 3 problemas separados
          y escribir los bucles para cada uno.
        courseA_collector_loops8_c: Recuerda que puedes escribir con un pedazo de
          el código a la vez, luego presiona "Ejecutar" para saber a dónde necesitas
          ir a partir de aquí.
      courseA_collector_loops9:
        courseA_collector_loops9_a: 'Si no puedes localizar los mejores lugares para
          usar bucles, intenta codificarlo paso a paso y buscar un patrón. '
        courseA_collector_loops9_b: 'Para simplificar tu código, intenta poner dentro
          de un bucle otros dos bucles como este: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>'
      courseA_collector_loops9_2018:
        courseA_collector_loops9_a: 'Si no puedes localizar los mejores lugares para
          usar bucles, intenta codificarlo paso a paso y buscar un patrón. '
        courseA_collector_loops9_b: 'Para simplificar tu código, intenta poner dentro
          de un bucle otros dos bucles como este: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>'
      courseA_collector_loops9_2019:
        courseA_collector_loops9_a: 'Si no puedes localizar los mejores lugares para
          usar bucles, intenta codificarlo paso a paso y buscar un patrón. '
        courseA_collector_loops9_b: 'Para simplificar tu código, intenta poner dentro
          de un bucle otros dos bucles como este: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>'
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada
          bucle si algo parece ir mal.
        courseA_collector_loops_challenge1_b: No necesitas usar un bucle si solo estás
          haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la
          cueva cuando comienzas, pero solo necesitas moverte 5 veces al sur para
          obtener el tesoro. ¿Sabes por qué?
        courseA_collector_loops_challenge1_d: |-
          El programa inicial no recoge las 2 últimas gemas. Intenta conseguirlo añadiendo este código al final:

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada
          bucle si algo parece ir mal.
        courseA_collector_loops_challenge1_b: No necesitas usar un bucle si solo estás
          haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la
          cueva cuando comienzas, pero solo necesitas moverte 5 veces al sur para
          obtener el tesoro. ¿Sabes por qué?
        courseA_collector_loops_challenge1_d: |-
          El programa inicial no recoge las 2 últimas gemas. Intenta conseguirlo añadiendo este código al final:

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: Intenta cambiar los números en cada
          bucle si algo parece ir mal.
        courseA_collector_loops_challenge1_b: No necesitas usar un bucle si solo estás
          haciendo algo una vez.
        courseA_collector_loops_challenge1_c: Hay 6 gemas en el lado derecho de la
          cueva cuando comienzas, pero solo necesitas moverte 5 veces al sur para
          obtener el tesoro. ¿Sabes por qué?
        courseA_collector_loops_challenge1_d: |-
          El programa inicial no recoge las 2 últimas gemas. Intenta conseguirlo añadiendo este código al final:

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect_simplified">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: Solo necesitas usar 1 bloque para resolver
          esto.
        courseA_collector_loops_challenge2_a: Puedes moverte hacia atrás el camino
          por una segunda vez antes de moverte al sur.
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: Intenta este camino para buscar una
          solución.
        courseA_collector_loops_challenge2kp_a: "¿Puedes usar bucles para solucionar
          el problema?"
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: Intenta este camino para buscar una
          solución.
        courseA_collector_loops_challenge2kp_a: "¿Puedes usar bucles para solucionar
          el problema?"
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: Intenta este camino para buscar una
          solución.
        courseA_collector_loops_challenge2kp_a: "¿Puedes usar bucles para solucionar
          el problema?"
      courseA_collector_preLoops5:
        courseA_collector_preLoops5_a: "¡Necesitarás ir a dos direcciones distintas
          para obtener una sola gema!"
      courseA_collector_preLoops7:
        courseA_collector_loops2_b: |-
          Después de haber pasado a un cuadrado con tesoro, usa este bloque para recoger el tesoro.

          <xml>  <block type="collector_collect"/></xml>
      courseA_harvester_loops1:
        courseA_harvester_loops1_a: |-
          ¡Cuando hayas llegado hasta el maíz, usa este bloque para recogerlo!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops1_2019:
        courseA_harvester_loops1_a: |-
          ¡Cuando hayas llegado hasta el maíz, usa este bloque para recogerlo!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops2:
        courseA_harvester_loops2_a: |-
          Tu código tendrá **cuatro** bloques `avanza hacia el oeste` como este:
          <xml><block type="maze_moveWest"/></xml>

          y luego **cuatro** bloques `recoge maíz` como este:
          <block type="harvester_corn"/></xml>
        courseA_harvester_loops2_b: 'Si aún tienes problemas, intenta contar los pasos
          en voz alta. '
      courseA_harvester_loops2_2019:
        courseA_harvester_loops2_a: |-
          Tu código tendrá **cuatro** bloques `avanza hacia el oeste` como este:
          <xml><block type="maze_moveWest"/></xml>

          y luego **cuatro** bloques `recoge maíz` como este:
          <block type="harvester_corn"/></xml>
        courseA_harvester_loops2_b: 'Si aún tienes problemas, intenta contar los pasos
          en voz alta. '
      courseA_harvester_loops3:
        courseA_harvester_loops3_a: |-
          Para ayudarte, usa un bloque de repetición como este:
          <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: |-
          Para repetir código, arrastre un `repeat` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml> bucle, luego ponga el bloque que prefiera dentro del bucle.
      courseA_harvester_loops3_2019:
        courseA_harvester_loops3_a: |-
          Para ayudarte, usa un bloque de repetición como este:
          <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">4</title>
          </block></xml>
        courseA_harvester_loops3_b: |-
          Para repetir código, arrastre un `repeat` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml> bucle, luego ponga el bloque que prefiera dentro del bucle.
      courseA_harvester_loops4:
        courseA_harvester_loops4_a: "¡No tengas miedo de presionar `Adelante` para
          ver qué ocurre!"
        courseA_harvester_loops4_b: "¿Cuánta cantidad de maíz hay? ¿Cuántas veces
          se repite tu código?"
      courseA_harvester_loops4_2019:
        courseA_harvester_loops4_a: "¡No tengas miedo de presionar `Adelante` para
          ver qué ocurre!"
        courseA_harvester_loops4_b: "¿Cuánta cantidad de maíz hay? ¿Cuántas veces
          se repite tu código?"
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: Si te quedas atascado/a, intenta solucionar el
          puzzle en 2 partes, una antes de la esquina y otra después de la esquina.
        courseA_harvester_loops5_b: |-
          Tu código final debe tener **_1_** bucle de `repetir` <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">6</title>
          </block></xml>, ***1*** bloque de `mover al Sur`  <xml><block type="maze_moveSouth" limit="1"/></xml>, y ***1*** bloque de `mover al Este`  <xml><block type="maze_moveEast" limit="1"/></xml>.
        courseA_harvester_loops5_c: "¡Usa este camino para recoger todo el maíz!"
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: Si te quedas atascado/a, intenta solucionar el
          puzzle en 2 partes, una antes de la esquina y otra después de la esquina.
        courseA_harvester_loops5_b: |-
          Tu código final debe tener **_1_** bucle de `repetir` <xml><block type="controls_repeat_simplified_dropdown">

          <title name="TIMES" config="2-10">6</title>
          </block></xml>, ***1*** bloque de `mover al Sur`  <xml><block type="maze_moveSouth" limit="1"/></xml>, y ***1*** bloque de `mover al Este`  <xml><block type="maze_moveEast" limit="1"/></xml>.
        courseA_harvester_loops5_c: "¡Usa este camino para recoger todo el maíz!"
      courseA_harvester_loops5a:
        courseA_harvester_loops5a_a: "Necesitarás usar un bucle `repetir` <xml> <block
          type=\"controls_repeat_simplified_dropdown\">\n\n<title name=\"TIMES\" config=\"2-10\">6</title>
          \n</block></xml> tras otro."
        courseA_harvester_loops5a_b: Un bucle repetirá `mover al Sur` <xml><block
          type="maze_moveSouth" limit="1"/></xml>, y el otro repetirá `move al Este`
          <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Usa esta ruta para moverte en un sentido, y luego
          en el otro.
      courseA_harvester_loops5a_2019:
        courseA_harvester_loops5a_a: "Necesitarás usar un bucle `repetir` <xml> <block
          type=\"controls_repeat_simplified_dropdown\">\n\n<title name=\"TIMES\" config=\"2-10\">6</title>
          \n</block></xml> tras otro."
        courseA_harvester_loops5a_b: Un bucle repetirá `mover al Sur` <xml><block
          type="maze_moveSouth" limit="1"/></xml>, y el otro repetirá `move al Este`
          <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Usa esta ruta para moverte en un sentido, y luego
          en el otro.
      courseA_harvester_loops5b:
        courseA_harvester_loops5b_a: "¡Pulsa `Ejecutar`para ver qué ocurre!"
        courseA_harvester_loops5b_b: "¿Se repiten tus bucles el número adecuado de
          veces?"
        courseA_harvester_loops5b_c: Muévete en un sentido, y luego en el otro con
          este camino.
      courseA_harvester_loops5b_2019:
        courseA_harvester_loops5b_a: "¡Pulsa `Ejecutar`para ver qué ocurre!"
        courseA_harvester_loops5b_b: "¿Se repiten tus bucles el número adecuado de
          veces?"
        courseA_harvester_loops5b_c: Muévete en un sentido, y luego en el otro con
          este camino.
      courseA_harvester_loops6:
        courseA_harvester_loops6_a: Si te atascas, prueba a escribir los pasos en
          un papel y a buscar patrones que se repitan.
        courseA_harvester_loops6_b: Éste es el camino que debes tomar para recoger
          todo el maíz.
      courseA_harvester_loops6_2019:
        courseA_harvester_loops6_a: Si te atascas, prueba a escribir los pasos en
          un papel y a buscar patrones que se repitan.
        courseA_harvester_loops6_b: Éste es el camino que debes tomar para recoger
          todo el maíz.
      courseA_harvester_loops7:
        courseA_harvester_loops7_a: ¡Necesitarás dos bucles de `repetir` <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-10">5</title></block></xml>,
          uno tras otro!
        courseA_harvester_loops7_b: Usa dos bucles para seguir este camino.
      courseA_harvester_loops7_2019:
        courseA_harvester_loops7_a: ¡Necesitarás dos bucles de `repetir` <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-10">5</title></block></xml>,
          uno tras otro!
        courseA_harvester_loops7_b: Usa dos bucles para seguir este camino.
      courseA_harvester_loops9:
        courseA_harvester_loops9_a: Rompe este puzzle en tres partes diferentes. Una
          parte es la primera esquina, otra parte en la segunda esquina, y la tercera
          sería el final.
        courseA_harvester_loops9_b: "¡No tengas miedo de ejecutar el código tras cada
          parte para ver qué ocurre!"
        courseA_harvester_loops9_c: Sigue este camino para recoger todo el maíz.
      courseA_harvester_loops9_2019:
        courseA_harvester_loops9_a: Rompe este puzzle en tres partes diferentes. Una
          parte es la primera esquina, otra parte en la segunda esquina, y la tercera
          sería el final.
        courseA_harvester_loops9_b: "¡No tengas miedo de ejecutar el código tras cada
          parte para ver qué ocurre!"
        courseA_harvester_loops9_c: Sigue este camino para recoger todo el maíz.
      courseA_harvester_seq1:
        courseA_harvester_seq1_a: |-
          ¡Usa este bloque para recoger el maíz en cuanto el cosechador lo encuentre!

          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          El cosechador necesita moverse tres veces hacia el Este para recoger el maíz. Usa este bloque:

          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10:
        courseA_harvester_seq10_a: "¿Estás atascado/a? Intenta anotar primero los
          pasos en un trozo de papel."
        courseA_harvester_seq10_b: Necesitas `Mover al Este`, y después `Mover al
          Norte`. Haz esto dos veces. ¡No te olvides de recoger también todo el maíz!
        courseA_harvester_seq10_c: Intenta usar este camino para recoger todo el maíz.
      courseA_harvester_seq10_2019:
        courseA_harvester_seq10_a: "¿Estás atascado/a? Intenta anotar primero los
          pasos en un trozo de papel."
        courseA_harvester_seq10_b: Necesitas `Mover al Este`, y después `Mover al
          Norte`. Haz esto dos veces. ¡No te olvides de recoger también todo el maíz!
        courseA_harvester_seq10_c: Intenta usar este camino para recoger todo el maíz.
      courseA_harvester_seq13:
        courseA_bee_seq1_a: |-
          Usa este bloque para recoger maíz una vez que el cosechador llegue a él.

          <xml>
          <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq13_2019:
        courseA_bee_seq1_a: |-
          Usa este bloque para recoger maíz una vez que el cosechador llegue a él.

          <xml>
          <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq1_2019:
        courseA_harvester_seq1_a: |-
          ¡Usa este bloque para recoger el maíz en cuanto el cosechador lo encuentre!

          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          El cosechador necesita moverse tres veces hacia el Este para recoger el maíz. Usa este bloque:

          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq2:
        courseA_harvester_seq2_a: ¡No te olvides de usar <xml><block type="harvester_corn"/></xml>
          para recoger el maíz!
        courseA_harvester_seq2_b: "¡Intenta escribir los pasos en un papel para encontrar
          la solución!"
      courseA_harvester_seq2_2019:
        courseA_harvester_seq2_a: ¡No te olvides de usar <xml><block type="harvester_corn"/></xml>
          para recoger el maíz!
        courseA_harvester_seq2_b: "¡Intenta escribir los pasos en un papel para encontrar
          la solución!"
      courseA_harvester_seq3:
        courseA_harvester_seq3_a: |-
          ¿Te has acordado de usar este bloque?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Di los pasos en voz alta y mira si te ayuda a encontrar
          la respuesta.
      courseA_harvester_seq3_2019:
        courseA_harvester_seq3_a: |-
          ¿Te has acordado de usar este bloque?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Di los pasos en voz alta y mira si te ayuda a encontrar
          la respuesta.
      courseA_harvester_seq4:
        courseA_harvester_seq4_a: "¿Cuántos espacios hay entre el Cosechador y el
          maíz? ¿Cuántos bloques has usado ya en tu zona de trabajo?"
        courseA_harvester_seq4_b: |-
          Necesitas cinco bloques de `Mover al Este` y un bloque de `Coger Maíz`:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq4_2019:
        courseA_harvester_seq4_a: "¿Cuántos espacios hay entre el Cosechador y el
          maíz? ¿Cuántos bloques has usado ya en tu zona de trabajo?"
        courseA_harvester_seq4_b: |-
          Necesitas cinco bloques de `Mover al Este` y un bloque de `Coger Maíz`:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5:
        courseA_harvester_seq5_a: "¿Qué bloque mueve al cosechador en la dirección
          errónea?"
        courseA_harvester_seq5_b: Necesitas eliminar un bloque.
        courseA_harvester_seq5_c: |-
          ¡Descarta este bloque!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq5_2019:
        courseA_harvester_seq5_a: "¿Qué bloque mueve al cosechador en la dirección
          errónea?"
        courseA_harvester_seq5_b: Necesitas eliminar un bloque.
        courseA_harvester_seq5_c: |-
          ¡Descarta este bloque!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6:
        courseA_harvester_seq6_a: Si estás atascado, intenta contar los pasos en voz
          alto. Podría ayudarte a encontrar el camino correcto.
      courseA_harvester_seq6_2019:
        courseA_harvester_seq6_a: Si estás atascado, intenta contar los pasos en voz
          alto. Podría ayudarte a encontrar el camino correcto.
      courseA_harvester_seq7:
        courseA_harvester_seq7_a: Intenta solucionar el puzzle en 2 partes, una antes
          de la esquina y otra a partir de la esquina.
        courseA_harvester_seq7_b: "¿Tienes problemas? Éste es el camino que debe seguir
          el cosechador."
      courseA_harvester_seq7_2019:
        courseA_harvester_seq7_a: Intenta solucionar el puzzle en 2 partes, una antes
          de la esquina y otra a partir de la esquina.
        courseA_harvester_seq7_b: "¿Tienes problemas? Éste es el camino que debe seguir
          el cosechador."
      courseA_harvester_seq8:
        courseA_harvester_seq8_a: Tu código final debería tener **4** bloques de movimiento
          y **2** bloques de recogida.
      courseA_harvester_seq8_2019:
        courseA_harvester_seq8_a: Tu código final debería tener **4** bloques de movimiento
          y **2** bloques de recogida.
      courseA_harvester_seq9:
        courseA_harvester_seq9_a: Ejecuta el código un par de veces para ver qué ocurre.
          ¿Dónde acaba el cosechador?
        courseA_harvester_seq9_b: "¡No te olvides de recoger todo el maíz! Necesitarás
          **_3_** bloques de recoger maíz."
        courseA_harvester_seq9_c: Deberías tomar este camino para recoger todo el
          maíz.
      courseA_harvester_seq9_2019:
        courseA_harvester_seq9_a: Ejecuta el código un par de veces para ver qué ocurre.
          ¿Dónde acaba el cosechador?
        courseA_harvester_seq9_b: "¡No te olvides de recoger todo el maíz! Necesitarás
          **_3_** bloques de recoger maíz."
        courseA_harvester_seq9_c: Deberías tomar este camino para recoger todo el
          maíz.
      courseA_maze_ramp2_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp2_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3a_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3a_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp3b_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4a_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp4a_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5a_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_ramp5a_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_maze_seq1:
        courseA_maze_seq1_a: |-
          Si tienes problemas para mover al pájaro, asegúrate de que los bloques están colocados en su lugar bajo la línea <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          El pájaro necesita moverse 3 veces hacia el Oeste para llegar al cerdo. Usa este bloque:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10:
        courseA_maze_seq10_a: Si tienes problemas, primero intenta escribir los pasos
          en un papel.
        courseA_maze_seq10_b: Necesitarás moverte en 3 direcciones para solucionar
          este puzzle.
      courseA_maze_seq10_2018:
        courseA_maze_seq10_a: Si tienes problemas, primero intenta escribir los pasos
          en un papel.
        courseA_maze_seq10_b: Necesitarás moverte en 3 direcciones para solucionar
          este puzzle.
      courseA_maze_seq10_2019:
        courseA_maze_seq10_a: Si tienes problemas, primero intenta escribir los pasos
          en un papel.
        courseA_maze_seq10_b: Necesitarás moverte en 3 direcciones para solucionar
          este puzzle.
      courseA_maze_seq13:
        courseA_maze_seq13_a: Si el camino que necesitas no está claro, usa tu dedo
          para trazar una ruta desde el pájaro hasta el cerdo.
        courseA_maze_seq13_b: "¡No tengas miedo a equivocarte! Añade bloques y ejecuta
          el código para ver qué ocurre."
        courseA_maze_seq13_c: Estos bloques de <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> te ayudarán a acercarte al cerdo.
      courseA_maze_seq13_2018:
        courseA_maze_seq13_a: Si el camino que necesitas no está claro, usa tu dedo
          para trazar una ruta desde el pájaro hasta el cerdo.
        courseA_maze_seq13_b: "¡No tengas miedo a equivocarte! Añade bloques y ejecuta
          el código para ver qué ocurre."
        courseA_maze_seq13_c: Estos bloques de <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> te ayudarán a acercarte al cerdo.
      courseA_maze_seq13_2019:
        courseA_maze_seq13_a: Si el camino que necesitas no está claro, usa tu dedo
          para trazar una ruta desde el pájaro hasta el cerdo.
        courseA_maze_seq13_b: "¡No tengas miedo a equivocarte! Añade bloques y ejecuta
          el código para ver qué ocurre."
        courseA_maze_seq13_c: Estos bloques <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> te acercarán al cerdo.
      courseA_maze_seq1_2018:
        courseA_maze_seq1_a: |-
          Si tienes problemas para mover al pájaro, asegúrate de que los bloques están colocados en su lugar bajo la línea <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          El pájaro necesita moverse 3 veces hacia el Oeste para llegar al cerdo. Usa este bloque:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019:
        courseA_maze_seq1_a: |-
          Si tienes problemas para mover al pájaro, asegúrate de que los bloques están colocados en su lugar bajo la línea <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          El pájaro necesita moverse 3 veces hacia el Oeste para llegar al cerdo. Usa este bloque:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2:
        courseA_maze_seq2_a: A este programa le falta 1 bloque. ¿Puedes averiguar
          cuál es?
        courseA_maze_seq2_b: Intenta ejecutar el código primero para ver en donde
          termina el ave. ¿A dónde necesitas ir a partir de ahí?
      courseA_maze_seq3:
        courseA_maze_seq3_a: Uno de los bloques está moviendo al pájaro en la dirección
          equivocada. ¿Puedes averiguar cuál es y sustituirlo con el bloque correcto?
        courseA_maze_seq3_b: Intenta usar el botón secundario para encontrar los lugares
          en donde los programas van mal. ¿Será en el primer lugar? ¿En el segundo?
        courseA_maze_seq3_c: Este bloque <xml><block type="maze_moveNorth"/></xml>
          no parece que esté moviendo al pájaro en la dirección correcta. ¿Podrías
          sustituirlo con un bloque diferente?
      courseA_maze_seq4:
        courseA_maze_seq4_a: Si tienes problemas, intenta descifrar cuál es la ruta
          correcta y luego elimina el bloque que no encaja.
        courseA_maze_seq4_b: Prueba a ejecutar el código tal y como está. ¿Algo va
          mal? ¿Qué bloque podrías eliminar? ¿Cómo puedes arreglarlo?
      courseA_maze_seq5:
        courseA_maze_seq5_a: "¡Intenta escribir los pasos en un papel para encontrar
          la solución!"
        courseA_maze_seq5_b: Necesitarás 2 bloques, apuntando en 2 direcciones.
      courseA_maze_seq5_2018:
        '1': "¡Intenta escribir los pasos en un papel para encontrar la solución!"
        '2': |-
          Necesitarás usar este bloque:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_2019:
        '1': "¡Intenta escribir los pasos en un papel para encontrar la solución!"
        '2': |-
          Necesitarás usar este bloque:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018:
        '1': Di los pasos en voz alta y mira si te ayuda a encontrar la respuesta.
      courseA_maze_seq5a_2019:
        '1': Di los pasos en voz alta y mira si te ayuda a encontrar la respuesta.
      courseA_maze_seq6:
        courseA_maze_seq6_a: Tu código final debería tener 3 bloques de movimiento.
        courseA_maze_seq6_b: Si te quedas atascado/a, intenta solucionar el puzzle
          en 2 partes, una antes de la esquina y otra después de la esquina.
      courseA_maze_seq6_2018:
        courseA_maze_seq6_a: Tu código final debería tener 3 bloques de movimiento.
        courseA_maze_seq6_b: Si te quedas atascado/a, intenta solucionar el puzzle
          en 2 partes, una antes de la esquina y otra después de la esquina.
      courseA_maze_seq6_2019:
        courseA_maze_seq6_a: Tu código final debería tener 3 bloques de movimiento.
        courseA_maze_seq6_b: Si te quedas atascado/a, intenta solucionar el puzzle
          en 2 partes, una antes de la esquina y otra después de la esquina.
      courseA_maze_seq7:
        courseA_maze_seq7_a: Hay 1 bloque que necesitas añadir para que el pájaro
          se mueva hacia el cerdo.
        courseA_maze_seq7_b: Si no puedes descubrir qué hacer, intenta dibujar el
          puzzle en un papel y usa un dedo para averiguar en qué dirección moverte.
      courseA_maze_seq8:
        courseA_maze_seq8_a: Si estas atascado/a, intenta dibujar la imagen en un
          papel para ver cómo se debería mover el pájaro.
      courseA_maze_seq8_2018:
        courseA_maze_seq8_a: Si estas atascado/a, intenta dibujar la imagen en un
          papel para ver cómo se debería mover el pájaro.
      courseA_maze_seq8_2019:
        courseA_maze_seq8_a: Si estas atascado/a, intenta dibujar la imagen en un
          papel para ver cómo se debería mover el pájaro.
      courseA_maze_seq9:
        courseA_maze_seq9_a: "¿Atascado? Intenta trazar la ruta del pájaro con tu
          dedo."
        courseA_maze_seq9_b: Si no estás seguro de qué hacer, pulsa "Empezar de nuevo"
          y ejecuta el código para ver qué es lo que falla.
        courseA_maze_seq9_c: Tendrás que moverte en 3 direcciones para resolver este
          puzzle.
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: Hay dos soluciones para este puzzle.
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: Hay dos soluciones para este puzzle.
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: Hay dos soluciones para este puzzle.
      courseA_maze_seq_challenge2:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con los dedos.
          ¡Recuerda no contar el espacio en el que comienzas!
      courseA_maze_seq_challenge2_2018:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con los dedos.
          ¡Recuerda no contar el espacio en el que comienzas!
      courseA_maze_seq_challenge2_2019:
        courseA_maze_seq_challenge2_a: Intenta contar los espacios con los dedos.
          ¡Recuerda no contar el espacio en el que comienzas!
      courseA_playLab_events2:
        courseA_playLab_events2_a: Busca un bloque que haga que el perro diga algo.
        courseA_playLab_events2_b: |-
          Éste es el código que necesitas para completar el puzzle:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018:
        courseA_playLab_events2_a: Busca un bloque que haga que el perro diga algo.
        courseA_playLab_events2_b: |-
          Éste es el código que necesitas para completar el puzzle:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2019:
        courseA_playLab_events2_a: Busca un bloque que haga que el perro diga algo.
        courseA_playLab_events2_b: |-
          Éste es el código que necesitas para completar el puzzle:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Hi there.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3:
        courseA_playLab_events3_a: |-
          Arrastra este bloque <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> hacia afuera y colócalo debajo de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Recuerda usar la tecla de dirección izquierda para
          mover a Jorge hasta la bandera cuando termines de escribir tu programa.
          Cuando la bandera se vuelva verde, ¡habrás acabado!
      courseA_playLab_events3_2018:
        courseA_playLab_events3_a: |-
          Arrastra este bloque <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> hacia afuera y colócalo debajo de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Recuerda usar la tecla de dirección izquierda para
          mover a Jorge hasta la bandera cuando termines de escribir tu programa.
          Cuando la bandera se vuelva verde, ¡habrás acabado!
      courseA_playLab_events3_2019:
        courseA_playLab_events3_a: |-
          Arrastra este bloque <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> hacia afuera y colócalo debajo de <xml><block type="studio_whenArrow">
          <title name="VALUE">left</title>
          </block></xml>
        courseA_playLab_events3_b: Recuerda usar la tecla de dirección izquierda para
          mover a Jorge hasta la bandera cuando termines de escribir tu programa.
          Cuando la bandera se vuelva verde, ¡habrás acabado!
      courseA_playLab_events4:
        courseA_playLab_events4_a: |-
          Aquí está el bloque de evento que necesitarás para que Jorge se mueva a la derecha:

          <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Éste es el código que necesitarás para completar el puzzle:

          <xml><block type="studio_whenArrow">

          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2018:
        courseA_playLab_events4_a: |-
          Aquí está el bloque de evento que necesitarás para que Jorge se mueva a la derecha:

          <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Éste es el código que necesitarás para completar el puzzle:

          <xml><block type="studio_whenArrow">

          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2019:
        courseA_playLab_events4_a: |-
          Aquí está el bloque de evento que necesitarás para que Jorge se mueva a la derecha:

          <xml><block type="studio_move">

          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Éste es el código que necesitarás para completar el puzzle:

          <xml><block type="studio_whenArrow">

          <title name="VALUE">right</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events5:
        courseA_playLab_events5_a: "Aquí tienes los bloques del evento que necesitarás
          para mover a Jorge arriba y abajo:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">arriba</title>\n  </block></xml>\n\nand \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">abajo</title>\n  </block></xml>"
      courseA_playLab_events5_2018:
        courseA_playLab_events5_a: "Aquí tienes los bloques del evento que necesitarás
          para mover a Jorge arriba y abajo:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">arriba</title>\n  </block></xml>\n\nand \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">abajo</title>\n  </block></xml>"
      courseA_playLab_events5_2019:
        courseA_playLab_events5_a: "Aquí tienes los bloques del evento que necesitarás
          para mover a Jorge arriba y abajo:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">arriba</title>\n  </block></xml>\n\nand \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">abajo</title>\n  </block></xml>"
      courseA_playLab_events6:
        courseA_playLab_events6_b: |-
          Éste es el bloque que usarías para cambiar el fondo:

          <xml><block type="studio_setBackground">

          <title name="VALUE">aleatorio</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Éste es el bloque que usarías para reproducir un sonido aleatorio:

          <xml><block type="studio_playSound">

          <title name="SOUND">aleatorio</title>
          </block></xml>
      courseA_playLab_events6_2018:
        courseA_playLab_events6_b: |-
          Éste es el bloque que usarías para cambiar el fondo:

          <xml><block type="studio_setBackground">

          <title name="VALUE">aleatorio</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Éste es el bloque que usarías para reproducir un sonido aleatorio:

          <xml><block type="studio_playSound">

          <title name="SOUND">aleatorio</title>
          </block></xml>
      courseA_playLab_events6_2019:
        courseA_playLab_events6_b: |-
          Éste es el bloque que usarías para cambiar el fondo:

          <xml><block type="studio_setBackground">

          <title name="VALUE">aleatorio</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Éste es el bloque que usarías para reproducir un sonido aleatorio:

          <xml><block type="studio_playSound">

          <title name="SOUND">aleatorio</title>
          </block></xml>
      courseA_playLab_events7:
        courseA_playLab_events7_a: "Usa este bloque para controlar lo que ocurre cuando
          los actores choquen. \n\n<xml><block type=\"studio_whenSpriteCollided\">\n\n<title
          name=\"SPRITE1\">1</title>\n<title name=\"SPRITE2\">0</title>\n</block></xml>"
      courseA_playLab_events7_2018:
        courseA_playLab_events7_a: "Usa este bloque para controlar lo que ocurre cuando
          los actores choquen. \n\n<xml><block type=\"studio_whenSpriteCollided\">\n\n<title
          name=\"SPRITE1\">1</title>\n<title name=\"SPRITE2\">0</title>\n</block></xml>"
      courseA_playLab_events7_2019:
        courseA_playLab_events7_a: "Usa este bloque para controlar lo que ocurre cuando
          los actores choquen. \n\n<xml><block type=\"studio_whenSpriteCollided\">\n\n<title
          name=\"SPRITE1\">1</title>\n<title name=\"SPRITE2\">0</title>\n</block></xml>"
      courseB_Scrat_ramp2_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp2_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3a_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp3b_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2018:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp5a_2019:
        '1': |-
          Tu código debería tener este aspecto:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_artist_loops2:
        courseB_artist_loops2_a: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseB_artist_loops2_b: Intenta ejecutar el código primero a ver dónde acaba
          el artista.
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseB_artist_loops2_b: Intenta ejecutar el código primero a ver dónde acaba
          el artista.
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: Si quiere que el lazo se repita más de 4 veces, usted
          puede cambiar el número en la parte superior del bloque.
        courseB_artist_loops2_b: Intenta ejecutar el código primero a ver dónde acaba
          el artista.
      courseB_artist_loops3:
        courseB_artist_loops3_a: "¡Acuérdate de usar un bucle de `repetir` para una
          mejor codificación!"
        courseB_artist_loops3_b: El artista se tendría que mover al Sur para dibujar
          esta línea.
      courseB_artist_loops3_2018:
        courseB_artist_loops3_b: El artista se tendría que mover al Sur para dibujar
          esta línea.
      courseB_artist_loops3_2019:
        courseB_artist_loops3_b: El artista se tendría que mover al Sur para dibujar
          esta línea.
      courseB_artist_loops4:
        courseB_artist_loops4_c: No olvides cambiar el número de veces que el bucle
          se repite.
      courseB_artist_loops4_2018:
        courseB_artist_loops4_c: No olvides cambiar el número de veces que el bucle
          se repite.
      courseB_artist_loops4_2019:
        courseB_artist_loops4_c: No olvides cambiar el número de veces que el bucle
          se repite.
      courseB_artist_loops6:
        courseB_artist_loops6_b: Intenta escribir tus movimientos en un pedazo de
          papel y buscar un patrón.
      courseB_artist_loops6_2018:
        courseB_artist_loops6_b: Intenta escribir tus movimientos en un pedazo de
          papel y buscar un patrón.
      courseB_artist_loops6_2019:
        courseB_artist_loops6_b: Intenta escribir tus movimientos en un pedazo de
          papel y buscar un patrón.
      courseB_artist_loops7:
        courseB_artist_loops7_c: |-
          Los bucles deberían hacer lo siguiente:

          -   Bucle 1
              -   Derecha
              -   Abajo

          \-Bucle 2

          -   Derecha
          -   Arriba

          \-Bucle 3

          -   Izquierda

          -   Arriba

          -   Bucle 4
              -   Izquierda
              -   Abajo
      courseB_artist_loops7_2018:
        courseB_artist_loops7_c: |-
          Los bucles deberían hacer lo siguiente:

          -   Bucle 1
              -   Derecha
              -   Abajo

          \-Bucle 2

          -   Derecha
          -   Arriba

          \-Bucle 3

          -   Izquierda

          -   Arriba

          -   Bucle 4
              -   Izquierda
              -   Abajo
      courseB_artist_loops7_2019:
        courseB_artist_loops7_c: |-
          Los bucles deberían hacer lo siguiente:

          -   Bucle 1
              -   Derecha
              -   Abajo

          \-Bucle 2

          -   Derecha
          -   Arriba

          \-Bucle 3

          -   Izquierda

          -   Arriba

          -   Bucle 4
              -   Izquierda
              -   Abajo
      courseB_artist_loops8:
        courseB_artist_loops8_a: "¿Cuántas veces deberías repetir este patrón para
          construir la escalera?"
        courseB_artist_loops8_b: Intenta ejecutar el código que se te ha dado para
          ver lo que hace.
      courseB_artist_loops8_2018:
        courseB_artist_loops8_a: "¿Cuántas veces deberías repetir este patrón para
          construir la escalera?"
        courseB_artist_loops8_b: Intenta ejecutar el código que se te ha dado para
          ver lo que hace.
      courseB_artist_loops8_2019:
        courseB_artist_loops8_a: "¿Cuántas veces deberías repetir este patrón para
          construir la escalera?"
        courseB_artist_loops8_b: Intenta ejecutar el código que se te ha dado para
          ver lo que hace.
      courseB_artist_loops9:
        courseB_artist_loops9_a: Recuerda que los bloques de salto pueden usarse para
          moverse sin dibujar una linea.
        courseB_artist_loops9_b: Deberías usar el bloque W para solucionar este puzzle.
      courseB_artist_loops9_2018:
        courseB_artist_loops9_a: Recuerda que los bloques de salto pueden usarse para
          moverse sin dibujar una linea.
        courseB_artist_loops9_b: Deberías usar el bloque W para solucionar este puzzle.
      courseB_artist_loops9_2019:
        courseB_artist_loops9_a: Recuerda que los bloques de salto pueden usarse para
          moverse sin dibujar una linea.
        courseB_artist_loops9_b: Deberías usar el bloque W para solucionar este puzzle.
      courseB_artist_loops_challenge1:
        courseB_artist_loops_challenge1_c: 'Necesitarás `mover` o `saltar` sobre algunas
          líneas dos veces. '
      courseB_artist_loops_challenge1_2018:
        courseB_artist_loops_challenge1_c: 'Necesitarás `mover` o `saltar` sobre algunas
          líneas dos veces. '
      courseB_artist_loops_challenge1_2019:
        courseB_artist_loops_challenge1_c: 'Necesitarás `mover` o `saltar` sobre algunas
          líneas dos veces. '
      courseB_artist_loops_challenge2:
        courseB_artist_loops_challenge2_a: El código para dibujar una X ya lo hemos
          visto anteriormente. Todo lo que necesitas hacer es repetir la X y `saltar`
          al siguiente lugar.
        courseB_artist_loops_challenge2_b: Puedes usar bloques `saltar` para moverte
          a otros espacios.
      courseB_artist_loops_challenge2_2018:
        courseB_artist_loops_challenge2_a: El código para dibujar una X ya lo hemos
          visto anteriormente. Todo lo que necesitas hacer es repetir la X y `saltar`
          al siguiente lugar.
        courseB_artist_loops_challenge2_b: Puedes usar bloques `saltar` para moverte
          a otros espacios.
      courseB_artist_loops_challenge2_2019:
        courseB_artist_loops_challenge2_a: El código para dibujar una X ya lo hemos
          visto anteriormente. Todo lo que necesitas hacer es repetir la X y `saltar`
          al siguiente lugar.
        courseB_artist_loops_challenge2_b: Puedes usar bloques `saltar` para moverte
          a otros espacios.
      courseB_collector_loops10:
        courseB_collector_loops10_b: Intenta escribir tus movimientos en un pedazo
          de papel y buscar un patrón.
      courseB_collector_loops10_2018:
        courseB_collector_loops10_b: Intenta escribir tus movimientos en un pedazo
          de papel y buscar un patrón.
      courseB_collector_loops10_2019:
        courseB_collector_loops10_b: Intenta escribir tus movimientos en un pedazo
          de papel y buscar un patrón.
      courseB_collector_loops2:
        courseB_collector_loops2_a: Tendrás que moverte antes de coleccionar algún
          tesoro.
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: Tendrás que moverte antes de coleccionar algún
          tesoro.
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: Tendrás que moverte antes de coleccionar algún
          tesoro.
      courseB_collector_loops4:
        courseB_collector_loops4_b: Para cambiar la distancia que recorre Laurel,
          cambia el número de veces que se ejecutará el bucle.
      courseB_collector_loops4_2018:
        courseB_collector_loops4_b: Para cambiar la distancia que recorre Laurel,
          cambia el número de veces que se ejecutará el bucle.
      courseB_collector_loops4_2019:
        courseB_collector_loops4_b: Para cambiar la distancia que recorre Laurel,
          cambia el número de veces que se ejecutará el bucle.
      courseB_collector_loops5:
        courseB_collector_loops5_a: Usa más de un bucle para terminar el proceso.
        courseB_collector_loops5_b: Intenta ejecutar el código un par de veces para
          ver qué ocurre.
      courseB_collector_loops5_2018:
        courseB_collector_loops5_a: Usa más de un bucle para terminar el proceso.
        courseB_collector_loops5_b: Intenta ejecutar el código un par de veces para
          ver qué ocurre.
      courseB_collector_loops5_2019:
        courseB_collector_loops5_a: Usa más de un bucle para terminar el proceso.
        courseB_collector_loops5_b: Intenta ejecutar el código un par de veces para
          ver qué ocurre.
      courseB_collector_loops6:
        courseB_collector_loops6_a: ¿No sabes dónde empiezan los problemas? Usa el
          botón "Paso" para ejecutar tu programa bloque a bloque.
        courseB_collector_loops6_b: Puedes cambiar el número de veces que se ejecuta
          el bucle de repetición haciendo click en "3" y eligiendo un nuevo número.
        courseB_collector_loops6_c: Deberías usar 3 bucles de `repetir` para solucionar
          este puzzle.
        courseB_collector_loops6_d: Si estás confundido, intenta separar este puzzle
          en 3 partes.
      courseB_collector_loops6_2018:
        courseB_collector_loops6_a: ¿No sabes dónde empiezan los problemas? Usa el
          botón "Paso" para ejecutar tu programa bloque a bloque.
        courseB_collector_loops6_b: Puedes cambiar el número de veces que se ejecuta
          el bucle de repetición haciendo click en "3" y eligiendo un nuevo número.
        courseB_collector_loops6_d: Si estás confundido, intenta separar este puzzle
          en 3 partes.
      courseB_collector_loops6_2019:
        courseB_collector_loops6_a: ¿No sabes dónde empiezan los problemas? Usa el
          botón "Paso" para ejecutar tu programa bloque a bloque.
        courseB_collector_loops6_b: Puedes cambiar el número de veces que se ejecuta
          el bucle de repetición haciendo click en "3" y eligiendo un nuevo número.
        courseB_collector_loops6_d: Si estás confundido, intenta separar este puzzle
          en 3 partes.
      courseB_collector_loops9:
        courseB_collector_loops9_a: "¿Esto parece demasiado difícil? Divídelo en 4
          pequeños problemas para que se sienta más fácil."
        courseB_collector_loops9_b: Necesitarás 3 bucles de repetición, uno después
          del otro, para esta solución.
      courseB_collector_loops9_2018:
        courseB_collector_loops9_a: "¿Esto parece demasiado difícil? Divídelo en 4
          pequeños problemas para que se sienta más fácil."
        courseB_collector_loops9_b: Necesitarás 3 bucles de repetición, uno después
          del otro, para esta solución.
      courseB_collector_loops9_2019:
        courseB_collector_loops9_a: "¿Esto parece demasiado difícil? Divídelo en 4
          pequeños problemas para que se sienta más fácil."
        courseB_collector_loops9_b: Necesitarás 3 bucles de repetición, uno después
          del otro, para esta solución.
      courseB_collector_loops_challenge1:
        courseB_collector_loops_challenge1_b: |-
          Empieza haciendo bucles con los siguientes comandos:

          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          Muévete al Este dos veces entre cada camino.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Puedes hacerlo con solamente 14 bloques. Haz click y pide una pista más para ver la solución.
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba con esto!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2018:
        courseB_collector_loops_challenge1_b: |-
          Empieza haciendo bucles con los siguientes comandos:

          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          Muévete al Este dos veces entre cada camino.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Puedes hacerlo con solamente 14 bloques. Haz click y pide una pista más para ver la solución.
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba con esto!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge1_2019:
        courseB_collector_loops_challenge1_b: |-
          Empieza haciendo bucles con los siguientes comandos:

          <xml>
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"></block>
          </next>
          </block>
          </xml>
        courseB_collector_loops_challenge1_c: |-
          Muévete al Este dos veces entre cada camino.

          <xml>
            <block type="maze_moveEast"><next>
            <block type="maze_moveEast"></block></next></block>
            </xml>

          Puedes hacerlo con solamente 14 bloques. Haz click y pide una pista más para ver la solución.
        courseB_collector_loops_challenge1_d: |-
          ¡Prueba con esto!

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="maze_moveNorth"/>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="controls_repeat_simplified">
          <title name="TIMES">5</title>
          <statement name="DO">
          <block type="maze_moveSouth">
          <next>
          <block type="collector_collect"/>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2:
        courseB_collector_loops_challenge2_a: Si algo va mal, no tengas miedo a comenzar
          de nuevo. ¡No te rindas!
        courseB_collector_loops_challenge2_b: |-
          Si repites este patrón, ¡Laurel no se golpeará con la pared del fondo de la cueva!

          <xml><block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
        courseB_collector_loops_challenge2_c: "¡Intenta usar un bloque `repetir` para
          recoger el tesoro final!"
        courseB_collector_loops_challenge2_d: |-
          Prueba con esta solución:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">4</title>
          <statement name="DO">
          <block type="maze_moveEast">
          <next>
          <block type="collector_collect">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveWest">
          <next>
          <block type="maze_moveSouth"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_simplified_dropdown">
          <title name="TIMES" config="3-10">6</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: Si algo sale mal, intenta depurarlo
          todo. ¡No te rindas!
        courseB_collector_loops_challenge2a_b: Mira esta opción para recorrer la mazmorra.
          ¿Ves algún patrón que puedas repetir?
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: Si algo sale mal, intenta depurarlo
          todo. ¡No te rindas!
        courseB_collector_loops_challenge2a_b: Mira esta opción para recorrer la mazmorra.
          ¿Ves algún patrón que puedas repetir?
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: Si algo sale mal, intenta depurarlo
          todo. ¡No te rindas!
        courseB_collector_loops_challenge2a_b: Mira esta opción para recorrer la mazmorra.
          ¿Ves algún patrón que puedas repetir?
      courseB_iceage_loops1:
        courseB_iceage_loops1_a: "¡Cuidado con el hielo roto! ¡Scrat podría atravesarlo!"
        courseB_iceage_loops1_b: |-
          Tendrás que usar este bloque:

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10:
        courseB_iceage_loops10_a: "¡Cuidado con el hielo roto! ¡Scrat podría caer
          al agua!"
        courseB_iceage_loops10_b: Intenta decir los pasos en voz alta o escribirlos
          en un trozo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: "¡Este puzzle es largo! Sigue esta ruta."
      courseB_iceage_loops10_2019:
        courseB_iceage_loops10_a: "¡Cuidado con el hielo roto! ¡Scrat podría caer
          al agua!"
        courseB_iceage_loops10_b: Intenta decir los pasos en voz alta o escribirlos
          en un trozo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: "¡Este puzzle es largo! Sigue esta ruta."
      courseB_iceage_loops1_2019:
        courseB_iceage_loops1_a: "¡Cuidado con el hielo roto! ¡Scrat podría atravesarlo!"
        courseB_iceage_loops1_b: |-
          Tendrás que usar este bloque:

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops2:
        courseB_iceage_loops2_a: Separa este puzzle en dos piezas, una antes de la
          esquina, y otra después de la esquina.
        courseB_iceage_loops2_b: Si te atascas, intenta decir los pasos en voz alta.
        courseB_iceage_loops2_c: Sigue esta ruta para llevar a Scrat a la bellota.
      courseB_iceage_loops2_2019:
        courseB_iceage_loops2_a: Separa este puzzle en dos piezas, una antes de la
          esquina, y otra después de la esquina.
        courseB_iceage_loops2_b: Si te atascas, intenta decir los pasos en voz alta.
        courseB_iceage_loops2_c: Sigue esta ruta para llevar a Scrat a la bellota.
      courseB_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Use este nuevo bloque!
          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">5</title>
              </block></xml>
      courseB_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Use este nuevo bloque!
          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">5</title>
              </block></xml>
        courseB_iceage_loops3_b: |-
          Para repetir código, arrastre un `repeat` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> bucle, luego ponga el bloque que prefiera dentro del bucle.
      courseB_maze_seq2:
        courseB_maze_seq2_a: A este programa le falta 1 bloque. ¿Puedes averiguar
          cuál es?
      courseB_maze_seq3:
        courseB_maze_seq3_a: Uno de los bloques está moviendo al pájaro en la dirección
          equivocada. ¿Puedes averiguar cuál es y sustituirlo con el bloque correcto?
        courseB_maze_seq3_b: Intenta usar el botón de pasos para ver dónde está el
          problema del programa. ¿Es el primer paso? ¿El segundo, quizás?
        courseB_maze_seq3_c: El bloque <xml><block type="maze_moveWest"/></xml> no
          parece que mueva al pájaro en la dirección correcta.
      courseB_maze_seq4:
        courseB_maze_seq4_a: Intenta añadir una instrucción cada vez hasta que llegues
          al cerdo.
        courseB_maze_seq4_b: Necesitas usar el bloque <xml><block type="maze_moveEast"/></xml>
          para solucionar este puzzle.
      courseB_maze_seq4_2018:
        courseB_maze_seq4_a: Intenta añadir una instrucción cada vez hasta que llegues
          a la bellota.
        courseB_maze_seq4_b: Necesitas usar el bloque <xml><block type="maze_moveEast"/></xml>
          para solucionar este puzzle.
      courseB_maze_seq4_2019:
        courseB_maze_seq4_a: Intenta añadir una instrucción cada vez hasta que llegues
          a la bellota.
        courseB_maze_seq4_b: Necesitas usar el bloque <xml><block type="maze_moveEast"/></xml>
          para solucionar este puzzle.
      courseB_maze_seq5:
        courseB_maze_seq5_a: Si te atascas, intenta dibujar la ruta en un papel.
        courseB_maze_seq5_b: "¡Hay 2 maneras de solucionar este puzzle!"
        courseB_maze_seq5_c: "¿No estás seguro/a de cómo llegar al cerdo? Intenta
          este camino."
      courseB_maze_seq5_2018:
        courseB_maze_seq5_a: Si te atascas, intenta dibujar la ruta en un papel.
        courseB_maze_seq5_b: "¡Hay 2 maneras de solucionar este puzzle!"
        courseB_maze_seq5_c: "¿No estás seguro/a de cómo llegar a la bellota? Prueba
          con esta ruta."
      courseB_maze_seq5_2019:
        courseB_maze_seq5_a: Si te atascas, intenta dibujar la ruta en un papel.
        courseB_maze_seq5_b: "¡Hay 2 maneras de solucionar este puzzle!"
        courseB_maze_seq5_c: "¿No estás seguro/a de cómo llegar a la bellota? Prueba
          con esta ruta."
      courseB_maze_seq6:
        courseB_maze_seq6_a: Tu código final debería tener tres bloques de movimiento.
        courseB_maze_seq6_b: Si te atascas, intenta solucionar el puzzle en dos partes,
          una que incluye los lados y otra desde arriba hacia abajo.
        courseB_maze_seq5_c: Hay dos maneras de solucionar este puzzle.
        courseB_maze_seq5_d: "¿No estás seguro/a de cómo llegar al cerdo? ¡Prueba
          con esta ruta!"
      courseB_maze_seq6_2018:
        courseB_maze_seq6_a: Tu código final debería tener tres bloques de movimiento.
        courseB_maze_seq6_b: Si te atascas, intenta solucionar el puzzle en dos partes,
          una que incluye los lados y otra desde arriba hacia abajo.
        courseB_maze_seq5_c: Hay dos maneras de solucionar este puzzle.
        courseB_maze_seq5_d: "¿No estás seguro de cómo llegar a la bellota? ¡Prueba
          con esta ruta!"
      courseB_maze_seq6_2019:
        courseB_maze_seq6_a: Tu código final debería tener tres bloques de movimiento.
        courseB_maze_seq6_b: Si te atascas, intenta solucionar el puzzle en dos partes,
          una que incluye los lados y otra desde arriba hacia abajo.
        courseB_maze_seq5_c: Hay dos maneras de solucionar este puzzle.
        courseB_maze_seq5_d: "¿No estás seguro de cómo llegar a la bellota? ¡Prueba
          con esta ruta!"
      courseB_maze_seq7:
        courseB_maze_seq7_a: Añade 1 bloque para mover al pájaro hasta el cerdo.
        courseB_maze_seq7_b: Intenta ejecutar el código dado y mira a ver dónde acabas.
        courseB_maze_seq7_c: "¿No puedes llegar al cerdo? ¡Intenta esta ruta!"
      courseB_maze_seq7_2018:
        courseB_maze_seq7_a: Añade 1 bloque para mover a Scrat hasta la bellota.
        courseB_maze_seq7_b: Intenta ejecutar el código dado y mira a ver dónde acabas.
        courseB_maze_seq7_c: "¿No consigues llegar hasta la bellota? ¡Prueba esta
          ruta!"
      courseB_maze_seq7_2019:
        courseB_maze_seq7_a: Añade 1 bloque para mover a Scrat hasta la bellota.
        courseB_maze_seq7_b: Intenta ejecutar el código dado y mira a ver dónde acabas.
        courseB_maze_seq7_c: "¿No consigues llegar hasta la bellota? ¡Prueba esta
          ruta!"
      courseB_maze_seq8:
        courseB_maze_seq8_a: Intenta añadir un bloque cada vez hasta que resuelvas
          el puzzle.
        courseB_maze_seq8_b: "¡Aquí tienes dos caminos para resolver el puzzle!"
        courseB_maze_seq8_c: "¿No sabes qué camino coger? ¡Inténtalo con éste!"
      courseB_maze_seq8_2018:
        courseB_maze_seq8_a: Intenta añadir un bloque cada vez hasta que resuelvas
          el puzzle.
        courseB_maze_seq8_b: "¡Aquí tienes dos caminos para resolver el puzzle!"
        courseB_maze_seq8_c: "¿No sabes qué camino coger? ¡Inténtalo con éste!"
      courseB_maze_seq8_2019:
        courseB_maze_seq8_a: Intenta añadir un bloque cada vez hasta que resuelvas
          el puzzle.
        courseB_maze_seq8_b: "¡Aquí tienes dos caminos para resolver el puzzle!"
        courseB_maze_seq8_c: "¿No sabes qué camino coger? ¡Inténtalo con éste!"
      courseB_maze_seq9:
        courseB_maze_seq9_a: Intenta escribir todos los pasos en un trozo de papel.
        courseB_maze_seq9_b: Escribe tu programa usando un bloque cada vez y compruébalo
          mientras lo escribes.
        courseB_maze_seq9_c: Hay dos maneras de solucionar este puzzle.
        courseB_maze_seq9_d: "¿Atascado/a? ¡Intenta esta ruta!"
      courseB_maze_seq9_2018:
        courseB_maze_seq9_a: Intenta escribir todos los pasos en un trozo de papel.
        courseB_maze_seq9_b: Escribe tu programa usando un bloque cada vez y compruébalo
          mientras lo escribes.
        courseB_maze_seq9_c: Hay dos maneras de solucionar este puzzle.
        courseB_maze_seq9_d: "¿Atascado/a? ¡Intenta esta ruta!"
      courseB_maze_seq9_2019:
        courseB_maze_seq9_a: Intenta escribir todos los pasos en un trozo de papel.
        courseB_maze_seq9_b: Escribe tu programa usando un bloque cada vez y compruébalo
          mientras lo escribes.
        courseB_maze_seq9_c: Hay dos maneras de solucionar este puzzle.
        courseB_maze_seq9_d: "¿Atascado/a? ¡Intenta esta ruta!"
      courseB_maze_seq_challenge1:
        courseB_maze_seq_challenge1_a: El camino más corto puede que no funcione esta
          vez.
        courseB_maze_seq_challenge1_b: Intenta usar el bloque <xml><block type="maze_moveWest"/></xml>
          para empezar.
      courseB_maze_seq_challenge1_2018:
        courseB_maze_seq_challenge1_a: El camino más corto puede que no funcione esta
          vez.
        courseB_maze_seq_challenge1_b: Intenta usar el bloque <xml><block type="maze_moveWest"/></xml>
          para empezar.
      courseB_maze_seq_challenge1_2019:
        courseB_maze_seq_challenge1_a: El camino más corto puede que no funcione esta
          vez.
        courseB_maze_seq_challenge1_b: Intenta usar el bloque <xml><block type="maze_moveWest"/></xml>
          para empezar.
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_a: No necesitas añadir o eliminar bloques para
          completar este puzzle.
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_a: No necesitas añadir o eliminar bloques para
          completar este puzzle.
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_a: No necesitas añadir o eliminar bloques para
          completar este puzzle.
      courseB_playlab_events2:
        courseB_playlab_events2_a: |-
          Éste es el bloque para que Daisy diga algo:

          <xml><block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Hola.</title>
          </block>
          </xml>
      courseB_playlab_events2_2018:
        courseB_playlab_events2_a: |-
          Éste es el bloque para que Daisy diga algo:

          <xml><block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Hola.</title>
          </block>
          </xml>
      courseB_playlab_events2_2019:
        courseB_playlab_events2_a: |-
          Éste es el bloque para que Daisy diga algo:

          <xml><block type="studio_saySpriteChoices">

          <title name="SPRITE">0</title>
          <title name="VALUE">Hola.</title>
          </block>
          </xml>
      courseB_playlab_events3:
        courseB_playlab_events3_a: |-
          Éste es el bloque que necesitas usar para añadir el evento:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Éste es el bloque que necesitas para cambiar el humor de Daisy:

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">aleatorio</title>
          </block>
          </xml>
      courseB_playlab_events3_2018:
        courseB_playlab_events3_a: |-
          Éste es el bloque que necesitas usar para añadir el evento:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Éste es el bloque que necesitas para cambiar el humor de Daisy:

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">aleatorio</title>
          </block>
          </xml>
      courseB_playlab_events3_2019:
        courseB_playlab_events3_a: |-
          Éste es el bloque que necesitas usar para añadir el evento:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">0</title>
          </block>
          </xml>
        courseB_playlab_events3_b: |-
          Éste es el bloque que necesitas para cambiar el humor de Daisy:

          <xml>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">0</title>
          <title name="VALUE">aleatorio</title>
          </block>
          </xml>
      courseB_playlab_events4:
        courseB_playlab_events4_a: |-
          Éste es el evento que controla la flecha izquierda:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">izquierda</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Éste es el bloque que hace que el caballero se mueva a la izquierda.

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2018:
        courseB_playlab_events4_a: |-
          Éste es el evento que controla la flecha izquierda:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">izquierda</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Éste es el bloque que hace que el caballero se mueva a la izquierda.

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events4_2019:
        courseB_playlab_events4_a: |-
          Éste es el evento que controla la flecha izquierda:

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">izquierda</title>
          </block>
          </xml>
        courseB_playlab_events4_b: |-
          Éste es el bloque que hace que el caballero se mueva a la izquierda.

          <xml>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block>
          </xml>
      courseB_playlab_events5:
        courseB_playlab_events5_a: |-
          Éste es el bloque del evento que controla la flecha derecha:

          <xml>
           <block type="studio_whenArrow">
            <title name="VALUE">derecha</title>
           </block>
           </xml>
        courseB_playlab_events5_b: |-
          Éste es el bloque que hace que el caballero huya.

          <xml>
          <block type="studio_move">
            <title name="SPRITE">1</title>
            <title name="DIR">2</title>
           </block>
          </xml>
      courseB_playlab_events5_2018:
        courseB_playlab_events5_a: |-
          Éste es el bloque del evento que controla la flecha derecha:

          <xml>
           <block type="studio_whenArrow">
            <title name="VALUE">derecha</title>
           </block>
           </xml>
        courseB_playlab_events5_b: |-
          Éste es el bloque que hace que el caballero huya.

          <xml>
          <block type="studio_move">
            <title name="SPRITE">1</title>
            <title name="DIR">2</title>
           </block>
          </xml>
      courseB_playlab_events5_2019:
        courseB_playlab_events5_a: |-
          Éste es el bloque del evento que controla la flecha derecha:

          <xml>
           <block type="studio_whenArrow">
            <title name="VALUE">derecha</title>
           </block>
           </xml>
        courseB_playlab_events5_b: |-
          Éste es el bloque que hace que el caballero huya.

          <xml>
          <block type="studio_move">
            <title name="SPRITE">1</title>
            <title name="DIR">2</title>
           </block>
          </xml>
      courseB_playlab_events6:
        courseB_playlab_events6_a: |-
          Necesitarás estos bloques de evento:

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">arriba</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">abajo</title>
          </block>
          </xml>
        courseB_playlab_events6_c: "¡Llega a todas las banderas para pasar!"
      courseB_playlab_events6_2018:
        courseB_playlab_events6_a: |-
          Necesitarás estos bloques de evento:

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">arriba</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">abajo</title>
          </block>
          </xml>
        courseB_playlab_events6_c: "¡Llega a todas las banderas para pasar!"
      courseB_playlab_events6_2019:
        courseB_playlab_events6_a: |-
          Necesitarás estos bloques de evento:

          <xml>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">arriba</title>
          </block>
          <block type="studio_whenArrow" id="callMe">
          <title name="VALUE">abajo</title>
          </block>
          </xml>
        courseB_playlab_events6_c: "¡Llega a todas las banderas para pasar!"
      courseB_playlab_events7:
        courseB_playlab_events7_a: |-
          Éste es el bloque de evento que necesitarás:

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Éste es el bloque que necesitas para reproducir un sonido.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">palmada</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Éste es el bloque que necesitas para hacer que el caballero se desvanezca:

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2018:
        courseB_playlab_events7_a: |-
          Éste es el bloque de evento que necesitarás:

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Éste es el bloque que necesitas para reproducir un sonido.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">palmada</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Éste es el bloque que necesitas para hacer que el caballero se desvanezca:

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events7_2019:
        courseB_playlab_events7_a: |-
          Éste es el bloque de evento que necesitarás:

          <xml>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          </block>
          </xml>
        courseB_playlab_events7_b: |-
          Éste es el bloque que necesitas para reproducir un sonido.

          <xml>
          <block type="studio_playSound">
          <title name="SOUND">palmada</title>
          </block>
          </xml>
        courseB_playlab_events7_c: |-
          Éste es el bloque que necesitas para hacer que el caballero se desvanezca:

          <xml>
          <block type="studio_vanish">
          <title name="SPRITE">1</title>
          </block>
          </xml>
      courseB_playlab_events_challenge1:
        courseB_playlab_events_challenge1_a: "Haz que los otros animales se muevan
          hacia abajo all pulsar `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\"
          movable=\"false\">\n    <title name=\"VALUE\">abajo</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Cambia la velocidad de los animales usando este bloque:

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          ¿Qué dirá todo el mundo al acabar la carrera? Hazles hablar con este evento:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">¡Yujuuuu!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2018:
        courseB_playlab_events_challenge1_a: "Haz que los otros animales se muevan
          hacia abajo all pulsar `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\"
          movable=\"false\">\n    <title name=\"VALUE\">abajo</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Cambia la velocidad de los animales usando este bloque:

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          ¿Qué dirá todo el mundo al acabar la carrera? Hazles hablar con este evento:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">¡Yujuuuu!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge1_2019:
        courseB_playlab_events_challenge1_a: "Haz que los otros animales se muevan
          hacia abajo all pulsar `▼`. \n\n<xml>\n  <block type=\"studio_whenArrow\"
          movable=\"false\">\n    <title name=\"VALUE\">abajo</title>\n  </block>\n</xml>"
        courseB_playlab_events_challenge1_b: |-
          Cambia la velocidad de los animales usando este bloque:

          <xml>
          <block type="studio_setSpriteSpeed">
          <title name="SPRITE">0</title>
          <title name="VALUE">Studio.SpriteSpeed.NORMAL</title>
          </block></xml>
        courseB_playlab_events_challenge1_c: |-
          ¿Qué dirá todo el mundo al acabar la carrera? Hazles hablar con este evento:

          <xml>
          <block type="studio_whenSpriteClicked">
          <title name="SPRITE">2</title>
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">2</title>
          <title name="VALUE">¡Yujuuuu!</title>
          </block>
          </next>
          </block>
          </xml>
      courseB_playlab_events_challenge2:
        courseB_playlab_events_challenge2_a: Cada animal del juego debería desaparecer
          al hacer click sobre él. ¡También debería volver pasados uno o dos segundos!
      courseB_playlab_events_challenge2_2018:
        courseB_playlab_events_challenge2_a: Cada animal del juego debería desaparecer
          al hacer click sobre él. ¡También debería volver pasados uno o dos segundos!
      courseB_playlab_events_challenge2_2019:
        courseB_playlab_events_challenge2_a: Cada animal del juego debería desaparecer
          al hacer click sobre él. ¡También debería volver pasados uno o dos segundos!
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: "¡No tengas miedo de cometer un error! Ejecuta el
          código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: "¡No tengas miedo de cometer un error! Ejecuta el
          código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: "¡No tengas miedo de cometer un error! Ejecuta el
          código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseC_PlayLab_events1:
        courseC_PlayLab_events1_a: "Añade este bloque al bloque `al ejecutar`:\n\n<xml>
          \  \n  <block type=\"studio_saySpriteChoices\">     \n     <title name=\"SPRITE\">0</title>\n
          \    <title name=\"VALUE\">Hi there.</title>\n   </block>\n</xml>"
      courseC_PlayLab_events1_2018:
        courseC_PlayLab_events1_a: "Añade este bloque al bloque `al ejecutar`:\n\n<xml>
          \  \n  <block type=\"studio_saySpriteChoices\">     \n     <title name=\"SPRITE\">0</title>\n
          \    <title name=\"VALUE\">Hi there.</title>\n   </block>\n</xml>"
      courseC_PlayLab_events1_2019:
        courseC_PlayLab_events1_a: "Añade este bloque al bloque `al ejecutar`:\n\n<xml>
          \  \n  <block type=\"studio_saySpriteChoices\">     \n     <title name=\"SPRITE\">0</title>\n
          \    <title name=\"VALUE\">Hi there.</title>\n   </block>\n</xml>"
      courseC_PlayLab_events2:
        courseC_PlayLab_events2_a: |-
          Añade dos de estos bloques al bloque `al ejecutar`:

          <xml>   <block type="studio_saySpriteChoices">     <title name="SPRITE">0</title>     <title name="VALUE">Hi there.</title>   </block> </xml>
        courseC_PlayLab_events2_b: Utiliza el menú desplegable del segundo bloque
          `actor __ dice` para cambiar el actor que habla.
      courseC_PlayLab_events2_2018:
        courseC_PlayLab_events2_a: |-
          Añade dos de estos bloques al bloque `al ejecutar`:

          <xml>   <block type="studio_saySpriteChoices">     <title name="SPRITE">0</title>     <title name="VALUE">Hi there.</title>   </block> </xml>
        courseC_PlayLab_events2_b: Utiliza el menú desplegable del segundo bloque
          `actor __ dice` para cambiar el actor que habla.
      courseC_PlayLab_events2_2019:
        courseC_PlayLab_events2_a: |-
          Añade dos de estos bloques al bloque `al ejecutar`:

          <xml>   <block type="studio_saySpriteChoices">     <title name="SPRITE">0</title>     <title name="VALUE">Hi there.</title>   </block> </xml>
        courseC_PlayLab_events2_b: Utiliza el menú desplegable del segundo bloque
          `actor __ dice` para cambiar el actor que habla.
      courseC_PlayLab_events3:
        courseC_PlayLab_events3_a: Sólo tienes que mover a Jorge a la derecha 25 píxeles
          para resolver este puzle.
        courseC_PlayLab_events3_b: "¿Hay algún bloque en la caja de herramientas que
          parezca que podría mover a un actor?"
        courseC_PlayLab_events3_c: "Añade este bloque al bloque `al ejecutar`:\n\n<xml>
          \  \n  <block type=\"studio_saySpriteChoices\">     \n    <title name=\"SPRITE\">0</title>
          \    \n    <title name=\"DIR\">2</title>     \n    <title name=\"DISTANCE\">25</title>\n
          \ </block>\n</xml>"
      courseC_PlayLab_events3_2018:
        courseC_PlayLab_events3_a: Sólo tienes que mover a Jorge a la derecha 25 píxeles
          para resolver este puzle.
        courseC_PlayLab_events3_b: "¿Hay algún bloque en la caja de herramientas que
          parezca que podría mover a un actor?"
        courseC_PlayLab_events3_c: "Añade este bloque al bloque `al ejecutar`:\n\n<xml>
          \  \n  <block type=\"studio_saySpriteChoices\">     \n     <title name=\"SPRITE\">0</title>\n
          \    <title name=\"VALUE\">Hi there.</title>\n   </block>\n</xml>"
      courseC_PlayLab_events3_2019:
        courseC_PlayLab_events3_a: Sólo tienes que mover a Jorge a la derecha 25 píxeles
          para resolver este puzle.
        courseC_PlayLab_events3_b: "¿Hay algún bloque en la caja de herramientas que
          parezca que podría mover a un actor?"
        courseC_PlayLab_events3_c: "Añade este bloque al bloque `al ejecutar`:\n\n<xml>
          \  \n  <block type=\"studio_saySpriteChoices\">     \n     <title name=\"SPRITE\">0</title>\n
          \    <title name=\"VALUE\">Hi there.</title>\n   </block>\n</xml>"
      courseC_PlayLab_events4:
        courseC_PlayLab_events4_b: Cuando se pulse el botón "Ejecutar", Jorge necesita
          moverse a la derecha **100** píxeles para alcanzar a Olive la Gata.
        courseC_PlayLab_events4_a: Tienes que unir un bloque `actor __ dice` al evento
          `cuando el actor toca` para resolver este puzle.
      courseC_PlayLab_events4_2018:
        courseC_PlayLab_events4_b: Cuando se pulse el botón "Ejecutar", Jorge necesita
          moverse a la derecha **100** píxeles para alcanzar a Olive la Gata.
        courseC_PlayLab_events4_a: Tienes que unir un bloque `actor __ dice` al evento
          `cuando el actor toca` para resolver este puzle.
      courseC_PlayLab_events4_2019:
        courseC_PlayLab_events4_b: Cuando se pulse el botón "Ejecutar", Jorge necesita
          moverse a la derecha **100** píxeles para alcanzar a Olive la Gata.
        courseC_PlayLab_events4_a: Tienes que unir un bloque `actor __ dice` al evento
          `cuando el actor toca` para resolver este puzle.
      courseC_PlayLab_events5:
        courseC_PlayLab_events5_a: Tienes que pulsar en el menú desplegable del bloque
          `actor dice` para encontrar el texto "¿Qué hay de nuevo?"
        courseC_PlayLab_events5_b: "¡Pulsa en Octavia cuando ejecutes tu programa
          para comprobar que funciona!"
      courseC_PlayLab_events5_2018:
        courseC_PlayLab_events5_a: Tienes que pulsar en el menú desplegable del bloque
          `actor dice` para encontrar el texto "¿Qué hay de nuevo?"
        courseC_PlayLab_events5_b: "¡Pulsa en Octavia cuando ejecutes tu programa
          para comprobar que funciona!"
      courseC_PlayLab_events5_2019:
        courseC_PlayLab_events5_a: Tienes que pulsar en el menú desplegable del bloque
          `actor dice` para encontrar el texto "¿Qué hay de nuevo?"
        courseC_PlayLab_events5_b: "¡Pulsa en Octavia cuando ejecutes tu programa
          para comprobar que funciona!"
      courseC_PlayLab_events6:
        courseC_PlayLab_events6_a: Debería haber una accion debajo de cada bloque
          verde `cuando se pulse la tecla`.
        courseC_PlayLab_events6_b: Utiliza el menú desplegable del bloque `mover actor
          1` para cambiar la dirección en la que se mueve Waddles.
        courseC_PlayLab_events6_c: Cuando hayas acabado, ¡deberías de ser capaz de
          mover a Waddles usando las teclas de flechas de tu ordenador!
      courseC_PlayLab_events6_2018:
        courseC_PlayLab_events6_a: Debería haber una accion debajo de cada bloque
          verde `cuando se pulse la tecla`.
        courseC_PlayLab_events6_b: Utiliza el menú desplegable del bloque `mover actor
          1` para cambiar la dirección en la que se mueve Waddles.
        courseC_PlayLab_events6_c: Cuando hayas acabado, ¡deberías de ser capaz de
          mover a Waddles usando las teclas de flechas de tu ordenador!
      courseC_PlayLab_events6_2019:
        courseC_PlayLab_events6_a: Debería haber una accion debajo de cada bloque
          verde `cuando se pulse la tecla`.
        courseC_PlayLab_events6_b: Utiliza el menú desplegable del bloque `mover actor
          1` para cambiar la dirección en la que se mueve Waddles.
        courseC_PlayLab_events6_c: Cuando hayas acabado, ¡deberías de ser capaz de
          mover a Waddles usando las teclas de flechas de tu ordenador!
      courseC_PlayLab_events7:
        courseC_PlayLab_events7_a: 'Utiliza los bloques `mover actor 2 arriba 400
          píxeles` y `mover actor 2 abajo 400 píxeles` dentro de un bucle `Repetir
          para siempre` para resolver este puzle. '
        courseC_PlayLab_events7_b: El bucle `Repetir para siempre` no necesita estar
          conectado a ningún bloque de evento; se ejecutará por si mismo.
      courseC_PlayLab_events7_2018:
        courseC_PlayLab_events7_a: 'Utiliza los bloques `mover actor 2 arriba 400
          píxeles` y `mover actor 2 abajo 400 píxeles` dentro de un bucle `Repetir
          para siempre` para resolver este puzle. '
        courseC_PlayLab_events7_b: El bucle `Repetir para siempre` no necesita estar
          conectado a ningún bloque de evento; se ejecutará por si mismo.
      courseC_PlayLab_events7_2019:
        courseC_PlayLab_events7_a: 'Utiliza los bloques `mover actor 2 arriba 400
          píxeles` y `mover actor 2 abajo 400 píxeles` dentro de un bucle `Repetir
          para siempre` para resolver este puzle. '
        courseC_PlayLab_events7_b: El bucle `Repetir para siempre` no necesita estar
          conectado a ningún bloque de evento; se ejecutará por si mismo.
      courseC_PlayLab_events8:
        courseC_PlayLab_events8_a: Necesitas conectar otros bloques al bloque `cuando
          el actor toca` para que esto funcione.
        courseC_PlayLab_events8_b: "¡Los bloques `actor dice` y `reproducir sonido`
          de la caja de herramientas deberían ayudarte!"
      courseC_PlayLab_events8_2018:
        courseC_PlayLab_events8_a: Necesitas conectar otros bloques al bloque `cuando
          el actor toca` para que esto funcione.
        courseC_PlayLab_events8_b: "¡Los bloques `actor dice` y `reproducir sonido`
          de la caja de herramientas deberían ayudarte!"
      courseC_PlayLab_events8_2019:
        courseC_PlayLab_events8_a: Necesitas conectar otros bloques al bloque `cuando
          el actor toca` para que esto funcione.
        courseC_PlayLab_events8_b: "¡Los bloques `actor dice` y `reproducir sonido`
          de la caja de herramientas deberían ayudarte!"
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_a: El bloque `anotar punto` te ayudará a resolver
          este puzle.
        courseC_PlayLab_events9_b: Asegúrate de que tu nuevo bloque `cuando el actor
          toca` dice "el actor **1**" y "el actor **3**".
        courseC_PlayLab_events9_c: Puedes tener más de un evento `cuando el actor
          toca` en el espacio de trabajo, así que ¡no tienes que quitar el primero!
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_a: El bloque `anotar punto` te ayudará a resolver
          este puzle.
        courseC_PlayLab_events9_b: Asegúrate de que tu nuevo bloque `cuando el actor
          toca` dice "el actor **1**" y "el actor **3**".
        courseC_PlayLab_events9_c: Puedes tener más de un evento `cuando el actor
          toca` en el espacio de trabajo, así que ¡no tienes que quitar el primero!
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_a: El bloque `anotar punto` te ayudará a resolver
          este puzle.
        courseC_PlayLab_events9_b: Asegúrate de que tu nuevo bloque `cuando el actor
          toca` dice "el actor **1**" y "el actor **3**".
        courseC_PlayLab_events9_c: Puedes tener más de un evento `cuando el actor
          toca` en el espacio de trabajo, así que ¡no tienes que quitar el primero!
      courseC_PlayLab_eventsA:
        courseC_PlayLab_eventsA_a: Utiliza el bloque `establecer fondo` y el bloque
          `definir actor __ a una velocidad ___` para resolver este puzle.
        courseC_PlayLab_eventsA_b: Tienes que arrastar un bloque del evento `al ejecutar`
          al espacio de trabajo para resolver este puzle.
      courseC_PlayLab_eventsA_2018:
        courseC_PlayLab_eventsA_a: Utiliza el bloque `establecer fondo` y el bloque
          `definir actor __ a una velocidad ___` para resolver este puzle.
        courseC_PlayLab_eventsA_b: Tienes que arrastar un bloque del evento `al ejecutar`
          al espacio de trabajo para resolver este puzle.
      courseC_PlayLab_eventsA_2019:
        courseC_PlayLab_eventsA_a: Utiliza el bloque `establecer fondo` y el bloque
          `definir actor __ a una velocidad ___` para resolver este puzle.
        courseC_PlayLab_eventsA_b: Tienes que arrastar un bloque del evento `al ejecutar`
          al espacio de trabajo para resolver este puzle.
      courseC_PlayLab_eventsA_embed_2019:
        courseC_PlayLab_eventsA_a: Utiliza el bloque `establecer fondo` y el bloque
          `definir actor __ a una velocidad ___` para resolver este puzle.
        courseC_PlayLab_eventsA_b: Tienes que arrastar un bloque del evento `al ejecutar`
          al espacio de trabajo para resolver este puzle.
      courseC_PlayLab_eventsFP:
        idea1: |-
          _¿Necesitas una idea?_

          **¿Quién está ahí?** Haz que los personajes aparezcan con imagenes al azar, para que nadie sepa quién va a aparecer después.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _¿Necesitas una idea?_

          **Yendo de aventura** - Cambia el fondo, después haz que los personajes habled de donde están en ese momento (puedes escribir tus diálogos donde pone "type here").

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _¿Necesitas una idea?_

          **Pinball** - Haz que un personaje se mueva usando las teclas de las flechas (usa los bloques `cuando flecha hacia arriba` y `cuando flecha hacia abajo`) y haz que suene un sonido aleatorio cuando choque con otros personajes en la pantalla.
      courseC_PlayLab_eventsFP_2018:
        idea1: |-
          _¿Necesitas una idea?_

          **¿Quién está ahí?** Haz que los personajes aparezcan con imagenes al azar, para que nadie sepa quién va a aparecer después.

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _¿Necesitas una idea?_

          **Yendo de aventura** - Cambia el fondo, después haz que los personajes habled de donde están en ese momento (puedes escribir tus diálogos donde pone "type here").

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _¿Necesitas una idea?_

          **Pinball** - Haz que un personaje se mueva usando las teclas de las flechas (usa los bloques `cuando flecha hacia arriba` y `cuando flecha hacia abajo`) y haz que suene un sonido aleatorio cuando choque con otros personajes en la pantalla.
      courseC_PlayLab_eventsFP_2019:
        idea3: |-
          _¿Necesitas una idea?_

          **Pinball** - Haz que un personaje se mueva usando las teclas de las flechas (usa los bloques `cuando flecha hacia arriba` y `cuando flecha hacia abajo`) y haz que suene un sonido aleatorio cuando choque con otros personajes en la pantalla.
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge_a: |-
          Puedes usar este bloque para mover a los actores a diferentes lugares en el espacio de juego.

          <xml> <block type="studio_setSpritePosition">     <title name="SPRITE">0</title>     <title name="VALUE">12</title>   </block></xml>
        courseC_PlayLab_events_challenge_b: Intenta usar `colocar actor 1 en la posición
          central izquierda` cuando toque a cualquiera de los otros actores. ¡Esto
          reiniciará el juego para que el jugador pueda seguir intentándolo!
        courseC_PlayLab_events_challenge_c: |-
          ¡Puedes probar también cambiando la velocidad de los actores para hacer que el juego sea más fácil o más difícil!

           <xml> <block type="studio_setSpriteSpeed">     <title name="SPRITE">0</title>     <title name="VALUE">Studio.SpriteSpeed.FAST</title>   </block></xml>
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge_a: |-
          Puedes usar este bloque para mover a los actores a diferentes lugares en el espacio de juego.

          <xml> <block type="studio_setSpritePosition">     <title name="SPRITE">0</title>     <title name="VALUE">12</title>   </block></xml>
        courseC_PlayLab_events_challenge_b: Intenta usar `colocar actor 1 en la posición
          central izquierda` cuando toque a cualquiera de los otros actores. ¡Esto
          reiniciará el juego para que el jugador pueda seguir intentándolo!
        courseC_PlayLab_events_challenge_c: |-
          ¡Puedes probar también cambiando la velocidad de los actores para hacer que el juego sea más fácil o más difícil!

           <xml> <block type="studio_setSpriteSpeed">     <title name="SPRITE">0</title>     <title name="VALUE">Studio.SpriteSpeed.FAST</title>   </block></xml>
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge_a: |-
          Puedes usar este bloque para mover a los actores a diferentes lugares en el espacio de juego.

          <xml> <block type="studio_setSpritePosition">     <title name="SPRITE">0</title>     <title name="VALUE">12</title>   </block></xml>
        courseC_PlayLab_events_challenge_b: Intenta usar `colocar actor 1 en la posición
          central izquierda` cuando toque a cualquiera de los otros actores. ¡Esto
          reiniciará el juego para que el jugador pueda seguir intentándolo!
        courseC_PlayLab_events_challenge_c: |-
          ¡Puedes probar también cambiando la velocidad de los actores para hacer que el juego sea más fácil o más difícil!

           <xml> <block type="studio_setSpriteSpeed">     <title name="SPRITE">0</title>     <title name="VALUE">Studio.SpriteSpeed.FAST</title>   </block></xml>
      courseC_artist_loop1:
        courseC_artist_loop1_a: No tienes que hacer ningún cambio en el bucle, sólo
          poner un bloque encima de él.
        courseC_artist_loop1_b: |-
          Este es el bloque que necesitas para establecer un patrón:

          <xml> <block type="draw_line_style_pattern">     <title name="VALUE">DEFAULT</title>   </block> </xml>

          ¡Elige el patrón que quieras!
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: No tienes que hacer ningún cambio en el bucle, sólo
          poner un bloque encima de él.
        courseC_artist_loop1_b: |-
          Este es el bloque que necesitas para establecer un patrón:

          <xml> <block type="draw_line_style_pattern">     <title name="VALUE">DEFAULT</title>   </block> </xml>

          ¡Elige el patrón que quieras!
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: No tienes que hacer ningún cambio en el bucle, sólo
          poner un bloque encima de él.
        courseC_artist_loop1_b: |-
          Este es el bloque que necesitas para establecer un patrón:

          <xml> <block type="draw_line_style_pattern">     <title name="VALUE">DEFAULT</title>   </block> </xml>

          ¡Elige el patrón que quieras!
      courseC_artist_loops5a:
        courseC_artist_loops5a_a: Usa el menú desplegable del bloque `dibujar calcomanía`
          para cambiar las imágenes.
      courseC_artist_loops5a_2018:
        courseC_artist_loops5a_a: Usa el menú desplegable del bloque `dibujar calcomanía`
          para cambiar las imágenes.
      courseC_artist_loops5a_2019:
        courseC_artist_loops5a_a: Usa el menú desplegable del bloque `dibujar calcomanía`
          para cambiar las imágenes.
      courseC_artist_loops6a:
        courseC_artist_loops6a_a: Para hacer un diseño como el mostrado arriba, mueve
          hacia adelante menos de 75 píxeles entre cada calcomanía.
      courseC_artist_loops6a_2018:
        courseC_artist_loops6a_a: Para hacer un diseño como el mostrado arriba, mueve
          hacia adelante menos de 75 píxeles entre cada calcomanía.
      courseC_artist_loops6a_2019:
        courseC_artist_loops6a_a: Para hacer un diseño como el mostrado arriba, mueve
          hacia adelante menos de 75 píxeles entre cada calcomanía.
      courseC_artist_loops7a:
        courseC_artist_loops7a_a: |-
          Un círculo tiene 360 grados. Multiplica los grados que giras por el número de veces que repites. ¿Es igual a 360?
          ¡Prueba con los giros que se sugieren para ver cómo funciona esto!
      courseC_artist_loops7a_2018:
        courseC_artist_loops7a_a: |-
          Un círculo tiene 360 grados. Multiplica los grados que giras por el número de veces que repites. ¿Es igual a 360?
          ¡Prueba con los giros que se sugieren para ver cómo funciona esto!
      courseC_artist_loops7a_2019:
        courseC_artist_loops7a_a: |-
          Un círculo tiene 360 grados. Multiplica los grados que giras por el número de veces que repites. ¿Es igual a 360?
          ¡Prueba con los giros que se sugieren para ver cómo funciona esto!
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: Recuerda poner el bloque `girar` dentro de un
          bucle.
        courseC_artist_loopsPre1a_b: 'Tu bucle `repetir` debe tener 3 bloques dentro:
          `ir 200 sobre 200 abajo`, `mover hacia adelante 50 pixeles` y `girar a la
          derecha por 60 grados`.'
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: Recuerda poner el bloque `girar` dentro de un
          bucle.
        courseC_artist_loopsPre1a_b: 'Tu bucle `repetir` debe tener 3 bloques dentro:
          `ir 200 sobre 200 abajo`, `mover hacia adelante 50 pixeles` y `girar a la
          derecha por 60 grados`.'
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: Recuerda poner el bloque `girar` dentro de un
          bucle.
        courseC_artist_loopsPre1a_b: 'Tu bucle `repetir` debe tener 3 bloques dentro:
          `ir 200 sobre 200 abajo`, `mover hacia adelante 50 pixeles` y `girar a la
          derecha por 60 grados`.'
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_a: |-
          El primer bloque que necesitarás es:

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: |-
          Para moverte hacia adelante 50 píxeles, usa este bloque:

          ![](<https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png>)
      courseC_artist_prog2:
        courseC_artist_prog2_a: Si utiliza el bloque para hacerme 'avanzar 100 píxeles',
          sacaré una línea automáticamente.
        courseC_artist_prog2_b: "¿Tienes problemas girando la esquina? Usa el bloque
          `girar a la derecha 90 grados`."
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: Si utiliza el bloque para hacerme 'avanzar 100 píxeles',
          sacaré una línea automáticamente.
        courseC_artist_prog2_b: "¿Tienes problemas girando la esquina? Usa el bloque
          `girar a la derecha 90 grados`."
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: Si utiliza el bloque para hacerme 'avanzar 100 píxeles',
          sacaré una línea automáticamente.
        courseC_artist_prog2_b: "¿Tienes problemas girando la esquina? Usa el bloque
          `girar a la derecha 90 grados`."
      courseC_artist_prog5:
        courseC_artist_prog5_b: "¡No tengas miedo de cometer un error! Prueba a añadir
          bloques y a ejecutar el código para ver que pasará, incluso aunque sepas
          que no has resuelto el puzle todavía."
      courseC_artist_prog5_2018:
        courseC_artist_prog5_b: "¡No tengas miedo de cometer un error! Prueba a añadir
          bloques y a ejecutar el código para ver que pasará, incluso aunque sepas
          que no has resuelto el puzle todavía."
      courseC_artist_prog5_2019:
        courseC_artist_prog5_b: "¡No tengas miedo de cometer un error! Prueba a añadir
          bloques y a ejecutar el código para ver que pasará, incluso aunque sepas
          que no has resuelto el puzle todavía."
      courseC_artist_prog7:
        courseC_artist_prog7_e: "¡No tengas miedo de cometer un error! Prueba a añadir
          bloques y a ejecutar el código para ver que pasará, incluso aunque sepas
          que no has resuelto el puzle todavía."
      courseC_artist_prog7_2018:
        courseC_artist_prog7_e: "¡No tengas miedo de cometer un error! Prueba a añadir
          bloques y a ejecutar el código para ver que pasará, incluso aunque sepas
          que no has resuelto el puzle todavía."
      courseC_artist_prog7_2019:
        courseC_artist_prog7_e: "¡No tengas miedo de cometer un error! Prueba a añadir
          bloques y a ejecutar el código para ver que pasará, incluso aunque sepas
          que no has resuelto el puzle todavía."
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: "¡Usa bucles para no quedarte sin bloques
          `junta`!"
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: "¡Usa bucles para no quedarte sin bloques
          `junta`!"
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: "¡Usa bucles para no quedarte sin bloques
          `junta`!"
      courseC_collector_prog1:
        courseC_collector_prog1_a: Cuando estés en un lugar con tesoro, usa el bloque
          <xml><block type="collector_collect"/></xml> para recogerlo.
        courseC_collector_prog1_b: La solución más sencilla sería moverse hacia adelante
          una vez y, entonces, recoger el tesoro.
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: Cuando estés en un lugar con tesoro, usa el bloque
          <xml><block type="collector_collect"/></xml> para recogerlo.
        courseC_collector_prog1_b: La solución más sencilla sería moverse hacia adelante
          una vez y, entonces, recoger el tesoro.
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: Cuando estés en un lugar con tesoro, usa el bloque
          <xml><block type="collector_collect"/></xml> para recogerlo.
        courseC_collector_prog1_b: La solución más sencilla sería moverse hacia adelante
          una vez y, entonces, recoger el tesoro.
      courseC_collector_prog2:
        courseC_collector_prog2_a: Puedes usar cuatro bloques <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> o usar el bloque <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          para que tu programa sea más corto.
        courseC_collector_prog2_b: "¡No tengas miedo de cometer un error! Prueba a
          añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseC_collector_prog2_2018:
        courseC_collector_prog2_a: Puedes usar cuatro bloques <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> o usar el bloque <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          para que tu programa sea más corto.
        courseC_collector_prog2_b: "¡No tengas miedo de cometer un error! Prueba a
          añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseC_collector_prog2_2019:
        courseC_collector_prog2_a: Puedes usar cuatro bloques <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> o usar el bloque <xml><block
          type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          para que tu programa sea más corto.
        courseC_collector_prog2_b: "¡No tengas miedo de cometer un error! Prueba a
          añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseC_collector_prog3:
        courseC_collector_prog3_a: El programa sólo ejecutará los bloques que estén
          conectados al bloque <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Prueba a usar el botón "Paso" para ejecutar una
          línea de tu programa cada vez. ¿Ves donde el código lo hace mal?
        courseC_collector_prog3_c: Si tienes problemas resolviendo este puzle, prueba
          escribiendo los movimientos en un trozo de papel.
      courseC_collector_prog3_2018:
        courseC_collector_prog3_a: El programa sólo ejecutará los bloques que estén
          conectados al bloque <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Prueba a usar el botón "Paso" para ejecutar una
          línea de tu programa cada vez. ¿Ves donde el código lo hace mal?
        courseC_collector_prog3_c: Si tienes problemas resolviendo este puzle, prueba
          escribiendo los movimientos en un trozo de papel.
      courseC_collector_prog3_2019:
        courseC_collector_prog3_a: El programa sólo ejecutará los bloques que estén
          conectados al bloque <xml><block type="when_run"/></xml>.
        courseC_collector_prog3_b: Prueba a usar el botón "Paso" para ejecutar una
          línea de tu programa cada vez. ¿Ves donde el código lo hace mal?
        courseC_collector_prog3_c: Si tienes problemas resolviendo este puzle, prueba
          escribiendo los movimientos en un trozo de papel.
      courseC_collector_prog4:
        courseC_collector_prog4_a: Si te atascas, prueba a escribir los pasos en un
          trozo de papel.
        courseC_collector_prog4_b: "¡No tengas miedo de cometer un error! Prueba a
          añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
        courseC_collector_prog4_c: Prueba este camino.
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: Si te atascas, prueba a escribir los pasos en un
          trozo de papel.
        courseC_collector_prog4_b: "¡No tengas miedo de cometer un error! Prueba a
          añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
        courseC_collector_prog4_c: Prueba este camino.
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: Si te atascas, prueba a escribir los pasos en un
          trozo de papel.
        courseC_collector_prog4_b: "¡No tengas miedo de cometer un error! Prueba a
          añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
        courseC_collector_prog4_c: Prueba este camino.
      courseC_collector_prog5:
        courseC_collector_prog5_a: |-
          "¿Funciona el primer paso?
          ¿Funciona el segundo paso?
          ¿Dónde deja de funcionar?"
        courseC_collector_prog5_b: Si has solucionado un fallo y el programa todavía
          no funciona, prueba a usar los pasos anteriores para encontrar más fallos.
        courseC_collector_prog5_c: Si te atascas, prueba a escribir los pasos en un
          trozo de papel.
        courseC_collector_prog5_d: Sigue el camino para recoger el tesoro.
      courseC_collector_prog5_2018:
        courseC_collector_prog5_a: |-
          "¿Funciona el primer paso?
          ¿Funciona el segundo paso?
          ¿Dónde deja de funcionar?"
        courseC_collector_prog5_b: Si has solucionado un fallo y el programa todavía
          no funciona, prueba a usar los pasos anteriores para encontrar más fallos.
        courseC_collector_prog5_c: Si te atascas, prueba a escribir los pasos en un
          trozo de papel.
        courseC_collector_prog5_d: Sigue el camino para recoger el tesoro.
      courseC_collector_prog5_2019:
        courseC_collector_prog5_a: |-
          "¿Funciona el primer paso?
          ¿Funciona el segundo paso?
          ¿Dónde deja de funcionar?"
        courseC_collector_prog5_b: Si has solucionado un fallo y el programa todavía
          no funciona, prueba a usar los pasos anteriores para encontrar más fallos.
        courseC_collector_prog5_c: Si te atascas, prueba a escribir los pasos en un
          trozo de papel.
        courseC_collector_prog5_d: Sigue el camino para recoger el tesoro.
      courseC_collector_prog6:
        courseC_collector_prog6_a: |-
          ¿Puedes descubrir qué está mal?

          Prueba usando el botón "Paso" para encontrar los fallos ejecutando tu código línea a línea.
        courseC_collector_prog6_b: "¿Atascado? Prueba este camino para recoger el
          tesoro."
      courseC_collector_prog6_2018:
        courseC_collector_prog6_a: |-
          ¿Puedes descubrir qué está mal?

          Prueba usando el botón "Paso" para encontrar los fallos ejecutando tu código línea a línea.
        courseC_collector_prog6_b: "¿Atascado? Prueba este camino para recoger el
          tesoro."
      courseC_collector_prog6_2019:
        courseC_collector_prog6_a: |-
          ¿Puedes descubrir qué está mal?

          Prueba usando el botón "Paso" para encontrar los fallos ejecutando tu código línea a línea.
        courseC_collector_prog6_b: "¿Atascado? Prueba este camino para recoger el
          tesoro."
      courseC_collector_prog7:
        courseC_collector_prog7_a: 'Ya hay mucho código bien hecho en el espacio de
          trabajo. No necesitas borrarlo para solucionar este puzle.  '
        courseC_collector_prog7_b: "¿No ves el bloque que necesitas para hacer que
          la aventurera se mueva en la dirección correcta? Coge uno de la caja de
          herramientas."
        courseC_collector_prog7_c: "¿No encuentras un camino para recoger todo el
          tesoro? ¡Prueba con este!"
      courseC_collector_prog7_2018:
        courseC_collector_prog7_a: 'Ya hay mucho código bien hecho en el espacio de
          trabajo. No necesitas borrarlo para solucionar este puzle.  '
        courseC_collector_prog7_b: "¿No ves el bloque que necesitas para hacer que
          la aventurera se mueva en la dirección correcta? Coge uno de la caja de
          herramientas."
        courseC_collector_prog7_c: "¿No encuentras un camino para recoger todo el
          tesoro? ¡Prueba con este!"
      courseC_collector_prog7_2019:
        courseC_collector_prog7_a: 'Ya hay mucho código bien hecho en el espacio de
          trabajo. No necesitas borrarlo para solucionar este puzle.  '
        courseC_collector_prog7_b: "¿No ves el bloque que necesitas para hacer que
          la aventurera se mueva en la dirección correcta? Coge uno de la caja de
          herramientas."
        courseC_collector_prog7_c: "¿No encuentras un camino para recoger todo el
          tesoro? ¡Prueba con este!"
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Puedes usar el bloque `junta` muchas
          veces para recoger las otras joyas.
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: Puedes usar el bloque `junta` muchas
          veces para recoger las otras joyas.
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: Puedes usar el bloque `junta` muchas
          veces para recoger las otras joyas.
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Puedes usar más de un bloque `junta`
          en cada sitio.
        courseC_collector_prog_challenge1_b: "¿Te has perdido? ¡Prueba este camino
          para resolver el puzle!"
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_a: Puedes usar más de un bloque `junta`
          en cada sitio.
        courseC_collector_prog_challenge1_b: "¿Te has perdido? ¡Prueba este camino
          para resolver el puzle!"
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_a: Puedes usar más de un bloque `junta`
          en cada sitio.
        courseC_collector_prog_challenge1_b: "¿Te has perdido? ¡Prueba este camino
          para resolver el puzle!"
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events2:
        courseC_flappy_events2_a: 'El bloque que tienes que añadir se llama `establecer
          velocidad`. '
        courseC_flappy_events2_b: Conecta el bloque `establecer velocidad` al bloque
          `al ejecutar` para resolver este puzle.
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: 'El bloque que tienes que añadir se llama `establecer
          velocidad`. '
        courseC_flappy_events2_b: Conecta el bloque `establecer velocidad` al bloque
          `al ejecutar` para resolver este puzle.
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: 'El bloque que tienes que añadir se llama `establecer
          velocidad`. '
        courseC_flappy_events2_b: Conecta el bloque `establecer velocidad` al bloque
          `al ejecutar` para resolver este puzle.
      courseC_flappy_events3:
        courseC_flappy_events3_a: Si algo no funciona bien, asegúrate de que tus bloques
          están conectados a los eventos correctos.
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: Si algo no funciona bien, asegúrate de que tus bloques
          están conectados a los eventos correctos.
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: Si algo no funciona bien, asegúrate de que tus bloques
          están conectados a los eventos correctos.
      courseC_flappy_events4:
        courseC_flappy_events4_a: Junta el bloque `terminar el juego` con `cuando
          choca con un obstáculo` para solucionar este puzle.
      courseC_flappy_events4_2018:
        courseC_flappy_events4_a: Junta el bloque `terminar el juego` con `cuando
          choca con un obstáculo` para solucionar este puzle.
      courseC_flappy_events4_2019:
        courseC_flappy_events4_a: Junta el bloque `terminar el juego` con `cuando
          choca con un obstáculo` para solucionar este puzle.
      courseC_flappy_events5:
        courseC_flappy_events5_a: Necesitas usar el bloque `anotar un punto` para
          pasar este nivel.
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: Necesitas usar el bloque `anotar un punto` para
          pasar este nivel.
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: Necesitas usar el bloque `anotar un punto` para
          pasar este nivel.
      courseC_flappy_events6:
        courseC_flappy_events6_a: Prueba a conectar el bloque `aletear ____` al evento
          `Cuando haga click`.
      courseC_flappy_events6_2018:
        courseC_flappy_events6_a: Prueba a conectar el bloque `aletear ____` al evento
          `Cuando haga click`.
      courseC_flappy_events6_2019:
        courseC_flappy_events6_a: Prueba a conectar el bloque `aletear ____` al evento
          `Cuando haga click`.
      courseC_flappy_events7:
        courseC_flappy_events7_a: 'Puedes cambiar el fondo usando el bloque `establecer
          escena`. '
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: 'Puedes cambiar el fondo usando el bloque `establecer
          escena`. '
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: 'Puedes cambiar el fondo usando el bloque `establecer
          escena`. '
      courseC_flappy_events8:
        courseC_flappy_events8_a: Prueba a conectar un segundo bloque `establecer
          escena` en el evento `cuando choca con un obstáculo` para pasar el nivel.
      courseC_flappy_events8_2018:
        courseC_flappy_events8_a: Prueba a conectar un segundo bloque `establecer
          escena` en el evento `cuando choca con un obstáculo` para pasar el nivel.
      courseC_flappy_events8_2019:
        courseC_flappy_events8_a: Prueba a conectar un segundo bloque `establecer
          escena` en el evento `cuando choca con un obstáculo` para pasar el nivel.
      courseC_flappy_events9:
        courseC_flappy_events9_a: Conecta el bloque `Establece el puntaje 0` al evento
          `cuando choca con un obstáculo` para pasar este nivel.
      courseC_flappy_events9_2018:
        courseC_flappy_events9_a: Conecta el bloque `Establece el puntaje 0` al evento
          `cuando choca con un obstáculo` para pasar este nivel.
      courseC_flappy_events9_2019:
        courseC_flappy_events9_a: Conecta el bloque `Establece el puntaje 0` al evento
          `cuando choca con un obstáculo` para pasar este nivel.
      courseC_harvester_loops1:
        courseC_harvester_loops1_a: Cuanto te hayas movido hasta una calabaza, usa
          <xml><block type="harvester_pumpkin"/></xml> para recogerla.
        courseC_harvester_loops1_b: Puedes usar un bucle con el bloque <xml><block
          type="harvester_pumpkin"/></xml> para recoger más de una calabaza de un
          cuadrado.
      courseC_harvester_loops1_2018:
        courseC_harvester_loops1_a: Cuanto te hayas movido hasta una calabaza, usa
          <xml><block type="harvester_pumpkin"/></xml> para recogerla.
        courseC_harvester_loops1_b: Puedes usar un bucle con el bloque <xml><block
          type="harvester_pumpkin"/></xml> para recoger más de una calabaza de un
          cuadrado.
      courseC_harvester_loops1_2019:
        courseC_harvester_loops1_a: Cuanto te hayas movido hasta una calabaza, usa
          <xml><block type="harvester_pumpkin"/></xml> para recogerla.
        courseC_harvester_loops1_b: Puedes usar un bucle con el bloque <xml><block
          type="harvester_pumpkin"/></xml> para recoger más de una calabaza de un
          cuadrado.
      courseC_harvester_loops2:
        courseC_harvester_loops2_a: Si te atascas, prueba a escribir los pasos en
          un papel y a buscar patrones que se repitan.
        courseC_harvester_loops2_b: Vas a necesitar un bucle `repetir` detrás de otro.
        courseC_harvester_loops2_c: Un bucle repetirá el comando `avanzar` y el otro
          repetirá el comando `recolecta calabazas`.
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_a: Si te atascas, prueba a escribir los pasos en
          un papel y a buscar patrones que se repitan.
        courseC_harvester_loops2_b: Vas a necesitar un bucle `repetir` detrás de otro.
        courseC_harvester_loops2_c: Un bucle repetirá el comando `avanzar` y el otro
          repetirá el comando `recolecta calabazas`.
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_a: Si te atascas, prueba a escribir los pasos en
          un papel y a buscar patrones que se repitan.
        courseC_harvester_loops2_b: Vas a necesitar un bucle `repetir` detrás de otro.
        courseC_harvester_loops2_c: Un bucle repetirá el comando `avanzar` y el otro
          repetirá el comando `recolecta calabazas`.
      courseC_harvester_loops3:
        courseC_harvester_loops3_b: Para las primeras calabazas, puedes usar un código
          muy parecido al del último puzle. ¿Hacia qué lado necesitas girar luego?
        courseC_harvester_loops3_c: Si quieres hacer que tu código sea más sencillo,
          puedes poner un bucle dentro de otro. Esto se llama **bucles anidados**.
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_b: Para las primeras calabazas, puedes usar un código
          muy parecido al del último puzle. ¿Hacia qué lado necesitas girar luego?
        courseC_harvester_loops3_c: Si quieres hacer que tu código sea más sencillo,
          puedes poner un bucle dentro de otro. Esto se llama **bucles anidados**.
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_b: Para las primeras calabazas, puedes usar un código
          muy parecido al del último puzle. ¿Hacia qué lado necesitas girar luego?
        courseC_harvester_loops3_c: Si quieres hacer que tu código sea más sencillo,
          puedes poner un bucle dentro de otro. Esto se llama **bucles anidados**.
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: Usa el nuevo bloque `recolecta maíz` para recoger
          el maíz.
        courseC_harvester_loops4_b: Puedes usar muchos bucles repetir en tu código,
          algunos para recoger maíz y otros para recoger calabazas.
        courseC_harvester_loops4_c: Si quieres hacer que tu código sea más sencillo,
          puedes poner un bucle dentro de otro. Esto se llama **bucles anidados**.
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: Usa el nuevo bloque `recolecta maíz` para recoger
          el maíz.
        courseC_harvester_loops4_b: Puedes usar muchos bucles repetir en tu código,
          algunos para recoger maíz y otros para recoger calabazas.
        courseC_harvester_loops4_c: Si quieres hacer que tu código sea más sencillo,
          puedes poner un bucle dentro de otro. Esto se llama **bucles anidados**.
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: Usa el nuevo bloque `recolecta maíz` para recoger
          el maíz.
        courseC_harvester_loops4_b: Puedes usar muchos bucles repetir en tu código,
          algunos para recoger maíz y otros para recoger calabazas.
        courseC_harvester_loops4_c: Si quieres hacer que tu código sea más sencillo,
          puedes poner un bucle dentro de otro. Esto se llama **bucles anidados**.
      courseC_harvester_loops5:
        courseC_harvester_loops5_a: Si te atascas, prueba a dibujar el programa completo
          y busca patrones que se repitan.
        courseC_harvester_loops5_b: "¿Esta escalera se parece a otros puzles? Los
          movimientos deberían ser similares, solo recuerda recoger las plantas por
          el camino."
      courseC_harvester_loops5_2018:
        courseC_harvester_loops5_a: Si te atascas, prueba a dibujar el programa completo
          y busca patrones que se repitan.
        courseC_harvester_loops5_b: "¿Esta escalera se parece a otros puzles? Los
          movimientos deberían ser similares, solo recuerda recoger las plantas por
          el camino."
      courseC_harvester_loops5_2019:
        courseC_harvester_loops5_a: Si te atascas, prueba a dibujar el programa completo
          y busca patrones que se repitan.
        courseC_harvester_loops5_b: "¿Esta escalera se parece a otros puzles? Los
          movimientos deberían ser similares, solo recuerda recoger las plantas por
          el camino."
      courseC_harvester_loops6:
        courseC_harvester_loops6_a: Recuerda que puedes poner varios bloques dentro
          de un bucle repetir.
        courseC_harvester_loops6_b: No olvides girar al final de la fila de maíz.
      courseC_harvester_loops6_2018:
        courseC_harvester_loops6_a: Recuerda que puedes poner varios bloques dentro
          de un bucle repetir.
        courseC_harvester_loops6_b: No olvides girar al final de la fila de maíz.
      courseC_harvester_loops6_2019:
        courseC_harvester_loops6_a: Recuerda que puedes poner varios bloques dentro
          de un bucle repetir.
        courseC_harvester_loops6_b: No olvides girar al final de la fila de maíz.
      courseC_harvester_loops7:
        courseC_harvester_loops7_a: Puedes resolver este puzle de dos formas, o recogiendo
          primero el maíz o las calabazas.
        courseC_harvester_loops7_b: Vas a necesitar varios bucles `repetir` para resolver
          este puzle.
      courseC_harvester_loops7_2018:
        courseC_harvester_loops7_a: Puedes resolver este puzle de dos formas, o recogiendo
          primero el maíz o las calabazas.
        courseC_harvester_loops7_b: Vas a necesitar varios bucles `repetir` para resolver
          este puzle.
      courseC_harvester_loops7_2019:
        courseC_harvester_loops7_a: Puedes resolver este puzle de dos formas, o recogiendo
          primero el maíz o las calabazas.
        courseC_harvester_loops7_b: Vas a necesitar varios bucles `repetir` para resolver
          este puzle.
      courseC_harvester_loops8:
        courseC_harvester_loops8_a: "¿Esta escalera se parece a otros puzles? Los
          movimientos deberían ser similares, solo recuerda recoger las plantas por
          el camino."
        courseC_harvester_loops8_b: Si quieres que tu código sea más sencillo, ¡puedes
          poner un bucle `repetir` dentro de otro! A esto se le llama **bucle anidado**.
      courseC_harvester_loops8_2018:
        courseC_harvester_loops8_a: "¿Esta escalera se parece a otros puzles? Los
          movimientos deberían ser similares, solo recuerda recoger las plantas por
          el camino."
        courseC_harvester_loops8_b: Si quieres que tu código sea más sencillo, ¡puedes
          poner un bucle `repetir` dentro de otro! A esto se le llama **bucle anidado**.
      courseC_harvester_loops8_2019:
        courseC_harvester_loops8_a: "¿Esta escalera se parece a otros puzles? Los
          movimientos deberían ser similares, solo recuerda recoger las plantas por
          el camino."
        courseC_harvester_loops8_b: Si quieres que tu código sea más sencillo, ¡puedes
          poner un bucle `repetir` dentro de otro! A esto se le llama **bucle anidado**.
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: "¡Esto es muy difícil sin bucles!"
        courseC_harvester_loops_challenge1_b: Puedes repetir `avanzar` y `recolecta
          maíz` tantas veces como necesites, después, `girar a la derecha` en cada
          esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor forma de coger el maíz del medio usa un bloque `repetir` dentro de otro bloque `repetir`.

          <xml><block type="controls_repeat">         <title name="TIMES">2</title>         <statement name="DO">           <block type="controls_repeat">             <title name="TIMES">4</title>             <statement name="DO">               <block type="maze_move">                 <title name="DIR">moveForward</title>                 <next>                   <block type="harvester_corn"/>                 </next>               </block>             </statement>             <next>               <block type="maze_turn">                 <title name="DIR">turnRight</title>               </block>             </next>           </block>         </statement>         </block></xml>
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: "¡Esto es muy difícil sin bucles!"
        courseC_harvester_loops_challenge1_b: Puedes repetir `avanzar` y `recolecta
          maíz` tantas veces como necesites, después, `girar a la derecha` en cada
          esquina.
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: "¡Esto es muy difícil sin bucles!"
        courseC_harvester_loops_challenge1_b: Puedes repetir `avanzar` y `recolecta
          maíz` tantas veces como necesites, después, `girar a la derecha` en cada
          esquina.
        courseC_harvester_loops_challenge1_c: |-
          La mejor forma de coger el maíz del medio usa un bloque `repetir` dentro de otro bloque `repetir`.

          <xml><block type="controls_repeat">         <title name="TIMES">2</title>         <statement name="DO">           <block type="controls_repeat">             <title name="TIMES">4</title>             <statement name="DO">               <block type="maze_move">                 <title name="DIR">moveForward</title>                 <next>                   <block type="harvester_corn"/>                 </next>               </block>             </statement>             <next>               <block type="maze_turn">                 <title name="DIR">turnRight</title>               </block>             </next>           </block>         </statement>         </block></xml>
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: Una forma de resolver estos puzles parece
          un zig-zag. ¡Otra tiene forma de espiral! Hay muchos modos de solucionar
          un puzle como este. ¡Insiste!
        courseC_harvester_loops_challenge2_b: Puedes repetir `avanzar` y `recolecta
          lechuga` tantas veces como te haga falta, después, gira en cada esquina.
        courseC_harvester_loops_challenge2_c: |-
          El patrón en zig-zag puede repetirse dos veces para acabar el puzle ¡sólo con 20 bloques!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          El patrón en espiral puede ser programado ¡sólo con 18 bloques!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: Una forma de resolver estos puzles parece
          un zig-zag. ¡Otra tiene forma de espiral! Hay muchos modos de solucionar
          un puzle como este. ¡Insiste!
        courseC_harvester_loops_challenge2_b: Puedes repetir `avanzar` y `recolecta
          lechuga` tantas veces como te haga falta, después, gira en cada esquina.
        courseC_harvester_loops_challenge2_c: |-
          El patrón en zig-zag puede repetirse dos veces para acabar el puzle ¡sólo con 20 bloques!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          El patrón en espiral puede ser programado ¡sólo con 18 bloques!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: Una forma de resolver estos puzles parece
          un zig-zag. ¡Otra tiene forma de espiral! Hay muchos modos de solucionar
          un puzle como este. ¡Insiste!
        courseC_harvester_loops_challenge2_b: Puedes repetir `avanzar` y `recolecta
          lechuga` tantas veces como te haga falta, después, gira en cada esquina.
        courseC_harvester_loops_challenge2_c: |-
          El patrón en zig-zag puede repetirse dos veces para acabar el puzle ¡sólo con 20 bloques!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: |-
          El patrón en espiral puede ser programado ¡sólo con 18 bloques!

          ![](<https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png>)
      courseC_maze_debugging2:
        courseC_maze_debugging2_c: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_c: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_c: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
      courseC_maze_debugging3:
        courseC_maze_debugging3_b: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_b: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_b: "¿No puedes averiguar lo que está mal? Intenta
          ejecutar el código un par de veces para ver lo que sucede."
      courseC_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_a: "¿Izquierda o derecha? ¡Decide tú!"
        courseC_maze_debugging_challenge1_b: "¡El camino de Scrat tiene la forma de
          un rectángulo! Tiene que girar en el mismo sentido todas las veces."
        courseC_maze_debugging_challenge1_c: Si te atascas, siempre puedes volver
          a empezar ¡y encontrar un camino nuevo!
      courseC_maze_debugging_challenge1_2018:
        courseC_maze_debugging_challenge1_a: "¿Izquierda o derecha? ¡Decide tú!"
        courseC_maze_debugging_challenge1_b: "¡El camino de Scrat tiene la forma de
          un rectángulo! Tiene que girar en el mismo sentido todas las veces."
        courseC_maze_debugging_challenge1_c: Si te atascas, siempre puedes volver
          a empezar ¡y encontrar un camino nuevo!
      courseC_maze_debugging_challenge1_2019:
        courseC_maze_debugging_challenge1_a: "¿Izquierda o derecha? ¡Decide tú!"
        courseC_maze_debugging_challenge1_b: "¡El camino de Scrat tiene la forma de
          un rectángulo! Tiene que girar en el mismo sentido todas las veces."
        courseC_maze_debugging_challenge1_c: Si te atascas, siempre puedes volver
          a empezar ¡y encontrar un camino nuevo!
      courseC_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_b: Si te atascas, prueba a depurar el código.
          ¿Dónde lo hace mal?
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir moviéndote sólo hacia adelante y girando cuatro veces. Si encuentras una forma de usar bucles, ¡puede haber más!

           ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2018:
        courseC_maze_debugging_challenge2_b: Si te atascas, prueba a depurar el código.
          ¿Dónde lo hace mal?
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir moviéndote sólo hacia adelante y girando cuatro veces. Si encuentras una forma de usar bucles, ¡puede haber más!

           ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_debugging_challenge2_2019:
        courseC_maze_debugging_challenge2_b: Si te atascas, prueba a depurar el código.
          ¿Dónde lo hace mal?
        courseC_maze_debugging_challenge2_c: |-
          Hay dos caminos diferentes que puedes seguir moviéndote sólo hacia adelante y girando cuatro veces. Si encuentras una forma de usar bucles, ¡puede haber más!

           ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: Piensa que este camino está formado por dos
          trozos diferentes. Cada uno tiene un patrón que puedes repetir.
        courseC_maze_loops_challenge1_b: "¿Te acuerdas de cómo usar los bucles para
          repetir un patrón de escalera?"
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: Piensa que este camino está formado por dos
          trozos diferentes. Cada uno tiene un patrón que puedes repetir.
        courseC_maze_loops_challenge1_b: "¿Te acuerdas de cómo usar los bucles para
          repetir un patrón de escalera?"
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: Piensa que este camino está formado por dos
          trozos diferentes. Cada uno tiene un patrón que puedes repetir.
        courseC_maze_loops_challenge1_b: "¿Te acuerdas de cómo usar los bucles para
          repetir un patrón de escalera?"
      courseC_maze_programming1:
        courseC_maze_programming1_0: Asegúrate de que todos los bloques estén juntos
          y después pulsa de nuevo "Ejecutar".
      courseC_maze_programming1_2018:
        courseC_maze_programming1_0: Asegúrate de que todos los bloques estén juntos
          y después pulsa de nuevo "Ejecutar".
      courseC_maze_programming1_2019:
        courseC_maze_programming1_0: Asegúrate de que todos los bloques estén juntos
          y después pulsa de nuevo "Ejecutar".
      courseC_maze_programming2:
        courseC_maze_programming2_a: Para usar un bloque <xml><block type="maze_moveForward"/></xml>,
          sácalo de la caja de herramientas y unelo al bloque <xml><block type="when_run"/></xml>.
        courseC_maze_programming2_b: Asegúrate de que todos los bloques estén juntos
          y después pulsa de nuevo "Ejecutar".
      courseC_maze_programming2_2018:
        courseC_maze_programming2_a: Para usar un bloque <xml><block type="maze_moveForward"/></xml>,
          sácalo de la caja de herramientas y unelo al bloque <xml><block type="when_run"/></xml>.
        courseC_maze_programming2_b: Asegúrate de que todos los bloques estén juntos
          y después pulsa de nuevo "Ejecutar".
      courseC_maze_programming2_2019:
        courseC_maze_programming2_a: Para usar un bloque <xml><block type="maze_moveForward"/></xml>,
          sácalo de la caja de herramientas y unelo al bloque <xml><block type="when_run"/></xml>.
        courseC_maze_programming2_b: Asegúrate de que todos los bloques estén juntos
          y después pulsa de nuevo "Ejecutar".
      courseC_maze_programming3:
        courseC_maze_programming3_a: Prueba a ejecutar el programa primero para ver
          dónde está mal.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Para eliminar un bloque de la mitad de tu programa, arrastra todos los bloques a otra parte del espacio de trabajo.

          Arrastra el bloque que quieres borrar de vuelta a la caja de herramientas.

          Para terminar, pon otra vez tus otros bloques donde estaban.
      courseC_maze_programming3_2018:
        courseC_maze_programming3_a: Prueba a ejecutar el programa primero para ver
          dónde está mal.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Para eliminar un bloque de la mitad de tu programa, arrastra todos los bloques a otra parte del espacio de trabajo.

          Arrastra el bloque que quieres borrar de vuelta a la caja de herramientas.

          Para terminar, pon otra vez tus otros bloques donde estaban.
      courseC_maze_programming3_2019:
        courseC_maze_programming3_a: Prueba a ejecutar el programa primero para ver
          dónde está mal.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Para eliminar un bloque de la mitad de tu programa, arrastra todos los bloques a otra parte del espacio de trabajo.

          Arrastra el bloque que quieres borrar de vuelta a la caja de herramientas.

          Para terminar, pon otra vez tus otros bloques donde estaban.
      courseC_maze_programming4:
        courseC_maze_programming4_a: Recuerda que, cuando das la vuelta, estás haciéndlo
          desde el punto de vista del pájaro. Si tuerces a la derecha, el pájaro apuntará
          hacia abajo.
        courseC_maze_programming4_b: |-
          Para seguir el camino:

          -   avanza
          -   gira a un lado
          -   avanza
          -   gira al otro lado
          -   avanza
      courseC_maze_programming4_2018:
        courseC_maze_programming4_a: Recuerda que, cuando das la vuelta, estás haciéndlo
          desde el punto de vista del pájaro. Si tuerces a la derecha, el pájaro apuntará
          hacia abajo.
        courseC_maze_programming4_b: |-
          Para seguir el camino:

          -   avanza
          -   gira a un lado
          -   avanza
          -   gira al otro lado
          -   avanza
      courseC_maze_programming4_2019:
        courseC_maze_programming4_a: Recuerda que, cuando das la vuelta, estás haciéndlo
          desde el punto de vista del pájaro. Si tuerces a la derecha, el pájaro apuntará
          hacia abajo.
        courseC_maze_programming4_b: |-
          Para seguir el camino:

          -   avanza
          -   gira a un lado
          -   avanza
          -   gira al otro lado
          -   avanza
      courseC_maze_programming5:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_b: El pájaro necesita girar para completar este
          puzle. ¿Puedes descubrir hacia qué lado?
        courseC_maze_programming5_c: La solución tendrá dos bloques `avanzar`, un
          giro y otros dos bloques `avanzar`.
      courseC_maze_programming5_2018:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_b: El pájaro necesita girar para completar este
          puzle. ¿Puedes descubrir hacia qué lado?
        courseC_maze_programming5_c: La solución tendrá dos bloques `avanzar`, un
          giro y otros dos bloques `avanzar`.
      courseC_maze_programming5_2019:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_b: El pájaro necesita girar para completar este
          puzle. ¿Puedes descubrir hacia qué lado?
        courseC_maze_programming5_c: La solución tendrá dos bloques `avanzar`, un
          giro y otros dos bloques `avanzar`.
      courseC_maze_programming6:
        courseC_maze_programming6_a: "¡Aquí tienes dos caminos para resolver el puzzle!"
        courseC_maze_programming6_b: Sigue con el dedo el camino del pájaro al cerdo,
          ¿qué pasos has dado?
        courseC_maze_programming6_c: Recuerda que debes girar primero, ya que el pájaro
          empieza mirando a una pared.
        courseC_maze_programming6_d: "¿Atascado? ¡Mira este camino!"
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: "¡Aquí tienes dos caminos para resolver el puzzle!"
        courseC_maze_programming6_b: Sigue con el dedo el camino del pájaro al cerdo,
          ¿qué pasos has dado?
        courseC_maze_programming6_c: Recuerda que debes girar primero, ya que el pájaro
          empieza mirando a una pared.
        courseC_maze_programming6_d: "¿Atascado? ¡Mira este camino!"
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: "¡Aquí tienes dos caminos para resolver el puzzle!"
        courseC_maze_programming6_b: Sigue con el dedo el camino del pájaro al cerdo,
          ¿qué pasos has dado?
        courseC_maze_programming6_c: Recuerda que debes girar primero, ya que el pájaro
          empieza mirando a una pared.
        courseC_maze_programming6_d: "¿Atascado? ¡Mira este camino!"
      courseC_maze_programming7:
        courseC_maze_programming7_a: No olvides usar el botón "Paso" para avanzar
          de bloque en bloque y buscar errores.
        courseC_maze_programming7_b: Si tienes problemas resolviendo este puzle, prueba
          escribiendo los movimientos en un trozo de papel.
      courseC_maze_programming7_2018:
        courseC_maze_programming7_a: No olvides usar el botón "Paso" para avanzar
          de bloque en bloque y buscar errores.
        courseC_maze_programming7_b: Si tienes problemas resolviendo este puzle, prueba
          escribiendo los movimientos en un trozo de papel.
      courseC_maze_programming7_2019:
        courseC_maze_programming7_a: No olvides usar el botón "Paso" para avanzar
          de bloque en bloque y buscar errores.
        courseC_maze_programming7_b: Si tienes problemas resolviendo este puzle, prueba
          escribiendo los movimientos en un trozo de papel.
      courseC_maze_programming8:
        courseC_maze_programming8_a: Recuerda que puedes usar el botón "Paso" para
          revisar tu código línea a línea si te atascas.
        courseC_maze_programming8_b: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseC_maze_programming8_2018:
        courseC_maze_programming8_a: Recuerda que puedes usar el botón "Paso" para
          revisar tu código línea a línea si te atascas.
        courseC_maze_programming8_b: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseC_maze_programming8_2019:
        courseC_maze_programming8_a: Recuerda que puedes usar el botón "Paso" para
          revisar tu código línea a línea si te atascas.
        courseC_maze_programming8_b: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseC_maze_programming_challenge1:
        courseC_maze_programming_challenge1_a: Hay muchas formas de llegar hasta el
          cerdo. Usa tu dedo para encontrar un camino y luego ¡programalo!
      courseC_maze_programming_challenge1_2018:
        courseC_maze_programming_challenge1_a: Hay muchas formas de llegar hasta el
          cerdo. Usa tu dedo para encontrar un camino y luego ¡programalo!
      courseC_maze_programming_challenge1_2019:
        courseC_maze_programming_challenge1_a: Hay muchas formas de llegar hasta el
          cerdo. Usa tu dedo para encontrar un camino y luego ¡programalo!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _"Si me mandas hacia atrás, ¡ten especial
          cuidado para que gire en el sentido correcto!"_
        courseC_maze_programming_challenge2_b: |-
          La solución más corta usa sólo 5 bloques, pero usa este:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: _"Si me mandas hacia atrás, ¡ten especial
          cuidado para que gire en el sentido correcto!"_
        courseC_maze_programming_challenge2_b: |-
          La solución más corta usa sólo 5 bloques, pero usa este:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: _"Si me mandas hacia atrás, ¡ten especial
          cuidado para que gire en el sentido correcto!"_
        courseC_maze_programming_challenge2_b: |-
          La solución más corta usa sólo 5 bloques, pero usa este:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_starWars_loops1:
        courseC_starWars_loops1_a: Cuando BB-8 pasa por encima de la chatarra, la
          recoge automáticamente.
        courseC_starWars_loops1_b: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
        courseC_starWars_loops1_c: Tienes que `avanzar` cinco veces para resolver
          este puzle.
      courseC_starWars_loops10:
        courseC_starWars_loops10_a: "¿No te parece esto un conjunto gigante de escaleras?
          Mira a ver si puedes usar lo que has aprendido en los puzles anteriores
          para hacer todos los giros."
        courseC_starWars_loops10_b: "¡Si quieres usar menos código, puedes meter un
          bucle `repetir` dentro de otro!\\\\A esto se le llama **bucles anidados**."
        courseC_starWars_loops10_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_a: "¿No te parece esto un conjunto gigante de escaleras?
          Mira a ver si puedes usar lo que has aprendido en los puzles anteriores
          para hacer todos los giros."
        courseC_starWars_loops10_b: "¡Si quieres usar menos código, puedes meter un
          bucle `repetir` dentro de otro!\\\\A esto se le llama **bucles anidados**."
        courseC_starWars_loops10_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_a: "¿No te parece esto un conjunto gigante de escaleras?
          Mira a ver si puedes usar lo que has aprendido en los puzles anteriores
          para hacer todos los giros."
        courseC_starWars_loops10_b: "¡Si quieres usar menos código, puedes meter un
          bucle `repetir` dentro de otro!\\\\A esto se le llama **bucles anidados**."
        courseC_starWars_loops10_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_a: Cuando BB-8 pasa por encima de la chatarra, la
          recoge automáticamente.
        courseC_starWars_loops1_b: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
        courseC_starWars_loops1_c: Tienes que `avanzar` cinco veces para resolver
          este puzle.
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_a: Cuando BB-8 pasa por encima de la chatarra, la
          recoge automáticamente.
        courseC_starWars_loops1_b: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
        courseC_starWars_loops1_c: Tienes que `avanzar` cinco veces para resolver
          este puzle.
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: Para repetir algo, arrastra un `repetir` y pon
          lo que quieras repetir dentro de él.
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: Para repetir algo, arrastra un `repetir` y pon
          lo que quieras repetir dentro de él.
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: Para repetir algo, arrastra un `repetir` y pon
          lo que quieras repetir dentro de él.
      courseC_starWars_loops4:
        courseC_starWars_loops4_c: Haz clic en la pequeña flecha que hay al lado de
          "izquierda" en el bloque de girar para poder cambiarlo a "derecha".
        courseC_starWars_loops4_a: Utiliza dos bloques `repetir`.
        courseC_starWars_loops4_b: 'Cada `repetir` tendrá sólo una órden dentro: `avanzar`.'
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_c: Haz clic en la pequeña flecha que hay al lado de
          "izquierda" en el bloque de girar para poder cambiarlo a "derecha".
        courseC_starWars_loops4_a: Utiliza dos bloques `repetir`.
        courseC_starWars_loops4_b: 'Cada `repetir` tendrá sólo una órden dentro: `avanzar`.'
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_c: Haz clic en la pequeña flecha que hay al lado de
          "izquierda" en el bloque de girar para poder cambiarlo a "derecha".
        courseC_starWars_loops4_a: Utiliza dos bloques `repetir`.
        courseC_starWars_loops4_b: 'Cada `repetir` tendrá sólo una órden dentro: `avanzar`.'
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: Para moverte hacia abajo, tienes que girar y luego
          avanzar.
        courseC_starWars_loops5_a: La mejor solución utiliza un giro, un único `avanzar`,
          otro giro y después un bucle.
      courseC_starWars_loops6:
        courseC_starWars_loops6_a: Prueba escribiendo todos los movimientos en un
          trozo de papel y buscando un patrón (algo que se repita).
        courseC_starWars_loops6_b: "¡Si quieres usar menos código, puedes meter un
          bucle `repetir` dentro de otro!\\\\A esto se le llama **bucles anidados**."
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_a: Prueba escribiendo todos los movimientos en un
          trozo de papel y buscando un patrón (algo que se repita).
        courseC_starWars_loops6_b: "¡Si quieres usar menos código, puedes meter un
          bucle `repetir` dentro de otro!\\\\A esto se le llama **bucles anidados**."
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_a: Prueba escribiendo todos los movimientos en un
          trozo de papel y buscando un patrón (algo que se repita).
        courseC_starWars_loops6_b: "¡Si quieres usar menos código, puedes meter un
          bucle `repetir` dentro de otro!\\\\A esto se le llama **bucles anidados**."
      courseC_starWars_loops7:
        courseC_starWars_loops7_a: "¡Este patrón parece más difícil de lo que es!
          Prueba con un paso de escalera. ¿Cubre eso toda la chatarra?"
        courseC_starWars_loops7_b: Si tienes problemas con este puzle, prueba a escribir
          todos los pasos en un trozo de papel y busca un patrón.
        courseC_starWars_loops7_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_a: "¡Este patrón parece más difícil de lo que es!
          Prueba con un paso de escalera. ¿Cubre eso toda la chatarra?"
        courseC_starWars_loops7_b: Si tienes problemas con este puzle, prueba a escribir
          todos los pasos en un trozo de papel y busca un patrón.
        courseC_starWars_loops7_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_a: "¡Este patrón parece más difícil de lo que es!
          Prueba con un paso de escalera. ¿Cubre eso toda la chatarra?"
        courseC_starWars_loops7_b: Si tienes problemas con este puzle, prueba a escribir
          todos los pasos en un trozo de papel y busca un patrón.
        courseC_starWars_loops7_c: "¡No tengas miedo de cometer un error! Ejecuta
          el código para ver que pasa, aunque aun no hayas resuelto el rompecabezas.
          \ "
      courseC_starWars_loops8:
        course_starWars_loops8_a: Prueba dividiendo el problema en trozos más pequeños.
          Tómate tu tiempo. ¡No tienes que resolverlo todo en el primer intento!
        course_starWars_loops8_b: Piensa en la primera parte de este problema como
          en una escalera. ¿Cómo lo resolviste antes?
        course_starWars_loops8_c: |-
          Mira este camino.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018:
        course_starWars_loops8_a: Prueba dividiendo el problema en trozos más pequeños.
          Tómate tu tiempo. ¡No tienes que resolverlo todo en el primer intento!
        course_starWars_loops8_b: Piensa en la primera parte de este problema como
          en una escalera. ¿Cómo lo resolviste antes?
        course_starWars_loops8_c: |-
          Mira este camino.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2019:
        course_starWars_loops8_a: Prueba dividiendo el problema en trozos más pequeños.
          Tómate tu tiempo. ¡No tienes que resolverlo todo en el primer intento!
        course_starWars_loops8_b: Piensa en la primera parte de este problema como
          en una escalera. ¿Cómo lo resolviste antes?
        course_starWars_loops8_c: |-
          Mira este camino.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9:
        course_starWars_loops9_b: Puedes poner más de un bloque dentro de un bucle
          `repetir`.
        course_starWars_loops9_c: |-
          No tienes que girar a la izquierda para resolver este puzle. Todos los giros pueden ser a la derecha.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018:
        course_starWars_loops9_b: Puedes poner más de un bloque dentro de un bucle
          `repetir`.
        course_starWars_loops9_c: |-
          No tienes que girar a la izquierda para resolver este puzle. Todos los giros pueden ser a la derecha.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2019:
        course_starWars_loops9_b: Puedes poner más de un bloque dentro de un bucle
          `repetir`.
        course_starWars_loops9_c: |-
          No tienes que girar a la izquierda para resolver este puzle. Todos los giros pueden ser a la derecha.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: Utilice el bloque 'salto adelante' llegar desde
          la parte superior de una plaza el lugar donde se iniciará la siguiente.
          Si sus plazas son 20 píxeles de alto y 20 píxeles apartes, ¿cuánto necesita
          saltar?
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: Utilice el bloque 'salto adelante' llegar desde
          la parte superior de una plaza el lugar donde se iniciará la siguiente.
          Si sus plazas son 20 píxeles de alto y 20 píxeles apartes, ¿cuánto necesita
          saltar?
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: Utilice el bloque 'salto adelante' llegar desde
          la parte superior de una plaza el lugar donde se iniciará la siguiente.
          Si sus plazas son 20 píxeles de alto y 20 píxeles apartes, ¿cuánto necesita
          saltar?
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_a: |-
          \*\* Recuerda: \*\* Este puzzle cambia cada vez que se ejecuta.

          Querras usar un bloque condicional (`Si` o`Si /si no`) para resolver el desafío.
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_a: |-
          \*\* Recuerda: \*\* Este puzzle cambia cada vez que se ejecuta.

          Querras usar un bloque condicional (`Si` o`Si /si no`) para resolver el desafío.
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: |-
          \*\* Recuerda: \*\* Este puzzle cambia cada vez que se ejecuta.

          Querras usar un bloque condicional (`Si` o`Si /si no`) para resolver el desafío.
      courseD_collector_ramp8:
        courseD_collector_ramp8_b: Si quieres que tu código sea más sencillo, ¡puedes
          poner un bucle `repetir` dentro de otro! A esto se le llama **bucle anidado**.
      courseD_iceage_loops1:
        courseD_iceage_loops1_a: "¡Cuidado con el hielo roto! ¡Scrat podría atravesarlo!"
        courseD_iceage_loops1_b: |-
          Tendrás que usar este bloque:

          <xml><block type="maze_moveEast"/></xml>
      courseD_iceage_loops10:
        courseB_iceage_loops10_a: "¡Cuidado con el hielo roto! ¡Scrat podría caer
          al agua!"
        courseB_iceage_loops10_b: Intenta decir los pasos en voz alta o escribirlos
          en un trozo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: "¡Este puzzle es largo! Sigue esta ruta."
      courseD_iceage_loops10_2019:
        courseB_iceage_loops10_a: "¡Cuidado con el hielo roto! ¡Scrat podría caer
          al agua!"
        courseB_iceage_loops10_b: Intenta decir los pasos en voz alta o escribirlos
          en un trozo de papel. ¿Ves algún patrón?
        courseB_iceage_loops10_c: "¡Este puzzle es largo! Sigue esta ruta."
      courseD_iceage_loops1_2019:
        courseD_iceage_loops1_a: "¡Cuidado con el hielo roto! ¡Scrat podría atravesarlo!"
        courseD_iceage_loops1_b: |-
          Tendrás que usar este bloque:

          <xml><block type="maze_moveEast"/></xml>
      courseD_iceage_loops2:
        courseD_iceage_loops2_a: Separa este puzzle en dos piezas, una antes de la
          esquina, y otra después de la esquina.
        courseD_iceage_loops2_b: Si te atascas, intenta decir los pasos en voz alta.
        courseD_iceage_loops2_c: Sigue esta ruta para llevar a Scrat a la bellota.
      courseD_iceage_loops2_2019:
        courseD_iceage_loops2_a: Separa este puzzle en dos piezas, una antes de la
          esquina, y otra después de la esquina.
        courseD_iceage_loops2_b: Si te atascas, intenta decir los pasos en voz alta.
        courseD_iceage_loops2_c: Sigue esta ruta para llevar a Scrat a la bellota.
      courseD_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Use este nuevo bloque!
          <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
      courseD_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Use este nuevo bloque!
          <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
      courseD_maze_intro5a_2019:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp1:
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp1_2018:
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp1_2019:
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp2:
        courseC_maze_programming2_a: Para usar un bloque `avanzar`, arrástralo desde
          la caja de herramientas al espacio de trabajo y conéctalo al bloque `al
          ejecutar`.
      courseD_maze_ramp2_2018:
        courseC_maze_programming2_a: Para usar un bloque `avanzar`, arrástralo desde
          la caja de herramientas al espacio de trabajo y conéctalo al bloque `al
          ejecutar`.
      courseD_maze_ramp2_2019:
        courseC_maze_programming2_a: Para usar un bloque `avanzar`, arrástralo desde
          la caja de herramientas al espacio de trabajo y conéctalo al bloque `al
          ejecutar`.
      courseD_maze_ramp3:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Para eliminar un bloque que está en mitad de tu código, arrastra todos los bloques que están debajo de él hacia la derecha y dejalos ahí de momento.

          Haz click en el bloque que quieres eliminar y arrástralo de vuelta a la caja de herramientas.

          Luego, devuelve los otros bloques al lugar en el que deben estar.
      courseD_maze_ramp3_2018:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Para eliminar un bloque que está en mitad de tu código, arrastra todos los bloques que están debajo de él hacia la derecha y dejalos ahí de momento.

          Haz click en el bloque que quieres eliminar y arrástralo de vuelta a la caja de herramientas.

          Luego, devuelve los otros bloques al lugar en el que deben estar.
      courseD_maze_ramp3_2019:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Para eliminar un bloque que está en mitad de tu código, arrastra todos los bloques que están debajo de él hacia la derecha y dejalos ahí de momento.

          Haz click en el bloque que quieres eliminar y arrástralo de vuelta a la caja de herramientas.

          Luego, devuelve los otros bloques al lugar en el que deben estar.
      courseD_maze_ramp5:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp5_2018:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp5_2019:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp5a:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp5a_2018:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp5a_2019:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp5b:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp5b_2018:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp5b_2019:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_maze_ramp6:
        courseC_maze_programming6_a: "¡Aquí tienes dos caminos para resolver el puzzle!"
      courseD_maze_ramp7:
        courseD_maze_ramp7_b: No olvides usar el botón "Paso" para avanzar de bloque
          en bloque y buscar errores.
      courseD_scrat_ramp1:
        courseC_maze_programming1_a: Si Scrat no llega a la bellota, asegúrate de
          que los tres bloques están bien colocados juntos, luego pulsa "Ejecutar"
          de nuevo.
        courseC_maze_programming1_b: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_scrat_ramp2:
        courseC_maze_programming2_a: Para usar un bloque `avanzar`, arrástralo desde
          la caja de herramientas al espacio de trabajo y conéctalo al bloque `al
          ejecutar`.
        courseC_maze_programming2_b: Asegúrate de que los tres bloques `avanzar` están
          unidos al bloque `al ejecutar`.
      courseD_scrat_ramp3:
        courseC_maze_programming3_a: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Para eliminar un bloque que está en mitad de tu código, arrastra todos los bloques que están debajo de él hacia la derecha y dejalos ahí de momento.

          Haz click en el bloque que quieres eliminar y arrástralo de vuelta a la caja de herramientas.

          Luego, devuelve los otros bloques al lugar en el que deben estar.
        courseC_maze_programming3_b: Recuerda que los giros a izquierda y derecha
          se hacen desde el punto de vista de Scrat.
      courseD_scrat_ramp4:
        courseC_maze_programming4_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_scrat_ramp5:
        courseC_maze_programming5_a: Prueba a usar el botón "Paso" para ejecutar tu
          código línea a línea. ¿Puedes averiguar qué tienes que hacer después?
        courseC_maze_programming5_b: "¿Cómo de lejos tienes que moverte para llegar
          a la esquina?"
        courseC_maze_programming5_c: Tendrás que girar a la izquierda en la esquina
          para llegar a la bellota.
      courseD_scrat_ramp6:
        courseC_maze_programming6a_a: "¡Usa un bucle `repetir` para hacer que Scrat
          se mueva!"
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: "¡Aquí tienes dos caminos para resolver el puzzle!"
        courseD_scrat_programming6_b: Recuerda girar antes de moverte, ya que Scrat
          está mirando en la dirección equivocada.
        courseD_scrat_programming6_c: "¡No tengas miedo de cometer un error! Prueba
          a añadir bloques y a ejecutar el código para ver que pasará, incluso aunque
          sepas que no has resuelto el puzle todavía."
      courseD_scrat_ramp8:
        courseD_maze_ramp7_b: No olvides usar el botón "Paso" para avanzar de bloque
          en bloque y buscar errores.
        courseD_maze_ramp7_c: "¡No tengas miedo de cometer un error! Prueba a añadir
          bloques y a ejecutar el código para ver que pasará, incluso aunque sepas
          que no has resuelto el puzle todavía."
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una \*\* longitud
          de 30 \*\* y gira a la derecha por \*\* 60 grados \*\*.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una \*\* longitud
          de 80 \*\* y gira a la derecha por \*\* 120 grados \*\*. '
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: 'El semi-hexágono tiene una \*\* longitud
          de 30 \*\* y gira a la derecha por \*\* 60 grados \*\*.  '
        courseE_artist_concept_challenge1_b: 'El triángulo 2/3 tiene una \*\* longitud
          de 80 \*\* y gira a la derecha por \*\* 120 grados \*\*. '
      courseE_artist_functions1:
        courseE_artist_functions1_a: Los cuadrados tienen 100 píxeles de lado cada
          uno, lo que significa que te habrás movido 175 píxeles hacia adelante antes
          de dibijar el segundo cuadrado.
        courseE_artist_functions1_b: Está bien dibujar líneas superpuestas para realizar
          los anteojos.
      courseE_artist_functions2:
        courseD_artist_functions2_a: |-
          Tu programa deberá:

          -   Usar función
          -   Mover hacia adelante 100 + 75 píxeles
          -   Usar función
      courseE_artist_functions2_2018:
        courseD_artist_functions2_a: |-
          Tu programa deberá:

          -   Usar función
          -   Mover hacia adelante 100 + 75 píxeles
          -   Usar función
      courseE_artist_functions2_2019:
        courseD_artist_functions2_a: |-
          Tu programa deberá:

          -   Usar función
          -   Mover hacia adelante 100 + 75 píxeles
          -   Usar función
      courseE_artist_functions8:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_bee_concept3:
        courseE_bee_concept3a_b: Si no puedes averiguar en dónde poner el bucle, intenta
          escribiendo tu código paso por paso y mira los patrones.
      courseE_bee_concept3_2018:
        courseE_bee_concept3a_b: Si no puedes averiguar en dónde poner el bucle, intenta
          escribiendo tu código paso por paso y mira los patrones.
      courseE_bee_functions6:
        courseE_bee_functions6_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco
          Agrega algunos bloques, luego pruébalo. Agrega más, luego intenta de nuevo. ¡Pronto, lo lograras!
          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseE_bee_functions7:
        courseE_bee_functions7_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco.
          Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!
        courseE_bee_functions7_b: |-
          Recuerda construir tu código dentro del bloque de función verde.
          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco.
          Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco.
          Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!
      courseF_artist_for4:
        courseF_artist_for4_a: |-
          \*\* ¿Cuál es el número más pequeño que necesitará?
          ¿Cuál es el número más grande?
          ¿Qué tan grande es el aumento en cada ocasión? \*\*

          Esas son las preguntas que debe realizar para completar los espacios en blanco del ciclo `para`.
      courseF_artist_for4_2018:
        courseF_artist_for4_a: |-
          \*\* ¿Cuál es el número más pequeño que necesitará?
          ¿Cuál es el número más grande?
          ¿Qué tan grande es el aumento en cada ocasión? \*\*

          Esas son las preguntas que debe realizar para completar los espacios en blanco del ciclo `para`.
      courseF_artist_for4_2019:
        courseF_artist_for4_a: |-
          \*\* ¿Cuál es el número más pequeño que necesitará?
          ¿Cuál es el número más grande?
          ¿Qué tan grande es el aumento en cada ocasión? \*\*

          Esas son las preguntas que debe realizar para completar los espacios en blanco del ciclo `para`.
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: El 'ancho de pluma' es 1. El primer cuadro
          tiene 50 de píxeles de lado, y cada cuadrado es 50 píxeles más amplio que
          el anterior.
        courseF_artist_for_challenge1_b: La opacidad en el pincel siempre es `contador`
          / 2.
        courseF_artist_for_challenge1_c: Después de hacer cada cuadrado, no te olvides
          de moverte hacia atrás, girar, moverte de nuevo, ¡y luego retroceder!
        courseF_artist_for_challenge1_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: El 'ancho de pluma' es 1. El primer cuadro
          tiene 50 de píxeles de lado, y cada cuadrado es 50 píxeles más amplio que
          el anterior.
        courseF_artist_for_challenge1_b: La opacidad en el pincel siempre es `contador`
          / 2.
        courseF_artist_for_challenge1_c: Después de hacer cada cuadrado, no te olvides
          de moverte hacia atrás, girar, moverte de nuevo, ¡y luego retroceder!
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: El 'ancho de pluma' es 1. El primer cuadro
          tiene 50 de píxeles de lado, y cada cuadrado es 50 píxeles más amplio que
          el anterior.
        courseF_artist_for_challenge1_b: La opacidad en el pincel siempre es `contador`
          / 2.
        courseF_artist_for_challenge1_c: Después de hacer cada cuadrado, no te olvides
          de moverte hacia atrás, girar, moverte de nuevo, ¡y luego retroceder!
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: 'El `control de flujo` va de 5 a 250 por
          2. '
        courseF_artist_for_challenge2_a: El cambio de color ocurre utilizando el bloque
          'definir color con rojo, verde, azul'. Rojo es la constante definida como
          255, verde  es siempre el valor de 'contador', y azul es siempre '255-contador'.
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: 'El `control de flujo` va de 5 a 250 por
          2. '
        courseF_artist_for_challenge2_a: El cambio de color ocurre utilizando el bloque
          'definir color con rojo, verde, azul'. Rojo es la constante definida como
          255, verde  es siempre el valor de 'contador', y azul es siempre '255-contador'.
        courseF_artist_for_challenge2_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: 'El `control de flujo` va de 5 a 250 por
          2. '
        courseF_artist_for_challenge2_a: El cambio de color ocurre utilizando el bloque
          'definir color con rojo, verde, azul'. Rojo es la constante definida como
          255, verde  es siempre el valor de 'contador', y azul es siempre '255-contador'.
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseF_artist_fwp_challenge1_b: 'Esta es una serie de octógonos con lados
          que son ''contador'' píxeles de largo. '
        courseF_artist_fwp_challenge1_c: 'Cada octágono se llama desde dentro de un
          bucle ''para'' que va de 200 hasta 2 por 2. '
        courseF_artist_fwp_challenge1_d: 'No olvides dar vuelta de 22.5 grados al
          final de cada iteración. '
        courseF_artist_fwp_challenge1_e: Tanto el color de cada octágono como el ancho
          del lápiz están controlados por la variable \`contador '.
      courseF_artist_variables4:
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables4_2019:
        courseF_artist_variables4_a: Tu código no será muy diferente de lo que fue
          en el último desafío, excepto que tendrás que girar al artista para saltar
          hacia abajo, y luego hacerlo dar una vuelta para estar listo a dibujar el
          último triángulo.
      courseF_artist_variables5:
        courseF_artist_variables5_b: La primera mitad de tu código dibujará tres triángulos,
          y la segunda mitad dibujará los otros tres.
        courseF_artist_variables5_c: Comienza por duplicar el código en la primera
          mitad de su programa, luego modifícalo para que se muestre el diseño.
      courseF_artist_variables5_2018:
        courseF_artist_variables5_b: La primera mitad de tu código dibujará tres triángulos,
          y la segunda mitad dibujará los otros tres.
        courseF_artist_variables5_c: Comienza por duplicar el código en la primera
          mitad de su programa, luego modifícalo para que se muestre el diseño.
      courseF_artist_variables5_2019:
        courseF_artist_variables5_b: La primera mitad de tu código dibujará tres triángulos,
          y la segunda mitad dibujará los otros tres.
        courseF_artist_variables5_c: Comienza por duplicar el código en la primera
          mitad de su programa, luego modifícalo para que se muestre el diseño.
      courseF_artist_variables6:
        courseF_artist_variables6_b: Deberás editar el bloque numérico con el valor
          50, pero no se debe alterar más nada en el código.
      courseF_artist_variables6_2018:
        courseF_artist_variables6_b: Deberás editar el bloque numérico con el valor
          50, pero no se debe alterar más nada en el código.
      courseF_artist_variables6_2019:
        courseF_artist_variables6_b: Deberás editar el bloque numérico con el valor
          50, pero no se debe alterar más nada en el código.
      courseF_artist_variables6a:
        courseF_artist_variables6a_b: "¡Este código será muy similar al código de
          tu triángulo, solo que con una forma diferente!"
        courseF_artist_variables6a_c: Primero escribe el código de un cuadrado, luego
          agrega el código para moverte entre los cuadrados. Finalmente, agrega un
          bucle alrededor de todo!
      courseF_artist_variables6a_2018:
        courseF_artist_variables6a_b: "¡Este código será muy similar al código de
          tu triángulo, solo que con una forma diferente!"
        courseF_artist_variables6a_c: Primero escribe el código de un cuadrado, luego
          agrega el código para moverte entre los cuadrados. Finalmente, agrega un
          bucle alrededor de todo!
      courseF_artist_variables6a_2019:
        courseF_artist_variables6a_b: "¡Este código será muy similar al código de
          tu triángulo, solo que con una forma diferente!"
        courseF_artist_variables6a_c: Primero escribe el código de un cuadrado, luego
          agrega el código para moverte entre los cuadrados. Finalmente, agrega un
          bucle alrededor de todo!
      courseF_artist_variables_challenge1:
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberá girar
          a la izquierda dos veces, girar a la derecha dos veces y avanzar un total
          de cuatro veces.
      courseF_artist_variables_challenge1_2018:
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberá girar
          a la izquierda dos veces, girar a la derecha dos veces y avanzar un total
          de cuatro veces.
      courseF_artist_variables_challenge1_2019:
        courseF_artist_variables_challenge1_c: Para completar el patrón, deberá girar
          a la izquierda dos veces, girar a la derecha dos veces y avanzar un total
          de cuatro veces.
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: 'Las variables son útiles ya que usted
          puede sumarlas cada vez mediante un lazo. '
        courseF_artist_variables_challenge2_c: Usar una variable para 'lados' y una
          para 'longitud' hace al código más limpio ya que usted puede reutilizar
          el mismo código múltiples veces, en vez de crear una nueva copia para cada
          conjunto de números.
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: 'Las variables son útiles ya que usted
          puede sumarlas cada vez mediante un lazo. '
        courseF_artist_variables_challenge2_c: Usar una variable para 'lados' y una
          para 'longitud' hace al código más limpio ya que usted puede reutilizar
          el mismo código múltiples veces, en vez de crear una nueva copia para cada
          conjunto de números.
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: 'Las variables son útiles ya que usted
          puede sumarlas cada vez mediante un lazo. '
        courseF_artist_variables_challenge2_c: Usar una variable para 'lados' y una
          para 'longitud' hace al código más limpio ya que usted puede reutilizar
          el mismo código múltiples veces, en vez de crear una nueva copia para cada
          conjunto de números.
      courseF_bee_conditionals5:
        courseF_bee_conditionals5_d: Para continuar por el camino, la abeja deberá
          'avanzar'. Mientras está en el camino, la abeja necesita buscar una flor.
          ¿Qué debería hacer la abeja si hay una flor?
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: |-
          \*\* Recuerda: \*\* Este puzzle cambia cada vez que se ejecuta.

          Querras usar un bloque condicional (`Si` o`Si /si no`) para resolver el desafío.
      courseF_bee_for8:
        courseF_bee_for8_b: En este puzzle, tendrás que moverte en un patrón de escalones
          para llegar a las flores.
      courseF_bee_for8_2018:
        courseF_bee_for8_b: En este puzzle, tendrás que moverte en un patrón de escalones
          para llegar a las flores.
      courseF_bee_for8_2019:
        courseF_bee_for8_b: En este puzzle, tendrás que moverte en un patrón de escalones
          para llegar a las flores.
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'Intente usar dos bucles `para`: uno para trepar
          y agarrar néctar, y el otro para bajar y hacer miel.'
        courseF_bee_for_challenge2_c: |-
          Observe que un bucle `para` necesita varios bucles regulares dentro en que se repita 'contador' veces para hacer el patrón creciente de escalera.

          El otro bucle `para` solo necesita un bucle regular para hacer una cantidad 'contador' de miel.
        courseF_bee_for_challenge2_d: |-
          **Solución:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'Intente usar dos bucles `para`: uno para trepar
          y agarrar néctar, y el otro para bajar y hacer miel.'
        courseF_bee_for_challenge2_c: |-
          Observe que un bucle `para` necesita varios bucles regulares dentro en que se repita 'contador' veces para hacer el patrón creciente de escalera.

          El otro bucle `para` solo necesita un bucle regular para hacer una cantidad 'contador' de miel.
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: |-
          Echa un vistazo a esta opción de movimiento:

          ![](https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)
        courseF_bee_for_challenge2_b: 'Intente usar dos bucles `para`: uno para trepar
          y agarrar néctar, y el otro para bajar y hacer miel.'
        courseF_bee_for_challenge2_c: |-
          Observe que un bucle `para` necesita varios bucles regulares dentro en que se repita 'contador' veces para hacer el patrón creciente de escalera.

          El otro bucle `para` solo necesita un bucle regular para hacer una cantidad 'contador' de miel.
      courseF_bee_functions3:
        courseF_bee_functions3_a: 'Tu función para este puzzle solo necesita hacer
          miel, no debería tener ningún bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3_b: Recuerda que tu función solo debe obtener miel \*
          si \* hay un panal de miel.
        courseF_bee_functions3_c: Usa el bloque verde `solo hacer miel` para llamar
          a tu función.
        courseF_bee_functions3_d: Mira este camino.
      courseF_bee_functions3a:
        courseF_bee_functions3a_a: 'Tu función para este puzzle solo necesita obtener
          néctar o hacer miel, no deberías tener ningún bloque de ''avanzar'' o ''girar''. '
        courseF_bee_functions3a_b: Usa un patrón de escalones para verificar las primeras
          cuatro nubes.
      courseF_bee_functions4:
        courseF_bee_functions4_a: Tu función debe viajar por los caminos laterales
          y devolver la abeja a la camino principal. No necesitas agregar esa parte
          a tu programa principal.
        courseF_bee_functions4_b: Intenta crear el programa y usar los bloques de
          funciones como esperas que se comporte la función, luego crea la función.
      courseF_bee_functions5a:
        courseF_bee_functions5a_a: |-
          Tu función debería verificar si hay un camino a la derecha, y si lo hay, recorrer los caminos laterales y regresar a la abeja al camino principal.

          No necesitas agregar esa parte a tu programa principal.
        courseF_bee_functions5a_b: Usa un bucle`siempre que` para viajar por todas
          las rutas principales, ya que son de diferentes longitudes.
        courseF_bee_functions5a_c: Dentro de tu bucle `siempre que`, asegúrate de
          avanzar, luego usa tu función para buscar una ruta.
      courseF_bee_functions6:
        courseF_bee_functions6_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco
          Agrega algunos bloques, luego pruébalo. Agrega más, luego intenta de nuevo. ¡Pronto, lo lograras!
          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
        courseF_bee_functions6_b: Tu función debe verificar si hay una flor o un panal,
          obtener néctar o hacer miel, luego girar.
        courseF_bee_functions6_c: Dado que estás girando dentro de tu función, solo
          necesitas un bucle `siempre que` para atravesar este laberinto.
      courseF_bee_functions7:
        courseF_bee_functions7_a: Puedes mirar hacia atrás en el último puzzle para
          ver tu función.
        courseF_bee_functions7_b: Trata de dibujar un camino a través de este laberinto
          con tu dedo. ¿Dónde tendrá que tomar la abeja una decisión?
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco.
          Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!
        courseF_bee_functions8a_b: Recuerda construir código dentro del editor de
          funciones.
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: |-
          Si el rompecabezas parece desafiante, intenta construir tu función de poco a poco.
          Agregue algunos bloques, luego pruébelo. Agrega más, luego intenta de nuevo. ¡Pronto, llegarás allí!
        courseF_bee_functions7_c: "¿De qué manera deberías girar si hay un panal?
          ¿Qué tal una flor? ¿Qué pasa si no hay nada?"
      courseF_bee_functions_challenge1:
        courseF_bee_functions_challenge1_a: Puedes usar las funciones en la caja de
          herramientas para ayudarlo. ¡Puedes invocar una función dentro de la definición
          de otra función!
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_a: |-
          Si hay un camino a la derecha, deberías hacer lo siguiente:

          -   Obtén cualquier néctar o haz miel.
          -   Gira a la derecha hacia el camino lateral.
          -   Muévete hasta final de la ruta lateral.
          -   Dobla a la derecha.

          Si repites las acciones anteriores dos veces, estarás listo para retroceder por la ruta principal.

          \*\* ¡Solo haz clic para obtener otra sugerencia si deseas ver la solución completa! \*\*
      courseF_bee_fwp3:
        courseF_bee_fwp3_c: Para resolver este puzzle, necesitarás llamar a tu función
          3 veces. Entre cada llamada, debes `girar a la derecha`,`avanzar` 2 veces,
          luego `girar a la derecha` de nuevo. O bien, tienes que `girar a la izquierda`,`avanzar`
          2 veces, luego `girar a la izquierda` de nuevo.
      courseF_bee_fwp4:
        courseF_bee_fwp4_b: El parámetro que crees para tu función se usará en el
          bucle de repetición para determinar cuántas veces la abeja avanzará y buscará
          néctar.
      courseF_bee_fwp_challenge2:
        courseF_bee_fwp_challenge2_a: |-
          Comience asegurándose de que entiende cómo funciona esta _supuesta_ función. A medida que la agricultora se mueve por cada camino, solo intentará recolectar maíz. En cambio, ¿cómo puedes hacer que revise cada una de las 3 verduras y elegir solo la que encuentra?

          Agregue declaraciones condicionales a la función para buscar maíz, calabazas y lechuga.
      courseF_bee_variables_4_2019:
        courseF_bee_variables_4_2019_1: En lugar de restar 1 de 'recoger', añade 1
          cada vez. ¿Qué valor debería tener la variable al principio?
      courseF_playlab_variables2b:
        courseF_playlab_variables2b_a: "¿Qué crees que dirá Kiki cuando toques `Ejecutar`?"
      courseF_playlab_variables3b_josh:
        courseF_playlab_variables3b_a: 'Hay dos bloques con espacios vacíos: un bloque
          `actor dice` y un bloque`unirse`. ¡Agregue las variables de bloques allí!'
      courseF_playlab_variables4b:
        courseF_playlab_variables4b_a: No necesitas más bloques de la caja de herramientas
          aquí.
        courseF_playlab_variables4b_b: Coloque las dos variables 'año' y una variable
          'nombre' donde tengan más sentido en la conversación.
      courseF_playlab_variables5c:
        courseF_playlab_variables5c_a: Encuentre un bloque de variables `respuesta`
          en la caja de herramientas, debajo de" Variables ".
        courseF_playlab_variables5c_b: Prueba tu código! Intenta ingresar "rojo",
          y también otros colores, para ver qué pasa.
      courseF_playlab_variables6c:
        courseF_playlab_variables6c_a: Debajo de la sección "Entrada", usa el bloque
          `preguntar` para obtener la entrada de los usuarios.
      courseF_playlab_variables7b:
        courseF_playlab_variables7b_a: Haz que un gato y un perro hablen sobre sus
          comidas favoritas. Usa el bloque de pregunta para encontrar la comida favorita,
          ¡luego muestra el texto en la pantalla!
        courseF_playlab_variables7b_b: Haz que tu personaje favorito pregunte si quiere
          escuchar un chiste. Si la respuesta es sí, muestra una broma a la pantalla.
      courseF_playlab_variables7c:
        courseF_playlab_variables7c_a: Coloque el nuevo bloque `pregunta` antes de
          su instrucción`si/ de lo contrario` para que pueda usarlo allí en otras
          etapas.
      courseF_playlab_variables8c:
        courseF_playlab_variables8c_a: El bloque `unirse` entra en un bloque`actor
          dice`, y te permite usar tus variables en oraciones más grandes.
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_a: 'Suma y resta puntos a la variable
          `Puntuación` cuando los sprites colisionan. '
        courseF_playlab_variables_challenge2_b: Usted puede cambiar el parámetro de
          cuán lejos se mueve su sprite cada vez que una de las teclas flecha es presionada.
      grade5_artist_variables_triangles1:
        grade5_artist_variables_triangles1_a: Para formar un ángulo interno de 60
          grados en este triángulo, recuerda girar el artista 120 grados.
        grade5_artist_variables_triangles1_b: Use el bucle `repetir` para acortar
          su código.
        grade5_artist_variables_triangles1_c: Dentro de tu bucle, querras avanzar
          50 píxeles, luego gira a la izquierda 120 grados.
      grade5_artist_variables_triangles1_2018:
        grade5_artist_variables_triangles1_a: Para formar un ángulo interno de 60
          grados en este triángulo, recuerda girar el artista 120 grados.
        grade5_artist_variables_triangles1_b: Use el bucle `repetir` para acortar
          su código.
        grade5_artist_variables_triangles1_c: Dentro de tu bucle, querras avanzar
          50 píxeles, luego gira a la izquierda 120 grados.
      grade5_artist_variables_triangles1_2019:
        grade5_artist_variables_triangles1_a: Para formar un ángulo interno de 60
          grados en este triángulo, recuerda girar el artista 120 grados.
        grade5_artist_variables_triangles1_b: Use el bucle `repetir` para acortar
          su código.
        grade5_artist_variables_triangles1_c: Dentro de tu bucle, querras avanzar
          50 píxeles, luego gira a la izquierda 120 grados.
      iceage_hello1:
        iceage_hello1_a: Solo necesitas agregar un bloque para resolver este puzzle.
          Arrastre el bloque `decir` desde la barra de herramientas y conéctelo al
          bloque de evento `cuando ejecuta` que ya se encuentra en el área de trabajo.
          Luego, escribe "¡Hola!" dentro.
