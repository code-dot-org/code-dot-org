{
  "key": "board-events",
  "course_version_key": "2022",
  "course_offering_key": "self-paced-pl-csd-2021",
  "parent_reference_guide_key": "maker-toolkit",
  "display_name": "Board Events",
  "content": "The `onEvent()` block is used to set up _event handlers_ that can watch for certain _events_ to occur in your app, such as clicking on a button, selecting an item from a dropdown, or moving the mouse. The Circuit Playground has a similar block called `onBoardEvent()` to watch for events that occur on the board. Similar to `onEvent()`, you need to specify what the handler should be watching, what event to watch for, and how to respond to that event.\n\n### onBoardEvent\n\nIt's important to understand in Event-Driven programming that:\n\n* **Users trigger events** - Events occur when users interact with inputs on the board, such the buttons, the switch, and others.\n* **Events trigger code** - When an event occurs or \"fires\" it can be used to trigger a particular function.\n\nThe Maker Toolkit `onBoardEvent()` block is a type of event-handling function called an Event Listener. It wraps all of the setup up you need to do event handling into one command that has several parts. Here is an example with everything labeled:\n\n![](https://cdo-curriculum.s3.amazonaws.com/media/uploads/onBoardEvent_diagram.png){: class=\"center\", style=\"width: 700px; margin: 20px auto;\"}\n\n[diagram_nums]\n\n1. Code to execute when callback function is triggered when the user clicks the left button, `buttonL`. In this case, write the word \"click\" to the console. Notice that we're using the _variable_ `buttonL` (no quotation marks). This is different from `onEvent`, which uses a _string_ to specify the ID of a design element.\n\n2. Notice that this function, unlike most others we've seen, does not have a name. It is also called a _callback function_ which is an odd term. A callback function is only different from a normal function in that you don't call it directly from your code. Instead a callback function is **called by the system** at the time the specified event occurs. Callback functions are a common pattern in a lot of event-driven programming.\n\n[/diagram_nums]",
  "position": 11
}