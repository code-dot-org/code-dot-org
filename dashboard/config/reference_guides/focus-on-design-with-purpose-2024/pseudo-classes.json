{
  "key": "pseudo-classes",
  "course_version_key": "2024",
  "course_offering_key": "focus-on-design-with-purpose",
  "parent_reference_guide_key": "css",
  "display_name": "CSS Pseudo-classes",
  "content": "# Pseudo-classes\n\nA pseudo-class is used to define a special state of an element.\n\nFor example, it can be used to:\n- Style an element when a user mouses over it\n- Style visited and unvisited links differently\n- Bring attention to an image on the page\n\n## Syntax\n\nThe syntax of a pseudo-class:\n\n```\nselector:pseudo-class {\n  property: value;\n}\n```\n\n## Anchor Tag States\n\nThe state an anchor (`<a>`) tag is in is an example of a commonly used pseudo-class. \n\nThe anchor tag has four states:\n\n- **link**: when the link has not yet been clicked\n- **visited**: when the link has been clicked (clicking a link \"visits\" that linked page, hence the name \"visited\")\n- **hover**: when the mouse is hovered over, but not clicked, the link\n- **active**: the moment the mouse is actively clicking down on the link\n\nWe style these states using pseudo-classes. In the example below, we specify the anchor element selector, a colon, and the name of the anchor state:\n\n```\na:hover {\n  color: yellow;\n}\n```\n\n##### **Anchor Tag Pseudo-class Order**\n\nIt is **strongly** recommended that if you are going to use all four states for an anchor tag, you create your rule sets in CSS in the following order:\n\n1. link\n2. visited\n3. hover\n4. active\n\nSetting these out of order on your CSS can create unforeseen actions, as the cascading style of CSS can have one property overriding another. In short, if there are competing rule sets, styles declared later typically override those declared earlier.\n\nOne way to remember the right order is with the phrase **\"LOVE, HATE\"** - **LV, HA** (_Link, Visited, Hover, Active_).\n\n## Combining Pseudo-class with Classes\n\nWhat if you have more than one hyperlink and you want to style them differently? Normally, when we have several of the same element, but we want to style one of them differently, we would give that element a class attribute. Good news! We can do the same thing with pseudo-classes!\n\nTo do this, we would use our class attribute in our selector instead of the anchor tag like this:\n\n**HTML:**\n\n`<a class=\"special\" href=\"google.com\">Click here!</a>`\n\n**CSS:**\n\n```\n.special:visited {\n  color: purple;\n}\n```\n",
  "position": 9
}