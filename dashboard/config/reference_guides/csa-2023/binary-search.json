{
  "key": "binary-search",
  "course_version_key": "2023",
  "course_offering_key": "csa",
  "parent_reference_guide_key": "Algorithms",
  "display_name": "Binary Search",
  "content": "**Binary search** is a search algorithm that finds a target element in a sorted list by dividing the list in half in each iteration.\n\n## Pseudocode\n```\nSet left to 0 and right to the last element\nLoop while left is less than or equal to right\n    Set middle to the index of the item in the middle of left and right\n    If the middle element is less than the target\n        Set left to the middle index plus 1\n    If the middle element is greater than the target\n        Set right to the middle index minus 1\n    Otherwise return the middle index\nReturn -1 if the target is not found in the list\n```\n## Example\n\n```\npublic static int binarySearch(int[] elements, int target) {\n  int left = 0;\n  int right = elements.length − 1;\n  while (left <= right) {\n    int middle = (left + right) / 2;\n    if (target < elements[middle]) {\n      right = middle − 1;\n    }\n    else if (target > elements[middle]) {\n      left = middle + 1;\n    }\n    else {\n      return middle;\n    }\n  }\n  return −1;\n}\n```\n",
  "position": 1
}