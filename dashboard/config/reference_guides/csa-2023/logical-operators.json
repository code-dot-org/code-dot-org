{
  "key": "logical-operators",
  "course_version_key": "2023",
  "course_offering_key": "csa",
  "parent_reference_guide_key": "operators",
  "display_name": "Logical Operators",
  "content": "A logical operator is an operator that returns a Boolean value.\n\nThe operators below can be used to determine the logic between variables or values. The expression will evaluate to a `boolean`(#e7e8ea) (`true`(#e7e8ea) or `false`(#e7e8ea)).\n\n|  &nbsp;&nbsp; Operator &nbsp;&nbsp;  |  &nbsp;&nbsp; Name &nbsp;&nbsp;  |  &nbsp; Description &nbsp;&nbsp; |  &nbsp;&nbsp; Example &nbsp;&nbsp;  |\n|:----:|:----:|:----|:----:|\n|  `&&`(#e7e8ea)  |  AND  |  &nbsp; Returns `true`(#e7e8ea) if both statements are `true`(#e7e8ea) &nbsp;&nbsp;&nbsp;  |  `x < 5 && x < 10`(#e7e8ea)  |\n|  `||`(#e7e8ea)  |  OR  |  &nbsp; Returns `true`(#e7e8ea) if one of the statements is `true`(#e7e8ea) &nbsp;&nbsp;&nbsp;  |  `x < 5 || x < 4`(#e7e8ea)  |\n|  `!`(#e7e8ea)  |  NOT  |  &nbsp; Reverses the result; returns `false`(#e7e8ea) if the result is `true`(#e7e8ea) &nbsp;&nbsp;&nbsp;  |  `!(x < 5 && x < 10)`(#e7e8ea)  |\n\n## NOT ( ! )\n\nNOT ( ! ) is a logical operator that returns the opposite value of the condition.\n\n| A       | !A      |\n| ------ | ------- |\n| False | True  |\n| True  | False |\n\n## AND ( && )\n\nAND ( && ) is a logical operator that returns true if both conditions are true.\n\n| A       | B       | A && B |\n| ------ | ------- | -------- |\n| False | False | False    |\n| False | True  | False    |\n| True  | False | False    |\n| True  | True  | True    |\n\n## OR ( || )\n\nOR ( || ) is a logical operator that returns true if at least one of the conditions is true.\n\n| A       | B       | A || B |\n| ------ | ------- | -------- |\n| False | False | False    |\n| False | True  | True    |\n| True  | False | True    |\n| True  | True  | True    |\n\n## Examples\n### Using Logical Operators\n```\nint x = 5;\n\nif (x > 3 && x < 10) {\n   System.out.println(\"x is between 3 and 10\");\n}\n// This expression will evaluate to true because 5 is greater than 3 AND 5 is less than 10.\n\nif (x > 3 || x < 4) {\n   System.out.println(\"x is either greater than 3 or less than 4\");\n}\n// This expression will evaluate to true because one of the conditions\n// is true - 5 is greater than 3, but 5 is not less than 4.\n\nif (!(x > 3 && x < 10)) {\n   System.out.println(\"x is not between 3 and 10\");\n}\n// This expression will evaluate to false because ! (NOT) is used to reverse the result.\n```",
  "position": 1
}