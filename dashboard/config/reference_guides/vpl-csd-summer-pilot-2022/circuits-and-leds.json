{
  "key": "circuits-and-leds",
  "course_version_key": "2022",
  "course_offering_key": "vpl-csd-summer-pilot",
  "parent_reference_guide_key": "maker-toolkit",
  "display_name": "Circuits and LEDs",
  "content": "<img alt=\"Circuit Playground Data Pins\" src=\"https://images.code.org/6821153181b10ce9d5fdc1459beb4445-image-1643339359352.png\" style=\"width:400px; float: right; margin: 0 20px\">\n\nUsing the numbered pads on the Circuit Playground, you can create circuits of your own that include external components, such as LEDs and buttons. The specifics of how a circuit gets wired depends on the specific hardware you're trying to add, but all circuits will use some combinations of power pins (which provide power), ground pins (which are the end point of a circuit), and numbered data pins (which can either send an output signal, or read an input). *Heads up:* Some of the data pins are reserved for special functions on the board, so when creating your own circuits, make sure to only use the following pins:\n\nWith a Circuit Playground Express board, only use pins **\"A6\"**, **\"A5\"**, **\"A4\"**, **\"A0\"**, or **\"A1\"**\n\nWith a Circuit Playground Classic board, only use pins **0**, **2**, **3**, **6**, and **12**.\n\n[clearfix]\n\n[/clearfix]\n\n## Creating LED Circuits\n\nOne of the simplest circuits that you can make with your Circuit Playground is to add an LED. To create this circuit you'll need a data pin, two wires, and a ground pin.\n\n* Connect a wire from data pin to the positive (**+**) side of the LED.\n* Connect a different wire from the negative (**-**) side of the LED to any ground pin.\n* Using code, set your chosen pin to \"output\" and turn it on:\n\n## Coding an LED Circuit (Circuit Playground Express)\n```\n// Create an LED attached to pin A5\nvar myLed = createLed(\"A5\");\n\n// Blink myLed\nmyLed.blink(200);\n```\n\n## Coding an LED Circuit (Circuit Playground Classic)\n\n```\n// Create an LED attached to pin 2\nvar myLed = createLed(2);\n\n// Blink myLed\nmyLed.blink(200);\n```\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/alligator.png\" style=\"float: left; width: 30%; margin: 10px 5% 10px 0;\">\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/cp-wire.png\" style=\"float: left; width: 30%; margin: 10px 5% 10px 0;\">\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/cp-foil.png\" style=\"float: left; width: 30%; margin: 10px 0;\">\n\nYou don't have to use anything fancy to create a simple circuit like this - just about anything that conducts electricity well will do. You can salvage wire from old holiday lights or use aluminum foil for a quick fix, but you can also buy conductive thread that will let you sew your circuits or get copper tape to make bendable circuits on paper.\n\n## LED Debugging\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/sequin.png\" style=\"width: 500px;\" class=\"center\">\n\nLEDs are pretty simple to use, but there are a couple of tricks to keep in mind:\n\n* You need to pay attention to which direction the electricity is flowing, because LEDs only work in one direction. Always connect the positive side of your LED to your power source and the the negative side to ground.\n* LEDs need a component called a _resistor_ to make sure they are getting (and taking) the right amount of electricity. LED sequins (like the above image) have a resistor built in, but if you want to use a plain LED you'll need to add a resistor to either side to avoid damaging the board or LED.",
  "position": 8
}