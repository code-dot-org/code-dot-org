{
  "key": "booleans-and-comparison-operators",
  "course_version_key": "2022",
  "course_offering_key": "vpl-csd",
  "parent_reference_guide_key": "javascript",
  "display_name": "Booleans and Comparison Operators",
  "content": "## Word Soup: Conditionals, Booleans, expressions, statements\n\n<div style=\"width: 33%; float: right; border: solid 1px #00adbc; padding: 10px; margin: 10px;\">\n<Strong>Historical Notes on Booleans</Strong><br>\n<li> Named after mathematician George Boole \n<li> He invented a corner of mathematics that is now named after him called \"Boolean Algebra\" \n<li> Boolean Algebra is math that operates using only true/false values. \n<li> This is important work for computer science because true/false maps very easily to binary.\n</div>\n\nAs you saw in the video there are a bunch of terms that generally are all talking about the same thing.\n\n**Boolean, Boolean values, Boolean expressions:**\n\n* A **Boolean value** is simply a computer science-y term that means **a true/false value**.\n* A **Boolean expression** is a statement that *evaluates* to a Boolean value (a single true/false).\n\n**Condition, Conditionals, Conditional Statements**:\n\n* \"Conditional\" is simply a generic term for code that alters program flow based on true/false values (like an `if` statement)\n* Examples: Condition, Conditionals, Conditional statements, conditional execution\n\n\n## Comparison Operators\n\n<img src=\"https://images.code.org/79f2ae7d27a3fa434138aeeb17146cab-image-1479413755076.png\" style=\"float: left; margin-left: 20px; margin-right: 20px\">\n\nA common type of condition to check is a comparison of two values.  Here are 6 common **comparison operators**. Each compares a value on the left with a value on the right and returns a Boolean value -- **true** or **false**.  Most of these do what you would expect. \n\n### Why these symbols: **==**, **!=**, **<=**, and **>=**?\n\n1. We use `==` because the single equal sign <code>=</code> is the assignment operator. We need something different to indicate we want to compare two values instead of assign one to the other.\n\n    **Common mistake:** writing something like `if (age = 18)`  instead of `if (age == 18)`.  We'll make sure we get this down later.\n\n2. We use `!=`, `<=`, and `>=` because they only require ASCII symbols. Historically the mathematical symbols <code>&ne;</code>, <code>&le;</code> and <code>&ge;</code> were hard or impossible to produce on some systems.  The `!` is universally read as \"not\".\n\n<div style=\"clear: both\">&nbsp;</div>\n\n## Reference: Examples\n\nBelow are a bunch of examples of how you might see comparisons in code. Review them if you like or continue on and come back if you need reference.\n\n<hr>\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/ea8cf41d0e06e6ddee31086fbb9ea2b9-image-1479232029068.png\" style=\"float: left; margin-left: 50px; margin-right: 50px\">\n\nCompares two values - numbers, strings, or other booleans - and returns *true*  if they are equal, otherwise *false*.\n\n* `\"Hello\" == \"hello\"` returns *false* -- because the strings are are capitalized differently.\n* `\"3\" == 3` returns *true*  -- because `==` tries to be forgiving. If it can \"coerce\" a string into a number it will do so to compare. <sup>1</sup> \n* `(2+1) == 3` returns *true*  -- because the arithmetic expression evaluates to 3.\n* `x == 7` returns *true*  -- when the variable x has the value 7.\n\n<sup>1.</sup> While it is a useful feature that `==` will coerce a string into a number, it is considered **TRICKY** because the string \"3\" is not the same as the integer 3.  There are times when you would believe these are not equal.   There is a \"strict\" equality operator - the \"triple equal\" `===` which makes sure that both the type of data and value are equal.  So ` \"3\" === 3 ` is false.\n\n<div style=\"clear:both\"> </div>\n<hr>\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/67fc10f1dec4f129c64c62d583ebf7ee-image-1479232142029.png\" style=\"float: left; margin-left: 50px; margin-right: 50px\">\n\nCompares two values - numbers, strings, or other booleans - and returns `true` if they are **not equal**, otherwise `false`.\n\n* `\"Hello\" != \"hello\"` returns *true* -- because the strings are slightly different.\n* `\"3\" != 3` returns *false* -- because the string 3 can be coerced into a number before comparing with 3. (see notes above about the forgiving ==).\n* `(2+1) != 3` returns *false* -- because the arithmetic expression evaluates to 3.\n* `x != 7` returns *true* -- when the variable x *is any value other than* 7.\n\n<div style=\"clear:both\"> </div>\n<hr>\n\n<img style=\"float: left; margin-left: 50px; margin-right:50px; margin-bottom: 20px;\" src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/536aed5657843fca3b52a044f2f3bdc7-image-1479242736018.png\">\n\nCompares two values to see if the number on the left is <em>greater than</em> the number on the right.\n\n* `4 > 3` returns *true*\n* `3 > 7` returns *false*\n* `age > 17` returns *true* -- when the value of the variable \"age\" is strictly greater than 17, otherwise false.\n\n<div style=\"clear:both\"> </div>\n<hr>\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/3c7c9336270e093bad437d69d155a8c7-image-1479242773012.png\" style=\"float: left; margin-left: 50px; margin-right:50px; margin-bottom: 20px;\">\n\nCompares two values to see if the number on the left is <em>less than</em> the number on the right.\n\n* `4 < 3` returns *false*\n* `3 < 7` returns *true*\n* `age < 17` returns *true* -- when the value of the variable \"age\" is strictly less than 17, otherwise false.\n\n<div style=\"clear:both\"> </div>\n<hr>\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/e899b0040a9f8ddc899b1df66773be74-image-1479242843374.png\" style=\"float: left; margin-left: 50px; margin-right: 50px; margin-bottom: 20px\">\n\nCompares two values to see if the number on the left is *less than or equal to* the number on the right. \n\n* `3 <= 4` returns *true*\n* `4 <= 3` returns *false*\n* `age <= 18` returns *true* -- when the value of the variable \"age\" is 18 or less.\n\n<div style=\"clear:both\"> </div>\n\n<hr>\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/2ca857bff29bca22a2a42433c6b3981f-image-1479242807960.png\" style=\"float: left; margin-left: 50px; margin-right: 50px; margin-bottom: 20px\">\n\nCompares two values to see if the number on the left is *greater than or equal to* the number on the right.\n\n* `3 >= 4` returns *false*\n* `4 >= 3` returns *true*\n* `age >= 18` returns *true* -- when the value of the variable \"age\" is 18 or greater.\n\n<div style=\"clear:both\"> </div>\n\n<hr>",
  "position": 0
}