{
  "key": "if-statements",
  "course_version_key": "2022",
  "course_offering_key": "vpl-csd-summer-pilot-ci",
  "parent_reference_guide_key": "javascript",
  "display_name": "If Statements",
  "content": "## Understanding Program Flow\nPrograms are said to have a \"flow of execution\". You start by executing a line of code, then the next, then the next, and so on.\n\n<img src=\"https://images.code.org/9475539704f7fc8d13092a5706fb3bba-image-1479311514103.png\" style=\"float: right; margin: 10px;\">\n\nA flow chart is a common visual used to represent the various paths of execution that your program might take.  Many people use them to help plan programs.  \n\n[diagram_nums]\n\n1. This flow chart depicts a program executing one line after another until it gets to a point where it needs to make a decision.\n2. In order to determine which path to take you state some **condition**. It should be a **Boolean expression** - something that evaluates to **true** or **false**.  Here we have a simple **comparsion** of two values: the person's age and the number 18.\n3. The program does one thing if the condition is true, and something else if the condition is false.\n4. The program can continue a single thread of execution after the condition as well.\n\n[/diagram_nums]\n\n## How If-statements work\n\n<img src=\"https://images.code.org/361556bbff61bf91e2c737f745582dff-image-1479418505481.png\" style=\"float: right; margin-left: 20px; margin-right: 20px;\">\n\n_if_ statements are the lines of code you use to change the flow of a program while it's running. You can write code that determines which lines of code should run next.\n\nAt the right is a diagram showing the elements of a basic _if_ statement in JavaScript.\n\nThere are two basic parts to an if-statement.\n\n1. A condition to be evaluated (A Boolean expression that evaluates to **true** or **false**)\n2. Code that should run *if* the expression was true - enclosed in curly braces\n\n<!-- Rework this for Game Lab\n\n## A worked example\n\n<img src=\"https://images.code.org/ca716e009ddb8dc397eb5a651a1ac2d7-image-1479420772852.png\" style=\"display: block; margin: auto; float: right\">\n\n[diagram_nums]\n\n1. Program executes line by line as you would expect. It displays a message, then prompts the user to enter a number.  Whatever the user types will be stored in the variable `age<` and then proceeds to the next line...\n2. When the _if_ statement is encountered the _first_ thing it does is evaluate the condition in the parentheses. It checks to see if, at this point in the program, the value in a variable `age` is greater than or equal to 18.  If it is then we say the expression \"**returns true**\".  Otherwise it returns false.\n3. These `console.log` statements will _only_ execute if the expression was true. The curly braces surround all of the code that should be executed if, and only if, the expression was true.  Otherwise, the entire section of code encapsulated in the if statement is _skipped_.\n4. Execution picks up here, on the first line after the closing curly brace of the if-statement.  This line will _always_ execute, but notice that if the user entered an age less than 18, the entire if statement would be skipped, and it would just say \"Thanks for verifying\".\n\n[/diagram_nums]\n\n-->\n",
  "position": 1
}