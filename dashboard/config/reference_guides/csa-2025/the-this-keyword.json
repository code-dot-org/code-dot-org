{
  "key": "the-this-keyword",
  "course_version_key": "2025",
  "course_offering_key": "csa",
  "parent_reference_guide_key": "writing-a-class",
  "display_name": "The this Keyword",
  "content": "## What is the `this`(#e7e8ea) keyword?\n\nThe `this`(#e7e8ea) keyword is used to refer to the current object.\n\nWe can use the `this`(#e7e8ea) keyword to refer to the instance variables instead of the local variables.\n\n```\npublic Pet(String name, int age) {\n  this.name = name;\n  this.age = age;\n}\n```\n\n`this.name`(#e7e8ea) is the **instance variable**, while `name`(#e7e8ea) is the **formal parameter**.\n\n## When else can I use `this`(#e7e8ea)?\n\nWe can use `this`(#e7e8ea) to call a different constructor in the same class. The **no-argument constructor** for the `Shoes`(#e7e8ea) class calls the **parameterized constructor** using `this`(#e7e8ea) and passes in default values of `\"white\"`(#e7e8ea), `7.5`(#e7e8ea), and `true`(#e7e8ea).\n\n```\npublic class Shoes {\n\n  private String color;            // The color of a pair of shoes\n  private double size;             // The size of a pair of shoes\n  private boolean hasShoelaces;    // Whether or not a pair of shoes has shoelaces\n\n  /*\n   * Sets color to color, size to size, and hasShoelaces to hasShoelaces\n   */\n  public Shoes(String color, double size, boolean hasShoelaces) {\n    color = color;\n    size = size;\n    hasShoelaces = hasShoelaces;\n  }\n\n  /*\n   * Sets color to \"white\", size to 7.5, and hasShoelaces to true\n   */\n  public Shoes() {\n    this(\"white\", 7.5, true);\n  }\n}\n```\n\n## When else can I use `this`(#e7e8ea)?\n\nWe can use `this`(#e7e8ea) to pass in the current object into a method. In the `isSmallerShoe`(#e7e8ea) method of the `Shoes`(#e7e8ea) class, we pass in the current object as the first **actual parameter** to the **static** method `ShoeStore.compareShoes`(#e7e8ea).\n\n```\npublic class Shoes {\n\n  private String color;            // The color of a pair of shoes\n  private double size;             // The size of a pair of shoes\n  private boolean hasShoelaces;    // Whether or not a pair of shoes has shoelaces\n\n  public boolean isSmallerShoe(Shoes other) {\n      return ShoeStore.compareShoes(this, other);\n  }\n\n  public double getSize() {\n    return size;\n  }\n}\n\npublic class ShoeStore {\n  public static boolean compareShoes(Shoes one, Shoes two) {\n    return one.getSize() < two.getSize();\n  }\n}\n```",
  "position": 4
}