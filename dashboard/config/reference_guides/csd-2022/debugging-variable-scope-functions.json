{
  "key": "debugging-variable-scope-functions",
  "course_version_key": "2022",
  "course_offering_key": "csd",
  "parent_reference_guide_key": "patterns",
  "display_name": "Debugging Variable Scope: Functions",
  "content": "# Create Variables Once, At the Top, Outside Functions or onEvent()\n\nWhen you create variables you should:\n\n* **Use `var` only once.** You don't need to create variables twice and this can cause errors.\n* **Create your variables at the top of your program.** This keeps your code organized and easier to read for you and others.\n* **Create your variables outside any `function` or [`onEvent`(#fff176)](/docs/applab/onEvent/) blocks.** Read on to understand why.\n\n# Global vs. Local Variables\n\nThere's two types of variables, global and local, and so far we've only used global variables. Here's the main difference between global and local variables.\n\nType of Variable| How It Works | How Created | Picture\n---|---|---|---\n**Global** | Permanent. Can be used anywhere in your code | `var` used outside an [`onEvent`(#fff176)](/docs/applab/onEvent/) | ![](https://images.code.org/6f8fada462d48f58ad9d4af091634cff-image-1549944949349.png)\n**Local** | Temporary. Can be used only in the part of the code where it was created, like inside an [`onEvent`(#fff176)](/docs/applab/onEvent/). Deleted once the [`onEvent`(#fff176)](/docs/applab/onEvent/) is done running. | `var` used inside an [`onEvent`(#fff176)](/docs/applab/onEvent/) | ![](https://images.code.org/e8bb3cec433f3f6260312089ff197e8a-image-1549945264323.png)\n\n# Avoiding Local Variables and Debugging\n\nLocal variables will eventually be useful but for now they're most likely to just be confusing. The biggest issue you'll run into right now with local variables is accidentally using `var` inside of an [`onEvent`(#fff176)](/docs/applab/onEvent/) or `function`. Here's what the code usually looks like:\n\n<img src=\"https://images.code.org/7dc2b13d85ea17e39639d15488d07f8f-image-1549944350460.png\" style=\"width: 400px\">\n\nThis code is pretty confusing. While it looks like there's only one variable being used, it actually has two variables, one local, and one global, and they're both named `count`! Changing the value of one will have no impact on the other. This can cause unexpected behavior in your code and it can get tricky to debug.\n\nThe best way to avoid these issues is to **make sure for now that you're not using `var` inside of an [`onEvent`(#fff176)](/docs/applab/onEvent/) or `function`.** If you run into a tricky debugging problem, check if you're accidentally creating a local variable.\n\n",
  "position": 8
}