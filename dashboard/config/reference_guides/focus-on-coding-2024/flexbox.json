{
  "key": "flexbox",
  "course_version_key": "2024",
  "course_offering_key": "focus-on-coding",
  "parent_reference_guide_key": "css",
  "display_name": "Flexbox Container Properties",
  "content": "# Flexbox\n\nThe flexbox Layout (Flexible Box) aims to provide a more efficient way to lay out, align, and distribute space among items in a container, even when their size is unknown and/or dynamic (thus the word \"flex\").\n\n_**Note:** Flexbox layout is most appropriate to the components of an application and small-sale layouts taught in this course, while the [Grid](https://css-tricks.com/snippets/css/complete-guide-grid/) layout is intended for larger-scale layouts._\n\n## Main Properties\n\n![](https://images.code.org/15beb74af025dd2b655c1dbf507ab0d3-mainProperties.png)\n\n## Application Steps:\n\nWhen applying Flex properties to containers, you will normally follow these steps:\n1. Establish flex layout ➡️ `display: flex;`\n2. Define the flow direction and if items should wrap ➡️ `flex-direction` and `flex-wrap`\n3. Define how the items should be distributed ➡️ `justify-content`\n\n\n## Additional Properties\n\n![](https://images.code.org/69790d9fad14b1c4aeca9b8e1b2c6af5-additionalProperties.png)\n\n## Things to Keep in Mind\n\n- The `stretch` property only works if the item in the container does _not_ have a defined height in CSS.\n- When the `flex-direction` is defined as `column`, the horizontal and vertical alignment properties switch!\n   - This means that `justify-content` will now define the vertical alignment of items and `align-items` will now define the horizontal alignment of items.\n\n## Examples\n\nThe following example is styled with the following flex properties:\n\n```\n.container {\n  display: flex;\n  flex-direction: row-reverse;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n```\n![](https://images.code.org/3077beb2d694b7165e915387b23e8337-example1.png)\n\n<br>\n\nThe following example is styled with the following flex properties:\n\n```\n.container {\n  height: 300px;\n  display: flex; \n  flex-direction: column;\n  flex-wrap: wrap; \n  justify-content: space-evenly; \n  align-content: center;\n}\n```\n\n![](https://images.code.org/0688093a85331d58402288b05b808531-example2.png)\n\n\n<br>\n\nTo learn how to use Flexbox Children Properties to control the alignment and layout of each item in the container, see the Flexbox Children Properties page. ",
  "position": 6
}