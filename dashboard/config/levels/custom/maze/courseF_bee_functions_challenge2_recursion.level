<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2017-06-17T17:52:41.000Z",
  "level_num": "custom",
  "user_id": 6,
  "properties": {
    "skin": "bee",
    "short_instructions": "Collect all the nectar or make all of the honey!",
    "step_mode": "1",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "start_direction": "1",
    "flower_type": "redWithNectar",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,1,1,1,1,0],[0,0,0,1,0,0,1,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "initial_dirt": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,7,0,0,7,0],[0,0,0,-7,0,0,-7,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "final_dirt": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "ideal": "10",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "true",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "fast_get_nectar_animation": "true",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"If the puzzle seems challenging, try building your function a little at a time.  \\n\\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\",\"hint_id\":\"courseF_bee_functions8a_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/14391b89faae14bf0f715e5f6a774bc3/courseF_bee_functions8a.mp3\"},{\"hint_class\":\"content\",\"hint_markdown\":\"Remember to build code inside of the function editor.\\n\\n\",\"hint_id\":\"courseF_bee_functions8a_b\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/d21bd514975d839615a96bfc253e09d4/courseF_bee_functions8a.mp3\"}]",
    "instructions_important": "true",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "step_speed": "1",
    "serialized_maze": "[[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1,\"value\":3,\"range\":3,\"featureType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":1,\"value\":2,\"range\":2,\"featureType\":1},{\"tileType\":1},{\"tileType\":2,\"value\":4,\"range\":4,\"featureType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1,\"value\":5,\"range\":5,\"featureType\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1,\"value\":4,\"range\":4,\"featureType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}]]",
    "long_instructions": "Underneath this cloud, there might be a flower with an unknown amount of nectar, or a honeycomb with an unknown amount of honey.  \r\n\r\nCan you write a program that can handle either?",
    "shape_shift": "false",
    "nectar_goal": "18",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-05-31 19:07:52 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-06-12 17:57:20 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-06-17 17:55:17 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 17:56:02 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 17:57:44 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 17:58:00 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 17:58:22 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:00:56 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:01:15 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:03:01 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:03:55 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:15:41 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:17:22 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:18:11 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:19:22 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:21:49 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"nectar_goal\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-17 18:22:58 +0000\",\"changed\":[\"name\",\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">do something</title>
          <statement name="STACK">
            <block type="maze_nectar">
              <next>
                <block type="bee_ifNectarAmount">
                  <title name="ARG1">nectarRemaining</title>
                  <title name="OP">&gt;</title>
                  <title name="ARG2">0</title>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                      <mutation name="do something"/>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </statement>
        </block>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="procedures_callnoreturn" movable="false" next_connection_disabled="true">
              <mutation name="do something"/>
            </block>
          </next>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Default"/>
        <category name="Actions">
          <block type="maze_move">
            <title name="DIR">moveForward</title>
          </block>
          <block type="maze_move">
            <title name="DIR">moveBackward</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="maze_nectar"/>
          <block type="maze_honey"/>
        </category>
        <category name="Loops">
          <block type="maze_untilBlocked"/>
        </category>
        <category name="Conditionals">
          <block type="bee_ifNectarAmount">
            <title name="ARG1">nectarRemaining</title>
            <title name="OP">&gt;</title>
            <title name="ARG2">0</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
        <category name="Math">
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation/>
            <title name="NAME">do something</title>
          </block>
        </category>
      </xml>
    </toolbox_blocks>
    <recommended_blocks>
      <xml/>
    </recommended_blocks>
    <solution_blocks>
      <xml>
        <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">do something</title>
          <statement name="STACK">
            <block type="maze_nectar">
              <next>
                <block type="bee_ifNectarAmount">
                  <title name="ARG1">nectarRemaining</title>
                  <title name="OP">&gt;</title>
                  <title name="ARG2">0</title>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                      <mutation name="do something"/>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </statement>
        </block>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="procedures_callnoreturn" movable="false" next_connection_disabled="true">
              <mutation name="do something"/>
            </block>
          </next>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>