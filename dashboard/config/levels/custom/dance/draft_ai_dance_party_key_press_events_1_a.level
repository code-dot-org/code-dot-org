<Dancelab>
  <config><![CDATA[{
  "game_id": 63,
  "created_at": "2023-10-20T22:25:59.000Z",
  "level_num": "custom",
  "user_id": 182,
  "properties": {
    "uses_preview": "true",
    "skin": "dance",
    "helper_libraries": [
      "DanceLab"
    ],
    "hide_animation_mode": "true",
    "show_type_hints": "true",
    "use_modal_function_editor": "false",
    "embed": "false",
    "instructions_important": "false",
    "submittable": "false",
    "is_k1": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "include_shared_functions": "false",
    "free_play": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "false",
    "pause_animations_by_default": "false",
    "hide_custom_blocks": "true",
    "use_default_sprites": "false",
    "block_pool": "Dancelab",
    "preload_asset_list": [
      "https://curriculum.code.org/images/DancePartyLoading.gif",
      "https://curriculum.code.org/images/sprites/dance_20191106/shark_36.png",
      "https://curriculum.code.org/images/sprites/dance_20191106/shark_37.png",
      "https://curriculum.code.org/images/sprites/dance_20191106/shark_38.png",
      "https://curriculum.code.org/images/sprites/dance_20191106/shark_39.png",
      "https://curriculum.code.org/images/sprites/dance_20191106/frog_20.png",
      "https://curriculum.code.org/images/sprites/dance_20191106/frog_21.png",
      "https://curriculum.code.org/images/sprites/dance_20191106/frog_22.png",
      "https://curriculum.code.org/images/sprites/dance_20191106/frog_23.png"
    ],
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"dance_callout_02\",\r\n  \"callout_text\": \"Add this block to your program!\",\r\n  \"element_id\": \".blocklyFlyout [data-id=\\\"3\\\"]\",\r\n  \"on\": \"\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": false,\r\n    \"dropletPaletteCategory\": \"\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left center\",\r\n    \"at\": \"right center\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "parent_level_id": 14644,
    "name_suffix": "_a",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"Still stuck? Watch the events video again to learn how they work. \",\"hint_id\":\"hint1\",\"hint_type\":\"general\",\"hint_path\":\"\",\"hint_video\":\"\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/d1a7ab170ede3afb37c039341ea273b1/draft_ai_dance_party_key_press_events_1.mp3\"},{\"hint_class\":null,\"hint_markdown\":\"Here’s an example of what your code could look like. <xml>\\n<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\">\\n\\n  <block type=\\\"Dancelab_whenKey\\\" id=\\\"*R3Us3z5;rM#sBE?1zjX\\\" deletable=\\\"false\\\" x=\\\"19\\\" y=\\\"221\\\">\\n    <field name=\\\"KEY\\\">\\\"up\\\"</field>\\n    <next>\\n      <block type=\\\"Dancelab_doMoveEachLR\\\" id=\\\"*hCDocpHXqlku@f[[rK=\\\">\\n        <field name=\\\"GROUP\\\">\\\"BEAR\\\"</field>\\n        <field name=\\\"MOVE\\\">MOVES.Dab</field>\\n        <field name=\\\"DIR\\\">-1</field>\\n      </block>\\n    </next>\\n  </block>\\n</xml>\",\"hint_id\":\"hint2\",\"hint_type\":\"general\",\"hint_path\":\"\",\"hint_video\":\"\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/ee3191879a96fbffdc6f9cef0651a8b6/draft_ai_dance_party_key_press_events_1.mp3\"}]",
    "default_song": "levitating_dualipa",
    "video_key": "hoc_dance_events_2019",
    "encrypted": "false",
    "mini_rubric": "false",
    "long_instructions": "*Now you can make the dancer move when you want!*\r\n\r\n- Attach <code style=\"color:white; background-color:#7435b2\">sprites do dance move</code> to the <code style=\"color:white; background-color:#00bc3e\">when up pressed</code> event. \r\n- Make sure to press the <code style=\"color:white; background-color:#FFBD46\">▲</code> button or your “up arrow” key after clicking <code style=\"color:white; background-color:#FFBD46\">Run</code>. \r\n\r\n",
    "validation_enabled": "false",
    "hide_pause_button": "false",
    "soft_buttons": [
      "leftButton",
      "rightButton",
      "upButton",
      "downButton"
    ],
    "validation_code": "//after 1 measure, make sure there is a sprite. if not, fail immediately\r\nif (nativeAPI.getTime(\"measures\") > 1) {\r\n  if (sprites.length === 0) {\r\n    nativeAPI.fail(\"danceFeedbackNeedNewDancer\");\r\n  }\r\n}\r\n\r\n//go through all sprites\r\nsprites.forEach(function(sprite, index) {\r\n  var currentAnimation=sprite.getAnimationLabel();\r\n  var previousAnimation=World.validationState[index];\r\n  if (currentAnimation!=previousAnimation) {\r\n    if (previousAnimation == 'anim0') {\r\n      //pass, but not right away\r\n      World.validationState.shouldPass = true;\r\n    }\r\n  }\r\n  //store previous animation\r\n  World.validationState[index] = currentAnimation;\r\n});\r\n\r\n\r\nif (nativeAPI.getTime(\"measures\") > 3){\r\n  if(World.validationState.shouldPass){\r\n    nativeAPI.pass();\r\n  }\r\n  else if (World.keysPressed.size > 0){\r\n    nativeAPI.fail(\"danceFeedbackPressedKey\");\r\n  } else {\r\n    nativeAPI.fail(\"danceFeedbackDidntPress\");\r\n  }\r\n}",
    "short_instructions": "Attach <code style=\"color:white; background-color:#7435b2\">sprites do dance move</code> to the <code style=\"color:white; background-color:#00bc3e\">when up pressed</code> event. "
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2023-10-20T22:25:59.784+00:00\",\"changed\":[\"cloned from \\\"draft_ai_dance_party_key_press_events_1\\\"\"],\"cloned_from\":\"draft_ai_dance_party_key_press_events_1\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml xmlns="https://developers.google.com/blockly/xml">
        <block type="Dancelab_whenSetup" id="j$yrO^C*jfX*iuc~Z*Ev" deletable="false" movable="false" x="16" y="16">
          <statement name="DO">
            <block type="Dancelab_makeAnonymousDanceSprite" id="28RG2iM]{[2:51XLXeF}">
              <field name="COSTUME">"BEAR"</field>
              <field name="LOCATION">{x: 200, y: 200}</field>
            </block>
          </statement>
        </block>
        <block type="Dancelab_whenKey" id="*R3Us3z5;rM#sBE?1zjX" deletable="false" x="19" y="221">
          <field name="KEY">"up"</field>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <block type="Dancelab_whenKey" id="{;e[WB=LDmM:JwaT9[ny" x="27" y="22">
          <field name="KEY">"up"</field>
        </block>
        <block type="Dancelab_makeAnonymousDanceSprite" id="?HY,i)c_^8M0NKLrvWQ#" x="20" y="114">
          <field name="COSTUME">"BEAR"</field>
          <field name="LOCATION">{x: 200, y: 200}</field>
        </block>
        <block type="Dancelab_doMoveEachLR" id="*hCDocpHXqlku@f[[rK=" x="18" y="224">
          <field name="GROUP">"BEAR"</field>
          <field name="MOVE">MOVES.Dab</field>
          <field name="DIR">-1</field>
        </block>
      </xml>
    </toolbox_blocks>
  </blocks>
</Dancelab>