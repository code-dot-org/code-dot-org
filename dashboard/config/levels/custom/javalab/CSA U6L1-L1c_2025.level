<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:15:20.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Look at this project example. What are some of its characteristics and features?\r\n\r\n*While this is an example of a project for this unit, it is not representative of the only way you can approach or develop the project.*",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "FriendsRunner.java": {
        "text": "public class FriendsRunner {\n  public static void main(String[] args) {\n    \n    String namesFile = \"names.txt\";\n    String jobsFile = \"jobs.txt\";\n    String traitsFile = \"traits.txt\";\n    String enjoysFile = \"enjoys.txt\";\n    String favoritesFile = \"favorites.txt\";\n\n    FriendGenerator friends = new FriendGenerator(namesFile, jobsFile, traitsFile, enjoysFile, favoritesFile);\n    friends.prompt();\n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "FriendGenerator.java": {
        "text": "import java.util.ArrayList;\nimport java.util.Scanner;\n\n/*\n* Generates a random friend\n*/\npublic class FriendGenerator {\n\n  private ArrayList<String> names;      // The list of names to choose from\n  private ArrayList<String> jobs;       // The list of jobs to choose from\n  private ArrayList<String> traits;     // The list of traits to choose from\n  private ArrayList<String> enjoys;     // The list of things a friend can enjoy\n  private ArrayList<String> favorites;  // The list of favorites a friend has\n\n  /*\n   * Initializes the names, jobs, traits, enjoys, and favorites lists to contain the data from the specified text files\n   */\n  public FriendGenerator(String namesFile, String jobsFile, String traitsFile, String enjoysFile, String favoritesFile) {\n    this.names = FileReader.toStringList(namesFile);\n    this.jobs = FileReader.toStringList(jobsFile);\n    this.traits = FileReader.toStringList(traitsFile);\n    this.enjoys = FileReader.toStringList(enjoysFile);\n    this.favorites = FileReader.toStringList(favoritesFile);\n  }\n\n  /*\n   * Prompts the user to determine if they want to generate a new friend\n   */\n  public void prompt() {\n    Scanner input = new Scanner(System.in);\n    String choice = \"yes\";\n    \n    while (choice.equals(\"yes\") || choice.equals(\"y\")) {\n      String currentFriend = getOption(names);\n      String currentIntro = getCurrentIntro(currentFriend);\n      System.out.println(currentIntro);\n      \n      System.out.print(\"Would you like to generate a friend for \" + currentFriend + \"? \");\n      choice = input.next();\n      \n      if (choice.equals(\"yes\") || choice.equals(\"y\")) {\n        System.out.println(\"\\n\"+ createFriend(currentFriend) + \"\\n\");\n      }\n    }\n    \n    input.close();\n    System.out.println(\"Goodbye!\");\n  }\n\n  /*\n   * Returns a String containing an introduction about the current friend\n   */\n  public String getCurrentIntro(String name) {\n    String currentJob = getOption(jobs);\n    String currentArticle = TextProcessor.getArticle(currentJob);\n    String currentTrait = getOption(traits);\n    String currentEnjoys = getOption(enjoys);\n  \n    String currentIntro = name + \" is \" + currentArticle + \" \" + currentJob + \" who is \" + currentTrait + \" and is often \" + currentEnjoys + \".\";\n    return currentIntro;\n  }\n\n  /*\n   * Returns a String containing the new friend that is generated for\n   * the current friend with their favorite thing to do together\n   */\n  public String createFriend(String currentFriend) {\n    String currentName = getOption(names);\n    String currentFavorite = getOption(favorites);\n  \n    String text = currentFriend + \" and \" + currentName + \" are best friends.\\n\";\n    text = text + \"Their favorite thing to do together is \" + currentFavorite + \".\";\n  \n    return text;\n  }\n\n  /*\n   * Returns a random option from the specified list of options\n   */\n  public String getOption(ArrayList<String> options) {\n    int randomIndex = (int)(Math.random() * options.size());\n    return options.get(randomIndex);\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "TextProcessor.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Analyzes and processes text\n */\npublic class TextProcessor {\n\n  private String filename;              // The file containing the text\n  private ArrayList<String> textList;   // The list of text from the file\n\n  /*\n   * Constructor to create a TextProcessor with the specified filename\n   */\n  public TextProcessor(String filename) {\n    this.filename = filename;\n    textList = FileReader.toStringList(filename);\n  }\n\n  /*\n   * Returns the textList\n   */\n  public ArrayList<String> getTextList() {\n    return textList;\n  }\n\n  /*\n   * Changes the file to analyze and process and updates the textList\n   */\n  public void changeFile(String filename) {\n    this.filename = filename;\n    textList = FileReader.toStringList(filename);\n  }\n\n  /*\n   * Changes the textList to the newTextList\n   */\n  public void setTextList(ArrayList<String> newTextList) {\n    textList = newTextList;\n  }\n\n  /*\n   * Returns the article based on whether the word starts with a vowel\n   */\n  public static String getArticle(String word) {\n    String firstLetter = word.substring(0, 1);\n    String[] vowels = {\"A\", \"E\", \"I\", \"O\", \"U\"};\n\n    String article = \"a\";\n\n    for (int index = 0; index < vowels.length; index++) {\n        if (firstLetter.equals(vowels[index])) {\n            article = \"an\";\n        }\n    }\n\n    return article;\n  }\n\n  /*\n   * Returns a String containing the text in textList\n   */\n  public String toString() {\n    String text = \"\";\n\n    for (String value : textList) {\n      text = text + value + \"\\n\";\n    }\n\n    return text;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static ArrayList<String> toStringList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    return temp;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static ArrayList<Integer> toIntList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    ArrayList<Integer> data = new ArrayList<Integer>();\n\n    for (int index = 0; index < temp.size(); index++) {\n      String currentValue = temp.get(index);\n      data.add(Integer.parseInt(currentValue));\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  public static ArrayList<Double> toDoubleList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    ArrayList<Double> data = new ArrayList<Double>();\n\n    for (int index = 0; index < temp.size(); index++) {\n      String currentValue = temp.get(index);\n      data.add(Double.parseDouble(currentValue));\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      },
      "names.txt": {
        "text": "Liam\nNoah\nOliver\nElijah\nWilliam\nJames\nBenjamin\nLucas\nHenry\nAlexander\nMason\nMichael\nEthan\nDaniel\nJacob\nLogan\nJackson\nLevi\nSebastian\nMateo\nJack\nOwen\nTheodore\nAiden\nSamuel\nJoseph\nJohn\nDavid\nWyatt\nMatthew\nLuke\nAsher\nCarter\nJulian\nGrayson\nLeo\nJayden\nGabriel\nIsaac\nLincoln\nAnthony\nHudson\nDylan\nEzra\nThomas\nCharles\nChristopher\nJaxon\nMaverick\nJosiah\nIsaiah\nAndrew\nElias\nJoshua\nNathan\nCaleb\nRyan\nAdrian\nMiles\nEli\nNolan\nChristian\nAaron\nCameron\nEzekiel\nColton\nLuca\nLandon\nHunter\nJonathan\nSantiago\nAxel\nEaston\nCooper\nJeremiah\nAngel\nRoman\nConnor\nJameson\nRobert\nGreyson\nJordan\nIan\nCarson\nJaxson\nLeonardo\nNicholas\nDominic\nAustin\nEverett\nBrooks\nXavier\nKai\nJose\nParker\nAdam\nJace\nWesley\nKayden\nSilas\nBennett\nDeclan\nWaylon\nWeston\nEvan\nEmmett\nMicah\nRyder\nBeau\nDamian\nBrayden\nGael\nRowan\nHarrison\nBryson\nSawyer\nAmir\nKingston\nJason\nGiovanni\nVincent\nAyden\nChase\nMyles\nDiego\nNathaniel\nLegend\nJonah\nRiver\nTyler\nCole\nBraxton\nGeorge\nMilo\nZachary\nAshton\nLuis\nJasper\nKaiden\nAdriel\nGavin\nBentley\nCalvin\nZion\nJuan\nMaxwell\nMax\nRyker\nCarlos\nEmmanuel\nJayce\nLorenzo\nIvan\nJude\nAugust\nKevin\nMalachi\nElliott\nRhett\nArcher\nKarter\nArthur\nLuka\nElliot\nThiago\nBrandon\nCamden\nJustin\nJesus\nMaddox\nKing\nTheo\nEnzo\nMatteo\nEmiliano\nDean\nHayden\nFinn\nBrody\nAntonio\nAbel\nAlex\nTristan\nGraham\nZayden\nJudah\nXander\nMiguel\nAtlas\nMessiah\nBarrett\nTucker\nTimothy\nAlan\nEdward\nLeon\nDawson\nEric\nAce\nVictor\nAbraham\nNicolas\nJesse\nCharlie\nPatrick\nWalker\nJoel\nRichard\nBeckett\nBlake\nAlejandro\nAvery\nGrant\nPeter\nOscar\nMatias\nAmari\nLukas\nAndres\nArlo\nColt\nAdonis\nKyrie\nSteven\nFelix\nPreston\nMarcus\nHolden\nEmilio\nRemington\nJeremy\nKaleb\nBrantley\nBryce\nMark\nKnox\nIsrael\nPhoenix\nKobe\nNash\nGriffin\nCaden\nKenneth\nKyler\nHayes\nJax\nRafael\nBeckham\nJavier\nMaximus\nSimon\nPaul\nOmar\nKaden\nKash\nLane\nBryan\nRiley\nZane\nLouis\nAidan\nPaxton\nMaximiliano\nKarson\nCash\nCayden\nEmerson\nTobias\nRonan\nBrian\nDallas\nBradley\nJorge\nWalter\nJosue\nKhalil\nDamien\nJett\nKairo\nZander\nAndre\nCohen\nCrew\nHendrix\nColin\nChance\nMalakai\nClayton\nDaxton\nMalcolm\nLennox\nMartin\nJaden\nKayson\nBodhi\nFrancisco\nCody\nErick\nKameron\nAtticus\nDante\nJensen\nCruz\nFinley\nBrady\nJoaquin\nAnderson\nGunner\nMuhammad\nZayn\nDerek\nRaymond\nKyle\nAngelo\nReid\nSpencer\nNico\nJaylen\nJake\nPrince\nManuel\nAli\nGideon\nStephen\nEllis\nOrion\nRylan\nEduardo\nMario\nRory\nCristian\nOdin\nTanner\nJulius\nCallum\nSean\nKane\nRicardo\nTravis\nWade\nWarren\nFernando\nTitus\nLeonel\nEdwin\nCairo\nCorbin\nDakota\nIsmael\nColson\nKillian\nMajor\nTate\nGianni\n\nElian\nRemy\nLawson\nNiko\nNasir\nKade\nArmani\nEzequiel\nMarshall\nHector\nDesmond\nKason\nGarrett\nJared\nCyrus\nRussell\nCesar\nTyson\nMalik\nDonovan\nJaxton\nCade\nRomeo\nNehemiah\nSergio\nIker\nCaiden\nJay\nPablo\nDevin\nJeffrey\nOtto\nKamari\nRonin\nJohnny\nClark\nAri\nMarco\nEdgar\nBowen\nJaiden\nGrady\nZayne\nSullivan\nJayceon\nSterling\nAndy\nConor\nRaiden\nRoyal\nRoyce\nSolomon\nTrevor\nWinston\nEmanuel\nFinnegan\nPedro\nLuciano\nHarvey\nFranklin\nNoel\nTroy\nPrinceton\nJohnathan\nErik\nFabian\nOakley\nRhys\nPorter\nHugo\nFrank\nDamon\nKendrick\nMathias\nMilan\nPeyton\nWilder\nCallan\nGregory\nSeth\nMatthias\nBriggs\nIbrahim\nRoberto\nConner\nQuinn\nKashton\nSage\nSantino\nKolton\nAlijah\nDominick\nZyaire\nApollo\nKylo\nReed\nPhilip\nKian\nShawn\nKaison\nLeonidas\nAyaan\nLucca\nMemphis\nFord\nBaylor\nKyson\nUriel\nAllen\nCollin\nRuben\nArchie\nDalton\nEsteban\nAdan\nForrest\nAlonzo\nIsaias\nLeland\nJase\nDax\nKasen\nGage\nKamden\nMarcos\nJamison\nFrancis\nHank\nAlexis\nTripp\nFrederick\nJonas\nStetson\nCassius\nIzaiah\nEden\nMaximilian\nRocco\nTatum\nKeegan\nAziel\nMoses\nBruce\nLewis\nBraylen\nOmari\nMack\nAugustus\nEnrique\nArmando\nPierce\nMoises\nAsa\nShane\nEmmitt\nSoren\nDorian\nKeanu\nZaiden\nRaphael\nDeacon\nAbdiel\nKieran\nPhillip\nRyland\nZachariah\nCasey\nZaire\nAlbert\nBaker\nCorey\nKylan\nDenver\nGunnar\n\nJayson\nDrew\nCallen\nJasiah\nDrake\nKannon\nBraylon\nSonny\nBo\nMoshe\nHuxley\nQuentin\nRowen\nSantana\nCannon\nKenzo\nWells\nJulio\nNikolai\nConrad\nJalen\nMakai\nBenson\nDerrick\nGerardo\nDavis\nAbram\nMohamed\nRonald\nRaul\nArjun\nDexter\nKaysen\nJaime\nScott\nLawrence\nAriel\nSkyler\nDanny\nRoland\nChandler\nYusuf\nSamson\nCase\nZain\nRoy\nRodrigo\nSutton\nBoone\nSaint\nSaul\nJaziel\nHezekiah\nAlec\nArturo\nJamari\nJaxtyn\nJulien\nKoa\nReece\nLanden\nKoda\nDarius\nSylas\nAres\nKyree\nBoston\nKeith\nTaylor\nJohan\nEdison\nSincere\nWatson\nJerry\nNikolas\nQuincy\nShepherd\nBrycen\nMarvin\nDariel\nAxton\nDonald\nBodie\nFinnley\nOnyx\nRayan\nRaylan\nBrixton\nColby\nShiloh\nValentino\nLayton\nTrenton\nLandyn\nAlessandro\nAhmad\nGustavo\nLedger\nRidge\nAnder\nAhmed\nKingsley\nIssac\nMauricio\nTony\nLeonard\nMohammed\nUriah\nDuke\nKareem\nLucian\nMarcelo\nAarav\nLeandro\nReign\nClay\nKohen\nDennis\nSamir\nErmias\nOtis\nEmir\nNixon\nTy\nSam\nFletcher\nWilson\nDustin\nHamza\nBryant\nFlynn\nLionel\nMohammad\nCason\nJamir\nAden\nDakari\nJustice\nDillon\nLayne\nZaid\nAlden\nNelson\nDevon\nTitan\nChris\nKhari\nZeke\nNoe\nAlberto\nRoger\nBrock\nRex\nQuinton\nAlvin\nCullen\nAzariah\nHarlan\nKellan\nLennon\nMarcel\nKeaton\nMorgan\nRicky\nTrey\nKarsyn\nLangston\nMiller\nChaim\nSalvador\nAmias\nTadeo\nCurtis\nLachlan\nAmos\nAnakin\nKrew\nTomas\nJefferson\n\nYosef\nBruno\nKorbin\nAugustine\nCayson\nMathew\nVihaan\nJamie\nClyde\nBrendan\nJagger\nCarmelo\nHarry\nNathanael\nMitchell\nDarren\nRay\nJedidiah\nJimmy\nLochlan\nBellamy\nEddie\nRayden\nReese\nStanley\nJoe\nHouston\nDouglas\nVincenzo\nCasen\nEmery\nJoziah\nLeighton\nMarcellus\nAtreus\nAron\nHugh\nMusa\nTommy\nAlfredo\nJunior\nNeil\nWestley\nBanks\nEliel\nMelvin\nMaximo\nBriar\nColten\nLance\nNova\nTrace\nAxl\nRamon\nVicente\nBrennan\nCaspian\nRemi\nDeandre\nLegacy\nLee\nValentin\nBen\nLouie\nWestin\nWayne\nBenicio\nGrey\nZayd\nGatlin\nMekhi\nOrlando\nBjorn\nHarley\nAlonso\nRio\nAldo\nByron\nEliseo\nErnesto\nTalon\nThaddeus\nBrecken\nKace\nKellen\nEnoch\nKiaan\nLian\nCreed\nRohan\nCallahan\nJaxxon\nOcean\nCrosby\nDash\nGary\nMylo\nIra\nMagnus\nSalem\nAbdullah\nKye\nTru\nForest\nJon\nMisael\nMadden\nBraden\nCarl\nHassan\nEmory\nKristian\nAlaric\nAmbrose\nDario\nAllan\nBode\nBoden\nJuelz\nKristopher\nGenesis\nIdris\nAmeer\nAnders\nDarian\nKase\nAryan\nDane\nGuillermo\nElisha\nJakobe\nThatcher\nEugene\nIshaan\nLarry\nWesson\nYehuda\nAlvaro\nBobby\nBronson\nDilan\nKole\nKyro\nTristen\nBlaze\nBrayan\nJadiel\nKamryn\nDemetrius\nMaurice\nArian\nKabir\nRocky\nRudy\nRandy\nRodney\nYousef\nFelipe\nRobin\nAydin\nDior\nKaiser\nVan\nBrodie\nLondon\nEithan\nStefan\nUlises\nCamilo\nBranson\nJakari\nJudson\nYahir\nZavier\nDamari\nJakob\nJaxx\nBentlee\n\nCain\nNiklaus\nRey\nZahir\nAries\nBlaine\nKyng\nCastiel\nHenrik\nJoey\nKhalid\nBear\nGraysen\nJair\nKylen\nDarwin\nAlfred\nAyan\nKenji\nZakai\nAvi\nCory\nFisher\nJacoby\nOsiris\nHarlem\nJamal\nSantos\nWallace\nBrett\nFox\nLeif\nMaison\nReuben\nAdler\nZev\nCalum\nKelvin\nZechariah\nBridger\nMccoy\nSeven\nShepard\nAzrael\nLeroy\nTerry\nHarold\nMac\nMordechai\nAhmir\nCal\nFranco\nTrent\nBlaise\nCoen\nDominik\nMarley\nDavion\nJeremias\nRiggs\nJones\nWill\nDamir\nDangelo\nCanaan\nDion\nJabari\nLandry\nSalvatore\nKody\nHakeem\nTruett\nGerald\nLyric\nGordon\nJovanni\nKamdyn\nAlistair\nCillian\nFoster\nTerrance\nMurphy\nZyair\nCedric\nRome\nAbner\nColter\nDayton\nJad\nXzavier\nRene\nVance\nDuncan\nFrankie\nBishop\nDavian\nEverest\nHeath\nJaxen\nMarlon\nMaxton\nReginald\nHarris\nJericho\nKeenan\nKorbyn\nWes\nEliezer\nJeffery\nKalel\nKylian\nTurner\nWillie\nRogelio\nEphraim\nOlivia\nEmma\nAva\nCharlotte\nSophia\nAmelia\nIsabella\nMia\nEvelyn\nHarper\nCamila\nGianna\nAbigail\nLuna\nElla\nElizabeth\nSofia\nEmily\nAvery\nMila\nScarlett\nEleanor\nMadison\nLayla\nPenelope\nAria\nChloe\nGrace\nEllie\nNora\nHazel\nZoey\nRiley\nVictoria\nLily\nAurora\nViolet\nNova\nHannah\nEmilia\nZoe\nStella\nEverly\nIsla\nLeah\nLillian\nAddison\nWillow\nLucy\nPaisley\nNatalie\nNaomi\nEliana\nBrooklyn\nElena\nAubrey\nClaire\nIvy\nKinsley\nAudrey\nMaya\nGenesis\nSkylar\nBella\nAaliyah\nMadelyn\nSavannah\nAnna\nDelilah\nSerenity\nCaroline\nKennedy\nValentina\nRuby\nSophie\nAlice\nGabriella\nSadie\nAriana\nAllison\nHailey\nAutumn\nNevaeh\nNatalia\nQuinn\nJosephine\nSarah\nCora\nEmery\nSamantha\nPiper\nLeilani\nEva\nEverleigh\nMadeline\nLydia\nJade\nPeyton\nBrielle\nAdeline\nVivian\nRylee\nClara\nRaelynn\nMelanie\nMelody\nJulia\nAthena\nMaria\nLiliana\nHadley\nArya\nRose\nReagan\nEliza\nAdalynn\nKaylee\nLyla\nMackenzie\nAlaia\nIsabelle\nCharlie\nArianna\nMary\nRemi\nMargaret\nIris\nParker\nXimena\nEden\nAyla\nKylie\nElliana\nJosie\nKatherine\nFaith\nAlexandra\nEloise\nAdalyn\nAmaya\nJasmine\nAmara\nDaisy\nReese\nValerie\nBrianna\nCecilia\nAndrea\nSummer\nValeria\nNorah\nAriella\nEsther\nAshley\nEmerson\nAubree\nIsabel\nAnastasia\nRyleigh\nKhloe\nTaylor\nLondyn\nLucia\nEmersyn\nCallie\nSienna\nBlakely\nKehlani\nGenevieve\nAlina\nBailey\nJuniper\nMaeve\nMolly\nHarmony\nGeorgia\nMagnolia\nCatalina\nFreya\nJuliette\nSloane\nJune\nSara\nAda\nKimberly\nRiver\nEmber\nJuliana\nAliyah\nMillie\nBrynlee\nTeagan\nMorgan\nJordyn\nLondon\nAlaina\nOlive\nRosalie\nAlyssa\nAriel\nFinley\nArabella\nJournee\nHope\nLeila\nAlana\nGemma\nVanessa\nGracie\nNoelle\nMarley\nElise\nPresley\nKamila\nZara\nAmy\nKayla\nPayton\nBlake\nRuth\nAlani\nAnnabelle\nSage\nAspen\nLaila\nLila\nRachel\nTrinity\nDaniela\nAlexa\nLilly\nLauren\nElsie\nMargot\nAdelyn\nZuri\nBrooke\nSawyer\nLilah\nLola\nSelena\nMya\nSydney\nDiana\nAna\nVera\nAlayna\nNyla\nElaina\nRebecca\nAngela\nKali\nAlivia\nRaegan\nRowan\nPhoebe\nCamilla\nJoanna\nMalia\nVivienne\nDakota\nBrooklynn\nEvangeline\nCamille\nJane\nNicole\nCatherine\nJocelyn\nJulianna\nLena\nLucille\nMckenna\nPaige\nAdelaide\nCharlee\nMariana\nMyla\nMckenzie\nTessa\nMiriam\nOakley\nKailani\nAlayah\nAmira\nAdaline\nPhoenix\nMilani\nAnnie\nLia\nAngelina\nHarley\nCali\nMaggie\nHayden\nLeia\nFiona\nBriella\nJourney\nLennon\nSaylor\nJayla\nKaia\nThea\nAdriana\nMariah\nJuliet\nOaklynn\nKiara\nAlexis\nHaven\nAniyah\nDelaney\nGracelynn\nKendall\nWinter\nLilith\nLogan\nAmiyah\nEvie\nAlexandria\nGracelyn\nGabriela\nSutton\nHarlow\nMadilyn\nMakayla\nEvelynn\nGia\nNina\nAmina\nGiselle\nBrynn\nBlair\nAmari\nOctavia\nMichelle\nTalia\nDemi\nAlaya\nKaylani\n\nIzabella\nFatima\nTatum\nMakenzie\nLilliana\nArielle\nPalmer\nMelissa\nWilla\nSamara\nDestiny\nDahlia\nCeleste\nAinsley\nRylie\nReign\nLaura\nAdelynn\nGabrielle\nRemington\nWren\nBrinley\nAmora\nLainey\nCollins\nLexi\nAitana\nAlessandra\nKenzie\nRaelyn\nElle\nEverlee\nHaisley\nHallie\nWynter\nDaleyza\nGwendolyn\nPaislee\nAriyah\nVeronica\nHeidi\nAnaya\nCataleya\nKira\nAvianna\nFelicity\nAylin\nMiracle\nSabrina\nLana\nOphelia\nElianna\nRoyalty\nMadeleine\nEsmeralda\nJoy\nKalani\nEsme\nJessica\nLeighton\nAriah\nMakenna\nNylah\nViviana\nCamryn\nCassidy\nDream\nLuciana\nMaisie\nStevie\nKate\nLyric\nDaniella\nAlicia\nDaphne\nFrances\nCharli\nRaven\nParis\nNayeli\nSerena\nHeaven\nBianca\nHelen\nHattie\nAverie\nMabel\nSelah\nAllie\nMarlee\nKinley\nRegina\nCarmen\nJennifer\nJordan\nAlison\nStephanie\nMaren\nKayleigh\nAngel\nAnnalise\nJacqueline\nBraelynn\nEmory\nRosemary\nScarlet\nAmanda\nDanielle\nEmelia\nRyan\nCarolina\nAstrid\nKensley\nShiloh\nMaci\nFrancesca\nRory\nCeline\nKamryn\nZariah\nLiana\nPoppy\nMaliyah\nKeira\nSkyler\nNoa\nSkye\nNadia\nAddilyn\nRosie\nEve\nSarai\nEdith\nJolene\nMaddison\nMeadow\nCharleigh\nMatilda\nElliott\nMadelynn\nHolly\nLeona\nAzalea\nKatie\nMira\nAri\nKaitlyn\nDanna\nCameron\nKyla\nBristol\nKora\nArmani\nNia\nMalani\nDylan\nRemy\nMaia\nDior\nLegacy\nAlessia\nShelby\nMaryam\nSylvia\n\nYaretzi\nLorelei\nMadilynn\nAbby\nHelena\nJimena\nElisa\nRenata\nAmber\nAviana\nCarter\nEmmy\nHaley\nAlondra\nElaine\nErin\nApril\nEmely\nImani\nKennedi\nLorelai\nHanna\nKelsey\nAurelia\nColette\nJaliyah\nKylee\nMacie\nAisha\nDorothy\nCharley\nKathryn\nAdelina\nAdley\nMonroe\nSierra\nAilani\nMiranda\nMikayla\nAlejandra\nAmirah\nJada\nJazlyn\nJenna\nJayleen\nBeatrice\nKendra\nLyra\nNola\nEmberly\nMckinley\nMyra\nKatalina\nAntonella\nZelda\nAlanna\nAmaia\nPriscilla\nBriar\nKaliyah\nItzel\nOaklyn\nAlma\nMallory\nNovah\nAmalia\nFernanda\nAlia\nAngelica\nElliot\nJustice\nMae\nCecelia\nGloria\nAriya\nVirginia\nCheyenne\nAleah\nJemma\nHenley\nMeredith\nLeyla\nLennox\nEnsley\nZahra\nReina\nFrankie\nLylah\nNalani\nReyna\nSaige\nIvanna\nAleena\nEmerie\nIvory\nLeslie\nAlora\nAshlyn\nBethany\nBonnie\nSasha\nXiomara\nSalem\nAdrianna\nDayana\nClementine\nKarina\nKarsyn\nEmmie\nJulie\nJulieta\nBriana\nCarly\nMacy\nMarie\nOaklee\nChristina\nMalaysia\nEllis\nIrene\nAnne\nAnahi\nMara\nRhea\nDavina\nDallas\nJayda\nMariam\nSkyla\nSiena\nElora\nMarilyn\nJazmin\nMegan\nRosa\nSavanna\nAllyson\nMilan\nCoraline\nJohanna\nMelany\nChelsea\nMichaela\nMelina\nAngie\nCassandra\nYara\nKassidy\nLiberty\nLilian\nAvah\nAnya\nLaney\nNavy\nOpal\nAmani\nZaylee\nMina\nSloan\nRomina\nAshlynn\nAliza\nLiv\nMalaya\nBlaire\nJanelle\nKara\nAnalia\nHadassah\nHayley\nKarla\nChaya\nCadence\nKyra\nAlena\nEllianna\nKatelyn\nKimber\nLaurel\nLina\nCapri\nBraelyn\nFaye\nKamiyah\nKenna\nLouise\nCalliope\nKaydence\nNala\nTiana\nAileen\nSunny\nZariyah\nMilana\nGiuliana\nEileen\nElodie\nRayna\nMonica\nGalilea\nJourni\nLara\nMarina\nAliana\nHarmoni\nJamie\nHolland\nEmmalyn\nLauryn\nChanel\nTinsley\nJessie\nLacey\nElyse\nJaniyah\nJolie\nEzra\nMarleigh\nRoselyn\nLillie\nLouisa\nMadisyn\nPenny\nKinslee\nTreasure\nZaniyah\nEstella\nJaylah\nKhaleesi\nAlexia\nDulce\nIndie\nMaxine\nWaverly\nGiovanna\nMiley\nSaoirse\nEstrella\nGreta\nRosalia\nMylah\nTeresa\nBridget\nKelly\nAdalee\nAubrie\nLea\nHarlee\nAnika\nItzayana\nHana\nKaisley\nMikaela\nNaya\nAvalynn\nMargo\nSevyn\nFlorence\nKeilani\nLyanna\nJoelle\nKataleya\nRoyal\nAveri\nKallie\nWinnie\nBaylee\nMartha\nPearl\nAlaiya\nRayne\nSylvie\nBrylee\nJazmine\nRyann\nKori\nNoemi\nHaylee\nJulissa\nCelia\nLaylah\nRebekah\nRosalee\nAya\nBria\nAdele\nAubrielle\nTiffany\nAddyson\nKai\nBellamy\nLeilany\nPrincess\nChana\nEstelle\nSelene\nSky\nDani\nThalia\nEllen\nRivka\nAmelie\nAndi\nKynlee\nRaina\nVienna\nAlianna\nLivia\nMadalyn\nMercy\nNovalee\nRamona\nVada\nBerkley\nGwen\nPersephone\nMilena\nPaula\nClare\nKairi\nLinda\nPaulina\nKamilah\nAmoura\nHunter\nIsabela\nKaren\nMarianna\nSariyah\nTheodora\nAnnika\nKyleigh\nNellie\nScarlette\nKeyla\nKailey\nMavis\n\nLilianna\nRosalyn\nSariah\nTori\nYareli\nAubriella\nBexley\nBailee\nJianna\nKeily\nAnnabella\nAzariah\nDenisse\nPromise\nAugust\nHadlee\nHalle\nFallon\nOakleigh\nZaria\nJaylin\nPaisleigh\nCrystal\nIla\nAliya\nCynthia\nGiana\nMaleah\nRylan\nAniya\nDenise\nEmmeline\nScout\nSimone\nNoah\nZora\nMeghan\nLandry\nAinhoa\nLilyana\nNoor\nBelen\nBrynleigh\nCleo\nMeilani\nKarter\nAmaris\nFrida\nIliana\nVioleta\nAddisyn\nNancy\nDenver\nLeanna\nBraylee\nKiana\nWrenley\nBarbara\nKhalani\nAspyn\nEllison\nJudith\nRobin\nValery\nAila\nDeborah\nCara\nClarissa\nIyla\nLexie\nAnais\nKaylie\nNathalie\nAlisson\nDella\nAddilynn\nElsa\nZoya\nLayne\nMarlowe\nJovie\nKenia\nSamira\nJaylee\nJenesis\nEtta\nShay\nAmayah\nAvayah\nEgypt\nFlora\nRaquel\nWhitney\nZola\nGiavanna\nRaya\nVeda\nHalo\nPaloma\nNataly\nWhitley\nDalary\nDrew\nGuadalupe\nKamari\nEsperanza\nLoretta\nMalayah\nNatasha\nStormi\nAnsley\nCarolyn\nCorinne\nPaola\nBrittany\nEmerald\nFreyja\nZainab\nArtemis\nJillian\nKimora\nZoie\nAislinn\nEmmaline\nAyleen\nQueen\nJaycee\nMurphy\nNyomi\nElina\nHadleigh\nMarceline\nMarisol\nYasmin\nZendaya\nChandler\nEmani\nJaelynn\nKaiya\nNathalia\nViolette\nJoyce\nPaityn\nElisabeth\nEmmalynn\nLuella\nYamileth\nAarya\nLuisa\nZhuri\nAraceli\nHarleigh\nMadalynn\nMelani\nLaylani\nMagdalena\nMazikeen\nBelle\nKadence",
        "isVisible": true,
        "tabOrder": 4
      },
      "jobs.txt": {
        "text": "Truck Driver\nRegistered Nurse\nRetail Sales Worker\nRetail Salespersons\nSoftware Developers\nAstronaut\nBasket weaver\nCartographer\nCustomer Service Representative\nMarketing Manager\nSupervisor of Food Preparation and Serving Workers\nSupervisor of Office and Administrative Support Workers\nComputer User Support Specialist\nComputer Systems Analyst\nNetwork and Computer Systems Administrator\nWeb Developer\nManagement Analyst\nMedical and Health Services Manager\nAccountant\nInformation Technology Project Manager\nSales Manager\nIndustrial Engineer\nExecutive Secretarie\nExecutive Administrative Assistant\nSales Representative\nMaintenance and Repair Worker\nSocial and Human Service Assistant\nEntrepreneur\nNursing Assistant\nFast Food Worker\nLicensed Practical nurse\nLicensed Vocational Nurse\nGeneral and Operations Manager\nBookkeeping Clerk\nFinancial Manager\nInsurance Sales Agent\nFinancial Agent\nCritical Care Nurse\nCashier\nComputer Systems Architect\nMarket Research Analyst\nMarketing Specialist\nPhysical Therapist\nMedical Assistant\nFortune Cookie Fortune Writer\nSupervisor of Mechanics\nInformation Security Analyst\nMedical Secretary\nFreight Mover\nSecurity Guard\nFamily and General Practitioner\nMattress Softness Tester\nWeb Developer\nDishwasher\nHotel Clerk\nBus Driver\nSchool Dean Anne Stavney\nRental Boyfriend\nProffessional Stand-in-liner\nSanta Clause\nGhost Hunter\nFBI Agent\nMagician\nWarlock\nShadowhunter",
        "isVisible": true,
        "tabOrder": 5
      },
      "traits.txt": {
        "text": "strong\nmessy\ngentle\nwild\njoyful\nbusy\npatriotic\nneat\npopular\nsuccessful\nprim\nproper\ndainty\nable\nfighter\ntireless\nplain\nan overachiever\nimaginative\nconceited\nexcited\nstudious\ninventive\ncreative\nthrilling\nintelligent\nproud\nfun-loving\ndaring\nbright\nserious\nfunny\nhumorous\nsad\nlazy\nhelpful\ndemanding\nthoughtful\nkeen\nhappy\ndisagreeable\nsimple\nfancy\nplain\nsimple-minded\nfriendly\nadventurous\ntimid\nshy\npitiful\ncooperative\nlovable\nambitious\nquiet\ncurious\nreserved\npleasing\nbossy\nwitty\nenergetic\ncheerful\nsmart\nimpulsive\nhard-working\nindependent\nselfish\nresponsible\nconsiderate\nself-confident\nhumble",
        "isVisible": true,
        "tabOrder": 6
      },
      "enjoys.txt": {
        "text": "arguing just for the sake of arguing\nseeing how things unfold without planning ahead\nseeking adventure or new experiences\nBlaming others for their mistakes\njudging other people\nannoying people on purpose\nbeing unusually angry and irritable\nlosing their temper\none-uping other people's accomplishments\nseeking the approval of others\ntaking things personally\nsleeping\ndancing in the rain\nreading books\nmaking blanket forts\nflirting with someone\ncomplaining about something\nhanging out with friends\nhanging out with their dog\nplaying sports\npracticing violin\ndreaming of becoming a rockstar\ncomplaining about their job\nvolunteering\nhanging out with their family\ncooking something new\nhiking\nmeditating\ndoing paddleboard yoga",
        "isVisible": true,
        "tabOrder": 7
      },
      "favorites.txt": {
        "text": "see a play or musical\nlook for free events in their area\nhave a picnic outside\ntake photographs\ngo camping\nkayaking or canoeing\nvisit an arcade\ngo hiking\nride bicycles\ncosplay\nvisit an escape room\ntake a pilates class\ngo to a concert\nread magazines\nget ice cream\nbuild something\ngo rollerblading or rollerskating\njoin a local sports league\nvisit a botanical garden\nplay shuffleboard\ntie-dye clothing\nsee a live sports game\ngo swimming\nvisit a farmers market\nplay card games\nvisit a jazz cafe\nmake candles\nwatch a musical or play\nplay mini-golf\ngo on a road trip for the day\nshoot a video\nhave a beach day\ngo fishing\nvisit a water park\npot their own plants\nhost a barbecue\ngo running or jogging\nwatch the sunrise or sunset\ngo ice skating\nindoor skydiving\nmeet for breakfast\ngo bowling\nvisit a comedy club\ngo indoor rock climbing\nplant a potted herb garden\nvolunteer at a charity\ngive each other makeovers\nsolve a puzzle\nvisit a pet shop or animal shelter\nhave a board game night\ngo dancing\nparticipate in an outdoor fitness class\nvisit an aquarium\nsing karaoke\nscavenge vintage or thrift shops\nride horses\nmake a charcuterie board\nmeditation\nbinge-watch a tv series\nvisit an observatory or planetarium\ngo paint-balling\npedicures and manicures\nmake homemade ice cream\ngo fishing\nparticipate in their book club\nmake vision boards\nplay dodgeball\nhave a tennis match\nvisit a psychic or fortune teller\nstart a fitness challenge\nplay chess or checkers\nhave a themed party\ngo window shopping\nplan a ski or snowboarding outing\nfind a craft to do on Pinterest\nindoor rock climbing\ncollect flowers, shells or sea glass\nswap clothing\nhave a costume party\nplay laser tag\ngo berry or apple-picking\nlearn a dance\ntry to break a world record\ngo to a drive-in movie\nride scooters\nhold a hula-hooping contest\ngo on a boat ride\nfeed local ducks\nplay lawn games\ngo geocaching\nvisit a bookstore\nplay darts\nredecorate their rooms\nhave a trivia game night\nvisit a cat café\nhost a murder mystery party\ngo stargazing\nmake a homemade facemask\nplay poker\ngo to the movie theater\nrepurpose clothing\nmake music\ncook a dish from their heritage\nplay video games\ncolor their hair with temporary dye\nhave a spa day\nmake a chalk mural\nvisit an amusement park\ndine out at a concept restaurant\nsit in a hot tub\ngo stand-up paddleboarding\nmake jewelry\nroast marshmallows\nplay a prank\ngo to a dog park\nmake ice cream sundaes\nexercise together\ngo bird watching\nlounge at a pool\nplay charades\ndraw or sketch each other\nvisit a museum\nmake their own pizza dough\ngather around a bonfire or campfire\ntake a pottery class\nkick a soccer ball around\ncheck out a viewpoint\nplay trivia games\nsunbathe outdoors\nlisten to music\nmake chocolate-covered berries\ntake the train somewhere\nwork out\ndecorate cookies\ncreate a photo collage\nplay pool or billiards\nvisit a petting zoo\ncreate time capsules\nmake a dessert\nlisten to a podcast\ndecorate mugs\nwrite songs\ngo for a scenic drive\nlearn a new language\ncook a meal\nhave a water balloon fight\nlearn magic tricks\nrefurbish something\nrun a marathon\ncrochet or knit something\nbuild sandcastles\ngo to a zoo\ntry food from another country\nsew something\nvisit an indoor trampoline park\nplay a word game like Scrabble\ntry a new recipe\narrange photo albums\ngo zip lining\nlearn sign language\nbake a cake\nmake flower arrangements\nplan a weekend trip\nmake new smoothie combos\npeople-watch\nvisit a skate park\ngo sightseeing\nvisit a cultural neighborhood\nplay truth or dare\nguess jelly bean flavors as they eat them\nbraid each other's hair\ncamp in the yard\nrelax at a park\nwatch a documentary\nmake their own slime\nstart a business\ncustomize a phone case\ngo kayaking\nwatch funny videos on YouTube\nshoot hoops\nlearn an instrument\nstart a paper mâché project\nfly a kite\nhave a painting party\nmeet for a coffee date\nsign up for a cooking class\nmake cheese or chocolate fondue\nscrapbook\npractice yoga\nlearn magic tricks\nmake paper flowers\nplant vegetable seeds\nhelp a neighbor\nmake bread\ncook a dish from another country\nhave a scavenger hunt\nmake a mosaic craft\nmovie night with snacks\nlook at architecture\npaint a flower pot\nthrow a frisbee around\ngo to afternoon tea\ndrive go-carts\nhave a sleepover\ndecorate cupcakes\nhave a potluck party where each person brings a dish to share",
        "isVisible": true,
        "tabOrder": 8
      }
    },
    "display_name": "Friend Generator",
    "bubble_choice_description": "An example project that generates a random friend.",
    "thumbnail_url": "https://images.code.org/8ede526b52bbaead05a49565d535da44-friends.png",
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:15:20.419+00:00\",\"changed\":[\"cloned from \\\"CSA U6L1-L1c_2023\\\"\"],\"cloned_from\":\"CSA U6L1-L1c_2023\"}]"
}]]></config>
</Javalab>
