<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">WordSorter</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sortWords()</code> method to sort the words in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">wordList</code> in order based on the number at the end of each word. Use a selection, insertion, or merge sort to sort the list.\r\n\r\n   * Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getNumber()</code> method to get the number at the end of each word.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">WordSorter</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">createSentence()</code> method to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> consisting of the words in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">wordList</code> without the numbers at the end of each word.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">WordRunner</code> class,\r\n\r\n1. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sortWords()</code> method and print the updated array.\r\n\r\n2. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">createSentence()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with implementing a sorting algorithm.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/selection-sort",
      "/courses/csa-2023/guides/insertion-sort",
      "/courses/csa-2023/guides/merge-sort"
    ],
    "video_key": "csa_sorting_algorithms",
    "display_name": "Word Sorter",
    "bubble_choice_description": "Sort a list of words based on the numbers at the end of each word to create a sentence from the words.",
    "thumbnail_url": "https://images.code.org/ec58ee6e950e2541f3086145ff83f7cd-writing.png",
    "encrypted_validation": "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\npw==\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "WordRunner.java": {
        "text": "public class WordRunner {\n  public static void main(String[] args) {\n\n    String[] words = {\"is2\", \"sentence4\", \"This1\", \"a3\"};\n\n    System.out.println(\"----------Unsorted Words----------\");\n    System.out.println(WordSorter.wordsToString(words));\n\n    System.out.println(\"\\n----------Sorted Into Sentence----------\");\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the sortWords() method and print the updated array. Then call the\n     * createSentence() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n    \n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "WordSorter.java": {
        "text": "/*\n * Manages lists of words\n */\npublic class WordSorter {\n\n  /*\n   * Sorts the wordList in order according to the number\n   * at the end of each word\n   */\n  public static void sortWords(String[] wordList) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use a selection, insertion, or merge sort to sort the words in the\n     * 1D array wordList in order based on the number at the end of each word.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n  }\n\n  /*\n   * Returns the number at the end of the String\n   */\n  public static int getNumber(String currentWord) {\n    String number = currentWord.substring(currentWord.length() - 1);\n    return Integer.parseInt(number);\n  }\n\n  /*\n   * Returns a String containing each word in wordList without the \n   * number that appears at the end of each String\n   */\n  public static String createSentence(String[] wordList) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 1D array wordList and obtain a substring of each word\n     * without the number at the end. Concatenate each substring to a new String\n     * and return the String.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    return \"\";\n  }\n\n  /*\n   * Returns a String containing each word in wordList\n   */\n  public static String wordsToString(String[] wordList) {\n    String result = \"\";\n    \n    for (String word : wordList) {\n      result += word + \" \";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    }
  },
  "game_id": 68,
  "created_at": "2023-04-14T14:10:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-14T14:10:24.239+00:00\",\"changed\":[\"cloned from \\\"CSA U8L7-L8b_2023\\\"\"],\"cloned_from\":\"CSA U8L7-L8b_2023\"},{\"changed_at\":\"2023-04-14 14:10:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 01:28:09 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:13:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:15:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:15:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:15:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:16:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:16:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:20:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:20:19 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 17:41:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 17:41:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 17:41:41 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 17:43:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 17:43:42 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 17:44:08 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 17:44:20 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
