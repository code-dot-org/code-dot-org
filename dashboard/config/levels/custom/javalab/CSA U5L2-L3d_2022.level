<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A students wants to store data about the bestselling books to create a visual based on the number of reviews each book received. They have a 2D array of `Book`(#e7e8ea) objects, where each row represents each year from 2016 to 2019. Each row contains `Book`(#e7e8ea) objects that represent bestselling books for that year.\r\n\r\n##In BookScene.java:\r\n\r\n1. Write the `countBooks()`(#e7e8ea) method to count the number of `Book`(#e7e8ea) objects in the `bestsellers`(#e7e8ea) array that have reviews greater than or equal to the parameter `minReviews`(#e7e8ea). Return the count.\r\n\r\n2. Write the `findMinReviews()`(#e7e8ea) method to create and return a 1D `Book`(#e7e8ea) array containing the `Book`(#e7e8ea) objects that have at least `minimum`(#e7e8ea) reviews.\r\n\r\n   * Call the `countBooks()`(#e7e8ea) method to get the number of `Book`(#e7e8ea) objects that have at least `minimum`(#e7e8ea) reviews. Use the result as the length of the 1D `Book`(#e7e8ea) array.\r\n   \r\n   * Add each `Book`(#e7e8ea) object that has at least `minimum`(#e7e8ea) reviews to the 1D array.\r\n   \r\n   * Return the 1D array of `Book`(#e7e8ea) objects found.\r\n\r\n3. Write the `createScene()`(#e7e8ea) method to find which `Book`(#e7e8ea) objects have at least `minReviews`(#e7e8ea) reviews.\r\n\r\n   * Call the `findMinReviews()`(#e7e8ea) method to get the 1D array of `Book`(#e7e8ea) objects to draw.\r\n   \r\n   * Draw the book cover for each `Book`(#e7e8ea) object in the array.\r\n   \r\n   * Use the `pause`(#e7e8ea) and `clear()`(#e7e8ea) methods in the `Scene`(#e7e8ea) class to pause and clear the scene before drawing the next book cover.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array uses the following syntax:\r\n  \r\n  ```\r\n  for (int row = 0; row < arrayName.length; row++) {\r\n    for (int col = 0; col < arrayName[0].length; col++) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Bestselling Books",
    "bubble_choice_description": "Write a method to find which Book objects have at least a specific number of reviews and create a scene to visualize the results.",
    "thumbnail_url": "https://images.code.org/3511c1087ebe7ce6b7afe029aef78cdd-image-1650997669413.png",
    "starter_assets": {
      "wonderful.jpg": "467462de-7daf-42ba-bae3-db0564577fa6.jpg",
      "fantasticbeasts.jpg": "0f522cb9-4be0-403a-802c-57dd5c3ac0d6.jpg",
      "ove.jpg": "e497093b-5a0f-4f48-a45d-f2a748f5c63f.jpg",
      "harrypotter.jpg": "04a9d65b-cc55-4fe6-b693-fbca6c73b893.jpg",
      "1984.jpg": "6360d4f8-18fb-4a1b-88e7-8163ea180c63.jpg",
      "origin.jpg": "4bbc2d51-414c-4d88-829e-bb10557cf6f9.jpg",
      "fahrenheit.jpg": "36c29f65-deb5-485d-84f8-0ca4fb17b035.jpg",
      "ready.jpg": "0c5976c9-624b-4a1e-affe-9f6de6a349b7.jpg",
      "wrinkle.jpg": "3a9adb9e-52ca-4a6c-9442-12a1e2198842.jpg",
      "gobletoffire.jpg": "25ff5c73-ffbf-45d0-8b48-63c12f787925.jpg",
      "strangeplanet.jpg": "3cdf8c87-7593-46bf-962e-ba05a0bab9b8.jpg",
      "giraffes.jpg": "543c1beb-9f10-4cc9-b1bb-309351936c0f.jpg"
    },
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    // Creates the Book objects\n    Book wonderfulThings = new Book(\"wonderful.jpg\", 8842);\n    Book fantasticBeasts = new Book(\"fantasticbeasts.jpg\", 4370);\n    Book ove = new Book(\"ove.jpg\", 23848);\n    Book harryPotter = new Book(\"harrypotter.jpg\", 3146);\n    Book orwell = new Book(\"1984.jpg\", 21424);\n    Book origin = new Book(\"origin.jpg\", 18904);\n    Book fahrenheit = new Book(\"fahrenheit.jpg\", 10721);\n    Book ready = new Book(\"ready.jpg\", 22536);\n    Book wrinkle = new Book(\"wrinkle.jpg\", 5153);\n    Book gobletoffire = new Book(\"gobletoffire.jpg\", 7758);\n    Book planet = new Book(\"strangeplanet.jpg\", 9382);\n    Book giraffes = new Book(\"giraffes.jpg\", 14038);\n\n    // Stores the Book objects in a 2D array\n    Book[][] bestsellers = {{wonderfulThings, fantasticBeasts, ove},\n                            {harryPotter, orwell, origin},\n                            {fahrenheit, ready, wrinkle},\n                            {gobletoffire, planet, giraffes}};\n\n    // Creates the BookScene\n    BookScene myScene = new BookScene(bestsellers);\n    myScene.createScene(10000);\n\n    // Plays the BookScene\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "BookScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a scene based on which books have at least 10,000 reviews\n */\npublic class BookScene extends Scene {\n\n  private Book[][] bestsellers;   // The 2D array of Books\n\n  /*\n   * Constructor to create a BookScene with\n   * the specified 2D array of Books\n   */\n  public BookScene(Book[][] bestsellers) {\n    this.bestsellers = bestsellers;\n  }\n\n  /*\n   * Returns a 1D array of Book objects containing\n   * books with at least minimum reviews\n   */\n  public Book[] findMinReviews(int minimum) {\n    // TO DO #2: Create and return a 1D Book array containing\n    // all Book objects that have at least minimum reviews.\n\n\n    return null;\n  }\n\n  /*\n   * Returns the number of Book objects that have reviews\n   * greater than or equal to the parameter minReviews\n   */\n  public int countBooks(int minReviews) {\n    // TO DO #1: Count the number of Book objects that have\n    // reviews greater than or equal to minReviews.\n    \n\n    \n    return 0;\n  }\n\n  /*\n   * Creates a scene that draws the book cover\n   * for each Book object in a 1D array\n   */\n  public void createScene(int minReviews) {\n    // TO DO #3: Call the findMinReviews() method and draw the book cover for each Book object.\n\n\n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Book.java": {
        "text": "/*\n * Represents a book\n */\npublic class Book {\n\n  private String bookCover;   // The image file of the book cover\n  private int numReviews;     // The number of reviews\n\n  /*\n   * Constructor to create a Book with\n   * a specified bookCover and number of reviews\n   */\n  public Book(String bookCover, int numReviews) {\n    this.bookCover = bookCover;\n    this.numReviews = numReviews;\n  }\n\n  /*\n   * Returns the image file of the book cover\n   */\n  public String getBookCover() {\n    return bookCover;\n  }\n\n  /*\n   * Returns the number of reviews\n   */\n  public int getNumReviews() {\n    return numReviews;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n4JHTc8v5LSKYnsAyX/Pw5fRurLY=\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-12T18:56:27.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-12T18:56:27.185+00:00\",\"changed\":[\"cloned from \\\"CSA U5L2-L3c_2022\\\"\"],\"cloned_from\":\"CSA U5L2-L3c_2022\"},{\"changed_at\":\"2022-04-12 18:56:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 16:05:07 +0000\",\"changed\":[\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 18:29:02 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:56:35 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:57:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 01:00:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 01:00:30 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 15:17:03 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 01:17:09 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 01:18:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 01:18:01 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 01:33:15 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 12:49:33 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
