<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T21:40:25.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A music streaming app wants to implement a system that creates playlists for users based on their listening history.\r\n\r\n‚úÖ **TO DO #1:** Write the method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">createPlaylist()</code> in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Playlist</code> class that takes a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">User</code> object as a parameter and returns a playlist based on the songs the user has liked in their listening history.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PlaylistRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">createPlaylist()</code> method and print the result using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">playlistToString()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Playlist</code> class.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with using object references as parameters.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/object-references-as-parameters"
    ],
    "display_name": "User Playlists",
    "bubble_choice_description": "A music streaming app wants to implement a system that creates playlists for users based on their listening history.",
    "thumbnail_url": "https://images.code.org/c883ad9ba0bec234b838845d3affbc6d-music.png",
    "encrypted_validation": "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\nUlvLwA==\n",
    "encrypted_exemplar_sources": "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\nLfXSVvgDKbEV15QR4m077bDnibBnPqc94w/eNYaORlEkWnYDXyltdBCJITzz\n9RL6kr67maEQS4P1pMnyw532jyf2llc59DsBf5cRoeny+Qb8NMVjGeatvuou\nSOQLuRvSTfNIfnVY+4woEKjgMOaCPdeYya/EFXNH5FCg5gZgwee19x6SlD0u\n34piY9/4V59Vd5m+vf4MTf0KnvYKchQIaeDmlMrLzi2mDopLV08Ur3p231Lt\n0j6IWiDg+DdYAU6lXMmYen9AXYABMKqRJ3grvsO09LEA4c64W9pPZ6Qu9L+F\nKHjjBixuSV3PiVdopSVXGr97zhdVvDRBv8fJLsV28NlPrJdXJowfyRqekoZA\n61qnZtO0BXwpykZZFydDtOY92jl9hj5VeEmvmAXOhF497nVovFPqoly00kwq\nIFVgqGReq5uZ3cX+NGhFe1DEWEIiU2ALQQBxwZ/ATBiKxbh1IHCtuXmSFSML\naXdcsrLNHEUjXc/ajAEPgf2zuELYqc5VUDPSWQtRC/Xu9PbXD5fKbkZeyYHc\nyqy/BwKRugk251ujeL/Nn2HBbJG6IHJKni+OrNqH29AqYrBfhrjStCtd9FTE\nHoz19nULFQgw7ky8H4fF9S8EKVD3P0voYRgaRSfawnfQj7Q1XqDCarngaS4v\nd2TOUx9h1G+2/0PMNVUXKHR7LQAVo1kZTRrC/arhDRTPnBGMoc30yMskLByv\n+ZbvWKnf1zoDLHdtvoFAo9DWGg4K9tUEDGIgp3CyI3aQ7zlTxkmmUHHjH/sD\nMbuyvTcLYve4kVQ8p572OKuOq2AcswLMbly6eqpTv2GiEJ/H5nVdHSUlUkXE\n/ItTvkgMeyQZzZ9iA9eWBPb7RDj3p/z6Nenm99cvrZ4CF4Ijnof8mtskR9dl\neuUm1geyk9OOJsu/v+vK3rLbCeKb+Mz/dv92oTJ4M1wvHCAW53ZBlnL8d8FP\n+pBdqzgZQ0F85ktP8TzxugLO6i2GvuAEIM8L5uzlHBpK0trH+Hjc5bCjLfZ9\nLDfRXsjFb4MtQqWY6lkRJAFCq4ZVtkQ4paDxSi4UqYLbXaRvbi1eMT+605uz\nIEkP0mMKmuaBTPnsO1w8dWXwSpPucPc9vjtPghpCDgIu7PGlK+OLHG0EUSFv\nmtbDCtjP6EAEv6x3EcuBozIepOvMC5mSydKp0jwrZEmIZ1/iDMedWsbwk4pe\n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\njFTMIQ==\n",
    "start_sources": {
      "PlaylistRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class PlaylistRunner {\n  public static void main(String[] args) {\n\n    // Creates several Song objects\n    Song firstSong = new Song(\"Let It Go\", \"Disney\");\n    Song secondSong = new Song(\"Happy\", \"Pharrell Williams\");\n    Song thirdSong = new Song(\"Count On Me\", \"Bruno Mars\");\n    Song fourthSong = new Song(\"Hakuna Matata\", \"Disney\");\n    Song fifthSong = new Song(\"Can't Stop the Feeling\", \"Justin Timberlake\");\n\n    // Creates a User object\n    User natalia = new User();\n\n    // Adds songs to the user's listening history\n    natalia.addSong(firstSong);\n    natalia.addSong(secondSong);\n    natalia.addSong(thirdSong);\n    natalia.addSong(fourthSong);\n    natalia.addSong(fifthSong);\n\n    // Likes some of the songs\n    natalia.likeSong(secondSong);\n    natalia.likeSong(thirdSong);\n    natalia.likeSong(fifthSong);\n\n    // Creates a Playlist object\n    Playlist nataliaPlaylist = new Playlist();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calls the createPlaylist() method and prints the results using the\n     * playlistToString() method.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Playlist.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a playlist on a music streaming app\n */\npublic class Playlist {\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the createPlaylist() method that takes a User object as a parameter\n   * and returns an ArrayList containing the songs the user liked in their\n   * listening history.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n  \n\n  /*\n   * Returns a String containing each song in the playlist\n   */\n  public String playlistToString(ArrayList<Song> playlist) {\n    String result = \"\";\n\n    for (Song song : playlist) {\n      result += song + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Song.java": {
        "text": "/*\n * Represents a song on a music streaming app\n */\npublic class Song {\n\n  private String title;      // The title of a song\n  private String artist;     // The name of the artist of a song\n  private boolean isLiked;   // Whether or not a user liked a song\n\n  /*\n   * Sets title and artist to the specified values\n   * and isLiked to false\n   */\n  public Song(String title, String artist) {\n    this.title = title;\n    this.artist = artist;\n    this.isLiked = false;\n  }\n\n  /*\n   * Returns the title of the song\n   */\n  public String getTitle() {\n    return title;\n  }\n\n  /*\n   * Returns the artist of the song\n   */\n  public String getArtist() {\n    return artist;\n  }\n\n  /*\n   * Returns true if a user liked the song, otherwise false\n   */\n  public boolean getIsLiked() {\n    return isLiked;\n  }\n\n  /*\n   * Sets isLiked to newStatus\n   */\n  public void setIsLiked(boolean newStatus) {\n    this.isLiked = newStatus;\n  }\n\n  /*\n   * Returns a String containing the song's information\n   */\n  public String toString() {\n    String result = artist + \" by \" + artist;\n\n    if (isLiked) {\n      result += \" (Liked)\";\n    }\n    else {\n      result += \" (Not Liked)\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "User.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a user on a music streaming app\n */\npublic class User {\n\n  private ArrayList<Song> listeningHistory;    // The list of songs a user has listened to\n\n  /*\n   * Initializes listeningHistory to an empty list\n   */\n  public User() {\n    this.listeningHistory = new ArrayList<Song>();\n  }\n\n  /*\n   * Returns the user's listening history\n   */\n  public ArrayList<Song> getListeningHistory() {\n    return listeningHistory;\n  }\n\n  /*\n   * Adds a song to the user's listening history\n   */\n  public void addSong(Song newSong) {\n    listeningHistory.add(newSong);\n  }\n\n  /*\n   * Sets the Song status to true if the user liked the song\n   */\n  public void likeSong(Song song) {\n    song.setIsLiked(true);\n  }\n\n  /*\n   * Returns a String containing each song in the user's listening history\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (Song item : listeningHistory) {\n      result += item + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      }
    },
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T21:40:25.258+00:00\",\"changed\":[\"cloned from \\\"CSA U7L2-L6b_2025\\\"\"],\"cloned_from\":\"CSA U7L2-L6b_2025\"}]"
}]]></config>
</Javalab>
