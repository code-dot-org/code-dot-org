<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:31:58.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `SocialMediaScene`(#e7e8ea) class displays the icon for the social media app with the most users.\r\n\r\nIt has instance variables for `twitter`(#e7e8ea), `facebook`(#e7e8ea), and `instagram`(#e7e8ea) to store the number of users for each app. The `createScene()`(#e7e8ea) method draws the icon for the social media app with the most users.\r\n\r\n##In SocialMediaScene.java:\r\n\r\nWrite the `getImage()`(#e7e8ea) method to return the icon for the social media app with the most users.\r\n\r\n   * If `twitter`(#e7e8ea) is greater than `facebook`(#e7e8ea) and `instagram`(#e7e8ea), return `\"twitter.png\"`(#e7e8ea).\r\n   \r\n   * If `facebook`(#e7e8ea) is greater than `twitter`(#e7e8ea) and `instagram`(#e7e8ea), return `\"facebook.png\"`(#e7e8ea).\r\n   \r\n   * If `instagram`(#e7e8ea) is greater than `facebook`(#e7e8ea) and `twitter`(#e7e8ea), return `\"instagram.png\"`(#e7e8ea).",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "starter_assets": {
      "twitter.png": "4b65ee47-ff9d-4a12-bc5b-21e2f531b73f.png",
      "facebook.png": "b0391ea8-beda-401d-baa2-24e68e43a1fa.png",
      "instagram.png": "c4b2142b-76c4-4294-bce4-1f06d5721da6.png"
    },
    "display_name": "Social Media",
    "bubble_choice_description": "Use nested if statements to determine which social media app had the most users and draw the icon for the app with the most users.",
    "thumbnail_url": "https://images.code.org/1a476aeaa9ef35f7c7383ef0273ce63f-image-1650574693750.png",
    "encrypted_exemplar_sources": "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\nsLIJClMM41tDU4MfEIQctwoxVQ==\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    SocialMediaScene myScene = new SocialMediaScene(1358, 10841, 4134);\n\n    myScene.createScene();\n\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "SocialMediaScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Represents a scene that illustrates\n * which social media app had the most users\n */\npublic class SocialMediaScene extends Scene {\n\n  private int twitter;     // The number of users on Twitter\n  private int facebook;    // The number of users on Facebook\n  private int instagram;   // The number of users on Instagram\n\n  /*\n   * Constructor to create a SocialMediaScene with the\n   * specified values for each social media app\n   */\n  public SocialMediaScene(int twitter, int facebook, int instagram) {\n    this.twitter = twitter;\n    this.facebook = facebook;\n    this.instagram = instagram;\n  }\n\n  /*\n   * Sets the number of users on Twitter\n   */\n  public void setTwitter(int newUsers) {\n    this.twitter = newUsers;\n  }\n\n  /*\n   * Sets the number of users on Facebook\n   */\n  public void setFacebook(int newUsers) {\n    this.facebook = newUsers;\n  }\n\n  /*\n   * Sets the number of users on Instagram\n   */\n  public void setInstagram(int newUsers) {\n    this.instagram = newUsers;\n  }\n\n  /*\n   * Returns the icon to draw for the social\n   * media app that has the most users\n   */\n  public String getImage() {\n    String image = \"\";\n    \n    // TO DO #1: Use nested if statements to determine which\n    // social media app had the most users and draw its icon.\n    \n\n    return image;\n  }\n\n  /*\n   * Creates the scene by displaying the icon\n   * for the social media app with the most users\n   */\n  public void createScene() {\n    String imageToDraw = getImage();\n    drawImage(imageToDraw, 50, 50, 200);\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:31:58.636+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L3c_2022\\\"\"],\"cloned_from\":\"CSA U4L3-L3c_2022\"},{\"changed_at\":\"2022-09-20 21:39:58 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 21:40:09 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 21:42:13 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:09:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:10:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:10:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:10:55 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:11:12 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-19 20:35:46 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
