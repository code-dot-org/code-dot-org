<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T22:27:36.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SodaMachine</code> class represents a soda machine with multiple types of sodas. It has instance variables for the list of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Soda</code> objects that are sold in the soda machine and the price of each soda.\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Soda</code> class represents a type of soda and has an instance variable for the number of sodas available.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTotalSodas()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SodaMachine</code> class to calculate and return the total number of sodas available in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">inventory</code> array.\r\n\r\n‚úÖ **TO DO #2:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">public</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTotalCost()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SodaMachine</code> class to calculate and return the total cost of all sodas available in a soda machine.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SodaRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTotalCost()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_private_methods",
    "reference_links": [
      "/courses/csa-2023/guides/private-methods"
    ],
    "display_name": "Soda Machine",
    "bubble_choice_description": "Use `private` and `public` methods to calculate the total inventory and cost of sodas in a soda machine.",
    "thumbnail_url": "https://images.code.org/168b22d7091feb5f7ab09332dd9481b3-soda.png",
    "encrypted_validation": "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\nAs8ykiMVz3AilN2xeO3tuOSY\n",
    "start_sources": {
      "SodaMachine.java": {
        "text": "/*\n * Represents a soda machine\n */\npublic class SodaMachine {\n\n  private Soda[] inventory;    // The 1D array of sodas in the machine\n  private double price;        // The price of each soda in the machine\n\n  /*\n   * Initializes inventory to the specified 1D array of sodas\n   * in the machine and sets price to the specified price;\n   */\n  public SodaMachine(Soda[] inventory, double price) {\n    this.inventory = inventory;\n    this.price = price;\n  }\n\n  /*\n   * Returns the 1D array of sodas in the machine\n   */\n  public Soda[] getInventory() {\n    return inventory;\n  }\n\n  /*\n   * Returns the price of sodas in the machine\n   */\n  public double getPrice() {\n    return price;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the private method getTotalSodas() to get the total number of\n   * sodas that are in the soda machine.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n\n  \n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the public method getTotalCost() to calculate and return the total\n   * cost of all sodas in the machine.\n   * -----------------------------------------------------------------------------\n   */\n  \n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Soda.java": {
        "text": "/*\n * Represents a soda\n */\npublic class Soda {\n\n  private String name;    // The name of a soda\n  private int quantity;   // The number of sodas in inventory\n\n  /*\n   * Sets name and quantity to the specified values\n   */\n  public Soda(String name, int quantity) {\n    this.name = name;\n    this.quantity = quantity;\n  }\n\n  /*\n   * Returns the name of the soda\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the quantity of sodas\n   */\n  public int getQuantity() {\n    return quantity;\n  }\n\n  /*\n   * Returns a String containing the name of the soda and quantity\n   */\n  public String toString() {\n    return name + \" - \" + quantity;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "SodaRunner.java": {
        "text": "public class SodaRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Soda objects\n    Soda[] sodaList = {new Soda(\"Coca Cola\", 5), new Soda(\"Sprite\", 4), new Soda(\"Dr. Pepper\", 2), new Soda(\"Spindrift\", 3)};\n\n    // Creates a SodaMachine object\n    SodaMachine machine = new SodaMachine(sodaList, 1.50);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getTotalCost() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "x+MncmwoCqyJhhbazXf9lm0YUweil4IOgWMzPIHBBAm7Ht9rF/Ry4LJt2RTi\nGnk9KumoKWMV318JPVVzOUxzVZiIzXN2eDsUGBJreoRtAe85eTd0kRD225aY\ncVl5ymKEInAQnPwHls4SnGZDNckp3HElUY/Bo1dfokWxLfA3x9Tw/jA5DKxq\nbl0pYWjY46eQS2UBa33VftcqpEqeJ5q29e90MuVhbzJiTRGhOtXnhMXyk+CK\nW2pO3GcFSt/uT3Ec/dj1muGGFIKsM9LWvvQ6DFuMKcmlhsxuYQRW3aqV3s36\nzJ78lUiW0uxL27BQ/0hjUo7YOJZnkRXn3U9BlqlHHlf4ZmtdQMQrm/P5GhyU\nfHo4u2RXGVxJyyo4N9v/GLNmn3gwQI7GeQpelEW/1tZXx6lIvqgdYDzSkvXV\ngSW2EiJEqDInUOUjVHUMIDlo8MQ6ULO4ORGNUBjX3HO558gZfJa7orXkRJpo\n0Van9O2QtKVoAT2fJwf1rhIe9AQume8y1fKNbYlH3ifpEtNG80xd2Ee1zsXM\nuDqlrXpAwpbRWrQyF3/zUrSOtkFMoqNnQe5+km6gq2Ism+KSq9P49opnVfrw\nQ5Mx+077E5LLLujt6V4HvL0S9S5PCzraiTiumiptvwNAroVkJhpnqY1V2eaf\nZZR2fdE0f97AqL0ELGbC71ko534uwLpynHHBw1n35iesllEVx0x77T0HmgS+\ngkJ7y+SHfHgfC+gLoLxlvVO7FrfAeyq0r5NDD5AGi8PRrX/dRjhEJXwj0ZFq\nlq9HuQhRqltJASG8mMX4ZMGqMeA79x/m0cyhoDQ4FHdeS+JHS8QZ0BI/jK/H\nYRoc5FDHEbtCf7AZerCMRLjKplmQmZ+RaORPQHmvefmIdRBpjP4uu7K8dt+C\nYCHgPZQPxWDCJTuVm2GjxcQPEMOAKG8pENjJyYoMd2Ol/ha+bOd6ENz8ndCY\n2GbgZVIn0epUF1z9NzCjip7NCkIQN/ZXpHTIC1f/UqCWR0xWsRSlx+V01OQx\nCar6kNnpY9zzGsr4t3Fzve3JGXRiDOQvPPZ4/q9u6y5CNuaVcPmMB/t3GsyQ\n8dnDMMCMVZJ6OR86oE91/3t66rb5ytRaHuPow7/F7EW70k40T/3s9HYPyyUC\nhFwmMygp43cKXNr6lyBeEgaNRpAQoPwEKkH8PZRnDxA3gKOJa4pqonHdnW6V\nj+bEPgUgOElw8ZsK+/Uo+dhdeW2MTA13eAuAGJNrah+nhQeB1QC1EJNdXX70\nNtz9HbP9afEW+SVMTjX6VLf/e9aXkrYEypM7Mo/9/CRZ4WSd/xDoOv7QobrX\nC2oqDfKoy/RMqkBq65qvzeQPg1wfcH3KzHATc7Uc46pChk6CkKdSyxV9wmVe\ndeKYmffkGU3AC9E7rxKDfdG1QNA5/A/16EO43p/pZ7OIlS70hzfQ9XCQQqMX\nUwdJ5GMRcNst+lzrcO2sPSoyuCL01g8uVHU9bwSYIkcwfSnDIU639HiXBVGc\n8JoR6TPpOn58Yx2qIr+1qHojGIemFeGdfoT34KbkcRQcB/SvlG2YROjQFAfw\nGN1TL8oyfqIVhnra6g3OXWK0L6kxlpqCCT7GSgHsz8dOsWDIXgJJwXORuwew\n/rxRX/2188gAFenm8P18nskvpOnZwB5j70IvlVfk06z+5dUQUm79G3StJZj1\nLgd2B7fco7z6G4r0UWIYEj59YfbIxdTvyyWcxibOEKy/6dYOOKNs2RcjZuvJ\nH5vsOUUL/o4irbTmsPBxDGNsVgWSBym4HOQDGzG31xEq0N7iewjl+tlFPPLN\nxYA/En8nxkTkLjRjF2NXmt7xkb+GHEN2varTVQwPyKEHBK9lU1e2af+iMZlg\nbR8NltDKKZFvx5IEDINrjkmdUQcakwb+82BTtZPJN9OsrBy0724ftPT/bM3H\nbBtwaRID/y1xE5mTYynROfAdjkDbiy9LgInXHqxw6zHVS5ZdtD9zdxTuMi4z\nisiFlKTVAE7xF+0R9G+1I+i9Plinm+hAW5udkoUCf3BOpevQv7eWIoFthNci\nu2jIuCwT/sPTcQFh0tBvhctCW69ULpt8JobsbBNkXCuXboW/pfWG1hVfV+/+\nFaTpoUnxVuHBGnQf5cenJQA9/PIr2ycde9jFt2TRw1/TxdHpvG50BYYFtjrD\nkXRL6RIdyhxPmulE85Ol70ShPrCy10J5JQNvct9P2HFn+8va4GzbNV3+T0II\nohfrk+3ps5lT1PVo2PB4Cl2l8fTKzZV0HHrEfAjaFzmtb3Lg5JdX9J5cIsHJ\nnq/aNBuSJK/8+oCHEVHdUB1WcqmTDvPXOOyLryewiaM7lvtt/9CZrKwepxUf\nmv6ioLX3JFWYzzN3x+mYvpAglg4gQ/dJ/U10vWjDJYYviZtVZ1B4i0FinFuK\ntH/dHch3U2QwY7QDdwGsQyfcm8OzQR0vJCgkefDZIw10aShawdo9myZRQKdS\nvIxtxMf0OQ0qUaYw3ya8SlVpXUL6VSPjFM0LedWvqU411+QJyd5rhxeo+tn2\nwxHYFIO3yg6lv3u9blKeabUXlD7sryzyj8BVQ51guVqIt4vxUmdSmCy1WjCL\niBw/gbp2KviFSMs4iXDyKibsJ+lAWXE7lKXhDNtZUnx/FT7ltifvjSb0LvPG\n8UndbzYuLuQEurnLvB87Tnsa/GTUs1ZDGqOR4w97Gqw2hRjM/yGg0wpsvJdU\nu0G4hxidi6iGCOe0tUgY+G/20lw6m2CLg9UsvtrRR3kgDF1DM3pXaJAn/kxF\nQtNff9rwTjnhHVKf6RFGzbFF/Ql7UZuNxdG7Lwxw+qYLGinVc7lKdjGDKlZm\nnmIBTDlrczixBEIY08uR8eezLUaUisZarj9BUEmLpoJhQ/Rs44E6puoIs+yr\na8/zZZ6BrUygOMIcViuCrT4cMV1h0CJhljyoUubu6eK1k9Nggxxxf5XnOr4L\nNXs/Tjjf2KIT9U+GN5x47wmw5eWqKkZfykhsGLiqlSi5XYsOCWBJgPlqRPGR\nT+NEGLApv3JuyAs/D7G8utJysaZGNn5uvEjdhAhXisMiCerUzUQ5QVp6WMaj\nCM19NS1sY1pVUDPXiUGN8RhDdgn6H299GNjO3u28W9G4p75F6uSoHdY5nSju\n3V6LGxKArmMpvGu64x4GlhguLB6Xy/Z/6tcHcdkmy2fqEO8wy2n43K6lh21l\nrOvWN4MMhbLOibDS8/n2z5Et3+/yqoQOg2jdaKHV8UB3U/KttjcpHnqwJzcL\nDPzUnUbYNUiHDDtiqc7SNu9aqfaxlVGDOaMkLxM1JU3Pve1XUfbNwKw7CZm8\n0uf7az77mU/NjTKFrxIMbp27yRPnlris9jwi7fhY+YsquZnnoDJUXiuvu+sn\nffcqOpb5PA8dFQ9Ly5JVQZWLB+g85u9Su7kRmAmsX8hJXGg2qjcwjs9uGnmh\nSHzNnJEJdl1DHZez9SQOl1NB1YvzM+gO80sEzrI28UlTLpvvuZNysWxNUO+u\nb9UGNV6oDp1pv+NPJdyANckjz4aaUz++bkLBcPKue1rYELqC7wxBg19EDWHc\nbLoOwbuMlZfDh+c9gQUmh3GN5aE69RLAEfdvfeDH4nn94cELFPXz1XkhP4N4\nVLa0LqUEbUAqc77DOV23rDo8ZVJXu1w4AH4OP07q3iQ8rF5r68F7CP/SwHQX\nrzVkmep702ZZS86GxZ53uS892zxfi1FBR9N5ZO4iRjUo5ARVi59hDWfuMjWv\nBBHMx5Bdz44JumSIWUDGRfsg7OgZTY5ECsjbZQvq2fzRy7I2P33X4cX6dTn0\nWpgk0ZR2KJowTvFjGqTnhW/6Hy2cfy7w5Bo1yAl7c6aAIntaxBnDLzgIaB2v\ng9rnGdeAkQW8PiTn8CvzDQuev5wIN2ubcaWfYCFSWlpvOkXcVAcLcQ/cBaHY\nT22JOQ5Y4g/VkPcf5uGsCcKrxhxmXBgOvwvGqTtBoKiYCsDGXZXhZ7TOC9fp\nmqe8zMxRj7Z/4bLQKnlkuT2y93oPFLJhzSayeI8P5EFhS0sYrzMJmlGJx3KX\nweHduXVGMBs64glsWngoGgccDyWbTRGngzYBzZd3FwcvnFi7UNrzU+g=\n",
    "name_suffix": "_alt-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T22:27:36.691+00:00\",\"changed\":[\"cloned from \\\"CSA U7L4-L5a_pilot-2025\\\"\"],\"cloned_from\":\"CSA U7L4-L5a_pilot-2025\"}]"
}]]></config>
</Javalab>
