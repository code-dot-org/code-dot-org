<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2023-06-20T12:55:01.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##WordMatch FRQ\r\n\r\nThis question involves the `WordMatch` class, which stores a secret string and provides methods that compare other strings to the secret string. You will write two methods in the `WordMatch` class. \r\n\r\n<br>\r\n\r\n__Part A)__ Write the `WordMatch` method `scoreGuess`. To determine the score to be returned, `scoreGuess` finds the number of times that `guess` occurs as a substring of `secret` and then multiplies that number by the square of the length of `guess`. Occurrences of `guess` may overlap within `secret`. \r\n\r\nAssume that the length of `guess` is less than or equal to the length of `secret` and that `guess` is not an empty string. \r\n\r\nThe following examples show declarations of a `WordMatch` object. The tables show the outcomes of some possible calls to the `scoreGuess` method.\r\n\r\n![](https://images.code.org/5dd06cf731abecdd3080cba8a836e023-image-1687368439194.27.14 PM.png)\r\n\r\nComplete the `scoreGuess` method\r\n\r\n<br>\r\n\r\n__Part B)__ Write the `WordMatch` method `findBetterGuess`, which returns the better guess of its two `String` parameters, `guess1` and `guess2`. If the `scoreGuess` method returns different values for `guess1` and `guess2`, then the guess with the higher score is returned. If the `scoreGuess` method returns the same value for `guess1` and `guess2`, then the alphabetically greater guess is returned. \r\n\r\nThe following example shows a declaration of a `WordMatch` object and the outcomes of some possible calls to the `scoreGuess` and `findBetterGuess` methods.\r\n\r\n![](https://images.code.org/01cd7957b5f19cb2d8b7585acbf6deaa-image-1687368478647.27.54 PM.png)\r\n\r\nComplete method `findBetterGuess`. Assume that `scoreGuess` works as specified, regardless of what you wrote in part (a). You must use `scoreGuess` appropriately to receive full credit.\r\n\r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "encrypted_validation": "ZdRgEwg0e7vQ5y2AZXMgtkCudQfl4QCMG6enfC0RVN6z66bxam7KE29jSs9P\nuHo8d9mmfVwk4/s3K5e6I5VmA01Mud6n0OwP8HuhwpXCiig=\n",
    "start_sources": {
      "WordMatch.java": {
        "text": "public class WordMatch \n{\n  /** The secret string. */ \n  private String secret; \n  \n  /** Constructs a WordMatch object with the given secret string of lowercase letters. \n  */ \n  public WordMatch(String word) \n  { \n    /* implementation not shown */ \n  } \n  \n  /** Returns a score for guess, as described in part (a). \n  * Precondition: 0 < guess.length() <= secret.length() \n  */\n  public int scoreGuess(String guess) \n  { \n    /* to be implemented in part (a) */ \n  } \n  \n  /** Returns the better of two guesses, as determined by scoreGuess and the rules for a \n  * tie-breaker that are described in part (b). \n  * Precondition: guess1 and guess2 contain all lowercase letters. \n  * guess1 is not the same as guess2. \n  */ \n  public String findBetterGuess(String guess1, String guess2)\n  { \n    /* to be implemented in part (b) */ \n  } \n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "dIReYa/p2qdqT19za34lItfucqQf9XPxQvTijePRp+cNh0EUggqIhUZxxiKw\nqiAXDv1Tx5ltCncM+rTA6hHRV5GhZqMyOzy7u8eCazdrmvCjy6+USHWexMeG\nfrVvAXB7UmLFvRjb7QTdPd3kvgdcCOWhlVO5wV3yq0I/jnxjg0JsXgXwNpC2\nMcMusXop10qNxteHTb9zaH5YjLmc5WiRzXxQUgS64/Lxh/FhpQMAhXjV/8vW\n1cclJelBd9vxDCeLadMNNP8hDpgITpd9Vm2pGXVnziNV91h4A/4jOyC1oMba\n5gG3ACddOCCSUSaAzC9QE9HDlBNXrlpRTstFiU4/DTaGZE0FP+J4XnDBuFxF\ned3Bo+MRmCRdyGBb04hkVB246f4HeM0oV5X+/0rwUP22RJTFAx1G2E9lTvab\nnsHQEmFGisRvda6EQCtD+5EVo02VUz4kpZTCbxzJeRv87T6zKUC8igV5UuLs\nEnBl7GereKBHCziQOla6oz9/X2caAbR7w7u0wSdPYjR11q/e4wo77WEZ+zh/\niqAmjTj5/9i07TxrIY4QaJyazBZGi7oB6xxC/D6wvAsVKrfW4RLn+K4bLXXO\ntoUmYhxqmIPnacAGN2R0fzANI610/tvBKaFoApfI4r1HJUzsZYFq5q3NA9Kg\nnONPEdhd+PGLU8kMFj/PdWmgUpg88gHVjkvhqIaMQk2ty6c7xFrYLOr1eeNs\nQpTMpLHugigZeZY9x9QPQmqHd1ohPsLYhNxBfRWdghSDW//MhzkVesCyNXbv\nLBsXm/KBGRNsWECiICY+nhs2bJf5OAuRqndwTvxKVX5gMvlKVgbffK54Xvpl\n9HWL84rYcwb+nMAOgxXuIw9QvwqEH70B1DoQW85aZxeU+prpT1NtLqmnRgPk\n3LgCdX2SydDeNi5gOcNJm5Lf496Y5ofvwLnETQzkA2Z1tk+UqQwkyWSpPmN+\njbcS6fKkpOHII6oKo/sgHvYkAuKHo6hIlrIXMi4aK/Ss6XqkDdNmb6Y42yFQ\n5uLnqAqP3b1IimqNFBCZlBV6hounLMNNh0RPoL86wcdFRgUGyajipjg68+so\ny8D5Ej+Z88eHYQX9YOW1Nrpp3u8pdvuXEsmqe/dvXJIVyc3lCoiaD6OoA6hd\nOtM6WxgphST5WkHuVns3xHT8cIoWdy2dUXlHXKjiqovj0rrhLeqW8A2k53FT\nk2207SVgRQTPFHNcbkFcMQyW2xAtm4c2UGlXiSl5jQvQUV/PYWXthFB8244P\noSdZt10QFKAiLn4KtGsGJySeHy9FGC1r63afEKcEdA6m2jKk1S2yPTY+6PK/\nGwtLAEJez0JAluhKMZwW/J6bJR55gzu6MfmY0qB2be68mUebXItqXcAg17G5\nwjqxBxkxHL9YXXtI3DmGcWa8sW2KKFIMVWcsLCAb4jBdCXiiHNs51EjG7yXe\nmn2yMb7ajq3lCO0nRebsQYKyy+/qWm/2bDO4WWy8tupygIC+KQs4jxsWJqon\nt7zACqRj9NzHh1sNerVMDh0l55iyZ2VJcX/s1n7VtPfagaSYC4f21b+6TJlE\niwJn/mZYvG8I2xTVXGg9N8YZdv+Pu4z+KJk4Ib4mCrD8dbRe241ylKG7i8nH\nKZSXt1D/sKNS9ZllKBHxcO9DFC7FKcmNeydO/i/Z2bmtqqVXUF84yJfipUKL\nxrB33mhBE0NKp0fErEQaEK22djtaluIsiTrDUDzj2X9eSmwQy6Y4VfuXGP8n\ns6pR3ybxmcU2QVkYonQqlOAlMefsiRdy4L9Im0mFr+ti4XogX2vMiA7Aa7zX\nlUys0KeiK0eJYS5l9VJAyyO7VuJpd93ajLDLRUZeSvbh5ZvnfqXjUgen0M41\n++VQxcgpNdPCHfJcmQ==\n",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2023-06-20 12:55:04 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 12:58:27 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 13:00:08 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 17:19:16 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-21 17:28:19 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
