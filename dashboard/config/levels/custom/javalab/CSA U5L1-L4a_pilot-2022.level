<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:49:53.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A researcher wants to analyze the cost of living index for several countries. They have the following values:\r\n\r\n![](https://images.code.org/1c82c9f6dd34afdee23ce4fff6391076-image-1650920898553.png)\r\n\r\nwhere each row represents Australia, Brazil, Canada, France, and United States, respectively. Each column represents the cost of living index, the rent index, the groceries index, and the restaurant price index, respectively.\r\n\r\n##In Countries.java:\r\n\r\nWrite the `createDataArray()`(#e7e8ea) method:\r\n\r\n1. Declare and initialize a 2D `double`(#e7e8ea) array called `tempData`(#e7e8ea) to store the values using an initializer list.\r\n\r\n2. Return the `tempData`(#e7e8ea) array.\r\n\r\nWrite the `getCountryData`(#e7e8ea) method:\r\n\r\n3. Return a `String`(#e7e8ea) containing each value in the country's row from the `livingCost`(#e7e8ea) array.\r\n\r\n**Hint:** Use the `getCountryRow()`(#e7e8ea) method in the `Countries`(#e7e8ea) class to get the row in `livingCost`(#e7e8ea) array for the parameter `country`(#e7e8ea).\r\n\r\n::: details [**Show Me How**]\r\nA 2D array is declared and initialized using the following syntax:\r\n  \r\n  ```\r\n  dataType[][] variableName = { {row1value1, row1value2, row1value3}, {row2value1, row2value2, row2value3} };\r\n  ```\r\n\r\nBe sure to change `variableName`(#e7e8ea) to a name you can easily identify, and add the values for each row in the 2D array inside curly braces `{ }`(#e7e8ea).\r\n\r\nValues are accessed using the following syntax:\r\n\r\n  ```\r\n  variableName[row][col];\r\n  ```\r\n  \r\nSpecify the specific `row`(#e7e8ea) and `col`(#e7e8ea) of the value you want to access.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Cost of Living",
    "bubble_choice_description": "A researcher wants to analyze the cost of living index for several countries. Declare and initialize a 2D array to store the values.",
    "thumbnail_url": "https://images.code.org/3c5b557945947706f94d7d0a295a7c63-image-1650921017189.png",
    "encrypted_exemplar_sources": "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\nJS64pJo=\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:49:53.710+00:00\",\"changed\":[\"cloned from \\\"CSA U5L1-L4a_2022\\\"\"],\"cloned_from\":\"CSA U5L1-L4a_2022\"},{\"changed_at\":\"2022-10-08 18:45:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 18:46:48 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 18:46:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 18:50:43 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 18:50:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 18:54:36 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 19:02:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 19:02:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-03 15:47:33 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-01-03 15:50:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
