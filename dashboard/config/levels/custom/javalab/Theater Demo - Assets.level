<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "General Theater demos and tests.",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyConcert.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class MyConcert {\n  public static void main(String[] args) throws FileNotFoundException {\n\n    Stage myStage = Theater.stage;\n\n    System.out.println(\"Welcome to The Theater!\");\n    \n    CharacterStory myConcert = new CharacterStory(\"animal09.png\", \"home04.png\");\n\n    /* Test individual methods from CharacterStory by commenting\n\t * commenting out the myConcert.playConcert() below and then\n\t * calling the method in your concert that you want to test.\n     */\n    \n    myConcert.playConcert();\n\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "CharacterStory.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class CharacterStory {\n  private Stage myStage = Theater.stage;\t\t\t// where images and drawings are displayed\n  private String myCharacter;\t\t\t\t\t\t// the main character of your story\n  private String characterHome;\t\t\t\t\t\t// the main character's home\n\n  public CharacterStory(String myCharacter, String characterHome) {\n    this.myCharacter = myCharacter;\n    this.characterHome = characterHome;\n  }\n\n  // LESSON 2 - SCENE 1\n  public void showIntroduction() throws FileNotFoundException {    \n    // TO DO: Display the image of your character's home.\n\tmyStage.drawImage(characterHome, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    // TO DO: Display the image of your character.\n    myStage.drawImage(myCharacter, 200, 200, 100, 100, 20);\n\n    // TO DO: Add more notes to the song.\n    int[] notes = {75, 74, 77, 80, 60, 62, 64, 66};\n\n    // TO DO: Play the notes you added and modify how the notes are played.\n    // Student modifications will vary.\n    myStage.playNoteAndPause(Instrument.PIANO, notes[0], 1);\n\n\tmyStage.playNoteAndPause(Instrument.PIANO, notes[0], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[1], 0.5);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[0], 1);\n    \n    myStage.playNoteAndPause(Instrument.PIANO, notes[0], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[1], 0.5);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[0], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[2], 0.5);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[2], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[3], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[3], 1);\n\n    myStage.playNoteAndPause(Instrument.PIANO, notes[4], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[5], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[6], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[7], 1);\n  }\n  \n\n  // LESSON 4 - SCENE 2 PART A\n  public void drawShapes() {\n    // TO DO: Create an array of colors for the fill.\n\tColor[] fillColors = {Color.RED, Color.YELLOW, Color.PURPLE, Color.ORANGE, Color.BLUE};\n\n    // TO DO: Create an array of colors for the stroke.\n\tColor[] strokeColors = {Color.BLACK, Color.GOLD, Color.GREEN, Color.RED, Color.PURPLE};\n\n    // TO DO: Set the stroke width.\n    myStage.setStrokeWidth(2);\n    \n    // TO DO: Loop through one of the color arrays and draw rectangles and circles.\n\tint width = 0;\n    int height = 0;\n    \n    for (int index = 0; index < fillColors.length; index++) {\n      myStage.setFillColor(fillColors[index]);\n      myStage.setStrokeColor(strokeColors[index]);\n\n      width += 40;\n      height += 40;\n      \n      int xPos = (myStage.getWidth() / 2) - (width / 2);\n      int yPos = (myStage.getHeight() / 2) - (height / 2);\n\n      myStage.drawRectangle(xPos, yPos, width, height);\n      myStage.drawEllipse(xPos, yPos, width, height);\n\n      myStage.pause(1);\n    }\n  }\n  \n\n  // LESSON 4 - SCENE 2 PART B [LEVEL 5]\n  public void showFavoriteFoodsOriginal() throws FileNotFoundException {\n    myStage.drawImage(characterHome, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n    myStage.drawImage(myCharacter, 100, 100, 200, 200, 0);\n    \n    // TO DO: Create an array of food images.\n\tString[] foods = {\"food05.png\", \"food09.png\", \"food13.png\", \"food15.png\", \"food19.png\"};\n    \n    // TO DO: Loop through the array of foods to display each food and play the sound effect.\n\tint index = 0;\n\n    while (index < foods.length) {\n      myStage.playSound(\"winning.wav\");\n      myStage.drawImage(foods[index], 200, 300, 50, 50, 0);\n      \n      myStage.pause(1);\n      \n      index++;\n    }\n  }\n\n\n  // LESSON 4 - SCENE 2 PART B [LEVEL 6]\n  public void showFavoriteFoods() throws FileNotFoundException {\n    myStage.drawImage(characterHome, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n    myStage.drawImage(myCharacter, 100, 100, 200, 200, 0);\n    \n    // TO DO: Create an array of food images.\n\tString[] foods = {\"food05.png\", \"food09.png\", \"food13.png\", \"food15.png\", \"food19.png\"};\n    \n    // TO DO: Loop through the array of foods to display each food and play the sound effect.\n\tint index = 0;\n    int xPos = 50;\n    int yPos = 50;\n\n    while (index < foods.length) {\n      myStage.playSound(\"winning.wav\");\n      myStage.drawImage(foods[index], xPos, yPos, 50, 50, 0);\n\n      if (index < 2) {\n        yPos += 100;\n      }\n\n      if (index == 2) {\n        yPos = 50;\n        xPos += 250;\n      }\n\n      if (index > 2) {\n        yPos += 100;\n      }\n      \n      myStage.pause(1);\n      \n      index++;\n    }\n  }\n  \n\n  // LESSON 5 - SCENE 3\n  public void showFriends() throws FileNotFoundException {\n    // TO DO: Create an array of Animal objects.\n\tPig pig = new Pig(\"pig.png\", \"pig.wav\");\n    Sheep sheep = new Sheep(\"sheep.png\", \"sheep.wav\");\n\tTiger tiger = new Tiger(\"tiger.png\", \"tiger.wav\");\n    Horse horse = new Horse(\"horse.png\", \"horse.wav\");\n    Monkey monkey = new Monkey(\"monkey.png\", \"monkey.wav\");\n    Animal[] animals = {pig, sheep, tiger, horse, monkey};\n\n    // TO DO: Loop through the array of animals to display each animal and play their sound.\n\tfor (int i = 0; i < animals.length; i++) {\n      myStage.drawImage(characterHome, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n      animals[i].speak();\n      animals[i].show();\n      myStage.pause(3);\n    }\n  }\n  \n\n  // LESSON 6 - SCENE 4 PART A\n  public void playUnicornMusic() throws FileNotFoundException {\n    // TO DO: Create an array of notes.\n\tint[] notes = {45, 46, 47, 46, 45};\n\n    // TO DO: Play the array of notes.\n\tfor (int note : notes) {\n      myStage.playNoteAndPause(Instrument.BASS, note, 0.3);\n    }\n  }\n  \n\n  // LESSON 6 - SCENE 4 PART B\n  public void showUnicorn() throws FileNotFoundException {\n    String[] unicornRunning = {\"unicornRunning01.png\", \"unicornRunning02.png\", \"unicornRunning03.png\", \"unicornRunning04.png\",\n                               \"unicornRunning05.png\", \"unicornRunning06.png\"};\n    \n    String[] unicornJumping = {\"unicornJumping01.png\", \"unicornJumping02.png\", \"unicornJumping03.png\", \"unicornJumping04.png\",\n                               \"unicornJumping05.png\", \"unicornJumping06.png\", \"unicornJumping07.png\"};\n\n    // TO DO: Refactor the loop as an enhanced for loop to display the unicorn running.\n    for (String unicorn : unicornRunning) {\n      myStage.drawImage(\"gradient.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n      myStage.drawImage(unicorn, 150, 150, 150, 150, 0);\n      myStage.pause(0.1);\n    }\n\n    myStage.pause(0.5);\n\n    // TO DO: Refactor the loop as an enhanced for loop to display the unicorn jumping.\n    for (String unicorn : unicornJumping) {\n      myStage.drawImage(\"gradient.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n      myStage.drawImage(unicorn, 150, 150, 150, 150, 0);\n      myStage.pause(0.1);\n    }\n  }\n\n  \n  // LESSON 7 - SCENE 5\n  public void showCity() throws FileNotFoundException {\n    // TO DO: Create an array of samples from a sound.\n\tdouble[] cityMusic = SoundLoader.read(\"drumsbassgroove.wav\");\n\n    // TO DO: Display an image of a city during the day.\n\tmyStage.drawImage(\"city_daytime.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    // TO DO: Display the image of your character.\n\tmyStage.drawImage(myCharacter, 100, 200, 200, 200, 0);\n\n    // TO DO: Play the array of samples.\n\tmyStage.playSound(cityMusic);\n    myStage.pause(6);\n\n    // TO DO: Increase the volume and play the samples again.\n\tSoundEffects.increaseVolume(cityMusic);\n    myStage.playSound(cityMusic);\n    myStage.pause(6);\n\n    // TO DO: Display an image of a city at night.\n\tmyStage.drawImage(\"city_nighttime.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    // TO DO: Display the image of your character.\n\tmyStage.drawImage(myCharacter, 100, 200, 200, 200, 0);\n\n    // TO DO: Decrease the volume twice and play the samples again.\n\tSoundEffects.decreaseVolume(cityMusic);\n    myStage.playSound(cityMusic);\n    myStage.pause(6);\n  }\n\n  \n  // LESSON 9 - SCENE 6\n  public void showOcean() throws FileNotFoundException {\n    // TO DO: Display an image of an ocean.\n    myStage.drawImage(\"ocean03.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    // TO DO: Create an aray of samples from a sound.\n\tdouble[] waterSound = SoundLoader.read(\"water.wav\");\n\n    // TO DO: Create an array of fish images.\n\tString[] fish = {\"fish02.png\", \"fish09.png\", \"fish15.png\", \"fish12.png\", \"fish07.png\"};\n\n    // TO DO: Play the aray of samples.\n\tmyStage.playSound(waterSound);\n\n    // TO DO: Display the image of your character.\n    myStage.drawImage(myCharacter, 100, 100, 200, 200, 0);\n\n    // TO DO: Loop through the array of fish to display each fish.\n\tint xPos = 20;\n    int yPos = 50;\n    \n    for (int i = 0; i < fish.length; i++) {\n      myStage.drawImage(fish[i], xPos, yPos, 100, 100, 0);\n\n      xPos += 50;\n      yPos += 50;\n      \n      myStage.pause(0.5);\n    }\n\n    myStage.pause(2);\n\n    // TO DO: Apply find() on the array of samples and play the samples again.\n    double[] newWaterSound = SoundEffects.find(waterSound);\n    myStage.playSound(newWaterSound);\n    myStage.pause(1);\n  }\n  \n\n  // LESSON 10 - SCENE 7\n  public void showSpace() throws FileNotFoundException {\n    // TO DO: Display an image of space.\n    myStage.drawImage(\"space01.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    // TO DO: Create an array of samples from a sound.\n\tdouble[] spaceSound = SoundLoader.read(\"space.wav\");\n\n    // TO DO: Create an array of planet images.\n    String[] planets = {\"planet04.png\", \"planet01.png\", \"planet07.png\", \"planet12.png\", \"planet05.png\"};\n\n    // TO DO: Display the image of your character.\n    myStage.drawImage(myCharacter, 200, 200, 200, 200, 0);\n    \n    // TO DO: Use nested loops to loop through the array of planets to\n    // play the sound and display each planet growing and rotating.\n\tfor (int i = 0; i < planets.length; i++) {\n      int rotations = 1;\n\n      int width = 50;\n      int height = 50;\n      int angle = 10;\n\n      while (rotations <= 10) {\n        myStage.playSound(spaceSound);\n        myStage.drawImage(planets[i], 50, 50, width, height, angle);\n\n        width += 20;\n        height += 20;\n        angle += 10;\n\n        rotations++;\n\n        myStage.pause(0.2);\n      }\n\n      myStage.pause(0.5);\n    }\n\n    // TO DO: Apply shiftSound() on the array of samples and play the samples again.\n\tmyStage.pause(2);\n    SoundEffects.shiftSound(spaceSound);\n    myStage.playSound(spaceSound);\n    myStage.pause(2);\n  }\n  \n\n  // LESSON 10 - SCENE 8\n  public void showHome() throws FileNotFoundException {\n    // TO DO: Display the image of your character's home.\n    myStage.drawImage(characterHome, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    // TO DO: Create an array of samples from a sound.\n\tdouble[] homeSound = SoundLoader.read(\"home.wav\");\n\n    // TO DO: Create an array of Animal objects.\n\tChicken chicken = new Chicken(\"chicken.png\", \"chicken.wav\");\n    Sheep sheep = new Sheep(\"sheep.png\", \"sheep.wav\");\n\tTiger tiger = new Tiger(\"tiger.png\", \"tiger.wav\");\n    Elephant elephant = new Elephant(\"elephant.png\", \"elephant.wav\");\n    Monkey monkey = new Monkey(\"monkey.png\", \"monkey.wav\");\n    Animal[] animals = {chicken, sheep, tiger, elephant, monkey};\n\n    // TO DO: Play the array of samples.\n\tmyStage.playSound(homeSound);\n\n    // TO DO: Display the image of your character.\n    myStage.drawImage(myCharacter, 100, 100, 200, 200, 0);\n    \n    // TO DO: Apply the reverseSound() effect on the sound and play again.\n\tmyStage.pause(3);\n    double[] newHomeSound = SoundEffects.reverseSound(homeSound);\n    myStage.playSound(newHomeSound);\n    myStage.pause(3);\n\n    // TO DO: Loop through the array of animals to display each animal and play their sound.\n    for (int i = 0; i < animals.length; i++) {\n      animals[i].speak();\n      animals[i].show();\n      myStage.pause(0.5);\n    }\n  }\n  \n\n  public void playConcert() throws FileNotFoundException {  \n    // Scene 1\n    showIntroduction();\n\n    // Scene 2\n\tmyStage.pause(3);\n    myStage.clear(Color.WHITE);\n    drawShapes();\n    showFavoriteFoods();\n    \n    // Scene 3\n\tmyStage.pause(2);\n    showFriends();\n    \n    // Scene 4\n\tmyStage.pause(2);\n    playUnicornMusic();\n    showUnicorn();\n    \n    // Scene 5\n    myStage.pause(2);\n    showCity();\n    \n    // Scene 6\n\tmyStage.pause(2);\n    showOcean();\n    \n    // Scene 7\n    myStage.pause(2);\n    showSpace();\n\n    // Scene 8\n    myStage.pause(2);\n    showHome();\n\n    myStage.play();\n  }\n\n  public String getCharacterHome() {\n    return characterHome;\n  }\n\n  public String getCharacter() {\n    return myCharacter;\n  }\n  \n}",
        "isVisible": true
      },
      "SoundEffects.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic final class SoundEffects {\n\n  // TO DO: Create constants for volume.\n  public static final double MIN_VOLUME = -1.0;\n  public static final double MAX_VOLUME = 1.0;\n\n  public static final int SAMPLE_RATE = 44100;\n\n  // Gets the length of a sound in seconds.\n  public static int getSoundLength(double[] samples) {\n    int soundLength = samples.length / SAMPLE_RATE;\n    return soundLength;\n  }\n\n  // Decreases the volume of a sound.\n  public static void decreaseVolume(double[] samples) {\n    for (int i = 0; i < samples.length; i++) {\n      samples[i] *= 0.5;\n    }\n  }\n\n  // Increases the volume of a sound.\n  public static void increaseVolume(double[] samples) {\n    for (int i = 0; i < samples.length; i++) {\n      samples[i] *= 2;\n\n      // TO DO: Use if statements to make sure the volume is\n      // not greater than MAX_VOLUME or less than MIN_VOLUME.\n\t  if (samples[i] > MAX_VOLUME) {\n        samples[i] = MAX_VOLUME;\n      }\n\n      if (samples[i] < MIN_VOLUME) {\n        samples[i] = MIN_VOLUME;\n      }\n    }\n  }\n\n  // Replaces and counts duplicate samples with 0.\n  public static void replaceDuplicates(double[] samples) {\n\tint duplicates = 0;\n\n    for (int i = 0; i < samples.length - 1; i += 2) {\n      if (samples[i] == samples[i + 1]) {\n        samples[i] = 0;\n        samples[i + 1] = 0;\n        duplicates++;\n      }\n    }\n\n    System.out.println(\"Duplicates replaced: \" + duplicates);\n  }\n\n  // Creates a new array containing the samples that are\n  // greater than 0 from the original array.\n  public static double[] find(double[] samples) {\n    double[] newSound = new double[samples.length];\n    int target = 0;\n    int count = 0;\n\n    for (int i = 0; i < samples.length; i++) {\n      if (samples[i] > 0) {\n        newSound[target] = samples[i];\n        target++;\n        count++;\n      }\n    }\n\n    System.out.println(\"Number of original samples: \" + samples.length);\n    System.out.println(\"Number of samples greater than 0: \" + count);\n\n    return newSound;\n  }\n\n  // Shift the samples in the sound to the left by one place\n  public static void shiftSound(double[] samples) {\n    for (int shift = 0; shift < 2; shift++) {\n      double temp = samples[0];\n\n      for (int index = 0; index < samples.length - 1; index++) {\n        samples[index] = samples[index + 1];\n      }\n\n      samples[samples.length - 1] = temp;\n    }\n  }\n\n  // Creates a new array containing the samples from\n  // the original array in reverse.\n  public static double[] reverseSound(double[] samples) {\n    double[] reversed = new double[samples.length];\n\tint start = 0;\n    int end = samples.length - 1;\n\n    while (start < end) {\n      double temp = reversed[start];\n      reversed[start] = reversed[end];\n      reversed[end] = temp;\n      start++;\n      end--;\n    }\n    \n    return reversed;\n  }\n}",
        "isVisible": true
      },
      "Animal.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Animal { \n\n  private Image animalImage;\n  private String soundFile;\n  private String background;\n\n  public Animal(String imageFile, String soundFile) throws FileNotFoundException {\n    this.animalImage = new Image(imageFile);\n    this.soundFile = soundFile;\n    this.background = \"animalsBackground.png\";\n  }\n  \n  public Image getImage() {\n    return animalImage;\n  }\n\n  public String getSound() {\n    return soundFile;\n  }\n\n  public String getBackground() {\n    return background;\n  }\n\n  public void show() throws FileNotFoundException {\n    int xPos = 150;\n    int yPos = 250;\n\n    Theater.stage.drawImage(background, 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n    Theater.stage.drawImage(animalImage, xPos, yPos, 100, 100, 0);\n  }\n  \n  public void speak() throws FileNotFoundException {\n    Theater.stage.playSound(soundFile);\n  }\n}",
        "isVisible": false
      },
      "Chicken.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Chicken extends Animal {\n\n  public Chicken(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void show() throws FileNotFoundException {\n    int xPos = 20;\n    int yPos = 250;\n\n    while (xPos < Theater.stage.getWidth()) {\n      Theater.stage.drawImage(super.getBackground(), 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n      Theater.stage.drawImage(super.getImage(), xPos, yPos, 150, 150, 0);\n      xPos += 50;\n      Theater.stage.pause(0.5);\n    } \n  }\n}",
        "isVisible": false
      },
      "Cow.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Cow extends Animal {\n\n  public Cow(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void show() throws FileNotFoundException {\n    int xPos = 50;\n    int yPos = 250;\n    int rotation = -10;\n    int rotationCount = 1;\n\n    while (xPos < Theater.stage.getWidth()) {\n      Theater.stage.drawImage(super.getBackground(), 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n      Theater.stage.drawImage(super.getImage(), xPos, yPos, 150, 150, rotation);\n\n      xPos += 50;\n      rotationCount++;\n\n      if (rotationCount % 2 == 0) {\n        rotation = -10;\n      } else {\n        rotation = 10;\n      }\n\n      Theater.stage.pause(0.5);\n    }\n  }\n}",
        "isVisible": false
      },
      "Elephant.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Elephant extends Animal {\n\n  public Elephant(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void show() throws FileNotFoundException {\n    int xPos = 100;\n    int yPos = 100;\n    int width = 100;\n    int height = 100;\n\n    while (width <= 300) {\n      Theater.stage.drawImage(super.getBackground(), 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n      Theater.stage.drawImage(super.getImage(), xPos, yPos, width, height, 0);\n\n      width += 50;\n      height += 50;\n\n      Theater.stage.pause(0.5);\n    }\n  }\n}",
        "isVisible": false
      },
      "Horse.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Horse extends Animal {\n\n  public Horse(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void show() throws FileNotFoundException {\n    int step = (int) (Math.PI * 2);\n\n    for (int i = 0; i < 20; i++) {\n      Theater.stage.drawImage(super.getBackground(), 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n      int angle = step * i;\n      Theater.stage.drawImage(super.getImage(), (int)((Math.sin(angle)*100)+100), (int)(200+(Math.cos(angle)*50)), 150, 150, 0);\n      Theater.stage.pause(0.2);\n    }\n  }\n}",
        "isVisible": false
      },
      "Monkey.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Monkey extends Animal {\n\n  public Monkey(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void show() throws FileNotFoundException {\n    int xPos = 100;\n    int yPos = 100;\n    int jumps = 0;\n\n    while (jumps < 10) {\n      Theater.stage.drawImage(super.getBackground(), 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n      Theater.stage.drawImage(super.getImage(), xPos, yPos, 100, 100, 0);\n\n      if (yPos != 100) {\n        yPos = 100;\n      } else {\n        yPos += 75;\n      }\n\n      jumps++;\n\n      Theater.stage.pause(0.5);\n    }\n  }\n}",
        "isVisible": false
      },
      "Pig.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Pig extends Animal {\n\n  public Pig(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void show() throws FileNotFoundException {\n    int xPos = 150;\n    int yPos = 100;\n    int width = 100;\n    int height = 100;\n    int oinks = 0;\n\n    while (oinks < 10) {\n      Theater.stage.drawImage(super.getBackground(), 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n      Theater.stage.drawImage(super.getImage(), xPos, yPos, width, height, 0);\n\n      if (width != 100) {\n        width = 100;\n        height = 100;\n      } else {\n        width += 75;\n        height += 75;\n      }\n\n      oinks++;\n\n      Theater.stage.pause(0.5);\n    }\n  }\n}",
        "isVisible": false
      },
      "Sheep.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Sheep extends Animal {\n\n  public Sheep(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void show() throws FileNotFoundException {\n    int xPos = 100;\n    int yPos = 100;\n    int rotation = 0;\n\n    while (rotation < 360) {\n      Theater.stage.drawImage(super.getBackground(), 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n      Theater.stage.drawImage(super.getImage(), xPos, yPos, 150, 150, rotation);\n\t  rotation += 10;\n      Theater.stage.pause(0.1);\n    }\n  }\n}",
        "isVisible": false
      },
      "Tiger.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Tiger extends Animal {\n\n  public Tiger(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void show() throws FileNotFoundException {\n    int xPos = 20;\n    int yPos = 100;\n    int width = 100;\n    int height = 100;\n\n    while (xPos < Theater.stage.getWidth()) {\n      Theater.stage.drawImage(super.getBackground(), 0, 0, Theater.stage.getWidth(), Theater.stage.getHeight(), 0);\n      Theater.stage.drawImage(super.getImage(), xPos, yPos, width, height, 0);\n\n      if (width != 100) {\n        width = 100;\n        height = 100;\n      } else {\n        width += 75;\n        height += 75;\n      }\n      \n      xPos += 50;\n      \n      Theater.stage.pause(0.3);\n    }\n  }\n}",
        "isVisible": false
      }
    },
    "parent_level_id": 28900,
    "starter_assets": {
      "animal01.png": "8c441212-ad0e-476f-924d-e40835022fd1.png",
      "animal02.png": "354de923-c48c-4623-b6ae-be86ab1d2ca6.png",
      "animal03.png": "524120a1-86eb-4a9e-b277-d347c8feed87.png",
      "animal04.png": "20cd9a9a-ff65-4a55-8dac-177ffd62d4b9.png",
      "animal05.png": "5e8b0ab9-5447-4a4b-9313-e754351fde27.png",
      "animal06.png": "e54c1282-8424-4059-8129-39817bb18e3d.png",
      "animal07.png": "55a11c35-0ea4-4b30-9189-404135250d34.png",
      "animal08.png": "5628adad-d80d-46f2-9d46-1d37d7beb2e2.png",
      "animal09.png": "070de864-3762-4271-9b74-0cfffdeec75c.png",
      "animal10.png": "0f6f1b28-825c-4860-af3a-352127b5d543.png",
      "animal11.png": "e5e98f8c-c592-4d4d-ac4c-0c30f148ee06.png",
      "animal12.png": "f06baa28-8f95-45bf-98c2-234bcb117b96.png",
      "animal13.png": "25e5e5ac-e7e9-4d53-9dc0-299237e8c2ab.png",
      "animal14.png": "ae31ba13-5b6a-44d3-90f4-cba82b606664.png",
      "animal15.png": "15470c89-0d18-4646-87b8-419872515f68.png",
      "animal16.png": "6ef08e10-9db1-4d11-ae1a-b4d20c733538.png",
      "animal17.png": "a1060c50-b95c-4011-814e-338ec6a35d23.png",
      "animal18.png": "1c530aca-878a-4c78-ab23-fd80e55da083.png",
      "animal19.png": "27d6af69-e0ff-4649-a191-f035cc111df6.png",
      "animal20.png": "e4e53350-a036-4905-8bf6-8de557a468ce.png",
      "animal21.png": "2df5f508-b67d-461f-9768-ca3444562c81.png",
      "animal22.png": "b5116e67-82a8-4ce4-bf3b-c5f81306c20a.png",
      "animal23.png": "93925e88-05e5-4a7b-9f71-96a7b28afd40.png",
      "animal24.png": "da507af6-e1fd-4c4a-a541-2577adab7fa0.png",
      "animal25.png": "37624444-56ed-4a08-bc02-f484aa4656b9.png",
      "chicken.png": "a42aca6a-3426-4017-aa4c-3deb17fc7ffb.png",
      "cow.png": "f44098e3-1b21-438c-91d0-fe33127a6809.png",
      "elephant.png": "99be5be1-1d00-449d-9cb5-cbfed61f97e7.png",
      "horse.png": "96574808-0b94-4d69-91d6-dc9fef7bc48b.png",
      "monkey.png": "030c81dc-aa19-404b-a0dd-8377b6736699.png",
      "pig.png": "c620c8b6-9d6d-40ad-87cf-14ea513d5188.png",
      "sheep.png": "52dc3db9-cbb4-4378-950b-e030beefd1ee.png",
      "tiger.png": "e367a06e-fee6-4af8-b8ac-b09901e72446.png",
      "city_daytime.png": "858bf99a-bd39-4bb8-b0a7-85c78171ced0.png",
      "city_nighttime.png": "4c2ebc5a-817f-447e-a5b5-3fa27df79bc9.png",
      "fish01.png": "b475ed66-1e7d-4a65-a321-aeecb5836455.png",
      "fish02.png": "cac82b76-bf42-49fe-91b9-233a8f2d7831.png",
      "fish03.png": "db130fdc-8400-4c5d-8437-4f0577f864ee.png",
      "fish04.png": "594f52f7-d1e7-4779-b356-602e16d5c90c.png",
      "fish05.png": "c6359713-8637-4267-a17e-cda680a2044a.png",
      "fish06.png": "c46b5d95-01b7-4ff4-86be-f584a09e983c.png",
      "fish07.png": "d9e867e3-2db4-4349-90ed-d18ec0b3e0da.png",
      "fish08.png": "0ee55006-5f61-4447-a4e2-251dbd59e003.png",
      "fish09.png": "031c526c-dbb6-4d77-b276-76d4f92cbea1.png",
      "fish10.png": "28e30a83-5160-4e16-a8a4-8edc09eca590.png",
      "fish11.png": "9c079fba-849b-43b5-9fbe-40984d5720b5.png",
      "fish12.png": "0d6c9470-b2a4-456a-9537-882e4488cfd0.png",
      "fish13.png": "bc3c6b43-f74b-4a45-9912-38582d0ff9d2.png",
      "fish14.png": "849dab47-5984-483c-b893-218fd525067b.png",
      "fish15.png": "f21c3d74-8dc8-49dd-9a88-4390780e3706.png",
      "food01.png": "a216b46f-6de1-4260-ab39-74d7233df508.png",
      "food02.png": "bb00c3c1-a18a-47c5-adf8-84e7ae47fc7f.png",
      "food03.png": "542d1b3e-4e48-4f0f-b945-4ed09119bb4c.png",
      "food04.png": "ce937063-0351-4f21-a9c7-209289aadc6e.png",
      "food05.png": "c108dfc1-e1c0-4c27-a91a-985ba91b6f87.png",
      "food06.png": "e1c0890d-45aa-4a85-9bb7-9078097a70c8.png",
      "food07.png": "69ba2c91-8859-478a-86b3-ed5a73180ac8.png",
      "food08.png": "be013676-6596-4fbb-9940-3948a07f21aa.png",
      "food09.png": "db5edf9f-8363-4b75-a4a6-8c5f5696dc21.png",
      "food10.png": "12afe431-bdf1-4650-a505-2ce51fdc23ef.png",
      "food11.png": "b19aa6ec-7d8a-47bb-861b-38a225fcb5ed.png",
      "food12.png": "631e9861-7e4a-403b-8612-64e67e5915e1.png",
      "food13.png": "1090d584-6672-4373-8ff1-abe8cc124b0c.png",
      "food14.png": "ebb0a29b-3679-4467-bb87-e06f6a04da34.png",
      "food15.png": "2c788bd8-d5c9-4216-a7aa-fd5240e1d6ac.png",
      "food16.png": "942f3857-6ace-4caa-b229-c356793db352.png",
      "food17.png": "05db939e-ae7b-4513-9447-1e1f22d571af.png",
      "food18.png": "991c9c78-653b-4841-984f-8b7c46fd1473.png",
      "food19.png": "c2fa05c7-1804-4b8d-87a1-8470f437ca8c.png",
      "food20.png": "e06f4aca-ee09-456f-a9b4-e4ca6f8b0ca4.png",
      "food21.png": "bb2dcb37-9f93-45cc-858d-a4b46e30d0a0.png",
      "food22.png": "e8d96773-0c5d-4d80-8a0b-c979ad3ec731.png",
      "food23.png": "7bde003a-59c3-4d8d-b2a0-48a5f58cc999.png",
      "food24.png": "95ec1067-6515-4348-8212-6db01dc1a757.png",
      "food25.png": "b19ff5a6-15b5-471c-a379-cab537c79b35.png",
      "home01.png": "6369265e-72a9-4656-90fb-098845776e4e.png",
      "home02.png": "41840543-fe6e-475c-8ac3-d8bcfa579ee2.png",
      "home03.png": "33a03370-2c57-447a-a7c3-90e30dc06de3.png",
      "home04.png": "2ad21dbf-3bad-4d8c-9673-b8f7101e6389.png",
      "home05.png": "c0f7e325-dca3-4cef-aac3-724b079cc0e0.png",
      "home06.png": "7b3c63b1-16af-4929-baf8-d204c3557621.png",
      "home07.png": "0d82645f-9fbc-4258-a28e-cd06c849f0c0.png",
      "home09.png": "ee02be72-b33d-4ac2-b477-f6fb9680904e.png",
      "home10.png": "19e837fd-4ffa-40e2-9347-9d149db6f718.png",
      "home11.png": "3f646e7d-749e-4fb3-aaf1-f470503779e7.png",
      "home12.png": "e1e52d28-8bc8-45cd-ac86-f401cf476017.png",
      "home13.png": "bee30dab-fb46-45a4-9a1a-acc382dcfa4b.png",
      "home14.png": "c2695ed2-8037-439a-bfee-9ba9153dedb4.png",
      "home15.png": "e09d80d2-8f02-4de2-8a85-4e1edf1673d4.png",
      "ocean01.png": "6c379897-011b-44c6-97cb-2573f09e0356.png",
      "ocean02.png": "f5c3b9f4-6152-4cd3-80a4-ede25374e30f.png",
      "ocean03.png": "365d96c0-7bcf-4659-870b-34c7ded18706.png",
      "ocean04.png": "7a2d8bff-4b66-4a9c-ac0d-440ee1d7f4f0.png",
      "ocean05.png": "0de14379-dcde-4d30-bb10-86ca52ecdb5b.png",
      "ocean06.png": "c893ac20-31e2-493a-ac0a-7ab0c6e899a0.png",
      "ocean07.png": "152effa2-7ffe-4c24-b4e5-c9cec07a2ab2.png",
      "ocean08.png": "d4a364e7-2fb2-4b58-8927-df27c123a0a1.png",
      "ocean09.png": "072bd134-2ca7-4805-a945-41e9f6bc5a8c.png",
      "ocean10.png": "d83821e7-b3de-489a-8a05-d51672e75936.png",
      "planet01.png": "cb12667e-8792-493e-a483-e5870a1d6505.png",
      "planet02.png": "479cb634-f2d2-4c4e-8286-087715d922cd.png",
      "planet03.png": "d46ac084-33f0-4eab-b5dd-a32bf0d16a3a.png",
      "planet04.png": "4fb4395b-ac8a-4b44-beb5-300715931a2b.png",
      "planet05.png": "d9c985d6-0781-4934-880f-c094bf3ec69b.png",
      "planet06.png": "6c710d3b-0e02-4ec9-ae38-20cca354f311.png",
      "planet07.png": "39cba60c-184d-437f-bf3c-ce3ca9ba8c3c.png",
      "planet08.png": "1020c5ce-fcf2-4e30-a4ba-f5e71e950999.png",
      "planet09.png": "9a35ab4d-6fd7-40b4-ad80-57902bce2b30.png",
      "planet10.png": "4d8f7f8d-e153-432f-9862-e73d38c7798d.png",
      "planet11.png": "5914dc48-19e9-4523-844f-9259706294b9.png",
      "planet12.png": "fcf150c1-6875-4abd-a05f-982198bee5b2.png",
      "planet13.png": "62f406fe-8c7a-47d7-8dd3-5023a4374161.png",
      "planet14.png": "d4849ad4-bb69-486d-96ab-49f9a5a5d7c5.png",
      "planet15.png": "a10e270a-059e-48f2-bbbd-7eea159a5c8a.png",
      "chicken.wav": "4e7f0d07-1bb3-4ff4-a29e-b41d3dc9a4bb.wav",
      "cow.wav": "068490a5-6dfb-49d4-909f-32b65519f79c.wav",
      "drumsbassgroove.wav": "c0ff2d54-828d-47b9-abc2-e29650e6b24f.wav",
      "elephant.wav": "2753131e-1743-4dd4-ae71-cf4f7b641811.wav",
      "home.wav": "d0e964a9-f55f-4e3b-a958-650a02d4a20b.wav",
      "horse.wav": "7ba6159c-d7c2-4b4e-93db-2dc132c24578.wav",
      "monkey.wav": "e2521e73-004b-4ca9-80a7-c54ee220491b.wav",
      "pig.wav": "c9034706-08c7-48fd-9389-6ff04b7ec591.wav",
      "sheep.wav": "c76b3393-1593-45b9-96c3-ce786f215480.wav",
      "space.wav": "01a6896f-3b05-40e1-b305-fe7ba3015552.wav",
      "tiger.wav": "7e2b3379-c13e-484b-8862-3b0065ed4e87.wav",
      "water.wav": "5df4192b-c52a-4115-b354-1b824519877f.wav",
      "winning.wav": "ee1c4579-c558-4cba-9656-72ced5601511.wav",
      "space01.png": "533eb140-3e3a-4d6e-947e-7382c63b49e9.png",
      "space02.png": "2af7b5ec-9d66-4d06-9261-4bec695896fe.png",
      "space03.png": "c5da455b-8ad1-449a-814a-d600034155b9.png",
      "space04.png": "be6faaa5-5e52-46b7-99f5-36834ab23b9c.png",
      "unicornJumping01.png": "20f97669-3458-4bea-a624-32d85dc19107.png",
      "unicornJumping02.png": "287ca73d-b760-453b-9589-f6b8ab5aa8af.png",
      "unicornJumping03.png": "0dce3170-5e97-41f3-86fd-90ad1c8a6be6.png",
      "unicornJumping04.png": "4bb556b9-b629-41dd-b897-4ed05d5aebf0.png",
      "unicornJumping05.png": "45e1d529-9a00-4540-96fa-03d1946e7e65.png",
      "unicornJumping06.png": "f15030bc-5707-4490-aeac-9b82d3cd03d0.png",
      "unicornJumping07.png": "3dc63686-d324-40c8-9c73-b9e9497d0968.png",
      "unicornRunning01.png": "fb0137e1-953a-4dff-bfcf-1b8d90185ea1.png",
      "unicornRunning02.png": "1c0d84f9-fa56-4b1e-b360-2ae8f0998fd2.png",
      "unicornRunning03.png": "b6dae052-62a7-47a2-ad27-77f7df573d99.png",
      "unicornRunning04.png": "c4498eb1-e26c-42d1-b927-44b9b7c83949.png",
      "unicornRunning05.png": "41e34ffc-79e0-45c0-9259-64c0c21acd0b.png",
      "unicornRunning06.png": "8080ea6b-d503-4eb0-93d7-3bdc9d35bbd4.png",
      "unicornRunning07.png": "8f3a237b-1169-4c30-89a9-d9c42ac37f0a.png",
      "animalsBackground.png": "420630df-2fd0-4341-9194-b9b5baae7d54.png",
      "gradient.png": "5ad82239-8dd3-411c-93a4-eb748faae0aa.png"
    }
  },
  "game_id": 68,
  "created_at": "2021-07-22T15:01:34.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2021-07-22T15:01:34.306+00:00\",\"changed\":[\"cloned from \\\"Theater Demo\\\"\"],\"cloned_from\":\"Theater Demo\"},{\"changed_at\":\"2021-07-22 15:01:38 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 15:02:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-03 19:26:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-03 19:26:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-03 19:28:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 15:22:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 15:34:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 17:10:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 17:10:07 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 17:11:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 18:10:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 18:35:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 21:23:03 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-18 21:23:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 14:04:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 14:04:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 14:09:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 14:19:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 14:28:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 14:29:02 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 15:07:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 15:16:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 15:16:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 15:23:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 15:23:40 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 15:26:29 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 17:43:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 17:43:28 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 17:45:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 18:12:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 18:15:10 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 18:35:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 18:36:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 18:38:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 18:39:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 19:06:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 19:14:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 19:24:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 19:25:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-19 19:34:34 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-20 13:52:30 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"}]"
}]]></config>
</Javalab>
