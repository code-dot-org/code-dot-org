<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-02-26T00:28:37.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String laCity = \"Livingston\";\n    String txCity = \"Holiday Lakes\";\n    String miCity = \"Ubly\";\n    String paCity = \"East York\";\n\n    System.out.println(paCity.compareTo(miCity));\n    \n  }\n}",
        "isVisible": true
      }
    },
    "name_suffix": "_2022",
    "long_instructions": "##Investigate and Modify\r\n\r\nRun the program to observe the results.\r\n\r\nThen, experiment with the program by making the following modifications. Change one line at a time, then run the program after each change to observe the results.\r\n\r\n1. What do you notice about what the `compareTo()`(#e7e8ea) method returns? Try swapping the `paCity`(#e7e8ea) and `miCity`(#e7e8ea) then run the program to observe the results.\r\n\r\n2. Add the line `System.out.println(txCity.compareTo(paCity));`(#e7e8ea) then run the program. What do you notice about what is printed?\r\n\r\n3. Try comparing different combinations of `String`(#e7e8ea)s. Run the program after each change to observe the results.\r\n\r\n",
    "teacher_markdown": "##Investigate and Modify\r\n\r\n1. When we use the `compareTo()`(#e7e8ea) method, it returns an int value that denotes the difference in lexicographic order between the argument (`miCity`(#e7e8ea)) and the String on which the method is called (`paCity`(#e7e8ea)). When first run, we receive a value of **-16**. The first letter of the `miCity`(#e7e8ea) String is \"**U**\" while the first letter of the `paCity`(#e7e8ea) String is \"**E**\". This method uses the Unicode chart as a frame of reference, and we can see from the values in the chart seen below that we would have to travel **-16** index spots to travel from \"**U**\" to \"**E**\". If we swap these two Strings, the value will become a positive **16** since we are increasing our index values to travel from \"**E**\" to \"**U**\".\r\n\r\n![](https://images.code.org/8f814be8f3b8fe547d8ac3daed60ead7-image-1667399482903.png)\r\n\r\n\r\n\r\n2. As expected, we receive a value of **3**. This is because the first letter of the argument (`paCity`(#e7e8ea)) is \"**E**\" while the String on which we are calling the method (`txCity`(#e7e8ea)) starts with an \"**H**\". To traverse from \"**E**\" to \"**H**\" on the chart above is a move of three index places.\r\n\r\n3. Encourage students to change the values for the String variables as well. What happens when we compare \"New York\" to \"New Haven\"?",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:28:37.573+00:00\",\"changed\":[\"cloned from \\\"CSA U6L8-L1\\\"\"],\"cloned_from\":\"CSA U6L8-L1\"},{\"changed_at\":\"2022-05-06 15:26:37 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 15:28:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 15:30:03 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 19:06:41 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-11-02 14:36:07 +0000\",\"changed\":[\"long_instructions\",\"teacher_markdown\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
