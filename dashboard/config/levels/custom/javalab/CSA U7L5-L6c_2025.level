<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:24:37.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A travel website wants to implement a system that recommends activities based on the user's location.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getDescription()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Activity</code> class that returns the description of the activity. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getThisDescription()</code> to get this description.\r\n\r\n‚úÖ **TO DO #2:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getDescription()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LocalActivity</code> class that overrides the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getDescription()</code> method to return the description of the local activity. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getLocalAttractions()</code> to get a list of local attractions.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class, create several <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Activity</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LocalActivity</code> objects and call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getDescription()</code> method for each object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with overriding methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "reference_links": [
      "/courses/csa-2023/guides/method-overriding"
    ],
    "display_name": "Travel Activities",
    "bubble_choice_description": "A travel website wants to implement a system that recommends activities based on the user's location.",
    "thumbnail_url": "https://images.code.org/d8538e2736120725bd7f241fbc040680-airplane.png",
    "encrypted_validation": "DEHSVR78cgRSjmjlu+kXbIg/cGi7Fw4uE2npisS5/y6wRgZ3DnyiZQz0CbY4\nrHz3KQ/ys35X6/M7xmKBXyvslRrHYfzC/pnCJvGxNdoE+An/J1YEunqKfSb9\neZYAKu1M3ugWLxORDI0Yeazy7MzDJYHq9DLdw2NMBlrX/+aaY2IZRhS1dqBb\nSErQRsYfgAhPlCJDqYwZY2RrybRZx41izpS+7KlLmW7JufvnHh8dm+nBcyb2\nWUNcTAmG2i/pT4oDJVYsYHq4PJarQaJsrUkXT57a3V+8s/FzQcMkWjhWz1Jd\ndzbrp6Vot7CBUZ2fGA/Sr/su/PpUUlXS0mOcX69f1O1XCU0cGfc2EGRheplH\nAHYX0OGUw1gwi7nYOCID7VehC8yPjUmtzYByY2ADfljHKl+t8gc+u0VBE1B4\nOrLwBLC+Mthu/NcV2mDwPNFg7PX0jlMqgKuJr5G/betzgxyPAZ2jt1dbgcqy\naFRJwV9VpfGVTTg3vNNCX5Q4qFBYhh3XQtxKf4NIV1LsH4M9lZrqIR59Hjgj\np7ZZ9Nk2dnSv6DyUeKQYuhjl/+bZ/Kt/y8tWLtKgQCyOOXODD+AIk+0QuYJS\nJpulO0EERanORutTlwfFvbJGNJ7cCFRS3oeZbwTipY9QA5D8otOLFLtUp8y5\niTpZqao/Lnp1bywMeyOqVkTxBXIln+KghvBJBNLOBKumMjnwwMpqEyYbvEkK\nA2Wpd4+dX7XsoWUCLMSaKqeyj6pjUJgAgO7HXCUPKOlrzWBALp9qtglNXKMs\nqome1+jgnMRUPjj1LPWFRykBHLNvuoxOIJ+1KUHIEAxdoLXsIhOQDxjjR96D\nRHWHcf1mw63HgJVP1jV4SxU6zBd4cOodcvmUkjBUJfZ+VZdwUWD/xrPsGWZX\neIQEg89f2Yv5YtfdcBoNN3P1WqQYzzE+wND1IOrOH6uKi5kMv/81g1gnRScF\n+m6POI/SBQbsygwMUGm/R+ZE6UyJz2V9BAyCE7VHAVil2U9pzWBnQsR1BjFb\nJ485b8M8psiO3v40j+DQYTnCnWm8kF0CsYg6CH0GV6x6J/Pmhhyk9936+R29\nKvEROAwsjhJrHA9DMJ0SqYriCMhlEl3iYOKWxdGYLlnuUoJJhGpIc7l5Ov5I\nZue5v500WIcdzTtUyuUHfPpacJSSvv/aPrNm+eHsxeZ64DleXM4yshSYoglS\nDrMcOaVguXSO5Si3CSpoC25wwL8WKpyuXEwmoRR/2zXXA87ZERLBSVLqs760\nUWyvFFmrkl5ufKx7+8DKoCyAO+dy/c6LZr+sMT0Qz7gYi3jLAb+17as6dsb1\ndLlXRc2zIZkwg/h2jALQde1RAIl4eIobGSz7skKpaLwotmtV+YG6Gjq/amn1\nxIufD82zwuALTwE4THnoPCKBWKFUWi3a3OQptpvvOA43K3mZzYOIxTBaeUuf\nlO3cxqWfwvpaBMVuLvYtEcYIDre6H8tpNVr9dO8ZGjnoeYYEM7r18HShFR3i\n73VCIXeHI2F9/nZ7423aU8kJuIKduK4zhnsGywJK+3u4kwnUGQi5ZW7A//l8\nS0UBBBgDM9GwH5X8O123pnMunsKtOYmKrfwcY0JWMMCgYqTkWs7stKi7w6Wc\nrW/6WB71/fLM08UmR2dIKtHg4TaAsKPtvDNLU6mTcquXI1ESIq4Y11Vsw461\nTEpyRw0yjv9h1jEPfGWIGekEI4hTDMwKqP9XMh7tvS0OyYFigxr9huV+Rm4b\nX7ZVN6HQEB1yp/lUMnw5fKTAmMYx1gF12dLIppa/0MRLp4qauTy7d/Q7EwqD\nqZz9+M62aNPfgcn+iXB9xdSHaiOoHfv4px/kg51HX2/QGF3KfX33lNG6uiv/\nmZy++ZMXFGzl9PTPEPE5kJd49jLNout3rqN6GSg=\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import java.util.ArrayList;\n\nimport org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Create several Activity and LocalActivity objects and call the getDescription()\n     * method for each object. Call the drawResult() with String returned from calling\n     * getDescription();\n     * -----------------------------------------------------------------------------\n     */\n    ArrayList<String> local = new ArrayList<String>();\n    local.add(\"mall\");\n    local.add(\"park\");\n    local.add(\"movie theater\");\n    local.add(\"gym\");\n\n    Activity s = new Activity(\"exercising\");\n    LocalActivity loc = new LocalActivity(\"shopping\", local);\n    \n\n    // Plays the scene\n    Theater.playScenes(s);\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Activity.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a Activity\n */\npublic class Activity extends Scene{\n  private String description;   // description\n  \n  public Activity(String description) {\n    this.description = description;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getDescription() method to return the description of the activity. The method\n   * should call the private method getThisDescription() to get this description.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  private String getThisDescription() {\n    return description;\n  }\n\n    /*\n   * Draws the result in the scene\n   */\n  public void drawResult(String description) {\n    drawImage(\"worldwide.png\", 0, 0, getWidth());\n    drawText(\"description \" + description, 50, 50);\n    pause(0.5);\n  }\n}\n\n",
        "isVisible": true,
        "tabOrder": 1
      },
      "LocalActivity.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a LocalActivity\n */\npublic class LocalActivity extends Activity {\n  private ArrayList<String> local;    // list of local activities\n  \n  public LocalActivity(String description, ArrayList<String> local) {\n    super(description);\n    this.local = local;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getDescription() method that overrides the getDescription() method to\n   * return the description of the local activity. The method should call the private\n   * method getLocalAttractions() to get a list of local attractions, then\n   * randomly return one of the attractions.\n   * -----------------------------------------------------------------------------\n   */\n\n  private ArrayList<String> getLocalAttractions() {    \n    return local;\n  }\n}\n\n",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "starter_assets": {
      "worldwide.png": "9baa4b39-f803-4351-aee4-d206b729423e.png"
    },
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:24:37.054+00:00\",\"changed\":[\"cloned from \\\"CSA U7L5-L6c_2023\\\"\"],\"cloned_from\":\"CSA U7L5-L6c_2023\"}]"
}]]></config>
</Javalab>
