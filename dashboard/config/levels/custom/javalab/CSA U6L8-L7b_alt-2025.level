<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T22:51:55.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A customer service chatbot needs to identify the issue from a customer's message.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Chatbot</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">removeNonIssueWords()</code> method that removes all words from the customer's message that are not related to the customer's issue and returns a new <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ChatbotRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">removeNonIssueWords()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">remove()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_remving_data_from_an_arraylist",
    "display_name": "Customer Service",
    "bubble_choice_description": "A customer service chatbot needs to identify the issue from a customer's message.",
    "thumbnail_url": "https://images.code.org/94b2ee14bc75138cf90b159f7bf1f4f5-chatbot.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\ng8CFEJigJNShZdenKplT5Z1nKA==\n",
    "start_sources": {
      "ChatbotRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class ChatbotRunner {\n  public static void main(String[] args) {\n    \n    ArrayList<String> messageWords = new ArrayList<String>();\n    messageWords.add(\"I\");\n    messageWords.add(\"was\");\n    messageWords.add(\"unhappy\");\n    messageWords.add(\"that\");\n    messageWords.add(\"the\");\n    messageWords.add(\"shipping\");\n    messageWords.add(\"was\");\n    messageWords.add(\"slow\");\n    \n    ArrayList<String> issueWords = new ArrayList<String>();\n    issueWords.add(\"happy\");\n    issueWords.add(\"unhappy\");\n    issueWords.add(\"sad\");\n    issueWords.add(\"glad\");\n    issueWords.add(\"help\");\n    issueWords.add(\"kind\");\n    issueWords.add(\"fast\");\n    issueWords.add(\"slow\");\n\n    // Create a Chatbot object\n    Chatbot chatbot = new Chatbot(messageWords, issueWords);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the removeNonIssueWords() method and print the result\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Chatbot.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a chatbot\n */\npublic class Chatbot {\n\n  private ArrayList<String> messageWords; // customer's message\n  private ArrayList<String> issueWords;   // words related to the issues\n\n  public Chatbot(ArrayList<String> messageWords, ArrayList<String>issueWords) {\n    this.messageWords = messageWords;\n    this.issueWords = issueWords;\n  }\n  \n  \n  public ArrayList<String> removeNonIssueWords() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Remove all non-relevant words from messageWords and return messageWords\n     * -----------------------------------------------------------------------------\n     */\n\n    return null;\n  }\n\n}\n",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_alt-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T22:51:55.628+00:00\",\"changed\":[\"cloned from \\\"CSA U6L8-L7b_pilot-2025\\\"\"],\"cloned_from\":\"CSA U6L8-L7b_pilot-2025\"}]"
}]]></config>
</Javalab>
