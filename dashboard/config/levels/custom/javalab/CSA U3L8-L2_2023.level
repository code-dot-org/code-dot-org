<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-01-12T22:15:26.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO #1:** Look at the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countGenre()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">MusicSurvey</code> class. What is this method supposed to do? When you look at the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"genres.txt\"</code>, you should notice that there are several entries that match <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"Rock\"</code>. Why do you think this is returning <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0</code>?\r\n\r\nâœ… **TO DO #2:** Modify the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">if</code> statement in this method to the following:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nif (response.getGenre().equals(targetGenre))\r\n</pre>\r\n\r\nDoes this fix the bug? Why do you think this happened?",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- ðŸ”Ž ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "project_template_level_name": "CSA U3L8-Comparing Strings PBT_2023",
    "teacher_markdown": "Students should notice that the `countGenre()` method is not correctly counting all of the `\"Rock\"` entries. The condition in the `if` statement is supposed to check if the current response is equivalent to `targetGenre`, however using the `==` operator to compare two `String` objects does not work as expected.\r\n\r\nWhen students modify the condition to use the `equals()` method, they should notice that the `countGenre()` method now correctly counts all of the `\"Rock\"` entries. Students should recall that a `String` is an object and conclude that the `equals()` method must be used to compare two `String` objects for equivalence.",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-01-12T22:15:26.904+00:00\",\"changed\":[\"cloned from \\\"CSA Investigate Level Template\\\"\"],\"cloned_from\":\"CSA Investigate Level Template\"},{\"changed_at\":\"2023-01-12 22:15:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-29 15:49:19 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-31 21:16:05 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
