<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T22:55:12.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A literature analyst wants to determine the number of words that start with a specific letter to analyze the writing style of an author and identify patterns in their writing.\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Literature</code> class has an instance variable <code style=\"background-color: #ececec; color: black; font-weight: bold;\">authorWritings</code>, which is a 2D array containing sentences from multiple works written by the author.\r\n\r\n✅ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Literature</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countNumWords()</code> method to count and return the number of words in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">authorWritings</code> that start with the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">targetLetter</code>.\r\n\r\n✅ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LiteratureRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countNumWords()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n💡 <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class in the <strong>Documentation</strong> tab ⬆️ for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">length()</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">indexOf()</code> methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Writing Styles",
    "bubble_choice_description": "A literature analyst wants to determine the number of words that start with a specific letter to analyze the writing style of an author and identify patterns in their writing.",
    "thumbnail_url": "https://images.code.org/2b1503cf76bde1c4819736ade9f233bd-book.png",
    "encrypted_validation": "N20suOBzY8RJzZreNBm+IP3eDQAk267UN7QIHpCK36jvIUf2kN+SD9RADWbe\nucPz8f4JzAwiGWfEq8pZoXuIRzCeW0XJJ92VrZiG4jalJnnFNSsDeG+gHy0j\nH2mazNo+8VsHs8qmM/rfJDSFSbaQXtm97/CsDfM9eHNuTf4NV9tNTjxqKD6Y\nnKyE4W2haDvbK4L9PuwXMmod5fseDDFkPzSmeqob+ctntxw4inucGtVGZkm5\narh5FViw0/L3My1Dh0H9XwOUfn3mYi2cS2sOU3aiQKPGD7CEsWs2A5DFySZY\nWGsemde5C/qkBepJtSK1m/Arc3ivmLRw0V6pH33qV3a0fV1lWCp5GkKZDCIc\nKQmLq6QrZdlANqA3f8Bahc4TOsVSHHeABL+RLYOG5pSRn+dmxzskunxRwZ5h\nM/2sEcs8ZkpL/GV4+rl1lxRU3UmIaCF6yZGKDCBF3pXiX2dMSHIdtXT2d/tB\nOfg2E/+QGm2wZEGp8PRmVz6289TmMmHVikbggVMttJA9VaGMDugijOOHfmM6\nlNFNVYF+hI+/FahdRr8lxLLhZnYm7OLcpB0Zfichn1rMcWaxtV715mhugyne\nrRxumKXLrxX0e42regC3vYIy0zDJarvCDQ3n0JEss+fnur/J2fO9MKhL9glV\nzazGBVXPW/cFphsZ28ouHrb/YEW/ooijqgVIY9YcMom8zijpPI6PVGhEhRmS\npr5UY7Blh2p/HMwaYu0rdxbFUb9pbB5KgmMk9sijxS5hHvL0so96CUzb33N9\nRYId6gomapCiGrO2GoD6CntYur2gq7lUyb1offkM9Q4qqSQ5ynbjFu4qZVGY\nbihmyNIFMjsKESkgy7dAFyrR8MRBTIgFxx35VWmH9utglKg1s/RZdzD6CAd9\ne1+167w3OrcisHR8NGLIqdWluGyqi+oe71MTHRgQoVm2Pb10RvlA+Ls4Ht0P\nCamH0TnXzvRqRD92Go3H9I4Q5QBk6wDZGXSx/QZLhp8U2w0DtQrF8iz6grTx\ns27M4bPDkkiIO0LUw+upr3jy0/0LM1c+ztqgsNO1ZoYZychKM7ZDp26nItxN\nwaWs4yFXMZReSLMPMRR6PwLCtf7fNWA1utgM5eaEglLkQ4mhnqHVbKe2Jgg3\nvHRaqBDLai0//4z9AtWt4Z1Vd6EXSnHWj4q70dVNz9GlZe6u4qRIRhmDw+Li\n0Xgtgk4xmaiAOFXQV3RUBJFfBbvoUQIRrC2k1fXfCwBc2K+S9sdxUwCknIcl\nlaAHfQZrXNDqeyKanVxM6xvPIMY4w7thJvHpg8/QgzTDz0WelQ0cI8tQODB2\ndGii/V8TGJgK8vgk7WyQr+LWXwM9SNDh4PDlzOQjKUktJH3tMRqLJt238byX\n0JQt8llgMxshd9Aii3MOWfCGTJWMUzeQ7BYvTwka02Wc2JhQ+jDOEFHvFy1P\n1njfwTC5MGM9sRcrdvzz1YTELqJXT6gfM0aIEY0u0T85ackg2krNfsKxBm5U\nbV5fBn9WS/+ut/LqkSnguUziceeb19rVUh60c77rqUxMa+RlHLhGJrO1euFm\nEgYkqZ7sEts4pRrgoQZIkPJ2GCP853gxQJyYHLnwM23ETnt00Z/F8dgD0yoU\nncn5P/8cFwTwjVordD7B/Qv2XjSfrV9OKWIdZjpcIFVwYCbgTFyiBdGerATH\nUOUL8q9FiFhH16kOzSgeCDJ7r41CrdG6lux+AkhMZgL7UM8d2znXaRMj5V3s\n9mRwivMHNAqCvE+LPXMCThWXF9XL/zo=\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "LiteratureRunner.java": {
        "text": "public class LiteratureRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array containing sentences by an author\n    String[][] writings = {{\"I\", \"know\", \"why\", \"the\", \"caged\", \"bird\", \"sings\"},\n                           {\"You\", \"may\", \"write\", \"me\", \"down\", \"in\", \"history\"},\n                           {\"I\", \"mean\", \"precisely\", \"the\", \"opposite\", \"of\", \"that\"}};\n\n    // Creates a Literature object\n    Literature author = new Literature(writings);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Call the countNumWords() method and prints the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Literature.java": {
        "text": "/*\n * Represents a literary work\n */\npublic class Literature {\n\n  private String[][] authorWritings;    // The 2D array containing sentences from multiple works\n\n  /*\n   * Initializes writings to the specified 2D array\n   * containing sentences from multiple works\n   */\n  public Literature(String[][] authorWritings) {\n    this.authorWritings = authorWritings;\n  }\n\n  /*\n   * Returns the 2D array authorWritings\n   */\n  public String[][] getAuthorWritings() {\n    return authorWritings;\n  }\n\n  /*\n   * Returns the number of words that start with targetLetter\n   */\n  public int countNumWords(String targetLetter) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Counts and returns the number of words in authorWritings that start\n     * with the parameter targetLetter.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_alt-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T22:55:12.318+00:00\",\"changed\":[\"cloned from \\\"CSA U5L7-L7b_pilot-2025\\\"\"],\"cloned_from\":\"CSA U5L7-L7b_pilot-2025\"}]"
}]]></config>
</Javalab>
