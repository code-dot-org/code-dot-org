<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Import `Dessert.java` and `Cake.java` from your **Backpack**.\r\n\r\nThe owner of Project Mercury Pastries Food Truck considers two desserts to be equal if they have the same flavor.\r\n\r\nIn `Dessert.java`:\r\n\r\n   * Write the method `public boolean equals(Dessert otherDessert)`.\r\n\r\n   * In the `equals()` method, determine if two `Dessert` objects are equal by comparing the flavor of each `Dessert` object. Return `true` if they are the same, otherwise return `false`.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyFoodTruck.java": {
        "text": "public class MyFoodTruck {\n  public static void main(String[] args) {\n\n    Dessert dessertA = new Dessert(\"chocolate\", 3, 6.50);\n    Dessert dessertB = new Dessert(\"chocolate\", 6, 8.00);\n\n    System.out.print(\"Is Dessert A equal to Dessert B? \");\n    System.out.println(dessertA.equals(dessertB));\n\n    Dessert dessertC = new Dessert(\"vanilla\", 1, 1.99);\n    Dessert dessertD = new Dessert(\"strawberry\", 3, 0.50);\n\n    System.out.print(\"Is Dessert C equal to Dessert D? \");\n    System.out.println(dessertC.equals(dessertD));\n    \n\n    Cake cakeA = new Cake(\"red velvet\", 12, 2.99, 1, \"maple\");\n    Cake cakeB = new Cake(\"chocolate\", 12, 2.99, 1, \"vanilla\");\n\n    System.out.print(\"Is Cake A equal to Cake B? \");\n    System.out.println(cakeA.equals(cakeB));\n\n    Cake cakeC = new Cake(\"pineapple\", 12, 2.99, 1, \"cherries\");\n    Cake cakeD = new Cake(\"pineapple\", 12, 2.99, 1, \"cherries\");\n\n    System.out.print(\"Is Cake C equal to Cake D? \");\n    System.out.println(cakeC.equals(cakeD));\n\n    Cake cakeE = new Cake(\"coconut\", 12, 2.99, 1, \"maple\");\n    Cake cakeF = new Cake(\"coconut\", 12, 2.99, 1, \"vanilla\");\n\n    System.out.print(\"Is Cake E equal to Cake F? \");\n    System.out.println(cakeE.equals(cakeF));\n    \n  }\n}",
        "isVisible": true
      },
      "Dessert.java": {
        "text": "public class Dessert {\n  private String flavor;\n  private int quantity;\n  private double price;\n\n  public Dessert(String flavor, int quantity, double price) {\n    this.flavor = flavor;\n    this.quantity = quantity;\n    this.price = price;\n  }\n\n  public String getFlavor() {\n    return flavor;\n  }\n\n  public int getQuantity() {\n    return quantity;\n  }\n\n  public double getPrice() {\n    return price;\n  }\n\n  public void setFlavor(String newFlavor) {\n    flavor = newFlavor;\n  }\n\n  public void setQuantity(int newQty) {\n    quantity = newQty;\n  }\n\n  public void setPrice(double newPrice) {\n    price = newPrice;\n  }\n\n  public String toString() {\n    return \"flavor = \\\"\" + flavor + \"\\\",\\nquantity = \" + quantity + \",\\nprice = \" + price;\n  }\n\n  public void printInfo() {\n    System.out.println(this);\n  }\n\n  public boolean equals(Dessert otherDessert) {\n    if (flavor.equals(otherDessert.getFlavor())) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n}",
        "isVisible": true
      },
      "Cake.java": {
        "text": "public class Cake extends Dessert {\n  private int layers;\n  private String topping;\n\n  public Cake(String flavor, int quantity, double price, int layers, String topping) {\n    super(flavor, quantity, price);\n    this.layers = layers;\n    this.topping = topping;\n  }\n\n  public int getLayers() {\n    return layers;\n  }\n\n  public String getTopping() {\n    return topping;\n  }\n\n  public void setLayers(int newLayers) {\n    if (layers > 0) {\n      setPrice(getPrice() * newLayers / getLayers());\n      layers = newLayers;\n    }\n  }\n}",
        "isVisible": true
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2021-09-23T18:51:19.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "audit_log": "[{\"changed_at\":\"2021-09-23T18:51:19.433+00:00\",\"changed\":[\"cloned from \\\"CSA U4L6-L4 v2\\\"\"],\"cloned_from\":\"CSA U4L6-L4 v2\"},{\"changed_at\":\"2021-09-23 18:51:21 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-23 19:05:19 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-23 19:06:54 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-23 19:09:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-23 19:09:38 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-23 19:12:23 +0000\",\"changed\":[\"project_template_level_name\",\"encrypted_examples\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-23 19:12:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-23 19:16:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-23 19:20:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-12-17 20:22:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-02-02 21:18:44 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
