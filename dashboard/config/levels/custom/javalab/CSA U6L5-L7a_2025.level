<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:15:46.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Election</code> class has an instance variable <code style=\"background-color: #ececec; color: black; font-weight: bold;\">voters</code> that represents a list of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Voter</code> objects.\r\n\r\n✅ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Election</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countVotes()</code> method to count the number of voters who have voted in an election.\r\n\r\n✅ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ElectionRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countVotes()</code> method and print the result.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_working_with_arraylist_data",
    "display_name": "Voting System",
    "bubble_choice_description": "A voting system administrator needs to keep track of whether voters have voted in an election.",
    "thumbnail_url": "https://images.code.org/4e82f82bf9c575d31ff19dfded4a7993-voting-box.png",
    "encrypted_validation": "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\nYg==\n",
    "encrypted_exemplar_sources": "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\nCpdJfCK439elmbTsrzqf\n",
    "start_sources": {
      "ElectionRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class ElectionRunner {\n  public static void main(String[] args) {\n\n    // Creates an ArrayList of voters\n    ArrayList<Voter> voters = new ArrayList<Voter>();\n    voters.add(new Voter(false));\n    voters.add(new Voter(true));\n    voters.add(new Voter(false));\n    voters.add(new Voter(false));\n    voters.add(new Voter(true));\n    \n    // Creates an Election object\n    Election studentCouncil = new Election(voters);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Call the countVotes() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Election.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents an election\n */\npublic class Election {\n\n  private ArrayList<Voter> voters;   // The list of voters\n\n  /*\n   * Initializes voters to the specified list of voters\n   */\n  public Election(ArrayList<Voter> voters) {\n    this.voters = voters;\n  }\n\n  /*\n   * Returns the list of voters\n   */\n  public ArrayList<Voter> getVoters() {\n    return voters;\n  }\n\n  /*\n   * Returns the number of voters that have voted\n   */\n  public int countVotes() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Traverse the voters list and count the number of times hasVoted is true\n     * for each Voter object.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Voter.java": {
        "text": "/*\n * Represents a voter in an election\n */\npublic class Voter {\n\n  private boolean hasVoted;   // Whether or not a voter has voted\n\n  /*\n   * Sets hasVoted to the specified status\n   */\n  public Voter(boolean hasVoted) {\n    this.hasVoted = hasVoted;\n  }\n\n  /*\n   * Returns whether or not the voter has voted\n   */\n  public boolean getHasVoted() {\n    return hasVoted;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:15:46.820+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L7a_2023\\\"\"],\"cloned_from\":\"CSA U6L5-L7a_2023\"}]"
}]]></config>
</Javalab>
