<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T20:58:26.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Solver</code> represents a person that participated in the <a href=\"https://www.worldcubeassociation.org/\" target=\"_blank\">**World Cube Association**</a> competition and has instance variables for the name of the person and the time it took them to solve a Rubik's Cube in centiseconds.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Solver.java</code>,\r\n\r\n1. Declare and initialize a static variable called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">fastestTime</code> to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">1000000</code>.\r\n\r\n2. In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Solver</code> constructor, check if the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">time</code> is less than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">fastestTime</code>. If this is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code>, update <code style=\"background-color: #ececec; color: black; font-weight: bold;\">fastestTime</code> to the value passed to the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">time</code>.\r\n\r\n3. Write a static method called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getFastestTime</code> that returns a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the text <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"The fastest time so far is {fastestTime}\"</code>, where <code style=\"background-color: #ececec; color: black; font-weight: bold;\">fastestTime</code> is the fastest time of all <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Solver</code> objects.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SolverRunner.java</code>, create several <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Solver</code> objects, such as:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\n* Name: Max Park\r\n  Time: 363\r\n\r\n* Name: Asher Kim-Magierek\r\n  Time: 389\r\n\r\n* Name: Max Siauw\r\n  Time: 403\r\n\r\n* Name: Patrick Ponce\r\n  Time: 424\r\n\r\n* Name: Tanzer Balimtas\r\n  Time: 464\r\n</pre>\r\n\r\n‚úÖ **TO DO #3:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SolverRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getFastestTime()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring and initializing a constant and writing a static method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/constants",
      "/courses/csa-2023/guides/static-methods"
    ],
    "display_name": "Rubik's Cube Solvers",
    "bubble_choice_description": "Use static variables and methods to keep track of the fastest time it has taken someone to solve a Rubik's Cube.",
    "thumbnail_url": "https://images.code.org/396c695350dff06816a14f6f7df1470f-cube_of_rubik_1.png",
    "encrypted_validation": "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\nsA==\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "SolverRunner.java": {
        "text": "public class SolverRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate several Solver objects, then call the getFastestTime()\n     * method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Solver.java": {
        "text": "/*\n * Represents a person that participated in\n * the World Cube Association competition\n */\npublic class Solver {\n\n  private String name;    // The name of a person\n  private int time;       // The time in centiseconds it took a person to solve a Rubik's Cube\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Declare and initialize a static variable called fastestTime to 1000000.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n  /*\n   * Sets name to the specified name and time\n   * to the specified time in centiseconds\n   */\n  public Solver(String name, int time) {\n    this.name = name;\n    this.time = time;\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Check if the parameter time is less than fastestTime. If this is true,\n     * update fastestTime to the value passed to the parameter time.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write a static method called getFastestTime() that returns a String\n   * containing the text \"The fastest time so far is {fastestTime}\", where\n   * fastestTime is the fastest time of all Solver objects.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n  \n\n  /*\n   * Returns a String containing information about the solver\n   */\n  public String toString() {\n    return name + \": \" + time + \" centiseconds\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2024",
    "ai_tutor_available": "true"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T20:58:26.872+00:00\",\"changed\":[\"cloned from \\\"CSA U4L2-L8c_2023\\\"\"],\"cloned_from\":\"CSA U4L2-L8c_2023\"},{\"changed_at\":\"2024-03-28 19:41:45 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-03-28 19:43:07 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-03-28 19:49:40 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 16:59:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 17:01:28 +0000\",\"changed\":[\"long_instructions\",\"ai_tutor_available\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 17:03:22 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 17:13:33 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 17:16:58 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 17:19:34 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 18:02:04 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 18:23:15 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 18:30:32 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 18:31:10 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 18:33:36 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-09-30 18:36:53 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"}]"
}]]></config>
</Javalab>
