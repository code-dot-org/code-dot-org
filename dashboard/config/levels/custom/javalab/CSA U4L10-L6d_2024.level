<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T20:59:16.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "An auto lender wants to make it easier for potential customers to determine what their monthly car payment might be after taking out a car loan.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Lender.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calculateMonthlyPayment()</code> method to calculate and return the monthly payment. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calculateMonthlyPayment()</code> method should:\r\n\r\n1. Have a parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">customer</code> for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Customer</code> object.\r\n\r\n2. If the loan length is less than or equal to zero OR the interest rate is less than or equal to zero, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">-1</code>.\r\n\r\n3. Else if the down payment is greater than or equal to the loan amount, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">1</code>.\r\n\r\n4. Else, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getPaymentAmount()</code> method and return the result.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Lender.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getResult()</code> method to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the customer's result.\r\n\r\n1. If <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calculateMonthlyPayment()</code> returns <code style=\"background-color: #ececec; color: black; font-weight: bold;\">-1</code>, return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the text <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"Error! You must take out a valid car loan.\"</code>\r\n\r\n2. Else if <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calculateMonthlyPayment()</code> returns <code style=\"background-color: #ececec; color: black; font-weight: bold;\">1</code>, return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the text <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"The car can be paid in full.\"</code>\r\n\r\n3. Else return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the text <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"Your monthly payment will be {payment}.\"</code>\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing multi-selection statements.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Car Loan",
    "bubble_choice_description": "Implement your algorithm to determine a customer's monthly payment for a car loan.",
    "thumbnail_url": "https://images.code.org/47b9cd91c4a5d73be5f0bbc31c65aff0-car.png",
    "reference_links": [
      "/courses/csa-2023/guides/multi-selection-statements"
    ],
    "video_key": "csa_multi-selection_statements",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nn3wYiavS8LuLVrO/OSWvWcy09JEmRdyXGog2Z38=\n",
    "start_sources": {
      "LoanRunner.java": {
        "text": "public class LoanRunner {\n  public static void main(String[] args) {\n\n    // Creates a Lender object\n    Lender auto = new Lender();\n\n    // Creates several Customer objects\n    Customer firstCustomer = new Customer(10000, 5, 4.5, 1000);\n    Customer secondCustomer = new Customer(20000, 10, 0, 2000);\n    Customer thirdCustomer = new Customer(15000, 3, 5.2, 15000);\n\n    // Calls the calculateMonthlyPayment() method and prints the result\n    double firstResult = auto.calculateMonthlyPayment(firstCustomer);\n    System.out.println(\"First customer: \" + auto.getResult(firstResult));\n\n    double secondResult = auto.calculateMonthlyPayment(secondCustomer);\n    System.out.println(\"Second customer: \" + auto.getResult(secondResult));\n\n    double thirdResult = auto.calculateMonthlyPayment(thirdCustomer);\n    System.out.println(\"Third customer: \" + auto.getResult(thirdResult));\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Lender.java": {
        "text": "/*\n * Represents an auto loan lender\n */\npublic class Lender {\n\n  /*\n   * Returns -1 if the customer's loan length is less than or equal to 0 OR the\n   * interest rate is less than or equal to 0, returns 1 if the down payment is\n   * greater than or equal to the loan amount, or returns the result of a call\n   * to the getPaymentAmount() method\n   */\n  public double calculateMonthlyPayment(Customer customer) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use if/else-if/else statements to check each condition and return\n     * the expected result.\n     * -----------------------------------------------------------------------------\n     */\n    \n    return -1;\n  }\n\n  /*\n   * Calculates and returns the payment amount\n   */\n  public double getPaymentAmount(Customer customer) {\n    int months = customer.getLength() * 12;\n    double remainingBalance = customer.getAmount() - customer.getDownPayment();\n    double monthlyBalance = remainingBalance / months;\n    double interest = (monthlyBalance * customer.getRate()) / 100;\n    double monthlyPayment = monthlyBalance + interest;\n    return monthlyPayment;\n  }\n\n  /*\n   * Returns \"Error! You must take out a valid car loan.\" if\n   * result is -1, \"The car can be paid in full.\" if result is\n   * 1, or \"Your monthly payment will be {payment}.\"\n   */\n  public String getResult(double payment) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use if/else-if/else statements to check each condition and return\n     * the expected result.\n     * -----------------------------------------------------------------------------\n     */\n    \n    return \"\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Customer.java": {
        "text": "/*\n * Represents a customer\n */\npublic class Customer {\n\n  private double amount;        // The requested amount for the loan\n  private int length;           // The requested length of the loan in years\n  private double rate;          // The requested interest rate for the loan\n  private double downPayment;   // The down payment a customer will make\n\n  /*\n   * Sets amount, length, rate, and downPayment to the specified values\n   */\n  public Customer(double amount, int length, double rate, double downPayment) {\n    this.amount = amount;\n    this.length = length;\n    this.rate = rate;\n    this.downPayment = downPayment;\n  }\n\n  /*\n   * Returns the requested amount for the loan\n   */\n  public double getAmount() {\n    return amount;\n  }\n\n  /*\n   * Returns the requested length for the loan\n   */\n  public int getLength() {\n    return length;\n  }\n\n  /*\n   * Returns the requested interest rate for the loan\n   */\n  public double getRate() {\n    return rate;\n  }\n\n  /*\n   * Returns the down payment the customer will make\n   */\n  public double getDownPayment() {\n    return downPayment;\n  }\n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "name_suffix": "_2024",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T20:59:16.873+00:00\",\"changed\":[\"cloned from \\\"CSA U4L10-L6d_2023\\\"\"],\"cloned_from\":\"CSA U4L10-L6d_2023\"}]"
}]]></config>
</Javalab>
