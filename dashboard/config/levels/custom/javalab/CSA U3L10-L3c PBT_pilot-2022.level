<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"statenames.txt\");\n    String[] states = myFileReader.getStringData(50);\n\n    myFileReader.setFile(\"admissionyears.txt\");\n    int[] years = myFileReader.getIntData(50);\n\n    States myStates = new States(states, years);\n\n    // TO DO #2: Print the result of a call to hasDuplicates().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a double array containing the values in the file\n   */\n  public double[] getDoubleData(int numValues) {\n    double[] values = new double[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextDouble()) {\n        values[index] = fileReader.nextDouble();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "statenames.txt": {
        "text": "Alabama\nAlaska\nArizona\nArkansas\nCalifornia\nColorado\nConnecticut\nDelaware\nFlorida\nGeorgia\nHawaii\nIdaho\nIllinois\nIndiana\nIowa\nKansas\nKentucky\nLouisiana\nMaine\nMaryland\nMassachusetts\nMichigan\nMinnesota\nMississippi\nMissouri\nMontana\nNebraska\nNevada\nNew Hampshire\nNew Jersey\nNew Mexico\nNew York\nNorth Carolina\nNorth Dakota\nOhio\nOklahoma\nOregon\nPennsylvania\nRhode Island\nSouth Carolina\nSouth Dakota\nTennessee\nTexas\nUtah\nVermont\nVirginia\nWashington\nWest Virginia\nWisconsin\nWyoming",
        "isVisible": true
      },
      "admissionyears.txt": {
        "text": "1819\n1959\n1912\n1836\n1850\n1876\n1788\n1787\n1845\n1788\n1959\n1890\n1818\n1816\n1846\n1861\n1792\n1812\n1820\n1788\n1788\n1837\n1858\n1817\n1821\n1889\n1867\n1864\n1788\n1787\n1912\n1788\n1789\n1889\n1803\n1907\n1859\n1787\n1790\n1788\n1889\n1796\n1845\n1896\n1791\n1788\n1889\n1863\n1848\n1890",
        "isVisible": true
      },
      "States.java": {
        "text": "/*\n * Analyzes data about states\n */\npublic class States {\n\n  private String[] stateNames;\n  private int[] admissionYears;\n\n  /*\n   * Constructor to create an States object with the specified\n   * arrays of state names and years they were admitted\n   */\n  public States(String[] stateNames, int[] admissionYears) {\n    this.stateNames = stateNames;\n    this.admissionYears = admissionYears;\n  }\n\n  /*\n   * Returns true if there are duplicate years in\n   * the admissionYears array, otherwise returns false\n   */\n  public boolean hasDuplicates() {\n    // TO DO #1: Traverse the admissionYears array to determine if there\n    // are duplicate values and return the result.\n\n\n    return false;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "name_suffix": "_pilot-2022"
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:44.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:44.538+00:00\",\"changed\":[\"cloned from \\\"CSA U3L10-L3c PBT_2022\\\"\"],\"cloned_from\":\"CSA U3L10-L3c PBT_2022\"},{\"changed_at\":\"2022-09-09 19:31:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-09 19:31:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
