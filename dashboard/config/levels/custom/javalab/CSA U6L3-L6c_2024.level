<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T21:04:16.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A coach keeps track of their team's performance in a text file. They want to calculate the average time it takes the team to complete a race.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Team</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getAverageTime()</code> method to calculate and return the average time it takes the team to complete a race.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TeamRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getAverageTime()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Integer</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with instantiating <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Integer</code> objects and using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">parseInt()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_wrapper_classes_part_1",
    "display_name": "Team Performance",
    "bubble_choice_description": "A coach keeps track of their team's performance in a text file. They want to calculate the average time it takes the team to complete a race.",
    "thumbnail_url": "https://images.code.org/503cd41e008148c9e91723ff0630854d-finish.png",
    "encrypted_exemplar_sources": "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\n",
    "name_suffix": "_2024",
    "ai_tutor_available": true,
    "start_sources": {
      "Team.java": {
        "text": "/*\n * Represents a team\n */\npublic class Team {\n\n  private String[] times;     // The times of each individual on the team\n  /*\n   * Sets times to the specified values\n   */\n  public Team(String[] times) {\n    this.times = times;\n  }\n\n  /*\n   * Returns the average time it takes the team to complete a race\n   */\n  public int getAverageTime() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calculate the average time it takes the team to complete a race.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    return -1;\n  }\n\n  /*\n   * Returns a 1D array of Strings using the data in the specified files\n   */\n  public static String[] createTimes(String timesFile) {\n    return FileReader.toStringArray(timesFile);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "times.txt": {
        "text": "20\n21\n24\n19\n32",
        "isVisible": true,
        "tabOrder": 2
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      },
      "TeamRunner.java": {
        "text": "public class TeamRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array using data from a text file\n    String[] times = Team.createTimes(\"times.txt\");\n\n    // Creates a Team object\n    Team myTeam = new Team(times);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getAverageTime() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    }
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:04:16.178+00:00\",\"changed\":[\"cloned from \\\"CSA U6L3-L6c_2023\\\"\"],\"cloned_from\":\"CSA U6L3-L6c_2023\"},{\"changed_at\":\"2024-07-26 16:30:38 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":17326,\"changed_by_email\":\"larsensn@yahoo.com\"},{\"changed_at\":\"2024-07-26 16:57:37 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":17326,\"changed_by_email\":\"larsensn@yahoo.com\"},{\"changed_at\":\"2024-07-26 16:57:45 +0000\",\"changed\":[],\"changed_by_id\":17326,\"changed_by_email\":\"larsensn@yahoo.com\"},{\"changed_at\":\"2024-07-26 16:58:12 +0000\",\"changed\":[],\"changed_by_id\":17326,\"changed_by_email\":\"larsensn@yahoo.com\"},{\"changed_at\":\"2024-07-26 17:08:04 +0000\",\"changed\":[],\"changed_by_id\":17326,\"changed_by_email\":\"larsensn@yahoo.com\"},{\"changed_at\":\"2024-10-17 15:29:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-10-17 15:32:26 +0000\",\"changed\":[],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-10-17 20:25:17 +0000\",\"changed\":[],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
