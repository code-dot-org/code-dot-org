<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T21:04:15.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "✅ **TO DO #1:** Write the method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getInt()</code> in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Data</code> class to return the primitive <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> value of the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">number</code>.\r\n\r\n✅ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">DataRunner</code> class,\r\n\r\n1. Instantiate an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Integer</code> object using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">new</code> keyword.\r\n\r\n2. Declare and initialize an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> variable that stores the value returned from calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getInt()</code> method.\r\n\r\n3. Print the value stored in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> variable.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n💡 <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Integer</code> class in the <strong>Documentation</strong> tab ⬆️ for help with instantiating <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Integer</code> objects and using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">intValue()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_wrapper_classes_part_1",
    "display_name": "Object to Primitive",
    "bubble_choice_description": "Get the primitive `int` value of an `Integer` object.",
    "thumbnail_url": "https://images.code.org/6f31380a3d7308f8a4622ec3dc28fee9-convert.png",
    "encrypted_exemplar_sources": "w0sHSRE+XBDAQ9ecY28KszpKoL4LrHEI7bNKJGKfeywXKNN+Xjdb66Y0QWi5\nLeNeqYF2a8VZbn5wcr+3IZeqHpPAfYhtTcA5IudjKmPN979Z3/fuapAtreMK\nlblfBJByu94jaStJRVVtAf3FuxZErSIX+EKhYEk0JCCfLRcfH8R9eymQ4mQu\njYnf7uM8cOUEV1BdPyulJv9F+qVCPRPTr7hUzOKy3NtwfwF0WwWq7KAXTDWN\nVU8B+cBbknRyBKAuVfSgQAC4L1Rozi24AlU3uLQNGho0/rwITWKyVbiP8d9v\nl5RFe8Pz2Fose8CoukNKxIqkSenbSjeWCuENne59I6YAA3Q5ujwBOxaLmmRS\nD2KgcMLI3P0O5DlzBFHBspK39QfqxijUAjsEGR2582jTy/VtQxie1OGAfUXy\nVzbHa+gAqMPHcBl+xgyGRmfUxSgIVT6kk2IFaDtLHqqE1rlSA7TLC7vSIyom\nuislu6n/gcV85vnefzhsoXceR7OHcpiU4rKZNEPIA+/tYs9nm8Zi2+OsLzFX\nC3AbQdRToFNBJ1Km3l10ziZ7TvJGZOB1OKON0svuILMvYyMf9Nn+KJGiNzWh\nahtmOdAbQ5pUOztCcNFC1c/DzlTfeBeYaGKzzjEOcQyM4brphC9c4HSbGWtA\nAMNSBuIr4+H6nd7keGCKgIK86uoBVst2bhSElK6lNg0ZeKFHXkVkxFSfqFn4\n65aAHtYHQVcIEHIHpKgA/B4JmFe/R9nBnS1sDM3MJta+Es8eBllv+iMSOKrg\nVTSS6Zo4QTuK3u5RKqMRpUdgvy4PQmw6un75B6AmXHuP1WpLvaeJwXJprbBt\nzKRoNbPaaaJnutojg2TbXRj7lNmolOCvnL4yIgofypi48e2/iDJLGkGJgzHl\nLuH/Rt0j0UJteCkeep1hchrJx9gM1tP7RfSyq0zVflo+hJNHpdobla/Fmsr0\nNj1oexN5Rmt6OCMa8j5nAuJl0NJT8K+9cFkx+xusXAo/+cUhTWZ6YLiFWVJ+\nG/6yzvDfQLYY1jHlMkx6StQ55hSlkLRjDGZLqwXk0Zp0n+Ok0RMOC5oX71dQ\nMtfkf8BwhkecVjaHF+A2q2Sew4B2b7KL7oQXKiD/YzHoloqaxcY0xlj9m5Ut\n8XZCgyf51XvwEkudtN5AiHO+MHIQHzmB7LR+dnQxTXG5rEycblUtcmEEA32x\nu/mtGAyDc7kCWTVs+oT0TvuX4AnggGS4ox+2Gfu5rlLHralqLjwDcB/ttLIX\nE43XYp7G7rZh6sC420cQ/+j06KrGcxlW8L2dbLnl5hbclmdq/e4dSCu+MpgZ\nb0dVnWjsZgwM1SUOi4kaIaPKK/T6l6Da6zYxn2f2VzGpCLwM7iyqqYFIwmrg\nDQIJolIuJ7leq+UnuQzcOMMmoWUwU1xjaWQPMzdkgLkexlhHhymN2utjApb3\nj4YDv1Nz3BYyJJDnk4OHb1lZJz7NVNV/jDEjVASfQ2bmMZrlD0CTrHdWGfzh\nXkADlzqWMNCFmLd3chQjs4bxTlO1RUiIOyQhaTSjLR+jIPleZx3paNh+3Fyr\n2ubQn9dBKkfI8+YlMa64sy7SVyQvPEunmRoCzJTAeig5tUOX6BrhdiZDCE9d\nQkyF8EMiNo9g7QMsXXqmeouCJibzqLya0G6SrqitZVP4iyJObBS/gXMkWlj9\nC7KxYg==\n",
    "name_suffix": "_2024",
    "ai_tutor_available": true,
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate an Integer object using the new keyword, then declare and\n     * initialize an int variable that stores the value returned from calling the\n     * getInt() method. Print the value stored in the int variable.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Data.java": {
        "text": "/*\n * Reads and processes data\n */\npublic class Data {\n\n  /*\n   * Returns a primitive int value of number\n   */\n  public static int getInt(Integer number) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Return the primitive int value of number.\n     * -----------------------------------------------------------------------------\n     */\n\n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "DataTest.java": {
        "text": "import static org.junit.jupiter.api.Assertions.*;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.DisplayName;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.TestMethodOrder;\nimport org.junit.jupiter.api.MethodOrderer.OrderAnnotation;\nimport org.junit.jupiter.api.Order;\n\n@TestMethodOrder(OrderAnnotation.class)\n@DisplayName(\"Data.java Test\")\npublic class DataTest {\n\n  String messageGap = \"\\n       \";\n   \n  @BeforeEach\n  public void setup() {\n\n  }\n   \n  @Test\n  @Order(1)\n  @DisplayName(\"getInt() returns a primitive int value => \")\n  public void testGetInt() {\n    String message = \"Call intValue() on the Integer to get the primitive int value\" + messageGap;\n\n    int randomInt = (int) (Math.random() * 100);\n    Integer intObject = new Integer(randomInt);\n    \n    assertEquals(randomInt, Data.getInt(intObject), message);\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 2
      }
    }
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:04:15.847+00:00\",\"changed\":[\"cloned from \\\"CSA U6L3-L6a_2023\\\"\"],\"cloned_from\":\"CSA U6L3-L6a_2023\"},{\"changed_at\":\"2024-07-05 15:17:16 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2024-10-17 15:27:32 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-10-17 15:32:27 +0000\",\"changed\":[],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-10-17 20:25:15 +0000\",\"changed\":[],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
