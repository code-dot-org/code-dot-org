<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:13:46.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A weather analyst wants to find out which city had the highest temperature over several days. They have the following values:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nRow 1: 37.27, 40.66, 53.53, 52.36, 48.87\r\nRow 2: 62.2, 61.47, 60.31, 62.42, 62.38\r\nRow 3: 81.5, 80.04, 81.61, 85.91, 85.69\r\nRow 4: 56.41, 48.6, 51.67, 48.72, 52.65\r\n</pre>\r\n\r\nwhere each row represents New York, Los Angeles, Miami, and Seattle, respectively. Each column represents the temperature on March 29th, March 30th, March 31st, April 1st, and April 2nd, respectively.\r\n\r\nThe weather analyst wants to find the overall average temperature.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Temperatures</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverage()</code> method using enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loops to calculate and return the overall average of all temperatures.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">WeatherRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverage()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_enhanced_for_loops_and_2d_arrays",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Daily Temperatures",
    "bubble_choice_description": "A weather analyst wants to know the overall average temperature for several cities and their daily temperatures.",
    "thumbnail_url": "https://images.code.org/da503f4004138d2d2ee272ecde2d51fb-image-1651005744030.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nr/HFtLzQcg==\n",
    "start_sources": {
      "Temperatures.java": {
        "text": "/*\n * Analyzes data about daily temperatures in cities\n */\npublic class Temperatures {\n\n  private double[][] dailyTemps;  // The 2D array of daily temperatures\n\n  /*\n   * Initializes dailyTemps to the specified\n   * 2D array of daily temperatures\n   */\n  public Temperatures(double[][] dailyTemps) {\n    this.dailyTemps = dailyTemps;\n  }\n\n  /*\n   * Returns the 2D array dailyTemps\n   */\n  public double[][] getDailyTemps() {\n    return dailyTemps;\n  }\n\n  /*\n   * Returns the overall average of all temperatures\n   */\n  public double calcAverage() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calculate and return the overall average temperature.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "WeatherRunner.java": {
        "text": "public class WeatherRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array containing the daily temperatures for several cities\n    double[][] cityTemps = {{37.27, 40.66, 53.53, 52.36, 48.87},\n                            {62.2, 61.47, 60.31, 62.42, 62.38},\n                            {81.5, 80.04, 81.61, 85.91, 85.69},\n                            {56.41, 48.6, 51.67, 48.72, 52.65}};\n\n    // Creates a Temperatures object\n    Temperatures cities = new Temperatures(cityTemps);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcAverage() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:13:46.657+00:00\",\"changed\":[\"cloned from \\\"CSA U5L5-L7b_2023\\\"\"],\"cloned_from\":\"CSA U5L5-L7b_2023\"}]"
}]]></config>
</Javalab>
