<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-01T21:21:46.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A video game enthusiast has a list of their favorite games and wants to be able to find the first or last occurrence of a video game by a target publisher in their list.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">GamesManager</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">gamesByPublisher()</code> method to find and return the index location of the first or last occurrence of a video game by a target publisher in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">games</code>.\r\n\r\n   * If the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">searchFirst</code> is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code>, the method should return the first occurrence of the target publisher. If it is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code>, it should return the last occurrence.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">GamesRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">gamesByPublisher()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with implementing a binary search.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/binary-search"
    ],
    "video_key": "csa_searching_algorithms",
    "display_name": "Video Games",
    "bubble_choice_description": "A video game enthusiast has a list of their favorite games and wants to be able to find the first or last occurrence of a video game by a target publisher in their list.",
    "thumbnail_url": "https://images.code.org/c8ab3502a3e39bcae467f104c9ba69fb-console.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\n7piw4Y3NaSWsEF5oMjRRP2i2Lz7nF/u2pGYjOVuh0OUPOTbg+dMppGRWMaeB\ngiPfqyCt0RWqGjYG4IwkcS8XOJoMFFDW+k+Z0dR1J9vwecyjJNps4Nayx3Pd\npKBYTmFUPY24+caGXTjBGCFnFD+sWr1sZWHLpwcjSLNQR6OnkcWhGuxCtLev\nFadJvImS2vQltQ5f6mOpt3vaR439UFPSOUtdNdfn6TzDpiEJZStaZKq1Cw5V\nAp4EMhzgfwUa+0eTz8aDwNVOlkGREsU7OIT8ZkhoinVz7ZS1xGfrgrgpsOYL\nVVySQ2WoqaS43rwk70lbH9lNR7cw1zVm2acnUzWHh+YjtOWPt/D0kj4GTuoo\nHcjltth1qLqLi1R4Q/uGIp+0OznTKRbIoVuaUsA/s3LqNKnuySiDm+r8LbsG\nPCipAVX4g+NDQ7RONx4YPU/JrtlBHRd3nhs6RZZhNHrAcISb6IiaxM786Fwv\ndDYMpFTqKoSoPbYxdCl3rgWKoW/WRVSoaZtAXErfBNSogPPWpoaTNz4UcC6J\nazOXwErHu+qnAqFQ9VLHFXvF9lYa2xlFmiUUz4vpZTBmVqEv+Gwb/vv1sA==\n",
    "start_sources": {
      "GameRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class GameRunner {\n  public static void main(String[] args) {\n\n    ArrayList<VideoGame> games = GamesManager.getVideoGames(\"games.txt\");\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the gamesByPublisher() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n    \n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "VideoGame.java": {
        "text": "/*\n * Represents a video game\n */\npublic class VideoGame {\n\n  private String title;        // The title of a game\n  private String publisher;    // The publisher of a game\n\n  /*\n   * Sets title and publisher to the specified values\n   */\n  public VideoGame(String title, String publisher) {\n    this.title = title;\n    this.publisher = publisher;\n  }\n\n  /*\n   * Returns the title of the game\n   */\n  public String getTitle() {\n    return title;\n  }\n\n  /*\n   * Returns the publisher of the game\n   */\n  public String getPublisher() {\n    return publisher;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "GamesManager.java": {
        "text": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Analyzes information about video games\n */\npublic class GamesManager {\n\n  /*\n   * Finds the first or last occurrence of a target publisher\n   */\n  public static int gamesByPublisher(ArrayList<VideoGame> games, String target, boolean searchFirst) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Implement the binary search algorithm to count the number of video\n     * games by the target publisher.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n    return -1;\n  }\n\n  /*\n   * Reads the video game information from a file\n   * and returns an ArrayList of VideoGames\n   */\n  public static ArrayList<VideoGame> getVideoGames(String filename) {\n    File myFile = new File(filename);\n    Scanner fileReader = createScanner(myFile);\n\n    ArrayList<VideoGame> tempGames = new ArrayList<VideoGame>();\n\n    while (fileReader.hasNextLine()) {\n      String currentLine = fileReader.nextLine();\n      VideoGame currentGame = createVideoGame(currentLine);\n      tempGames.add(currentGame);\n    }\n\n    fileReader.close();\n    return tempGames;\n  }\n\n  /*\n   * Returns a Scanner object to read a specified File\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Gets the video game title and publisher from the\n   * currentLine and returns a VideoGame object\n   */\n  public static VideoGame createVideoGame(String currentLine) {\n    int comma = currentLine.indexOf(\",\");\n\n    String gameTitle = currentLine.substring(0, comma);\n    String gamePublisher = currentLine.substring(comma + 1);\n\n    VideoGame temp = new VideoGame(gameTitle, gamePublisher);\n    return temp;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "games.txt": {
        "text": "The Elder Scrolls V: Skyrim,Bethesda Softworks\nTetris,Electronic Arts\nMinecraft,Mojang Studios\nPac-Man,Namco\nMario Kart Wii,Nintendo\nSuper Mario Bros.,Nintendo\nWii Sports,Nintendo",
        "isVisible": true,
        "tabOrder": 3
      }
    },
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-01T21:21:46.020+00:00\",\"changed\":[\"cloned from \\\"CSA U8L7-L7d_2025\\\"\"],\"cloned_from\":\"CSA U8L7-L7d_2025\"}]"
}]]></config>
</Javalab>
