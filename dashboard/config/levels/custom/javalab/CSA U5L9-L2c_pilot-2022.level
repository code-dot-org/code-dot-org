<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:50:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A teacher has assigned a group project to the class. Each student in each group has been assigned a different role for the project. The teacher wants to make sure that no students in a group have been assigned the same role. If so, they want to automatically assign the role `\"Researcher\"`(#e7e8ea). They have the information stored in a 2D array, where each row represents a different group.\r\n\r\n##In Teacher.java:\r\n\r\n1. Write the method `replaceRoles()`(#e7e8ea) to find and replace any duplicate values in `currentRow`(#e7e8ea).\r\n\r\n   * If `currentRow`(#e7e8ea) contains duplicate values, replace the duplicates with `\"Researcher\"`(#e7e8ea).\r\n\r\n2. Write the method `replaceDuplicates()`(#e7e8ea) to replace any duplicate values in each row in the 2D array `projectRoles`(#e7e8ea).\r\n\r\n##In MyConsole.java:\r\n\r\n3. Call the `replaceDuplicates()`(#e7e8ea) method and print the updated array.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Group Project",
    "project_template_level_name": "CSA U5L9-L2c PBT_pilot-2022",
    "bubble_choice_description": "A teacher has assigned a group project to the class. The teacher wants to make sure that no students in a group have been assigned the same role for the project.",
    "thumbnail_url": "https://images.code.org/202f6ddb3dda722e571b18a5e0a13e79-image-1651275618197.png",
    "encrypted_exemplar_sources": "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\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[][] projectRoles = {{\"Leader\", \"Scribe\", \"Leader\", \"Time Keeper\"},\n                               {\"Presenter\", \"Leader\", \"Time Keeper\", \"Scribe\"},\n                               {\"Scribe\", \"Leader\", \"Presenter\", \"Scribe\"},\n                               {\"Time Keeper\", \"Presenter\", \"Presenter\", \"Leader\"}};\n\n    Teacher myTeacher = new Teacher(projectRoles);\n    myTeacher.printProjectRoles();\n\n    // TO DO #3: Call the replaceDuplicates() method and print the updated array.\n\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Teacher.java": {
        "text": "/*\n * Represents a teacher\n */\npublic class Teacher {\n\n  private String[][] projectRoles;   // The 2D array of project roles\n\n  /*\n   * Constructor to create a Teacher with\n   * the specified 2D array of project roles\n   */\n  public Teacher(String[][] projectRoles) {\n    this.projectRoles = projectRoles;\n  }\n\n  /*\n   * Returns the 2D array of project roles\n   */\n  public String[][] getProjectRoles() {\n    return projectRoles;\n  }\n\n  /*\n   * Prints the project roles\n   */\n  public void printProjectRoles() {\n    for (int row = 0; row < projectRoles.length; row++) {\n      for (int col = 0; col < projectRoles[0].length; col++) {\n        System.out.print(projectRoles[row][col] + \" \");\n      }\n\n      System.out.println();\n    }\n  }\n\n  /*\n   * Replaces any duplicate roles in currentRow\n   */\n  public void replaceRoles(String[] currentRow) {\n    // TO DO #1: Find and replace any duplicate roles in currentRow.\n\n\n    \n  }\n\n  /*\n   * Replaces any duplicate roles in a group with Researcher\n   */\n  public void replaceDuplicates() {\n    // TO DO #2: Find and replace any duplicate roles in each row.\n\n\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:50:24.114+00:00\",\"changed\":[\"cloned from \\\"CSA U5L9-L2c_2022\\\"\"],\"cloned_from\":\"CSA U5L9-L2c_2022\"},{\"changed_at\":\"2022-10-12 22:02:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-12 22:20:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-12 22:20:14 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
