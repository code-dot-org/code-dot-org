<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:54:49.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A scientist is analyzing the air quality of over 100 countries in the world to identify which countries have a high Air Quality Index. The maximum satisfactory Air Quality Index is 100, and they need to update their program to specify this as the maximum acceptable index.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">AirQuality.java</code>, declare and initialize a constant called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">MAX\\_AQI\\_INDEX</code> to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">100</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getUnsatisfactory()</code> method, update the condition to use the constant.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring and initializing a constant.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/constants"
    ],
    "display_name": "Air Quality",
    "bubble_choice_description": "Use a constant to specify the maximum satisfactory Air Quality Index.",
    "thumbnail_url": "https://images.code.org/dff5c0260b480ae6a565928a6b8a0df8-pollution.png",
    "encrypted_validation": "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\nR/EetuBpsKbwTw==\n",
    "start_sources": {
      "AirQualityRunner.java": {
        "text": "public class AirQualityRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Country objects\n    Country[] countries = {new Country(\"Grenada\", 22), new Country(\"India\", 332), new Country(\"Chile\", 51), new Country(\"Netherlands\", 29),\n                           new Country(\"Turkey\", 180), new Country(\"Costa Rica\", 13), new Country(\"Egypt\", 86), new Country(\"Mexico\", 162)};\n\n    // Instantiates an AirQuality with the array of countries\n    AirQuality data = new AirQuality(countries);\n\n    // Calls the getUnsatisfactory() method and prints the result\n    System.out.println(data.getUnsatisfactory());\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "AirQuality.java": {
        "text": "/*\n * Manages data about air quality in countries\n */\npublic class AirQuality {\n\n  private Country[] countries;    // The 1D array of countries\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Declare and initialize a constant called MAX_AQI_INDEX to 100.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n  /*\n   * Initializes countries to the specified 1D array of countries\n   */\n  public AirQuality(Country[] countries) {\n    this.countries = countries;\n  }\n\n  /*\n   * Returns a String containing the name and air quality index of\n   * each country that is greater than the maximum acceptable index\n   */\n  public String getUnsatisfactory() {\n    String result = \"Countries Over the Maximum Acceptable Index\\n---------------\\n\";\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Update the condition to use the constant.\n     * -----------------------------------------------------------------------------\n     */\n\n    for (Country country : countries) {\n      if (country.getIndex() > 100) {\n        result += country + \"\\n\";\n      }\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Country.java": {
        "text": "/*\n * Represents a country\n */\npublic class Country {\n\n  private String name;    // The name of a country\n  private int index;      // The air quality index of a country\n\n  /*\n   * Sets name and index to the specified name and index\n   */\n  public Country(String name, int index) {\n    this.name = name;\n    this.index = index;\n  }\n\n  /*\n   * Returns the index of the country\n   */\n  public int getIndex() {\n    return index;\n  }\n\n  /*\n   * Returns a String containing the name and index of the country\n   */\n  public String toString() {\n    return name + \": \" + index + \" AQI\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\nV67OmVnN1UnX0/NP+gPhTZs=\n",
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:54:49.628+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L4b_2023\\\"\"],\"cloned_from\":\"CSA U4L3-L4b_2023\"}]"
}]]></config>
</Javalab>
