<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2023-06-21T20:06:11.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "encrypted_examples": [

    ],
    "project_template_level_name": "CSA-frq-2023-AppointmentBook",
    "long_instructions": "##AppointmentBook FRQ (Part A)\r\n\r\nThis question involves the `AppointmentBook` class, which provides methods for students to schedule appointments with their teacher. Appointments can be scheduled during one of eight class periods during the school day, numbered 1 through 8. A requested appointment has a duration, which is the number of minutes the appointment will last. The 60 minutes within a period are numbered 0 through 59. In order for an appointment to be scheduled, the teacher must have a block of consecutive, available minutes that contains at least the requested number of minutes in a requested period. Scheduled appointments must start and end within the same period.\r\n\r\nThe `AppointmentBook` class contains two helper methods, `isMinuteFree` and `reserveBlock`. You will write two additional methods of the `AppointmentBook` class.\r\n\r\nWrite the `findFreeBlock` method, which searches `period` for the first block of free minutes that is `duration` minutes long. If such a block is found, `findFreeBlock` returns the first minute in the block. Otherwise, `findFreeBlock` returns `-1`. The `findFreeBlock` method uses the helper method `isMinuteFree`, which returns `true` if a particular minute is available to be included in a new appointment and returns `false` if the minute is unavailable. \r\n\r\nConsider the following list of unavailable and available minutes in period 2. \r\n\r\n![](https://images.code.org/36e52075d0c9637b356a30a1266925dd-image-1687355918138.58.30 AM.png)\r\n\r\nThe method call `findFreeBlock(2, 15)` would return `30` to indicate that a 15-minute block starting with minute `30` is available. No steps should be taken as a result of the call to `findFreeBlock` to mark those 15 minutes as unavailable. \r\n\r\nThe method call `findFreeBlock(2, 9)` would also return `30`. Whenever there are multiple blocks that satisfy the requirement, the earliest starting minute is returned. \r\n\r\nThe method call `findFreeBlock(2, 20)` would return `-1`, since no 20-minute block of available minutes exists in period 2. \r\n\r\nComplete method `findFreeBlock`. You must use `isMinuteFree` appropriately in order to receive full credit.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console"
  },
  "audit_log": "[{\"changed_at\":\"2023-06-21 20:06:14 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
