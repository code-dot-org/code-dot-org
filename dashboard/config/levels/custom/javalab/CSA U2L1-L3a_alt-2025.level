<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T22:22:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "The local music store needs a program to keep track of the various instruments they sell.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Instrument</code> class, declare instance variables for the following attributes:\r\n\r\n   * the type of instrument (guitar, piano, trumpet, etc.)\r\n   \r\n   * the price of an instrument\r\n   \r\n   * whether or not an instrument has strings\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">StoreRunner.java</code>, instantiate an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Instrument</code> object and print the instance variables for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Instrument</code> object by calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">AttributesHelper.printAttributes(nameOfObject)</code> method.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring instance variables and instantiating objects.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">AttributesHelper.printAttributes()</code> is a hidden support method that prints the instance variables in a class to the console. For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n\t  </pre>\r\n      \r\n      <p>This method (along with the tests) will help you check that you declared your instance variables correctly.</p>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Music Store",
    "bubble_choice_description": "The local music store needs a program to keep track of the various isntruments they sell. Write the `Instrument` class with instance variables for the specified attributes.",
    "encrypted_exemplar_sources": "NPO7LH2ES8lvGQ603x7obaws9WCjoxHvxCWN2HZYFjLEvh3T577rKsDkLVwT\nswwLnDUb1uAQUq8OjUuAfS1l8TVUBfkRxzbniQuTw3TnMsPhoLXOetA4oAzs\naSBhsO42ohBa49NXiIyHULpVQDT99DBN+6OtfUN7SQBV1UOBcgncqhTWUVKP\nYCP7QpoU9cbzHKi/CclTbxVR+fE9e4n5gppYrjToF/K+uNlaDVLt1rWxaTEz\nMfB76tFt5cwHczzfjij7iYCm+VSr5PpPSAkTu7ptkiUnlMptJeuOtbrvmaPB\nQEIn0bEONLFTGJcJy/SiWxcXJqtNaSFCNq82o3AZrIQYvOHIMADv++OUJmk1\nw7jqd4IqNAC8HGLM72nW3hNtUntwvZARWa3GDYYifeAJTzHBuQFYbU/KlOmG\nV+6Jk/B+NyRjn+NER2I00Pr890HWvJB3g2E4FFOKN3VmpAZkj+1Z1C0hPNk+\nVCEJQGw0/7XdmbbdsuxDypY41Aa0PGnEjxzJX8o8ht3vZpkKXuXFrjM/onJZ\n1a8cjPk9Xtj853LNH7/o3yF6Fva2TxCwcq1Qf7NCMpuIDmmi0I4bG7DsqR5A\nHN5gcP4rAtby7Mf6g1KdhaIgQ6cWChHPau2b8bOoyuH0tX/lUJKU2J9EiwHs\nXuRloUzAGS6A/bYJ+ce9vlFawyomW8U+0A+b497ygKm1frLU7W1OONfu54pY\nDS0DfNnLpB0SHv5agcghjif+pZQoIp5ML1HKofCVDPna67joMKO7X5OL5HnG\n8k/FRpaTh1tzeDCmWiZSKSI5LZlFYofVgx/zVV/EyL2HQPETdU0vYkhClv4N\n33OphG/b7Is1QEIJ0zLL04ivJxzzAAZpo60tu4E2W5T4zwD88peMoXW5vaHH\nzRU5tcPPVaiDKy9WOaDyv45fB48XRpeBpzQMqLyHseH11TICwZWLE5ghikV2\nqEpFpefOePwUamyd+/sxxbGUF0Q63qooEwr9eY8CQaTBw2ZtDNdluCPFx/2T\ntu+frprv+YlL1pwVjqJf6i+rWLuTK0DmV2jOCy2IepwPSbqdFjjDGKkcMJ5X\npMbB0MZN5EUgxMrThoMcOepuI3KECrGzQRvv6+n/S8J0rAHzHvQUhN/+sc1k\nOLZSZg7nmxSKiU7ClCW79UXAkRyIOp/dWoImQ1AkQfkiqdM7D93NMFmmDb4b\nAu4fVSmKM8HsUb5e4A4iV/dpm6AEGahJN/i3hG4TtNB6am/PJ2xzJRO/oIBP\nBN9cMFghgRGf9pGxIjGJ8cPkEZ61TxBToK9mfMLyYJpOw63/iGuX1xi6GkAm\nfHxgpUIBFuDFNrovaSPdONl169qQrHcJK+NIYE1iIDIWXbtNm6byM+/saX1p\ntgrCt6euhIxvz6Zffgl6a46oHvmUX2jTjjHct6jZVMUHMvS/sHZgAtFhNV2/\np1auUEet6/w2Hi0L0zG4aAr075wNxoxgPwXRjI86ABFtJHD2DXktxagHN8H/\nGrty7pwvLeRhEQvg6kQ9Nsf2Bpah6vk250sNIkX4CmZHXzsejjJ1TTY2h9H8\nie/JdCWFP+XQs5xn6/t5NqvuuU0aRW2bl03BWsldGZLC49w4Sn+ZH14Zc56x\n9868vcjRdhjlIfmBSTdaFrejMc4d2iQJgJP16gB1IFOgAdAoneJpXH4scqxn\nKyjuSZHLSj5MN51viQe9BfBEbsmb+9WllYxSXJDFdY4GDfyfdfUERMzolM9L\nlOmzxQeenPBMhW5S0ctD+498trwHP4VT8y7QYGtrSSQxlUI/xklIJwUH2mPw\nhGFkqHSMkadA3D0MqvSOj0evdJdxbp7/LCr6vbFKw5k1JotSqWCDwJ30urKf\neE7JjNDTxFaMMmfwDbWuoLdW9tOW80zRfMp16HOluHHtEWRd+KVEZVxs3nsR\n8ADINPVcZ2FQQ0aYg7vXrOPb+iuvkGwX//DJrQGeXQvfse4CDAGt85S7aBzH\nUJzJTCwFZ2GtTI+cINz7WyiJwxAsLA4+vvWhnOhmbeG6EG90xBeb91EJJe5b\nwF0aoDEETvEZLPSSnSsiZwzLKZoN/aeDbVxT0ProXoEhAah7E74l3NVp+jLy\nWf7YJmfHCoqt1DBzQgGeFqv50wxKQkRjhxEkhQKjF9uYCBBIhn4BN64eeFnw\nvaq38O6iKRKbozrTta+jL0la2XMZ3ROoxtqD0qop9TBQEOA479w13cJX8Uom\nQJm8+0U5Qly3yjBYqil4IrFZ5aIGL7AyfPOWTD6kHpKwHjMCwqs34z7C0B8Y\nSZQSVKk8m2+kxMpvZiZhjkgVtQQzvt4MqObHbCwjUqVMjcC2809zBL5xJbNn\n9jaVN2gIWSHIlgIH1vj1sYMeXPbCdW4TOuGxkwSegc8XvKuFnen1TJosuZLO\nDgPUJKuprRKOJm/dNtvEt93klePaKFNs9Y2sW0AVZhxqFSXVQNtoQBPdvD97\nxM8jYVUsDP5PeBL2miTTMtUyMS5JH2xk90Eo805MzHBu1hIIG427VSv50ZTK\n7lqD52PvZLFSNRcHB7zuqm3kwn9FSyvEFsv79RJpDFFdTHvvBqgoOVoET5mG\nUX6GU1iCPpa1o/rufKtX06l4joKqdtk4N6vLAp8MkOFHPg87alxnzHBHuFVu\nSGxniXvSB9rg3dcQtgSHOF/uQVBvADV6GF+wK1dVWwrwbnhc0/aVtLFjZ3Pn\nn7z3rKaAx5m/05p/muRNIqu2nNPOTMRztg3MeIFak/wjTfsx+bAReTpOkOxC\nA1TmI8aWFsK3USmdlAYjQSPXeW+jRrD8+xKeluoCktbjZpcTD442kMJNeaVo\nf0h3WTFdHnGsdsWUTOoiopAWY3cRJtc3dIFsAWp14q1Jx/1f0t91a9JdZCPN\ntNPVvs0Y56UvOk7k6pxiwvIiHyZ5SpetU/MbYT6lrWN3rMiNR7dTvl2Z5D/u\nJrJTJAZxnGXsk3lvncLCSxnq9pitfqxdA++qHIRqbNDUJ0JTEolVZFFf0++k\nIKeOo85lU/LC8lG7TolakOM2/Rt4HASIKegL2FEw/DrCIqUnAnTh4RlJQJ/P\nH1xn7pFBMov6zV5V/e3T//qWIhhnSCvZ8UxAPQXoK32wsAOjPHxmE9GvzCD9\n0A6MbasKsZlGBxVhGrEifdABxWCCeBb9ObimQA0URgtj5meyuM9pJndkz2en\n0IH2utwzufVwjJ9ypE7gHn/D2SmS+pnKATz/MRnZlhw2OHjO+APwtptoA47B\ntnY9Q/DRUW55rVaSOkmz/8dBJeyJC7CMDui/yATZYh8GsJ2gnMGR0V0ND2aB\nFEw1pnwcgzvfHzemZhpUVgCOa3OhgZ/vofsC+7a/TvfseuKqirCflDwCMGFC\nIQqOC+L1Eg3w6BfEQwSvJEFzEnIIMcgmwiMxHhS6OIriNLPzXadbch7cYzIw\n/MAenxg5rMO0XX84/hHtzBeHYZlYkC2JKZIFVccqWyETF3VFBTga76CNCEnv\nuueln3f0k2BrbonyNR5mCuoKBksmEYKCHD7gG2xk5nDAL3EPG31dYn6Gx+ms\nhcKZD1Sb2LpzFC5Ds0Xht+0N1BtJJ3AH3MT7qg/EOPnUGgn2O0cKHKnPCe9R\naQeeTZK4rvwFZpyajfj/0z4jwBFpYeAa+w+SdwS3PejOO8ij1aBjFkXin3Bg\nj7KQZv99LdhaYjb3HVgMJskCCLCbNkJksUh3mT3GI1lapH4pLdqo2z6GeAt5\n0yL87KdwIPBJl3+qtwvPFaPMuf8OPLv3kbpU+OU/N1wTINfiPPopnaHNvnU0\nkUnf/zu5welZlWW1NlGrXraEb696ja0V2XqoPFQjorGRyEz1YxfcTyHz9NE3\n4hQ76LoFo7iVl8weJe6nmljHTM56bT2EozcyFGnhj49pQMKMKHbB0oWEwtPe\ngwLLMCTmNiZyPpxXHclBMB4EgX9xEqYHwlY6LimZinkYitVcrvjRvL7m8cRr\niSokt2/6nyQCJsT6Or+1cU2KuSBkydcdCMpbWsPo8NXnLws4O179nPTcTxC3\nsfS3euLg4MFEoTLuML3ZttLxBRZf8RYQCwId3Qn+Hpmua3S34GokInl/ntl4\nhq1HnR3tlA09mhT4ZO5FbgkwNhKYHeD2vaOXx/P7+xbNOVLf7mw+ZuAyJFCp\nPee3vj7JIdHyNCgYZbPrkOOtpXbwBW/Y+lgaMGCatZ4nLJlX7dP5tEPPjp44\nB+Ukn1FnLHkvgk2WoqSBW+66NdfeVQOVmzBl8ezY8UeUMlwIhX/meBU/PnpP\nTwfO1yxN68Wtlr5apW1vY+5nSA6bvmzzen6kzk5vLdeLKM6wa5vNEIYbINCO\nxddz74BxfotVRMtmRQMDo37elNbW9e1V3wyecPuyRX2hJBKEeEpm40iXBTxy\nFO6o3plb4YJmJCO8nsd3OFn2y30YFVg9TpkpiGSQg0ILAgzmqKVqKEVrhrNh\nrKPyLqxzyDV7fDXOxh8nZh805C96xHB+n8X6YzAnTXhgTPY0RMMqcUNaPZVu\nyChaYAE3/gsaFTkDF4Pa5rZBH2jqPxN0pj2pay1A1T/saYw6oRo/lrCPH7Lq\nFsutSfhD34WrCFFFwKWDEVlLDTAG5TKYsM+HUE1cyhaxK4U7bTdR7y2Y1aoa\nrRZstCWHigyjzSUhOb9WinbGqmRVpirs2mIVSgFG9EFRuI4rhS+5A1F3HCqi\nPHTnrD2lIPOm8ZznVPMqErqgSzPAeLRcTC/P+pyyuGtVAe+bO2FKKPUmCrdn\nn9NhpWhFiHJSRziAo0VFMjtOn0gWvm+V72MjgKu/HTSfsk2zTCyZ50LzbxwT\n0Mw43QZORLIj3un2yFSoAbuW6HnoXhZeF8UdWryC3d0=\n",
    "thumbnail_url": "https://images.code.org/6b92f9d600b15ca89a76f5c655e57274-instruments.png",
    "encrypted_validation": "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\n",
    "start_sources": {
      "StoreRunner.java": {
        "text": "public class StoreRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate an Instrument object, then print the instance variables for\n     * the Instrument object to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Instrument.java": {
        "text": "/*\n * Represents an instrument at a music store\n */\npublic class Instrument {\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Declare instance variables for the type of instrument, the price of an\n   * instrument, and whether or not an instrument has strings.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n    typeToFind += \" \";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean \", \"int \", \"double \", \"String \"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result.trim();\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "video_key": "csa_instance_variables_and_attributes",
    "name_suffix": "_alt-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T22:22:04.896+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3a_pilot-2025\\\"\"],\"cloned_from\":\"CSA U2L1-L3a_pilot-2025\"}]"
}]]></config>
</Javalab>
