<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:13:46.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The owner of the Joyful Pastries Food Truck has stored the inventories for each food truck in a 2D array. The 2D array contains the following values:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nRow 1: 25, 17, 22\r\nRow 2: 18, 12, 15\r\nRow 3: 21, 19, 27\r\nRow 4: 30, 10, 23\r\n</pre>\r\n\r\nwhere each row represents a unique food truck in the business. Each column represents the number of cakes, cookies, and pies, respectively.\r\n\r\nThe owner wants to know if any food trucks have quantities of desserts that are greater than a specified amount.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Owner</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">hasMinimum()</code> method using enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loops to return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if any food truck has a quantity of desserts that are more than the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">minValue</code>. Otherwise, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FoodTruckRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">hasMinimum()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_enhanced_for_loops_and_2d_arrays",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Food Trucks",
    "bubble_choice_description": "The owner of the Joyful Pastries Food Truck wants to know if any food trucks have quantities of desserts that are greater than a specified amount in a 2D array.",
    "thumbnail_url": "https://images.code.org/bd65cff0fe5df55597222194fd120da8-image-1651163917695.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nc3adMzx98n45dqMavvAe3yQ=\n",
    "start_sources": {
      "Owner.java": {
        "text": "/*\n * Represents an owner of a food truck business\n */\npublic class Owner {\n\n  private int[][] inventories;   // The 2D array of dessert inventories\n\n  /*\n   * Initializes inventories to the specified 2D\n   * array of dessert inventories\n   */\n  public Owner(int[][] inventories) {\n    this.inventories = inventories;\n  }\n\n  /*\n   * Returns the 2D array inventories\n   */\n  public int[][] getInventories() {\n    return inventories;\n  }\n\n  /*\n   * Returns true if any food truck has a quantity of\n   * desserts that are more than minValue\n   */\n  public boolean hasMinimum(int minValue) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the inventories array and return true if any food truck has a\n     * quantity of desserts more than minValue. Otherwise, return false.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return false;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array containing each food truck inventory\n    int[][] inventories = {{25, 17, 22}, {18, 12, 15}, {21, 19, 27}, {30, 10, 23}};\n\n    // Creates an Owner object\n    Owner jessie = new Owner(inventories);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the hasMinimum() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:13:46.489+00:00\",\"changed\":[\"cloned from \\\"CSA U5L5-L7a_2023\\\"\"],\"cloned_from\":\"CSA U5L5-L7a_2023\"}]"
}]]></config>
</Javalab>
