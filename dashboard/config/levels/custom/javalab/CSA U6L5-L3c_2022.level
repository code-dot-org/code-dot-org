<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `SocialMedia`(#e7e8ea) class represents a social media service and has an instance variable for the posts that are made on the service. The `posts`(#e7e8ea) list is created using the `FileReader.getStringData()`(#e7e8ea) method to read the contents of a file into the list.\r\n\r\n##In SocialMedia.java:\r\n\r\n1. Write the method `postsWithLength()`(#e7e8ea) to find the number of posts that are greater than or equal to `minLength`(#e7e8ea). Return the number of posts found.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `postsWithLength()`(#e7e8ea) method and print the results.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    SocialMedia mySocialMedia = new SocialMedia(\"posts.txt\");\n\n    // TO DO #2: Call the postsWithLength() method and print the results.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "SocialMedia.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a social media service\n */\npublic class SocialMedia {\n\n  private ArrayList<String> posts;   // The list of posts\n\n  /*\n   * Constructor to create a SocialMedia object\n   * with the specified file containing the posts\n   */\n  public SocialMedia(String filename) {\n    this.posts = FileReader.getStringData(filename);\n  }\n\n  /*\n   * Returns the number of posts that are\n   * greater than or equal to minLength\n   */\n  public int postsWithLength(int minLength) {\n    // TO DO #1: Count the number of posts with a length\n    // that is greater than or equal to minLength.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "posts.txt": {
        "text": "",
        "isVisible": true
      }
    },
    "project_template_level_name": "CSA U6L5-L3c PBT_2022",
    "display_name": "Social Media Posts",
    "bubble_choice_description": "Find the number of social media posts that are greater than or equal to a target length.",
    "thumbnail_url": "https://images.code.org/7ca28c0960c2b130745673f3180cb99c-social-media.png",
    "encrypted_exemplar_sources": "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\nwPxG1kQst4W32W/rCWzVqs6c88VDcA==\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:27:13.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:27:13.234+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L3b_2022\\\"\"],\"cloned_from\":\"CSA U6L5-L3b_2022\"},{\"changed_at\":\"2022-04-14 19:27:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:51:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:53:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 21:09:47 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 23:03:43 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 12:33:52 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 14:37:50 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
