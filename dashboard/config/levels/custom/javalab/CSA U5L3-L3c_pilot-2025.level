<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T18:15:35.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A sports analyst has collected data on the scores of various teams in a league over a month in a 2D array, where each row represents a team and each column represents a day of the week.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">League</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalScores()</code> method to calculate and return the total points scored by all teams.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LeagueRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalScores()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array in row-major order.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_row_major_traversal",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Sports Scores",
    "bubble_choice_description": "Calculate the total scores of all teams during a month.",
    "thumbnail_url": "https://images.code.org/b2b07a1551618d35647380eaec181bef-sports.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nqSahEA==\n",
    "start_sources": {
      "LeagueRunner.java": {
        "text": "public class LeagueRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of points scored by several teams\n    int[][] pointsData = { {85, 90, 75, 80, 95, 88, 92},\n                           {70, 75, 80, 85, 90, 95, 100},\n                           {95, 85, 90, 87, 92, 80, 85},\n                           {80, 85, 75, 78, 87, 90, 92},\n                           {90, 95, 85, 88, 93, 80, 85} };\n\n    // Creates a League object\n    League sports = new League(pointsData);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcTotalScores() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "League.java": {
        "text": "/*\n * Represents a sports league\n */\npublic class League {\n\n  private int[][] points;     // The total points scored by all teams\n\n  /*\n   * Initializes points to the specified 2D array of points\n   */\n  public League(int[][] points) {\n    this.points = points;\n  }\n\n  /*\n   * Returns the 2D array points\n   */\n  public int[][] getPoints() {\n    return points;\n  }\n\n  /*\n   * Returns the total points scored by all teams\n   */\n  public int calcTotalScores() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array points in row-major order. Calculate and return\n     * the sum of all the values in points.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T18:15:35.135+00:00\",\"changed\":[\"cloned from \\\"CSA U5L3-L3c_2025\\\"\"],\"cloned_from\":\"CSA U5L3-L3c_2025\"}]"
}]]></config>
</Javalab>
