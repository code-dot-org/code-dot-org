<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "## Finding Patterns\r\n\r\nComplete the <a href=\"https://docs.google.com/document/d/1OJIjB4GPp5eqri8qIIceuUGUYl8bzEYXbH3qXIpcg9I/edit?usp=sharing\" target=\"_blank\"><strong>Finding Patterns</strong></a> activity guide to identify the patterns and relationships you notice in this dataset.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    String[] mountainFiles = {\"mountname.txt\", \"mountheight.txt\", \"mountrange.txt\", \"parentmount.txt\", \"firstascent.txt\", \"ascents.txt\", \"mountcountry.txt\"};\n    String[] buildingFiles = {\"buildname.txt\", \"buildcity.txt\", \"buildcountry.txt\", \"buildheight.txt\", \"floors.txt\", \"buildyear.txt\"};\n\n    DataManager mountainData = new DataManager(mountainFiles);\n    DataManager buildingData = new DataManager(buildingFiles);\n    \n    System.out.println(mountainData.showDataset());\n    System.out.println(buildingData.showDataset());\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 1
      },
      "DataManager.java": {
        "text": "/*\n * Reads and displays data from text files\n */\npublic class DataManager {\n\n  private String[] textFiles;    // The 1D array of text files\n  private Data[] dataset;        // The 1D array of Data objects\n\n  /*\n   * Sets textFiles to the specified text files and initializes\n   * dataset to store Data objects for each text file\n   */\n  public DataManager(String[] textFiles) {\n    this.textFiles = textFiles;\n    dataset = new Data[textFiles.length];\n  }\n\n  /*\n   * Creates the datasets and returns the dataset values\n   */\n  public String showDataset() {\n    createData();\n    return getDatasetValues();\n  }\n\n  /*\n   * Instantiates each Data object in the 1D array dataset\n   * using each text file from the 1D array textfiles\n   */\n  public void createData() {\n    for (int index = 0; index < dataset.length; index++) {\n      dataset[index] = new Data(textFiles[index]);\n    }\n  }\n\n  /*\n   * Returns a String containing the values from each Data object\n   */\n  public String getDatasetValues() {\n    String result = \"\";\n\n    // Gets the length of the first Data object's 1D array of values\n    int valuesLength = dataset[0].getNumValues();\n\n    // Outer loop repeats from the first value to the last value of the first Data object's 1D array of values\n    for (int index = 0; index < valuesLength; index++) {\n\n      // Inner loop goes through each Data object to get the corresponding value from each 1D array of values\n      for (Data values : dataset) {\n        \n        // String.format() formats a String using format specifiers. In \"%-40s\", the \"%\" indicates the start of the format specifier,\n        // the \"-\" means the String is left-justified, \"40\" indicates the width of the field, and \"s\" indicates a String\n        result += String.format(\"%-40s\", values.getValue(index));\n      }\n\n      // Adds a new line character after getting a row of data\n      result += \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "Data.java": {
        "text": "/*\n * Manages data from a text file\n */\npublic class Data {\n\n  private String filename;    // The name of a text file\n  private String[] values;    // The 1D array containing the values from a text file\n\n  /*\n   * Sets filename to the specified filename and initializes\n   * values to store the values from the file\n   */\n  public Data(String filename) {\n    this.filename = filename;\n    values = FileReader.toStringArray(filename);\n  }\n\n  /*\n   * Returns the 1D array of values\n   */\n  public String[] getValues() {\n    return values;\n  }\n\n  /*\n   * Returns a value at a specified index from values\n   */\n  public String getValue(int index) {\n    return values[index];\n  }\n\n  /*\n   * Returns the number of elements in values\n   */ \n  public int getNumValues() {\n    return values.length;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      },
      "mountname.txt": {
        "text": "NAME\n------\nMount Everest\nK2\nKangchenjunga\nLhotse\nMakalu\nCho Oyu\nDhaulagiri I\nManaslu\nNanga Parbat\nAnnapurna I\nGasherbrum I / Hidden Peak / K5\nBroad Peak\nGasherbrum II / K4\nShishapangma / Gosainthān\nGyachung Kang\nAnnapurna II\nGasherbrum IV / K3\nHimalchuli\nDistaghil Sar\nNgadi Chuli\nKhunyang Chhish\nMasherbrum / K1\nNanda Devi\nChomo Lonzo\nBatura Sar\nRakaposhi\nNamcha Barwa\nKanjut Sar\nKamet\nDhaulagiri II\nSaltoro Kangri / K10\nKumbhakarna / Jannu\nTirich Mir\nGurla Mandhata\nSaser Kangri I / K22\nChogolisa\nKongur Tagh\nShispare\nTrivor\nGangkhar Puensum\nGongga Shan / Minya Konka\nAnnapurna III\nSkyang Kangri\nChangtse / Bei Pk\nKula Kangri\nKongur Tiube\nMamostong Kangri\nSaser Kangri II E\nMuztagh Ata\nIsmoil Somoni Peak\nSaser Kangri III\nNoshaq\nPumari Chhish\nPassu Sar\nYukshin Gardan Sar\nTeram Kangri I\nJongsong Peak\nMalubiting\nGangapurna\nJengish Chokusu / Tömür / Pk Pobeda\nK12\nYangra / Ganesh I\nSia Kangri\nMomhil Sar\nKabru N\nSkil Brum\nHaramosh Peak\nIstor-o-Nal\nGhent Kangri\nUltar\nRimo I\nChuren Himal\nTeram Kangri III\nSherpi Kangri\nLabuche Kang\nKirat Chuli\nSaraghrar\nJomolhari / Chomo Lhari\nChamlang\nChongtar\nBaltoro Kangri\nSiguang Ri\nThe Crown / Huang Guan\nGyala Peri\nPorong Ri\nBaintha Brakk / The Ogre\nYutmaru Sar\nK6 / Baltistan Peak\nKangpenqing / Gang Benchhen\nMuztagh Tower\nMana Peak\nDiran\nLabuche Kang III\nPutha Hiunchuli\nApsarasas Kangri\nMukut Parbat\nRimo III\nLangtang Lirung\nKarjiang\nAnnapurna Dakshin\nKhartaphu\nTongshanjiabu\nMalangutti Sar\nNoijin Kangsang /Norin Kang\nLangtang Ri\nKangphu Kang / Shimokangri\nSinghi Kangri\nLupghar Sar",
        "isVisible": true,
        "tabOrder": 4
      },
      "mountheight.txt": {
        "text": "HEIGHT\n------\n29029\n28251\n28169\n27940\n27838\n26864\n26795\n26781\n26660\n26545\n26509\n26414\n26362\n26335\n26089\n26040\n26024\n25896\n25866\n25823\n25666\n25659\n25643\n25604\n25574\n25551\n25531\n25459\n25446\n25430\n25400\n25299\n25289\n25243\n25171\n25148\n25095\n24970\n24859\n24836\n24790\n24787\n24754\n24747\n24731\n24705\n24659\n24649\n24636\n24590\n24590\n24580\n24580\n24528\n24505\n24482\n24482\n24469\n24459\n24406\n24370\n24350\n24350\n24324\n24318\n24311\n24308\n24288\n24281\n24239\n24229\n24229\n24219\n24213\n24170\n24153\n24111\n24035\n24019\n23999\n23990\n23980\n23934\n23930\n23924\n23901\n23894\n23891\n23888\n23871\n23858\n23839\n23786\n23773\n23770\n23760\n23730\n23711\n23691\n23684\n23665\n23645\n23645\n23642\n23638\n23635\n23629\n23622",
        "isVisible": true,
        "tabOrder": 5
      },
      "mountrange.txt": {
        "text": "RANGE\n------\nMahalangur Himalaya\nBaltoro Karakoram\nKangchenjunga Himalaya\nMahalangur Himalaya\nMahalangur Himalaya\nMahalangur Himalaya\nDhaulagiri Himalaya\nManaslu Himalaya\nNanga Parbat Himalaya\nAnnapurna Himalaya\nBaltoro Karakoram\nBaltoro Karakoram\nBaltoro Karakoram\nJugal Himalaya\nMahalangur Himalaya\nAnnapurna Himalaya\nBaltoro Karakoram\nManaslu Himalaya\nHispar Karakoram\nManaslu Himalaya\nHispar Karakoram\nMasherbrum Karakoram\nGarhwal Himalaya\nMahalangur Himalaya\nBatura Karakoram\nRakaposhi-Haramosh Karakoram\nAssam Himalaya\nHispar Karakoram\nGarhwal Himalaya\nDhaulagiri Himalaya\nSaltoro Karakoram\nKangchenjunga Himalaya\nHindu Kush\nNalakankar Himalaya\nSaser Karakoram\nMasherbrum Karakoram\nKongur Shan (Eastern Pamirs)\nBatura Karakoram\nHispar Karakoram\nKula Kangri Himalaya\nDaxue Mountains (Hengduan Shan)\nAnnapurna Himalaya\nBaltoro Karakoram\nMahalangur Himalaya\nKula Kangri Himalaya\nKongur Shan (Eastern Pamirs)\nRimo Karakoram\nSaser Karakoram\nMuztagata (Eastern Pamirs)\nPamir (Academy of Sciences Range)\nSaser Karakoram\nHindu Kush\nHispar Karakoram\nBatura Karakoram\nHispar Karakoram\nSiachen Karakoram\nKangchenjunga Himalaya\nRakaposhi-Haramosh Karakoram\nAnnapurna Himalaya\nTian Shan\nSaltoro Karakoram\nGanesh Himalaya\nSiachen Karakoram\nHispar Karakoram\nKangchenjunga Himalaya\nBaltoro Karakoram\nRakaposhi-Haramosh Karakoram\nHindu Kush\nSaltoro Karakoram\nBatura Karakoram\nRimo Karakoram\nDhaulagiri Himalaya\nSiachen Karakoram\nSaltoro Karakoram\nLabuche Himalaya\nKangchenjunga Himalaya\nHindu Kush\nJomolhari Himalaya\nMahalangur Himalaya\nBaltoro Karakoram\nMasherbrum Karakoram\nMahalangur Himalaya\nYengisogat Karakoram\nAssam Himalaya\nLangtang Himalaya\nPanmah Karakoram\nHispar Karakoram\nMasherbrum Karakoram\nBaiku Himalaya\nBaltoro Karakoram\nGarhwal Himalaya\nRakaposhi-Haramosh Karakoram\nLabuche Himalaya\nDhaulagiri Himalaya\nSiachen Karakoram\nGarhwal Himalaya\nRimo Karakoram\nLangtang Himalaya\nKula Kangri Himalaya\nAnnapurna Himalaya\nMahalangur Himalaya\nLunana Himalaya\nHispar Karakoram\nNagarze Himalaya\nLangtang Himalaya\nLunana Himalaya\nSiachen Karakoram\nHispar Karakoram",
        "isVisible": true,
        "tabOrder": 6
      },
      "parentmount.txt": {
        "text": "PARENT MOUNTAIN\n------\nnone\nMount Everest\nMount Everest\nMount Everest\nMount Everest\nMount Everest\nK2\nCho Oyu\nDhaulagiri\nCho Oyu\nK2\nGasherbrum I\nGasherbrum I\nCho Oyu\nCho Oyu\nAnnapurna I\nGasherbrum III\nManaslu\nK2\nManaslu\nDistaghil Sar\nGasherbrum I\nDhaulagiri\nMakalu\nDistaghil Sar\nKhunyang Chhish\nKangchenjunga\nKhunyang Chhish\nNanda Devi\nDhaulagiri\nGasherbrum I\nKangchenjunga\nBatura Sar\nDhaulagiri\nGasherbrum I\nGasherbrum I\nDistaghil Sar\nBatura Sar\nDistaghil Sar\nKangchenjunga\nMount Everest\nAnnapurna I\nK2\nMount Everest\nGangkhar Puensum\nKongur Tagh\nGasherbrum I\nSaser Kangri I\nKongur Tagh\nMuztagh Ata\nSaser Kangri I\nTirich Mir\nKhunyang Chhish\nBatura Sar\nPumari Chhish\nGasherbrum I\nKangchenjunga\nRakaposhi\nAnnapurna III\nIsmail Samani Peak\nSaltoro Kangri\nShishapangma\nGasherbrum I\nTrivor\nKangchenjunga\nK2\nMalubiting\nNoshaq\nSaltoro Kangri\nShispare\nTeram Kangri I\nDhaulagiri IV\nTeram Kangri I\nGhent Kangri\nCho Oyu\nKangchenjunga\nNoshaq\nGangkhar Puensum\nLhotse\nSkil Brum\nChogolisa\nCho Oyu\nSkil Brum (K2)\nMount Everest\nShishapangma\nKanjut Sar\nYukshin Gardan Sar\nChogolisa\nShishapangma\nSkil Brum\nKamet\nMalubiting\nLabuche Kang\nChuren Himal\nTeram Kangri I\nKamet\nRimo I\nShishapangma\nKula Kangri\nAnnapurna\nMount Everest\nGangkhar Puensum\nDistaghil Sar\nGangkhar Puensum\nShishapangma\nTongshanjiabu\nTeram Kangri III\nMomhil Sar",
        "isVisible": true,
        "tabOrder": 7
      },
      "firstascent.txt": {
        "text": "FIRST ASCENT\n------\n1953\n1954\n1955\n1956\n1955\n1954\n1960\n1956\n1953\n1950\n1958\n1957\n1956\n1964\n1964\n1960\n1958\n1960\n1960\n1979\n1971\n1960\n1936\n1954\n1976\n1958\n1992\n1959\n1931\n1971\n1962\n1962\n1950\n1985\n1973\n1975\n1981\n1974\n1960\nunclimbed\n1932\n1961\n1976\n1982\n1986\n1956\n1984\n2011\n1956\n1933\n1986\n1960\n1979\n1994\n1984\n1975\n1930\n1971\n1965\n1956\n1974\n1955\n1934\n1964\n1994\n1957\n1958\n1969\n1961\n1996\n1988\n1970\n1979\n1976\n1987\n1939\n1959\n1937\n1961\n1994\n1963\n1989\n1993\n1986\n1982\n1977\n1980\n1970\n1982\n1956\n1937\n1968\nunclimbed\n1954\n1976\n1951\n1985\n1978\nunclimbed\n1964\n1935\nunclimbed\n1985\n1986\n1981\n2002\n1976\n1979",
        "isVisible": true,
        "tabOrder": 8
      },
      "ascents.txt": {
        "text": "ASCENTS (AND FAILED ATTEMPTS)\n------\n145 (121)\n45 (44)\n38 (24)\n26 (26)\n45\n79 (28)\n51 (39)\n49 (45)\n52 (67)\n36 (47)\n31 (16)\n39 (19)\n54 (12)\n43 (19)\n5 (3)\n6 (19)\n4 (11)\n6 (12)\n3 (5)\n1 (6)\n2 (6)\n4 (9)\n14 (12)\n3 (1)\n4 (6)\n8 (13)\n1 (2)\n2 (1)\n23 (14)\n4 (11)\n2 (1)\n17 (12)\n20 (11)\n6 (4)\n6 (4)\n4 (2)\n2 (4)\n3 (1)\n2 (5)\n0 (3)\n6 (7)\n10 (17)\n1 (2)\n9 (9)\n3 (2)\n2 (3)\n5 (0)\n0 (0)\nMany\n0 (0)\n1 (0)\n33 (3)\n1 (2)\n1 (0)\n4 (1)\n2 (0)\n2 (3)\n2 (6)\n8 (13)\n0 (0)\n4 (2)\n1 (6)\n6 (0)\n2 (6)\n1 (2)\n2 (1)\n4 (3)\n4 (5)\n4 (0)\n2 (5)\n1 (3)\n3 (0)\n1 (0)\n1 (1)\n1 (0)\n1 (6)\n2 (3)\n4 (0)\n7 (1)\n1 (1)\n1 (0)\n2 (1)\n1 (5)\n1 (0)\n5 (0)\n3 (13)\n1 (1)\n1 (3)\n1 (1)\n4 (2)\n7 (3)\n12 (8)\n0 (0)\n11 (5)\n2 (0)\n2 (1)\n1 (0)\n14 (13)\n0 (2)\n10 (16)\n1 (0)\n0 (0)\n1 (0)\n4 (1)\n4 (0)\n1 (0)\n2 (0)\n1 (0)",
        "isVisible": true,
        "tabOrder": 9
      },
      "mountcountry.txt": {
        "text": "COUNTRY\n------\nNepal, China\nPakistan, China\nNepalIndia\nNepal, China\nNepal, China\nNepal, China\nNepal\nNepal\nPakistan\nNepal\nPakistan, China\nPakistan, China\nPakistan, China\nChina\nNepal, China\nNepal\nPakistan\nNepal\nPakistan\nNepal\nPakistan\nPakistan\nIndia\nChina\nPakistan\nPakistan\nChina\nPakistan\nIndia\nNepal\nIndia, Pakistan\nNepal\nPakistan\nChina\nIndia\nPakistan\nChina\nPakistan\nPakistan\nBhutan, China\nChina\nNepal\nPakistan, China\nChina\nChina, Bhutan\nChina\nIndia\nIndia\nChina\nTajikistan\nIndia\nAfghanistan, Pakistan\nPakistan\nPakistan\nPakistan\nIndia, China\nIndia, China, Nepal\nPakistan\nNepal\nKyrgyzstan, China\nIndia, Pakistan\nNepal, China\nPakistan, China, India\nPakistan\nIndia, Nepal\nPakistan\nPakistan\nPakistan\nIndia, Pakistan\nPakistan\nIndia\nNepal\nIndia, China\nIndia, Pakistan\nChina\nIndia, Nepal\nPakistan\nBhutan, China\nNepal\nChina\nPakistan\nChina\nChina\nChina\nChina\nPakistan\nPakistan\nPakistan\nChina\nPakistan, China\nIndia\nPakistan\nChina\nNepal\nIndia, China\nIndia, China\nIndia\nNepal\nChina\nNepal\nChina\nBhutan, China\nPakistan\nChina\nNepal, China\nBhutan, China\nIndia, China\nPakistan",
        "isVisible": true,
        "tabOrder": 10
      },
      "buildname.txt": {
        "text": "NAME\n------\nBurj Khalifa\nShanghai Tower\nAbraj Al-Bait Clock Tower\nPing An Finance Center\nLotte World Tower\nOne World Trade Center\nGuangzhou CTF Finance Center\nTianjin CTF Finance Center\nChina Zun\nTaipei 101\nShanghai World Financial Center\nInternational Commerce Centre\nCentral Park Tower\nLakhta Center\nLandmark 81\nChangsha IFS Tower T1\nPetronas Tower 1\nPetronas Tower 2\nZifeng Tower\nSuzhou IFS\nThe Exchange 106\nWillis Tower\nKK100\nGuangzhou International Finance Center\nWuhan Center\n111 West 57th Street\nOne Vanderbilt\nDongguan International Trade Center 1\n432 Park Avenue\nMarina 101\nTrump International Hotel and Tower\nJin Mao Tower\nPrincess Tower\nAl Hamra Tower\nInternational Finance Centre\nHaeundae LCT The Sharp Landmark Tower\nNanning China Resources Tower\nGuiyang Financial Center Tower 1\nChina Resources Headquarters\n23 Marina\nCITIC Plaza\nShum Yip Upperhills Tower 1\n30 Hudson Yards\nCapital Market Authority Headquarters\nShun Hing Square\nEton Place Dalian Tower 1\nLogan Century Center 1\nBurj Mohammed bin Rashid\nEmpire State Building\nElite Residence\nShenzhen Center\nCentral Plaza\nFederation Tower (East Tower)\nDalian International Trade Center\nAddress Boulevard\nHaitian Center Tower 2\nGolden Eagle Tiandi Tower A\nBank of China Tower\nBank of America Tower\nVista Tower\nAlmas Tower\nHanking Center\nGevora Hotel\nJW Marriott Marquis Dubai Tower 1\nJW Marriott Marquis Dubai Tower 2\nEmirates Office Tower\nRaffles City Chongqing T3N\nRaffles City Chongqing T4N\nOKO Tower - South Tower\nThe Marina Torch\nForum 66 Tower 1\nThe Pinnacle\nXi An Glory International Financial Center",
        "isVisible": true,
        "tabOrder": 11
      },
      "buildcity.txt": {
        "text": "CITY\n------\nDubai\nShanghai\nMecca\nShenzhen\nSeoul\nNew York City\nGuangzhou\nTianjin\nBeijing\nTaipei\nShanghai\nHong Kong\nNew York City\nSaint Petersburg\nHo Chi Minh City\nChangsha\nKuala Lumpur\nKuala Lumpur\nNanjing\nSuzhou\nKuala Lumpur\nChicago\nShenzhen\nGuangzhou\nWuhan\nNew York City\nNew York City\nDongguan\nNew York City\nDubai\nChicago\nShanghai\nDubai\nKuwait City\nHong Kong\nBusan\nNanning\nGuiyang\nShenzhen\nDubai\nGuangzhou\nShenzhen\nNew York City\nRiyadh\nShenzhen\nDalian\nNanning\nAbu Dhabi\nNew York City\nDubai\nShenzhen\nHong Kong\nMoscow\nDalian\nDubai\nQingdao\nNanjing\nHong Kong\nNew York City\nChicago\nDubai\nShenzhen\nDubai\nDubai\nDubai\nDubai\nChongqing\nChongqing\nMoscow\nDubai\nShenyang\nGuangzhou\nXian",
        "isVisible": true,
        "tabOrder": 12
      },
      "buildcountry.txt": {
        "text": "COUNTRY\n------\nUnited Arab Emirates\nChina\nSaudi Arabia\nChina\nSouth Korea\nUnited States\nChina\nChina\nChina\nTaiwan\nChina\nChina\nUnited States\nRussia\nVietnam\nChina\nMalaysia\nMalaysia\nChina\nChina\nMalaysia\nUnited States\nChina\nChina\nChina\nUnited States\nUnited States\nChina\nUnited States\nUnited Arab Emirates\nUnited States\nChina\nUnited Arab Emirates\nKuwait\nChina\nSouth Korea\nChina\nChina\nChina\nUnited Arab Emirates\nChina\nChina\nUnited States\nSaudi Arabia\nChina\nChina\nChina\nUnited Arab Emirates\nUnited States\nUnited Arab Emirates\nChina\nChina\nRussia\nChina\nUnited Arab Emirates\nChina\nChina\nChina\nUnited States\nUnited States\nUnited Arab Emirates\nChina\nUnited Arab Emirates\nUnited Arab Emirates\nUnited Arab Emirates\nUnited Arab Emirates\nChina\nChina\nRussia\nUnited Arab Emirates\nChina\nChina\nChina",
        "isVisible": true,
        "tabOrder": 13
      },
      "buildheight.txt": {
        "text": "HEIGHT\n------\n2717\n2073\n1971\n1965\n1819\n1776\n1739\n1739\n1732\n1667\n1614\n1588\n1550\n1516\n1513\n1483\n1483\n1483\n1476\n1476\n1460\n1450\n1449\n1440\n1437\n1428\n1401\n1401\n1396\n1394\n1388\n1380\n1358\n1354\n1352\n1352\n1321\n1316\n1288\n1287\n1280\n1273\n1268\n1263\n1260\n1257\n1251\n1251\n1250\n1248\n1232\n1226\n1226\n1214\n1214\n1211\n1208\n1205\n1200\n1191\n1181\n1177\n1169\n1166\n1166\n1163\n1163\n1163\n1160\n1155\n1150\n1149\n1148",
        "isVisible": true,
        "tabOrder": 14
      },
      "floors.txt": {
        "text": "FLOORS\n------\n163\n128\n120\n115\n123\n104\n111\n98\n108\n101\n101\n118\n98\n86\n81\n88\n88\n88\n89\n92\n97\n108\n100\n103\n88\n82\n67\n88\n88\n101\n98\n88\n101\n80\n88\n101\n85\n79\n67\n89\n80\n80\n73\n77\n69\n81\n82\n88\n102\n87\n80\n78\n95\n86\n72\n72\n76\n70\n56\n101\n68\n65\n75\n82\n82\n54\n79\n79\n85\n86\n68\n60\n75",
        "isVisible": true,
        "tabOrder": 15
      },
      "buildyear.txt": {
        "text": "YEAR OPENED\n------\n2010\n2015\n2012\n2017\n2016\n2014\n2016\n2018\n2018\n2004\n2008\n2010\n2020\n2018\n2018\n2017\n1998\n1998\n2010\n2017\n2018\n1974\n2011\n2010\n2016\n2019\n2020\n2019\n2015\n2015\n2009\n1999\n2012\n2011\n2003\n2019\n2018\n2021\n2017\n2012\n1996\n2017\n2018\n2016\n1996\n2015\n2017\n2014\n1931\n2012\n2019\n1992\n2016\n2018\n2017\n2020\n2018\n1990\n2009\n2019\n2017\n2017\n2012\n2012\n2012\n2000\n2018\n2019\n2015\n2011\n2015\n2012\n2017",
        "isVisible": true,
        "tabOrder": 16
      }
    },
    "display_name": "Mountains and Buildings",
    "bubble_choice_description": "Datasets containing information about the world's tallest mountains and buildings.",
    "thumbnail_url": "https://images.code.org/0964b64167980fdaafe7a4f36c383137-mountain.png"
  },
  "game_id": 68,
  "created_at": "2023-02-17T19:13:21.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T19:13:21.601+00:00\",\"changed\":[\"cloned from \\\"CSA U4L8-L5f_2023\\\"\"],\"cloned_from\":\"CSA U4L8-L5f_2023\"},{\"changed_at\":\"2023-02-17 19:13:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 13:49:19 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 14:28:47 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 15:36:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 17:37:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
