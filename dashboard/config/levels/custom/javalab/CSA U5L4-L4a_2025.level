<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:13:40.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A museum has recorded the number of visitors for different exhibits in a 2D array, where each row represents an exhibit and each column represents a day of the week.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Museum</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getMaxVisitors()</code> to traverse the 2D array in column-major order and find and return the day with the highest number of total visitors across all exhibits.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">MuseumRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getMaxVisitors()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array in column-major order.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_column_major_traversal",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Museum Visitors",
    "bubble_choice_description": "Find the day with the highest number of total visitors across all exhibits.",
    "thumbnail_url": "https://images.code.org/37638a0c82f05a034d495f1e6bb84517-museum.png",
    "encrypted_validation": "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\nWMph3TTWWrmZKmY=\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "MuseumRunner.java": {
        "text": "public class MuseumRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of visitors to several exhibits each day\n    int[][] visitorData = { {120, 125, 130, 135, 140, 150, 155},\n                            {100, 95, 105, 110, 115, 120, 130},\n                            {70, 80, 85, 90, 95, 100, 110},\n                            {50, 60, 70, 80, 90, 100, 110},\n                            {200, 220, 240, 260, 280, 300, 320}};\n\n    // Creates a Museum object\n    Museum history = new Museum(visitorData);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getMaxVisitors() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Museum.java": {
        "text": "/*\n * Represents a museum\n */\npublic class Museum {\n\n  private int[][] visitors;    // The 2D array of visitors to a museum\n\n  /*\n   * Initializes visitors to the specified 2D\n   * array of visitors to the museum\n   */\n  public Museum(int[][] visitors) {\n    this.visitors = visitors;\n  }\n\n  /*\n   * Returns the 2D array visitors\n   */\n  public int[][] getVisitors() {\n    return visitors;\n  }\n\n  /*\n   * Returns the day with the highest number of\n   * total visitors across all exhibits\n   */\n  public int getMaxVisitors() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the visitors array in column-major order and find the sum of\n     * visitors for each day (column). Return the column index that has the largest\n     * total visitors for a day (column).\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:13:40.414+00:00\",\"changed\":[\"cloned from \\\"CSA U5L4-L4a_2023\\\"\"],\"cloned_from\":\"CSA U5L4-L4a_2023\"}]"
}]]></config>
</Javalab>
