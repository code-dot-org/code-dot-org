<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `CellPhone`(#e7e8ea) class represents a cell phone and has an instance variable for the text messages that are sent on the cell phone. The `messages`(#e7e8ea) list is created using the `FileReader.getStringData()`(#e7e8ea) method to read the contents of a file into the list.\r\n\r\n##In CellPhone.java:\r\n\r\nCell phone carriers handle text messages in character batches called segments. Segments are typically limited to 160 characters. If a message is less than 160 characters, it is sent as a single message. If a message is 200 characters, it is sent as two messages.\r\n\r\n1. Write the method `getNumberTexts()`(#e7e8ea) to find the total number of text messages to be sent for all messages.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `getNumberTexts()`(#e7e8ea) method and print the results.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    CellPhone myCellPhone = new CellPhone(\"messages.txt\");\n\n    // TO DO #2: Call the getNumberTexts() method and print the result.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "CellPhone.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a cell phone\n */\npublic class CellPhone {\n\n  private ArrayList<String> messages;   // The list of text messages\n\n  /*\n   * Constructor to create a CellPhone with the\n   * specified file containing the messages\n   */\n  public CellPhone(String filename) {\n    this.messages = FileReader.getStringData(filename);\n  }\n\n  /*\n   * Returns a string containing the number of text messages to be sent for each message\n   */\n  public String getNumberTexts() {\n    // TO DO #1: Calculate the number of text messages to be sent for each\n    // message and return a string containing the information for each line.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "messages.txt": {
        "text": "",
        "isVisible": true
      }
    },
    "project_template_level_name": "CSA U6L5-L3d PBT_2022",
    "display_name": "Text Messages",
    "bubble_choice_description": "Find the total number of text messages to be sent based on the length of each message.",
    "thumbnail_url": "https://images.code.org/930bccebdbdc575b6f514b6567773196-message.png",
    "encrypted_exemplar_sources": "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\nbZmmx2FTZQzvLQLsig==\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:27:23.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:27:23.636+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L3c_2022\\\"\"],\"cloned_from\":\"CSA U6L5-L3c_2022\"},{\"changed_at\":\"2022-04-14 19:27:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 21:04:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 21:08:54 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 23:11:46 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 12:34:29 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 14:41:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
