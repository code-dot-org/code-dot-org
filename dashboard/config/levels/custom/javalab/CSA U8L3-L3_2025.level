<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:40:51.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO:** What if we wanted to find the *last* occurrence of a target element in a list instead of the first?\r\n\r\nChange the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">else</code> branch in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">recursiveBinarySearch()</code> method to the following:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nelse {\r\n  int last = recursiveBinarySearch(numbers, middle + 1, right, target);\r\n\r\n  if (last != -1) {\r\n    return last;\r\n  }\r\n  else {\r\n    return middle;\r\n  }\r\n}\r\n</pre>\r\n\r\nHow does modifying the binary search to find the *last* occurence of a target element impact its efficiency?",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- ðŸ”Ž ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "project_template_level_name": "CSA U8L3-Binary Search PBT_2025",
    "teacher_markdown": "With this modification, if the middle element is equal to the target element, the algorithm recursively searches the right half of the array to find the last occurence of the target element. If a last occurrence is found in the right half, its index is returned. Otherwise, the current occurence is the last occurrence, and the algorithm returns the current index.\r\n\r\nThis means that additional checks are performed and a different value may be returned depending on the element's position in the array and whether or not the value appears more than once.",
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:40:51.316+00:00\",\"changed\":[\"cloned from \\\"CSA U8L3-L3_2023\\\"\"],\"cloned_from\":\"CSA U8L3-L3_2023\"}]"
}]]></config>
</Javalab>
