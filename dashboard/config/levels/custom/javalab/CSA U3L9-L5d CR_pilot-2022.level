<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:25:39.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L9-L4d PBT_pilot-2022",
    "long_instructions": "Request a code review to get feedback from your peers on your `reverse()`(#e7e8ea) method.\r\n\r\nWhen you are finished receiving feedback, return to your project and click the **Close review** button.\r\n\r\n##Requesting Feedback\r\n\r\n**Commit your code** and add a comment that includes:\r\n\r\n* a description of the goals and intended outcome of the program\r\n\r\n* any additional relevant information\r\n\r\n* specific tasks or questions you want your reviewer to perform or answer\r\n\r\n##TAG to Give Feedback\r\n*Remember to keep feedback kind, specific, and helpful. Refer to your sentence starters to structure your feedback.*\r\n\r\n1. Tell them something you like about their code.\r\n\r\n2. Ask them something about the code.\r\n\r\n3. Give a suggestion for improvement.",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Cat Breeds",
    "bubble_choice_description": "Reverse the array of cat breeds to display them in A-Z order.",
    "thumbnail_url": "https://images.code.org/7af862142f7265abfd076aef58b2723d-image-1648753568196.png",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "CFnif/Ei2MgO/TPUdQzOdr18FGVnzO520+IGgEnBjNIW1oiGfbwjqUj0kQCT\nyIWIf7wCtHos+iDcfo9VyUWcFi1LRon3qFrOzPgWBosqbrnz/4UHbl3JxuSh\njKlR1K2AWJrdr0KBIM+adyBX3rOekRDse84DB16dphR0oZ8L/G/xGRvWGxT/\nGUpbPTyBXJVi/dtzTva73IM8pWakfcddzhqxgKv+OlW6Ff93WVz+9MXrQROo\n04lqaflsPUN8QA0LYT55i1SdEC1Vea2ook1SkgqmQml0DCAo3p2hsQzZa+p/\nNGEYzRD1y80/ek2T/+YxtiWd7oR7k7PKOzPPgd2Z8PbAl/01pJYuOB+2+ZDA\nvo4EaGxIoURUxBkix6bV9bQ74Nqz3S6zuY+7K1CNfD7ZpFSBU6fW+46MyEW9\nOOuxgLxPmqd2uDoAa3SPpOZsIgZeifZ9bNO9cJNejIPTzstDuspzOO3KtScd\nqulSYWeSaYqVq2nUiQe3HIC5wBrPye2AJF0crBzE7lzNmpOAvGxWdFF8Fol0\nXJhob5TLin9C11DxjkvLNiyAw9ikqC0IcGZ1TTLSxCWTNOBJ0EeR2sLdOZnj\n5TJvDx8ot6o3DVCFOdL0HRvJY1HIODg9VrXIH6rgR/w02797LgfiVLkp1sjl\nLNiemSnTJXFKtW5hm3/MEwnBKGWLfrRKpoqae6WZxSPxDhwQFJLkF5KotqkE\n5umDVNF7c0SnUYhtJpFLwqZva4Ocu9zSjQh1z2AjtzdhrtqF1eq3SftwLhH+\nk1MWTz7CWDm/SeJGW3Z5hXacT1dwZhXKQydmQccO/1SHv8eyLm/xk0MAiv/G\nxE4ud0mLJ/7Si2Hg/Wu2WyX0+/euyWhUv01LJkkyY3l1CCNqCCTjNbtYLKYt\n0Fy/6lMHlFCfUGuy5rr9W5+RbO5QWfyZm5IMY7ck9j/LCmc0T8c+w3dJtv+U\nqSDBvjoWZZP8MdPWknT0CQOm5R6apBTL2vom4LWdjaY0PfutGcPcjQENf/Pw\nLlbis8mJCYPIA1BBn/L5D+kLSeEqyc+QlFm2PrfoomjYOhEjXYMN0s3e1Lxr\nVpO4AoRwh53EkCg/hH35aDhTZqBV0qaQ46ZvIbbGde4FoFKmZd4Gbv1LL9QO\nQto8QUQCrHC4Jiehf9hIqGdwEDEd5lZVBbA9iWq2dxF0cjbPDUMniDTV9P+p\ngLEJDDJ5GS8qVnn8Q50x6qqrz4eJ/08hACPRKjuTN7uuWFfQVI6tDLl/NL+z\nJc8r4DzaHCCvJUR1clq9LZtKkQexeVOs7j9JZkQU9tpakGrpCpTIzdIOL3yc\n6A5+aiOunc45hf3fXmq9XnDCdsDyOaWDhu6CCvLNBn3PSh+CuXhWZk210O2D\nS4a9ILMrHAplbqVs/+h6qPcP3EALAsn5BkQ7IFjft/k4upDfTonu1Z06pKTi\nqsVnb8mIcbjdzzyPuN8PSg/i+kMgnRgqDqAISvwfL0vSOxcjyFnSpiOznfn1\n5ezVaYo0iI9st+nDob6VMm7a2aFg7boDpMgvog2DcV40OtZRoog6Q1iyDFXx\nmR0vtO2aZE70bcY2Ari9AvdpLUk4Q0IgzcqgXEgMjmUqt/A/9+dXn9y3dO6j\n0KAyCOQGsd+JXq2n/b11CN0Bin3OHjzekYU0FCWtVJXhn/U8qVuLFumSoc8Q\ngl8HDEwDuRFutXAdolITL/FCS5IKoCVatWtew/HMHzqWTmgN6piUvcQ3CoJB\nrpH+7AZtisFUhj86VuFaLZb/wMvVK0IMZEIouNQIVwPuJsN+8qWnab/GWZw0\nf1PDjwjsI3gI7E15KyUlL8W31HmX+ZV63DPfrsHzED5RU8S0gcygik4FmxpV\nycYpM6Q4vHN9YKtbEj3RYVq6w09endfLXeuPaaU=\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"catbreeds.txt\");\n    String[] breeds = myFileReader.getStringData(67);\n\n    Cats myCats = new Cats(breeds);\n    \n    myCats.printCatBreeds();\n\n    // TO DO #2: Call the reverse() method to reverse the array.\n\n\n    // TO DO #3: Call the printCatBreeds() method to print the array.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "Cats.java": {
        "text": "/*\n * Processes cat breeds in a String array\n */\npublic class Cats {\n\n  private String[] catBreeds;   // The 1D array of cat breeds\n\n  /*\n   * Constructor to create a Cats object with\n   * a specified list of cat breeds\n   */\n  public Cats(String[] catBreeds) {\n    this.catBreeds = catBreeds;\n  }\n\n  /*\n   * Returns the array catBreeds\n   */\n  public String[] getCatBreeds() {\n    return catBreeds;\n  }\n\n  /*\n   * Prints the names of the parks in the catBreeds array\n   */\n  public void printCatBreeds() {\n    for (String cat : catBreeds) {\n      System.out.println(cat);\n    }\n  }\n\n  /*\n   * Reverses the catBreeds array\n   */\n  public void reverse() {\n    // TO DO #1: Reverse the elements in the catBreeds array.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "catbreeds.txt": {
        "text": "York Chocolate\nTurkish Van\nTurkish Angora\nToyger\nTonkinese\nSphynx\nSomali\nSnowshoe\nSingapura\nSiberian\nSiamese\nSelkirk Rex\nScottish Fold\nSavannah\nRussian Blue\nRagdoll\nRagamuffin\nPixie-bob\nPersian\nOriental\nOcicat\nNorwegian Forest Cat\nNebelung\nMunchkin\nManx\nMalayan\nMaine Coon\nLaPerm\nKurilian\nKorat\nKhao Manee\nJavanese\nJapanese Bobtail\nHimalayan\nHavana Brown\nExotic Shorthair\nEuropean Burmese\nEgyptian Mau\nDragon Li\nDonskoy\nDevon Rex\nCyprus\nCymric\nCornish Rex\nColorpoint Shorthair\nCheetoh\nChausie\nChartreux\nChantilly-Tiffany\nCalifornia Spangled\nBurmilla\nBurmese\nBritish Shorthair\nBritish Longhair\nBombay\nBirman\nBengal\nBambino\nBalinese\nAustralian Mist\nArabian Mau\nAmerican Wirehair\nAmerican Shorthair\nAmerican Curl\nAmerican Bobtail\nAegean\nAbyssinian",
        "isVisible": true
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:39.825+00:00\",\"changed\":[\"cloned from \\\"CSA U3L9-L5d CR_2022\\\"\"],\"cloned_from\":\"CSA U3L9-L5d CR_2022\"},{\"changed_at\":\"2022-09-09 00:57:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
