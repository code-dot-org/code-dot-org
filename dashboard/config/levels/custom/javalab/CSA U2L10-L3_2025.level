<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:50:44.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO:** Add the following code to the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Movie</code> class.\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\npublic String toString() {\r\n  return super.toString() + \"\\nLength: \" + runningTime;\r\n}\r\n</pre>\r\n\r\nIn <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ContentRunner.java</code>, instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Movie</code> object and print the object. For example:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nMovie captainMarvel = new Movie(\"Captain Marvel\", 2019, 124);\r\nSystem.out.println(captainMarvel);\r\n</pre>\r\n\r\nWhat happens when you run the program? What can you conclude about the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">super.toString()</code> statement? What about the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\\n</code> before <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"Length\"</code>?",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- ðŸ”Ž ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "project_template_level_name": "CSA U2L10-toString PBT_2025",
    "teacher_markdown": "Students should notice that the `super.toString()` calls the superclass version of the `toString()` method and concatenates this with `\"Length: \"` and the running time of the `Movie` object. Students should also notice that the running time is printed on a new line and conclude that the `\\n` prints a new line.",
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:50:44.496+00:00\",\"changed\":[\"cloned from \\\"CSA U2L10-L3_2023\\\"\"],\"cloned_from\":\"CSA U2L10-L3_2023\"}]"
}]]></config>
</Javalab>
