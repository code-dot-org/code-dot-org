<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T18:21:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A motion blur is a type of image blur that simulates the effect of motion in an image. It is commonly used in photography to create the illusion of movement by applying a blur to the image that emphasizes the direction of motion.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">BlurImage</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">motionBlur()</code> method to apply a motion blur filter to each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">motionBlur()</code> method should:\r\n\r\n1. Traverse the 2D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> objects.\r\n\r\n2. While a count is less than the parameter length and the x and y positions in the image are less than the width and height of the image,\r\n\r\n   * Get each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object and find the total of their red, green, and blue color values\r\n   \r\n   * If the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">direction</code> is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"horizontal\"</code>, increase the x position by 1.\r\n   \r\n   * If the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">direction</code> is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"vertical\"</code>, increase the y position by 1.\r\n   \r\n   * If the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">direction</code> is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"diagonal\"</code>, increase the x and y positions by 1.\r\n\r\n3. Find the average of the total red, green, and blue values by dividing each by the count.\r\n\r\n4. Set the current <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object's red, green, and blue values to the results.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class,\r\n\r\n1. Instantiate an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">BlurImage</code> object with an image in the Asset Manager, then draw the image in the scene without any filters. You can also upload and use your own image.\r\n\r\n2. Add a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">pause()</code> after drawing the image.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">motionBlur()</code> method on your image, then draw the image with the filter in the scene.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with getting and setting color values for a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.\r\n</div>\r\n\r\n## üéØ Goal\r\n\r\n![](https://images.code.org/ecad55a7c95230dc4f9b08687d13eb8a-image-1682903734932.gif)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Motion Blur",
    "bubble_choice_description": "A motion blur is a type of image blur that simulates the effect of motion in an image. It is commonly used in photography to create the illusion of movement by applying a blur to the image that emphasizes the direction of motion.",
    "starter_assets": {
      "track.jpg": "73cb526a-0e61-4abd-aaf9-5a35d87f1803.jpg",
      "starwars.jpg": "7ad3219d-ea5b-4a9e-a17d-f3099166c8f5.jpg",
      "speakers.jpg": "ffe132d1-0524-48f8-895e-2e84aa8fa2d6.jpg",
      "soccer.jpg": "5c5b22fa-8ef0-4742-8d2a-db66c9630c9b.jpg",
      "paintbrushes.jpg": "3b5c9695-ef8d-4127-ae90-15650e73b568.jpg",
      "nature.jpg": "dc2c961e-f186-48d4-9047-0d1e2ac1a83e.jpg",
      "motivation.jpg": "44c9bc01-1114-4dd1-92d7-fdd107e11686.jpg",
      "laptop.jpg": "a0f32d27-34fb-4fae-8b9c-82f7d4bf4f56.jpg",
      "guitar.jpg": "25ae7aec-a54e-4d84-876e-a9df4b0fbdee.jpg",
      "games.jpg": "afbf1c0c-0537-4b52-9d15-5c9e92d04d8f.jpg",
      "football.jpg": "f1bfc6f8-418d-488f-a662-9f4b27eea468.jpg",
      "fashion.jpg": "85bc0bdd-b4e3-40d3-8269-a4d27c4d4d77.jpg",
      "electricguitars.jpg": "9b84825c-13f4-4767-8aec-636acb3b9ab9.jpg",
      "donut.jpg": "0eac55b6-99b1-4a8f-a1d2-7557bfaf0ed7.jpg",
      "dog.jpg": "c5d50c40-51ba-4b67-be1a-f7b55e0fef94.jpg",
      "cellphone.jpg": "bad7c03f-c00e-4203-9bbc-1524b0660159.jpg",
      "basketball.jpg": "529bd8e2-6b26-414b-ba58-5f74bee54180.jpg",
      "baseball.jpg": "d5ca909c-b357-4646-a34d-b2ed24f38aa1.jpg",
      "astronaut.jpg": "1dae5481-ee64-483d-bc26-b8323a0fe8a2.jpg"
    },
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nrJJLp+gL24PaxwX98u9AtUIKpRQze/M2tyEWq7w=\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a Scene object\n    Scene images = new Scene();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a BlurImage object, and draw the image in the scene with no\n     * filter. Then call the motionBlur() method, and draw the image again with\n     * the filter.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    // Plays the scene\n    Theater.playScenes(images);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ImagePlus.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image that can be modified with filters and effects\n */\npublic class ImagePlus extends Image {\n\n  private Pixel[][] pixels;    // The 2D array of pixels\n\n  /*\n   * Sets the superclass filename to the specified filename\n   * and calls the getPixelsFromImage() method to initialize\n   * the 2D array of Pixel objects that make up the image\n   */\n  public ImagePlus(String filename) {\n    super(filename);   // Calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixelsFromImage();\n  }\n\n  /*\n   * Returns the 2D array of pixels\n   */\n  public Pixel[][] getImagePixels() {\n    return pixels;\n  }\n\n  /*\n   * Returns the pixels in the image as a 2D array of Pixel objects\n   */\n  public Pixel[][] getPixelsFromImage() {\n    Pixel[][] tempPixels = new Pixel[getHeight()][getWidth()];\n    \n    for (int row = 0; row < tempPixels.length; row++) {\n      for (int col = 0; col < tempPixels[0].length; col++) {\n        tempPixels[row][col] = getPixel(col, row);\n      }\n    }\n\n    return tempPixels;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "BlurImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a blurred image\n */\npublic class BlurImage extends ImagePlus {\n\n  /*\n   * Calls the superclass constructor to initialize pixels\n   */\n  public BlurImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Applies a motion blur to the image\n   */\n  public void motionBlur(int length, String direction) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Get the pixels from the image, and traverse the 2D array of Pixel objects.\n     * Find the average of the red, green, and blue color values of the current\n     * Pixel object and a set of neighboring Pixel objects in a line segment.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "thumbnail_url": "https://images.code.org/34e9f7a755d318efd17f5997974d64fa-optionD.gif",
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T18:21:24.962+00:00\",\"changed\":[\"cloned from \\\"CSA U5L8-L4d_2025\\\"\"],\"cloned_from\":\"CSA U5L8-L4d_2025\"}]"
}]]></config>
</Javalab>
