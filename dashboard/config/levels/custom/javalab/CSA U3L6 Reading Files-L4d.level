<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2024-07-07T23:39:10.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A sociologist is studying population data for various states in the U.S. and wants to combine the information from two parallel text files.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">State.java</code>, write the method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">combinedInfo(String stateFilename, String populationFilename)</code> to print the combined information from <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"state_data.txt\"</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"population_data.txt\"</code> files. \r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">StateRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">combinedInfo(String stateFilename, String populationFilename)</code> method.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Scanner</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">File</code> classes in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with reading from files!\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nString state = \"\"\r\nint population = \"\"\r\nwhile(scanner.hasNext)\r\n  state = scanner1.nextLine\r\n  popluation = scanner2.nextInt\r\n  print state + population\r\n</pre>\r\n    </div>\r\n</details>\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ How do I read values from a file?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nFile file1 = new File(filename1)\r\nFile file2 = new File(filename2)\r\nScanner scanner1 = new Scanner(File1)\r\nScanner scanner2 = new Scanner(File2)\r\n//implement your algorithm\r\nscanner.close\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\nüìù **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\nüñ•Ô∏è **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\nüéâ **RUN:** Run your program to see the result of your code!\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "StateRunner.java": {
        "text": "import java.io.IOException;\n\npublic class StateRunner {\n\n   /* ----------------------------------- TO DO -----------------------------------\n    * ‚úÖ Complete the missing portion of the main method in order to read from\n    * a file using the combinedInfo(String stateFilename, String populationFilename) method\n    * -----------------------------------------------------------------------------\n    */\n  public static void main(String[] args) /* ---- üîé REPLACE THIS COMMENT WITH YOUR CODE ---- */ {\n\n    State myState = new State();\n    \n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the combinedInfo(String stateFilename, String populationFilename)\n     * -----------------------------------------------------------------------------\n     */    \n    \n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "State.java": {
        "text": "import java.io.File;\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class State {\n    private String name;\n    private int population;\n\n    public State(){\n      name = \"unkown\";\n      population = 0;\n    }\n  \n    public State(String name, int population) {\n        this.name = name;\n        this.population = population;\n    }\n\n  /*\n   * Reads parallel text files and prints the combined information\n   */\n    public void combinedInfo(String stateFilename, String populationFilename) throws IOException {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use the File and Scanner classes to read from \"stateFilename\"\n     * \"populationFilename\" and print the parallel values. Printed values should  \n     * be in the format \"State - Population: [value]\" like the example below:\n     *    California - Population: 39512223\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n\n      \n      \n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getPopulation() {\n        return population;\n    }\n\n    public void setPopulation(int population) {\n        this.population = population;\n    }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "state_data.txt": {
        "text": "California\nTexas\nFlorida\nNew York\nPennsylvania\nIllinois\nOhio\nGeorgia\nNorth Carolina\nMichigan",
        "isVisible": true,
        "tabOrder": 2
      },
      "population_data.txt": {
        "text": "39512223\n28995881\n21477737\n19453561\n12801989\n12671821\n11689100\n10617423\n10488084\n9986857",
        "isVisible": true,
        "tabOrder": 3
      }
    },
    "ai_tutor_available": "false",
    "encrypted_exemplar_sources": "+eivztRkLKfvXT/O591rGJhL5PrwqOe5Y1VolL3shwskYCYmn/bJp8peAfRM\nYMF3U3w2BWChOhZSrC7+VkidJyZpse2KaB0/EMlFZ64IUS97a7FOkXcHvqsF\nqATL/Hbc6HVuBnNUykE30h04YHzWIX4xiHjpkavii5/tuW7uHbtrL4XUvBLx\nKa4lfixGqdahgBNCvBEB2eXbzP0hYvbXC6XbaFCg1xddgAqWaOo+6PYVR+sW\nkD+CJ9BRoy1rPLVr56eSvaEBnQq/1PVTONGGoADuK/NglxWR8vD7q04sZaeJ\nIgyo1tib9hvT/+ys5h5CdIITSLLKGCkpySaJFz6F0blhOfQMhAHToWE6dZnE\nBcTPU7Lj0AU+HXWVioCsQFgKUDKcpv42S9pX0+/210Bcuap2kXqNBiy6bcJi\nUUl98/DKu6VqUeh1H/7uxY6QjN1CjKXpesLfdKX9zE0LwB6mBw7QuZSAeDIZ\nnJ8t1HzXDKzw7U8EG/gbenXUL5R2gA2Xjb9zSEc0WajNLjfQqlng6AWhBF4f\nV6fJCrXNEp9BUV4bx607gYFD1Wx6Nf+uQRVD/qaOfdXDIR/b+MxfaWxVYQWM\nWyItoauwTPRTseEOE6QNLwLvHCQfO2S9i77ruEWEjxyQhyXEzRw1sVtvJ2Th\nDy6DimtuzoArQdun/QY86nfWRuVzGVzWRXLWuiuHH4WcXOUQtmXIzD07bcel\n6DHj/kW5cwIeA0Babe6H7TLIVfLqyJCmSMT+jA+M4XZHl9ICL6bP9ygX1giR\n2oUyCKPOorKtKcO1zTlNpLJMI82X6avRpnEW7/yH/axm4aoOQfF17cFWPhYY\nAszhqmB7rSvKhiepoG8CVMAOqFa+FYapI+ggqWjtsOEqJ7srSDp2hD297J26\nTCuqsDUmDcOtVlvfZ2DCRLU2DI1lKdSjL6X9vbmAEYROry7fdkjwoNdhCHHZ\nscG9vCUpnPZK2IIzoIClpEbXZKcw6V3sVsc1jyUHznG+gUJI/ql1L6xU9Deu\ngXDNuV/Ef2zCB+Tlyyik+nggInLfIZCLAha1dCIQxKpSqQz+3veyQikND3TJ\nQp6gPSo0eZK4fokMN+852RGusO/Mq9w/udh0yFqXHnqSLcSHgwIVMozSa3tE\nudMfSMh3uD/h94/4L3J25rLNUhNeD/BUfW4x9GhEh/m1ceNa40g6Qsjigxki\nihi8mhkIF7ivv3MQBjK5gQ5rRRjTJ2SfOxXSg2D5qQdVgTbTucXQkTcx27mY\nxByX/gh07VnkXwdYoZan6ovOKFWQEePkOLnYnMtCy9s4YlpT/VW4h4y5ONp/\ngj7SasK3OSqKm1MF27Tz5NAOEx7g5ViJwINxzLt4tt8YELq3bEAKD2aHACJ7\n/MRn1jGQc/URvGhlYl19UWbK/RUr0TdyS0fWie6BYFOMmahxcAES9un8qN+g\n3iwp+1dVXS8onYdLkKXXWfzwz4b06c50+A8iFndmsfAJDWAK8mKG3ZX17tGo\n8o2vulBFzCJyBz+xq9LDtNIBnGSHokuZsJ8EE3vYoZ0POY4yfpjQCFf4p29w\n9G2iK2hE/Ls0wZ5BUi5X071Bvc+nXs9hy/HcaeeNnrgf+nGLGrvRYmKw1pe6\niay0LzzxNPwcM+74S1zpTOkGP2e5guYzegQ3ptg1YaBJtSHc601et3yK/Bsm\n1/CTIexVNnE/4F/9y/2APaBPWkN6/vYDp1lDRiwYVEfemDWl0GOowBEJgG6z\nlfu0ltAtgSjCuLU6IngfZSUDoGj27SGwxABXwpzqzGWa8hmfxhaCDC4MDT1e\nLjeYsZKsx9qAeNcwKRs0YpskfLW+cKEnocjpMQy7G8+LX2y2vKO5Yn6teS1l\n4oZeqDw2tkx2X1g3UrnpduVNKwdirmgv+MXMSoSOyGxEDkNEW81UEUDLE95d\nX0sMZ9Hxsl/efmeH4Q+tiZeElU+MIGCqXro09nUffKtDsAZVEiFkcgOYPD2L\nElaewAuAH+SI+2HieJrStBAUhrT+szxkh84wEJoQhFcxUOeWL4eudBRFzUoi\ng9dYYqxRkP3ukAJiV+gxe869gK823KmQk16NiCZGG5rQwkPVJuRBE/D9ErbI\nUfCIQYnXtY5vnbHd7iTAMnHARVuj+F5dOraaMK/FXKFqu2goQ4Gt9qzzjGAc\ndqY6/5g3qRKzbquWEnXlDZndDaPOnQf8mU9TQurAJMl1PHTYcqwl9gI6LBNV\nRPBSTZf+1vq2R3NwNw8zLaeYoRUG9fyuZnQl/gH376Rh4Nq+k13lp5h2U+/q\nXeBsZGXdHnuLCPBsBiEtLGji5Y0JtlgXZVcVUxiVjxY7Y+O0bD/fKzxO/M3B\n/7lExYeObtLnVPe4kqQ7Sodk4OisSHEI8M3iZXTVeGi0lA0f4EZAymXI0YSe\nhyJWZfV69qFy+Z+i5Qzgn31edw28/aGKxU5lbi6mR0Me/qz3gTRG+09VALxv\nsf8Ee+iXxhcgCXHvAxQfXR99k3VGHvAnj8yoKoXHCL/6DieR/W7BKtIjc5sl\n3b7bJ/+2Y3PT1bEmyqjivndGtKgu3shB1183lDdasySHqt95hjB9+k/+60JQ\nLgpo8Q87B4jqy3QmffCsVtE1szQdGUyrf7BgGhJCtAoLDCtO6OjN0SVDHyoO\n8nYkN0XU4JgsVHvPbeI1TffBX4pNhnLNkqgMLQRzupsbWw2+MI/jLY86WY8C\nuN4aoh/a0qR+sODxRNNFzr7Yt1zDzL06OQiBR27wGGjKBckeZej2OG2E2oQd\nQhdjoRvk2KP+j/rVAA8et64qbBaodkOqSLdAEiTpOMLkDdFWzIGxf7ioAt0N\nlVZ7I/9EcVblADDwiRVhYBHej0ot2QMAz4W67C0uwXhQUvUgO25MO46JjY61\nVwleRLAQ4ui135PJutrYmRIt9jAc8tCLj71TCnH4pdDwzQJTQ/A+MHR4Jr9h\ntfswC3Qq4UknhVUqqeZNLFml+GYjIPrG4dK2iMYHLJzAzyFzrBio9m9XSeK+\nz/u8pj/jg6gAgwcybl6Nj6z8kCPi7tW4tM/vtX6swMFu7qt9npEvO6BsK8OI\nrFigZlQCWYPnw7ZFiHS0wg6xvCeLAn5U6x2U0EXkOl4hr5+JFJV7jJpWhJB6\nleV0F7Yh+HpZjfcccRf+l5jccy7YcF4meGkSU/OdVUdNjhMdG3Cya6k+Yr6s\nn29NzSuHhi/Dth6/gSW76ZuS4x1Grd5Zy425OolpRAhouS+WDxav4xzHU7KN\nZdcG7uLqE987GLxDqf/d0FYfmPJe5GlP+9OKPJ+OBOajlIUygbMf6amiJuDU\nOCAdrtRSCVw1IPx2NsP55rfihoBv7BBGe4plgJyYWXLGOOHpq6l1IyQy373m\n2c018l52c/Mj/dpZj8O3oPR+41ECBID64Jnicwc/vHNZcHpqujd2sFX5YtPc\nE1kxdtP1LaE3aBh6xNcdMqICgDOV4rZVmkS8crvIkDx1mHv3zcURhTaZmTJh\nHG5Gk5cWtaocmC4FXPenNyKXac4vCk4amnMDS5V7f8lU5vibHSHBkHFGqyV0\nT+k1KT75BEZ7J3oNPEtl+g2KRnQPBE/MfJmNxvn/VhTGBh0YT1kWL9aGfMZq\nOtXi1w34EqvPM54JSy2hxfIeGQpxPhmGwkWyqizoNbAZ7txneQvBy1xps77f\nCMTniuMn5Htje5cBFBr8zh3QuKw/f9vKhpYzo/UCL2CpQFY3eEyTqh7aVdEK\nKMjlpz2XZQMfT2C46HdYWQEuccmWorEi0R/fHAP9IGb2iqLU6fnB/+wQM6mf\ndgfydvCo8pr4Gczn1648Mn1ozlUmQI9TV0O6aYfMa8vgjYSYM+YktJYdySIk\nEvKduXqgTep4L8aPh0bmn6siOL+eghkILspB91dYqE9X0PP6WsUu0fFu2386\nEsiguM0ruEWApNRknJKwej4J2ASy/uMtMnBBvUAMLB83uMrjgG1nX8VhPpju\nkhRNgGym0MQVuCfSWo+IrwR063EYm3nLaGPRHM+LivRt6smhKFk=\n",
    "encrypted_examples": [

    ],
    "display_name": "Population Data",
    "bubble_choice_description": "A sociologist is studying population data for various states in the U.S. and wants to combine the information from two parallel text files.",
    "thumbnail_url": "https://images.code.org/dc72fe60db09ddeb11499c69e266faf3-people.png"
  },
  "audit_log": "[{\"changed_at\":\"2024-07-07T23:39:10.008+00:00\",\"changed\":[\"cloned from \\\"CSA U3L6 Reading Files-L4c\\\"\"],\"cloned_from\":\"CSA U3L6 Reading Files-L4c\"},{\"changed_at\":\"2024-07-07 23:39:57 +0000\",\"changed\":[],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-07-07 23:54:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-07-08 00:01:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-07-08 08:15:41 +0000\",\"changed\":[],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-07-08 08:22:19 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-07-08 08:27:14 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-07-08 08:29:09 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-07-08 08:31:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-07-08 08:31:20 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-10-12 02:47:18 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
