<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:25:38.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In VideoGames.java:\r\n\r\n1. Write the `reverse()`(#e7e8ea) method to reverse the elements in the `gameTitles`(#e7e8ea) array.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `reverse()`(#e7e8ea) method on the `myVideoGames`(#e7e8ea) object to reverse the array.\r\n\r\n3. Call the `printGameTitles()`(#e7e8ea) method on the `myVideoGames`(#e7e8ea) object to print the updated array.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://en.wikipedia.org/wiki/List_of_best-selling_video_games)!*",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "project_template_level_name": "CSA U3L9-L4c PBT_pilot-2022",
    "display_name": "Video Games",
    "bubble_choice_description": "Reverse the array of best selling video games to display them in ranking order.",
    "thumbnail_url": "https://images.code.org/a27d3db4b23789c8f3b0e5a81bf9c3f4-image-1648753191404.png",
    "encrypted_exemplar_sources": "Z7iY0Z3Yq6OUGxSCxBct+F371Cz7FtW2NKRdR/vfBS3eZ+g1caDiS45es7V2\nbDBZ0tnFp8gj8Ki3dIYVWD5OXGgSj6+qr5SGEtS3E5hNUn86f7A+1kNvdup4\nbIFJppmM+z573FB31T7v+OAN/jYuLuh1Neh0yf35+rOsqHCe5hw+3Bg/ihUg\nTVcSl/9oBk3hv/NV5BZMtHO1/oQYTXEHd9ZLSQEtiXmSgJgaTmEf9GJ2KNwy\nVIF+Z8fQZmPFS7wyMC2l9hzgmeg29t9Uo8pFejwZKsAlpW5UIHC2K4gjxnEI\nGb48MNf+836ZBhiyewjxx+LCcHGcHi1PXhTy7LZjh3+hH0HGOqXYbp3NcloO\nTU91tp/xSHyWKdhBM+OcLCeL2XytwKAz7Ee2TE3dnc9fBDyxNrUNyHv6azti\n2bbTQ+Yps3BBoA3xwsoRVu4G0y7G2d816ZDVEZuiseUy5pym3BXK2YBCMj62\nwpCpurMX2hkhiNsUkad4NJcb8WP9GkKRvTonyTA4KWqyb3BM7E7cNYg/7p4q\nSoaN8Qs5swCd2Xtqj+IbUx2pirUgLNgSDGND4hzrQppvLxzrIE/CN0pwu84n\neUvkDd5i+zfEsVG04OYpfQPBarDFO261B05yrLiCbYgKwdgZaqNvKcvTyFb8\nkd1sclHr16twfExThxRM0VcanGh7myIcPS/OF0HA3irGqQp09Ui6aiCcU+NA\nDdEoo2i8YIpE9XlFaPDXOKrc0WQwkmjRNsK67ggTZaJGoBmY7o19VCvp2N/U\nKSaopLbzaMzmLNvkppWV2NRh4xO1kDNCTy3CnP/so00qa5XBTCyYYLI/k5gt\ndxTRTXbKaoH5Qfbf8+GsMAxnyylWLSvXrfvNuNM4nEbmNxPJESxXdju0S/dD\no3v2bSRLvItSSb/jc44CqQGmL0WlxS4/3Z4lb1+54otAgJRqRtl6pDtgtqTA\nWsXT4KpnEcE2btirm7uVOPgQr3sC0GQXID5cKKJBKNrjKNK72ib0neD0GMko\nUER54nB4lgRU2Ky6+W9CchtBKaGX+PKXR0meKxEwPqFiUhm6yzM87q2mz8k/\nDC+1UM0v/9i1iMMCrp5Bm5ErfdfXXXN6BtCF5ttIlNmiaDYXKNyV10g5y1di\nyZSmau2lGEEcbQJxGpRJxoG+6zYL4YxmqTUlXWbYpFmBatym7iIiLBtGvIIv\n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\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"gametitles.txt\");\n    String[] games = myFileReader.getStringData(51);\n\n    VideoGames myVideoGames = new VideoGames(games);\n    \n    myVideoGames.printGameTitles();\n\n    // TO DO #2: Call the reverse() method to reverse the array.\n\n\n    // TO DO #3: Call the printGameTitles() method to print the array.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "VideoGames.java": {
        "text": "/*\n * Processes video game titles in a String array\n */\npublic class VideoGames {\n\n  private String[] gameTitles;   // The 1D array of video game titles\n\n  /*\n   * Constructor to create a VideoGames object with\n   * a specified list of video game titles\n   */\n  public VideoGames(String[] gameTitles) {\n    this.gameTitles = gameTitles;\n  }\n\n  /*\n   * Returns the array gameTitles\n   */\n  public String[] getGameTitles() {\n    return gameTitles;\n  }\n\n  /*\n   * Prints the names of the video games in the gameTitles array\n   */\n  public void printGameTitles() {\n    for (String videoGame : gameTitles) {\n      System.out.println(videoGame);\n    }\n  }\n\n  /*\n   * Reverses the gameTitles array\n   */\n  public void reverse() {\n    // TO DO #1: Reverse the elements in the gameTitles array.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "gametitles.txt": {
        "text": "#51: Gran Turismo 4\n#50: Super Mario Land\n#49: Mario Kart 7\n#48: Super Smash Bros. Ultimate\n#47: Call of Duty: Ghosts\n#46: Super Mario Bros. 3\n#45: Brain Age\n#44: The Legend of Zelda: Breath of the Wild\n#43: The Last of Us\n#42: Grand Theft Auto: Vice City\n#41: Lemmings\n#40: Frogger\n#39: Super Mario World\n#38: Borderlands 2\n#37: Pokémon Ruby / Sapphire / Emerald\n#36: Call of Duty: Modern Warfare 2\n#35: Mario Kart DS\n#34: Nintendogs\n#33: Sonic the Hedgehog\n#32: FIFA 18\n#31: Kinect Adventures!\n#30: Call of Duty: Black Ops II\n#29: Pokémon Diamond / Pearl / Platinum\n#28: Pokémon Sun / Moon / Ultra Sun / Ultra Moon\n#27: Grand Theft Auto IV\n#26: Call of Duty: Black Ops\n#25: Call of Duty: Modern Warfare 3\n#24: Grand Theft Auto: San Andreas\n#23: The Witcher 3\n#22: Wii Play\n#21: Duck Hunt\n#20: Pokémon Gold / Silver / Crystal\n#19: Diablo III\n#18: The Elder Scrolls V: Skyrim\n#17: New Super Mario Bros. Wii\n#16: Terraria\n#15: New Super Mario Bros.\n#14: Red Dead Redemption 2\n#13: Wii Sports Resort\n#12: Mario Kart 8 / Deluxe\n#11: Mario Kart Wii\n#10: Pac-Man\n#9: Tetris (Nintendo)\n#8: Wii Fit and Wii Fit Plus\n#7: Pokémon Red / Green / Blue / Yellow\n#6: Super Mario Bros.\n#5: PlayerUnknown's Battlegrounds\n#4: Wii Sports\n#3: Tetris (EA Mobile)\n#2: Grand Theft Auto V\n#1: Minecraft",
        "isVisible": true
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:38.278+00:00\",\"changed\":[\"cloned from \\\"CSA U3L9-L4c_2022\\\"\"],\"cloned_from\":\"CSA U3L9-L4c_2022\"},{\"changed_at\":\"2022-09-09 00:40:37 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-09 00:47:48 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-09 00:47:51 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
