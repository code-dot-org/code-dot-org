<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-02-26T00:27:45.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Integer firstInteger = new Integer(10);\n    Double firstDouble = new Double(5.5);\n    \n    System.out.println(\"First integer: \" + firstInteger);\n    System.out.println(\"First double: \" + firstDouble);\n\n    \n    \n  }\n}",
        "isVisible": true
      }
    },
    "name_suffix": "_2022",
    "long_instructions": "##Investigate and Modify\r\n\r\nRun the program to observe the results.\r\n\r\nThen, experiment with the program by making the following modifications. Change one line at a time, then run the program after each change to observe the results.\r\n\r\n1. Add the following code:\r\n\r\n```\r\nInteger secondInteger = 20;\r\nDouble secondDouble = 2.5;\r\n\r\nSystem.out.println(\"Second integer: \" + secondInteger);\r\nSystem.out.println(\"Second double: \" + secondDouble);\r\n```\r\n\r\nRun the program and observe the results. Why do you think this happened?\r\n\r\n2. Create an `int`(#e7e8ea) variable called `total`(#e7e8ea). Set it to store the result of `firstInteger`(#e7e8ea) plus `secondInteger`(#e7e8ea), then print the value stored in `total`(#e7e8ea). Does it print what you expected? Why do you think that is?\r\n\r\n3. Add the following code:\r\n\r\n```\r\nSystem.out.println(Integer.MAX_VALUE);\r\nSystem.out.println(Integer.MIN_VALUE);\r\n```\r\n\r\nWhat do you think will be printed? Run the program and observe the results.\r\n\r\n4. What do you think will happen if you add `1`(#e7e8ea) to the maximum value? What about if you subtract `1`(#e7e8ea) from the minimum value? Try adding `1`(#e7e8ea) to the maximum value and subtracting `1`(#e7e8ea) from the minimum value in the print statements you added then run the program. Does it print what you expected? Why do you think this happened?",
    "teacher_markdown": "##Investigate and Modify\r\n\r\n1. When we add those four lines of code in to our main method, we find that they are able to be initialized properly and display in the console without error. That is because there are two ways to initialize most Wrapper Classes (such as Integer or Double), as seen here.\r\n\r\n2. Since `firstInteger`(#e7e8ea) and `secondInteger`(#e7e8ea) are both *Wrapper Classes*, we are able to create a *primitive* type (**int**) and to *unbox* these two `Integer`(#e7e8ea) objects into the primitive data type simply by declaring `total`(#e7e8ea) as an `int`(#e7e8ea) and then initializing it as the sum of the two objects.\r\n\r\n3. When run we see the values `-2147483647`(#e7e8ea) and `2147483648`(#e7e8ea) printed to the console -- the correct range of values for an `Integer`(#e7e8ea) object without *overflow* or *underflow*.\r\n\r\n4. When we add one to `Integer.MAX\\_VALUE`(#e7e8ea) or subtract one from `Integer.MIN\\_VALUE`(#e7e8ea), we see that the value switches to the opposite end of the `Integer`(#e7e8ea) scale, similar to what happens when we use the modulo operator to stay within the confines of a range.",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:27:45.081+00:00\",\"changed\":[\"cloned from \\\"CSA U6L2-L1\\\"\"],\"cloned_from\":\"CSA U6L2-L1\"},{\"changed_at\":\"2022-04-14 19:15:41 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 12:52:33 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 16:37:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 16:41:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 16:56:59 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:26:46 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 19:05:30 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-11-01 19:17:04 +0000\",\"changed\":[\"encrypted_examples\",\"teacher_markdown\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
