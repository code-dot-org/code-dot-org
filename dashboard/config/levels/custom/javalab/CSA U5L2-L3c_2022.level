<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-04-12T18:56:14.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A social media analyst wants to store data about the age groups of users on different social media platforms to create a visual to represent each platform. They have the following values:\r\n\r\n![](https://images.code.org/76ef5d2f4378239d7734f70de16556c9-image-1650990198797.png)\r\n\r\nwhere each row represents ages 18-29, ages 30-49, ages 50-64, and ages 65 and up, respectively. Each column represents the percentages of users on Facebook, YouTube, Twitter, and Instagram, respectively.\r\n\r\n##In SocialMediaScene.java:\r\n\r\n1. Write the `findMaxPercentage()`(#e7e8ea) method to find and return the largest percentage of users.\r\n\r\n   * Set the `maxRow`(#e7e8ea) instance variable to the row where the max percentage is found.\r\n   \r\n   * Set the `maxCol`(#e7e8ea) instance variable to the column where the max percentage is found.\r\n\r\n2. Write the `createScene()`(#e7e8ea) method to find the largest percentage of users.\r\n\r\n   * Call the `findMaxPercentage()`(#e7e8ea) method to get the value of the largest percentage of users.\r\n\r\n   * Draw the appropriate icon from the `icons`(#e7e8ea) array based on the column that has the largest percentage of users.\r\n   \r\n   * Use the `drawText(String text, int x, int y)`(#e7e8ea) in the `Scene`(#e7e8ea) class to write the age group from the `ageGroup`(#e7e8ea) array based on the row and the largest percentage found.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array uses the following syntax:\r\n  \r\n  ```\r\n  for (int row = 0; row < arrayName.length; row++) {\r\n    for (int col = 0; col < arrayName[0].length; col++) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Social Media Users",
    "bubble_choice_description": "Write a method to find the social media platform and age group with the largest percentage of users and create a scene to visualize the results.",
    "thumbnail_url": "https://images.code.org/555c9c7bbec2eaf3760ae4df3c33bbfb-image-1650990657328.png",
    "starter_assets": {
      "facebook.png": "1aee7a31-60ff-41f3-84aa-94b6387f6a90.png",
      "youtube.png": "a2c9ca77-6509-45aa-8b5c-5fcede17c155.png",
      "twitter.png": "f89d7e1f-03d0-49dc-b7a3-bf2b548d7911.png",
      "instagram.png": "da85dc32-c2fa-4f2b-afb4-c0f4fec29edc.png"
    },
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    String[] icons = {\"facebook.png\", \"youtube.png\", \"twitter.png\", \"instagram.png\"};\n    String[] ageGroups = {\"18-29\", \"30-49\", \"50-64\", \"65 and up\"};\n    int[][] percentages = {{22, 29, 39, 47}, {41, 38, 37, 37},\n                           {23, 21, 18, 12}, {15, 12, 6, 4}};\n\n    SocialMediaScene myScene = new SocialMediaScene(icons, ageGroups, percentages);\n\n    myScene.createScene();\n\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "SocialMediaScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a scene based on which social media platform\n * has the largest percentage of users in an age group\n */\npublic class SocialMediaScene extends Scene {\n\n  private String[] icons;        // The list of social media icons\n  private String[] ageGroups;    // The list of age groups\n  private int[][] percentages;   // The 2D array of age group percentages\n  private int maxRow;            // The row with the largest percentage of users found\n  private int maxCol;            // The column with the largest percentage of users found\n\n  /*\n   * Constructor to create a SocialMediaScene with the specified\n   * array of icons, age groups, and 2D array of age group percentages\n   */\n  public SocialMediaScene(String[] icons, String[] ageGroups, int[][] percentages) {\n    this.icons = icons;\n    this.ageGroups = ageGroups;\n    this.percentages = percentages;\n  }\n\n  /*\n   * Return the value of maxRow\n   */\n  public int getMaxRow() {\n    return maxRow;\n  }\n\n  /*\n   * Return the value of maxCol\n   */\n  public int getMaxCol() {\n    return maxCol;\n  }\n\n  /*\n   * Returns the largest percentage of users found\n   */\n  public int findMaxPercentage() {\n    // TO DO #1: Find and return the largest percentage of users and set the maxRow\n    // and maxCol instance variables to the row and column where the value is found.\n    \n\n    return 0;\n  }\n\n  /*\n   * Creates a scene to show the social media platform\n   * with the largest percentage of users in an age group\n   */ \n  public void createScene() {\n    // TO DO #2: Call the findMaxPercentage() method and draw\n    // the appropriate icon and text based on the result.\n\n\n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_exemplar_sources": "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\nZlmW03eRwzp6Ng==\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-12T18:56:14.370+00:00\",\"changed\":[\"cloned from \\\"CSA U5L2-L3b_2022\\\"\"],\"cloned_from\":\"CSA U5L2-L3b_2022\"},{\"changed_at\":\"2022-04-12 18:56:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 16:05:15 +0000\",\"changed\":[\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 16:32:44 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 18:28:24 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 18:53:21 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:32:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:36:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:37:51 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:38:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:39:33 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 15:16:13 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:23:19 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:23:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:23:50 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:30:49 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:42:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:42:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:42:53 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
