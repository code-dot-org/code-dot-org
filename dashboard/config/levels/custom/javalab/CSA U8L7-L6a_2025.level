<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:41:02.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "An e-commerce website has lists of sales for multiple days. The marketing team wants to determine the popularity of the products to plan promotions and advertisements and needs to create one list that contains only the unique products and the total quantity sold for each product.\r\n\r\n✅ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Marketing</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">combineWeeks()</code> method to create and return a new <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> that contains the products in the first week's list followed by the products in the second week's list.\r\n\r\n✅ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Marketing</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">combineSales()</code> method to find duplicate products and combine their total quantities sold. Remove the duplicate products from the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">combined</code> list.\r\n\r\n✅ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">MarketingRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">combineWeeks()</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">combineSales()</code> methods and print the new list.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Online Shopping",
    "bubble_choice_description": "Create a new list containing the unique products sold on an e-commerce website and their total quantities.",
    "thumbnail_url": "https://images.code.org/85a5299d7c24b43059442a89234b7695-online-shopping.png",
    "encrypted_validation": "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\n/cIhSdOEgwuQ5C3LF1Qmy6MHdg==\n",
    "encrypted_exemplar_sources": "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\n9SdS\n",
    "start_sources": {
      "MarketingRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class MarketingRunner {\n  public static void main(String[] args) {\n\n    // Creates ArrayLists to contain the sales for each week\n    ArrayList<Product> firstWeek = Marketing.getSales(\"firstweek.txt\");\n    ArrayList<Product> secondWeek = Marketing.getSales(\"secondweek.txt\");\n\n    // Prints the values in each list\n    System.out.println(\"First Week Sales\\n\" + Marketing.salesToString(firstWeek));\n    System.out.println(\"Second Week Sales\\n\" + Marketing.salesToString(secondWeek));\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Call the combineWeeks() and combineSales() methods and print the new list.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Marketing.java": {
        "text": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Manages and analyzes data about product sales\n */\npublic class Marketing {\n\n  /*\n   * Reads the product sales information from a file\n   * and returns an ArrayList of Products\n   */\n  public static ArrayList<Product> getSales(String filename) {\n    File myFile = new File(filename);\n    Scanner fileReader = createScanner(myFile);\n\n    ArrayList<Product> tempProducts = new ArrayList<Product>();\n\n    while (fileReader.hasNextLine()) {\n      String currentLine = fileReader.nextLine();\n      Product currentProduct = createProduct(currentLine);\n      tempProducts.add(currentProduct);\n    }\n\n    fileReader.close();\n    return tempProducts;\n  }\n\n  /*\n   * Returns a Scanner object to read a specified File\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Gets the product name and total quantity sold from\n   * the currentLine and returns a Product object\n   */\n  public static Product createProduct(String currentLine) {\n    int comma = currentLine.indexOf(\",\");\n    \n    String productName = currentLine.substring(0, comma);\n    String totalSold = currentLine.substring(comma + 1);\n    \n    Product temp = new Product(productName, Integer.parseInt(totalSold));\n    return temp;\n  }\n\n  /*\n   * Returns a String containing the product sales for a specified week\n   */\n  public static String salesToString(ArrayList<Product> week) {\n    String text = \"\";\n    \n    for (Product item : week) {\n      text = text + item + \"\\n\";\n    }\n\n    return text;\n  }\n\n  /*\n   * Returns a new ArrayList that combines the product sales for the first week and the second week\n   */\n  public static ArrayList<Product> combineWeeks(ArrayList<Product> firstWeek, ArrayList<Product> secondWeek) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Create and return a new list that combines the sales for firstWeek\n     * followed by the sales for secondWeek.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    return null;\n  }\n\n  /*\n   * Combines duplicate products and their quantities\n   */\n  public static void combineSales(ArrayList<Product> combined) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Find duplicate products and combine their total quantities sold. Remove\n     * the duplicate products from the combined list.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Product.java": {
        "text": "/*\n * Represents a product sold on an e-commerce website\n */\npublic class Product {\n\n  private String name;     // The name of a product\n  private int quantity;    // The total quantity sold\n\n  /*\n   * Sets name and quantity to the specified values\n   */\n  public Product(String name, int quantity) {\n    this.name = name;\n    this.quantity = quantity;\n  }\n\n  /*\n   * Returns the name of the product\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the total quantity sold\n   */\n  public int getQuantity() {\n    return quantity;\n  }\n\n  /*\n   * Changes the quantity to newQuantity\n   */\n  public void setQuantity(int newQuantity) {\n    quantity = newQuantity;\n  }\n\n  /*\n   * Returns true if this Product has the same name as otherProduct\n   */\n  public boolean equals(Object other) {\n    if (other == this) {\n      return true;\n    }\n\n    if (!(other instanceof Product)) {\n      return false;\n    }\n\n    Product otherProduct = (Product) other;\n    return this.name.equals(otherProduct.name);\n  }\n\n  /*\n   * Returns a String containing the product information\n   */\n  public String toString() {\n    return name + \": \" + quantity + \" sold\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "firstweek.txt": {
        "text": "shoes,12\nbook,18\nlaptop,23\nyoga mat,6\nphone case,31\ncharger,25\nheadphones,9\nair fryer,4\nwater bottle,15\nboard game,3",
        "isVisible": true,
        "tabOrder": 3
      },
      "secondweek.txt": {
        "text": "board game,17\npet food,7\nheadphones,26\nshoes,14\ncat bed,16\nwaffle maker,9\ncrochet kit,3\nsmart bulb,12\ncharger,4\nrobot vacuum,5",
        "isVisible": true,
        "tabOrder": 4
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:41:02.600+00:00\",\"changed\":[\"cloned from \\\"CSA U8L7-L6a_2023\\\"\"],\"cloned_from\":\"CSA U8L7-L6a_2023\"}]"
}]]></config>
</Javalab>
