<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T21:01:33.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A school has recorded the activity points earned by students in a 2D array, where each row represents a student and each column represents a specific activity.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">School</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getHighestActivity()</code> to calculate and return the student that has the highest total activity points.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SchoolRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getHighestActivity()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_enhanced_for_loops_and_2d_arrays",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Student Activity",
    "bubble_choice_description": "Find the student that has the highest total activity points.",
    "thumbnail_url": "https://images.code.org/f012900901a8e38f325ea1eeb74c058f-audience.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "SchoolRunner.java": {
        "text": "public class SchoolRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array containing the activity points for several students\n    int[][] activityPoints = {{3, 5, 2}, {1, 4, 6}, {2, 5, 3}, {6, 2, 1}};\n\n    // Creates a School object\n    School school = new School(activityPoints);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getHighestActivity() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "School.java": {
        "text": "/*\n * Represents a school\n */\npublic class School {\n  \n  private int[][] activityPoints;   // The 2D array containing the activity points for several students\n\n  /*\n   * Initializes activityPoints to the specified 2D array\n   * containing the activity points for several students\n   */\n  public School(int[][] activityPoints) {\n      this.activityPoints = activityPoints;\n  }\n\n  /*\n   * Returns the 2D array activityPoints\n   */\n  public int[][] getActivityPoints() {\n    return activityPoints;\n  }\n\n  /*\n   * Returns the row index for the student that has the\n   * highest total activity points\n   */\n  public int getHighestActivity() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array activityPoints to calculate the total activity\n     * points for each student (row). Return the row index that has the\n     * largest total activity points.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n    \n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2024"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:01:33.228+00:00\",\"changed\":[\"cloned from \\\"CSA U5L5-L6d_2023\\\"\"],\"cloned_from\":\"CSA U5L5-L6d_2023\"},{\"changed_at\":\"2024-05-09 19:28:47 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
