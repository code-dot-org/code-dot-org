<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-04-11T13:55:26.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO #1:** Look at the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">dropCourse()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Student</code> class. What do you notice about its parameter? Does the parameter get a copy of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Course</code> object when the method is called?\r\n\r\nâœ… **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">StudentRunner</code> class, add the following code:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nbetsy.dropCourse(csCourse);\r\nSystem.out.println(\"\\n\" + betsy);\r\nSystem.out.println(\"\\n\" + csCourse);\r\n</pre>\r\n\r\nRun the program. What do you notice about the output? Why do you think this happened?",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- ðŸ”Ž ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "project_template_level_name": "CSA U7L2-Parameters PBT_2023",
    "teacher_markdown": "1. When an object reference is passed into a method as an argument, it does not make a copy of the object. Instead, a copy of the reference to the object is passed, making the reference variable and the parameter aliases.\r\n\r\n2. When this code is added, the output is as follows:\r\n\r\n```\r\nBetsy\r\nComputer Science: Enrolled\r\nBetsy\r\nComputer Science: Dropped\r\nComputer Science: Dropped\r\n```\r\n\r\nBy calling `betsy.dropCourse(csCourse);`, we are setting `status` within the `Course` object to `false`. This will indicate that the `Student` is dropped from the course when we print the object to the console using the `toString()` method. The reason that `Computer Science: Dropped` appears twice is because the `toString()` method within the `Course` class is called within the `Student` class and within the `StudentRunner` class with the following line: `System.out.println(\"\\n\" + csCourse);`.",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-11T13:55:26.800+00:00\",\"changed\":[\"cloned from \\\"CSA Investigate Level Template\\\"\"],\"cloned_from\":\"CSA Investigate Level Template\"},{\"changed_at\":\"2023-04-11 13:55:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 13:39:18 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 12:16:28 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 12:19:41 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
