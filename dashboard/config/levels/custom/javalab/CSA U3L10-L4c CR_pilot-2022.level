<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:25:45.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L10-L3c PBT_pilot-2022",
    "long_instructions": "Request a code review to get feedback from your peers on your `hasDuplicates()`(#e7e8ea) method.\r\n\r\nWhen you are finished receiving feedback, return to your project and click the **Close review** button.\r\n\r\n##Requesting Feedback\r\n\r\n**Commit your code** and add a comment that includes:\r\n\r\n* a description of the goals and intended outcome of the program\r\n\r\n* any additional relevant information\r\n\r\n* specific tasks or questions you want your reviewer to perform or answer\r\n\r\n##TAG to Give Feedback\r\n*Remember to keep feedback kind, specific, and helpful. Refer to your sentence starters to structure your feedback.*\r\n\r\n1. Tell them something you like about their code.\r\n\r\n2. Ask them something about the code.\r\n\r\n3. Give a suggestion for improvement.",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "States",
    "bubble_choice_description": "Find out if there are duplicate admission years that states joined the United States.",
    "thumbnail_url": "https://images.code.org/f61a8284743e827818ed7b095c8c1a3c-image-1648758558035.png",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\nf4Fqbv2yLJXznHUw0BWEyCZJHKDDVzo=\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"statenames.txt\");\n    String[] states = myFileReader.getStringData(50);\n\n    myFileReader.setFile(\"admissionyears.txt\");\n    int[] years = myFileReader.getIntData(50);\n\n    States myStates = new States(states, years);\n\n    // TO DO #2: Print the result of a call to hasDuplicates().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a double array containing the values in the file\n   */\n  public double[] getDoubleData(int numValues) {\n    double[] values = new double[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextDouble()) {\n        values[index] = fileReader.nextDouble();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "statenames.txt": {
        "text": "Alabama\nAlaska\nArizona\nArkansas\nCalifornia\nColorado\nConnecticut\nDelaware\nFlorida\nGeorgia\nHawaii\nIdaho\nIllinois\nIndiana\nIowa\nKansas\nKentucky\nLouisiana\nMaine\nMaryland\nMassachusetts\nMichigan\nMinnesota\nMississippi\nMissouri\nMontana\nNebraska\nNevada\nNew Hampshire\nNew Jersey\nNew Mexico\nNew York\nNorth Carolina\nNorth Dakota\nOhio\nOklahoma\nOregon\nPennsylvania\nRhode Island\nSouth Carolina\nSouth Dakota\nTennessee\nTexas\nUtah\nVermont\nVirginia\nWashington\nWest Virginia\nWisconsin\nWyoming",
        "isVisible": true
      },
      "admissionyears.txt": {
        "text": "1819\n1959\n1912\n1836\n1850\n1876\n1788\n1787\n1845\n1788\n1959\n1890\n1818\n1816\n1846\n1861\n1792\n1812\n1820\n1788\n1788\n1837\n1858\n1817\n1821\n1889\n1867\n1864\n1788\n1787\n1912\n1788\n1789\n1889\n1803\n1907\n1859\n1787\n1790\n1788\n1889\n1796\n1845\n1896\n1791\n1788\n1889\n1863\n1848\n1890",
        "isVisible": true
      },
      "States.java": {
        "text": "/*\n * Analyzes data about states\n */\npublic class States {\n\n  private String[] stateNames;\n  private int[] admissionYears;\n\n  /*\n   * Constructor to create an States object with the specified\n   * arrays of state names and years they were admitted\n   */\n  public States(String[] stateNames, int[] admissionYears) {\n    this.stateNames = stateNames;\n    this.admissionYears = admissionYears;\n  }\n\n  /*\n   * Returns true if there are duplicate years in\n   * the admissionYears array, otherwise returns false\n   */\n  public boolean hasDuplicates() {\n    // TO DO #1: Traverse the admissionYears array to determine if there\n    // are duplicate values and return the result.\n\n\n    return false;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:45.872+00:00\",\"changed\":[\"cloned from \\\"CSA U3L10-L4c CR_2022\\\"\"],\"cloned_from\":\"CSA U3L10-L4c CR_2022\"},{\"changed_at\":\"2022-09-09 19:41:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
