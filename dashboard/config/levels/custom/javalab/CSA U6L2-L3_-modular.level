<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2024-02-16T05:19:21.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO:** In order to determine if the word or sentence is a palindrome, we will need to also check the characters from the back of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> object. \r\n\r\nDeclare and initialize the variable <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String back</code>. \r\n\r\nAdd this code in the body of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n<pre style=\"background-color: #333333; color: white;\">\r\nfront = shortExample.substring(i,i+1);\r\nback = shortExample.substring(shortExample.length() - i - 1, shortExample.length() - i);\r\nSystem.out.println(front + \" ---- \" + back);\r\n</pre>\r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- ðŸ”Ž ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "project_template_level_name": "CSA U6L2-Substring PBT_-modular",
    "teacher_markdown": "When we change the parameter for the `aSubstring` to `30`, the value that is printed to the console is `\" the lazy dog.\"` This is because the `substring()` method is returning a `Strin`g composed from the characters from index `30` (inclusive) until the end of the original `String`.",
    "name_suffix": "_-modular",
    "ai_tutor_available": true,
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2024-02-16T05:19:21.906+00:00\",\"changed\":[\"cloned from \\\"CSA U6L2-L3_2025\\\"\"],\"cloned_from\":\"CSA U6L2-L3_2025\"},{\"changed_at\":\"2024-02-23 04:20:05 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-02-23 04:26:02 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"}]"
}]]></config>
</Javalab>
