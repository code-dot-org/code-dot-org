<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:16:37.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Natural language processing (NLP) is used in many apps and devices to interact with users and make meaning of text to determine how to respond, find information, or to create new text. Your goal is to use natural language processing techniques to identify structure, patterns, and meaning in a text to have conversations with a user, execute commands, perform manipulations on the text, or generate new text.\r\n\r\nUse your knowledge of object-oriented programming, <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code>s, the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class, and algorithms to create a program that uses natural language processing techniques:\r\n\r\n* **Create at least two <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code>s** – Create at least two <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code>s to store the data used in your program, such as data from text files or entered by the user.\r\n\r\n* **Implement one or more algorithms** – Implement one or more algorithms that use loops and conditionals to find or manipulate elements in an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> or <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> object.\r\n\r\n* **Use methods in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class** – Use one or more methods in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class in your program, such as to divide text into sentences or phrases.\r\n\r\n* **Use at least one natural language processing technique** – Use a natural language processing technique to process, analyze, and/or generate text.\r\n\r\n* **Document your code** – Use comments to explain the purpose of the methods and code segments and note any preconditions and postconditions.\r\n\r\n### FileReader Methods\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringList(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntList(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Integer</code> objects containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleList(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Double</code> objects containing the data",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "NLPRunner.java": {
        "text": "public class NLPRunner {\n  public static void main(String[] args) {\n\n\n\n\n\n\n\n    \n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static ArrayList<String> toStringList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    return temp;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static ArrayList<Integer> toIntList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    ArrayList<Integer> data = new ArrayList<Integer>();\n\n    for (int index = 0; index < temp.size(); index++) {\n      String currentValue = temp.get(index);\n      data.add(Integer.parseInt(currentValue));\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  public static ArrayList<Double> toDoubleList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    ArrayList<Double> data = new ArrayList<Double>();\n\n    for (int index = 0; index < temp.size(); index++) {\n      String currentValue = temp.get(index);\n      data.add(Double.parseDouble(currentValue));\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:16:37.722+00:00\",\"changed\":[\"cloned from \\\"CSA U6 Natural Language Processing Project 1-Day_2023\\\"\"],\"cloned_from\":\"CSA U6 Natural Language Processing Project 1-Day_2023\"}]"
}]]></config>
</Javalab>
