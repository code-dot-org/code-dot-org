<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-04-12T19:00:39.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A weather analyst wants to determine the average temperature for each day. They have the following values:\r\n\r\n![](https://images.code.org/96f3b31d65d7611e43d0fd780ce43f27-image-1651005727636.png)\r\n\r\nwhere each row represents New York, Los Angeles, Miami, and Seattle, respectively. Each column represents the temperature on March 29th, March 30th, March 31st, April 1st, and April 2nd, respectively.\r\n\r\n##In Temperatures.java:\r\n\r\n1. Write the method `dailyAverages()`(#e7e8ea) to calculate the average temperature for each day.\r\n\r\n   * Get the corresponding date for each column from the `dates`(#e7e8ea) array.\r\n   \r\n   * Return a `String`(#e7e8ea) containing the date and the average temperature for that day.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array in column-major order uses the following syntax:\r\n  \r\n  ```\r\n  for (int col = 0; col < arrayName[0].length; col++) {\r\n    for (int row = 0; row < arrayName.length; row++) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Daily Temperatures",
    "bubble_choice_description": "Write a method to find the average temperature for each day and print the results.",
    "thumbnail_url": "https://images.code.org/da503f4004138d2d2ee272ecde2d51fb-image-1651005744030.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] dates = {\"March 29th\", \"March 30th\", \"March 31st\", \"April 1st\", \"April 2nd\"};\n    double[][] cityTemps = {{37.27, 40.66, 53.53, 52.36, 48.87},\n                              {62.2, 61.47, 60.31, 62.42, 62.38},\n                              {81.5, 80.04, 81.61, 85.91, 85.69},\n                              {56.41, 48.6, 51.67, 48.72, 52.65}};\n\n    Temperatures myTemps = new Temperatures(dates, cityTemps);\n\n    System.out.println(myTemps.dailyAverages());\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Temperatures.java": {
        "text": "/*\n * Analyzes data about daily temperatures for cities\n */\npublic class Temperatures {\n\n  private String[] dates;         // The list of dates\n  private double[][] cityTemps;   // The 2D array of temperatures for several cities\n\n  /*\n   * Constructor to create a Temperatures object with the\n   * specified array of dates and 2D array of temperatures\n   */\n  public Temperatures(String[] dates, double[][] cityTemps) {\n    this.dates = dates;\n    this.cityTemps = cityTemps;\n  }\n\n  /*\n   * Finds the average temperature for each day and returns\n   * a String containing the dates and average temperatures\n   */\n  public String dailyAverages() {\n    // TO DO #1: Calculate the average temperature for each date\n    // and return a String containing the date and temperature.\n\n\n    return null;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_exemplar_sources": "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\nA/awcYHqOeQ=\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-12T19:00:39.313+00:00\",\"changed\":[\"cloned from \\\"CSA U5L3-L3_2022\\\"\"],\"cloned_from\":\"CSA U5L3-L3_2022\"},{\"changed_at\":\"2022-04-12 19:00:42 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 15:10:56 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 16:52:27 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 17:05:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 17:05:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 17:09:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 16:24:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 23:28:04 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
