<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-02-26T00:28:24.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<Integer> numList = new ArrayList<Integer>();\n    numList.add(42);\n    numList.add(66);\n    numList.add(71);\n    numList.add(12);\n    numList.add(39);\n\n    System.out.println(\"Original list: \" + numList + \"\\nSize: \" + numList.size());\n\n    for (Integer item : numList) {\n      numList.remove(item);\n    }\n\n    System.out.println(\"\\nNew list: \" + numList + \"\\nSize: \" + numList.size());\n  }\n}",
        "isVisible": true
      }
    },
    "name_suffix": "_2022",
    "long_instructions": "##Investigate and Modify\r\n\r\nRun the program to observe the results.\r\n\r\nThen, experiment with the program by making the following modifications. Change one line at a time, then run the program after each change to observe the results.\r\n\r\n1. What error is shown in the console? Why do you think this happened?\r\n\r\n2. Change the enhanced `for`(#e7e8ea) loop to a regular `for`(#e7e8ea) loop then run the program to observe the results. Does the error still occur? What happens instead?\r\n\r\n3. After the `remove()`(#e7e8ea) inside the `for`(#e7e8ea) loop, add the line `index--;`(#e7e8ea) then run the program. How does this change the result? Why do you think this is needed?",
    "teacher_markdown": "##Investigate and Modify\r\n\r\n1. Whenever an ArrayList is being traversed with an `enhanced for loop`(#e7e8ea), using the `remove()`(#e7e8ea) method will result in a `ConcurrentModificationException`(#e7e8ea).\r\n\r\n2. In this case, there is no longer an error; the elements can be removed from the ArrayList as expected. In this instance, every other index value will be removed, leaving only the odd index values remaining in the original ArrayList.\r\n\r\n3. By adding `index--;`(#e7e8ea) to the loop, we find that all elements of the ArrayList will be removed. However, the ArrayList will not get caught within the loop because even though the loop control variable is not incrementing as expected, the `size()`(#e7e8ea) of the ArrayList is decrementing with each loop, causing the conditional to eventually evaluate to false and break the loop.\r\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:28:24.463+00:00\",\"changed\":[\"cloned from \\\"CSA U6L6-L3\\\"\"],\"cloned_from\":\"CSA U6L6-L3\"},{\"changed_at\":\"2022-05-05 14:51:39 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 14:56:40 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 19:06:28 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-11-02 13:55:19 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-11-02 14:02:37 +0000\",\"changed\":[\"teacher_markdown\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-11-02 14:02:53 +0000\",\"changed\":[\"teacher_markdown\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
