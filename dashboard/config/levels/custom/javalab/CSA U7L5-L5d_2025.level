<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:24:36.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A ride-sharing app wants to implement a system that calculates fares based on the user's ride preferences.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getFare()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Ride</code> class that returns the fare of the ride. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calculateFare()</code> to calculate the fare.\r\n\r\n‚úÖ **TO DO #2:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getFare()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LuxuryRide</code> class that overrides the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getFare()</code> method to return the fare of the ride including the additional charges for luxury amenities. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calculateLuxuryFare()</code> to calculate the fare.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">RideRunner</code> class, create several <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Ride</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LuxuryRide</code> objects and call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getPostDate()</code> method for each object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with overriding methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/method-overriding"
    ],
    "display_name": "Ride Sharing",
    "bubble_choice_description": "A ride-sharing app wants to implement a system that calculates fares based on the user's ride preferences.",
    "thumbnail_url": "https://images.code.org/981f93687b64c805083e496e00c75efc-car.png",
    "encrypted_validation": "/8j/vTD9LYa3x+PfrySEMVeUUNqJFT9hYSBYILfOPALjmMLQ/aPcSRo5mRYx\nqyTQswJiqpmt1ZvU7lhNH2RAp7BXPCpR49QRfpT+qm6hCRNmE7IxeBHXMNgr\nRXRVZh+u6hdrWKFEMsxUkNwbLq+usHt6Gx0olNoefqPmOw1epxDsU59MSfAE\nH+Q/7fRG+4or9qgYVLgGwBXPHzEVsF9SglbfzPV0C7GkRjjlMSSaWx3B04hA\njjOqMyJ1Bu09vjELCBL2wgLecQ5QNIZGAuKf/IpHH7SP/S2gF11MoPRZreIF\nz3i+rKANc2ZAGwX8caKLgsyaq7D/3UMFgHghbYJ3BOAPdcZwxTINvpuQRJ5s\nv67HwQWh8XDIXY9h/k4729e5bmOtKESdgaWygtBSd0yjGnew64WoLbYW4VV8\nJOIvbi/TdaQhM597cvHqljrruOnQafKo543Ot5uXLbwXLxmYI4W70A9gAfG9\nKeK/QgiKL0Nq9i5GZePE/FWP0Q/sxd3k+Mw3+WfXWVQhszxyxD8ts/mvFbt7\nO6pfHfyscarTo0C+2lPHkHQquyJ8g8OabZRmUG3ER39Anqp4Jhl1PTpOTSkH\ny5O73Y9QwiOTpHJICIzZrBfCSI//AAobG7ee3nruPwqVWhsCEM/FvuO/Z003\nb2GgYCWJyH5Imr+keAGpPAKMMgSd5C3+Srll0Tccs1MT33rc8egxKAhJ4bHv\nCmvj9rL8+Sf/Dgl18lU/e3xJkln+XCUU4ya3JOfvv53W5y/FHyWYtnSI3sv9\nS31B8UB18iYTu3a7PdtusWt6tw9+xM7O4Kt+BfASJvN0bcIf0LrjkX3gzYHo\nW97SRoMTF5j1PqE8+S833IxqJW6tZqnoYswsf6oae2s9nYMVGR1pGKB/tjFr\nkDKn/7UXQjub6UzLrbobEGs2s7cbZU532kCZJO2u/y3ff+IVpP+ajWsUdn+t\nWV3jw0vCwjjKtxwd5ucHseajrFwrIf8f2vKXpaqlag55QAMutjpHdjP+6KNp\nQb7dCGjhbw9Za0doJeZSZzaJWONCGAflg8Tc6PzKAAtAO6jLAwoXyp+N2URe\nuYozTqssdus1QQMoufPnNqyvwEKnt3Bs/pHesXC7zXapgw4gy3xBk+ucbect\nTyoIeJ/qGk9btYo6wPyL50w5MMaKmb52V3Sr0zqi0yZTc8YkZ74+4Lv89OdZ\nJWV1MDS3e1Q7vEdN3D5o45RDSrIQsHy+MNc2Rpi/3eFCDCs9kYiZR6Q3grpi\nAKYwu1RpO1XqqfUBFQz91N4H/qoSwdqIF4q+vQeq/eenWTzL54kFO3V3zozu\nFhhjstFSzqCtkeXkU7fsEhM84Vb+BrnFVyXCKW23Iq/+RL4Psuwhzgog1W8w\nfs3bj1y/u6dOyh31mz0ecD1kY3IegZTy/KI7t0T/BiekhcHrWjRlZ4e+g5UX\n8ROQWQX29SHRPQKOpDGDVbDQcZ6cyztsZ6O/TkC5g+GsvMzerrtzR1x/KfVt\nySZ4oR8BtPMtuoV6l6x5EQOJCP5KJzYNdeJ2irdWZAgA5oLOkgQ3ULO5ZHK3\ncgh+h3cuRWuaHUkuEGa5Q05fLsQMx/62MA6PwBLhWXxO1DKUyRkl0HOPqa+F\nVrJnXj1SrJjUVXSp8GkpM1VUg6Yq5UEsXuy2k5IPPG8kKNOfVwES7ezI+ipk\n8hbUpA==\n",
    "start_sources": {
      "RideRunner.java": {
        "text": "public class RideRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Create several Ride and LuxuryRide objects and call the getFare()\n     * method for each object\n     * -----------------------------------------------------------------------------\n     */\n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Ride.java": {
        "text": "/*\n * Represents a Ride\n */\npublic class Ride {\n  public static final double FARE_PER_MILE = 2.0;         // $2 / mile\n  public static final double FARE_EXTRA_PASSENGER = 5.0;  // $5 for extra passenger\n  public static final double FARE_PEAK = 1.5;             // 1.5x for peak\n  private double distance;         // distance\n  private boolean peakHour;        // is it peak hour\n  private boolean extraPassenger;  // is there an extra passenger\n  \n  public Ride(double distance, boolean peakHour, boolean extraPassenger) {\n    this.distance = distance;\n    this.peakHour = peakHour;\n    this.extraPassenger = extraPassenger;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getFare() method to return the ride's fare. The method\n   * should call the private method calculateFare().\n   * -----------------------------------------------------------------------------\n   */\n\n  /*\n   * Returns the fare: distance * fare. If there is an extra passenger,\n   * add to fare. If it's peak hour, multiply fare.\n   */\n  private double calculateFare() {\n    double fare = FARE_PER_MILE * distance;\n    if (extraPassenger){\n      fare += FARE_EXTRA_PASSENGER;\n    }\n    if (peakHour) {\n      fare *= 1.5;\n    }\n    return fare;\n  }\n}\n",
        "isVisible": true,
        "tabOrder": 1
      },
      "LuxuryRide.java": {
        "text": "/*\n * Represents a LuxuryRide\n */\npublic class LuxuryRide extends Ride {\n  public static final double FARE_WIFI = 10.0;         // $10 wifi     \n  public static final double FARE_REFRESHMENTS = 15.0; //  $15 refreshments\n  private boolean wifi;          // is there wifi\n  private boolean refreshments;  // is refreshments\n  \n  public LuxuryRide(double distance, boolean peakHour, boolean extraPassenger, boolean wifi, boolean refreshments) {\n    super(distance, peakHour, extraPassenger);\n    this.wifi = wifi;\n    this.refreshments = refreshments;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getFare() method to override the getFare() method to \n   * return the fare of the ride including the additional charges for luxury amenities.\n   * The method should call the private method calculateLuxuryFare().\n   * -----------------------------------------------------------------------------\n   */\n\n  /*\n   * Returns the fare: base is the ride fare. If there is wifi,\n   * add to fare. If there are refreshments, add to fare.\n   */\n  private double calculateLuxuryFare() {\n    double fare = super.getFare();\n    if (wifi) {\n      fare += FARE_WIFI;\n    }\n    if (refreshments) {\n      fare += FARE_REFRESHMENTS;\n    }\n    return fare;\n  }\n}\n",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "ewufVVTvzq9pQxCip5RUHI4kaccUQy501DvCgI9S9xvjP4C16yZhixJ7lhTK\nxji1boG6gm25RNoVEFvKmonXIh3kA4QYPt++4WCk1t5bvahHk9gwXzTQzaV9\n8MQkTrsyMaD4/AbLtgoRT0BdzxgCBW6qFJmDktkkVaEwNvkcimfAdUcKGgdl\nni2QU19iP08w8WXeBg16hJ5he5VZj3iZqZEbuZD2afNUuKnNeVZZSR61hmGr\ngsv/K+G0l5pctJyD85wZfK4kucw7381YkcjVeDm+bqkPueu8iFpw69uAK9Lx\n/fnP/5UL/g1Q71QUyGMi7TaGuHwseWDRzcj8pDJzrLCta9mg88lbqRyGbSHZ\nIihO48skKc+zetAxfLZx9s2LBDxt9/62v0FsFjUKxHqg77+tfYiS91k8zFkf\n4rn+rMISyxSSlkrMfe5lxyYpQKzhJYSt7oOInej5ezvH65wy9w60tCwZgjeh\n1yZuk4LzSuhQ0oIoSyxzTv3qwRfrdiSF+kkR1Z8AMne0u0r7apyQ2PCzRJ9I\ncXQgJVr2UBJhl77FarQ3eEMELz3w/Rbc0z1+YRgOGmuuDYUbzxzr+TEsVykg\n2X2yAs2fTTkSuFjhEqUtV0io2PkCZGudoXpodKIUT3PW4QGdeCtTodDvWxKz\nHImEsv3alr9RrDPVlU0w+fg6f1z0Ti3EQmtWUUEHKOOMADcpZsB8qsQediue\nwOlV1LKEa+QyVNl+ygqwMLn6DJzwFcxV9zn7LTxELuFXkexdfjXy8QAiZwR8\nFbOV+hfs+S+BZ10dlkT7v6CHc3MeMCDlafYupfpHWyD+Q1cMkU3PwE695frA\nvloeUW0zFH6wxYRPu0AAodrjUQuZrsBDSOZpLYbsazp0nYdqD4uN0+SM5osd\nhff2+GcQVUEPtPh2LdY9RHb2ai/IeUVS6cV1A04uB8jPbUuCE9+98EJdQ3+O\nZOrLQ1uEWeIvRWTzd+KzHojOM3ojR78IEHua255nkXvCjDVHztaOwYBB2JVr\n80NOwNjAYIzSAyjiBc/RdXMkkgOUYtKKF62q4AyMsClFQULoGsyIZl8Kz2R0\nbyytYo5CXdxrxxLPYN3+KK38zAKdRYOM/0YLNCettEuaGowuHzMyBLTe6FrH\nHGw02rirZIkWV7rZvEAif5q1HRaOXn82zhO666W9WPsFj00kjc2lZU0ReC9b\nV/szWE9Idgqs/wxHBS/CBorbNVhHY34k1Eq+KJ5y2Vjq+Gs+AVUAMf3xSZ9G\n/jCH/07KYV/9c3U2bUsLJKi6nVEHP7YFKrypwQDG6SJyIgJJmWsZmoEqaMUC\ndSi2q1u08Ckkm2OWvx30fnZsBweHO/DHGLcda/HADt2qiUqlvDgdFuIlQ0N7\n7Qadb5Yz5tus7lWlG0s7Sz0Do2l64dpNcPSBmPos+4Jhj4O3xePi2lje99KB\nLziFtuxlBJogwV+zhxE9QTSlzUFxygAyCDh66AJextAMSWwcBk3DWyw2C6at\nGBj+MCn9NvGlSLL7l/qgruJn/GzFERSZ8ArJfRLQeJQ76UxhcRP2j6/LZ4pi\nDyCX561M8pS/B7sR9b0Ziyv2ePW43QVKHR7TId+0tdIpS8dxq1NIq671UoFt\nz2NTxyoqp4Fzy02YFO+dKC5Q4l+Vy8r/QJnIrkOIFgpV+ilr9e3OuEBDr53F\nzQu8eA1cNGYCURDrsM8DNwqvedqGig9C3mSOPYojfUcG6taACjYVvS/HMVxl\nqP6OJUeFjZeCOqPh+zwKeK6L46iOsikcji//9p+Dj+KAlN171Y1XQ8U+cBGT\nUDpZUXT13jyFV0uThPZSfeDUbk9oPF8jnH2Pdy4l5HXMEUPcCE2M1Z+oGLip\nF1vX/xJzXLTP5jL5zHVCf++0YpsyXJEnyGogJrvPKANwm3FojrnFkyKuS+E8\nIz9++YTG8V9xF2C6hu3g/jvH8e5wqWS89/RUUQSebsmr7+kRwjsf2mYpI8HB\nrNeAG3Peqt5P/bQHdkcfMkYQj4ekcQ3JtOaB6rCeGVL6B+S2vh22pGZmzTpI\ns4Wv3V5U35mToXcve/hxb6pyEY5dNdbpVIy/Ac6IoNW6smKvBBztBurcJlSp\nqafiZ2D1fKV+8kZiklEWl+JMDYOp47hOFptW2ZZuWRtTmhKrcLjbeH52+9pA\nEhNmsY4b0BH6r6eq0OxwUin4TzgbGyCwUpUOzMdBYM9N1KqXInEe7YCZtGu+\nEeUZtbzx9LIzBVbA7PQFiYqXazQ2XYIfuMw2KYn2PyeGZ4Hkn4K+2PyxxFcf\n/3wsmA2fnNqmrXHrVYw1kNCnb9Bd8lNqKv9o1cBGVmf+XXE78O7/OvyMYR2i\nUsmEZar9gv/kspziu3Tk09+edejQblAZaSKqzo1lXJkHS4R0kBOPvs/4Vvx3\ntXTjZbIDwcCWJKobyOX/n815/MeXTHAZ9YdDa/NJ1Gf3m7+uH0Rlto7uRRpG\np+9Wi8pcSRDSbUG3t8ndQkujp5KAJbwcsSPf6590AnN2nqVQvWQ71ibgEQOV\nI2n/0oHAYkTPPFQbHb51L3MXKlTwSngg0Mb6HA1FFJzTXJeFB7YrOYbc1Gje\nGE70NRb0We1EdWlyIFj1xAoNiW2JTxrIOKSwNQ+1zi1O+kPVGHFqH3G3K6rm\nG1F5tvCHrSgNUNGEcfBCTeYsxJ8zdd+TjFi86N3HySZjn99IIES3bU/6RCE3\nmF9cePYyYXavhVo1zllOyWk88O52/QjuhIOLg5Zuvv8GTdlhjHC5ExyXMzZb\nKJUfz0V7xfRe9DCs4uHN7WIrcEP7nuqrpaGmdm4CUUec0qkDNjWupDNQ+iIp\ngxH3B/ZcCCe/Y63LU/1hLS86fQ6fbK25Z+YqhjeCOAA3eZKrNkG1pI6JGWgn\njo5U4C/aWENLJpwfMmOQyCK/Qnqof/8jnNxmUTg/QxbMIGMUeBzTuMo8PuaC\nmoSCCyW4PFrC10eo8WQdd7j3IVCZp1Y9a0ZzuNvTean3/RSCwBvRKEFfxitR\nfF49TX70H/FB0LpIkZ1Y/q/9xj6Ol99hOWUSRw1ljjaWT0bnQ5lhNc64fLD2\nFNm4TEzjWXCFaAs3bZ2STOFY+78qFXRU0W1RU3TQUuVGInj0LAlkcyzy3uf6\n5AAvCwucfKVJl7CTuTl0AFmZnR8SiqKcutM8XoULc33cFxMSNYzKkKyBEJOf\nAkvSLz6uW62ZnxUDpMjIzOJEa1hGYIO+1J34/FcCnkWl37f2HExEuByrKshl\n6Di6uE4pLTZ50P8gbB+pVyMxfv2wIZUStxblJPeUNDdZAltghUXXZoxfzWX/\ny2PXnBAhuDFv860lluw6v4imOR6heD7V5RvklAxe6LPatzP5ZdSb1OcxXUfG\ncjfiLyCqAxCXDe9VUN/lnDqhDBhUvjVwu/LDC5/OotFB0OUpxIwj3xD7vvmy\nLyM3esBR9145EEZylESoaeocXNOJpI7WKbqFox9rxebUSQiXnOmNK8CuBCee\n9HKtGpCl8LMKFbR9KNH041n2U9NqQpGy8DZVDaDIVpGVsOEwkXhut01yz5oK\nbk+2/6YdIyjUDckffHHNKRZRIUQLNYzTM6YAp2SPpK8Z5LoDwbN9xgnmMjE7\n1s3uZ4jO2fYX7sXKdbLZt1B9A2HRHcP36y6vI2oUuzyWhgjwAo9bINaBGnHL\no0J6swld2XOEsr1ZBCOlsVxoBkELwHqGMnu0fslM5qilFHfwP5Uj+WkSiCCQ\nVLyOnHOw8aV4XmuniDHsOTzEUeDyAqqe63vedjS6Bf1KzYpUqrNT1nwCs86n\nnKkBkvHamtNaGGAvDhzwxyvIJiguibFlVYWg8WSODrTUbebCqC3Awx2VwH2x\nFEKvDIpnT903cfbOocrB5/5uYwJDQk7HkFP20JzYsKorIpfz5sTMr/TU6vMD\nqXGh\n",
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:24:36.220+00:00\",\"changed\":[\"cloned from \\\"CSA U7L5-L5d_2023\\\"\"],\"cloned_from\":\"CSA U7L5-L5d_2023\"}]"
}]]></config>
</Javalab>
