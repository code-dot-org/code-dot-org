<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T21:40:58.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A video game wants to implement a system that recommends character classes based on the user's play style.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filterByPlayStyle()</code> in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">CharacterClass</code> class with two <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> parameters for play styles.\r\n\r\n‚úÖ **TO DO #2:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">public</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getRecommendedCharacters()</code> in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">CharacterClass</code> class to call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filterByPlayStyle()</code> method to get a list of recommended characters and draw the image and character class of each character. Add a pause and clear the scene after drawing each character.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getRecommendedCharacters()</code> method.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "video_key": "csa_private_methods",
    "reference_links": [
      "/courses/csa-2023/guides/private-methods"
    ],
    "display_name": "Game Characters",
    "bubble_choice_description": "A video game wants to implement a system that recommends character classes based on the user's play style.",
    "starter_assets": {
      "zelda.png": "40586f33-7420-4336-b6c3-de8c72bee196.png",
      "zelda.jpg": "70165add-4612-4a0f-b17e-edf6d073b4d3.jpg",
      "kratos.png": "9c085932-a7af-4c13-9cc0-d7077e69ba4e.png",
      "masterchief.jpg": "7232bfe7-9bb3-4ab3-8c85-1314a5b816de.jpg",
      "princesspeach.jpg": "03d12574-131d-46a2-9bb4-f6b401543bc2.jpg",
      "aloy.png": "0f2c2a6f-722a-4aa5-914e-383e80a84e2a.png",
      "ellie.jpg": "623809d6-be93-4096-9bd8-6f452d8f03f8.jpg"
    },
    "encrypted_validation": "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\n0vLGldJSBq93GQ==\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\nimport java.util.ArrayList;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates an ArrayList of characters\n    ArrayList<Character> characters = new ArrayList<Character>();\n    characters.add(new Character(\"Adventurer\", \"zelda.jpg\"));\n    characters.add(new Character(\"Warrior\", \"kratos.png\"));\n    characters.add(new Character(\"Soldier\", \"masterchief.jpg\"));\n    characters.add(new Character(\"Princess\", \"princesspeach.jpg\"));\n    characters.add(new Character(\"Hunter\", \"aloy.png\"));\n    characters.add(new Character(\"Survivor\", \"ellie.jpg\"));\n\n    // Creates a CharacterScene object\n    CharacterScene scene = new CharacterScene(characters);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getRecommendedCharacters() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n\n    \n    \n    // Plays the scene\n    Theater.playScenes(scene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "CharacterScene.java": {
        "text": "import org.code.theater.*;\nimport java.util.ArrayList;\n\n/*\n * Creates a scene to display characters that match a player's style\n */\npublic class CharacterScene extends Scene {\n  \n  private ArrayList<Character> characters;    // The list of available characters\n\n  /*\n   * Initializes characters to the specified list of available characters\n   */\n  public CharacterScene(ArrayList<Character> characters) {\n    this.characters = characters;\n  }\n\n  /*\n   * Returns the list of available characters\n   */\n  public ArrayList<Character> getCharacters() {\n    return characters;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the private method filterByPlayStyle() to return a list of characters\n   * whose character class matches the first play style or the second play style.\n   * -----------------------------------------------------------------------------\n   */\n  \n\n\n\n\n  \n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the public method getRecommendedCharacters() to call the\n   * filterByPlayStyle() method and draw each character's image and character class\n   * in the scene.\n   * -----------------------------------------------------------------------------\n   */\n  \n\n\n\n\n  \n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Character.java": {
        "text": "/*\n * Represents a character\n */\npublic class Character {\n\n  private String characterClass;    // The class of a character\n  private String image;             // The image file for a character\n\n  /*\n   * Sets characterClass and image to the specified values\n   */\n  public Character(String characterClass, String image) {\n    this.characterClass = characterClass;\n    this.image = image;\n  }\n\n  /*\n   * Returns the class of the character\n   */\n  public String getCharacterClass() {\n    return characterClass;\n  }\n\n  /*\n   * Returns the image file for the character\n   */\n  public String getImage() {\n    return image;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "thumbnail_url": "https://images.code.org/90e69ea4440517b1540e8c0944d8803c-console.png",
    "encrypted_exemplar_sources": "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\nnGvRGB02N3568t2RBrXo699oL0zCip8l\n",
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T21:40:58.874+00:00\",\"changed\":[\"cloned from \\\"CSA U7L4-L6d_2025\\\"\"],\"cloned_from\":\"CSA U7L4-L6d_2025\"}]"
}]]></config>
</Javalab>
