<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:16:00.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A medical clinic keeps track of patient appointments in a list, and they need to get a list of appointments by doctor.\r\n\r\n✅ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Clinic</code> class, write the method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getAppointmentsByDoctor()</code> to return an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> containing the appointments with that doctor.\r\n\r\n✅ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ClinicRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getAppointmentsByDoctor()</code> method and print the results using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">apptsToString()</code> method.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Patient Appointments",
    "bubble_choice_description": "A medical clinic keeps track of patient appointments in a list, and they need to get a list of appointments by doctor.",
    "thumbnail_url": "https://images.code.org/5ab631c010528d4d7af74191094e81e4-patient.png",
    "encrypted_validation": "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\nWLm3sd6Xp+q2XMom4Rnm2SYdA67zelV7tQ==\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "ClinicRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class ClinicRunner {\n  public static void main(String[] args) {\n\n    // Creates an ArrayList of Appointment objects\n    ArrayList<Appointment> appts = new ArrayList<Appointment>();\n    appts.add(new Appointment(\"Ahmed\", \"Patel\", \"Dr. Green\", \"2022-05-10 10:30\"));\n    appts.add(new Appointment(\"Aaliyah\", \"Johnson\", \"Dr. Wright\", \"2022-05-10 11:00\"));\n    appts.add(new Appointment(\"Maria\", \"Hernandez\", \"Dr. Green\", \"2022-05-10 11:30\"));\n    appts.add(new Appointment(\"Maya\", \"Thompson\", \"Dr. Green\", \"2022-05-10 12:00\"));\n    appts.add(new Appointment(\"Amari\", \"Wilson\", \"Dr. Davis\", \"2022-05-10 12:30\"));\n\n    // Creates a Clinic object\n    Clinic clinic = new Clinic(appts);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Call the getAppointmentsByDoctor() method and use apptsToString() to\n     * to print the results that are returned.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    \n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Clinic.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a medical clinic\n */\npublic class Clinic {\n  \n  private ArrayList<Appointment> appointments;     // The list of appointments\n\n  /*\n   * Initializes appointments to the specified list of appointments\n   */\n  public Clinic(ArrayList<Appointment> appointments) {\n    this.appointments = appointments;\n  }\n\n  /*\n   * Returns the list of appointments\n   */\n  public ArrayList<Appointment> getAppointments() {\n    return appointments;\n  }\n  \n  /*\n   * Returns an ArrayList containing the appointments with the specified doctor\n   */\n  public ArrayList<Appointment> getAppointmentsByDoctor(String docToFind) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Create a new ArrayList of Appointment objects. Add each Appointment\n     * that matches the docToFind and return the resulting list.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n    return null;\n  }\n\n  /*\n   * Returns a String containing each appointment in the list on a new line\n   */\n  public String apptsToString(ArrayList<Appointment> appts) {\n    String result = \"\";\n\n    for (int index = 0; index < appts.size(); index++) {\n      result += appts.get(index) + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Appointment.java": {
        "text": "/*\n * Represents an appointment\n */\npublic class Appointment {\n\n  private String firstName;   // A patient's first name\n  private String lastName;    // A patient's last name\n  private String doctor;      // The name of the doctor\n  private String dateTime;    // The date and time of the appointment\n\n  /*\n   * Sets firstName, lastName, doctor, and dateTime to the specified values\n   */\n  public Appointment(String firstName, String lastName, String doctor, String dateTime) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.doctor = doctor;\n    this.dateTime = dateTime;\n  }\n\n  /*\n   * Returns the patient's first name\n   */\n  public String getFirstName() {\n    return firstName;\n  }\n\n  /*\n   * Returns the patient's last name\n   */\n  public String getLastName() {\n    return lastName;\n  }\n\n  /*\n   * Returns the doctor's name\n   */\n  public String getDoctor() {\n    return doctor;\n  }\n\n  /*\n   * Returns the date and time of the appointment\n   */\n  public String getDateTime() {\n    return dateTime;\n  }\n\n  /*\n   * Returns a String representation of the appointment\n   */\n  public String toString() {\n    return lastName + \", \" + firstName + \" - \" + doctor + \" - \" + dateTime;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:16:00.087+00:00\",\"changed\":[\"cloned from \\\"CSA U6L7-L7b_2023\\\"\"],\"cloned_from\":\"CSA U6L7-L7b_2023\"}]"
}]]></config>
</Javalab>
