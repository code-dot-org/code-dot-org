<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:52:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Park</code> class declares an instance variable for a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> values to store the names of parks in San Francisco and an instance variable for a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values to store the <a href=\"https://www.kaggle.com/datasets/danofer/sf-parks\" target=\"_blank\">**condition score**</a> of each park.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Park.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getParksInfo()</code> method to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing each park's name and its condition score. Each park's information should be on separate lines.\r\n\r\nFor example:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nCarl Larsen Park: 0.795\r\nJunipero Serra Playground: 0.957\r\n</pre>\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ParkRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getParksInfo()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array with a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">while</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nint index = 0\r\nwhile index < parkNames.length\r\n  result += parkNames[index] + \": \" + conditions[index] + \"\\n\"\r\n  index += 1\r\nreturn result\r\n\t  </pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/while-loops"
    ],
    "display_name": "City Parks",
    "bubble_choice_description": "Write the `getParksInfo()` method to return a `String` containing the names of each park and their condition scores.",
    "thumbnail_url": "https://images.code.org/d695bf6065673539d494295958f80044-park.png",
    "encrypted_exemplar_sources": "MYWz+3P96vVSyznRFcGJ9tNKI/YiNKD9Gr+Ef5+mS8e8/OgdqfmTzg85J5K3\nF8KkF1NDu6ps2O1jWvmepFuRgrIwHw7WsbbZEapT/MO6fUvLtx49O+dsnNm2\n8KtuM9C5DCAALunJMl8o4Oo1vZAv3X1TuDL5TdXakg4ARFanF+i60M0NqXsJ\ngqdA4ZyJVW7Ws/dfA+xJjQezAYFUYh3FiSos7jNqKUHRgwvdJhTJJA091ljP\n4dY0H7Sr5jZMxlSx6L0PK9aVYCO632sMD0UspQ6mG5fUip1pa7YwZAXb+6NQ\nVGdTdEPb1mVZhzbdZuV/jpVJYORVybJtonZ8KkTK8Jis9dbip7Numm7qQt67\n9tVAsc1JBr9MN8FCxhvEpP6fd0NrF9wcJ0YEUlaJNRZiP6F4/4YZtiKOf4ei\ny8VB7wLDSxQTGTqY0dz1ievEw1Ny/tt/kcd8qCc0dpixQ/KUZTqemBZ81kNm\nmPXMn7A0nPFfID+nm2ZcnaOroHdTRRcJkVaIRp7Zi1cX04apM0s4HJQEbsDE\n5j8k/HTTv7bmJSKFQpYCYJ+iyuocUM42MUnXu009qUmCNRmLPN8mwXjP/f84\nFj0gIi6dGsib5lpb75RBGq8sdlPsXqpxjE6OLvzSNgZsRKTrancr0Nd3Rhxf\nzmWnPdooRt9ZQGkqnqUwXgKtoP7By+81iQylOQVVw+sKkTmtgGULW/Ye86Vf\nSbQvQTFp4hfhpQETLAM/TGFR6nHnTX/wiMUvMUSqKqeJ50ghQXoXC82H8VQc\nN0FUPhn93K/DMT8s3nQ+ll799TxBo1zLN8wfeccIkx7BuxF4U0EWeC0Qf0lW\nCMta4fL03xLoTCosSiJ8k22Kpi+ZdEo5nVrRad/HRAjHIlyNM+VCjoP1tGyM\nsrsz5H/VZd+zFuexh+NnQ6dkLs9zquidvvhLm7VZ+0eRPFbjx3KEiJ752Y0F\nYKGj7CNkweEj+MFwJEvXJQQauVTXHHpKPTPt2FJjD4Qm9pVuZ+XRtL/lo+Ws\nyr3CJ6bP2Dd32evY2JnTMY3Gj21AcLsuJ0Q3SvnBe2x6lhel4nNzuq6r2b6H\nFN88gW0eUjw6svKH4EfolLwyWoarTIFCOq5lTIX0lQUfBwBtupl5Mtz5IX4V\nQOhNnzu3OUtyq1OTL/0aeX8OnK+ZeRaj2sFweoOj5a1B72C2agiktTTGXIks\nExp9vccmZudi2hTIq8xKQUhXLC39r+TCMDzz1r3h5Vq+NknECq/njcdGpEgN\nvA+bc6xhEhrIK3nJ55Ci0YDwjwjKIaYuMLYSEXb9vyVh435v02jUJkHPuYFv\nL+90aaZs9FgG7aeNV//fLbFbgZ5iOdms99ZhXCsBNnjXRBY2WCimNpPBdnzZ\nibMrUP4xX0rZDCYdfSS9OAaYrhm2hwsblLcqYaOLnkNt+wrjFyKXFmyLfXrY\nuEgMLhtY1xcOp1ZeZcYxv1J6nNCtTE8TkOcObthqhCDoxsi/812WU4pTZV0V\nUHKr0FaPPmBphor9kMVJ41DgX5E3rQ+I9m+y7SP2XCXLvYTK/sGa0Ug6h2c6\nawIV7UsCB7kyNn1qJebjdMVgOzkTHOVMLYt4a8OMkjFqlFVmg3pq7vn+NUeb\ntLdxESFJeIizXvcSpvmzbMHGnvZB9+5qbGiakGAns2rqT3eBf4lQOgi1qoFl\nenAZen6KzveUNIY4eIK8AWXJvLM8z82itiVlPEQNYDjnwOEODAy9Ru4wli3u\nI6TMM5JIocPEjEE1S7BfSnI+2xNZxYCLGgiTJnXIbF+ZBrQprIlhx3cUy41N\nxe5KsEGOqsk7rQBFYleMx02RSCCUw4d0fjkOAruLjTwoOt6bw/Hf5RONr+ja\nt2xAucO+uEKrVtth5/ak6M+RQ/ZL53DH/1sVn7PBtFwAgGrvBy3xmP4tYIAa\nQvKBm4hCvOY+59NqjSLyjWJNXz333LI1qFD0F5SS4rvm3v3vz8PkkR3RzBQ+\ncAmgOp+OMBLuNnig5fUWMfRL190Q9wuNNiwvTwqbOG4e3QE3Yp17puDqcMTa\nSRzo3kaNrohil/Rnx2zRVnEOOvVf/QN5OCqt1dx/26Mmhp/eD147tqu/pFR4\ndFMIEYxC9N8T9LRd0mmF6024qsGru1zv3cFkJBJEV+IZObPGP8utmKPlqrMv\njJ4ymzSe2jbErOLpVvFEIvumrSbpWloaEJ7/CaWnxMBUd1iS65l2fOhsuvmx\np+k9dJywOo14tkfgwXefHttQI2Mp1Rd0YVopGiZleib1bO0Cx3PgjMXjAMPU\nYWGyAc16oD0pdw/ooWgaI7+k3eX6XfYxKwEsFK2KqwhJg0RW0Q9jtBI6fiOI\n+nJ6bfSQkFcH7Tref0cq1Fg6i80nh9kgjUpjCW7w1dUTwY2/hzHtPieB5Gai\nQ9VtpsflYEQ2dTT7TeNV/mEnOxgSNXMGgif7ki7mdP4yLnbAjNpKQgLI9r4O\npkA4xPk0Xzk8ehmdLbn7fnnwJrhvhQqOi5P5lTsgpO2aeY/6tnvYdZ0T5H+a\nQuDWXMAu5MH7gHzGs2l7b8aS9ml6KjRjkLKtr4T8mOQeFRcKj/1uotV+jU0u\nZh2Uw/ffw7eS2/aTc8S0hNo83/UxxkmdBDx5c0CBMsl16immu7W5lcOpykrt\ndQfSTyYGJb86/xnCPwqwDRZWxjHTDe8IA4qGSjnnLCwkaRNn96Br3k1TbHM8\nMz6Hw7YbuA==\n",
    "encrypted_validation": "WbMonKgUmhJs3h3HGO4yGEPnBWQGtzb4bLysZ9gFPuU+abpwvIUbOBBl3Dn1\nTXXEpa2GXpq29YL29xM9dpY1mGf4GoM7GUG2n6ev5vmij7ewR0GI1gHPl+xF\nUuI74ei58K2/yeigOC1nTxK5gr+J10dLbn0UFg1e/FQtcb066NmK0XBDs6Qk\nzr3xh9WAUKMUuu7Q3Du+dLrbAsHAScjf6iIkTderCxRQhUXp4QNM0tvDs51B\nu48aCbs2RXjetHsKMFod7619eBB9OUVh6xyT+eUccLNPMwOD/ZamVb+jq5lX\nqbbJ/7sBgf0glltubm2aAjZEDjTG8O5T5lTywQ8QzAkoQl93iqPdFn+NfVn7\ncUlcuF2RsCQlYUyl94zCTYqhfgZH5Yoe1q0CNhPs2xbUg3YtCPUTBgI7qKkV\n6Y2L2A+l1CpnPLLThNgnsK56Cy8O+4opPM+Mm+2iNwlha/gnbxTMAWYKK+Uo\nf6d3EkErQGrEmDWRbSfbuFkq8ju6a1l0qRrjrWMIm1yQZAJUhAs6CFTcMZdM\nXqTDDXFp3ciJK/sRsLTrXc81gDHN1tnm81cIloUNbRQ9lf5bjnabpnzwpC6v\nr3OKrkon5oFveh3iA2vs/59ZSTugLOi/N/D6XDmpoyO2mks5HucjNKsq+REc\nvKKgMxIvxDFtS7xM2PMQCePn4IWuhucB+n+WLfoP2sWmWuIqOGKaumNGyUwV\nQyAh5N9+lERzP4eXyThHH++lcwkOF4G0k60FFnD4ytSl0LYM/gDdzPtvciDr\n2CxcmxUU8sapNks9MGzKLrev+29ABqSr0KOz40/dMqlDyqHR/POut0p1aZoR\nNP/srkWr2sDd87NXqm03uWi8omjSWX6XSC6zrXWthY9yIu8uLGlupjcBsVrU\nIL0XJxl0nOHcStmvfNrVJ/Txb/tXhK9147HLcmoZ1qdA19+yuQitCMSSVgTs\nAtcVlpw35SpX+X+hljyZm0r4vvoZPWs7vj9tTAZpBJZZZOv6l4LrIAL4uvVz\nHPFCFldZRCQ39BRtUf8dJ8LuwpH5NW9UAM2wvwjsmPf7Aefof4ZHTIEWQaNO\nfG+QoIsxlEQb0DD3xWEY3EyfWWthpfXfwLqkUHTc0QQ0hYkVKnrwOXJJnKfL\n9I5B+itB+FkdeG6y1kghHeBYXHJTPAjNq+Aq1No5vKUBbCmXB1rWUbYBxGu5\nJAm1riRHZT8GYBZFV6u0rz6bxUp/xZM++2HCPDHrPaB7JVLSysqZSNrjze1M\nblIO078OXlESKVNZdre+bVAZx0I+7kbfiXg6JEVx1XFnBpkVU+i42Uh6fEU7\nt4wFX/rQpauFH/mx71VVWqbu1e4b9HChBviFp3xHY90V4F92FfalYelPkz/t\nwHKKno+43LLBRCFPPFg9AXvSn1pHyqPP7TQx8DtK6oIZlNRfg9A1Ti3IhM98\nKbSvKa3yP0XtR/QdYEeUja+5t2o9s3yz5yO8CHCksQ4PSXMlIiwVd/8Psmk9\nOeCa20piIutKSNE6Npf5LJI3f1aCDE+45k+sXJJn0bn2Pbaw12znP+kHSC37\nLfUQ/U9AavuLTu7noValCbprEM0qqFBZqHjgkZACfG9SIzBKrygGlIKeSiKH\n6HyLlxnWTNJGu2TAmQtq+i6IrpoSXT4da4PhwRGpMY/gRy82OEaUN/h2f1P2\nfEyCaF2Eeln8HyV8pIj3m0CpkpMcubEURblAWYPrFyz8EGZvoCxkWSoGMjy+\nHvmtxnrtgNRdZSJS9BE29QKYHCF37OepgvwZhgMDCXDIuMaJMFW1wpRI4nXU\nGX8noP8jKDfBAXprRZBroOe84FCoErAOryA7RMQZxjGVnpOV9E7UKZjCuE6R\nK9sQm8c8Qo7B5HB1iWnnCl7eidKa59atNTd6tyiX9Bg9lysKxw1jHoukP4gt\n5t7nAkdUhCwNH7XzUeemkI3SfXCC2CrfgS0dlEB+/8z/8kuKsHXE8+F8/rHe\nDXl5ELzLSl+XHnJzpTIwxu52up5MUpRCA+YgR4rjN++eo66UYkr8BopVmjDZ\npLmaUphls/Xpw0C4EEMM2yM7JBdW31Osn060KWEtpxOg4q9C+TD/2YXF3jyd\nxtkpiXWQhd7njo12jnI7AelWJmlmCn5fDU6+2J9HfyZ2tMUzhzQSRdpr1Ur0\nLyCnaEx1+p/LC9ib2jiAX09XHxRDC/0ckKkxZlpkrBBlVL4+4xHD5FfAtb5m\nPj35teZNwiv3nPt+fDNLdw7NGXH/HA30bpRUDNPFfKSR4X066W/w7hRisFe4\nUBg+qL2jLsxtL0QKdOqL5nXhezHbJNiBKHhChJelpCi9d7iCTtU7NC217w4d\noVbErFGBmulYPebPdwdzimsjbSDwv7ysEEP8QipCEj50KgbU/IC2f6Nm8lxG\n5IbiFUIPwcnjGx2s8INpLPVasgTrqyrfqaf2Ap/5y1VTdsISG24zxJCiBYQE\nwWin/sZzl9s0rtOV+xl//dWdcej/4pbNtFglPMaUrcMmB28tjMcqRKtX3kE8\nG8o/1TIoXGBw5hHlMjney+qIlf77gs5aryZNBLeJ79SIl4pdvZO9V6lc2fe9\nktZWriWptf09z8U0gAeGtG/yLbK9PTGoALJPU880oDcK\n",
    "start_sources": {
      "ParkRunner.java": {
        "text": "public class ParkRunner {\n  public static void main(String[] args) {\n\n    String[] names = {\"Carl Larsen Park\", \"Junipero Serra Playground\", \"Rolph Nicol Playground\", \"Alamo Square\",\n                      \"Jose Coronado Playground\", \"Little Hollywood Park\", \"Lake Merced Park\", \"Golden Gate Park\"};\n\n    double[] scores = {0.795, 0.957, 0.864, 0.857, 0.859, 0.846, 0.73, 0.588};\n\n    Park sanFrancisco = new Park(names, scores);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getParksInfo() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Park.java": {
        "text": "/*\n * Manages data about parks in a city\n */\npublic class Park {\n\n  private String[] parkNames;      // The 1D array of park names\n  private double[] conditions;     // The 1D array of the condition scores for each park\n\n  /*\n   * Initializes parkNames to the specified 1D array of park names and\n   * conditions to the 1D array of condition scores for each park\n   */\n  public Park(String[] parkNames, double[] conditions) {\n    this.parkNames = parkNames;\n    this.conditions = conditions;\n  }\n\n  /*\n   * Returns a String containing each park's name and its condition score\n   */\n  public String getParksInfo() {\n    String result = \"\";\n\n    /* ----------------------------------------- TO DO -----------------------------------------\n     * ‚úÖ Traverse the 1D arrays parkNames and conditions and concatenate each value to result.\n     * -----------------------------------------------------------------------------------------\n     */\n\n    \n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:52:24.750+00:00\",\"changed\":[\"cloned from \\\"CSA U3L3-L7b_2023\\\"\"],\"cloned_from\":\"CSA U3L3-L7b_2023\"}]"
}]]></config>
</Javalab>
