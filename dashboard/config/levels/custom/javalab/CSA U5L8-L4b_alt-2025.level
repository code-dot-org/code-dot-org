<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T22:55:27.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Embossing an image creates a 3D effect on a 2D image, where the raised or lowered parts of the image are highlighted with a specific color to make them appear as if they are popping out of the image.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">EmbossImage</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">emboss()</code> method to apply an emboss filter to each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">emboss()</code> method should:\r\n\r\n1. Traverse the 2D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> objects starting at row <code style=\"background-color: #ececec; color: black; font-weight: bold;\">1</code> column <code style=\"background-color: #ececec; color: black; font-weight: bold;\">1</code>.\r\n\r\n2. For each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object, get the top-left neighboring <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.\r\n\r\n3. Calculate the differences between the red, green, and blue color values of the current <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object and the top-left <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.\r\n\r\n4. Determine which difference is largest using <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math.abs()</code>.\r\n\r\n5. Add <code style=\"background-color: #ececec; color: black; font-weight: bold;\">128</code> to the absolute value of the largest difference.\r\n\r\n6. Set the red, green, and blue color values of the current <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object to the result.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class,\r\n\r\n1. Instantiate an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">EmbossImage</code> object with an image in the Asset Manager, then draw the image in the scene without any filters. You can also upload and use your own image.\r\n\r\n2. Add a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">pause()</code> after drawing the image.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">emboss()</code> method on your image, then draw the image with the filter in the scene.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with getting and setting color values for a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.\r\n</div>\r\n\r\n## üéØ Goal\r\n\r\n![](https://images.code.org/6cd2926f8003ce3b6cdfdd703746b79e-image-1682903332654.gif)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Emboss Filter",
    "bubble_choice_description": "Embossing an image creates a 3D effect on a 2D image, where the raised or lowered parts of the image are highlighted with a specific color to make them appear as if they are popping out of the image.",
    "starter_assets": {
      "track.jpg": "6588e0e3-d300-4238-b227-dafe9b33fed9.jpg",
      "starwars.jpg": "fb1ce675-03b9-4cd7-bcbe-a37cdf741d5e.jpg",
      "speakers.jpg": "ed76120b-6121-4f47-a2ed-6eff3cc7b152.jpg",
      "soccer.jpg": "287e2910-d379-4903-a572-8142718d112c.jpg",
      "paintbrushes.jpg": "27b78b3c-c34d-479d-b2b9-0950d6572543.jpg",
      "nature.jpg": "9d522e2b-13b8-4357-aeba-f6d535223a21.jpg",
      "motivation.jpg": "6d93b759-f854-4437-a0e8-214cd478072b.jpg",
      "laptop.jpg": "1031e2f4-83db-45f2-90a3-98bba933749b.jpg",
      "guitar.jpg": "62044565-74cf-4c78-bd7e-700a6a9692b9.jpg",
      "games.jpg": "6333c700-f618-44fa-832e-8177ae4176ff.jpg",
      "football.jpg": "9d216903-481a-4601-893f-b2b88f7fd5d3.jpg",
      "fashion.jpg": "4e810abf-2e89-4569-9615-871540e74519.jpg",
      "electricguitars.jpg": "199e09aa-18c6-4528-8237-e7fbc8a12222.jpg",
      "donut.jpg": "a7219fe7-c4a5-4b2f-b086-bd5cca35abef.jpg",
      "dog.jpg": "104cd7cb-7905-4693-8798-8c3e30728070.jpg",
      "cellphone.jpg": "d0a57909-21ab-48f0-9b72-85f6eb8d7d84.jpg",
      "basketball.jpg": "ca62a565-dcac-4e3f-836b-2cac505373c9.jpg",
      "baseball.jpg": "eb7f1272-cc7c-4fef-86ce-dd3a1c5af9e2.jpg",
      "astronaut.jpg": "c623fdcf-4072-411a-8481-b4b798cd88e0.jpg"
    },
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\n+TAbh3hzaFoU\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a Scene object\n    Scene images = new Scene();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate an EmbossImage object, and draw the image in the scene with\n     * no filter. Then call the emboss() method and draw the image in the scene\n     * again with the filter.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    // Plays the scene\n    Theater.playScenes(images);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ImagePlus.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image that can be modified with filters and effects\n */\npublic class ImagePlus extends Image {\n\n  private Pixel[][] pixels;    // The 2D array of pixels\n\n  /*\n   * Sets the superclass filename to the specified filename\n   * and calls the getPixelsFromImage() method to initialize\n   * the 2D array of Pixel objects that make up the image\n   */\n  public ImagePlus(String filename) {\n    super(filename);   // Calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixelsFromImage();\n  }\n\n  /*\n   * Returns the 2D array of pixels\n   */\n  public Pixel[][] getImagePixels() {\n    return pixels;\n  }\n\n  /*\n   * Returns the pixels in the image as a 2D array of Pixel objects\n   */\n  public Pixel[][] getPixelsFromImage() {\n    Pixel[][] tempPixels = new Pixel[getHeight()][getWidth()];\n    \n    for (int row = 0; row < tempPixels.length; row++) {\n      for (int col = 0; col < tempPixels[0].length; col++) {\n        tempPixels[row][col] = getPixel(col, row);\n      }\n    }\n\n    return tempPixels;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "EmbossImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an embossed image\n */\npublic class EmbossImage extends ImagePlus {\n\n  /*\n   * Calls the superclass constructor to initialize pixels\n   */\n  public EmbossImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Applies an emboss filter by calculating the difference between\n   * the red, green, and blue color values of the current and neighboring\n   * Pixel objects and setting the current Pixel object to the result\n   */\n  public void emboss() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Get the pixels from the image, and traverse the 2D array of Pixel objects.\n     * For each Pixel object, get the neighboring top left Pixel object and find the\n     * difference between the current color values and the top left color values.\n     * Set the color values to the result of 128 plus the absolute value of the\n     * largest color difference.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "thumbnail_url": "https://images.code.org/47f97d8e178fb491665480056919a8a3-optionB.gif",
    "name_suffix": "_alt-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T22:55:27.898+00:00\",\"changed\":[\"cloned from \\\"CSA U5L8-L4b_pilot-2025\\\"\"],\"cloned_from\":\"CSA U5L8-L4b_pilot-2025\"}]"
}]]></config>
</Javalab>
