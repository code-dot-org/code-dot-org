<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-03-27T23:49:14.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A city planner has collected data on the number of vehicles passing through various intersections in a 2D array, where each row represents an intersection and each column represents a day of the week.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Traffic</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalVehicles()</code> method to calculate and return the total number of vehicles that passed through all intersections.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TrafficRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalVehicles()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array in row-major order.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_row_major_traversal",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Traffic Analysis",
    "bubble_choice_description": "Calculate the total number of vehicles that passed through all intersections during the month.",
    "thumbnail_url": "https://images.code.org/b749cf20413b53bd9e4ea0317e83af6a-traffic-jam.png",
    "encrypted_validation": "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\nb1rLXYOP1p62MwRM\n",
    "encrypted_exemplar_sources": "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\nf5Y7WTFsW1sgkm4P3ZG/JA==\n",
    "start_sources": {
      "TrafficRunner.java": {
        "text": "public class TrafficRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array containing the number of vehicles\n    int[][] trafficData = { {500, 700, 650, 750, 800, 850, 900},\n                            {350, 450, 550, 650, 750, 850, 950},\n                            {800, 750, 700, 650, 600, 550, 500},\n                            {600, 550, 700, 750, 800, 650, 600},\n                            {900, 850, 800, 750, 700, 650, 600},\n                            {450, 550, 650, 750, 850, 950, 1050} };\n\n    // Creates a Traffic object\n    Traffic city = new Traffic(trafficData);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcTotalVehicles() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Traffic.java": {
        "text": "/*\n * Analyzes traffic data\n */\npublic class Traffic {\n\n  private int[][] vehicles;    // The 2D array containing the number of vehicles\n\n  /*\n   * Initializes vehicles to the specified 2D array of vehicles\n   */\n  public Traffic(int[][] vehicles) {\n    this.vehicles = vehicles;\n  }\n\n  /*\n   * Returns the 2D array vehicles\n   */\n  public int[][] getVehicles() {\n    return vehicles;\n  }\n\n  /*\n   * Returns the total number of vehicles that passed\n   * through all intersections\n   */\n  public int calcTotalVehicles() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array vehicles in row-major order. Calculate and return\n     * the sum of all the values in vehicles.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-03-27T23:49:14.404+00:00\",\"changed\":[\"cloned from \\\"CSA U5L3-L3c_2023\\\"\"],\"cloned_from\":\"CSA U5L3-L3c_2023\"},{\"changed_at\":\"2023-03-27 23:49:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 14:43:14 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 22:08:42 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 22:52:42 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 22:52:43 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 22:52:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 22:52:53 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 23:25:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 23:27:07 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 23:27:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 23:27:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 23:27:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-25 23:27:30 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
