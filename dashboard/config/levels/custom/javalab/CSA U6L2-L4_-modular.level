<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-02-16T05:19:22.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… TO DO: How can we make this into method? What would an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">isPalindrome(String word)</code> method return? \r\n\r\n\r\nIn <code style=\"background-color: #ececec; color: black; font-weight: bold;\">StringAnalyzer.java</code>, Replace the loop with this version:\r\n<pre style=\"background-color: #333333; color: white;\">\r\nfor (int i = 0; i < word.length(); i++){\r\n          front = word.substring(i,i+1);\r\n          back = word.substring(word.length() - i - 1, word.length() - i);\r\n          if (!front.equals(back)){\r\n              return false;\r\n          }\r\n      }\r\nreturn true;\r\n</pre>\r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "StringRunner.java": {
        "text": "public class StringRunner {\n  public static void main(String[] args) {\n\n      String palindromeDefinition = \"a word that is spelled the same forwards and backwards\";\n      \n      String shortExample = \"level\";\n      String mediumExample = \"racecar\";\n      String longExample = \"was it a cat i saw\";\n\n      \n      System.out.println(StringAnalyzer.isPalindrome(shortExample));\n    \n    }\n}\n",
        "isVisible": true,
        "tabOrder": 0
      },
      "StringAnalyzer.java": {
        "text": "public class StringAnalyzer {\n\n            \n  public static boolean isPalindrome(String word){\n        String front;\n        String back;\n      \n        for (int i = 0; i < word.length(); i++){\n            front = word.substring(i,i+1);\n            System.out.println(front + \" ---- \");\n        }\n        System.out.println();\n    \n    return true;\n    }\n}\n",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "teacher_markdown": "In this instance, a single character `\"u\"` is returned. This is because the `substring()` method is returning a `String` composed of the single character at index `5` (inclusive) to index `6` (exclusive).",
    "name_suffix": "_-modular",
    "ai_tutor_available": "true"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-02-16T05:19:22.070+00:00\",\"changed\":[\"cloned from \\\"CSA U6L2-L4_2025\\\"\"],\"cloned_from\":\"CSA U6L2-L4_2025\"},{\"changed_at\":\"2024-02-23 04:30:12 +0000\",\"changed\":[],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-02-23 04:46:51 +0000\",\"changed\":[\"project_template_level_name\",\"encrypted_examples\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-02-23 04:57:01 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-02-24 05:11:51 +0000\",\"changed\":[\"long_instructions\",\"ai_tutor_available\",\"contained_level_names\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-02-24 05:27:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-02-24 05:29:53 +0000\",\"changed\":[],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"}]"
}]]></config>
</Javalab>
