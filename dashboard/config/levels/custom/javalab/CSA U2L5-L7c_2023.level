<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2022-12-14T20:35:45.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Now that Joyful Pastries food truck owner can create <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dessert</code> objects with specific flavors and prices, they would like to create <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Donut</code> objects with specific values as well.\r\n\r\nüéí **IMPORT:** Import your <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dessert</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Donut</code> classes from your **Backpack**.\r\n\r\n*Don't have it, or it doesn't work? That's ok! Copy the code from* <a href=\"https://studio.code.org/projects/javalab/TTB1mj-3ttbJMHuVg3FFROGMo8eDlIjuoVteNUkGFPQ\" target=\"_blank\">***here***</a> *and paste it into a new file in your project.*\r\n\r\n‚úÖ **TO DO #1:** Write a no-argument constructor in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Donut</code> class.\r\n\r\n‚úÖ **TO DO #2:** Write a parameterized constructor in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Donut</code> class.\r\n\r\n‚úÖ **TO DO #3:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FoodTruckRunner.java</code>, instantiate <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Donut</code> objects using each constructor.\r\n\r\n‚úÖ **TO DO #4:** Print the constructors for the objects.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing no-argument and parameterized constructors, using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">super</code> keyword, and instantiating objects.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ How do I print the information?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ConstructorsHelper.printConstructors()</code> is a hidden support method that prints the instance variables in a class to the console. For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nDog fido = new Dog();\r\nConstructorsHelper.printConstructors(fido);\r\n</pre>\r\n      <p>This method (along with the tests) will help you check that you wrote your constructors correctly.</p>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate objects using the no-argument and parameterized\n     * constructors. Then use ConstructorsHelper.printConstructors(nameOfObject)\n     * to print the constructors for the objects to the console.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ConstructorsHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ConstructorsHelper {\n  \n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassConstructors;\n  private static ArrayList<String> superClassConstructors;\n\n  public static void printConstructors(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getConstructorsHeading());\n    System.out.println(getCurrentClassConstructors());\n  }\n  \n  public static String getConstructorsHeading() {\n    String result = getCurrentClassName() + \" Class Constructors\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassConstructors = getClassConstructorsList(currentClass, currentClassName);\n    superClassConstructors = getClassConstructorsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getClassConstructors() {\n    return currentClassConstructors;\n  }\n  \n  public static ArrayList<String> getSuperClassConstructors() {\n    return superClassConstructors;\n  }\n  \n  public static ArrayList<String> getClassConstructorsList(Class currentClass, String className) {\n    Constructor[] classConstructors = currentClass.getDeclaredConstructors();\n    ArrayList<String> constructorsList = constructorsToList(Arrays.toString(classConstructors));\n    cleanConstructors(constructorsList);\n    return constructorsList;\n  }\n  \n  private static ArrayList<String> constructorsToList(String constructorsAsText) {\n    constructorsAsText = constructorsAsText.substring(1, constructorsAsText.length() - 1);\n    ArrayList<String> constructorsList = new ArrayList<String>();\n\n    String currentConstructor = \"\";\n    int start = constructorsAsText.indexOf(\"public\");\n    int end = constructorsAsText.indexOf(\")\");\n\n    while (start != -1 && end != -1) {\n      currentConstructor = constructorsAsText.substring(start, end + 1);\n      constructorsList.add(currentConstructor);\n      constructorsAsText = constructorsAsText.substring(end + 1);\n      start = constructorsAsText.indexOf(\"public\");\n      end = constructorsAsText.indexOf(\")\");\n    }\n\n    constructorsList.add(constructorsAsText);\n    return constructorsList;\n  }\n  \n  public static void cleanConstructors(ArrayList<String> classConstructorsList) {\n    for (int index = 0; index < classConstructorsList.size(); index++) {\n      String currentConstructor = classConstructorsList.get(index);\n\n      currentConstructor = removeJavaLang(currentConstructor);\n      currentConstructor.trim();\n\n      classConstructorsList.set(index, currentConstructor);\n    }\n  }\n\n  public static String getCurrentClassConstructors() {\n    ArrayList<String> currentClassConstructors = getClassConstructors();\n    return getListAsText(currentClassConstructors);\n  }\n  \n  public static String removeJavaLang(String currentConstructor) {\n    String textToFind = \"java.lang.\";\n    int location = currentConstructor.indexOf(textToFind);\n\n    while (location != -1) {\n      currentConstructor = currentConstructor.substring(0, location) + currentConstructor.substring(location + textToFind.length());\n      location = currentConstructor.indexOf(textToFind);\n    }\n\n    return currentConstructor;\n  }\n  \n  public static ArrayList<String> getParameters(String currentConstructor) {\n    ArrayList<String> parametersList = new ArrayList<String>();\n    \n    int start = currentConstructor.indexOf(\"(\") + 1;\n    \n    currentConstructor = currentConstructor.substring(start);\n    int comma = currentConstructor.indexOf(\",\");\n    \n    while (comma != -1) {\n      String currentParameter = currentConstructor.substring(0, comma);\n      parametersList.add(currentParameter);\n      currentConstructor = currentConstructor.substring(comma + 1);\n      comma = currentConstructor.indexOf(\",\");\n    }\n    \n    parametersList.add(currentConstructor.substring(0, currentConstructor.length() - 1));\n    \n    return parametersList;\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n   \n}",
        "isVisible": false,
        "tabOrder": 1
      }
    },
    "reference_links": [
      "/courses/csa-2023/guides/no-argument-constructors",
      "/courses/csa-2023/guides/parameterized-constructors",
      "/courses/csa-2023/guides/the-super-keyword",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "encrypted_exemplar_sources": "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\nWErYege1o0cBSB9MZP6uMtQtUlYw7V4=\n",
    "display_name": "The Donut Class",
    "bubble_choice_description": "Import your `Donut` class and write no-argument and parameterized constructors to assign values to its instance variables.",
    "thumbnail_url": "https://images.code.org/eeaa065109eb2e4e4ffe631ba0580822-donut.png",
    "encrypted_validation": "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\n",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2022-12-14T20:35:44.999+00:00\",\"changed\":[\"cloned from \\\"CSA U2L5-L7_2023\\\"\"],\"cloned_from\":\"CSA U2L5-L7_2023\"},{\"changed_at\":\"2022-12-14 20:52:26 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-14 21:55:13 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-14 21:55:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-14 22:01:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-14 16:58:07 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-09-19 19:59:28 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
