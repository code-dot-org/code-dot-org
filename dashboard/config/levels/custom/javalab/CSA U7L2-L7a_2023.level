<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-04-11T13:57:30.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A hotel manager wants to keep track of the guests staying in their hotel.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Guest</code> class constructor to take the name of the guest and a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Reservation</code> object as parameters.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">HotelRunner</code> class\r\n\r\n1. Instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Guest</code> object and print the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Guest</code> object.\r\n\r\n2. Call either the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">changeCheckIn()</code> or <code style=\"background-color: #ececec; color: black; font-weight: bold;\">changeNumNights()</code> methods to modify the guest's reservation, then print the updated <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Guest</code> object.\r\n\r\n3. Print the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Reservation</code> object to confirm it was not modified.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with using object references as parameters.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/object-references-as-parameters"
    ],
    "display_name": "Hotel Guests",
    "bubble_choice_description": "A hotel manager wants to keep track of the guests staying in their hotel.",
    "thumbnail_url": "https://images.code.org/acdd7e4c738fde67808749f1f30459e0-5-stars.png",
    "encrypted_validation": "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\nd3bdexg5qel/Tt5gZtRcsWa+LULX8w==\n",
    "start_sources": {
      "HotelRunner.java": {
        "text": "public class HotelRunner {\n  public static void main(String[] args) {\n\n    // Creates a Reservation object\n    Reservation vacation = new Reservation(\"March 15\", 4);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a Guest object and print the object. Then call either the\n     * changeCheckIn() or changeNumNights() methods and print the updated Guest\n     * object. Print the Reservation object to confirm it was not modified.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Guest.java": {
        "text": "/*\n * Represents a guest at a hotel\n */\npublic class Guest {\n\n  private String name;                // The name of a guest\n  private Reservation reservation;    // The reservation for a guest\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the Guest constructor with a parameter for the name of a guest and a\n   * parameter for a Reservation object. Instantiate the reservation object to a new\n   * Reservation object using the values assigned to the parameter's instance variables.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  \n\n  /*\n   * Returns the name of the guest\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the reservation\n   */\n  public Reservation getReservation() {\n    return reservation;\n  }\n\n  /*\n   * Changes the reservation's check-in date\n   */\n  public void changeCheckIn(String newCheckIn) {\n    reservation.setCheckInDate(newCheckIn);\n  }\n\n  /*\n   * Changes the reservation's number of nights\n   */\n  public void changeNumNights(int newNumNights) {\n    reservation.setNumNights(newNumNights);\n  }\n\n  /*\n   * Returns a String containing the guest's name and reservation information\n   */\n  public String toString() {\n    return name + \"\\n\" + reservation;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Reservation.java": {
        "text": "/*\n * Represents a hotel reservation\n */\npublic class Reservation {\n  \n  private String checkInDate;     // The check-in date for a reservation\n  private int numNights;          // The number of nights for a reservation\n\n  /*\n   * Sets checkInDate and numNights to the specified values\n   */\n  public Reservation(String checkInDate, int numNights) {\n    this.checkInDate = checkInDate;\n    this.numNights = numNights;\n  }\n\n  /*\n   * Returns the checkInDate for the reservation\n   */\n  public String getCheckInDate() {\n    return checkInDate;\n  }\n\n  /*\n   * Returns the number of nights for the reservation\n   */\n  public int getNumNights() {\n    return numNights;\n  }\n\n  /*\n   * Changes the check-in date for the reservation to newDate\n   */\n  public void setCheckInDate(String newDate) {\n    checkInDate = newDate;\n  }\n\n  /*\n   * Sets the number of nights for the reservation to newNumNights\n   */\n  public void setNumNights(int newNumNights) {\n    numNights = newNumNights;\n  }\n\n  /*\n   * Returns a String containing the reservation information\n   */\n  public String toString() {\n    return \"Check in: \" + checkInDate + \"\\nNumber of Nights: \" + numNights;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "ConstructorsHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ConstructorsHelper {\n  \n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassConstructors;\n  private static ArrayList<String> superClassConstructors;\n\n  public static void printConstructors(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getConstructorsHeading());\n    System.out.println(getCurrentClassConstructors());\n  }\n  \n  public static String getConstructorsHeading() {\n    String result = getCurrentClassName() + \" Class Constructors\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassConstructors = getClassConstructorsList(currentClass, currentClassName);\n    superClassConstructors = getClassConstructorsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getClassConstructors() {\n    return currentClassConstructors;\n  }\n  \n  public static ArrayList<String> getSuperClassConstructors() {\n    return superClassConstructors;\n  }\n  \n  public static ArrayList<String> getClassConstructorsList(Class currentClass, String className) {\n    Constructor[] classConstructors = currentClass.getDeclaredConstructors();\n    ArrayList<String> constructorsList = constructorsToList(Arrays.toString(classConstructors));\n    cleanConstructors(constructorsList);\n    return constructorsList;\n  }\n  \n  private static ArrayList<String> constructorsToList(String constructorsAsText) {\n    constructorsAsText = constructorsAsText.substring(1, constructorsAsText.length() - 1);\n    ArrayList<String> constructorsList = new ArrayList<String>();\n\n    String currentConstructor = \"\";\n    int start = constructorsAsText.indexOf(\"public\");\n    int end = constructorsAsText.indexOf(\")\");\n\n    while (start != -1 && end != -1) {\n      currentConstructor = constructorsAsText.substring(start, end + 1);\n      constructorsList.add(currentConstructor);\n      constructorsAsText = constructorsAsText.substring(end + 1);\n      start = constructorsAsText.indexOf(\"public\");\n      end = constructorsAsText.indexOf(\")\");\n    }\n\n    constructorsList.add(constructorsAsText);\n    return constructorsList;\n  }\n  \n  public static void cleanConstructors(ArrayList<String> classConstructorsList) {\n    for (int index = 0; index < classConstructorsList.size(); index++) {\n      String currentConstructor = classConstructorsList.get(index);\n\n      currentConstructor = removeJavaLang(currentConstructor);\n      currentConstructor.trim();\n\n      classConstructorsList.set(index, currentConstructor);\n    }\n  }\n\n  public static String getCurrentClassConstructors() {\n    ArrayList<String> currentClassConstructors = getClassConstructors();\n    return getListAsText(currentClassConstructors);\n  }\n  \n  public static String removeJavaLang(String currentConstructor) {\n    String textToFind = \"java.lang.\";\n    int location = currentConstructor.indexOf(textToFind);\n\n    while (location != -1) {\n      currentConstructor = currentConstructor.substring(0, location) + currentConstructor.substring(location + textToFind.length());\n      location = currentConstructor.indexOf(textToFind);\n    }\n\n    return currentConstructor;\n  }\n  \n  public static ArrayList<String> getParameters(String currentConstructor) {\n    ArrayList<String> parametersList = new ArrayList<String>();\n    \n    int start = currentConstructor.indexOf(\"(\") + 1;\n    \n    currentConstructor = currentConstructor.substring(start);\n    int comma = currentConstructor.indexOf(\",\");\n    \n    while (comma != -1) {\n      String currentParameter = currentConstructor.substring(0, comma);\n      parametersList.add(currentParameter);\n      currentConstructor = currentConstructor.substring(comma + 1);\n      comma = currentConstructor.indexOf(\",\");\n    }\n    \n    parametersList.add(currentConstructor.substring(0, currentConstructor.length() - 1));\n    \n    return parametersList;\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n   \n}",
        "isVisible": false,
        "tabOrder": 4
      }
    },
    "encrypted_exemplar_sources": "3+STdTnDhO2qNMDx2PPuyParm39Y97LGe9K6byJM5s2pW5Sa6TXZzjYUJUO1\nqTCprknDK0cQewt3V3DU63rbE4uDOudtDJlLGPnLcHMkr+8eVAiAPeuv2s1k\nHX5PWfKOCTMdf2YR6iVV32LYHf/IC5sNkSuUEOxPJbN0SFRUWbogXHJ7YWOo\nwwlyImR4qgzTbWgJeOjluMVvzoKVIlRRL4o2hsKYbNEy8eqL9E6GMw0ZL3ac\niQ5XajdwZieNeDSsIcP3aCMJG/8OHkrg9sG4iveAhY4qj0T1V5UU162WiB6V\n//8yo0j/ln6+yEyETuYeQsnq73ueZmg0unRxDCjwex3MCqxjnMiSIiQ/097Q\n46YsaOhsBNo+4+zKNi0gz/dcu9eGiUEOfA2i51QhUT+OeMAZtNT3qnw+jket\n/RxDth+BZEHvXrUxZiE9h/bXt0Hz7LKjwM8DFoRDCzFnk+gQGQL+qMhdDjtM\nPfCQW66sa+xFKgi8WjRRB4Ajwb0s8ME1El3dJlzfc6DSOIsQg2WflyMcDSMc\nlIYF25heuQ9moxf7SFbaO5iizz0ilkXpNR6nFdRBtrvkz5tMZ1zpIUjC5zwo\nyXP6EnscnZ4oHm4rlp3dfShRrKqzl289VaLGMeLgvO24i04LpDM8mpHuyh09\nH+rgmlQgOMw9aaACzaSIeyU2756iHeGwvyn74lUv/0QFPdgwr7MGivrfFs+c\n58+rHUnCYfwys9xixpN8/a5PHlVCx73p3T4XrHIG+D6J7ALPAhwjakAg3MZ0\nIReCzw2xxN4bkRoQhHnDKXSrKRqtO57EBHXYY6avAEwddQiWH+s+XBDjiPUd\nZj3l7Mx88C7ztPyqtmI4OpCOvMuVQmunpNGor8/gBwx3vNsYugz2CBsO7uW+\nTZUzxBbaE8cXKrp6ZJxCVvx9rqbX2We1WaSUf1F7gNla1jfqFpLRfcCsndnH\nP2GPewGfKX57XCrievaEykxN6WDWqwvnLf5FyFr3P2ugSxNvzotkZBhg0X7t\nux7wChP1gixp2Upw5tEOi2izY7gWvPjklCEPMHxjKkhhevChmSOJvovZhUVN\nrflNGT8nsf8NxDdcDJynXhL0I7JayRBob+YgM1GPTeeh568w27a0cd7gDTn2\nUi3tM365kiuorxyXSG2EB/9bDfzo97vFPNqXimkcBnv1WHO5c5v9GC2+PZU5\n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\n0HJATLYb9bRFaA==\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-11T13:57:30.266+00:00\",\"changed\":[\"cloned from \\\"CSA U7L2-L6d_2023\\\"\"],\"cloned_from\":\"CSA U7L2-L6d_2023\"},{\"changed_at\":\"2023-04-11 13:57:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 14:41:52 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 17:51:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 17:51:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 17:51:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 20:52:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 20:52:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 20:53:07 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 20:54:22 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 20:58:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 20:58:58 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:12:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:13:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:16:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:17:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:19:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:21:51 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:21:54 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:21:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:22:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:27:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:27:49 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-08 21:54:25 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
