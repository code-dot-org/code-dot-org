<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:50:23.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A DJ stores the playlists they use at various events in a 2D array, where each row represents a unique event and contains the songs in the order they will be played at that specific event.\r\n\r\n##In Playlist.java:\r\n\r\n1. Write the method `findDuplicates()`(#e7e8ea) by by implementing the algorithm you developed on the [**Finding Duplicates**](https://docs.google.com/document/d/1Gi6z0hXOsJWBZOK7cza3CgvpTS6ADsp_rK0B7pgYIwk/edit?usp=sharing) activity guide.\r\n\r\n   * Return `true`(#e7e8ea) if `currentRow`(#e7e8ea) contains duplicate values.\r\n   \r\n   * If the row does not contain duplicate values, return `false`(#e7e8ea).\r\n\r\n2. Write the method `eventHasDuplicates()`(#e7e8ea) by implementing the algorithm you developed on the [**Finding Duplicates**](https://docs.google.com/document/d/1Gi6z0hXOsJWBZOK7cza3CgvpTS6ADsp_rK0B7pgYIwk/edit?usp=sharing) activity guide.\r\n\r\n   * Return `true`(#e7e8ea) if any rows contain duplicate values.\r\n   \r\n   * If none of the rows contain duplicate values, return `false`(#e7e8ea).\r\n\r\n##In MyConsole.java:\r\n\r\n3. Call the `eventHasDuplicates()`(#e7e8ea) method and print the results.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "encrypted_exemplar_sources": "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\nvLmRNg==\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[][] eventPlaylists = {{\"Wake Me Up\", \"Higher Power\", \"Can't Feel My Face\", \"Wake Me Up\", \"Cheap Thrills\"},\n                                 {\"Uptown Funk\", \"Thunder\", \"Ode to Code\", \"Ode to Code\", \"Thunder\"},\n                                 {\"Take On Me\", \"Summer\", \"Born This Way\", \"Never Really Over\", \"Born This Way\"}};\n\n    Playlists myPlaylist = new Playlists(eventPlaylists);\n\n    // TO DO #3: Call the eventHasDuplicates() method and print the results.\n\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Playlists.java": {
        "text": "/*\n * Represents playlists that are played at events\n */\npublic class Playlists {\n\n  private String[][] eventPlaylists;   // The 2D array of songs for each event\n\n  /*\n   * Constructor to create a Playlists object\n   * with the specified 2D array of event playlists\n   */\n  public Playlists(String[][] eventPlaylists) {\n    this.eventPlaylists = eventPlaylists;\n  }\n\n  /*\n   * Returns true if there is a duplicate value in currentRow\n   */\n  public boolean findDuplicates(String[] currentRow) {\n    // TO DO #1: Implement your algorithm to check if currentRow contains duplicate values.\n\n\n    return false;\n  }\n\n  /*\n   * Returns true if any events contain duplicate values\n   */\n  public boolean eventHasDuplicates() {\n    // TO DO #2: Implement your algorithm to check if any rows contain duplicate values.\n\n\n    return false;\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:50:23.110+00:00\",\"changed\":[\"cloned from \\\"CSA U5L9-L1_2022\\\"\"],\"cloned_from\":\"CSA U5L9-L1_2022\"},{\"changed_at\":\"2022-10-12 21:47:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-12 21:47:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-12 21:49:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-12 21:49:51 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
