<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-04-01T05:23:23.000Z",
  "level_num": "custom",
  "user_id": 19378,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A game high score tracker needs to ensure that when a score is increased, it doesn't cause an overflow error. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">HighScoreTracker</code> class has instance variables for <code style=\"background-color: #ececec; color: black; font-weight: bold;\">highScoreInt</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">highScoreDouble</code>.\r\n\r\n\r\n✅ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">HighScoreTracker.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">increaseHighScore(int amount)</code> method to increase the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">highScoreInt</code> of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">HighScoreTracker</code> object if the resulting <code style=\"background-color: #ececec; color: black; font-weight: bold;\">highScoreInt</code> does not overflow. \r\n\r\nOtherwise, increase <code style=\"background-color: #ececec; color: black; font-weight: bold;\">highScoreDouble</code>. \r\n\r\nReturn true if the operation is successful. Otherwise, return false. The new high score should be printed regardless of whether or not the operation was successful.\r\n\r\n\r\n✅ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">HighScoreRunner.java</code>,\r\n\r\n1. Instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">HighScoreTracker</code> object.\r\n\r\n2. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">increaseHighScore(int amount)</code>method on the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">highScore</code> object with a specified amount and print the results.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "ai_tutor_available": true,
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "encrypted_validation": "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\nonQoqIp4ha8+W+LOYY4=\n",
    "start_sources": {
      "HighScoreTrackerRunner.java": {
        "text": "public class HighScoreTrackerRunner{\n   public static void main(String[] args) {  \n     \n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a HighScoreTracker object with a starting score. Use the \n     * increaseHighScore(int amount) method and print the result. \n     * -----------------------------------------------------------------------------\n     */\n\n\n     HighScoreTracker myHighScoreTracker = new HighScoreTracker(Integer.MAX_VALUE);\n     myHighScoreTracker.increaseHighScore(100);\n\n\n\n     \n   }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "HighScoreTracker.java": {
        "text": "/*\n * Represents a game high score tracker with overflow error checking\n */\npublic class HighScoreTracker {\n  \n    private int highScoreInt;            // Current high score in the game as an int\n    private double highScoreDouble;      // Current high score in the game as a double\n  \n    /*\n     * Constructs a HighScoreTracker object with the specified initial high score\n     */\n    public HighScoreTracker(int initialScore) {\n        this.highScoreInt = initialScore;\n        this.highScoreDouble = initialScore; // Start with int, widen to double if needed\n    }\n  \n    /*\n     * Returns the current high score in the game as an int\n     */\n    public int getHighScoreInt() {\n        return highScoreInt;\n    }\n\n    /*\n     * Returns the current high score in the game as a double\n     */\n    public double getHighScoreDouble() {\n        return highScoreDouble;\n    }\n\n    /*\n     * Increases the high score in the game by the specified amount\n     * if the resulting score does not cause an overflow\n     *\n     * returns true if the high score is successfully increased, false otherwise\n     */\n    public boolean increaseHighScore(int amount){\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Write a conditional to check if increasing the score by 'amount' would cause\n     * an overflow error. If it does, widen the high score to a double and set it to\n     * the previous int value plus the amount. If it doesn't cause an overflow, simply\n     * increase the int high score by 'amount'. \n     * -----------------------------------------------------------------------------\n     */\n\n      if((double)highScoreInt + (double)amount > Integer.MAX_VALUE){\n        System.out.println(\"Increasing \" + highScoreInt + \" by \" + amount + \" would result in overflow\");\n        highScoreDouble = (double)highScoreInt + amount;\n        System.out.println(\"Switching to double value: \" + highScoreDouble);\n      }\n      else{\n        System.out.println(\"Increasing \" + highScoreInt + \" by \" + amount);\n        highScoreInt+=amount;\n        System.out.println(\"New high score: \" + highScoreInt);\n      }\n \n      return true;\n    }\n}\n\n",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_exemplar_sources": "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\no3cjom+mCaE=\n",
    "display_name": "Score Overflow Practice",
    "thumbnail_url": "https://images.code.org/c89a8076a61cea833e58dfe98e60002f-results.png",
    "bubble_choice_description": "A game developer creates a high score tracker, ensuring scores increase without causing overflow errors, using integer and double variables for tracking."
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-04-01T05:23:23.685+00:00\",\"changed\":[\"cloned from \\\"CSA U2_Casting-and-range-of-variables-L5a\\\"\"],\"cloned_from\":\"CSA U2_Casting-and-range-of-variables-L5a\"},{\"changed_at\":\"2024-04-01 05:23:45 +0000\",\"changed\":[],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-04-01 05:44:25 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-04-01 06:13:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-04-01 06:29:52 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-04-01 06:49:10 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-04-04 18:16:28 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-04-04 18:17:11 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"}]"
}]]></config>
</Javalab>
