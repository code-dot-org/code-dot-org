<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T18:15:34.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A movie streaming platform collects the number of user ratings received for different movies over a week. The number of ratings received are stored in a 2D array, where each row represents a movie, and each column represents a day of the week.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Streaming</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalRatings()</code> method to calculate and return the sum of all movie ratings received during the month.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">StreamingRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalRatings()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array in row-major order.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_row_major_traversal",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Movie Ratings",
    "bubble_choice_description": "Calculate the sum of the number of movie ratings received for all movies in a month.",
    "thumbnail_url": "https://images.code.org/ec07f33ab2fd3ec2de357fa56b10d1f5-popcorn.png",
    "encrypted_validation": "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\nsnkVG2TVtqWrA7YL\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "StreamingRunner.java": {
        "text": "public class StreamingRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of number of ratings received for several movies\n    int[][] dailyRatings = { {43, 68, 112, 29},\n                             {85, 76, 91, 54},\n                             {39, 121, 72, 93},\n                             {56, 81, 98, 65} };\n\n    // Creates a Streaming object\n    Streaming movies = new Streaming(dailyRatings);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcTotalRatings() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Streaming.java": {
        "text": "/*\n * Represents a movie streaming platform\n */\npublic class Streaming {\n\n  private int[][] ratings;      // The 2D array of the number of ratings received for several movies\n\n  /*\n   * Initializes ratings to the specified 2D array of the number of ratings received\n   */\n  public Streaming(int[][] ratings) {\n    this.ratings = ratings;\n  }\n\n  /*\n   * Returns the 2D array ratings\n   */\n  public int[][] getRatings() {\n    return ratings;\n  }\n\n  /*\n   * Returns the total ratings received\n   */\n  public int calcTotalRatings() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array ratings in row-major order. Calculate and return\n     * the sum of all the values in ratings.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T18:15:34.814+00:00\",\"changed\":[\"cloned from \\\"CSA U5L3-L3a_2025\\\"\"],\"cloned_from\":\"CSA U5L3-L3a_2025\"}]"
}]]></config>
</Javalab>
