<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-03-25T12:36:59.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `Pollution`(#e7e8ea) class analyzes data about the pollution index of cities around the world and has an instance variable for their pollution indexes.\r\n\r\n##In Pollution.java:\r\n\r\n1. Declare and initialize a constant `MAX_POLLUTION`(#e7e8ea) to `20`(#e7e8ea).\r\n\r\nThe method `countUnderMax()`(#e7e8ea) returns the number of cities that have pollution indexes that are less than or equal to the constant `MAX_POLLUTION`(#e7e8ea). In the `countUnderMax()`(#e7e8ea) method,\r\n\r\n2. Traverse the instance variable `pollutionIndexes`(#e7e8ea). Count each value that is less than or equal to the constant `MAX_POLLUTION`(#e7e8ea), then return the count.\r\n\r\n##In MyConsole.java:\r\n\r\n3. Print the result of a call to `countUnderMax()`(#e7e8ea) on the `cityIndexes`(#e7e8ea) object.\r\n\r\n**Note:** Use the constant `MAX_POLLUTION`(#e7e8ea) when displaying the results.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://www.kaggle.com/datasets/prasertk/healthy-lifestyle-cities-report-2021)!*\r\n\r\n![](https://images.code.org/7a5bc5b8f630724939b41f7dc794ba10-image-1648665957910.png)\r\n\r\n::: details [**Show Me How**]\r\nA constant variable uses the following syntax:\r\n  \r\n  ```\r\n  public static dataType VARIABLE_NAME = value;\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Pollution",
    "bubble_choice_description": "Find the number of cities that have pollution indexes that are less than or equal to a maximum value.",
    "thumbnail_url": "https://images.code.org/8be9636977f1f5ca660c9034ed916f39-image-1648662642475.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    /*\n     * Pollution indexes for Amsterdam, Sydney, Vienna, Stockholm, Copenhagen,\n     * Helsinki, Berlin, Barcelona, Vancouver, Melbourne (in order).\n     */\n    double[] pollutionIndexes = {30.93, 26.86, 17.33, 19.63, 21.24, 13.08, 39.41, 65.19, 24.26, 25.9};\n\n    Pollution cityIndexes = new Pollution(pollutionIndexes);\n\n    // TO DO #3: Print the result of a call to countUnderMax().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "Pollution.java": {
        "text": "public class Pollution {\n\n  private double[] pollutionIndexes;\n\n  // TO DO #1: Declare and initialize a constant MAX_POLLUTION.\n\n  \n\n  public Pollution(double[] pollutionIndexes) {\n    this.pollutionIndexes = pollutionIndexes;\n  }\n\n  public int countUnderMax() {\n    // TO DO #2: Traverse pollutionIndexes and count the number of\n    // cities with pollution indexes less than or equal to MAX_POLLUTION.\n\n\n    return 0;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "jrRNHcOowRx22njbDNzE6K10Ex1m7JwmHnodMo3x9M1YXOulrTILncoySabI\nivs8AY7AcN2ZMb1ewQ7lcUoLpNKZ2Oa8CEN2RhfHE4kHQvs507cWcb9ct+Bo\nJU6Ot2Se1DTDhci6vFL2ZbQt+O3MFbh3/+Mw60neRx4PIL80mkq5oaHOqVH8\nrB8JkP3XPZiqEuFyStQDWXuqS1h2XqZmtoVXhp0Bt7LZc/Qrzl4TyBpF5Y3a\noJWlDgG4bt1B8naoKPEYarpobsnCgcOFKwJk1OMvpqgiSG92TqY8D+MaFs0r\nOwrHVEPePItfkWwYpY6YyAnzT1MYtvqYZNOJ7AMaR9qg+N0TzIyiDxDQIRrV\n0AH5AFg9mI0q7AdJThNa1zFjsxdnAUl+TpGu6YYfuX1HS88tPM3tk+BWh74B\nB4x8iQZYEewqw7KcgX3GP7zBiPrGkGsWBso0cAydNc702Mn6MG6h4kI+5GFT\nsrYR+6d9qBVd5s/sBMlXgciL4t7lNnlwQjs0VAeq27BZPMnLkWj9QtgRuRh5\nG4mr/W/BYd5PKUVoahezyWz/mposVIhr+PSb2tSkUb9SJF5rC77+gv76djEP\nrMLFBr9sMwFrk1NSbIkH6KSOn8+faZN3omsC+1hV+OwtvwwwVXWaKDpK0U6A\nCzWItdjQF4k9phFTV+rA6LDTseozfQY4KL0UtlY+gTWErmjBnHcdbVA6bGBZ\nyGWGBxi3899oIXhTfGi6lw3U9Top/keMVslEZHqW/BuEHW/GBT3P01h90I5S\nc98OTrxa/rAsBKWLzviopvTrzZZfqxwzCdcGSVAJMfMQV5z/rqRGoaQDcpa0\nmMV8PUiF8bGrs3ApzlfnQKO1AjqFz13gB4EnE5pOhWDtl+9cxJBbvTF62dUd\nwEjtbP4j6LUmcwEN3tgYFSPuNr7RM+eh6GSa7gN8bKNWRG9kZeX+/1uU+dcr\n+MOsZ19hJnNfUf3Dpwx1nsSPQL9dLs687kbZA6jokJFm6rm2tITSVJOT0syj\nzSnrz9gDJWHIQHQnG3pFyB4Cz3pkupDLTasD/yvy+m8EIFJ8LMFzvkpTB0Pd\nOI5Vja/hr6iR8T3k36fAJFHmX/LlAkckeAqaZGNqXDSgaYF6/UhSNt1SSDDV\nPSViZ7vrLJwFr7pZSAXtxrQsPZlJauxdRR3i9GvlqaV9KgZf57u+Cysv7bX2\nlGy6gXWf9mSkLEPVh2TR/n+fyDBONawSDFf+pNOezn1qbrVtvzOtJjXz8wnE\njPuHx4cKv+IIajm5VuO9muqECITyqlr0Mi/KtWet8LYhRgYoGv07cVkagH8V\nFqWgKCCqqF4CZtyNgWG2dUw8nbPLoJvgqzOnd1V/VT0wpQy57mXHOc8Cj9PN\nNDxrZO1f7I4u3pEQbhEz0gYJMOgQ4JnoAuXEvu8QIK/INjKoQb8KJ8d/LlGU\n88ffc5UPYBLuwy5ChyIQWuZtmZkY/rmOeLPSWkR6COP8NMNzgzr/J3NIcRTZ\nO1afhQeocExvyneMTDvEsyf6GN4WFBwX1hj3jwqQxlDTCBjxRpV5qUoqWExb\niKu1D5+B1FJTVHz4XOBx3QZOtqwylL/y0Tb4NnN2mRR2BUr34lSZpXnf1n0W\na5opkDIKOFfb4y2PXm0RpEC+xSpnwLBaV0vEKTKrbCE3YTJXT/hZ6IZTBehO\nlDAcbc9JC5t22lpVKU1KN/ehci9nfE5ZQ6TaN9ZgnjD9LOQZcCuug4ZE9M/N\n4+yZmizDfivmK6685CaLseHZyXlcJ6R4U4JMW4C+v6kRnaWCXvVZBIvENhYU\nAlajVPq0QP2iqA==\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-03-25 12:37:01 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 17:51:19 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 17:51:58 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 17:53:53 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 18:18:18 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 18:18:40 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 18:34:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 18:38:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 18:38:32 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 18:44:55 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 18:45:15 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 18:46:03 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 19:27:46 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-06-24 15:12:43 +0000\",\"changed\":[\"map_reference\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:16:41 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:17:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:17:58 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
