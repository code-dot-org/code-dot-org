<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-02-26T00:32:35.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Explore and test this program using the questions on the Testing Software activity guide.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "playground",
    "display_name": "The Playground",
    "bubble_choice_description": "Explore and test this project using The Playground.",
    "thumbnail_url": "https://images.code.org/08a2592bd4397dbd2513747f3209a0c1-image-1639155711413.png",
    "starter_assets": {
      "battle_win.wav": "0e7f1f60-54d1-4cea-a2ee-237ed5e54a71.wav",
      "caught.wav": "3767f151-0a08-4cf0-9966-b9e902e6aec2.wav",
      "arcanine.png": "6d6cb77f-9fd4-4e0f-976c-954da92696a7.png",
      "ball_button.png": "243c0589-d3fd-4640-81e4-c1f91b0439ca.png",
      "charizard.png": "aaebe756-5533-4c7c-913b-0ccd80010275.png",
      "dialga.png": "e65f56b7-f8f6-4194-9ae1-58f0a5f5133c.png",
      "fight_button.png": "a9bb863c-0afe-44f5-8f4f-7da1d5fb23b6.png",
      "jigglypuff.png": "e2ce193a-5ff7-4c78-aead-a758423935a3.png",
      "pikachu.png": "37a882cf-ebab-49b7-9d61-20594621bd16.png",
      "pokeball.png": "5b2392e6-f854-4885-a9a4-bd0b99070d5c.png",
      "pokemon_battle.png": "b7a51e0e-92e2-4276-8f79-1658eb308724.png",
      "pokemon_button.png": "889fe116-ed58-4f31-9a86-ccb0aac3796d.png",
      "zapdos.png": "e91ce9e3-9566-4a47-af37-17b9e1c89c2a.png"
    },
    "start_sources": {
      "MyPlayground.java": {
        "text": "public class MyPlayground {\n  public static void main(String[] args) {\n\n    Game.play();\n    \n  }\n}",
        "isVisible": true
      },
      "Game.java": {
        "text": "import org.code.playground.*;\nimport org.code.media.*;\n\npublic final class Game {\n\n  private static Board myBoard = Playground.board;\n  private static Pokemon[] playerPokemon;\n  private static Pokemon[] enemyPokemon;\n  private static int playerRandom;\n  private static int enemyRandom;\n  private static AttackButton attack_button;\n  private static TextItem gameMessage;\n  private static boolean playerTurn;\n\n  /* Use this method to setup the display (show the images).\n   * Calling this method shows the images on the screen so\n   * the user can begin playing the game.\n   */\n  public static void play() {\n    int playerXPos = 30;\n    int playerYPos = 100;\n    int enemyXPos = 230;\n    int enemyYPos = 100;\n    int width = 150;\n    int height = 150;\n    \n    Pokemon arcanine = GameControl.createImage(\"arcanine.png\", playerXPos, playerYPos, width, height, 90, 10);\n    Pokemon dialga = GameControl.createImage(\"dialga.png\", playerXPos, playerYPos, width, height, 100, 20);\n    Pokemon pikachu = GameControl.createImage(\"pikachu.png\", playerXPos, playerYPos, width, height, 35, 5);\n    \n    Pokemon charizard = GameControl.createImage(\"charizard.png\", enemyXPos, enemyYPos, width, height, 78, 10);\n    Pokemon jigglypuff = GameControl.createImage(\"jigglypuff.png\", enemyXPos, enemyYPos, width, height, 115, 10);\n    Pokemon zapdos = GameControl.createImage(\"zapdos.png\", enemyXPos, enemyYPos, width, height, 90, 10);\n\n    playerPokemon = new Pokemon[3];\n    playerPokemon[0] = arcanine;\n    playerPokemon[1] = dialga;\n    playerPokemon[2] = pikachu;\n    playerRandom = (int)(Math.random() * playerPokemon.length);\n\n    enemyPokemon = new Pokemon[3];\n    enemyPokemon[0] = charizard;\n    enemyPokemon[1] = jigglypuff;\n    enemyPokemon[2] = zapdos;\n    enemyRandom = (int)(Math.random() * enemyPokemon.length);\n\n    attack_button = GameControl.createButton(\"fight_button.png\", 135, 300, 130, 80);\n\n    myBoard.addImageItem(playerPokemon[playerRandom]);\n    myBoard.addImageItem(enemyPokemon[enemyRandom]);\n    myBoard.addClickableImage(attack_button);\n\n    playerTurn = true;\n\n    GameControl.startPlayground();\n  }\n\n  /* Use this method to check whether the player's move\n   * is valid. You may need to add parameters based on\n   * the rules of your game.\n   */\n  public static boolean isValidMove() {\n    boolean validMove = false;\n    \n    if (enemyPokemon[enemyRandom].getHealth() > 0 && playerTurn) {\n      validMove = true;\n    }\n    else {\n      validMove = false;\n    }\n\n    if (playerTurn) {\n      playerTurn = false;\n    }\n    else {\n      playerTurn = true;\n    }\n\n    return validMove;\n  }\n\n  /* Use this method to update the score based on the\n   * results of the isValidMove() method. You may need\n   * add parameters based on the rules of your game.\n   */\n  public static void updateHealth() {\n    if (isValidMove()) {\n      enemyPokemon[enemyRandom].setHealth(enemyPokemon[enemyRandom].getHealth() - playerPokemon[playerRandom].getAttack());\n    }\n    else {\n      playerPokemon[playerRandom].setHealth(playerPokemon[playerRandom].getHealth() - enemyPokemon[enemyRandom].getAttack());\n    }\n\n    System.out.println(\"Player health: \" + playerPokemon[playerRandom].getHealth());\n    System.out.println(\"Enemy health: \" + enemyPokemon[enemyRandom].getHealth());\n    gameOver();\n  }\n\n  // Use this method to check if the game is over.\n  public static void gameOver() {\n    if (enemyPokemon[enemyRandom].getHealth() <= 0) {\n      myBoard.removeItem(enemyPokemon[enemyRandom]);\n      GameControl.playSoundEffect(\"battle_win.wav\");\n      GameControl.stopPlayground();\n    }\n\n    if (playerPokemon[playerRandom].getHealth() <= 0) {\n      myBoard.removeItem(playerPokemon[playerRandom]);\n      System.out.println(\"Sorry, you lost!\");\n      GameControl.stopPlayground();\n    }\n  }\n}",
        "isVisible": true
      },
      "GameControl.java": {
        "text": "import org.code.playground.*;\nimport java.io.FileNotFoundException;\n\npublic class GameControl {\n\n  private static Board myBoard = Playground.board;\n  private static Pokemon temp;\n  private static AttackButton tempClickable;\n\n  public static void startPlayground() {\n    try {\n      myBoard.start();\n    } catch (PlaygroundException e) {\n      System.out.println(\"Error starting The Playground.\");\n    }\n  }\n\n  public static void stopPlayground() {\n    try {\n      myBoard.end();\n    } catch (PlaygroundException e) {\n      System.out.println(\"Error starting The Playground.\");\n    }\n  }\n\n  public static Pokemon createImage(String filename, int x, int y, int width, int height, int health, int attack) {\n    try {\n      temp = new Pokemon(filename, x, y, width, height, health, attack);\n    } catch (FileNotFoundException e) {\n      System.out.println(\"Error creating image: \" + filename);\n    }\n\n    return temp;\n  }\n\n  public static AttackButton createButton(String filename, int x, int y, int width, int height) {\n    try {\n      tempClickable = new AttackButton(filename, x, y, width, height);\n    } catch (FileNotFoundException e) {\n      System.out.println(\"Error creating button: \" + filename);\n    }\n\n    return tempClickable;\n  }\n\n  public static void playSoundEffect(String filename) {\n    try {\n      myBoard.playSound(filename);\n    } catch (FileNotFoundException e) {\n      System.out.println(\"Error playing sound: \" + filename);\n    }\n  }\n}",
        "isVisible": true
      },
      "AttackButton.java": {
        "text": "import org.code.playground.*;\nimport java.io.FileNotFoundException;\n\n// Use this class to create images that can be clicked.\npublic class AttackButton extends ClickableImage {\n\n\tpublic AttackButton(String filename, int x, int y, int width, int height) throws FileNotFoundException {\n    super(filename, x, y, width, height);\n  }\n\n  /* Use this method to call isValidMove() from Game.\n   * You may have this ClickableImage perform other actions\n   * as well based on the rules of your game.\n   */\n  public void onClick() {\n    Game.updateHealth();\n  }\n}",
        "isVisible": true
      },
      "Pokemon.java": {
        "text": "import org.code.playground.*;\nimport java.io.FileNotFoundException;\n\n// Use this class to create images that cannot be clicked.\npublic class Pokemon extends ImageItem {\n\n  private int health;\n  private int attack;\n\n\tpublic Pokemon(String image, int x, int y, int width, int height, int health, int attack) throws FileNotFoundException {\n    super(image, x, y, width, height);\n    this.health = health;\n    this.attack = attack;\n  }\n\n  public int getHealth() {\n    return health;\n  }\n\n  public void setHealth(int health) {\n    this.health = health;\n  }\n\n  public int getAttack() {\n    return attack;\n  }\n\n  public void setAttack(int attack) {\n    this.attack = attack;\n  }\n\n}",
        "isVisible": true
      }
    },
    "name_suffix": "_2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:32:35.952+00:00\",\"changed\":[\"cloned from \\\"CSA U7L10-L1c\\\"\"],\"cloned_from\":\"CSA U7L10-L1c\"}]"
}]]></config>
</Javalab>
