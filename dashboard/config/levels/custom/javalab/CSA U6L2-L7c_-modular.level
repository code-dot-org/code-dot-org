<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2024-02-16T05:19:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A student wants to count the number of lines in their favorite poem.\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Poem</code> class has instance variables <code style=\"background-color: #ececec; color: black; font-weight: bold;\">author</code>, <code style=\"background-color: #ececec; color: black; font-weight: bold;\">title</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">lines</code>. \r\n\r\n<code style=\"background-color: #ececec; color: black; font-weight: bold;\">lines</code> stores each line of the poem as a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> object, separated by a newline <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\\n</code> character.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Poem</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countLines()</code> method to return an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> representing the number of lines in the poem.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PoemRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countLines()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">substring()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Poem Line Counter",
    "bubble_choice_description": "A student wants to count the number of lines in their favorite poem.",
    "thumbnail_url": "https://images.code.org/f950d6f9287d0fc4c71d7941bb4d9344-poetry.png",
    "encrypted_validation": "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\nCh5E2GCf4fTGWRf6Xg==\n",
    "encrypted_exemplar_sources": "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\n",
    "name_suffix": "_-modular",
    "start_sources": {
      "PoemRunner.java": {
        "text": "public class PoemRunner {\n  public static void main(String[] args) {\n\n    // Creates a Poem object\n    String lines = \"\\tHope is the thing with feathers\\n\";\n          lines += \"\\tThat perches in the soul,\\n\";\n          lines += \"\\tAnd sings the tune without the words,\\n\";\n          lines += \"\\tand never stops at all.\\n\";\n    Poem hope = new Poem(\"Hope is a thing with feathers\",\"Emily Dickinson\",lines);\n    hope.printPoem();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the countLines() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Poem.java": {
        "text": "public class Poem {\n    private String title;\n    private String author;\n    private String lines;\n\n    public Poem(String title, String author, String lines) {\n        this.title = title;\n        this.author = author;\n        this.lines = lines;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n\n    public String getLines() {\n        return lines;\n    }\n\n    public void addLine(String line) {\n        lines = lines + line + \"\\n\";\n    }\n\n    /*\n     * Returns an int representing the number of lines found in the poem using the \\n \n     */\n    public int countLines(){\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use the substring() method and a loop to count the number of times the \n     * newline \"\\n\" character appears in the poem.\n     * -----------------------------------------------------------------------------\n     */\n      \n      return 0;\n    }\n\n    public void printPoem() {\n        System.out.println(\"Title: \" + title);\n        System.out.println(\"Author: \" + author);\n        System.out.println(\"Lines:\");\n        System.out.println(lines);\n    }\n\n}\n",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_examples": [

    ],
    "ai_tutor_available": "false"
  },
  "audit_log": "[{\"changed_at\":\"2024-02-16T05:19:24.211+00:00\",\"changed\":[\"cloned from \\\"CSA U6L2-L7c_2025\\\"\"],\"cloned_from\":\"CSA U6L2-L7c_2025\"},{\"changed_at\":\"2024-03-11 05:00:48 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:01:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:01:51 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:02:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:03:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:36:57 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:37:55 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:38:30 +0000\",\"changed\":[],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:38:42 +0000\",\"changed\":[],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:38:53 +0000\",\"changed\":[],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:39:03 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:40:37 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:45:29 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:46:36 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:46:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:47:25 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-03-11 05:53:39 +0000\",\"changed\":[\"long_instructions\",\"display_name\",\"bubble_choice_description\",\"thumbnail_url\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"}]"
}]]></config>
</Javalab>
