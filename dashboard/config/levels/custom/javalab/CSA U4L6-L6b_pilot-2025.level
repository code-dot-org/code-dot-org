<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T16:55:02.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "## Fix the Error\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findMatchingVideo()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Catalog</code> class is supposed to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Video</code> object that has the same title as the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">videoToFind</code>, but it has a bug ðŸª²\r\n\r\nFind and fix the error in the program.\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">ðŸ”¦ Help! I can't find the bug!</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">equals()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Video</code> class returns <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if two <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Video</code> objects have the same title. Check if this is being used in the condition in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findMatchingVideo()</code> method.</p>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "The Video Class",
    "bubble_choice_description": "The `findMatchingVideo()` method is supposed to return a 1D array containing all `Video` objects that have the same title as the parameter `videoToFind`, but is has a bug ðŸª²",
    "thumbnail_url": "https://images.code.org/a7ad7253f6c93e30b01a2f768825499b-video.png",
    "encrypted_validation": "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\nDKGiKna3K/f9jPpdrEpimlrDywJYhBb4NmKDpJE=\n",
    "start_sources": {
      "VideoRunner.java": {
        "text": "public class VideoRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Video objects\n    Video[] videos = {new Video(\"The Lion King\", 1994), new Video(\"Beauty and the Beast\", 1991), new Video(\"Aladdin\", 1992),\n                      new Video(\"Frozen\", 2013), new Video(\"Moana\", 2016)};\n\n    // Creates a Catalog object\n    Catalog videoCatalog = new Catalog(videos);\n\n    // Creates two Video objects to find\n    Video frozen = new Video(\"Frozen\", 2013);\n    Video toyStory = new Video(\"Toy Story\", 1995);\n\n    // Calls the findMatchingVideo() method and prints the result\n    System.out.println(videoCatalog.findMatchingVideo(frozen) + \"\\n\");\n    System.out.println(videoCatalog.findMatchingVideo(toyStory));\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Catalog.java": {
        "text": "/*\n * Represents a catalog of videos\n */\npublic class Catalog {\n\n  private Video[] videos;      // The 1D array of Video objects\n\n  /*\n   * Initializes videos to the specified 1D array of Video objects\n   */\n  public Catalog(Video[] videos) {\n    this.videos = videos;\n  }\n\n  /*\n   * Returns a String containing information about the Video\n   * object that has the same title as the parameter videoToFind\n   */\n  public String findMatchingVideo(Video videoToFind) {\n    String result = \"\";\n\n    for (Video item : videos) {\n      if (item == videoToFind) {\n        result += \"Matching video found!\\n\" + item;\n      }\n    }\n\n    if (result.equals(\"\")) {\n      result += \"No matching video found.\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Video.java": {
        "text": "/*\n * Represents a video\n */\npublic class Video {\n\n  private String title;     // The title of a video\n  private int year;         // The year the video was released\n\n  /*\n   * Sets title to the specified title and year to the specified year\n   */\n  public Video(String title, int year) {\n    this.title = title;\n    this.year = year;\n  }\n\n  /*\n   * Returns the title of the video\n   */\n  public String getTitle() {\n    return title;\n  }\n\n  /*\n   * Returns the year of the video\n   */\n  public int getYear() {\n    return year;\n  }\n\n  /*\n   * Returns true if the title of other is the same as this Video\n   */\n  public boolean equals(Object other) {\n    if (other == this) {\n      return true;\n    }\n\n    if (!(other instanceof Video)) {\n      return false;\n    }\n\n    Video otherVideo = (Video) other;\n    return this.title.equals(otherVideo.title);\n  }\n\n  /*\n   * Returns a String containing the video's title\n   */\n  public String toString() {\n    return title + \"(\" + year + \")\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "video_key": "csa_equals_and_aliases",
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T16:55:02.867+00:00\",\"changed\":[\"cloned from \\\"CSA U4L6-L6b_2025\\\"\"],\"cloned_from\":\"CSA U4L6-L6b_2025\"}]"
}]]></config>
</Javalab>
