<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:13:40.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A social media analyst has collected data on the number of reactions (likes, comments, and shares) for different posts in a 2D array, where each row represents a type of reaction and each column represents a post.\r\n\r\n✅ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SocialMedia</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findHighest()</code> method to traverse the 2D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">reactions</code> and find the post with the highest total engagement (the sum of all reaction types).\r\n\r\n✅ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SocialMediaRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findHighest()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n💡 <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ⬆️ for help with traversing a two-dimensional (2D) array in column-major order.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_column_major_traversal",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Social Media Posts",
    "bubble_choice_description": "Find the post with the highest total engagement.",
    "thumbnail_url": "https://images.code.org/aa40cffb4df7bc26e1ed6e31cbd9475c-social-marketing.png",
    "encrypted_validation": "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\nNwDxAAbySmqOF4hcblEgtLE=\n",
    "encrypted_exemplar_sources": "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\nXLth\n",
    "start_sources": {
      "SocialMediaRunner.java": {
        "text": "public class SocialMediaRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of reactions for several posts\n    int[][] reactions = { {10, 5, 8, 12},\n                          {3, 6, 9, 7},\n                          {2, 1, 4, 5} };\n\n    // Creates a SocialMedia object\n    SocialMedia app = new SocialMedia(reactions);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Call the findHighest() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "SocialMedia.java": {
        "text": "/*\n * Represents a social media app\n */\npublic class SocialMedia {\n\n  private int[][] reactions;      // The 2D array containing the number of reactions\n\n  /*\n   * Initializes reactions to the 2D array containing the number of reactions\n   */\n  public SocialMedia(int[][] reactions) {\n    this.reactions = reactions;\n  }\n\n  /*\n   * Returns the 2D array reactions\n   */\n  public int[][] getReactions() {\n    return reactions;\n  }\n\n  /*\n   * Returns the location of the post with the highest total engagement\n   */\n  public int findHighest() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Traverse the 2D array reactions in column-major order and find the sum\n     * of each column. Return the column index of the column that has the largest\n     * number of reactions.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:13:40.757+00:00\",\"changed\":[\"cloned from \\\"CSA U5L4-L4c_2023\\\"\"],\"cloned_from\":\"CSA U5L4-L4c_2023\"}]"
}]]></config>
</Javalab>
