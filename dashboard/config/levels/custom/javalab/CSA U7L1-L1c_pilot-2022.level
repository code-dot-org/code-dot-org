<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:55:31.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "display_name": "Banana Cafe",
    "long_instructions": "Look at this project example. What are some of its characteristics and features?\r\n\r\n*While this is an example of a project for this unit, it is not representative of the only way you can approach or develop the project.*",
    "mini_rubric": "false",
    "bubble_choice_description": "An example project that creates an animation with minions ordering at a cafe.",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    MenuItem bananaSmoothie = new MenuItem(\"Banana Smoothie\", \"bSmoothie.png\", null, 6, \"drink\");\n    MenuItem strawberrySmoothie = new MenuItem(\"Strawberry Smoothie\", \"sbSmoothie.png\", null, 6, \"drink\");\n    MenuItem bananas = new MenuItem(\"Bananas\", \"threeBananas.png\", null, 3, \"food\");\n\n    String[] sandwichIngredients = {\"plate.png\", \"bread.png\", \"lettuce.png\", \"cheese.png\", \"tomatoes.png\", \"bread.png\"};\n    MenuItem sandwich = new MenuItem(\"Sandwich\", \"sandwhich.png\", sandwichIngredients, 9, \"food\");\n\n    MenuItem[] fullMenu = {bananaSmoothie, strawberrySmoothie, bananas, sandwich};\n\n    Minion[] minions = { new Minion(\"minion2.png\", bananas), new Minion(\"minions3.png\", bananaSmoothie),\n                          new Minion(\"minions4.png\", sandwich), new Minion(\"minions5.png\", strawberrySmoothie) };\n\n    MinionScene cafe = new MinionScene(minions, \"gru.png\", fullMenu);\n    Kitchen theKitchen = new Kitchen(fullMenu, \"kitchen.jpg\", \"backOfGru.png\");\n    ServeFood serveFood = new ServeFood(fullMenu, \"gru.png\");\n   \n    cafe.createScene();\n    theKitchen.createScene();\n    serveFood.createScene();\n\n    Theater.playScenes(cafe, theKitchen, serveFood);\n\n  }\n}",
        "isVisible": true
      },
      "MinionScene.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class MinionScene extends BananaCafe {\n\n  private static Minion[] minions;\n\n  public MinionScene(Minion[] minions, String server, MenuItem[] fullMenu) {\n    super(fullMenu, server);\n    this.minions = minions;\n  }\n\n  public static Minion[] getMinions() {\n    return minions;\n  }\n\n  public void createScene() {\n    super.createScene();\n    displayGru();\n    placeOrder(90, 190, 120);\n    pause(1);\n  }\n\n  public void displayGru() {\n    drawImage(\"RightSpeechBubble.png\", 73, 25, 180);\n    setTextHeight(7);\n    drawText(\"What can I get for you?\", 125, 110);\n  }\n  \n  public void placeOrder(int y, int x, int size) {\n    for (int index = 0; index < minions.length; index++) {\n      formatText();\n      showSpeechBubble(index, x, y, size);\n      showOrder(index);\n      showSubtitles(220, minions[index].getOrder().getItemName());\n    }\n  }\n\n  public void showSpeechBubble(int currentOrder, int x, int y, int size) {\n    int[][] speechBubblePosition = { {x, y}, {x, y * 2}, {x - 110, y}, {x - 110, y * 2} };\n    String speechBubble = getSpeechBubble(currentOrder);\n    drawImage(speechBubble, speechBubblePosition[currentOrder][0], speechBubblePosition[currentOrder][1], size);\n  }\n\n  public void showOrder(int currentOrder) {\n    String[][] orderText = { {\"Ba-na-na!\", null}, {\"Strewberryy\", \"smooooti\"}, {\"Ba-na-na\", \"smooooti\"}, {\"ssaannwich\", null} };\n    int[] orderPosition = getOrderPosition(currentOrder);\n\n    for (int index = 0; index < orderPosition.length; index++) {\n      drawText(orderText[currentOrder][0], orderPosition[0], orderPosition[1]);\n    \n      if (orderText[currentOrder][1] != null) {\n        drawText(orderText[currentOrder][1], orderPosition[2], orderPosition[3]);\n      }\n    }\n  }\n\n  public void showSubtitles(int length, String orderName) {\n    setFillColor(\"black\");\n    drawRectangle(130, 335, length, 20);\n    setTextHeight(15);\n    setTextColor(\"white\");\n    drawText(\"subtitles: \" + orderName, 150, 350);\n  }\n\n  private int[] getOrderPosition(int currentOrder) {\n    int[][] orderPosition = { {230, 145, 0, 0}, {230, 230, 230, 240}, {120, 145, 120, 155}, {120, 230, 0, 0} };\n    return orderPosition[currentOrder];\n  }\n\n  private String getSpeechBubble(int row) {\n    String speechBubble = \"\";\n    \n    if (row == 0 || row == 1) {\n      speechBubble = \"LeftSpeechBubble.png\";\n    }\n    else {\n      speechBubble = \"RightSpeechBubble.png\";\n    }\n\n    return speechBubble;\n  }\n\n  private void formatText() {\n    pause(1);\n    setTextColor(\"black\");\n    setTextHeight(7);\n  }\n  \n}",
        "isVisible": true
      },
      "BananaCafe.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.util.ArrayList;\n\npublic class BananaCafe extends Scene {\n\n  private MenuItem[] fullMenu;\n  private String server;\n  public static final Color cafeColor = new Color(185, 136, 92);\n\n  public BananaCafe(MenuItem[] fullMenu, String server) {\n    this.fullMenu = fullMenu;\n    this.server = server;\n  }\n\n  public MenuItem[] getFullMenu() {\n    return fullMenu;\n  }\n\n  public String getServer() {\n    return server;\n  }\n  \n  public void drawBar() {\n    setFillColor(\"black\");\n    drawRectangle(100, 50, 50, 100);\n    drawRectangle(150, 100, 150, 50);\n  }\n  \n  public void drawFloors() {\n    for (int z = 300; z > -500; z -= 100) {\n      drawFloorTile(z, 0);\n    }    \n  }\n  \n  public void drawTables() {\n    setFillColor(cafeColor);\n    \n    for (int x = 15; x < 320; x += 150) {\n      drawEllipse(x, 210, 75, 75);\n    }\n    \n    for (int y = 90; y < 245; y += 150) {\n      drawEllipse(y, 360, 75, 75);\n    }  \n  }\n  \n  public void drawWall() {\n    setFillColor(\"white\");\n    \n    drawRectangle(0, 0, 400, 50);\n    \n    // shelf\n    drawLine(75, 25, 325, 25);\n    drawImage(\"fruit_basket.png\", 55, -40, 100);\n    drawImage(\"fruit_basket.png\", 95, -40, 100);\n    drawImage(\"door.png\", 170, -10, 60);\n    drawImage(\"fruit_basket.png\", 215, -40, 100);\n    drawImage(\"fruit_basket.png\", 255, -40, 100);\n  }\n  \n  public void drawFloorTile(int x, int y) {\n    if (y == getHeight()) {\n      return;\n    }\n    \n    setFillColor(\"yellow\");\n    drawRectangle(x, y, 50, 50);\n    setFillColor(\"white\");\n    drawRectangle(x + 50, y, 50, 50);\n    \n    drawFloorTile(x + 50, y + 50);\n  }\n  \n  public void drawThreeChair(int x, int y) {\n    if (x < 0) {\n      return;\n    }\n    \n    int size = 30;\n    setFillColor(cafeColor);\n    drawEllipse(x, y, size, size);\n    \n    drawThreeChair(x - 150, y);\n  }\n  \n  public void drawAllChairs() {\n    int x = 300;\n    int y = 190;\n    \n    drawThreeChair(x, y);\n    drawThreeChair(x + 72, y);\n    drawThreeChair(x, y + 100);\n    drawThreeChair(x + 72, y + 100);\n    drawThreeChair(x + 35, y + 200);\n  }\n  \n  public void drawMenuPoster(int x_rectangle) {\n    setStrokeWidth(3);\n    setFillColor(\"brown\");\n    drawRectangle(x_rectangle, 0, 65, 40);\n    setStrokeWidth(0);\n  }\n  \n  public void drawDrinksMenu() {\n    drawMenuPoster(10);\n    setTextHeight(8);\n    setTextColor(\"black\");\n    drawText(\"Drinks Menu:\", 15, 10);\n    drawMenuText(\"drink\");\n  }\n  \n  public void drawFoodMenu() {\n    drawMenuPoster(330);\n    setTextColor(\"black\");\n    drawText(\"Food Menu:\", 335, 10);\n    drawMenuText(\"food\");\n  }\n\n  public void drawMenuText(String type) {\n    int yPos = 20;\n    ArrayList<MenuItem> items = getMenuItemsByType(type);\n\n    for (int index = 0; index < items.size(); index++) {\n      MenuItem currentItem = items.get(index);\n      \n      setTextHeight(8);\n      drawText(currentItem.getItemName(), 15, yPos);\n\n      if (type.equals(\"food\") && currentItem.getIngredients() != null) {\n        setTextHeight(6);\n        yPos = drawMenuIngredients(currentItem, yPos);\n      }\n      \n      yPos += 10;\n    }\n  }\n\n  public int drawMenuIngredients(MenuItem currentItem, int yPos) {\n    String[] ingredients = currentItem.getIngredients();\n\n    for (int index = 0; index < ingredients.length; index++) {\n      yPos += 5;\n      drawText(ingredients[index], 335, yPos);\n    }\n\n    return yPos;\n  }\n\n  public ArrayList<MenuItem> getMenuItemsByType(String type) {\n    ArrayList<MenuItem> items = new ArrayList<MenuItem>();\n\n    for (int index = 0; index < fullMenu.length; index++) {\n      String currentItemType = fullMenu[index].getType();\n\n      if (currentItemType.equals(type)) {\n        items.add(fullMenu[index]);\n      }\n    }\n\n    return items;\n  }\n  \n  public void drawBananaTree() {\n    drawImage(\"bananaTree.png\", -30, 25, 150);\n    drawImage(\"bananaTree.png\", 290, 25, 150);\n  }\n\n  public void displayMinions() {\n    int[][] sizeAndPosition = { {210, 165, 40}, {140, 165, 50}, {140, 240, 55}, {210, 250, 60} };\n    drawImage(getServer(), 180, 130, 40);\n\n    Minion[] minions = MinionScene.getMinions();\n\n    for (int index = 0; index < minions.length; index++) {\n      drawImage(minions[index].getImage(), sizeAndPosition[index][0], sizeAndPosition[index][1], sizeAndPosition[index][2]);\n    }\n  }\n  \n  public void drawBackground() {\n    drawFloors();\n    drawBar();\n    drawWall();\n    drawTables();\n    drawDrinksMenu();\n    drawFoodMenu();\n    drawBananaTree();\n    drawAllChairs();\n    displayMinions();\n  }\n  \n  public void createScene() {\n    drawBackground();\n  }\n  \n}",
        "isVisible": true
      },
      "Kitchen.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class Kitchen extends Scene {\n\n  private MenuItem[] fullMenu;\n  private String kitchenImage;\n  private String chefImage;\n\n  public Kitchen(MenuItem[] fullMenu, String kitchenImage, String chefImage) {\n    this.fullMenu = fullMenu;\n    this.kitchenImage = kitchenImage;\n    this.chefImage = chefImage;\n  }\n\n  public void createScene() {\n    drawBackground();\n    makeSandwich();\n  }\n \n  public void drawBackground() {\n    drawImage(kitchenImage, 0, 0, getWidth());\n    drawImage(chefImage, 50, 150, 110, 10);\n    pause(1);\n  }\n\n  public void makeSandwich() {\n    String[] sandwichIngredients = getSandwichIngredients();\n    \n    for (int index = 0; index < sandwichIngredients.length; index++) {\n      drawImage(sandwichIngredients[index], 160, 210, 100);\n      pause(0.5);\n    }\n  }\n  \n  private String[] getSandwichIngredients() {\n    MenuItem sandwichOrder = getSandwich();\n\n    if (sandwichOrder != null) {\n      return sandwichOrder.getIngredients();\n    }\n\n    return null;\n  }\n\n  private MenuItem getSandwich() {\n    for (int index = 0; index < fullMenu.length; index++) {\n      MenuItem currentItem = fullMenu[index];\n      if (currentItem.getItemName().equals(\"Sandwich\")) {\n        return fullMenu[index];\n      }\n    }\n\n    return null;\n  }\n  \n}",
        "isVisible": true
      },
      "ServeFood.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class ServeFood extends BananaCafe {\n\n  public ServeFood(MenuItem[] fullMenu, String server) {\n    super(fullMenu, server);\n  }\n\n  public void createScene() {\n    super.createScene();\n    drawOrders();\n    displayBill();\n    pause(1);\n  }\n\n  public void drawOrders() {\n    int[][] sizeAndPosition = { {200, 210, 30}, {150, 180, 70}, {15, 250, 70}, {180, 220, 70} };\n    Minion[] minions = MinionScene.getMinions();\n\n    for (int index = 0; index < minions.length; index++) {\n      MenuItem minionOrder = minions[index].getOrder();\n      int[] formatValues = sizeAndPosition[index];\n      drawImage(minionOrder.getImage(), formatValues[0], formatValues[1], formatValues[2]);\n    }\n  }\n  \n  private void displayBill() {\n    drawImage(\"RightSpeechBubble.png\", 73, 25, 180);\n    setTextHeight(7);\n    int total = MenuItem.calculateTotal(MinionScene.getMinions());\n    drawText(\"You owe me $ \" + total, 135, 110);\n  }\n  \n}",
        "isVisible": true
      },
      "Minion.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class Minion {\n  \n  private String image;\n  private MenuItem order;\n\n  public Minion(String image, MenuItem order) {\n    this.image = image;\n    this.order = order;\n  }\n  \n  public MenuItem getOrder() {\n    return order;\n  }\n  \n  public String getImage() {\n    return image;\n  }\n  \n}",
        "isVisible": true
      },
      "MenuItem.java": {
        "text": "public class MenuItem {\n\n  private String itemName;\n  private String image;\n  private String[] ingredients;\n  private int price;\n  private String type;\n\n  public MenuItem(String itemName, String image, String[] ingredients, int price, String type) {\n    this.itemName = itemName;\n    this.image = image;\n    this.ingredients = ingredients;\n    this.price = price;\n    this.type = type;\n  }\n\n  public String getItemName() {\n    return itemName;\n  }\n\n  public String getImage() {\n    return image;\n  }\n\n  public String[] getIngredients() {\n    return ingredients;\n  }\n\n  public int getPrice() {\n    return price;\n  }\n\n  public String getType() {\n    return type;\n  }\n\n  public static int calculateTotal(Minion[] minionsOrder) {\n    int total = 0;\n\n    for (int index = 0; index < minionsOrder.length; index++) {\n      MenuItem currentOrder = minionsOrder[index].getOrder();\n      total += currentOrder.getPrice();\n    }\n\n    return total;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "starter_assets": {
      "musician.jpeg": "f21e8cd6-71e5-472c-9b8f-44155f44f533.jpeg",
      "fashion.jpeg": "12e46807-acc6-4db0-a582-78b611aa9000.jpeg",
      "basketball.jpeg": "b19cb498-af92-4cfb-8e39-d98df467e56d.jpeg",
      "theme.wav": "5de63ec1-39cb-4cc2-9937-7dd380dbbeb8.wav",
      "closet.jpeg": "e78c0293-1db3-41d1-b07b-3850ea9fbb05.jpeg",
      "store.jpeg": "85ebbcd9-09cd-4362-b10f-0652adac63ad.jpeg",
      "guitars.jpeg": "994c30cc-b48d-46ac-9a1e-3a9e012c566e.jpeg",
      "piano.jpeg": "b78c6fd1-758b-4ddd-9a82-1dd8f4a04edd.jpeg",
      "track.jpeg": "84541551-172d-4cd6-8f5b-a8f951d81f1f.jpeg",
      "soccer.jpeg": "f2f49d4c-825c-4119-8f2a-7e75e4409d97.jpeg",
      "abstract.jpeg": "b34dddc1-7bd2-45d3-b6e9-10fa8af6bc0d.jpeg",
      "backOfGru.png": "fa13dd2c-d875-45de-b5fe-4a4007f940b7.png",
      "bananaTree.png": "7b565bc8-dca9-4a35-80f7-b111eac73e01.png",
      "bread.png": "796e1d31-20d3-48b4-9a08-2865e3bb681e.png",
      "bSmoothie.png": "361402b0-3d1d-4be8-88bf-5f4c2abb998a.png",
      "cheese.png": "261de5c4-d6f4-4314-b63c-7947108e4871.png",
      "door.png": "0a45e907-a87e-456f-8bdf-ec777d2f1aaa.png",
      "fruit_basket.png": "698ffbd2-13ee-47f2-807c-1349f0d9b83b.png",
      "gru.png": "54e70b1f-45da-49ab-bf86-3bcd2d0e3233.png",
      "kitchen.jpg": "d4ee2e31-a14f-4ecd-87ef-4ee3e35e31a9.jpg",
      "LeftSpeechBubble.png": "97233090-fd06-482e-a189-e3a53f105c22.png",
      "lettuce.png": "b1abc414-c733-443d-8d59-9dfe12e26714.png",
      "minion2.png": "92d3e458-d01c-4f7d-afa1-c10437f22563.png",
      "minions3.png": "ce9cca00-c57f-4831-bb40-e8dd167d59cb.png",
      "minions4.png": "e87504fd-2e2e-48c5-a3df-1054993289b2.png",
      "minions5.png": "e5d4943f-9529-403f-b856-d63a5024419f.png",
      "plate.png": "4427e1c6-2767-4be7-87b4-8653dfec7eb2.png",
      "RightSpeechBubble.png": "a829a214-d0bb-4824-8575-246bc1efb479.png",
      "sandwhich.png": "49357b9f-b0d7-4765-a882-c00039eb2fe7.png",
      "sbSmoothie.png": "22a298dd-549e-4069-9c07-765760d037c7.png",
      "threeBananas.png": "cc8fb1f1-d107-461f-a2c3-05007a4d1872.png",
      "tomatoes.png": "e63a4e99-bd83-4687-8008-25c8407f3947.png"
    },
    "thumbnail_url": "https://images.code.org/69cc695dcbdf567edb05fafe213bb549-U7_project3.gif",
    "name_suffix": "_pilot-2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:55:31.470+00:00\",\"changed\":[\"cloned from \\\"CSA U7L1-L1c_2022\\\"\"],\"cloned_from\":\"CSA U7L1-L1c_2022\"}]"
}]]></config>
</Javalab>
