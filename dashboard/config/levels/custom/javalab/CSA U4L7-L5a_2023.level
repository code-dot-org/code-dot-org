<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-02-17T18:51:21.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A researcher wants to compare the number of fires caused by fireworks to the number of fires caused by lightning each year.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FireData.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getNumFires()</code> method to traverse the 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Fire</code> objects and return the number of fires caused by the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">cause</code> where the length of the name of the fire is greater than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">6</code>.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">drawResult()</code> method with the 1D array returned from calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getNumFires()</code> method.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing nested <code style=\"background-color: #ececec; color: black; font-weight: bold;\">if</code> statements.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Causes of Fires",
    "bubble_choice_description": "A researcher wants to compare the number of fires caused by fireworks to the number of fires caused by lightning each year.",
    "thumbnail_url": "https://images.code.org/f69e52ce576aa369dc17c1a8ad1c73bf-fire.png",
    "starter_assets": {
      "fire.png": "709753ec-20b1-436b-b255-2e35704fd927.png"
    },
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nIQ02w0i3lt3t3rDSZqnD+nQcIA==\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Reads the data from the names.txt and causes.txt files into a 1D array of Fire objects\n    Fire[] fires = Fire.createFires(\"names.txt\", \"causes.txt\");\n\n    // Creates a FireData object\n    FireData scene = new FireData(fires);\n    \n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getNumFires() method then pass the result to a call to the \n     * drawResult() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n    // Plays the scene\n    Theater.playScenes(scene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "FireData.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a visualization for fire data\n */\npublic class FireData extends Scene {\n\n  private Fire[] fires;     // The 1D array of Fire objects\n\n  /*\n   * Initializes fires to the specified 1D array of Fire objects\n   */\n  public FireData(Fire[] fires) {\n    this.fires = fires;\n  }\n\n  /*\n   * Returns the 1D array of Fire objects\n   */\n  public Fire[] getFires() {\n    return fires;\n  }\n\n  /*\n   * Returns the number of fires caused by the parameter cause\n   * where the length of the name of the fire is greater than 6\n   */\n  public int getNumFires(String cause) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Count and return the number of fires causes by the parameter cause where\n     * the length of the name of the fire is greater than 6.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    return -1;\n  }\n\n  /*\n   * Draws the result in the scene\n   */\n  public void drawResult(String cause, int count) {\n    int numFires = count;\n    while (numFires > 0) {\n      int randomX = (int)(Math.random() * getWidth());\n      int randomY = (int)(Math.random() * getHeight());\n      drawImage(\"fire.png\", randomX, randomY, 100);\n      pause(0.1);\n      numFires--;\n    }\n\n    pause(0.5);\n    drawText(\"There have been \" + count + \" fires\", 50, 100);\n    drawText(\"caused by \" + cause, 50, 125);\n    drawText(\"where the length of the name\", 50, 150);\n    drawText(\"is greater than 6.\", 50, 175);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Fire.java": {
        "text": "/*\n * Represents a fire event in a city\n */\npublic class Fire {\n\n  private String name;      // The name of a fire\n  private String cause;     // The cause of a fire\n\n  /*\n   * Sets name to the specified name and cause\n   * to the specified cause\n   */\n  public Fire(String name, String cause) {\n    this.name = name;\n    this.cause = cause;\n  }\n\n  /*\n   * Returns the name of the fire\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the cause of the fire\n   */\n  public String getCause() {\n    return cause;\n  }\n\n  /*\n   * Returns a 1D array of Fire objects using the data in the namesFile and causesFile\n   */\n  public static Fire[] createFires(String namesFile, String causesFile) {\n    String[] fireNames = FileReader.toStringArray(namesFile);\n    String[] causes = FileReader.toStringArray(causesFile);\n    Fire[] firesData = new Fire[fireNames.length];\n\n    for (int index = 0; index < firesData.length; index++) {\n      firesData[index] = new Fire(fireNames[index], causes[index]);\n    }\n\n    return firesData;\n  }\n\n  /*\n   * Returns a String containing the name of the fire and its cause\n   */\n  public String toString() {\n    return name + \" - caused by \" + cause;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      },
      "names.txt": {
        "text": "Woodley\nQUEENS BRANCH\nWREN\nRitner Creek\nBig Tamarack\nCOIDC 918\nRAYMOND ROAD\nBLISS\nNorth Canine\nLONG CREEK\n7498 Upper Applegate\nMehl Cr.\nCorkey\nI-5 MP 75\nBoomer Hill\nKelly Creek\nPengra Car Fire\nGP 632\nSmith Road #1\nFIRE WINNEY\nDoubleday\nVandervert\nCB7 AGAIN\nRitter\nMile Post 6 Fire",
        "isVisible": true,
        "tabOrder": 4
      },
      "causes.txt": {
        "text": "Lightning\nMotorist\nMotorist\nLightning\nLightning\nOther-Public\nPublic Utility\nMotorist\nRecreationist\nLightning\nRuralist-Paying\nLightning\nHunter\nMotorist\nLightning\nLightning\nMotorist\nLightning\nRecreationist\nRecreationist\nLightning\nLightning\nLightning\nOther-Public\nOther-Landowner Related",
        "isVisible": true,
        "tabOrder": 5
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T18:51:21.158+00:00\",\"changed\":[\"cloned from \\\"CSA U4L7-Nested If PBT_2023\\\"\"],\"cloned_from\":\"CSA U4L7-Nested If PBT_2023\"},{\"changed_at\":\"2023-02-17 18:51:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-07 21:20:21 +0000\",\"changed\":[\"long_instructions\",\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-15 02:01:29 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:20:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:21:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:21:07 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:22:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:22:53 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:38:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:38:50 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:42:38 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:44:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:44:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:45:01 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:45:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 20:45:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
