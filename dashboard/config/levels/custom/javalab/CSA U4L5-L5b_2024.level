<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T20:58:45.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A city official is planning the construction of a new bridge and wants to estimate the average number of cars that could potentially cross it each day of a month.\r\n\r\n✅ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Simulation.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">generateNumCars()</code> method to return a 1D array containing the number of cars that could cross the bridge each day of a month. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">generateNumCars()</code> method should:\r\n\r\n1. Generate 30 random numbers between 200 and 500.\r\n\r\n2. Assign each number to a 1D <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> array.\r\n\r\n3. Return a 1D <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> array containing the number of cars that could cross the bridge each day of a month.\r\n\r\n✅ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SimulationRunner.java</code>,\r\n\r\n1. Declare and initialize a 1D <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> array that stores the array returned from calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">generateNumCars()</code> method.\r\n\r\n2. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverage()</code> method with the 1D array and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n💡 <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math</code> class in the <strong>Documentation</strong> tab ⬆️ for help using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math.random()</code> method.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">🔦 Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ncreate int array with length 30\r\n&nbsp;\r\nloop from 0 to results.length\r\n&nbsp;&nbsp;numCars = random number between 200 and 500\r\n&nbsp;&nbsp;results[index] = numCars\r\n&nbsp;\r\nreturn results\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Random Simulation",
    "bubble_choice_description": "A city official is planning the construction of a new bridge and wants to estimate the average number of cars that could potentially cross it each day of a month.",
    "thumbnail_url": "https://images.code.org/3069e16c45fdd994de2ecbe6891a1089-bridge.png",
    "encrypted_validation": "Y3IGxMdM67vKAv/tU1AfwS/GqEC2M5DDvN9Q4zs1oT76VnA5hlEQOZ2ggrz1\nlmzi23KJE2hsmXdZpmBKLu2jH1/hMu32whfqauKRwnqKo0M8MRCX9NOA1EIk\nITE+WqIrXVKmkqWEXVjFs5ii0NgfksolvDriJJJkzseLouqEVFcOAUKaKAC4\nJls8xFKjKGUj490alaPIFHMGTGV/lvlyvcceTacqznMP3XXYaquY1OybQnFv\nbsmBMjxNCSxfDZxD1ZxM8MAarSJ/sGTsPNgJKFMA0ChnHLuvrxEFzUYv4UGs\nc0VRaxPJf1KLaLl8qZYAnFwjpMulxnk+rgO0UAtddvWjh70GcFtQeQQ3Q8C2\not8RdnDkpkxtgsAGuw+g1Yn6uuv/+6GJ5jqzOfaEgyPt3OiHaBqcosP/1eUj\nxdxEGdzBfioeTktz8iwQlGvy+EBqpHra3Jx+l7Ak1POZRvZVmNWhbMbGsZSk\n2mLDRkHmjr0U53t1EtnRBF61skadzpXyMHuTWhbfu/EVqLERACfDIGx0gkGp\noaQ9qzFOKbXtD+8cvjE4YqPZQAlCNKsDVYlO6aWm3pkgjeyBXKa70NbReDdC\nHcdWCyYQtmYG2I0vqwy7aYeiUSFDTfmnSzvK7Hybrvkw+a7q5/iVUOoFELVX\npHiR1+zeAsWMpBJ+rNxK7MlGPPkCSbjtql/HUGtSApIleV6Z/VmLNZmkozbA\nsd6IVVOiCRNpPbfHXVKgSaLivjvmhs3NujyFAXh2gfKj5hS7aXWKMhIsvNf1\n7BWMw42oE0Znj59LbPOtizAB9nSKyElfITfy3gvnrkXskSUGV9OGrcdkqYPt\nEz/tw9BTaky+hbDVL+z2bB/a9ab33jc8LbrGQwTeMQwUGBqRaG4SX5umDA2E\n+hVhrdL5aBHPU4L8PaQRKbg250AhfCp4o3X4T5yjZljf/D0McTNhmsPWRDU7\ngs0bz0lGXMgaI6VacUI8uADC9DFLAMXva8s34hozBG8W642uDjlpy9E/jZhN\nkzGM0qEZUgeuRTWbKf/ZNMQ2C7v5MAfD18lZ7mSoxbsIpTxuzuhu1JcZrZbP\njVObUbLlAgaH+az6cgJciAZoRaG10seYnoJwbHKlGChCZ53Koa4WzevKBBlr\nCPivqjhRON1VGodVPaAKlnECJh/SYC5TdSEJYrWA3wlqW90EzY5oBRMPkS5H\nQYLVr2pKJpULIGFWBSZmXw3C1EDE3330SBO+IV5LEAoMqRRnzwLlxDceirRC\nGob7+SkAbX/t5K3kNW1dAUp+xB43JoMCbMDfsVXEBiZ6CvXT5X/xL1LP0uKy\nnUjn6hpt72cBukDWnKck5s9SyTNn4nM2yg/N9Vq8gqm+vR9+0mlxn2wzPFCO\n6x6e1Wq0I4mxBVfMv91qaOlNFyBd5kN0DeFfmD+dn1UBDeWgViC02wRFtOn1\nHYLb2dd5iK0+VWqZ5YKfbJXZ3rQsfLoyDUbQym7SqgNVQM71d7iqvk/1A0M2\ngws3jDykoBfdlYnrtZoTNgYMf6bJC64VI4zCTMTWQzIBp5HA3SsRDu/JQBg9\nOKDriolXs84ar8v9mhwb6pv8ODpl3pT+1oz3PfDd0j88nCLpE/MK/lHAm2I5\nK3i/ejrXV7tehKt5hfv8VUUdjAUah9Gdcv458j5J+jMt\n",
    "encrypted_exemplar_sources": "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\nUQ==\n",
    "start_sources": {
      "SimulationRunner.java": {
        "text": "public class SimulationRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Declare and initialize a 1D int array that stores the array returned from\n     * calling the generateNumCars() method.\n     * -----------------------------------------------------------------------------\n     */\n    \n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Call the calcAverage() method with the 1D array and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Simulation.java": {
        "text": "/*\n * Represents a simulation of a new bridge\n */\npublic class Simulation {\n\n  /*\n   * Returns a 1D array containing the number of cars that could\n   * cross the bridge each day of a month\n   */\n  public static int[] generateNumCars() {\n    /* ------------------------------ TO DO ------------------------------\n     * ✅ Return a 1D array containing the number of cars that could cross\n     *  the bridge each day of a month.\n     * -------------------------------------------------------------------\n     */\n\n    return null;\n  }\n\n  /*\n   * Returns the average of the values in the 1D array\n   */\n  public static int calcAverage(int[] cars) {\n    int sum = 0;\n\n    for (int value : cars) {\n      sum += value;\n    }\n\n    return sum / cars.length;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "video_key": "csa_random_numbers",
    "name_suffix": "_2024"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T20:58:45.636+00:00\",\"changed\":[\"cloned from \\\"CSA U4L5-L5b_2023\\\"\"],\"cloned_from\":\"CSA U4L5-L5b_2023\"}]"
}]]></config>
</Javalab>
