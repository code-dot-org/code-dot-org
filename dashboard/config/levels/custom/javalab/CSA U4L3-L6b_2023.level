<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-02-17T18:32:20.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A physician is in need of a quick way to determine which of their patients might be sick based on their body temperature. A person's normal body temperature is supposed to be 98.6 degrees and shouldn't be more than 0.5 degrees from the norm.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Physician.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getSickPatients()</code> method to find and return the number of patients with temperatures that are more than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0.5</code> degrees from the norm. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getSickPatients()</code> method should:\r\n\r\n1. Traverse the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">patients</code> array.\r\n\r\n2. Check if the result of each patient's temperature minus <code style=\"background-color: #ececec; color: black; font-weight: bold;\">98.6</code> is greater than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0.5</code>. If this is true, add one to the count.\r\n\r\n3. Return the number of patients with temperatures that are more than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0.5</code> degrees from normal.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PhysicianRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getSickPatients()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math.abs()</code> method.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ncount = 0\r\n&nbsp;\r\nloop from 0 to patients.length\r\n  if (abs value of patients[index].getTemp() - 98.6 > 0.5)\r\n    count++\r\n&nbsp;\r\nreturn count\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Normal Body Temperatures",
    "bubble_choice_description": "Help a physician quickly determine how many of their patients might be sick based on their body temperature.",
    "thumbnail_url": "https://images.code.org/6145963a1347c949a5cc98d28856da46-sick.png",
    "encrypted_validation": "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\nAb9aYUaCdkoBzf0b\n",
    "encrypted_exemplar_sources": "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\nglAeWTO2yHdHUw==\n",
    "start_sources": {
      "PhysicianRunner.java": {
        "text": "public class PhysicianRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Patient objects\n    Patient[] patients = {new Patient(\"Olivia\", 98.2), new Patient(\"Liam\", 98.9), new Patient(\"Ava\", 102.3),\n                          new Patient(\"Ethan\", 98.4), new Patient(\"Isabella\", 99.6)};\n\n    // Creates a Physician object\n    Physician doctor = new Physician(patients);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getSickPatients() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Physician.java": {
        "text": "/*\n * Represents a physician\n */\npublic class Physician {\n\n  private Patient[] patients;     // A physician's patients\n\n  /*\n   * Initializes patients to the specified 1D array of patients\n   */\n  public Physician(Patient[] patients) {\n    this.patients = patients;\n  }\n\n  /*\n   * Returns the 1D array of patients\n   */\n  public Patient[] getPatients() {\n    return patients;\n  }\n\n  /*\n   * Finds and returns the number of patients with temperatures\n   * that are more than 0.5 degrees from the norm\n   */\n  public int getSickPatients() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the patients array and check if their temperature minus 98.6 is\n     * greater than 0.5. If this is true, update the count. Return the number of\n     * patients with temperatures that are more than 0.5 degrees from normal.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n\n    return 0;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Patient.java": {
        "text": "/*\n * Represents a patient\n */\npublic class Patient {\n\n  private String name;    // The name of a patient\n  private double temp;    // The temperature of a patient\n\n  /*\n   * Sets name and temp to the specified values\n   */\n  public Patient(String name, double temp) {\n    this.name = name;\n    this.temp = temp;\n  }\n\n  /*\n   * Returns the name of the patient\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the temperature of the patient\n   */\n  public double getTemp() {\n    return temp;\n  }\n\n  /*\n   * Returns a String containing the patient's name and temperature\n   */\n  public String toString() {\n    return name + \" - \" + temp;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T18:32:20.679+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L6a_2023\\\"\"],\"cloned_from\":\"CSA U4L3-L6a_2023\"},{\"changed_at\":\"2023-02-17 18:32:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-09 15:46:33 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:02:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:02:37 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:08:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:08:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:09:01 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:09:49 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:10:10 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:10:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:10:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-14 02:04:45 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
