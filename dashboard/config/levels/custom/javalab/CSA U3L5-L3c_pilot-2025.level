<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T15:22:28.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://www.kaggle.com/datasets/laibaanwer/superstore-sales-dataset\" target=\"_blank\">**Store Profits dataset**</a> includes the profits a store made each day of a month. The profits made each day are stored in a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> array called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">storeProfits</code>.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Store.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalProfits()</code> method to calculate and return the total profits made by the store in the month.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">DataRunner.java</code>,\r\n\r\n1. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader.toDoubleArray()</code> method with the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"storeprofits.txt\"</code> file and store the result in a 1D array.\r\n\r\n2. Instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Store</code> object with the 1D array containing the daily profits data.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalProfits()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array using a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ntotalProfits = 0\r\nloop from 0 to end of storeProfits\r\n  totalProfits += storeProfits[index]\r\nreturn totalProfits\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ What is the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \r\n    <p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class is a hidden support class that has methods for reading data from a text file into a 1D array. It has the following methods:</p>\r\n\t\t<ul>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containng the data</li>\r\n\t\t</ul>\r\n    \t<p>For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nString[] names = FileReader.toStringArray(\"names.txt\");\r\n \r\nint[] numbers = FileReader.toIntArray(\"numbers.txt\");\r\n \r\ndouble[] prices = FileReader.toDoubleArray(\"prices.txt\");</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Profits",
    "bubble_choice_description": "The Store Profits dataset includes the profits a store made each day of a month. Write the `calcTotalProfits()` method to calculate and return the **total** profits made by the store in the month.",
    "thumbnail_url": "https://images.code.org/e7d2d33d6049fd84d47b383e3f044aae-store.png",
    "reference_links": [
      "/courses/csa-2023/guides/for-loops"
    ],
    "project_template_level_name": "CSA U3L5-ChoiceC_pilot-2025",
    "encrypted_validation": "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\n",
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the FileReader.toDoubleArray() to read the storeProfits.txt file and\n     * store the result in a 1D array. Instantiate a Store object with the 1D array,\n     * then call the calcTotalProfits() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcAverageProfits() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Store.java": {
        "text": "/*\n * Manages data about store profits\n */\npublic class Store {\n\n  private String name;              // The name of the store\n  private double[] storeProfits;    // The 1D array of the profits a store made each day\n\n  /*\n   * Sets name to the specified name of the store and initializes storeProfits\n   * to the specified 1D array of the profits a store made each day\n   */\n  public Store(String name, double[] storeProfits) {\n    this.name = name;\n    this.storeProfits = storeProfits;\n  }\n\n  /*\n   * Returns the name of the store\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the profits for the day at the specified index\n   */\n  public String getProfitsInfo(int index) {\n    return \"Profits made: \" + storeProfits[index];\n  }\n\n  /*\n   * Returns the total profits made by the store\n   */\n  public double calcTotalProfits() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse storeProfits to calculate and return the total profits made.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    return -1;\n  }\n\n  /*\n   * Returns the average profits made by the store each day \n   */\n  public double calcAverageProfits() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calculate and return the average profits made by the store each day.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    return -1;\n  }\n\n  /*\n   * Returns a String containing the profits the store made each day\n   */\n  public String toString() {\n    String result = name + \"'s Daily Profits\\n----------\\n\";\n\n    for (int index = 0; index < storeProfits.length; index++) {\n      result += \"Day \" + (index + 1) + \": \" + storeProfits[index] + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "storeProfits.txt": {
        "text": "-16.28\n2121.66\n598.28\n421.13\n-256.02\n1572.71\n1373.42\n1474.12\n3427.62\n772.90\n6438.50\n1082.35",
        "isVisible": true,
        "tabOrder": 2
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T15:22:28.874+00:00\",\"changed\":[\"cloned from \\\"CSA U3L5-L3c_2025\\\"\"],\"cloned_from\":\"CSA U3L5-L3c_2025\"}]"
}]]></config>
</Javalab>
