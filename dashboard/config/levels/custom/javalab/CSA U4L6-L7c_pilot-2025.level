<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T16:55:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "‚úÖ **TO DO:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player.java</code>, override the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">equals()</code> method to check if two <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> objects have the same position. If both <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> objects have the same position, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code>, otherwise return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code>.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Object</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help overriding and using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">equals()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Baseball Players",
    "bubble_choice_description": "Override the `equals()` method in the `Player` class to check if two `Player` objects have the same position.",
    "thumbnail_url": "https://images.code.org/482b7ecb79120d004ef820e3eba97e2d-baseball.png",
    "encrypted_validation": "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\ndKUxliQV\n",
    "start_sources": {
      "Player.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Represents a baseball player\n */\npublic class Player {\n\n  private String name;      // The name of a player\n  private String position;  // The position of a player\n\n  /*\n   * Sets name to the specified name and position\n   * to the specified position\n   */\n  public Player(String name, String position) {\n    this.name = name;\n    this.position = position;\n  }\n\n  /*\n   * Returns the name of the player\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the position of the player\n   */\n  public String getPosition() {\n    return position;\n  }\n\n  /*\n   * Returns true if this Player has the same position as other\n   */\n  public boolean equals(Object other) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Return true if other points to the same object as this object, and\n     * return false if other is not a Player. If neither of these conditions\n     * are true, cast other as a Player and return true if this object's position\n     * is the same as the other object's position. Otherwise, return false.\n     * -----------------------------------------------------------------------------\n     */\n\n    return false;\n  }\n\n  /*\n   * Returns a String containing the name and position of the player\n   */\n  public String toString() {\n    return name + \": \" + position;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "TeamRunner.java": {
        "text": "public class TeamRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Player objects\n    Player[] players = {new Player(\"Mike Trout\", \"Center Fielder\"), new Player(\"Clayton Kershaw\", \"Starting Pitcher\"),\n                        new Player(\"Aaron Judge\", \"Right Fielder\"), new Player(\"Mookie Betts\", \"Right Fielder\"),\n                        new Player(\"Salvador Perez\", \"Catcher\")};\n\n    // Creates a Team object\n    Team baseball = new Team(players);\n\n    // Creates a new Player object\n    Player max = new Player(\"Max Scherzer\", \"Starting Pitcher\");\n\n    // Calls the getSamePositions() method and prints the results\n    System.out.println(baseball.getSamePositions(max));\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Team.java": {
        "text": "/*\n * Represents a team\n */\npublic class Team {\n\n  private Player[] players;     // The 1D array of Player objects\n\n  /*\n   * Initializes players to the specified 1D array of Player objects\n   */\n  public Team(Player[] players) {\n    this.players = players;\n  }\n\n  /*\n   * Returns the 1D array of players\n   */\n  public Player[] getPlayers() {\n    return players;\n  }\n\n  /*\n   * Returns a String containing the names of each player\n   * that has the same position as other\n   */\n  public String getSamePositions(Player other) {\n    String result = \"\";\n\n    for (int index = 0; index < players.length; index++) {\n      if (players[index].equals(other)) {\n        result += players[index] + \"\\n\";\n      }\n    }\n\n    if (result.equals(\"\")) {\n      result = \"No players found.\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_exemplar_sources": "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\nIKCnVsHUNnHyvH6xJv3LtoZ/IsvyVWzy\n",
    "video_key": "csa_the_equals_method",
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T16:55:04.139+00:00\",\"changed\":[\"cloned from \\\"CSA U4L6-L7c_2025\\\"\"],\"cloned_from\":\"CSA U4L6-L7c_2025\"}]"
}]]></config>
</Javalab>
