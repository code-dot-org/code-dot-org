<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T21:04:55.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Stop word removal is the process of removing commonly used words from a list before or after processing text.\r\n\r\nA search engine wants to use stop word removal to improve the accuracy of its search results by removing stop words from the list of query words. Stop words are read from a text file into an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">stopWords</code>. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SearchEngine</code> class has an instance variable called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">queryWords</code>, which is an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> that stores the list of words entered by the user into the search engine.\r\n\r\nâœ… **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SearchEngine</code> class, write the method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">removeStopWords()</code> to find and remove all occurrences of each stop word in the search query words.\r\n\r\nâœ… **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SearchEngineRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">removeStopWords()</code> method and print the updated <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SearchEngine</code> object.\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">ðŸ”¦ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nloop through the list of query words\r\n  get the current query word\r\n&nbsp;\r\n  loop through the list of stop words\r\n    get the current stop word\r\n&nbsp;\r\n    if the query word equals the stop word\r\n      remove the query word from query words list\r\n      decrement query words loop control variable\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Search Results",
    "bubble_choice_description": "A search engine wants to use stop word removal to improve the accuracy of its search results.",
    "thumbnail_url": "https://images.code.org/2b8b2b851973224c1741ee8536a71b62-google.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nzoPDQlmERSb8LDpp4vtcQtnvQg==\n",
    "start_sources": {
      "SearchEngineRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class SearchEngineRunner {\n  public static void main(String[] args) {\n\n    // Creates a list of query words\n    ArrayList<String> queryWords = new ArrayList<>();\n    queryWords.add(\"the\");\n    queryWords.add(\"quick\");\n    queryWords.add(\"brown\");\n    queryWords.add(\"fox\");\n    queryWords.add(\"jumps\");\n    queryWords.add(\"over\");\n    queryWords.add(\"the\");\n    queryWords.add(\"lazy\");\n    queryWords.add(\"dog\");\n\n    // Creates a SearchEngine object    \n    SearchEngine engine = new SearchEngine(queryWords);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… Call the removeStopWords() method and print the updated SearchEngine object.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "SearchEngine.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a search engine\n */\npublic class SearchEngine {\n  \n  private ArrayList<String> queryWords;      // The words in the search query\n  \n  /*\n   * Initializes queryWords to the specified list of query words\n   */\n  public SearchEngine(ArrayList<String> queryWords) {\n    this.queryWords = queryWords;\n  }\n\n  /*\n   * Returns the list of query words\n   */\n  public ArrayList<String> getQueryWords() {\n    return queryWords;\n  }\n  \n  /*\n   * Finds and removes all occurrences of each stop word from the queryWords list\n   */\n  public void removeStopWords() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… Traverse the list of query words and check if each word matches any of\n     * the stop words. If a query word matches a stop word, remove the query word\n     * from the list of query words.\n     * -----------------------------------------------------------------------------\n     */\n\n    ArrayList<String> stopWords = FileReader.toStringList(\"stopwords.txt\");\n\n    \n\n    \n  }\n  \n  /*\n   * Returns a String containing each word in queryWords\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (int index = 0; index < queryWords.size(); index++) {\n      result += queryWords.get(index) + \"\\n\";\n    }\n\n    return result;\n  }\n\n}\n",
        "isVisible": true,
        "tabOrder": 1
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static ArrayList<String> toStringList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    return temp;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static ArrayList<Integer> toIntList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    ArrayList<Integer> data = new ArrayList<Integer>();\n\n    for (int index = 0; index < temp.size(); index++) {\n      String currentValue = temp.get(index);\n      data.add(Integer.parseInt(currentValue));\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  public static ArrayList<Double> toDoubleList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    ArrayList<Double> data = new ArrayList<Double>();\n\n    for (int index = 0; index < temp.size(); index++) {\n      String currentValue = temp.get(index);\n      data.add(Double.parseDouble(currentValue));\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      },
      "stopwords.txt": {
        "text": "a\nan\nand\nthe\nis\nin\nto\nat\nthat\nthis\nfor\non\nof\nwith\nare\nbe\nor\nnot\nfrom\nby\nbut\nwhich\nas\nit\nabout\ntheir\nthey\nour\nwe\nus\nyou\nyour\nwas\nwere\nhas\nhave\nhad\nwill\nwould\ncan\ncould\nshould\nshall\nmay\nmight\nmust\nsome\nany\nmany\nmuch\nfew\nevery\none\ntwo\nthree\nfour\nfive\nsix\nseven\neight\nnine\nten",
        "isVisible": true,
        "tabOrder": 3
      }
    },
    "name_suffix": "_2024"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:04:55.402+00:00\",\"changed\":[\"cloned from \\\"CSA U6L9-L6a_2023\\\"\"],\"cloned_from\":\"CSA U6L9-L6a_2023\"}]"
}]]></config>
</Javalab>
