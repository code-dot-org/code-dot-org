<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-01-13T17:56:53.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "**User Story B:** As a manager of a technology non-profit organization, I want to find the areas that have low internet access so I can focus my team's efforts.\r\n\r\n**Possible Extensions:** I would like to consider multiple datasets.\r\n\r\nâœ… **TO DO:** Use your knowledge of object-oriented programming, one-dimensional (1D) arrays, and algorithms to create your data analysis program:\r\n\r\n1. **Write a class** - Write a class to represent your user or business and store and analyze their data with no-argument and parameterized constructors.\r\n\r\n2. **Create at least two 1D arrays** - Create at least two 1D arrays to store the data that your user needs information about.\r\n\r\n3. **Write a method** - Write a method that finds or manipulates the elements in a 1D array to provide the information your user needs.\r\n\r\n4. **Implement a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toString()</code> method** - Write a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toString()</code> method that returns general information about the data (for example, number of values in the dataset).\r\n\r\n5. **Document your code** - Use comments to explain the purpose of the methods and code segments and note any preconditions and postconditions.\r\n\r\n### FileReader Methods\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containing the data",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "DataRunner.java": {
        "text": "import java.util.Scanner;\n\npublic class DataRunner {\n  public static void main(String[] args) {\n\n    \n\n\n\n\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "UserStory.java": {
        "text": "import java.util.Scanner;\n\npublic class UserStory {\n\n\n\n\n\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "countries.txt": {
        "text": "Afghanistan\nAlbania\nAlgeria\nAmerican Samoa\nAndorra\nAngola\nAntigua and Barbuda\nArgentina\nArmenia\nAruba\nAustralia\nAustria\nAzerbaijan\nBahamas, The\nBahrain\nBangladesh\nBarbados\nBelarus\nBelgium\nBelize\nBenin\nBermuda\nBhutan\nBolivia\nBosnia and Herzegovina\nBotswana\nBrazil\nBritish Virgin Islands\nBrunei Darussalam\nBulgaria\nBurkina Faso\nBurundi\nCabo Verde\nCambodia\nCameroon\nCanada\nCayman Islands\nCentral African Republic\nChad\nChile\nChina\nColombia\nComoros\nCongo, Dem. Rep.\nCongo, Rep.\nCosta Rica\nCote d'Ivoire\nCroatia\nCuba\nCuracao\nCyprus\nCzech Republic\nDenmark\nDjibouti\nDominica\nDominican Republic\nEcuador\nEgypt, Arab Rep.\nEl Salvador\nEquatorial Guinea\nEritrea\nEstonia\nEswatini\nEthiopia\nFaroe Islands\nFiji\nFinland\nFrance\nFrench Polynesia\nGabon\nGambia, The\nGeorgia\nGermany\nGhana\nGibraltar\nGreece\nGreenland\nGrenada\nGuam\nGuatemala\nGuinea\nGuinea-Bissau\nGuyana\nHaiti\nHonduras\nHong Kong SAR, China\nHungary\nIceland\nIndia\nIndonesia\nIran, Islamic Rep.\nIraq\nIreland\nIsle of Man\nIsrael\nItaly\nJamaica\nJapan\nJordan\nKazakhstan\nKenya\nKiribati\nKorea, Dem. People's Rep.\nKorea, Rep.\nKuwait\nKyrgyz Republic\nLao PDR\nLatvia\nLebanon\nLesotho\nLiberia\nLibya\nLiechtenstein\nLithuania\nLuxembourg\nMacao SAR, China\nMadagascar\nMalawi\nMalaysia\nMaldives\nMali\nMalta\nMarshall Islands\nMauritania\nMauritius\nMexico\nMicronesia, Fed. Sts.\nMoldova\nMonaco\nMongolia\nMontenegro\nMorocco\nMozambique\nMyanmar\nNamibia\nNauru\nNepal\nNetherlands\nNew Caledonia\nNew Zealand\nNicaragua\nNiger\nNigeria\nNorth Macedonia\nNorthern Mariana Islands\nNorway\nOman\nPakistan\nPalau\nPanama\nPapua New Guinea\nParaguay\nPeru\nPhilippines\nPoland\nPortugal\nPuerto Rico\nQatar\nRomania\nRussian Federation\nRwanda\nSamoa\nSan Marino\nSao Tome and Principe\nSaudi Arabia\nSenegal\nSerbia\nSeychelles\nSierra Leone\nSingapore\nSint Maarten (Dutch part)\nSlovak Republic\nSlovenia\nSolomon Islands\nSomalia\nSouth Africa\nSouth Sudan\nSpain\nSri Lanka\nSt. Kitts and Nevis\nSt. Lucia\nSt. Martin (French part)\nSt. Vincent and the Grenadines\nSudan\nSuriname\nSweden\nSwitzerland\nSyrian Arab Republic\nTajikistan\nTanzania\nThailand\nTimor-Leste\nTogo\nTonga\nTrinidad and Tobago\nTunisia\nTurkey\nTurkmenistan\nTurks and Caicos Islands\nTuvalu\nUganda\nUkraine\nUnited Arab Emirates\nUnited Kingdom\nUnited States\nUruguay\nUzbekistan\nVanuatu\nVenezuela, RB\nVietnam\nVirgin Islands (U.S.)\nWest Bank and Gaza\nYemen, Rep.\nZambia\nZimbabwe",
        "isVisible": true,
        "tabOrder": 2
      },
      "incomes.txt": {
        "text": "Low Income\nUpper Middle Income\nUpper Middle Income\nUpper Middle Income\nHigh Income\nLower Middle Income\nHigh Income\nUpper Middle Income\nUpper Middle Income\nHigh Income\nHigh Income\nHigh Income\nUpper Middle Income\nHigh Income\nHigh Income\nLower Middle Income\nHigh Income\nUpper Middle Income\nHigh Income\nUpper Middle Income\nLow Income\nHigh Income\nLower Middle Income\nLower Middle Income\nUpper Middle Income\nUpper Middle Income\nUpper Middle Income\nHigh Income\nHigh Income\nUpper Middle Income\nLow Income\nLow Income\nLower Middle Income\nLower Middle Income\nLower Middle Income\nHigh Income\nHigh Income\nLow Income\nLow Income\nHigh Income\nUpper Middle Income\nUpper Middle Income\nLower Middle Income\nLow Income\nLower Middle Income\nUpper Middle Income\nLower Middle Income\nHigh Income\nUpper Middle Income\nHigh Income\nHigh Income\nHigh Income\nHigh Income\nLower Middle Income\nUpper Middle Income\nUpper Middle Income\nUpper Middle Income\nLower Middle Income\nLower Middle Income\nUpper Middle Income\nLow Income\nHigh Income\nLower Middle Income\nLow Income\nHigh Income\nupper Middle Income\nHigh Income\nHigh Income\nHigh Income\nUpper Middle Income\nLow Income\nUpper Middle Income\nHigh Income\nLower Middle Income\nHigh Income\nHigh Income\nHigh Income\nUpper Middle Income\nHigh Income\nUpper Middle Income\nLow Income\nLow Income\nUpper Middle Income\nLow Income\nLower Middle Income\nHigh Income\nHigh Income\nHigh Income\nLower Middle Income\nLower Middle Income\nUpper Middle Income\nUpper Middle Income\nHigh Income\nHigh Income\nHigh Income\nHigh Income\nUpper Middle Income\nHigh Income\nUpper Middle Income\nUpper Middle Income\nLower Middle Income\nLower Middle Income\nLow Income\nHigh Income\nHigh Income\nLower Middle Income\nLower Middle Income\nHigh Income\nUpper Middle Income\nLower Middle Income\nLow Income\nUpper Middle Income\nHigh Income\nHigh Income\nHigh Income\nHigh Income\nLow income\nLow Income\nUpper Middle Income\nUpper Middle Income\nLow Income\nHigh Income\nUpper Middle Income\nLower Middle Income\nUpper Middle Income\nUpper Middle Income\nLower Middle Income\nLower Middle Income\nHigh Income\nLower Middle Income\nUpper Middle Income\nLower Middle Income\nLow Income\nLower Middle Income\nUpper Middle Income\nUpper Middle Income\nLow Income\nHigh Income\nHigh Income\nHigh Income\nLower Middle Income\nLow Income\nLower Middle Income\nUpper Middle Income\nHigh Income\nHigh Income\nHigh Income\nLower Middle Income\nHigh Income\nHigh Income\nLower Middle Income\nUpper Middle Income\nUpper Middle Income\nLower Middle Income\nHigh Income\nHigh Income\nHigh Income\nHigh Income\nUpper Middle Income\nUpper Middle Income\nLow Income\nUpper Middle Income\nHigh Income\nLower Middle Income\nHigh Income\nLower Middle Income\nUpper Middle Income\nHigh Income\nLow Income\nHigh Income\nHigh Income\nHigh Income\nHigh Income\nLower Middle Income\nLow Income\nUpper Middle Income\nLow Income\nHigh Income\nUpper Middle Income\nHigh Income\nUpper Middle Income\nHigh Income\nUpper Middle Income\nLower Middle Income\nUpper Middle Income\nHigh Income\nHigh Income\nLow Income\nLow Income\nLow Income\nUpper Middle Income\nLower Middle Income\nLow Income\nUpper Middle Income\nHigh Income\nLower Middle Income\nUpper Middle Income\nUpper Middle Income\nHigh Income\nUpper Middle Income\nLow Income\nLower Middle Income\nHigh Income\nHigh Income\nHigh Income\nHigh Income\nLower Middle Income\nLower Middle Income\nUpper Middle Income\nLower Middle Income\nHigh Income\nLower Middle Income\nLow Income\nLower Middle Income\nLower Middle Income",
        "isVisible": true,
        "tabOrder": 3
      },
      "populations.txt": {
        "text": "37172386\n2866376\n42228429\n55465\n77006\n30809762\n96286\n44494502\n2951776\n105845\n24982688\n8840521\n9939800\n385640\n1569439\n161356039\n286641\n9483499\n11433256\n383071\n11485048\n63973\n754394\n11353142\n3323929\n2254126\n209469333\n29802\n428962\n7025037\n19751535\n11175378\n543767\n16249798\n25216237\n37057765\n64174\n4666377\n15477751\n18729160\n1392730000\n49648685\n832322\n84068091\n5244363\n4999441\n25069229\n4087843\n11338138\n159800\n1189265\n10629928\n5793636\n958920\n71625\n10627165\n17084357\n98423595\n6420744\n1308974\n3213972\n1321977\n1136191\n109224559\n48497\n883483\n5515525\n66977107\n277679\n2119275\n2280102\n3726549\n82905782\n29767108\n33718\n10731726\n56025\n111454\n165768\n17247807\n12414318\n1874309\n779004\n11123176\n9587522\n7451000\n9775564\n352721\n1352617328\n267663435\n81800269\n38433600\n4867309\n84077\n8882800\n60421760\n2934855\n126529100\n9956011\n18272430\n51393010\n115847\n25549819\n51606633\n4137309\n6322800\n7061507\n1927174\n6848925\n2108132\n4818977\n6678567\n37910\n2801543\n607950\n631636\n26262368\n18143315\n31528585\n515696\n19077690\n484630\n58413\n4403319\n1265303\n126190788\n112640\n2706049\n38682\n3170208\n622227\n36029138\n29495962\n53708395\n2448255\n12704\n28087871\n17231624\n284060\n4841000\n6465513\n22442948\n195874740\n2082958\n56882\n5311916\n4829483\n212215030\n17907\n4176873\n8606316\n6956071\n31989256\n106651922\n37974750\n10283822\n3195153\n2781677\n19466145\n144478050\n12301939\n196130\n33785\n211028\n33699947\n15854360\n6982604\n96762\n7650154\n5638676\n40654\n5446771\n2073894\n652858\n15008154\n57779622\n10975920\n46796540\n21670000\n52441\n181889\n37264\n110210\n41801533\n575991\n10175214\n8513227\n16906283\n9100837\n56318348\n69428524\n1267972\n7889094\n103197\n1389858\n11565204\n82319724\n5850908\n37665\n11508\n42723139\n44622516\n9630959\n66460344\n326687501\n3449299\n32955400\n292680\n28870195\n95540395\n106977\n4569087\n28498687\n17351822\n14439018",
        "isVisible": true,
        "tabOrder": 4
      },
      "unemployment.txt": {
        "text": "11.18\n13.75\n13.57\n9.2\n3.7\n7.36\n8.42\n9.22\n17.7\n8.9\n5.16\n4.85\n4.9\n12.7\n1.2\n4.37\n9.72\n4.76\n5.95\n6.6\n2.65\n8.94\n2.45\n3.52\n15.69\n17.86\n11.93\n2.9\n8.7\n5.21\n6.48\n1.57\n12.17\n0.72\n3.53\n5.66\n4.24\n5.6\n5.9\n7.23\n3.8\n9.11\n8.14\n4.49\n10\n11.49\n3.27\n8.43\n2.4\n13.43\n8.37\n2.24\n4.97\n5.8\n10.96\n5.86\n3.81\n11.74\n4.01\n8.1\n5.1\n5.37\n22.72\n2.25\n3.7\n4.32\n7.36\n9.06\n11.74\n20.39\n9.42\n12.67\n3.38\n4.22\n1\n19.29\n9.1\n22.9\n5.4\n2.46\n4.55\n6\n14.02\n14.1\n5.65\n3.09\n3.71\n2.7\n5.33\n4.4\n12.06\n13.02\n5.74\n2.67\n4\n10.61\n7.72\n2.4\n15.27\n4.9\n2.76\n9.33\n4.7\n3.82\n2.16\n4.54\n9.41\n7.41\n6.35\n24.58\n3.08\n19.03\n2.01\n6.15\n5.59\n2\n1.79\n28.67\n3.3\n6.12\n1.62\n3.66\n4.74\n10.34\n6.43\n3.48\n8.86\n2.98\n6.33\n5.38\n15.17\n9.3\n3.43\n0.87\n19.88\n13.28\n11.36\n3.83\n14.59\n4.3\n4.52\n7.77\n8.39\n20.74\n11.17\n3.8\n1.8\n4.08\n1.36\n3.89\n2.62\n6.22\n6.43\n2.34\n3.85\n6.99\n8.27\n0.11\n4.19\n4.85\n15.11\n14.47\n6.45\n13.59\n6.04\n6.76\n12.73\n3.53\n4.68\n4.2\n9.9\n6.54\n5.11\n0.69\n5.9\n28.47\n12.15\n15.25\n4.05\n5.12\n21.26\n12\n18.79\n17.44\n7.22\n6.35\n4.71\n8.61\n6.9\n2.12\n0.77\n4.66\n3.74\n3.07\n3.21\n15.46\n10.89\n4\n8.3\n8.49\n9.44\n8.8\n2.23\n4\n3.9\n8.34\n9.3\n1.85\n6.6\n2\n7\n26.26\n13.47\n11.63\n4.77",
        "isVisible": true,
        "tabOrder": 5
      },
      "internetpercent.txt": {
        "text": "13.5\n71.85\n49.04\n-1\n91.57\n14.34\n76\n74.29\n64.74\n97.17\n86.55\n87.48\n79.8\n85\n98.64\n15\n81.76\n79.13\n88.66\n47.08\n20\n98.37\n48.11\n44.29\n70.12\n47\n70.43\n77.7\n94.87\n64.78\n16\n2.66\n57.16\n40\n23.2\n91\n81.07\n4.34\n6.5\n82.33\n54.3\n64.13\n8.48\n8.62\n8.65\n74.09\n46.82\n75.29\n57.15\n68.13\n84.43\n80.69\n97.32\n55.68\n69.62\n74.82\n57.27\n46.92\n33.82\n26.24\n1.31\n89.36\n47\n18.62\n97.58\n49.97\n88.89\n82.04\n72.7\n62\n19.84\n62.72\n89.74\n39\n94.44\n72.95\n69.48\n59.07\n80.51\n65\n18\n3.93\n37.33\n32.47\n31.7\n90.51\n76.07\n99.01\n34.45\n39.9\n70\n75\n84.52\n-1\n83.73\n74.39\n55.07\n91.28\n66.79\n78.9\n17.83\n14.58\n-1\n96.02\n99.6\n38\n25.51\n83.58\n78.18\n29\n7.98\n21.76\n98.1\n79.72\n97.06\n83.79\n9.8\n13.78\n81.2\n63.19\n13\n81.66\n38.7\n20.8\n58.6\n65.77\n35.3\n76.12\n97.05\n47.16\n71.52\n64.8\n10\n30.68\n51\n57\n34\n94.71\n82.01\n90.81\n27.86\n5.25\n42\n79.17\n-1\n96.49\n80.19\n15.51\n-1\n57.87\n11.21\n64.99\n52.54\n60.05\n77.54\n74.66\n70.6\n99.65\n70.68\n80.86\n21.77\n33.61\n60.18\n29.93\n93.31\n46\n73.36\n58.77\n9\n88.17\n-1\n80.66\n79.75\n11.92\n2\n56.17\n7.98\n86.11\n34.11\n80.71\n50.82\n-1\n22.39\n30.87\n48.95\n92.14\n89.69\n34.25\n21.96\n25\n56.82\n27.49\n12.36\n41.25\n77.33\n64.19\n71.04\n21.25\n-1\n49.32\n23.71\n62.55\n98.45\n94.9\n87.27\n74.77\n55.2\n25.72\n72\n70.35\n64.38\n64.4\n26.72\n14.3\n27.06",
        "isVisible": true,
        "tabOrder": 6
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 7
      }
    },
    "display_name": "User Story B",
    "bubble_choice_description": "As a manager of a technology non-profit organization, I want to find the areas that have low internet access so I can focus my team's efforts.",
    "thumbnail_url": "https://images.code.org/8c05d75debc3df0dafb6d53478a7ec09-1a1f7bf7ddbf3dc458c9e813900bbfe5-image-1648762676145.png",
    "encrypted_exemplar_sources": "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\nLoc01pjXTQoF7ZB/ncALq5I22BkrwJh3V0I=\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-01-13T17:56:53.678+00:00\",\"changed\":[\"cloned from \\\"CSA U3 Data for Social Good Project B_2023\\\"\"],\"cloned_from\":\"CSA U3 Data for Social Good Project B_2023\"},{\"changed_at\":\"2023-01-13 17:56:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-13 18:00:01 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-31 14:30:43 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-31 14:32:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-31 14:32:21 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-31 14:32:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-22 16:23:31 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 17:34:18 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
