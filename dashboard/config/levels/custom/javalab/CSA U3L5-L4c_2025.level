<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:52:36.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://www.kaggle.com/datasets/laibaanwer/superstore-sales-dataset\" target=\"_blank\">**Store Profits dataset**</a> includes the profits a store made each day of a month. The profits made each day are stored in a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> array called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">storeProfits</code>.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Store.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageProfits()</code> method to calculate and return the average profits made by the store each day in the month.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">DataRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageProfits()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array using a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The average is found by dividing the sum by the number of values. You already have a way to get the sum of the values in the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">storeProfits</code>!</p>\r\n        <p>Use the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalProfits()</code> method to get the sum and divide the result by the length of the 1D array to find the average.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ntotalProfits = calcTotalProfits()\r\naverage = totalProfits / storeProfits.length\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Profits",
    "bubble_choice_description": "The Store Profits dataset includes the profits a store made each day of a month. Write the `calcAverageProfits()` method to calculate and return the **average** profits made by the store each day in the month.",
    "thumbnail_url": "https://images.code.org/e7d2d33d6049fd84d47b383e3f044aae-store.png",
    "reference_links": [
      "/courses/csa-2023/guides/for-loops"
    ],
    "project_template_level_name": "CSA U3L5-ChoiceC_2025",
    "encrypted_exemplar_sources": "g6Pb055tyTK+poVLoFdG2QuBf0aAMGCnmYJ9UshSWn85yikUJsKLGsgQD7Jb\nF6YkGroRiFJfPUx04YNKJYl2lS1EmgLHMndAQwGeGot6BCO0Hj2D40qghSbO\nNGd4xCgLGXBzmJdhmS4WrP5QTOqclLj78R+FPTZtHR+bk6g+2FrgCaQ5QPvx\nvQMT1pFbv/+vZXq6BuWLz0d0B18u7zHVIR69qIz6Xt4rUBzztqghhZzOH0W/\n51xrXbS4qLCNGme4cP3ks8S97SOozEQOMFaPineahzl9chNMvLRqzSPsmQHR\nu+uy99xlSqYPj8s5wAP/Z/22tbpMCbRi1sSQ0TBCfoVA+dJGFvXb81E/PKjq\nrdl3z5gQykBNFY5tsNxag0+cgzPAWykyOfRJ+2ptI6vJ2/7kgNGuzeI5ZyKe\nlv1zaVfyyr1ersBQrpfSRl4EV0ou0tfsr76RgnL58ygzAc+xbVwuj2rC3y2z\nQmLi1xiqbdgVVa9yLDu5wJOPhhMzHcXq9IGiolBzSFBPbp2tpOQISREviqC1\ntlq9Wvzehf/DObAcIGMdKJZjhgN/f/IwMx8FyrVEFIRjysnmuhPoEMtFCtJo\nuG2AfojhhuQ2jeJwrIxYjWsm6Kp8FYdJ06QzReTu6mpvcGYlPmeastx84pJu\n3X+hvOz6dljsuL/qO/IwVd7stEHi9LHoMhnphHgsrKt985c2ytY/HNCI+TvH\n5ErF+7NV3VPQiIeyCOcmlTlulGsKTUggR29GxzWDDPRRdI4iFZQoh4+y1x4x\nKXJFu704TOW22zNON4tQk4Auk+abMFQbPSODb+s+31iM35jvIT1NGbgJAM9Y\nnJL+RsnumALzuQUHQehImnQATBq99o6Fh0X2q1mSKGyo4Gwbag2uJHgAlIuB\nhDwatY6QTeMDOeHcX2xDRwQ2oKLK7qycG+LGLPnTyMcEXwv0j2yWEzud03ob\nx2tO5BPGJV08Gkq9v5NFlMK7aJalKi2punDzlrEl10YdJuE8vuzq5rmrUrOC\ncjgHFcZ+N6JGNFfu2paFGXSQ0OrOtB9NDTUk5+Zvx7cwf6UEMdj7/xVUVSJW\nGA4xBpWGgXChCET3FZ5T5gXlaNaCxr2+LIZaHpdOmuQEw94k0VR5FwgC1lql\nmdeN7SR4oZcLyCdHX8Yi95VQ1Y+9YGdRk+/+xhy31NIJQ93kDyOvcEShc0SR\n3kSA/NE8VhMSMq06YA5IXUrxUU0YnTvkjavkAxftlgmA5VmB8vwdvitaBO+U\nuYSdtn7+7Ttr7CIF6aK2wHjqzklTAMDrKNKrYaymWRq9dfcVULbEeODyzFPo\nC1NWgUtFWWQKBHaBWBwzY+lcs5fVLuvAVjUlzgDbSVxrtIpULXyN9awG0y6d\nnEWa/Daebeitxg+wQbONkCEJ1knv3iTkrRvM400cdTik+nlW/P3B+pzInw5w\nm/ZJ4tSCeUbrGtAXV1UcprBPM1pz7xVju1CGuzXxbvXRQ3nrcStDXlFYL76A\nMOHPraFdjzXar235m1Tg1Avea76iuwf8/gkGic5ghv0PdLpaYmcO4YgfHPwA\ndQszwP0nvBaay6O/U6WftwnBtRWBMyWUOA4par429crHHlHz3YMfl0+shPtb\nNiMQNUhoiAN71q0PpYluTZRXPdqXRW4cu3kperZIZtakFhinwq4+a3kMIUKr\nUSXsVAPSK7jRVtWBIydg0MimuW4gxrrGO7PpZvEboEBTOtVsJNDVmvz01rA6\nlr0H8K/u/sdyOPXhkNv9AypQAswMXVNf9lBPaKn0VboOf2HOeGCmJnngfvL8\nln7qNAtbLWln9rAh9zLCceXde6DUmsbNPGN9NciH36c6kFhGkNqsAj/q37PT\n5wk6DEYsp246yjNbpBpttujWUkM7QPEsCKnAa0g7Kocuj1CV1mLgM88ldxUT\nUBfNEY1y8xgv+5KrHIy/X35JhBO4eOnqq+arYryvUGRwZcJIURAZBwvf77EM\nFOR+i6CMBoj6qPr0dMoVMP835aCnnLq7c+qr1S93JYfI90wgmap+c6frRFOA\n2NQirGo5/blTLjeDei4U6da3oLRyuSQvCaYfEZMvT3fTgLcT8V9s1ApxPxW/\nB5EVipVz/rNhsJ4nOL8cQLi3QsoI7V+a3gr+e4YY69zVtqQ46+U1w5Vn6bmZ\nR1OBqKY516Y9Hgdw0nknhcgS5vRPW7yRgeCKhbwHJQiB6fe/thUltL333UHF\nH7vIc1FoyEHhpnUuAA3RylcEFR3amem+eJZuBDcZ3eWMke2e0g3bdkXX79Yi\nk/p3NZc/E5SpzD2/y2/e0u6KmcKK3xLjNxaLs+iI7pSFgoKtdrAcb3M1AHd3\nFyYwGAZhMRRENhZprRohmLhEf7RJ5v5MVDnheTgnW7qyX9DFCTg4B+MOwtIV\nXdYTOsFjOOaji73KwpD++q0kxaqT4E6B27CRlSSvQP06QDaBGsjs9+Ovxs4P\nAVR294XMmr8SqXud3+yIuxGv2gaU6iTKWX4YHhicqQc4JjrOxCGGIK8L5tVR\nVllWAOTWSB3gjdLzEI4qCq7WcCzZAQ4nW+ZFiNTyH7Wgnrt75woCorMdJkqZ\ngVlTILgWNrYuPMe3gGc7jLGbVH/N74U4HpNsuvD+BC4L7TKO2YrMYzbRtUUS\n3d0xt1OtPVDd2pwdsdhzHogs9CW8Ogx0u7RjsGXmiCW2S5Egsm4ewqeNeifr\nsjzfnHoETvgOw9X0C1vm+P0iYuPUXeFTwlPgLP4jYvLWOknUmSD/BcAJ/987\nrgeVUFoJU+UP5ZA2qlnwBjedS1dAm8h2mXjwqEaHeiZcveOqkUYnD4KmVFK9\nBvC9j1Pvhe4Ynu1G8imwNc/4l2ZhuqTUnLXdMNArjUGtz9c44w5x+v6MqbWy\n+Wg1PeoQgOgegTFUaXKsxhuuL0c2VhSM0TZK48HWeOsqFjbj+/kyxJ9rujId\n7Go2MDX9vq7lpwZM7Q1ZGfixCCiVo5ISnun9tNKMaxgonShu4rXRn3bLwDVH\nqlEzge6PloEKXcQ/mKoOcR6Ud4MOz2tv0It6Aek4/HrdsOeO0SkBYTERhZQz\ndkRPrApIQ5Y+pIaULWHYJIPIBakATMc1cCFkZdAgFHF4BLzzyBvFVc+6ZlnO\nHsLkRMN44z6SUsT6vPv3Y/NJID4jOLMsyFXk+Go3Hd/s8QIWPlfSj5v3cSNQ\nqYYloJOBswCyOqS/iPVIQ9rwzoqqQdtHzeDuBTU1tKYa19mroXLndBl17GFV\nR/x7/MOzMvfRrE5/yEsIHDsvxGYMYh5riawWAphwd91o0N7pMpIYerBuS3c1\nuLpQkHMvo70NcelPUoQ4beEsStX/glGDgmRXynlTxQPTo5dAEUVunZu36SDO\nFdxV68pImWbuS51ddeCjPc87s4Cn5q24iJJSoXaeIIxZitj2Fxf48QXm55C5\nAxV/VYm95numoKGRTsK0zitoCDoZYO0w5Gm9l7Rp511zfr1yMCPFt4l6FkW0\nZKr9AsjBtpg5uU0A2Eit1UiqHYuVyEG91Bys3Aih3hKJwViPn4zCH4FViK2o\nIFmSmFxSecIUH5R1BQrq4Pb8grzKNVD2ui3YsKLhYsjCOqBZwDJThn7TLN+m\nsLOSX8ULHNbbleV7+GAuCtOOvKJyA1yMYAooy7J2Kaw79gq8u/XM5M0cB8MX\nzICXAyVIMNDwmxl96g9oTsaV6TAwcNL03Sk5ZbRq+K8B7IA70Oz6bFgQ93K3\nlxdM4IjuSxscLqUyMJM3e5cAScXoxTFsAaSw9iJOnUJ9k3ILPF61Rhqt+5AP\nN7NdAAxtFrYfP8KP8yc1uDd/3okT8tOvXOGOG7GCmv0+HSY0IcJ8MTwATXZR\nBQJOF+XnJx9e+6ICebcBSxH69AKpp7Vf4iur6B7AX19MAcmQV9Mg8AjBd+JV\nxOMRNzZlMyiuw6Yg3mpekVthbKoWwDBQ6KvYJHz1CCq8CA1D9xD0sKRdUvcJ\ndxArAIFY7j/JSN27gHysuUzlxdaRwUMhuuFrMKkhC+8BH0xzMt7qntaJEhOE\nfE39Qz8RPQYxDOOcIgjhUHtrkGrmcWuZYCgrlU26g4M74NG1UGC6+jz4Jzis\noGXwGH9g5IzxW22HSikmDCLErf66LEIC/1Z7ZnKQV4BmjpJXVP77zJDZ/j1f\nSn6ghhT9CkBM+qw1ex0gD6yToS0jJB8qZvmrfTlDxGv+n/djOh5AO2oCuHOT\nevjPnRWd5Ubv7G7p0z9qxZA9v1xb/PVAdFlW3VYJUZOPB4sDo1RRbPBJdU2t\nBS0M/Hzxk3prlt5CTy8Dkc52R5QlMTKOPQeSGU2kTKd+PYxBrSqp2dv320Xg\ntJYWlWZVBDD7jZg4bbyznWEqlLf9t59tFkPG0KXa1ipB0bKm/QMLPLATfoJ9\nocZ92bhJ8kgAOGc4rBfIEtkliZp00qbkF7QdIeThXx9nKmOVklTeQMDq+7xd\njssE5YsEntZeuRJOpho/ewYAQSWyfzPhyOGWQLFmX/PqJ6QMmsftMguheQAY\nAchI5DpSA1niIQMwkIATSg8Y5un8aLpRZ3eD3xsi7samEg4aemcJFjJn3YUA\nsUpTjLD2U9dtz/+FGnxGqxTLbjllPSf3En3LmxQj4wgp1elj9b4QNLRecHZW\nc+X+ObYRfIOlBPbz38HaHRdjkG8jVRzwjoUGzsMziR3APVMCVUneUlJdbR13\nxYKBxp2xbAfv5ctKZSAf4iejAxyFHt20BUMgX1rgjInj1B8/5R/YjwFeh/SL\nDJi4m0zV7jfvKUrN4H2V0vEn9DmuUfWtiKMMKnvDxksvL+LzjzZKWr1rhIPi\nCvl+BvFiaSN9FjshXudHxxnY2kf1y4dtT7683cp9PNJ9Qtbdh2vUGUxpkfO3\nNPyV3NNBFbUrEttDJguGrxfM+49jjIfnAl0oNNDrrV8JIjKP207QoWao3Pgs\n5mjZURODU7R7qk57WLuMrD+Q3Gw7btYUb/68eA6DZO+FNiMC/bTD/bqMOMJ1\nFQhsId8Ehw5CrlnGOdDoj20q0nD+t10lGDQdtPqN2nLOnKXT4pouw3vErxZV\nvbg5kkXUagu1QAtUM55hgqRnyfQp92qy7WmXSA3ADwDJPpSYmCcP5/oEkBtn\nJ1w8Upz8hJYj+UTHpYakuKRCtSStzW+Iq/Onjvmqfsuk5uC/1hQ5wO4PXRft\nS9fo2V9hEFq+LPKoYPJvZ0IOj7h35QFTNmL3PkB70d+tOK72jmJe0udltHbQ\nwO0Tv7Eeqlrcby3n+d23jK9H2lhBaa/20613ew1aOlSO8NCRFYfjgmjR0sTR\ng+7o5xBiSIvrAFyVdDDxvkQPRXCgtMuuBOkaza21sOOqgIewNf+T7ZWbCZ+m\n85ef3gHnR+VGW3YepNIKouqJR/k8s53lGFMWoVpsSCGyDQ/UR0IQnxVolGcF\nHRxaY2SJnvhU/ox/2IPDq9EqoeLLHDOTt/S4JhKgRhM2xm5n+6y/qCcVK+Kc\negja4XvIagskonrDPvv7DCdPK5SYotAJeyHaTU/6Ua7zOPT8MZz5CJ3rPYDn\njM2eOpV/jqGpShjn+Y1i37taf5Zp1PtYXJbnWNxweS2n0bpd4Ii0tDjj5my7\n+u5spqqdwNLs0hVfvi/7cne36PbIf2J+Gv3bH9Wqn7UCzqPY+N1qcAr0kEa8\nNEb5B1RaM/erPbH64E3ZkjyNqlI1Jy/oX/L9Ho2awpATjQHr63/u8PpriJPI\nuiTsr+UC5zbSvo9yH+aq7pKSf28pkumuDlK9EivjW+3GfRHpF7mWaWE59w4b\nO/qr+qEovpNXyykfGk/egILE/IPtPlTo7RSVb05TBTXL9Vt7mhvoERzrtoyz\nkNAYpFzzEOzrJyLWGFKrw8+Te1xiBHHclbaIDK/mfNPHTlVpvG8O7gxV2pkH\nZQH5copC4vEqQS4Uc9P/guUjf5ej7YKWURuV6yKedDogh/UygSeEVvngO1Yh\na4/nEWEfMCJOpKNt3vuMiSrhtCLnTBkf6tJp1be7m0Wr2S89lKFfa8aDLMp+\nYlNT939bpaLYdJy8I3ir3RoUNp3VS7k+V8LfP1Z17vKMZx0PAp5O5Ah52ed3\nedX6FfEcbKtvElAZWP2BdTJPtEJLIkhxtVv7CSr5GT3tdqooJ2zV2w0ntPcx\nXN9nJZMDsXBqlxx2LHWfbzGsBHUQP/2EM8Mq5q8GB3d7Xmu1z97va0dVcQ2B\ngUeI5JpmqqeLrgHs3FDVdcT3jWgRyRe0HbZuvo74zb1u9Ee3BMfI/I4cPTH8\nX9+MiAtRLmKS+3/falI0MZiNGq8XKGDeGN5aaUnBc001tHjFOCt3Zm0BsHXK\nHHK1w52P0mKevtWB7+++ZILRk8ZtPOmvmyMV47FJSqKQrJyLot7cjOTCn8lj\n2f4w1mB3d9wg9HJKs9lE0aOOIQL9lTzQNNEzEYvh5V8cZ8Sudjv2fAhhdvMZ\n2YVunKSHZCFEUVXua5pKb/AQFuGNKzog5xu3JDo229hypGpMsCZA1lsCy2WZ\npZu9qo3Epa+4JLWEjLY5Wt6IBCp1RIu2ZROY8YrxO6hoc86Ax6NvGwusktjF\naVuktYdD2i21Jch4NVyhXOoQc90mSJkMa3uGlVuB52aGjRqi2qE3xzz9i6w3\nPYsjin/7ThtsWbhL5iT/MepkjBn4YJDbXbETd2wkDW4iYStS1ni8uvmMm3XO\nH4F1kBkpAKyef6PEo3QWrTKd58J44foBwFIvhPPm2pTYEIyVBIGfw9SBSKjJ\nA4cnT02RSvLRyza0ql6Yk7huDiwo92u9UO377a5cHk6ciCqvgMZaUO+C0mld\nobrgyvmxswspG5zTKYj8ZlLA54xf/aZQ7obiwp6mR0N9sbctYzqym1Nj/URU\nJWt2/iTPFgN4cw3hnd1PgQAXiCYHb2rtrwnfCzLWeM+nvxabVl5NLYYP5+RZ\n6xvf+LPLxIwDTfaKPxyUvSIlwIBUFFvY+GLKlXPv+5kFAIrLDnT8Lr5XVFWR\nerrNRdu0UkOKf+5tRBe8XsHGSANdkN1KN1R979oNYMxd9rjX9blPOuaiO5Zx\nsAnPpeg2YAikH5TxNTJGuSPSgGW/RgDVnYkpnWWL3wh0WYSWWnV8oFQzlrcM\nVQ/stKyQfN2cUUKtMeLD+o4K9Rwe3DImxvVe3eWOR8NLSMCKCPPm6V+y70kJ\nwUiUFfS4TyMckFtJE3m+7O29wHpldG5AThTUIxp5M5RESNJyeD+JEKQ63QDw\ntoTT+XRD/lrUczBpFCn9v6xxlTyN+53f9DEzwc76qxNsqopJil8/aNnXwna+\nLGbB/lhG7lKcDfbLTMvz2Nqj+iiHRdyMcqdKsYGWTEDK117C5LELqU+w4inL\nVDYhzqYr34eQHcKgpPdNDWJhAUkNhugdQGVhA9Q8HX9yCV7HjZ123EQy9vB6\npxRwFrVejPpieNBl9aE5wYvouvjlQ2MeWhq5yeO/Gj1+YQUbFS7sdSccGuk1\n4Q51oSwWqbyy20fEW2BdFcuwk5E=\n",
    "encrypted_validation": "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\n",
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the FileReader.toDoubleArray() to read the storeProfits.txt file and\n     * store the result in a 1D array. Instantiate a Store object with the 1D array,\n     * then call the calcTotalProfits() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcAverageProfits() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Store.java": {
        "text": "/*\n * Manages data about store profits\n */\npublic class Store {\n\n  private String name;              // The name of the store\n  private double[] storeProfits;    // The 1D array of the profits a store made each day\n\n  /*\n   * Sets name to the specified name of the store and initializes storeProfits\n   * to the specified 1D array of the profits a store made each day\n   */\n  public Store(String name, double[] storeProfits) {\n    this.name = name;\n    this.storeProfits = storeProfits;\n  }\n\n  /*\n   * Returns the name of the store\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the profits for the day at the specified index\n   */\n  public String getProfitsInfo(int index) {\n    return \"Profits made: \" + storeProfits[index];\n  }\n\n  /*\n   * Returns the total profits made by the store\n   */\n  public double calcTotalProfits() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse storeProfits to calculate and return the total profits made.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    return -1;\n  }\n\n  /*\n   * Returns the average profits made by the store each day \n   */\n  public double calcAverageProfits() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calculate and return the average profits made by the store each day.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    return -1;\n  }\n\n  /*\n   * Returns a String containing the profits the store made each day\n   */\n  public String toString() {\n    String result = name + \"'s Daily Profits\\n----------\\n\";\n\n    for (int index = 0; index < storeProfits.length; index++) {\n      result += \"Day \" + (index + 1) + \": \" + storeProfits[index] + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "storeProfits.txt": {
        "text": "-16.28\n2121.66\n598.28\n421.13\n-256.02\n1572.71\n1373.42\n1474.12\n3427.62\n772.90\n6438.50\n1082.35",
        "isVisible": true,
        "tabOrder": 2
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:52:36.681+00:00\",\"changed\":[\"cloned from \\\"CSA U3L5-L4c_2023\\\"\"],\"cloned_from\":\"CSA U3L5-L4c_2023\"}]"
}]]></config>
</Javalab>
