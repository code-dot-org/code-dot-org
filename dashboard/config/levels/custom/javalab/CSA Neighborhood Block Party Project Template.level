<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "playground",
    "start_sources": {
      "MyPlayground.java": {
        "text": "public class MyPlayground {\n  public static void main(String[] args) {\n\n    Game.play();\n    \n  }\n}",
        "isVisible": true
      },
      "Game.java": {
        "text": "import org.code.playground.*;\nimport org.code.media.*;\n\npublic final class Game {\n\n  /* Use this method to setup the display (show the images).\n   * Calling this method shows the images on the screen so\n   * the user can begin playing the game.\n   */\n  public static void play() {\n    \n  }\n\n  /* Use this method to check whether the player's move\n   * is valid. You may need to add parameters based on\n   * the rules of your game.\n   */\n  public static boolean isValidMove() {\n\n    return false;\n  }\n\n  /* Use this method to update the score based on the\n   * results of the isValidMove() method. You may need\n   * add parameters based on the rules of your game.\n   */\n  public static void updateScore() {\n    \n  }\n\n  // Use this method to check if the game is over.\n  public static void gameOver() {\n    \n  }\n}",
        "isVisible": true
      },
      "GameImage.java": {
        "text": "import org.code.playground.*;\nimport java.io.FileNotFoundException;\n\n// Use this class to create images that cannot be clicked.\npublic class GameImage extends ImageItem {\n\n\tpublic GameImage() throws FileNotFoundException {\n    \n  }\n\n}",
        "isVisible": true
      },
      "GameClickable.java": {
        "text": "import org.code.playground.*;\nimport java.io.FileNotFoundException;\n\n// Use this class to create images that can be clicked.\npublic class GameClickable extends ClickableImage {\n\n\tpublic GameClickable() throws FileNotFoundException {\n    \n  }\n\n  /* Use this method to call isValidMove() from Game.\n   * You may have this ClickableImage perform other actions\n   * as well based on the rules of your game.\n   */\n  public void onClick() {\n    \n  }\n}",
        "isVisible": true
      },
      "GameControl.java": {
        "text": "import org.code.playground.*;\nimport java.io.FileNotFoundException;\n\npublic class GameControl {\n\n  private static Board myBoard = Playground.board;\n  private static GameImage temp;\n  private static GameClickable tempClickable;\n\n  public static void startPlayground() {\n    try {\n      myBoard.start();\n    } catch (PlaygroundException e) {\n      System.out.println(\"Error starting The Playground.\");\n    }\n  }\n\n  public static void stopPlayground() {\n    try {\n      myBoard.end();\n    } catch (PlaygroundException e) {\n      System.out.println(\"Error starting The Playground.\");\n    }\n  }\n\n  public static GameImage createImage(String filename, int x, int y, int width, int height) {\n    try {\n      temp = new GameImage(filename, x, y, width, height);\n    } catch (FileNotFoundException e) {\n      System.out.println(\"Error creating image: \" + filename);\n    }\n\n    return temp;\n  }\n\n  public static GameClickable createButton(String filename, int x, int y, int width, int height) {\n    try {\n      tempClickable = new GameClickable(filename, x, y, width, height);\n    } catch (FileNotFoundException e) {\n      System.out.println(\"Error creating button: \" + filename);\n    }\n\n    return tempClickable;\n  }\n\n  public static void playSoundEffect(String filename) {\n    try {\n      myBoard.playSound(filename);\n    } catch (FileNotFoundException e) {\n      System.out.println(\"Error playing sound: \" + filename);\n    }\n  }\n}",
        "isVisible": true
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2021-09-16T16:47:12.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "audit_log": "[{\"changed_at\":\"2021-09-16 16:47:14 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-08 16:36:27 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-08 16:36:43 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"}]"
}]]></config>
</Javalab>
