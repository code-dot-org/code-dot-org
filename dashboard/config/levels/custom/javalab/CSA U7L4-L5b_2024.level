<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T21:06:42.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SocialMedia</code> class represents a social media platform. It has instance variables for the list of users on the social media platform, the list of public posts made by users whose profiles are set to public, and the list of private posts made by users whose profiles are set to private.\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">User</code> class represents a user on a social media platform. It has instance variables for the user's username and the privacy status of their profile. For example, if <code style=\"background-color: #ececec; color: black; font-weight: bold;\">isPrivate</code> is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code>, their profile is private.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">markPost()</code> in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SocialMedia</code> class to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> with the post containing the user's <code style=\"background-color: #ececec; color: black; font-weight: bold;\">username</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"[PRIVATE]\"</code> if their profile is private.\r\n\r\n‚úÖ **TO DO #2:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">public</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">createPost()</code> in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SocialMedia</code> class to add the marked post to the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">publicPosts</code> list if the user's profile is public or the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">hiddenPosts</code> list if the user's profile is private.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SocialMediaRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">createPost()</code> method to create posts for several of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">User</code> objects and print the lists of posts.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_private_methods",
    "reference_links": [
      "/courses/csa-2023/guides/private-methods"
    ],
    "display_name": "Social Media Posts",
    "bubble_choice_description": "Use `private` and `public` methods to mark posts on a social media platform based on the privacy of a user's profile.",
    "thumbnail_url": "https://images.code.org/9241113bcaa7f6ed6e43ab1d509004df-user.png",
    "encrypted_validation": "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\n",
    "start_sources": {
      "SocialMediaRunner.java": {
        "text": "public class SocialMediaRunner {\n  public static void main(String[] args) {\n\n    // Creates several User objects\n    User reparo = new User(\"scholarlyreparo\", true);\n    User protego = new User(\"inventiveprotego\", false);\n    User portus = new User(\"stylishportus\", false);\n    User lumos = new User(\"uniquelumos\", true);\n\n    // Creates a 1D array of User objects\n    User[] appUsers = {reparo, protego, portus, lumos};\n\n    // Creates a SocialMedia object\n    SocialMedia app = new SocialMedia(appUsers);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the createPost() method to create posts for some of the User objects,\n     * then print the publicPosts and hiddenPosts lists.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n\n    \n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "SocialMedia.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a social media platform\n */\npublic class SocialMedia {\n\n  private User[] profiles;                 // The 1D array of users on the social media service\n  private ArrayList<String> publicPosts;   // The list of public posts\n  private ArrayList<String> hiddenPosts;   // The list of hidden posts\n\n  /*\n   * Initializes profiles to the specified 1D array of users and\n   * initializes publicPosts and hiddenPosts to empty lists\n   */\n  public SocialMedia(User[] profiles) {\n    this.profiles = profiles;\n\n    publicPosts = new ArrayList<String>();\n    hiddenPosts = new ArrayList<String>();\n  }\n\n  /* \n   * Returns the 1D array of users\n   */\n  public User[] getProfiles() {\n    return profiles;\n  }\n\n  /*\n   * Returns the list of public posts as a String\n   */\n  public String getPublicPosts() {\n    String result = \"\\n----------PUBLIC POSTS----------\\n\";\n    \n    for (String post : publicPosts) {\n      result += post + \"\\n\";\n    }\n\n    return result;\n  }\n\n  /*\n   * Returns the list of hidden posts as a String\n   */\n  public String getHiddenPosts() {\n    String result = \"\\n----------PRIVATE POSTS----------\\n\";\n\n    for (String post : hiddenPosts) {\n      result += post + \"\\n\";\n    }\n\n    return result;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the private method markPost() to return a String with the post\n   * containing the user's username and \"[PRIVATE]\" if their profile is private.\n   * -----------------------------------------------------------------------------\n   */\n  \n\n\n\n  \n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the public method createPost() to add the marked post to publicPosts\n   * if the user's profile is public or hiddenPosts if the user's profile is private.\n   * -----------------------------------------------------------------------------\n   */\n  \n\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "User.java": {
        "text": "/*\n * Represents a user on a social media platform\n */\npublic class User {\n\n  private String username;    // The user's username\n  private boolean isPrivate;  // Whether or not the user's profile is private\n\n  /*\n   * Sets username and isPrivate to the specified values\n   */\n  public User(String username, boolean isPrivate) {\n    this.username = username;\n    this.isPrivate = isPrivate;\n  }\n\n  /*\n   * Returns the user's username\n   */\n  public String getUsername() {\n    return username;\n  }\n\n  /*\n   * Returns the privacy status\n   */\n  public boolean getIsPrivate() {\n    return isPrivate;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "name_suffix": "_2024"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:06:42.531+00:00\",\"changed\":[\"cloned from \\\"CSA U7L4-L5b_2023\\\"\"],\"cloned_from\":\"CSA U7L4-L5b_2023\"}]"
}]]></config>
</Javalab>
