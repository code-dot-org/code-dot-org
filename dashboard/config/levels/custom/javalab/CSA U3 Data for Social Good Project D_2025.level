<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:53:05.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "**User Story D:** As an advertising specialist, I want to identify the best basketball stadiums to advertise in so I can decide where to spend money for an upcoming campaign.\r\n\r\n**Possible Extensions:** I have been told I can advertise in up to 5 arenas.\r\n\r\nâœ… **TO DO:** Use your knowledge of object-oriented programming, one-dimensional (1D) arrays, and algorithms to create your data analysis program:\r\n\r\n1. **Write a class** - Write a class to represent your user or business and store and analyze their data with no-argument and parameterized constructors.\r\n\r\n2. **Create at least two 1D arrays** - Create at least two 1D arrays to store the data that your user needs information about.\r\n\r\n3. **Write a method** - Write a method that finds or manipulates the elements in a 1D array to provide the information your user needs.\r\n\r\n4. **Implement a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toString()</code> method** - Write a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toString()</code> method that returns general information about the data (for example, number of values in the dataset).\r\n\r\n5. **Document your code** - Use comments to explain the purpose of the methods and code segments and note any preconditions and postconditions.\r\n\r\n### FileReader Methods\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containing the data",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "DataRunner.java": {
        "text": "import java.util.Scanner;\n\npublic class DataRunner {\n  public static void main(String[] args) {\n\n    \n\n\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "UserStory.java": {
        "text": "import java.util.Scanner;\n\npublic class UserStory {\n\n\n\n\n\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "teams.txt": {
        "text": "Boston Celtics\nBrooklyn Nets\nNew York Knicks\nPhiladelphia 76ers\nToronto Raptors\nChicago Bulls\nCleveland Cavaliers\nDetroit Pistons\nIndiana Pacers\nMilwaukee Bucks\nAtlanta Hawks\nCharlotte Hornets\nMiami Heat\nOrlando Magic\nWashington Wizards\nDenver Nuggets\nMinnesota Timberwolves\nOklahoma City Thunder\nPortland Trail Blazers\nUtah Jazz\nGolden State Warriors\nLos Angeles Clippers\nLos Angeles Lakers\nPhoenix Suns\nSacramento Kings\nDallas Mavericks\nHouston Rockets\nMemphis Grizzlies\nNew Orleans Pelicans\nSan Antonio Spurs",
        "isVisible": true,
        "tabOrder": 2
      },
      "locations.txt": {
        "text": "Boston\nNew York City\nNew York City\nPhiladelphia\nToronto\nChicago\nCleveland\nDetroit\nIndianapolis\nMilwaukee\nAtlanta\nCharlotte\nMiami\nOrlando\nWashington\nDenver\nMinneapolis\nOklahoma City\nPortland\nSalt Lake City\nSan Francisco\nLos Angeles\nLos Angeles\nPhoenix\nSacramento\nDallas\nHouston\nMemphis\nNew Orleans\nSan Antonio",
        "isVisible": true,
        "tabOrder": 3
      },
      "arenas.txt": {
        "text": "TD Garden\nBarclays Center\nMadison Square Garden\nWells Fargo Center\nScotiabank Arena\nUnited Center\nRocket Mortgage FieldHouse\nLittle Caesars Arena\nBankers Life Fieldhouse\nFiserv Forum\nState Farm Arena\nSpectrum Center\nAmerican Airlines Arena\nAmway Center\nCapital One Arena\nPepsi Center\nTarget Center\nChesapeake Energy Arena\nModa Center\nVivint Smart Home Arena\nChase Center\nStaples Center\nStaples Center\nTalking Stick Resort Arena\nGolden 1 Center\nAmerican Airlines Center\nToyota Center\nFedExForum\nSmoothie King Center\nAT&T Center",
        "isVisible": true,
        "tabOrder": 4
      },
      "capacities.txt": {
        "text": "18624\n17732\n19812\n21600\n19800\n20917\n20562\n20491\n17923\n18717\n15711\n19077\n19600\n18846\n20356\n19520\n19356\n18203\n19441\n19911\n18064\n19060\n18997\n18055\n17500\n19200\n18055\n18119\n16867\n18418",
        "isVisible": true,
        "tabOrder": 5
      },
      "championships.txt": {
        "text": "17\n0\n2\n3\n1\n6\n1\n3\n0\n1\n1\n0\n3\n0\n1\n0\n0\n1\n1\n0\n6\n0\n16\n0\n1\n1\n2\n0\n0\n5",
        "isVisible": true,
        "tabOrder": 6
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 7
      }
    },
    "display_name": "User Story D",
    "bubble_choice_description": "As an advertising specialist, I want to identify the best basketball stadiums to advertise in so I can decide where to spend money for an upcoming campaign.",
    "thumbnail_url": "https://images.code.org/ad2d037d40248c4e4ea27ee0ba7dd4bb-f022d18e0d7baffd4d2e8009bb9ac775-image-1648762742415.png",
    "encrypted_exemplar_sources": "b7zvE1yJnxAoGPZej+9oYsz43NyDTbhV7CxYcbGdkQglcnC25bPvCy/X+RXJ\ni0DHi1drnSPGu4Sn9nkyssy9xZ+KJ4jXfTbslbGpe5C+tgq2f5ffaL/oLK48\nbmcZvrkDzmmTfT35IoUm3jhpoLu8IdSKothF7vKF3SRGoL0ckHG/uMYCk/Va\nbAa6xGlQrvaDrjNo3UtfRnaoiYBRf3qu9afJ2hYm3ULVfyxIdckohtr6fFtG\nKGBSpvggHKCcBaOTVY7v/A/4rz755aqHOQDjSyJOnyxAiNR0WSgL1v4KnOM/\nB9dTO+t8l2IhpepfR1Mbfl4DOzomUkqh4SwG6eVH15Z/7jE7gvSZPjX4PKoT\nbVhLU82/fHYVciN7lz/yrzOAoS4B9SUBpyOlEpOHrsZ56lSqv3nhHMvLHAB8\nTpDJUFwkIAqq66WVdxTb2clVsxqlDtAUepupozQ0nFM04q5445jljlD0+O2g\nsoOWCB9TKvbgvszbGKCjmDTNN2qXEHUA50Uj7el2ruPLlTsWzsL+ySDmTbRt\nACy9UNPPFO1T+ZjDGZ2UgTyry2WH22MUWT/PlmDc+koh2Uen5f76zRRdb1Vn\nz1GgzmNFfESw5frazp4lJRJsxVPzLFr7ev+USQuj94BRC5/Z9lGueNziH8E1\nIGPEpchOlaBnTVahs+F6CGWNQIAtB46klmy+GaD87/GOfW/L02dG05uxiW+P\nrz5p9pHnsqDfmB4aLstvZDDl8MSFhuOdX+iu9xWyY2I+kyApwA962i+5pJHZ\nxPcFKNCJ7xOdQaWRgoD16H9mn8yRdsZmsmo8tbBIF5kVZB1ELb5Wa/IOf8Kk\n+EKE63QF0UCLDtQwvh3K6NrDay2sJ9s5oxlOTylJvsW9OjYJif8uo9hu+Lcu\nkfDZ2tx8IpU+gucKoj81xJMQ/reYM3YQa4qjkCaROtYBgGvIFePnehsmvRR+\nvb8jfgUXjf7ZEu4eTOLHeug/zNGj0zbXC8te3DMfMk8oZYaax5EMo/fF4rtI\npefQKo0gviIpTLjT2R8z5NViJnw2Ri5PNwn1X21NHHqFWR4QCCXFKwAKgtwA\njYJ/aI9zTTT8LDQRE0PdrvTy3O3jNWkjcS8GpalmuhzTLtjbE1kW60KI+x9A\nchRIaCllQxiYqQxRPHoV7ouiWEzJH3qAw8gq0TgZzK6B/4eoyM6nKkzHEE5n\n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\nD/NtJLc=\n",
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:53:05.376+00:00\",\"changed\":[\"cloned from \\\"CSA U3 Data for Social Good Project D_2023\\\"\"],\"cloned_from\":\"CSA U3 Data for Social Good Project D_2023\"}]"
}]]></config>
</Javalab>
