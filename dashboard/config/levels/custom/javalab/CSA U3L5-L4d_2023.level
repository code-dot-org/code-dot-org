<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-01-12T17:54:28.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://www.imdb.com/title/tt8111088/episodes?ref_=tt_eps_sm\" target=\"_blank\">**TV Episodes dataset**</a> includes the number of minutes for each TV episode in a season. The number of minutes for each episode is stored in an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> array called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">episodeLengths</code>.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TVEpisodes.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageLength()</code> method to calculate and return the average number of minutes of each TV episode in a season.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">DataRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageLength()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array using a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The average is found by dividing the sum by the number of values. You already have a way to get the sum of the values in the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">episodeLengths</code>!</p>\r\n        <p>Use the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalLength()</code> method to get the sum and divide the result by the length of the 1D array to find the average.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ntotalMins = calcTotalLength()\r\naverage = totalMins / episodeLengths.length\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "TV Episodes Length",
    "bubble_choice_description": "The TV Episodes dataset includes the number of minutes for each TV episode in a season. Write the `calcAverageLength()` method to calculate and return the **average** number of minutes of each TV episode in a season.",
    "thumbnail_url": "https://images.code.org/4218bd68e53670826f512854e04a7535-tv.png",
    "reference_links": [
      "/courses/csa-2023/guides/for-loops"
    ],
    "project_template_level_name": "CSA U3L5-ChoiceD_2023",
    "encrypted_validation": "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\nHwu/ctt1\n",
    "encrypted_exemplar_sources": "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\n9bmiOg==\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-01-12T17:54:28.696+00:00\",\"changed\":[\"cloned from \\\"CSA U3L5-L4c_2023\\\"\"],\"cloned_from\":\"CSA U3L5-L4c_2023\"},{\"changed_at\":\"2023-01-12 17:54:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 00:05:11 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 02:01:18 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 02:05:14 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 17:19:31 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 17:26:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 17:26:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 17:28:35 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 17:28:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-31 20:25:42 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
