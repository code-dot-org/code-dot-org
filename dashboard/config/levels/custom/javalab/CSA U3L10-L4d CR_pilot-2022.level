<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L10-L3d PBT_pilot-2022",
    "long_instructions": "Request a code review to get feedback from your peers on your `hasDuplicates()`(#e7e8ea) method.\r\n\r\nWhen you are finished receiving feedback, return to your project and click the **Close review** button.\r\n\r\n##Requesting Feedback\r\n\r\n**Commit your code** and add a comment that includes:\r\n\r\n* a description of the goals and intended outcome of the program\r\n\r\n* any additional relevant information\r\n\r\n* specific tasks or questions you want your reviewer to perform or answer\r\n\r\n##TAG to Give Feedback\r\n*Remember to keep feedback kind, specific, and helpful. Refer to your sentence starters to structure your feedback.*\r\n\r\n1. Tell them something you like about their code.\r\n\r\n2. Ask them something about the code.\r\n\r\n3. Give a suggestion for improvement.",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Netflix",
    "bubble_choice_description": "Find out if there are duplicate subscription fee prices for a list of countries.",
    "thumbnail_url": "https://images.code.org/5d5bc5796da6a2b3fda502b30994a6be-image-1648760433180.png",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\nkaookNFGPZJv+BoNP4EcdUCbSIPf7HA4ZVM=\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"countries.txt\");\n    String[] countries = myFileReader.getStringData(65);\n\n    myFileReader.setFile(\"fees.txt\");\n    double[] fees = myFileReader.getDoubleData(65);\n\n    Netflix myNetflixStats = new Netflix(countries, fees);\n\n    // TO DO #2: Print the result of a call to hasDuplicates().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a double array containing the values in the file\n   */\n  public double[] getDoubleData(int numValues) {\n    double[] values = new double[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextDouble()) {\n        values[index] = fileReader.nextDouble();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "countries.txt": {
        "text": "Argentina\nAustralia\nAustria\nBelgium\nBolivia\nBrazil\nBulgaria\nCanada\nChile\nColombia\nCosta Rica\nCroatia\nCzechia\nDenmark\nEcuador\nEstonia\nFinland\nFrance\nGermany\nGibraltar\nGreece\nGuatemala\nHonduras\nHong Kong\nHungary\nIceland\nIndia\nIndonesia\nIreland\nIsrael\nItaly\nJapan\nLatvia\nLiechtenstein\nLithuania\nMalaysia\nMexico\nMoldova\nMonaco\nNetherlands\nNew Zealand\nNorway\nParaguay\nPeru\nPhilippines\nPoland\nPortugal\nRomania\nRussia\nSan Marino\nSingapore\nSlovakia\nSouth Africa\nSouth Korea\nSpain\nSweden\nSwitzerland\nTaiwan\nThailand\nTurkey\nUkraine\nUnited Kingdom\nUnited States\nUruguay\nVenezuela",
        "isVisible": true
      },
      "fees.txt": {
        "text": "6.3\n12.12\n14.67\n15.24\n10.99\n7.11\n11.29\n11.87\n9.91\n6.86\n12.99\n11.29\n11.49\n15.04\n10.99\n11.29\n13.54\n15.24\n14.67\n14.67\n12.42\n10.99\n10.99\n10\n10.71\n14.67\n6.61\n10.66\n14.67\n15.05\n14.67\n13.13\n11.29\n20.46\n11.29\n10.65\n10.43\n11.29\n13.54\n13.54\n12.53\n12.17\n11.49\n8.56\n9.14\n10.58\n13.54\n11.29\n10.84\n14.67\n12.81\n11.29\n10.05\n11.47\n14.67\n14.2\n20.46\n11.9\n10.43\n3\n8.46\n13.2\n13.99\n12.99\n10.99",
        "isVisible": true
      },
      "Netflix.java": {
        "text": "/*\n * Analyzes data about Netflix subscription fees in different countries\n */\npublic class Netflix {\n\n  private String[] countries;\n  private double[] subscriptionFees;\n\n  /*\n   * Constructor to create an Netflix object with the\n   * specified arrays of countries and their subscription fees\n   */\n  public Netflix(String[] countries, double[] subscriptionFees) {\n    this.countries = countries;\n    this.subscriptionFees = subscriptionFees;\n  }\n\n  /*\n   * Returns true if there are duplicate years in\n   * the subscriptionFees array, otherwise returns false\n   */\n  public boolean hasDuplicates() {\n    // TO DO #1: Traverse the subscriptionFees array to determine if there\n    // are duplicate values and return the result.\n\n\n    return false;\n  }\n  \n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:46.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:46.031+00:00\",\"changed\":[\"cloned from \\\"CSA U3L10-L4d CR_2022\\\"\"],\"cloned_from\":\"CSA U3L10-L4d CR_2022\"},{\"changed_at\":\"2022-09-09 19:59:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
