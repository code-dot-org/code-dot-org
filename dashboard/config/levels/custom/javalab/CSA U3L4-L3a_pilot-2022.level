<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:25:14.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L4-L3a PBT_pilot-2022",
    "long_instructions": "The `Crops`(#e7e8ea) class has instance variables for a 1D array of crops and a 1D array containing the yields of each crop in hectograms.\r\n\r\n##In Crops.java:\r\n\r\nThe method `hasAtLeast()`(#e7e8ea) should return `true`(#e7e8ea) if at least one value in the `yields`(#e7e8ea) array is greater than its parameter `valueToFind`(#e7e8ea). In the method `hasAtLeast()`(#e7e8ea),\r\n\r\n1. Traverse the `yields`(#e7e8ea) array and check if the current value is greater than or equal to `valueToFind`(#e7e8ea).\r\n\r\n   * Return `true`(#e7e8ea) if the current value is greater than or equal to `valueToFind`(#e7e8ea).\r\n\r\n2. If no values in `yields`(#e7e8ea) are greater than or equal to `valueToFind`(#e7e8ea), return `false`(#e7e8ea).\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](http://www.fao.org/faostat/en/#data/QC)!*",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Crops",
    "bubble_choice_description": "Determine if a 1D array of crop yields contains at least one value that is greater than or equal to a specific value.",
    "thumbnail_url": "https://images.code.org/ccb71b81c733b7d425baf7a0ab5c0609-image-1648576359049.png",
    "encrypted_exemplar_sources": "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\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\nGq1/nqClNLrkJVEIvCOizIEx8rK+l8AotwUw4TI=\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] cropsList = {\"tomatoes\", \"strawberries\", \"carrots\", \"apples\", \"sweet potatoes\"};\n    int[] yieldsList = {968079, 650772, 463819, 394802, 212510};\n\n    Crops myCrops = new Crops(cropsList, yieldsList);\n\n    System.out.println(\"My crops has a yield of at least 600000: \" + myCrops.hasAtLeast(600000));\n    \n  }\n}",
        "isVisible": true
      },
      "Crops.java": {
        "text": "/*\n * Stores and analyzes the list of\n * crops and their annual yields\n */\npublic class Crops {\n\n  private String[] types;    // The types of crops\n  private int[] yields;      // The yield in hectograms\n\n  /*\n   * Constructor to create a Crops object with\n   * specified types of crops and yields arrays\n   */\n  public Crops(String[] types, int[] yields) {\n    this.types = types;\n    this.yields = yields;\n  }\n\n  /*\n   * Returns the array types\n   */\n  public String[] getTypes() {\n    return types;\n  }\n\n  /*\n   * Returns the array yields\n   */\n  public int[] getYields() {\n    return yields;\n  }\n\n  /*\n   * Checks if yields array contains at least one value\n   * that is greater than valueToFind\n   */\n  public boolean hasAtLeast(int valueToFind) {\n    // TO DO #1: Check if yields array contains at least\n    // one value that is greater than valueToFind.\n\n\n    return false;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:14.227+00:00\",\"changed\":[\"cloned from \\\"CSA U3L4-L3a_2022\\\"\"],\"cloned_from\":\"CSA U3L4-L3a_2022\"},{\"changed_at\":\"2022-09-01 14:23:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-01 14:24:18 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-01 14:25:52 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-01 14:34:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-01 14:34:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-07 20:39:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-07 20:40:26 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-07 20:40:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-07 20:40:47 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
