<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T15:24:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A pet store needs to keep track of the types of pets available for adoption. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PetStore</code> class has an instance variable for a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pet</code> objects.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PetStore.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toString()</code> method to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the type of each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pet</code> object in the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">availablePets</code>. **Each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pet</code> object's information should be printed on separate lines.**\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PetStoreRunner.java</code>,\r\n\r\n1. Declare and initialize a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pet</code> objects to store a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pet</code> object, a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Cat</code> object, and a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dog</code> object.\r\n\r\n2. Instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PetStore</code> object with the 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pet</code> objects.\r\n\r\n3. Print the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PetStore</code> object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring and initializing a 1D array of objects.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nfor each pet in availablePets\r\n  result += pet.getType() + \"\\n\"\r\nreturn result\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/polymorphism"
    ],
    "display_name": "Pet Store",
    "bubble_choice_description": "Create a 1D array of `Pet` objects to store the different types of pets available at a pet store.",
    "thumbnail_url": "https://images.code.org/c811fbae1abd35a98f60f7c9175f2cec-pets.png",
    "encrypted_validation": "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\nhdEV/Xyh5HY58PPZ59TxAaQ43mLC2rH0gGb/W1w=\n",
    "encrypted_exemplar_sources": "wfo1QtKHWNBwFsklb3Ju79g2AZwW+ekaI5+mN2/Gvuxh4dfVJSKwtKVUKhA0\nCkeDupgL4Ja68t4B/MhAUFywVmPMRcHspc8W7B9a6WHcojc0k+1a7xIw7svV\nYMrzcTEtQCJqTJzWLQPatW+wx0SAaXlXIJYoxI/mt6OOUEp28eL7iIMpaS3t\nOutPfqqAvJ3gQB1nzEXb8JqQ/Fj93mIrTh6MX0ABJ5ChqoO76yBqLfoyG21V\nlDkLL1QNtV0EZJ0Lk+nbmsF8OvBPaAmlr0JcLIQ/aDYcKaJzL/DpbbuMMvZK\nrleYPZayl1Tvo2YRrFyXJAQjn8DRNw5DsBGg9bi6Gc3dGZ02UOXEwfZfHmVd\ndyu6/mIeMVaPo9lYbDivvDapXj/vGG6cAE+2HCZsMmia35MVZIzms1Qp77PD\nXYFdLwuo58Lg2CeoLZnqTzcRvnnvb8uZstsEV6ISUHrAJ1qPV2+vC9KYJWxQ\nYVTuAfVUWvgYrWNzRgLzlq1kLT/ccw7F4G+Q270Cur27rRG6+l46ifaZm/ej\nswxva4hd5EEJwlzXQNgHJzgejPGRiwInbOvJ+XAHVdVfWFbhhxB8IxmJdL/j\nDFplOQ8mRm3ndql3e5GjXb3/Bacm/VFDFsCkUdtmRv5iekgQ0IlC9cz8X9Z4\nFPB6DJM9LpzN+MNbCAmr9oqMyTzlm90kIvY2mlj9EF/jXYyHMXUYw36TRxD8\nG1pATDSN/nGbXL+i46RoODk+0zgRJuc5RHcR5PBov+8HXHKe0tUqJe1wJIBK\nPkMiEYWCMNP2eoAYOSrCRIyorWmUu+8lmwkVkOxmBJpWVM+KejxBzoJjLObV\nmixy0q6IjA6SZz2GYF9pRVCSQJytMr8M95Gi5vsu/eSybBZLLdHSCWumbf+3\nubTG2e7Gu2XhgjGE++7y67c/JoPDL53KQ25o2ViV8YPwFSYmTAwTkpLccWcV\nFSuQAsNt5ptseQlmtDSIepEMJHakaXMTnQe99LSDJHlQQuUhMD5UHW/dGclG\ndfRotxnJoKt7zwsGJU/eBPp0oaYQLXp10ZSd5c8c/HdXvJU7IuCXmHIj8NWF\nDnh7ycDmVNK0q2vnhQD9+KydffwFsiQ6S+zCl5Fty54/w0u9/5QuolXH1CNC\nAbLjuugRFFlInhT3+drtlrTYIGbKSS9SZC0MlAxyb5QzotBMsoklOiwZzL+5\nGKiPbY0xewcGLb8BV2hOXUkn/Q/X8Mm5FNbBNGY3nFD2EJ10VykvR7gh4wBY\n4W14KTIKW3ZGaUvAaSZxiv+91DMO8jCd7/9BACbgDYpJyT5cxfny/NVFVPz8\nm+akoOWae2TnF/uvz6XYzSzNC4/ytgZBnTplWe7m/vVcchJu++ln7FLHYBGR\n08PjcjR6C6n62vL9z+AnBLMcg0RNDZ493+/unm5Jshf1wSBS8h72Q1z2ptc9\nIhutiMDdaibsQmY/qXhKAM97B8dBGENso/MTH1uuqdt8MTsDctH8J/FXpnva\n8/uQL9KXt8hwda1pZetp/4/qql9C5HPddyNxqNJiw4Hx1qvw53zTIyko+Zrq\nuTzmWBgraNsoEeaV1JIt7diDAaBsBJHqnq6WVe+NbwD3BuAeWJQBVcIXnYMJ\n0BljW+vWHXn9Jfa/hventdLf6zzTaoaLGtUP7IbWvEB6Fua++37vCoYgtzuF\nGIYhYnmQAvFmOm3vz2ZZeG8uFhq2WFhLOaTSlkHc5/UV3xnj5LMme8sfrXTG\ns2nifS9POvjLr4eTglKmvVvu3mWS94mRrEgVvFZXbFJOD5R707o0NcO6YSS6\naYK6KoLqUCPTSeP/bSyY+LK1revSwqjxLk1tReYRQm+kygWsgNiXgTHMNXTT\neIJ9t7mIO1KAXRH//AbTbUKgegeFAZsNpIP9Zx5yR5Q/MGlUAaY34uDQimzE\np8aM7H78JbOSmRVyFCNSmRzC0SjQc7L/CeXgm9py54QnIAQTU6Z6K0N/kjuj\nnw289B0wRBXzQGB5qn99XX8bCG7+ntl3m3PxbOd3yEw80k9Aa0LzELWlF05m\nuR9cIAqWBT9OJ/1fYvGeQi3xL4IIK039ZjNQrctakE4Kc4UCRwN/DO9MarIW\nNLfE1nHDGJxbhT9NbBxpptbfidH7pP4ERof1/UUNpmYyRnatke8THDkEbaNd\nFgzl2i0MSxZvIyU1GA/qRC2wcsbOg1Z3OI4du764BHE7NGVAsKGIrMMrXeLq\nWf1mwKT7e9xeJwElaCr1ON+AUfYtpgRBdpNa3vf8Ah6eentZPU9i+FXJNfuK\njl8pCf7M42UgZWE8HCdEvigM1ckhbzFktz6LA3IfzdVV+GNe7s3OeurQ7sux\ndpwJAHJHqwwxv+dKZx32Zi7EFP+2QRqknRtYNWP6ou4JDUG4Fm1qZdoNCk/w\nhHBYfPIem8LJ565bvY84wzWR9c+weiM8UodbioDr7cEVAklxazW6GayRzW3b\n5pcCFF1zr0dggc5bECUnD3RvXXHZ1Ge43GB3mu9yKV0zL87/UI6b/puFJ0QK\nGdEquSw/Pw59nTLWPgf7ZHlvJ/vdia/WLBCCaIXwpL9DaK9gutS8BfMMtfdc\nKITRR5GKiPbbEwGalemKMDwtwda7l+1k3wNIAWqFm5Wi4c9983p9JCs0tvcy\nvSH0vejb1zGxqOS1paRLKEQdtBYesimO0JJEglDwX+gbc1ufQO2ydByioJiJ\nypP9JZpL/VR+sNMnaqUHQN8Ud22CWutm23t1FyDa7OdzYBVUUpI1yk79thxX\nTN30uu2o/3cLtrKeBzuUb6c47J0ZIAhcSZWy+vvyNt9EpoeW5bW3Bzfwa8pm\nSg93+LF34d/pnjISiL3uLDdW0tyRDHrOJl/8TrDNIlrh9V6KpZswDWeAXRLz\neekwm5F/ZTIkg6iFWoC+hDyo5diECM64pTp4n7TnEmo4ES06kmTQKj9DVnvF\nS9AJw+pu+Ox515yrQtD90aTCxM4IT2QvGbCd4sAsTlkJRQBSpPSzV15N1pgG\nKwNREGSsLYJKBv9gLsJTUfyvptzTQE6nKZLQsBagcTNDsJQ021L1LCgxKHMM\nVMyRQiruYQxSZBYVEplpamhMp2E/m7y4LLu3sf8CgiKjf9Gl9nacS+Vp5o5F\n+ddAcHy2xGrnWezJXMx1dllvqV1a+SdmVDXb1AYjMD2OgV2aFgKpLrqHNJjG\nNzsPu9ML/bmmOYWlfPzQelk/CfTaaVLy1b4d3QHCYDlo3hx/TyP0MGnr8lgs\nlDDdtNWlhkBoEivwdgl5/sv89Vu1jAX+fFiKfvik9LMRgA==\n",
    "start_sources": {
      "PetStoreRunner.java": {
        "text": "public class PetStoreRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Create a 1D array of Pet objects. Instantiate a PetStore object with\n     * the 1D array, then print the PetStore object.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "PetStore.java": {
        "text": "/*\n * Represents a pet store\n */\npublic class PetStore {\n\n  private Pet[] availablePets;    // The 1D array of Pet objects\n\n  /*\n   * Initializes availablePets to the 1D array of Pet objects\n   */\n  public PetStore(Pet[] availablePets) {\n    this.availablePets = availablePets;\n  }\n\n  /*\n   * Returns a String containing the type of each pet in availablePets\n   */\n  public String toString() {\n    String result = \"\";\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 1D array availablePets and use the getType() method in the\n     * Pet class to concatenate the type of each pet to result on separate lines.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Pet.java": {
        "text": "/*\n * Represents a pet at a pet store\n */\npublic class Pet {\n\n  private String type;    // The type of pet\n\n  /*\n   * Sets type to \"Pet\"\n   */\n  public Pet() {\n    this(\"Pet\");\n  }\n\n  /*\n   * Sets type to the specified type\n   */\n  public Pet(String type) {\n    this.type = type;\n  }\n\n  /*\n   * Returns the type of pet\n   */\n  public String getType() {\n    return type;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "Cat.java": {
        "text": "/*\n * Represents a cat that is a type of pet\n */\npublic class Cat extends Pet {\n\n  /*\n   * Sets type to \"Cat\"\n   */\n  public Cat() {\n    super(\"Cat\");\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      },
      "Dog.java": {
        "text": "/*\n * Represents a dog that is a type of pet\n */\npublic class Dog extends Pet {\n\n  /*\n   * Sets type to \"Dog\"\n   */\n  public Dog() {\n    super(\"Dog\");\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 4
      }
    },
    "video_key": "csa_polymorphism",
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T15:24:04.906+00:00\",\"changed\":[\"cloned from \\\"CSA U3L6-L6a_2025\\\"\"],\"cloned_from\":\"CSA U3L6-L6a_2025\"}]"
}]]></config>
</Javalab>
