<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:15:46.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Patient</code> class has an instance variable <code style=\"background-color: #ececec; color: black; font-weight: bold;\">records</code> that represents a list of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Record</code> objects.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Patient</code> class with the following:\r\n\r\n* a method called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getRecord()</code> that takes an index as a parameter and returns the medical record at that index in the list\r\n\r\n* a method called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">editRecord()</code> that takes an index, date, and reason for visit as parameters and replaces the medical record at that index with a new record with the provided information\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PatientRunner</code> class,\r\n\r\n1. Instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Patient</code> object.\r\n\r\n2. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getRecord()</code> method to get a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Record</code> object from the list and print the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Record</code> object that is returned.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">editRecord()</code> method to edit a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Record</code> object in the list and print the updated <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Patient</code> object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">get()</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">set()</code> methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_working_with_arraylist_data",
    "display_name": "Medical Records",
    "bubble_choice_description": "Create a `Patient` class that contains an `ArrayList` of medical records for a patient.",
    "thumbnail_url": "https://images.code.org/8a63c76b4311813b6e3c5168527866b5-patient.png",
    "encrypted_validation": "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\nG6GwUUDfURZ4\n",
    "encrypted_exemplar_sources": "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\n76gqTBu4hpU9TjJGVPUZFEl7\n",
    "start_sources": {
      "PatientRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class PatientRunner {\n  public static void main(String[] args) {\n\n    // Creates an ArrayList of medical records\n    ArrayList<Record> patientRecords = new ArrayList<Record>();\n    patientRecords.add(new Record(\"2022-03-14\", \"Annual Checkup\"));\n    patientRecords.add(new Record(\"2022-04-05\", \"Flu symptoms\"));\n    patientRecords.add(new Record(\"2022-11-07\", \"High fever and cough\"));\n    patientRecords.add(new Record(\"2022-05-18\", \"sprained ankle\"));\n    patientRecords.add(new Record(\"2022-02-03\", \"Routine blood test\"));\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a Patient object. Call the getRecord() method and print\n     * the Record object that is returned. Then call the editRecord() method and\n     * print the updated Patient object.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Patient.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a patient\n */\npublic class Patient {\n\n  private ArrayList<Record> records;    // The list of medical records for a patient\n\n  /*\n   * Initializes records to the specified list of medical records\n   */\n  public Patient(ArrayList<Record> records) {\n    this.records = records;\n  }\n\n  /*\n   * Returns the list of medical records\n   */\n  public ArrayList<Record> getRecords() {\n    return records;\n  }\n\n  /*\n   * Returns the record at the specified index\n   */\n  public Record getRecord(int index) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use the get() method to return the record at the specified index.\n     * -----------------------------------------------------------------------------\n     */\n\n    return null;\n  }\n\n  /*\n   * Replaces the Record at the specified index \n   * with the new specified Record\n   */\n  public void editRecord(int index, String date, String reason) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use the set() method to set the record at the specified index to a new\n     * Record with the specified date and reason.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n  }\n\n  /*\n   * Returns a String containing each record in the list of records\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (int index = 0; index < records.size(); index++) {\n      result += records.get(index) + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Record.java": {
        "text": "/*\n * Represents a patient's medical record\n */\npublic class Record {\n\n  private String date;     // The date of a doctor's visit\n  private String reason;   // The reason for a doctor's visit\n\n  /*\n   * Sets date and reason to the specified values\n   */\n  public Record(String date, String reason) {\n    this.date = date;\n    this.reason = reason;\n  }\n\n  /*\n   * Returns the date of the doctor's visit\n   */\n  public String getDate() {\n    return date;\n  }\n\n  /*\n   * Returns the reason for the doctor's visit\n   */\n  public String getReason() {\n    return reason;\n  }\n\n  /*\n   * Returns a String containing the information about the visit\n   */\n  public String toString() {\n    return \"[\" + date + \"] \" + reason;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:15:46.329+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L6d_2023\\\"\"],\"cloned_from\":\"CSA U6L5-L6d_2023\"}]"
}]]></config>
</Javalab>
