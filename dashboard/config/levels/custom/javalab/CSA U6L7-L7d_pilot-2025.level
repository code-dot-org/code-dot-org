<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T21:32:07.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A financial consultant needs to organize their clients' expenses into different categories to help them manage their spending.\r\n\r\n✅ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Consultant</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">organizeExpenses()</code> method to categorize each expense as <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"Big\"</code> or <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"Small\"</code> based on its amount for a client and return an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> containing the categories for each expense.\r\n\r\n* If the expense is over $1000, add <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"Big - \"</code> and the name of the expense to an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code>.\r\n\r\n* If the expense is less than $1000, add <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"Small - \"</code> and the name of the expense to an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code>.\r\n\r\n✅ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ConsultantRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">organizeExpenses()</code> method and print the result.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Organizing Expenses",
    "bubble_choice_description": "A financial consultant needs to organize their clients' expenses into different categories to help them manage their spending.",
    "thumbnail_url": "https://images.code.org/194d43cc6ecd4e3dd3e7ecdac4028ddf-budget.png",
    "encrypted_validation": "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\nOGMrDD8l5+1L9GfoKUie\n",
    "encrypted_exemplar_sources": "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\nvbQ=\n",
    "start_sources": {
      "ConsultantRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class ConsultantRunner {\n  public static void main(String[] args) {\n\n    // Creates an ArrayList of expenses\n    ArrayList<Expense> expenses = new ArrayList<Expense>();\n    expenses.add(new Expense(\"Rent\", 2000.0));\n    expenses.add(new Expense(\"Groceries\", 500.0));\n    expenses.add(new Expense(\"Gas\", 100.0));\n    expenses.add(new Expense(\"Car payment\", 800.0));\n\n    // Creates a Client object\n    Client kai = new Client(\"Kai\", expenses);\n\n    // Creates a Consultant object\n    Consultant maya = new Consultant();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Call the organizeExpenses() method and print the results.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Consultant.java": {
        "text": "import java.util.ArrayList;\n\npublic class Consultant {\n  \n  /*\n   * Categorizes expenses based on their name and amount\n   * for a client and returns an ArrayList containing the\n   * categories for each expense\n   */\n  public ArrayList<String> organizeExpenses(Client client) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Get the client's expenses. Categorize each expense as either \"Big\" or\n     * \"Small\" based on the amount. Add the categorized expense to a new ArrayList\n     * and return the results.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    return null;\n  }\n\n  /*\n   * Returns a String containing each expense in the specified list\n   */\n  public String resultsToString(ArrayList<String> expenses) {\n    String result = \"\";\n\n    for (int index = 0; index < expenses.size(); index++) {\n      result += expenses.get(index) + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Client.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a client\n */\npublic class Client {\n  \n  private String name;                    // The name of the client\n  private ArrayList<Expense> expenses;    // The list of expenses for the client\n  \n  /*\n   * Sets name and expenses to the specified values\n   */\n  public Client(String name, ArrayList<Expense> expenses) {\n    this.name = name;\n    this.expenses = expenses;\n  }\n  \n  /*\n   * Returns the name of the client\n   */\n  public String getName() {\n    return name;\n  }\n  \n  /*\n   * Returns the list of expenses for the client\n   */\n  public ArrayList<Expense> getExpenses() {\n    return expenses;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "Expense.java": {
        "text": "/*\n * Represents an expense\n */\npublic class Expense {\n  \n  private String name;      // The name of the expense\n  private double amount;    // The amount of the expense\n  \n  /*\n   * Sets name and amount to the specified values\n   */\n  public Expense(String name, double amount) {\n    this.name = name;\n    this.amount = amount;\n  }\n  \n  /*\n   * Returns the name of the expense\n   */\n  public String getName() {\n    return name;\n  }\n  \n  /*\n   * Returns the amount of the expense\n   */\n  public double getAmount() {\n    return amount;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      }
    },
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T21:32:07.143+00:00\",\"changed\":[\"cloned from \\\"CSA U6L7-L7d_2025\\\"\"],\"cloned_from\":\"CSA U6L7-L7d_2025\"}]"
}]]></config>
</Javalab>
