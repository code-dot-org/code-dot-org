<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:54:50.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A researcher wants to determine what year computing power is predicted to match that of the human brain based on the increase in the speed and power of computers over recent years.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ComputingScene.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcGrowth()</code> method to calculate the estimated growth of computing power. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcGrowth()</code> method should:\r\n\r\n1. Have a parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">numYears</code> for the number of years to calculate.\r\n\r\n2. Calculate the result of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">GROWTH_RATE</code> raised to the power of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">numYears</code> multiplied by <code style=\"background-color: #ececec; color: black; font-weight: bold;\">startPower</code>.\r\n\r\n3. Return the result.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">drawResults()</code> method with the result returned from calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcGrowth()</code>.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math.pow()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Growth of Computing",
    "bubble_choice_description": "A researcher wants to determine what year computing power is predicted to match that of the human brain based on the increase in the speed and power of computers over recent years.",
    "thumbnail_url": "https://images.code.org/6a6999292b33d9af1b7ce70851fee99d-learning.png",
    "starter_assets": {
      "processor.png": "eefd7364-4876-4c43-be9c-df47215448f8.png"
    },
    "encrypted_validation": "oT9Mz2pHWllfqfGFc05ElB8kaftoVCSxuNEQB88Psa+zzmwFJi0rPRryrN9a\n+XbXh0fXO0h8Yt3IAysRBfL4mq2Y58fLlk+EkdVJVNguDzoqFkfXSajhboD7\nhG4+OD6XiLuPn7TXHLYlygb51esspIjpHrnzLxF578K7+ByJk/HBsNfEh3RZ\nFXR0sslhAthEkMT6COedYL51eMyGXSJkcy8hLhC44LJi6peyKxUzUmgNiLQN\ngatLxYUeuHZqoy0HK2RKxF7uolwu8OR57PxbpEnfE/Wh7wBl98xWgl7wapWk\n3eX78/95X+NCpPeryWQUD9C+JNkaTsPiIAOosIux7jPobhANAiCFj5Dvt2jf\ntlCHlXdP7MsCjUHYtG0UJlaejjtrkWMuf1qZoZ201CqUoYQdeBOYSAV+7Oep\nw2YIGU/TxhsSSY8PeVQ33/KZhC6YmuS27Sz8PDka8gd79muSexZvaXW0jynE\neT5PbZLhnV6HpO9fiXH46IU4S/g8vOe4ZBmEABWKQmURss2tIY5nbnUFO+rM\npPpBZGc/pMvhB6QeWSI7IsfCot5ZvmPCRkt1qVqEyweQXfsTrL6YeXCPbLFe\nYVTG3J/i0KHqpDBe5oGPbW8c2WMyH4SdIOT2+EIAKczMWi6iVv5d11v5jLwq\nEHRCoszoC32dL45LLAcfffl+OHKYoHb9d45+chV/UCUUeSuEKrB4462OAr6m\nZ3Ep5JV2eQidBN5IHHIe3x34ClaWSMmSJ20JH8RdT0ORk4vjBeJWltptBuoA\nIG6LGyKSP+cnS0r0CU6xBzQlwKMwUdOd6mV1shS8cndH2crRi2ql1OKxPgne\nHoBy3VF1lKZT0JNe7XEa06ONtznEOZg0IasipxdF24vQUf/dYgO0fuNonuU9\n2NlSHr4eYfg8PbmRdfFW45PanSR76sUfky73wNE+MrHUbRstK3eGkgMdxEHb\n6KRJoFN73w/jE40bsqVKfHJ592NJTURDoiZ3emxU+UFwg43V21kgxEXT7Ksw\nUWWMnPPzmV4e3jjWtKjvwIYkliChX/Pkz2LcomVWf8jhbOI7HEvUUwCbUKZv\nkMkh4lnQ9F2d9HhlzQMZt38Ww1916K75MdeikzsKD9YEDvphWYfOQxizQncq\nodVHnPTT3/IsJTXpwJ5m4htt4f4O10n8zS0V55kBc+wMo8ShB20do6Ys09gF\ngfVWBYDDwWcCyKnLdthiOInDRcNxafJb+7sd9iaMOHKczPFuBxS+ygPW/9aX\nWgcd3aHbuOb4k69zVQFNSC74yQHow0R98yFoDShftq/IUTdtwl7TAmKiE6gZ\nluQbMm5Uyc3kY58h5Z11YuhFdTwC7Ft6WiDx+98wLz8CHGmjVyRJRs4TxNoP\nuQ2gK5HYgwqELrx6jbJ7wm+neWU5E9MGAlNphQ+cOAND+VDgV/Q3oZl+RCXI\nXnuj0j5t2ztDlINLZ/E3xhEG9N3XZsYCwUFKDxnwM0+d6zJIylg4I26BkDQl\nHv1Os4Z9mSC3LgNO4qimOOTXlWltKT0oT/AVZ3O3Et7d+4lNQPPIvARjph4y\n6HXVzy+mGuNu6TCvkLc7py5Nz8nwrFdK9do7BeDv4cmf7mbBnGQaOREuOmE4\npbBg5Q04deaXopyr1ig1sToFOWdge2JRDpR7Xyg6H2mIMbZBuH5WV5Gp4fHL\nchn3Cjxx2XFQuYkT7M/NAndYO0KohNNRTXYdjzuNydYJXTtu7BkVRbGsI5f1\nUVRNdSDNnUDhRcIG6kpDTdHbzR0t4Q0=\n",
    "encrypted_exemplar_sources": "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\nbHD5\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a ComputingScene object\n    ComputingScene growth = new ComputingScene(1960, 151);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcGrowth() method and pass the result to a call to the\n     * drawResult() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n\n    \n    \n\n    // Plays the scene\n    Theater.playScenes(growth);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ComputingScene.java": {
        "text": "import org.code.theater.*;\n\npublic class ComputingScene extends Scene {\n\n  private int year;                                  // The year to start the scene\n  private double startPower;                         // The calculations per second of the year\n  public static final double GROWTH_RATE = 1.2;      // The average growth rate of the calculations per second\n\n  /*\n   * Sets year to the specified year and startPower to the specified value\n   */\n  public ComputingScene(int year, double startPower) {\n    this.year = year;\n    this.startPower = startPower;\n  }\n\n  /*\n   * Returns the year to start the scene\n   */\n  public int getYear() {\n    return year;\n  }\n\n  /*\n   * Returns the starting calculations per second for the year\n   */\n  public double getStartPower() {\n    return startPower;\n  }\n\n  /*\n   * Returns the estimated computing power in numYears\n   */\n  public double calcGrowth(int numYears) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calculate the estimated growth of computing power using the formula.\n     * -----------------------------------------------------------------------------\n     */\n    \n    return 0;\n  }\n\n  /*\n   * Draws an image of a processor in the scene\n   */\n  public void drawImage() {\n    int imageWidth = 150;\n    int xPosition = (getWidth() / 2) - (imageWidth / 2);\n    drawImage(\"processor.png\", xPosition, 110, imageWidth);\n  }\n\n  /*\n   * Draws the result in the scene\n   */\n  public void drawResult(double result, int numYears) {\n    double difference = result - startPower;\n    \n    drawText(\"Computing Power in \" + year, 75, 65);\n    drawText(\"was \" + startPower, 75, 90);\n    pause(0.5);\n\n    drawImage();\n    pause(0.5);\n\n    drawText(\"In \" + (year + numYears) + \", it could increase\", 75, 300);\n    pause(0.5);\n    drawText(\"by \" + difference + \" to \", 75, 325);\n    pause(0.5);\n    drawText(result + \"\", 75, 350);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:54:50.914+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L5c_2023\\\"\"],\"cloned_from\":\"CSA U4L3-L5c_2023\"}]"
}]]></config>
</Javalab>
