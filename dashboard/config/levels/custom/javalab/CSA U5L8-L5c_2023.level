<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-03-28T00:08:53.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A colorize filter changes the color of an image based on its original grayscale values. The grayscale value of each pixel is converted to a hue value, which is then used to apply a specific color to the pixel.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ColorImage</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">colorize()</code> method to apply a colorize filter to each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">colorize()</code> method should:\r\n\r\n1. Traverse the 2D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> objects.\r\n\r\n2. Calculate the average of the red, green, and blue value of each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.\r\n\r\n3. If the average is less than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">85</code>, set the red value to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">255</code>, and the green and blue values to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0</code>.\r\n\r\n4. If the average is less than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">170</code>, set the green value to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">255</code>, and the red and blue values to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0</code>.\r\n\r\n5. Otherwise, set the blue value to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">255</code>, and the red and green values to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class,\r\n\r\n1. Instantiate an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ColorImage</code> object with an image in the Asset Manager, then draw the image in the scene without any filters. You can also upload and use your own image.\r\n\r\n2. Add a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">pause()</code> after drawing the image.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">colorize()</code> method on your image, then draw the image with the filter in the scene.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with getting and setting color values for a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.\r\n</div>\r\n\r\n## üéØ Goal\r\n\r\n![](https://images.code.org/dda6522c6a6738a8e2e85736d753bf4b-image-1682902918269.gif)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Colorize Filter",
    "bubble_choice_description": "A colorize filter changes the color of an image based on its original grayscale values. The grayscale value of each pixel is converted to a hue value, which is then used to apply a specific color to the pixel.",
    "starter_assets": {
      "track.jpg": "efdba3ea-f076-4b0b-88fb-5cc76cb78da0.jpg",
      "starwars.jpg": "7bb7f0be-b946-408d-9898-a93cb21bb340.jpg",
      "speakers.jpg": "1f33ac30-4190-4fb9-a377-ed070e5201a4.jpg",
      "soccer.jpg": "a33dc233-ea27-4992-bbdf-60c1ccc5c982.jpg",
      "paintbrushes.jpg": "f703ab8d-a54d-4c08-ac4f-16d978017c9f.jpg",
      "nature.jpg": "d164206c-e729-464a-9276-f5e9d3c65420.jpg",
      "motivation.jpg": "96a07899-1111-429c-91fb-91d79b6b1828.jpg",
      "laptop.jpg": "a722eb1e-f01f-4801-a9d6-96d24ef6cf24.jpg",
      "guitar.jpg": "372a2331-1226-44b2-8187-bf788c22b5d6.jpg",
      "games.jpg": "d01e379f-3513-44d8-921f-ef73c4b62fcc.jpg",
      "football.jpg": "9d49b2d5-5ec0-46ab-8641-73465b257c7f.jpg",
      "fashion.jpg": "9377846f-65af-4ef9-8c92-3dcf25d20cfc.jpg",
      "electricguitars.jpg": "ef1a1a2f-6050-4d6d-99ed-e7c01b890b7b.jpg",
      "donut.jpg": "d4af1766-2dbb-4798-ba88-9de1bf309b65.jpg",
      "dog.jpg": "2922fd7e-e425-4d95-b056-34373941afcd.jpg",
      "cellphone.jpg": "8f762e46-4225-4be4-80e7-0a84ae6b1373.jpg",
      "basketball.jpg": "dbdd309a-ab9d-4bea-8609-c5fb724378fe.jpg",
      "baseball.jpg": "0233a241-9ec4-4b6c-a588-77aecfe2eec6.jpg",
      "astronaut.jpg": "867839a4-d8be-4319-bbd7-e3da2791f163.jpg"
    },
    "encrypted_validation": "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\nUKUph2Fu+YD4u+lRdmZD+UMKz8M=\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a Scene object\n    Scene images = new Scene();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a ColorImage object, and draw the image in the scene with no\n     * filter. Then call the colorize() method, and draw the image in the scene again.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    // Plays the scene\n    Theater.playScenes(images);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ImagePlus.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image that can be modified with filters and effects\n */\npublic class ImagePlus extends Image {\n\n  private Pixel[][] pixels;    // The 2D array of pixels\n\n  /*\n   * Sets the superclass filename to the specified filename\n   * and calls the getPixelsFromImage() method to initialize\n   * the 2D array of Pixel objects that make up the image\n   */\n  public ImagePlus(String filename) {\n    super(filename);   // Calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixelsFromImage();\n  }\n\n  /*\n   * Returns the 2D array of pixels\n   */\n  public Pixel[][] getImagePixels() {\n    return pixels;\n  }\n\n  /*\n   * Returns the pixels in the image as a 2D array of Pixel objects\n   */\n  public Pixel[][] getPixelsFromImage() {\n    Pixel[][] tempPixels = new Pixel[getHeight()][getWidth()];\n    \n    for (int row = 0; row < tempPixels.length; row++) {\n      for (int col = 0; col < tempPixels[0].length; col++) {\n        tempPixels[row][col] = getPixel(col, row);\n      }\n    }\n\n    return tempPixels;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ColorImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a colorized image\n */\npublic class ColorImage extends ImagePlus {\n\n  /*\n   * Calls the superclass constructor to initialize pixels\n   */\n  public ColorImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Applies a colorize filter by converting each Pixel to grayscale and applying\n   * a color to it based on its grayscale value\n   */\n  public void colorize() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Get the pixels from the image, and traverse the 2D array of Pixel objects.\n     * Calculate the average of the red, green, and blue color values of each Pixel,\n     * and set the red, green, and blue values of the Pixel based on the average.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "thumbnail_url": "https://images.code.org/0eba59c8ae01ce72440cf6f94bf022df-optionC.gif",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-03-28T00:08:53.566+00:00\",\"changed\":[\"cloned from \\\"CSA U5L8-L5b_2023\\\"\"],\"cloned_from\":\"CSA U5L8-L5b_2023\"},{\"changed_at\":\"2023-03-28 00:08:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-22 00:25:48 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:31:30 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:31:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:31:35 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:37:50 +0000\",\"changed\":[\"long_instructions\",\"csa_view_mode\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 22:59:08 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:55:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:55:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:55:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:58:01 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 00:03:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 00:03:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 00:03:54 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 00:04:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 00:04:20 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 00:04:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 01:02:09 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
