<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:56:57.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A library keeps track of books in a list that is sorted in alphabetical order.\r\n\r\n##In Library.java:\r\n\r\n1. Write the method `findBook()`(#e7e8ea) to find a book title in `bookList`(#e7e8ea) using an iterative or recursive binary search. Return the author of the book.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Library Books",
    "bubble_choice_description": "Use a binary search to find the author of a book in a list of books.",
    "thumbnail_url": "https://images.code.org/9c8bebfb1b41957cc443d6ccf2b1d087-image-1641321200491.png",
    "encrypted_exemplar_sources": "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\nsbmLSHTIIJwjO7QxjWjAHMjqTBAuaes=\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "yOReheYjD4qBHHhQUybdrK0IRMWPN9S0/UgYLXhpySGKa8uvFd2XV5zqFTGu\n5evxABlz2/j0wsiWhL+Rel2J/bEtU9sFarWcAF5HZSlGX3yxlTHihV2QWKJd\n3UC+LsBO+PjsEKde66T00XBGvrZbdjDbECQjTbCPUyUeN8J/ktEoJiF2OWdZ\n9o+YqABsl2yTI2vJZn/wSE0nK3o4xLkwS/wKmmHKXyrhqr3ucEqxj+nLVlUh\nBGA9GpHZ4FKnWt/T+R1s6k+UtryD/Tr2RFKn0s7TEPj1IkD0/pVOTTygTgtD\nMafioy4CbbrXGjg7Cn/iQzCxMUwuQ5BHqnKSdWmU4GYZPUk1InHSjiOQMqgd\n5t8su0sv37wcVHbhIBxyi6fnHS+LrTppTjx+NKhKw53UgRKGVObf6SAlYAsw\nXaQDKZIYjcJHPDCtw4dGrunyRcm5LC5JWrQ18stXb+7v+DMpZmHBk2Q3fRNJ\nmlXI56RrZ+qQTJV2KeuewrRve7h5t8NRcNcSfePqejJ/2ytOwUFNn9L6DvTD\nfHhJtECUPzO551UbuCbCoEGCjqvCTGXsqJ7uJhO8SRdQkIxHFIndS1ItCAzs\noBskm5/UN8piyQ8ev5NQqFJwxprrsQpQPgvim2yyyE3ngw8/C++v9WgKe8a5\n4gPNCwIR3tCf4Y5rIaOUNbU8t9kyHjrNDnvfPjrOEkrYoiZjeaQzMhtcWwwt\nhbUhTYtcUzi8FltaQ7CM+yZdu86JrrtFTFelwEmpiS+OsvB/HHefvK+JKdhB\n4WnfhTOujuIkoGAJjjCXfHBAp8sFrMz3DM8muW+Nct4moiqSovA7aoQXEX5M\ndeU9Idp9RkmkEryxNY6GktkWHfv8J3XxJkQXtBj5eu5ZSocQwD7E0crFFpBY\niTE0JbriWGi1yzC8vkW1iyg/i0ssdT+5cHfVrAIuMxi0BuQkszz4cgKs70KX\nzb/8CJHJB7mVtf3CxZ2f5Cq5yvRvWpdBKFKGoKY3eciJEkeQ9GG2c7YKX3p4\nmyBFj8WuM13/ATAa8eYBf4bM8met8W6AfZvEVpTnE3baVFezJdf7M3+ulpYZ\n7/sREA6rwYFI9kXSpoN7+SqutZo43y/dfmvTWFN1DbtdZcunU4gLPIRN7jd1\nycD918N9TuuLKoefx3jtQvXuLMwtSa3PfIdBjCbs8zzHdjvqsjxylKnA/8On\ncSBYXU6VJQy/yysJNTBTcEF5U8a1kI05lJtacNL3MgBwiPXfjgC5L0oPl1ar\njSNHbLwCwgNqDtoTTqjN9MAT/7qYDR4l5QevULnRYmAnSCNu50iu2zpIrtQU\nhPQ3TQXohPpfGlxP73I4TlKz1EiOwycTuv2H/dIuvV0/IgDsrJ/YLzeUZkx9\naJQi0znuJmGFtQRby2BjBINNqghE0mh5YAAgQCQPQ8YEyKsKF17xHYssk+te\no2t2TsfIqGum/CJLs6W/g7TRXgU4SNkRQgvb9fVwRPZd7nNlT54NK5f0QyCh\n5pAwpB/gdS1KhEhvWEc2QUsG/0hkDyxV8a1iBhp6brQcU68qFbqEmsnt1DaT\nju97/UczYWTaz5fPEQA6oktS7VQNC44+ap2X23K4ygd38hLKxyen5MjuxpN3\nfR/dXH6ruLk48qm1fBnZrb9DTgIUmYSEummOKbZ4fu7b\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<String> myBooks = FileReader.getStringData(\"books.txt\");\n    Library myLibrary = new Library(myBooks);\n\n    System.out.println(\"\\\"The Hate U Give\\\" was written by \" + myLibrary.findBook(\"The Hate U Give\"));\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Library.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a library that contains books\n */\npublic class Library {\n\n  private ArrayList<String> bookList;   // The list of books\n\n  /*\n   * Creates a Library with a specified list of books\n   */\n  public Library(ArrayList<String> bookList) {\n    this.bookList = bookList;\n  }\n\n /*\n   * Returns the amount of books present in the Library\n   */\n  public int getNumBooks() {\n    return bookList.size();\n  }\n  \n  /*\n   * Searches for a specified book title in\n   * the bookList and returns its author\n   */\n  public String findBook(String bookTitle) {\n    // TO DO #1: Implement an iterative or recursive binary search\n    // to find the target book title in bookList.\n\n    return null;    \n  }\n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "books.txt": {
        "text": "Aristotle and Dante Discover the Secrets of the Universe: Benjamin Alire Sáenz\nFirekeeper's Daughter: Angeline Boulley\nThe Hate U Give: Angie Thomas\nThey Both Die at the End: Adam Silvera",
        "isVisible": true,
        "tabOrder": 3
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:56:57.371+00:00\",\"changed\":[\"cloned from \\\"CSA U8L4-L2d_2022\\\"\"],\"cloned_from\":\"CSA U8L4-L2d_2022\"},{\"changed_at\":\"2022-10-07 13:42:51 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-07 13:42:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-07 14:52:39 +0000\",\"changed\":[\"start_sources\",\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-07 14:53:30 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-07 14:57:42 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-07 14:58:24 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-12 15:18:59 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
