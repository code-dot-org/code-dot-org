<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:52:49.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://www.kaggle.com/datasets/thedevastator/fundraising-by-members-of-the-117th-congress\" target=\"_blank\">**Fundraising by Members of the 117th Congress dataset**</a> includes the total funds each congressperson raised. Each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Member</code> object is stored in a 1D array called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">members</code>.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Congress.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageFundsRaised()</code> method to calculate and return the average funds raised using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">DataRunner.java</code>,\r\n\r\n1. Instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Congress</code> object with the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"names.txt\"</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"funds.txt\"</code> files containing the names and funds raised data.\r\n\r\n2. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageFundsRaised()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ntotalFunds = 0.0\r\nfor each member in members\r\n  totalFunds += member.getRaised()\r\nreturn totalFunds / members.length\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ What is the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \r\n    <p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class is a hidden support class that has methods for reading data from a text file into a 1D array. It has the following methods:</p>\r\n\t\t<ul>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containng the data</li>\r\n\t\t</ul>\r\n    \t<p>For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nString[] names = FileReader.toStringArray(\"names.txt\");\r\n \r\nint[] numbers = FileReader.toIntArray(\"numbers.txt\");\r\n \r\ndouble[] prices = FileReader.toDoubleArray(\"prices.txt\");</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/enhanced-for-loops"
    ],
    "display_name": "Congress Fundraising",
    "bubble_choice_description": "Find the average funds raised by each member of the 117th Congress.",
    "thumbnail_url": "https://images.code.org/71ce4ea770ffef19ac6ee8e9ab21f921-congress.png",
    "encrypted_validation": "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\n",
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a Congress object with the \"names.txt\" and \"funds.txt\" files,\n     * then call the calcAverageFundsRaised() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Congress.java": {
        "text": "/*\n * Manages data about members of congress\n */\npublic class Congress {\n\n  private Member[] members;    // The 1D array of Member objects\n\n  /*\n   * Reads the data from namesFile and fundsFile to\n   * to initialize the 1D array members\n   */\n  public Congress(String namesFile, String fundsFile) {\n    members = createMembers(namesFile, fundsFile);\n  }\n\n  /*\n   * Returns a 1D array of Member objects using the data\n   * from namesFile and fundsFile\n   */\n  public Member[] createMembers(String namesFile, String fundsFile) {\n    String[] namesData = FileReader.toStringArray(namesFile);\n    double[] fundsData = FileReader.toDoubleArray(fundsFile);\n    Member[] tempMembers = new Member[namesData.length];\n\n    for (int index = 0; index < tempMembers.length; index++) {\n      tempMembers[index] = new Member(namesData[index], fundsData[index]);\n    }\n\n    return tempMembers;\n  }\n\n  /*\n   * Calculates and returns the average funds raised by each member\n   */\n  public double calcAverageFundsRaised() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use an enhanced for loop to calculate the average funds raised by each\n     * member in the 1D array members.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n\n  /*\n   * Returns a String containing each member's information\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (int index = 0; index < members.length; index++) {\n      result += members[index] + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Member.java": {
        "text": "/*\n * Represents a member of Congress\n */\npublic class Member {\n\n  private String name;      // The name of the member\n  private double raised;    // The amount raised by the member\n\n  /*\n   * Sets name and raised to the specified values\n   */\n  public Member(String name, double raised) {\n    this.name = name;\n    this.raised = raised;\n  }\n\n  /*\n   * Returns the name of the member\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the amount raised by the member\n   */\n  public double getRaised() {\n    return raised;\n  }\n\n  /*\n   * Returns a String containing the name of the member\n   * and the amount they raised\n   */\n  public String toString() {\n    return name + \": $\" + raised + \" raised\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "names.txt": {
        "text": "Abigail Spanberger\nAdam Kinzinger\nAdam Schiff\nAdam Smith\nAdrian Smith\nAdriano Espaillat\nAl Green\nAl Lawson\nAlan Lowenthal\nAlbio Sires\nAlex Mooney\nAlex Padilla\nAlexandria Ocasio-Cortez\nAlma Adams\nAumua Amata Radewagen\nAmi Bera\nAmy Klobuchar\nAndre Carson\nAndrew Clyde\nAndrew Garbarino\nAndy Barr\nAndy Biggs\nAndy Harris\nAndy Kim\nAndy Levin\nAngie Craig\nAngus King\nAnn Kirkpatrick\nAnn Kuster\nAnn Wagner\nAnna Eshoo\nAnthony Brown\nAnthony Gonzalez\nAshley Hinson\nAugust Pfluger\nAustin Scott\nAyanna Pressley\nBarbara Lee\nBarry Loudermilk\nBarry Moore\nBen Cardin\nBen Cline\nBen Ray Luj√É¬°n\nBen Sasse\nBennie Thompson\nBernie Sanders\nBeth Van Duyne\nBetty McCollum\nBill Cassidy\nBill Foster\nBill Hagerty\nBill Huizenga\nBill Johnson\nBill Pascrell\nBill Keating\nBill Posey\nBilly Long\nBlaine Luetkemeyer\nBlake Moore\nBob Casey Jr.\nBob Gibbs\nBob Good\nBob Latta\nBobby Rush\nBobby Scott\nBonnie Watson Coleman\nBrad Finstad\nBrad Schneider\nBrad Sherman\nBrad Wenstrup\nBrenda Lawrence\nBrendan Boyle\nBrett Guthrie\nBrian Babin\nBrian Fitzpatrick\nBrian Higgins\nBrian Mast\nBrian Schatz\nBruce Westerman\nBryan Steil\nBuddy Carter\nBurgess Owens\nByron Donalds\nCarlos Gimenez\nCarol Miller\nCarolyn Bourdeaux\nCarolyn Maloney\nCatherine Cortez Masto\nCathy McMorris Rodgers\nChuck Schumer\nCharlie Crist\nChellie Pingree\nCheri Bustos\nChip Roy\nChris Coons\nChris Jacobs\nChris Pappas\nChris Smith\nChris Stewart\nChris Van Hollen\nChrissy Houlahan\nChristopher S. Murphy\nChuck Fleischmann\nChuck Grassley\nCindy Axne\nCindy Hyde-Smith\nClaudia Tenney\nClay Higgins\nCliff Bentz\nColin Allred\nConor Lamb\nCori Bush\nCory Booker\nCynthia Lummis\nDan Bishop\nDan Crenshaw\nDan Kildee\nDan Meuser\nDan Newhouse\nDan Sullivan\nDaniel Webster\nDanny K. Davis\nDarin LaHood\nDarrell Issa\nDarren Soto\nDavid Cicilline\nDavid Kustoff\nDavid McKinley\nDavid Joyce\nDavid Price\nDavid Rouzer\nDavid Schweikert\nDavid Scott\nDavid Trone\nDavid Valadao\nDean Phillips\nDeb Fischer\nDebbie Dingell\nDebbie Lesko\nDebbie Stabenow\nDebbie Wasserman Schultz\nDeborah Ross\nDerek Kilmer\nDiana DeGette\nDiana Harshbarger\nDianne Feinstein\nDick Durbin\nDina Titus\nDon Bacon\nDon Beyer\nDon Norcross\nDonald Payne Jr.\nDonald McEachin\nDoris Matsui\nDoug LaMalfa\nDoug Lamborn\nDrew Ferguson\nDusty Johnson\nDutch Ruppersberger\nDwight Evans\nEarl Blumenauer\nEd Case\nEd Markey\nEd Perlmutter\nEddie Bernice Johnson\nElaine Luria\nEleanor Holmes Norton\nElise Stefanik\nElissa Slotkin\nElizabeth Warren\nEmanuel Cleaver\nEric Swalwell\nFrank Lucas\nFrank Mrvan\nFrank Pallone Jr.\nFred Keller\nFred Upton\nFrederica Wilson\nFrench Hill\nG.K. Butterfield\nGarret Graves\nGary Palmer\nGary Peters\nGerry Connolly\nGlenn Grothman\nGlenn Thompson\nGrace Meng\nGrace Napolitano\nGreg Murphy\nGreg Pence\nGreg Stanton\nGreg Steube\nGregory Meeks\nGus Bilirakis\nGuy Reschenthaler\nGwen Moore\nHakeem Jeffries\nHal Rogers\nHaley Stevens\nHank Johnson\nHenry Cuellar\nIlhan Omar\nJack Reed\nJackie Speier\nJacky Rosen\nJahana Hayes\nJaime Herrera Beutler\nJake Auchincloss\nJake Ellzey\nJake LaTurner\nJamaal Bowman\nJames Comer\nJames Clyburn\nJim Risch\nJames Lankford\nJim McGovern\nJamie Raskin\nJan Schakowsky\nJared Golden\nJared Huffman\nJason Crow\nJason Smith\nJay Obernolte\nJeanne Shaheen\nJeff Duncan\nJeff Merkley\nJeff Van Drew\nJennifer Wexton\nJenniffer Gonzalez\nJerrold Nadler\nJerry Carl\nJerry McNerney\nJerry Moran\nJesus Garcia\nJim Baird\nJim Banks\nJim Cooper\nJim Costa\nJim Himes\nJim Jordan\nJim Langevin\nJimmy Gomez\nJimmy Panetta\nJoaquin Castro\nJodey Arrington\nJody Hice\nJoe Courtney\nJoe Manchin\nJoe Sempolinski\nJoe Wilson\nJohn Barrasso\nJohn Bergman\nJohn Boozman\nJohn Carter\nJohn Cornyn\nJohn Curtis\nJohn Garamendi\nJohn Hickenlooper\nJohn Hoeven\nJohn Joyce\nJohn Katko\nJohn Kennedy\nJohn Larson\nJohn Moolenaar\nJohn Rose\nJohn Rutherford\nJohn Sarbanes\nJohn Thune\nJohn Yarmuth\nJon Ossoff\nJon Tester\nJoni Ernst\nJoseph Morelle\nJoe Neguse\nJosh Gottheimer\nJosh Harder\nJosh Hawley\nJoyce Beatty\nJuan Vargas\nJudy Chu\nJulia Brownley\nJulia Letlow\nKai Kahele\nKamala Harris\nKaren Bass\nKat Cammack\nKatherine Clark\nKathleen Rice\nKathy Castor\nKathy Manning\nKatie Porter\nKay Granger\nKelly Armstrong\nKen Buck\nKen Calvert\nKevin Brady\nKevin Cramer\nKevin Hern\nKevin McCarthy\nKim Schrier\nKirsten Gillibrand\nKurt Schrader\nKweisi Mfume\nKyrsten Sinema\nLance Gooden\nLarry Bucshon\nLauren Underwood\nLauren Boebert\nLee Zeldin\nLinda S√É¬°nchez\nLindsey Graham\nLisa Blunt Rochester\nLisa McClain\nLisa Murkowski\nLiz Cheney\nLizzie Fletcher\nLloyd Doggett\nLloyd Smucker\nLois Frankel\nLori Trahan\nLou Correa\nLouis B. Gohmert Jr.\nLucille Roybal-Allard\nLucy McBath\nMadeleine Dean\nMadison Cawthorn\nMaggie Hassan\nMarc Veasey\nMarco Rubio\nMarcy Kaptur\nMaria Cantwell\nMaria Salazar\nMariannette Miller-Meeks\nMarie Newman\nMarilyn Strickland\nMario Diaz-Balart\nMarjorie Taylor Greene\nMark Amodei\nMark Desaulnier\nMark Green\nMark Kelly\nMark Pocan\nMark Takano\nMark Warner\nMarkwayne Mullin\nMarsha Blackburn\nMartin Heinrich\nMary Gay Scanlon\nMary Miller\nMary Peltola\nMatt Cartwright\nMatt Gaetz\nMatt Rosendale\nMaxine Waters\nMayra Flores\nMazie K. Hirono\nMelanie Stansbury\nMichael Bennet\nMichael Burgess\nMichael Cloud\nMichael Guest\nMichael McCaul\nMichael Turner\nMichael San Nicolas\nMichael Waltz\nMichelle Fischbach\nMichelle Steel\nMike Bost\nMike Braun\nMike Carey\nMike Crapo\nMike Rogers\nMike Doyle\nMike Gallagher\nMike Garcia\nMike Johnson\nMike Kelly\nMike Lee\nMike Levin\nMike Quigley\nMike Rounds\nMike Simpson\nMike Thompson\nMikie Sherrill\nMitch McConnell\nMitt Romney\nMo Brooks\nMondaire Jones\nMorgan Griffith\nNancy Mace\nNancy Pelosi\nNanette Barrag√É¬°n\nNeal Dunn\nNicole Malliotakis\nNikema Williams\nNorma Torres\nNydia Velazquez\nPat Ryan\nPat Toomey\nPat Fallon\nPatrick Leahy\nPatrick McHenry\nPatty Murray\nPaul Gosar\nPaul Tonko\nPete Aguilar\nPete Sessions\nPete Stauber\nPeter DeFazio\nPeter Meijer\nPeter Welch\nPramila Jayapal\nRaja Krishnamoorthi\nRalph Norman\nRand Paul\nRandy Feenstra\nRandy Weber\nRaphael Warnock\nRashida Tlaib\nRaul Grijalva\nRaul Ruiz\nRichard Blumenthal\nRichard Burr\nRichard Shelby\nRichard Neal\nRichard Hudson\nRick Allen\nRick Crawford\nRick Larsen\nRick Scott\nRitchie Torres\nRo Khanna\nRob Portman\nRob Wittman\nRobert Aderholt\nBob Menendez\nRobin Kelly\nRodney Davis\nRoger Marshall\nRoger Wicker\nRoger Williams\nRon Estes\nRon Johnson\nRon Kind\nRon Wyden\nRonny Jackson\nRosa DeLauro\nRoy Blunt\nRuben Gallego\nRuss Fulcher\nSalud Carbajal\nSam Graves\nSanford Bishop Jr.\nSara Jacobs\nScott Desjarlais\nScott Fitzgerald\nScott Franklin\nScott Perry\nScott Peters\nSean Casten\nSean Maloney\nSeth Moulton\nSharice Davids\nSheila Cherfilus-McCormick\nSheila Jackson Lee\nSheldon Whitehouse\nShelley Moore Capito\nSherrod Brown\nShontel Brown\nStacey Plaskett\nSteny Hoyer\nStephanie Bice\nStephanie Murphy\nStephen Lynch\nSteve Chabot\nSteve Cohen\nSteve Scalise\nSteve Womack\nSteve Daines\nSteven Horsford\nSteven Palazzo\nSusan Collins\nSusan Wild\nSusie Lee\nSuzan DelBene\nSuzanne Bonamici\nSylvia Garcia\nTammy Baldwin\nTammy Duckworth\nTed Budd\nTed Cruz\nTed Deutch\nTed Lieu\nTeresa Leger Fernandez\nTerri Sewell\nThom Tillis\nThomas Massie\nTim Burchett\nTim Kaine\nTim Ryan\nTim Scott\nTim Walberg\nTina Smith\nTodd Young\nTom Carper\nTom Cole\nTom Cotton\nTom Emmer\nTom Malinowski\nTom McClintock\nTom O'Halleran\nTom Rice\nTom Suozzi\nTom Tiffany\nTommy Tuberville\nTony C√É¬°rdenas\nTony Gonzales\nTracey Mann\nTrent Kelly\nTrey Hollingsworth\nTroy Balderson\nTroy Carter\nTroy Nehls\nVal Demings\nVan Taylor\nVernon Buchanan\nVeronica Escobar\nVicente Gonzalez\nVicky Hartzler\nVictoria Spartz\nVirginia Foxx\nWarren Davidson\nWilliam Timmons\nYoung Kim\nYvette Clarke\nYvette Herrell\nZoe Lofgren",
        "isVisible": true,
        "tabOrder": 3
      },
      "funds.txt": {
        "text": "7719396.00\n2192741.00\n20993041.00\n1211111.00\n1617611.00\n1178693.00\n346571.00\n593604.00\n181286.00\n204340.00\n4262971.00\n11253771.00\n11326505.00\n838536.00\n54700.00\n1355357.00\n3234766.00\n725565.00\n726917.00\n3184656.00\n3447266.00\n1761000.00\n1757044.00\n6069123.00\n2586972.00\n6817301.00\n81913.00\n0.00\n3873628.00\n4331508.00\n1857034.00\n448866.00\n778998.00\n6446790.00\n2639948.00\n761878.00\n1242476.00\n1881840.00\n717298.00\n790735.00\n152052.00\n858890.00\n1097555.00\n951050.00\n1247753.00\n14074831.00\n3465317.00\n1991061.00\n1978660.00\n3289974.00\n2369794.00\n2480390.00\n1534981.00\n1389395.00\n620848.00\n893757.00\n1289389.00\n2370318.00\n1580076.00\n4120442.00\n321762.00\n1038921.00\n1411641.00\n193192.00\n758691.00\n781122.00\n1242835.00\n3360517.00\n1593208.00\n1904466.00\n344191.00\n1406396.00\n2094504.00\n875803.00\n3991112.00\n1447143.00\n6007472.00\n2328949.00\n1656992.00\n3232315.00\n1854187.00\n3149814.00\n5225390.00\n2016114.00\n1084888.00\n2746695.00\n4353630.00\n37993811.00\n5808554.00\n35899966.00\n381761.00\n509569.00\n167506.00\n2071661.00\n858263.00\n474819.00\n4220118.00\n1332282.00\n996345.00\n6167303.00\n4418709.00\n569007.00\n510936.00\n7828900.00\n6131905.00\n806946.00\n2989524.00\n856339.00\n1010336.00\n3119825.00\n5272240.00\n2212505.00\n5794554.00\n220970.00\n1793984.00\n14535870.00\n4798334.00\n853475.00\n1979358.00\n629343.00\n704798.00\n570467.00\n3632692.00\n1115797.00\n1191099.00\n1838461.00\n1800445.00\n2111035.00\n2367635.00\n199991.00\n1204897.00\n1646710.00\n1911503.00\n12990741.00\n3215917.00\n2049518.00\n983002.00\n1427992.00\n1076710.00\n3437752.00\n1881484.00\n1936676.00\n2461642.00\n1029410.00\n1720763.00\n9778.00\n1028474.00\n2588432.00\n3367598.00\n1993756.00\n1836753.00\n1260631.00\n821439.00\n1284829.00\n783541.00\n465226.00\n3163351.00\n2447306.00\n970454.00\n1083660.00\n1218880.00\n991211.00\n904754.00\n627622.00\n15000.00\n8724776.00\n217953.00\n8417574.00\n8700992.00\n4754168.00\n1042771.00\n3390174.00\n1388678.00\n1871503.00\n2803934.00\n634266.00\n1396865.00\n563173.00\n2895371.00\n217083.00\n1733173.00\n1113250.00\n3667685.00\n1941614.00\n1210017.00\n2412193.00\n1423370.00\n295443.00\n1724862.00\n2097733.00\n3879556.00\n1472022.00\n2498238.00\n1746079.00\n1701888.00\n1042952.00\n5529626.00\n696558.00\n5300715.00\n481307.00\n4269860.00\n2828252.00\n472779.00\n273672.00\n4215388.00\n2253420.00\n3078342.00\n2824798.00\n6278712.00\n1393362.00\n1754371.00\n1506882.00\n3208608.00\n403990.00\n5429416.00\n975577.00\n4160925.00\n1445030.00\n5051130.00\n827098.00\n2417062.00\n2714726.00\n854849.00\n1020109.00\n1536235.00\n1558322.00\n2816286.00\n3369890.00\n560343.00\n2124293.00\n923401.00\n538284.00\n4880505.00\n844278.00\n335990.00\n2302093.00\n561230.00\n1727906.00\n1520006.00\n12417107.00\n402848.00\n1566445.00\n2287480.00\n638820.00\n1888539.00\n-42855.00\n1729051.00\n7790164.00\n241369.00\n910221.00\n1480419.00\n1622189.00\n6252176.00\n1192842.00\n1974574.00\n1898707.00\n1012953.00\n864182.00\n2941980.00\n1373506.00\n1517310.00\n28119082.00\n1614911.00\n1992376.00\n1442822.00\n710380.00\n177476.00\n6770674.00\n190197.00\n10260242.00\n2335296.00\n1642695.00\n1775246.00\n2099507.00\n7720264.00\n6193616.00\n11028757.00\n2027765.00\n905730.00\n1275434.00\n1998752.00\n2620536.00\n463256.00\n0.00\n507962.00\n2091623.00\n2002236.00\n466705.00\n1432885.00\n2692609.00\n21441693.00\n1846695.00\n1794452.00\n1375514.00\n3077072.00\n273024.00\n458054.00\n1167360.00\n24791538.00\n8163575.00\n3301708.00\n2244429.00\n452659.00\n7112616.00\n814098.00\n1296300.00\n6175563.00\n6227355.00\n766924.00\n1403194.00\n6695582.00\n2543199.00\n1189244.00\n8559805.00\n0.00\n3412257.00\n1131363.00\n1407018.00\n1117075.00\n1812003.00\n1174363.00\n206591.00\n168660.00\n5042351.00\n1727651.00\n3965149.00\n30914830.00\n1652257.00\n36709285.00\n2855041.00\n686777.00\n4516392.00\n4225010.00\n1449001.00\n1718171.00\n1584197.00\n11571029.00\n924763.00\n566400.00\n1447075.00\n73140886.00\n1000923.00\n1123015.00\n2563285.00\n4466785.00\n2561756.00\n1403676.00\n1434559.00\n1869196.00\n4163482.00\n4604399.00\n5929700.00\n1977326.00\n1117733.00\n3305211.00\n640039.00\n3211215.00\n18086343.00\n1159191.00\n975508.00\n1240555.00\n2265809.00\n1349285.00\n13025.00\n2728460.00\n1515656.00\n6258368.00\n1500937.00\n1269505.00\n2181022.00\n4182600.00\n1788743.00\n166850.00\n2940815.00\n6128156.00\n1276358.00\n1180269.00\n7703753.00\n4448589.00\n963237.00\n138756.00\n1547000.00\n2000373.00\n5622081.00\n5503392.00\n474786.00\n3148542.00\n3013074.00\n720632.00\n5119356.00\n22216583.00\n1107829.00\n1531504.00\n4260780.00\n1066976.00\n677046.00\n543105.00\n3352245.00\n13254.00\n730885.00\n812657.00\n3471514.00\n13377243.00\n737101.00\n1661023.00\n2916586.00\n876121.00\n2279020.00\n0.00\n2399884.00\n5143410.00\n2533189.00\n7843935.00\n306434.00\n22490627.00\n2664811.00\n921792.00\n86581469.00\n3105241.00\n549117.00\n2099148.00\n6871179.00\n145474.00\n20520.00\n3163938.00\n2846323.00\n856257.00\n979267.00\n1516417.00\n4731925.00\n4080074.00\n5550174.00\n-1386356.00\n1859691.00\n1385034.00\n4598365.00\n1562228.00\n3304702.00\n605073.00\n1386724.00\n1589224.00\n1674579.00\n27680901.00\n587143.00\n10024604.00\n4442159.00\n1895941.00\n-367162.00\n2153850.00\n479167.00\n2031545.00\n2005290.00\n2680786.00\n1584377.00\n141458.00\n919350.00\n972575.00\n2529397.00\n2227355.00\n4650448.00\n4717097.00\n1867651.00\n6717662.00\n4250064.00\n761516.00\n1373474.00\n707321.00\n3672268.00\n4522424.00\n920408.00\n3583458.00\n2185504.00\n1111888.00\n714987.00\n1731244.00\n509828.00\n17940130.00\n1404019.00\n1179969.00\n4254563.00\n1048457.00\n966641.00\n5771483.00\n5420136.00\n2252066.00\n918476.00\n836909.00\n3943221.00\n13588871.00\n11030158.00\n17471712.00\n309658.00\n1323092.00\n2684930.00\n2093425.00\n783940.00\n973980.00\n1314552.00\n2239085.00\n38334636.00\n37743256.00\n1375262.00\n1418349.00\n10055406.00\n697627.00\n2095503.00\n4637570.00\n3893173.00\n7599512.00\n1509014.00\n3688187.00\n1587079.00\n1548007.00\n1037497.00\n881479.00\n1393256.00\n3851900.00\n1144309.00\n959008.00\n354993.00\n1752943.00\n2904436.00\n1247447.00\n64682883.00\n2353035.00\n3664655.00\n1166742.00\n2492127.00\n2992372.00\n3612075.00\n1929971.00\n871656.00\n892064.00\n7900497.00\n684268.00\n3777731.00\n1679466.00",
        "isVisible": true,
        "tabOrder": 4
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 5
      }
    },
    "encrypted_exemplar_sources": "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\nJ/Q0vsgMytWUoT48MGVXgh92mnFNJLVK\n",
    "video_key": "csa_enhanced_for_loops",
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:52:49.518+00:00\",\"changed\":[\"cloned from \\\"CSA U3L7-L7d_2023\\\"\"],\"cloned_from\":\"CSA U3L7-L7d_2023\"}]"
}]]></config>
</Javalab>
