<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:55:27.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Create a scene that draws the logos of basketball teams based on the number of championship wins they have.\r\n\r\n‚úÖ **TO DO:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">BasketballScene.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">chooseSize()</code> method to check the number of championship wins and return the size to draw the image.\r\n\r\n1. If the number of wins is greater than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">10</code>, return a size of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">150</code>.\r\n\r\n2. If the number of wins is greater than or equal to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">5</code>, return a size of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">100</code>.\r\n\r\n3. Otherwise, return a size of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">50</code>.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing multi-selection statements.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "NBA Teams",
    "bubble_choice_description": "Draw the logos for each NBA team based on the number of championship wins they have.",
    "thumbnail_url": "https://images.code.org/4c3552b00321d044c4c44408ddc5af8c-image-1650719208107.png",
    "reference_links": [
      "/courses/csa-2023/guides/multi-selection-statements"
    ],
    "video_key": "csa_multi-selection_statements",
    "starter_assets": {
      "sanantoniospurs.png": "3be65551-850b-4342-9b12-cc9589de504a.png",
      "neworleanspelicans.png": "18de32e1-69eb-4942-a80f-a1dc5425efcc.png",
      "memphisgrizzlies.png": "4e85c2ee-2d68-488f-8a52-4c5bb3a8dd4a.png",
      "houstonrockets.png": "0e9b1df4-e6a8-4b33-a9ee-e564d00c0acc.png",
      "dallasmavericks.png": "d44d05ef-18f7-416d-9c30-d12945e786c8.png",
      "sacramentokings.png": "36efaa10-b688-4939-bcb0-1d67d6cc406f.png",
      "phoenixsuns.png": "e89efabd-d99c-41c3-baaf-c52029cc7960.png",
      "lalakers.png": "6638c4b1-3998-4e01-a0ab-11f948918254.png",
      "losangelesclippers.png": "e68f0846-cfff-4d31-a86d-8a97b199c969.png",
      "goldenstatewarriors.png": "4d610404-ed42-45f6-bbcd-88e93a494dc1.png",
      "utahjazz.png": "5247c489-a782-4061-a343-97a2956b566d.png",
      "portlandtrailblazers.png": "e29eacb8-665f-44c7-8af0-072e3982a570.png",
      "okcthunder.png": "6c2231c6-efc4-4cbf-9297-123371c70a87.png",
      "minnesotatimberwolves.png": "2ea62361-9e1b-4154-b8b6-4b64c00daa8b.png",
      "denvernuggets.png": "a79d42bd-c205-4db6-8ae7-fe059a2da908.png",
      "washingtonwizards.png": "3621fce7-0b3d-48f7-9244-16c148fd74ed.png",
      "orlandomagic.png": "7e5f4130-6e15-42a6-9f06-918957a8b470.png",
      "miamiheat.png": "c4c93e0f-8aff-4be7-8b78-dc5fe0ac8ac9.png",
      "charlottehornets.png": "a4b0da76-00f7-4a4c-a06c-bb33a2ef1ab7.png",
      "atlantahawks.png": "ccb1a0fb-33fc-47db-b53e-4864e3f2f8cc.png",
      "milwaukeebucks.png": "6173130b-07d4-4c0b-a113-24681debd94b.png",
      "indianapacers.png": "1e70af95-3e57-47b5-a52a-69147ce899cb.png",
      "detroitpistons.png": "f2d7e00f-fc47-4871-81de-9226d023a72c.png",
      "clevelandcavaliers.png": "ae0f95e8-4f72-4083-a841-0eb8942ce2d6.png",
      "chicagobulls.png": "570ede0c-5ef7-42ac-89b1-6b02bb5dd411.png",
      "torontoraptors.png": "6a9e6dce-07fb-4558-aa67-31a9c91bace6.png",
      "philadelphia76ers.png": "af44d1ab-857f-4cc3-99a7-3d8e81b4c157.png",
      "brooklynnets.png": "ca13e32e-eb7f-4e1c-a084-847cdf16ca8c.png",
      "newyorkknicks.png": "bce53ed8-f1ab-4fdf-b38e-ef5c86ce52e4.png",
      "bostonceltics.png": "8163a3d0-5bcd-47f5-bcc8-e758fa8144f2.png"
    },
    "encrypted_validation": "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\nSfkROs0lI0gNkQ==\n",
    "encrypted_exemplar_sources": "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\nlAU9WVLc5yvOR5M8+Qg=\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of image file names from a text file\n    String[] logos = FileReader.toStringArray(\"logos.txt\");\n\n    // Creates a 1D array containing the number of wins from a text file\n    int[] wins = FileReader.toIntArray(\"wins.txt\");\n\n    // Creates a BasketballScene object\n    BasketballScene scene = new BasketballScene(logos, wins);\n\n    // Calls the drawResults() method\n    scene.drawResults();\n\n    // Plays the scene\n    Theater.playScenes(scene);    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "BasketballScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * A scene visualizing the number of championship wins\n * for each basketball team\n */\npublic class BasketballScene extends Scene {\n\n  private String[] logos;             // The 1D array of basketball team logos\n  private int[] championships;        // The 1D array of championship wins\n\n  /*\n   * Initializes logos and championships to the specified 1D arrays\n   */\n  public BasketballScene(String[] logos, int[] championships) {\n    this.logos = logos;\n    this.championships = championships;\n  }\n\n  /*\n   * Return the size to draw the image based on\n   * the number of championship wins\n   */\n  public int chooseSize(int numWins) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ If the number of wins is greater than 10, return 150. Else if the\n     * number of wins is greater than or equal to 5, return 100. Otherwise,\n     * return 50.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return -1;\n  }\n\n  /*\n   * Draws the results in the scene\n   */\n  public void drawResults() {    \n    for (int i = 0; i < championships.length; i++) {\n      int x = (int) (Math.random() * getWidth());\n      int y = (int) (Math.random() * getHeight());\n      int size = chooseSize(championships[i]);\n      drawImage(logos[i], x, y, size);\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      },
      "wins.txt": {
        "text": "17\n0\n2\n3\n1\n6\n1\n3\n0\n1\n1\n0\n3\n0\n1\n0\n0\n1\n1\n0\n6\n0\n16\n0\n1\n1\n2\n0\n0\n5",
        "isVisible": true,
        "tabOrder": 4
      },
      "logos.txt": {
        "text": "bostonceltics.png\nbrooklynnets.png\nnewyorkknicks.png\nphiladelphia76ers.png\ntorontoraptors.png\nchicagobulls.png\nclevelandcavaliers.png\ndetroitpistons.png\nindianapacers.png\nmilwaukeebucks.png\natlantahawks.png\ncharlottehornets.png\nmiamiheat.png\norlandomagic.png\nwashingtonwizards.png\ndenvernuggets.png\nminnesotatimberwolves.png\nokcthunder.png\nportlandtrailblazers.png\nutahjazz.png\ngoldenstatewarriors.png\nlosangelesclippers.png\nlalakers.png\nphoenixsuns.png\nsacramentokings.png\ndallasmavericks.png\nhoustonrockets.png\nmemphisgrizzlies.png\nneworleanspelicans.png\nsanantoniospurs.png",
        "isVisible": true,
        "tabOrder": 3
      }
    },
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:55:27.586+00:00\",\"changed\":[\"cloned from \\\"CSA U4L10-L7b_2023\\\"\"],\"cloned_from\":\"CSA U4L10-L7b_2023\"}]"
}]]></config>
</Javalab>
