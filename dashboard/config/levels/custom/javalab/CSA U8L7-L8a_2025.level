<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:41:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Sorter</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">squareList</code> method to return a new 1D array containing the squares of each value in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">data</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Sorter</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sortList</code> method to sort an array from the smallest to the largest value using either a selection sort, insertion sort, or merge sort.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SortRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">squareList()</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sortList()</code> methods to create and print 1D arrays that contain the squares of each value in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">firstSet</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">secondSet</code> in order from the smallest to the largest value.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with implementing a sorting algorithm.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "SortRunner.java": {
        "text": "public class SortRunner {\n  public static void main(String[] args) {\n\n    int[] firstSet = {8, 4, 10, 2, 6};\n    int[] secondSet = {-3, 5, 0, -6, 3};\n\n    System.out.println(\"----------First Set----------\");\n    System.out.println(Sorter.arrayToString(firstSet));\n\n    System.out.println(\"\\n----------Second Set----------\");\n    System.out.println(Sorter.arrayToString(secondSet));\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the squareList() and sortList() methods and print the updated arrays.\n     * -----------------------------------------------------------------------------\n     */\n    \n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Sorter.java": {
        "text": "/*\n * Manages and sorts lists\n */\npublic class Sorter {\n\n  /*\n   * Returns an array containing the squares of each value in data.\n   */\n  public static int[] squareList(int[] data) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Return a new array containing the squares of each value in data.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    return null;\n  }\n\n  /*\n   * Sorts an array from smallest to largest value\n   */\n  public static void sortList(int[] data) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Implement a sorting algorithm to sort the 1D array data.\n     * -----------------------------------------------------------------------------\n     */\n    \n\n    \n  }\n\n  /*\n   * Returns a String containing each element in data\n   */\n  public static String arrayToString(int[] data) {\n    String result = \"\";\n    \n    for (int value : data) {\n      result += value + \" \";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "reference_links": [
      "/courses/csa-2023/guides/selection-sort",
      "/courses/csa-2023/guides/insertion-sort",
      "/courses/csa-2023/guides/merge-sort"
    ],
    "video_key": "csa_sorting_algorithms",
    "display_name": "Sorting Squares",
    "bubble_choice_description": "Sort arrays with the squares of the values in a 1D array in order from the smallest value to the largest value.",
    "thumbnail_url": "https://images.code.org/691a365dc6756c3c14068becbf681742-calculator.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nuCNVila5PkYamzTKsfjJ55X+rKfqCe2I1QU=\n",
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:41:04.957+00:00\",\"changed\":[\"cloned from \\\"CSA U8L7-L8a_2023\\\"\"],\"cloned_from\":\"CSA U8L7-L8a_2023\"}]"
}]]></config>
</Javalab>
