<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-04-07T17:44:25.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In TemperatureScene.java:\r\n\r\n1. Write the method `getImage()`(#e7e8ea) using nested `if`(#e7e8ea) statements to return the correct image to draw.\r\n\r\n   * If `temp`(#e7e8ea) is greater than `75`(#e7e8ea) and `hasClouds`(#e7e8ea) is `true`(#e7e8ea), return the `\"clouds.png\"`(#e7e8ea) image.\r\n\r\n   * If `temp`(#e7e8ea) is greater than `75`(#e7e8ea) and `hasClouds`(#e7e8ea) is `false`(#e7e8ea), return the `\"sun.png\"`(#e7e8ea) image.\r\n   \r\n##In MyTheater.java:\r\n\r\n2. Test your algorithm by changing the values for the `TemperatureScene`(#e7e8ea) object.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    // TO DO #2: Change the values to test your algorithm.\n    TemperatureScene myScene = new TemperatureScene(80, false);\n\n    myScene.createScene();\n\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true
      },
      "TemperatureScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Represents a scene displaying either clouds or a sun\n */\npublic class TemperatureScene extends Scene {\n\n  private int temp;            // The temperature\n  private boolean hasClouds;   // Whether or not there are clouds\n\n  /*\n   * Constructor to create a TemperatureScene\n   * with the specified temperature and status of clouds\n   */\n  public TemperatureScene(int temp, boolean hasClouds) {\n    this.temp = temp;\n    this.hasClouds = hasClouds;\n  }\n\n  /*\n   * Sets temp to a new temperature\n   */\n  public void setTemp(int newTemp) {\n    this.temp = newTemp;\n  }\n\n  /*\n   * Sets hasClouds to the new clouds status\n   */\n  public void setHasClouds(boolean newHasClouds) {\n    this.hasClouds = newHasClouds;\n  }\n\n  /*\n   * Returns either an image of clouds or of a sun based on\n   * the temperature and status of hasClouds\n   */\n  public String getImage() {\n    String image = \"\";\n    \n    // TO DO #1: Implement your algorithm to return the correct image\n    // based on the temperature and status of hasClouds.\n\n    \n\n    return image;\n  }\n\n  /*\n   * Creates a scene displaying either clouds or a sun\n   * based on the temperature and status of clouds\n   */\n  public void createScene() {\n    String imageToDraw = getImage();\n    drawImage(imageToDraw, 0, 0, getWidth());\n  }\n}",
        "isVisible": true
      }
    },
    "starter_assets": {
      "clouds.png": "d69da5bb-7e11-44ab-9af7-51bff542d411.png",
      "sun.png": "10adcd09-aa74-4192-a2e0-9cc912e0df8b.png"
    },
    "encrypted_exemplar_sources": "88cqqh4PFE13VUB7Wdee/buWaoTRkA1Yfq04+a/K4ernU3DeJL7AFSrvHPYx\nhOQII7vwOlsAec1ruQmP+6Gifsrbk7nleG6JDwQjabUcKnhGAFHQmG3ycp83\nLgEnbtUPCnFfELj/v21TtvhuDXy5T7GNVTfZaDRudBgRurotg3OI/Gl992Ti\nHQMf+QPskbcBfOGI5+Z50PTEIOIWU6w0lUpuyc/RimdPk6hS6tZJo68RcV8Q\nHQ/NwUJ6vvq0S/s+wNoM0/N7xafMVI4etT4Np2zkRJ2oTlXIfhPsvtQNo8Uj\nUs8ZW208GHSxDV/nEUdVV7tcRxc9GIkDR5rtD9Z1CVeAiFUIf87p8YKbuMht\nCD/pWpAa9WALdDMM1yABZGPOoSQgEIZ6w3ELHzaLziZ8v8DmDZJfJRlKvIqI\n9oVKlXg4sOV8O+EZ/2DNnOuA2YtxD2fmAGmNblSD5R3bUXUhrozNdKnyNodX\n0WxQ1H+AB6TJ8turDX1ZpCDvnqcez9l2Yq0wXHAt2hXo9h0luXCJluvGiCy1\n4n+7h/1exeuEA0xumbXxOOXZqpGaUwAyFDsH/J9uMSGzlqgbkh7jkNuV4upq\npPxrulZVFi9ColpriYWCANm5KXrvXcv2t7cyn9KqXgXnucMPxS+8S4R7BHTo\nGbjT6FuLcYZ900rGOBGunCL6nNMuKXqXrcdoQMrAH+z7qKoVV3GUIh123MWJ\nP0Q7tKlduIWXRbXmaUE24Y9RinacN4SA0ZaPQnXoyGeE+al7XulwOf6Kud08\nwMcMqX3MSXMyuadcSLi/kRLC2R+qhHpgZmwNjvHevniMi42GShhvcVYVXDIU\nMceZhDH/zD5BaVh/rJ1sRzm8HdyAPV714fhCv40tlvsY1ii2m5bM3+NQWu07\nOPLHq8MJhvoNc8m49Ev2My16+W2OOlgjtCUGvmWFblhKvJ8ZrN7i6IonOFli\nsABr/rn3ziLWnnRsizP7wS/jsNMnIwTvuFTdz7PeEl/Pq52xGP309UZ0krq+\nXC8VjV6KRIHsp7H0c50As855ZyhA6iDHQ/BuD0YJugWm4GDgv6/SilXk+nvq\noxWqVwTim7HR186OnkGivrT5icnE2Joq53QD9k7IhRDG5lQ66LlooiCINzTV\njYmMTZj+PLTWBh5sVGD5TR52YGB3q/X5kDw7Yj+IGzMqHDzjOhtvDepZsaa3\nZjmiHfziC57d+py0FPdd0DPKxghS+Tp0TPQK/DKSGEJ+5HGigCRUHawXY3mD\nAr9EI6L6v13bixXywJ4N/RJXZpJhJksG5uDlReZEsMUQ03NHY0RtrWjHjUQ9\n6WhHg/z8fFVwiNs4Z4num6P+0eA6LvIpOE4tX0WsuDsVaDR9FHGZWmdP5nSN\nEmUZOfDkRsLJG8iQNgH9eKgi12/Wz4/+YOymg0vEDqFzop2IdCEabJsx5nHK\nFa32yCc7KqY0yeHwv0uKi9DAFDAv67IXAb4U6hYgCaZrwuyPJhxz2LN2OJ/o\nOrnjRQDLCRXJBjo0qsvmOVdlJcaW7I6RqEZOoM0aFEk0ICQIo2JzGO6Z8FJT\njFWcCqF5mRK79hmDnVd7XbAaFpkC2vZE4QIrSxX2LV7Su75KIcrAHqDhcylQ\nMzSTvCDBcNf19SAAlQHRfzV77gQM2NDf7WyOQkt9fc9HYymsuDux9fBOKn/y\ngX+nqz2CvdNvby1fRSoynXBd4XmoXkNxUMCwJmyTsRkS/OjVN6FmAqxj+a/b\nwB7U3Qy6/rxuJ87ucZSOgVn/gESOlWXeoLtotQAiO+7ikW724UXEVIa9oTSb\n2GcdixU2pCmCmldjhfZ37MR6jOcK5SVRhYDk0/Mvt8uBvVYgKx4/RtEc/xqu\npQCc3FyRlZ0jsEBqbtm4Dg4LbbNwgytRcCvTk4INZ2ALXjntOzwgMlEBJNnu\nxcTqyO1rbgSctKsPAN/KFEj58go5FdySkYcR0qoSi5HP8DLcfsooN5WI4mmr\n2rAne+qXOpSrebAyMDWRCgXdgv7vTF3GiNkGlPJNmnPfBVNLMcWBSs6WyouY\nnp6OmxIPGOclqeC11UdSQD+aWDdSrdEkttTj/QLmFd22AEgE5sT1Ys6NTHDa\nG9/Hp4AKFCAdWeJCD7Ii9BD2NwZWuqEMi2xQKJQX+a6kXEW5KY/S47Un+Du1\nPfvB4l9bE37G4XN542XcZx+vKcTJHTjOuYJ8vNoasl0tfLjj429DICrYtAit\nGVccE2gyka0R5y+0duX4pOqp3PHU+z52eqsGCkdC1nfZtR+FNQPyMamCrXur\niN2ur4Z4Gia0EdwE55OqerRO/PU5i9RmtlAXuRoYpGBrHerWGJN3bn4F0u3q\nDklPK6l7g8FyG1Wj1gLZyF2h+wj3j3bYg7qcjutVWtgruVBBMBhkOTaXMpCb\noJHWHNfyGVCE0PHlCt6lrk2qL/rXGML4BYyxC+OQmCj6XFyS+BgMw9b8mKr1\nC5sG89HmTTew4LSAB4QrVEasKcp13V5Efq71\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-07T17:44:25.405+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L1_2022\\\"\"],\"cloned_from\":\"CSA U4L3-L1_2022\"},{\"changed_at\":\"2022-04-07 17:44:38 +0000\",\"changed\":[\"long_instructions\",\"csa_view_mode\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-21 13:25:18 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-21 13:26:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-21 13:26:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-21 13:26:51 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-21 13:30:33 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-21 13:31:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-25 20:57:26 +0000\",\"changed\":[],\"changed_by_id\":13506,\"changed_by_email\":\"sanchit+levelbuilder@code.org\"},{\"changed_at\":\"2022-09-19 20:02:49 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:02:57 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:02:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:03:41 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:16:20 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 12:46:56 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 18:16:34 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-09 16:53:52 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
