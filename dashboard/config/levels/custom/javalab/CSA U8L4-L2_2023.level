<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO:** What do you think would happen if the array was already sorted?\r\n\r\nCreate a 1D array or an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArrayList</code> with values that are in increasing order. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">selectionSort()</code> method on the array.\r\n\r\nHow is the efficiency of this algorithm impacted if the list is already sorted?",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- ðŸ”Ž ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_examples": [

    ],
    "project_template_level_name": "CSA U8L4-Selection Sort PBT_2023",
    "teacher_markdown": "If the array is already sorted, the selection sort algorithm will still execute the same number of comparisons, even though they are unnecessary. The algorithm will still run through all of the comparisons and swaps, but no changes to the array will actually be made. This is because the algorithm will always still compare the first element of the unsorted part of the array to the rest of the array, but since the array is already sorted, the first element will always be the smallest."
  },
  "game_id": 68,
  "published": true,
  "created_at": "2023-04-14T14:03:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2023-04-14T14:03:04.580+00:00\",\"changed\":[\"cloned from \\\"CSA U8L4-L1_2023\\\"\"],\"cloned_from\":\"CSA U8L4-L1_2023\"},{\"changed_at\":\"2023-04-14 14:03:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 21:00:07 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 21:13:37 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 22:18:36 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
