<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:53:01.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://www.kaggle.com/datasets/lavagod/super-heroes\" target=\"_blank\">**Super Heroes dataset**</a> includes the names of superheroes and the name of the publisher for each superhero.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">HeroManager.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">checkForDuplicates()</code> method to return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if any superhero in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">heroData</code> have the same publisher, otherwise return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code>.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SuperheroRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">checkForDuplicates()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing a nested <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nloop from 0 to heroData.length\r\n  loop from next position to heroData.length\r\n    if heroData[outer].getPublisher() equals heroData[inner].getPublisher()\r\n      return true\r\nreturn false\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ What is the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \r\n    <p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class is a hidden support class that has methods for reading data from a text file into a 1D array. It has the following methods:</p>\r\n\t\t<ul>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containng the data</li>\r\n\t\t</ul>\r\n    \t<p>For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nString[] names = FileReader.toStringArray(\"names.txt\");\r\n \r\nint[] numbers = FileReader.toIntArray(\"numbers.txt\");\r\n \r\ndouble[] prices = FileReader.toDoubleArray(\"prices.txt\");</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/nested-loops"
    ],
    "display_name": "Superheroes",
    "bubble_choice_description": "Determine whether the Super Heroes dataset contains duplicate values.",
    "thumbnail_url": "https://images.code.org/cd87777083acc29db9afe6f4c0552e4b-superhero.png",
    "encrypted_exemplar_sources": "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\nlAzwwKB5MqG7a1XATA==\n",
    "video_key": "csa_nested_loops",
    "encrypted_validation": "sVLNBWHo4OjymONeu/P7LtpU/5GvsIuwctXJF9Q55U/1cA3kYbOy6oBtL+wP\nGKsTEj0CYLAhQV3dncRe7RTa35InWUxrfyfHUKrcACwY12yRLaHt4wi6+4VX\n2ydzmgrwOsj45SffF6+UlWqMj6QZQTPX/lxUBR5ZTJh1D19EgfQog94TZ8Oi\notJr87MOlK5IU1q0yWk2PdYDlyX/iKcTwKhbbLTDo1QR2YvLpT3PP5trg12d\n8Z/2K6ydnltQF7pIwfNYNdsINiqUtnpJ/70GdiGV2Nm3Zc6JDC4baaK/ZyNO\nSGnE6+Wj3OP85pE6oP47fy/h5fHjNsj54iergITwj7SZ3SbIcd92SUXwrxmA\neX2LdOR4GfdZ05R/uHyXB4d4E2eWEoVt1RXTPt2xy4p+NEZ5m6BAOqshdu7g\nV31Seb64rzJuAA7xbZWPZyShAJqpRBJYabziIDI/VaxoHDrrpkzMg44TpOkR\nByayZvS7jw3TWQR1Jp0lths4jg3fy6e5ASyR1Qz01c0jD1MHpqv1XVCFEs3M\ngs/dhDr35TzsEXLH/hqMIZoWdmyXveETrV6Yn+l0osMtK7B9IJp5SkTwPkW0\nutT0mgy5Tgx9jBVU+5/iiiFC3TDw614JuKFbsqp8ti+L0kEETdFTcILD+0B0\nEVmjrVUeRianj1kt6RuaTnKD98K+whUYyjaOscb1s/LXv0rQdYhaieQjoPRD\n+Bb57kEBUhz+y6gVgThNXFdmmgsrGbJe2V8/qkn0TniPfv6bixT9GV8XS3tm\nNxbo9bMKPsjc0eTXPxAfEEKWpnLo12nD/oWu+rDdV1UrJft312PP5PdroUzi\n53/ad1skTdMc+Bqmx9EryuRW/nQwHHmFWdy/d18avJdN/dE7C0FVKNEhgVFI\n7J9h6m/N+ZEkC9YztuMbfdO+yYK7ZCWSVvyJ6pqdqT3T729tQZM7Mt1KM/SS\nwIobDTewx9eQ/29AG5OZefFIgcryQV0rbmzr5QDprMJFumePU4V4374jEl/9\nPZTCjfJ5bvI2xezzZIdEDKSNuTv1ttqNs4GTlaTfqHbaLaw871foUHGLXLIf\nZjDEGbU+rXFj12kxc8kkVDCi7Ij8+cX9/SlKZHiPUZirMsNEmZYbuiSxvfFF\nI6y4TUbivgToe3wZoP0SgcjcDwzRVhfkTsGObGLXXDpWCTKXTYOgBBkZkczn\nxBQPVh3RCkp6RBW1+deqMKpvM3xC0kNPdqjOQGJx7EA8VfrtyEQn2YEEDQNL\n/UM2Faq8Ih1NocxmlpoMFBKMUVhjP9Mw6t1fK/btxGd9wTf2fs4fYOnUubOW\nZTxy8Eyuv3vFNDCsxQyT/dinnbpUkqnPEaOGdxv+WSZ4p7hWncgY1NpuVwhV\nyLITAITiOoV5lf3XkHV4vMZQ0X7g4uelTpjKTwEyKyMQDsUHjkAKKiPGYUPE\ndW/j7BcAR39d4Z4l07/qt2LZwjZmTeF5K4ocATbz2LFdAIMYgv8b2dIVhNML\nqsWXxQ/rBBgkIE1MdYmciktMFBrg6GpNL7q5bFYV3TDE/1vKkU3ltkGdJHAK\nuKEmumPXAte484MDqzC0Xqps69b7+gd8G5wId9dVNM4QLtYF8CMEQ4N/B6r9\nwQ==\n",
    "start_sources": {
      "HeroManager.java": {
        "text": "/*\n * Manages data about superheros\n */\npublic class HeroManager {\n\n  private Superhero[] heroData;    // The 1D array of Superhero objects\n\n  /*\n   * Reads the data from namesFile and\n   * publisherFile to initialize heroData\n   */\n  public HeroManager(String namesFile, String publisherFile) {\n    heroData = createSuperheroes(namesFile, publisherFile);\n  }\n\n  /*\n   * Returns a 1D array of Superhero objects using\n   * the data from namesFile and publisherFile\n   */\n  public Superhero[] createSuperheroes(String namesFile, String publisherFile) {\n    String[] namesData = FileReader.toStringArray(namesFile);\n    String[] publisherData = FileReader.toStringArray(publisherFile);\n\n    Superhero[] tempHeroes = new Superhero[namesData.length];\n\n    for (int index = 0; index < tempHeroes.length; index++) {\n      tempHeroes[index] = new Superhero(namesData[index], publisherData[index]);\n    }\n\n    return tempHeroes;\n  }\n\n  /*\n   * Returns true if more than one superhero has the same publisher, otherwise returns false\n   */\n  public boolean checkForDuplicates() {\n    /* ----------------------------------- TO DO #1 --------------------------------\n     * ‚úÖ Use nested loops to traverse the 1D array heroData and the getPublisher()\n     * method in the Superhero class to check if there are duplicate publishers.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    return false;\n  }\n\n  /*\n   * Returns a String containing each hero's information\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (Superhero hero : heroData) {\n      result += hero + \"\\n\";\n    }\n\n    return result;\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "SuperheroRunner.java": {
        "text": "public class SuperheroRunner {\n  public static void main(String[] args) {\n\n    HeroManager heroes = new HeroManager(\"names.txt\", \"publishers.txt\");\n    System.out.println(heroes);\n\n    /* ----------------------------------- TO DO #2---------------------------------\n     * ‚úÖ Call the checkForDuplicates() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n        \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Superhero.java": {
        "text": "/*\n * Represents a superhero\n */\npublic class Superhero {\n\n  private String name;        // The name of a superhero\n  private String publisher;   // The name of the publisher of a superhero\n\n  /*\n   * Sets name and publisher to the specified values\n   */\n  public Superhero(String name, String publisher) {\n    this.name = name;\n    this.publisher = publisher;\n  }\n\n  /*\n   * Returns the name of the superhero\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the publisher of the superhero\n   */\n  public String getPublisher() {\n    return publisher;\n  }\n\n  /*\n   * Returns a String containing the name and publisher\n   */\n  public String toString() {\n    return name + \" (\" + publisher + \")\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "names.txt": {
        "text": "Alien\nKiller Frost\nMystique\nNebula\nAbe Sapien\nDr Manhattan\nShadow Lass\nBeast\nArchangel\nCopycat\nLobo\nNova\nArdina\nLiving Tribunal\nK-2SO\nPoison Ivy\nBrainiac\nSwamp Thing\nKiller Croc\nGreedo\nEvilhawk\nMartian Manhunter\nBeast Boy\nYoda\nDonatello\nLeonardo\nRaphael\nMichelangelo\nDrax the Destroyer\nTriton\nFin Fang Foom\nMan-Thing\nHulk\nMantis\nGamora\nToad\nDarkseid\nTiger Shark\nApocalypse\nGodzilla\nCentury\nStarfire\nJar Jar Binks\nKilowog\nBlink\nPurple Man\nThanos\nGladiator\nTrigon\nKlaw",
        "isVisible": true,
        "tabOrder": 3
      },
      "publishers.txt": {
        "text": "Dark Horse Comics\nDC Comics\nMarvel Comics\nMarvel Comics\nDark Horse Comics\nDC Comics\nDC Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nDC Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nGeorge Lucas\nDC Comics\nDC Comics\nDC Comics\nDC Comics\nGeorge Lucas\nMarvel Comics\nDC Comics\nDC Comics\nGeorge Lucas\nIDW Publishing\nIDW Publishing\nIDW Publishing\nIDW Publishing\nMarvel Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nDC Comics\nMarvel Comics\nMarvel Comics\nunknown\nMarvel Comics\nDC Comics\nGeorge Lucas\nDC Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nMarvel Comics\nDC Comics\nMarvel Comics",
        "isVisible": true,
        "tabOrder": 4
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 5
      },
      "testPublishersWithDuplicates.txt": {
        "text": "DC\nDC\nMarvel\nMarvel",
        "isVisible": false,
        "tabOrder": 8
      },
      "testNames.txt": {
        "text": "Superman\nBatman\nSpider-Man\nIron Man",
        "isVisible": false,
        "tabOrder": 7
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:53:01.312+00:00\",\"changed\":[\"cloned from \\\"CSA U3L9-L6d_2023\\\"\"],\"cloned_from\":\"CSA U3L9-L6d_2023\"}]"
}]]></config>
</Javalab>
