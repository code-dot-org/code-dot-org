<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-04-14T14:02:00.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "SearchRunner.java": {
        "text": "public class SearchRunner {\n  public static void main(String[] args) {\n\n    int[] firstSet = {5, 10, 20, 30, 40, 50, 50, 60};\n    int[] secondSet = {2, 4, 6, 6, 8, 10, 12, 12, 14, 16, 18, 18, 20};\n\n    System.out.println(\"---------- Binary Search Using Loops ----------\");\n    int firstLocation = Searcher.binarySearch(firstSet, 50);\n    System.out.println(\"First set: \" + firstLocation);\n\n    System.out.println(\"\\n---------- Binary Search Using Recursion ----------\");\n    int target = 50;\n    int index = Searcher.recursiveBinarySearch(firstSet, 0, firstSet.length - 1, target);\n    System.out.println(target + \" found at index \" + index);\n    \n    /* ---- ðŸ”Ž ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Searcher.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Analyzes lists of data\n */\npublic class Searcher {\n\n  /*\n   * Returns the index that target is found in the 1D array numbers,\n   * or returns -1 if the target is not found\n   */\n  public static int binarySearch(int[] numbers, int target) {\n    int left = 0;\n    int right = numbers.length - 1;\n    int totalChecks = 0;\n\n    while (left <= right) {\n      totalChecks++;\n      System.out.println(\"Total checks: \" + totalChecks);\n\n      int mid = (left + right) / 2;\n      System.out.println(\"Middle value: \" + numbers[mid]);\n\n      if (numbers[mid] < target) {\n        left = mid + 1;\n      }\n      else if (numbers[mid] > target) {\n        right = mid - 1;\n      }\n      else {\n        return mid;\n      }\n    }\n\n    return -1;\n  }\n\n  /*\n   * Returns the index that target is found in the 1D array numbers,\n   * or returns -1 if the target is not found\n   */\n  public static int recursiveBinarySearch(int[] numbers, int left, int right, int target) {\n    System.out.println(\"Number checked!\");\n    \n    if (left > right) {\n      return -1;\n    }\n\n    int middle = (left + right) / 2;\n\n    if (target < numbers[middle]) {\n      return recursiveBinarySearch(numbers, left, middle - 1, target);\n    }\n    else if (target > numbers[middle]) {\n      return recursiveBinarySearch(numbers, middle + 1, right, target);\n    }\n    else {\n      return middle;\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-14T14:02:00.227+00:00\",\"changed\":[\"cloned from \\\"CSA U8L2-Linear Search PBT_2023\\\"\"],\"cloned_from\":\"CSA U8L2-Linear Search PBT_2023\"},{\"changed_at\":\"2023-04-14 14:02:02 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:21:18 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:33:16 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:33:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:33:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:33:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:37:55 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:37:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:39:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:39:18 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-20 20:39:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2024-02-29 15:05:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-02-29 15:16:13 +0000\",\"changed\":[],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
