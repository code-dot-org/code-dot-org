<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T18:21:23.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Adjusting contrast in an image refers to changing the difference in brightness between the lightest and darkest parts of an image. A high contrast image has a greater difference between the lightest and darkest parts, while a low contrast image has a smaller difference.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ContrastImage</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">adjustContrast()</code> method to adjust the contrast of each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object by multiplying the red, green, and blue color values by the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">multiplier</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class,\r\n\r\n1. Instantiate an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ContrastImage</code> object with an image in the Asset Manager, then draw the image in the scene without any filters. You can also upload and use your own image.\r\n\r\n2. Add a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">pause()</code> after drawing the image.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">adjustContrast()</code> method on your image, then draw the image with the filter in the scene.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with getting and setting color values for a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.\r\n</div>\r\n\r\n## üéØ Goal\r\n\r\n![](https://images.code.org/23208cd192a36e73c8707f2e3a271391-image-1682904547101.gif)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Modify Contrast",
    "bubble_choice_description": "Adjusting contrast in an image refers to changing the difference in brightness between the lightest and darkest parts of an image. A high contrast image has a greater difference between the lightest and darkest parts, while a low contrast image has a smaller difference.",
    "starter_assets": {
      "track.jpg": "0ce63601-2da3-497a-be5e-c8bed4557e2b.jpg",
      "starwars.jpg": "92af03b2-77bb-4066-9aae-55a15028fd2e.jpg",
      "speakers.jpg": "aea292b1-1068-4069-a73d-9b859e8969a0.jpg",
      "soccer.jpg": "d8227409-8960-4b61-a0cd-ac2cf99e05ca.jpg",
      "paintbrushes.jpg": "559ebb53-8dec-43cc-b366-c65b239ef8b3.jpg",
      "nature.jpg": "81e9a062-9783-4559-8df9-079d4d351d56.jpg",
      "motivation.jpg": "c22097c6-e4ee-4ecf-959f-1de4e7b72a56.jpg",
      "laptop.jpg": "d27daed6-465c-4988-9d01-bb0ef24999f5.jpg",
      "guitar.jpg": "2dde4655-c72a-4913-a243-8e5b6df58ab5.jpg",
      "games.jpg": "1e348b17-3470-4c10-925e-1f3b03b48404.jpg",
      "football.jpg": "f817b735-25f2-43ec-b332-19475bd832fd.jpg",
      "fashion.jpg": "eae1cb67-761b-4d1a-ac12-84c751c688e9.jpg",
      "electricguitars.jpg": "1b01773e-ba7c-48a0-9dab-5e36c0c50b60.jpg",
      "donut.jpg": "8a4af353-535b-42af-82b3-b44b3b66002f.jpg",
      "dog.jpg": "9debe03a-6e81-4162-a08d-181d0c4eb0cc.jpg",
      "cellphone.jpg": "a8135cd1-e5b8-44c6-aefe-0990ce6a2a34.jpg",
      "basketball.jpg": "99a9c90f-507d-404d-a65b-9aceb6ec4f9e.jpg",
      "baseball.jpg": "18d8f918-edf0-46bf-94b1-2555bbd7557c.jpg",
      "astronaut.jpg": "8ca59105-4235-4b18-a2d3-acf452bde47a.jpg"
    },
    "encrypted_validation": "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\nO55b9cEy\n",
    "encrypted_exemplar_sources": "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\nAes2fdJbD1s=\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a Scene object\n    Scene images = new Scene();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a ContrastImage object, and draw the image in the scene with\n     * no filters. Then call the adjustContrast() method, and draw the image in the\n     * scene again with the filter.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    // Plays the scene\n    Theater.playScenes(images);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ImagePlus.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image that can be modified with filters and effects\n */\npublic class ImagePlus extends Image {\n\n  private Pixel[][] pixels;    // The 2D array of pixels\n\n  /*\n   * Sets the superclass filename to the specified filename\n   * and calls the getPixelsFromImage() method to initialize\n   * the 2D array of Pixel objects that make up the image\n   */\n  public ImagePlus(String filename) {\n    super(filename);   // Calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixelsFromImage();\n  }\n\n  /*\n   * Returns the 2D array of pixels\n   */\n  public Pixel[][] getImagePixels() {\n    return pixels;\n  }\n\n  /*\n   * Returns the pixels in the image as a 2D array of Pixel objects\n   */\n  public Pixel[][] getPixelsFromImage() {\n    Pixel[][] tempPixels = new Pixel[getHeight()][getWidth()];\n    \n    for (int row = 0; row < tempPixels.length; row++) {\n      for (int col = 0; col < tempPixels[0].length; col++) {\n        tempPixels[row][col] = getPixel(col, row);\n      }\n    }\n\n    return tempPixels;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ContrastImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an high or low contrast image\n */\npublic class ContrastImage extends ImagePlus {\n\n  /*\n   * Calls the superclass constructor to initialize pixels\n   */\n  public ContrastImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Adjusts the contrast of the image by multiplying the\n   * red, green, and blue values by the multiplier\n   */\n  public void adjustContrast(int multiplier) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Get the pixels from the image, and traverse the 2D array of Pixel objects.\n     * Multiply the red, green, and blue values of each Pixel by the multiplier,\n     * and set the color values to the result.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "thumbnail_url": "https://images.code.org/7c423172635619f520095f7365285e50-optionD.gif",
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T18:21:23.950+00:00\",\"changed\":[\"cloned from \\\"CSA U5L8-L3d_2025\\\"\"],\"cloned_from\":\"CSA U5L8-L3d_2025\"}]"
}]]></config>
</Javalab>
