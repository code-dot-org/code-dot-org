<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T18:17:49.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A search engine needs to highlight the search query within the search results' snippets.\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Results</code> class has an instance variable <code style=\"background-color: #ececec; color: black; font-weight: bold;\">searchResults</code>, which is a 2D array of search results displayed on each page.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Results</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findSearchResult()</code> method to find and return the first instance of a search query within each snippet.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ResultsRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findSearchResult()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">indexOf()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Search Engine",
    "bubble_choice_description": "A search engine needs to highlight the search query within the search results' snippets.",
    "thumbnail_url": "https://images.code.org/921966ee0f5f914dd5777983dff3e0a7-google.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\noE90Cwg77w==\n",
    "start_sources": {
      "ResultsRunner.java": {
        "text": "public class ResultsRunner {\n  public static void main(String[] args) {\n\n    // Creates 1D arrays for the search results\n    String[] pancakesResults = FileReader.toStringArray(\"pancakes.txt\");\n    String[] coffeeResults = FileReader.toStringArray(\"coffee.txt\");\n    String[] yogaResults = FileReader.toStringArray(\"yoga.txt\");\n\n    // Creates a 2D array of all the search results\n    String[][] searchResults = {pancakesResults, coffeeResults, yogaResults};\n\n    // Creates a Results object\n    Results searches = new Results(searchResults);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the findSearchResult() method and print the results.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Results.java": {
        "text": "/*\n * Represents search results\n */\npublic class Results {\n  \n  private String[][] searchResults;     // The 2D array of search results on several pages\n\n  /*\n   * Initializes searchResults to the 2D array of search results\n   */\n  public Results(String[][] searchResults) {\n    this.searchResults = searchResults;\n  }\n\n  /*\n   * Returns the 2D array of search results\n   */\n  public String[][] getSearchResults() {\n    return searchResults;\n  }\n\n  /*\n   * Returns the search results that contains the query\n   */\n  public String findSearchResult(String query) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array searchResults. If the result contains the query,\n     * return the result. If no results are found, return a String letting the\n     * user know that no results were found.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n\n    return \"\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      },
      "pancakes.txt": {
        "text": "How to make pancakes\nLearn the secret to fluffy pancakes with this easy recipe\nPancake mix vs. homemade pancakes: which is better?\nGluten-free pancake recipes\nTop 10 pancake toppings to try",
        "isVisible": true,
        "tabOrder": 3
      },
      "coffee.txt": {
        "text": "Best coffee shops in town\nFind the perfect coffee shop for studying, working, or just hanging out\nHow to brew the perfect cup of coffee at home\nCoffee vs. tea: which is better for your health?\n10 creative coffee drink recipes to try at home",
        "isVisible": true,
        "tabOrder": 4
      },
      "yoga.txt": {
        "text": "Yoga for beginners\nLearn the basics of yoga with these easy poses\nThe benefits of yoga for mental health\nHow to find the right yoga class for you\nThe best yoga mats for home practice",
        "isVisible": true,
        "tabOrder": 5
      }
    },
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T18:17:49.845+00:00\",\"changed\":[\"cloned from \\\"CSA U5L7-L5d_2025\\\"\"],\"cloned_from\":\"CSA U5L7-L5d_2025\"}]"
}]]></config>
</Javalab>
