<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In TemperatureScene.java:\r\n\r\n1. Write the method `getImage()`(#e7e8ea) using nested `if`(#e7e8ea) statements to return the correct image to draw.\r\n\r\n   * If `temp`(#e7e8ea) is greater than `75`(#e7e8ea) and `hasClouds`(#e7e8ea) is `true`(#e7e8ea), return the `\"clouds.png\"`(#e7e8ea) image.\r\n\r\n   * If `temp`(#e7e8ea) is greater than `75`(#e7e8ea) and `hasClouds`(#e7e8ea) is `false`(#e7e8ea), return the `\"sun.png\"`(#e7e8ea) image.\r\n   \r\n##In MyConsole.java:\r\n\r\n2. Test your algorithm by changing the values for the `TemperatureScene`(#e7e8ea) object.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "starter_assets": {
      "clouds.png": "d69da5bb-7e11-44ab-9af7-51bff542d411.png",
      "sun.png": "10adcd09-aa74-4192-a2e0-9cc912e0df8b.png"
    },
    "encrypted_exemplar_sources": "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\nIBTWBMlu5L5JEbY=\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    // TO DO #2: Change the values to test your algorithm.\n    TemperatureScene myScene = new TemperatureScene(80, false);\n\n    myScene.createScene();\n\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true
      },
      "TemperatureScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Represents a scene displaying either clouds or a sun\n */\npublic class TemperatureScene extends Scene {\n\n  private int temp;            // The temperature\n  private boolean hasClouds;   // Whether or not there are clouds\n\n  /*\n   * Constructor to create a TemperatureScene\n   * with the specified temperature and status of clouds\n   */\n  public TemperatureScene(int temp, boolean hasClouds) {\n    this.temp = temp;\n    this.hasClouds = hasClouds;\n  }\n\n  /*\n   * Sets temp to a new temperature\n   */\n  public void setTemp(int newTemp) {\n    this.temp = newTemp;\n  }\n\n  /*\n   * Sets hasClouds to the new clouds status\n   */\n  public void setHasClouds(boolean newHasClouds) {\n    this.hasClouds = newHasClouds;\n  }\n\n  /*\n   * Returns either an image of clouds or of a sun based on\n   * the temperature and status of hasClouds\n   */\n  public String getImage() {\n    String image = \"\";\n    \n    // TO DO #1: Implement your algorithm to return the correct image\n    // based on the temperature and status of hasClouds.\n    \n    \n\n    return image;\n  }\n\n  /*\n   * Creates a scene displaying either clouds or a sun\n   * based on the temperature and status of clouds\n   */\n  public void createScene() {\n    String imageToDraw = getImage();\n    drawImage(imageToDraw, 0, 0, getWidth());\n  }\n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:31:57.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:31:57.852+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L2_2022\\\"\"],\"cloned_from\":\"CSA U4L3-L2_2022\"},{\"changed_at\":\"2022-09-19 20:01:31 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:02:08 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:02:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:03:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:03:49 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:12:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:13:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:13:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:13:43 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-19 20:16:05 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
