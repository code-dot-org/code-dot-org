<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T20:59:20.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Data visualizations are powerful tools to present information and convey patterns and relationships. Sometimes visualizations are charts or graphs, and other times they are more abstract pieces of art. Your goal is to create a visual representation relating at least two categories from your dataset that engages your viewer and encourages them to learn more about your chosen topic.\r\n\r\nâœ… **TO DO:** Use your knowledge of object-oriented programming, one-dimensional (1D) arrays, and algorithms to create your data visualization program:\r\n\r\n1. **Create at least two 1D arrays** - Create at least two 1D arrays to store the data that will make up your visualization.\r\n\r\n*Note: You can go back to the datasets on <a href=\"https://studio.code.org/s/csa4-2023/lessons/8/levels/5\" target=\"_blank\">**this level**</a> to copy and paste the values you need in your project.*\r\n\r\n2. **Implement one or more algorithms** - Implement one or more algorithms that use two-way or multi-selection statements with compound Boolean expressions to analyze the data.\r\n\r\n3. **Use methods in the `Math`(#e7e8ea) class** - Use one or more methods in the `Math`(#e7e8ea) class in your program, such as to perform calculations on the values in your dataset and display the results, choose random values from the dataset, or display images or shapes at random locations.\r\n\r\n4. **Create a visualization** - Create an image or animation that conveys the story of the data by illustrating the patterns or relationships in the data.\r\n\r\n*Note: This may be abstract! Others do not necessarily need to know what the story or pattern is right away, but you do need to be able to explain it to them.*\r\n\r\n5. **Document your code** - Use comments to explain the purpose of the methods and code segments and note any preconditions and postconditions.\r\n\r\n### FileReader Methods\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data\r\n\r\n* <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containing the data",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "DataScene.java": {
        "text": "import org.code.theater.*;\n\npublic class DataScene extends Scene {\n\n\n\n\n\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "data1.txt": {
        "text": "",
        "isVisible": true,
        "tabOrder": 2
      },
      "data2.txt": {
        "text": "",
        "isVisible": true,
        "tabOrder": 3
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 4
      }
    },
    "encrypted_exemplar_sources": "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\nc8kx9IxV3I2Y\n",
    "starter_assets": {
      "cross-platform.jpg": "2adb9123-12fc-484b-be29-e8200547ebd6.jpg",
      "mobile.png": "b8ef5f5c-a78a-433d-adaa-636fa28e1a5a.png",
      "wii.png": "d9554840-0c5a-457c-a1bf-5f3eaae70264.png",
      "gameboy.png": "9c71501b-012b-4ca7-83a8-9053d5b2de3a.png",
      "nintendo.png": "40826459-fe86-43d9-a476-b679b3737ca3.png",
      "xbox.png": "31ecb48c-a6a0-4bb5-9d3f-289f2859eff2.png",
      "playstation.png": "6180e9bd-972b-4849-92a5-3b59e0a533f0.png"
    },
    "name_suffix": "_2024"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T20:59:20.618+00:00\",\"changed\":[\"cloned from \\\"CSA U4 Abstract Data Art Project_2023\\\"\"],\"cloned_from\":\"CSA U4 Abstract Data Art Project_2023\"}]"
}]]></config>
</Javalab>
