<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T21:01:22.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A company has collected customer satisfaction ratings on a scale of 1 to 5 for their products over a month. The data is stored in a 2D array, where each row represents a product and each column represents a day of the month.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Product</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageRating()</code> to calculate and return the average customer satisfaction rating.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ProductRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageRating()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array in row-major order.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_row_major_traversal",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Customer Satisfaction",
    "bubble_choice_description": "Calculate the average customer satisfaction rating for a product over a month.",
    "thumbnail_url": "https://images.code.org/12ced438aff8ce091b500930e1112178-rating.png",
    "encrypted_validation": "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\ne0K+exHD0B7QWzp8rLVTjmZbIM91sUmk\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "ProductRunner.java": {
        "text": "public class ProductRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of customer satisfaction ratings for several products\n    int[][] ratingsData = { {4, 5, 3, 4, 5, 4, 5, 3, 5, 4, 5, 3, 5, 4, 5, 3, 4, 5, 4, 5},\n                            {3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4},\n                            {5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4},\n                            {4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5},\n                            {3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4} };\n\n    // Creates a Product object\n    Product electronics = new Product(ratingsData);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcAverageRating() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Product.java": {
        "text": "/*\n * Represents a product\n */\npublic class Product {\n\n  private int[][] ratings;    // The 2D array of customer satisfaction ratings\n\n  /*\n   * Initializes ratings to the specified 2D array of customer satisfaction ratings\n   */\n  public Product(int[][] ratings) {\n    this.ratings = ratings;\n  }\n\n  /*\n   * Returns the 2D array ratings\n   */\n  public int[][] getRatings() {\n    return ratings;\n  }\n\n  /*\n   * Returns the average of all customer satisfaction ratings\n   */\n  public double calcAverageRating() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array ratings in row-major order. Calculate and return\n     * the average of all the values in ratings by dividing the total by the\n     * number of rows times the number of columns.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2024",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:01:22.618+00:00\",\"changed\":[\"cloned from \\\"CSA U5L3-L4b_2023\\\"\"],\"cloned_from\":\"CSA U5L3-L4b_2023\"}]"
}]]></config>
</Javalab>
