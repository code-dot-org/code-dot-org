<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T18:16:33.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A school has recorded the activity points earned by students in a 2D array, where each row represents a student and each column represents a specific activity.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">School</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getHighestActivity()</code> to calculate and return the student that has the highest total activity points.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SchoolRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getHighestActivity()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_enhanced_for_loops_and_2d_arrays",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Student Activity",
    "bubble_choice_description": "Find the student that has the highest total activity points.",
    "thumbnail_url": "https://images.code.org/f012900901a8e38f325ea1eeb74c058f-audience.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "SchoolRunner.java": {
        "text": "public class SchoolRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array containing the activity points for several students\n    int[][] activityPoints = {{3, 5, 2}, {1, 4, 6}, {2, 5, 3}, {6, 2, 1}};\n\n    // Creates a School object\n    School school = new School(activityPoints);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getHighestActivity() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "School.java": {
        "text": "/*\n * Represents a school\n */\npublic class School {\n  \n  private int[][] activityPoints;   // The 2D array containing the activity points for several students\n\n  /*\n   * Initializes activityPoints to the specified 2D array\n   * containing the activity points for several students\n   */\n  public School(int[][] activityPoints) {\n      this.activityPoints = activityPoints;\n  }\n\n  /*\n   * Returns the 2D array activityPoints\n   */\n  public int[][] getActivityPoints() {\n    return activityPoints;\n  }\n\n  /*\n   * Returns the row index for the student that has the\n   * highest total activity points\n   */\n  public int getHighestActivity() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array activityPoints to calculate the total activity\n     * points for each student (row). Return the row index that has the\n     * largest total activity points.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n    \n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T18:16:33.724+00:00\",\"changed\":[\"cloned from \\\"CSA U5L5-L6d_2025\\\"\"],\"cloned_from\":\"CSA U5L5-L6d_2025\"}]"
}]]></config>
</Javalab>
