<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-04-11T13:55:37.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO #1:** Look at the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">setStatus()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Course</code> class. What do you notice about its parameter? Does the parameter get a copy of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">boolean</code> value when the method is called?\r\n\r\nâœ… **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">StudentRunner</code> class, add the following code:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nSystem.out.println(\"isEnrolled = \" + isEnrolled);\r\n</pre>\r\n\r\nRun the program. What do you notice about the output? Why do you think this happened?",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- ðŸ”Ž ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "project_template_level_name": "CSA U7L2-Parameters PBT_2023",
    "teacher_markdown": "1. Since `boolean` variables are **primitive**, when this method is called, the value that is copied to the parameter `newStatus`. The value of `newStatus` is then copied to the instance variable `status`.\r\n\r\n2. In this example, we are declaring and initializing a `boolean` variable, `isEnrolled`. We then pass the value (`true`) to the constructor for the `Course` object, `csCourse`. We are not passing in a reference to `isEnrolled` since it is not an object, but rather a primitive variable. When we later use the `dropCourse()` method to change `status`, we are changing the instance variable of that object. However, this does not change the original value of the `isEnrolled` variable, which is why it still prints `true` to the console.",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-11T13:55:37.456+00:00\",\"changed\":[\"cloned from \\\"CSA U7L2-L2_2023\\\"\"],\"cloned_from\":\"CSA U7L2-L2_2023\"},{\"changed_at\":\"2023-04-11 13:55:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 13:38:14 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 13:39:50 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 12:22:36 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
