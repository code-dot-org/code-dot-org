<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:13:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A social media analyst wants to store data about the top five most followed Instagram accounts to create a visual for each user.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">setupData()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">InstagramScene</code> class to return a two-dimensional (2D) array that contains the following values:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nRow 1: \"@instagram\", \"Instagram\", \"353\", \"Social media platform\"\r\nRow 2: \"@cristiano\", \"Cristiano Ronaldo\", \"224\", \"Footballer\"\r\nRow 3: \"@arianagrande\", \"Ariana Grande\", \"190\", \"Musician and actress\"\r\nRow 4: \"@therock\", \"Dwayne Johnson\", \"187\", \"Actor and professional wrestler\"\r\nRow 5: \"@kyliejenner\", \"Kylie Jenner\", \"181\", \"TV personality and businesswoman\"\r\n</pre>\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class,\r\n\r\n1. Create a 2D array to store the array returned from calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">setupData()</code> method.\r\n\r\n2. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">drawResults()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">InstagramScene</code> class with the 2D array.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring and initializing a two-dimensional (2D) array using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">new</code> keyword.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "video_key": "csa_two_dimensional_arrays",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Instagram Users",
    "bubble_choice_description": "A social media analyst wants to store data about the top five most followed Instagram accounts to create a visual for each user. Declare and initialize a 2D array to store the values.",
    "thumbnail_url": "https://images.code.org/22533bab7292daad541f9ded272fa5fa-image-1650931060148.png",
    "starter_assets": {
      "arianagrande.png": "733e80f4-7f65-4b4d-9ef0-0ad70a9413de.png",
      "cristianoronaldo.jpg": "a91f0b96-9601-494c-a2ae-463358f2ce04.jpg",
      "dwaynejohnson.jpg": "d87dd503-f772-422e-ab21-b84157745135.jpg",
      "instagram.png": "2d1d143a-7d2d-454d-b2a5-50b52aee0db8.png",
      "kyliejenner.jpg": "e06e6386-a1ba-4e47-978d-50501eff00d0.jpg"
    },
    "encrypted_validation": "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\nI5hp+FNoGginLOgBnINK2B5XsbNkDeG5dA==\n",
    "encrypted_exemplar_sources": "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\nmRudzV9lls7UvHhCChMNU8zcnTmkJshi2b1HO+owABzU3Wee+BYSZUhJEIJi\nrY5pgYNbjdlPNHqbVWjVCd3UICCRphfXCrMjrFsePdqvNc8i/YhC8npF5LID\nwTgSNFDvERZ+CoN9G8VQdvBpm8lo/n56MOB5f9N0GRDtpVzz6igdWKeTM+Rv\nQ8de9Bsncn7/UtYpWKKom1t+XUIEKXLOqNOrwZ9IXt2hI42coDiWpFyooLPa\n90sIucZ29OfGYmD2a7eXuiyzG+yBsVOJ18rBSIgoAScb1Citw2SuZOVx8flm\nHYmfpCwMhjUGoqnvr7J2Lw6fcsathsL/+49wwPlVqQ9a6pIjVeiViP/Iq4R6\nvb42/nk2FW/Y9UsfiXDuAI/sJvM7memMvjOk5/zdZ6w2t7984bKu9xIIsOIz\n9vs6zh4u9j7pm1M2c+xUWMlLt5apFxxPhk44r79JI1nMLRtn7qCcxW5neU31\n7J9Jm4rHTr8fhlt9lv+yT7/10n9yve6KV0M9vxOH63CHViV5F+PmcHr0rQez\nvIpHGtjJYRQkkG6nBEu0WjGnkA86kCYOnoerOEOUYml98Es7pDS6CvKfdGow\npYHfdwVAk4qY0Wo2jjrA54xVjWDfjv2EbbRZKlRGNv5Dl3v7/oKVshB+ed9s\n9Zf5ACGGmNqyD1fqCV9dM9Dl+5hGUcUBT/7yobeZoGCJLmeThrQ6j/NTNFNi\nEZKF6r3KbXgTLwjiyZA8BzFSS6DdB6qeUXX5qKjqJfWCcRWXvYG4tmRB2XM2\nQ7Vdugvos206vl9qUr/sBCqHti0MPsnJVttOa+GP0RBj9q9zQjehWgkKndQ8\nnGzYJXw0xkPg2T7F7zB9iuzBOijm5NySyKKt0zH4V7V6lq871jGnujOCLzWl\njvqSaf4ENAgYe7nykMy8MqRGdpB4h5hg+XBkl9Yp6Sg4/b7dndrQV8umxIWi\n/NkrhTLYeRlmkOPe8UOQcZdgMG2fWfXGirs8KdXsWcYKp03PsLnu5wGaOD7m\nwqFQA8AuBGLpUhu6gLwYy1TKYwo33ApKiC3gj/YHs9GwTPkh/ZkTc9q6/aqk\nEC9GeESS0TlWMdhH5SnEJgn2HV6H3zxPIiFemLpkbGPv0YsjU8YtdZih6bSG\ntUNjCYcE839E/QE0Q7kXWPxAik9UamGtSjCq5mbkmTcJxWIRBeoouWGb8CN7\nZ5sUu6CBAgsoUZ1WcdkIM0EnHzjPTkED48rdhfU7rstUfldQUKJx7X25DN8f\n8ki4BO2fRYF2TCrkiuK0GkGhj4JCYZqZRvklKkJNNvP31q7VDcDwM9tGRXM2\n+xVs5fh9FmC7DjcITPmTu+yBZvbOng1cxuChvMoUFGwdkzdgH+yUaaNtzscM\niRr4rce4y4icBYlYq5RQWVhZp3/A+8rLuCpRnS/BKjK7iSgxw90MqM9iXKGr\nROJAffABTooWmxB53PXkCyqctfQXaiG0CFDP54/YXM1xuqun8YZGBf22zUR4\nZQfJ+dSqFUjQU5+iQawoOrKld/Z9N42AC6IXnufhgTVQpIDfAmRaQkX193Vl\nFMBSZ0jFHbAXMrwMEFEKNsaah1ZE824Y+DW6kCpVK1ibwarTqyCnhMA4eCPy\n9ED5TCHB06/dlScoQyUBlq8oCFep+qVOA8MGM6eEMyAkZRBTpBBykRdiVTQA\nxQVbp2PuGvUy2ArueCFTod0LW1rRuhHPcdIZS2a5GTW5nz8pifTS4Y+0jghj\ntFF+0aXlzYBLQoFDNHdFLofbevPFti0xoSvVwhi0x0HXKtg2B/wlp0bWo3Iq\nFfLo7ReMBHneAfYcsYjtp4kw5mKs4RPLElWRBQkB4+6gyoqopZnMZja0+AHa\nos8K2YcUDbQUtmbUuCr38Hzh3Gpc35mC/Cpuyhkvaq7pTONznvmewbKrPnNJ\nutdwcnmK2ZIGsuwmGza3BekfztV8dqSNsK/wZ5phK8rMW3rSUTpbIMAlrx1i\nY7Pqy60iMK64ioL+eG2+bNGaMyAAZrZnFg0TYof+9a5ePRnHJbzvMUluegIM\nF2rJtmzzYDLbwcqIuqfQUDRXflaNPuYzIo/BHZcWP+ewA6q0msyzhZWDKHOc\nArLJNgRkW4fkrJNWYKY1nLCTQKXoiN0f3BK22u1/AdrKXRFTIUDT9dmL4fvg\nhYpghFOJejA6Kz4tA4WGrZCQhqoXSENPgQc9XsEdQN8LMxISNT77+mNaKcu2\nXhNCVotFBfZzvx00Jr5R9+UJtzAiSJgyBXgj0fvUlIAw6vLFEXyGCNUIMjiQ\n6Adsp95xH4dSoVEq3FnOyh72wM/0W3ZWpR6e0P4sdFyNQHSfw7X/AsdozUOZ\nH7SRrJJrbeh1y0EgET2ibDb4JNjf1ritXc/k0R5Wq7Ohtz6zY0X3Eo3897FQ\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates an InstagramScene object\n    InstagramScene scene = new InstagramScene();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the setupData() method and pass the 2D array that is returned to a\n     * call to the drawResults() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    // Plays the scene\n    Theater.playScenes(scene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "InstagramScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a scene to show the an Instagram user\n * and their information\n */\npublic class InstagramScene extends Scene {\n\n  private String[][] users;   // The 2D array of Instagram users\n\n  /*\n   * Uses the setupData() method to initialize the 2D array happiness\n   */\n  public InstagramScene() {\n    this.users = setupData();\n  }\n\n  /*\n   * Returns the 2D array of Instagram users\n   */\n  public String[][] getUsers() {\n    return users;\n  }\n\n  /*\n   * Declares, initializes, and returns a 2D array\n   */\n  public String[][] setupData() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Create and return a 2D array containing the values for each user.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    return null;\n  }\n\n  /*\n   * Returns the image file for the specified user\n   */\n  public String getUserImage(String user) {\n    String userImage = \"\";\n\n    if (user.equals(\"Instagram\")) {\n      userImage = \"instagram.png\";\n    }\n    else if (user.equals(\"Cristiano Ronaldo\")) {\n      userImage = \"cristianoronaldo.jpg\";\n    }\n    else if (user.equals(\"Ariana Grande\")) {\n      userImage = \"arianagrande.png\";\n    }\n    else if (user.equals(\"Dwayne Johnson\")) {\n      userImage = \"dwaynejohnson.jpg\";\n    }\n    else if (user.equals(\"Kylie Jenner\")) {\n      userImage = \"kyliejenner.jpg\";\n    }\n\n    return userImage;\n  }\n\n  /*\n   * Draws the specified text at the given x and y\n   * position, then pauses for 0.3 seconds\n   */\n  public void drawTextAndPause(String text, int xPos, int yPos) {\n    drawText(text, xPos, yPos);\n    pause(0.3);\n  }\n\n  /*\n   * Creates a scene by drawing the image of the user\n   * and text containing the information about the user\n   */\n  public void drawResults(String[][] users) {\n    for (int row = 0; row < users.length; row++) {\n      for (int col = 0; col < users[0].length; col++) {\n        drawTextAndPause(users[row][0], 50, 50);\n        drawTextAndPause(\"Followers: \" + users[row][2], 200, 200);\n        drawTextAndPause(users[row][3], 50, 350);\n        \n        String userImage = getUserImage(users[row][1]);\n        drawImage(userImage, 20, 75, 125);\n      }\n\n      pause(1);\n      clear(\"white\");\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:13:24.778+00:00\",\"changed\":[\"cloned from \\\"CSA U5L1-L5c_2023\\\"\"],\"cloned_from\":\"CSA U5L1-L5c_2023\"}]"
}]]></config>
</Javalab>
