<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T15:24:58.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://www.kaggle.com/datasets/kabhishm/best-selling-nintendo-switch-video-games\" target=\"_blank\">**Best Selling Nintendo Switch Video Games dataset**</a> includes the titles of best selling video games and the number of copies of each video game that were sold. Each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Game</code> object is stored in a 1D array called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">bestSellingGames</code>.\r\n\r\n‚úÖ **TO DO:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Nintendo.java</code>, convert the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toString()</code> method to use an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ What is the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \r\n    <p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class is a hidden support class that has methods for reading data from a text file into a 1D array. It has the following methods:</p>\r\n\t\t<ul>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containng the data</li>\r\n\t\t</ul>\r\n    \t<p>For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nString[] names = FileReader.toStringArray(\"names.txt\");\r\n \r\nint[] numbers = FileReader.toIntArray(\"numbers.txt\");\r\n \r\ndouble[] prices = FileReader.toDoubleArray(\"prices.txt\");</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/enhanced-for-loops"
    ],
    "display_name": "Video Games",
    "bubble_choice_description": "Convert the `for` loop to an enhanced `for` loop to return a `String` containing the titles of the best selling Nintendo Switch games.",
    "thumbnail_url": "https://images.code.org/515e683ccee6dc400eaabb1bb5a98303-console.png",
    "encrypted_validation": "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\nUxS+2wPVzbSPqMasXmPLOaXuzQ==\n",
    "start_sources": {
      "GamesRunner.java": {
        "text": "public class GamesRunner {\n  public static void main(String[] args) {\n\n    // Creates a Nintendo object\n    Nintendo topGames = new Nintendo(\"titles.txt\", \"copies.txt\");\n\n    // Prints the Nintendo object\n    System.out.println(topGames);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Nintendo.java": {
        "text": "/*\n * Manages data about best selling video games\n */\npublic class Nintendo {\n\n  private Game[] bestSellingGames;   // The 1D array of best selling video games\n\n  /*\n   * Reads the data from titlesFile and copiesFile to initialize bestSellingGames\n   */\n  public Nintendo(String titlesFile, String copiesFile) {\n    bestSellingGames = createGames(titlesFile, copiesFile);\n  }\n\n  /*\n   * Returns a 1D array of Game objects using the data from titlesFile and copiesFile\n   */\n  public Game[] createGames(String titlesFile, String copiesFile) {\n    String[] titlesData = FileReader.toStringArray(titlesFile);\n    int[] copiesData = FileReader.toIntArray(copiesFile);\n    Game[] tempGames = new Game[titlesData.length];\n\n    for (int index = 0; index < tempGames.length; index++) {\n      tempGames[index] = new Game(titlesData[index], copiesData[index]);\n    }\n\n    return tempGames;\n  }\n\n  /*\n   * Returns the 1D array of Game objects\n   */\n  public Game[] getBestSellingGames() {\n    return bestSellingGames;\n  }\n\n  /*\n   * Returns a String containing the information about each Game object\n   */\n  public String toString() {\n    String result = \"\";\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Convert this for loop to an enhanced for loop.\n     * -----------------------------------------------------------------------------\n     */\n\n    for (int index = 0; index < bestSellingGames.length; index++) {\n      result += bestSellingGames[index] + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Game.java": {
        "text": "/*\n * Represents a video game\n */\npublic class Game {\n\n  private String title;    // The title of a game\n  private int copies;      // The number of copies sold\n\n  /*\n   * Sets title and copies to the specified values\n   */\n  public Game(String title, int copies) {\n    this.title = title;\n    this.copies = copies;\n  }\n\n  /*\n   * Returns the title of the game\n   */\n  public String getTitle() {\n    return title;\n  }\n\n  /*\n   * Returns the number of copies sold\n   */\n  public int getCopies() {\n    return copies;\n  }\n\n  /*\n   * Returns a String containing the title and number of copies sold\n   */\n  public String toString() {\n    return title + \": \" + copies + \" copies sold\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "titles.txt": {
        "text": "Mario Kart 8 Deluxe\nAnimal Crossing: New Horizons\nSuper Smash Bros. Ultimate\nThe Legend of Zelda: Breath of the Wild\nPokemon Sword and Shield\nSuper Mario Odyssey\nSuper Mario Party\nPokemon Brilliant Diamond and Shining Pearl\nRing Fit Adventure\nPokemon: Let's Go, Pikachu! and Let's Go, Eevee!\nPokemon Legends: Arceus\nNew Super Mario Bros. U Deluxe\nSplatoon 2\nLuigi's Mansion 3\nPokemon Scarlet and Violet\nSuper Mario 3D World + Bowser's Fury\nSuper Mario 3D All-Stars\nMario Party Superstars\nSplatoon 3\nSuper Mario Maker 2\nMonster Hunter Rise\nNintendo Switch Sports\nThe Legend of Zelda: Link's Awakening\nKirby and the Forgotten Land\nMario Tennis Aces\nClubhouse Games: 51 Worldwide Classics\nDonkey Kong Country: Tropical Freeze\nHyrule Warriors: Age of Calamity\nKirby Star Allies\nThe Legend of Zelda: Skyward Sword HD\nFire Emblem: Three Houses\n1-2-Switch\nMomotaro Dentetsu: Showa, Heisei, Reiwa Mo Teiban!\nPaper Mario: The Origami King\nMinecraft\nAmong Us\nYoshi's Crafted World\nMetroid Dread\nNew Pokemon Snap\nArms\nXenoblade Chronicles 2\nMario Golf: Super Rush\nPikmin 3 Deluxe\nMario Strikers: Battle League\nOctopath Traveler\nCaptain Toad: Treasure Tracker\nDragon Ball FighterZ\nMario + Rabbids Kingdom Battle\nPokemon Mystery Dungeon: Rescue Team DX\nTaiko no Tatsujin: Drum 'n' Fun!\nXenoblade Chronicles 3\nMiitopia\nXenoblade Chronicles: Definitive Edition\nBig Brain Academy: Brain vs. Brain\nMario Kart Live: Home Circuit\nDragon Ball Xenoverse 2\nPokken Tournament DX\nMarvel Ultimate Alliance 3: The Black Order\nNintendo Labo Toy-Con 01: Variety Kit\nAstral Chain\nWarioWare: Get It Together!\nNaruto Shippudden: Ultimate Ninja Storm Trilogy\nDr Kawashima's Brain Training for Nintendo Switch\nResident Evil: Revelations Collection\nGame Builder Garage\nBayonetta 2\nEnter the Gungeon\nFire Emblem Warriors: Three Hopes\nFitness Boxing\nFitness Boxing 2: Rhythm and Exercise\nShin Megami Tensei V\nStory of Seasons: Pioneers of Olive Town\nThief Simulator",
        "isVisible": true,
        "tabOrder": 3
      },
      "copies.txt": {
        "text": "48410000\n40170000\n29530000\n27790000\n25370000\n24400000\n18350000\n14920000\n14870000\n14810000\n13910000\n13310000\n13300000\n11430000\n10000000\n9430000\n9070000\n8070000\n7900000\n7890000\n7700000\n6150000\n6080000\n5270000\n4280000\n4220000\n4120000\n4000000\n3980000\n3910000\n3820000\n3630000\n3500000\n3340000\n3310000\n3200000\n3010000\n2900000\n2740000\n2660000\n2440000\n2350000\n2230000\n2170000\n2160000\n2130000\n2010000\n2000000\n1890000\n1890000\n1720000\n1680000\n1680000\n1590000\n1580000\n1550000\n1540000\n1500000\n1420000\n1280000\n1270000\n1260000\n1200000\n1200000\n1060000\n1040000\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000",
        "isVisible": true,
        "tabOrder": 4
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 5
      }
    },
    "encrypted_exemplar_sources": "vgFutEZ5TNdywZKA8980kWAjREfNQTbFUsKVDuxnan3OVbtjI3Eey8INwx81\nmEvHLuUjAfcVNcHqkj9RxPivjF34vIKaKtGKom92eLxwYHl3P5WtxqekfBM9\nQM0mrPm+wlUsUlQfcPTaOez5mS5VZHXqinLI3uir1QUx0pttINTjEYr96cI5\nJSex0uKJaGTi2r6ZdC2yx9Jaruq/J96fMJniWdIzbpzVgVVIuHrzeYH6nVUj\nNc2trGxovnF3Ri/JjqXoVP9cKMLvQyjY70fUi/IcRNcHOMIrJRK2eiUYHWF5\nkFvhKzaryC5c93xWCa+Ej6CXpWSWmACv/sXTsH/ct8p9aFNHA+0XGYAzSAZW\nIacOaTrBkyTLKv3x9uo6AAFDa5+R/ZNxYyg6kAVj2HdCVKMFubfEQJ232qi3\naW5w5rHnkMF3UzEGVR26Eym9cyGTmEuNkl5L7Tyif/uzpE9L3Ly3aXXixYu/\nhztnSUMgaZaD14EGID4cGjRjOcClhZ7W9pqF8+vsTb2lXUWp8+mobIqpyQ4M\nXEsPdrXy1Rp5ggH0oeA7463uxNSbZ27QI7jebCco7UboKSG3isvmWbJcWDTN\nmrSYSiRQ8jMWpyQhH1mg8Kc/5ImHW9yb8KzshpgUJwkA1MuHEduwqHY4kGA8\naYULnpHhiAoBjL58bTk/wJZjKXxyYPaVRJxN41OmqT6oG54tiAk1LNO5JDqx\niFMF299SwmrxZrrVmr+0CtJDhGqtbVbZ5lVQEc8W3WOU8xXkcnBcZzWkXAPu\noy9FIIMdH8aSJp9LYNMcrFE/R7Mvod1iwPp3PrQCDpE3V33GzQ/8zLwAKgsq\n26kRNn18/uMUEqlBLpClG7a1Etj38mv6gwo/5O+l70hK+eqF1GSRqzys+QS2\nIJTA6hzxOrLNGNud9iycX1FkFBuLYyk5w2RN5eNccS8k4izgOlXoaHQdyy2A\nv8BoXrs8iQqp6cyteqZnTlOsqNHgsDvAqkEfpwqw9NlTyMUZPKXioGujc6yR\nip2npSs778uursmjScoghtCTXq1NzFgD/KzqTAf8DPD1t6wnAX6jy6Wc1weC\n+qsC8euKh8/OWJ9GTP/mqSrb/65hDmXthGgVob5ZHUCw46ttOQkKmNlgC51w\nSX/knq4RYARxNS7/pQtlhkpEX7MyvS5OjqONOBGjGlc2Y3LDXt5ytDanomxm\neGYFskUWVt6FyrGJZHZPKmrRA/fzYADE9guPAypG/SyNCg9VvBt/+7FR0ti4\n5Dcs0LadxL84S2r1GgHBRgoiOtHqN1GpPzdEw1n7qxiAAe0ZmZDwzf3S4J9M\nJaYTwzxJHGDe8bsdozVeOcCOjGAxCgrKLFH48QUkwrnRhVwXYOorZQ3klso2\naFpn3rLAf8tha8aKGcPMhRcTK7ZBgVW5VYRrlvdHH9jAv6qPN0oksTxBz/It\n/U9zpDOnQiGIJAEf4Ndr8Hd03iSoo8Bkq0fAxf42vM3uUSmkD7GfhZ8Ax20O\nMeuCC0FtT9/ILGs5h+dozx0vqC6BD2F0SndOrXyySuHNDkv6wg6/3qH/RILY\nGKd1SwZHlY93Wq4bT9mICmvGVqaZCsf63dM1pSR77P3gDGzWGChW5ehbzTUL\nAknvE8Mip2hSFJ7ThqRozkGZfPBnD3/ZwHkVaCAaB5xhHmVs+Qt9ED7HRFEF\nzqk7Ux4ojgHF50hdMkBuraKRYThP4RRMeM5ijpe8By1RfsuNTUKzstfestPh\ni0zwo8AJt/UmDCMqFqBhuNGlbpTVy5Wduj9U2k2XYNzsUa+DLCbHfzuZWMg+\nnnYKvr0pvu2B70tvWmrIxHflHDJAzSrHwiaLARqC1lRIVfflZFTKTWZM53K2\numhfia4gfH0SA0Hse57XEIZYtsa6/QKa0oGI8uVpgSEykTvWuSgm7NarnSjB\nQaKkORnabHKQJIsuEl51LyG7GFosWioKZTXaPr2vgQ6GKlgiidrtIdhlx0qM\nxW0DP+cK5qlKe8j5xEXCwCVhG36ZX+lKXtziIF46r3jk7LyIKJ38HlXslhR9\nx83GrztZiXaJoaH3hBdMMGj93dm+R9cmQf86d5gxcK9cjsL6EJXuK/N15+oR\nOYbl2wVBq598hsMJTXmElU5vQXxd+MP9MMTRarZP73iBJvuOzoupWG4zb4Ee\nugthQxJvH3mdeCHL2GlkfmAjJqm6AghZbxdv1eLYYUYiijp68ZSfBTGvgr1T\nqNLJ/jkn2G5rJwWVDeShVXs1w++RknJy6TLPaltLXLNAjvB0LFAsjkNaxu1K\nIc0wXceEng9cohJi/s+Il+caAEuXBN+gIoIX/myBltC5RVZH3beo/ghjh52y\nJeQXzlyCtpvvIPVX64KXtMrzksy8wrHTZCErlqa+ROM581mtKr2vsHVQLYBS\n59GX29M0e2XixPol/ZOVlE9p8U8JtIWTXv624WyWIjD6G3Dh387JtfQmL5JU\n9pssgDXpuI08AIIwb1qL6BXrVdfD6GgCqAe/K//KQe7IfXo8QDvQvYvobUq0\noTxM9vQk3Yl6ZBt/7GKDzTyor/nyyJnzQQZUzxekzoNH7A+w1kNZORTDTTom\niCsYsWewCnhhMzmHWne08TDLfKcJnRjW2UxNvUY4Wqdc1atvJMQg7F6Zke3q\nbuN+Dh0lLC8jTxo0GqUma9zIoA0k/UFnWJxgxqV7iqth3oIrd3HRktPU1szw\nuFhiOBYSrMaJdiQSKHg4mw+hYM0XYxvsD5FsANPsu18X8dqjxnRf+SsdzwuH\nCAu9LUJbIeKGiMgH8YopvE3BBt5VS4Fir6OuYL4qClEWe0Qw80Xjfgh4lFMC\nibUCejYJgHA7uB/wYLfgSg0qQcYuSVPT2nb1L0vL5LZXV+mI6/8NxE0ItylZ\nM/x/MGL5kHGMZuxATmiSf+2IHnVW5DbU02FmIS/7FX1XhFVfb+0JduvKIve3\nyrf7NtKnjkfdf6LDLZjq9eyJI5fm3WKnhaw7up417fKWqwe8NVPkXTueMKBh\nWrthI5KJlwtbCXebSdNsIbISc7WZ2oZl9DTUNDr++JsTnetBmA9HASq6cEBE\nf0ZLDs/ycpYD3oI3XcZPOZGy8Zq7cIEjQHYoNotegWj7XKgbp2S0M73neN7q\n5sdw3UKPBblfa9LiqgKFMWyFG3ga8e1nXfdYjk4QXGbHlsT3UlTRdy6gsj8H\nYcOoRI1/+QtUZq95fVR7WjayRFzyrOCr9JyHXS24KEs12Z1mofIrsM9rz5Kt\nwLn1eOc2ILbIlZ5IdTR4jA//rMrp6wnpLRq/JFXyEVJAIQYg7Bau/ATcM+XP\nsXwJl4F1DwLw8ZLcboVc2rTtus6DUta8RIKfnONAgKK4hOia1w9zKwfjdI3q\nL/cdZdv/kjnTywHkuZ3yk/durQqB+CavgwT/lL8PNPOkIjEUZiKANMhWXSmU\n307ofZ4TLt0N7/GZZIs9OByUdI+rpuI+LcFIoARloX/m7B3F/uNm2oa33TO1\n2swGA+vJKb1PcCriL5swDl5m7J6nPVPu2tz4kp7udK703CuQvGSW/8bCJ9r9\nWJsSn1nTrx+/w/nmc/If4AsP69kw3dhK8o+F6FAWt/JUslhiQEtKsP9iUNbl\nbBI71VU/LgDN6I64HAeCUgjI2+uwaISjEyqYDjnENMRMdBTkOZg/i/zYqbpC\ncIqCrW5Y7aPT/YzBvdAP1AsFTt6NrXhF8Qc7aeKyqGwNUPcM2+a/zDWtm0vh\nCi3QKXTo3n3PEfzI8Cqw4XXkqT3LIr2G1FP2qqGC2/piTxDW62+1OgjpgtS0\nMcUi0jOJsaCKK5C6nnxubUtTZs45UrJSbAJrTv6+ctUmaITGVZTD3VCpeMRT\nK+DIN+qgaHwkZlTqgXkIlfZRzzRVEf3UGN/RHPSvtEJHF2gCbUysnolj4V0b\nrE5IchRgxWA+PEYvBusMRsYkS4vxwzj7aOxYTR5TOEPNtb4ZkugMqT2cC7e8\njrSL5xkHT2TgkwEcrjBmVZnzPkutmxOyo2j53qbM240ssRquxH7d7aOPHAN2\nfXLTZnGZtIu909rJYXAMTP5ka1W07fFzqJAhN6CWt9S2DWcIUa3zB3jtizS8\nCxRe8skVUD48jbnc5xBwRywmd8RGXiYYSwgLDIPuQrzmsRRWf1F8L1EIIdfZ\nxnATdhlK1g9iM7AAsVgsRgEuyOrndhdwhehEbzBjQGPqpE8xT1p04xCzqnVW\ne0FMYKXHb92S9sDHMN7BGJepvarKGNX1qK0ux6CJ8YGoK1b7G5Ea3U7wADuB\nvhWqv5vT8bTn3EM4H5b7mRwubQ91onM7/3lA4tZmQeC1wjE6ItRUVr51mqv5\nFfynbrdmPwqJsnGXqwU0Kt5GRmyDoH1HhTT2LE0XyKGsm1vYZ2+PR2RHhDk9\nEwDQrM02d6PS/FOnORGaE3q6vf0/cunTNZ9ZA/SVJrE6ORMJFHCO44f3QKfC\n4KsfrrlSThRENWOzSqeJo7YiIVLYFiMXN4rEW+jxf/kbEhTM5CGArCnbipyb\nwHUkl9NI9yW8Kuh1YuSiwlGMRRCU0c28Qh1cXwEdMb3pKEXfLMJPBeG3wPGY\nf1LCWmOj+Xx0fDaq/WC153clIp4iD2JmaUn7Pis8f9PazJ7lKka6HqDkrp/q\nxrP2lt4mma6Nr18THIsfycNatjVmULLFxSzbpeQa8LKU1Kxn/QCwE1MOjSAl\nGORdCGqMYFBxBkMbJf78Yvue7fcFbKhDYvz+Pm6VJ6earzkorywKyYsMEU/K\nUJju6fEMawtk5Wooonm+01+Qv94ddr1OgcV8peIbdb61BMQobb9VptjS/ZF+\nprL1ilizTt2UJH0oFH1qUXuH4pIp0GTfEur2uNvHSASc2QQVPCMyOFeCeyfb\n9ychpxK20SR2e0lhA0w9fF+55cuuRYpX9J2vZQhOdZc0ABuC/mCDmmsZIzQV\nrFyJFP5YoFiMEdfow6U+hEex9TeibXlW8SLfPYloRSJjy1Z17my2cb8mkn55\nC91ZwDYzvO46J0yQ8QpyIzUAvQA9fTDfsqPiVTKiP9mZEDzJHXQUaSVgGOX0\nO7M7BwdvJ2dmPt9KToOlRSr5HAHCPWOnRUIgNHuqu75pXzrc8K0VSOkca2OL\n7XXTaYKOWb73fzHAZsBGbD/T4+64TOw7RXrvAKKhPEIyCWnSGgmYw2eYE6em\nZ2WTohYwWgkdICtYHSrRWr3FnsWTLYwLElMwTxWPF4U1qHD5IPQwqBr63g0e\nwMF91zyRlUzDZaOIJ+14JAqVl+7TZizX/d0FsI8wyUATfV2KZQrIPSExtVrK\njLQaZ133PtzmcBi8/C6J58gGDSWPQRz1wrOv+SGz2wfnGMzmWyD+T8GH5dAL\nMJzDPsCIlyBCyJ/fJ9+q7nN/mgNJ8GaCl/Xbp1bLGOCy/1h7N706HCIVCsdm\nwRL1PVdG8qcLkQeeIIHVgdgi5QqVJHO3arNJe/sZzDv7x48/ySgxJw0KaGdL\nzem4cuGcsroaXmnwSPVD2iK1y81Jp58sEbbpdeKCgbqB+BpjCpx4xCnfLKLN\nwIsTog6R4lkt3H70tq3a+FeIbyyw5CUfOjVCMr7Z8vhJKqYsTWKx70wOU8IV\noszwiKtVR0XuEgjmDZTH2LsC+b8SCzixnfpPK+tR4MXYCM5ps643xCfwQ2c2\nNNGVt8QpoTwPitPGgWjZW26KFSwZuOSd1JDx3TllGtfeZEG4Y+2pEGM2RJ8V\ndr3mTL1K0Ufw6oooVF9YXSQftgkor6neJBvppN/ExfKNqyZAJPwVEZGHPXka\nQpltVs1YKZ8xjOb6Ii4UwcusWs+vc1pjIiUl/gPO6Phpr9B9IO6o2uy9Xlrl\nVPdKo9p78oAxXNEBXuUOgTRblWBLZKjWYYLtXr+9yPV0BjCT19IFjKCQWQwo\n0Sw+kKAJzZOYlMbj7biGUjZEK7JYo34dStYyMtO+wCaR2e5+Wyn1ivuD1NzH\n+4dj6l3JzWZP3CjTzan5WBnKbWgTwocR94/SFozcHcSHUAinD8zxAnKGGNEo\nQwYIJRniSBpsaNms2JbHiq4sD7BdERS5/7ZT516bDjXC+4Sobd896R8j5IFB\nYDs5H1RoM5YI/8GWEwETB6Z3Tfdwq1ehQ6N0QL9zwrxlPB7mgMCUmFvVwrMx\npA12jdkZucLT5yl0/VZUWCD7niCVmnPQWbelyMh39S13YYORgbqSJT9vtJzV\nwfDkTMq33uqCTVmu5zLxyddg/XihNS+0YxfnSPwubV0iWmF0z0b883Tpwbwi\nb60c4siMUiC5PmWV4HR2Ieh3mx88HLF5SNv7Hh/olV5ne1ob1oQjaCAygcEa\nWJUtbbYLwdNq8u/R7bHaispOhNH7BXosIYCUBhO3cTrdGoPJVFPuGfUtmPI4\naAh3sk/9OVETdYQu7j/D/XZP7Y1rUKhlh8+Axrs3Dwe0a0MhKI+va88yMYqk\n0QfhtN9ZoKh3SqiB8UDojrrlr2xCqoyTvhT1opkt2ha3FUV34dqp06ET2zr+\nWntAMnlvJtA5NT5u6CaM7xLROFq/w8XvXZTNmlcjgMReRy+uj5N6zc/lxJlt\nTvO+3i2GjRo+K6ANG9rdOF3z2X1i9xuThyC/1z4t0RybtzFhZRHHFVFkIJP4\njZkM6HV9eD1OtgXdY8RAZNa3lK1IRC8LD/HGYk5+mUR3bEBl+kaO4QVMVPuA\nZLqWUrtS27ELa45yhnPHI7a6W4P71g22oN4z3zhNItFlMT0YSrZ/8vA+4TRJ\ngcBHcYVejjFv2oDOV8x8DmaNFNyr/urjn5Olt4GNyOJ1IG2rjkhueu30fmdH\niA1cNcKRTsLmQKCTctj4NiotnOyDNOFt8fzI1MM0dNwGQnkDVi3o0ny0Wz8L\nPOrBrvVA7pbJMT6En93QtJcFgkNcc+8Z6pMYFr7e7YG9z2Dx4PF26d6tCStT\nFMz9t7Wp2J53J1O/O/ActycDs4/i/vfJz2BGYMRMLD+Nb1o3/z/5EZT4g5Jg\nGhtVD8QNkLljJ3Y9B47UFOfEBc4sxzaVBYZI8U32jUZVwVjMbeaFktzcGfDL\nOZVNxx/vZ2FTIHOU3eIA4pAkvGCIfksJzZ0SGk1hHn+d/jG9Q9W8iO14EuOu\nKsue/3fx7VaZVcPUK6IbxnFIRuNiqHaxgeGdrWHwfEMVMEOYraateyuils6U\nF95rR2gAN7uMiWXbALdE77zaX7t9OeyLn4/XWBaSHV2pub+cPOxCNvmbsMAN\nJLSfbWgN9XabBGWSAV7XpJ5RupZmvMntlxf7eXxX81LtE7vxK9LhEXdcMhCW\ncNWU4yGnJvtjGsn3HRMKVVNr705qFQPs4iDG+aXKNXVnAr9xTBOUFDTES5vA\ncFKakATt3vt08ySZe9jwftiidbfGsJg7I7zDUZCGLru1jFeuuonsN5Krrmht\np1aOoC46mbbdm2RAXfvHTtT+ii2UUFIUoUtCrHM6jBimELg+j7hs9i1ub6SV\nXB5lwm6rjIr5KGH5KTNjlU9kjsysfKtAw8AeIPIuqXwSEzjUAvDTU+0kcJA3\nHtL9DEKYfq6x31ikprp7pGaKwbTQXBWwzOlcR5ERonwbTQFHvksuY2iCusiR\nuEtSh4C7NF4ZYChgJu+27N5M0V0jQ2rmlyqW+4p8rrm8Xp2vfTGyZSQxvTEW\ntgnWq8RxnyZSUbi+LOZLD8WrKgJIIxaWp5dc3qsfZ3SfeNrEZ1quiDSmnKGR\nx6y38rMTy5y8JwL1BTYu1au8mT8vC1IK1cHa7rYZOm8wjex+wgyxv+jTsdQb\nDmz9FfSGsD2Ga5eL4xUc254oBxwKFjcg3aSNj4z7t0yfK8KdQXP20YgBMFAo\nKNFo5zAMTm1lnQx5AzfYGnAMhlpx/FHTCDgR0xzw+mkAaL0zOnpA4EVWr+qB\n82+atb/eZpXtfckgyCdIClbggo8vGSkRcHeKMA5rM9qx9ZbGEfsxeewuTKuH\nPScA6aktRQ4Iv7qyGqohjC0nXwHg4YS0BFYLfP63hGBTxtfJKudYUaCj+i8j\n1Yda7/MygkuHqggKBJXcEsB6foMpeyn1g1W5McWwhzZRwmA4kBh/CPqHS0Ob\n8NmpHXvCjYhmWcaixDF+gxNnRfXfCPH7niENlTwYbYh+RRPB/5/Yq7kmMGEf\n4edhZyriYvuAz/iNc1SPaQ8EmKVIaXoDC3i0HbKrPSC4uO4eNeUvLYd7/7Cj\nQcI9XSLHWw/7VDsUKD2nrYOQn64OU6Yor2WvdX53TewP8vqd6wMZWb0lmfLO\n+SisaeirGNN76NAGYkuDj2/9SCIt8klemSbn95SBB85tr356Iy+lU1UUwWTs\niwnpyt1ZLyrqRqkV9CZSl5nYkcrNoVrOa4jW4ZoNc0dyM0dNBdHdj40/zcAK\nePIfgI9CILTIOPuO3lG1msuj8N76rvyq/OPQIQXeYYPk5DA3uJj1Cn1FN3+4\ni6kJr0dBXXmw3ScLc7+MsLzl2wuosupD83zzgd3aSg5X5/6pKGWau7+SX2SI\nx1kb3J6bd2HmpLroHt2zjhWR4qk+97RhWwzawE6sTEK1urwLU3vqtfphfr+l\nEFSgCHabgbllEEm1Oie0Eij9JDkX4SdsrK8grputdzmHjsl+Ga/CVa40f3M4\nuUb/IokMi02IOh3KRycDbxPJHN+9V0exiQbcQt1XnIjE8tXnLdRGGLEQxj3L\nqYAuq7f4uBFTrdeXtK+Ip7Lnk3DqmzXtAzt0VcL/FtelX5I4vck6gZKBl+3u\nwb7eNkvIElwaJjuk9cR+azjFqm5nJ0V5lF+BT/11iW1FcmCV0uWedQmzIxyB\n6NptRvoZzkHJ1cFUITWpFrOOZgnmnRTDfXXa2VUqJ/R/UuSI1BuhhBN1BGkX\n/PX0mdxDL64A4N32cYbXFKCr0TFnYsN7uMWYakJ3cf6jtYTFycbgg8/UZPts\n2M5cUIb9EIqTWVtvuHQ4AGyTjiJYtzQz0+JygTwrf1aFp0JX5k61TvF/MBgL\nBmV9WvOsDZCBtNNXKioEYuGmuxTW9sghsmpqbWghlFbwBYpmPvthsyJR0qvz\nvf4LxlMfDafdwA2Zt8FlEYQH/PzoU6EJzbKowRSRq4IIecjW9sma4qZZgtzB\nDifJ4zaft/bS1rUefje9gsmDDKOpUYv2L8QoroBgsBK4v6DJ/dDAedSyfiVT\n4PKUmrQOdrIboQ0n+atLmuNGSvwg+fxxOM2FrrtA9Mv8pz/1f3ILJLjVGC5I\nAXjoo9ePFNlo294+6qj9jOQ5xlIi/TedEahxfU5FUAXg5xDJ6cFon0PTmA8S\ngplD+KH1igrEiN1Hv1CMtZ1jE47G7pdwNIv1eVeTYT2tZ95ISUw4Q3EzA+oZ\nfK7NGXAHfit7GwZXfv9kOibjE44Asqdu0vAkJ6OZWpKe8BNlES/FfcH7ykbb\n1p0l0G3CfzDOcERLG640WDQagYo=\n",
    "video_key": "csa_enhanced_for_loops",
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T15:24:58.831+00:00\",\"changed\":[\"cloned from \\\"CSA U3L7-L6b_2025\\\"\"],\"cloned_from\":\"CSA U3L7-L6b_2025\"}]"
}]]></config>
</Javalab>
