<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-01-12T17:53:21.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://charts.spotify.com/charts/view/regional-global-daily/2022-12-05\" target=\"_blank\">**Song Plays dataset**</a> includes the number of times a song was played on a streaming music service each day in a month. The number of times a song was played is stored in an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> array called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">songPlays</code>.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Song.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalPlays()</code> method to calculate and return the total number of times the song was played on the streaming music service in the month.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">DataRunner.java</code>,\r\n\r\n1. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader.toIntArray()</code> method with the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"dailyPlays.txt\"</code> file and store the result in a 1D array.\r\n\r\n2. Instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Song</code> object with the 1D array containing the daily plays data.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalPlays()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array using a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ntotalPlays = 0\r\nloop from 0 to end of songPlays\r\n  totalPlays += songPlays[index]\r\nreturn totalPlays\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ What is the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \r\n    <p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class is a hidden support class that has methods for reading data from a text file into a 1D array. It has the following methods:</p>\r\n\t\t<ul>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containng the data</li>\r\n\t\t</ul>\r\n    \t<p>For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nString[] names = FileReader.toStringArray(\"names.txt\");\r\n \r\nint[] numbers = FileReader.toIntArray(\"numbers.txt\");\r\n \r\ndouble[] prices = FileReader.toDoubleArray(\"prices.txt\");</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Song Plays",
    "bubble_choice_description": "The Song Plays dataset includes the number of times a song was played on a streaming music service each day in a month. Write the `calcTotalPlays()` method to calculate and return the **total** number of times the song was played on the streaming music service in the month.",
    "thumbnail_url": "https://images.code.org/69377ddb4e99a9a91d1b42391fa4bf20-music.png",
    "reference_links": [
      "/courses/csa-2023/guides/for-loops"
    ],
    "project_template_level_name": "CSA U3L5-ChoiceB_2023",
    "encrypted_validation": "+7wc3w0TDB/e0S9J10seb+WRxnxtdGR8Njh7kSZfrICDvwREhDycUDmjYCpQ\nia9OLIAVihGzZ+7kb4P/nmjklfGV3Lg6Kv7UnQDPS+2cIf6IAdioxXkYdm5m\nwUfoQKFKGWy5afl5oY5PX3AZ8I87ri/x/iKVLjTa/Q07gLRIAjeZyHyahxOp\nTqcT7kD2KeCH/9HcMXDcitK9L9JpQMs9+Eh+udDNDioUd6BJWrpR5K3NFDsK\npUL0ZEN7GQnRnyy2K7nTC+A2LGHE1Obm8NxG47bMa9TuBV+tvDcorXN1CvwY\nDiaSWQkBv/XYEzVzDwJEfvFeJUbhCDdkavONE0AIDHxho3EMUTOin+Cn/6NU\nXNc0QvoJv/bfDfc0CBXY88HaRK/vRlTrbAhpaIpgTfsaNzK2cP/Uo5GERccH\n7ZrSrcdkdAnFjziFZUxK9gK0LR659HE6AeLrXDogE9T9+YT/AgGXi5gvou8P\nZ+CtYiOXl/gr0wmuOpKc0qcErOy4gPf89oj1/n1dOggOT0dxw8v/W55LJ3DY\nU9j9Hum7P3JNgxAHo6WuOeysuDHeWj337ON3FgRtM/owbVzCvc6ekiUMLQuV\nAFnWxeUUZMTYJXdnZyZOwBu/rzKz7YyE4jJUKeUe20iPRkxNcDIhxLUsaLSm\nKrBzZGURKruI1SXgnkUj+2MoUKXI8+2/IzZLtJEk+Ga5VsMkgzAXBrEZy4lK\n5EVIVt9gV4KnZNuS/aSGUJqjVNeGRu7KP6G35rzbrxVtnCQewff7DjtqRXVh\nxxxKdumH04tKpEmh6jAEKyUUus53tiVef401ZjQh1CHJwdMrNFs5R1Nl/+Bn\nH79pdK/eRzkZ5+8QtGkG6MuJUZrZQhkLAPq1CHJ4VND/v0hSKIuciWYS1F4u\nZgtKiorISWVa85vjTwKAT1yIUfRfZvGG+yyZfDzdqLjCHN8wJu1GcjaZjdAR\nNkA+BPqGCLTn27EtybWlndkGv9tYAzQ+wFObLJDcP708cJ9ACQYoYQBLtz9r\nS9wAXpGt+i/1WLlLtQ8qaioWNbRTzmAVgTjHPTPhSJbInEtvfAv1DL8Swkua\naUhteMeMaxtQIW8NMh/tM+FEWULRVJDzL3SYh/MwBR2qDHQ9WENiB1ru27AE\n5q+HSpmwcgiNKawQm6E08WHSBDvNGKwPiEJF9KkoRGhiemFleIudur6d33wx\nhFyVEzpUihloLAmsOF4VDSekXv1vW/BusBPG1eFgkwbap7CLsH+9FWHNt4W4\nK/i1rRmHVdWJsXAYYu8xU4gsng4GifaJLKZJy1/aqr08vpSxXLBI24qKdb7y\naswiaJtNpkUw2RKN67ln+2ye5rFhk2whm594hVaPlo4+AbCaQVK2V1OFdmGp\nH3Q/1qIiTz4EyRWi0vwHem3mJQhEVuw4oY8Yd5mmcla2XmFTM/LLk5ZXugB7\nHzPqD/LB8P0VzgccHbK2h3bL+m8CIujwyTOUSDHtwCjY9O+80kQFXesv9W3I\nwnbAK+rLN/P7jpRJAVOkQpOtIb/ApLM5fFBtRXJRT08BG27xtFZP6xRgzXRH\nkiGRgKKdP0W0sXwENJRgCWMLvwjCrr8IyWtNv4YoaHq4FwhqS/p3bWqdoYCP\ntli3fYDeZGKGuB/NIX0wsZfjBkKU7tAxNuJcHYJ6Fkih+dSSQLTQrEJg+frJ\nR1eLN0uoIZ+KSPzsyHSrHYjn7WBsrrzGvXIG735tIUw3FsE9tTaw1ysO0WCa\n7S4w5eyD/jA48DxdAflGgRj5CR5Ejo6VxbXzFKyksJ4pY/Y5Cm+7ZCGv2A/y\nfn93dM99hbbp0AVAngdvjCQkh4JRBngE8dN/t+l8on32icS7paZQDGr9qtb7\nmOTQ0REuz6NIw2XLLNyQJRR+C52KxrFZQjXRS0+KHktea0Bo2wKDYKb9CC4v\n8xY4SqOkjujpmzQ47pu6Tw==\n",
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the FileReader.toIntArray() to read the dailyPlays.txt file and\n     * store the result in a 1D array. Instantiate a Song object with the 1D\n     * array, then call the calcTotalPlays() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcAveragePlays() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Song.java": {
        "text": "/*\n * Manages data about a song\n */\npublic class Song {\n\n  private String title;       // The title of the song\n  private int[] songPlays;    // The 1D array of the number of times a song was played\n\n  /*\n   * Sets title to the specified title of the song and initializes songPlays\n   * to the specified 1D array of the number of times a song was played\n   */\n  public Song(String title, int[] songPlays) {\n    this.title = title;\n    this.songPlays = songPlays;\n  }\n\n  /*\n   * Returns the title of the song\n   */\n  public String getTitle() {\n    return title;\n  }\n\n  /*\n   * Returns the number of plays for the day at the specified index\n   */\n  public String getSongInfo(int index) {\n    return songPlays[index] + \" plays\";\n  }\n\n  /*\n   * Returns the total number of times the song was played\n   */\n  public int calcTotalPlays() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse songPlays to calculate and return the total number of times the\n     * song was played on the streaming music service.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    return -1;\n  }\n\n  /*\n   * Returns the average number of times the song was played each day\n   */\n  public int calcAveragePlays() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calculate and return the average number of times the song was played.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    return -1;\n  }\n\n  /*\n   * Returns a String containing the number of plays the song had each day\n   */\n  public String toString() {\n    String result = title + \" Daily Plays\\n----------\\n\";\n\n    for (int index = 0; index < songPlays.length; index++) {\n      result += \"Day \" + (index + 1) + \": \" + songPlays[index] + \"\\n\";\n    }\n\n    return result;\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "dailyPlays.txt": {
        "text": "4750185\n5102574\n6149812\n5811600\n4506688\n4873139\n5009612\n5562741\n5799207\n7068846\n6882528\n5372271\n5364677\n5532812\n5901056\n6708201\n7723706\n6543891\n5942353\n6314185\n6903992\n8020508\n10905559\n21273357\n16216593\n4510287\n2037749\n1483957\n1224254\n1091757\n1500302",
        "isVisible": true,
        "tabOrder": 2
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      }
    },
    "encrypted_exemplar_sources": "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\n11QJDMAuqtFBqew=\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-01-12T17:53:21.207+00:00\",\"changed\":[\"cloned from \\\"CSA U3L5-L3a_2023\\\"\"],\"cloned_from\":\"CSA U3L5-L3a_2023\"},{\"changed_at\":\"2023-01-12 17:53:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-22 23:59:52 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 01:20:08 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 01:34:49 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 01:43:56 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 01:46:15 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 02:19:22 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 16:38:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 16:39:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 16:42:54 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-31 01:37:28 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-31 20:19:04 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-31 21:08:53 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-07-12 14:16:34 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
