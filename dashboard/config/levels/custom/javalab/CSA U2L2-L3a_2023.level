<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A video game developer is planning a new game, and they have written a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> class to represent a player in their game.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> class, write a no-argument constructor to assign default values to the instance variables:\r\n\r\n   * Assign a default name to the instance variable <code style=\"background-color: #ececec; color: black; font-weight: bold;\">name</code>, such as <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"new player\"</code>\r\n\r\n   * Assign a default value to the instance variable <code style=\"background-color: #ececec; color: black; font-weight: bold;\">level</code>, such as <code style=\"background-color: #ececec; color: black; font-weight: bold;\">1</code>\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">GameRunner.java</code>, instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> object.\r\n\r\n‚úÖ **TO DO #3:** Print the constructor and the values assigned to the instance variables for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing a no-argument constructor and instantiating objects.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ How do I print the information?</summary>\r\n    \t<p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ConstructorsHelper.printConstructors()</code> is a hidden support method that prints the instance variables in a class to the console. For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nDog fido = new Dog();\r\nConstructorsHelper.printConstructors(fido);\r\n</pre>\r\n\t<p>This method (along with the tests) will help you check that you wrote your constructors correctly.</p>\r\n    <p>Use the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getName()</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getLevel()</code> methods in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> class to get the current values assigned to the instance variables. For example:</p>\r\n    <pre style=\"background-color: #333333; color: white;\">\r\nPlayer hero = new Player();\r\nSystem.out.println(\"Name: \" + hero.getName());\r\n</pre>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/no-argument-constructors",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "The Player Class",
    "bubble_choice_description": "A video game developer is planning a new game, and they have written a `Player` class to represent a player in their game.",
    "thumbnail_url": "https://images.code.org/21f69124180b97ebde9051134135b521-console.png",
    "encrypted_exemplar_sources": "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\n4ekZ8g==\n",
    "encrypted_validation": "01BpYVlo28gPG5oZzQE0+ZNPxCXbxqHlQjSc6TBIWQr14zNt35p2z3JWQIVY\nj/3YpAHC0eQo4WOia6+G0WY+pREQhVEjn6CPQ71CCYpnRBf+xgHNO/ono4Bq\nWsWpoto1uDd3zALlG8zA2m8wCR4v0aaIz7qvy721mxJ4VJA9n6OLAZQ4FJF+\nni/ZJakTnMtHCWo2sbrDofnZa+mtM90bwgGtMeVR/IdQ6Dmy0fGCdOiibQTO\n32E3KcPUVNkElbqoHFve/PAUoIxoQmzsCrlIC61nj1eSyWkTYk0r0+6CsniZ\njaPfk6l8icKy4jIjY258ylqbe06bDXiGJrCZ7RQS52/l73oAr6aQ2J7deogP\nIL+LjvZi0EjC9YLM/P/DO2MjwcB8/X9V837elEbmYuQ9YTzlV6WlcHEkuSsz\ng887+xPJQxsBXaYWy3KlB5dzRjD7M1yYB9fjNzGBcbieVa+Y/rdozWZHh2th\nTqFh/Jk0PSSQZ7wRAjyHYp7sRyVWl9rm+tOCwUwIvlF9UCyO/D30htLQp3T0\nGsMtzWu2yQSlYiOrbNmtKX/EcpoZoC1WYD1QR6ZvLPEMIcGylNw0ehXMwl+F\nLgK5Py/+IZPjMQQa2F213zZQBy2GMCv/zL2y1Ei+lLmzf4QKFYBXHEjqoebM\ni4EuyGtqoMHYGlCu6vgWV2fKqQOPQXzOQLV/stp94mnndnduKKIjLbxx0yp7\nMi93Cn+KU1RG9KB+z/0z5e3kUp8Jb9ZVMH1Ys9HGMLBIMInF4vhnxiTJ5BOa\ntCJlfgKAz4BTzNp+ws7lOPPwSbSERQ7/sf1O5hGstGUmT0ld0xosxnLZdds0\nY0R2F4prs3sdP5mM6FrikJtkAQEkRDUxlOSBtuxK/duXSXxVYRcrECk6KKQs\nNDq6RlkhbxXzwk0LWYLm1xEI5oEBKJtUmy1xTumyp1D8+t1zSidKaNvS6+Hl\nU6RLRv2PdJty1M69IMj3vnySC7QD9i0Rt9ze3YnSwMQLTxfZ/QLPI7mlWHw+\nPi6Bmupjut++d+k3j3hSdh5ZRYiiexS22W4SPMShwhs94uxdgCR8u+hnVZsg\nLRQb11Q/la9d/J3QCP6fyFrrgnpgva43hJ1/EK5lGM6bIIo3nLYFzphm3d9u\nCZZpLktgE8RdfTE9pVvfR3eiBVUiuZvbsp9vfIOfAB2G4xp/BbiIoj3oXlBq\njJun8tdSNfQaUv2bwi5B7Cr4739aZ5YJsiZb3+fjkcRHFvUJ3srfdSPUY/d4\nMZbgLg1e1d3ye/x8s0zRHcjZXDo9v6rPMhrxiQXj2lMjeDBs/se8iDnKxyZd\nCEyZ7OvUMnHODYwbmefQxin0kJarZ1FyHi9JThyNP8WPtRoZ3m+wIaFMhDXO\ngGDeOEglHQsfiUYahBGN1cxxNHqrRf50ycOlnOmD0eepgEHkzJfynEj80PH+\nONN+qlp/0z4f1vI6ONOProcZZDsX0FRVf9x7wR+IrBYqVenJMRDX/xlW7FVN\nt18zU+4iXajfmZ++0B7U23wzte65UYxtwyB+COUImWOVKeSF5QMKiLD4MpML\nixTNwxcDNjyrzD9d/DxBmyQUfv9rHtGQgO2ndwq/e91is2NEkApzk2JFxlJR\nFCDkGdbe3nLWhnp8fA45WRUA23iQgbhtjyOwifUSBoSEmD3o8izKO2Z70YEf\n0ag8G2qA8wA6COSVsCn1DJe+D+PZ+wwiRx3ijAp0InJrwvgosWA34yQb86L2\noYdAagUWVdfNAA2ZsPhtaQ6Eh6EEkcMjl4aGOSHpyulHywTG1bZQmhzOmm8l\n9Pedz5wjNhHZ7ggmiHgcGULnnXjhBoTMXVkq70mTR3ni8VjQI+2YDbcAR/2m\nSaXtSuq6k1WK+zdiNCJ5bMEKkPpQy2HYZftDiLYWkNo0ciV+iA/hRQs1kWW/\nIPuJAEljGVkY6G+tT7jTRT/7pLQ+sywCxgTe4k0M0lB3ksqpKmLlA/Akwlmw\nSs7sWoEUllBLzc52BZ8zCcAMcvljroCUZxNYDndRS2/uJ31ShJ55rkmIbWZV\nvmDhG/qS5aELRroQFHBycOfXf0QFO+PUd05vD9lkS/Zb0CWkRIdFrjjO68F2\nz3Z7dwQGwh8uP4OQ52BfzrXLo79aXRNX8WLmkiokVyxb+bTyNfpzC7GNSaq7\nhHnCLEfG6rMpHRoUQ7zp2CMdmkwOmbNHN88IiIF3pOamvgFeOjYfyayJsLcZ\nfGeC0qtUzfEKonuZoyCBKRADzZVEGRdPDk4ffuVp/G55hPVyIa8ggYwC7U0/\nl5xsJ4vrWZP23qdH625ZuP0RyBZnMkQlZ+Q/zlaLCsM5mm6d0vWGm0A9I7VM\n+a0SHKXyo01XKNDlUVugRhH1s3bufO9FlJJXKF36LoEJymIgNA==\n",
    "start_sources": {
      "GameRunner.java": {
        "text": "public class GameRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a Player object. Print the constructor to the console using\n     * ConstructorsHelper.printConstructors(nameOfObject), and print the values\n     * assigned to the instance variables using the methods in the Player class.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Player.java": {
        "text": "/*\n * Represents a player in a game\n */\npublic class Player {\n\n  private String name;    // The name of a player\n  private int level;      // The level of a player\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write a no-argument constructor to assign default values to the\n   * name and level instance variables.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n\n\n\n  \n\n  /*\n   * Returns the current value assigned to name\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the current value assigned to level\n   */\n  public int getLevel() {\n    return level;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ConstructorsHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ConstructorsHelper {\n  \n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassConstructors;\n  private static ArrayList<String> superClassConstructors;\n\n  public static void printConstructors(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getConstructorsHeading());\n    System.out.println(getCurrentClassConstructors());\n  }\n  \n  public static String getConstructorsHeading() {\n    String result = getCurrentClassName() + \" Class Constructors\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassConstructors = getClassConstructorsList(currentClass, currentClassName);\n    superClassConstructors = getClassConstructorsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getClassConstructors() {\n    return currentClassConstructors;\n  }\n  \n  public static ArrayList<String> getSuperClassConstructors() {\n    return superClassConstructors;\n  }\n  \n  public static ArrayList<String> getClassConstructorsList(Class currentClass, String className) {\n    Constructor[] classConstructors = currentClass.getDeclaredConstructors();\n    ArrayList<String> constructorsList = constructorsToList(Arrays.toString(classConstructors));\n    cleanConstructors(constructorsList);\n    return constructorsList;\n  }\n  \n  private static ArrayList<String> constructorsToList(String constructorsAsText) {\n    constructorsAsText = constructorsAsText.substring(1, constructorsAsText.length() - 1);\n    ArrayList<String> constructorsList = new ArrayList<String>();\n\n    String currentConstructor = \"\";\n    int start = constructorsAsText.indexOf(\"public\");\n    int end = constructorsAsText.indexOf(\")\");\n\n    while (start != -1 && end != -1) {\n      currentConstructor = constructorsAsText.substring(start, end + 1);\n      constructorsList.add(currentConstructor);\n      constructorsAsText = constructorsAsText.substring(end + 1);\n      start = constructorsAsText.indexOf(\"public\");\n      end = constructorsAsText.indexOf(\")\");\n    }\n\n    constructorsList.add(constructorsAsText);\n    return constructorsList;\n  }\n  \n  public static void cleanConstructors(ArrayList<String> classConstructorsList) {\n    for (int index = 0; index < classConstructorsList.size(); index++) {\n      String currentConstructor = classConstructorsList.get(index);\n\n      currentConstructor = removeJavaLang(currentConstructor);\n      currentConstructor.trim();\n\n      classConstructorsList.set(index, currentConstructor);\n    }\n  }\n\n  public static String getCurrentClassConstructors() {\n    ArrayList<String> currentClassConstructors = getClassConstructors();\n    return getListAsText(currentClassConstructors);\n  }\n  \n  public static String removeJavaLang(String currentConstructor) {\n    String textToFind = \"java.lang.\";\n    int location = currentConstructor.indexOf(textToFind);\n\n    while (location != -1) {\n      currentConstructor = currentConstructor.substring(0, location) + currentConstructor.substring(location + textToFind.length());\n      location = currentConstructor.indexOf(textToFind);\n    }\n\n    return currentConstructor;\n  }\n  \n  public static ArrayList<String> getParameters(String currentConstructor) {\n    ArrayList<String> parametersList = new ArrayList<String>();\n    \n    int start = currentConstructor.indexOf(\"(\") + 1;\n    \n    currentConstructor = currentConstructor.substring(start);\n    int comma = currentConstructor.indexOf(\",\");\n    \n    while (comma != -1) {\n      String currentParameter = currentConstructor.substring(0, comma);\n      parametersList.add(currentParameter);\n      currentConstructor = currentConstructor.substring(comma + 1);\n      comma = currentConstructor.indexOf(\",\");\n    }\n    \n    parametersList.add(currentConstructor.substring(0, currentConstructor.length() - 1));\n    \n    return parametersList;\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n   \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-03T19:20:44.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-03T19:20:44.348+00:00\",\"changed\":[\"cloned from \\\"CSA U2L2-L2_2023\\\"\"],\"cloned_from\":\"CSA U2L2-L2_2023\"},{\"changed_at\":\"2022-11-03 19:20:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 20:58:35 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:16:19 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\",\"reference_links\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 14:38:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 14:41:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 14:41:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 14:41:59 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:15:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:15:21 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:16:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:17:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:24:13 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:24:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:25:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-10 21:36:43 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 14:29:12 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:08:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:08:18 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:08:40 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:08:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-18 20:52:36 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 15:27:55 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 15:28:31 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 15:30:28 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 16:14:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 16:14:19 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 16:25:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 16:25:21 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 16:46:42 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-14 14:39:38 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-14 15:38:16 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-14 15:56:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-31 18:33:18 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
