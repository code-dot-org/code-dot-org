<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T16:55:02.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "## Fix the Error\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findMatchingDog()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PetStore</code> class is supposed to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dog</code> object that has the same age as the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">dogToFind</code>, but it has a bug ðŸª²\r\n\r\nFind and fix the error in the program.\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">ðŸ”¦ Help! I can't find the bug!</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">equals()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dog</code> class returns <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if two <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dog</code> objects have the same age. Check if this is being used in the condition in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findMatchingDog()</code> method.</p>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "The Dog Class",
    "bubble_choice_description": "The `findMatchingDog()` method is supposed to return a 1D array containing all `Dog` objects that have the same age as the parameter `dogToFind`, but it has a bug ðŸª²",
    "thumbnail_url": "https://images.code.org/972aad478718b122874fcf44d2a401fd-dog.png",
    "encrypted_validation": "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\nmefDc9v0rZtspxUmh9ylLQIrkuk=\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "PetRunner.java": {
        "text": "public class PetRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Dog objects\n    Dog[] dogs = {new Dog(\"Max\", 3), new Dog(\"Bella\", 2), new Dog(\"Duke\", 5), new Dog(\"Luna\", 4), new Dog(\"Rocky\", 1)};\n\n    // Creates a PetStore object\n    PetStore pets = new PetStore(dogs);\n\n    // Creates two Dog objects to find\n    Dog firstDog = new Dog(\"Charlie\", 4);\n    Dog secondDog = new Dog(\"Daisy\", 10);\n\n    // Calls the findMatchingDog() method and prints the result\n    System.out.println(\"Match for Charlie: \" + pets.findMatchingDog(firstDog) + \"\\n\");\n    System.out.println(\"Match for Daisy: \" + pets.findMatchingDog(secondDog));\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dog.java": {
        "text": "/*\n * Represents a dog\n */\npublic class Dog {\n\n  private String name;   // The name of a dog\n  private int age;       // The age of a dog\n\n  /*\n   * Sets name to the specified name and age to the specified age\n   */\n  public Dog(String name, int age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  /*\n   * Returns the name of the dog\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the age of the dog\n   */\n  public int getAge() {\n    return age;\n  }\n\n  /*\n   * Returns true if the ages are the same, otherwise returns false\n   */\n  public boolean equals(Object other) {\n    if (other == this) {\n      return true;\n    }\n\n    if (!(other instanceof Dog)) {\n      return false;\n    }\n\n    Dog otherDog = (Dog) other;\n    return this.age == otherDog.age;\n  }\n\n  /*\n   * Returns a String containing the dog's name and age\n   */\n  public String toString() {\n    return name + \": \" + age + \" years old\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "PetStore.java": {
        "text": "/*\n * Represents a pet store\n */\npublic class PetStore {\n\n  private Dog[] dogs;     // The 1D array of Dog objects\n\n  /*\n   * Initializes dogs to the specified 1D array of Dog objects\n   */\n  public PetStore(Dog[] dogs) {\n    this.dogs = dogs;\n  }\n\n  /*\n   * Returns a String containing information about the Dog\n   * object that has the same age as the parameter dogToFind\n   */\n  public String findMatchingDog(Dog dogToFind) {\n    String result = \"\";\n\n    for (Dog pet : dogs) {\n      if (pet == dogToFind) {\n        result += \"Matching dog found!\\n\" + pet;\n      }\n    }\n\n    if (result.equals(\"\")) {\n      result += \"No matching dog found.\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "video_key": "csa_equals_and_aliases",
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T16:55:02.700+00:00\",\"changed\":[\"cloned from \\\"CSA U4L6-L6a_2025\\\"\"],\"cloned_from\":\"CSA U4L6-L6a_2025\"}]"
}]]></config>
</Javalab>
