<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "display_name": "The Console",
    "long_instructions": "The `PlaylistCreator` class creates a list of `Song` objects specified by the user.\r\n\r\nThe `Song` class represents a song and has a `title`. The `getInfo()` method prints the `title`.\r\n\r\nIn `InstrumentalSong.java`, override the `getInfo()` method from the `Song` class to add the text `(Instrumental)` after the `title`.\r\n\r\nIn `PlaylistCreator.java`, complete the `readInput()` method by translating the pseudocode below.\r\n\r\n```\r\nwhile the choice is not -1:\r\n   prompt the user to enter the song title\r\n   \r\n   create a Song object with the choice and\r\n         title using the createSong() method\r\n   add the Song object to the tempSongsList\r\n   \r\n   prompt the user for another song choice\r\n```",
    "mini_rubric": "false",
    "bubble_choice_description": "Write a method to display information in different formats in the console.",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    PlaylistCreator songPlaylist = new PlaylistCreator(\"Graduation Party\");\n    ArrayList<Song> songList = songPlaylist.readInput();\n    System.out.println(\"\\n\" + songPlaylist.printList(songList));\n    \n  }\n}",
        "isVisible": true
      },
      "PlaylistCreator.java": {
        "text": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class PlaylistCreator {\n\n  private String eventTitle;\n\n  public PlaylistCreator(String eventTitle) {\n    this.eventTitle = eventTitle;\n  }\n\n  public ArrayList<Song> readInput() {\n    ArrayList<Song> tempSongsList = new ArrayList<Song>();\n    Scanner input = new Scanner(System.in);\n\n    System.out.print(\"Enter 1 for a regular song, 2 for an instrumental song, or -1 to quit: \");\n    int choice = input.nextInt();\n    input.nextLine();\n\n    // TO DO: Translate the pseudocode to obtain user input\n    // for the Song objects to create and add to the list.\n    \n    \n    return tempSongsList;\n  }\n\n  private Song createSong(int choice, String title) {\n    Song tempSong;\n    \n    if (choice == 1) {\n      tempSong = new Song(title);\n    }\n    else {\n      tempSong = new InstrumentalSong(title);\n    }\n\n    return tempSong;\n  }\n\n  public String printList(ArrayList<Song> songTitles) {\n    String listInfo = eventTitle + \" Items\\n----------\\n\";\n\n    for (int index = 0; index < songTitles.size(); index++) {\n      Song currentSong = songTitles.get(index);\n      listInfo = listInfo + currentSong.getInfo() + \"\\n\";\n    }\n\n    return listInfo;\n  }\n}",
        "isVisible": true
      },
      "Song.java": {
        "text": "public class Song {\n\n  private String title;\n\n  public Song(String title) {\n    this.title = title;\n  }\n\n  public String getInfo() {\n    return \"Song: \" + title;\n  }\n  \n}",
        "isVisible": true
      },
      "InstrumentalSong.java": {
        "text": "public class InstrumentalSong extends Song {\n\n  public InstrumentalSong(String title) {\n    super(title);\n  }\n\n  // TO DO: Override the getInfo() method from the\n  // Song class to add (Instrumental) after the title.\n  public String getInfo() {\n    \n    return \"\";\n  }\n}",
        "isVisible": true
      }
    },
    "thumbnail_url": "https://images.code.org/995a3907fc910da783be252eefb01618-image-1639688788625.gif",
    "encrypted_examples": "Y5oxU2saAYVgPIsEA2UtbgpirxPfyQgbuyBX978jkHb8P3/b6ls7VSz8nxyw\nx3Dwb0kaHYW4NtDW3p0ojL60KdEni6N1l1nRkJm6DBKKbqrBnpUir+7KwlhR\nl7Lc+cLR\n"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2021-12-06T17:16:14.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2021-12-06T17:16:14.179+00:00\",\"changed\":[\"cloned from \\\"CSA U7L6-L3a\\\"\"],\"cloned_from\":\"CSA U7L6-L3a\"},{\"changed_at\":\"2021-12-06 17:16:39 +0000\",\"changed\":[\"long_instructions\",\"bubble_choice_description\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-09 17:44:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-09 17:57:47 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-09 17:59:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-09 17:59:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-16 21:07:06 +0000\",\"changed\":[\"bubble_choice_description\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-02-16 21:23:52 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-02-16 21:26:11 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
