<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T18:16:34.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "An artist wants to create an animation of their favorite artwork and has a 2D array of images they want to use in their scene. Each row represents one of their favorite artists, and each column represents artwork created by that artist.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ArtScene</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findArtByArtist()</code> method using enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loops to find and return the row of artwork created by the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">artistToFind</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findArtByArtist()</code> method and pass the array returned to a call to the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">drawScene()</code> method.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "video_key": "csa_enhanced_for_loops_and_2d_arrays",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Art Animation",
    "bubble_choice_description": "An artist wants to create an animation of their favorite artwork and has a 2D array of images they want to use in their scene.",
    "thumbnail_url": "https://images.code.org/9a9704f6654f324489770d9d828715c7-image-1651170296817.png",
    "starter_assets": {
      "artistsgarden.jpg": "56a125d9-419b-48e0-8f67-e98a194a7863.jpg",
      "ginevrabenci.jpg": "06c94e69-e7c0-4762-a504-f825c808ae7d.jpg",
      "monalisa.jpg": "20f27f14-08c0-440e-a3de-0530717da65b.jpg",
      "oldguitarist.jpeg": "3682b9c5-2d35-45c4-8687-5d778ed2c853.jpeg",
      "sunrise.jpeg": "511669af-e69a-46d8-be8b-cd39167f3a9d.jpeg",
      "weepingwoman.jpg": "5b1c07bf-1593-4183-9e6e-4d0ef0400b5b.jpg"
    },
    "encrypted_validation": "o2d1cxHQhAMV86JbsVeHDvtDY0zps/d6xc5SMLqjs4OZbOr1Ee+/aBkyZNiq\nSxPTDl9Kgd7Mc70k/Qogldz5A3OFDYNirIz3F16qwKYnqnghv178RfEFYeed\no/oxeAZCiDEK6S+PXFUoNaJI4yw78JMLTHXdQDq7FobpvUjC+v9YKI8ZYpA1\nPOatFIWjtYy11BW3TjHIT3OnDHe2wSQv+7Ouig+aSyUP6t6MmJ6Q7vPN8/h7\nPTNCChxqkU/Dpftj/BrnxudnUA4ab67NkpXd05E1vjmUhn1tK3BKGOt7J/sB\ngrVshYy/4KuTGfVuJ+PglVer/v4YvzhEc5sa8xmgIhDAtY/AxwhzDpiJsDbq\nhQh8jXcmjeiHnk6U3nqB2jQNSRUU3IMymbGer6LvojUdm9wO84y/hecTQRKX\n9rAbW8NBSHp4kMv91cTZwadRdXDOmrgZ6l6MgZfXysd+TKW94GO4QWszzwuQ\nCHlYpoCUZF+d2vQwLu4pApkrfm8Wv/2FucKQ0S1Q2omh+Lj25v/SZQMyCd3V\nmpSG/g09k4wgnSle4hkiOXMkOgNfB04izr5H18AMkVPHM9bbgESiFk3V/wNA\nL7DBfpSES1YB9yg4xIdr293fadoz8uyftvVKGVtf5EdmbnzhMWqVz9pNShMY\nXTvvNnPh7T1sBPg+GLEVEiYcVOwGG3lFf95yYceSwSJi18iTLfN43T88QiRV\ni6v+IkOfqq1vEw/M64QU3u8fFJtJt+qLbYJiB4LogA4dvvXzL9nzNPRJHLul\nvXOrPx0sddxDste+gkbLipfWvl0voLLZfSQvTKaInnkZdNHK+DIOCmyoaLAz\nx3QEiRt6Titp+WuSjVQISkXBXRaDIVD9Pq3V7Hqez6hjM75kWpZxyCF4vned\n493npey2PKp9gNrmsSNvMGLMGW3DFSOv8I9f9D96yQsU8BNMqJ+cMvxF0N9E\ni7XLCRbBGtTggNpaWki+ZFukM+rxQEomRWoWY31cvDIM6xtci0+LNTDpJ4+d\nOcZJ7wOZw8t8bnSTh8Bs7YdhxwPZi4a9C+SRd5ZbohNNY12J+Dul/tkDY2S5\nJnvypQ+LBzcTa8ZSUzKTZ8RZRdETkLije56IfagvGP/NJ6iVEZjdGnCX8XQB\nPbGgq6l+6VKKlw8wS1aZr0ezGC22MWL9/XbgVnRmqyaV9emOI63GYD2NgDn3\ntzGdis/jvGnPzbLGy99k41KcKDG2SLTNEEog12zQHxK7fPxqJxk2fZiwda58\nH3JVxVXu/Jz09V5PTddqV4xowGD0B0Plz2OLEMGmR7/aXzzyUSOoWRjmEPZ8\n5CAmdaBir9i/aeGkaSW3qwaW5Fl6CVg9cXa7mLoPcO3RyTaKJG6DsqJolI8w\nR3ulJlgu9PTNLqLk5/jiLL4h7zLNZfXFBwNK11Y0x5BAs8PeBOqPrs4r3gWv\n2JKVMrPevBtsTY0XBSovI1cJK/l0/YZRFwUeVqTcXnNhiAv8L8RZEWFQdQ8V\noZ4drjbpZBhtg0HehUpa2lKzDM9HHp4SxIDpvB7WCp+DBB3n/8A9JHmDSmft\nXPQqmigEG9qjall5KeLBX6yW4Nf3VdvCcevesAQBZ+pZqkdymwvrpolqw0Sr\nBhUTbT32ko0R6SIbfnytvtkTSZ60/Ojivrtmim7o73mPlYL251B7XsJ5U/4Z\ny0NbAZcApl8zvyxW7lasv2JDgSqJDcLm5Vl+fcoJnThrtYFpXD0+bskLjFoo\nmb9EY1wiqak+zkKUJUcu3pQCWFjAijntXmz8QA2C5VPBbm9zeZ2vzh29zlgP\nP5BTo9TeukodEcM2SnbqVF9FpPtNxVwI73yYsNn9U85Ivk7Zar7eaAgSAydh\nA1YFIRvm0raiW1npe4YHv9zFofJGnbt/ImQhoG7DYROFt8avpfJBjmfozuSb\neM5zIgAN/NhyI3ABAUSPowOFo3Jf5DePMunCk4UYkfTmsqL2UjXZKvcRd3Cf\ny2cKs8AurGTrdwIZyMCkW/cBpdzRrTRgIrIFrdn2NfJl2siP80ts7dOVCn8L\n7H3CLDGqtVLkVWONx6rjTNb6K7fDMSYrraBgk1h4My1Jqq+mT/7kXw1JJFyY\npbug6meDSXoOzNQGt+sgwo/PdKeUwN3aC0iDH/ekdSsL2dkNzXPigZBdkrjn\nUbyi0infy7Yt0LiT5LLupcs5/zS3CAOKo9C+juWL7HaZbRBTs4fnqXYk3jTQ\nztIFhSM5OmL3ByDbCBYn9yAbN9GJPWQpnx/1Vv/Mgu7NbfYzxBHgsPlV8qcW\ngnIxi8BQZwHntF5GSp/ls6hNWyL6ExI3E3cn4yhDid11FFl1/yvW0XvaSYfK\nrzqEz/m8g9XYt767YZax31w9NWgO3PpFhG8EjSVWQuQqDMspiP41coqDn7QF\nvH56FhNG4Gg9nlzM7fxrRknW8t9h3XRcrefHpAaR0RykAa00fDbXFNTbx0hO\nXvvdLbL40awmssnufdMdDFJkJQvCMSTiZB0MJzh3pB9I8kDrysfuj5s01bPQ\nVLImCK3HA5KNBb1dWJWmOSb1YG3kn+vQZAZ18Betlh7BhfrCoFLrqEdPtIVM\nnJqndzK7srvROBOpSiAgiIqqdc25ZYPx5VlGJEDnC+wze4MyouL8SNLZMU4v\n8VncBkVo4kBqeZdB4WmSJmfzb1LlEM7O3Zz9L35ub6jglXbqTXoI2ES4CHBl\nb2mu9JbmxvJNYp9pTGi1zLUV3Bum/QNBIwlZH0oviDdTxUEmxiVGXYzUz5M/\nj6/+3c0x18Ul/mUbshTeO2kZVLbSPDRCaXINIIA+jx6Qg6cYOOAvcCS0vAi6\naqCT9hCiOhyCqI59/u13KxLbmX6DN4clJV3PAzfUl7TvALwu1eFxgUyrKj4b\nvF96kbU6vrjbe7muSSMfiHecjWv6A/0YelRxRuiDaQtrz0XCyllncnJshQ7W\nx1OTfXGBmBjfBK7V/3fMPrhAAJ1oL+nr2+FwLGeUXc3USkk5ZB3+m/SUKPDG\nukbPQ2RtSOEzuKDcJz24QNu1DmK6TKRtp6i/Nue+Fy7ALpTet3yyhLk6CHBV\n3LOgNcp1Rc/G\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of artwork by artist\n    Art[][] artwork = {{new Art(\"weepingwoman.jpg\", \"Pablo Picasso\"), new Art(\"oldguitarist.jpeg\", \"Pablo Picasso\")},\n                       {new Art(\"monalisa.jpg\", \"Leonardo da Vinci\"), new Art(\"ginevrabenci.jpg\", \"Leonardo da Vinci\")},\n                       {new Art(\"sunrise.jpeg\", \"Claude Monet\"), new Art(\"artistsgarden.jpg\", \"Claude Monet\")}};\n\n    // Creates an ArtScene object\n    ArtScene scene = new ArtScene(artwork);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the drawScene() method with the 1D array returned from calling the\n     * findArtByArtist() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    // Plays the scene\n    Theater.playScenes(scene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ArtScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates an animation displaying artwork\n */\npublic class ArtScene extends Scene {\n\n  private Art[][] artwork;   // The 2D array of artwork\n\n  /*\n   * Initializes artwork to the specified 2D array of artwork\n   */\n  public ArtScene(Art[][] artwork) {\n    this.artwork = artwork;\n  }\n\n  /*\n   * Returns the 2D array of artwork\n   */\n  public Art[][] getArtwork() {\n    return artwork;\n  }\n\n  /*\n   * Returns the row of artwork created by artistToFind\n   */\n  public Art[] findArtByArtist(String artistToFind) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Find and return the row of artwork created by artistToFind.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n\n    return null;\n  }\n\n  /*\n   * Draws an artist's artwork in the scene\n   */\n  public void drawScene(Art[] artistWork) {\n    drawText(\"Artwork by \" + artistWork[0].getArtist(), 100, 50);\n    pause(1);\n    clear(\"white\");\n    \n    for (Art image : artistWork) {\n      drawImage(image.getImage(), 0, 0, getWidth());\n      pause(2);\n      clear(\"white\");\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Art.java": {
        "text": "/*\n * Represents a piece of art\n */\npublic class Art {\n\n  private String image;    // The name of the image file\n  private String artist;   // The name of the artist\n\n  /*\n   * Sets image and artist to the specified values\n   */\n  public Art(String image, String artist) {\n    this.image = image;\n    this.artist = artist;\n  }\n\n  /*\n   * Returns the name of the image file\n   */\n  public String getImage() {\n    return image;\n  }\n\n  /*\n   * Returns the name of the artist\n   */\n  public String getArtist() {\n    return artist;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T18:16:34.634+00:00\",\"changed\":[\"cloned from \\\"CSA U5L5-L7c_2025\\\"\"],\"cloned_from\":\"CSA U5L5-L7c_2025\"}]"
}]]></config>
</Javalab>
