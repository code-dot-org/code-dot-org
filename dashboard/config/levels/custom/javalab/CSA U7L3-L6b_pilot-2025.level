<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T21:40:40.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "An online shopping platform wants to manage its products, including adding new products and searching for existing products.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">search()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ShoppingPlatform</code> class. The method should take a product name and ID as parameters.\r\n\r\n‚úÖ **TO DO #2:** Write another <code style=\"background-color: #ececec; color: black; font-weight: bold;\">search()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ShoppingPlatform</code> class. The method should take a product ID as a parameter.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ProductRunner</code> class, call both versions of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">search()</code> method and print the results.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing overloaded methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Online Shopping",
    "bubble_choice_description": "An online shopping platform wants to manage its products, including adding new products and updating existing products.",
    "thumbnail_url": "https://images.code.org/9c5fbc305418179acffe9cdd5f8ff812-online-shopping.png",
    "reference_links": [
      "/courses/csa-2023/guides/overloaded-methods"
    ],
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "ProductRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class ProductRunner {\n  public static void main(String[] args) {\n    \n    ArrayList<Product> products = new ArrayList<Product>();\n    products.add(new Product(\"1\", \"AP CSA textbook\"));\n    products.add(new Product(\"20\", \"running shoes\"));\n    products.add(new Product(\"10\", \"smartphone\"));\n\n    // Create a ShoppingPlatform object\n    ShoppingPlatform myPlatform = new ShoppingPlatform(products);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call both versions of the search() method and print the Product objects\n     * -----------------------------------------------------------------------------\n     */\n    \n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ShoppingPlatform.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a video platform\n */\npublic class ShoppingPlatform {\n  \n  private ArrayList<Product> products; // list of products\n\n  public ShoppingPlatform(ArrayList<Product> products) {\n    this.products = products;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the search() method. The method should take a product name and ID\n   * as parameters, and return a Product. If no product is found, return null.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n\n\n\n  \n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the search() method. The method should take a product ID\n   * as parameter, and return a Product. If no product is found, return null.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n\n  \n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Product.java": {
        "text": "/*\n * Represents a Product\n */\npublic class Product {\n  \n  private String ID;   // ID\n  private String name; // name\n\n  public Product(String ID, String name) {\n    this.ID = ID;\n    this.name = name;\n  }\n\n  /*\n   * Returns the ID\n   */\n  public String getID() {\n    return ID;\n  }\n\n  /*\n   * Returns the name\n   */\n  public String getName() {\n    return name;\n  }\n  \n  /*\n   * Returns a String containing the products's information\n   */\n  public String toString() {\n    return \"ID: \" + ID + \" name: \" + name;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T21:40:40.279+00:00\",\"changed\":[\"cloned from \\\"CSA U7L3-L6b_2025\\\"\"],\"cloned_from\":\"CSA U7L3-L6b_2025\"}]"
}]]></config>
</Javalab>
