<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "There has been a spike in the number of travelers visiting The Neighborhood. The airport wants to create a program to help residents check whether a flight has arrived.\r\n\r\n##In FlightManager.java:\r\n\r\n1. Write the method `findFlight()`(#e7e8ea) to find the index location of a flight in `flightList`(#e7e8ea) using an iterative or recursive binary search. Return the index location of the flight or `-1`(#e7e8ea) if the flight number is not found.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<Integer> arrivedFlights = FileReader.getIntData(\"arrivedflights.txt\");\n    FlightManager myFlights = new FlightManager(arrivedFlights);\n    \n    int location = myFlights.findFlight(5441);\n    System.out.println(\"Flight 5441 located at index \" + location);\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "FlightManager.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Manages and analyzes flights\n */\npublic class FlightManager {\n\n  private ArrayList<Integer> flightList;   // The list of flight numbers\n\n  /*\n   * Creates a FlightManager with the specified list of flight numbers\n   */\n  public FlightManager(ArrayList<Integer> flightList) {\n    this.flightList = flightList;\n  }\n\n  /*\n   * Searches for a target flight number in the\n   * flightList and returns its index location\n   */\n  public int findFlight(int target) {\n    return findFlight(0, flightList.size() - 1, target);\n  }\n\n  /*\n   * Uses a binary search to find a target flight number\n   * in the flightList and return its index location\n   */\n  public int findFlight(int low, int high, int target) {\n    // TO DO #1: Implement an iterative or recursive binary search\n    // to find the target flight number in flightList.\n\n    \n    \n  }\n}",
        "isVisible": true
      },
      "arrivedflights.txt": {
        "text": "1202\n1234\n1323\n2923\n3034\n3239\n3494\n4492\n5441",
        "isVisible": true
      }
    },
    "display_name": "Flight Manager",
    "bubble_choice_description": "Use a binary search to find the location of a flight number in a list of flights.",
    "thumbnail_url": "https://images.code.org/b6f3892995352cc6f7906751ba877593-airplane.png",
    "name_suffix": "_2022",
    "encrypted_exemplar_sources": "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\n/BI29w==\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-02-26T00:33:55.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:33:55.502+00:00\",\"changed\":[\"cloned from \\\"CSA U8L4-L2c\\\"\"],\"cloned_from\":\"CSA U8L4-L2c\"},{\"changed_at\":\"2022-05-14 01:39:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:42:48 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\",\"display_name\",\"bubble_choice_description\",\"thumbnail_url\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:43:39 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:48:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:58:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:59:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 02:05:35 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
