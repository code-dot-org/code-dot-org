<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T20:59:16.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A credit card company needs a program that checks if credit card numbers are valid. They want to use the <a href=\"https://www.investopedia.com/terms/l/luhn-algorithm.asp\" target=\"_blank\">**Luhn algorithm**</a> to check if a credit card number is valid or not.\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Card</code> class has an instance variable for a 1D array containing the digits of a credit card number. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">validateNumber()</code> returns <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if the 1D array contains digits of a valid credit card number and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code> if the digits are invalid.\r\n\r\n‚úÖ **TO DO:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Company.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">validateNumber()</code> method to return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if the 1D array contains digits of a valid credit card number and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code> if the digits are invalid. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">validateNumber()</code> method should:\r\n\r\n1. Get the parity bit (the remainder after dividing the length of the array by 2)\r\n\r\n2. Traverse the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">digits</code> from last to first.\r\n\r\n3. If the current index mod <code style=\"background-color: #ececec; color: black; font-weight: bold;\">2</code> does not equal the parity bit, add the digit at the current index to the sum.\r\n\r\n4. Else if the digit at the current index is greater than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">4</code>, add the result of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">2 * the current digit - 9</code> to the sum.\r\n\r\n5. Else add the result of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">2 * the current digit</code> to the sum.\r\n\r\n6. If the remainder of dividing sum by <code style=\"background-color: #ececec; color: black; font-weight: bold;\">10</code> is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0</code>, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code>. Otherwise, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code>.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing multi-selection statements.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n\t\t<pre style=\"background-color: #333333; color: white;\">\r\nsum = 0\r\nparity = digits.length % 2\r\n&nbsp;\r\nloop from 0 to digits.length\r\n  if index % 2 != parity\r\n    sum += digits[index]\r\n  else if digits[index] > 4\r\n    sum = sum + 2 * digits[index] - 9\r\n  else\r\n    sum = sum + 2 * digits[index]\r\n&nbsp;\r\nreturn sum % 10 == 0\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Valid Credit Cards",
    "bubble_choice_description": "Implement your algorithm to check if a credit card number is valid.",
    "thumbnail_url": "https://images.code.org/e9c6296a626e6bbbdc0fa85dfa5b515e-credit-card.png",
    "reference_links": [
      "/courses/csa-2023/guides/multi-selection-statements"
    ],
    "video_key": "csa_multi-selection_statements",
    "encrypted_validation": "b7crzjxogUU3RpKdql0HRio+BSJDwDe5rEwDsV7CBaXcTAQpY+SNAfKoKDLL\noq1S6xiyoY/65Ye+ruRMvC7YnHCXU8qPmrYZ3dqc3hfVUoi0gLuLBrXyV+NT\nNQvnMOFf9KTdO3yFpIZIgqGDKZblTSbKol1veFRM2qa4d+7gMvYTuUIFxyRN\nVnmoFNRJZ1A8/MvG8IV5pC2A9yjl6q/yeLNotvrPsdJNYAKrD1s7K5qCV1aW\nloqQnv9mdEHgkk+B8DntkWHy/nQbFEDf/eLpTCVmywnYwU8uUZ10Xo67PA4T\nTrcREfwmJ0LR/i5w3q1BX8iy3G3mbGA25S2ncdbwy2n+ZxmbW16wVHX4fV8m\n6By3vebpzMLHhoFsvCj9apdfdA66aND38pOG6UjntpyJ0BX0Y7Gmjnebvxnn\ncq/1nm+HRrtOAYcgQ1cGD9TpyLKWZkXqsknv2lW80xzTldH/gY6biYYgdv7s\n4l1AhE41XxKjAKigwN3w8eDIFZwjOz1ShBkK58pcKwX1QVqxlax4UnyetajO\nlfMLu2SUZLxBtu5e+FD8r5DgTBcb7Lm45vvXi/pp/5jh+cALdCYWssOBfD+r\n+K2JNm7CRejiZp6t8KyVqTg4SOoQBzmOS8zaHrkMJVJmK77KUp/lCuz1agVy\nH9MiQ6Gl7blPwcnth/x7bo1pwQ2JJMSpFKtKOCPnX3mrLA8fdwYAQ7nHZIg1\nIKg7B4eToGkuMXQfgEDweokDS9UWsKpJ6HsMXs6eD0WCFnG/nLwHVLEcRoL/\nSPhVMIHtBzz9nPyJ+G7ahUQushu/ehqeLDe/YMlHDX5zhpqGNovWtLUcXCMx\n+f7ac3pmNoFSJex9yGdb55TojHiJsk656OHGUMkC8MHQ4s5vGhdz5SJZFvVm\n8nlHKCymPzjxjtxOFYQ+QSF2aC8zvdyr5PUVL9J3OnNuNJ/vKkvBWQlhrjoL\nfugYK0hVO+FMFSZbRayDnpSMj/h28H4GRUBbe43sPCKypl2pT3fjb+LarOJZ\n4ByVZb4MwDjBT+yUJCgHmrocnjiqZIPR0OFUHZcR/5MvhpoHg/yu+wdeu6fw\nVQbqh2aRcPZlfedfymvCBU9ubed4x57D2Qqz67Vod1u9XIDo2LJlpeWUTC2m\n+uUlES5wcDTmWKjtpFASFBTrbErFLj2DNBbQ1tWi2BKV+VnO4NPVBex6tixL\nm2gplxGbICuWvTwGDPxt5pmei9f0AgaRfvexp/Y4X0FCwxP4zA067aMgpsm/\nH8Ab/P8NQt5OOhk+ZX/kyZBJNNDeCTMbmZtc0UyROhkzrjBADz4bsfukvGud\nlfe1XzKbuPEPqbCr1cs0lSYZGQuXVBp2ZXMKPe16x9Mo04nzFT/riCQwIBxw\njmv9Cw1/zLCBhK3Il+wKZjk2UOVSBKYQHUMYXUNkijyn03nXi2P3p74/czqE\nCz3HMLOTRTQenHuC/rKpi7tBnkAXb7Gl2ZUw4kWo/AX8WDqnzXni0fdbNoDo\nqdcjhJEEWQ/30r+QNA/X6VaRSDrGeu4B9peHvZjoQx6OmJLsL9kiLTJ23Jqa\nMtcTwf2I9Jk0VkeUUGOjeLBusb3rW/KFQzZ0emLLpGyahr8FMFa+adcEcmO3\nPlJV9XRWAGxDG7WkMfgoJ5oP4HTnZ0JEXcqQ47kNviRC9/ZqhsTDAknoWs0I\navOjL3hfw1bJJrERsINGMeqG+bj3ox76EJI8ywo/LrZGhKRwUTmWMm1iKfTG\nPqox/w7OAm7rkdpy2hRHyrM0+TxwAPdLUjV2ULAzkJhcyyUVzLfD7/uzLaUg\nYGFq/FoezH8jxa0fNEX14wUg5lAYjLmIjomF2koZz4z5mTRkq4uNWsyie6rx\nZbdo0n1FTjMjPKGP/Ck/MX0GPjSWEJ7euH7eJ6+DxzBi/KJPK65vDuzdlrFZ\nm3YRavEzSKRHmH4lV1gr9wR8IH928aiUY4pJASNCZMkAgIJeawfIAzVdi32o\nFL0l\n",
    "start_sources": {
      "Company.java": {
        "text": "/*\n * Represents a credit card company\n */\npublic class Company {\n\n  /*\n   * Returns true if the digits in creditCard are valid,\n   * otherwise returns false\n   */\n  public boolean validateNumber(Card creditCard) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Implement the Luhn algorithm to check if the digits in creditCard are\n     * valid. Return true if valid, otherwise return false.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return false;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "CardRunner.java": {
        "text": "public class CardRunner {\n  public static void main(String[] args) {\n\n    // Creates a Company object\n    Company cardCompany = new Company();\n\n    // Creates several Card objects\n    int[] validCardNo = {1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 0};\n    Card validCard = new Card(validCardNo);\n\n    int[] invalidCardNo = {4, 6, 2, 4, 7, 4, 8, 2, 3, 3, 2, 4, 9, 0, 8, 0};\n    Card invalidCard = new Card(invalidCardNo);\n\n    // Calls the validateNumber() method on each Card object and prints the result\n    System.out.println(validCard + \" is valid? \" + cardCompany.validateNumber(validCard));\n    System.out.println(invalidCard + \" is valid? \" + cardCompany.validateNumber(invalidCard));\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Card.java": {
        "text": "/*\n * Represents a credit card\n */\npublic class Card {\n\n  private int[] digits;      // The 1D array of digits that make up the card number\n\n  /*\n   * Initializes digits to the specified 1D array of digits\n   */\n  public Card(int[] digits) {\n    this.digits = digits;\n  }\n\n  /*\n   * Returns the 1D array of digits\n   */\n  public int[] getDigits() {\n    return digits;\n  }\n\n  /*\n   * Returns a String representing the credit card number\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (int index = 0; index < digits.length; index++) {\n      result += digits[index];\n\n      if (index % 4 == 3) {\n        result += \" \";\n      }\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\nyFoMPjZ59BlN9E7CfHBr3LUU3Cpr\n",
    "name_suffix": "_2024",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T20:59:16.707+00:00\",\"changed\":[\"cloned from \\\"CSA U4L10-L6c_2023\\\"\"],\"cloned_from\":\"CSA U4L10-L6c_2023\"}]"
}]]></config>
</Javalab>
