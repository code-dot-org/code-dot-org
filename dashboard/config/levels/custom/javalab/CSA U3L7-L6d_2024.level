<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T20:52:22.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://www.kaggle.com/datasets/catherinerasgaitis/mxmh-survey-results\" target=\"_blank\">**Music & Mental Healthy Survey dataset**</a> includes the average number of hours respondents listen to music each day. Each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Respondent</code> object is stored in a 1D array called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">answers</code>.\r\n\r\n‚úÖ **TO DO:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">MusicSurvey.java</code>, convert the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">while</code> loop in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageHours()</code> method to use an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ What is the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \r\n    <p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class is a hidden support class that has methods for reading data from a text file into a 1D array. It has the following methods:</p>\r\n\t\t<ul>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containng the data</li>\r\n\t\t</ul>\r\n    \t<p>For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nString[] names = FileReader.toStringArray(\"names.txt\");\r\n \r\nint[] numbers = FileReader.toIntArray(\"numbers.txt\");\r\n \r\ndouble[] prices = FileReader.toDoubleArray(\"prices.txt\");</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/enhanced-for-loops"
    ],
    "display_name": "Music Survey",
    "bubble_choice_description": "Convert the `while` loop to an enhanced `for` loop to return the average number of hours respondents to the Music & Mental Health Survey listen to music each day.",
    "thumbnail_url": "https://images.code.org/a527a6c3b0f4976f2025bf9a4f5b12bb-music.png",
    "encrypted_validation": "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\nFKcg7jQOe5Oq\n",
    "start_sources": {
      "SurveyRunner.java": {
        "text": "public class SurveyRunner {\n  public static void main(String[] args) {\n\n    // Creates a MusicSurvey object\n    MusicSurvey surveyResults = new MusicSurvey(\"ages.txt\", \"hours.txt\");\n\n    // Calls the calcAverageHours() method and prints the result\n    System.out.print(\"Average Number of Hours Respondents Listen to Music: \");\n    System.out.println(surveyResults.calcAverageHours());\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "MusicSurvey.java": {
        "text": "/*\n * Manages data about music survey responses\n */\npublic class MusicSurvey {\n\n  private Respondent[] answers;   // The 1D array of Respondent objects\n\n  /*\n   * Reads the data from agesFile and hoursFile to initialize answers\n   */\n  public MusicSurvey(String agesFile, String hoursFile) {\n    answers = createResponses(agesFile, hoursFile);\n  }\n\n  /*\n   * Returns a 1D array of Respondent objects using the data from agesFile and hoursFile\n   */\n  public Respondent[] createResponses(String agesFile, String hoursFile) {\n    int[] agesData = FileReader.toIntArray(agesFile);\n    double[] hoursData = FileReader.toDoubleArray(hoursFile);\n    Respondent[] tempResponses = new Respondent[agesData.length];\n\n    for (int index = 0; index < tempResponses.length; index++) {\n      tempResponses[index] = new Respondent(agesData[index], hoursData[index]);\n    }\n\n    return tempResponses;\n  }\n\n  /*\n   * Calculates and returns the average number of hours respondents listen to music\n   */\n  public double calcAverageHours() {\n    double total = 0.0;\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Convert this while loop to use an enhanced for loop.\n     * -----------------------------------------------------------------------------\n     */\n\n    int index = 0;\n    \n    while (index < answers.length) {\n      total += answers[index].getHours();\n      index++;\n    }\n\n    return total / answers.length;\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Respondent.java": {
        "text": "/*\n * Represents a respondent on a survey\n */\npublic class Respondent {\n\n  private int age;        // The age of a respondent\n  private double hours;   // The number of hours per day a respondent listens to music\n\n  /*\n   * Sets age and hours to the specific values\n   */\n  public Respondent(int age, double hours) {\n    this.age = age;\n    this.hours = hours;\n  }\n\n  /*\n   * Returns the age of the respondent\n   */\n  public int getAge() {\n    return age;\n  }\n\n  /*\n   * Returns the number of hours per day the respondent listens to music\n   */\n  public double getHours() {\n    return hours;\n  }\n\n  /*\n   * Returns a String containing the age and hours for the respondent\n   */\n  public String toString() {\n    return age + \" year old respondent - \" + hours + \" hours per day\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "ages.txt": {
        "text": "18\n63\n18\n61\n18\n18\n18\n21\n19\n18\n18\n19\n17\n19\n18\n17\n16\n16\n17\n15\n15\n17\n19\n18\n16\n18\n14\n18\n17\n17\n20\n19\n19\n17\n16\n18\n21\n17\n26\n20\n23\n18\n37\n17\n18\n17\n36\n24\n18\n19\n17\n16\n23\n23\n22\n16\n18\n42\n23\n23\n19\n22\n15\n25\n32\n36\n24\n29\n41\n36\n19\n31\n16\n26\n22\n16\n17\n19\n18\n18\n19\n19\n22\n16\n19\n37\n14\n33\n26\n32\n30\n43\n24\n36\n19\n22\n20\n31\n19\n15\n18\n25\n17\n28\n20\n21\n41\n20\n34\n21\n23\n16\n19\n22\n19\n23\n23\n22\n17\n28\n23\n19\n17\n21\n29\n22\n18\n13\n24\n35\n29\n28\n32\n32\n21\n18\n19\n18\n16\n25\n17\n16\n27\n53\n25\n34\n22\n17\n26\n19\n21\n32\n21\n25\n26\n21\n17\n28\n41\n18\n22\n18\n49\n21\n27\n19\n27\n27\n19\n42\n60\n19\n20\n28\n16\n18\n34\n18\n21\n38\n17\n35\n21\n25\n18\n16\n19\n31\n26\n16\n26\n17\n22\n20\n30\n26\n19\n21\n33\n28\n25\n22\n19\n44\n22\n26\n23\n17\n42\n30\n35\n20\n18\n21\n19\n37\n31\n29\n20\n36\n18\n18\n25\n18\n31\n17\n21\n30\n40\n64\n14\n26\n35\n33\n30\n31\n27\n53\n23\n25\n16\n18\n29\n31\n31\n38\n17\n25\n20\n15\n16\n20\n23\n22\n15\n17\n22\n21\n19\n32\n34\n18\n21\n20\n19\n25\n31\n21\n31\n20\n19\n19\n23\n24\n20\n15\n17\n20\n14\n24\n14\n23\n28\n22\n25\n27\n18\n17\n23\n40\n27\n18\n16\n18\n23\n15\n20\n16\n16\n20\n33\n22\n21\n21\n29\n56\n17\n22\n26\n30\n49\n22\n32\n32\n22\n17\n21\n17\n25\n15\n13\n38\n23\n17\n59\n22\n17\n27\n23\n15\n22\n23\n19\n32\n40\n21\n21\n23\n21\n35\n18\n21\n22\n23\n13\n19\n33\n18\n17\n16\n18\n19\n15\n17\n25\n24\n23\n16\n25\n16\n20\n17\n29\n20\n16\n21\n16\n43\n32\n10\n27\n24\n18\n17\n19\n16\n64\n33\n32\n15\n27\n20\n23\n19\n12\n16\n17\n14\n32\n20\n54\n18\n14\n13\n19\n14\n14\n18\n15\n24\n17\n44\n23\n21\n57\n23\n18\n26\n13\n15\n57\n12\n26\n17\n17\n69\n17\n32\n22\n38\n18\n14\n14\n19\n20\n18\n30\n31\n72\n73\n16\n19\n16\n12\n39\n15\n14\n21\n38\n23\n16\n21\n13\n16\n18\n21\n17\n24\n14\n25\n22\n20\n23\n61\n24\n34\n49\n33\n22\n38\n23\n34\n40\n27\n54\n16\n23\n35\n22\n41\n63\n28\n22\n58\n58\n67\n70\n60\n15\n18\n58\n28\n22\n49\n20\n55\n48\n14\n18\n25\n71\n60\n18\n19\n74\n36\n14\n20\n15\n19\n29\n24\n18\n21\n19\n25\n28\n27\n60\n25\n60\n43\n51\n63\n64\n22\n24\n19\n56\n20\n19\n20\n60\n65\n28\n18\n42\n80\n22\n56\n20\n15\n67\n57\n22\n17\n19\n50\n24\n67\n18\n20\n15\n17\n32\n18\n18\n18\n19\n18\n17\n34\n18\n18\n22\n18\n19\n25\n17\n25\n18\n21\n24\n16\n18\n18\n16\n68\n16\n21\n53\n29\n18\n29\n18\n22\n19\n13\n26\n14\n27\n26\n59\n30\n27\n18\n23\n18\n40\n24\n23\n56\n29\n16\n18\n21\n32\n22\n17\n18\n18\n24\n21\n46\n18\n16\n21\n19\n20\n21\n56\n21\n20\n21\n25\n33\n20\n17\n24\n26\n17\n16\n27\n28\n48\n19\n21\n21\n15\n20\n21\n22\n22\n31\n20\n49\n42\n26\n17\n30\n23\n30\n31\n42\n16\n34\n21\n27\n18\n26\n37\n26\n19\n22\n43\n24\n21\n28\n23\n20\n17\n19\n32\n18\n20\n27\n15\n26\n24\n20\n21\n16\n21\n27\n17\n21\n17\n21\n17\n36\n18\n18\n18\n18\n18\n18\n18\n18\n18\n20\n19\n17\n23\n18\n19\n89\n20\n16\n17\n16\n20\n30\n37\n44\n21\n19\n23\n26\n18\n35\n16\n19\n23\n17\n29\n21\n17\n23\n17\n22\n17\n19\n19\n16\n19\n13\n18\n26\n14\n21\n21\n17\n18\n19\n19\n29",
        "isVisible": true,
        "tabOrder": 3
      },
      "hours.txt": {
        "text": "3\n1.5\n4\n2.5\n4\n5\n3\n1\n6\n1\n3\n8\n3\n2\n4\n2\n8\n12\n24\n3\n8\n4\n5\n2\n3\n2\n12\n6\n2\n1\n5\n2\n6\n4\n1\n5\n4\n3\n0.5\n4\n2\n5\n0.25\n3\n4\n1\n1\n3\n5\n3\n2\n6\n1\n12\n4\n2\n6\n0\n7\n1\n1\n1\n2\n2\n5\n6\n3\n4\n3\n2\n3\n2\n4\n2\n0.5\n5\n5\n10\n2\n4\n5\n3\n2\n2.5\n3\n1\n7\n1\n1\n3\n5\n6\n4\n1\n4\n10\n3\n2\n4\n8\n2\n0.5\n5\n1\n3\n2\n3\n2\n4\n3\n2\n3\n4\n2\n8\n4\n2\n1\n3\n0.5\n2\n3\n2\n1\n5\n10\n4\n2\n1\n6\n1\n6\n7\n1\n3\n2\n3\n2\n3\n1.5\n4\n2\n10\n7\n1\n2\n6\n2\n3\n8\n3\n3\n3\n2\n1\n2\n2\n4\n4\n1\n2\n2\n1\n3\n10\n1\n3\n1.5\n3\n2.5\n2\n5\n2\n2\n2\n2\n1\n1.5\n5\n0.5\n2\n0.5\n2\n2.5\n2\n2\n1\n4\n5\n2\n2\n2\n1\n4\n1\n4\n5\n5\n7\n2\n3\n2\n3\n3\n3\n5\n6\n2\n2\n1\n1\n3\n3\n1\n6\n4\n2\n2\n3\n8\n3\n2\n7\n12\n9\n2\n1\n1\n2\n4\n2\n6\n4\n1\n6\n2\n5\n1.5\n5\n2\n4\n2\n5\n6\n1\n6\n4\n2\n2\n2\n4\n2\n6\n3\n5\n0.5\n1\n10\n2\n0.5\n1\n2\n3\n3\n2\n1\n8\n1\n1\n1\n5\n5\n4\n8\n0.7\n3\n7\n1.5\n4\n4\n10\n2\n2\n6\n0.5\n2\n5\n3\n4.5\n3\n20\n1\n2.5\n1\n2\n5\n3\n3\n0.5\n8\n2\n3\n3\n5\n1.5\n1\n2\n1\n4\n1\n2\n2\n2\n1\n6\n2\n4\n1.5\n3\n4\n10\n3\n3\n3\n2\n2\n3\n2\n5\n6\n3\n5\n5\n6\n6\n3\n10\n2\n2\n3\n1.5\n10\n2\n3\n2.5\n3\n0.5\n16\n6\n3\n0.5\n5\n2\n2\n2\n1.5\n1\n10\n2\n15\n0.5\n3\n2\n4\n2\n1\n24\n1\n2\n2\n3\n3\n2\n7\n6\n3\n5\n4\n3\n2\n3\n2\n2\n3\n2\n3\n0\n1\n2\n2\n6\n5\n2\n4\n8\n4\n1.5\n2\n5\n6\n2\n2\n1\n1\n2\n2\n1\n14\n3\n3\n2\n0.5\n6\n1\n2\n4\n3\n12\n3\n1\n10\n5\n0.5\n5\n3\n2\n13\n4\n6\n3\n4\n3\n2\n2\n1\n6\n9\n1\n1\n0.5\n1\n1.5\n6\n4\n6\n4\n1.5\n2\n2\n4\n3\n4\n2\n2\n6\n0\n1\n4\n2\n3\n4\n2\n3\n1\n10\n10\n10\n4\n4\n3\n2\n1\n6\n1\n1\n4\n2\n2\n2\n6\n3\n1\n4\n0.5\n8\n15\n1.5\n2\n3\n1\n0.25\n1\n1\n5\n1\n1\n7\n3\n3\n7\n8\n2\n2\n2\n2\n4\n8\n4\n1\n5\n2\n1\n5\n8\n2\n2\n1\n8\n8\n1\n1\n8\n2\n6\n3\n4\n2\n3\n4\n2\n1\n1\n1\n2\n7\n5\n3\n1\n6\n2\n3\n1.5\n4\n2\n2\n2\n1\n3\n3\n2\n6\n3\n3\n2\n2\n2\n3\n4\n2\n5\n2\n1\n7\n3\n3\n4\n3\n1\n7\n1\n4\n4\n3\n2\n4\n5\n6\n1\n1\n3\n1\n8\n1\n8\n1\n1\n10\n10\n5\n10\n2\n6\n2\n3\n8\n8\n8\n8\n12\n6\n4\n8\n2\n1\n2\n3\n1\n0\n2\n0.1\n2\n12\n1\n1\n3\n2\n2\n3\n1\n3\n3\n5\n8\n4\n5\n3\n4\n1\n4\n1\n2\n6\n2\n1\n4\n8\n2\n2\n10\n0\n6\n3\n2\n0.25\n4\n2\n2\n3\n6\n3\n2\n5\n4\n4\n0\n12\n0.5\n1\n3\n12\n4\n3\n1\n4\n2\n3\n3\n1\n2\n1\n0.5\n2\n11\n10\n5\n1.5\n2\n3\n2\n3\n4\n1\n5\n2\n7\n2\n1\n1\n4\n6\n3\n4\n4\n1\n2\n24\n5\n3\n4\n9\n1\n1\n2\n1.5\n2\n4\n1\n1\n3\n4\n8\n5\n3\n8\n1\n4\n1\n2\n1\n3\n5\n5\n4\n6\n6\n1\n18\n1\n7\n0.5\n2\n2\n1\n6\n5\n2",
        "isVisible": true,
        "tabOrder": 4
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 5
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "video_key": "csa_enhanced_for_loops",
    "name_suffix": "_2024",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T20:52:22.640+00:00\",\"changed\":[\"cloned from \\\"CSA U3L7-L6d_2023\\\"\"],\"cloned_from\":\"CSA U3L7-L6d_2023\"}]"
}]]></config>
</Javalab>
