<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-28T04:54:47.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO #1:** A student prompted an AI to create this program. Run the program and observe the results.\r\n\r\n1. What was this program intended to do?\r\n\r\n2. What is this program actually doing?\r\n\r\nâœ… **TO DO #2:** Describe what this program was intended to do and what it is actually doing. \r\n\r\n1. Identify one small part of the program that is not behaving as expected. \r\n\r\n2. Discuss with a partner how the program should behave, and what is happening instead. \r\n\r\n3. Add a comment above the code that is incorrect explaining how you would prompt an AI for help fixing the problem.\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">ðŸ”¦ Need help writing your prompt?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px;\">\r\n    \t<p>\r\n        The FlagPainter is painting a horizontal black stripe. I want it to paint the stripe vertically. \r\n        </p>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "neighborhood",
    "start_sources": {
      "FlagPainterRunner.java": {
        "text": "import org.code.neighborhood.*;\n\npublic class FlagPainterRunner {\n  public static void main(String[] args) {\n\n    FlagPainter flag = new FlagPainter();\n    flag.takeAllPaint();\n    flag.paintFlagOfBelgium();\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "PainterPlus.java": {
        "text": "import org.code.neighborhood.*;\n\npublic class PainterPlus extends Painter {\n\n  // Turns the Painter to the right\n  public void turnRight() {\n    turnLeft();\n    turnLeft();\n    turnLeft();\n  }\n\n  // Takes all of the paint from a paint bucket\n  public void takeAllPaint() {\n    while (isOnBucket()) {\n      takePaint();\n    }\n  }\n\n  // Turns around\n  public void turnAround() {\n    turnLeft();\n    turnLeft();\n  }\n\n  // Paints a line based on how much paint the Painter has\n  public void paintLine(int paintAmount, String color) {\n    setPaint(paintAmount);\n\n    while (hasPaint()) {\n      paint(color);\n      \n      if (canMove()) {\n        move();\n      }\n    }\n  }\n\n  // Moves to the next row\n  public void moveToNextRow() {\n    if (canMove(\"south\")) {\n      if (isFacingEast()) {\n        turnRight();\n        move();\n        turnRight();\n      }\n      else {\n        turnLeft();\n        move();\n        turnLeft();\n      }\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "FlagPainter.java": {
        "text": "import org.code.neighborhood.*;\n\npublic class FlagPainter extends PainterPlus {\n  \n  /*\n   * Paints the entire flag of Belgium\n   */\n  public void paintFlagOfBelgium() {\n    paintStripe(\"black\");\n    moveToNextStripe();\n    paintStripe(\"yellow\");\n    moveToNextStripe();\n    paintStripe(\"red\");\n    resetPosition();\n  }\n\n  /*\n   * Paints a vertical stripe of the flag\n   */\n  public void paintStripe(String color) {\n    for (int i = 0; i < 8; i++) {\n      paint(color);\n      if (canMove()) {\n        move();\n      }\n    }\n    turnAround();\n    for (int i = 0; i < 7; i++) {\n      move();\n    }\n    turnLeft();\n  }\n\n  /*\n   * Moves to the starting position for the next stripe\n   */\n  public void moveToNextStripe() {\n    move();\n    turnRight();\n  }\n\n  /*\n   * Resets the Painter to the starting position\n   */\n  public void resetPosition() {\n    turnLeft();\n    while (canMove()) {\n      move();\n    }\n    turnLeft();\n    while (canMove()) {\n      move();\n    }\n    turnAround();\n  }\n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "ai_tutor_available": true,
    "serialized_maze": [
      [
        {
          "tileType": 1,
          "value": 100,
          "assetId": 303
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ]
    ]
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-28T04:54:47.893+00:00\",\"changed\":[\"cloned from \\\"CSA-AIGeneratedCode-L1_2025\\\"\"],\"cloned_from\":\"CSA-AIGeneratedCode-L1_2025\"},{\"changed_at\":\"2024-08-28 04:58:04 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"},{\"changed_at\":\"2024-08-29 04:48:46 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\",\"contained_level_names\"],\"changed_by_id\":19378,\"changed_by_email\":\"cody.diliberto@code.org\"}]"
}]]></config>
</Javalab>
