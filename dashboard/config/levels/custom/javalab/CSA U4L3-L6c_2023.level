<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-02-17T18:32:31.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A basketball fan wants to create a visualization to show the difference between home and visiting team scores. For example, if the home team scored 10 points, and the visiting team scored 18 points, the visual will show 8 in red.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">BasketballScene.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getScoreDiff()</code> method to return a 1D <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> array containing the differences between the home and visiting team scores. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getScoreDiff()</code> should:\r\n\r\n1. Get the absolute value of the value in the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">homeScores</code> minus the corresponding value in the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">visitingScores</code>.\r\n\r\n2. Return a 1D <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> array containing the difference between each home team score and corresponding visiting team score.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner.java</code>,\r\n\r\n1. Declare and initialize a 1D array that stores the array returned from calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getScoreDiff()</code> method.\r\n\r\n2. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">drawResults()</code> method with the 1D array.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math.abs()</code> method.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ncreate int array that is the same length as homeScores\r\n&nbsp;\r\nloop from 0 to differences.length\r\n  differences[index] = abs value of homeScores[index] - visitingScores[index]\r\n&nbsp;\r\nreturn differences\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Score Differences",
    "bubble_choice_description": "A basketball fan wants to create a visualization to show the difference between home and visiting team scores.",
    "thumbnail_url": "https://images.code.org/def95d5b81eadc4992e1a27ff1a16edd-basketball-ball.png",
    "starter_assets": {
      "basketball.png": "ad215401-2d18-416d-baa9-a31ee889527c.png"
    },
    "encrypted_validation": "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\n97UVzKFMmiIgQ1M60Kt1XHOv\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // The 1D array of home team scores\n    int[] home = {75, 82, 68, 90, 71};\n\n    // The 1D array of visiting team scores\n    int[] visitor = {64, 79, 83, 70, 88};\n\n    // Creates a BasketballScene object with the home and team scores\n    BasketballScene scene = new BasketballScene(home, visitor);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the drawResults() method with the 1D array returned from calling\n     * the getScoreDiff() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n\n    \n\n    // Plays the scene\n    Theater.playScenes(scene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "BasketballScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a visualization to show the difference\n * between home and visiting team scores\n */\npublic class BasketballScene extends Scene {\n\n  private int[] homeScores;        // The 1D array containing a home team's scores\n  private int[] visitingScores;    // The 1D array containing a visiting team's scores\n\n  /*\n   * Initializes homeScores and visitingScores to the specified 1D arrays\n   */\n  public BasketballScene(int[] homeScores, int[] visitingScores) {\n    this.homeScores = homeScores;\n    this.visitingScores = visitingScores;\n  }\n\n  /*\n   * Returns a 1D array containing the differences between the home team\n   * scores and the visiting team scores\n   */\n  public int[] getScoreDiff() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Return a 1D array containing the difference between each home team\n     * score and corresponding visiting team score.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n\n    return null;\n  }\n\n  /*\n   * Draws the results in the scene\n   */\n  public void drawResults(int[] results) {\n    for (int index = 0; index < results.length; index++) {\n      int winner = getWinner(homeScores[index], visitingScores[index]);\n      drawHomeText(homeScores[index]);\n      \n      drawVisitingText(visitingScores[index]);\n      drawWinnerText(winner, results[index]);\n\n      int size = 150;\n      int xLocation = (getWidth() / 2) - (size / 2);\n      drawImage(\"basketball.png\", xLocation, 120, size);\n      \n      pause(1.5);\n      clear(\"white\");\n    }\n  }\n\n  /*\n   * Returns 0 if the home team won or 1 if the visiting team won\n   */\n  public int getWinner(int homeScore, int visitingScore) {\n    if (homeScore > visitingScore) {\n      return 0;\n    }\n    else {\n      return 1;\n    }\n  }\n\n  /*\n   * Draws the home team's score\n   */\n  public void drawHomeText(int score) {\n    drawText(\"Home\", 75, 75);\n    drawText(score + \"\", 75, 100);\n  }\n\n  /*\n   * Draws the visiting team's score\n   */\n  public void drawVisitingText(int score) {\n    drawText(\"Visitor\", 250, 75);\n    drawText(score + \"\", 250, 100);\n  }\n\n  /*\n   * Draws text in the scene based on who won\n   */\n  public void drawWinnerText(int winner, int difference) {\n    String winnerText = \"\";\n    \n    if (winner == 0) {\n      winnerText = \"Home\";\n    }\n    else {\n      winnerText = \"Visiting\";\n    }\n\n    drawText(winnerText + \" team won by \" + difference + \" points\", 50, 325);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_exemplar_sources": "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\nup8p63XvIobAlAHh\n",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T18:32:31.464+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L6b_2023\\\"\"],\"cloned_from\":\"CSA U4L3-L6b_2023\"},{\"changed_at\":\"2023-02-17 18:32:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-09 15:51:30 +0000\",\"changed\":[\"long_instructions\",\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:33:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:36:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:36:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:42:42 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:42:51 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:44:28 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:44:44 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-13 23:45:09 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-14 02:05:08 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
