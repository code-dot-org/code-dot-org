<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T22:03:25.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A travel agency is updating marketing materials to advertise the child-friendly roller coasters in the United States. They have decided that roller coasters that are 35 mph or under are considered child-friendly and need to update their program to specify this as the maximum speed for child-friendly roller coasters.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TravelAgency.java</code>, declare and initialize a constant called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">CHILD\\_MAX\\_SPEED</code> to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">35</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getChildFriendly()</code> method, update the condition to use the constant.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring and initializing a constant.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/constants"
    ],
    "display_name": "Roller Coasters",
    "bubble_choice_description": "Use a constant to specify a maximum speed for child-friendly roller coasters.",
    "thumbnail_url": "https://images.code.org/c887d9a1296b8980a548883084835a8e-rollercoaster.png",
    "encrypted_validation": "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\nNtFsATI4Ufrzmp9xsA==\n",
    "start_sources": {
      "TravelAgency.java": {
        "text": "/*\n * Manages data about roller coasters\n */\npublic class TravelAgency {\n\n  private Rollercoaster[] rollercoasters;    // The 1D array of rollercoasters\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Declare and initialize a constant called CHILD_MAX_SPEED to 35.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n  /*\n   * Initializes rollercoasters to the specified 1D array of rollercoasters\n   */\n  public TravelAgency(Rollercoaster[] rollercoasters) {\n    this.rollercoasters = rollercoasters;\n  }\n\n  /*\n   * Returns a String containing rollercoasters that are\n   * considered child-friendly (under 35 mph)\n   */\n  public String getChildFriendly() {\n    String result = \"Child-Friendly Roller Coasters\\n---------------\\n\";\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Update the condition to use the constant.\n     * -----------------------------------------------------------------------------\n     */\n\n    for (Rollercoaster coaster : rollercoasters) {\n      if (coaster.getSpeed() <= 35) {\n        result += coaster + \"\\n\";\n      }\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Rollercoaster.java": {
        "text": "/*\n * Represents a roller coaster\n */\npublic class Rollercoaster {\n\n  private String name;\n  private int speed;\n\n  /*\n   * Sets name to the specified name and speed to\n   * the specified speed to the roller coaster\n   */\n  public Rollercoaster(String name, int speed) {\n    this.name = name;\n    this.speed = speed;\n  }\n\n  /*\n   * Returns the speed of the roller coaster\n   */\n  public int getSpeed() {\n    return speed;\n  }\n\n  /*\n   * Returns a String containing information about the roller coaster\n   */\n  public String toString() {\n    return name + \": \" + speed + \" mph\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "AgencyRunner.java": {
        "text": "public class AgencyRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Rollercoaster objects\n    Rollercoaster[] coasters = { new Rollercoaster(\"Shamu Express\", 23), new Rollercoaster(\"Quicksilver Express\", 51),\n                               new Rollercoaster(\"Tig'rr Coaster\", 50), new Rollercoaster(\"Pony Express\", 62),\n                               new Rollercoaster(\"Coastersaurus\", 32), new Rollercoaster(\"Cobra\", 35)};\n\n    // Instantiates a TravelAgency with the array of rollercoasters\n    TravelAgency agency = new TravelAgency(coasters);\n\n    // Calls the getChildFriendly() method and prints the result\n    System.out.println(agency.getChildFriendly());    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "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\nDLkH+p1iZw==\n",
    "name_suffix": "_alt-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T22:03:25.229+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L4a_pilot-2025\\\"\"],\"cloned_from\":\"CSA U4L3-L4a_pilot-2025\"}]"
}]]></config>
</Javalab>
