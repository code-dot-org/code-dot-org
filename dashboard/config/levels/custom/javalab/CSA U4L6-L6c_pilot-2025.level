<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T16:55:03.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "## Fix the Error\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findMatchingPlaylist()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Playlist</code> class is supposed to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the text <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"All of the songs are the same!\"</code> if all <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Song</code> objects in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Playlist</code> are the same, but it has a bug ðŸª²\r\n\r\nFind and fix the error in the program.\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">ðŸ”¦ Help! I can't find the bug!</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">equals()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Song</code> class returns <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if two <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Song</code> objects have the same title. Check if this is being used in the condition in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findMatchingPlaylist()</code> method.</p>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "The Playlist Class",
    "bubble_choice_description": "The `findMatchingPlaylist()` is supposed to return a `String` containing the text `\"All of the songs are the same!\"` if all `Song` objects in the `Playlist` are the same, but it has a bug ðŸª²",
    "thumbnail_url": "https://images.code.org/5b0dfda27186b29a29642c1c6de6719c-playlist.png",
    "encrypted_validation": "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\nTtNzj0ZJqa1ZTeoUnvT/EfznqJ4=\n",
    "start_sources": {
      "PlaylistRunner.java": {
        "text": "public class PlaylistRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Song objects\n    Song[] songs = {new Song(\"Eye of the Tiger\"), new Song(\"I Will Survive\"), new Song(\"Don't Stop Believin'\"), new Song(\"Stronger\"), new Song(\"Hero\")};\n\n    // Creates a Playlist object\n    Playlist inspire = new Playlist(songs);\n\n    // Creates first test array of Song objects and Playlist\n    Song[] firstTestSongs = {new Song(\"Eye of the Tiger\"), new Song(\"I Will Survive\"), new Song(\"Don't Stop Believin'\"), new Song(\"Stronger\"), new Song(\"Hero\")};\n    Playlist first = new Playlist(firstTestSongs);\n\n    // Creates second test array of Song objects and Playlist\n    Song[] secondTestSongs = {new Song(\"Beautiful\"), new Song(\"I Will Survive\"), new Song(\"Hall of Fame\"), new Song(\"Stronger\"), new Song(\"We Are the Champions\")};\n    Playlist second = new Playlist(secondTestSongs);\n\n    // Calls the findMatchingPlaylist() method and prints the result\n    System.out.println(inspire.findMatchingPlaylist(first) + \"\\n\");\n    System.out.println(inspire.findMatchingPlaylist(second));\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Playlist.java": {
        "text": "/*\n * Represents a playlist\n */\npublic class Playlist {\n\n  private Song[] songs;    // The 1D array of Song objects\n\n  /*\n   * Initializes songs to the specified 1D array of Song objects\n   */\n  public Playlist(Song[] songs) {\n    this.songs = songs;\n  }\n\n  /*\n   * Returns the 1D array of Song objects\n   */\n  public Song[] getSongs() {\n    return songs;\n  }\n\n  /*\n   * Returns a String containing the text \"All of the songs are the same!\"\n   * if all Song objects in the playlist have the same title\n   */\n  public String findMatchingPlaylist(Playlist other) {\n    boolean allSame = true;\n    \n    for (int index = 0; index < songs.length; index++) {\n      if (this.songs[index] != other.songs[index]) {\n        allSame = false;\n      }\n    }\n\n    if (allSame) {\n      return \"All of the songs are the same!\";\n    }\n    else {\n      return \"Not all of the songs are the same.\";\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Song.java": {
        "text": "/*\n * Represents a song\n */\npublic class Song {\n\n  private String title;     // The title of a song\n\n  /*\n   * Sets title to the specified title\n   */\n  public Song(String title) {\n    this.title = title;\n  }\n\n  /*\n   * Returns the title of the song\n   */\n  public String getTitle() {\n    return title;\n  }\n\n  /*\n   * Returns true if the title of other is the same as this Song\n   */\n  public boolean equals(Object other) {\n    if (other == this) {\n      return true;\n    }\n\n    if (!(other instanceof Song)) {\n      return false;\n    }\n\n    Song otherSong = (Song) other;\n    return this.title.equals(otherSong.title);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\nef4oL7bv9qUloZ3UZJdM+v6v+j2GCE/edjE=\n",
    "video_key": "csa_equals_and_aliases",
    "name_suffix": "_pilot-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T16:55:03.038+00:00\",\"changed\":[\"cloned from \\\"CSA U4L6-L6c_2025\\\"\"],\"cloned_from\":\"CSA U4L6-L6c_2025\"}]"
}]]></config>
</Javalab>
