<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-04-11T14:10:42.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A weather app wants to implement a system that displays weather information based on the user's location.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTemperature()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Weather</code> class that returns the temperature. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getThisTemperature()</code> to get a this temperature.\r\n\r\n‚úÖ **TO DO #2:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTemperature()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LocalWeather</code> class that overrides the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTemperature()</code> method to return the temperature based on the user's current location. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getLocalTemperature()</code> to get a list of local temperatures.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class, create several <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Weather</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LocalWeather</code> objects and call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTemperature()</code> method for each object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with overriding methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "reference_links": [
      "/courses/csa-2023/guides/method-overriding"
    ],
    "display_name": "Weather Information",
    "bubble_choice_description": "A weather app wants to implement a system that displays weather information based on the user's location.",
    "thumbnail_url": "https://images.code.org/280a7be7a46e7beae4e90891c33480b8-weather-forecast.png",
    "encrypted_validation": "Vp5OeVLRlzQzoMQDJg6vYD3/YOjwiTtHBQaNv32YzQ42nfvvItif0kZU9EyS\n2pPK2aJQJG30QfBAGs8/FU7c7wuEfXYXj5qma6JOIkR7aNjy3Gi5xTDxanrG\nbdaG9PzqhnYVMOFgONtCYPyCzDI+nwVhjcAiAjq9gFS5YXAJnoAlJEXfLUBc\n5OZBga1XefIcq12YxBqdQ0gBYmG9po3eb/WEOobuW+79UhP+JXwaHxHoM5Ao\nd9WKojt/jjGzOuANOii7X9NKBf2APUw3mCPWkozD7qq8xWhQA99DOPK0Pv4h\nY+rBPDBIKYFcw6/NOpkRovkzp4BsuoY4MrLVMweYW9NLyQ4hOxIuW6iaJfyA\nSXVCxSfpLinzq6po2UMJIpNPo/AHEu4nkAJ/Q/nntqkuZQhJ+S+bB/C1c2a3\n4cJuj0vg9dsTHzkqbNqpgh4RhMU8WCBHLvkFKiu8TxYH8UB8vfM4xylRKyYH\n7briHc4GSp+zqcyR2i0qVhYfpgciviZ7J24KH6GqqxJMjH1aKp6GLjkoy5v7\nLhyJ3CvMQ/cg98osr3M5dH5jg0vx5zrI5w6pDKTrJeeDMBxA3W4495gS7YaP\ncz6/OqCax5nVmX72PYA1lEVGmGLoyYDPnl09VDtWgx7NA1F/idfzS2grHM6W\nKolvIK5q/TZ3XpXW5ScQ7rIRqFRJBusC7dPFMAQxbcxmpgnQowzt/+hGKbD2\nSYHZSz9BvmolzJpOj1b9munpyv/w7AqCIkWBBSAkEide5jQFIsADdhggnG8k\nXu+/A17mRloT29lXU/14KZVoUbHmlai1r17DmNBcqWgaa04xjpEm/Eija+8g\nYxk3abPdjqUQ7/mXF0qiBCH9afypiuaoPHKBkf5ngAct2Usdinesu0p/rbb4\nQNiAxQwBTjo4Pdt2PfvV+rO9zw7wkd9UHeGYl3SKUhrmdIUt1OWTyxZjdHAG\nq5jrbIWuiwQeDUHVUkKLbTurrA0gNKBq9ii1UM3FC6xp6Mahjg/2w0OT1olm\nIT7Eq3aIKvRJIhSPiV5cJhh1fY3SfQCGTAYA4MPh/3scfqwbpytSFT4xcl9+\nf7z2GqIFgJIOac49NNnLySdGREknFPEzmWc6Np3Eg9TDUt2fCIEDngHObZTl\nAemGhmV5Jt1ObSr7hFbEWkTLBThXINF46eLlXm38TK1W3pA3RjXfeWgIgpFu\nLUEGrD7wljQgD/5zkbziOGsLfxaKaGkLY+aeR6jAhZ7glQRymcMkAlvbPjPa\n1h5O1PlSpGPwesoOuGSbRDrA4cJ+KYSAAGS34vmNwbbqAHA1fxthihPL2AIU\nK7ANIKIE3GAvuxWxK033RbDzuOXwJv/F6S1YhhJXXSNcPeotbJOqYrhVv3mo\nv6GskMp1K2AN5hKf5psp2DvBTO78u5JreVb152cPPcMPvFWAFm1jo8SGFSxL\nrXgM07zcMFVJZ/t2Ss8qzLe2aMpzTTJLfUudCg3atyOmhUfw1xwSq2Iu6zOB\nIHK7k2OP+uGUT9k8f9csiqJ55RQ4hClvxfBlIbYCoF552FJwIyM2mud1QtX9\nouodXHu3Tl9LwbWlm9yBea52k+DqC8eyc7K0WflYLHCW4O6GBHGEX8ndKpSU\nxIjx8bn/20HliYaW89crgYf9t8jzi93xWSxfE9/oei76ZXl2i94+0CAMTEyN\n3YVGi8mIqi7bur1YziVnZqEka8f6Eyoxsy4uRpCzcoPmV0SnEPWCLQ7KJiEb\nEiXiuhQR1FeBnHdIq97kCZykttdZg+l2BiHz9L0IWgmsoPSfk9L88HKlWLP7\ng57fjPNFF/vBzKUA/CJvVrWUqSJysJ+XU6U=\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import java.util.ArrayList;\n\nimport org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Create several Weather and LocalWeather objects and call the getTemperature()\n     * method for each object. Call the drawResult() with double returned from calling\n     * getTemperature();\n     * -----------------------------------------------------------------------------\n     */\n    ArrayList<Double> local = new ArrayList<Double>();\n    local.add(50.5);\n    local.add(61.2);\n    local.add(57.5);\n\n    Weather s = new Weather(59.9);\n    LocalWeather loc = new LocalWeather(52.4, local);\n    \n\n    // Plays the scene\n    Theater.playScenes(s);\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Weather.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a Weather\n */\npublic class Weather extends Scene {\n  private double temperature;   // temperature\n  \n  public Weather(double temperature) {\n    this.temperature = temperature;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getTemperature() method to return the temperature of the weather. The method\n   * should call the private method getThisTemperature() to get this temperature.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  private double getThisTemperature() {\n    return temperature;\n  }\n\n    /*\n   * Draws the result in the scene\n   */\n  public void drawResult(double temperature) {\n    drawImage(\"cloudy.png\", 0, 0, getWidth());\n    drawText(\"temperature \" + temperature, 50, 200);\n    pause(0.5);\n  }\n}\n\n",
        "isVisible": true,
        "tabOrder": 1
      },
      "LocalWeather.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a LocalWeather\n */\npublic class LocalWeather extends Weather {\n  private ArrayList<Double> local;   // list of local weather\n  \n  public LocalWeather(double temperature, ArrayList<Double> local) {\n    super(temperature);\n    this.local = local;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getTemperature() method that overrides the getTemperature() method to\n   * return the temperature of the local weather. The method should call the private\n   * method getLocalTemperature() to get a list of local temperature, then\n   * randomly return one of the temperature.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  private ArrayList<Double> getLocalTemperature() {    \n    return local;\n  }\n}\n\n",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "YyRhf5XQ7GbGqjh3pQacF8EMMpqOQsu168sBLGi5TMsVHQwCwjwxspHfYzZ2\nsYcu8JWm1o5V85KTTxivox7H0lUtekLHFOOHk2oWfsdSJ+bLYtFi/kisk2Jp\n0liVUyKuPJT8xuJNfHv6vkN1xpu3OhZasMRHYGINMCp1Qki2AMtNDetX/A8k\nCjulfi1JoWTou4Jh6z05sjrmu62qtXidl3Hk9S/sTMju3+55LTj5/O59mjlt\nfGhlSHqiEEPnR20UldcmxlWjiTq5hPlND2y5UPz5xe/2WBXqMmQJGz4ksO3u\nClczC4pjppJ5zyAtueemqoYzCzLTxA3AyB3hH4Fc1o6ZbHZHzzWC7R/TDI/R\n9QjF6C32ISVplJt4sW8ar6lyaR/ergBGvn31XzrqjgijvLWIGFwGZC3ocV79\nqc1XmEvjSHJJh/qFm7htSLpGop626s/zjOOy52xjz7N8K2x2VSSSekOW8CoI\nBNSlzoJIRxPe3ltTnHTjZd+7fEDaOz/v6gsg27e1U+xek+rL1sNFdttln40D\nZabFOavKwSdua6YHjMuSsbUiUJFv2PyTyinV2qN/ke4iHd8LmySzCbu9T3Ug\nwxeIFt+MAS3+VJuqTYTdYgpQ89VQ14BJlq5EIdFfU/O2oh6Xotw01CrY9Jjk\ndsL1JsFhBWTfY3k45c4w0lcftDOxwMuP9G2tGLiGchp3pNOnfKFwvVCNzAem\nM+chxa3IFSfZ9w/t0DIGr672HTATDZnU5qHvVgreMrNWuAOhePRSR+5FuBnX\nT9v0T3OmIYMkVWA9bCvajTR3ajDzBq3fpnE3N+CxPHXUaDm69EWryak8l0G+\n5dbrfazqw0fdd76jjLzrfn2cEinOG6tamDQUKOoKlSbDzETdJsPOUYKXM13n\nbkfYHNGPrOyICHhV3zPsE9NCxAyyypQvi5TsaufGJKI7R2cEq4kidxUACLBY\nMoUNcZ0OP3gV4SejZF7b+thQlbqmlfG1QYeDFpOWUE7HvusPIvV2LKjWGtGN\nCrrlAjW/629/EcoqFTJH+peiHHo04KlwApiobXrUfSCpCPgxg4bJQbsmCfBS\n/h9epTPKB49LgbAfrQQUk3bVQY5tZRjO2O1Tw4x4gnVHB3Ch10mVr1wDso9s\naRSxw4yiY5qf7gZzufvped1fn+ckp1+xgbnLVRIigROLEmISEh6+dNmSn06I\n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\n",
    "starter_assets": {
      "cloudy.png": "76946d82-bdd0-4e57-bf30-b15ba2c6104e.png"
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-11T14:10:42.929+00:00\",\"changed\":[\"cloned from \\\"CSA U7L5-L6c_2023\\\"\"],\"cloned_from\":\"CSA U7L5-L6c_2023\"},{\"changed_at\":\"2023-04-11 14:10:44 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 02:35:19 +0000\",\"changed\":[\"long_instructions\",\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-07 18:54:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:54:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:01 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:22 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:51 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:56:03 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:14:10 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:15:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:15:39 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:16:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:16:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:21:06 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:21:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:21:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 20:22:02 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-10 13:46:24 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"}]"
}]]></config>
</Javalab>
