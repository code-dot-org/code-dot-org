<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T15:26:07.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://www.kaggle.com/datasets/shubhamrathi15/all-pokemon-database\" target=\"_blank\">**Pokemon Encyclopedia dataset**</a> includes the names of Pokemon and the attack points for each Pokemon.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pokedex.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">checkForDuplicates()</code> method to return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if any Pokemon in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">pokemonData</code> have the same attack points, otherwise return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code>.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">PokemonRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">checkForDuplicates()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing a nested <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nloop from 0 to pokemonData.length\r\n  loop from next position to pokemonData.length\r\n    if pokemonData[outer].getAttack() == pokemonData[inner].getAttack()\r\n      return true\r\nreturn false\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ What is the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \r\n    <p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FileReader</code> class is a hidden support class that has methods for reading data from a text file into a 1D array. It has the following methods:</p>\r\n\t\t<ul>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toStringArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> objects containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toIntArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> values containing the data</li>\r\n<li><code style=\"background-color: #ececec; color: black; font-weight: bold;\">toDoubleArray(String filename)</code> - reads the data from the specified <code style=\"background-color: #ececec; color: black; font-weight: bold;\">filename</code> and returns a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">double</code> values containng the data</li>\r\n\t\t</ul>\r\n    \t<p>For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nString[] names = FileReader.toStringArray(\"names.txt\");\r\n \r\nint[] numbers = FileReader.toIntArray(\"numbers.txt\");\r\n \r\ndouble[] prices = FileReader.toDoubleArray(\"prices.txt\");</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/nested-loops"
    ],
    "display_name": "Pokemon",
    "bubble_choice_description": "Determine whether the Pokemon Encyclopedia dataset contains duplicate values.",
    "thumbnail_url": "https://images.code.org/0fb791bc0a8a00eaf33e72f401a9e3d1-pokeball.png",
    "encrypted_validation": "KkPtswlfnQQCay0/N7NBBRetDtI0O8MPUI6Vwo8p9LFf8kUEB90HnFQtBLsC\npEF24zXWKSHPwimp3tJhEZOoDXwdPcQkbocAycK+5bepCwdQhM7NqLHzt1bh\nQ2T3ZF99+60nnIHv8Kfit/WzZycZdxjowYzuCPigxUPxbOq3RlF70qbQyoTb\n6xuHeh/JB2hSPz3ZNXnv2uFOAl1XriuHSBnC6riwaUPTVxiphPUChxQ9SYUN\neDUsrh3SfD8eM3RvwMetvj7iTks8Q2bF1aFeIiGqg0VExZ43sFAuzV5YG/p2\nKvkziio7/l7WqQ7WHEg/Mvbvd0q0rIyrfzAizTmyRGa4KxbG8JjsBuMUYOI8\nY4sJmxGUrzzfXrwIr0vjXhDz1Jov9tHbcq5P2IxyVBuO44N2lwWSelYgRlJt\nitfweKvxPX1zUPhP/FGZDf8zsJXqtSl5HUPtdzGmn/nv1i2jVkMs68X74Pye\nmip1bS0YWlKZLjWvGq89w5KLojAEApDAivqyXEycZcnOBM4aJwMzAEvKHjdg\n5ifd29fer4tMMBGbi/r8MCRz9yEHptPmu49GymoHW3tahxhjXRuDS7/IdMPJ\nY3Dsbp5Yeic+PIhzBuF+4yER8oxmHypN2yZbOBFzjy0GbVqeef3lo4w36XQ4\nr9BMOGoZKPKC4OV9sfBO7jC5cseupF74IY4IRGdU0uQMn1lqqLUESG+p+GKH\nU5OFRY4xf3naQNm1vnl8pr/kmwkohHxSXDlM40AorTHBJXzSCdBMrU1OWCaa\nUU0BVrtVGWlZDEcfBUvZZ/Kv5/C3ohKrdQOdIwLGEL46qFroF/hY/b7XDLOP\nzf9O0G5+/ootkKk3IpDs2yxKdZeg4oXu2HDGtnG8XDrFIDBtYcrualmL6U6p\n5OqOwFqx4yn82/fwXzl2AB2m99G2O3suYhr6FkTM5pmRRcJKWBAco6Fe9V3L\nNKQkcb2gq5QNEcn4hMMvY/g0Tkqf7SuO8Op0h9SR0/EaPxKF0SjGbGj4LmQx\n1Xdj54lgBSUhkifQnC6FvAiUBJ5nHJQdfwleZ5K1arccLpIE6HwiFBBZaTuS\n4m+Of1VVu3gYLlmfvYVW8+B29eg3E33PFcjHWZwsZmmUzaw5fVxPMu5mr+nU\nT/qv9wfH/a5I9GBVgXWShL+wPN6Y0QitqU9zYoSfAywMTaL3L89CQBbaJHrp\nI7TdMkFSe9ifpab0px0mIbYu5hoD1ByhSxelFImTZOZMUkHhRVRXa9YBVjrH\nH5bEeaCUgQXl9mftQI+yTTTF+UvUzW2lEdTDbMX/owgOLieaRFR0jS+JCXSy\nrxhBOvp141E/Al/xjAFD+zgdCt22Cu+TtlLnxKOrXqs9zWLGCXC62RlYkAuq\npdcnU+2tqDefmRTwzgwyVRElU7C++8DBZjrsQ/Ad/vuSICwoTip32flfLYFy\nxVnxtXXPPh3DJVEYSruHiQMGNHxrbHyt7BHI9z/C5QbhkMAVIdmygIctgWFM\nisMdYMRLVv1eCOZKnT5fOkFFZtS6HdL0+dYt\n",
    "start_sources": {
      "PokemonRunner.java": {
        "text": "public class PokemonRunner {\n  public static void main(String[] args) {\n\n    Pokedex pokemon = new Pokedex(\"names.txt\", \"attacks.txt\");\n    System.out.println(pokemon);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the checkForDuplicates() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Pokedex.java": {
        "text": "/*\n * Manages data about Pokemon\n */\npublic class Pokedex {\n\n  private Pokemon[] pokemonData;   // The 1D array of Pokemon objects\n\n  /*\n   * Reads the data from namesFile and attackFile\n   * to initialize pokemonData\n   */\n  public Pokedex(String namesFile, String attackFile) {\n    pokemonData = createPokemon(namesFile, attackFile);\n  }\n\n  /*\n   * Returns a 1D array of Pokemon objects using\n   * the data from namesFile and attackFile\n   */\n  public Pokemon[] createPokemon(String namesFile, String attackFile) {\n    String[] namesData = FileReader.toStringArray(namesFile);\n    int[] attackData = FileReader.toIntArray(attackFile);\n\n    Pokemon[] tempPokemon = new Pokemon[namesData.length];\n\n    for (int index = 0; index < tempPokemon.length; index++) {\n      tempPokemon[index] = new Pokemon(namesData[index], attackData[index]);\n    }\n\n    return tempPokemon;\n  }\n\n  /*\n   * Returns true if more than one Pokemon have the same attack points, otherwise returns false\n   */\n  public boolean checkForDuplicates() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use nested loops to traverse the 1D array pokemonData and the getAttack()\n     * method in the Pokemon class to check if there are duplicate attack points.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    return false;\n  }\n\n  /*\n   * Returns a String containing each Pokemon's information\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (Pokemon thePokemon : pokemonData) {\n      result += thePokemon + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Pokemon.java": {
        "text": "/*\n * Represents a Pokemon\n */\npublic class Pokemon {\n\n  private String name;    // The name of a Pokemon\n  private int attack;     // The attack of a Pokemon\n\n  /*\n   * Sets name and attack to the specified values\n   */\n  public Pokemon(String name, int attack) {\n    this.name = name;\n    this.attack = attack;\n  }\n\n  /*\n   * Returns the name of the Pokemon\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the attack of the Pokemon\n   */\n  public int getAttack() {\n    return attack;\n  }\n\n  /*\n   * Returns a String containing the name and attack of the Pokemon\n   */\n  public String toString() {\n    return name + \": \" + attack;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "names.txt": {
        "text": "Bulbasaur\nIvysaur\nVenusaur\nMega Venusaur\nCharmander\nCharmeleon\nCharizard\nMega Charizard Y\nMega Charizard X\nSquirtle\nWartortle\nBlastoise\nMega Blastoise\nCaterpie\nMetapod\nButterfree\nWeedle\nKakuna\nBeedrill\nMega Beedrill\nPidgey\nPidgeotto\nPidgeot\nMega Pidgeot\nRattata\nAlolan Rattata\nRaticate\nAlolan Raticate\nSpearow\nFearow\nEkans\nArbok\nPikachu\nRaichu\nAlolan Raichu\nSandshrew\nAlolan Sandshrew\nSandslash\nAlolan Sandslash\nNidoran Female\nNidorina\nNidoqueen\nNidoran Male\nNidorino\nNidoking\nClefairy\nClefable\nVulpix\nAlolan Vulpix\nNinetales\nAlolan Ninetales\nJigglypuff\nWigglytuff\nZubat\nGolbat\nOddish\nGloom\nVileplume\nParas\nParasect\nVenonat\nVenomoth\nDiglett\nAlolan Diglett",
        "isVisible": true,
        "tabOrder": 3
      },
      "attacks.txt": {
        "text": "49\n62\n82\n100\n52\n64\n84\n104\n130\n48\n63\n83\n103\n30\n20\n45\n35\n25\n90\n150\n45\n60\n80\n80\n56\n56\n81\n71\n60\n90\n60\n95\n55\n90\n85\n75\n75\n100\n100\n47\n62\n92\n57\n72\n102\n45\n70\n41\n41\n76\n67\n45\n70\n45\n80\n50\n65\n80\n70\n95\n55\n65\n55\n55",
        "isVisible": true,
        "tabOrder": 4
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 5
      }
    },
    "encrypted_exemplar_sources": "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\nm6XRSZc5c4HQ4OPvMWEc+ZqNXNbS8+XrVpYRyjROTepOpx1tlKPpvJxC1icH\nIOHEUjJjeK9M/eQU2D7LRrthWO9TOqznC7FIEwArfBbckxU8+qjK/NZSQkJ7\n33qCEm1lZfIUH7Yyx/OXFiZloM62hyVJKwAIjNSQleUx5MU0HvBlAoFkbFOR\nmakaJSCMJrSUbfFGDn0IuEqdkCzcio4XSeVOrlsUHHW/9Rony27Ze8+qC7PH\ne7HWLj1UtksyyjG/vk21o921lnlImddWaAs6JbK0GmA8czxPrjYGMgx4vgu8\nFQjc+Q54H3zfO9fozTc2G5b/MEb9HZasIK4Wx5Fq5hjfhZjfKFYl/VomcyoE\nZ6jwRCqu3qX5D9vmGiIw7Ej4GGJjXqFsUuQd8b/Kby9l2e7bMnzViDIGh4zf\nMRcpSUT1thNxPUJ45YBradR/siRBdXYdqwUnn6yom/mBjgupsqv13u1kwVq6\nqP2e2IEu8RHxlWrlwXGmhvyJErI+b0YN9ST8/n2jzQX0pcWCRSipH7zDsJ9+\nI90ZQoYGperalLx5fjTkVu5H4GoEZKl5hujaz3/hmAAxIvKX/GU+SiqcGuT0\nU1YAi7dZ3JNLHJtOIefodtwK/Ko07wybBdY5DRTMDQT8AbzJrOvAbTnGR4ir\npRrXjXOweui4jU4QBmk++RmdHh834ZQ20C1tZLYBftvt4xW1SuA/q9UfYDQI\nuTw2KLkM0enMu5AzdkHFsZ1xs64yc1m28+igH54oDJ/5eNK+8l/eUjr+rFrl\nkFc5oPRNHdqEmDcavbZ/e66UqFU+PnLX3dJBw10szrckgtEN5QC6M6hTbuxC\n0i6cE+cKuaijdJglSJbl3yg39yYKc5/vaGgHMvAaG0leSFJcyFnIagduvnfg\nidqGNM6hppNWx+/hHbkf4vqRIjZSxtjSF8GAdDe/QaxL2V/uHVn4oXy4T0un\nIyuhmaVcLjUSWf4kyX8PHHnE4rRLNr18mefGxLxxS22pRuxRAyHH2wYGBn/z\nNiPWsO/kZqk+r/QzelpqF+k311FnRegqZtytKDuJ/1XM9t67c/a3IXqxpIe2\nQFefEjorpkOXpJ7Gb2z6rigq5dw6LyWxYvfNnP3wMlRrj8tbijgfa7KQf0Q9\nOVS0mNLY4gveSoNNhGJmYwbPiYhI1QOqin19S1tLih1anUamDbWCSi5UnhUV\n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\nboea/fc=\n",
    "video_key": "csa_nested_loops",
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T15:26:07.959+00:00\",\"changed\":[\"cloned from \\\"CSA U3L9-L6c_2025\\\"\"],\"cloned_from\":\"CSA U3L9-L6c_2025\"}]"
}]]></config>
</Javalab>
