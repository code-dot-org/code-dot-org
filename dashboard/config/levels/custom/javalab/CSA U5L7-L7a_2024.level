<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-12T21:01:45.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "When algorithms are used to automatically generate short summaries of long documents, sentence length can be an important factor. One approach to generating summaries is to extract sentences that are a certain length and contain the most important information.\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TextProcessor</code> class has an instance variable <code style=\"background-color: #ececec; color: black; font-weight: bold;\">documentText</code>, which is a 2D array containing the sentences in each paragraph.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TextProcessor</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countNumWords()</code> method to count and return the number of words that in all sentences that are of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">targetLength</code> and starts with the letter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">startsWith</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TextRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">countNumWords()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">length()</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">indexOf()</code> methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Document Summaries",
    "bubble_choice_description": "One approach to generating summaries is to extract sentences that are a certain length and contain the most important information. Count and return the number of words that are in the sentences that are of a specified length.",
    "thumbnail_url": "https://images.code.org/3f3d08217a0fb4116e3afdeb8be2fe38-documents.png",
    "encrypted_validation": "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\nyY7RnRc3Y4uxQQ==\n",
    "encrypted_exemplar_sources": "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\ntyqFqDO6CQgzE6mhNaUsiOPqZwQAmyx7\n",
    "start_sources": {
      "TextRunner.java": {
        "text": "public class TextRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of sentences\n    String[][] sentences = { {\"The\", \"quick\", \"brown\", \"fox\", \"jumps\", \"over\", \"the\", \"lazy\", \"dog\"},\n                             {\"She\", \"sells\", \"seashells\", \"by\", \"the\", \"seashore\"},\n                             {\"The\", \"cat\", \"in\", \"the\", \"hat\", \"went\", \"to\", \"the\", \"mat\"},\n                             {\"To\", \"be\", \"or\", \"not\", \"to\", \"be\", \"that\", \"is\", \"the\", \"question\"} };\n\n    // Creates a TextProcessor object\n    TextProcessor document = new TextProcessor(sentences);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the countNumWords() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "TextProcessor.java": {
        "text": "/*\n * Analyzes document text\n */\npublic class TextProcessor {\n  \n  private String[][] documentText;     // The 2D array containing the sentences of a document\n\n  /*\n   * Initializes documentText to the specified 2D array\n   * containing the sentences of a document\n   */\n  public TextProcessor(String[][] documentText) {\n    this.documentText = documentText;\n  }\n\n  /*\n   * Returns the 2D array documentText\n   */\n  public String[][] getDocumentText() {\n    return documentText;\n  }\n\n  /*\n   * Returns the number of words in the document text that have the\n   * same length as targetLength and start with the letter startsWith\n   */\n  public int countNumWords(int targetLength, String startsWith) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array documentText. Count and return the number of\n     * words in documentText that have the same length as targetLength and where\n     * the location of startsWith is at index 0 in the String.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n    \n    return -1;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2024",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:01:45.704+00:00\",\"changed\":[\"cloned from \\\"CSA U5L7-L7a_2023\\\"\"],\"cloned_from\":\"CSA U5L7-L7a_2023\"}]"
}]]></config>
</Javalab>
