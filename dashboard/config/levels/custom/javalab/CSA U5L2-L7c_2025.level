<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:13:30.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A researcher is analyzing the cost of living for several countries and set the last row of the 2D array to store the average of each column.\r\n\r\n✅ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Research</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverage()</code> method to calculate and return the average of the column at the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">columnIndex</code>.\r\n\r\n✅ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ResearchRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverage()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n💡 <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ⬆️ for help with accessing and modifying elements in a two-dimensional (2D) array.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_working_with_2d_array_elements",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Cost of Living",
    "bubble_choice_description": "A researcher is analyzing the cost of living for several countries and set the last row of the 2D array to store the average of each column.",
    "thumbnail_url": "https://images.code.org/3a3ff35ba1f4b2af256d44fd0e39fc9d-budget.png",
    "encrypted_validation": "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\ney/+LlV38TV8P1Vh33YW9BSETQ==\n",
    "encrypted_exemplar_sources": "obKvvvjp1mU+Ik6V6OGLx+XFzgGl7tjkqbAbMCErpCvVeCgNpw1M9+PhSxE3\nHATROmdeJMBajnzwP7zl64XTg4/6GicnILiXGKacsNGFnuETlBxNCorVCngP\nSO30inXd9nigBTj5rog0BI/p8jABRWFDlsrno7TK0Cn6wMPXVhYX6q4pgRnS\ngLZQ1PixpCL5bfXBys/zZEsaV9BNF3AdwmdLqQjl5N2PjLc16utp/kYxma71\nNlXId025XFFShjNaMn72+zUy+I8PaJQFa/Kdon1mV+/Mcu1ucbX/N5SFyB+4\nn+33OoHG+3RVnSYGs2TcawC4jdPVbIjVVUasX94UsfL8l35iZAiKAWtSexI7\nK7uSV2lGN+/+6mbPSCBADFCSEB/IbEKCRaUHxO590EUUxb0x/Ry9oA7HPVou\nQL8HxwCjARPB9zl8Xc4SQKk4nSC4t6LyOzQ0PrG5Sunu+f4tONCDYQ3TSdrJ\nlsVglgJGxm4Yp+SYixu/dAIp/ULn2ItJxq3uXTl6Q9CiwFkxSImP8a+XLFiG\nX8mNTBUAaLdO2v+eUhaeruuaEFLQWwOifT1IFfHaASi+xLVUO0ihc8QIC/Lp\nZrxqu1veFQQbPCyTDnv8kjEZNDX4WsCLe2shg/QUTNMBZ4gWLrCXoK8fggqs\nXQLJxqdWrBfGBYXyURhsVCVcFGs0/19IxyMC1s5GbaHzV8vAagLMguzaiTs6\nMz5pJszB6hbrPxxWtEtW8jMPHCJzhCABydTmef977kUYx0deRjKA3bYTbQuB\nMyZrO1Spnci7FuFiK67pPRDpe1jA5pFnx6+eyKdBFu7LqRAwYdckAiGmdFgp\nFd+I7yVxY6CX9VxGPaqryNqkLH7s84ld687fuUE9urzZrSZwcVI77v1rOSbj\n0kyCsmf0l7ynI6pRANNGbHinbaBCmOzUlgIyH+L3or3jXrrKs3t0G1wEa68Q\n1lNsq7XQeZTGPd+k6iIYed7/HYD9q5mEgWMzGqG/vtOG8cv1J5Y4vpqpZfTo\n+6qGeAfSQBr2h2jzbHSVbOvuJ1jEiLi9iU1r+nQMKF3SNKFnsMBvMikh9Pbg\nYVwZMZAcUn6Sod9zA0BShdUlwTCCLG2Hfc5Y925GF5BlOCngbAFHSo2d13uA\nVuwS6Njvoa34JOoGSY77x765AqOdPQDdJWhmZY2PUA1jTtqraZXi0WfS00e8\nYfdRIs7Ej6zyx7+/byNAJlHWPhlLDN1z5+w+MxeNY6tUe85lvhPxEDV+6r5k\nSaosz4r/1rwh9frF/U1GP++noo/xzsQ8+6EO3kHv1UTCN/FqFNl8F6D11RLD\n413RmJO/R3I+gc4/YDdhFXf2LfSE7+rJIwvGYg2oMnKaYv4OrdS8wl2uSIk3\nx4xUL2r6HBa+l8xSZlIFef/rPrvsLOukvwV9bHcgBcPk6eesa6eEH2JwRCyc\nf/AVaLCsmN8/UZpoNhD0BKvjd8xDxFveA7+OziMo6c4gtfGISjcW0E9RMMrR\nOYJjEHC52SOmjVkwdjGKkyaoFrlNYq6KTHJdp29nltn90M8EQdTFSFy4GoHo\nlJBedf90qdJm7jqg8TUAlKaaiF417a+lyTV6Vzvvo6+ZJaCbDvpUalpwO0IM\nBDP27R0xT7w3yy824Sow3uZm2jkFN3gjJVo5WSF83T/6wkHynxQKovU2uhdA\nWMvnT0KAEMJw7oFMQ3ChoCcoGbzABjE39eICftD1Lk84Ss2YtTUF2ZO8ASX4\n3MB9/BFDT6SKNmhjFmCa67q/ftvZiGnDEug0FazoaldHI83yV6j4i949shpI\nRG2hkRjrF7ICen11jd07/DnYSj+daHEOnwEDwFDRYGfSZXI6qAnCL/sXEUuq\nsTFwcXtjWDdE04Trngao2wjsiXeceS1TQOEiL5HU9aArwK8/MD+yajk+yFJG\nSb/S95y6y9hoAUaLf1XBPSHn/zvzJisy7fWFtt2HpQTymgrUa/RTvBodiAqC\nrhqvgZD7IboxK/UtZVelhm3NeUSBxr/XV1CWOfuAspycBqU5BlkuiSeI197D\n5b/+F+vFGQp6pC/BOwt4O7tqTja6X9cPTFvLDT805tmu79mbHAaC5uqIF9mD\n6reXPmSUfZ6HxUjqA4KgNyKh+Nt1t0gVwtsYy6vA5D9oKfX63UfYU+cAPmvu\nABG7EAbFwZMJSp/G6dAk+Pw0c4jyVV4ih29f9CiANfkfFfwzvFzL2eKSA7X+\n+t0lsIbP2AgJCYe1qPLAwEudZI609mHamlT+rJwo2/0yrXCqDvBXz5hF4uVQ\nzgYGLl5iDGAb7/2jStfagCeyOih6YH5Vur9Na3UVyuuxxZ1d6pTzbhAOyZfn\nCvnhUx/o9h8LZhopuna/jrrL+Sf/mJhj/kQXHJMMBzEUXshplSWdk/8EF2Tc\nwKjRQaf6IM1pifQVjO6uFyLhCt49uy1K4EdaOr17FmHv7ZpYooP4TNLp+rUJ\nJVIGb8k7Kr3WrfYQzmMLIk17BOYNtfsyChz/0tEHleNLWPNCsr73Y43GVC6V\n2TRCdJNXsdrE820M4n7BWUFrI0BU6LkKT779S6K+H7SG+6Ar378Lpj2CgYla\nQqnyNzY/t/c6QJgKFuIw771WEN1ZVrpN8/6VUruVAjaxmq0XYtxzCc1Fxwy3\ndgrgzeA2ZGaPlk7S+FtckkxHlTRFfVsogzzNAUgFw+ZvCtnKEPhns0/dcV0P\njKw/48fGaev5CuLUoGjIrl18bXSAJ1QjnCyPbuEBFwL4S3vxZTmlCo+lNQVu\nLzKuWCuv8KkL+g==\n",
    "start_sources": {
      "ResearchRunner.java": {
        "text": "public class ResearchRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array containing the costt of living index for multiple countries\n    double[][] values = { {70.22, 84.12, 74.13},\n                          {24.43, 66.47, 77.03},\n                          {70.13, 30.71, 69.65} };\n\n    // Creates a Research object\n    Research analyst = new Research(values);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Call the calcAverage() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Research.java": {
        "text": "/*\n * Analyzes data about the cost of living in different countries\n */\npublic class Research {\n\n  private double[][] costOfLiving;     // The 2D array containing the cost of living index for multiple countries\n\n  /*\n   * Initializes costOfLiving to the specified 2D array containing\n   * the cost of living index for multiple countries\n   */\n  public Research(double[][] costOfLiving) {\n    this.costOfLiving = costOfLiving;\n  }\n\n  /*\n   * Returns the costOfLiving 2D array\n   */\n  public double[][] getCostOfLiving() {\n    return costOfLiving;\n  }\n\n  /*\n   * Calculates and return the average of the column\n   * at the parameter columnIndex\n   */\n  public double calcAverage(int columnIndex) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Add each element in the column columnIndex, divide by the length \n     *    of the column, and return the result.\n     * -----------------------------------------------------------------------------\n     */\n\n    return -1;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:13:30.439+00:00\",\"changed\":[\"cloned from \\\"CSA U5L2-L7c_2023\\\"\"],\"cloned_from\":\"CSA U5L2-L7c_2023\"}]"
}]]></config>
</Javalab>
