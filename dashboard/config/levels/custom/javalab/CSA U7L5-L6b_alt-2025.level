<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T22:11:35.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A music streaming app wants to implement a system that recommends songs based on the user's listening history.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getArtist()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Song</code> class that returns the artist of the song. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getThisArtist()</code> to get this artist.\r\n\r\n‚úÖ **TO DO #2:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getArtist()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">RecommendedSong</code> class that overrides the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getArtist()</code> method to return the artist of the recommended song. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getRecommendedArtists()</code> to get a list of recommended artists.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class, create several <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Song</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">RecommendedSong</code> objects and call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getArtist()</code> method for each object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with overriding methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "reference_links": [
      "/courses/csa-2023/guides/method-overriding"
    ],
    "display_name": "Music Streaming",
    "bubble_choice_description": "A music streaming app wants to implement a system that recommends songs based on the user's listening history.",
    "thumbnail_url": "https://images.code.org/bd5108d1cf8c07123281e3467fe670d9-music.png",
    "encrypted_validation": "+7wc3w0TDB/e0S9J10seb+WRxnxtdGR8Njh7kSZfrIB95TVL/Xixk3aFABzJ\nTDuOrAfayrTdbHPPml2F70UA1pvsscsqOfkdA0yAJ5dlyoayMqxzreSkkiSh\n8j3ekXuNRABpaE43cO3VkKZAG/REFk4LN1DFq/YSoD/l/KJW7TXcjypa1gd3\n7PpD71RWcojMHx9+g2FUFAo2T9DLdaM5fL4Co1f0lBOYLaP10nBZ3dwavcF4\ntFobWBb67pUJmlYNW62QO67pc5MHPEEhdYdQjHO8bFR7dpkPvOGmOwWqom9H\nP9j/CcIqyM+J8xtF8EB4dk92AfWNweKKVg13mKO0QrlfUBAgPAoRCDuWdaSq\nsmCMKz22IQOqxgEj9tb3ehHio/nQtDSewzXO5eD7RPfwnwJNlOWl6pS0zUxk\nEaGfeJhK4I0xkj94pVKqSz3AJYge2wT3TFEyn2RyIFVidylRa9as4df8hT08\nk2f+n2eHJ0x9F6+7G17pmaLO869JJtt01BVyrG7SY4wB8u9V5XlHSil38KwI\nGJZUcwYssu0YvpsIFhFVOrMic8rslko1Xl1APmD0xpraSuKNHrPESaieyr5T\nX0buh6I9NIlJYptABLko2prSxxxV4M7J34eCnbTrxg77IGw1ZZKvBBMrlsTs\nSwzoTfdBYN+KqdzaiEp4Jj+RH9VFxfo5jE5FgPaN/Qj/+7paHQdlQnRcD36R\nluNDO2a59/tMMnK8qpK396G14HzuHNGW+t8Pv8KxYrmyag66yhJv/gWv9NXK\nU65upN87IcIZ2C5dBACQ99cfv6jQ76eEoSjTN8ShymN/V2+e5BYWp4u4NDsD\ndIGHMmSUYNK4zMrV8wWUOQhfuaDY2NEpzYHI8bC4FogAp+/P1V2JuoEKKNer\n5mZPAcYMKorckSAWmSK9BhrxgcaqNwZSlyYkSg33C+wgyt58WrdMXom+Rh/F\n/0ogcJrinVHcN6Rsj3J2j8EKI/4HR8Y7UKsKTlP0Jyu13Bn7nG7uXivxbQH6\nXF600Fj6QO67w4Xa+t0Mkzn1BMULJa8jEvu7Lp/kyRjf+l8WJ0unHa+0VRy9\nK2IUm5T4S2gul11zoBw3EoXHpbNvO1EC+ynl4wJrNXj1WpFoOziA02oLiqsB\nmKXrXZBjW+HJpOxIICcNvXVPsuHXVAY/zp1xsQ5nZgsmFX/lEesFiPbHKiBD\nrV+Po1hzJTH2SJW9JVhRu54DqPVFEq81NrbUjbtSBNNLmhFRWzPy6nQmj0h2\nUfVbe0YC5LVhChCp8t75XaEEsgKaRB7LRnDrLm/utWG9lA62diAijqyUNzBB\n94BMEt58CQ/7M1rB/hC977Zi/OyvvbAc7LDgTbeEA2PAKvhPpS/HFByGvh5v\nW1NYTolf26TK+l30ZlvzdI13U7FpC91G55TclnETMXE6vtILG3PdbAgcZJOp\n1SosnXNa0pHFD4RPPcMN957qXtPoxsSGKy4lWWJ0cF+AwKzjEaTCz9MJRJ+J\nx3n5OmcfJGsGrN6oBeUbNSY+e8G2/DvXbag4hJoInTHAvYg7m91OZwQ7XzGs\nMP17jHUKmyRo4HyUHE4QpwQRL99SSd9KhjiHoAdnxNMB1jsUYQOS7MDapuml\nft58MtvJzwbReUwYcj1Qu9EUxIFzdAYYAuZaltuLc3jDHY5gwTFuASiJDxrB\npCQdhIrajPr8L2lBFqNgbBR+9C4QPDsmTaZR+nRcHK1i/4T9gHNltutSp9gr\n0HgAExTBXJY5rH8s/k0WWzbRBWEGsqogHFLtZFmNoJsuIjS40xCeqXRUE3Ss\nfbRbWHlu9f3RHFdoLQuE0xwWJSh0wJooveCMJjMbgWsL2aGmy1NDRqnkMeCS\npogyx9KB2wBmVcBWmA==\n",
    "start_sources": {
      "Song.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a Song\n */\npublic class Song extends Scene {\n  private String artist;       // name of artist\n  \n  public Song(String artist) {\n    this.artist = artist;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getArtist() method to return the artist of the song. The method\n   * should call the private method getThisArtist() to get this artist.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  private String getThisArtist() {\n    return artist;\n  }\n\n    /*\n   * Draws the result in the scene\n   */\n  public void drawResult(String artist) {\n    drawImage(\"amplifier.png\", 0, 0, getWidth());\n    drawText(\"artist \" + artist, 100, 250);\n    pause(0.5);\n  }\n}\n\n",
        "isVisible": true,
        "tabOrder": 1
      },
      "RecommendedSong.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a RecommendedSong\n */\npublic class RecommendedSong extends Song {\n  private ArrayList<String> recommended;      // list of recommended songs\n  \n  public RecommendedSong(String artist, ArrayList<String> recommended) {\n    super(artist);\n    this.recommended = recommended;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getArtist() method that overrides the getArtist() method to\n   * return the artist of the recommended song. The method should call the private\n   * method getRecommendedArtists() to get a list of recommended artists, then\n   * randomly return one of the artists.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  private ArrayList<String> getRecommendedArtists() {    \n    return recommended;\n  }\n}\n\n",
        "isVisible": true,
        "tabOrder": 2
      },
      "TheaterRunner.java": {
        "text": "import java.util.ArrayList;\n\nimport org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Create several Song and RecommendedSong objects and call the getArtist()\n     * method for each object. Call the drawResult() with String returned from calling\n     * getArtist();\n     * -----------------------------------------------------------------------------\n     */\n    ArrayList<String> recommended = new ArrayList<String>();\n    recommended.add(\"Beyonc√©\");\n    recommended.add(\"Taylor Swift\");\n    recommended.add(\"Bruno Mars\");\n    recommended.add(\"The Weeknd\");\n\n    Song s = new Song(\"my favorite artist\");\n    RecommendedSong rec = new RecommendedSong(\"another artist\", recommended);\n\n    \n\n    // Plays the scene\n    Theater.playScenes(s);    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "starter_assets": {
      "amplifier.png": "b708f060-d1b8-4e4e-9d5e-0ae42e4492dc.png"
    },
    "name_suffix": "_alt-2025",
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T22:11:35.150+00:00\",\"changed\":[\"cloned from \\\"CSA U7L5-L6b_pilot-2025\\\"\"],\"cloned_from\":\"CSA U7L5-L6b_pilot-2025\"}]"
}]]></config>
</Javalab>
