<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `MovieTracker` class creates an `ArrayList` of movie titles from a file that contains a list of movies that are famous for CGI.\r\n\r\nThe method `recommendMovie()` is intended to recommend a randomly selected movie from the list, but it has an error! Fix the error so it produces the intended outcome.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.io.FileNotFoundException;\n\npublic class MyConsole {\n  public static void main(String[] args) throws FileNotFoundException {\n\n    MovieTracker movieList = new MovieTracker(\"movies.txt\");\n    System.out.println(\"We recommend \" + movieList.recommendMovie());\n    \n  }\n}",
        "isVisible": true
      },
      "MovieTracker.java": {
        "text": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class MovieTracker {\n\n  private String filename;\n  private ArrayList<String> moviesList;\n\n  public MovieTracker(String filename) throws FileNotFoundException {\n    this.filename = filename;\n    moviesList = readFile(filename);\n  }\n\n  public ArrayList<String> readFile(String filename) throws FileNotFoundException {\n    ArrayList<String> fileList = new ArrayList<String>();\n    File movieFile = new File(filename);\n    Scanner fileInput = new Scanner(movieFile);\n\n    while (fileInput.hasNextLine()) {\n      fileList.add(fileInput.nextLine());\n    }\n\n    fileInput.close();\n    return fileList;\n  }\n\n  public String recommendMovie() {\n    int randomIndex = (int)(Math.random() * moviesList.size());\n    System.out.println(moviesList.get(randomIndex));\n  }\n  \n}",
        "isVisible": true
      },
      "movies.txt": {
        "text": "The Perfect Storm\nPanâ€™s Labyrinth\nThe Curious Case of Benjamin Button\nInception\nKing Kong\nThe Day After Tomorrow\nTransformers\nPirates of the Caribbean\nTRON\nThe Matrix\nThe Lord of the Rings\nAvatar\nJurassic Park",
        "isVisible": true
      }
    },
    "encrypted_examples": "f0IsrdHx9oayOAswvXWYgoG/TL5XtGZ+9azHHlFb/tP0qO790WjUelWax+V/\nOrnEj/EFoKo/OYwGMPiOKf7m5vtlLozZG9FBoK2Y95MzfKc=\n"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2021-12-04T23:06:34.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2021-12-04 23:06:37 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-04 23:22:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-04 23:25:51 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-04 23:26:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-10 15:30:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
