<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-02-17T18:15:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nExperiment with the program by making the following modifications, then run the program to observe the results.\r\n\r\nâœ… **TO DO:** Experiment with the program and answer the questions on the <a href=\"https://docs.google.com/document/d/10Un92F40-zG7Z3OXBpkLJD43ZqAiFB-2opOOKfIiIBs/edit?usp=sharing\" target=\"_blank\">**Investigating The Theater**</a> activity guide.\r\n\r\nChange one line at a time, then run the program after each change to observe the results.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "starter_assets": {
      "smiling.png": "d15f62b0-0b05-43de-95c9-c42956304edc.png",
      "surprised.png": "2f27b317-e3ec-4811-97d7-1e713955f311.png",
      "cool.png": "a5cfb3fc-a26a-462f-b52a-80d0c3d46a7f.png",
      "guitar.wav": "2a560a69-509b-49f9-a688-7b388c850bf3.wav"
    },
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    String[] emojiImages = {\"smiling.png\", \"surprised.png\", \"cool.png\"};\n    EmojiScene emojis = new EmojiScene(emojiImages);\n\n    emojis.drawScene();\n    \n    Theater.playScenes(emojis);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "EmojiScene.java": {
        "text": "import org.code.theater.*;\n\npublic class EmojiScene extends Scene {\n\n  private String[] images;        // The 1D array of image file names\n  private String guitarSound;     // The guitar sound effect\n  private String background;      // The background color of the scene\n  private String clearColor;      // The color to clear the scene with\n\n  /*\n   * Initializes images to the specified 1D array of image file names,\n   * sets guitarSound to the guitar sound file, background to \"orange\",\n   * and clearColor to \"white\"\n   */\n  public EmojiScene(String[] images) {\n    this.images = images;\n    this.guitarSound = \"guitar.wav\";\n    this.background = \"orange\";\n    this.clearColor = \"white\";\n  }\n\n  /*\n   * Draws the scene\n   */\n  public void drawScene() {\n    drawBackground();\n    drawAllEmojis();\n    playSong();\n  }\n\n  /*\n   * Draws and resizes an emoji while its size is less than the scene's width\n   */\n  public void drawEmoji(String filename) {\n    playSound(guitarSound);\n\n    for (int size = 100; size < getWidth(); size += 100) {\n      drawImage(filename, 50, 50, size);\n      pause(0.5);\n      clear(clearColor);\n    }\n  }\n\n  /*\n   * Draws each emoji in the 1D array images\n   */\n  public void drawAllEmojis() {\n    for (int index = 0; index < images.length; index++) {\n      drawEmoji(images[index]);\n    }\n  }\n\n  /*\n   * Draws the background for the scene\n   */\n  public void drawBackground() {\n    setFillColor(background);\n    removeStrokeColor();\n\n    for (int yPos = 0; yPos < getHeight(); yPos += 100) {\n      for (int xPos = 25; xPos < getWidth(); xPos += 100) {\n        drawEllipse(xPos, yPos, 50, 50);\n      }\n\n      pause(0.3);\n      clear(clearColor);\n    }\n  }\n\n  /*\n   * Plays each note from a 1D array of notes\n   */\n  public void playSong() {\n    int[] notes = {69, 69, 65, 62, 62, 67, 67, 67, 71, 71, 72, 74,\n                   72, 72, 72, 67, 65, 69, 69, 69, 67, 67, 69, 67};\n\n    for (int verses = 0; verses < 2; verses++) {\n      for (int index = 0; index < notes.length; index++) {\n        playNoteAndPause(notes[index], 0.2);\n      }\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "ai_tutor_available": true
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T18:15:04.744+00:00\",\"changed\":[\"cloned from \\\"CSA Investigate Level Template\\\"\"],\"cloned_from\":\"CSA Investigate Level Template\"},{\"changed_at\":\"2023-02-17 18:15:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 18:50:52 +0000\",\"changed\":[\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 19:00:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 19:05:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 20:03:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 20:03:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 20:18:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 20:23:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 20:31:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 20:35:43 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 20:51:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 20:55:28 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-27 21:19:04 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
