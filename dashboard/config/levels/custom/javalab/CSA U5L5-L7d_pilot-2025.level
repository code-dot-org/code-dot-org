<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-08-02T18:16:34.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A social media analyst wants to create an animation to visualize the number of social media users on Twitter, Facebook, and Instagram for 2018, 2019, and 2020. They have a 2D array that contains the following values\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nRow 1: 1318, 9021, 2755\r\nRow 2: 1330, 9736, 3586\r\nRow 3: 1358, 10841, 4031\r\n</pre>\r\n\r\nwhere each row represents 2018, 2019, and 2020, respectively. Each column represents the number of users for that year on Twitter, Facebook, and Instagram, respectively.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SocialMediaScene</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getValuesByYear()</code> method using enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loops to return a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SocialMedia</code> objects that match the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">yearToFind</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getValuesByYear()</code> and pass the 1D array returned to a call to the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">drawScene()</code> method.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a two-dimensional (2D) array using an enhanced <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "video_key": "csa_enhanced_for_loops_and_2d_arrays",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Social Media Users",
    "bubble_choice_description": "A social media analyst wants to create an animation to visualize the number of social media users on Twitter, Facebook, and Instagram for 2018, 2019, and 2020.",
    "thumbnail_url": "https://images.code.org/ebc1bb29842a77a0606f3d036bcba30c-image-1651171229830.png",
    "starter_assets": {
      "facebook.png": "89557170-2878-45da-a08b-e0189d2c73bf.png",
      "instagram.png": "975c4eeb-d177-4a4f-8410-1b618f8502b1.png",
      "twitter.png": "1c0eb427-6999-4d0d-86f6-06781ab5e436.png"
    },
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nYLeGbIbk4o+ad50QbC8mKA/U\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of SocialMedia objects\n    SocialMedia[][] socialMediaData = \n        {{new SocialMedia(\"Twitter\", 2018, 1318), new SocialMedia(\"Facebook\", 2018, 9021), new SocialMedia(\"Instagram\", 2018, 2755)},\n         {new SocialMedia(\"Twitter\", 2019, 1330), new SocialMedia(\"Facebook\", 2019, 9736), new SocialMedia(\"Instagram\", 2019, 3586)},\n         {new SocialMedia(\"Twitter\", 2020, 1358), new SocialMedia(\"Facebook\", 2020, 10841), new SocialMedia(\"Instagram\", 2020, 4031)}};\n\n    // Creates a SocialMediaScene object\n    SocialMediaScene scene = new SocialMediaScene(socialMediaData);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the drawScene() method with the 1D array returned from calling the\n     * getValuesByYear() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    // Plays the scene\n    Theater.playScenes(scene);\n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "SocialMediaScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates an animation to visualize the number\n * users social media platforms have each year\n */\npublic class SocialMediaScene extends Scene {\n\n  private SocialMedia[][] userData;     // The 2D array containing the number of users for several years\n\n  /*\n   * Initializes userData to the specified 2D array containing the \n   * number of users on each app for several years\n   */\n  public SocialMediaScene(SocialMedia[][] userData) {\n    this.userData = userData;\n  }\n\n  /*\n   * Returns the 2D array userData\n   */\n  public SocialMedia[][] getUserData() {\n    return userData;\n  }\n\n  /*\n   * Returns a 1D array containing the SocialMedia objects\n   * that match the parameter yearToFind\n   */\n  public SocialMedia[] getValuesByYear(int yearToFind) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 2D array userData. If the SocialMedia object's year matches\n     * the yearToFind, add the SocialMedia object to a 1D array, and return the\n     * 1D array containing each SocialMedia object for that year.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n\n    return null;\n  }\n\n  /*\n   * Returns the image file for a social media app\n   */\n  public String getImage(String appName) {\n    if (appName.equals(\"Twitter\")) {\n      return \"twitter.png\";\n    }\n    else if (appName.equals(\"Facebook\")) {\n      return \"facebook.png\";\n    }\n    else {\n      return \"instagram.png\";\n    }\n  }\n\n  /*\n   * Creates the scene by drawing the icons for each social media\n   * platform and number of users that year\n   */\n  public void drawScene(SocialMedia[] results) {\n    for (SocialMedia app : results) {\n      String icon = getImage(app.getName());\n      drawImage(icon, 100, 50, 200);\n      drawText(app + \"\", 75, 300);\n      pause(1);\n      clear(\"white\");\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "SocialMedia.java": {
        "text": "/*\n * Represents a social media app\n */\npublic class SocialMedia {\n\n  private String name;     // The name of a social media app\n  private int year;        // The year for the number of users on a social media app\n  private int numUsers;    // The number of users a social media app had in a year\n\n  /*\n   * Sets name, year, and numUsers to the specified values\n   */\n  public SocialMedia(String name, int year, int numUsers) {\n    this.name = name;\n    this.year = year;\n    this.numUsers = numUsers;\n  }\n\n  /*\n   * Returns the name of the social media app\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the year\n   */\n  public int getYear() {\n    return year;\n  }\n\n  /*\n   * Returns the number of users the social media app had in a year\n   */\n  public int getNumUsers() {\n    return numUsers;\n  }\n\n  /*\n   * Returns a String containing the name of the social media\n   * app and number of users for the year\n   */\n  public String toString() {\n    return name + \": \" + numUsers + \" users in \" + year;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "name_suffix": "_pilot-2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-08-02T18:16:34.793+00:00\",\"changed\":[\"cloned from \\\"CSA U5L5-L7d_2025\\\"\"],\"cloned_from\":\"CSA U5L5-L7d_2025\"}]"
}]]></config>
</Javalab>
