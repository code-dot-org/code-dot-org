<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-16T23:54:42.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Startup</code> class represents a startup business that appeared on the TV show *Shark Tank* and has instance variables for the name of the company, a description of the product, and whether or not the company got the deal.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Startup.java</code>,\r\n\r\n1. Declare and initialize a static variable called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">numStartups</code> to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0</code>.\r\n\r\n2. In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Startup</code> constructor, increment <code style=\"background-color: #ececec; color: black; font-weight: bold;\">numStartups</code> by <code style=\"background-color: #ececec; color: black; font-weight: bold;\">1</code>.\r\n\r\n3. Write a static method called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getNumStartups()</code> that returns a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the text <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"There have been {numStartups} startup pitches on Shark Tank!\"</code>, where <code style=\"background-color: #ececec; color: black; font-weight: bold;\">numStartups</code> is the number of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Startup</code> objects that have been instantiated.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">StartupRunner</code>, create several <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Startup</code> objects, such as:\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\n* Company Name: Touch Up Cup\r\n  Description: paint storage cup\r\n  Got Deal: true\r\n\r\n* Company Name: SparkCharge\r\n  Description: portable electric car charger\r\n  Got Deal: true\r\n\r\n* Company Name: GarmaGuard\r\n  Description: germ killing spray\r\n  Got Deal: false\r\n\r\n* Company Name: Rumpl\r\n  Description: high performance blanks\r\n  Got Deal: false\r\n</pre>\r\n\r\n‚úÖ **TO DO #3:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">StartupRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getNumStartups()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring and initializing a constant and writing a static method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/constants",
      "/courses/csa-2023/guides/static-methods"
    ],
    "display_name": "Startups on Shark Tank",
    "bubble_choice_description": "Use static variables and methods to keep track of the number of companies that have appeared on the TV show *Shark Tank*.",
    "thumbnail_url": "https://images.code.org/67f26bdaf9422455d10794f01a572f76-shuttle.png",
    "encrypted_validation": "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\ns6nByV1E0bBykOh0/OTg0qbebyQlmnuPUlAHiQ4A/Pk4a7UXl9RhKb0izKlI\ntYXj81DKlmB32Y8o0Y/LZf9SJ6eIz72f9MtDc8U15sSlTcR7gEMs1nEPZrKs\nhTDQj7xvYAR4FN52sYVmj9IOiz0eq2rxiUZWKlsr9YC5wQ1CyaWXDbruslcs\n7ffSmhXGSUBFUKdQlICb+ZNoMUbaqIhRo+sLt0M+YyB2oj8bYpqh9B/YfTSy\nKMMA7YEJNfOtqfyTUW26//8S13Z5jjA/80SKumchhwp9JCr84qmbeHEdE/6z\nR+jyx0GBQdKzVi51DFv0ELv/IaaGoAFMwBh7qITIgRJwvjxncMNF7PVPTiwJ\nToTE6key8em6he3+L5XcJ8PV6Oeo7VaPuHyfJW2HxGSaR6xe3OP1WWSOxY21\ncIGFV1Mhn4ddXgAXezN9QIXlMMy4XbIoPJW9FDymME6BE6QSTPO96AdFISy0\n4iKWbB0Q/4sDxtbHeVC5hf65qlqEmC6tA35k+FWQiQOIqBM+rp/6U8y/4QEl\nj0Nl4Ix+eBOzpc5sI47JD285TUuHLwAD8WjvALOUrH0DlQgy+RHqOGdSmlVE\njHflt49mdg93dthIOscsBDfbvSEAnN3MOqmqFlFJecn3SoX6itZgBFVXfYCQ\nYmTAeouOHni3crX/zX2mjqXVsmC1F+Tu+pdw3H3vB1nOl38bhKbCCt7pH44i\nNAVaM4dNRqGE5XsHn0vVIqmxHbTgvbxHNH3FrluLDvwYYKwwjv+OrfR0iwaY\nxPrx/2Uc/ewqVI015vHRezate4FMv8N/b18D2NXwHiJD+85Jk3uwJI2XdZm9\n5h8NZaK/EJlL56Kc5FE0C3jt0Yk+S9sR2GuYcLEjOz/VQrWoXkPOT+gR8th5\nqTEBQ8ogJOB3LN0L6XcSb1O07MQZWXKwlvwnCUPbXMezqGOrOnXeHp6nNuyp\n2VsyfG8tuWNvHJF7l60pn4sAakb493w8zi6UD0nrxiqkJfQxagO5hBrstgTY\njuDHhaB1qd00tplvKF4iTPQyQEP+ZfkpTE5D/V1I0PCd6yy/xZxSdzdYxDjw\no7cJfCYz3pH4LdwhQu8/x3XlllA6siyHxcBGzxgXc1QutpssbsODA2jdBFTh\nRYtO/4IGcCPv9O1zHsnyNGV3LnFgh2s7/hgc8N6nrBc1rIMJm3PCNO+e3yi+\njb12QD4KxDMrkAZdLuvg58+hqRiSfE4EkletfwBqcl02QWyt302iyJmnvF+7\nAIDq/I/e1RS+eyTbSYnXCLYDWqtS2wG0wOGiBGrQOfoYVgabnD3KWYZYo2IY\nHg6VcZKi5oTyVC39gk1QHUDUkvROkhPVEmCZNmtySzKmwcVwo3p+jfIZdsNE\nGGbbbGDqB6pcBJbivDSzcs7+I9tIWziUhplCiRdKRF0jmzIQ2OFmaN5XQWzk\neMuJ3UF5EnkpWDJp3pcDZHnZR7Nbv4CnmQCf3vr58YPWHV6/hpFCbuxuUGS8\nuykmprZZ//i8CEawerbg8qSO6gsIHQ0aFqTprUr/KuGMkYNWyIGvN5WTVfsj\noswqROUXJdQzQqnctbOfnEhsn8Qguz6R3F73D62b8YIQc4PNuaQu35HfXC5o\naMMkmuE8n7cxcYDG1IVgbfKlwWdpLqhy52iL6zf0rQoWvFR6FkNn7HBNTkMG\nJ33Eq9oVJi6xwwE6ygjPB7IUE9xwPwMxO0UknBMKPib9zSNieeKuuRh4sFPm\n+7h/P3ThqjxvtlFvKaZD4q9WBItl+Fa0KlktTwTZSdB3KJSFH5KJpWkHdmSw\nacRvDyimfF7dpKacpBvYy9AMlaQnvf0IXt818PUbXzLB/h5SYMzUWR6BUkLF\nOAX5SFEmSC2Db24V1Y2uipDzqLs7YXKfy4mrF/U9RvIjmEdarky/sq2/0rhK\nLcW+BZqJgG/AFw959JDRDZ3oH/kTpPwuIZjCifvZ26koNlI6XdqKFdko+L0S\niWQGGgYEfOHmUaekOvsdYpXwfGAHDA133z4F2773xWBzEBZ7mk3GwvzCIryg\nR8oS1Ons3XC5bUJxyQ2cd/BO8QZJpnx+n8YGytEvu9s+LffwRBaJOH3zwvwp\nzDqhafqG7Nct5wzc+RmEsJORZSlsjjaQmQx7gv/EvrbHo9lshDhtJooH2T1t\nMZPsc6DK9rdwy8vCWgW3MBRuPZRp4YAIowGfVmoZGlP3kAzsTAJp5d7Yl2OU\nWaachDEduQ6uprZZtxN+1MVbTrmiuMSRIw9b0JPaOsC/nNU73Kwv+frN6zcQ\nsMQdIazvQq7kue6as3rdAxFZBbCaiwBYu+QFxHakDwFMTSWzBTu9cwdsgmu1\neu8ujhTKXx2BJ8dez+Rirh4xyml/s9xMzf5QlFsf9hZ6rhzZe0EMB/8EFIjR\nWGOWgWtWbO3bIIb8YTFGS35zlaG74BD30ByWJv9APuzuzsJWxBWI7nTAc8b5\nvMECrPDJ241uf3PcdXzsteuBKPpN6TQE3e1zzU6EQVHcfn76991OBihS3fc9\nV8k4L+32bTw8mHIRd1+ppUAFf+sReUuCcw4y1oOhsgXz8EI3aWBv72AqScEt\n/WQqn0VlmPHEWWARajOspZnxB0HwftVP8EVPGcw7r6+M7FU/1oF9AtSyaZUH\n4jfumHC5orVYCR28Np7rSnqO3YOSN2mOHqJ0yOOCTFAFCAoZWTcwi6Bl2l4/\n9imIvo1vCcFpj3XIStgvG5qqEyKZpu2MOd3IanWYkPiARLInUL5yTp9Ukrzw\ni9Yfd7Tu68x5HmYZzPFrmZsn462JHxorko7HzFmXQFpD8UnrVaKR/2K4nv9K\nqi/O+lHj3whft31sJ3eOnO7YZ6EmOnQidQCy75Yoq8zlzNolBxWLk4l64H0e\nxW3dNhscuapDCUetHeJ9sWsPHPA=\n",
    "start_sources": {
      "StartupRunner.java": {
        "text": "public class StartupRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate several Startup objects, then call the getNumStartups()\n     * method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Startup.java": {
        "text": "/*\n * Represents a startup business that appeared on Shark Tank\n */\npublic class Startup {\n\n  private String name;          // The name of a startup company\n  private String description;   // A description of a company's product\n  private boolean gotDeal;      // Whether or not a startup company got the deal\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Declare and initialize a static variable called numStartups to 0.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n  /*\n   * Sets name to the specified name, description to the specified\n   * description, and gotDeal to the specified status\n   */\n  public Startup(String name, String description, boolean gotDeal) {\n    this.name = name;\n    this.description = description;\n    this.gotDeal = gotDeal;\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Increment numStartups by 1.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write a static method called getNumStartups() that returns a String containing\n   * the text \"There have been {numStartups} startup pitches on Shark Tank!\", where\n   * numStartups is the number of Startup objects that have been instantiated.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n  \n\n  /*\n   * Returns a String containing information about the startup\n   */\n  public String toString() {\n    String result = name + \" - \" + description + \"\\n\";\n\n    if (gotDeal) {\n      result += \"Got the deal!\";\n    }\n    else {\n      result += \"No deal :(\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_exemplar_sources": "MmYT/WIv0BEn8/Rr0H1pOdVpbLuDUXJ2p5Y4atDwCTuqlTZRnlfU7nhcmDyU\nTMw22LOV2v1NWBcnNN599KoMlkQEwPUfX3/V5UF3icOZ9ca+pMmrWuZILJGv\nHvn4RzIlRE9zbp/JggwgPjc+5/ctgQt2RTtL5UrBOc1Rii5Q0sGyTHB0WJ6n\nSESpaNUFO7hvL6EIq2vPZITAYY0FTh3G+XK70mm1DKi9HaabGrK7pMcwPtHg\n8HmPeW5HTg34GBJ8u01m9xM4g5NIZstb3JHEqSY5KFEIsF+1mf7jxcJAIgna\nQ9RB7AOtdpsZf9pVtw0j+dhxBF+nQF0QJUn9DzH8eEp61muv06eY4gK4CkPi\nBdjiWZiVJa9M063fIqV5G2h4+u/IZlPNfpPeT1W3DT43Ae9h+6+oG6XXWTa4\nwSq3cj/RGRsmuTAdGHC6NtMDTQ5Sl/ucmIjqqst+h6918OgnK//hcg0NOn0E\nPo0wPr69IQ8C5TzwzwSQr8+E7jB66NT+AhEJshn18Fa2gZFMcxeG+c/zNpbV\n6m3lrnZbIcKpZbIpLHm7cUGhHeeIEiC7LpjWyduQ1POp127S8GzzS+RzEyv0\nb1hAkx9w0R6ysO8x/iIt4zVN/hrIFEy4nGYN4z57jcPa2tG8nF17pyQIZ9Wg\nkKXDBg0JMvsPOlMfA0CQa5a4xL8r2BPTqJ/ZoLIj5/xGsjJmGMHTNqXXXcMC\nGFIrwCQvnyAFwg9PFFORD+wZx+rpidzX2Vy6P85FVQlHKVIfXa/rEqiy/ouz\n2RZP0gngbZadJVM3ddSV1B5WlfnbNdsstp10jnIqSYmMNW6S6Rblfx/N0UiV\nQ3gslakMcChm1Ei2Wy84BUheNeVmxNHpdFPN7KMF9r6N4LyGYB4EYDVKM3B4\nNmxufvJ35aFDI/PRBHA0X6JXckm/EcC3Ri6+M3ZlCH/wFL4Yc6GWD1m8i2xp\nCZaGyBnCNFPKnvYGVzSRumrk8OkiQ83IpjOUgTWWu5x1ol8tiTDd51w4Azel\nW/F4Jk/S6DXsvfCMWbmJT9ySo6deNSOAJWl+1dUv6qP/NXNcbixiOvMlME+p\nl7sjqqvAAh/0hSUbnbEOIltZyyPglCLqOKg0ZCVvneLCnN5rAx2FFmthXeFB\neg25wW+lklOGq0jCHmkE3qbCggG343Y77lIh9Zb64yv1UHfmqW0cZKbUD49d\n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\n",
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-16T23:54:42.783+00:00\",\"changed\":[\"cloned from \\\"CSA U4L2-L8b_2023\\\"\"],\"cloned_from\":\"CSA U4L2-L8b_2023\"}]"
}]]></config>
</Javalab>
