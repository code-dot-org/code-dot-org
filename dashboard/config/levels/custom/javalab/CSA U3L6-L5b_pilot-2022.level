<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `Pollution`(#e7e8ea) class analyzes data about the pollution index of cities around the world and has an instance variable for their pollution indexes.\r\n\r\n##In Pollution.java:\r\n\r\n1. Declare and initialize a constant `MAX_POLLUTION`(#e7e8ea) to `20`(#e7e8ea).\r\n\r\nThe method `countUnderMax()`(#e7e8ea) returns the number of cities that have pollution indexes that are less than or equal to the constant `MAX_POLLUTION`(#e7e8ea). In the `countUnderMax()`(#e7e8ea) method,\r\n\r\n2. Traverse the instance variable `pollutionIndexes`(#e7e8ea). Count each value that is less than or equal to the constant `MAX_POLLUTION`(#e7e8ea), then return the count.\r\n\r\n##In MyConsole.java:\r\n\r\n3. Print the result of a call to `countUnderMax()`(#e7e8ea) on the `cityIndexes`(#e7e8ea) object.\r\n\r\n**Note:** Use the constant `MAX_POLLUTION`(#e7e8ea) when displaying the results.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://www.kaggle.com/datasets/prasertk/healthy-lifestyle-cities-report-2021)!*\r\n\r\n![](https://images.code.org/7a5bc5b8f630724939b41f7dc794ba10-image-1648665957910.png)\r\n\r\n::: details [**Show Me How**]\r\nA constant variable uses the following syntax:\r\n  \r\n  ```\r\n  public static dataType VARIABLE_NAME = value;\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Pollution",
    "bubble_choice_description": "Find the number of cities that have pollution indexes that are less than or equal to a maximum value.",
    "thumbnail_url": "https://images.code.org/8be9636977f1f5ca660c9034ed916f39-image-1648662642475.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    /*\n     * Pollution indexes for Amsterdam, Sydney, Vienna, Stockholm, Copenhagen,\n     * Helsinki, Berlin, Barcelona, Vancouver, Melbourne (in order).\n     */\n    double[] pollutionIndexes = {30.93, 26.86, 17.33, 19.63, 21.24, 13.08, 39.41, 65.19, 24.26, 25.9};\n\n    Pollution cityIndexes = new Pollution(pollutionIndexes);\n\n    // TO DO #3: Print the result of a call to countUnderMax().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "Pollution.java": {
        "text": "public class Pollution {\n\n  private double[] pollutionIndexes;\n\n  // TO DO #1: Declare and initialize a constant MAX_POLLUTION.\n\n  \n\n  public Pollution(double[] pollutionIndexes) {\n    this.pollutionIndexes = pollutionIndexes;\n  }\n\n  public int countUnderMax() {\n    // TO DO #2: Traverse pollutionIndexes and count the number of\n    // cities with pollution indexes less than or equal to MAX_POLLUTION.\n\n\n    return 0;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "jrRNHcOowRx22njbDNzE6K10Ex1m7JwmHnodMo3x9M1YXOulrTILncoySabI\nivs8AY7AcN2ZMb1ewQ7lcUoLpNKZ2Oa8CEN2RhfHE4kHQvs507cWcb9ct+Bo\nJU6Ot2Se1DTDhci6vFL2ZbQt+O3MFbh3/+Mw60neRx4PIL80mkq5oaHOqVH8\nrB8JkP3XPZiqEuFyStQDWXuqS1h2XqZmtoVXhp0Bt7LZc/Qrzl4TyBpF5Y3a\noJWlDgG4bt1B8naoKPEYarpobsnCgcOFKwJk1OMvpqgiSG92TqY8D+MaFs0r\nOwrHVEPePItfkWwYpY6YyAnzT1MYtvqYZNOJ7AMaR9qg+N0TzIyiDxDQIRrV\n0AH5AFg9mI0q7AdJThNa1zFjsxdnAUl+TpGu6YYfuX1HS88tPM3tk+BWh74B\nB4x8iQZYEewqw7KcgX3GP7zBiPrGkGsWBso0cAydNc702Mn6MG6h4kI+5GFT\nsrYR+6d9qBVd5s/sBMlXgciL4t7lNnlwQjs0VAeq27BZPMnLkWj9QtgRuRh5\nG4mr/W/BYd5PKUVoahezyWz/mposVIhr+PSb2tSkUb9SJF5rC77+gv76djEP\nrMLFBr9sMwFrk1NSbIkH6KSOn8+faZN3omsC+1hV+OwtvwwwVXWaKDpK0U6A\nCzWItdjQF4k9phFTV+rA6LDTseozfQY4KL0UtlY+gTWErmjBnHcdbVA6bGBZ\nyGWGBxi3899oIXhTfGi6lw3U9Top/keMVslEZHqW/BuEHW/GBT3P01h90I5S\nc98OTrxa/rAsBKWLzviopvTrzZZfqxwzCdcGSVAJMfMQV5z/rqRGoaQDcpa0\nmMV8PUiF8bGrs3ApzlfnQKO1AjqFz13gB4EnE5pOhWDtl+9cxJBbvTF62dUd\nwEjtbP4j6LUmcwEN3tgYFSPuNr7RM+eh6GSa7gN8bKNWRG9kZeX+/1uU+dcr\n+MOsZ19hJnNfUf3Dpwx1nsSPQL9dLs687kbZA6jokJFm6rm2tITSVJOT0syj\nzSnrz9gDJWHIQHQnG3pFyB4Cz3pkupDLTasD/yvy+m8EIFJ8LMFzvkpTB0Pd\nOI5Vja/hr6iR8T3k36fAJFHmX/LlAkckeAqaZGNqXDSgaYF6/UhSNt1SSDDV\nPSViZ7vrLJwFr7pZSAXtxrQsPZlJauxdRR3i9GvlqaV9KgZf57u+Cysv7bX2\nlGy6gXWf9mSkLEPVh2TR/n+fyDBONawSDFf+pNOezn1qbrVtvzOtJjXz8wnE\njPuHx4cKv+IIajm5VuO9muqECITyqlr0Mi/KtWet8LYhRgYoGv07cVkagH8V\nFqWgKCCqqF4CZtyNgWG2dUw8nbPLoJvgqzOnd1V/VT0wpQy57mXHOc8Cj9PN\nNDxrZO1f7I4u3pEQbhEz0gYJMOgQ4JnoAuXEvu8QIK/INjKoQb8KJ8d/LlGU\n88ffc5UPYBLuwy5ChyIQWuZtmZkY/rmOeLPSWkR6COP8NMNzgzr/J3NIcRTZ\nO1afhQeocExvyneMTDvEsyf6GN4WFBwX1hj3jwqQxlDTCBjxRpV5qUoqWExb\niKu1D5+B1FJTVHz4XOBx3QZOtqwylL/y0Tb4NnN2mRR2BUr34lSZpXnf1n0W\na5opkDIKOFfb4y2PXm0RpEC+xSpnwLBaV0vEKTKrbCE3YTJXT/hZ6IZTBehO\nlDAcbc9JC5t22lpVKU1KN/ehci9nfE5ZQ6TaN9ZgnjD9LOQZcCuug4ZE9M/N\n4+yZmizDfivmK6685CaLseHZyXlcJ6R4U4JMW4C+v6kRnaWCXvVZBIvENhYU\nAlajVPq0QP2iqA==\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\nIoLK/k3RisbVLRgBwk1tmF986H+3y+wqbRG0ow==\n"
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:25.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:25.594+00:00\",\"changed\":[\"cloned from \\\"CSA U3L6-L5b_2022\\\"\"],\"cloned_from\":\"CSA U3L6-L5b_2022\"},{\"changed_at\":\"2022-09-06 16:16:49 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:18:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:18:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:18:35 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:33:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-08 13:22:15 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
