<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2024-01-17T00:13:29.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A cryptographer is working on their own technique for encrypting passwords. Each letter of a password is organized in a 2D array, and they want to swap the letters diagonally from the top-left to the bottom-right with the letters diagonally from the top-right to bottom-left.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Encryption</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">swapLetters()</code> method to perform a diagonal swap of the letters in the 2D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">letters</code>. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">swapLetters()</code> method should:\r\n\r\n1. Swap the letter at <code style=\"background-color: #ececec; color: black; font-weight: bold;\">[0, 0]</code> with the letter at <code style=\"background-color: #ececec; color: black; font-weight: bold;\">[2, 2]</code>\r\n\r\n2. Swap the letter at <code style=\"background-color: #ececec; color: black; font-weight: bold;\">[0, 2]</code> with the letter at <code style=\"background-color: #ececec; color: black; font-weight: bold;\">[2, 0]</code>\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">EncryptionRunner</code> class,\r\n\r\n1. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">swapLetters()</code> method.\r\n\r\n2. Print the contents of the 2D array using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">passwordToString()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Encryption</code> class.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with accessing and modifying elements in a two-dimensional (2D) array.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_working_with_2d_array_elements",
    "reference_links": [
      "/courses/csa-2023/guides/two-dimensional-arrays"
    ],
    "display_name": "Diagonal Swap",
    "bubble_choice_description": "A cryptographer is working on their own technique for encrypting passwords.",
    "thumbnail_url": "https://images.code.org/3c45dfe329fab117fa46c242c70218a8-encryption.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "EncryptionRunner.java": {
        "text": "public class EncryptionRunner {\n  public static void main(String[] args) {\n\n    // Creates a 2D array of letters that make up a password\n    String[][] password = { {\"a\", \"l\", \"g\"},\n                            {\"o\", \"r\", \"i\"},\n                            {\"t\", \"h\", \"m\"} };\n\n    // Calls the Encryption object\n    Encryption encrypt = new Encryption(password);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the swapLetters() method, then print the updated 2D array using\n     * the passwordToString() method in the Encryption class.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Encryption.java": {
        "text": "/*\n * Encrypts a password that is organized in a 2D array\n */\npublic class Encryption {\n\n  private String[][] letters;     // The 2D array of letters that make up the password\n\n  /*\n   * Initializes letters to the 2D array of letters\n   */\n  public Encryption(String[][] letters) {\n    this.letters = letters;\n  }\n\n  /*\n   * Returns the 2D array of letters\n   */\n  public String[][] getLetters() {\n    return letters;\n  }\n\n  /*\n   * Swaps the letter at row 0 column 0 with the letter at\n   * row 2 column 2 and swaps the letter at row 0 column 2\n   * with the letter at row 2 column 0\n   */\n  public void swapLetters() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Modify the 2D array letters by swapping the letter at [0, 0] with the\n     * letter at [2, 2], and swapping the letter at [0, 2] with the letter at [2, 0].\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n  }\n\n  /*\n   * Returns a String containing each letter in letters\n   */\n  public String passwordToString() {\n    String result = \"\";\n\n    for (int row = 0; row < letters.length; row++) {\n      for (int col = 0; col < letters[0].length; col++) {\n        result += letters[row][col];\n      }\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_2025"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-17T00:13:29.137+00:00\",\"changed\":[\"cloned from \\\"CSA U5L2-L6a_2023\\\"\"],\"cloned_from\":\"CSA U5L2-L6a_2023\"}]"
}]]></config>
</Javalab>
