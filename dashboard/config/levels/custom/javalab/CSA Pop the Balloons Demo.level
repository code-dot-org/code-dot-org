<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Demo for The Playground",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "playground",
    "start_sources": {
      "MyPlayground.java": {
        "text": "import org.code.playground.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class MyPlayground {\n  public static void main(String[] args) throws FileNotFoundException, PlaygroundException {\n\n\tPopBalloonsGame.play();\n    \n  }\n}",
        "isVisible": true
      },
      "PopBalloonsGame.java": {
        "text": "import org.code.playground.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic final class PopBalloonsGame {\n\n  private static Board myBoard = Playground.board;\n  private static TextItem message;\n  private static Dice diceLeft;\n  private static Dice diceRight;\n  private static Balloon[] balloons;\n  private static ImageItem[] popped;\n  private static RollButton rollButton;\n  \n  private static int score = 0;\n  private static int remaining = 0;\n\n  public static void play() throws FileNotFoundException, PlaygroundException {\n    message = new TextItem(\"Pop the Balloons!\", 40, 15, Color.BLACK, Font.SANS, 20, 0);\n    \n    createDice();\n    createRollButton(\"rollButton.png\");\n    \n    createBalloons();\t// add in Lesson 5\n    createPopped();\t\t// add in Lesson 5\n    \n    showIntro();\n\n    myBoard.start();\n  }\n\n  // STARTER CODE\n  public static void showIntro() {\n    System.out.println(\"Pop the Balloons!\");\n    System.out.println(\"---------------------\");\n    System.out.println(\"This game involves balloons that are numbered 1 through 10.\");\n    System.out.println(\"Your goal is to pop all of them!\");\n    System.out.println(\"You may pop any combination of unpopped ballons to add up to the sum on the dice.\\n\");\n  }\n\n  // STARTER CODE\n  public static void showMessage(String text, Color textColor) {\n    message.setText(text);\n    message.setColor(textColor);\n    \n    myBoard.addTextItem(message);\n  }\n\n  // STARTER CODE\n  public static void createDice() throws FileNotFoundException {\n    String[] diceLeftFiles = {\"dice1.png\", \"dice2.png\", \"dice3.png\", \"dice4.png\", \"dice5.png\", \"dice6.png\"};\n    diceLeft = new Dice(diceLeftFiles, 130, 210);\n\n    String[] diceRightFiles = {\"dice1.png\", \"dice2.png\", \"dice3.png\", \"dice4.png\", \"dice5.png\", \"dice6.png\"};\n    diceRight = new Dice(diceRightFiles, 200, 210);\n    \n    diceLeft.displayDice(1);\n    diceRight.displayDice(1);\n  }\n\n  // STARTER CODE\n  public static void createRollButton(String filename) throws FileNotFoundException {\n    rollButton = new RollButton(filename, 120, 300, 150, 60);\n    myBoard.addClickableImage(rollButton);\n  }\n\n  // STARTER CODE\n  public static void createBalloons() throws FileNotFoundException {\n    balloons = new Balloon[10];\n    int balloonValue = 1;\n    int xPos = 10;\n    int yPos = 50;\n\n    for (int i = 0; i < balloons.length; i++) {\n      String balloonFile = \"balloon\" + balloonValue + \".png\";\n      balloons[i] = new Balloon(balloonFile, balloonValue, xPos, yPos, 70, 70);\n      myBoard.addClickableImage(balloons[i]);\n\n      xPos += 75;\n      if (i == 4) {\n        yPos += 75;\n        xPos = 10;\n      }\n      \n      balloonValue++;\n    }\n  }\n\n  // STARTER CODE\n  public static void createPopped() throws FileNotFoundException {\n    popped = new ImageItem[10];\n    \n    for (int i = 0; i < popped.length; i++) {\n      if (i == 0 || i == 5) {\n        popped[i] = new ImageItem(\"poppedTeal.png\", balloons[i].getX(), balloons[i].getY(), balloons[i].getWidth(), balloons[i].getHeight());\n      }\n      else if (i == 1 || i == 6) {\n        popped[i] = new ImageItem(\"poppedPurple.png\", balloons[i].getX(), balloons[i].getY(), balloons[i].getWidth(), balloons[i].getHeight());\n      }\n      else if (i == 2 || i == 7) {\n        popped[i] = new ImageItem(\"poppedOrange.png\", balloons[i].getX(), balloons[i].getY(), balloons[i].getWidth(), balloons[i].getHeight());\n      }\n      else if (i == 3 || i == 8) {\n        popped[i] = new ImageItem(\"poppedGreen.png\", balloons[i].getX(), balloons[i].getY(), balloons[i].getWidth(), balloons[i].getHeight());\n      }\n      else {\n        popped[i] = new ImageItem(\"poppedBlue.png\", balloons[i].getX(), balloons[i].getY(), balloons[i].getWidth(), balloons[i].getHeight());\n      }\n    }\n  }\n\n  // LESSON 4\n  public static void updateDice(int value, int diceRoll) {\n\tif (value == 1) {\n      diceLeft.displayDice(diceRoll);\n    }\n    \n    if (value == 2) {\n      diceRight.displayDice(diceRoll);\n    }\n  }\n\n  // LESSON 5\n  public static void calculateScore() {\n    score = 0;\n    remaining = 0;\n\n    Color[] textColors = {Color.RED, Color.PURPLE, Color.ORANGE, Color.BLACK};\n    int randomIndex = (int)(Math.random() * textColors.length);\n\n    for (int i = 0; i < balloons.length; i++) {\n      if (!balloons[i].isPopped()) {\n        score += balloons[i].getValue();\n        remaining++;\n      }\n    }\n\n    showMessage(\"Your score is now \" + score + \".\", textColors[randomIndex]);\n  }\n\n  // LESSON 5\n  public static void popBalloon(Balloon balloon, int value) throws FileNotFoundException {\n    String[] popSounds = {\"pop1.wav\", \"pop2.wav\", \"pop3.wav\", \"pop4.wav\", \"pop5.wav\"};\n\t  int randomIndex = (int)(Math.random() * popSounds.length);\n    \n    for (int i = 0; i < popped.length; i++) {\n      if (value - 1 == i) {\n        myBoard.playSound(popSounds[randomIndex]);\n        myBoard.removeItem(balloon);\n        myBoard.addImageItem(popped[i]);\n      }\n    }\n  }\n\n  // LESSON 6 and 9\n  public static boolean movesLeft() throws FileNotFoundException, PlaygroundException {\n    boolean canContinue = false;\n    int currentTotalRoll = rollButton.getTotalRoll();\n\n    for (int i = 0; i < balloons.length; i++) {\n      Balloon currentBalloon = balloons[i];\n      \n      for (int j = 0; j < balloons.length; j++) {\n        Balloon nextBalloon = balloons[j];\n\n        if (currentBalloon.equals(nextBalloon)) {\n          // In Lesson 6, just have canContinue = true.\n\n          // Add in Lesson 9\n          int totalBalloonValue = currentBalloon.getValue() + nextBalloon.getValue();\n          if (currentBalloon.getValue() == currentTotalRoll || totalBalloonValue == currentTotalRoll) {\n            canContinue = true;\n          }\n        }\n      }\n    }\n\n    // Add in Lesson 8\n    if (!canContinue) {\n      gameOver();\n    }\n\n    return canContinue;\n  }\n\n  // LESSON 7\n  public static boolean isValidMove(int value) {\n    boolean isValid = false;\n\n    if (value > rollButton.getTotalRoll()) {\n      showMessage(\"That doesn't add up to \" + rollButton.getTotalRoll() + \".\", Color.BLACK);\n    }\n    else {\n      rollButton.setTotalRoll(rollButton.getTotalRoll() - value);\n      isValid = true;\n    }\n\n    return isValid;\n  }\n\n  // LESSON 8\n  public static void gameOver() throws FileNotFoundException, PlaygroundException {\n    if (remaining == 0) {\n      myBoard.playSound(\"win.wav\");\n      showMessage(\"You popped all of the balloons -- YOU WIN!\", Color.GREEN);\n    }\n    else if (score <= 2) {\n      myBoard.playSound(\"gameOver.wav\");\n      showMessage(\"Game over! Nice try. Your score was \" + score + \".\", Color.RED);\n    }\n    else {\n      myBoard.playSound(\"gameOver.wav\");\n      showMessage(\"Game over! Your score was \" + score + \".\", Color.BLUE);\n    }\n\n    myBoard.end();\n  }\n\n  // LESSON 9\n  public static boolean canRollBoth() {\n    boolean status = true;\n    \n    if (balloons[6].isPopped() && balloons[7].isPopped() && balloons[8].isPopped()) {\n      showMessage(\"Balloons 7, 8, and 9 are popped, so you can only roll once dice.\", Color.BLACK);\n      diceRight.hideDice();\n      status = false;\n    }\n\n    return status;\n  }\n}",
        "isVisible": true
      },
      "RollButton.java": {
        "text": "import org.code.playground.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\n// LESSON 1\npublic class RollButton extends ClickableImage {\n\n  private Board myBoard = Playground.board;\n  private int diceRollLeft;\n  private int diceRollRight;\n  private int totalRoll;\n  \n  public RollButton(String filename, int x, int y, int width, int height) throws FileNotFoundException {\n    super(filename, x, y, width, height);\n    this.diceRollLeft = 1;\n    this.diceRollRight = 1;\n    this.totalRoll = 0;\n  }\n\n  public int getDiceRollLeft() {\n    return diceRollLeft;\n  }\n\n  public int getDiceRollRight() {\n    return diceRollRight;\n  }\n\n  public int getTotalRoll() {\n    return totalRoll;\n  }\n\n  public void setTotalRoll(int newValue) {\n    totalRoll -= newValue;\n  }\n\n  public void onClick() {\n    try {\n      myBoard.playSound(\"diceRoll.wav\");\n\n    \t// In Lesson 1, have diceRollLeft and diceRollRight\n    \t// assigned specific values.\n    \n    \tdiceRollLeft = (int)(Math.random() * 5 + 1);\n    \tPopBalloonsGame.updateDice(1, diceRollLeft);\n\n    \n    \t// Add in Lesson 9\n    \tif (PopBalloonsGame.canRollBoth()) {\n      \tdiceRollRight = (int)(Math.random() * 5 + 1);\n      \tPopBalloonsGame.updateDice(2, diceRollRight);\n    \t}\n\n    \ttotalRoll = diceRollLeft + diceRollRight;\n    \tPopBalloonsGame.calculateScore();\n\n    \tif (PopBalloonsGame.movesLeft()) {\n      \tPopBalloonsGame.showMessage(\"Pop balloons to total \" + totalRoll + \"!\", Color.BLACK);\n    \t}\n    } catch (FileNotFoundException e) {\n      \n    } catch (PlaygroundException e) {\n      \n    }\n  }\n}",
        "isVisible": true
      },
      "Balloon.java": {
        "text": "import org.code.playground.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\n// LESSON 6\npublic class Balloon extends ClickableImage {\n\n  private Board myBoard = Playground.board;\n  private int value;\n  private boolean popped;\n\n  public Balloon(String filename, int value, int xPos, int yPos, int width, int height) throws FileNotFoundException {\n    super(filename, xPos, yPos, width, height);\n    this.value = value;\n    this.popped = false;\n  }\n\n  public int getValue() {\n    return value;\n  }\n\n  public boolean isPopped() {\n    return popped;\n  }\n\n  public boolean equals(Balloon otherBalloon) {\n    boolean status = false;\n    \n\tif (this.isPopped() == otherBalloon.isPopped()) {\n      status = true;\n    }\n\n    if (this.getValue() != otherBalloon.getValue()) {\n      status = false;\n    }\n\n    return status;\n  }\n\n  public void onClick() {\n    // Add check for valid move in Lesson 7\n    try {\n      if (PopBalloonsGame.isValidMove(value)) {\n      \tthis.popped = true;\n      \tPopBalloonsGame.popBalloon(this, value);\n    \t}\n    } catch (FileNotFoundException e) {\n      \n    }\n  }\n}",
        "isVisible": true
      },
      "Dice.java": {
        "text": "import org.code.playground.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\n// LESSON 1\npublic class Dice {\n\n  private Board myBoard = Playground.board;\n  private ImageItem[] diceImages;\n\n  public Dice(String[] diceFiles, int xPos, int yPos) throws FileNotFoundException {\n    diceImages = new ImageItem[6];\n    \n\t  for (int i = 0; i < diceFiles.length; i++) {\n      diceImages[i] = new ImageItem(diceFiles[i], xPos, yPos, 60, 60);\n    }\n  }\n\n  public void displayDice(int value) {\n    myBoard.addImageItem(diceImages[value - 1]);\n  }\n\n  public void hideDice() {\n    for (int i = 0; i < diceImages.length; i++) {\n      myBoard.removeItem(diceImages[i]);\n    }\n  }\n}",
        "isVisible": true
      }
    },
    "starter_assets": {
      "balloon1.png": "8fbf1645-88a4-4203-92d0-286e38dbd024.png",
      "balloon2.png": "f3de569b-b655-42f7-af5d-bd023196aa1f.png",
      "balloon3.png": "8f734973-bb37-4343-ba15-fa4896792fa2.png",
      "balloon4.png": "988ad003-ddbd-4f46-9c7d-550f84fdf03d.png",
      "balloon5.png": "c21fcb7e-cd65-4824-af0f-cbc08c29fb2b.png",
      "balloon6.png": "1112f474-2d1b-4c1f-be1f-47bae4ded515.png",
      "balloon7.png": "b52afc09-3214-4db5-a1c5-4f0e7c64d5d8.png",
      "balloon8.png": "b97bbff0-1ca9-4e72-8800-b1d7b1536847.png",
      "balloon9.png": "5c0bd1eb-14c1-438e-8166-181ac321cdab.png",
      "balloon10.png": "afb1aa3f-61d9-44dd-9622-9243300457ff.png",
      "dice1.png": "794a8326-14cf-428b-a40f-2f3374b81973.png",
      "dice2.png": "411a2fee-95c1-4f94-9d12-19fba3e77e90.png",
      "dice3.png": "b112c0ea-7854-4395-9ec7-6310bf4aacb4.png",
      "dice4.png": "8311d244-3d63-4772-9699-84fbfd9e4fd7.png",
      "dice5.png": "b257c183-52e4-4a17-ad24-b499f573e69e.png",
      "dice6.png": "9de4f09c-f2a9-4ec3-9b51-f980a21b7c72.png",
      "poppedBlue.png": "f637f11f-ebf4-4396-a2c1-e900ff258cb1.png",
      "poppedGreen.png": "2d349bdf-1735-4802-93b4-795b0cf9af7f.png",
      "poppedOrange.png": "43cf60ed-6a6b-416b-b271-4f0136584573.png",
      "poppedPurple.png": "209e7e76-cba3-4e77-976a-a2344c3991db.png",
      "poppedTeal.png": "3ffe1fb8-4fa9-4927-88dd-ed96ed70d6db.png",
      "rollButton.png": "4b64601b-ac4a-44d9-9f90-518b765c3614.png",
      "pop.wav": "ef2d56e2-a98b-476b-bd11-e13a8a807141.wav",
      "diceRoll.wav": "6733d30a-a6a4-4520-93e1-223172888723.wav",
      "win.wav": "e1401dd7-0825-484b-b0ea-b55926cd18e2.wav",
      "gameOver.wav": "55eeeb0c-5095-49ce-9914-9c1aa4ecb9fe.wav"
    }
  },
  "game_id": 68,
  "created_at": "2021-09-02T18:04:34.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2021-09-02 18:04:38 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 18:13:04 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 18:14:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 18:29:42 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 21:28:55 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 21:33:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 21:39:30 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 23:47:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 23:47:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 23:48:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 23:49:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 23:50:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 23:51:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-02 23:51:57 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 00:01:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 00:37:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 13:23:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 14:11:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 15:09:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 15:37:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 15:40:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 15:43:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 17:21:14 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 17:32:36 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-03 19:12:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-14 14:28:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-09-14 16:52:48 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 17:24:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:06:25 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:08:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:10:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:11:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:17:57 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:20:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:22:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:24:07 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:25:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:25:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:26:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:28:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:29:16 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:29:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:30:10 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:30:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:31:38 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:35:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:36:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:37:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:37:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:38:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:38:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:38:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:40:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:41:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:42:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:42:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:42:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:44:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:45:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:46:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:47:48 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 18:51:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 19:00:07 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 19:00:19 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 19:58:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-10-06 20:25:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"}]"
}]]></config>
</Javalab>
