<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2020-03-17T17:04:35.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "gamelab",
    "edit_code": true,
    "embed": "false",
    "short_instructions": "Modify the code so that all of the console.log commands print true",
    "start_blocks": "// Modify these sprites so that all of the\r\n// console.log() commands print true\r\nvar sprite1 = createSprite(100, 200);\r\nsprite1.setAnimation(\"apple\");\r\nsprite1.rotation = 30;\r\nsprite1.scale = 1.5;\r\n\r\nvar sprite2 = createSprite(300, 200);\r\nsprite2.setAnimation(\"carrot\");\r\nsprite2.rotation = 60;\r\nsprite2.scale = 0.5;\r\n\r\n// Don't edit the following (I'm serious!!!)\r\nconsole.log(\"Comparison 1: \" + (sprite2.x == sprite2.y));\r\nconsole.log(\"Comparison 2: \" + (sprite2.rotation < 40));\r\nconsole.log(\"Comparison 3: \" + (sprite1.scale == sprite2.scale));\r\nconsole.log(\"Comparison 4: \" + (sprite1.x > 150));\r\nconsole.log(\"Comparison 5: \" + (sprite2.y < 200));\r\n\r\ndrawSprites();\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "long_instructions": "# Boolean Expressions\r\n\r\nThe simplest Boolean expressions are questions that the computer can answer with true or false. \r\nAnother way to say this is that Boolean expressions **evaluate** to `true` or `false`.\r\n\r\n# Do This\r\nCan you modify the values of the sprite properties so that each of the Boolean expressions evaluates to `true`?\r\n\r\n- Read through the entire program to see how `sprite1` and `sprite2` are being created and which properties are compared.\r\n- For each of the Boolean expressions, identify the sprite properties being compared.\r\n- Change the code _in the first **11** lines only_ so that each of the `console.log()` statements print `true`.",
    "callout_json": "[]",
    "instructions_important": "false",
    "hide_animation_mode": "false",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "true",
    "pause_animations_by_default": "false",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "x": null,
      "y": null,
      "rotation": null,
      "scale": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "randomNumber_min_max": null,
      "equalityOperator": null,
      "greaterThanOperator": null,
      "lessThanOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "comment_Drawing": null,
      "comment_Variables": null,
      "comment_GameLab": null,
      "comment_Math": null,
      "comment_Sprites": null,
      "console.log": null
    },
    "show_debug_watch": "true",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "true",
    "start_animations": "{\r\n  \"orderedKeys\": [\r\n    \"8cf12b56-3091-4817-8c73-a9f2a12eb3b0\",\r\n    \"08c988f7-21e8-4256-8930-215311a62e37\"\r\n  ],\r\n  \"propsByKey\": {\r\n    \"8cf12b56-3091-4817-8c73-a9f2a12eb3b0\": {\r\n      \"name\": \"apple\",\r\n      \"sourceUrl\": \"https://studio.code.org/api/v1/animation-library/_C2x10SnwauWvJRCQq.u2jEtcmNrPifb/category_food/apple.png\",\r\n      \"frameSize\": {\r\n        \"x\": 128,\r\n        \"y\": 128\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"_C2x10SnwauWvJRCQq.u2jEtcmNrPifb\"\r\n    },\r\n    \"08c988f7-21e8-4256-8930-215311a62e37\": {\r\n      \"name\": \"carrot\",\r\n      \"sourceUrl\": \"https://studio.code.org/api/v1/animation-library/fCiFCbsTDOoiLsbStivUZ249XH0TOxIY/category_food/carrot.png\",\r\n      \"frameSize\": {\r\n        \"x\": 78,\r\n        \"y\": 70\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"fCiFCbsTDOoiLsbStivUZ249XH0TOxIY\"\r\n    }\r\n  }\r\n}",
    "parent_level_id": 16077,
    "name_suffix": "_virtual",
    "map_reference": "/docs/csd-1718/booleans/index.html",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "show_type_hints": "false",
    "encrypted": "false",
    "mini_rubric": "false",
    "encrypted_examples": "guMigREZXugi7mEs1Xs9VGBNrKByEg5QNWZxLiXfAltx8PJMyh2CjGHodIGs\n+YigK4cbNdeRXYuCzeTez2d7mA==\n",
    "preload_asset_list": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-06-15 17:42:06 +0000\",\"changed\":[\"start_blocks\",\"code_functions\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-05-15 20:17:58 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-09-19 01:04:33 +0000\",\"changed\":[\"markdown_instructions\",\"code_functions\",\"contained_level_names\"],\"changed_by_id\":53,\"changed_by_email\":\"test5@code.org\"},{\"changed_at\":\"2018-09-19 01:05:49 +0000\",\"changed\":[\"markdown_instructions\",\"code_functions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":53,\"changed_by_email\":\"test5@code.org\"},{\"changed_at\":\"2019-04-01 06:06:13 +0000\",\"changed\":[\"long_instructions\",\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-25 22:36:53 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":959,\"changed_by_email\":\"george.zhang@code.org\"}]"
}]]></config>
  <blocks/>
</Gamelab>