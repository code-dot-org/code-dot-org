<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2018-03-19T23:33:01.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "World.mouseX": null,
      "World.mouseY": null,
      "World.frameRate": null,
      "keyDown": null,
      "keyWentUp": null,
      "keyWentDown": null,
      "mouseDown": null,
      "mouseWentUp": null,
      "mouseWentDown": null,
      "mouseDidMove": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "sprite.height": null,
      "sprite.width": null,
      "x": null,
      "y": null,
      "rotation": null,
      "shapeColor": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "comment_Sprites": null,
      "comment_GameLab": null,
      "comment_Variables": null,
      "comment_Math": null,
      "comment_Control": null,
      "comment_Drawing": null,
      "console.log": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "callout_json": "[]",
    "hide_animation_mode": "false",
    "start_animations": "{\r\n  \"orderedKeys\": [\r\n    \"30cff2ca-74f5-47a9-b863-d3777b89b368\"\r\n  ],\r\n  \"propsByKey\": {\r\n    \"30cff2ca-74f5-47a9-b863-d3777b89b368\": {\r\n      \"name\": \"salt\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/ccdnzSzhf2kJL4Lm6QrdYNGiGgzRnzDJpZLzfBsKFs0/30cff2ca-74f5-47a9-b863-d3777b89b368.png?version=yA2tln0BDT.7U2r9wxbBQH1lY9Cx_4Hl\",\r\n      \"frameSize\": {\r\n        \"x\": 95,\r\n        \"y\": 95\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"yA2tln0BDT.7U2r9wxbBQH1lY9Cx_4Hl\"\r\n    }\r\n  }\r\n}",
    "instructions_important": "false",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "true",
    "pause_animations_by_default": "false",
    "show_debug_watch": "true",
    "encrypted_examples": "fVZMA7Efomof8brcEzPrdGlmNidkuzURQWCpztFQevjhxT4/QjkvC//j2HEM\nB35c4n5YsYQFKJGPNTS1WOXDAw==\n",
    "disable_procedure_autopopulate": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "top_level_procedure_autopopulate": "false",
    "start_blocks": "var salt = createSprite (200, 200);\r\nsalt.setAnimation(\"salt\");\r\nsalt.rotation = 150;\r\n\r\nfunction draw() {\r\n  background(\"skyblue\");\r\n  \r\n  // If mouseDidMove, rotate the salt shaker randomly to the left or right\r\n  \r\n  drawSprites();\r\n}",
    "parent_level_id": 5062,
    "name_suffix": "_2018",
    "contained_level_names": null,
    "preload_asset_list": null,
    "long_instructions": "# mouseDidMove\r\n\r\nWe can also use Boolean expressions to check whether or not the mouse has moved. The `mouseDidMove` block will return `false` if the mouse is still, but `true` if the mouse has been moving.\r\n\r\n# Do This\r\nRight now, this program just displays a salt shaker sprite. You'll need to use `mouseDidMove` so that you can \"shake\" the salt by moving the mouse back and forth.\r\n\r\n* Add a conditional that checks if `mouseDidMove`.\r\n* If the conditional is true, rotate the salt sprite randomly to the left or right.\r\n\r\n_Challenge: Can you keep track of how many times the `mouseDidMove` shakes the salt, and then rotate it right side up after 100 shakes?_"
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-11-02 16:56:44 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2018-02-23 21:03:55 +0000\",\"changed\":[\"code_functions\",\"start_animations\",\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-02-27 19:13:39 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-10-30 21:08:27 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>