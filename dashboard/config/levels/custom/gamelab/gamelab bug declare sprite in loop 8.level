<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2019-06-22T16:45:28.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "encrypted": "false",
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "playSound": null,
      "stopSound": null,
      "keyDown": null,
      "keyWentDown": null,
      "keyWentUp": null,
      "mouseDidMove": null,
      "mouseDown": null,
      "mouseIsOver": null,
      "mouseWentDown": null,
      "mouseWentUp": null,
      "mousePressedOver": null,
      "showMobileControls": null,
      "World.mouseX": null,
      "World.mouseY": null,
      "World.frameRate": null,
      "World.frameCount": null,
      "World.seconds": null,
      "World.width": null,
      "World.height": null,
      "World.allSprites": null,
      "camera.on": null,
      "camera.off": null,
      "camera.isActive": null,
      "camera.mouseX": null,
      "camera.mouseY": null,
      "camera.x": null,
      "camera.y": null,
      "camera.zoom": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "x": null,
      "y": null,
      "velocityX": null,
      "velocityY": null,
      "scale": null,
      "sprite.height": null,
      "sprite.width": null,
      "visible": null,
      "rotation": null,
      "rotationSpeed": null,
      "rotateToDirection": null,
      "debug": null,
      "isTouching": null,
      "collide": null,
      "displace": null,
      "overlap": null,
      "bounce": null,
      "bounceOff": null,
      "bounciness": null,
      "setCollider": null,
      "createEdgeSprites": null,
      "shapeColor": null,
      "tint": null,
      "setVelocity": null,
      "getDirection": null,
      "getSpeed": null,
      "setSpeedAndDirection": null,
      "pointTo": null,
      "mirrorX": null,
      "mirrorY": null,
      "getScaledWidth": null,
      "getScaledHeight": null,
      "lifetime": null,
      "nextFrame": null,
      "pause": null,
      "play": null,
      "setFrame": null,
      "depth": null,
      "destroy": null,
      "comment_Sprites": null,
      "var group = createGroup": null,
      "add": null,
      "remove": null,
      "clear": null,
      "contains": null,
      "get": null,
      "group.isTouching": null,
      "group.bounce": null,
      "group.bounceOff": null,
      "group.collide": null,
      "group.displace": null,
      "group.overlap": null,
      "maxDepth": null,
      "minDepth": null,
      "destroyEach": null,
      "pointToEach": null,
      "setAnimationEach": null,
      "setColorEach": null,
      "setColliderEach": null,
      "setDepthEach": null,
      "setHeightEach": null,
      "setLifetimeEach": null,
      "setMirrorXEach": null,
      "setMirrorYEach": null,
      "setRotateToDirectionEach": null,
      "setRotationEach": null,
      "setRotationSpeedEach": null,
      "setScaleEach": null,
      "setSpeedAndDirectionEach": null,
      "setTintEach": null,
      "setVelocityEach": null,
      "setVelocityXEach": null,
      "setVelocityYEach": null,
      "setVisibleEach": null,
      "setWidthEach": null,
      "comment_Groups": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "rgb": null,
      "rect": null,
      "ellipse": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "arc": null,
      "line": null,
      "point": null,
      "regularPolygon": null,
      "shape": null,
      "comment_Drawing": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "comment_Control": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "comment_Math": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "listLength": null,
      "comment_Variables": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "show_debug_watch": "true",
    "embed": "false",
    "instructions_important": "false",
    "long_instructions": "# Reflect\r\n\r\n**What caused the bug?**\r\n\r\nThe sprite was created inside the draw loop.  That means that every time the draw loop ran, a new crab sprite was created in the middle of the screen.  The new crab sprite was stored into the `crab` variable, but all the previous crabs still existed, and they continued to be drawn to the screen.  The counter pattern was only moving the crab that was just created in the center of the screen, so it was only even moving one pixel from the original position of (200, 200).\r\n\r\n**How did you find the bug?**\r\n\r\nKey strategies here were using the console log to observe the properties of the sprite, making small changes large to better see what is happening, and tracing the code line by line to find out why the behavior is happening.\r\n\r\n**What in your code made it easier or harder to debug?**\r\n\r\nThis program is not overly complicated, and it might be the first step in creating a more complex game.  Testing the ability of the crab sprite to move immediately made it simpler to debug the movement than if the program had more code and possibly multiple bugs.  Other things that were helpful were that the `crab` variable was well named, and the code seemed fairly organized.  It's possible that better commenting could have made the program easier to debug.\r\n\r\n**Why didn't the watchers work?**\r\n\r\nNormally, watchers can be used to observe the value of sprite properties.  In this case, though, the variable that holds the sprite is created inside the draw loop.  Because of that, its only available inside that loop, and the watchers, which can only see variables that are available everywhere in the program, can't see them.",
    "mini_rubric": "false",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "submittable": "false",
    "text_mode_at_start": "false",
    "hide_view_data_button": "false",
    "expand_debugger": "true",
    "debugger_disabled": "false",
    "hide_animation_mode": "false",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "false",
    "pause_animations_by_default": "false",
    "start_blocks": "var crab = createSprite(200,200);\r\ncrab.setAnimation(\"crab\");\r\ncrab.scale = 0.3;\r\nfunction draw() {\r\n  background(\"blue\");\r\n  if (keyDown(\"down\")) {\r\n    crab.y = crab.y + 1;\r\n  }\r\n  if (keyDown(\"up\")) {\r\n    crab.y = crab.y - 1;\r\n  }\r\n  if (keyDown(\"right\")) {\r\n    crab.x = crab.x + 1;\r\n  }\r\n  if (keyDown(\"left\")) {\r\n    crab.x = crab.x - 1;\r\n  }\r\n  drawSprites();\r\n}",
    "start_animations": "{\r\n  \"orderedKeys\": [\r\n    \"c23ccefb-124d-4aaf-950e-7130b2043fb5\"\r\n  ],\r\n  \"propsByKey\": {\r\n    \"c23ccefb-124d-4aaf-950e-7130b2043fb5\": {\r\n      \"name\": \"crab\",\r\n      \"sourceUrl\": \"https://levelbuilder-studio.code.org/api/v1/animation-library/LaMWl2eLpHY9WPz.CpEFG3ScTyf6n6Wh/category_animals/crab.png\",\r\n      \"frameSize\": {\r\n        \"x\": 288,\r\n        \"y\": 191\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"LaMWl2eLpHY9WPz.CpEFG3ScTyf6n6Wh\"\r\n    }\r\n  }\r\n}",
    "parent_level_id": 18804,
    "preload_asset_list": null,
    "encrypted_examples": [

    ]
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2019-06-13 19:47:02 +0000\",\"changed\":[\"notes\",\"code_functions\",\"show_debug_watch\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-13 20:34:27 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-13 20:34:45 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 01:19:47 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 01:22:07 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 01:25:53 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 01:33:25 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 01:33:51 +0000\",\"changed\":[\"code_functions\",\"expand_debugger\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 01:35:05 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 16:26:24 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"start_blocks\",\"watchers_prepopulated\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 16:42:08 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 16:45:57 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 16:46:35 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-20 19:08:39 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"start_blocks\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-21 00:06:30 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-22 16:33:16 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"start_blocks\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-22 16:44:34 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-22 17:07:34 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-22 17:19:42 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-22 17:20:10 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-22 17:20:42 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>