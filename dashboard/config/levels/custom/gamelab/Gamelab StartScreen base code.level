<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2019-01-08T20:29:47.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "playSound": null,
      "stopSound": null,
      "keyDown": null,
      "keyWentDown": null,
      "keyWentUp": null,
      "mouseDidMove": null,
      "mouseDown": null,
      "mouseIsOver": null,
      "mouseWentDown": null,
      "mouseWentUp": null,
      "mousePressedOver": null,
      "showMobileControls": null,
      "World.mouseX": null,
      "World.mouseY": null,
      "World.frameRate": null,
      "World.frameCount": null,
      "World.seconds": null,
      "World.width": null,
      "World.height": null,
      "World.allSprites": null,
      "camera.on": null,
      "camera.off": null,
      "camera.isActive": null,
      "camera.mouseX": null,
      "camera.mouseY": null,
      "camera.x": null,
      "camera.y": null,
      "camera.zoom": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "x": null,
      "y": null,
      "velocityX": null,
      "velocityY": null,
      "scale": null,
      "sprite.height": null,
      "sprite.width": null,
      "visible": null,
      "rotation": null,
      "rotationSpeed": null,
      "rotateToDirection": null,
      "debug": null,
      "isTouching": null,
      "collide": null,
      "displace": null,
      "overlap": null,
      "bounce": null,
      "bounceOff": null,
      "bounciness": null,
      "setCollider": null,
      "createEdgeSprites": null,
      "shapeColor": null,
      "tint": null,
      "setVelocity": null,
      "getDirection": null,
      "getSpeed": null,
      "setSpeedAndDirection": null,
      "pointTo": null,
      "mirrorX": null,
      "mirrorY": null,
      "getScaledWidth": null,
      "getScaledHeight": null,
      "lifetime": null,
      "nextFrame": null,
      "pause": null,
      "play": null,
      "setFrame": null,
      "depth": null,
      "destroy": null,
      "comment_Sprites": null,
      "var group = createGroup": null,
      "add": null,
      "remove": null,
      "clear": null,
      "contains": null,
      "get": null,
      "group.isTouching": null,
      "group.bounce": null,
      "group.bounceOff": null,
      "group.collide": null,
      "group.displace": null,
      "group.overlap": null,
      "maxDepth": null,
      "minDepth": null,
      "destroyEach": null,
      "pointToEach": null,
      "setAnimationEach": null,
      "setColorEach": null,
      "setColliderEach": null,
      "setDepthEach": null,
      "setHeightEach": null,
      "setLifetimeEach": null,
      "setMirrorXEach": null,
      "setMirrorYEach": null,
      "setRotateToDirectionEach": null,
      "setRotationEach": null,
      "setRotationSpeedEach": null,
      "setScaleEach": null,
      "setSpeedAndDirectionEach": null,
      "setTintEach": null,
      "setVelocityEach": null,
      "setVelocityXEach": null,
      "setVelocityYEach": null,
      "setVisibleEach": null,
      "setWidthEach": null,
      "comment_Groups": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "rgb": null,
      "rect": null,
      "ellipse": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "arc": null,
      "line": null,
      "point": null,
      "regularPolygon": null,
      "shape": null,
      "comment_Drawing": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "comment_Control": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "comment_Math": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "listLength": null,
      "comment_Variables": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "show_debug_watch": "true",
    "contained_level_names": null,
    "preload_asset_list": null,
    "encrypted_examples": [

    ],
    "embed": "false",
    "instructions_important": "false",
    "submittable": "false",
    "start_blocks": "// background sprites\r\nvar space = createSprite(200,200);\r\nspace.setAnimation(\"space\");\r\nvar ground1 = createSprite(200, 382);\r\nground1.setAnimation(\"ground\");\r\n// move the ground to make it a \"side scroller\"\r\n// we need two of them so that when they loop around \r\n// there is no gap\r\nground1.velocityX = -2;\r\nvar ground2 = createSprite(602, 382);\r\nground2.setAnimation(\"ground\");\r\nground2.velocityX = -2;\r\nvar alien = createSprite(100,345);\r\nalien.setAnimation(\"alienRight\");\r\n// create edge sprites to keep player in the screen\r\n// sprites are stored in `edges` variable\r\ncreateEdgeSprites();\r\n// create the platforms, gold, and rocks (see functions below)\r\nvar platforms = createPlatforms();\r\nvar gold = createGold();\r\nvar rocks = createRocks();\r\n// create variables to keep track of game\r\nvar score = 0;\r\nvar lives = 3;\r\n\r\nfunction draw() {\r\n  // all interactions between sprites should happen\r\n  interactions();\r\n  // user controls movement with keys\r\n  movement();\r\n  // gravity makes alien fall down\r\n  gravity();\r\n  // everything loops back when it goes off screen\r\n  loopGround();\r\n  loopPlatforms();\r\n  loopRocks();\r\n  // draw all the sprites\r\n  drawSprites();\r\n  // draw the scoreboard on top of the sprites\r\n  scoreBoard();\r\n  // check whether game is won/lost/levelled up\r\n  // and shows messages on top of the sprites\r\n  gameStatus();\r\n}\r\n\r\n\r\nfunction loopGround() {\r\n  // each section of ground loops back to the right when it goes off screen\r\n  if (ground1.x < -199) {\r\n  ground1.x += 804;\r\n  }\r\n  if (ground2.x < -199) {\r\n  ground2.x += 804;\r\n  }\r\n}\r\nfunction interactions() {\r\n  // alien cannot go past edge of screen\r\n  alien.collide(edges);\r\n  // alien cannot pass through platforms\r\n  alien.collide(platforms);\r\n  //alien gets gold when collides into it (see `getGold` function)\r\n  alien.collide(gold, getGold);\r\n  //alien hits rock when collides into it (see `hitRock` function)\r\n  alien.collide(rocks, hitRock);\r\n}\r\nfunction getGold(caller, target) {\r\n  // move gold off screen to right (to synchronize with looping platform)\r\n  target.x += 700;\r\n  // increase score by 1\r\n  score++;\r\n}\r\nfunction hitRock(caller, target) {\r\n  // move rock up off screen\r\n  target.y -= 600;\r\n  // descrease lives by 1\r\n  lives--;\r\n}\r\nfunction movement() {\r\n  // change animations and position according to key press\r\n  if (keyDown(\"down\")) {\r\n    alien.setCollider(\"rectangle\", 0, 11, 71, 67);\r\n    alien.setAnimation(\"alienDuck\");\r\n  } else if (keyDown(\"left\")) {\r\n    // movement larger to overtake scrolling ground\r\n    alien.x -= 5;\r\n    alien.setAnimation(\"alienLeft\");\r\n  } else if (keyDown(\"space\")) {\r\n    jump();\r\n  } else if (keyDown(\"right\")) {\r\n    alien.x += 3;\r\n  } else {\r\n    // default animation is moving right\r\n    alien.setAnimation(\"alienRight\");\r\n    // if the alien is resting on a platform\r\n    if (alien.collide(platforms)) {\r\n      // reset velocity to simulate inertia\r\n      alien.velocityY = 0;\r\n    }\r\n  }\r\n  if (keyWentUp(\"down\")) {\r\n    alien.setCollider(\"rectangle\", 0, 0, 71, 93);\r\n  }\r\n}\r\n\r\nfunction jump() {\r\n  //move alien down to ensure that if it is on the platform, it's touching it.\r\n  alien.y += 1;\r\n  //check if alien is on the ground or platform\r\n  if ((alien.y > 344) || (alien.isTouching(platforms))) {\r\n    // make sure alien is no longer touching platform or ground to avoid interactions\r\n    alien.y -= 2;\r\n    //send alien moing up\r\n    alien.velocityY = -15;\r\n  } \r\n}\r\n\r\nfunction gravity() {\r\n  // if the alien is in the air\r\n  if (alien.y < 345) {\r\n    // simulate gravity by increasing downward velocity\r\n    alien.velocityY +=0.7;\r\n  }\r\n  // if the alien has gone below ground level\r\n  if (alien.y > 345) {\r\n    // put it back on ground level\r\n    alien.y = 345;\r\n  }\r\n} \r\n\r\nfunction loopPlatforms() {\r\n  // loop all platforms and gold to the right of the screen\r\n  for(var i=0; i < platforms.length; i++) {\r\n    loopPlatform(platforms.get(i));\r\n    loopGold(gold.get(i));\r\n  }  \r\n}\r\nfunction loopPlatform(platform) {\r\n  // if the platform is to the left of the screen\r\n  if (platform.x < -80) {\r\n    // move it back to the right of the screen\r\n    platform.x += 700;\r\n  }\r\n}\r\nfunction loopGold(goldPiece) {\r\n  // if the gold is to the left of the screen\r\n  if (goldPiece.x < -80) {\r\n    // move it to the right of the screen\r\n    goldPiece.x += 700;\r\n  }\r\n}\r\nfunction loopRocks() {\r\n  // loop all of the rocks to the top of the screen\r\n  for (var i=0; i<rocks.length; i++) {\r\n    loopRock(rocks.get(i));\r\n  }\r\n}\r\nfunction loopRock(rock) {\r\n  // if the rock is below the screen\r\n  if (rock.y > 450) {\r\n    // send it back above the screen\r\n    rock.y -= 600;\r\n    // and put in in a random horizontal location\r\n    rock.x = randomNumber(50, 350);\r\n  }\r\n}\r\nfunction scoreBoard() {\r\n  // display the score board\r\n  textSize(18);\r\n  fill(\"white\");\r\n  text(\"Score: \" + score, 10, 20);\r\n  text(\"Lives: \" + lives, 320, 20);\r\n}\r\nfunction createPlatforms() {\r\n  //create platforms off screen and put them in a group together\r\n  var platforms = createGroup();\r\n  platforms.add(createSprite(450, 300));\r\n  platforms.add(createSprite(650, 225));\r\n  platforms.add(createSprite(850, 150));\r\n  platforms.setAnimationEach(\"platform\");\r\n  // platforms scroll to the left\r\n  platforms.setVelocityXEach(-2);\r\n  return platforms;\r\n}\r\nfunction createGold() {\r\n  //create gold off screen and put it in a group together\r\n  // gold is on top of platforms\r\n  var gold = createGroup();\r\n  gold.add(createSprite(450, 250));\r\n  gold.add(createSprite(650, 175));\r\n  gold.add(createSprite(850, 100));\r\n  gold.setAnimationEach(\"gold\");\r\n  // make gold scroll to the left and rotate\r\n  gold.setVelocityXEach(-2);\r\n  gold.setRotationSpeedEach(15);\r\n  return gold;\r\n}\r\nfunction createRocks() {\r\n  // create rocks and put them in a group\r\n  var rocks = createGroup();\r\n  for (var i=0; i<4; i++) {\r\n    rocks.add(createSprite(randomNumber(50, 350), -150 * i));\r\n  }\r\n  rocks.setAnimationEach(\"rock\");\r\n  // make rocks fall down screen\r\n  rocks.setVelocityYEach(4);\r\n  return rocks;\r\n}\r\nfunction gameStatus() {\r\n  // change game according to score and lives\r\n  if (score > 4) {\r\n    space.setAnimation(\"orangeSpace\");\r\n  }\r\n  // display win message on win\r\n  if (score > 9) {\r\n    fill(\"white\");\r\n    textSize(48);\r\n    text(\"You Won!\", 35, 200);\r\n  }\r\n  // display lose message on lose\r\n  if (lives < 1) {\r\n    fill(\"white\");\r\n    textSize(48);\r\n    text(\"You Lost!\", 35, 200);\r\n  }\r\n}",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_animation_mode": "false",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "false",
    "hide_view_data_button": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "pause_animations_by_default": "false",
    "start_animations": "{\r\n  \"orderedKeys\": [\r\n    \"0d058158-fcad-4f0e-af04-6c6dd492f841\",\r\n    \"0320d091-b0ed-4c6a-942d-c66f766593d1\",\r\n    \"bc078572-a8ad-4272-9688-87d571762094\",\r\n    \"ae4112fa-08fd-40c6-a483-0afcc2f54a17\",\r\n    \"c5726ef6-9fee-4d07-bf33-2b968a4bbd54\",\r\n    \"df9911ea-8446-443f-8763-6a513b6d81a0\",\r\n    \"1337e3f8-33f0-4bad-b79a-ddb962261a76\",\r\n    \"39e279c4-d59c-46d7-91c6-be35682ad8fb\",\r\n    \"2366a52f-370a-4400-96f2-a0ff889feb52\",\r\n    \"3362808f-ad0c-4643-b1e4-9a9a75d9a5c6\"\r\n  ],\r\n  \"propsByKey\": {\r\n    \"0d058158-fcad-4f0e-af04-6c6dd492f841\": {\r\n      \"name\": \"alienRight\",\r\n      \"sourceUrl\": \"https://studio.code.org/api/v1/animation-library/2QmbIHREjj_kMAn76wyxzKNXZT9dTHUw/category_characters/alienGreen_walk.png\",\r\n      \"frameSize\": {\r\n        \"x\": 72,\r\n        \"y\": 98\r\n      },\r\n      \"frameCount\": 2,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"2QmbIHREjj_kMAn76wyxzKNXZT9dTHUw\"\r\n    },\r\n    \"0320d091-b0ed-4c6a-942d-c66f766593d1\": {\r\n      \"name\": \"alienLeft\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/UhwJNienG2M6yVKeX0M4byWmZFeDkh5bW9mafZKIi8g/0320d091-b0ed-4c6a-942d-c66f766593d1.png?version=PDn7nl5RrXXT_Mp7UlQduNo0OWpvGp6C\",\r\n      \"frameSize\": {\r\n        \"x\": 72,\r\n        \"y\": 98\r\n      },\r\n      \"frameCount\": 2,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"PDn7nl5RrXXT_Mp7UlQduNo0OWpvGp6C\"\r\n    },\r\n    \"bc078572-a8ad-4272-9688-87d571762094\": {\r\n      \"name\": \"alienJump\",\r\n      \"sourceUrl\": \"https://studio.code.org/api/v1/animation-library/0ZA2mU0GDgAh.ZL5FMn7lTLtsNFkLlwh/category_characters/alienGreen_jump.png\",\r\n      \"frameSize\": {\r\n        \"x\": 67,\r\n        \"y\": 93\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"0ZA2mU0GDgAh.ZL5FMn7lTLtsNFkLlwh\"\r\n    },\r\n    \"ae4112fa-08fd-40c6-a483-0afcc2f54a17\": {\r\n      \"name\": \"alienDuck\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/UhwJNienG2M6yVKeX0M4byWmZFeDkh5bW9mafZKIi8g/ae4112fa-08fd-40c6-a483-0afcc2f54a17.png?version=AUelC8mFYH_Zy9AKFNuwUiZ1l676OGxb\",\r\n      \"frameSize\": {\r\n        \"x\": 69,\r\n        \"y\": 93\r\n      },\r\n      \"frameCount\": 2,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"AUelC8mFYH_Zy9AKFNuwUiZ1l676OGxb\"\r\n    },\r\n    \"c5726ef6-9fee-4d07-bf33-2b968a4bbd54\": {\r\n      \"name\": \"ground\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/UhwJNienG2M6yVKeX0M4byWmZFeDkh5bW9mafZKIi8g/c5726ef6-9fee-4d07-bf33-2b968a4bbd54.png?version=6FKecATahFgf3I2p5kzX3uipeb5FHXdW\",\r\n      \"frameSize\": {\r\n        \"x\": 404,\r\n        \"y\": 36\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"6FKecATahFgf3I2p5kzX3uipeb5FHXdW\"\r\n    },\r\n    \"df9911ea-8446-443f-8763-6a513b6d81a0\": {\r\n      \"name\": \"rock\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/UhwJNienG2M6yVKeX0M4byWmZFeDkh5bW9mafZKIi8g/df9911ea-8446-443f-8763-6a513b6d81a0.png?version=cxXuUXQDJSS1SEFSk7uvjjxRrWOtSqcw\",\r\n      \"frameSize\": {\r\n        \"x\": 35,\r\n        \"y\": 22\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"cxXuUXQDJSS1SEFSk7uvjjxRrWOtSqcw\"\r\n    },\r\n    \"1337e3f8-33f0-4bad-b79a-ddb962261a76\": {\r\n      \"name\": \"space\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/UhwJNienG2M6yVKeX0M4byWmZFeDkh5bW9mafZKIi8g/1337e3f8-33f0-4bad-b79a-ddb962261a76.png?version=wRpvoxw6UbWhuvBlo6_YxLmjJQexOKVo\",\r\n      \"frameSize\": {\r\n        \"x\": 400,\r\n        \"y\": 400\r\n      },\r\n      \"frameCount\": 4,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"wRpvoxw6UbWhuvBlo6_YxLmjJQexOKVo\"\r\n    },\r\n    \"39e279c4-d59c-46d7-91c6-be35682ad8fb\": {\r\n      \"name\": \"orangeSpace\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/UhwJNienG2M6yVKeX0M4byWmZFeDkh5bW9mafZKIi8g/39e279c4-d59c-46d7-91c6-be35682ad8fb.png?version=4GWKnw_wvUVJsLx02JKTvTqN_N_WaHgH\",\r\n      \"frameSize\": {\r\n        \"x\": 400,\r\n        \"y\": 400\r\n      },\r\n      \"frameCount\": 4,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"4GWKnw_wvUVJsLx02JKTvTqN_N_WaHgH\"\r\n    },\r\n    \"2366a52f-370a-4400-96f2-a0ff889feb52\": {\r\n      \"name\": \"gold\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/UhwJNienG2M6yVKeX0M4byWmZFeDkh5bW9mafZKIi8g/2366a52f-370a-4400-96f2-a0ff889feb52.png?version=9n3QX3au9FkB8vvAs8Csjcvu9G9OViVu\",\r\n      \"frameSize\": {\r\n        \"x\": 28,\r\n        \"y\": 30\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"9n3QX3au9FkB8vvAs8Csjcvu9G9OViVu\"\r\n    },\r\n    \"3362808f-ad0c-4643-b1e4-9a9a75d9a5c6\": {\r\n      \"name\": \"platform\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/UhwJNienG2M6yVKeX0M4byWmZFeDkh5bW9mafZKIi8g/3362808f-ad0c-4643-b1e4-9a9a75d9a5c6.png?version=a55lp5WRmBu78LNuFyfNcGt_osb6r1lE\",\r\n      \"frameSize\": {\r\n        \"x\": 150,\r\n        \"y\": 37\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"a55lp5WRmBu78LNuFyfNcGt_osb6r1lE\"\r\n    }\r\n  }\r\n}",
    "long_instructions": "# Game Code\r\n\r\nThis is the code for the game without the start and end screens.  The function `gameStatus` (called on line 43 and defined on line 208) checks whether the user has won or lost, but it only adds a text message to the screen.  Gameplay also continues even after the game is over.\r\n\r\n## Do This\r\nRead the code, in particular the code before the draw loop (lines 1-24), inside the draw loop (lines 27-43), and inside the `gameStatus` function (lines 209-224).  It's okay if you don't understand everything in the game, but you should see that the code before the draw loop sets up the sprites, and the code inside the draw loop controls the gameplay."
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2019-01-08 20:44:17 +0000\",\"changed\":[\"notes\",\"code_functions\",\"show_debug_watch\",\"contained_level_names\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>