<Weblab>
  <config><![CDATA[{
  "published": true,
  "game_id": 58,
  "created_at": "2024-01-04T01:06:19.000Z",
  "level_num": "custom",
  "user_id": 18602,
  "properties": {
    "validation_enabled": "true",
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "start_sources": "              {\r\n  \"files\": [\r\n    {\r\n      \"name\": \"index.html\",\r\n      \"data\": \"<!DOCTYPE html>\\n<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"style.css\\\">\\n  </head>\\n  <body>\\n    \\n    <!-- div container with a class attribute around the 3 paragraph tags -->\\n    <div class=\\\"container-1\\\">\\n      <p>1</p>\\n      <p>2</p>\\n      <p>3</p>\\n \\n    </div>\\n    \\n    <!-- div container with a class attribute around the 3 paragraph tags -->\\n    <div class=\\\"container-2\\\">\\n      <p>1</p>\\n      <p>2</p>\\n      <p>3</p>\\n    </div>\\n    \\n    <!-- div container with a class attribute around the 3 paragraph tags -->\\n    <div class=\\\"container-3\\\">\\n      <p>1</p>\\n      <p>2</p>\\n      <p>3</p>\\n    </div>\\n    \\n    <!-- div container with a class attribute around the 3 paragraph tags -->\\n    <div class=\\\"container-4\\\">\\n      <p>1</p>\\n      <p>2</p>\\n      <p>3</p>\\n    </div>\\n    \\n    <!-- div container with a class attribute around the 3 paragraph tags -->\\n    <div class=\\\"container-5\\\">\\n      <p>1</p>\\n      <p>2</p>\\n      <p>3</p>\\n    </div>\\n  </body>\\n</html>\"\r\n    },\r\n    {\r\n      \"name\": \"style.css\",\r\n      \"data\": \".container-1 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #b691d6;\\n  \\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  \\n  /* Define how items should be distributed horizontally across the container */\\n  justify-content: center;\\n  \\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n\\n}\\n\\n.container-2 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #91d6ce;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n\\n  /* Define how items should be distributed horizontally across the container */\\n  justify-content: center;\\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n}\\n\\n.container-3 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #d691c4;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n\\n  /* Define how items should be distributed horizontally across the container */\\n  justify-content: center;\\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n\\n}\\n\\n.container-4 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #9cd691;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  \\n  /* Define how items should be distributed horizontally across the container */\\n  justify-content: center;\\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n}\\n\\n.container-5 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #f6f48c;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  \\n  /* Define how items should be distributed horizontally across the container */\\n  justify-content: center;\\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n}\\n\\n\\n/* Paragraphs are styled to look like boxes so that you can see what each Flex property does */\\np{\\n  background: #ffb447;\\n  width: 100px;\\n  border-style: solid;\\n  text-align: center;\\n  font-size: 36px;\\n  margin: 0px;\\n}\\n\\ndiv {\\n  height: 190px;\\n}\"\r\n    }\r\n  ]\r\n}\r\n            ",
    "long_instructions": "# Align-items\r\n\r\n<img src=\"https://images.code.org/5faacb3aa0bb52abe5d1e2b1a9eb8810-image-1704912368815.png\" style=\"height:300px; float:right\">\r\n\r\nAfter we go through our first 3 steps of enabling flex, defining the flow direction, whether items should wrap or not, and defining how the items should be distributed **horizontally**, we have the option of defining how the items should be distributed in the container **vertically**. We can do this with the `align-items` property.\r\n\r\nThis property has 5 value options. Assign each one to make the page look like the image to the right. \r\n\r\n# Do This\r\n1. Add the `align-items` property to each of the 3 `div` container rules in the stylesheet. \r\n2. Match the image on the right by applying the correct value with each of the `align-items` properties. Value options include: \r\n   - `flex-start;`\r\n   - `flex-end;`\r\n   - `center;`\r\n   - `baseline;`\r\n   - `stretch;`\r\n\r\n![]()",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2024-01-04 17:38:36 +0000\",\"changed\":[\"published\",\"validation_enabled\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2024-01-05 18:02:02 +0000\",\"changed\":[],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-09 00:31:57 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-09 01:11:19 +0000\",\"changed\":[\"start_sources\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-09 01:15:41 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-09 01:16:28 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-10 18:46:33 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-10 18:56:31 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-10 18:59:37 +0000\",\"changed\":[\"start_sources\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"}]"
}]]></config>
</Weblab>
