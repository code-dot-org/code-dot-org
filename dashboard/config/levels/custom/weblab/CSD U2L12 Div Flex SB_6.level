<Weblab>
  <config><![CDATA[{
  "published": true,
  "game_id": 58,
  "created_at": "2024-01-04T01:06:36.000Z",
  "level_num": "custom",
  "user_id": 18602,
  "properties": {
    "validation_enabled": "true",
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "start_sources": "              {\r\n  \"files\": [\r\n    {\r\n      \"name\": \"index.html\",\r\n      \"data\": \"<!DOCTYPE html>\\n<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"style.css\\\">\\n  </head>\\n  <body>\\n    \\n    <!-- div container with a class attribute around the 6 images -->\\n    <div class=\\\"container-1\\\">\\n      <img src=\\\"one.jpg\\\" alt=\\\"one\\\">\\n      <img src=\\\"two.jpg\\\" alt=\\\"two\\\">\\n      <img src=\\\"three.jpg\\\" alt=\\\"three\\\">\\n      <img src=\\\"four.jpg\\\" alt=\\\"four\\\">\\n      <img src=\\\"five.jpg\\\" alt=\\\"five\\\">\\n      <img src=\\\"six.jpg\\\" alt=\\\"six\\\">\\n \\n    </div>\\n    \\n    <!-- div container with a class attribute around the 6 images -->\\n    <div class=\\\"container-2\\\">\\n      <img src=\\\"one.jpg\\\" alt=\\\"one\\\">\\n      <img src=\\\"two.jpg\\\" alt=\\\"two\\\">\\n      <img src=\\\"three.jpg\\\" alt=\\\"three\\\">\\n      <img src=\\\"four.jpg\\\" alt=\\\"four\\\">\\n      <img src=\\\"five.jpg\\\" alt=\\\"five\\\">\\n      <img src=\\\"six.jpg\\\" alt=\\\"six\\\">\\n    </div>\\n    \\n    <!-- div container with a class attribute around the 6 images -->\\n    <div class=\\\"container-3\\\">\\n      <img src=\\\"one.jpg\\\" alt=\\\"one\\\">\\n      <img src=\\\"two.jpg\\\" alt=\\\"two\\\">\\n      <img src=\\\"three.jpg\\\" alt=\\\"three\\\">\\n      <img src=\\\"four.jpg\\\" alt=\\\"four\\\">\\n      <img src=\\\"five.jpg\\\" alt=\\\"five\\\">\\n      <img src=\\\"six.jpg\\\" alt=\\\"six\\\">\\n    </div>\\n    \\n    <!-- div container with a class attribute around the 6 images -->\\n    <div class=\\\"container-4\\\">\\n      <img src=\\\"one.jpg\\\" alt=\\\"one\\\">\\n      <img src=\\\"two.jpg\\\" alt=\\\"two\\\">\\n      <img src=\\\"three.jpg\\\" alt=\\\"three\\\">\\n      <img src=\\\"four.jpg\\\" alt=\\\"four\\\">\\n      <img src=\\\"five.jpg\\\" alt=\\\"five\\\">\\n      <img src=\\\"six.jpg\\\" alt=\\\"six\\\">\\n    </div>\\n    \\n    <!-- div container with a class attribute around the 6 images -->\\n    <div class=\\\"container-5\\\">\\n      <img src=\\\"one.jpg\\\" alt=\\\"one\\\">\\n      <img src=\\\"two.jpg\\\" alt=\\\"two\\\">\\n      <img src=\\\"three.jpg\\\" alt=\\\"three\\\">\\n      <img src=\\\"four.jpg\\\" alt=\\\"four\\\">\\n      <img src=\\\"five.jpg\\\" alt=\\\"five\\\">\\n      <img src=\\\"six.jpg\\\" alt=\\\"six\\\">\\n    </div>\\n    \\n    <!-- div container with a class attribute around the 6 images -->\\n    <div class=\\\"container-6\\\">\\n      <img src=\\\"one.jpg\\\" alt=\\\"one\\\">\\n      <img src=\\\"two.jpg\\\" alt=\\\"two\\\">\\n      <img src=\\\"three.jpg\\\" alt=\\\"three\\\">\\n      <img src=\\\"four.jpg\\\" alt=\\\"four\\\">\\n      <img src=\\\"five.jpg\\\" alt=\\\"five\\\">\\n      <img src=\\\"six.jpg\\\" alt=\\\"six\\\">\\n    </div>\\n    \\n\\n    \\n    \\n  </body>\\n</html>\"\r\n    },\r\n    {\r\n       \"name\": \"style.css\",\r\n      \"data\": \"/* 1) Examine the image in the instructions to figure out which containers should get which horizontal and vertical alignment properties. */\\n\\n/* 2) Add the correct properties and values to each container's ruleset in the CSS file */\\n\\n.container-1 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #b691d6;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: column;\\n  flex-wrap: wrap; \\n\\n  /* ADD CODE BELOW to define how items should be distributed horizontally across the container */\\n\\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n \\n\\n\\n}\\n\\n.container-2 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #91d6ce;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: row;\\n  flex-wrap: nowrap; \\n\\n  /* ADD CODE BELOW to define how items should be distributed horizontally across the container */\\n\\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n}\\n\\n.container-3 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #d691c4;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: row-reverse;\\n  flex-wrap: wrap; \\n\\n  /* ADD CODE BELOW to define how items should be distributed horizontally across the container */\\n \\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n}\\n\\n.container-4 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #9cd691;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: column-reverse;\\n  flex-wrap: wrap;\\n\\n  /* ADD CODE BELOW to define how items should be distributed horizontally across the container */\\n\\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n}\\n\\n.container-5 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #f6f48c;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: row;\\n  flex-wrap: nowrap; \\n\\n  /* ADD CODE BELOW to define how items should be distributed horizontally across the container */\\n  \\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n}\\n\\n.container-6 {\\n  /* The div container has a background color so you can see how the items are positioned within it */\\n  background: #f68c8c;\\n\\n  /* Create a flex layout context */\\n  display: flex;\\n\\n  /* Define the flow direction \\n  and if the items should wrap */\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n\\n  /* ADD CODE BELOW to define how items should be distributed horizontally across the container */\\n\\n\\n  /* ADD CODE BELOW to define how items should be distributed vertically within the container */\\n\\n\\n}\\n\\n\\nimg{\\n  width: 75px;\\n  border-style: solid;\\n}\\n\\ndiv {\\n  height: 225px;\\n}\"\r\n    },\r\n    {\r\n      \"name\": \"one.jpg\",\r\n      \"url\": \"https://images.code.org/6d03fd210c0f3527e02bf011f46575b5-one.jpg\"\r\n    },\r\n    {\r\n      \"name\": \"two.jpg\",\r\n      \"url\": \"https://images.code.org/553a4b7c78ab37b38695b095a5a12517-two.jpg\"\r\n    },\r\n    {\r\n      \"name\": \"three.jpg\",\r\n      \"url\": \"https://images.code.org/f3fe826f3692d138b269d153089d697b-three.jpg\"\r\n    },\r\n    {\r\n      \"name\": \"four.jpg\",\r\n      \"url\": \"https://images.code.org/efe517869f6385313ef456b740961174-four.jpg\"\r\n    },\r\n    {\r\n      \"name\": \"five.jpg\",\r\n      \"url\": \"https://images.code.org/babf3e1c199abdce5aeb270b66f16eb1-five.jpg\"\r\n    },\r\n    {\r\n      \"name\": \"six.jpg\",\r\n      \"url\": \"https://images.code.org/dbf46e859657df01200e8300e271b5da-six.jpg\"\r\n    }\r\n  ]\r\n}\r\n            ",
    "long_instructions": "<img src=\"https://images.code.org/ce09cccb20efba7f78af22e52bfbed46-image-1705713180877.png\" style=\"width:250px; float: right;\">\r\n\r\n# Which properties?\r\n\r\nCan you figure out which Flex properties were used with each container to create the image to the right?\r\n\r\nAll containers have `display`, `flex-direction`, and `flex-wrap` already defined. Can you figure out which horizontal and vertical alignment properties each container has?\r\n\r\n# Do This\r\n\r\n1. Examine the image to the right to figure out which containers should get which horizontal and vertical alignment properties.\r\n2. Add the correct properties and values to each container's ruleset in the CSS file.\r\n   - As before, you may need to resize your \"Preview\" window to determine if you've matched the image.\r\n\r\n<br>\r\n\r\n::: details [üîé **Show Me How To Get Started** üîç]\r\n\r\n<img src=\"https://images.code.org/88a2f94e85079d5288bcd1f25ab1a9af-image-1708194006281.gif\" style=\"width:500px\">\r\n\r\n**More resources are in the \"Help and Tips\" tab**\r\n:::\r\n\r\n<br>\r\n\r\n**Don't forget to refer back to your <a href=\"https://docs.google.com/document/d/1f5t7oUfV-5PRtcKrJVskrb_Mt_r8941VT-Qa-07mP9o/edit?usp=sharing\">Flexbox Cheat Sheet</a> when needed!**\r\n\r\n",
    "encrypted_examples": "tgtMj87hark+Ez/hf2jQR1168DsLOo4mekmP+EjtExTshW0wGOP7cH8MLaom\neayVPZucvPe2uyqgcvH7wSuD3g==\n",
    "display_name": "Which Properties?",
    "bubble_choice_description": "Can you figure out which Flex properties were used with each container?",
    "thumbnail_url": "https://images.code.org/39ee7a000662132c698fef9303e5739b-which-properties.png"
  },
  "audit_log": "[{\"changed_at\":\"2024-01-04 19:03:09 +0000\",\"changed\":[\"published\",\"validation_enabled\"],\"changed_by_id\":19162,\"changed_by_email\":\"carl.reiner@code.org\"},{\"changed_at\":\"2024-01-05 18:02:53 +0000\",\"changed\":[],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-11 00:01:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-11 00:09:53 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-19 21:02:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-19 21:02:45 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-20 01:15:49 +0000\",\"changed\":[\"start_sources\",\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-20 01:20:57 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-20 19:20:15 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-02-16 17:05:24 +0000\",\"changed\":[\"start_sources\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-02-17 18:20:46 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"}]"
}]]></config>
</Weblab>
