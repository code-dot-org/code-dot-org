<Weblab>
  <config><![CDATA[{
  "published": true,
  "game_id": 58,
  "created_at": "2024-01-04T01:06:05.000Z",
  "level_num": "custom",
  "user_id": 18602,
  "properties": {
    "validation_enabled": "true",
    "encrypted": "false",
    "long_instructions": "# Display, Direction and Wrap\r\n\r\nThe first three steps we typically follow when applying Flex properties is to establish the layout, define the flow direction and if items should wrap, and define how the items should be distributed. Let's try out the first two steps and establish flex layout and define the direction and wrap.\r\n\r\n# Do This\r\n\r\n1. Add a `div` container around the paragraph tags.\r\n2. Add the class name `.container` to the `div` tag.\r\n3. Add the following Flex properties to the container:\r\n   - Establish flex layout with `display: flex;`\r\n   - Define the flow direction with `flex-direction: value;`. \r\n   \t   - Your value options for `flex-direction` are `row`, `row-reverse`, `column`, and `column-reverse`.\r\n        - Try out each of them to see what they do!\r\n    - Define if items should wrap with `flex-wrap: value;`.\r\n      - Your value options for `flex-wrap` are `wrap`, `nowrap`, or `wrap-reverse`.\r\n      - Try out each of them to see what they do!\r\n\r\n_**Note:** You may need to change the size of your results window to see the wrapping effects on the page content as shown in the gif below._\r\n\r\n<img src=\"https://images.code.org/17b62eb8b8fd96be9ec0e2f02967b97f-image-1704746127275.gif\" style=\"width: 200px\">",
    "mini_rubric": "false",
    "submittable": "false",
    "start_sources": "              {\r\n  \"files\": [\r\n    {\r\n      \"name\": \"index.html\",\r\n      \"data\": \"<!DOCTYPE html>\\n<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"style.css\\\">\\n  </head>\\n  <body>\\n    \\n    <!-- Add a div container with a class attribute around the 3 paragraph tags -->\\n\\n      <p>1</p>\\n      <p>2</p>\\n      <p>3</p>\\n    \\n    \\n  </body>\\n</html>\"\r\n    },\r\n    {\r\n      \"name\": \"style.css\",\r\n      \"data\": \".container {\\n  /* We gave the div container a background color so you can see how the items are positioned within it */\\n  background: #b691d6;\\n  \\n  /* First, create a flex layout context */\\n\\n\\n  /* Then, define the flow direction \\n  and if the items should wrap */\\n\\n}\\n\\n/* We styled the paragraphs to look like boxes so that you can learn what each Flex property does */\\np{\\n  background: #ffb447;\\n  width: 200px;\\n  height:200px;\\n  border-style: solid;\\n  text-align: center;\\n  font-size: 36px;\\n}\"\r\n    }\r\n  ]\r\n}\r\n            ",
    "hide_share_and_remix": "true",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2024-01-04 01:08:49 +0000\",\"changed\":[\"published\",\"validation_enabled\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-08 19:44:32 +0000\",\"changed\":[\"long_instructions\",\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-08 19:52:45 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-08 19:55:08 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-08 19:58:20 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-08 20:00:10 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-08 20:36:36 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"}]"
}]]></config>
</Weblab>
