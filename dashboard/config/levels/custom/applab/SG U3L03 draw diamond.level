<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2017-10-09T15:13:53.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "moveForward": {
        "params": [
          ""
        ],
        "paletteParams": [
          ""
        ]
      },
      "turnLeft": {
        "paramButtons": {
          "maxArgs": 0
        },
        "params": [
          ""
        ],
        "paletteParams": [
          ""
        ]
      },
      "comment_Goals_1": {
        "goal": "Move turtle"
      },
      "comment_Goals_2": {
        "goal": "Orient turtle"
      },
      "comment_Goals_3": {
        "goal": "Define function"
      },
      "comment_Goals_4": {
        "goal": "Call function"
      },
      "functionParams_none": null,
      "callMyFunction": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "short_instructions": "Create a function called drawDiamond() that makes use of your previous work to draw the complete diamond. (Click to see full instructions)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "slider_speed": "0.1",
    "show_turtle_before_run": "true",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "blocks",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "true",
    "encrypted_examples": "Wau02teIxCqXRecgZXPMquhI4TZojKFCIorK3Xc8jFQZFyOP3GakPtvcRznr\ntBie\n",
    "long_instructions": "# Do This:\r\nWe're finally ready to make our diamond! **Define** a function named `function drawDiamond()` that **calls** `drawSide()` multiple times in order to complete the drawing. Your final solution should be triggered by **a single call** to `drawDiamond()`. \r\n\r\n<table>\r\n<tr>\r\n<td><img src=\"https://s3.amazonaws.com/uploads.hipchat.com/65395/961892/NoxVhFlLf9HlybZ/upload.png\" width=200></td>\r\n<td><img src=\"https://images.code.org/dca51c5b17a8c0778787337c3609557c-image-1441802821237.gif\" width=200></td>\r\n</tr>\r\n</table>\r\n\r\n<hr>\r\n\r\n**Notes**:\r\n\r\nIn the end you will have 4 functions defined:\r\n\r\n* drawDiamond()\r\n* drawSide()\r\n* drawStep()\r\n* right()\r\n\r\nThese 4 functions work sort of like a hierarchy of top-down design.  At the top is `drawDiamond()` which makes calls to `drawSide()`, which makes calls to `drawStep()` and `right()`.\r\n\r\nFor most programming problems that you face, the problem won't be broken down into pieces like it was for this series of puzzles. You'll have to figure out your own hierarchy of functions based on which patterns you want to use multiple times. This is why planning your solution ahead of time can make your code more efficient. \r\n\r\nSubgoals will help you do this. Once you recognize that the diamond can be drawn using the same function repeated 4 times, you can note with a subgoal comment that you'll need to define and call a function for `drawSide()`. Then you can figure out that one side can be drawn using the same function 3 times plus a couple of steps, you can make note to define and call `drawStep()`. Once you've planned the solution, you can fill in blocks to complete it.",
    "never_autoplay_video": "false",
    "examples_required": "false",
    "project_template_level_name": "SG U3L03 - drawDiamond Template",
    "submittable": "false",
    "hide_view_data_button": "true",
    "droplet_tooltips_disabled": "true",
    "debugger_disabled": "true",
    "lock_zero_param_functions": "true",
    "execute_palette_apis_only": "true",
    "log_conditions": [
      {
        "entries": [
          "[forTest]"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "Hey! You're using a programming construct - loops - we haven't (officially) learned about yet :).  Don't worry, your knowledge will come in handy later, but for now, try to stick to the constraints of this problem - no loops, please."
      },
      {
        "entries": [
          "turnLeft:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have discovered that the turnLeft() function can accept the number of degrees to turn!  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem - use only turnLeft()."
      },
      {
        "entries": [
          "moveForward:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have discovered that the moveForward() function can accept the number of pixels to move forward!  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem."
      },
      {
        "entries": [
          "turnRight"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have found the turnRight function. You can use this knowledge later, but for now, try to stick to the constraints of this problem and just write a function called right()."
      },
      {
        "entries": [
          "drawSide"
        ],
        "matchType": "exact",
        "minTimes": 4,
        "message": "You need to define \"function drawSide()\" and calling it 4 times - once to draw each side of the diamond. Did you spell and capitalize it the same way as the instructions? Did you call it 4 times?"
      },
      {
        "entries": [
          "drawStep"
        ],
        "matchType": "exact",
        "minTimes": 1,
        "message": "You need to define \"function drawStep\" and make a call it. Did you spell and capitalize it the same way as the instructions? Did you call it?"
      },
      {
        "entries": [
          "drawDiamond"
        ],
        "matchType": "exact",
        "minTimes": 1,
        "message": "You need to define \"function drawDiamond()\" and make a call it exactly once. Did you spell and capitalize it the same way as the instructions? Did you call it?"
      },
      {
        "entries": [
          "right"
        ],
        "matchType": "exact",
        "minTimes": 1,
        "message": "Your code should be calling right()."
      },
      {
        "entries": [
          "moveForward"
        ],
        "matchType": "exact",
        "minTimes": 28,
        "message": "It seems like you're not moving forward enough times to draw the figure. There should be at least 28 line segments - 4 sides of 7. "
      }
    ],
    "fail_on_lint_errors": "false",
    "instructions_important": "false",
    "makerlab_enabled": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "disable_procedure_autopopulate": "false",
    "teacher_markdown": "**DECOMPOSITION**\r\nEncourage the students to be aware of the pattern recognition that occurs in this example. By noticing the repeated patterns (each side repeated, etc.) it can help them to determine when they need to define functions. Functions should be used whenever a pattern is repeated more than one time, it helps to make the code more reusable. This also helps to decompose the problem into smaller pieces which are easier to solve.",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-06-09 15:38:56 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-06-09 15:40:15 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-06-09 15:41:07 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-06-09 15:41:28 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-06-09 15:41:52 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-06-09 17:42:15 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-06-09 17:44:56 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-06-09 17:48:39 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-06-09 22:13:35 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"},{\"changed_at\":\"2017-10-09 15:33:49 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"markdown_instructions\",\"project_template_level_name\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-10 17:15:15 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-12 17:22:31 +0000\",\"changed\":[\"code_functions\",\"text_mode_at_start\",\"encrypted_examples\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-20 12:39:03 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>