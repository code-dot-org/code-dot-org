<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2024-01-12T21:32:58.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "false",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "true",
    "mini_rubric": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" tabindex=\"1\" data-radium=\"true\" style=\"width: 320px; height: 450px; transform: scale(1.25); display: none;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"twoTone\" id=\"BG\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255); background-size: 320px 450px; background-image: url(&quot;https://images.code.org/776435d4e0407e6dd5c4548c79b2a1fe-ticTacToeBG.png&quot;);\" data-canonical-image-url=\"//images.code.org/776435d4e0407e6dd5c4548c79b2a1fe-ticTacToeBG.png\" data-image-type=\"file\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 14px; top: 102px; text-align: center;\" id=\"aSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(116, 141, 250); background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 103px; height: 18px; position: absolute; left: 110px; top: 50px;\" id=\"tryAgainLabel\" class=\"design-mode-hidden\">Try Again!</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 114px; top: 102px; text-align: center;\" id=\"bSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 212px; top: 102px; text-align: center;\" id=\"cSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 15px; top: 300px; text-align: center;\" id=\"gSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 114px; top: 301px; text-align: center;\" id=\"hSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 212px; top: 301px; text-align: center;\" id=\"iSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(250, 201, 116); background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 18px; padding: 2px 15px; width: 112px; height: 23px; position: absolute; left: 102px; top: 70px;\" id=\"player1TurnLabel\">X's Turn</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(250, 116, 116); background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 18px; padding: 2px 15px; width: 113px; height: 23px; position: absolute; left: 101px; top: 70px;\" id=\"player2TurnLabel\" class=\"design-mode-hidden\">O's Turn</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 20px; padding: 2px 15px; width: 190px; height: 35px; position: absolute; left: 67px; top: 58px; text-align: center;\" id=\"winLabel\"></label><button id=\"resetBtn\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 25px; width: 100px; background-color: rgb(116, 141, 250); color: rgb(0, 0, 0); border-color: rgba(0, 0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; position: absolute; left: 110px; top: 415px;\" class=\"design-mode-hidden\">Reset Game</button><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 15px; top: 200px; text-align: center;\" id=\"dSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 113px; top: 202px; text-align: center;\" id=\"eSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 210px; top: 201px; text-align: center;\" id=\"fSpace\"></label></div></div>",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "start_blocks": "//Setting up variables\r\nvar player = 1;\r\nvar spaceText = \"\";\r\nvar gameOver = false;\r\n\r\n//Event handlers for each space on the board\r\nonEvent(\"aSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"aSpace\");\r\n  updateBoard();\r\n  setText(\"aSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"bSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"bSpace\");\r\n  updateBoard();\r\n  setText(\"bSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"cSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"cSpace\");\r\n  updateBoard();\r\n  setText(\"cSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"dSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"dSpace\");\r\n  updateBoard();\r\n  setText(\"dSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"eSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"eSpace\");\r\n  updateBoard();\r\n  setText(\"eSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"fSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"fSpace\");\r\n  updateBoard();\r\n  setText(\"fSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"gSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"gSpace\");\r\n  updateBoard();\r\n  setText(\"gSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"hSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"hSpace\");\r\n  updateBoard();\r\n  setText(\"hSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"iSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"iSpace\");\r\n  updateBoard();\r\n  setText(\"iSpace\",spaceText);\r\n  checkWin();\r\n});\r\n\r\n//update board function that allows for the game play to proceeed\r\n//First it checks if the player tried clicking on a space that is already used\r\n//Next it looks at which player's turn it is and assigns the correct letter to the space before\r\n//switching the turn\r\nfunction updateBoard() {\r\n if (!gameOver){\r\n    hideElement(\"tryAgainLabel\");\r\n    if (spaceText != \"\") {\r\n      showElement(\"tryAgainLabel\");\r\n    } else if (player == 1) {\r\n      spaceText = \"X\";\r\n      player = 2;\r\n      hideElement(\"player1TurnLabel\");\r\n      showElement(\"player2TurnLabel\");\r\n    } else {\r\n      spaceText = \"O\";\r\n      player = 1;\r\n      hideElement(\"player2TurnLabel\");\r\n      showElement(\"player1TurnLabel\");\r\n    }\r\n  }\r\n}\r\n\r\n//check win function that looks through the board to see if the game is over\r\n//first the function gets the value that is in each spot on the board\r\n//Next it uses those to check if there is a win via a row, a column, or a diagonal\r\n//If one of these conditions is true, this function calls the appropriate win function to update the screen\r\n//Last, if no one has won it checks to see if all the spaces are filled and therefore the game is a draw\r\nfunction checkWin() {\r\n  if (!gameOver){\r\n    var a = getText(\"aSpace\");\r\n    var b = getText(\"bSpace\");\r\n    var c = getText(\"cSpace\");\r\n    var d = getText(\"dSpace\");\r\n    var e = getText(\"eSpace\");\r\n    var f = getText(\"fSpace\");\r\n    var g = getText(\"gSpace\");\r\n    var h = getText(\"hSpace\");\r\n    var i = getText(\"iSpace\");\r\n    \r\n    //The if and first else-if check the horizontal rows for a win\r\n    if((a==\"X\"&& b==\"X\" && c==\"X\")||(d==\"X\"&& e==\"X\" && f==\"X\")||(g==\"X\"&& h==\"X\" && i==\"X\")) {\r\n      xWins();\r\n    } else if ((a==\"O\"&& b==\"O\" && c==\"O\")||(d==\"O\"&& e==\"O\" && f==\"O\")||(g==\"O\"&& h==\"O\" && i==\"O\")){\r\n      oWins();\r\n    //The next two else-ifs check the vertical columns for a win   \r\n    } else if ((a==\"X\"&& d==\"X\" && g==\"X\")||(b==\"X\"&& e==\"X\" && h==\"X\")||(c==\"X\"&& f==\"X\" && i==\"X\")) {\r\n      xWins();\r\n    } else if((a==\"O\"&& d==\"O\" && g==\"O\")||(b==\"O\"&& e==\"O\" && h==\"O\")||(c==\"O\"&& f==\"O\" && i==\"O\")) {\r\n      oWins();\r\n    //The next two else-ifs check the diagonals for a win  \r\n    } else if ((a==\"X\"&& e==\"X\" && i==\"X\")||(g==\"X\"&& e==\"X\" && c==\"X\")) {\r\n      xWins();\r\n    } else if ((a==\"O\"&& e==\"O\" && i==\"O\")||(g==\"O\"&& e==\"O\" && c==\"O\")) {\r\n      oWins();\r\n    //This last else-if checks to see if the board is full and the game is a draw\r\n    } else if (a!=\"\" && b!=\"\" && c!=\"\" && d!=\"\" && e!=\"\" && f!=\"\" && g!=\"\" && h!=\"\" && i!=\"\" ){\r\n      setProperty(\"winLabel\", \"background-color\", rgb(255,255,255,1));\r\n      setText(\"winLabel\", \"⚖️ Draw ⚖️\");\r\n      hideElement(\"player1TurnLabel\");\r\n      hideElement(\"player2TurnLabel\");\r\n      showElement(\"resetBtn\");\r\n      gameOver = true;\r\n    }\r\n  }  \r\n}\r\n\r\nfunction xWins(){\r\n  setProperty(\"winLabel\", \"background-color\", rgb(255,255,255,1));\r\n  setText(\"winLabel\", \"🙅 X's Win! 🙅 \");\r\n  hideElement(\"player1TurnLabel\");\r\n  hideElement(\"player2TurnLabel\");\r\n  showElement(\"resetBtn\");\r\n  gameOver = true;\r\n}\r\n\r\nfunction oWins(){\r\n  setProperty(\"winLabel\", \"background-color\", rgb(255,255,255,1));\r\n  setText(\"winLabel\", \"👌 O's Win! 👌 \");\r\n  hideElement(\"player1TurnLabel\");\r\n  hideElement(\"player2TurnLabel\");\r\n  showElement(\"resetBtn\");\r\n  gameOver = true;\r\n}\r\n\r\nonEvent(\"resetBtn\", \"click\", function( ) {\r\n  resetGame();\r\n});\r\n\r\nfunction resetGame() {\r\n  setText(\"aSpace\", \"\");\r\n  setText(\"bSpace\", \"\");\r\n  setText(\"cSpace\", \"\");\r\n  setText(\"dSpace\", \"\");\r\n  setText(\"eSpace\", \"\");\r\n  setText(\"fSpace\", \"\");\r\n  setText(\"gSpace\", \"\");\r\n  setText(\"hSpace\", \"\");\r\n  setText(\"iSpace\", \"\");\r\n  player = 1;\r\n  hideElement(\"player2TurnLabel\");\r\n  showElement(\"player1TurnLabel\");\r\n  hideElement(\"resetBtn\");\r\n  setText(\"winLabel\", \"\");\r\n  setProperty(\"winLabel\", \"background-color\", rgb(255,255,255,0));\r\n  gameOver = false;\r\n}\r\n",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "thumbnail_url": "https://images.code.org/4ab1201332572786e067499b0d3c84d9-tictactoegameplay.gif",
    "bubble_choice_description": "Spice Level: 🌶🌶🌶\r\n\r\nIn this lesson sequence, you will create the conditionals that help power a Tic Tac Toe game.",
    "display_name": "Tic Tac Toe App, part 1",
    "long_instructions": "## The Neverending Battle Between X's and O's\r\n\r\n<br>\r\n\r\nOne of the world's oldest games is now getting ready for its digital facelift. You are being tasked with developing the brain behind the neverending drama between the X's and O's. Who wins? Who loses? What makes the game a draw? Armed with your emerging knowledge of conditionals, you will decide!\r\n\r\n<br>\r\n\r\n<p style=\"color: #000000; font-size: 1.3em\">🖥️ Explore the prototype on the left in order to get a sense for how the app should be designed.</p>\r\n\r\n<br>\r\n\r\n\r\n\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n\r\n<i>With your partner, discuss the following:</i>\r\n\r\n<br>\r\n\r\n❓ What is the **purpose** of the app?\r\n\r\n<br>\r\n\r\n❓ Describe the **functionality** of the app. How do these design decisions fit the purpose?\r\n</div>\r\n\r\n",
    "name_suffix": "_2024",
    "preload_asset_list": null
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:32:58.916+00:00\",\"changed\":[\"cloned from \\\"U4_L07_Conditionals Practice_Choice_3-1\\\"\"],\"cloned_from\":\"U4_L07_Conditionals Practice_Choice_3-1\"}]"
}]]></config>
  <blocks/>
</Applab>