<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2023-04-25T18:30:26.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "false",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "project_template_level_name": "U7_L03_Parameters-Return Practice_Choice_2-Template",
    "long_instructions": "## Yet Another Round of Filtering\r\n\r\nXochitl and Destiny are extremely pleased with our initial genre filter! As they showed their app prototype to some of their potential users, they got one common piece of feedback that they felt it was important to address:\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ddecd1; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">🧑🏿👧🏽👦 Analyzing User Stories</summary>\r\n    <div style=\"background-color: #ddecd1; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n\t<div style=\"margin-left: 20px; margin-right: 20px; margin-top: 20px; height: 100px\">\r\n\t<img src=\"https://images.code.org/74a3805c8223f78dd7601e0f8171a5ae-userStoryIcon.png\" style=\"margin-right: 40px; float: left\">\r\n\t<p>I love this app and plan to use it, but I think that it might not go far enough with solving the issue of picking the right movie for me. When I looked at the list for Thriller movies (my fav!) there were still like 138 movies to choose from... ugh! What about letting us also filter by a range of years?\r\n \t</p>\r\n\t</div>\r\n</div>\r\n</details>\r\n\r\n<br>\r\n\r\n<span role=\"img\" aria-label=\"Four\">4️⃣</span> Create the <code style=\"color:black; background-color:#68d995\">filterByRelease()</code> function in order to further filter the movies that are displayed to the user. \r\n\r\n* <b>Parameter</b>: The <span style=\"color: #bb77c7\">filteredIndexValues</span> list\r\n* <b>Return</b>: A list of movie titles. This return data will be saved into the <span style=\"color: #bb77c7\">filteredMovieValues</span> list.\r\n* The <span style=\"color: #bb77c7\">yearIndex</span> variable is set when the <code style=\"color:black; background-color:#68d995\">cycleYValue()</code> function is called by the user clicking the<i> yearButton</i> element. Use the value of this variable to create a conditional statement that checks <span style=\"color: #bb77c7\">netflixYear</span> for each index that is stored in <span style=\"color: #bb77c7\">filteredIndexValues</span>. If it is a match, save the title of the movie into <span style=\"color: #bb77c7\">tempList</span>.\r\n\r\n\r\n<br>\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">🔎 Helpful Hints to Get Started</summary>\r\n\r\n<br>\r\n\r\nThe argument that is passed into this function (<span style=\"color: #bb77c7\">indexList</span>) contains all of the index values where the user-selected genre of movie is contained. We will now use these values to pull information from our other two data lists: <span style=\"color: #bb77c7\">netflixYear</span> & <span style=\"color: #bb77c7\">netflixTitle</span>.\r\n\r\n<br>\r\n\r\nFirst, set up a loop to iterate through the whole <span style=\"color: #bb77c7\">indexList</span>.\r\n\r\n<br>\r\n\r\nWithin the loop, create an <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> conditional statement that tests several expressions using the<strong> and</strong> (<strong>&&</strong>) logical operator:\r\n* Create a temporary variable, <span style=\"color: #bb77c7\">index</span>, that will hold the element data stored in <span style=\"color: #bb77c7\">indexList</span>\r\n* Test what time period the user has selected. This data is stored in the <span style=\"color: #bb77c7\">yearIndex</span> variable. There is a comment in the function that explains the time period that each value of <span style=\"color: #bb77c7\">yearIndex</span> represents. If <span style=\"color: #bb77c7\">yearIndex</span> == 0, for instance, that represents the time period \"Before 1990\"\r\n* Check the year that is stored in <span style=\"color: #bb77c7\">netflixYear[index]</span> and test if it is within the user-selected range\r\n<br>\r\n\r\n<img src=\"https://images.code.org/b0e965a8bb3feb138b81b0692a8cdeb7-Parameters and Return Practice_2-5-1.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n\r\n<br>\r\n\r\n<img src=\"https://images.code.org/04eede86d0a11127227cad62123e83d9-Parameters and Return Practice_2-5-2.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n\r\n<br>\r\n\r\n<hr>\r\n\r\n<br>\r\n\r\nIf the expressions are true, then use <code style=\"color:white; background-color:#bb77c7\">appendItem()</code> to add the name of movie to <span style=\"color: #bb77c7\">tempList</span>, pulling the data from <span style=\"color: #bb77c7\">netflixTitle</span>.\r\n\r\n<div style=\"column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 100%\"> \r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/2973d420db1d23c8ff521eb6f98ca0b8-Parameters and Return Practice_2-5-3.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    </p>\r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n\t<img src=\"https://images.code.org/18d8e2dd40936b360cd3122bbf7ea575-Parameters and Return Practice_2-5-4.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    \r\n    </p>\r\n </div>\r\n\r\n<br>\r\n\r\nThe function will return <span style=\"color: #bb77c7\">tempList</span>-- our final, filtered list!\r\n\r\n</details>\r\n\r\n<br>\r\n<br>\r\n\r\n🖥️ **Test your code!** This time, there is a watcher attached to <span style=\"color: #bb77c7\">filteredMovieTitles</span>. When you run your program, this watcher should display the actual movie titles that are filtered by both genre and by release date! Below are some sample tests based on Genre & Year. The results will show the first and last movie title in the list for you to check that your algorithm is returning the proper values.\r\n* Thriller / 2000 - 2005 / first: \"Dayveon\", last: \"Melvin Goes to Dinner\"\r\n* Adventure / 2006 - 2015 / first: \"14 Minutes from Earth\", last: \"I Am Wrath\"\r\n* Drama / 2016 - Present / first: \"Beneath the Leaves\", last: \"The Long Goodbye: The Kara Tippetts Story\"\r\n* Musical / Before 1990 / first: \"Thelonious Monk\", last: \"Gigi\"\r\n\r\n<br>\r\n",
    "display_name": "Netflix Navigator, part 5",
    "bubble_choice_description": "Spice Level: 🌶🌶\r\n\r\nFurther filter the list of appropriate movies to include only those within the user-selected date range.",
    "thumbnail_url": "https://images.code.org/912624e03b43f34d3ba82b3f439682d8-netflix_titleCard.png",
    "watchers_prepopulated": "[\"filteredMovieTitles\"]",
    "preload_asset_list": null,
    "encrypted_examples": "+cKAeqQAV95S6hiRgEG+s7PckJAOyidf4tBrjyXX4WkQJy5Fw1i7IfYuCQ3V\n+csFabXTAgZIXz+A8p3LD8Bdcg==\n"
  },
  "audit_log": "[{\"changed_at\":\"2023-04-25T18:30:26.623+00:00\",\"changed\":[\"cloned from \\\"U7_L03_Parameters and Return Practice_Choice_2-4\\\"\"],\"cloned_from\":\"U7_L03_Parameters and Return Practice_Choice_2-4\"},{\"changed_at\":\"2023-04-25 18:30:35 +0000\",\"changed\":[\"code_functions\",\"display_name\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-25 19:46:02 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-26 16:40:51 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-26 17:27:17 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-26 17:39:09 +0000\",\"changed\":[\"code_functions\",\"show_debug_watch\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-26 17:40:28 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-26 17:49:32 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-05-08 15:31:32 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-05-09 18:18:50 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-07-03 15:41:49 +0000\",\"changed\":[\"code_functions\",\"bubble_choice_description\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-10-30 21:14:00 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-10-30 21:18:06 +0000\",\"changed\":[\"code_functions\",\"watchers_prepopulated\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-10-30 21:18:49 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"watchers_prepopulated\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-10-30 21:22:18 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>