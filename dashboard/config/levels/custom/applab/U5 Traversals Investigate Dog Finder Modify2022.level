<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2022-01-06T20:06:21.000Z",
  "level_num": "custom",
  "user_id": 832,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "onEvent": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "getNumber": null,
      "getText": null,
      "setProperty": null,
      "getProperty": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "functionParams_none": null,
      "callMyFunction": null,
      "declareAssign_list_abd": null,
      "length": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "accessListItem": null,
      "listLength": null,
      "getList": null,
      "getColumn": null,
      "forLoop_i_0_4": null
    },
    "embed": "false",
    "instructions_important": "false",
    "submittable": "false",
    "start_blocks": "// get data as lists from the dataset and store in variables\r\nvar dogNames = getColumn(\"Dogs\", \"Name\");\r\nvar dogHeight = getColumn(\"Dogs\", \"Maximum Height\");\r\nvar dogImages = getColumn(\"Dogs\", \"Image\");\r\n\r\n// set up blank lists to store the filtered lists\r\nvar filteredDogNames = [];\r\nvar filteredDogImages = [];\r\n\r\n// filter the lists and sets up the screen\r\nlistSetup();\r\n\r\n// when the dropdown is changed, filter the lists and set up the screen\r\nonEvent(\"sizeDropdown\", \"change\", function(){\r\n  listSetup();\r\n});\r\n\r\n// filters the lists, based on the value in the dropdown\r\n// if the dog height is under a certain amount and the dropdown matches a value\r\n// the corresponding name and image will be stored in the filtered lists. \r\nfunction filter(){\r\n  // clears the filtered lists\r\n  filteredDogNames = [];\r\n  filteredDogImages = [];\r\n  \r\n  // gets the size from the dropdown\r\n  var dogSize = getText(\"sizeDropdown\");\r\n  \r\n  // traverses the dogHeight List\r\n  // if dogHeight and dogSize meet certain conditions\r\n  // the corresponding names and images are stored in the filtered lists\r\n  for(var i=0; i<dogHeight.length; i++){\r\n    if(dogHeight[i] < 16 && dogSize == \"Small\"){\r\n      appendItem(filteredDogNames, dogNames[i]);\r\n      appendItem(filteredDogImages, dogImages[i]);\r\n    } else if(dogHeight[i] >= 16 && dogHeight[i] < 24 && dogSize == \"Medium\"){\r\n      appendItem(filteredDogNames, dogNames[i]);\r\n      appendItem(filteredDogImages, dogImages[i]);\r\n    } else if(dogHeight[i] >= 24 && dogSize == \"Large\") {\r\n      appendItem(filteredDogNames, dogNames[i]);\r\n      appendItem(filteredDogImages, dogImages[i]);\r\n    } \r\n  }\r\n  \r\n  // prints the list of dog names that match the value in the dropdown\r\n  console.log(dogSize + \" Dogs:\\n\" + filteredDogNames);\r\n}\r\n\r\n// sets up the screen elements\r\nfunction updateScreen(){\r\n  var randomIndex = randomNumber(0, filteredDogNames.length-1);\r\n  setText(\"nameOutput\", filteredDogNames[randomIndex]);\r\n  setImageURL(\"picture\", filteredDogImages[randomIndex]);\r\n}\r\n\r\n// sets up the lists and the screen\r\nfunction listSetup(){\r\n  filter();\r\n  updateScreen();\r\n}",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "validation_enabled": "false",
    "text_mode_at_start": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 27px; padding: 2px 15px; width: 319px; height: 31px; position: absolute; left: 0.5px; top: 10px; text-align: center;\" id=\"titleLabel\">Random Dog Picker</label><img src=\"/blockly/media/1x1.gif\" data-canonical-image-url=\"\" data-object-fit=\"contain\" id=\"picture\" style=\"height: 250px; width: 320px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; position: absolute; left: 0px; top: 60px; margin: 0px;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 16px; padding: 2px 15px; width: 320px; height: 60px; position: absolute; left: 2.22045e-16px; top: 335px; text-align: center;\" id=\"nameOutput\"></label><select id=\"sizeDropdown\" style=\"width: 200px; height: 30px; margin: 0px; border-style: solid; background-color: rgb(255, 255, 255); color: rgb(77, 87, 95); background-image: url(&quot;data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20256%20448%22%20enable-background%3D%22new%200%200%20256%20448%22%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E.arrow%7Bfill%3A%234d575f%3B%7D%3C%2Fstyle%3E%3Cpath%20class%3D%22arrow%22%20d%3D%22M255.9%20168c0-4.2-1.6-7.9-4.8-11.2-3.2-3.2-6.9-4.8-11.2-4.8H16c-4.2%200-7.9%201.6-11.2%204.8S0%20163.8%200%20168c0%204.4%201.6%208.2%204.8%2011.4l112%20112c3.1%203.1%206.8%204.6%2011.2%204.6%204.4%200%208.2-1.5%2011.4-4.6l112-112c3-3.2%204.5-7%204.5-11.4z%22%2F%3E%3C%2Fsvg%3E&quot;); border-color: rgb(0, 0, 0); border-radius: 4px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 0px 30px 0px 15px; position: absolute; left: 60px; top: 400px;\"><option>Small</option><option>Medium</option><option>Large</option></select></div></div>",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "long_instructions": "# Do This\r\n\r\n**Run:** Run this program, watch the code run, and carefully read each individual part of the program.\r\n\r\n**Discuss:** Discuss these questions with a partner and be prepared to share answers with the class.\r\n\r\n* What are the names of the five lists in this program?\r\n* On what lines of code are the lists created?\r\n* On what lines of code are the lists filled?\r\n* How are these lists filled? \r\n* Open up the data tab and click to view the dogs table. What columns does this app use?\r\n* Look at the filter function. On what lines are the filtered lists reset to blank lists?\r\n* What condition is being checked to determine if an element belongs in a filtered list?",
    "parent_level_id": 18045,
    "mini_rubric": "false",
    "encrypted": "false",
    "data_library_tables": "Dogs",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "name_suffix": "2022",
    "ai_enabled": "false",
    "preload_asset_list": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2022-01-06T20:06:21.081+00:00\",\"changed\":[\"cloned from \\\"U5 Traversals Investigate Dog Finder Modify_2021\\\"\"],\"cloned_from\":\"U5 Traversals Investigate Dog Finder Modify_2021\"}]"
}]]></config>
  <blocks/>
</Applab>