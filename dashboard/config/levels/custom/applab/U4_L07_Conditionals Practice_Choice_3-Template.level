<Applab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "false",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "long_instructions": "Unit 4, Lesson 7, Choice Level 3 Template",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "start_blocks": "//Declaring & Initializing Variables\r\nvar turn = 0;\r\nvar spaceText = \"\";\r\nvar gameOver = false;\r\n\r\n// updateBoard() is run whenever the user clicks on one of the board squares\r\n// It should check whether the space is empty, and if so, assign the correct marker (X or O)\r\n// If the square is not empty, it will ask the user to try again.\r\n// It will also update whose turn it is, alternating back and forth between X and O\r\n\r\nfunction updateBoard() {\r\n  hideElement(\"tryAgainLabel\");\r\n  // 1️⃣\r\n\r\n\r\n}\r\n\r\n// Whenever a user marks an X or O on the board, checkWin() is run to see if there is a winner\r\n// There are a series of conditional statements that need to be written to check the different\r\n// ways that a user can win: three in a row horizontally, vertically or diagonally\r\n\r\nfunction checkWin() {\r\n  var a = getText(\"aSpace\");\r\n  var b = getText(\"bSpace\");\r\n  var c = getText(\"cSpace\");\r\n  var d = getText(\"dSpace\");\r\n  var e = getText(\"eSpace\");\r\n  var f = getText(\"fSpace\");\r\n  var g = getText(\"gSpace\");\r\n  var h = getText(\"hSpace\");\r\n  var i = getText(\"iSpace\");\r\n\r\n  // 2️⃣\r\n  //The first IF and ELSE IF statements check horizontal rows for a win\r\n  if(true) {\r\n    xWins();\r\n  } else if (true){\r\n    oWins();\r\n    \r\n  // 3️⃣\r\n  //The next two ELSE IFs check vertical columns for a win   \r\n  } else if (true) {\r\n    xWins();\r\n  } else if(true) {\r\n    oWins();\r\n    \r\n  // 4️⃣\r\n  //The next two ELSE IFs check diagonals for a win  \r\n  } else if (true) {\r\n    xWins();\r\n  } else if (true) {\r\n    oWins();\r\n\r\n  // 5️⃣    \r\n  //The last ELSE IF checks whether the board is full, and, if so, marks the game a draw\r\n  } else if (true){\r\n    setProperty(\"winLabel\", \"background-color\", rgb(255,255,255,1));\r\n    setText(\"winLabel\", \"⚖️ Draw ⚖️\");\r\n    hideElement(\"player1TurnLabel\");\r\n    hideElement(\"player2TurnLabel\");\r\n    showElement(\"resetBtn\");\r\n  }\r\n}\r\n\r\n\r\n// Event handlers for each square space on the board\r\n// Spaces are lettered A through I, going from left to right, and top to bottom. See diagram in Level X\r\nonEvent(\"aSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"aSpace\");\r\n  updateBoard();\r\n  setText(\"aSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"bSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"bSpace\");\r\n  updateBoard();\r\n  setText(\"bSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"cSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"cSpace\");\r\n  updateBoard();\r\n  setText(\"cSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"dSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"dSpace\");\r\n  updateBoard();\r\n  setText(\"dSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"eSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"eSpace\");\r\n  updateBoard();\r\n  setText(\"eSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"fSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"fSpace\");\r\n  updateBoard();\r\n  setText(\"fSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"gSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"gSpace\");\r\n  updateBoard();\r\n  setText(\"gSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"hSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"hSpace\");\r\n  updateBoard();\r\n  setText(\"hSpace\",spaceText);\r\n  checkWin();\r\n});\r\nonEvent(\"iSpace\", \"click\", function( ) {\r\n  spaceText = getText(\"iSpace\");\r\n  updateBoard();\r\n  setText(\"iSpace\",spaceText);\r\n  checkWin();\r\n});\r\n\r\n// X Wins based on conditionals\r\nfunction xWins(){\r\n  setProperty(\"winLabel\", \"background-color\", rgb(255,255,255,1));\r\n  setText(\"winLabel\", \"🙅 X's Win! 🙅 \");\r\n  hideElement(\"player1TurnLabel\");\r\n  hideElement(\"player2TurnLabel\");\r\n  showElement(\"resetBtn\");\r\n}\r\n\r\n// O Wins based on conditionals\r\nfunction oWins(){\r\n  setProperty(\"winLabel\", \"background-color\", rgb(255,255,255,1));\r\n  setText(\"winLabel\", \"👌 O's Win! 👌 \");\r\n  hideElement(\"player1TurnLabel\");\r\n  hideElement(\"player2TurnLabel\");\r\n  showElement(\"resetBtn\");\r\n}\r\n\r\n// Reset Button\r\nonEvent(\"resetBtn\", \"click\", function( ) {\r\n  resetGame();\r\n});\r\n\r\n// Reset all of the text boxes, reinitialize variables, and hide/show appropriate labels\r\nfunction resetGame() {\r\n  setText(\"aSpace\", \"\");\r\n  setText(\"bSpace\", \"\");\r\n  setText(\"cSpace\", \"\");\r\n  setText(\"dSpace\", \"\");\r\n  setText(\"eSpace\", \"\");\r\n  setText(\"fSpace\", \"\");\r\n  setText(\"gSpace\", \"\");\r\n  setText(\"hSpace\", \"\");\r\n  setText(\"iSpace\", \"\");\r\n  turn = 0;\r\n  hideElement(\"player2TurnLabel\");\r\n  showElement(\"player1TurnLabel\");\r\n  hideElement(\"resetBtn\");\r\n  setText(\"winLabel\", \"\");\r\n  setProperty(\"winLabel\", \"background-color\", rgb(255,255,255,0));\r\n  \r\n  \r\n}\r\n",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" tabindex=\"1\" data-radium=\"true\" style=\"width: 320px; height: 450px; transform: scale(1.25);\"><div class=\"screen\" tabindex=\"1\" data-theme=\"twoTone\" id=\"BG\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255); background-size: 320px 450px; background-image: url(&quot;https://images.code.org/776435d4e0407e6dd5c4548c79b2a1fe-ticTacToeBG.png&quot;);\" data-canonical-image-url=\"//images.code.org/776435d4e0407e6dd5c4548c79b2a1fe-ticTacToeBG.png\" data-image-type=\"file\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 14px; top: 102px; text-align: center;\" id=\"aSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(116, 141, 250); background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 103px; height: 18px; position: absolute; left: 110px; top: 50px;\" id=\"tryAgainLabel\" class=\"design-mode-hidden\">Try Again!</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 114px; top: 102px; text-align: center;\" id=\"bSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 212px; top: 102px; text-align: center;\" id=\"cSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 15px; top: 300px; text-align: center;\" id=\"gSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 114px; top: 301px; text-align: center;\" id=\"hSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 212px; top: 301px; text-align: center;\" id=\"iSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(250, 201, 116); background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 18px; padding: 2px 15px; width: 112px; height: 23px; position: absolute; left: 102px; top: 70px;\" id=\"player1TurnLabel\">X's Turn</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(250, 116, 116); background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 18px; padding: 2px 15px; width: 113px; height: 23px; position: absolute; left: 101px; top: 70px;\" id=\"player2TurnLabel\" class=\"design-mode-hidden\">O's Turn</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 20px; padding: 2px 15px; width: 190px; height: 35px; position: absolute; left: 67px; top: 58px; text-align: center;\" id=\"winLabel\"></label><button id=\"resetBtn\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 25px; width: 100px; background-color: rgb(116, 141, 250); color: rgb(0, 0, 0); border-color: rgba(0, 0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; position: absolute; left: 110px; top: 415px;\" class=\"design-mode-hidden\">Reset Game</button><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 15px; top: 200px; text-align: center;\" id=\"dSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 113px; top: 202px; text-align: center;\" id=\"eSpace\"></label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0); border-color: rgb(0, 0, 0); border-radius: 30px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 70px; padding: 2px 15px; width: 90px; height: 90px; position: absolute; left: 210px; top: 201px; text-align: center;\" id=\"fSpace\"></label></div></div>",
    "preload_asset_list": null,
    "encrypted_examples": [

    ]
  },
  "game_id": 41,
  "published": true,
  "created_at": "2023-03-21T17:24:17.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "audit_log": "[{\"changed_at\":\"2023-03-21 17:25:15 +0000\",\"changed\":[\"validation_enabled\",\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-21 17:42:30 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-21 17:43:58 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-21 17:45:02 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\",\"start_html\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-21 17:48:21 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\",\"start_blocks\",\"start_html\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-23 19:08:00 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-07 16:59:03 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-07 17:01:12 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-07 17:44:22 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-04-07 20:03:11 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>