<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2020-04-20T14:12:13.000Z",
  "level_num": "custom",
  "user_id": 42,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "getUserId": null,
      "drawChartFromRecords": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "setInterval": null,
      "clearInterval": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "lessThanOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "drawImageURL": null,
      "comment": null,
      "stopSound": null
    },
    "edit_code": true,
    "embed": "true",
    "short_instructions": "Color Sleuth Demo - Try it out!",
    "start_blocks": "// In this examplar first to 10 is still the main objective\r\n// but this one shows a few more advanced options\r\n// 1. increasing difficulty (colors harder to tell apart)\r\n// 2. Reset button on game over page\r\n// 3. Fair for player 2 (see checkGameOver)\r\n\r\n// Global variables\r\nvar p1Score=0;\r\nvar p2Score=0;\r\nvar currentPlayer = 1;\r\nvar randButtonId = 1;\r\nvar difficulty = 20; // how much gets added to RGB values for \"different\" color\r\n                     // 20 is easy, 0 is impossible.\r\n                     \r\n\r\nsetBoard();   \r\n\r\nfunction reset(){\r\n  p1Score=0;\r\n  p2Score=0;\r\n  currentPlayer = 1;\r\n  randButtonId = 1;\r\n  difficulty = 20;\r\n  setText(\"score1_label\",p1Score);\r\n  setText(\"score2_label\",p2Score);\r\n  hideElement(\"player1Win_label\");\r\n  hideElement(\"player2Win_label\");\r\n  hideElement(\"player2_highlight\");\r\n  showElement(\"player1_highlight\")\r\n\r\n}\r\n\r\nfunction setBoard() {\r\n  var R = randomNumber(0,255-difficulty);\r\n  var G = randomNumber(0,255-difficulty);\r\n  var B = randomNumber(0,255-difficulty);\r\n  var color = rgb(R, G, B);\r\n  setProperty(\"button1\", \"background-color\", color);\r\n  setProperty(\"button2\", \"background-color\", color);\r\n  setProperty(\"button3\", \"background-color\", color);\r\n  setProperty(\"button4\", \"background-color\", color);\r\n\r\n  R = R+difficulty; \r\n  G = G+difficulty;\r\n  B = B+difficulty;\r\n  var diffColor = rgb(R, G, B);\r\n  randButtonId = \"button\"+randomNumber(1,4);\r\n  setProperty(randButtonId, \"background-color\", diffColor);\r\n  console.log(\"correct button is: \"+randButtonId);\r\n}\r\n\r\nfunction checkCorrect(buttonId) {\r\n  console.log(\"checking: \"+buttonId);\r\n  if( buttonId == randButtonId ) {\r\n      console.log(\"You got it right!\");\r\n      updateScoreBy(1);\r\n      \r\n      // got it right, make it harder \r\n      difficulty -= 1;\r\n      \r\n  } else {\r\n      console.log(\"WRONG\");\r\n      updateScoreBy(-3);\r\n      \r\n      // got it wrong, make it easier\r\n      difficulty +=1;\r\n  }\r\n  \r\n  //make sure it's not IMPOSSIBLE - cap difficulty at 5\r\n  difficulty = Math.max(difficulty, 5);\r\n  \r\n  checkGameOver();\r\n  setBoard();\r\n  switchPlayer();\r\n}\r\n\r\n// implements \"first to 10\" but makes sure that player2\r\n// gets a fair chance, and if score is tied and over 10\r\n// it's \"sudden death.\"\r\nfunction checkGameOver(){\r\n  \r\n  var scoreDiff = Math.abs(p1Score - p2Score);\r\n  \r\n  \r\n  if(currentPlayer == 2 && scoreDiff > 0 && (p1Score >= 10 || p2Score >= 10)){            // if anyone is over 10 points the game is over\r\n      setScreen(\"gameOver_screen\");\r\n      if(p1Score > p2Score){                    // figure out who won and show the label\r\n          showElement(\"player1Win_label\");\r\n      } else {\r\n          showElement(\"player2Win_label\");\r\n      }\r\n  }\r\n    \r\n}\r\n\r\nfunction updateScoreBy(amt){\r\n  if(currentPlayer==1){\r\n    p1Score += amt;\r\n  }\r\n  else{\r\n    p2Score += amt;\r\n  }\r\n  console.log(\"P1 Score: \"+p1Score);\r\n  console.log(\"P2 Score: \"+p2Score);\r\n  setText(\"score1_label\", p1Score);\r\n  setText(\"score2_label\", p2Score);\r\n}\r\n\r\nfunction switchPlayer(){\r\n  if(currentPlayer==1){\r\n    currentPlayer=2;\r\n    showElement(\"player2_highlight\");\r\n    hideElement(\"player1_highlight\");\r\n  } else {\r\n    currentPlayer=1;\r\n    showElement(\"player1_highlight\");\r\n    hideElement(\"player2_highlight\");\r\n  }\r\n  console.log(\"current player: \"+currentPlayer);\r\n}\r\n\r\nonEvent(\"button1\", \"click\", function() {\r\n  checkCorrect(\"button1\");\r\n});\r\nonEvent(\"button2\", \"click\", function() {\r\n  checkCorrect(\"button2\");\r\n});\r\nonEvent(\"button3\", \"click\", function() {\r\n  checkCorrect(\"button3\");\r\n});\r\nonEvent(\"button4\", \"click\", function() {\r\n  checkCorrect(\"button4\");\r\n});\r\nonEvent(\"reset_button\", \"click\", function() {\r\n  reset();\r\n  setScreen(\"gamePlay_screen\");\r\n  setBoard();\r\n});\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" id=\"gamePlay_screen\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\" data-theme=\"classic\"><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 120px; height: 100px; position: absolute; left: 30px; top: 325px; background-color: rgba(197, 197, 197, 0.408); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"player1_highlight\"></label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 120px; height: 100px; position: absolute; left: 170px; top: 325px; background-color: rgba(197, 197, 197, 0.408); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"player2_highlight\" class=\"design-mode-hidden\"></label><button id=\"button1\" style=\"padding: 0px; margin: 0px; height: 120px; width: 120px; font-size: 14px; color: rgb(255, 255, 255); background-color: rgb(26, 188, 156); position: absolute; left: 30px; top: 50px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\"></button><button id=\"button2\" style=\"padding: 0px; margin: 0px; height: 120px; width: 120px; font-size: 14px; color: rgb(255, 255, 255); background-color: rgb(26, 188, 156); position: absolute; left: 170px; top: 50px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\"></button><button id=\"button3\" style=\"padding: 0px; margin: 0px; height: 120px; width: 120px; font-size: 14px; color: rgb(255, 255, 255); background-color: rgb(26, 188, 156); position: absolute; left: 30px; top: 190px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\"></button><button id=\"button4\" style=\"padding: 0px; margin: 0px; height: 120px; width: 120px; font-size: 14px; color: rgb(255, 255, 255); background-color: rgb(26, 188, 156); position: absolute; left: 170px; top: 190px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\"></button><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 25px; overflow: hidden; overflow-wrap: break-word; color: rgb(117, 107, 107); max-width: 320px; width: 151px; height: 30px; position: absolute; left: 30px; top: 10px; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"title_label\">ColorSleuth</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 20px; overflow: hidden; overflow-wrap: break-word; max-width: 320px; width: 100px; height: 25px; position: absolute; left: 35px; top: 345px; text-align: center; color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"label4\">Player 1</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 24px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 100px; height: 30px; position: absolute; left: 40px; top: 385px; text-align: center; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"score1_label\">00</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 24px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 100px; position: absolute; left: 180px; top: 385px; height: 33px; text-align: center; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"score2_label\">00</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 20px; overflow: hidden; overflow-wrap: break-word; color: rgb(0, 0, 0); max-width: 320px; width: 100px; height: 25px; position: absolute; left: 180px; top: 345px; text-align: center; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"Label2\">Player 2</label></div><div class=\"screen\" tabindex=\"1\" id=\"gameOver_screen\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; display: none; background-color: rgb(255, 255, 255);\" data-theme=\"classic\"><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 50px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 305px; height: 55px; position: absolute; left: 5px; top: 80px; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"label1\">Game Over!</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 30px; overflow: hidden; overflow-wrap: break-word; color: rgb(188, 0, 0); max-width: 320px; width: 207px; height: 35px; position: absolute; left: 55px; top: 195px; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"player1Win_label\" class=\"design-mode-hidden\">Player 1 Wins!</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 30px; overflow: hidden; overflow-wrap: break-word; color: rgb(45, 0, 188); max-width: 320px; width: 215px; height: 35px; position: absolute; left: 50px; top: 235px; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"player2Win_label\" class=\"design-mode-hidden\">Player 2&nbsp;Wins!</label><button id=\"reset_button\" style=\"padding: 0px; margin: 0px; height: 40px; width: 95px; font-size: 14px; color: rgb(255, 255, 255); background-color: rgb(26, 188, 156); position: absolute; left: 105px; top: 320px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\">Play Again!</button></div></div>",
    "long_instructions": "# Planning an App\r\n\r\nWe're going to walk through several phases of development for an app that uses `if` statements and conditionals in various ways.\r\n\r\nThe **goal** is to follow a creative process from beginning to end to see how ideas come to life, as well as to use your new knowledge of `if` statements.\r\n\r\nTo do this, we are going to build an app that tests how well people can tell the difference between colors through playing a game. You can try an example of the game to the left. You can choose how some parts of the game will work. Here’s a sketch of how the app should work:\r\n</p>\r\n</div>\r\n<img src=\"https://images.code.org/4eb59e2e07f3bb5d86c7d031274ca836-image-1480703334204.png\" alt=\"\" style=\"display: block; margin: auto;\"/> \r\n\r\n## Do This:\r\n* Try the app and make sure you understand how the game is supposed to work.\r\n* Consider the open questions and ideas above and think about how you you want your version to behave.\r\n",
    "encrypted_examples": "lxoJLn7US7bG1U0hAZjjxNmfno8BQZ/L5O44W1zLWZAo58Go+KOCfvoyr672\nbgoA\n",
    "lock_zero_param_functions": "false",
    "execute_palette_apis_only": "false",
    "parent_level_id": 22657,
    "name_suffix": "_virtual",
    "show_debug_watch": "true",
    "encrypted": "false",
    "instructions_important": "false",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "preload_asset_list": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2020-04-15 17:19:02 +0000\",\"changed\":[\"notes\",\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":831,\"changed_by_email\":\"mike.harvey@code.org\"},{\"changed_at\":\"2020-04-20 14:19:04 +0000\",\"changed\":[\"code_functions\",\"short_instructions\",\"start_blocks\",\"start_html\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":831,\"changed_by_email\":\"mike.harvey@code.org\"},{\"changed_at\":\"2020-04-22 19:29:09 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":831,\"changed_by_email\":\"mike.harvey@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>