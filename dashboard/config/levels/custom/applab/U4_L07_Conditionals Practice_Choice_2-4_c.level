<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2023-12-07T15:09:47.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "display_name": "Emoji Movie App, part 4",
    "project_template_level_name": "U4_L07_Conditionals Practice_Choice_2-Template",
    "long_instructions": "## Is It Over, Yet?\r\n\r\nNow that we have a working score for our program, we need to create the logic for updating the question on the screen based on the value of <span style=\"color: #bb77c7\">turn</span>, or for transitioning from the <strong>quizScreen</strong> to the <strong>resultsScreen</strong> if the quiz is over.\r\n\r\n<br>\r\n\r\n<span role=\"img\" aria-label=\"Four\">4️⃣</span> Create an <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional statement that tests whether the <span style=\"color: #bb77c7\">turn</span> variable is less than<strong> 4</strong> (<i>the total number of questions in the quiz</i>). \r\n\r\n* 👍 If<i> true</i>, add<strong> 1</strong> to the value of <span style=\"color: #bb77c7\">turn</span>. \r\n* Reset the<strong> userGuess</strong> input box to an empty string using the <code style=\"color:black; background-color:#fef088\">setText();</code> command. \r\n* Create an <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> <strong> nested conditional</strong> (<i>a conditional inside a conditional</i>). Test the value of the <span style=\"color: #bb77c7\">turn</span> variable and use <code style=\"color:black; background-color:#fef088\">setText()</code> to display the appropriate question (<span style=\"color: #bb77c7\">question2, question3</span>, or <span style=\"color: #bb77c7\">question4</span>).\r\n\r\n<br>\r\n\r\n* 👎 If <i>false</i>, then use the <code style=\"color:black; background-color:#fef088\">setScreen();</code> command to transition to<strong> resultsScreen</strong>. \r\n* Additionally, use the <code style=\"color:black; background-color:#fef088\">setText()</code> command to set the value of the<strong> resultsText</strong> text area to the <span style=\"color: #bb77c7\">resultString</span> that we created previously.\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">🔎 Need help with your algorithm?</summary>\r\n    \r\n    <br>\r\n    \r\n   The structure of the conditional and accompanying statements can be coded as follows:\r\n    \r\n    <br> \r\n    <br>\r\n\r\n<div style=\"column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 100%\"> \r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/1fd34ab3aef2cbc7f7d468abf9b0bf03-3.1-blocks_nested.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    </p>\r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/b7be08916e8da1618a6a480635b0b6b4-3.1-text.png\" alt=\"\" style=\"display: block; margin: auto;\"/>    \r\n    </p>\r\n </div>\r\n \r\n</details>\r\n\r\n<br>\r\n\r\n<hr>\r\n\r\n## A Final Message for Users\r\n\r\nOur emoji quiz is nearly finished! It scores our user's responses, and it displays a string that shows which were correct or incorrect answers. There is just one step to go...\r\n<br>\r\n\r\n<span role=\"img\" aria-label=\"Five\">5️⃣</span> Create an <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> nested conditional statement that creates a unique message for users depending on how many correct answers they received.\r\n* Create the conditional right after the <code style=\"color:black; background-color:#fef088\">setScreen()</code> command that takes the user to the<strong> resultsScreen</strong>.\r\n* Compare the values stored in the <span style=\"color: #bb77c7\">score</span> and <span style=\"color: #bb77c7\">totalQuestions</span> variables to create the conditional.\r\n* Create a unique message string and saved it into the <span style=\"color: #bb77c7\">finalMessage</span> variable.\r\n* Use <code style=\"color:black; background-color:#fef088\">setText()</code> to display the <span style=\"color: #bb77c7\">finalMessage</span> within the<i> finalMessageText</i> text area.\r\n\r\n\r\n<br>\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n\r\n<span style=\"color: #000000; font-size: 150%\">🔎</span> <strong>Check This Out!</strong> When using <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> statements in your code, your conditionals should go from<i> most specific</i> to <i>most general</i>. Therefore, we should first test if the user received a perfect score before moving down the list and checking lower scores.\r\n</div>\r\n\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">🔎 Need help with your algorithm?</summary>\r\n    \r\n    <br>\r\n    \r\n   The <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional and accompanying statements can be coded as follows:\r\n    \r\n    <br> \r\n    <br>\r\n\r\n<div style=\"column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 100%\"> \r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/f96f37136d9627d1d36f42547e3787cd-3.2-blocks.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    </p>\r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/b7e8fe7febc8c7b9649c3a4886f64bb3-3.2-text.png\" alt=\"\" style=\"display: block; margin: auto;\"/>    \r\n    </p>\r\n </div>\r\n \r\n</details>\r\n\r\n",
    "bubble_choice_description": "Spice Level: 🌶\r\n\r\nUpdate the question text and display the final results for users!",
    "thumbnail_url": "https://images.code.org/e98be0cc9d626c4151d22f545c5c8dd0-EmojiMovie_titleCard.png",
    "encrypted_examples": "fgPF1alwqef5SdmusPsHpWFd+V24I0d8AOMFwnf9Dt6y7XCGTDz0ujTdPzcZ\nCIsZxh3mkEG1eygYRBveTzvZzg==\n",
    "preload_asset_list": null
  },
  "audit_log": "[{\"changed_at\":\"2023-12-07T15:09:47.801+00:00\",\"changed\":[\"cloned from \\\"U4_L07_Conditionals Practice_Choice_2-4\\\"\"],\"cloned_from\":\"U4_L07_Conditionals Practice_Choice_2-4\"},{\"changed_at\":\"2023-12-07 15:09:50 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-12-08 00:05:50 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>