<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2020-03-17T21:25:13.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "console.log": null,
      "declareAssign_x": null,
      "declareAssign_str_hello_world": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "never_autoplay_video": "false",
    "examples_required": "false",
    "droplet_tooltips_disabled": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "true",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "start_blocks": "//Change these strings from the empty string to the kind of word indicated in each variable name\r\nvar pluralNoun = \"\";\r\nvar verb = \"\";\r\nvar adjective1 = \"\";\r\nvar adjective2 = \"\";\r\n\r\nconsole.log(\"How to take care of your pet ostrich\");\r\nconsole.log(\"1. Make sure your ostrich eats plenty of \" + pluralNoun);\r\nconsole.log(\"2. Your ostrich will need to \" + verb + \" at least a couple of times a day\");\r\nconsole.log(\"3. A healthy diet will make sure your ostrich's feathers are \" + adjective1 + \" and \" + adjective2);",
    "encrypted_examples": "GNxWsn53PDCpja7ITtZODwuAZETmaE4RXf0fbadpqGKaIcz6eXnzcyaMIQ1h\n07qL\n",
    "lock_zero_param_functions": "false",
    "execute_palette_apis_only": "false",
    "parent_level_id": 17190,
    "name_suffix": "_virtual",
    "instructions_important": "false",
    "hide_share_and_remix": "false",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "short_instructions": "Save a string inside a variable and log it to the console. (Click to see full instructions)",
    "long_instructions": "# Strings\r\n\r\nA string is a **sequence of characters**.\r\n\r\nYou can store strings in a variable just like a number. In this example the variable name (no quotation marks) is `str` and the string (with quotation marks) is `\"Hello World\"`.\r\n\r\n![](https://images.code.org/56e6b30a51556aa3b516e0a49b51cbeb-image-1445894334432.18.40 PM.png)\r\n\r\nThis Mad Libs app is \"hard-coded\" with strings that are created inside the code (rather than chosen by the user). These strings are then *concatenated* (or combined) with other strings to create a Mad Lib.\r\n\r\n**Do This:**\r\n\r\n1. Edit lines 2-5 of the program to store a string of your choice in each variable.\r\n2. Test the app to make sure the Mad Lib is created correctly.\r\n\r\n**How?**\r\nUse the `+` operator to combine strings. Combining strings is called **concatenation**.\r\n\r\n<details>\r\n<summary><big><strong>Want more examples?</strong></big> [click to expand]</summary>\r\n\r\n**Example** | **Rule**\r\n---|---\r\n`\"look at all these spaces\"` | Strings can **contain spaces**.\r\n`\"$2 bills are the coolest\"` | Strings can **contain special characters** (and even start with them).\r\n`\"11\"` | Strings might **contain only digits**. This looks like the number `11` but it is really just two `\"1\"` characters.\r\n`\"\"` | Strings might **contain no characters**.\r\n`\"aString\"` | Strings might look a lot like a variable name the quotes tell us they are not!\r\n\r\n<br/></details>",
    "encrypted": "false",
    "mini_rubric": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "preload_asset_list": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2018-12-11 00:47:40 +0000\",\"changed\":[\"notes\",\"code_functions\",\"markdown_instructions\",\"instructions\",\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":156,\"changed_by_email\":\"elijah@code.org\"},{\"changed_at\":\"2020-04-15 17:26:52 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"encrypted_examples\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":831,\"changed_by_email\":\"mike.harvey@code.org\"},{\"changed_at\":\"2020-04-15 17:30:52 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":831,\"changed_by_email\":\"mike.harvey@code.org\"},{\"changed_at\":\"2020-04-15 17:34:29 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":831,\"changed_by_email\":\"mike.harvey@code.org\"},{\"changed_at\":\"2020-04-15 17:35:59 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":831,\"changed_by_email\":\"mike.harvey@code.org\"},{\"changed_at\":\"2020-04-22 21:46:20 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":831,\"changed_by_email\":\"mike.harvey@code.org\"},{\"changed_at\":\"2020-04-23 02:54:05 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":977,\"changed_by_email\":\"kaitie@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>