<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2023-03-23T19:27:14.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "display_name": "Emoji Movie App, part 3",
    "project_template_level_name": "U4_L07_Conditionals Practice_Choice_2-Template_c",
    "long_instructions": "\r\n## Turning the Page\r\n\r\nFind the <code style=\"color:black; background-color:#fef088\">onEvent()</code> portion of the code for when the user clicks the **submitAnswer** button. We will be working within this event for the remainder of the app development.\r\n\r\nNow that we have our variables created, we will create the logic for updating the question on the screen based on the value of <code style=\"color:white; background-color:#bb77c7\">turn</code>, or for transitioning from the <strong>quizScreen</strong> to the <strong>resultsScreen</strong> if the quiz is over.\r\n\r\n<br>\r\n\r\n<span role=\"img\" aria-label=\"Two\">2Ô∏è‚É£</span> <b> Step Two: </b>  Complete the <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional statement that evaluates the value of <code style=\"color:white; background-color:#bb77c7\">turn</code> and updates the question displayed to the user. The first portion of the conditional statement has been completed to provide a model to follow.\r\n\r\n* Create an expression that evaluates the value of <code style=\"color:white; background-color:#bb77c7\">turn</code>. Create these expressions where you see <i>yourCodeHere</i>.\r\n* Within the conditional, update the value of <code style=\"color:white; background-color:#bb77c7\">turn</code> by 1 (<i>increment the value</i>).\r\n* Based on the value of the <code style=\"color:white; background-color:#bb77c7\">turn</code> variable, use <code style=\"color:black; background-color:#fef088\">setText()</code> to display the appropriate question (<code style=\"color:white; background-color:#bb77c7\">question2</code>, <code style=\"color:white; background-color:#bb77c7\">question3</code>, or <code style=\"color:white; background-color:#bb77c7\">question4</code>).\r\n\r\n\r\nYou can find the location in the starter code to modify by matching the number next to the task (*e.g. 2Ô∏è‚É£ in this case*)[**üëâ Show me where üëà**](#triggercallout=step2)\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üîé Need help with your algorithm?</summary>\r\n    \r\n    <br>\r\n    \r\n    The <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional can be coded using the logic shown in the pseudocode below:\r\n    \r\n<br>\r\n<br>\r\n<pre style=\"background-color: #333333; color: white;\">\r\nif turn equals 1\r\n  increase turn by 1\r\n  display question2\r\nor if turn equals 2\r\n  increase turn by 1\r\n  display question3\r\nor if turn equals 3\r\n  increase turn by 1\r\n  display question4\r\nor if the turn already equals 4\r\n  change to the results screen\r\n\r\n</pre>\r\n\r\n<br>\r\n\r\n \r\n</details>\r\n\r\n<br>\r\n\r\n<hr>\r\n\r\n## Assigning the Correct Answer\r\n\r\n<br>\r\n\r\n<span role=\"img\" aria-label=\"Three\">3Ô∏è‚É£</span>  <b>Step Three: </b> Complete the <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional that checks the value of the <code style=\"color:white; background-color:#bb77c7\">turn</code> variable and assigns the value of <code style=\"color:white; background-color:#bb77c7\">answer1</code>, <code style=\"color:white; background-color:#bb77c7\">answer2</code>, <code style=\"color:white; background-color:#bb77c7\">answer3</code> or <code style=\"color:white; background-color:#bb77c7\">answer4</code> to the new variable <code style=\"color:white; background-color:#bb77c7\">correctAnswer</code> based on the value of <code style=\"color:white; background-color:#bb77c7\">turn</code>.\r\n* <strong>Hint</strong>: The value of the <code style=\"color:white; background-color:#bb77c7\">turn</code> variable should match the number at the end of the <code style=\"color:white; background-color:#bb77c7\">answer</code> variable. For example, if <code style=\"color:black; background-color:#ffb74d\">turn == 1</code>, then <code style=\"color:white; background-color:#bb77c7\">correctAnswer</code> should be set to equal <code style=\"color:white; background-color:#bb77c7\">answer1</code>.\r\n\r\nYou can find the location in the starter code to modify by matching the number next to the task (*e.g. 3Ô∏è‚É£ in this case*)[**üëâ Show me where üëà**](#triggercallout=step3)\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üîé Need help with your algorithm?</summary>\r\n    \r\n    <br>\r\n    \r\n    The <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional can be coded using the logic shown in the pseudocode below:\r\n    \r\n<br>\r\n<br>\r\n<pre style=\"background-color: #333333; color: white;\">\r\nif the value of turn equals 1\r\n\tthen set correctAnswer to the value of answer1\r\nor else if the value of turn equals 2\r\n\tthen set correctAnswer to the value of answer2\r\nor else if the value of turn equals 3\r\n\tthen set correctAnswer to the value of answer3\r\nif none of these are true\r\n\tthen set correctAnswer to the value of answer4\r\n</pre>\r\n\r\n<br>\r\n\r\n<br>\r\n<div style=\"background-color: #ffffff; border: 1px solid #9660bf; border-radius: 5px; padding: 15px; margin-bottom: 10px; font-size: 1.1em\">\r\nüêõ <strong>Bug Alert!</strong> Remember that we need to use the <i>equality operator</i> <code style=\"color:black; background-color:#ffb74d\">‚ö™==‚ö™</code> in order to compare two values or expressions. <br>\r\n<br>\r\nIt is common to accidentally use the <i>assignment operator</i> <code style=\"color:white; background-color:#bb77c7\">‚ö™=‚ö™</code> instead. This will result in an error within the conditional.</div>\r\n</details>\r\n\r\n<br>",
    "bubble_choice_description": "Spice Level: üå∂\r\n\r\nCraft the conditionals that determine whether a user's answer was correct or incorrect.",
    "thumbnail_url": "https://images.code.org/e98be0cc9d626c4151d22f545c5c8dd0-EmojiMovie_titleCard.png",
    "encrypted_examples": "5SX35j8HjyKF14f1MQ2PhjpxsmHVyHEp/LFpDVW4Uou9YJFppeqh1g+7wrhQ\noPpGJRyKUx/6F8FTlzh05tOEmA==\n",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"CSP U7L2.2a.2 - step 1\",\r\n  \"callout_text\": \"Start Here\",\r\n  \"element_id\": \"\",\r\n  \"on\": \"step2\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"\",\r\n     \"codeString\": \"Step Two\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"top center\",\r\n    \"at\": \"right bottom\",\r\n    \"adjust\": {\r\n     \"x\": 50,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n },\r\n  {\r\n  \"localization_key\": \"CSP U7L2.2a.2 - step 1\",\r\n  \"callout_text\": \"Start Here\",\r\n  \"element_id\": \"\",\r\n  \"on\": \"step3\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"\",\r\n     \"codeString\": \"Step Three\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"top center\",\r\n    \"at\": \"right bottom\",\r\n    \"adjust\": {\r\n     \"x\": 50,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "watchers_prepopulated": "[\"turn\", \"correctAnswer\"]",
    "preload_asset_list": null
  },
  "audit_log": "[{\"changed_at\":\"2023-03-23T19:27:14.390+00:00\",\"changed\":[\"cloned from \\\"U4_L07_Conditionals Practice_Choice_2-2\\\"\"],\"cloned_from\":\"U4_L07_Conditionals Practice_Choice_2-2\"},{\"changed_at\":\"2023-03-23 19:27:17 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-23 19:29:03 +0000\",\"changed\":[\"code_functions\",\"display_name\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-28 18:35:56 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"bubble_choice_description\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-28 18:59:00 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-30 15:16:20 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-30 15:21:03 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-30 16:14:44 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-06-27 17:09:50 +0000\",\"changed\":[\"code_functions\",\"bubble_choice_description\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-08-22 23:21:51 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-10-19 18:30:54 +0000\",\"changed\":[\"code_functions\",\"show_debug_watch\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-12-15 06:02:08 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-12-15 06:04:07 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\",\"callout_json\",\"watchers_prepopulated\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-12-15 06:05:46 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-01-03 20:14:42 +0000\",\"changed\":[\"code_functions\",\"project_template_level_name\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-01-22 17:23:45 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>