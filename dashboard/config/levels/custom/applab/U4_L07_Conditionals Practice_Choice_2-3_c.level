<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2023-12-07T15:09:36.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "display_name": "Emoji Movie App, part 3",
    "project_template_level_name": "U4_L07_Conditionals Practice_Choice_2-Template",
    "long_instructions": "\r\n## Assigning the Correct Answer\r\n\r\n<br>\r\n\r\nFind the <code style=\"color:black; background-color:#fef088\">onEvent()</code> portion of the code for when the user clicks the **submitAnswer** button. We will be working within this event for the remainder of the app development.\r\n\r\n<span role=\"img\" aria-label=\"Two\">2Ô∏è‚É£</span> Create an <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional that checks the value of the <span style=\"color: #bb77c7\">turn</span> variable and assigns the value of <span style=\"color: #bb77c7\">answer1, answer2, answer3</span>, or <span style=\"color: #bb77c7\">answer4</span> to the new variable <span style=\"color: #bb77c7\">correctAnswer</span> based on the value of <span style=\"color: #bb77c7\">turn</span>.\r\n* <strong>Hint</strong>: The value of the <span style=\"color: #bb77c7\">turn</span> variable should match the number at the end of the <span style=\"color: #bb77c7\">answer</span> variable. For example, if <code style=\"color:black; background-color:#ffb74d\">turn == 1</code>, then <span style=\"color: #bb77c7\">correctAnswer</span> should be set to equal <span style=\"color: #bb77c7\">answer<b>1</b></span>.\r\n\r\nYou can find the location in the starter code to modify by matching the number next to the task (*e.g. 2Ô∏è‚É£ in this case*)\r\n\r\n<br>\r\n\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üîé Need help with your algorithm?</summary>\r\n    \r\n    <br>\r\n    \r\n    The <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional can be coded using the logic shown in the pseudocode below:\r\n    \r\n<br>\r\n<br>\r\n<pre style=\"background-color: #333333; color: white;\">\r\nif the value of turn equals 1\r\n\tthen set correctAnswer to the value of answer1\r\nor else if the value of turn equals 2\r\n\tthen set correctAnswer to the value of answer2\r\nor else if the value of turn equals 3\r\n\tthen set correctAnswer to the value of answer3\r\nif none of these are true\r\n\tthen set correctAnswer to the value of answer4\r\n</pre>\r\n\r\n<br>\r\n\r\n<br>\r\n<div style=\"background-color: #ffffff; border: 1px solid #9660bf; border-radius: 5px; padding: 15px; margin-bottom: 10px; font-size: 1.1em\">\r\nüêõ <strong>Bug Alert!</strong> Remember that we need to use the <i>equality operator</i> <code style=\"color:black; background-color:#ffb74d\">‚ö™==‚ö™</code> in order to compare two values or expressions. <br>\r\n<br>\r\nIt is common to accidentally use the <i>assignment operator</i> <code style=\"color:white; background-color:#bb77c7\">‚ö™=‚ö™</code> instead. This will result in an error within the conditional.</div>\r\n</details>\r\n\r\n<br>\r\n\r\n<hr>\r\n\r\n## Keeping Score\r\n\r\n<br> \r\n\r\nThe answer the the user types into the quiz will be saved into the variable <span style=\"color: #bb77c7\">userGuess</span>.\r\nNext, we will create a conditional that checks whether <span style=\"color: #bb77c7\">userGuess</span> equals <span style=\"color: #bb77c7\">correctAnswer</span>. If so, we will award a point by adding one to the <span style=\"color: #bb77c7\">score</span> variable! \r\n\r\n<br>\r\n\r\n<span role=\"img\" aria-label=\"Three\">3Ô∏è‚É£</span> Create an <code style=\"color:black; background-color:#64b5f6\">if</code> conditional statement that evaluates whether the variables <span style=\"color: #bb77c7\">userGuess</span> and <span style=\"color: #bb77c7\">correctAnswer</span> are equivalent. \r\n* If <i>true</i>, add <strong>1</strong> to the <span style=\"color: #bb77c7\">score</span> variable.\r\n\r\nYou can find the location in the starter code to modify by matching the number next to the task (*e.g. <span role=\"img\" aria-label=\"Two\">3Ô∏è‚É£</span> in this case*)\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üîé Need help with your algorithm?</summary>\r\n    \r\n    <br>\r\n<p>\r\n    \r\n    We can create this <code style=\"color:black; background-color:#64b5f6\">if</code> conditional statement using the logic outlined in the pseudocode below:</p>\r\n\r\n<pre style=\"background-color: #333333; color: white;\">\r\nif the value of userGuess equals correctAnswer\r\n\tthen increase the value of score by 1\r\n</pre>\r\n\r\n<br>\r\n<div style=\"background-color: #ffffff; border: 1px solid #9660bf; border-radius: 5px; padding: 15px; margin-bottom: 10px; font-size: 1.1em\">\r\nüêõ <strong>Bug Alert!</strong> Remember that we need to use the <i>equality operator</i> <code style=\"color:black; background-color:#ffb74d\">‚ö™==‚ö™</code> in order to compare two values or expressions. <br>\r\n<br>\r\nIt is common to accidentally use the <i>assignment operator</i> <code style=\"color:white; background-color:#bb77c7\">‚ö™=‚ö™</code> instead. This will result in an error within the conditional.</div>\r\n\r\n</details>\r\n\r\n<br>\r\n\r\n<br>\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n\r\n<span style=\"color: #000000; font-size: 150%\">üîé</span> <strong>Check This Out!</strong> Sometimes, it is easier to work in text-based mode rather than in block-based mode when working with longer sets of conditionals or when we need to concatenate a lot of information together in a string variable.\r\n\r\n<br>\r\n\r\nYou can toggle to text mode by clicking the <span style=\"color: #000000; font-size: 1.3em\"><img src=\"https://images.code.org/5249ea3cd7ce873044b6ad77a17f9482-showText.png\" alt=\"\"/>\r\n</span> button in the upper-right corner of the Workspace. Similarly, you can revert back to blocks by clicking <span style=\"color: #000000; font-size: 1.0em\"><img src=\"https://images.code.org/555989d32e266f5b58b126489e94df09-showBlocks.png\" alt=\"\"/>\r\n</span>.\r\n\r\n</div>\r\n\r\n",
    "bubble_choice_description": "Spice Level: üå∂\r\n\r\nCraft the conditionals that determine whether a user's answer was correct or incorrect.",
    "thumbnail_url": "https://images.code.org/e98be0cc9d626c4151d22f545c5c8dd0-EmojiMovie_titleCard.png",
    "encrypted_examples": "5SX35j8HjyKF14f1MQ2PhjpxsmHVyHEp/LFpDVW4Uou9YJFppeqh1g+7wrhQ\noPpGJRyKUx/6F8FTlzh05tOEmA==\n",
    "preload_asset_list": null
  },
  "audit_log": "[{\"changed_at\":\"2023-12-07T15:09:36.893+00:00\",\"changed\":[\"cloned from \\\"U4_L07_Conditionals Practice_Choice_2-3\\\"\"],\"cloned_from\":\"U4_L07_Conditionals Practice_Choice_2-3\"},{\"changed_at\":\"2023-12-07 15:09:39 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-12-07 21:28:26 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-12-07 22:28:33 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>