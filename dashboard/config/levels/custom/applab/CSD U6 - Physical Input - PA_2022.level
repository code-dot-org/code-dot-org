<Applab>
  <config><![CDATA[{
  "properties": {
    "skin": "applab",
    "code_functions": {
      "var myLed = createLed": null,
      "led.blink": null,
      "led.pulse": null,
      "onEvent": null,
      "setText": null,
      "setProperty": null,
      "ifBlock": null,
      "on": null,
      "off": null,
      "pulse": null,
      "toggle": null,
      "blink": null,
      "color": null,
      "led.on": null,
      "led.off": null,
      "led.toggle": null,
      "onBoardEvent": null,
      "equalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "var myButton = createButton": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions_important": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "validation_enabled": "true",
    "submittable": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "true",
    "long_instructions": "# Whack-A-Mole Game\r\n\r\nCreate an app that simulates a whack-a-mole game, where there are several animals that appear and you need to \"bop\" them to earn points.\r\n\r\nIn this version, we'll use three external buttons to represent the animals. The user can use the `GND` wire to 'whack' each of the animals and generate points. The app has already been designed for you - your task is to wire up the device and keep track of the score using the Counter Pattern.\r\n\r\n## Do This\r\n\r\n**Wiring Your Device:**\r\n\r\n1) Make sure your Circuit Playground is unplugged from the computer\r\n2) Connect 3 wires to pins `\"A0\"`, `\"A1\"`, and `\"A7\"`\r\n3) Connect a wire to a `GND` pin\r\n4) Plug your Circuit Playground back into the computer. You may need to rerun the Maker Setup\r\n\r\n**Coding Your Device:**\r\n\r\n1) ::: details [Create three button variables on pins `\"A0\"`, `\"A1\"`, and `\"A7\"`]\r\n\t- Drag out three [`createButton()`(#4dd0e1)](/docs/applab/createButton/) blocks\r\n    - Set their pins to `\"A4\"`, `\"A5\"`, and `\"A6\"`\r\n    :::\r\n2) ::: details [Use three `onBoardEvent()`(#f78183) blocks to detect when each of your buttons is `\"down\"`]\r\n\t- Drag out three [`onBoardEvent()`(#f78183)](/docs/applab/onBoardEvent/) blocks\r\n    - Type your button variables into the first parameter of each event\r\n\t- Set the event to \"down\"\r\n    :::\r\n3) ::: details [When the user presses one of the animal buttons, increase their score]\r\n\t- Inside each [`onBoardEvent()`(#f78183)](/docs/applab/onBoardEvent/): \r\n    \t- use the Counter Pattern to update the `score` variable. Each of the animal buttons should be worth a different amount of points\r\n        - Use a [`setText()`(#fff176)](/docs/applab/setText/) block to update the score on the screen\r\n   :::\r\n\r\n**Run Your Code!** You should be able to use the ground wire to press each of the buttons, which will update the score on the screen.",
    "text_mode_at_start": "false",
    "parent_level_id": 20603,
    "name_suffix": "_2021",
    "reference_links": [
      "/docs/concepts/maker-toolkit/circuits-and-leds/"
    ],
    "map_reference": "/docs/concepts/maker-toolkit/circuits-and-buttons/",
    "mini_rubric": "false",
    "encrypted": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 28px; padding: 2px 15px; width: 195px; height: 35px; position: absolute; left: 60px; top: 70px; text-align: center;\" id=\"titleLabel\">Score</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 28px; padding: 2px 15px; width: 195px; height: 35px; position: absolute; left: 60px; top: 130px; text-align: center;\" id=\"scoreLabel\">0</label></div></div>",
    "start_blocks": "var score = 0;\r\n//1) Create three button variables on pins \"A0\", \"A1\", and \"A7\"\r\n\r\n//2) Use three onBoardEvent() blocks to detect when each of your buttons is \"down\"\r\n\r\n//3) When the user presses one of the animal buttons, increase their score\r\n",
    "display_name": "Whack-A-Mole",
    "bubble_choice_description": "Create an app that simulates a whack-a-mole game, where you press 3 external buttons to earn points",
    "thumbnail_url": "https://dancodedotorg.github.io/CSD-U6-Images/L17/practice/C.png",
    "preload_asset_list": null,
    "encrypted_examples": "vO22JaALwU73KAF13xb9TaoHQtaNGhh+YhBNIS0XmXJje+n3J0Ga4n+G5MCX\nc2s9Tf9CEdqdAhEHHwoHcWJ6rQ==\n"
  },
  "game_id": 41,
  "published": true,
  "created_at": "2022-02-09T22:36:47.000Z",
  "level_num": "custom",
  "user_id": 1,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2022-02-09T22:36:46.986+00:00\",\"changed\":[\"cloned from \\\"CSD U6 - Physical Input - SB Template_2022\\\"\"],\"cloned_from\":\"CSD U6 - Physical Input - SB Template_2022\"},{\"changed_at\":\"2022-02-09 22:37:55 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-02-09 22:44:36 +0000\",\"changed\":[\"code_functions\",\"hide_design_mode\",\"long_instructions\",\"text_mode_at_start\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-02-09 22:55:33 +0000\",\"changed\":[\"start_html\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-02-09 22:56:33 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"start_blocks\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-02-09 22:58:07 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-02-09 22:59:57 +0000\",\"changed\":[\"start_html\",\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-02-15 20:45:18 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-02-15 20:48:25 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-04-07 22:59:16 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"start_blocks\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>