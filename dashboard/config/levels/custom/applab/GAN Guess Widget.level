<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2023-06-07T15:41:45.000Z",
  "level_num": "custom",
  "user_id": 14639,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "false",
    "embed": "true",
    "mini_rubric": "false",
    "submittable": "false",
    "start_blocks": "// Define the shapes and colors\r\nvar shapes = ['circle', 'square', 'triangle'];\r\nvar colors = ['red', 'green', 'blue'];\r\n\r\n// Initialize an empty array to hold the combinations\r\nvar combinations = [];\r\n\r\n// Generate all combinations of shapes and colors\r\nfor (var i = 0; i < shapes.length; i++) {\r\n    for (var j = 0; j < colors.length; j++) {\r\n        combinations.push({shape: shapes[i], color: colors[j]});\r\n    }\r\n}\r\n\r\nvar userKoanElement = \"\";\r\nvar computerKoanElement = [];\r\nvar resultsElement = \"\";\r\n\r\n// Store user's and computer's koan\r\nvar userKoan = [];\r\nvar computerKoan = [];\r\n\r\n// Define the Master's rule\r\nvar masterRule = function(koan) { // Updated to traditional function\r\n    return koan.some(function(item) { // Updated to traditional function\r\n        return item.shape === 'circle' && item.color === 'red';\r\n    });\r\n};\r\n\r\nonEvent(\"blueCircle\", \"click\", function( ) {\r\n  userKoan.push({shape: 'circle', color: 'blue'});\r\n  userKoanElement = userKoanElement + \"blue circle | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\nonEvent(\"blueSquare\", \"click\", function( ) {\r\n  userKoan.push({shape: 'square', color: 'blue'});\r\n  userKoanElement = userKoanElement + \"blue square | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\nonEvent(\"blueTriangle\", \"click\", function( ) {\r\n  userKoan.push({shape: 'triangle', color: 'blue'});\r\n  userKoanElement = userKoanElement + \"blue triangle | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\nonEvent(\"redCircle\", \"click\", function( ) {\r\n  userKoan.push({shape: 'circle', color: 'red'});\r\n  userKoanElement = userKoanElement + \"red circle | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\nonEvent(\"redSquare\", \"click\", function( ) {\r\n  userKoan.push({shape: 'square', color: 'red'});\r\n  userKoanElement = userKoanElement + \"red square | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\nonEvent(\"redTriangle\", \"click\", function( ) {\r\n  userKoan.push({shape: 'triangle', color: 'red'});\r\n  userKoanElement = userKoanElement + \"red triangle | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\nonEvent(\"greenCircle\", \"click\", function( ) {\r\n  userKoan.push({shape: 'circle', color: 'green'});\r\n  userKoanElement = userKoanElement + \"green circle | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\nonEvent(\"greenSquare\", \"click\", function( ) {\r\n  userKoan.push({shape: 'square', color: 'green'});\r\n  userKoanElement = userKoanElement + \"green square | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\nonEvent(\"greenTriangle\", \"click\", function( ) {\r\n  userKoan.push({shape: 'triangle', color: 'green'});\r\n  userKoanElement = userKoanElement + \"green triangle | \";\r\n  setText(\"currGuessText\", userKoanElement);\r\n});\r\n\r\n\r\n// Generate a random koan for the computer\r\nfunction generateComputerKoan() {\r\n    var koanLength = Math.floor(Math.random() * 5) + 1;  // add a random number of shapes between 1 and 5\r\n    var printGuessToScreen = \"\";\r\n  \r\n    //create a random koan of that length\r\n    for (var i = 0; i < koanLength; i++) {\r\n        var randomIndex = Math.floor(Math.random() * combinations.length);\r\n        computerKoan.push(combinations[randomIndex]);\r\n        printGuessToScreen = printGuessToScreen + combinations[randomIndex].color + \" \" + combinations[randomIndex].shape + \" | \";\r\n    }\r\n    \r\n    printGuessToScreen = printGuessToScreen.slice(0, -3); //get rid of trailing |\r\n    setText(\"computerGuessText\",printGuessToScreen);\r\n}\r\n\r\n// When the user has finished creating a guess, check it, inform the user, and switch to the computer guess screen\r\nonEvent(\"submitGuess\", \"click\", function() {\r\n    setText(\"currGuessText\", \"\");\r\n        var resultItem = \"\";\r\n\r\n        var koanDescription = ''; // Replace map operation\r\n        for (var i = 0; i < userKoan.length; i++) { // Loop through koan\r\n            koanDescription += userKoan[i].shape + \", \" + userKoan[i].color + \" | \";\r\n        }\r\n        koanDescription = koanDescription.slice(0, -3); // Remove the last \" | \"\r\n        \r\n        if (masterRule(userKoan)) {\r\n            resultItem = \"* [\" + koanDescription + \"] FOLLOWS the rule.\";\r\n            prompt(resultItem);\r\n        } else {\r\n            resultItem = \"* [\" + koanDescription + \"] does NOT follow the rule.\";\r\n            prompt(resultItem);\r\n        }\r\n        \r\n        resultsElement = resultsElement + \"\\n\" + resultItem;\r\n        setText(\"guessListGS\", resultsElement);\r\n        setText(\"guessListCSS\", resultsElement);\r\n        setText(\"computerGuessText\",\"\");\r\n\r\n        generateComputerKoan();\r\n        setScreen(\"computerGuessScreen\");\r\n    \r\n        // Clear user's koan for next round\r\n        userKoan = [];\r\n        setText(\"currGuessText\",\"\");\r\n        userKoanElement = \"\";\r\n});\r\n\r\n// When the user thinks the computer's koan guess followed the rule, check, provide feedback, and add the koan to the list\r\nonEvent(\"computerKoanCorrectButton\", \"click\", function(){\r\n        var resultItem = \"\";\r\n        var correct = masterRule(computerKoan);\r\n        \r\n        var koanDescription = ''; // Replace map operation\r\n        for (var i = 0; i < computerKoan.length; i++) { // Loop through koan\r\n            koanDescription += computerKoan[i].shape + \", \" + computerKoan[i].color + \" | \";\r\n        }\r\n        koanDescription = koanDescription.slice(0, -3); // Remove the last \" | \"\r\n\r\n        if (correct) {\r\n            resultItem = \"* [\" + koanDescription + \"] FOLLOWS the rule.\";\r\n            prompt(\"You're correct! The computer's guess \"+ resultItem);\r\n        } else {\r\n            resultItem = \"* [\" + koanDescription + \"] does NOT follow the rule.\";\r\n            prompt(\"Sorry, that's wrong. The computer's guess \"+ resultItem);\r\n        }\r\n        \r\n        resultsElement = resultsElement + \"\\n\" + resultItem;\r\n        setText(\"guessListGS\", resultsElement);\r\n        setText(\"guessListCSS\", resultsElement);\r\n\r\n        // Clear computer's koan for next round\r\n        while (computerKoanElement.firstChild) {\r\n            computerKoanElement.removeChild(computerKoanElement.firstChild);\r\n        }\r\n        computerKoan = [];\r\n        \r\n        setScreen(\"guessScreen\");\r\n\r\n});\r\n\r\n// Add an event listener to the computer's koan incorrect button\r\nonEvent(\"computerKoanIncorrectButton\", \"click\", function(){\r\n        var resultItem = \"\";\r\n        var correct = masterRule(computerKoan);\r\n\r\n        var koanDescription = '';\r\n        for (var i = 0; i < computerKoan.length; i++) { // Loop through koan\r\n            koanDescription += computerKoan[i].shape + \", \" + computerKoan[i].color + \" | \";\r\n        }\r\n        koanDescription = koanDescription.slice(0, -3); // Remove the last \" | \"\r\n\r\n        if (!correct) {\r\n            resultItem = \"* [\" + koanDescription + \"] does NOT follow the rule.\";\r\n            prompt(\"You're correct! The computer's guess [\" + resultItem);\r\n        } else {\r\n            resultItem = \"* [\" + koanDescription + \"] FOLLOWS the rule.\";\r\n            prompt(\"Sorry, that's wrong. The computer's guess \" + resultItem);\r\n        }\r\n\r\n        resultsElement = resultsElement + \"\\n\" + resultItem;\r\n        setText(\"guessListGS\", resultsElement);\r\n        setText(\"guessListCSS\", resultsElement);\r\n        \r\n        computerKoan = [];\r\n        \r\n        setScreen(\"guessScreen\");\r\n});",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "libraries_enabled": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" tabindex=\"1\" data-radium=\"true\" style=\"width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"guessScreen\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><button id=\"blueCircle\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 50px; width: 55px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 10px; top: 45px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/blue_circle.png?t=1686165392000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://blue_circle.png\" data-image-type=\"file\"></button><button id=\"redCircle\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 50px; width: 50px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 70px; top: 45px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/red_circle.jpg?t=1686165412000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://red_circle.jpg\" data-image-type=\"file\"></button><button id=\"greenCircle\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 50px; width: 55px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 125px; top: 45px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/green_circle.jpg?t=1686165430000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://green_circle.jpg\" data-image-type=\"file\"></button><button id=\"greenSquare\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 50px; width: 55px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 125px; top: 105px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/green_square.png?t=1686165531000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://green_square.png\" data-image-type=\"file\"></button><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 300px; height: 30px; position: absolute; left: 5px; top: 10px;\" id=\"label1\">Click on the buttons below to build a guess for what follows the rule</label><button id=\"blueSquare\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 50px; width: 55px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 10px; top: 105px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/blue_square.jpg?t=1686165494000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://blue_square.jpg\" data-image-type=\"file\"></button><button id=\"redSquare\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 50px; width: 50px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 70px; top: 105px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/red_square.jpg?t=1686165510000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://red_square.jpg\" data-image-type=\"file\"></button><button id=\"greenTriangle\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 55px; width: 55px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 125px; top: 160px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/green_triangle.jpg?t=1686165592000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://green_triangle.jpg\" data-image-type=\"file\"></button><button id=\"redTriangle\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 55px; width: 55px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 65px; top: 160px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/red_triangle.jpg?t=1686165578000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://red_triangle.jpg\" data-image-type=\"file\"></button><button id=\"blueTriangle\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 55px; width: 50px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 10px; top: 160px; background-image: url(&quot;https://levelbuilder-studio.code.org/level_starter_assets/GAN%20Guess%20Widget/blue_triangle.jpg?t=1686165556000&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"image://blue_triangle.jpg\" data-image-type=\"file\"></button><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 134px; height: 18px; position: absolute; left: 5px; top: 220px;\" id=\"label2\">Current Guess</label><div contenteditable=\"true\" class=\"textArea\" id=\"currGuessText\" style=\"width: 315px; height: 60px; border-style: solid; background-color: rgb(242, 242, 242); color: rgb(77, 87, 95); border-color: rgb(255, 255, 255); border-radius: 2px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 16px; padding: 5px 15px; position: absolute; left: 0px; top: 235px; margin: 0px;\"></div><button id=\"submitGuess\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 30px; width: 315px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 0px; top: 295px;\">Submit Guess</button><div contenteditable=\"true\" class=\"textArea\" id=\"guessListGS\" style=\"width: 310px; height: 120px; border-style: solid; background-color: rgb(242, 242, 242); color: rgb(77, 87, 95); border-color: rgb(255, 255, 255); border-radius: 2px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 5px 15px; position: absolute; left: 5px; top: 330px; margin: 0px;\"></div></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"computerGuessScreen\" style=\"display: none; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 165px; height: 18px; position: absolute; left: 0px; top: 5px;\" id=\"label3\">Computer's Guess:</label><div contenteditable=\"false\" class=\"textArea\" id=\"computerGuessText\" style=\"width: 316px; border-style: solid; background-color: rgb(242, 242, 242); color: rgb(77, 87, 95); border-color: rgb(255, 255, 255); border-radius: 2px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 16px; padding: 5px 15px; position: absolute; left: 4px; top: 20px; margin: 0px; height: 55px;\"></div><button id=\"computerKoanCorrectButton\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 60px; width: 310px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 5px; top: 80px;\">Computer's Guess FOLLOWS Rule</button><button id=\"computerKoanIncorrectButton\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 55px; width: 310px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 5px; top: 145px;\">Computer's Guess does NOT follow the Rule</button><div contenteditable=\"true\" class=\"textArea\" id=\"guessListCSS\" style=\"width: 320px; height: 225px; border-style: solid; background-color: rgb(242, 242, 242); color: rgb(77, 87, 95); border-color: rgb(255, 255, 255); border-radius: 2px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 5px 15px; position: absolute; left: 0px; top: 225px; margin: 0px;\"></div><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 157px; height: 18px; position: absolute; left: 0px; top: 205px;\" id=\"label4\">Previous Guesses</label></div></div>",
    "fail_on_lint_errors": "false",
    "widget_mode": "false",
    "ai_enabled": "false",
    "long_instructions": "# GAN Guessing Game\r\n\r\nIn this game the computer has created a rule for the kinds of passwords it accepts, based on the shapes and colors in the password. On your turn to guess, click the shapes to build a possible password. The computer will tell you if the password is accepted or not. Then, the computer will make a guess. You should click the button for whether you believe the computers guess followed the rule or not. The computer will tell you if you're right, and then it will be your turn again. Continue playing until you have guessed the rule!\r\n",
    "display_name": "Voice Simulator",
    "teacher_markdown": "The rule in this case is \"must contain a red circle.\"",
    "starter_assets": {
      "blue_circle.png": "0759cf52-ac71-48ed-8f8a-f883c4040e03.png",
      "red_circle.jpg": "8d0baf0d-c665-40f7-8e96-a56376123554.jpg",
      "green_circle.jpg": "fa9cae8c-9e12-4e88-bd03-5bd7056606c3.jpg",
      "blue_square.jpg": "a5db0e12-3b94-4e5f-95da-349712d57a89.jpg",
      "red_square.jpg": "3b7905f0-ffd2-4db0-9890-2c6077899d53.jpg",
      "green_square.png": "bff44964-bdaf-4e91-b65b-570282837ccd.png",
      "blue_triangle.jpg": "010aaa37-9062-4dee-948c-b9d475c76b2d.jpg",
      "red_triangle.jpg": "a7e3c69d-2320-47a9-bc32-1ae5dd3440eb.jpg",
      "green_triangle.jpg": "1bc7a948-35b3-4318-95cc-360f7c02e234.jpg"
    },
    "preload_asset_list": null,
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2023-06-07T15:41:45.411+00:00\",\"changed\":[\"cloned from \\\"Noisy Image Widget\\\"\"],\"cloned_from\":\"Noisy Image Widget\"},{\"changed_at\":\"2023-06-07 15:46:06 +0000\",\"changed\":[\"start_blocks\",\"start_html\",\"long_instructions\",\"teacher_markdown\",\"preload_asset_list\"],\"changed_by_id\":18972,\"changed_by_email\":\"sarah.judd@code.org\"},{\"changed_at\":\"2023-06-07 19:20:02 +0000\",\"changed\":[\"start_blocks\",\"start_html\"],\"changed_by_id\":18972,\"changed_by_email\":\"sarah.judd@code.org\"},{\"changed_at\":\"2023-06-07 20:02:26 +0000\",\"changed\":[\"start_blocks\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":18972,\"changed_by_email\":\"sarah.judd@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>