<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2024-03-14T22:22:30.000Z",
  "level_num": "custom",
  "user_id": 1574,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "getChecked": null,
      "setChecked": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "setProperty": null,
      "getProperty": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "mathAbs": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "declareAssign_str_hello_world": null
    },
    "embed": "false",
    "project_template_level_name": "CSP Conditionals Practice MindEase_template",
    "long_instructions": "# If-Else If-Else Statments\r\n\r\n<details style=\"background-color: #ddecd1; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üßëüèøüëßüèΩüë¶ Analyzing User Stories</summary>\r\n    <br/>\r\n\t<p>I want the recommendations to be influenced by both my happiness and stress levels.\r\n \t</p>\r\n</details>\r\n\r\n### ‚úÖ Do This - Milestone **5 / 6**\r\n\r\n**Tasks:**\r\n\r\n1) According to the table below, display the appropriate activities to the user depending on their `stressLevel` and `happinessLevel`.\r\n\r\n| Stress Level | Happiness Level | Suggested Activities                                      |\r\n|:------------:|:---------------:|:-----------------------------------------------------------:|\r\n| High         | Low             | `\"Guided meditation, Deep breathing exercises, Journaling\"`    |\r\n| High         | High            | `\"Yoga, Listening to upbeat music, Engaging in a hobby\"`       |\r\n|---------------------|----------------------------|----------------------------------------------------------------------------------------------|\r\n| Medium       | Low             | `\"Taking a long walk, Sketching or painting, Watching a comedy show\"` |\r\n| Medium       | High            | `\"Exercise (e.g., jogging), Dancing, Cooking a favorite meal\"` |\r\n|---------------------|----------------------------|----------------------------------------------------------------------------------------------|| Low          | Low             | `\"Reading a book, Nature walk, Practicing gratitude\"`          |\r\n| Low          | High            | `\"Socializing with friends, Exploring a new place, Playing a game\"` |\r\n|---------------------|----------------------------|----------------------------------------------------------------------------------------------|<br/>\r\n\r\nHere are the steps broken down a bit more. Use the Test Your Code section below as you go through each row of the table.\r\n\r\n-  ::: details  [For users with a `stressLevel` of `High` and `happinessLevel` of `Low`, show them `\"Guided meditation, Deep breathing exercises, Journaling\"`.]\r\n    - Use [`if/else`(#64b4f6)](/docs/applab/ifElseBlock/), [`&&`(#ffb74d)](/docs/applab/andOperator/), and [`==`(#ffb74d)](/docs/applab/equalityOperator/) to create an if-else statement like this: \r\n    \r\n    ![](https://images.code.org/fd64f329dbb2be5f47911b28e7bd1536-image-1710457653718.png)\r\n    \r\n    or this:    \r\n    ```\r\n    if (stressLevel == \"High\" && happinessLevel == \"Low\") {\r\n    \r\n    } else {\r\n    \r\n    }\r\n    ```\r\n\t[**üëâ Show me where üëà**](#triggercallout=step5)     \r\n    - Assign the value of `activitiesText` to `\"Guided meditation, Deep breathing exercises, Journaling\"` when the above boolean expression is true\r\n  :::\r\n\r\n- ::: details [For users with a `stressLevel` and `happinessLevel` of `High`, show them `\"Yoga, Listening to upbeat music, Engaging in a hobby\"`.]\r\n    - Expand the if-else statement into an if-**else if**-else statement (see below)\r\n    \r\n    ![](https://images.code.org/8865d4f0858bc8bcdf5f3479e549447e-image-1711577838923.gif)\r\n    \r\n    or like this:\r\n    \r\n    ```\r\n    if (stressLevel == \"High\" && happinessLevel == \"Low\") {\r\n    \r\n    } else if (stressLevel == \"High\" && happinessLevel == \"High\") {\r\n    \r\n    } else {\r\n    \r\n    }\r\n    ```\r\n    \r\n    - Use [`&&`(#ffb74d)](/docs/applab/andOperator/) and [`==`(#ffb74d)](/docs/applab/equalityOperator/) to create a boolean expression like this: `stressLevel == \"High\" && happinessLevel == \"High\"`\r\n    - Assign the value of `activitiesText` to `\"Yoga, Listening to upbeat music, Engaging in a hobby\"` when the above boolean expression is true\r\n    \r\n  :::\r\n\r\n- ::: details [Continue down the table showing the appropriate string to users with the corresponding `stressLevel` and `happinessLevel`]\r\n    - Follow the same pattern as shown in the step above, just change the boolean expression and string assignment to the corresponding values for the table row you are working on.\r\n    - For the last row, you can utilize the `else` part of the conditional statement and skip the boolean expression.\r\n:::\r\n\r\n<hr>\r\n\r\n### üéØ Test Your Code \r\n-  ::: details [Click the \"Suggest Activities\" button after using the dropdowns to test if the correct string appears at the bottom of the app.]\r\n\t- For example, if you select `8` for both `happiness` and `stress` and `20` from the `time` dropdown, you should see: \r\n    ![](https://images.code.org/494726100edddb2eaa3d254fd55e2f13-image-1710461728819.png)\r\n    \r\n   :::\r\n\r\n-  ::: details [If you aren't getting the output on the app screen you expect, a good next step is to add variables to the \"Watcher\" area. You will most likely want to add `activitiesText` in addition to others you think might be involved in the bug.]\r\n\t![](https://images.code.org/742c50837abb6a25b0e84bfc75b3cb10-image-1710195960138.gif)\r\n:::\r\n\r\n- Once you've added the appropriate variables to the Watcher, use the debugging skills you've practiced so far in this class to help you get your program working.\r\n\r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "palette_category_at_start": "variables",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "true",
    "expand_debugger": "true",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"CSP U4L7 Step 5\",\r\n  \"callout_text\": \"Start Here\",\r\n  \"element_id\": \"\",\r\n  \"on\": \"step5\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"\",\r\n     \"codeString\": \"Milestone 5\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"top center\",\r\n    \"at\": \"right bottom\",\r\n    \"adjust\": {\r\n     \"x\": 50,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "preload_asset_list": null,
    "encrypted_examples": [

    ],
    "display_name": "MindEase, Milestone 5",
    "bubble_choice_description": "Create recommendations for users based on their happiness and stress levels.",
    "thumbnail_url": "https://images.code.org/d814294ba14dc8722323e1634b08f1f5-MindEase Logo 2024-03-06.webp"
  },
  "audit_log": "[{\"changed_at\":\"2024-03-14T22:22:30.470+00:00\",\"changed\":[\"cloned from \\\"CSP Conditionals Practice MindEase L4\\\"\"],\"cloned_from\":\"CSP Conditionals Practice MindEase L4\"},{\"changed_at\":\"2024-03-14 22:58:28 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-03-14 23:22:45 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-03-14 23:25:42 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-03-15 00:16:12 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-03-15 03:56:55 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-03-27 22:18:18 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2024-04-17 15:02:50 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"expand_debugger\",\"callout_json\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-04-17 15:10:05 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-04-17 15:22:58 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-04-17 17:48:31 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2024-04-19 18:20:03 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>