<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2024-01-12T21:33:00.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "display_name": "Tic Tac Toe App, part 2",
    "project_template_level_name": "U4_L07_Conditionals Practice_Choice_3-Template_2024",
    "long_instructions": "\r\n## Updating the Board\r\n\r\nThe Tic Tac Toe board has been created for us and contains events that will activate whenever a user clicks on a square on the game board. When this happens, we will need to update the game board to display an X or an 0 (depending on the value of the <span style=\"color: #bb77c7\">turn</span> variable), or an error message if the user clicked on a square that was already selected. \r\n<br>\r\n\r\n<span role=\"img\" aria-label=\"One\">1Ô∏è‚É£</span> Begin the program by creating the conditional logic within <code style=\"color:black; background-color:#68d995\">updateBoard()</code>.\r\n* Create a simple <code style=\"color:black; background-color:#64b5f6\">if</code> conditional statement that checks the value of the <span style=\"color: #bb77c7\">gameOver</span> boolean variable. If<i> true</i>, then none of the code within <code style=\"color:black; background-color:#68d995\">updateBoard()</code> should be run. All following steps that we code will be<strong> nested</strong> within this conditional statement.\r\n* Create a nested <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional statement that accomplishes the three following tasks:\r\n    * <code style=\"color:black; background-color:#64b5f6\">if</code> the <span style=\"color: #bb77c7\">spaceText</span> string variable is <i>not</i> empty, then use the <code style=\"color:black; background-color:#fef088\">showElement()</code> command to display \"<i>tryAgainLabel</i>\".\r\n    \r\n    * <code style=\"color:black; background-color:#64b5f6\">else if</code> the <span style=\"color: #bb77c7\">turn</span> variable is odd, set the <span style=\"color: #bb77c7\">spaceText</span> string variable equal to \"<strong>X</strong>\". Add<strong> 1</strong> to <span style=\"color: #bb77c7\">turn</span>. Use the <code style=\"color:black; background-color:#fef088\">hideElement()</code> command to hide \"<i>player1TurnLabel</i>\". Use the <code style=\"color:black; background-color:#fef088\">showElement()</code> command to display \"<i>player2TurnLabel</i>\". <strong> Hint</strong>: use the mod operator (<strong>%</strong>) to test whether a value is odd or even.\r\n    \r\n    * <code style=\"color:black; background-color:#64b5f6\">else</code> set the <span style=\"color: #bb77c7\">spaceText</span> string variable equal to \"<strong>O</strong>\". Add<strong> 1</strong> to <span style=\"color: #bb77c7\">turn</span>. Use the <code style=\"color:black; background-color:#fef088\">hideElement()</code> command to hide \"<i>player2TurnLabel</i>\". Use the <code style=\"color:black; background-color:#fef088\">showElement()</code> command to display \"<i>player1TurnLabel</i>\".\r\n\r\n<br>\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n\r\n<span style=\"color: #000000; font-size: 150%\">üîé</span> <strong>Check This Out!</strong> Sometimes, it is easier to work in text-based mode rather than in block-based mode when working with longer sets of conditionals that involve logical operators (<strong> &&, ||, ! </strong>)\r\n\r\n\r\n<br>\r\n\r\nYou can toggle to text mode by clicking the <span style=\"color: #000000; font-size: 1.3em\"><img src=\"https://images.code.org/5249ea3cd7ce873044b6ad77a17f9482-showText.png\" alt=\"\"/>\r\n</span> button in the upper-right corner of the Workspace. Similarly, you can revert back to blocks by clicking <span style=\"color: #000000; font-size: 1.0em\"><img src=\"https://images.code.org/555989d32e266f5b58b126489e94df09-showBlocks.png\" alt=\"\"/>\r\n</span>.\r\n\r\n</div>\r\n\r\n<br>\r\n\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üîé Need help with your algorithm?</summary>\r\n    \r\n    <br>\r\n    \r\n   The <code style=\"color:black; background-color:#64b5f6\">if</code> / <code style=\"color:black; background-color:#64b5f6\">else if</code> / <code style=\"color:black; background-color:#64b5f6\">else</code> conditional and accompanying statements can be coded as follows:\r\n    \r\n    <br> \r\n    <br>\r\n\r\n<div style=\"column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 100%\"> \r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/1db4c01d790a347d8d42b94884291330-2.1-1.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    </p>\r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/3e1558949b8d3c6c132d824de8e11419-2.1-2.png\" alt=\"\" style=\"display: block; margin: auto;\"/>    \r\n    </p>\r\n    \r\n </div>\r\n \r\n <br> \r\n \r\n<div style=\"background-color: #ffffff; border: 1px solid #9660bf; border-radius: 5px; padding: 15px; margin-bottom: 10px; font-size: 1.1em\">\r\nüêõ <strong>Bug Alert!</strong> When creating long conditional statements in<i> text mode</i>, it may become difficult to switch back into<i> block mode</i> if there is an error.  <br>\r\n<br>\r\nIf you cannot find and fix the error in your code, it may become necessary to use the <strong>Version History</strong> feature in order to go back in time to a previous version of your project before the error was introduced.</div>\r\n \r\n</details>\r\n\r\n",
    "bubble_choice_description": "Spice Level: üå∂üå∂üå∂\r\n\r\nLet's create the conditionals that will update the game board when a user interacts with it.",
    "thumbnail_url": "https://images.code.org/d5775807bd751237ba3c00856d971622-ticTacToe_titleCard.png",
    "encrypted_examples": "PCZvgmW2ae34tTpAjodM4ttxDQ7wVGefF4IteRVcqvoIwW5WxTQovljo7Gj8\neami4wM3Vf+W6T7prJeQH3quRQ==\n",
    "name_suffix": "_2024",
    "preload_asset_list": null
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-01-12T21:33:00.783+00:00\",\"changed\":[\"cloned from \\\"U4_L07_Conditionals Practice_Choice_3-2\\\"\"],\"cloned_from\":\"U4_L07_Conditionals Practice_Choice_3-2\"}]"
}]]></config>
  <blocks/>
</Applab>