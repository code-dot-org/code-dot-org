<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2023-11-28T21:25:40.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "setProperty": null,
      "getProperty": null,
      "declareAssign_x": null,
      "equalityOperator": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "onBoardEvent": {
        "dropdown": {
          "0": [
            "buttonA",
            "buttonB"
          ],
          "1": [
            "\"down\"",
            "\"up\""
          ]
        }
      },
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.clear": null,
      "ledScreen.display": null,
      "getText": null,
      "setText": null
    },
    "edit_code": true,
    "embed": "false",
    "long_instructions": "# LED Designs\r\n\r\nYou can use dropdowns and the [`ledScreen.display()`(#f78183)](/docs/ide/applab/expressions/ledScreen.display) block to display customized images on the micro:bit `ledScreen`. This app lets uses choose between a circle or an X for a game they are playing. \r\n\r\nThe circle has already been setup using an [`if-statement`(#64B5F6)](/docs/applab/ifBlock/) and the [`ledScreen.display()`(#f78183)](/docs/ide/applab/expressions/ledScreen.display) block. Can you add code to make the X work as well?\r\n\r\n# Do This\r\n1. Find the section of the code that says \"Add your code here\" [(Show me where)](#triggercallout=add_code)\r\n2. Using the circle as a model, add an [`if-statements`(#64B5F6)](/docs/applab/ifBlock/) to check the value from the dropdown\r\n\t- Use the [`==`(#FFB74D)](/docs/applab/equalityOperator/) block to check if the value from the dropdown is `X`\r\n3. Inside the if-statement: Create an `X` design on the `ledScreen`\r\n\t- Use the [`ledScreen.display()`(#f78183)](/docs/ide/applab/expressions/ledScreen.display) block and put a `1` in the spaces to create an `X`\r\n\r\nRun your code and verify that program works correctly!",
    "instructions_important": "false",
    "submittable": "false",
    "start_blocks": "onEvent(\"selectDropdown\", \"change\", function() {\r\n  var select = getProperty(\"selectDropdown\", \"value\");\r\n  if (select == \"O\") {\r\n    ledScreen.display([\r\n    ([0, 1, 1, 1, 0]),\r\n    ([1, 0, 0, 0, 1]),\r\n    ([1, 0, 0, 0, 1]),\r\n    ([1, 0, 0, 0, 1]),\r\n    ([0, 1, 1, 1, 0])\r\n    ]);\r\n  }\r\n  \r\n  //Add your code here\r\n  \r\n  //2) Add an if-statement to check the value from the dropdown\r\n  \r\n  //3) Create an 'X' design on the ledScreen\r\n  \r\n});\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "validation_enabled": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\" data-theme=\"default\">\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    <label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 25px; padding: 2px 15px; width: 320px; height: 40px; position: absolute; left: 0px; top: 4.16334e-17px; text-align: center;\" id=\"titleLabel\">Tic-Tac-Toe Selector</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 225px; height: 65px; position: absolute; left: 50px; top: 55px; text-align: center;\" id=\"descriptionLabel\">Use the dropdown to select either O or X</label><select id=\"selectDropdown\" style=\"width: 95px; height: 25px; margin: 0px; border-style: solid; background-color: rgb(255, 255, 255); color: rgb(77, 87, 95); background-image: url(&quot;data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20256%20448%22%20enable-background%3D%22new%200%200%20256%20448%22%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E.arrow%7Bfill%3A%234d575f%3B%7D%3C%2Fstyle%3E%3Cpath%20class%3D%22arrow%22%20d%3D%22M255.9%20168c0-4.2-1.6-7.9-4.8-11.2-3.2-3.2-6.9-4.8-11.2-4.8H16c-4.2%200-7.9%201.6-11.2%204.8S0%20163.8%200%20168c0%204.4%201.6%208.2%204.8%2011.4l112%20112c3.1%203.1%206.8%204.6%2011.2%204.6%204.4%200%208.2-1.5%2011.4-4.6l112-112c3-3.2%204.5-7%204.5-11.4z%22%2F%3E%3C%2Fsvg%3E&quot;); border-color: rgb(0, 0, 0); border-radius: 4px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 0px 30px 0px 15px; position: absolute; left: 110px; top: 135px;\"><option>O</option><option>X</option></select></div></div>",
    "hide_view_data_button": "true",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "microbit",
    "top_level_procedure_autopopulate": "false",
    "parent_level_id": 20435,
    "name_suffix": "_2024",
    "map_reference": "/courses/csd-2022/guides/taking-input-with-getproperty",
    "mini_rubric": "false",
    "text_mode_at_start": "false",
    "encrypted": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"CSD U6L10.2 - add_code\",\r\n  \"callout_text\": \"Add your code here!\",\r\n  \"element_id\": \"\",\r\n  \"on\": \"add_code\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"\",\r\n     \"codeString\": \"//Add your code here\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"right center\",\r\n    \"at\": \"left center\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]\r\n",
    "encrypted_examples": "XBLg7EGa2tUCydodJiyj8mltVKuP/Y8lJyeFWJ2W0RiaazqIU2tnT3PdbYgD\nzvutK9v7En5p4MO5K8oXaP2mwQ==\n",
    "reference_links": [
      "/courses/csd-2022/guides/if-statements-2",
      "/courses/csd-2022/guides/booleans-and-comparison-operators",
      "/courses/csd-2022/guides/variables",
      "/courses/csd-2022/guides/counter-patterns-with-event",
      "/courses/csd-2022/guides/microbit-physical-input",
      "/courses/csd-2022/guides/microbit-display",
      "/courses/csd-2022/guides/microbit-overview",
      "/maker/setup"
    ],
    "preload_asset_list": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2023-11-28T21:25:40.154+00:00\",\"changed\":[\"cloned from \\\"CSD U6 - Combine Inputs - SB6_mb2022\\\"\"],\"cloned_from\":\"CSD U6 - Combine Inputs - SB6_mb2022\"}]"
}]]></config>
  <blocks/>
</Applab>