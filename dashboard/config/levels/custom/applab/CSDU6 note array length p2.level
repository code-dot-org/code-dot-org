<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2017-11-29T00:26:27.000Z",
  "level_num": "custom",
  "user_id": 568,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onBoardEvent": null,
      "buzzer.note": null,
      "buzzer.frequency": null,
      "declareAssign_list_abd": null,
      "mathRandom": null,
      "listLength": null,
      "subtractOperator": null
    },
    "edit_code": true,
    "embed": "false",
    "long_instructions": "# Length of an Array\r\n\r\n`randomNumber()` was still generating a range of numbers from 0 to 2. You added more indexes in the array, so checking for the index of 0-2 isn't helpful if there's 5 items in the array.\r\n\r\nYou can fix this by using the **length** of the array with `array.length()`. If we generate a random number that's anywhere between 0 and the length of the array, you'll be able to play any of the elements in the array! Sort of!\r\n\r\nIf the array length is 5, and you want to select a random index between 0 (the first index) and 5, then the computer can select up to 6 possible indexes, which the array doesn't have. To get around this, you'll have to subtract 1 from the length of the array like in the code below: \r\n\r\n![](https://images.code.org/6e4e01b50708667fcd1585b61b1a87ae-image-1512083621011.jpg)\r\n\r\n# Do this\r\n\r\n* Set `randomNumber()` to generate numbers between 0 and the length of the list minus 1.\r\n* Add as many new notes to the array as you want.\r\n* Run the code to see what happens.\r\n",
    "instructions_important": "false",
    "start_blocks": "var notes = [\"C#4\", \"C#4\", \"C#4\"];\r\nonBoardEvent(buttonL, \"down\", function(event) {\r\n  var i = randomNumber(0, 2);\r\n  buzzer.note(notes[i], 100);\r\n});\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "submittable": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "true",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-11-28 23:21:38 +0000\",\"changed\":[\"notes\",\"code_functions\",\"contained_level_names\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-11-28 23:22:17 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"makerlab_enabled\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-11-28 23:23:44 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"markdown_instructions\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-11-29 00:04:39 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-11-29 00:05:04 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-11-29 00:06:47 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-11-29 00:16:51 +0000\",\"changed\":[\"name\",\"code_functions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-11-29 00:48:00 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"project_template_level_name\",\"contained_level_names\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-11-30 23:14:48 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"},{\"changed_at\":\"2017-12-01 16:44:41 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":568,\"changed_by_email\":\"meilani.eyre@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>