<Applab>
  <config><![CDATA[{
  "properties": {
    "skin": "applab",
    "code_functions": {
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "onEvent": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "setProperty": null
    },
    "embed": "false",
    "instructions_important": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "never_autoplay_video": "true",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "validation_enabled": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "false",
    "long_instructions": "# Programming Levels\r\n\r\nProgramming Levels allow students to write code to solve problems. Instructions for each level are included at the top, while the center of the screen is their workspace for writing code. Students can run their code on the left-side of the screen. Additional resources are provided in the Help and Tips tab, and an example solution is provided in the blue teacher-only menu on the right side of the screen.\r\n\r\n___\r\n\r\n<img src=\"https://images.code.org/d5553c84263ea297d80093bee4e91d2f-image-1551121057846.gif\" style=\"float:right\">\r\n\r\n# Do This\r\n\r\nBuild an App where the star changes colors based on the number of clicks. \r\n\r\n* Add `clicks` to the Watch window in the bottom right\r\n* Add a Boolean expression to the if-statement that checks if there are 5 or more clicks.\r\n* Test the app to see if the star turns red if there are 5 or more clicks. \r\n* **Note:** You will be stuck in text mode until you debug the problems in the code.",
    "start_blocks": "// Create variables\r\nvar clicks = 0;\r\n\r\n// When the star is clicked increase the\r\n// count by 1 and change the star's color\r\nonEvent(\"star\", \"click\", function() {\r\n  clicks = clicks + 1;\r\n  setText(\"numClicks\", clicks);\r\n  \r\n  // add the Boolean expression to the if-statement\r\n  if(){\r\n    setProperty(\"star\", \"icon-color\", \"red\");\r\n  }\r\n\r\n});",
    "parent_level_id": 17673,
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" tabindex=\"1\" data-radium=\"true\" style=\"width: 320px; height: 450px; display: block;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0;\"><img data-canonical-image-url=\"icon://fa-star\" data-object-fit=\"contain\" id=\"star\" style=\"height: 280px; width: 320px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; position: absolute; left: 0px; top: 45px; margin: 0px;\"><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; width: 126px; height: 19px; position: absolute; left: 15px; top: 410px;\" id=\"numberLabel\">Number of clicks: </label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; width: 85px; height: 20px; position: absolute; left: 150px; top: 410px;\" id=\"numClicks\">0</label></div></div>",
    "palette_category_at_start": "control",
    "encrypted": "false",
    "encrypted_examples": "F/+q0EHjxdHDGcgs7gdgvKAQ+5/2fs6ccRgHnyBwFqsDf8R+o8nIp4ZMzOL+\n6wbYtLBMB/ZbYDM+9JWn7va+aw==\n",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "name_suffix": "_2021",
    "video_key": "csp_applab_conditionals_2A",
    "ai_enabled": "false",
    "preload_asset_list": null,
    "display_name": "Programming Levels",
    "bubble_choice_description": "Programming levels are usually targeted tasks that are focused on specific skill-building rather than open-ended creation.",
    "thumbnail_url": "https://images.code.org/4c9ddcf31a0a26da295867a6d6291a58-image-1638836371061.19.14 PM.png"
  },
  "game_id": 41,
  "published": true,
  "created_at": "2021-12-07T00:17:28.000Z",
  "level_num": "custom",
  "user_id": 832,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2021-12-07T00:17:28.188+00:00\",\"changed\":[\"cloned from \\\"U4 L07 Conditionals Practice 10_2021\\\"\"],\"cloned_from\":\"U4 L07 Conditionals Practice 10_2021\"},{\"changed_at\":\"2021-12-07 00:18:20 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":10559,\"changed_by_email\":\"aryanna@code.org\"},{\"changed_at\":\"2021-12-07 00:19:44 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":10559,\"changed_by_email\":\"aryanna@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>