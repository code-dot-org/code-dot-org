<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2017-09-26T17:05:15.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "moveForward": {
        "params": [
          ""
        ],
        "paletteParams": [
          ""
        ]
      },
      "turnLeft": {
        "paramButtons": {
          "maxArgs": 0
        },
        "params": [
          ""
        ],
        "paletteParams": [
          ""
        ]
      },
      "comment_Goals_1": {
        "goal": "Move turtle"
      },
      "comment_Goals_2": {
        "goal": "Orient turtle"
      },
      "comment_Goals_3": {
        "goal": "Define function"
      },
      "comment_Goals_4": {
        "goal": "Call function"
      },
      "functionParams_none": null,
      "callMyFunction": null,
      "comment": null,
      "penUp": null,
      "penDown": null
    },
    "edit_code": true,
    "embed": "false",
    "short_instructions": "Define a function called turnAround. Call the function and then move the turtle forward. (Click to see full instructions)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "slider_speed": "0.1",
    "show_turtle_before_run": "true",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "blocks",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "true",
    "encrypted_examples": "OgFutPCohIyY4j1vOD0dj390mqKRlik2ZbyOOdi2qZnLYvj0juPDGe1LWbCH\n7e3l\n",
    "never_autoplay_video": "true",
    "examples_required": "false",
    "long_instructions": "# Do This:\r\n**Define** a function called `turnAround()` which turns the turtle around. Once you've defined the function **call** it to make sure it works as you expect and then move the turtle forward, as shown below. \r\n\r\n![](https://images.code.org/4c31307ec14cc6dfd65589f2a813120e-image-1447884881189.gif)\r\n\r\n**Remember** typically, you call a function in lines of code *above* the function definition - this might make you  feel like you are working in reverse, since you first write the code to define the function and *then* add a line to call it.  Here is the `moveTwice` example from the video. You should do something similar for turnAround:\r\n\r\n![](https://images.code.org/3faf16575757ffae616dffd761085ab5-image-1467818996127.gif)\r\n\r\nYou'll use four subgoals to solve this problem (sort of). First you'll `//Define function`, which will include `//Orient turtle`. As you will start to see, even subgoals can be broken down into subgoals sometimes. This will be helpful when you start creating more complex functions. \r\n\r\nThen you'll `//Call function` and `//Move turtle`.\r\n\r\nDon't forget to name your functions.",
    "submittable": "false",
    "hide_view_data_button": "true",
    "video_key": "csp_applab_functions",
    "droplet_tooltips_disabled": "true",
    "debugger_disabled": "true",
    "lock_zero_param_functions": "true",
    "execute_palette_apis_only": "true",
    "log_conditions": [
      {
        "entries": [
          "[forTest]"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "Hey! You're using a programming construct - loops - we haven't (officially) learned about yet :).  Don't worry, your knowledge will come in handy later, but for now, try to stick to the constraints of this problem."
      },
      {
        "entries": [
          "turnLeft:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have discovered that the turnLeft() function can accept the number of degrees to turn!  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem - use only turnLeft()."
      },
      {
        "entries": [
          "moveForward:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have discovered that the moveForward() function can accept the number of pixels to move forward!  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem."
      },
      {
        "entries": [
          "turnRight"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have found the turnRight function.  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem."
      },
      {
        "entries": [
          "turnRight:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have found the turnRight function. Clever. You can use this knowledge later, but for now, try to stick to the constraints of this problem."
      },
      {
        "entries": [
          "turnAround"
        ],
        "matchType": "exact",
        "minTimes": 1,
        "message": "You need to define a function called turnAround. Did you spell and capitalize it the same way as the instructions?"
      },
      {
        "entries": [
          "turnLeft",
          "turnLeft"
        ],
        "matchType": "inexact",
        "minTimes": 1,
        "message": "In order to turn around you need to turnLeft twice."
      },
      {
        "entries": [
          "turnAround",
          "moveForward"
        ],
        "matchType": "inexact",
        "minTimes": 1,
        "message": "Did you move forward after turning around?"
      }
    ],
    "fail_on_lint_errors": "false",
    "instructions_important": "false",
    "makerlab_enabled": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "disable_procedure_autopopulate": "false",
    "start_blocks": "//Call function\r\nmyFunction();\r\n//Move turtle\r\n\r\n//Define function\r\nfunction myFunction() {\r\n  //Orient turtle\r\n}\r\n",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-06-09 21:42:02 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"never_autoplay_video\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-09-26 17:06:47 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-10 16:58:34 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-12 16:08:57 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-12 16:10:58 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\",\"start_blocks\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-12 16:26:33 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\",\"start_blocks\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-20 12:37:00 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-20 13:15:10 +0000\",\"changed\":[\"code_functions\",\"text_mode_at_start\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-20 19:16:45 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>