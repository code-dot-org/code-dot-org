<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2023-04-28T04:41:59.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "false",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "project_template_level_name": "U7_L03_Parameters-Return Practice_Choice_1-Template",
    "long_instructions": "## More User Testing and Updates\r\n\r\nTo get some feedback on this version of the app Xochitl and Destiny had some more users try it out and found that users wanted more information than just a total number of ramen varieties.\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ddecd1; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">🧑🏿👧🏽👦 Analyzing User Stories</summary>\r\n    <br/>\r\n\t<p>It's good to be able to filter like this, but I'd love to know more about the quality of these different types of ramen. Like, how good is ramen from South Korea overall? Or, how does cup ramen compare with box ramen in terms of rating?\r\n \t</p>\r\n</details>\r\n\r\n\r\n<br>\r\n\r\n<img src=\"https://images.code.org/b68e20e15b4c76906e04a6b2c3bb7f62-4_emoji.png\" style=\"margin-right: 10px\" src=\"link\" alt=\"4\"><b>Step Four:</b> Complete the function <code style=\"color:black; background-color:#68d995\">average(list)</code> that takes in a list of numbers as an argument and returns the average of those numbers. [**👉 Show me where 👈**](#triggercallout=step4)\r\n* Use the comments in the code to guide you in writing the <code style=\"color:black; background-color:#68d995\">average(list)</code> function:\r\n  * Set up a variable for the <code style=\"color:white; background-color:#bb77c7\">sum</code>\r\n  * Use a <code style=\"color:black; background-color:#64b5f6\">for</code>\r\n loop to add all the values in the list <code style=\"color:white; background-color:#bb77c7\">filteredStars</code> to that variable\r\n  * After the <code style=\"color:black; background-color:#64b5f6\">for</code> loop is done running, create a variable for the <code style=\"color:white; background-color:#bb77c7\">mean</code>\r\n  * Set the value of the <code style=\"color:white; background-color:#bb77c7\">mean</code> variable to be the <code style=\"color:white; background-color:#bb77c7\">sum</code> variable divided by the length of the list passed in as an argument.\r\n  * Use the function <code style=\"color:black; background-color:#68d995\">roundToTenths(number)</code> to round the value stored in your <code style=\"color:white; background-color:#bb77c7\">mean</code> variable\r\n  * Return the value stored in the variable <code style=\"color:white; background-color:#bb77c7\">mean</code>\r\n* Remove the comment slashes <code>//</code> from lines 47 and 58 to call the <code style=\"color:black; background-color:#68d995\">average(list)</code> function when the country and style dropdowns are changed.\r\n\r\nYou can find the location in the starter code to modify by matching the number next to the task .\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">🔎 Helpful Hints to Get Started</summary>\r\n    \r\n    <br>\r\n    \r\n    The <span style=\"color: #bb77c7\">sum</span> variable can be declared & initialized as follows:\r\n    \r\n    <br>   \r\n    <br>\r\n    \r\n    <div style=\"column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 100%\"> \r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/306afd5c5675ada22b7d85cabb5671e2-Screenshot 2023-05-11 at 6.03.45 PM.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    </p>\r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n\t<img src=\"https://images.code.org/fe126c9d332113612b1f3b0f6919a4ff-Screenshot 2023-05-11 at 6.04.42 PM.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    \r\n    </p>\r\n </div>\r\n\r\n<br>\r\n    \r\n    The <span style=\"color: #bb77c7\">average</span> variable can be declared, initialized, & returned as follows:\r\n    \r\n    <br>   \r\n    <br>\r\n    \r\n    <div style=\"column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 100%\"> \r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    <img src=\"https://images.code.org/f85bd1e1e02a4ee3af2c36e4903a2f45-rr_5-1.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    </p>\r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n\t<img src=\"https://images.code.org/1d007275a25f7247f3144a7478a2d07f-rr_5-2.png\" alt=\"\" style=\"display: block; margin: auto;\"/>\r\n    \r\n    </p>\r\n </div>\r\n\r\n<br>\r\n\r\n\r\n\r\n</details>\r\n\r\n<br>\r\n<br>\r\n\r\n🖥️ **Test your code!** Add some console.log statements to the your program (outside of any onEvents or function definitions) that call the function average on some basic lists where you can easily see if the average has been calculated accurately. For example: \r\n* <code>console.log(average([2,4,6]);</code> should print 4 to the console.\r\n* <code>console.log(average([1.0, 2.5, 3.5]);</code> should print 2.3 to the console.\r\n* <code>console.log(average([-1, -2, -3, -4]);</code> should print -2.5 to the console.\r\n\r\n\r\n",
    "display_name": "Ramen Radar, part 5",
    "bubble_choice_description": "Spice Level: 🌶\r\n\r\nCode an *average* function that takes a list of numbers and returns an average.",
    "thumbnail_url": "https://images.code.org/9c574452304fbb281e5a3e18c8f18724-ramen_titleCard.png",
    "encrypted_examples": "YQkDqljImBbFXjhp96LAbepKU5HdRj5wpWDYtKgfbYSkt16SyPRkp5KpLezF\nSmNOX+A6yRCaCGsdfE9WL91ikA==\n",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"CSP U7L2.2a.2 - step 1\",\r\n  \"callout_text\": \"Start Here\",\r\n  \"element_id\": \"\",\r\n  \"on\": \"step4\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"\",\r\n     \"codeString\": \"Step Four\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"top center\",\r\n    \"at\": \"right bottom\",\r\n    \"adjust\": {\r\n     \"x\": 50,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]\r\n",
    "preload_asset_list": null,
    "data_library_tables": "Ramen Ratings"
  },
  "audit_log": "[{\"changed_at\":\"2023-04-28T04:41:59.735+00:00\",\"changed\":[\"cloned from \\\"U7_L03_Parameters and Return Practice_Choice_1-4\\\"\"],\"cloned_from\":\"U7_L03_Parameters and Return Practice_Choice_1-4\"},{\"changed_at\":\"2023-04-28 04:42:06 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-04-28 04:44:04 +0000\",\"changed\":[\"code_functions\",\"display_name\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-05-02 16:00:11 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-05-02 21:53:20 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-05-02 21:54:20 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-05-11 22:36:17 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-05-11 22:44:02 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-05-12 01:07:24 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-07-03 15:41:08 +0000\",\"changed\":[\"code_functions\",\"bubble_choice_description\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-10-27 22:48:46 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-10-30 21:25:52 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-12-15 07:37:35 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-12-15 07:41:39 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"},{\"changed_at\":\"2023-12-15 23:05:11 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>