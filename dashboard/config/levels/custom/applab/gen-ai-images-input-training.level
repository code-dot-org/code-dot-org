<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2024-04-07T04:41:17.000Z",
  "level_num": "custom",
  "user_id": 14639,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "long_instructions": "![](https://images.code.org/1ce86680bb4e334a51998898cb63514d-image-1712464922019.png)\r\n\r\n![](https://images.code.org/f0fa4ffd506fa1fd6400632068d8bffb-image-1712464924503.png)\r\n\r\n![](https://images.code.org/dff18bd9faee88269323b497320236eb-image-1712464926324.png)\r\n\r\n![](https://images.code.org/b12bb00586824827d36e3b0d089a79f2-image-1712464928085.png)\r\n\r\n![](https://images.code.org/6cf73086ee21f7ec30ad34f90dd5bd57-image-1712464929842.png)\r\n\r\n![](https://images.code.org/6df1fca2db95ec5f1ab031e4e648d54f-image-1712464931609.png)\r\n\r\n![](https://images.code.org/cdf3fdb01e55d878f098a4e19981ea33-image-1712464933330.png)\r\n\r\n![](https://images.code.org/7f6cbdbc4873673915f3d5e770995cd6-image-1712464937278.png)\r\n\r\n![](https://images.code.org/c20c3e3909c53db543b35fedabd7013a-image-1712464939271.png)\r\n\r\n![](https://images.code.org/e8de05056fb8928b64e9175b9ed8c150-image-1712464935591.png)\r\n\r\n![](https://images.code.org/bb42bb2ce45ad379b3868be6f9cf3ec5-image-1712464941515.png)\r\n\r\n![](https://images.code.org/d816ba44392658948165813bc3d02d1c-image-1712464943187.png)\r\n\r\n![](https://images.code.org/4b0a236f6c2b47ac385fd4150631a7ed-image-1712464944774.png)\r\n\r\n![](https://images.code.org/3e4a4d4269757b7510dfbaf41764bdc1-image-1712464947265.png)\r\n\r\n![](https://images.code.org/aca61f76416a1e1dc8f9062ba3cbf8ef-image-1712464948896.png)\r\n\r\n![](https://images.code.org/0b8321bb72cc2a23530f27d347ce2449-image-1712464951088.png)\r\n\r\n![](https://images.code.org/f2b0a7ad37367ecff55641691631079b-image-1712464956079.png)\r\n\r\n![](https://images.code.org/388ae08386432f093b2ba01a48e3254f-image-1712464957741.png)\r\n\r\n![](https://images.code.org/d9c05f8aff9324460e9377ece2ece662-image-1712464959369.png)\r\n\r\n![](https://images.code.org/16d55000ec06d9f078bd58552bbfb627-image-1712464961146.png)\r\n\r\n![](https://images.code.org/8e26f0fc7c70d1d57d74caf826ecd8f3-image-1712464962839.png)\r\n\r\n![](https://images.code.org/02d5ce063c3a0635983cdf0a88e224c0-image-1712464964415.png)\r\n\r\n![](https://images.code.org/8032d3f7a6e936189b38d6284fe97b50-image-1712464966242.png)\r\n\r\n![](https://images.code.org/76871010fc45474cd4b292897aab536c-image-1712464968390.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "libraries_enabled": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "fail_on_lint_errors": "false",
    "widget_mode": "false",
    "ai_enabled": "false",
    "start_blocks": "              [\r\n  {\r\n    \"group\": 1,\r\n    \"slidesArray\": [],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": 2,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 3,\r\n        \"image\": \"https://images.code.org/b12bb00586824827d36e3b0d089a79f2-image-1712464928085.png\",\r\n        \"content\": \"<i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> In this comic, Calvin and Hobbes are playing Scrabble - a game where you score points based on the words you can create with random letters. On the next screen, you will see a list of “words”. Decide which ones are truly words like you can play in Scrabble and which are not.\\n\\t\\t<br />\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/b12bb00586824827d36e3b0d089a79f2-image-1712464928085.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> In this comic, Calvin and Hobbes are playing Scrabble - a game where you score points based on the words you can create with random letters. On the next screen, you will see a list of “words”. Decide which ones are truly words like you can play in Scrabble and which are not.\\n\\t\\t<br />\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": true\r\n  },\r\n  {\r\n    \"group\": 3,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 3,\r\n        \"image\": \"\",\r\n        \"content\": \"**Teaching Tip: Classroom Prep** - Before beginning this warmup, consider how you will manage the discussion on the next slide where students are sorting terms into “words” or “not words”. Consider having two sheets of poster paper that you can write on as the class sorts, or consider making a table on a whiteboard and writing the results there. You could also consider presenting these slides in “edit” mode so you can move the text boxes around on the screen, but make sure you are able to reset the choices between class periods if you teach this lesson to multiple classes in the same day.\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      \\t\\t<br />Teaching Tip: Classroom Prep\\n\\t\\t<br />Before beginning this warmup, consider how you will manage the discussion on the next slide where students are sorting terms into “words” or “not words”. Consider having two sheets of poster paper that you can write on as the class sorts, or consider making a table on a whiteboard and writing the results there. You could also consider presenting these slides in “edit” mode so you can move the text boxes around on the screen, but make sure you are able to reset the choices between class periods if you teach this lesson to multiple classes in the same day.\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": 4,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 4,\r\n        \"image\": \"https://images.code.org/6cf73086ee21f7ec30ad34f90dd5bd57-image-1712464929842.png\",\r\n        \"content\": \"<i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> Have students discuss in groups before sharing out as a full class. Instead of going line-by-line through these words, ask students which decisions they are “most confident” about and sharing their classification for those words first. Using this strategy, students will likely sort “1) banana” and “6) shirt” as words, and “2) aka7sj23ksw” and “7) @&!*@^#” as not words. The remaining words are deliberately chosen to motivate certain discussions and create moments of cognitive dissonance and curiosity, hopefully allowing students to lead the discussion by asking questions or respectfully challenging ideas.\"\r\n      }\r\n    ],\r\n    \"table\": \"<table>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/6cf73086ee21f7ec30ad34f90dd5bd57-image-1712464929842.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> Have students discuss in groups before sharing out as a full class. Instead of going line-by-line through these words, ask students which decisions they are “most confident” about and sharing their classification for those words first. Using this strategy, students will likely sort “1) banana” and “6) shirt” as words, and “2) aka7sj23ksw” and “7) @&!*@^#” as not words. The remaining words are deliberately chosen to motivate certain discussions and create moments of cognitive dissonance and curiosity, hopefully allowing students to lead the discussion by asking questions or respectfully challenging ideas.\\n    </td>\\n  </tr>\\n\\n</table>\",\r\n    \"isTable\": true\r\n  },\r\n  {\r\n    \"group\": \"x\",\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": \"x\",\r\n        \"image\": \"\",\r\n        \"content\": \"Let students know they will likely change their minds as the discussion continues and that’s okay, and allowing students to state their confidence level for their initial thoughts can make them more comfortable speaking up since it feels less “high-stakes”. Be prepared to address the following situations in this discussion:\\n\\t\\t<br />\\n\\t\\t<br />3) cherimoya is a fruit common to South America, but may not be a common fruit your students have heard of. It’s possible many students may say “this isn’t a word”, but one or two students may speak up because they’re familiar with this fruit. Be sure to elevate those voices and highlight how our own knowledge is sometimes limited by lack of exposure to different words or phrases. Or, if no one raises this point, be sure to point this out to students explicitly such as showing them the Wikipedia page. In either case, make sure cherimoya is classified as a “word” before leaving the discussion\\n\\t\\t<br />\\n\\t\\t<br />8) ullaakkut and 10) yá'át'ééh are both words in other languages - ullaakkut means hello in Inuktitut, a language spoken by Inuit peoples in Canada and Greenland; and yá'át'ééh means “hello” in the Navajo / Diné language. Similar to above, students may initially classify these as not words because they are unfamiliar with them, but it is important to surface the meaning and use of these words to students either with a quick google search or elevating the voice of a student in class who is already familiar with these words. As a result, make sure these terms don’t end up in the “Not Words” category by the end of the discussion.\\n\\t\\t<br />\\n\\t\\t<br />4) wierd is a misspelling of either the word “weird” or the word “wired”. Students may initially say that this is “not a word”, but another student or yourself should challenge them by pointing out that if this is typed into a device with autocorrect, it will automatically correct it to one of these other words. Even in this slide deck, the word has a red squiggly underline representing that the computer recognizes it as something, even if it’s not a correctly spelled word. This may inspire the class to create a new category to represent this term - it’s not a correctly spelled word, but it’s also not a made-up word, so maybe there’s a new category for “misspelled words” or “important terms that aren’t words”. Let students guide how they want to handle this situation, even if they decide not to make a new category and it remains in “not word”.\\n\\t\\t<br />\\n\\t\\t<br />At some point, students who are more familiar with the Scrabble game may try to invoke the “rules of Scrabble” which restrict words in other languages, proper nouns, or abbreviations. From this perspective, words (8) and (10) above would be restricted, as would 5) Reykjavik (the capital of Iceland) and 9) ATM (since it is an abbreviation for Automatic Teller Machine). If this comes up, use this as an opportunity to question the effect that arbitrary rules have on what we consider valid language, since these are all definitely words that are used in society even if not officially allowed in Scrabble. You could consider creating new categories to represent these phrases, such as “Still words but not allowed in Scrabble” or “Part of language, but not allowed in Scrabble”. Or, the class could decide these belong in the Words category, regardless of what Scrabble thinks, and that’s the end of the story.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Ultimately, this is an exercise to surface that the way we identify words versus nonsense - much like Calvin and Hobbes in the comic panel - can be contextual to our lived experiences and influences what we consider important information versus random noise that can be ignored. It’s okay if the discussion ends without closure, so long as students have wrestled with how what they initially considered “words” may have been expanded as they were exposed to new contexts in the discussion. However, be very intentional that the discussion ends with very few items in the “Not Words” category, especially making sure ullaakkut and yá'át'ééh are not in this category and are instead classified as either a Word or a new category the class has created.\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      Let students know they will likely change their minds as the discussion continues and that’s okay, and allowing students to state their confidence level for their initial thoughts can make them more comfortable speaking up since it feels less “high-stakes”. Be prepared to address the following situations in this discussion:\\n\\t\\t<br />\\n\\t\\t<br />3) cherimoya is a fruit common to South America, but may not be a common fruit your students have heard of. It’s possible many students may say “this isn’t a word”, but one or two students may speak up because they’re familiar with this fruit. Be sure to elevate those voices and highlight how our own knowledge is sometimes limited by lack of exposure to different words or phrases. Or, if no one raises this point, be sure to point this out to students explicitly such as showing them the Wikipedia page. In either case, make sure cherimoya is classified as a “word” before leaving the discussion\\n\\t\\t<br />\\n\\t\\t<br />8) ullaakkut and 10) yá'át'ééh are both words in other languages - ullaakkut means hello in Inuktitut, a language spoken by Inuit peoples in Canada and Greenland; and yá'át'ééh means “hello” in the Navajo / Diné language. Similar to above, students may initially classify these as not words because they are unfamiliar with them, but it is important to surface the meaning and use of these words to students either with a quick google search or elevating the voice of a student in class who is already familiar with these words. As a result, make sure these terms don’t end up in the “Not Words” category by the end of the discussion.\\n\\t\\t<br />\\n\\t\\t<br />4) wierd is a misspelling of either the word “weird” or the word “wired”. Students may initially say that this is “not a word”, but another student or yourself should challenge them by pointing out that if this is typed into a device with autocorrect, it will automatically correct it to one of these other words. Even in this slide deck, the word has a red squiggly underline representing that the computer recognizes it as something, even if it’s not a correctly spelled word. This may inspire the class to create a new category to represent this term - it’s not a correctly spelled word, but it’s also not a made-up word, so maybe there’s a new category for “misspelled words” or “important terms that aren’t words”. Let students guide how they want to handle this situation, even if they decide not to make a new category and it remains in “not word”.\\n\\t\\t<br />\\n\\t\\t<br />At some point, students who are more familiar with the Scrabble game may try to invoke the “rules of Scrabble” which restrict words in other languages, proper nouns, or abbreviations. From this perspective, words (8) and (10) above would be restricted, as would 5) Reykjavik (the capital of Iceland) and 9) ATM (since it is an abbreviation for Automatic Teller Machine). If this comes up, use this as an opportunity to question the effect that arbitrary rules have on what we consider valid language, since these are all definitely words that are used in society even if not officially allowed in Scrabble. You could consider creating new categories to represent these phrases, such as “Still words but not allowed in Scrabble” or “Part of language, but not allowed in Scrabble”. Or, the class could decide these belong in the Words category, regardless of what Scrabble thinks, and that’s the end of the story.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Ultimately, this is an exercise to surface that the way we identify words versus nonsense - much like Calvin and Hobbes in the comic panel - can be contextual to our lived experiences and influences what we consider important information versus random noise that can be ignored. It’s okay if the discussion ends without closure, so long as students have wrestled with how what they initially considered “words” may have been expanded as they were exposed to new contexts in the discussion. However, be very intentional that the discussion ends with very few items in the “Not Words” category, especially making sure ullaakkut and yá'át'ééh are not in this category and are instead classified as either a Word or a new category the class has created.\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": \"x\",\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 5,\r\n        \"image\": \"https://images.code.org/6df1fca2db95ec5f1ab031e4e648d54f-image-1712464931609.png\",\r\n        \"content\": \"<i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> Just from this warm-up, we’ve already seen that it can be tricky trying to recognize “words” from non-words. For a large-language model, those words are the inputs it uses to start generating it’s response. Today, we’re going to explore how a computer is able to recognize words used in language. This is the first step in understanding how a large-language model words - by looking at the inputs it uses!\"\r\n      }\r\n    ],\r\n    \"table\": \"<table>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/6df1fca2db95ec5f1ab031e4e648d54f-image-1712464931609.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> Just from this warm-up, we’ve already seen that it can be tricky trying to recognize “words” from non-words. For a large-language model, those words are the inputs it uses to start generating it’s response. Today, we’re going to explore how a computer is able to recognize words used in language. This is the first step in understanding how a large-language model words - by looking at the inputs it uses!\\n    </td>\\n  </tr>\\n\\n</table>\",\r\n    \"isTable\": true\r\n  },\r\n  {\r\n    \"group\": 5,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 7,\r\n        \"image\": \"https://images.code.org/7f6cbdbc4873673915f3d5e770995cd6-image-1712464937278.png\",\r\n        \"content\": \"<i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> When you use a large-language model, you start by giving it a prompt. In this example, we’re asking it for a recipe for making chili.\"\r\n      },\r\n      {\r\n        \"position\": 8,\r\n        \"image\": \"https://images.code.org/c20c3e3909c53db543b35fedabd7013a-image-1712464939271.png\",\r\n        \"content\": \"<i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> As a first step, the model breaks apart this input into individual pieces.\\n\\t\\t<br />\\n\\t\\t<br /><img src=\\\"https://curriculum.code.org/media/uploads/animation.png\\\" /> Click the animation\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> Usually this is word by word\"\r\n      },\r\n      {\r\n        \"position\": 9,\r\n        \"image\": \"https://images.code.org/e8de05056fb8928b64e9175b9ed8c150-image-1712464935591.png\",\r\n        \"content\": \"<i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> But sometimes it’s even smaller, like when there is a root word or for punctuation. Technically, these are called tokens - they’re the smallest unit of data that a large-language model can represent.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> So then how does a large-language model learn how to recognize these words and tokens? And what words can it use when generating a response? Well - that’s exactly what we’re going to learn about today!\\n\\t\\t<br />\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/7f6cbdbc4873673915f3d5e770995cd6-image-1712464937278.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> When you use a large-language model, you start by giving it a prompt. In this example, we’re asking it for a recipe for making chili.\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/c20c3e3909c53db543b35fedabd7013a-image-1712464939271.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> As a first step, the model breaks apart this input into individual pieces.\\n\\t\\t<br />\\n\\t\\t<br /><img src=\\\"https://curriculum.code.org/media/uploads/animation.png\\\" /> Click the animation\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> Usually this is word by word\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/e8de05056fb8928b64e9175b9ed8c150-image-1712464935591.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> But sometimes it’s even smaller, like when there is a root word or for punctuation. Technically, these are called tokens - they’re the smallest unit of data that a large-language model can represent.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> So then how does a large-language model learn how to recognize these words and tokens? And what words can it use when generating a response? Well - that’s exactly what we’re going to learn about today!\\n\\t\\t<br />\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": true\r\n  },\r\n  {\r\n    \"group\": 6,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 9,\r\n        \"image\": \"\",\r\n        \"content\": \"**Teaching Tip: Viewing Tokens** - If your school district allows access, OpenAI has a website that lets you preview how it interprets words and converts them into tokens: https://platform.openai.com/tokenizer. This can be a helpful visualization of how words are broken apart and interpreted by large language models. Consider demonstrating this for the class and typing in example sentences. Most words will likely be interpreted as single words, but compound words like “decapod”, “anthology”, “pretense”, and “arachnophobia” are interpreted as two tokens instead of one.\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      \\t\\t<br />Teaching Tip: Viewing Tokens\\n\\t\\t<br />If your school district allows access, OpenAI has a website that lets you preview how it interprets words and converts them into tokens: https://platform.openai.com/tokenizer. This can be a helpful visualization of how words are broken apart and interpreted by large language models. Consider demonstrating this for the class and typing in example sentences. Most words will likely be interpreted as single words, but compound words like “decapod”, “anthology”, “pretense”, and “arachnophobia” are interpreted as two tokens instead of one.\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": 7,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 10,\r\n        \"image\": \"https://images.code.org/bb42bb2ce45ad379b3868be6f9cf3ec5-image-1712464941515.png\",\r\n        \"content\": \"<i class=\\\"fa fa-file-text-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Distribute:</strong> Pass out the Training Data Activity Guide\"\r\n      },\r\n      {\r\n        \"position\": 11,\r\n        \"image\": \"https://images.code.org/d816ba44392658948165813bc3d02d1c-image-1712464943187.png\",\r\n        \"content\": \"<i class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Do This:</strong> Read the overview of this document as a class. This text is also provided on the slide.\"\r\n      },\r\n      {\r\n        \"position\": 12,\r\n        \"image\": \"https://images.code.org/4b0a236f6c2b47ac385fd4150631a7ed-image-1712464944774.png\",\r\n        \"content\": \"<i class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Do This:</strong> Have students complete each of the tables individually, listing examples of data sources in each location that could be used to help a large-language model represent different words. This requires identifying objects in these locations with text - literally any object - and imagining the words a language model could learn if it scanned the object.\\n\\t\\t<br />\\n\\t\\t<br />Since the first example is “This Classroom”, you could do an example together as a class and point out any posters or books or anything with text. An easy example is the slide itself being projected, which would help a language model represent words like “Do”, “Complete”, Include”, etc. \\n\\t\\t<br />\\n\\t\\t<br />It’s not vital that students finish every aspect of this guide, since they will work in a group in the next section of this lesson. With that in mind, consider setting a timer to ensure students finish with enough time to move to the next part of the activity.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> <strong>Circulate:</strong> Monitor students as they complete this guide, noticing especially unique words or examples that can be useful to highlight in the next activity. If students are struggling, encourage them to visualize what it would look like if a computer sat in the middle of a space and scanned anything it saw - what words or symbols would it encounter?\\n\\t\\t<br />\\n\\t\\t<br />The next part of this activity requires making a poster - during this time, also be thinking about how you will distribute supplies to groups so they are ready to start right away with the next task.\"\r\n      },\r\n      {\r\n        \"position\": 13,\r\n        \"image\": \"https://images.code.org/3e4a4d4269757b7510dfbaf41764bdc1-image-1712464947265.png\",\r\n        \"content\": \"<i class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Do This:</strong> Read the text on the slide to the class. Have students form groups of 3-4 people with a poster paper and markers. Each person should write the words from their activity guide onto the posters. They do not have to write the source they got it from. Groups should also find a way to emphasize words that are common across group members, such as writing it large or with special emphasis.\\n\\t\\t<br />\\n\\t\\t<br />Set a short timer for this activity. When a group is finished, their poster paper essentially represents a language model trained from a variety of sources curated by each student. These can be referred to in later parts of the unit as our understanding of language models evolves.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> <strong>Circulate:</strong> Ensure all students are able to participate and add their words to the poster. Emphasize and celebrate situations where a unique word appears on a poster that other models in the classroom likely won’t have.\\n\\t\\t<br />\"\r\n      }\r\n    ],\r\n    \"table\": \"<table>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/bb42bb2ce45ad379b3868be6f9cf3ec5-image-1712464941515.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-file-text-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Distribute:</strong> Pass out the Training Data Activity Guide\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/d816ba44392658948165813bc3d02d1c-image-1712464943187.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Do This:</strong> Read the overview of this document as a class. This text is also provided on the slide.\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/4b0a236f6c2b47ac385fd4150631a7ed-image-1712464944774.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Do This:</strong> Have students complete each of the tables individually, listing examples of data sources in each location that could be used to help a large-language model represent different words. This requires identifying objects in these locations with text - literally any object - and imagining the words a language model could learn if it scanned the object.\\n\\t\\t<br />\\n\\t\\t<br />Since the first example is “This Classroom”, you could do an example together as a class and point out any posters or books or anything with text. An easy example is the slide itself being projected, which would help a language model represent words like “Do”, “Complete”, Include”, etc. \\n\\t\\t<br />\\n\\t\\t<br />It’s not vital that students finish every aspect of this guide, since they will work in a group in the next section of this lesson. With that in mind, consider setting a timer to ensure students finish with enough time to move to the next part of the activity.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> <strong>Circulate:</strong> Monitor students as they complete this guide, noticing especially unique words or examples that can be useful to highlight in the next activity. If students are struggling, encourage them to visualize what it would look like if a computer sat in the middle of a space and scanned anything it saw - what words or symbols would it encounter?\\n\\t\\t<br />\\n\\t\\t<br />The next part of this activity requires making a poster - during this time, also be thinking about how you will distribute supplies to groups so they are ready to start right away with the next task.\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/3e4a4d4269757b7510dfbaf41764bdc1-image-1712464947265.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Do This:</strong> Read the text on the slide to the class. Have students form groups of 3-4 people with a poster paper and markers. Each person should write the words from their activity guide onto the posters. They do not have to write the source they got it from. Groups should also find a way to emphasize words that are common across group members, such as writing it large or with special emphasis.\\n\\t\\t<br />\\n\\t\\t<br />Set a short timer for this activity. When a group is finished, their poster paper essentially represents a language model trained from a variety of sources curated by each student. These can be referred to in later parts of the unit as our understanding of language models evolves.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> <strong>Circulate:</strong> Ensure all students are able to participate and add their words to the poster. Emphasize and celebrate situations where a unique word appears on a poster that other models in the classroom likely won’t have.\\n\\t\\t<br />\\n    </td>\\n  </tr>\\n\\n</table>\",\r\n    \"isTable\": true\r\n  },\r\n  {\r\n    \"group\": 8,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 13,\r\n        \"image\": \"\",\r\n        \"content\": \"**Teaching Tip: What Do Models “Know” At This Point?** - The language being used in this lesson is very intentional, saying that models can “represent” words as opposed to “know” or “understand”. Students may pick up on this and ask what the models really “know” or “understand” at this point, or you may hear students saying the model “knows what this word means” which isn’t quite correct. At this stage, all we’re doing is building a “word bank” that a model can recognize and eventually reproduce. But the model doesn’t have any inherent understanding of the meaning of these words - this happens in later steps and later lessons. If we asked a model to respond to a prompt just with the training done today, it could generate any of the words students are putting on their posters, but the results would be random and nonsensical since it doesn’t have any tools to help it make decisions about which words are best used in which situations. Nevertheless, this is a necessary step in understanding how a language model works - a model can’t even begin to “understand” a word if it’s not even included in it’s training data.\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      \\t\\t<br />Teaching Tip: What Do Models “Know” At This Point?\\n\\t\\t<br />The language being used in this lesson is very intentional, saying that models can “represent” words as opposed to “know” or “understand”. Students may pick up on this and ask what the models really “know” or “understand” at this point, or you may hear students saying the model “knows what this word means” which isn’t quite correct. At this stage, all we’re doing is building a “word bank” that a model can recognize and eventually reproduce. But the model doesn’t have any inherent understanding of the meaning of these words - this happens in later steps and later lessons. If we asked a model to respond to a prompt just with the training done today, it could generate any of the words students are putting on their posters, but the results would be random and nonsensical since it doesn’t have any tools to help it make decisions about which words are best used in which situations. Nevertheless, this is a necessary step in understanding how a language model works - a model can’t even begin to “understand” a word if it’s not even included in it’s training data.\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": 9,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 14,\r\n        \"image\": \"https://images.code.org/0b8321bb72cc2a23530f27d347ce2449-image-1712464951088.png\",\r\n        \"content\": \"<i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> These are some great models we’re building - such a wide variety of words they’re able to represent just from the sources we have close to us. But let’s imagine we want to make sure we’re providing enough data so it can eventually be used for certain tasks.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Do This:</strong> In the following slides, a certain type of task will be presented. Students will discuss in groups what additional data sources would be necessary to make sure our model can represent the words needed for this task.\\n\\t\\t<br />\"\r\n      }\r\n    ],\r\n    \"table\": \"<table>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/0b8321bb72cc2a23530f27d347ce2449-image-1712464951088.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> These are some great models we’re building - such a wide variety of words they’re able to represent just from the sources we have close to us. But let’s imagine we want to make sure we’re providing enough data so it can eventually be used for certain tasks.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Do This:</strong> In the following slides, a certain type of task will be presented. Students will discuss in groups what additional data sources would be necessary to make sure our model can represent the words needed for this task.\\n\\t\\t<br />\\n    </td>\\n  </tr>\\n\\n</table>\",\r\n    \"isTable\": true\r\n  },\r\n  {\r\n    \"group\": 10,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 14,\r\n        \"image\": \"\",\r\n        \"content\": \"**Assessment Opportunity: Formative Assessment** - The following prompts can be used as a formative assessment to see how members of the class understand the relationship between data sources used as input and the types of words a language model can represent from that source. You can get a pulse-check on this understanding by listening to how students respond as a class, or having them discuss in groups first and listen in on the conversations, or have students use the blank space on the back of their activity guide to write down their answers before responding. If you notice students are struggling to answer these questions, consider doing one or two as a class to model how students should think about this relationship between training data and what a model can represent.\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      \\t\\t<br />Assessment Opportunity: Formative Assessment\\n\\t\\t<br />The following prompts can be used as a formative assessment to see how members of the class understand the relationship between data sources used as input and the types of words a language model can represent from that source. You can get a pulse-check on this understanding by listening to how students respond as a class, or having them discuss in groups first and listen in on the conversations, or have students use the blank space on the back of their activity guide to write down their answers before responding. If you notice students are struggling to answer these questions, consider doing one or two as a class to model how students should think about this relationship between training data and what a model can represent.\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": 11,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 15,\r\n        \"image\": \"https://images.code.org/f2b0a7ad37367ecff55641691631079b-image-1712464956079.png\",\r\n        \"content\": \"<i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> What data sources should we use to make sure our model can… Give a recipe and steps for making chili\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Possible answers can include:\\n\\t\\t<br />\\n\\t\\t<br />- Recipe books\\n\\t\\t<br />- Instruction manuals for kitchen appliances\\n\\t\\t<br />- History of chili cookoffs\\n\\t\\t<br />\\n\\t\\t<br />Optional: If any student posters seem to have any words relevant to this task, consider highlighting that poster as already having some relevant training data to this task.\"\r\n      },\r\n      {\r\n        \"position\": 16,\r\n        \"image\": \"https://images.code.org/388ae08386432f093b2ba01a48e3254f-image-1712464957741.png\",\r\n        \"content\": \"<i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> What data sources should we use to make sure our model can… Recommend places to hike in the southwest\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Possible answers can include:\\n\\t\\t<br />\\n\\t\\t<br />- Travel books\\n\\t\\t<br />- Maps of Arizona\\n\\t\\t<br />- Hike Reviews\\n\\t\\t<br />\\n\\t\\t<br />Optional: If any student posters seem to have any words relevant to this task, consider highlighting that poster as already having some relevant training data to this task.\"\r\n      },\r\n      {\r\n        \"position\": 17,\r\n        \"image\": \"https://images.code.org/d9c05f8aff9324460e9377ece2ece662-image-1712464959369.png\",\r\n        \"content\": \"<i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> What data sources should we use to make sure our model can… Help with math homework\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Possible answers can include:\\n\\t\\t<br />\\n\\t\\t<br />- Math textbooks\\n\\t\\t<br />- Multiplication tables\\n\\t\\t<br />- How to be a good tutor books\\n\\t\\t<br />\\n\\t\\t<br />Optional: If any student posters seem to have any words relevant to this task, consider highlighting that poster as already having some relevant training data to this task.\"\r\n      },\r\n      {\r\n        \"position\": 18,\r\n        \"image\": \"https://images.code.org/16d55000ec06d9f078bd58552bbfb627-image-1712464961146.png\",\r\n        \"content\": \"<i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> What data sources should we use to make sure our model can… Give relationship advice\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Possible answers can include:\\n\\t\\t<br />\\n\\t\\t<br />- Teen magazines (teen vogue / cosmo)\\n\\t\\t<br />- Self-help books\\n\\t\\t<br />- Fashion magazines\\n\\t\\t<br />\\n\\t\\t<br />Optional: If any student posters seem to have any words relevant to this task, consider highlighting that poster as already having some relevant training data to this task.\"\r\n      },\r\n      {\r\n        \"position\": 19,\r\n        \"image\": \"https://images.code.org/8e26f0fc7c70d1d57d74caf826ecd8f3-image-1712464962839.png\",\r\n        \"content\": \"<i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> Even with all of this extra information and all of the data we’ve sourced so far, there are still limits to what our models can do… If we wanted our models to know the largest number of words possible, what do you think is a good data source to use?\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> This is intended to be a quick question with a single right answer: The internet. If students give answers other than this, continue to prompt them with “Yah, but what’s even bigger than that…” and work towards getting students to consider the internet as a large data source. If the conversation reaches a lull, just tell the class “The Internet”.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> The models we’ve started to make today are a great start and represent a good starting collection of words, but can’t possibly encompass all of the data we’d need to represent the entire world and all of its complexity. To solve this, most modern large language models are trained on huge collections of information usually from the internet, such as the entirety of wikipedia. By using such large quantities of data, large-language models are able to build up huge libraries of words they recognize and represent natural language.\\n\\t\\t<br />\"\r\n      }\r\n    ],\r\n    \"table\": \"<table>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/f2b0a7ad37367ecff55641691631079b-image-1712464956079.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> What data sources should we use to make sure our model can… Give a recipe and steps for making chili\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Possible answers can include:\\n\\t\\t<br />\\n\\t\\t<br />- Recipe books\\n\\t\\t<br />- Instruction manuals for kitchen appliances\\n\\t\\t<br />- History of chili cookoffs\\n\\t\\t<br />\\n\\t\\t<br />Optional: If any student posters seem to have any words relevant to this task, consider highlighting that poster as already having some relevant training data to this task.\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/388ae08386432f093b2ba01a48e3254f-image-1712464957741.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> What data sources should we use to make sure our model can… Recommend places to hike in the southwest\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Possible answers can include:\\n\\t\\t<br />\\n\\t\\t<br />- Travel books\\n\\t\\t<br />- Maps of Arizona\\n\\t\\t<br />- Hike Reviews\\n\\t\\t<br />\\n\\t\\t<br />Optional: If any student posters seem to have any words relevant to this task, consider highlighting that poster as already having some relevant training data to this task.\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/d9c05f8aff9324460e9377ece2ece662-image-1712464959369.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> What data sources should we use to make sure our model can… Help with math homework\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Possible answers can include:\\n\\t\\t<br />\\n\\t\\t<br />- Math textbooks\\n\\t\\t<br />- Multiplication tables\\n\\t\\t<br />- How to be a good tutor books\\n\\t\\t<br />\\n\\t\\t<br />Optional: If any student posters seem to have any words relevant to this task, consider highlighting that poster as already having some relevant training data to this task.\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/16d55000ec06d9f078bd58552bbfb627-image-1712464961146.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> What data sources should we use to make sure our model can… Give relationship advice\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> Possible answers can include:\\n\\t\\t<br />\\n\\t\\t<br />- Teen magazines (teen vogue / cosmo)\\n\\t\\t<br />- Self-help books\\n\\t\\t<br />- Fashion magazines\\n\\t\\t<br />\\n\\t\\t<br />Optional: If any student posters seem to have any words relevant to this task, consider highlighting that poster as already having some relevant training data to this task.\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/8e26f0fc7c70d1d57d74caf826ecd8f3-image-1712464962839.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> Even with all of this extra information and all of the data we’ve sourced so far, there are still limits to what our models can do… If we wanted our models to know the largest number of words possible, what do you think is a good data source to use?\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-lightbulb-o\\\" aria-hidden=\\\"true\\\"></i> <strong>Discussion Goal:</strong> This is intended to be a quick question with a single right answer: The internet. If students give answers other than this, continue to prompt them with “Yah, but what’s even bigger than that…” and work towards getting students to consider the internet as a large data source. If the conversation reaches a lull, just tell the class “The Internet”.\\n\\t\\t<br />\\n\\t\\t<br /><i class=\\\"fa fa-microphone\\\" aria-hidden=\\\"true\\\"></i> <strong>Say:</strong> The models we’ve started to make today are a great start and represent a good starting collection of words, but can’t possibly encompass all of the data we’d need to represent the entire world and all of its complexity. To solve this, most modern large language models are trained on huge collections of information usually from the internet, such as the entirety of wikipedia. By using such large quantities of data, large-language models are able to build up huge libraries of words they recognize and represent natural language.\\n\\t\\t<br />\\n    </td>\\n  </tr>\\n\\n</table>\",\r\n    \"isTable\": true\r\n  },\r\n  {\r\n    \"group\": 12,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 19,\r\n        \"image\": \"\",\r\n        \"content\": \"**Teaching Tip: Looking Inside the Box** - The article “Inside the secret list of websites that make AI like ChatGPT sound smart” from the Washington Post has a detailed list of how the internet and various websites have been used to train current large-language models. We don’t recommend using this article for classroom use as aspects may not be appropriate, but the interactive web version of the article (link here) includes an interactive component where you can type in the name of a website and see if it’s been used to train large language models (if the website is behind a paywall, consider investigating if your local library allows limited free access). This can be a useful illustration of just how much data was used to train large-language models.\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      \\t\\t<br />Teaching Tip: Looking Inside the Box\\n\\t\\t<br />The article “Inside the secret list of websites that make AI like ChatGPT sound smart” from the Washington Post has a detailed list of how the internet and various websites have been used to train current large-language models. We don’t recommend using this article for classroom use as aspects may not be appropriate, but the interactive web version of the article (link here) includes an interactive component where you can type in the name of a website and see if it’s been used to train large language models (if the website is behind a paywall, consider investigating if your local library allows limited free access). This can be a useful illustration of just how much data was used to train large-language models.\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": 13,\r\n    \"slidesArray\": [],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": 14,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 21,\r\n        \"image\": \"https://images.code.org/8032d3f7a6e936189b38d6284fe97b50-image-1712464966242.png\",\r\n        \"content\": \"<i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> We’ve been exploring the first aspect of how a language model works - how it processes words as input. In your graphic organizer, update the Input section with an explanation of how a model learns to recognize language. Leave some blank space to revise this in future classes.\"\r\n      },\r\n      {\r\n        \"position\": 22,\r\n        \"image\": \"https://images.code.org/76871010fc45474cd4b292897aab536c-image-1712464968390.png\",\r\n        \"content\": \"\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/8032d3f7a6e936189b38d6284fe97b50-image-1712464966242.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      <i class=\\\"fa fa-comments\\\" aria-hidden=\\\"true\\\"></i> <strong>Discuss:</strong> We’ve been exploring the first aspect of how a language model works - how it processes words as input. In your graphic organizer, update the Input section with an explanation of how a model learns to recognize language. Leave some blank space to revise this in future classes.\\n    </td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"https://images.code.org/76871010fc45474cd4b292897aab536c-image-1712464968390.png\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      \\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": true\r\n  },\r\n  {\r\n    \"group\": 15,\r\n    \"slidesArray\": [\r\n      {\r\n        \"position\": 23,\r\n        \"image\": \"\",\r\n        \"content\": \"\\t\\t<br />Teaching Tip: Lost Languages\\n\\t\\t<br />There is an opportunity to connect this back to the warm-up, where two words in Native and Indigenous languages may not have been immediately recognized by the class. The same is true for large-language models, where entire languages or phrases may be left out of digital representation unless we choose to include them as part of the training material. Consider highlighting the work of Michael Running Wolf if you or your students are interested in learning more about someone working to solve these problems.\"\r\n      }\r\n    ],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n  <tr>\\n    <td style=\\\"width: 25%\\\"><img src=\\\"\\\"></td>\\n    <td style=\\\"width: 75%\\\">\\n      \\t\\t<br />Teaching Tip: Lost Languages\\n\\t\\t<br />There is an opportunity to connect this back to the warm-up, where two words in Native and Indigenous languages may not have been immediately recognized by the class. The same is true for large-language models, where entire languages or phrases may be left out of digital representation unless we choose to include them as part of the training material. Consider highlighting the work of Michael Running Wolf if you or your students are interested in learning more about someone working to solve these problems.\\n    </td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": false\r\n  },\r\n  {\r\n    \"group\": 16,\r\n    \"slidesArray\": [],\r\n    \"table\": \"\\n<table>\\n  <tr>\\n    <td style=\\\"width: 25%\\\">Slide</td>\\n    <td style=\\\"width: 75%\\\">Lesson Guide</td>\\n  </tr>\\n\\n</table>    \\n    \",\r\n    \"isTable\": true\r\n  }\r\n]\r\n            ",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"></div></div>",
    "preload_asset_list": null
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-04-07T04:41:17.212+00:00\",\"changed\":[\"cloned from \\\"gen-ai-images-bias\\\"\"],\"cloned_from\":\"gen-ai-images-bias\"},{\"changed_at\":\"2024-04-07 04:53:59 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"start_blocks\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2024-04-07 04:56:38 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>