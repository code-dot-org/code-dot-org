<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2017-10-09T13:18:30.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "moveForward": {
        "params": [
          ""
        ],
        "paletteParams": [
          ""
        ]
      },
      "turnLeft": {
        "paramButtons": {
          "maxArgs": 0
        },
        "params": [
          ""
        ],
        "paletteParams": [
          ""
        ]
      },
      "comment_Goals_1": {
        "goal": "Move turtle"
      },
      "comment_Goals_2": {
        "goal": "Orient turtle"
      }
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "slider_speed": "0.1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"goals_palette_show\",\r\n  \"callout_text\": \"Here is a list of subgoals\",\r\n  \"element_id\": \"#droplet-palette-group-header-goals\",\r\n  \"on\": \"goals_palette\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"Goals\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left center\",\r\n    \"at\": \"right center\",\r\n    \"adjust\": {\r\n     \"x\": 1,\r\n     \"y\": 1\r\n    }\r\n   }\r\n  }\r\n },\r\n {\r\n  \"localization_key\": \"goals_workspace\",\r\n  \"callout_text\": \"Example of code with subgoals in it\",\r\n  \"element_id\": \"#workspace-header\",\r\n  \"on\": \"show_code\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"right center\",\r\n    \"at\": \"top left\",\r\n    \"adjust\": {\r\n     \"x\": 50,\r\n     \"y\": 50\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "show_turtle_before_run": "true",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "blocks",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "true",
    "long_instructions": "# Introducing Subgoals\r\nWriting code is fun, but as you write longer programs that solve more complex problems it's useful to think at a higher level about the **series of subgoals** that build toward the solution.\r\n\r\nIn App Lab we have provided special blocks called [`Goals`](#triggercallout=goals_palette) to help you think about the **subgoals** of the problems you're solving. ([Show me](#triggercallout=goals_palette))\r\n\r\nThese subgoal blocks are known as \"comments\" which programmers use to make notes to themselves or other people who might view the code. You can drag these blocks into your code to help label things and stay organized, but they won't do anything when you run the program.  Try it out.\r\n\r\n# Do This:\r\n\r\n* Don't add any code, just click `Run` and notice the following:\r\n* In the workspace we've added the subgoals `//Move turtle` and `//Orient turtle` a few places in the code. ([Show me](#triggercallout=show_code)) \r\n* Underneath each subgoal, we've added the blocks to complete the subgoal.\r\n* The point is to simply notice that the subgoals don't change the drawing or what the turtle does.\r\n* The turtle is still only controlled by the blue turtle command blocks\r\n\r\nAfter running the program, click `Finish` to move on to try it yourself.\r\n\r\n\r\n<!--\r\n\r\nThis is how we'll be using App Lab throughout this unit. You'll get several puzzles to solve by dragging blocks from the toolbox to the workspace. Sometimes the workspace will tell you the subgoals of the puzzle, and sometimes you'll have to identify the subgoals yourself.\r\n\r\nThe first step of every puzzle will be to put the subgoals of the problem in the workspace (if they aren't already there). Then you'll put the blocks that solve the subgoals underneath.\r\n\r\nIn the workspace below, we've added two subgoals, Move turtle and Orient turtle. Underneath each subgoal, we've added the blocks to complete the subgoal.\r\n\r\nThe subgoals are described in comment blocks. This means that the subgoal comment will be visible in your code, but they won't do anything when you run the code. Comments are purely to make notes to yourself or other people who might view the code.\r\n\r\nDo This:\r\n\r\nPress the Run button to `run` the code. Notice that the subgoals don't show up in the drawing. Only the blocks will make the turtle do something.\r\n\r\n-->",
    "examples_required": "false",
    "never_autoplay_video": "true",
    "submittable": "false",
    "hide_view_data_button": "true",
    "droplet_tooltips_disabled": "true",
    "debugger_disabled": "true",
    "lock_zero_param_functions": "false",
    "execute_palette_apis_only": "true",
    "fail_on_lint_errors": "false",
    "log_conditions": [
      {
        "entries": [
          "[forTest]"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "Hey! You're using a programming construct - loops - we haven't (officially) learned about yet :).  Don't worry, your knowledge will come in handy later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() and turnLeft() without any loops."
      },
      {
        "entries": [
          "turnLeft:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have discovered that the turnLeft() function can accept the number of degrees to turn!  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() - which moves 25 pixels forward - and turnLeft() - which turns left 90 degrees every time."
      },
      {
        "entries": [
          "moveForward:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have discovered that the moveForward() function can accept the number of pixels to move forward!  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() - which moves 25 pixels forward - and turnLeft() - which turns left 90 degrees every time."
      },
      {
        "entries": [
          "turnRight"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have found the turnRight function.  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() and turnLeft()."
      },
      {
        "entries": [
          "turnRight:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have found the turnRight function.  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() and turnLeft()."
      }
    ],
    "instructions_important": "false",
    "makerlab_enabled": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "teacher_markdown": "Subgoals are just another way of breaking the problem solution into smaller pieces. Subgoals should be generic and reusable for almost all types of problems.\r\n\r\nEncourage students to solve the problem using subgoals first and then drag in the appropriate block to accomplish the subgoal.",
    "display_name": "Introducing Subgoals",
    "disable_procedure_autopopulate": "false",
    "start_blocks": "//Move turtle\r\nmoveForward();\r\n//Orient turtle\r\nturnLeft();\r\n//Move turtle\r\nmoveForward();\r\n//Orient turtle\r\nturnLeft();",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-05-31 16:30:33 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-05-31 16:31:58 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-06-09 21:39:48 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"never_autoplay_video\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-10-09 13:26:20 +0000\",\"changed\":[\"code_functions\",\"instructions\",\"markdown_instructions\",\"encrypted_examples\",\"video_key\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-09 13:35:04 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-09 13:40:52 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"teacher_markdown\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-09 13:44:51 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-09 20:39:09 +0000\",\"changed\":[\"code_functions\",\"text_mode_at_start\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-09 20:40:02 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-19 17:31:36 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 17:41:03 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 17:41:51 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 17:47:44 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 17:48:29 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 17:50:10 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 17:52:09 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 17:53:35 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 17:59:13 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 18:00:12 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 18:01:09 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 19:37:01 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 19:38:36 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 19:40:03 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"log_conditions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>