<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2020-04-19T14:15:54.000Z",
  "level_num": "custom",
  "user_id": 832,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "on": null,
      "off": null,
      "toggle": null,
      "blink": null,
      "pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "mathPow": null
    },
    "embed": "false",
    "instructions_important": "false",
    "long_instructions": "**Challenge:** Create an app displaying data and helpful information for your local area. See [here](https://studio.code.org/projects/applab/U9JROAvweDWRp_EpkDlGqxEuJGMX31e33xM4BFlWoiA) for an example.\r\nStarter code is provided to load current data into your app. ",
    "mini_rubric": "false",
    "submittable": "false",
    "start_blocks": "var USData = []; // an array that stores the US Data from the imported spreadsheet\r\nvar WorldData = [];  // an array that stores the World Data from the imported spreadsheet\r\n\r\nvar usDataLoaded = false; // when true, the US Data has loaded and is ready to be charted\r\nvar worldDataLoaded = false; // when true, the World Data has loaded and is ready to be charted\r\n\r\n// loads the US Data\r\nstartWebRequest(\"https://spreadsheets.google.com/feeds/list/11-tCfxsT-NWbH4IgMAY9WP_7ssG48eBH1onv4H9KAcE/1/public/values?alt=json\", function(status, type, content) {\r\n  // data from: https://docs.google.com/spreadsheets/d/1MeiaPrjPoQY05IO6PlxihiqAoEmzcl8ZJuPIGEU1WFw\r\n  if (status == 200) {\r\n    var jsonContent = JSON.parse(content);\r\n    for(var i = 0; i< jsonContent.feed.entry.length; i++){\r\n      USData.push( { date: jsonContent.feed.entry[i].gsx$date.$t,\r\n                     state: jsonContent.feed.entry[i].gsx$state.$t,   \r\n                     confirmed: Number(jsonContent.feed.entry[i].gsx$confirmed.$t),   \r\n                     deaths: Number(jsonContent.feed.entry[i].gsx$deaths.$t),   \r\n                  });\r\n    } \r\n    \r\n    \r\n    usDataLoaded = true;\r\n    checkFlags();\r\n  \r\n  }\r\n});\r\n\r\n// loads the World Data\r\nstartWebRequest(\"https://spreadsheets.google.com/feeds/list/11-tCfxsT-NWbH4IgMAY9WP_7ssG48eBH1onv4H9KAcE/2/public/values?alt=json\", function(status, type, content) {\r\n  // data from: https://docs.google.com/spreadsheets/d/1MeiaPrjPoQY05IO6PlxihiqAoEmzcl8ZJuPIGEU1WFw\r\n  if (status == 200) {\r\n    var jsonContent = JSON.parse(content);\r\n    for(var i = 0; i< jsonContent.feed.entry.length; i++){\r\n      WorldData.push( { date: jsonContent.feed.entry[i].gsx$date.$t,\r\n                          country: jsonContent.feed.entry[i].gsx$country.$t,   \r\n                          confirmed: Number(jsonContent.feed.entry[i].gsx$confirmed.$t),   \r\n                          recovered: Number(jsonContent.feed.entry[i].gsx$recovered.$t),   \r\n                          deaths: Number(jsonContent.feed.entry[i].gsx$deaths.$t),   \r\n                        });\r\n    }\r\n    worldDataLoaded = true;\r\n    checkFlags();\r\n  }\r\n});\r\n\r\n// if the data for both the US and the World has finished loading the screen is switched to chartScreen\r\nfunction checkFlags(){\r\n  if(usDataLoaded == true && worldDataLoaded == true){\r\n    processUSData();\r\n    setScreen(\"chartScreen\");\r\n  }\r\n}\r\n//======================================================\r\n// IGNORE ANYTHING ABOVE THIS LINE\r\n// THE CODE ABOVE IS TO LOAD THE DATA INTO NICE ARRAYS\r\n// CUSTOMIZE CODE BELOW TO CHART WHAT YOU WANT TO SHOW\r\n//======================================================\r\n\r\n// This array is populated using the code above\r\nvar stateArray = [];\r\n\r\n// The US Data array is traversed. Any data related to the chosen state is put into stateArray which is visualized using a chart. \r\nfunction processUSData() {\r\n  for (var i=0; i<USData.length; i++) {\r\n    // REPLACE WITH YOUR STATE\r\n    if (USData[i].state == \"Maine\") {\r\n      appendItem(stateArray, {\r\n          date: USData[i].date, \r\n          confirmed: USData[i].confirmed, \r\n          deaths: USData[i].deaths\r\n      });\r\n    }\r\n  }\r\n  \r\n  // chart settings\r\n  var myOptions = {};\r\n  myOptions.title = \"YOUR STATE Covid-19 Cases & Deaths\";\r\n  myOptions.legend = {position: \"none\"};  \r\n  myOptions.colors = [\"green\", \"purple\"];\r\n  myOptions.hAxis = {title: ''};\r\n  drawChart(\"chart1\", \"line\", stateArray, myOptions);\r\n}\r\n",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" tabindex=\"1\" data-radium=\"true\" style=\"width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"loadingScreen\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 87px; height: 17px; position: absolute; left: 115px; top: 320px;\" id=\"label3\">Loading</label><img src=\"//levelbuilder-studio.code.org/media?u=https%3A%2F%2Fimages.code.org%2F76cedbe233a31ba25d3a46f8ea70e032-image-1587306364684.gif\" data-canonical-image-url=\"https://images.code.org/76cedbe233a31ba25d3a46f8ea70e032-image-1587306364684.gif\" data-object-fit=\"contain\" id=\"image1\" style=\"height: 100px; width: 100px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; position: absolute; left: 105px; top: 215px; margin: 0px;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 25px; padding: 2px 15px; width: 240px; height: 70px; position: absolute; left: 40px; top: 45px; text-align: center;\" id=\"label4\">Title</label></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"chartScreen\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255); display: none;\"><div class=\"chart\" id=\"chart1\" style=\"height: 145px; width: 265px; position: absolute; left: 20px; top: 50px; margin: 0px;\"></div></div></div>\r\n",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "parent_level_id": 23161,
    "display_name": "App Lab Intermediate Challenge: Local App",
    "bubble_choice_description": "Create an app displaying data and helpful information for your local area.",
    "thumbnail_url": "https://images.code.org/785b89714442061784f2852cbbc358a9-image-1587307353599.gif",
    "preload_asset_list": null,
    "encrypted_examples": [

    ]
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2020-04-05 22:32:50 +0000\",\"changed\":[\"notes\",\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-08 02:47:23 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-19 14:27:24 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"start_blocks\",\"start_html\",\"preload_asset_list\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-19 14:28:52 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-19 14:44:23 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-19 14:45:37 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-21 17:08:24 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-21 18:25:09 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-21 18:25:50 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2020-04-22 14:08:17 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"start_html\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>