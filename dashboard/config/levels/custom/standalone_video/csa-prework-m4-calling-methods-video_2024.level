<StandaloneVideo>
  <config><![CDATA[{
  "game_id": 54,
  "created_at": "2024-03-25T22:51:49.000Z",
  "level_num": "custom",
  "user_id": 63,
  "properties": {
    "video_key": "csa-pl-calling-methods",
    "instructions_important": "false",
    "skip_dialog": true,
    "skip_sound": true,
    "parent_level_id": 28813,
    "name_suffix": "_2024",
    "encrypted": "false",
    "long_instructions": "You have already written code that calls a method!\r\n\r\n## Example\r\nLet's look at some examples of calling methods.\r\n\r\n```\r\n1. public class Drawing {\r\n2. \t\tpublic static void main(String[] args){\r\n3.\t\t\tPainter sara = new Painter();\r\n4. \t\t\tsara.move();\r\n5. \t\t\tsara.takePaint();\r\n6.\t\t}\r\n7. }\r\n\r\n```\r\n\r\nThe code above calls methods on lines 4 and 5.\r\n\r\n## Vocabulary\r\nA **method** is a named set of instructions to perform a task.  In other programming languages you may have used functions or procedures - in Java we call these **methods**.\r\n\r\nClasses can contain methods that can be used or **called** on objects from the class.  You have used the `move()`, `paint()`, `turnLeft()`, and `takePaint()` methods so far from the `Painter` class. \r\n\r\n## Syntax\r\nTo call a method in Java, you need to use the name of the object, the dot operator, and the name of the method as shown below.  Assume `myPainter` is a `Painter` object that has already been created.\r\n\r\n![](https://images.code.org/c52bdccbd19fc0eaa7e5bb66d8e7ec32-image-1673567335123.png)\r\n\r\nNote that not every method has parameters.  You have used methods without parameters such as the `move()` method or the `takeLeft()` methods. \r\n\r\n## Watch to learn more\r\nAs you watch the video below, consider:\r\n\r\n* What other methods do you think a `Dog` class might have? \r\n* What other methods would have parameters?\r\n\r\n<hr>\r\n\r\n**Up next:** We will learn about instantiating an object."
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2024-03-25T22:51:49.641+00:00\",\"changed\":[\"cloned from \\\"csa-prework-m4-calling-methods-video-2023\\\"\"],\"cloned_from\":\"csa-prework-m4-calling-methods-video-2023\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
</StandaloneVideo>
