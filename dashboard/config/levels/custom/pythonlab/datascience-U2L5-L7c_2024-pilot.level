<Pythonlab>
  <config><![CDATA[{
  "game_id": 72,
  "created_at": "2024-09-15T22:14:24.000Z",
  "level_num": "custom",
  "user_id": 18602,
  "properties": {
    "encrypted": "false",
    "long_instructions": "# Stock and Roll\r\n\r\n::: details [**✅ Step 1**]\r\nLoad the data and print a summary using `info()` and `describe()`.\r\n:::\r\n\r\n::: details [**✅ Step 2**]\r\nConvert the **Value** attribute from *float64* to *int64*.\r\n:::\r\n\r\n::: details [**✅ Step 3**]\r\nConvert the **Date** attribute from an *object* to *datetime*.\r\n:::\r\n\r\n::: details [**✅ Step 5**]\r\nPrint a new summary using `info()` to verify your changes worked.\r\n:::\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "ai_tutor_available": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "predict_settings": {
      "isPredictLevel": false
    },
    "start_sources": {
      "files": {
        "0": {
          "id": "0",
          "name": "main.py",
          "language": "py",
          "contents": "import pandas as pd \nimport matplotlib.pyplot as plt \n\n# STEP 1\n\n# STEP 2\n\n# STEP 3\n\n# STEP 4\n\n# Visualized data as a line graph\nsurvey_data = survey_data.sort_values(by='Date')\nplt.plot(survey_data['Date'], survey_data['Value'], marker='D', linestyle='-', color='red')\nplt.title('1920s Stock Portfolio')\nplt.xlabel('Date')\nplt.ylabel('Value (in Dollars)')\nplt.show()",
          "folderId": "0",
          "active": true,
          "open": true
        },
        "1": {
          "id": "1",
          "name": "stock_data.csv",
          "language": "csv",
          "contents": "Date,My Stocks,Value\n2/6/1921,Zephyr Corp,505.6041993\n2/6/1921,Aether Dynamics,707.2633013\n2/6/1921,Nimbus Ventures,754.4069822\n2/15/1921,Zephyr Corp,581.4448292\n2/15/1921,Aether Dynamics,813.3527965\n2/15/1921,Nimbus Ventures,867.5680296\n6/15/1921,Zephyr Corp,668.6615536\n6/15/1921,Aether Dynamics,935.355716\n6/15/1921,Nimbus Ventures,997.703234\n2/15/1922,Zephyr Corp,768.9607866\n2/15/1922,Aether Dynamics,1075.659073\n2/15/1922,Nimbus Ventures,1147.358719\n3/19/1922,Zephyr Corp,884.3049046\n3/19/1922,Aether Dynamics,1237.007934\n3/19/1922,Nimbus Ventures,1319.462527\n6/28/1922,Zephyr Corp,1016.95064\n6/28/1922,Aether Dynamics,1422.559125\n6/28/1922,Nimbus Ventures,1517.381906\n9/24/1922,Zephyr Corp,1169.493236\n9/24/1922,Aether Dynamics,1635.942993\n9/24/1922,Nimbus Ventures,1744.989192\n12/25/1922,Zephyr Corp,1344.917222\n12/25/1922,Aether Dynamics,1881.334442\n12/25/1922,Nimbus Ventures,2006.737571\n2/2/1923,Zephyr Corp,1546.654805\n2/2/1923,Aether Dynamics,2163.534609\n2/2/1923,Nimbus Ventures,2307.748206\n4/10/1923,Zephyr Corp,1778.653026\n4/10/1923,Aether Dynamics,2488.0648\n4/10/1923,Nimbus Ventures,2653.910437\n4/23/1923,Zephyr Corp,2045.45098\n4/23/1923,Aether Dynamics,2861.27452\n4/23/1923,Nimbus Ventures,3051.997003\n5/30/1923,Zephyr Corp,2352.268627\n5/30/1923,Aether Dynamics,3290.465698\n5/30/1923,Nimbus Ventures,3509.796553\n12/3/1923,Zephyr Corp,2705.108921\n12/3/1923,Aether Dynamics,3784.035553\n12/3/1923,Nimbus Ventures,4036.266036\n12/21/1923,Zephyr Corp,3110.875259\n12/21/1923,Aether Dynamics,4351.640886\n12/21/1923,Nimbus Ventures,4641.705942\n12/22/1923,Zephyr Corp,3577.506548\n12/22/1923,Aether Dynamics,5004.387018\n12/22/1923,Nimbus Ventures,5337.961833\n2/13/1924,Zephyr Corp,4114.13253\n2/13/1924,Aether Dynamics,5755.045071\n2/13/1924,Nimbus Ventures,6138.656108\n6/28/1924,Zephyr Corp,4731.252409\n6/28/1924,Aether Dynamics,6618.301832\n6/28/1924,Nimbus Ventures,7059.454524\n11/9/1924,Zephyr Corp,5440.940271\n11/9/1924,Aether Dynamics,7611.047107\n11/9/1924,Nimbus Ventures,8118.372703\n12/29/1924,Zephyr Corp,6257.081311\n12/29/1924,Aether Dynamics,8752.704173\n12/29/1924,Nimbus Ventures,9336.128608\n12/31/1924,Zephyr Corp,7195.643508\n12/31/1924,Aether Dynamics,10065.6098\n12/31/1924,Nimbus Ventures,10736.5479\n2/5/1925,Zephyr Corp,8274.990034\n2/5/1925,Aether Dynamics,11575.45127\n2/5/1925,Nimbus Ventures,12347.03008\n2/19/1925,Zephyr Corp,9516.238539\n2/19/1925,Aether Dynamics,13311.76896\n2/19/1925,Nimbus Ventures,14199.0846\n10/27/1925,Zephyr Corp,10943.67432\n10/27/1925,Aether Dynamics,15308.5343\n10/27/1925,Nimbus Ventures,16328.94729\n3/12/1926,Zephyr Corp,12585.22547\n3/12/1926,Aether Dynamics,17604.81445\n3/12/1926,Nimbus Ventures,18778.28938\n7/6/1926,Zephyr Corp,14473.00929\n7/6/1926,Aether Dynamics,20245.53661\n7/6/1926,Nimbus Ventures,21595.03279\n7/19/1926,Zephyr Corp,16643.96068\n7/19/1926,Aether Dynamics,23282.36711\n7/19/1926,Nimbus Ventures,24834.2877\n12/10/1926,Zephyr Corp,19140.55478\n12/10/1926,Aether Dynamics,26774.72217\n12/10/1926,Nimbus Ventures,28559.43086\n3/14/1927,Zephyr Corp,22011.638\n3/14/1927,Aether Dynamics,30790.9305\n3/14/1927,Nimbus Ventures,32843.34549\n10/2/1927,Zephyr Corp,25313.3837\n10/2/1927,Aether Dynamics,35409.57007\n10/2/1927,Nimbus Ventures,37769.84731\n3/7/1928,Zephyr Corp,29110.39126\n3/7/1928,Aether Dynamics,40721.00558\n3/7/1928,Nimbus Ventures,43435.32441\n3/31/1928,Zephyr Corp,33476.94994\n3/31/1928,Aether Dynamics,46829.15642\n3/31/1928,Nimbus Ventures,49950.62307\n5/16/1928,Zephyr Corp,38498.49244\n5/16/1928,Aether Dynamics,53853.52989\n5/16/1928,Nimbus Ventures,57443.21653\n5/31/1928,Zephyr Corp,44273.2663\n5/31/1928,Aether Dynamics,61931.55937\n5/31/1928,Nimbus Ventures,66059.69901\n7/25/1928,Zephyr Corp,50914.25625\n7/25/1928,Aether Dynamics,71221.29327\n7/25/1928,Nimbus Ventures,75968.65386\n8/24/1928,Zephyr Corp,58551.39468\n8/24/1928,Aether Dynamics,81904.48726\n8/24/1928,Nimbus Ventures,87363.95194\n9/24/1928,Zephyr Corp,67334.10389\n9/24/1928,Aether Dynamics,94190.16035\n9/24/1928,Nimbus Ventures,100468.5447\n10/8/1928,Zephyr Corp,77434.21947\n10/8/1928,Aether Dynamics,108318.6844\n10/8/1928,Nimbus Ventures,115538.8264\n11/12/1928,Zephyr Corp,89049.35239\n11/12/1928,Aether Dynamics,124566.4871\n11/12/1928,Nimbus Ventures,132869.6504\n11/16/1928,Zephyr Corp,102406.7552\n11/16/1928,Aether Dynamics,143251.4601\n11/16/1928,Nimbus Ventures,152800.098\n12/4/1928,Zephyr Corp,117767.7685\n12/4/1928,Aether Dynamics,164739.1791\n12/4/1928,Nimbus Ventures,175720.1127\n12/18/1928,Zephyr Corp,135432.9338\n12/18/1928,Aether Dynamics,189450.056\n12/18/1928,Nimbus Ventures,202078.1296\n2/10/1929,Zephyr Corp,155747.8739\n2/10/1929,Aether Dynamics,217867.5644\n2/10/1929,Nimbus Ventures,232389.849\n5/20/1929,Zephyr Corp,179110.055\n5/20/1929,Aether Dynamics,250547.6991\n5/20/1929,Nimbus Ventures,267248.3263\n6/8/1929,Zephyr Corp,205976.5632\n6/8/1929,Aether Dynamics,288129.854\n6/8/1929,Nimbus Ventures,307335.5753\n6/14/1929,Zephyr Corp,236873.0477\n6/14/1929,Aether Dynamics,331349.332\n6/14/1929,Nimbus Ventures,353435.9116\n7/1/1929,Zephyr Corp,272404.0049\n7/1/1929,Aether Dynamics,381051.7318\n7/1/1929,Nimbus Ventures,406451.2983\n8/24/1929,Zephyr Corp,313264.6056\n8/24/1929,Aether Dynamics,438209.4916\n8/24/1929,Nimbus Ventures,467418.9931\n10/29/1929,Zephyr Corp,2.21004048\n10/29/1929,Aether Dynamics,1.336633067\n10/29/1929,Nimbus Ventures,2.764860973\n12/30/1929,Zephyr Corp,1.571820066\n12/30/1929,Aether Dynamics,0.682170467\n12/30/1929,Nimbus Ventures,2.929316771\n",
          "folderId": "0",
          "active": false,
          "open": true
        }
      },
      "folders": {
      },
      "openFiles": [
        "0",
        "1"
      ]
    },
    "display_name": "Stock and Roll",
    "teacher_markdown": "This level practices and assesses students' ability to convert data types using .astype() and to_datetime() as well as loading data and looking at info() about the data.",
    "bubble_choice_description": "Practice converting data types for several fictional stocks in 1920s America.",
    "thumbnail_url": "https://images.code.org/a5be432a6a74b3f912bf215fdffbacc9-stock.png",
    "validation_file": {
      "id": "2",
      "name": "test.py",
      "language": "py",
      "contents": "import unittest\nfrom io import StringIO\nimport sys\nimport ast\nimport pandas as pd\n\nclass TestValueDateModifications(unittest.TestCase):\n\n    def setUp(self):\n        # Setup to capture the print output if needed later\n        self.captured_output = StringIO()\n        sys.stdout = self.captured_output\n\n    def tearDown(self):\n        # Reset redirect and clear print capture\n        sys.stdout = sys.__stdout__\n\n    def test_step_1(self):\n        \"\"\"Test Step 1: Check that a DataFrame is loaded and 'info()' and 'describe()' is called\"\"\"\n        with open('main.py') as f:\n            script_content = f.read()\n\n        # Parse the script to check for 'info()' and 'describe()' being called using AST\n        tree = ast.parse(script_content)\n\n        # Traverse the AST to look for 'info()' and 'describe()' method calls on a DataFrame\n        info_called = False\n        describe_called = False\n        for node in ast.walk(tree):\n            if isinstance(node, ast.Call) and isinstance(node.func, ast.Attribute):\n                if node.func.attr == 'info':\n                  info_called = True\n                elif node.func.attr == 'describe':\n                  describe_called = True \n\n        # Assert that both info() and  describe() are called at least once\n        self.assertTrue(info_called, \"The code should call 'info()' on a DataFrame in Step 1.\")\n        self.assertTrue(describe_called, \"The code should call 'describe()' on a DataFrame in Step 1.\")\n        self.assertTrue(info_called and describe_called, \"The code should call both 'info()' and 'describe()' on a DataFrame in Step 1.\")\n\n    def test_step_2(self):\n        \"\"\"Test Step 2: Check that the 'Value' attribute is converted to 'int64'\"\"\"\n        with open('main.py') as f:\n            script_content = f.read()\n\n        # Execute the script to access the modified DataFrame\n        local_vars = {}\n        exec(script_content, local_vars)\n\n        # Search for any DataFrame in the global variables\n        df_detected = None\n        for var in local_vars.values():\n            if isinstance(var, pd.DataFrame):\n                df_detected = var\n                break\n\n        # Ensure a DataFrame is detected\n        self.assertIsNotNone(df_detected, \"A DataFrame should be loaded and modified in Step 2.\")\n\n        # Check if the 'Value' attribute has the correct type 'int64'\n        self.assertIn('Value', df_detected.columns, \"The DataFrame should contain a 'Value' column.\")\n        self.assertEqual(df_detected['Value'].dtype, 'int64', \"The 'Value' column should be converted to 'int64'.\")\n\n    def test_step_3(self):\n        \"\"\"Test Step 3: Check that the 'Date' attribute is converted to 'datetime64[ns]'\"\"\"\n        with open('main.py') as f:\n            script_content = f.read()\n\n        # Execute the script to access the modified DataFrame\n        local_vars = {}\n        exec(script_content, local_vars)\n\n        # Search for any DataFrame in the global variables\n        df_detected = None\n        for var in local_vars.values():\n            if isinstance(var, pd.DataFrame):\n                df_detected = var\n                break\n\n        # Ensure a DataFrame is detected\n        self.assertIsNotNone(df_detected, \"A DataFrame should be loaded and modified in Step 3.\")\n\n        # Check if the 'Date' attribute has the correct type 'datetime64[ns]'\n        self.assertIn('Date', df_detected.columns, \"The DataFrame should contain a 'Date' column.\")\n        self.assertEqual(df_detected['Date'].dtype, 'datetime64[ns]', \"The 'Date' column should be converted to 'datetime64[ns]'.\")\n\n    def test_step_4(self):\n        \"\"\"Test Step 4: Check that 'info()' is called again to verify the changes\"\"\"\n        with open('main.py') as f:\n            script_content = f.read()\n\n        # Parse the script to check for multiple 'info()' calls using AST\n        tree = ast.parse(script_content)\n\n        # Traverse the AST to count the number of 'info()' calls\n        info_count = 0\n        for node in ast.walk(tree):\n            if isinstance(node, ast.Call) and isinstance(node.func, ast.Attribute):\n                if node.func.attr == 'info':\n                    info_count += 1\n\n        # Assert that info() is called more than once (before and after changes)\n        self.assertGreaterEqual(info_count, 2, \"The code should call 'info()' at least twice to verify changes in Step 4.\")\n\nif __name__ == \"__main__\":\n    unittest.main()\n",
      "folderId": "0",
      "active": false,
      "open": false,
      "type": "validation"
    }
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2024-09-15T22:14:24.653+00:00\",\"changed\":[\"cloned from \\\"datascience-U2L5-L7b_2024-pilot\\\"\"],\"cloned_from\":\"datascience-U2L5-L7b_2024-pilot\"},{\"changed_at\":\"2024-09-15 22:16:24 +0000\",\"changed\":[\"long_instructions\",\"predict_settings\",\"display_name\",\"bubble_choice_description\",\"thumbnail_url\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-15 22:17:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 18:37:42 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 18:37:48 +0000\",\"changed\":[\"predict_settings\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 18:38:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 18:38:10 +0000\",\"changed\":[\"predict_settings\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 18:39:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 18:39:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 18:39:53 +0000\",\"changed\":[\"predict_settings\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 19:03:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 19:03:37 +0000\",\"changed\":[\"predict_settings\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 19:05:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-09-28 19:05:40 +0000\",\"changed\":[\"predict_settings\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2024-10-03 16:14:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18753,\"changed_by_email\":\"molly+levelbuilder@code.org\"}]"
}]]></config>
</Pythonlab>
