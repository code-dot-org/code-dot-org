"ka":
  data:
    script:
      name:
        20-hour:
          desc: K-8 შესავალი ინფორმატიკაში
          Unplug1: ეტაპი 1
          Maze: ეტაპი 2
          Unplug2: ეტაპი 3
          Unplug3: ეტაპი 4
          Artist: ეტაპი 5
          Unplug4: ეტაპი 6
          Artist2: ეტაპი 7
          Unplug5: ეტაპი 8
          Farmer: ეტაპი 9
          Unplug6: ეტაპი 10
          Artist3: ეტაპი 11
          Unplug7: ეტაპი 12
          Farmer2: ეტაპი 13
          Unplug8: ეტაპი 14
          Artist4: ეტაპი 15
          Unplug9: ეტაპი 16
          Farmer3: ეტაპი 17
          Unplug10: ეტაპი 18
          Artist5: ეტაპი 19
          Unplug11: ეტაპი 20
        Hour of Code:
          desc: კოდის ერთი საათი
          Maze: ეტაპი 1
        Edit Code:
          desc: კოდის რედაქტირება (ბეტა)
          MazeEC: ეტაპი 1
        2014 Levels:
          desc: Bounce თამაში (ბეტა)
          Bounce: ეტაპი 1
        Builder Levels:
          desc: მომხმარებლების მიერ შექმნილი თავსატეხები (საცდელი)
          Custom: ეტაპი 1
        Flappy Levels:
          desc: Flappy Bird
          Flappy: ეტაპი 1
        Jigsaw Levels:
          desc: ფაზლი (ბეტა)
          Jigsaw: ეტაპი 1
        Step Levels:
          desc: ლაბირინთი (ბეტა)
          MazeStep: ეტაპის ნაბიჯი
        edit-code:
          desc: კოდის რედაქტირება (ბეტა)
          MazeEC: ეტაპი 1
          Applab: ეტაპი 2
          ArtistEC: ეტაპი 3
          StudioEC: ეტაპი 4
        events:
          desc: Bounce თამაში (ბეტა)
          Bounce: ეტაპი 1
          Studio: ეტაპი 2
        builder:
          desc: მომხმარებლების მიერ შექმნილი თავსატეხები (საცდელი)
          Custom: ეტაპი 1
        flappy:
          desc: Flappy Bird
          Flappy: ეტაპი 1
        jigsaw:
          desc: ფაზლი (ბეტა)
          Jigsaw: ეტაპი 1
        step:
          desc: ლაბირინთი (ბეტა)
          MazeStep: ეტაპის ნაბიჯი
        wordsearch:
          desc: Spelling Bee (საცდელი)
          WordSearch: ეტაპი 1
    game:
      name:
        Unplug1: ინფორმატიკის შესავალი
        Maze: ლაბირინთი
        Multi: 'ვარიანტის არჩევა: სხვადასხვა'
        Unplug2: გამოთვლითი აზროვნება
        Unplug3: გრაფიკული პროგრამირება
        Artist: მხატვარი
        Unplug4: ალგორითმები
        Artist2: მხატვარი 2
        Unplug5: ფუნქციები
        Farmer: ფერმერი
        Unplug6: პირობები
        Artist3: მხატვარი 3
        Unplug7: სიმღერის დაწერა
        Farmer2: ფერმერი 2
        Unplug8: აბსტრაქცია
        Artist4: მხატვარი 4
        Unplug9: პროგრამირება ცვლაში
        Farmer3: ფერმერი 3
        Unplug10: ინტერნეტი
        Artist5: მხატვარი 5
        Unplug11: შედეგები
        MazeEC: ლაბირინთი
        Bounce: ხტუნვა
        Flappy: Flappy Bird
        Jigsaw: ფაზლი
        MazeStep: ლაბირინთი ნაბიჯ-ნაბიჯ
        Wordsearch: ძებნა სიტვის მიხედვით
        Webapp: აპლიკაციების ლაბორატორია
        ArtistEC: მხატვარი
        TextMatch: ტექსტების შედარება
        StudioEC: თამაშების ლაბორატორია
        Applab: აპლიკაციების ლაბორატორია
        NetSim: ინტერნეტ-სიმულატორი
    trophy:
      name:
        Bronze: ბრინჯაო
        Silver: ვერცხლი
        Gold: ოქრო
    concept:
      description:
        sequence: თანმიმდევრობა
        if: '"თუ" ბლოკი'
        if_else: '"თუ/სხვაგვარად" ბლოკი'
        loop_times: ბლოკი "გამეორება"
        loop_until: ბლოკი "გამეორება, მანამ"
        loop_while: '"სანამ" ბლოკი'
        loop_for: ბლოკი "დათვლა"
        function: ფუნქციები
        parameters: ფუნქციები პარამეტრებით
    level:
      instructions:
        maze_2_2: 'შეგიძლიათ დამეხმარაროთ ამ აუტანელი გოჭის დაჭერაში? დადგით ერთად
          რამდენიმე ბლოკი "მოძრაობა წინ" და დააჭირეთ "გაშვებას". '
        maze_2_1: ეს გოჭი ძალიან მიშლის ნერვებს. მაპოვნინეთ!
        maze_2_2_5: მონიშნე ტრაექტორია და მიმიყვანე გოჭამდე. უფრთხილდი ასაფეთქებელს!
        maze_2_3: მიმიყვანე მწვანე ურჩხულამდე! (უფრთხილდი ასაფეთქებელს)
        maze_2_4: დამშვიდდით და მაპოვნინეთ ეს ტუტუცი გოჭი. თორემ გავბრაზდები!
        maze_2_5: იცით, ამ გოჭამდე მისვლა მხოლოდ ორი ბლოკის გამოყენებითაც შემიძლია.
          აბა, თუ მიხვდებით, როგორ?
        maze_2_6: მიმიყვანეთ მწავანე ბოროტმოქმედამდე მხოლოდ სამი ბლოკის გამოყენებით.
        maze_2_7: დამეხმარეთ ამ გოჭის მოშორებაში ბლოკების უმცირესი რაოდენობის გამოყენებით.
          გამოიყენეთ ერთზე მეტი ბლოკი "გამეორება".
        maze_2_8: 'როცა ბლოკი ნაცრისფერია, მისი წაშლა შეუძლებელია. ამოხსენით ეს თავსატეხი
          "გამეორების" ბლოკის დახმარებით, რომელიც ყველაფერს 3-ჯერ იმეორებს. სცადეთ
          "გამეორების" ნაცრისფერ ბლოკში ამ სამი ბლოკის ჩასმა: მოძრაობა, მოძრაობა,
          მობრუნება.'
        maze_2_9: კარგი, ახლა სცადეთ ახალი ბლოკი "გაიმეორე, მანამ" - ის გაიმეორებს
          ქმედებას, სანამ ამ გამაღიზიანებელ გოჭამდე არ მივაღწევ.
        maze_2_10: მშვენიერია, ერთიც გავაკეთოთ. შეგიძლიათ ამის ამოხსნა მხოლოდ 4 ბლოკის
          გამოყენებით?
        maze_2_11: ძვირფასო ადამიანო. მე ზომბი. მე მშია. უნდა.. მივაღწიო.. მზესუმზირამდე.
          შეგიძლია მიმიყვანო იქ, მხოლოდ 5 ბლოკის გამოყენებით?
        maze_2_12: ესეც თითქმის ისეთვიეა. შეგიძლიათ ამის გაკეთება მხოლოდ 5 ბლოკით?
        maze_2_13: 'გამოიყენეთ ახალი "თუ" ბლოკი და დამეხმარეთ გადავწყვიტო, როდის შევტრიალდე.
          მინიშნება: მხოლოდ ერთით მეტი ბლოკი გჭირდებათ. ნახეთ, ჩვენ როგორ ვაკეთებთ
          და შემდეგ დამოუკიდებლადაც შეძლებთ.'
        maze_2_14: ესეც ჰგავს წინა თავსატეხს, მთავარია გახსოვდეთ, როგორ გამოიყენეთ
          ბლოკები "თუ" და "გამეორება" ერთად.
        maze_2_15: მე მინდა მზესუმზირა! გამოიყენეთ ბლოკი "თუ" და მიმიყვანეთ მზესუმზირამდე
          ბლოკების მინიმალური რაოდენობით.
        maze_2_16: გავაკეთოთ კიდევ ერთხელ - ეს დავალება თითქმის იგივეა, მაგრამ უნდა
          უფრთხილდეთ მკბენარებს!
        maze_2_17: ბლოკი "თუ/სხვაგვარად" ამოწმებს პირობას და შემდეგ ასრულებს ერთ ან
          მეორე ქმედებას. გამოიყენეთ ეს ახალი ბლოკი და მიმიყვანეთ მზესუმზირამდე.
        maze_2_18: კიდევ ერთი ამოცანა "თუ/სხვაგვარად" ბლოკის გამოყენებაზე. შეძლებთ
          პირველივე ცდაზე სწორად გააკეთოთ?
        maze_2_19: შეგიძლია, უფრო რთული ლაბირინთში მხოლოდ სამი ბლოკის დამატებით გამატარო?
          თუ სწორად გააკეთებ, მე შევძლებ გავიარო ნებისმიერი გზა, სიგრძის მიუხედავად.
        turtle_1_1: ჰეი, მე ვარ მხატვარი. კოდის გამოყენებით თითქმის ყველაფერი შეგიძლია
          დამახატინო. გამავლებინე ფუნჯი ნაცრისფერ ხაზებზე რამდენიმე ბლოკის გამოყენებით.
        turtle_1_2: 'ახლა დავხატოთ კვადრატი. მინიშნება: შენი საყვარელი ფერის გამოსაყენებლად,
          აირჩიე ის ახალ ბლოკში "ფერის არჩევა".'
        turtle_1_3: დახატე კვადრატი მხოლოდ 3 ბლოკის გამოყენებით.
        turtle_1_4: 'დახატე სამკუთხედი სხვადასხვა ფერის გვერდებით. ამისთვის გამოიყენე
          ბლოკი "შემთხვევითი ფერი", რომელიც ყოველ ჯერზე ახალ ფერს ირჩევს. მინიშნება:
          მოგიწევს შეარჩიო მობრუნების სიდიდე ბლოკისთვის "მობრუნება" (დააჭირე რიცხვს).'
        turtle_1_5: ახლა კი დახატე სამკუთხედი და მერე კვადრატი, ისე, რომ კონვერტი
          გამოგივიდეს.
        turtle_1_6: 'ხვდები, როგორ უნდა დახატო სამკუთხედი და კვადრატი? მინიშნება:
          ჯერ დახატე სამკუთხედი, შემდეგ კი გამოთვალე, როგორ უნდა მოატრიალო მხატვარი
          კვადრატის დასახატად.'
        turtle_1_7: ახლა ცოტა გავართულოთ - სცადე ამ მწვანე სათვალის დახატვა. კვადრატები
          ზომაში 100 პიქსელისაა და დაშორებულია ერთმანეთს 50 პიქსელით. არ დაგავიწყდეს
          - მწვანე!
        turtle_1_8: სცადე მიხვდე, რა მოხდება, თუ ამ კოდს გაუშვებ (ან დააჭირე ღილაკს
          "გაშვება" და ნახე). შემდეგ გაუშვი იმდენჯერ, რამდენიც საჭიროა ნახატის დასასრულებლად.
          ფერები ყოველ ჯერზე სხვადასხვა იქნება.
        turtle_1_9: შეგიძლია მიხვდე, რა რიცხვით უნდა შეცვალო კითხვის ნიშანი წრის დასახატად?
        turtle_1_10: 'გამოგივიდა! ახლა დახატე რაც გინდა. რამდენიმე სახალისო იდეა:
          ფიგურა, ფიფქი, სპირალი. ასევე სცადე ახალი ბლოკი "განის განსაზღვრა". გაერთე!'
        turtle_4_1: 'შეგიძლია დახატო სამკუთხედი (თითო გვერდი 100 პიქსელის ზომის) მხოლოდ
          სამი ბლოკით? მინიშნება: გამოიყენე ბლოკი "გამეორება".'
        turtle_4_2: ამ სამკუთხედების დასახატად სადმე შუა პროგრამაში დაამატეთ ბლოკი
          "90 გრადუსით შეტრიალება".
        turtle_4_3: აი, ესაა კოდი, რომლითაც ერთი სამკუთხედი დახატეთ. შეძლებთ, "გამეორება"
          და "მოტრიალება" ბლოკების გამოყენებით დახატოთ ყვავილი?
        turtle_4_4: 'აი, იგივე კოდი წინა თავსატეხიდან, მაგრამ ყოველი სამკუთხედის შემდეგ
          მოტრიალება მხოლოდ 36 გრადუსი არის. რამდენჯერ უნდა გამეორდეს მოტრიალება?
          (მინიშნება: წრე შეიკვრება 360 გრადუსიანი მოტრიალების შემდეგ)'
        turtle_4_5: 'აი, იგივე კოდი წინა თავსატეხიდან, მაგრამ მოტრიალება 36-ჯერ მეორდება.
          რამხელა უნდა იყოს თითო მოტრიალება? (მინიშნება: წრე შეიკვრება 360 გრადუსიანი
          მოტრიალების შემდეგ)'
        turtle_4_6: შეგიძლიათ დახატოთ კვადრატი გვერდით 20 პიქსელი მხოლოდ 3 ბლოკის
          გამოყენებით?
        turtle_4_7: 'აი, კოდი კვადრატის დასახატად წინა თავსატეხიდან. შეგიძლიათ მისი
          გამეორება 10-ჯერ ისე, რომ გამოვიდეს კიბე? მინიშნება: მხოლოდ ორი დამატებითი
          ბლოკი გჭირდებათ.'
        turtle_4_8: აი, წინა თავსატეხის ამოხსნა. შეგიძლიათ დაასრულოთ ნახატი მხოლოდ
          2 ბლოკის დამატებით?
        turtle_4_9: აი, წინა თავსატეხის ამონახსნი. რამდენი გრადუსით უნდა მოაბრუნოთ
          ნახატის დასასრულებლად? (ალბათ, რამდენიმე ცდა დაგჭირდებათ)
        turtle_4_10: აი, წინა თავსატეხის ამონახსნი. რამდენჯერ უნდა გაიმეოროთ ქმედება
          ნახატის დასასრულებლად?
        turtle_4_11: შეცვალეთ რიცხვები ბლოკებში "მოტრიალება" და "გამეორება" და შექმენით
          სხვადასხვა ნახატები. ან შეცვალეთ კოდის სხვა ნაწილებით და დახატეთ, რაც გინდა.
        maze_karel_1_1: ჰეი, მე ვარ ფერმერი. დათესვის დროა და თქვენი დახმარება მჭირდება
          მდელოს გასასწორებლად. გადამაადგილეთ ნაგვის გროვასთან და მომაშორებინეთ ის
          "მოშორების" ბლოკით.
        maze_karel_1_2: შემდეგ მიმიყვანეთ ორმოსთან და შემავსებინეთ ორი ნიჩბით. ამისთვის
          გამოიყენეთ ბლოკი "შევსება".
        maze_karel_1_3: გადამიყვანე მიწის გროვასთან და მითხარი, რამდენი ნიჩაბი მიწა
          მოვაშორო ბლოკების მინიმალური რაოდენობის გამოყენებით.
        maze_karel_1_4: 'შეგიძლია, ნაგვის ოთხივე გროვა მომაშორებინო? მინიშნება: თუ
          შეძლებ, გამოიყენე გამეორების ბლოკი.'
        maze_karel_1_5: 'შემავსებინე ყველა ეს ორმო მიწის ხუთი ნიჩბით. მინიშნება: "სანამ"
          ბლოკში შეგიძლია ჩასვა ბლოკი "გამეორება".'
        maze_karel_1_6: მოაშორე ნაგვის ყველა გროვა ბლოკების მინიმალური რაოდენობის
          გამოყენებით. ახალი ვარიანტები "სანამ" ბლოკის ჩამოსაშლელ მენიუში მაცნობებს,  გროვასთან
          ვარ თუ ორმოსთან.
        maze_karel_1_7: ნახეთ, როგორი ღრმა ორმო ვიპოვე! არც კი ვიცი, რამდენი ნიჩაბი
          მიწა უნდა ჩავყარო, რომ ამოვავსო. შეგიძლია დაწერო პროგრამა, რომელიც ჩაყრის
          მიწას, სანამ ორმო არ გასწორდება?
        maze_karel_1_8: შემავსებინე ორმო მდელოს ბოლოს ბლოკების მინიმალური რაოდენობის
          გამოყენებით.
        maze_karel_1_9: 'მომაშორებინე ნაგვის ყველა გროვა. სცადე ბლოკების მინიმალური
          რაოდენობის გამოყეენბა. მინიშნება: გამოიყენე ბლოკი "სანამ".'
        maze_karel_1_10: გვიანომადე ვმუშაობ, ახლა უკვე დაბნელდა და ვერ ვხედავ, რამხელაა
          გროვები. ახლა ვერ ვიყინებ "სანამ" ბლოკის ყველა ფუქნციას. გამატარე მდელოზე
          და თუ სადმე გროვა შეგვხვდა, მომაშორებინე.
        maze_karel_1_11: 'გარეთ ისევ ბნელა. გამატარე ამ მდელოზე. თუ სადმე გროვა იპოვე,
          მომაშორებინე და თუ ორმო - შემავსებინე. მინიშნება: გამოიყენე "თუ" ბლოკის
          ჩამოსაშლელი მენიუ.'
        turtle_2_1: 'ჰეი. მე ვარ ზომბი-მხატვარი. მე მიყვარს ხატვა! დამახატინე კვადრატი
          განსაკუთრებულ ფერში. მნიშველოვანია: ბლოკები ახლა კატეგორიებადაა დაყოფილი.'
        turtle_2_2: უკვე შეგიძლია გამოიყენო ფუნქციები, რომლებიც ახალი ბლოკების განსაზღვრაში
          დაგეხმარება. სცადე ახალი ბლოკი "კვადრატის დახატვა", რომელიც განლაგებულია
          კატეგორიაში "ფუნქციები" და დახატე მწვანე კვადრატი გვერდით 50.
        turtle_2_3: 'გამოიყენე ბლოკი "გამეორება" (კატეგორია: ციკლები) და დახატე სამი
          კვადრატი გვერდით 100, 120 გრადუსიანი დაშორებით. გამოიყენე სამი სხვადასხვა
          შემთხვევითი ფერი.'
        turtle_2_4: 'ახლა კი გავერთოთ. შეცვალე კოდი: დახატე 36 კვადრატი გვერდთ 100
          პიქსელი და დაშორებით 10 გრადუსი. მინიშნება: თუ ჩამოსქროლავ, უფრო სწრაფად
          ვიმოძრავებ.'
        turtle_2_5: დახატე კვადრატები გვერდებით 50, 60, 70, 80 და 90 პიქსელი. შენ
          მოგიწევს გამოიყენო ფუნქცია "დახატე კვადრატი" ხუთჯერ.
        turtle_2_6: 'ამ პროგრამაში იგივე კვადრატების დასახატად გამოვიყენებთ მთვლელს.
          ზომა მთვლელმა უნდა განსაზღვროს, ამიტომ გამოიყენე ბლოკი "მთვლელი". მინიშნება:
          ეს ბლოკი არის კატეგორიაში "ცვლადები".'
        turtle_2_7: ეს პროგრამა დაგახატინებს სპირალს, მაგრამ ბლოკები გათიშულია და
          არ გაეშვება.  გამოიყენე ბლოკები "დათვლა ცვლადით" (კარეგორია  "ციკლები")
          და "მთვლელი" (კატეგორია "ცვლადები") და დახატე ზუსტად ასეთივე სპირალი.
        turtle_2_7_5: ახალი ფუნქცია გვაქვს - "დახატე თოვლის კაცი" (კატეგორიაში "ფუნქციები").
          დახატე ორი თვოლის კაცი, სიმაღლეებით 250 და 100.
        turtle_2_8: ეს კი ცოტათი რთულია. გამოიყენე ფუნქცია "დახატე თოვლის კაცი" და
          ახალი ბლოკი "ნახტომი წინ" (კატეგორია "მოქმედებები"). დახატე 3 თოვლის კაცი,
          სხვადასხვა ფერის, დაშორებით 100 პიქსელი.
        turtle_2_9: გამოიყენე ციკლი "დათვლა ცვლადით" და დახატე თოვლის კაცების ოჯახი,
          სიმაღლეებით 110, 100, 90, 80 და 70. დაშორება ყოველთვის 60 პიქსელი უნდა იყოს.
        turtle_2_10: ამ კოდით სხვადასხვა სპირალების დახატვა შეიძლება. რა მოხდება,
          თუ შეცვლი მნიშვნელობას ბლოკში "მობრუნება"? ან ციკლში შემთხვევით ფერს მიუთითებ?
          დახატე, როგორც გინდა.
        maze_karel_2_1: 'გამოიყენე ბლოკები და მომაშორებინე ყველა გროვა და შემავსებინე
          ყველა ორმო. ბევრი ბლოკის მაგივარად სცადე გამოიყენო ციკლები. მინიშნება: ციკლის
          შიგნით სხვა ციკლის ჩასმა შეგიძლია.'
        maze_karel_2_2: შევქმენით ახალი ბლოკი, რომელსაც ჰქვია "შეავსე 5" და მოვათავსეთ
          კატეგორიაში "ფუნქციები". გამოიყენე ის ამ ორმოს შესავსებად.
        maze_karel_2_3: გამოიყენე ახალი ბლოკი "შეავსე 5" და ყველა ორმოს შევავსებს.
          ამ ბლოკის არჩევა "ფუნქციების" კატეგორიიდან შეგიძლია.
        maze_karel_2_4: განსაზღვრე ახალი ფუნქცია, რომელიც ერთდროულად 7 პორციას მოაშორებს.
          შემდეგ დაწერე პროგრამა, რომელიც დამეხმარება ყველა გროვის მოშორებაში.
        maze_karel_2_5: შექმენი ახალი ფუნქცია, რომელიც გროვად ერთდროულად 6 პორციას
          მოაშორებს და გამათანაბრებინე გროვები.
        maze_karel_2_6: ახალი ფუნქცების გამოყენებით ("შეავსე 8" და "მოაშორე 8") დამეხმარე,
          მოვაშორო ყველა გროვა და შევავსო ყველა ორმო.
        maze_karel_2_7: ჩემს მდელოზე ძროხაა! დაწერე ახალი ფუქნცია, რომელიც ამარიდებს
          ძროხას და მომაშორებინებს გროვას. ჩასვი ყველა საჭირო ბლოკი ახალ ფუნქციაში.
        maze_karel_2_8: გამოიყენე ეს ახალი ფუქნცია "ძროხის არიდება და 1 მოშორება"
          და მომოშორებინე ყველა გროვა.
        maze_karel_2_9: ნახე, ესაა ფუნქცია, რომელიც მოგაშორებინებს 4 სხვადასხვა გროვას
          ვერტიკალურ მწრკივში. ჩასვი ეს ფუნქცია ციკლში და მოაშორე ყველა გროვა რმადენიმე
          ახალი ბლოკის გამოყენებით.
        maze_karel_2_10: გამატარე მდელოზე და გამოიყენე ეს ორი ფუნქცია იმისთვის, რომ
          მომაშრებინო ყველა გროვა და შემავსებინო ყველა ორმო.
        turtle_3_1: ეს თავსატეხი გაჩვენებს, როგორაა განსაზღვრული ფუნქციები "დახატე
          კვადრატი" და "დახატე წრე". მხოლოდ ფუნქცია არ არის საკმარისი პროგრამის გასაშვებად.
          კვადრატის გასაშვებად უნდა გამოიყენო ბლოკი "დახატე კვადრატი".
        turtle_3_2: გამოიყენე ფუნქცია "დახატე კვადრატი" მაგალითად და შექმენი ფუქნცია
          "დახატე სამკუთხედი". შემდეგ გამოიყენე ის.
        turtle_3_3: 'კატების ირგვლივ სამკუთხედი ღობეები დახატე და ძროხის ირგვლივ -
          კვადრატული. რჩევა: შიგადაშიგ დატესტე პროგრამა.'
        turtle_3_4: სცადე გამოიცნო, როგორ უნდა გამოიყენო "დახატე კვადრატი" და "დახატე
          სამკუთხედი" (და ზოგი სხვა ბლოკიც) ლომის ირგვლივ სახლის დასახაზად.
        turtle_3_5: 'ახლა შექმენი ახალი ფუნქცია "დახატე სახლი" და დაუხატე სახლი ამ
          ორ კატას. მინიშნება: ფუნქციის შესაქმნელად გამოიყენე ბლოკი "გააკეთე რამე"
          და მერე შეიყვანე ბლოკის სახელწოდებაში შენი ტექსტი.'
        turtle_3_6: 'გამოიყენე "დახატე კვადრატი", როგორც მაგალითი და დაუმატე ფუნქციას
          "დახატე სამკუთხედი" პარამეტრი "სიგრძე". მერე დახატე სხვადასხვა ზომის სამკუთხედები.
          (მინიშნება: პარამეტრის დასამატებლად დააჭირე ვარსკვლავს)'
        turtle_3_7: 'დაუმატე პარამეტრი "სიგრძე" "დახატე სახლს" და აუშენე სპილოს დიდი
          სახლი (გვერდის სიგრძე: 150 პიქსელი)'
        turtle_3_8: შეცვალე "დახატე სახლი" ისე, რომ ახალი სახლის დახატვა მარჯვენა
          ქვედა კუთხეში დავასრულო. შეცვლილი ფუნქციით დახატე სამი სახლი.
        turtle_3_9: შეგიძლია დამოუკიდებლად აღადგინო ფუნქცია "დახატე სახლი"? სცადე
          და დახატე სახლების რიგი.
        turtle_3_10: უკვე ბევრი ისწავლე! ახლა დახატე რაც გინდა, მაგალითად, ვარსკვლავი,
          სპირალი ან უჩვეულო ფიფქი.
        maze_karel_debug_seq_1: გადავდივართ პროგრამის გასწორებაზე! ჩემი კოდი არ მუშაობს
          სწორად. შეგიძლია იპოვო შეცდომა და გამოასწორო? ჩემი მდელო გასწორებული უნდა
          იყოს.
        maze_karel_debug_seq_2: რა შეცდომაა ამ პროგრმაში? რა უნდა შეასწორო, რომ შევძლო
          ამ გროვის მოშორება?
        maze_karel_debug_repeat: გამოასწორე ეს პროგრამა  - ჩემი მდელო სუფთა და მოსწორებული
          უნდა იყოს.
        maze_karel_debug_while: როგორ უნდა შეცვალო ეს პროგრამა, რომ ორმოს შევსება
          შევძლო?
        maze_karel_debug_if: მიშველე! გაასწორე კოდი და გამასწორებინე მდელო.
        maze_karel_debug_if_else: შეასწორე შეცდომები, თორემ ორმოების შევსებას და გროვების
          მოშორებას ვერ ვახერხებ.
        maze_karel_debug_function_1: რა უნდა შეცვალო ამ პროგრმაში, რომ ყველა გროვის
          მოშორება შევძლო?
        maze_karel_debug_function_2: შეგიძლია გაასწორო ეს პროგრმა? ჩემი მდელოს მოსწორება
          მინდა.
        maze_karel_debug_function_3: 'შეასწორე ეს პრგორამა, ჩემს მდელოზე გორების მოშორება
          რომ შევძლო. '
        turtle_5_1: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება.
          ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_2: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება.
          ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_3: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება.
          ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_4: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება.
          ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_5: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება.
          ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_6: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება.
          ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        maze_3_1: უნდა დავიჭირო ეს გოჭი! გამოიძახეთ გადაადგილება(); და დამაბრუნებინეთ
          ჩემი კვერცხები.
        maze_3_2: დამიწერე პროგრამა და დამაჭერინე გოჭი.
        maze_3_3: როგორ მივაღწიო გოჭამდე? ფრთხილად, ასაფეთქებელს არ შემაჯახო!
        maze_3_4: გრრ! დამიწერე პროგრამა ისე, რომ ასაფეთქებელს გვერდი ავუარო და გოჭამდე
          მივიდე.
        bounce_1: მიამაგრე ეს ბლოკი ბლოკს "როცა მარცხენა ისარი"  და გაუშვი. ამოძრავე
          პლატფორმა მარცხენა ისრით და მიდი მიზნამდე.
        bounce_2: მიამაგრე ბლოკები ბლოკებს "როცა მარჯვენა ისარი" და "როცა მარცხენა
          ისარი". მიზნამდე მისაღწევად ამოძრავე პლატფორმა.
        bounce_3: ახლა სცადე რამე მსგავსი ბლოკთან "როცა ზემოთა ისარი". ამოძრავე პლატფომა
          რომ ზემოთ მდებარე მიზანს მიაღწიო.
        bounce_4: ახლა 4 ბლოკი უნდა დაამატო. თავსატეხის დასასრულებლად გადაიყვანე პლატფორმა
          ოთხივე მიზანთან.
        bounce_5: ჩვენ გამოვუშვებთ ბურთს, რომელიც პლატფორმაზე დავარდება. დაუმატე ბლოკი
          ბლოკს "როცა ბურთი მოხვდება პლატფორმას" ისე, რომ ბურთმა საბოლოო მიზანს მიაღწიოს.
        bounce_6: ახლა საბოლოო მიზანი ზემოთაა. ამოცანის ამოსახსნელად ბლოკები უნდა
          მიამაგროთ ორივე "როცა ბურთი დაეცემა" ბლოკს.
        bounce_7: მიამაგრეთ ბლოკები ორივე "როცა" ბლოკს. აისხლიტეთ ბურთი, სანამ ის
          მიზანს არ მოხვდება.
        bounce_10: ახლა მიზანი ზემოთაა. მიამაგრეთ ბლოკები "ქულის დაგროვება" და "მოწინააღმდეგის
          მიერ ქულის დაგროვება" ბლოკებს "როცა ბურთი აღწევს მიზანს" და "როცა ბურთი
          ცდება მიზანს". ასე შეიქმნება თამაში. შემდეგ ნახეთ, რამდენ ქულას დააგროვებთ,
          სანამ თქვენი მოწინააღმდეგე დააგროვებს ორჯერ მეტს.
        bounce_11: ახლა შეგიძლიათ ბლოკს "როცა გაშვებულია" მიუმაგროთ სხვა ბლოკები.
          ბლოკი "ახალი ბურთის გაშვება" რამდენიმე ადგილასაა მისამაგრებელი. ასევე, სცადეთ
          შეცვალოთ პლატფორმის ზომა ან სიჩქარე და ნახეთ, რამდენ ქულას დააგროვებთ, სანამ
          თქვენი მოწინააღმდეგე დააგროვებს ორჯერ მეტს.
        bounce_12: შექმენით თქვენი საკუთარი Bounce თამაში. შეგიძლიათ ყველა წესისა
          და გამოსახულების შეცვლა. როცა მორჩებით, დააჭირეთ "დასრულებას" და ათამაშეთ
          თქვენი მეგობრები.
        Custom_builder: დონეების შესაქმნელად გადაიტანეთ ბლოკები ინსტრუმენტების პანელიდან
          სამუშაო დაფაზე. როცა დაასრულებთ, გაუშვით.
        flappy_1: მიუმაგრეთ ბლოკი ბლოკს "დაჭერისას" და გაუშვით. შემდეგ დააჭირეთ შესაბამის
          ღილაკს ან ეკრანს და გადადგილეთ ფლაპი მიზნისკენ.
        flappy_2: ახლა უკვე დავამატეთ მიწაც. მიუმაგრეთ ბლოკი ბლოკს "როცა დაეჯახება
          მიწას". კოდი უნდა 'ამთავრებდეს თამაშს', როცა ფლაპი შეეხება მიწას.
        flappy_3: თამაშის დაწყებისას თქვენი კოდი მუშაობს "როცა გაშვებულია" ბლოკის
          გამო. სცადეთ შეცვლოთ სიჩქარისა და აქნევების დონეები.
        flappy_4: ჩიტი გაივლის ყველა წინაღობას, სანამ არ დაწერ დაჯახების კოდს. მიუმაგრე
          ახალი ბლოკი ბლოკს "როცა ხვდება წინაღაბას". შემნა კოდმა უნდა 'დაასრულოს თამაში',
          როცა ჩიტი პირველ რამდენიმე მილს დაეჯახება.
        flappy_5: ახლა დავამატოთ ქულების მთვლელი და დავუმატოთ ქულა ყოველჯერ, როცა
          ჩიტი გადალახავს წინაღობას. დაამატე ბლოკი "როცა გადალახავს წინაღობას" და
          დააგროვე ქულები პირველი რამდენიმე მილის გადალახვით.
        flappy_6: ნახე, დააგროვებ თუ არა ქულას, თუ ჩიტის ფრთის აქნევა უფრო სუსტი ან
          უფრო ძლიერი იქნება.
        flappy_7: ახლა სცადე შეცვალო სცენა - "როცა გაშვებულია" ბლოკს მიუმაგრე ახალი
          ბლოკი.
        flappy_8: ვიზუალური ეფექტების შეცვლა ყოველთვის შეგიძლიათ და არა მხოლოდ თამაშის
          დაწყებისას. ნახეთ, რა გამოვა, თუ გამოიყენებთ შემთხვევით სცენას ყოველი ახალი
          მოვლენის, მაგალითად, წინაღობის გადალახვის დროს.
        flappy_9: იმისთვის, რომ წინაღობაზე შეჯახების მერე თამაში გაგრძელდეს, და არა
          დასრულდეს, ისევ 0-ზე დასვი ქულების რაოდენობა.
        flappy_11: შექმენი შენი საკუთარი Flappy თამაში. ყველა გამოსახულებისა და წესის
          შეცვლა შეგიძლია, გრავიტაციისაც კი. როცა მორჩებით, დააჭირეთ "დასრულებას"
          და ათამაშეთ თქვენი მეგობრები.
        flappy_k1_1: ითამაშე Flappy
        flappy_k1_2: მიუმაგრეთ ბლოკი ბლოკს "დაჭერისას" და გაუშვით. შემდეგ დააჭირეთ
          შესაბამის ღილაკს ან ეკრანს და გადადგილეთ ფლაპი მიზნისკენ.
        flappy_k1_3: ახლა უკვე დავამატეთ მიწაც. მიუმაგრეთ ბლოკი ბლოკს "როცა დაეჯახება
          მიწას". კოდი უნდა 'ამთავრებდეს თამაშს', როცა ფლაპი შეეხება მიწას.
        flappy_k1_4: თამაშის დაწყებისას თქვენი კოდი მუშაობს "როცა გაშვებულია" ბლოკის
          გამო. სცადეთ შეცვლოთ სიჩქარისა და აქნევების დონეები.
        flappy_k1_5: ჩიტი გაივლის ყველა წინაღობას, სანამ არ დაწერ დაჯახების კოდს.
          მიუმაგრე ახალი ბლოკი ბლოკს "როცა ხვდება წინაღაბას". შემნა კოდმა უნდა 'დაასრულოს
          თამაში', როცა ჩიტი პირველ რამდენიმე მილს დაეჯახება.
        flappy_k1_6: ახლა დავამატოთ ქულების მთვლელი და დავუმატოთ ქულა ყოველჯერ, როცა
          ჩიტი გადალახავს წინაღობას. დაამატე ბლოკი "როცა გადალახავს წინაღობას" და
          დააგროვე ქულები პირველი რამდენიმე მილის გადალახვით.
        flappy_k1_7: ნახე, თუ შეძლებ დამატებითი ქულების დაგროვებას წინაღობების დაძლევით
        flappy_k1_8: ახლა სცადე შეცვალო სცენა - "როცა გაშვებულია" ბლოკს მიუმაგრე ახალი
          ბლოკი.
        flappy_k1_9: 'სცადე შეცვალო მოთამაშე: მიამაგრე ბლოკი "მოთამაშის არჩევა" ბლოკს
          "როცა გაშვებულია".'
        jigsaw_1: დააჭირე ბლოკს
        jigsaw_2: გადაიტანეთ ბლოკი მიზნისკენ
        jigsaw_3: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_4: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_5: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_6: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_7: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_8: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_9: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_10: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_11: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_12: ააწყვეთ სურათი ბლოკებისგან
        jigsaw_13: ააწყვეთ ფაზლი სწორად!
        mazestep_1: ლაბირინთის ნაბიჯის აღწერა არის აქ
        mazestep_2: ლაბირინთის ნაბიჯის აღწერა არის აქ
        mazestep_3: ლაბირინთის ნაბიჯის აღწერა არის აქ
        mazestep_4: ლაბირინთის ნაბიჯის აღწერა არის აქ
        mazestep_5: ლაბირინთის ნაბიჯის აღწერა არის აქ
        studio_c2_1: შეგიძლია ათქმევინო ამ ძაღლს "ჰეი, სამყარო"?
        studio_c2_2: შეგიძლია ისე გააკეთო, რომ ჯერ ძაღლმა თქვას რამე და მერე კატამაც?
        studio_c2_3: შეგიძლიათ დაწეროთ პროგრამა ისე, რომ ეს ძაღლი კატის მიმართულებით
          მოძრაობდეს?
        studio_c2_4: შეგიძლიათ დაწეროთ პროგრამა ისე, რომ ეს ძაღლი კატის მიმართულებით
          მოძრაობდეს, კატა კი ესალმებოდეს, როცა ძაღლი მას მიუახლოვდება?
        studio_c2_5: შეგიძლია დაწერო პროგრამა ისე, რომ რვაფეხა ამბობდეს "hello" როცა
          მას დააჭერ?
        studio_c2_6: შეგიძლია დაწერო პროგრამა ისე, რომ პინგვინი ისრების მეშვეობით
          მოძრაობდეს და ყველა მიზანს მიაღწიოს?
        studio_c2_7: ბლოკი "გაიმეორე უსასრულოდ" გაძლევს საშუალებას უწყვეტად გაუშვა
          კოდი. როგორ უნდა დააკავშირო ბლოკები, რომ ეს დინოზავრი უსასრულოდ მოძრაბდეს
          ქვემოთ-ზემოთ?
        studio_c2_8: რა უნდა გააკეთო, რომ პინგვინმა თქვას "ვაი" და გამოსცეს დაჯახების
          ხმა, თუ ის დინოზავრს შეეჩეხება? ამის გარდა, მისი მოძრაობა ისრებით უნდა იმართებოდეს.
        studio_c2_9: შეგიძლია დაამატო ბლოკი ისე, რომ პინგვინი ისრებით გადაადგილდებოდეს
          და რვაფეხასთან დაჯახებისას ქულების აგროვებდეს?
        studio_c2_10: რომელი ბლოკები უნდა დაამატო რომ შეცვალო თამაშის ფონი და პინგვინის
          სიჩქარე? შემდეგ გამოიყენე ისრები და ამოძრავე პინგვინი, სანამ ქულებს არ დააგროვებ.
        studio_c2_11: შექმენი საკუთარი ისტორია. როცა მორჩები, დააჭირე "დასრულებას"
          და ათამაშე მეგობრები.
        studio_c3_story_1: შეგიძლია ათქმევინო ამ ძაღლს "ჰეი, სამყარო"?
        studio_c3_story_2: შეგიძლია ისე გააკეთო, რომ ჯერ ძაღლმა თქვას რამე და მერე
          კატამაც?
        studio_c3_story_3: შეგიძლიათ დაწეროთ პროგრამა ისე, რომ ეს ძაღლი კატის მიმართულებით
          მოძრაობდეს?
        studio_c3_story_4: შეგიძლიათ დაწეროთ პროგრამა ისე, რომ ეს ძაღლი კატის მიმართულებით
          მოძრაობდეს, კატა კი ესალმებოდეს, როცა ძაღლი მას მიუახლოვდება?
        studio_c3_story_5: შეგიძლია გახადო რვაფეხა ბედნიერი ერთი ბლოკის დამატებით?
        studio_c3_story_6: შექმენი საკუთარი ისტორია. როცა მორჩები, დააჭირე "დასრულებას"
          და ათამაშე მეგობრები.
        studio_c3_game_1: შეგიძლია დაწერო პროგრამა ისე, რომ რვაფეხა ამბობდეს "hello"
          როცა მას დააჭერ?
        studio_c3_game_2: შეგიძლია დაწერო პროგრამა ისე, რომ პინგვინი ისრების მეშვეობით
          მოძრაობდეს და ყველა მიზანს მიაღწიოს?
        studio_c3_game_3: ბლოკი "გაიმეორე უსასრულოდ" გაძლევს საშუალებას უწყვეტად გაუშვა
          კოდი. როგორ უნდა დააკავშირო ბლოკები, რომ ეს დინოზავრი უსასრულოდ მოძრაბდეს
          ქვემოთ-ზემოთ?
        studio_c3_game_4: რა უნდა გააკეთო, რომ პინგვინმა თქვას "ვაი" და გამოსცეს დაჯახების
          ხმა, თუ ის დინოზავრს შეეჩეხება? ამის გარდა, მისი მოძრაობა ისრებით უნდა იმართებოდეს.
        studio_c3_game_5: შეგიძლია დაამატო ბლოკი ისე, რომ პინგვინი ისრებით გადაადგილდებოდეს
          და რვაფეხასთან დაჯახებისას ქულების აგროვებდეს?
        studio_c3_game_6: რომელი ბლოკები უნდა დაამატო რომ შეცვალო თამაშის ფონი და
          პინგვინის სიჩქარე? შემდეგ გამოიყენე ისრები და ამოძრავე პინგვინი, სანამ ქულებს
          არ დააგროვებ.
        studio_c3_game_7: შექმენი საკუთარი თამაში. როცა მორჩები, დააჭირე "დასრულებას"
          და ათამაშე მეგობრები.
        studio_playlab_1: პინგვინს უნდა, რომ მოგესალმოს - შეგიძლია, დაეხმარო?
        studio_playlab_2: ბიჭს გამოქვაბულიდან (მოთამაშე 1) და ჟასმინს (მოთამაშე 2)
          უნდათ, რომ მიესალმონ ერთმანეთს. შეგიძლია დაეხმარო მათ "თქმის" ბლოკის ორჯერ
          გამოყენებით?
        studio_playlab_3: შეგიძლია დაეხმარო ტენისის მოთამაშე გოგონას დროშამდე მისვლაში?
        studio_playlab_4: შეგიძლია დაეხმარო ტენისის მოთამაშე ბიჭუნას (მოთამაშე 1)
          მივიდეს ტენისის მოთამაშე გოგონასთან (მოთამაშე 2) და დაუკრა ხმა, როცა ეს
          მოხდება?
        studio_playlab_5: დაეხმარე კოსმოსურ ბოტს თქვას "სალამი, დედამიწელებო" როცა
          მას დააჭერენ. (გაშვების მერე არ დაგავიწყდეს დაჭერა)
        studio_playlab_6: შეგიძლია დაეხმარო ჯადოქარს იმოძრაოს ისრების მეშევეობით და
          აკრიბოს ყველა ჯადოსნური ბურთი?
        studio_playlab_7: ბლოკი "გაიმეორე უსასრულოდ" გაძლევს საშუალებას უწყვეტად გაუშვა
          კოდი. როგორ უნდა დააკავშირო ბლოკები, რომ ჯადოქარმა უსასრულოდ იმოძრაოს მარჯვნივ-მარცხნივ?
        studio_playlab_8: 'შეგიძლია დაუმატო ბლოკები: 1) ქულების დასაგროვებლად 2) ხმის
          გამოსაცემად, როცა ჯადოსნური მარტორქა ჯადოქარს შეეჩეხება 3) მარტორქის ისრების
          სამოძრაოდ?'
        studio_playlab_9: შექმენით ფონი უცხოპლანეტელების შემოსევისთვის და დაეხმარეთ
          კოსმოსურ ბოტს უფრო სწრაფად მიაღწიოს უცხოპლანეტელებამდე მისი სიჩქარის შეცვლით.
          შემდეგ გადაადგილეთ იგი ისრებით და გააფრთხილეთ ყველა შემოსევის შესახებ
        studio_playlab_10: შექმენი საკუთარი თამაში. როცა მორჩები, დააჭირე "დასრულებას"
          და ათამაშე მეგობრები.
        studio_full_sandbox: შექმენი საკუთარი თამაში. როცა მორჩები, დააჭირე "დასრულებას"
          და ათამაშე მეგობრები.
        studio_k1_1: შეგიძლია ათქმევინო ამ ძაღლს "ჰეი, სამყარო"?
        studio_k1_2: შეგიძლია ისე გააკეთო, რომ ჯერ ძაღლმა თქვას რამე და მერე კატამაც?
        studio_k1_3: შეგიძლიათ დაწეროთ პროგრამა ისე, რომ ეს ძაღლი კატის მიმართულებით
          მოძრაობდეს?
        studio_k1_4: გააკეთე ისე, რომ ძაღლი მივიდეს კატასთან, კატა კი მიესალმოს მას.
        studio_k1_5: შეგიძლია გახადო რვაფეხა ბედნიერი ერთი ბლოკის დამატებით?
        studio_k1_6: შექმენი შენი საკუთარი ისტორია! გადაადგილე და ალაპარაკე კატა და
          ძაღლი.
        maze_wordsearch_k_1: გადამაადგილე, რომ ასო-ასო დავყო სიტყვა EAST
        maze_wordsearch_k_2: გადამაადგილე, რომ ასო-ასო დავყო სიტყვა SOUTH
        maze_wordsearch_k_3: გადამაადგილე, რომ ასო-ასო დავყო სიტყვა WEST
        maze_wordsearch_k_4: გადამაადგილე, რომ ასო-ასო დავყო სიტყვა NORTH
        maze_wordsearch_k_6: გადამაადგილე აღმოსავლეთით და მერე სამხრეთით, რომ ასო-ასო
          დავყო სიტყვა JUMP
        maze_wordsearch_k_9: ჯერ ერთი, მერე კი მეორე მიმართულებით წამიყვანე, რომ სიტყვა
          CODE ასო-ასო გავიარო
        maze_wordsearch_k_13: ჯერ ერთი, მერე კი მეორე მიმართულებით წამიყვანე, რომ
          სიტყვა DEBUG ასო-ასო გავიარო
        maze_wordsearch_k_15: ჯერ ერთი, მერე კი მეორე მიმართულებით წამიყვანე, რომ
          სიტყვა ABOVE ასო-ასო გავიარო
        maze_wordsearch_k_16: ჯერ ერთი, მერე კი მეორე მიმართულებით წამიყვანე, რომ
          სიტყვა BELOW ასო-ასო გავიარო
        maze_wordsearch_k_20: ეს ტესტია! ჯერ ერთი, მერე კი მეორე მიმართულებით წამიყვანე,
          რომ სიტყვა STORY ასო-ასო გავიარო
        applab_ec_simple: შექმენი შენი აპლიკაცია ინსტრუმენტების პანელიდან ბლოკების
          გამოყენებით
        turtle_ec_1_2: 'ახლა კი დახატე კვადრატი. მინიშნება: გამოიყენე შენი საყვარელი
          ფერი ახალ ბლოკში "კალმის ფერი".'
        turtle_ec_1_10: 'გამოგივიდა! ახლა დახატე რაც გინდა. რამდენიმე სახალისო იდეა:
          ფიგურა, ფიფქი, სპირალი. ასევე სცადე ახალი ბლოკი "განის განსაზღვრა". გაერთე!'
        studio_ec_sandbox: შექმენი საკუთარი თამაში. როცა მორჩები, დააჭირე "დასრულებას"
          და ათამაშე მეგობრები.
    video:
      name:
        maze_intro: ლაბირინთი - შესავალი
        artist_intro: მხატვარი - შესავალი
        farmer_intro: ფერმერი - შესავალი
        flappy_intro: Flappy - შესავალი
        loop_times: ბლოკი "რამდენჯერმე გამეორება"
        loop_until: ბლოკი "გამეორება სანამ"
        if: ბლოკი "თუ"
        if_else: ბლოკი "თუ/სხვაგვარად"
        if_else_scrat: ბლოკი "თუ/სხვაგვარად"
        function: ფუნქციები
        loop_while: ბლოკი "სანამ"
        loop_for: ბლოკი "მთვლელი"
        parameters: ფუნქციები პარამეტრებით
        hoc_wrapup: '"კოდის ერთი საათის" შედეგები'
        Unplug1: რა არის CS?
        Unplug2: გამოთვლითი აზროვნება
        Unplug3: გრაფიკული პროგრამირება
        Unplug4: ალგორითმები
        Unplug5: ფუნქციები
        Unplug6: პირობები
        Unplug7: სიმღერის დაწერა
        Unplug8: აბსტრაქცია
        Unplug9: პროგრამირება ცვლაში
        Unplug10: ინტერნეტი
        Unplug11: შედეგები
        C1_happy_maps_unplugged: ბედნიერი რუკები
        C1_moveitmoveit_unplugged: გადაადგილე, გადაადგილე
        C1_bigevent_unplugged: დიდი მოვლენა
        C1_getting_loopy: ჩაციკლვა
        C1_pair_programming: პროგრამირება წყვილებში
        C1_maze_intro_sequencing: 'ლაბირინთი: შესავალი თანმიმდევრობაში'
        C1_maze_debugging: 'ლაბირინთი: ბაგების გამოსწორება'
        C1_bee_level_intro: ფუტკრის დონე - შესავალი
        C1_artist_intro: მხატვარი - შესავალი
        C1_spelling_bee_intro: Spelling Bee შესავალი
        C1_zuck_repeat_loop: ლაბირინთის ციკლები
        C1_bee_loops: ფუტკრის ციკლები
        C1_maze_loops: ლაბირინთის ციკლები
        C1_playlab_storytelling: თამაშების ლაბორატორია - ისტორიის შექმნა
        C1_planting_seed: მცენარის დარგვა
        C1_building_foundation: ფუნდამენტის აშენება
        C1_going_places_safely: უსაფრთხო მგზავრობა
        C2_maze_intro: ლაბირინთი - შესავალი
        C2_artist_intro: მხატვარი - შესავალი
        C2_zuck_repeat_loop: ლაბირინთის ციკლები
        C2_artist_loops: მხატვრის ციკლები
        C2_artist_debugging: მხატვრის ბაგების გამოსწორება
        C2_bee_loops: ფუტკრის ციკლები
        C2_bee_debugging: ფუტკრის ბაგების გამოსწორება
        C2_bee_conditionals: ფუტკრის პირობითი ბრძანებები
        C2_playlab_createstory: თამაშების ლაბორატორია - ისტორიის შექმნა
        C2_graph_paper: გრაფიკული პროგრამირება
        C2_conditionals_with_cards: პირობები
        C2_binary_bracelets: ორობითი სამაჯურები
        C2_relay_programming: პროგრამირება ცვლაში
        C2_paper_airplanes: ქაღალდის თვითმფრინავები
        C2_digital_footprint: თქვენი ციფრული ნაკვალევი
        C2_digital_footprint_v2: თქვენი ციფრული ნაკვალევი
        C3_maze_level_4: ლაბირინთის ციკლები
        C3_artist_intro: მხატვარი - შესავალი
        C3_artist_functions: მხატვრის ფუნქციები
        C3_bee_functions: ფუტკრის ფუნქციები
        C3_bee_conditionals: ფუტკრის პირობითი ბრძანებები
        C3_maze_conditionals: 'ლაბირინთი: პირობითი ბრძანებები'
        C3_artist_nested_loops: ჩასმული ციკლები
        C3_farmer_while: '"სანამ" ციკლები'
        C3_bee_nested_loops: ჩასმული ციკლები
        C3_bee_debugging: ფუტკრის ბაგების გამოსწორება
        C3_bounce: ხტუნვა
        C3_playlab_create_game: თამაშების ლაბორატორია - შექმენი თამაში
        C3_computational_thinking: გამოთვლითი აზროვნება
        C3_dice_race: კამათლების შეჯიბრი
        C3_internet: ინტერნეტი
        C3_crowdsourcing: ქრაუდსორსინგი
        C3_functional_suncatchers: ფუნქციური ვიტრაჟები
        C3_songwriting_with_parameters: სიმღერის დაწერა პარამეტრების გამოყენებით
        C4_intro: შესავალი
        C4_loops_zombie: ციკლები
        C4_bee_conditional: ფუტკრის პირობითი ბრძანებები
        C4_variables_artist: ცვლადები - არტისტი
        C4_variables_playlab: ცვლადები - თამაშების ლაბორატორია
        C4_for_loops: For ციკლები
        C4_for_loops_bee: For ციკლები
        C4_for_loops_no_bee: For ციკლები
        C4_math_artist: მხატვრის პროგრამირება მათემატიკის გამოყენებით
        C4_function_edit: ფუნქციების რედაქტირება
        C4_function_create: ფუნქციების შექმნა
        C4_function_parameters: ფუნქციები პარამეტრებით
        C4_conditionals: პირობები
        C4_unplugged_algorithms: ალგორითმები თანგრამებით
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: ცვლადები კონვერტებში
        C4_unplugged_forloops: For ციკლები
        C4_unplugged_parameters: სიმღერის დაწერა პარამეტრების გამოყენებით
        C4_unplugged_binary: ორობითი
        frozen_intro: '"კოდის ერთი საათი": შესავალი'
        frozen_loops: ციკლები - შესავალი
        frozen_functions: ფუნქციები - შესავალი
        playlab_intro: თამაშების ლაბორატორია - შესავალი
        playlab_events: თამაშების ლაბორატორია - მოვლენები
        playlab_repeat_forever: თამაშების ლაბორატორია - უსასრულოდ გამეორება
        tutorial_puzzle_challenge: თავსატეხი - ტუტორიალი
        infinity_playlab_intro: თამაშების ლაბორატორია - შესავალი
        infinity_playlab_events: თამაშების ლაბორატორია - მოვლენები
        infinity_playlab_repeat_forever: თამაშების ლაბორატორია - გამეორება უსასრულოდ
        csp_concept_rgb: A Little Bit About Pixels
        csp_pixelation_color_1: Color pixelation widget - Part 1
        csp_pixelation_color_2: Color pixelation widget - Part 2
        csp_pixelation_color_3: Color pixelation widget - Part 3
        csp_pixelation_bw: Black and white pixelation widget
        csp_U1L14_tipstricks: Unit 1 Lesson 14 Teacher Tips & Tricks
        csp_textcompression: Text compression widget
        csp_textcompression_new: Text compression widget
        csp_internetsimulator_1: Internet Simulator - Part 1
        csp_internetsimulator_2: Internet Simulator - Part 2
        csp_internetsimulator_3: Internet Simulator - Part 3
        alg_1_intro: CS in Algebra - Introduction
        alg_2_eval_block: CS in Algebra - Evaluation Blocks
        alg_3_pemdas: CS in Algebra - Order of Operations
        alg_4_data_types: CS in Algebra - Data Types
        alg_5_contracts: CS in Algebra - Contracts
        alg_6_variables: CS in Algebra - Variables
        alg_7_function: CS in Algebra - Functions
        alg_8_design_recipe: CS in Algebra - Design Recipe
        alg_9_booleans: CS in Algebra - Booleans
        alg_10_conditionals: CS in Algebra - Conditionals
        alg_11_coordinate_plane: CS in Algebra - Coordinate Plane
        alg_12_biggame_variables: CS in Algebra - Big Game Variables
        alg_13_biggame_animation: CS in Algebra - Big Game Animation
        alg_14_biggame_booleans: CS in Algebra - Big Game Booleans
        alg_15_biggame_update_player: CS in Algebra - Big Game Update Player
        alg_16_biggame_collision_detection: CS in Algebra - Big Game Collision Detection
        alg_17_sambat_compound_booleans: CS in Algebra - Compound Booleans
    callout:
      text:
        drag_blocks: გადმოიტანეთ ბლოკი "მოძრაობა" სხვა ბლოკის ქვემოთ
        run: დააჭირეთ "გაშვებას" და გატესტეთ თქვენი პროგრამა
        watch_again: დააჭირეთ აქ და უყურეთ ვიდეოს თავიდან
        gray_block_explanation: ნაცრისფერი ბლოკების წაშლა შეუძლებელია. შეგიძლიათ ამოხსნათ
          თავსატეხი ამის მიუხედავად?
        show_code_explanation: დააჭირეთ აქ და ნახეთ პროგრამის კოდი
        instructions_repeat_explanation: ყოველი თავსატეხის ინსტრუქციები მეორდება აქ
        category_explanation: ყველა იგივე ბლოკი გაქვთ, უბრალოდ ახლა ისინი კატეგორიებადაა
          დაყოფილი
        set_sprite_image: მოთამაშის ამ ისტორიაში ჩასართავად მიამაგრეთ ბლოკი "მოთამაშისთვის
          სურათის არჩევა" ბლოკს "როცა ისტორია იწყება"
        studio_say_text: ბრჭყალებში ჩაწერეთ ის, რაც გინდათ, რომ პერსონაჟმა თქვას
        jigsaw_click: დააჭირეთ ამ ბლოკს!
        move_elsa_forward: გადმოიტანე ბლოკი "წინ მოძრაობა" "როცა გაშვებულია" ბლოკის
          ქვემოთ და ელზა გაიქცევა წინ
        turn_elsa: ელზას მოსაბრუნებლად გამოიყენეთ ბლოკი "მობრუნება". რიცხვი ჩამოსაშლელ
          მენიუში განსაზღვრავს იმას, თუ რამდენჯერ მოტრიალდება ელზა
        replace_questions: გამოიყენეთ ჩამოსაშლელი მენიუ და ჩაანაცვლეთ??? რიცხვით
        replace_questions_degree: გამოიყენეთ ჩამოსაშლელი მენიუ და ჩაანაცვლეთ??? მოტრიალების
          შესაბამისი გრადუსული ზომით
        repeat_blocks: გამოიყენეთ ბლოკი "გამეორება" და მოათავსეთ მასში სამუშაო სივრცეში
          მდებარე ბლოკები
        repeat_blocks_1: (1) გამოიყენეთ ეს ბლოკი და ჩასვით მასში სამუშაო სივრცეში
          მდებარე ნაცრისფერი ბლოკები
        repeat_blocks_2: (2) გადმოიტანეთ "გამეორების" ბლოკი აქ და ჩასვით მასში ნაცრისფერი
          ბლოკები
        snowflake_dropdown: გამოიყენეთ ეს ჩამოსაშლელი მენიუ სხვადასხვანაირი ფიფქების
          შესაქმნელად!
        degrees_per_side: გაყავით 360 გვერდების რაოდენობაზე და გამოთვალეთ თითოეული
          კუთხის ზომა.
        set_sides: გამოიყენეთ ეს ბლოკი და განსაზღვრეთ რამდენი "გვერდია" საჭირო თავსატეხის
          დასასრულებლად.
        set_length: სირგძისთვის სწორი მნიშვნელობის მისანიჭებლად გამოიყენეთ ეს ბლოკი.
        which_equation: რომელი განტოლება ამოკლებს ბევრგვერდიანი ფიგურების ყველა გვერდს?
        get_nectar: გამოიყენეთ ბლოკი "ნექტარის მოპოვება".
        actions_category: ინსტრუმენტების პანელი განახლებულია! ახლა "მოქმედებების"
          ბლოკებიც აქაა.
        draw_square_hint: 'მინიშნება: გამოიყენეთ კვადრატის ციკლი, რომელიც წინა თავსატეხში
          გააკეთეთ.'
        edit_function: ფუნქციის შესასწორებლად დააჭირეთ აქ.
        create_function: დააჭირეთ აქ და გახსენით ჩანართი "ფუნქციები", შემდეგ აირჩიეთ
          "ფუნქციის შექმნა".
        house_hint: არაუშავს, თუ ნახატი ჯერ არ ჰგავს სახლს. ამას შემდეგ თავსატეხში
          გამოვასწორებთ.
        edit_draw_square: ფუნქციის შესასწორებლად და ციკლის დასამატებლად გამოიყენეთ
          ეს ღილაკი.
        edit_get_nectar: გამოიყენე ეს ღილაკი ფუნქციის შესასწორებლად და ნექტარის მოსაპოვებლად
          ფუტკრის მობრუნების მიმართულების შესაცვლელად.
        logic_category: '"თუ/სხვაგვარად" ბლოკის საპოვნელად გახსენით ჩანართი "ლოგიკა".'
        length_parameter: შეგიძლიათ განაახლოთ ეს ფუნქცია ისე, რომ მან "სიგრძის" პარამეტრი
          გამოიყენოს?
        frozen_diamond_repeat: ამ ფორმის შესაქმნელად გამოიყენეთ გამეორების ბლოკი.
        frozen_circle_function_in_circle_turn: არ დაგავიწყდეთ მობრუნება ყოველი წრის
          შექმნის შემდეგ.
        frozen_circle_function_with_parameter_circle: გამოიყენეთ "წრის შექმნის" ბლოკი
          და შეცვალეთ ზომა.
        frozen_snowflake_branch: გამოიყენეთ ბლოკი "ფიფქის ტოტის შექმნა"
        frozen_create_square: კვადრატის დასახატად მიამაგრე კიდევ რამდენიმე ბლოკი
        playlab_drag_say: გადმოიტანეთ ბლოკი "თქმა" აქ და ჩაწერეთ "hello"
        playlab_use_twice: გამოიყენეთ ეს ბლოკი ორჯერ და არ დაგავიწყდეთ მოთამაშის ნომრის
          შეცვლა
        playlab_move_girl: ტენისის მოთამაშე გოგონას გადასაადგილებლად გამოიყენეთ ბლოკი
          "გადაადგილება"
        playlab_play_sound: დაამატე ბლოკი "ხმის გამოცემა" აქ
        playlab_arrow_keys: არ დაგავიწყდეს გამოიყენო ესენი ჯადოქრის გადასაადგილებლად
          "გაშვების" დაჭერის შემდეგ
        playlab_add_move: გამეორების ბლოკის შიგნით ჩასვი მოძრაობის ბლოკები
        playlab_add_score: დაამატეთ შედეგების ბლოკი აქ
        playlab_add_blocks: დაამატეთ თქვენი ბლოკები აქ
        set_variable: ცვლადის განსასაზღვრად ბლოკი რიცხვით გამოიტანეთ აქ
        place_variable: გადაიტანეთ ცვლადი ამ ბლოკში
        bee_for_loop: გადმოიტანეთ აქ ნექტარის მაქისიმალური რაოდენობა, რაც გინდათ,
          რომ ფუტკარმა მოკრიბოს
        place_counter_variable: მთვლელის ცვლადი ამ ბლოკში გადაიტანეთ
        function_editor_draw_square: ეს არის თქვენი ფუნქციის განსაზღვრება. ეს ბლოკები
          გაეშვება ყოველთვის, როცა გამოიყენებთ ბლოკს "კვადრატის დახატვა"
        change_here: ცვლილებები შეიტანეთ აქ
        write_draw_square_function: კვადრატის დასახატად გადმოიტანეთ ბლოკები ინსტრუმენტების
          პანელიდან აქ
        write_draw_triangle_function: სამკუთხედის დასახატად გადმოიტანეთ ბლოკები ინსტრუმენტების
          პანელიდან აქ
        edit_add_parameter: დააჭირეთ რედაქტირებას და დაუმატეთ ფუნქციას ახალი პარამეტრი
        add_and_drag_parameter: ჩაწერეთ აქ პარამეტრის სახელი, დააჭირეთ დამატებას და
          შემდეგ გადაიტანეთ იგი ფუნქციის განსაზღვრებაში
        fill_in_actor: ჩაანაცვლეთ ??? რიცხვებით, რომლებიც თითოეულს მოთამაშეს შეესაბამება
          (1, 2 და 3)
        repeat: ბრძანებების გასამეორებლად ჩასვით ბლოკები ციკლში
        if_bee_nectar: იმის გადასაწყვეტად, უნდა მოკრიბოს თუ არა ფუტკარმა თაფლი გამოიყენეთ
          ბლოკი "თუ"
        if_else_bee: გამოიყენეთ ბლოკები "თუ/სხვაგვარად". ასე, ყვავილიდან ფუტკარი მოკრებს
          ნექტარს, სხვა შემთხვევაში კი თაფლს გააკეთებს
        repeat_full_circle: რამდენჯერ უნდა გადააგილდეს ზომბი რომ სრული წრე დაარტყას?
          შეიყვანეთ შესაბამისი რიცხვი
        place_length_variable: კითხვის ნიშნების ჩასანაცვლებლად გადმოიტანეთ აქ სიგრძის
          ცვლადი
        arrows_move_actor: პერსონაჟის გადასაადგილებლად გამოიყენეთ ისრები
        right_arrow_fireball: ცეცხლოვანი ბურთების სროლისთვის გამოიყენეთ მარჯვენა ისარი
        name_function: თქვენი ფუნქციის სახელი ჩაწერეთ აქ
        Infinity_move_right_runbutton: დაამატეთ აქ ბლოკი "გადაადგილება"
        Infinity_move_directions_callout: რომელი ბლოკი გადააადგილებს ბეიმაქს ზემოთ
          ზემოთა ისრის დაჭერისას?
        Infinity_move_directions_callout_arrow: სამართავად გამოიყენეთ ეს ისრები
        Infinity_move_collide_callout: ხმის გამოცემა ამ მოვლენისას.
        Infinity_repeat_callout: მოათავსე ბლოკი "გადაადგილება" აქ
