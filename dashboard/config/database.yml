mysql_defaults: &mysql_defaults
  adapter: mysql2
  prepared_statements: false
  encoding: utf8mb4
  collation: utf8mb4_unicode_ci
  default_group: 'cdo'

  # ActiveRecord connection-pool settings:
  # See: https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html
  # maximum number of connections the pool may manage (default 5).
  pool: 5

  # number of seconds to wait for a connection to become available before giving up and raising a timeout error (default 5 seconds).
  checkout_timeout: 3

  # `mysql_options` client options forwarded through the mysql2 adapter:
  # See: https://dev.mysql.com/doc/refman/5.7/en/mysql-options.html

  # `MYSQL_OPT_CONNECT_TIMEOUT`: The connect timeout in seconds.
  connect_timeout: 2

  # `MYSQL_OPT_RECONNECT`: Enable or disable automatic reconnection to the server if the connection is found to have
  # been lost. Reconnect is off by default; this option provides a way to set reconnection behavior explicitly.
  # See https://dev.mysql.com/doc/refman/5.7/en/c-api-auto-reconnect.html
  reconnect: true

  # `MYSQL_OPT_READ_TIMEOUT`: The timeout in seconds for each attempt to read from the server.
  # There are retries if necessary, so the total effective timeout value is three times the option value.
  # You can set the value so that a lost connection can be detected earlier than the TCP/IP Close_Wait_Timeout value of 10 minutes.
  #
  # NOTE: mysql2 reuses this variable as a query timeout without retry, so set it to the maximum query execution time.
  read_timeout: 30

  # `MYSQL_OPT_WRITE_TIMEOUT`: The timeout in seconds for each attempt to write to the server.
  # There is a retry if necessary, so the total effective timeout value is two times the option value.
  write_timeout: 5

environment_defaults: &environment_defaults
  primary:
    <<: *mysql_defaults
    <% if CDO.running_web_application? %>
    host: <%= CDO.db_endpoint_proxy_writer %>
    port: <%= CDO.db_endpoint_proxy_writer_port %>
    <% else %>
    # Connect directly to the database when not executing within a web application.
    host: <%= CDO.db_endpoint_writer %>
    port: <%= CDO.db_endpoint_writer_port %>
    <% end %>
    username: <%= CDO.db_credential_writer['username'] %>
    password: <%= CDO.db_credential_writer['password'] %>
    database: <%= CDO.dashboard_db_name %>
  # Always provision a read replica database connection pool, even in environments that do not have an Aurora cluster
  # with read replicas, such as local development environments and continuous integration builds. In those non-AWS
  # environments, CDO.db_endpoint_proxy_reader is set to the same servername as the writer (typically 'localhost').
  primary_replica:
    replica: true
    <<: *mysql_defaults
    host: <%= CDO.db_endpoint_proxy_reader %>
    port: <%= CDO.db_endpoint_proxy_reader_port %>
    username: <%= CDO.db_credential_reader['username'] %>
    password: <%= CDO.db_credential_reader['password'] %>
    database: <%= CDO.dashboard_db_name %>
  # Always provision a reporting replica database connection pool, even in environments that do not have an Aurora
  # cluster with a "reporting" RDS Proxy, such as local development environments and continuous integration
  # builds. In those non-AWS environments, CDO.db_endpoint_proxy_reporting is set to the same servername as the writer
  # (typically 'localhost').
  primary_reporting:
    replica: true
    <<: *mysql_defaults
    host: <%= CDO.db_endpoint_proxy_reporting %>
    port: <%= CDO.db_endpoint_proxy_reporting_port %>
    username: <%= CDO.db_credential_reader['username'] %>
    password: <%= CDO.db_credential_reader['password'] %>
    database: <%= CDO.dashboard_db_name %>
development:
  <<: *environment_defaults

staging: &staging
  <<: *environment_defaults

adhoc:
  <<: *environment_defaults

# levelbuilder environment extends the staging environment
levelbuilder:
  <<: *staging

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *environment_defaults
  # Override the default values for `database` and `pool` fields to accommodate
  # CI needs. To do that, we have to redefine the whole `primary` block
  primary:
    <<: *mysql_defaults
    host: <%= CDO.db_endpoint_proxy_writer %>
    port: <%= CDO.db_endpoint_proxy_writer_port %>
    username: <%= CDO.db_credential_writer['username'] %>
    password: <%= CDO.db_credential_writer['password'] %>
    database: dashboard_test<%= ENV['TEST_ENV_NUMBER'] %>
    pool: <%= ENV['CI'] ? 20 : 5 %>
production:
  <<: *environment_defaults
