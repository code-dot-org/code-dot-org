name 'CSA U1 Assessment q01_2023'

right 'facing north'
wrong 'facing south'
wrong 'facing east'
wrong 'facing west'
wrong 'in an infinite loop'

markdown <<MARKDOWN
A `Painter` object called `myPainter` is facing north. Consider the following code segment.

```
while (!myPainter.isFacingSouth()) {
  myPainter.turnLeft();
}

myPainter.turnLeft();
myPainter.turnLeft();
```

The effect of this code is that the `myPainter` object is now:
MARKDOWN

teacher_markdown <<MARKDOWN
Consider the following example where the `Painter` object is facing north.

![](https://images.code.org/5a385ba1a5e2c3c3ba23419d14623118-image-1669132433838.png)

When the `Painter` object is facing north, the condition for the `while` loop is `true`, so the `Painter` object will turn left.

![](https://images.code.org/6b77aaf5fb1f11c305820cf9feb251cb-image-1669132550139.png)

The condition for the `while` loop is still `true`, so the `Painter` object will turn left again.

![](https://images.code.org/a5a1cfdeee3bd515de7e998f253c127f-image-1669132598148.png)

Since the `Painter` object is now facing south, the condition for the `while` loop is now `false`. The two `turnLeft()` methods after the `while` loop are then executed, resulting in the `Painter` object facing north.

![](https://images.code.org/5a385ba1a5e2c3c3ba23419d14623118-image-1669132433838.png)
MARKDOWN
