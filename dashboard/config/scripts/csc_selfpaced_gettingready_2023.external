name 'CSC-SelfPaced-gettingready_2023'
title 'title'
description 'description here'

markdown <<MARKDOWN
# Getting Ready 

<img src="https://images.code.org/a602561da92e97ab5bc1fe1f35cffd16-image-1679955031729.png" alt="Image of a cartoon bird wearing a hat" style="float: right; height: 275px; clear: both; margin: 0 20px 20px 0;">

## Suggested Planning Activities

<hr style="clear:left">

#### **Pick a module to add to your scope and sequence** 
##### When does the module best fit into what you are already teaching?

##### **Example:** If you're discussing animal habitats in science, you can integrate the “Modeling Animal Adaptations” module where students simulate different animals adapting their habitats.

#### **Consider co-teaching** 
##### What colleagues (e.g. librarian, technology specialist, general education) may want to teach lessons with you?

##### **Example:** If you're exploring ancient civilizations in social studies, perhaps the librarian has resources or the technology specialist has software that can help students research different time periods to code their time capsules in “Coding a Time Capsule.”


#### **Make modifications or accommodations**
##### How will you adapt the lessons to best meet your students' needs?
##### **Example:** If your students are learning about the different players in a local ecosystem, students can find images of those animals, save them to their computers, and then upload those images as new sprite costumes and backgrounds to code with! For a tutorial, click <a href = "https://support.code.org/hc/en-us/articles/16555689095565-Sprite-Lab-Uploading-Custom-Sprites-and-Backgrounds" target="blank" rel="noopener noreferrer"> here </a>


## Preparing to Teach

<img src="https://images.code.org/c46adeb1f3cda223361151b3ab88a71d-image-1680733372700.png" alt="Image of a cartoon octopus holding a microphone and wearing a hat" style="float: right; height: 250px; clear: both; margin: 0 20px 20px 0;">

<hr style="clear:left">

#### **Preview lessons**
##### What lessons (CS or core content) might you need to teach before teaching the module?
##### What CS concepts or skills might be challenging for your students?  
##### When will students need support debugging?

#### **Develop a general lesson flow**
##### When will teacher-led learning happen as a whole group?  
##### When will student-led learning happen for individual students or pairs?

#### **Keep the end in mind**
##### What final project are students working towards?  
##### How will students showcase and share their final projects?

## Suggested Pre-Work by Module

<div style="clear:both"/>
<hr style="clear:both">

<details>

<summary><strong>Coding a Time Capsule </strong></summary>

##### **Social Studies:** 


Read any of these <a href = "https://docs.google.com/document/d/1GU2wLxQ2xkoYGrjJU2mbngZEDxOX7bEWTlh4Ns1cnh8/template/preview" target = "blank" rel = "noopener noreferrer">Multiple Perspectives Read Alouds</a> together as a class to enrich the discussion questions throughout the module, especially regarding the importance of having your voice in your own story, and what happens if certain things are included or left out.

##### **ELA:** Read poetry together: Read a few poems together as a class and practice naming the mood of each poem. Encourage students to share their interpretation, even if it is different from someone else’s. Make sure that all students are familiar with the structure of a poem before Lesson 2, in which students will write their own poems.

##### **Computer Science:** Students will be working with sprites and events in the module. We recommend beginning with <a href = "https://studio.code.org/s/coursee-2023/lessons/4" target = "blank" rel = "noopener noreferrer">Hello World Tutorials</a> (45 minutes) where students will gain a basic introduction to sprites and how to animate them with events.
</details>

<div style="clear:both"/>
<hr style="clear:both">

<details>

<summary><strong>Coding a Geometric Star Quilt </strong></summary>

##### **Math:** Students will be working with shapes and angles in this module. To build familiarity, we recommend playing these active songs <a href ="https://www.youtube.com/watch?v=kGAGkysDunw&t=1s" target="blank" rel="no opener noreferrer">Types of Angles song</a> (2:47 minutes) and <a href ="https://www.youtube.com/watch?v=an1tG3upvow" target= "blank" rel= "noopener noreferrer">Angles & Lines</a> (3:06 minutes).

##### These are a few children's books to build some background knowledge and deepen connections to the real world:

- <a href = "https://www.amazon.com/Shota-Star-Quilt-Folk-Tales/dp/1840890231" target = "blank" rel= "noopener noreferrer">Shota and the Star Quilt</a> Picture book about the tradition of quilting and how traditions can change over time

- <a href ="https://www.amazon.com/Rainbow-Weaver-Tejedora-del-Arcoiris/dp/0892393742/ref=asc_df_0892393742/?tag=hyprod-20&linkCode=df0&hvadid=312089887152&hvpos=&hvnetw=g&hvrand=526653230527463008&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=9033356&hvtargid=pla-522520885864&psc=1" target = "blank" rel= "noopener noreferrer"> Rainbow Weavers</a> This picture book is about weaving, not quilting, but it could deepen students' understanding of how indigenous traditions evolve.

- <a href ="https://www.mathsthroughstories.org/a-trapezoid-is-not-a-dinosaur.html" target = "blank" rel= "noopener noreferrer">A Trapezoid is Not a Dinosaur</a> by Suzanne Morris

- <a href= "https://youngmathematicians.edc.org/picture_book/%EF%BB%BF%EF%BB%BFthe-greedy-triangle/" target = "blank" rel= "noopener noreferrer">The Greedy Triangle</a> by Marilyn Burns

- Any of these <a href ="https://www.k-5mathteachingresources.com/geometry-read-aloud.html" target = "blank" rel= "noopener noreferrer">Geometry Read Alouds</a>

##### **Computer Science:** In this module, students will use Code.org's Artist tool. If students are not yet familiar with it, we recommend trying <a href = "https://studio.code.org/s/artist/lessons/1" target = "blank" rel= "noopener noreferrer">Intro to Artist lesson</a> (50 minutes) for a basic introduction to the tool.

</details>

<div style="clear:both"/>
<hr style="clear:both">

<details>

<summary><strong>Coding Interactive Maps </strong></summary>

##### **Social Studies:** Students will discuss and code several different types of maps. To build a base understanding together you might consider reading one of these books about maps: <a href = "https://oladaniel.com/maps" target = "blank" rel= "noopener noreferrer"> Maps by Aleksandra and Daniel Mizielinski</a>, <a href = "https://bghennessy.com/f/the-once-upon-a-time-map-book" target = "blank" rel= "noopener noreferrer">The Once Upon a Time Map Book by BG Hennessy</a>, or <a href = "https://www.youtube.com/watch?v=LRy3daJLhtg" target = "blank" rel= "noopener noreferrer">City Atlas: Travel the World with 30 City Maps by Georgia Cherry</a>.

##### Additionally, it may be beneficial to spend some time building interactive maps with hands on materials in your classroom: fill a bucket with colored strips of felt to represent roads, rivers, houses and more. Let students build and play in an imaginary town. Or after a shared experience (i.e., recess or field trip) create a topographical map using play-dough or salt dough.

##### **Computer Science:** In this module students will be working a lot with sprites including changing the location and size of them and initiating behaviors. <a href = "https://studio.code.org/s/coursef-2023/lessons/3" target = "blank" rel= "noopener noreferrer">CS Fundamentals Course F Lesson 3</a> is a great introduction to two concepts at the heart of this all: sprites and behaviors. 

</details>

<div style="clear:both"/>
<hr style="clear:both">

<details>

<summary><strong>Coding with Poetry </strong></summary>

##### **English Language Arts:** To prepare for this module and create some shared understanding of poetry together we recommend starting by reading poetry together. Read a few poems together as a class and practice naming the mood of each poem. 
##### Encourage students to share their interpretation, even if it is different from someone else’s. Make sure that all students are familiar with the structure of a poem before Lesson 2, in which students will write their own poems.

##### **Computer Science:** As a warm up to the tool students can add art and animation to a classic poem in this <a href = "https://studio.code.org/s/poem-art-2021/lessons/1" target="blank" rel="noopener noreferrer">Poem Art</a> (55 minutes) Hour of Code activity!

##### Additionally, in this module students will use event blocks to program changes at important lines in the poem. To start building skills with events try <a href ="https://studio.code.org/s/coursec-2023/lessons/12" target="blank" rel= "noopener noreferer">Build a Flappy Game</a> (60 minutes) .


</details>

<div style="clear:both"/>
<hr style="clear:both">

<details>

<summary><strong>Modeling Animal Adaptations </strong></summary>

##### **Science:** Students will simulate several animal adaptations. To build familiarity with adaptations, we recommend this <a href = "https://www.youtube.com/watch?v=xDSFlRunlrU&list=PLdG-lk1eEmZnq4ZO2CzERCv6jZkYIHCbR&index=4" target = "blank" rel= "noopener noreferrer">Living Things Change Video</a>(4:36 minutes).

##### **Computer Science:** In this module students will be working a lot with sprites including changing the location and size of them and initiating behaviors. <a href ="https://studio.code.org/s/coursef-2023/lessons/3" target = "blank" rel= "noopener noreferrer">CSF Making Sprites</a> is a great introduction to two concepts at the heart of this all: sprites and behaviors.

</details>

<div style="clear:both"/>
<hr style="clear:both">

<details>

<summary><strong>Simulating a Marine Ecosystem </strong></summary>

##### **Science:** Students will simulate a marine life ecosystem in Lessons 1 and 2. To build familiarity with this ecosystem, we recommend this <a href ="https://www.youtube.com/watch?v=8adtdg0N2-g" target = "blank" rel= "noopener noreferrer">Ocean Animals Video</a> (9:42 minutes).

##### In Lesson 2, students will code several sustainable fishing practices. These are a few readings to build some background knowledge and deepen connections to the real world: <a href = "https://www.seafoodwatch.org/seafood-basics/sustainable-solutions/avoid-overfishing" target = "blank" rel= "noopener noreferrer"> Understanding Overfishing</a> (Monterey Bay Aquarium article), or <a href = "https://books.google.com/books/about/Mw_kwa_Talks_to_the_Loon.html?id=ZtJfkFFPTzIC" target = "blank" rel= "noopener noreferrer">Mw, kwa Talks to the Loon</a> (Children's book).

##### **Computer Science:** In this module, students will learn new coding concepts that might be difficult for new-to-computer science students. If students are not familiar with Code.org’s Sprite Lab we recommend trying <a href ="https://studio.code.org/s/coursee-2022/lessons/3" target = "blank" rel= "noopener noreferrer">Swimming Fish with Sprite Lab</a> (55 minutes) for a basic introduction to the tool.

##### This module also uses an advanced CS concept called conditional statements. Students learn this concept in a scaffolded way, but some students may benefit from first engaging in this introduction to conditionals unplugged activity: <a href = "https://studio.code.org/s/coursed-2022/lessons/12" target = "blank" rel= "noopener noreferrer">Conditionals with Cards</a> (50 minutes).

</details>

<div style="clear:both"/>
<hr style="clear:both">

<details>

<summary><strong>Coding Book Covers </strong></summary>

##### **English Language Arts:** Building some familiarity with and background knowledge on book covers, the elements they all share (title, author, illustrations, etc) and design choices will help students focus. Here are two hands on activities to try in your classroom:

##### **Book sort:** Have groups of students organize books into genre piles, based only on the book cover. Students make inferences based on the book cover about what genre a book may fall under.
##### **Cover comparison:** show students multiple covers for the same book. Engage in a discussion about what is different in each cover and evaluation which version is best.

##### **Computer Science:** In this module, students will learn the basics of coding using code.org's Sprite Lab.These activities may be supportive to engage in before starting the module:

##### <a href = "https://studio.code.org/s/coursef-2023/lessons/3" target = "blank" rel= "noopener noreferrer">Making Sprites</a> (50 minutes) is a great self-paced introduction to the basics of coding with sprites.

##### Introduce students to the idea of events with this unplugged activity:
##### <a href ="https://studio.code.org/s/course1/lessons/15/levels/1" target = "blank" rel= "noopener noreferrer">The Big Event</a> (15-minute activity). The teacher will press buttons on a paper remote and students will react depending on which button is pressed.




</details>
<hr style = "clear:both">


MARKDOWN
