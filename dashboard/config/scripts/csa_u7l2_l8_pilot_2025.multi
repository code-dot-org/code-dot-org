name 'CSA U7L2-L8_pilot-2025'
title 'Check for Understanding'

wrong '`84.0 0`'
right '`84.0 5`'
wrong '`80.0 0`'
wrong '`80.0 5`'
wrong '`17743 80.0`'

allow_multiple_attempts true

markdown <<MARKDOWN
Consider the following class definition.

```
public class QuizScore {
  private String studentId;
  private double score;

  public QuizScore(String stuId, double stuScore) {
    studentId = stuId;
    score = stuScore;
  }

  public double getScore() {
    return score;
  }

  public void bonus(int b) {
    score += score * b / 100.0;
  }
}
```

Assume that the following two methods appear in a class other than `QuizScore`.

```
public void mystery(QuizScore s, int b) {
  s.bonus(b);
  b = 0;
}

public String start() {
  QuizScore mw = new QuizScore("17743", 80.0);
  int bonus = 5;
  mystery(mw, bonus);
  return mw.getScore() + " " + bonus;
}
```

What is returned as a result of the call `start()`?
MARKDOWN

teacher_markdown <<MARKDOWN
The method `mystery()` is passed a `QuizScore` object and an `int bonus`. The method `bonus()` in `QuizScore` is called with the `bonus` as the argument, which increases the `score` of the `QuizScore` object by a percentage of the `score`.

In the `start()` method, a `QuizScore` object `mw` is created with a score of `80.0`, and a `bonus` of `5` is also created. The `mystery()` method is then called with `mw` and `bonus` as arguments.

After calling `mystery()`, the score of `mw` has been increased by the `bonus` percentage, which means that `mw.getScore()` returns `84.0`. However, the value of `bonus` itself is not changed, so it still has a value of `5`.

Therefore, the call `start()` returns `"84.0 5"`.
MARKDOWN
