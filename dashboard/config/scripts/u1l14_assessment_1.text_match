name 'U1L14 Assessment 1'
title 'Assessment: Encoding B&W Images'
content1 'What are the largest dimensions (width and height) of an image we can make with the pixelation widget? '


markdown <<MARKDOWN
How many total bits would there be in the the largest possible image we could make with the pixelation widget?

How many bits would it take to represent the smallest possible image (i.e. an image with one pixel)?
MARKDOWN






teacher_markdown <<MARKDOWN
**Q: What are the largest dimensions (width and height) of an image we can make with the pixelation widget?**

**A**: 255 x 255

Explanation:

1. The max image size is 255 x 255 because the width and height can only be expressed with 8 bits each, and the max value you can express with 8 bits is 255.


**Q: How many total bits would there be in the the largest possible image we could make with the pixelation widget?**

**A**: 65,041 bits

Explanation: 

1. The max image size is `255 * 255 = 60,025` (width and height can only be expressed with 8 bits each so that's 255 for each). 
2. Since in this image there is one bit per pixel that means there are `255 * 255 = 60,025` bits of image data 
3. However, the image file *also* must contain the 16 bits of width and height metadata, which are 8 bits each.  
4. So the toal is: `width * height + metadata` = `255 * 255 + 16 = 65,041`.


**Q: How many bits would it take to represent the smallest possible image (i.e. an image with one pixel)?**

**A**: 17 bits

Explanation:

1. The image data is 1x1, for 1 pixel, so that's 1 bit.
2. However, there is still 16 bits of metadata, 8 bits for height, 8 for width.
3. So the total (just as above) is:  `width * height + metadata` = `1 * 1 + 16 = 17`.

Since this example is small enough you can prove it to yourself.  Here is the data for a 1x1 image:

	0000 0001
	0000 0001
	1


MARKDOWN





































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































