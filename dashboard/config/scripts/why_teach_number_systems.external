name 'Why Teach Number Systems?'
markdown <<MARKDOWN
# Why Teach Number Systems?
## Number Systems in computer science
In computer science it’s common to move between different representations of numbers. Typically we see numbers represented in decimal (base-10), binary (base-2), and hexadecimal (base-16). The symbols of the decimal (base-10) number system - 0 1 2 3 4 5 6 7 8 9 - are so familiar that it can be challenging to mentally separate the written symbols from the abstract values they represent. As a result, using the digits 0 and 1 can be a distraction when learning binary initially because students feel as if some part of the set is ‘missing’. 

In every traditional number system, we use both the number (in decimal 0-9) as well as the place value to tell us information.  While students were likely drilled on place value in their earlier years, this knowledge has probably moved to their subconscious.  When teaching Binary, it can be difficult for some students to grasp the transition from 00 to 01 to 10 because they don’t see the connection to the place value of the numbers.  In lesson 4 we look at building a number system using three shapes, allowing students to focus the process rather than being distracted by familiar symbols. In the case of lesson 4, students will first work to find patterns of shapes and then create a logical ordering for these patterns.

## Numbers as Laws of Nature
We want to expose the fact that numbers themselves (the quantities) are laws of nature, but the symbols we use to represent numbers are an arbitrary, man-made abstraction. Sometimes students memorize conversions from one number system to another without really understanding why. By effectively inventing their own base-3 number system in lesson 4, the goal is for students to see that all number systems have similar properties and function the same way. As long as you have 1) a set of distinct symbols 2) an agreement about how those symbols should be ordered, then you have a number system!  
## Supporting Students
Although the subject of “number systems” itself is not an EK statement in the CSP Framework, we feel that it is an important base for students to build up their knowledge of hexadecimal and binary.  Many students fall into one of two categories: 

1. They have never seen binary before, but have heard the word and are intimidated to learn a subject that is so stereotypically “geeky”.
2. They are confident in their ability to translate between decimal and binary, but do it by following an algorithm and do not have a good enough understanding of how that algorithm works to explain the relationships between the two bases.

It is important to support students in both of these groups.  CSP is a course written with no CS prerequisite and we believe that all students can be successful in this course.   This lesson is intentionally written with multiple entry points and a hands on task to support computer science concepts in order to create an inviting environment for students who previously didn’t believe that they could be successful in this course.  Behind its inviting activity, however, this lesson is subtly rigorous and supports the very abstract concept of number systems in a concrete way.  For students who are able to transition between binary and decimal, this lesson is meant to pull them away from the symbols they’re familiar with to help them see the larger patterns and protocols used by ALL number systems.  If students are able to do this with three symbols, it becomes easier to transition to binary with two symbols or hexadecimal with 16.


MARKDOWN
