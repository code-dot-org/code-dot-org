name 'CSA U3 Assessment q9'
height 'auto'

wrong ‘`newArray[k] = names[-k];`’
wrong ‘`newArray[k] = names[k - names.length];`’
wrong ‘`newArray[k] = names[k - names.length - 1];`’
right ‘`newArray[k] = names[names.length - k - 1];`’
wrong ‘`newArray[k] = names[names.length - k];`’



teacher_markdown <<MARKDOWN
Covered in Unit 3 Lesson 10. 

MARKDOWN

markdown <<MARKDOWN
Consider the following method, which is intended to return an array of integers that contains the elements of the parameter `names` arranged in reverse order. For example, if `names` contains {“Ken”, “Isaiah”, “Jose”, “Esosa”}, then a new array containing {“Esosa”, “Jose”, “Isaiah”, “Ken”} should be returned and the parameter `names` should be left unchanged.

```
public static int[] reverse(int[] arr)
{
int[] newArr = new int[names.length];
for (int k = 0; k < names.length; k++)
{
/* missing statement */
}
return newArr;
}

```
Which code segment should replace /* missing statement */ ?

MARKDOWN
