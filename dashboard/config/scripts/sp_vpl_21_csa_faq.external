name 'SP-VPL-21-CSA-FAQ'
title 'The AP CSA Framework and Code.org\’s Approach'
description 'description here'

markdown <<MARKDOWN
# Frequently asked questions

We know you have some questions about CSA!  Many of these questions can be answered on our website or during our facilitator-led workshops.  Other questions might be answered in the next two Modules.  We have also put together a list of some questions and answers below. Click on the question below to show the answer. 

<hr style="clear:both"/>

<details>
<summary><strong>What prerequisites are recommended for students before they take CSA?</strong></summary>

The Code.org CSA curriculum is recommended for any high school student who wishes to continue their computer science education after completing an introductory course such as Computer Science Principles (CSP) or Computer Science Discoveries (CSD).

Additionally, the College Board makes the following recommendation:

*It is recommended that a student in the AP Computer Science A course has successfully completed a first-year high school algebra course with a strong foundation of basic linear functions, composition of functions, and problem-solving strategies that require multiple approaches and collaborative efforts. In addition, students should be able to use a Cartesian (x, y) coordinate system to represent points on a plane. It is important that students and their advisers understand that any significant computer science course builds upon a foundation of mathematical reasoning that should be acquired before attempting such a course.*

</details>

<div style="clear:both"/>

<details>
<summary><strong>What experience do teachers need to have prior to teaching CSA?</strong></summary>

Each state might have different requirements for teaching CSA.  Here at Code.org, we believe any teacher who is experienced with programming concepts in CS Principles will be well equipped to start teaching CSA.  This means, we recommend that teachers are able to independently write and debug an error-free function (or procedure) with one or more parameters and that uses conditional logic, loops, and an array (or list). 
</details>

<div style="clear:both"/>

<details>
<summary><strong>Can I teach CSA as a non-AP course?</strong></summary>

Yes!  Our curriculum is written with the AP test in mind.  So, in the curriculum you will see reference to the Free-response questions and Multiple Choice questions that are on the AP exam.  That content might not be relevant for your students if they are not taking the AP exam.  That being said, you can still teach this course not as an AP course. 
</details>

<div style="clear:both"/>

<details>
<summary><strong>What are the College Board specific Curricular and Resource Requirements?</strong></summary>

The College Board names specific Curricular and Resource Requirements for each course.  Code.org’s curriculum meets the College Board’s curricular requirements.  For CSA, The College Board has named the following requirements. 

####AP Computer Science A curricular requirements:

<ul><li>The students and teacher have access to a college-level computer science textbook, in print or electronic format. (Note: Code.org doesn’t use a single textbook but rather provides teachers with slides, videos, and other written resources that meet this requirement)</li>

<li>The course provides opportunities to deepen student understanding of the required content outlined in each of the units described in the course and exam description.</li>
<li>The course provides opportunities to deepen student understanding of the big ideas.</li>
<li>The course provides opportunities for students to develop the skills related to the computational practices:<ol>
<li>Computational Practice 1: Program Design and Algorithm Development</li>
<li>Computational Practice 2: Code Logic</li>
<li>Computational Practice 3: Code Implementation</li>
<li>Computational Practice 4: Code Testing</li>
<li>Computational Practice 5: Documentation</li>
</ol>
<li>This course provides students with hands-on lab experiences to practice programming through designing and implementing computer-based solutions to problems.</li>
<li>The course includes a structured-lab component composed of a minimum of 20 hours of hands-on lab experiences. </li>
<li>The course teaches students to recognize the ethical and social implications of computer use.</li>
</ul>

####AP Computer Science A resource requirements:
<ul>
<li>The school ensures that each student has a college-level textbook (in print or electronic format) for individual use inside and outside the classroom. The textbook is supplemented when necessary to meet the curricular requirements.</li>
<li>The school ensures that the teacher has a copy of the most recent edition of a college-level computer science textbook or other appropriate materials to support instruction.</li>
<li>The school ensures that each student has access to the AP Computer Science A labs.</li>
<li>The school ensures that each student has access to a computer for a minimum of 3 hours a week; additional time is desirable. The computer system must contain appropriate software to create and edit programs and must allow programs comparable in size to the current AP Computer Science A labs to compile in seconds. Internet access is strongly encouraged.</li>

</ul>

</details>

<div style="clear:both"/>

<details>
<summary><strong>How do I submit the course audit?</strong></summary>

Teachers can submit the AP Course Audit for AP CSA on the <a href="https://apcentral.collegeboard.org/courses/ap-computer-science-a/course-audit" target="_blank">College Board Website</a>. If you are using Code.org’s materials for AP CSA, the audit process will be streamlined because our syllabus for AP CSA has already been approved by the College Board.  You will be able to select Code.org as your resource and/or textbook and adopt our “Endorsed Provider Syllabus” when you complete the audit. 
</details>

<div style="clear:both"/>
MARKDOWN
