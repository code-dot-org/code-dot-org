name 'PDAlg 8-12 Examples'
skip_dialog true
markdown <<MARKDOWN
# Lessons 8-12 > Working with Examples

Like with Circles of Evaluation and Contracts, Examples are one of those things that "quick" students will consider unnecessary at first. If a problem is easy enough to solve in your head, why go through the trouble to write examples for it? But just as we've seen with the Circles of Evaluation and the Contracts, if you don't get into the practice of using this new tool when the problems are easy, you're setting yourself up for failure when the problems become too difficult to solve in your head. But, there's another great reason to get into the habit of using examples - it's how professional software developers work!

## Test cases

Examples _are_ a great tool to help students build pattern recognition skills, but in the Computer Science world they serve another purpose, as test cases. Test cases, or unit tests, let programmers write self-testing code. With unit tests in place, any updates or feature additions that might break your program would trigger a failed test, saving programmers a ton of time and preventing bugs from going unseen until the public gets their hands on your software.

## Running your examples

You'll see that examples each have a _Test_ button underneath them. Clicking the _Test_ button will do two things. First, it will run your example code in the play space so you can see what it produces. Second, it will compare the example against your definition, letting you know whether it does or does not match the definition.

![examples](//studio.code.org/script_assets/pd/examples.gif)

The examples will be tested again when you run your entire program, and you'll get a warning if your examples don't match your definition.

<a class="btn btn-large btn-primary next-stage submitButton">Continue</a>
MARKDOWN
