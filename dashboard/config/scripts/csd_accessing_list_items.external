name 'CSD: Accessing List Items'
display_name 'Accessing List Items'
markdown <<MARKDOWN
# Lists

## Accessing Items of List

A list is comprised of many locations. You can individually set or reference the information at each location of your list just like a variable. To tell your locations apart each has a separate number, or **index**, that identifies it.

Lists in JavaScript are **zero-indexed** which means the first index is 0. This is similar to binary number systems which begin counting at 0. For example a list of 10 items would have indexes 0-9. As a result **the last index is always one less than the length of the list**. 

**Accessing List Items by Index:** If you know the index of the item you wish to access you can reference it using square brackets `list[index]` . The example below prints the value of the 4th element in the list.  

![](https://images.code.org/8b2da597fccaeeafb30b04991074cd8b-image-1447365422277.56.45 PM.png)

## Accessing Index that Don't Exist
If you try to access an index that does not exist the program does not know what information you were trying to get.  For example if I had the following list of 3 items:

` var myList = ["dog", "cat", "pig"] `

If I tried to access an index less than zero or greater than 3 the program would evaluate that to be undefined since it has not been defined in my code. All of these would print 'undefined' in the console.

`console.log(myList[-1]);` <br>
`console.log(myList[3]);` <br>
`console.log(myList[20]);` <br>


## Expressions as Indexes

We can use **any expression that evaluates to a number** as an index in an array. Here are some examples:

![](https://images.code.org/6d4ecc9249dc9f3a845196b04d833c1a-image-1447268711944.24.53 PM.png)

One way this is often used it to get a random item out of a list.  For example if I had the following code:

` var myArray = ["Red", "Orange", "Yellow", "Green", "Blue", "Purple"]; `

I can get a random color from this array using:

` myArray[randomNumber(0,5)]; `

Notice that we are generating random numbers from 0 to 5 because list start with index 0 and end with index 1 less than the total number of items.
MARKDOWN
