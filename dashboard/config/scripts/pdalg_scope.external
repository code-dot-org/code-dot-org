name 'PDAlg Scope'
title 'Scope and Sequence'
css 'unplugged'
markdown <<MARKDOWN
<style type="text/css">
table {
   width: 100%;
   margin-bottom: 20px;
}
tbody tr:nth-child(even) {
   background-color: #ddd;
}
td {
    vertical-align: top;
    padding: 5px;
}
</style>
## CS in Algebra Scope and Sequence

The Code.org CS in Algebra curriculum is designed to be integrated into any class where you would already be teaching algebraic functions, whether it's as a first taste in pre-Algebra, a core component of Algebra I, or review/remediation in other courses.

### Where will this fit in my class?

Look over this table of major topics covered, and compare it to the scope and sequence of the class(es) in which you will be teaching CS in Algebra. Where is the overlap? How might you integrate this into your course?

### Course A (the focus of this Professional Learning Program)
| Unit of Study | Description | Standards |
|----------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------|
| <h4>Contracts, Strings and Images</h4> | Students are introduced to a set-mapping representation for functions, in which the function translates points from a Domain to a Range. Students generalize their understanding of functions to include Strings and Images. | <ul><li>F-IF.1-3</li></ul> |
| <h4>Defining Functions</h4> | Students define values of various types, as well as linear functions. | <ul><li>A-SSE.1-2</li><li>F-IF.1-3</li><li>7.EE.4.a</li><li>F-BF.1-2</li></ul> |
| <h4>The Design Recipe</h4> | Students are introduced to the process for deriving functions from Word Problems using worked-through examples, called the Design Recipe. | <ul><li>8.F.1</li><li>F-IF.1-3</li><li>F-IF.4-6</li></ul> |
| <h4>Animation with Linear Functions</h4> | Students solve Word Problems that describe animation, and define functions that map character positions in their game from one frame to the next. | <ul><li>F-LE.5</li><li>F-IF.7-9</li></ul> |

### Course B (optional followon course, not covered in this program)
| Unit of Study | Description | Standards |
|----------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------|
| <h4>Video Games and Coordinate Planes</h4> | Students reverse-engineer a simple video game into a series of coordinates, and explore Cartesian space. Once they are comfortable with coordinates, they brainstorm their own games and begin programming simple arithmetic expressions with Evaluation Blocks. | <ul><li>A-SSE.1.2</li><li>N-Q</li><li>6.NS.6</li><li>6.NS.8</li></ul> |
| <h4>Boundary Detection</h4> | Students discover Boolean types and inequalities in the plane, and use them to create programs that test locations of a character on the screen. They then solve Word Problems that deal with Boundary-Detection, writing code to detect when a character has gone off-screen. | <ul><li>6.EE.b.5</li><li>7.EE.3</li><li>8.IF.1</li><li>A-CED.1-4</li></ul> |
| <h4>Piecewise Functions</h4> | Students use geometry and conditional branching to move their player characters in response to key-presses. The Word Problem for key-events describes a function that behaves differently under different sub-domains, requiring students to learn about Piecewise Functions. | <ul><li>A-SSE.1-2</li></ul> |
| <h4>Collision Detection</h4> | Students derive, discuss, and prove the Pythagorean theorem, then use this theorem—in conjunction with Booleans—to detect collisions in their games. | <ul><li>8.G.6</li><li>F-IF.1-3</li><li>F-IF.4-6</li></ul> |

<a class="btn btn-large btn-primary next-stage submitButton">Continue</a>
MARKDOWN
