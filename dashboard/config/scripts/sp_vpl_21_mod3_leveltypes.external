name 'SP-VPL-21-mod3-LevelTypes'
title 'title'
description 'description here'

markdown <<MARKDOWN
# Levels types

<img src="https://images.code.org/fee3b12c1bc5874413af0ce621aa53b1-image-1626106561565.14.54 AM.png" style="float: right; height: 100px; clear: both; margin: 0 20px 20px 0;">

#### When students are on the computer, activities look like a series of bubbles, called **levels**, that students complete in order. Read the information below to learn more about the different types of levels found in the CS Discoveries curriculum.

## Level types in a non-programming lesson:

##### **Exploration:** These levels present students with sample programs that use the concepts they are about to learn. These are best completed in pairs or as whole-class discussion. 


## Level types in a programming lesson:

<img src="https://images.code.org/4fa14577d3df12b751f0180abe31a59d-image-1626140147991.35.26 PM.png" style="float: right; height: 250px; clear: both; margin: 0 20px 20px 0; padding-left: 30px">

##### **Skill building:** These levels are usually targeted tasks that are focused on specific skill building rather than open ended creation. At the beginning of a lesson, these tasks are highly scaffolded, and this scaffolding falls away as students develop the target skills. Types of skill building levels:

<details>
<summary><strong>Predict levels</strong></summary>

Predict levels prompt students to actively engage with working code before coding for themselves.   Students read working code, discuss with a partner, and predict what it will do before running the code themselves.  After running the code, students investigate the working code with partners or in a large group to make sense of how the code works.  Whole group discussions about the working code replace direct instruction about the concept being introduced.
</details>

<details>
<summary><strong>Video levels</strong></summary>

Videos provide direct instruction on certain topics throughout the curriculum. Relevant videos are embedded within the “Help and Tips” tab, so that students can access them at any time in the online progression. Each video includes discussion questions, and teachers are encouraged to review and discuss the videos as a class to help students synthesize what they have learned.
</details>

<details>
<summary><strong>Programming levels</strong></summary>

Programming are usually targeted tasks that are focused on specific skill building rather than open ended creation.  At the beginning of a lesson, these tasks are highly scaffolded, and this scaffolding falls away as students develop the target skills.
</details>

##### **Practice:**  These levels include multiple opportunities for students to practice the skills they have just acquired. Students choose from various activities, with the guidance of a teacher. These levels usually fall before an assessment and allow for differentiation in the ways and amount that students reinforce the target skills.

##### **Assessment:**  Assessment levels are levels that can be used to assess student mastery off the target skill of the lesson. These levels are marked with a purple bubble and a small check mark. Some assessment levels include multiple choice or matching levels that are auto graded. Teachers are able to view and provide feedback on programming assessment levels. 

##### **Challenge:** These levels include multiple opportunities for students to create and build new skills. Challenge levels often expand on content presented in the lesson and offer additional opportunities for open-ended creation. Students do not need to complete the challenge levels to meet the objectives of the lesson. 

## Level types in a project lesson:

##### **Project:** In these levels, students build more extensive programs using skills learned throughout the unit. Project levels are often accompanied by an activity guide that is intended to help students plan their project and reflect on their process.  


MARKDOWN
