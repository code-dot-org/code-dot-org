name 'SP-VPL-CSA-22-mod3-compound-assignment-map'
title 'title'
description 'description here'

markdown <<MARKDOWN
# Compound assignment operator 

Frequently when writing code we want to do a mathematical operation to an existing variable.  For example, you might want to double the value stored in an existing variable.

```
int num = 8;
num = num * 2;
```

Or we might want to add a number to the value stored inside an existing variable:

```
int pointsScored = 7;
pointsScored = pointsScored + 3
```

While each of these above examples will work as expected, in each of these cases we can also use the **compound assignment operator** to accomplish the same goal.  The table below shows what this looks like for each of the mathematical operations we have covered so far.

| Compound assignment operator | Example statement | Equivalent statement   |Description    |
| :---:        |    :----:   |          :---:   |:---      |
| `+=` | `num += 3;`  | `num = num + 3`  |Add 3 to the value stored in `num`. Store the updated value in `num`. |
| `-=` | `num-=5;`    | `num = num - 5`  |Subtract 5 from the value stored in `num`. Store the updated value in `num`.|
| `*=` | `num*=2;`    | `num = num *2`   |Multiply the value stored in `num` by 2. Store the updated value in `num`.|
| `/=` | `num/=10;`   | `num = num / 10` |Divide the value stored in `num` by 10. Store the updated value in `num`.|
| `%=` | `num%=2;`    | `num = num % 2`  |Divide the value stored in `num` by 2 and store the reminder in `num`. |


## Example
You can use the compound assignment operator whenever you want to apply a mathematical operation to the value stored inside the variable.  Consider the example code:

```
1. double cupsOfFlour = 1.5;  			// declare and initialize the value of cupsOfFlour
2. cupsOfFlour *= 2;					// use the compound assignment operator to double the value stored in cupsOfFlour
3. System.out.println(cupsOfFlour); 	// print the value stored in cupsOfFlour
```

**Explanation:** After running this code, `3` will print to the console.  The value of `cupsOfFlour` is updated on line 2 using the compound assignment operator `*=`.  This doubles the value stored in `cupsOfFour`.  On line 3, the new value stored in `cupsOfFlour` is printed to the screen. 

## Additional resources
*  <a href="https://runestone.academy/ns/books/published/csawesome/Unit1-Getting-Started/topic-1-5-shortcutoperators.html" target="_blank">CS Awesomeâ€™s chapter on compound assignment operators</a>

* <a href="https://codehs.com/textbook/apcsa_textbook/1.5" target="_blank">CodeHS's chapter on compound assignment operators</a>


MARKDOWN
