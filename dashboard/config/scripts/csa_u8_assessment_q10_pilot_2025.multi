name 'CSA U8 Assessment q10_pilot-2025'

wrong '0'
wrong '1'
wrong '4'
right '5'
wrong '6'

markdown <<MARKDOWN
Consider the following code segment.

```
public static int getLocation(int[] arr, int findMe) {
  for (int i = 0; i < arr.length; i++) {
    if (arr[i] == findMe) {    // check
      return i;
    }
  }
 
  return -1;
}
 
int[] nums = {11, 28, 5, 25, 86};
int location = getLocation(nums, 86);
```

How many times does the line labeled `// check` get executed?
MARKDOWN

allow_multiple_attempts true
teacher_markdown <<MARKDOWN
The `if` statement checks the condition `arr[i] == findMe` within the `for` loop. Here's how the condition is checked:

1. In the first iteration of the loop, `arr[i] == findMe` is checked when `i` is `0`. The value of `arr[i]` is `11`, which is not equal to `findMe` (`86`).

2. In the second iteration, `arr[i] == findMe` is checked when `i` is `1`. The value of `arr[i]` is `28`, which is not equal to `findMe` (`86`).

3. In the third iteration, `arr[i] == findMe` is checked when `i` is `2`. The value of `arr[i]` is `5`, which is not equal to `findMe` (`86`).

4. In the fourth iteration, `arr[i] == findMe` is checked when `i` is `3`. The value of `arr[i]` is `25`, which is not equal to `findMe` (`86`).

5. In the fifth iteration, `arr[i] == findMe` is checked when `i` is `4`. The value of `arr[i]` is `86`, which is equal to `findMe` (`86`).

Therefore, the condition in the `if` statement is checked five times before finding a match, as it goes through each element of the array `nums`.
MARKDOWN
