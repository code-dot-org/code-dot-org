name 'OPD-K5 GettingStarted2'
skip_dialog true
markdown <<MARKDOWN
# Curriculum Overview

<img src="https://images.code.org/835eab960f43b5a947d41450fcb488cf-image-1622754945281.png" class="level-image">
The CS Fundamentals curriculum incorporates a variety of teaching and learning strategies to support  equitable and engaging learning environments.

## Course Structure

Each course is designed to stand alone and does not require a student to take a course in sequence. This means students can begin learning CS with any age appropriate course.

## Lesson Types

**Context-setting Lessons** introduce students to concepts, usually in a hands-on way and often without computers.

**Skill-building Lessons** typically involve programming on the computer and are designed to give students structured practice with a new tool or concept.

**Mini-Project Lessons** are part of courses C-F (grades 2 - 5), on the computer for students to apply what they have learned by creating a more extensive program step-by-step.

**Exploratory Lessons** introduce essential concepts on the computer, but may not be directly related to other lessons in the course.

**End of Course Projects** are open-ended lessons found at the end of each course.

## Lesson Structure

All lessons have the same components:  

* Warm Up
* Main Activity
* Wrap Up

Lesson have different types of levels to support student learning.  

* **Online** levels include Code.org tools - Artist, Play Lab, and Sprite Lab.  
	* You will use and learn more about these tools during the second portion of this online course.
* **Video** levels introduce new tools or explain new CS Concepts.
* **Lesson extras** levels are at the end of each lesson and optional for students to revisit concepts.

In addition, each type of level has a specific purpose such as:

* engaging students to make predictions.
* challenging students to test students' persistence.
* free play to help students get creative.


MARKDOWN
