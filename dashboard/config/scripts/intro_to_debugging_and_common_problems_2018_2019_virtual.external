name 'Intro to Debugging and Common Problems_2018_2019_virtual'
editor_experiment ''
title 'title'
css 'unplugged'
description 'description here'
href 'path/to/html/in/asset/folder'
markdown <<MARKDOWN
# Learning How to Debug Programs

Debugging is a skill and an art.  With practice you learn how to write relatively bug-free code and more importantly you **learn about yourself and the kinds of errors you typically make**.

But learning how to debug takes some time and getting used to, and you will learn about the different kinds of things that can go wrong when you write programs.

It bears repeating:

* Debugging is part of the problem-solving process of programming.  
* Be a Pro! Even professionals do not expect to write bug-free code on the first try!!!
* Don't Worry! We'll Practice.

# Common Types of Errors
In the next few levels we'll practice debugging a few common types of errors.

 * Things you misspelled or wrote in such a way the computer doesn't understand what you're trying to say
 * The program runs but doesn't do what you think it should.
MARKDOWN

teacher_markdown <<MARKDOWN
### Teaching Tips

Here's an off-the-wall metaphor you might consider trying with your students: **programming and debugging is like getting dressed up to go out.** (stay with me).

* You put on some clothes that you think will look good but then you have to look in the mirror, make some adjustments and decisions, maybe even realize you need to go a different direction entirely, and so on -- you are debugging your outfit.

* Writing a program initially is like throwing on some clothes, and running the program is like looking in the mirror for the first time. You do it to see what it looks like, knowing that you're going to have to make some adjustments.  

* But looking in the mirror frequently to see what everything looks like together actually *speeds up the process*. Getting ready to go out, putting on makeup or combing your hair *without* looking in the mirror would not only slow things down, it's foolish.

* The **Run. Test. Debug.** pattern of behavior is part of the programming process, just like using a mirror is part of making yourself presentable.
    
Understanding that debugging is part of the problem solving process is a **key understanding and behavior** we want to see from students. Many early programmers express frustration when code they write doesn't work the first time, or report that the "computer hates me!".  Or that if they write a program that doesn't work or has problems that they are "dumb" or that they'll never get it.  This is *exactly the wrong attitude to have*.  

Writing a program is not like solving some big problem with blinders on and then checking at the end to see if you were right.  It's a process of writing and making adjustments.

MARKDOWN
