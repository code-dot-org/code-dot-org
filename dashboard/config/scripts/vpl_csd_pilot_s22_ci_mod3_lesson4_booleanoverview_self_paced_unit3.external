name 'VPL-CSD-PILOT-S22-CI-mod3-lesson4-booleanOverview_self-paced-unit3'
title 'title'
description 'description here'

markdown <<MARKDOWN
# Boolean Expressions

> #### **Boolean Expression** - in programming, an expression that evaluates to True or False.

## What do my students need to know about booleans?

##### Students should be able to explain that a Boolean expression is something that is either true or false, similar to a yes or no question.  The more formal way to say this is that Boolean expressions **evaluate** to either true or false.  That means that when the computer processes a Boolean expression, it checks to see whether the expression describes a situation that is true or false, and then uses the value of either true or false wherever the expression is found.

##### Some examples of Boolean expressions that **evaluate to true** are 

* ##### `3 > 1`
* ##### `4 <= 7`
* ##### `5 == 5`

##### Some examples of Boolean expressions that **evaluate to false** are

* ##### `4 == 7`
* ##### `mySchoolName == "Hogwarts"`
* ##### `currentYear < 1000`. 


##### Notice that some of the above examples compare numbers, while others compare **variables** with numbers. In the course of Unit 3, you should be encouraging students to use variables in boolean expressions, such as `studentAge < 70` or `sizeOfClass > 2`.




## Comparison Operators

<img src="https://images.code.org/24e0257c5881dc6e6f005f4188dbc865-image-1680978846878.png" style="width:700px; margin-left:80px;" alt="An image that shows various comparison operators">

##### A common type of condition to check is a comparison of two values.  Above are 6 common **comparison operators**. Each compares a value on the left with a value on the right and returns a Boolean value: **true** or **false**.  Most of these do what you would expect. 

## Why these symbols: **==**, **!=**, **<=**, and **>=**?

##### We use `==` because the single equal sign <code>=</code> is the assignment operator. We need something different to indicate we want to compare two values instead of assign one to the other.

> ##### **Common mistake:** Students may write `if (age = 18)`  instead of `if (age == 18)`. Encourage them to check their boolean statements carefully for this error.

##### We use `!=`, `<=`, and `>=` because they only require symbols easily represented on a computer. Historically the mathematical symbols <code>&ne;</code>, <code>&le;</code> and <code>&ge;</code> were hard or impossible to produce on some systems.  The `!` is universally read as "not".
MARKDOWN
