name 'Project Breakdown: Image Scroller'
css 'unplugged'
markdown <<MARKDOWN

# Project Breakdown: Building an Image Scroller

<img src="https://images.code.org/4db9acaf41436546676ea67fef5a2239-image-1487093024285.gif" style="width: 300px; float: right; margin-left:20px">

At surface level, this project looks to be a simple upgrade to a game that students have already created. They will learn about how to add key events to their Image Scroller, and then will elaborate on the design of the app to add any unique features they would like. In doing so, they will practice the key skill of refactoring their code - and this should be the true focus of the project.  Most applications you use are not based on static pieces of code. Instead the software will be continuously updated both to correct errors and introduce new pieces of functionality. If later improvements are anticipated it is generally possible to develop programs in a way that easily incorporates new functionality. At other times it is necessary to make larger changes to the way a program operates in order to incorporate new features while maintaining existing functionality. Refactoring code in this way can be a tedious and challenging endeavor, but it helps ensure that the final product is consistent and easy to maintain. If software is not kept in a logical, consistent, and succinct form, then it will only get harder to keep introducing new features, increasing the likelihood of errors.  This project will hopefully be a learning experience for students: if the work of refactoring their code is tedious now, they will be more likely to consider the structure of their code in the future and apply best practices to reduce work for their future selves.

## Vocabulary:

**Key Event** - in JavaScript an event triggered by pressing or releasing a key on the keyboard. For example: "keyup" and "keydown" are event types you can specify. Use event.key - from the "event" parameter of the onEvent callback function - to figure out which key was pressed.

## Notes about Scaffolding and Structure:

**There are two major things happening in this lesson:**<br>

	1. Using the event parameter from onEvent to determine which key was pressed.
    2. Modifying the "My Favority Things" Apps made in the last lesson.

**Helping Students with Incomplete "My Favorite Things" Apps:**
It is quite possible that some of your students will not have succeeded in creating the text version of the My Favorite Things app. Since this lesson asks students to extend that project, it might be a challenge for those students to participate. Some strategies are below.

- Let students continue working on the text version of their app. While this lesson introduces new event types, it falls in a sequence focused on arrays. Students can still participate in discussions about refactoring code and will be exposed to the new key events.
- Provide students the exemplar version of the text-based My Favorite Things app. They can Remix the project and work on it in Free Play mode (i.e., outside of the curriculum). This way, they have a clean starting point and focus on the content of the lesson. If they wish, students can copy the code into Code Studio and will only need to create the UI elements themselves.


##Below is a sample Image Scroller:

MARKDOWN
