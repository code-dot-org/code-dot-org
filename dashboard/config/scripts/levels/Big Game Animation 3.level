<Studio>
  <config><![CDATA[{
  "game_id": 33,
  "created_at": "2015-02-12T18:12:33.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "studio",
    "success_condition": "function () {\r\n  if (!Studio.bigGameStarted || Studio.levelRestarted) {\r\n    Studio.bigGameStarted = true;\r\n    \r\n    // Attach student defined update functions to appropriate sprites\r\n    Studio.sprite[0].update = function(key){\r\n      this.y = this.y + (this.y - Studio.Globals.update_player(key, this.y));\r\n    }\r\n    Studio.sprite[1].update = function(){ this.x = Studio.moveX(this, Studio.Globals.update_target) }\r\n    Studio.sprite[2].update = function(){ this.x = Studio.moveX(this, Studio.Globals.update_danger) }\r\n    \r\n    // Target and Danger need to check onscreen? before moving\r\n    Studio.moveX = function(sprite, updateFunc) {\r\n      var newX = sprite.x;\r\n      if (Studio.Globals.onscreen_(sprite.x + 50) || !sprite.backonscreen){\r\n        newX = updateFunc(sprite.x);\r\n        if (!sprite.backonscreen){\r\n          sprite.backonscreen = Studio.Globals.onscreen_(sprite.x + 50);\r\n        }\r\n      } else if (sprite.visible) {\r\n        Studio.setSprite({spriteIndex:Studio.sprite.indexOf(sprite), value:\"hidden\"});\r\n        setTimeout(Studio.resetSprite, 1000, sprite);\r\n      }\r\n      \r\n      return newX;\r\n    }\r\n    \r\n    // If Target or Danger goes off screen, reset them to the opposite side, random y value\r\n    Studio.resetSprite = function(sprite) {\r\n      if (sprite.dir == 2){\r\n        sprite.x = 0 - sprite.width;\r\n      } else {\r\n        sprite.x = 400;\r\n      }\r\n      sprite.y = Math.floor(Math.random() *Â 300);\r\n      sprite.backonscreen = Studio.Globals.onscreen_(sprite.x + 50);\r\n      Studio.setSprite({spriteIndex:Studio.sprite.indexOf(sprite), value:\"visible\"});\r\n    }\r\n  }\r\n  \r\n  if (document.getElementById('titleScreenTitle').getAttribute('visibility') == \"hidden\") { // Don't start until the title is over\r\n    Studio.sprite[1].update();\r\n    Studio.sprite[2].update();\r\n    for (key in Studio.keyState) {\r\n      if (Studio.keyState[key] === 'keydown') {\r\n        Studio.sprite[0].update(key);\r\n        console.log(key);\r\n      }\r\n    }\r\n    \r\n    for (btn in Studio.btnState) {\r\n      if (Studio.btnState[btn]) {\r\n        if (btn === 'leftButton') {\r\n          Studio.sprite[0].update(37);\r\n        } else if (btn === 'upButton') {\r\n          Studio.sprite[0].update(38);\r\n        } else if (btn === 'rightButton') {\r\n          Studio.sprite[0].update(39);\r\n        } else if (btn === 'downButton') {\r\n          Studio.sprite[0].update(40);\r\n        }\r\n        console.log(btn);\r\n      }\r\n    }\r\n  }\r\n}",
    "failure_condition": "function () {\r\n}",
    "timeout_after_when_run": "true",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,16,0,0,0,0],[16,0,0,0,0,0,16,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "embed": "false",
    "instructions": "The 'update-danger' function should work just like 'update-target', except that the danger should move from the right side over towards the left. Complete the 'update-danger' function to make the danger fly across the screen.",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "true",
    "default_num_example_blocks": "2",
    "project_template_level_name": "Big Game Template",
    "free_play": "true",
    "disable_sharing": "true",
    "edge_collisions": "false",
    "projectile_collisions": "false",
    "allow_sprites_outside_playspace": "true",
    "sprites_hidden_to_start": "true",
    "coordinate_grid_background": "false",
    "generate_function_pass_blocks": "true",
    "callout_json": "[\r\n  {\"localization_key\":\"Big Game Animation 3\",\"callout_text\":\"Edit this function to animate the danger\",\"element_id\":\"#game_update_danger\",\"on\":\"\",\"qtip_config\":{\"position\":{\"adjust\":{\"x\":null,\"y\":null},\"my\":\"left center\",\"at\":\"right center\"},\"style\":{\"classes\":\"\"}}}\r\n]",
    "step_speed": "50",
    "maze_data": null
  }
}]]></config>
  <blocks/>
</Studio>