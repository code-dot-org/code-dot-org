<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-04-03T15:51:25.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A news website wants to analyze the most common topics in their articles. They have a method called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findMostCommonTopic()</code> that counts the number of times words appear in an article, which calls the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getMostCommonTopic()</code> method to return the most common topic.\r\n\r\nâœ… **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Website</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getMostCommonTopic()</code> method to return the most common word in the list of articles.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nðŸ’¡ <strong>TIP:</strong> Words like <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"the\"</code>, <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"a\"</code>, and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"of\"</code> are called <strong>stop words</strong> in natural language processing. Use the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">isNotStopWord()</code> method to check that the topic is not a stop word when searching for the most common topic.\r\n</div>\r\n\r\nâœ… **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">WebsiteRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">findMostCommonTopic()</code> method and print the result.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Common Topics",
    "bubble_choice_description": "A news website wants to analyze the most common topics in their articles.",
    "thumbnail_url": "https://images.code.org/336a507a7a9575cc8e421aa2b6e3b4f2-newspaper.png",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\n4U3D0mQ9ERf71izCILbODCwXerrI0LZDpPTJuKE2c0uZnXzC4vWd2SSjXP84\nstd5MtWYLTVT7oQSF4zguAE7YcFl5kEB+Z31XbALf8TNElnl6hMSe0pqKx9W\nDTOtmAt7DDM+4O4GvP8g+mTzDCGc1/J5sb3oEklXQgaAfF7LUq8Gc+t2WTrY\nqdxN1PCK6Bs9oohfazQG6tuteCbOl71QvMiOWW7lMPD4Qe4NVvazQnsYtaGD\n09zrSBZqJVFYqTKn7sXM2VUF696FofoNy00gKEAXSiuEml1kjfxgeNdn++tF\nR4hbRhlFkfja2YR3dPXYRZfAQc1HcUk2FAnaO6j4P3HCWy/6JVyCqWzssExv\npU8k6NQa1sFQ0CjRpfr+BqTQRgMBNj3eG0pnrP3jEn4sdVXUo6y+whMZvqYd\n0LTs2UI6XSfMWPG5H8Lixvkpdh/IJTTnW1QbBbllx4212jo89DXpb2vyCMUU\nQb4ikBjwCYOHUdbNyQ9sT0macoMuRcChqD0hLkw7KjKRXhP1V2viMIj43f5J\njXPPY2QfDm94hPCVqYcdstYPoErkZAnI9d8M6w/LIo5PUI0OX02qhaObybPz\n6L/9+ynG8ht/qWj6q0aZJNKbhyNFkfQl3xY6vd5fFQn9N9glymVqiemIJxft\nmvN5/z0KhYSTOeDCfqJu33v+9NE1+7Os8UNAmxD8v9Hh0jaB208hB6y70gJv\nBODq736YjomdR2t/cTW3xf+h6zCjQVv9+aVPzZjdnJ4MmKU2BayMycqGhlNn\nIHbET5zjFT4qcYFDu+y7LlDiOwIEg3CUoGL/wjMfDUbXwjJ/GXOBTc4pYr/l\nOGY3zMflcR6pRsmNqfsZhZ+sRogNrZr7M2A4s7ZxB/3PlmEmWMz7tlmmlH81\n8T7gKs+WKNVAo7NN2RFZHhwDHpAGChvXRsycwu2zbJ4MCw7y7h0ygFo5x6Li\nSW0lu1oTw4QmPDhPpiUtto0EQ4v+gWGpQxHHZLRTd64lM1wUzo45uIPdfa+G\nmv/FI/5qC2LL1BYI/FuAAZ4X/PuLqb+UmwISrJ2Acj9EilnNN/rhYGO4uGJr\nJ6lsY34WmOXk6FKr3F9dqV0/cOLr0s6ES3OnTrkajpu/C2Ks0urlzuuStdKm\nW477jQ2x4ZBbwJCfc8Pwn6+e8Lvdyh9QWRECckUpmmIPx3+2eIanBqUn2j/B\n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\n",
    "start_sources": {
      "WebsiteRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class WebsiteRunner {\n  public static void main(String[] args) {\n\n    // Creates an ArrayList of articles\n    ArrayList<String> articles = new ArrayList<String>();\n    articles.add(FileReader.textToString(\"ramen1.txt\"));\n    articles.add(FileReader.textToString(\"ramen2.txt\"));\n    articles.add(FileReader.textToString(\"ramen3.txt\"));\n    articles.add(FileReader.textToString(\"ramen4.txt\"));\n    articles.add(FileReader.textToString(\"ramen5.txt\"));\n\n    // Creates a Website object\n    Website news = new Website(articles);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… Call the findMostCommonTopic() method and print the results.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Website.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a news website\n */\npublic class Website {\n\n  private ArrayList<String> articles;    // The list of articles on the website\n\n  /*\n   * Sets the list of articles to the specified value\n   */\n  public Website(ArrayList<String> articles) {\n    this.articles = articles;\n  }\n\n  /*\n   * Returns the list of articles on the website\n   */\n  public ArrayList<String> getArticles() {\n    return articles;\n  }\n\n  /*\n   * Returns the most common word in the list of articles\n   */\n  public String findMostCommonTopic() {\n    ArrayList<String> topics = new ArrayList<String>();\n    ArrayList<Integer> counts = new ArrayList<Integer>();\n\n    for (int index = 0; index < articles.size(); index++) {\n      String currentArticle = articles.get(index);\n      int space = currentArticle.indexOf(\" \");\n\n      while (space != -1) {\n        String word = currentArticle.substring(0, space);\n\n        if (containsWord(word, topics)) {\n          incrementCount(word, topics, counts);\n        }\n        else {\n          topics.add(0, word);\n          counts.add(0, 1);\n        }\n\n        currentArticle = currentArticle.substring(space + 1);\n        space = currentArticle.indexOf(\" \");\n      }\n    }\n\n    return getMostCommonTopic(topics, counts);\n  }\n\n  /*\n   * Returns the topic that has the largest count\n   */\n  public String getMostCommonTopic(ArrayList<String> topics, ArrayList<Integer> counts) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * âœ… Traverse the counts list to find the largest count. Return the\n     * corresponding topic from the topics list that has the largest count. Use the\n     * isNotStopWord() method to check that the topic is not a stop word.\n     * -----------------------------------------------------------------------------\n     */\n    \n    \n\n    return \"\";\n  }\n\n  /*\n   * Returns true if the word is not a stop word, otherwise returns false\n   */\n  public boolean isNotStopWord(String word) {\n    ArrayList<String> stopWords = FileReader.toStringList(\"stopwords.txt\");\n\n    for (int index = 0; index < stopWords.size(); index++) {\n      String stopWord = stopWords.get(index);\n      \n      if (word.equals(stopWord)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /*\n   * Returns true if word is found in the topics list, otherwise returns false\n   */\n  public boolean containsWord(String word, ArrayList<String> topics) {\n    boolean status = false;\n\n    for (int index = 0; index < topics.size(); index++) {\n      String currentTopic = topics.get(index);\n\n      if (word.equals(currentTopic)) {\n        status = true;\n      }\n    }\n\n    return status;\n  }\n\n  /*\n   * Increments the count for a topic if the word is found in the list of topics\n   */\n  public void incrementCount(String word, ArrayList<String> topics, ArrayList<Integer> counts) {\n    for (int index = 0; index < topics.size(); index++) {\n      String currentTopic = topics.get(index);\n\n      if (word.equals(currentTopic)) {\n        counts.set(index, counts.get(index) + 1);\n      }\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  public static String textToString(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    String temp = \"\";\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp += currentLine + \"\\n\";\n    }\n\n    reader.close();\n    return temp;\n  }\n\n  public static ArrayList<String> toStringList(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    return temp;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      },
      "ramen1.txt": {
        "text": "Ramen, a staple in Japanese cuisine, has gained immense popularity all over the world. The dish\nconsists of Chinese-style wheat noodles, a meat or vegetable-based broth, and various toppings\nsuch as sliced pork, nori, and green onions. It's a hearty and comforting meal that has evolved\nover time to include various regional and international styles, such as spicy miso and tonkotsu.\nWhether you prefer it as a quick lunch or a warming dinner, ramen is a versatile and satisfying dish.",
        "isVisible": true,
        "tabOrder": 3
      },
      "ramen2.txt": {
        "text": "Ramen, a traditional Japanese noodle soup, is quickly becoming a global phenomenon. This\nhumble dish is often served in small, casual eateries and is typically made with Chinese-style\nwheat noodles, a savory broth, and various toppings such as pork, egg, and seaweed. The\npopularity of ramen has given rise to many regional variations, each with its unique flavor and\ningredients. From the fiery spice of the Tokyo-style ramen to the creamy richness of the\nHokkaido-style, there's a ramen for everyone.",
        "isVisible": true,
        "tabOrder": 4
      },
      "ramen3.txt": {
        "text": "In recent years, ramen has become a go-to comfort food for many people worldwide. This classic\nJapanese dish consists of noodles in a savory broth, topped with a variety of ingredients like\nchashu pork, soft-boiled eggs, and nori seaweed. Originally from China, ramen has evolved into\na distinctly Japanese cuisine, with countless regional variations and styles. Whether you prefer\nit spicy, creamy, or with a variety of toppings, ramen is a delicious and satisfying meal that\nhas captured the hearts of many.",
        "isVisible": true,
        "tabOrder": 5
      },
      "ramen4.txt": {
        "text": "Ramen, a dish that originated in Japan, has gained a cult following in recent years. This beloved\nsoup typically consists of Chinese-style wheat noodles, a flavorful broth made from bones or\nvegetables, and a variety of toppings like sliced pork, bamboo shoots, and fish cakes. Ramen shops,\nknown as ramen-ya, are found all over Japan and the world, each with its unique twist on the classic\ndish. Whether you're a fan of the rich and creamy tonkotsu or the bold and spicy miso, there's a\nramen for everyone.",
        "isVisible": true,
        "tabOrder": 6
      },
      "ramen5.txt": {
        "text": "Ramen, a hearty noodle soup, has become a beloved comfort food around the world. This dish, which\noriginated in Japan, typically consists of Chinese-style wheat noodles served in a savory broth and\ntopped with a variety of ingredients such as sliced pork, bean sprouts, and mushrooms. While\ntraditional ramen is made with meat-based broths, many variations cater to different dietary\nrestrictions, including vegetarian and vegan options. Whether you're looking for a classic bowl of\ntonkotsu or a spicy vegan miso, ramen is a delicious and versatile dish that is sure to satisfy.",
        "isVisible": true,
        "tabOrder": 7
      },
      "stopwords.txt": {
        "text": "a\nan\nand\nthe\nis\nin\nto\nat\nthat\nthis\nfor\non\nof\nwith\nare\nbe\nor\nnot\nfrom\nby\nbut\nwhich\nas\nit\nabout\ntheir\nthey\nour\nwe\nus\nyou\nyour\nwas\nwere\nhas\nhave\nhad\nwill\nwould\ncan\ncould\nshould\nshall\nmay\nmight\nmust\nsome\nany\nmany\nmuch\nfew\nevery\none\ntwo\nthree\nfour\nfive\nsix\nseven\neight\nnine\nten",
        "isVisible": true,
        "tabOrder": 8
      }
    }
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-03T15:51:25.039+00:00\",\"changed\":[\"cloned from \\\"CSA U6L7-L6d_2023\\\"\"],\"cloned_from\":\"CSA U6L7-L6d_2023\"},{\"changed_at\":\"2023-04-03 15:51:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 12:13:27 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 18:48:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 18:48:18 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 20:34:55 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 20:35:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 20:36:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 20:36:48 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 20:38:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 20:38:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 20:38:24 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 21:07:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 21:07:59 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 21:11:25 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 21:17:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 21:18:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 21:18:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 21:18:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 21:18:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
