<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In WordSorter.java:\r\n\r\n1. Write the `sortWords()`(#e7e8ea) method to sort the words in `wordList`(#e7e8ea) in order based on the number at the end of each word. Use a selection, insertion, or merge sort to sort the list.\r\n\r\n   * Call the `getNumber()`(#e7e8ea) method to get the number at the end of each word.\r\n   \r\n2. Write the `createSentence()`(#e7e8ea) method to return a `String`(#e7e8ea) consisting of the words in `wordList`(#e7e8ea) without the numbers at the end of each word.\r\n\r\n##In MyConsole.java:\r\n\r\n3. Call the `sortWords()`(#e7e8ea) method and print the updated array.\r\n\r\n4. Call the `createSentence()`(#e7e8ea) method and print the result.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "starter_assets": {
      "character01.png": "83506304-b06e-4d45-a64b-14749077cc26.png",
      "character02.png": "9bd90dd5-ff4a-4a24-8807-98049b53f371.png",
      "character03.png": "706988d3-9747-4639-878b-52155c9bf986.png",
      "character04.png": "8e506273-f71f-4b82-9141-a9756850a355.png",
      "character05.png": "604d7021-3b91-48aa-b2ff-7adc87fc59ba.png",
      "character06.png": "09238587-7673-4d8a-82ef-5163f1d7f93b.png",
      "character07.png": "9d5d4900-211a-4ca3-9933-93b4bbf0dfa9.png",
      "character08.png": "b25646ac-9dc7-4a7e-bd3e-a42ab75f1185.png",
      "character09.png": "caa61390-cedb-4d26-8ea1-b7de683527b6.png",
      "askQuestion.png": "92b5bbad-2113-44ba-ae4b-4e959a150de5.png"
    },
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] words = {\"is2\", \"sentence4\", \"This1\", \"a3\"};\n\n    System.out.println(\"----------Unsorted Words----------\");\n    WordSorter.printWords(words);\n\n    System.out.println(\"\\n----------Sorted Into Sentence----------\");\n    \n    // TO DO #3: Call the sortWords() method and print the updated array.\n    \n\n    // TO DO #4: Call the createSentence() method and print the result.\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "WordSorter.java": {
        "text": "/*\n * Manages lists of words\n */\npublic final class WordSorter {\n\n  /*\n   * Sorts the wordList in order according to the number\n   * at the end of each word\n   */\n  public static void sortWords(String[] wordList) {\n    // TO DO #1: Sort the words in order by the tagged number using\n    // a selection, insertion, or merge sort.\n    \n\n    \n  }\n\n  /*\n   * Returns the number at the end of the String\n   */\n  public static int getNumber(String currentWord) {\n    String number = currentWord.substring(currentWord.length() - 1);\n    return Integer.parseInt(number);\n  }\n\n  /*\n   * Returns a String without the number at the end\n   */\n  public static String createSentence(String[] wordList) {\n    // TO DO #2: Obtain a substring of currentWord without the number.\n\n\n    \n  }\n\n  /*\n   * Prints the list of words\n   */\n  public static void printWords(String[] wordList) {\n    for (String word : wordList) {\n      System.out.print(word + \" \");\n    }\n\n    System.out.println();\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "name_suffix": "_pilot-2022",
    "encrypted_exemplar_sources": "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\n",
    "display_name": "Word Sorter",
    "bubble_choice_description": "Sort a list of words based on the numbers at the end of each word to create a sentence from the words.",
    "thumbnail_url": "https://images.code.org/ec58ee6e950e2541f3086145ff83f7cd-writing.png",
    "encrypted_validation": "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\nCgJ13HijMMs+xA==\n"
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:57:12.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:57:12.804+00:00\",\"changed\":[\"cloned from \\\"CSA U8L9-L3c_2022\\\"\"],\"cloned_from\":\"CSA U8L9-L3c_2022\"},{\"changed_at\":\"2022-10-25 20:01:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-25 20:40:01 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-25 20:43:28 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-25 20:46:34 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-25 20:47:06 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-25 20:47:48 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-25 20:48:08 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
