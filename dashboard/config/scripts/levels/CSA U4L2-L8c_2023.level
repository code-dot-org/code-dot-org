<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `Solver`(#e7e8ea) represents a person that participated in the <a href=\"https://www.worldcubeassociation.org/\" target=\"_blank\">**World Cube Association**</a> competition and has instance variables for the name of the person and the time it took them to solve a Rubik's Cube in centiseconds.\r\n\r\n‚úÖ **TO DO #1:** In `Solver.java`(#e7e8ea),\r\n\r\n1. Declare and initialize a static variable called `fastestTime`(#e7e8ea) to `0`(#e7e8ea).\r\n\r\n2. In the `Solver`(#e7e8ea) constructor, check if the parameter `time`(#e7e8ea) is greater than `fastestTime`(#e7e8ea). If this is `true`(#e7e8ea), update `fastestTime`(#e7e8ea) to the value passed to the parameter `time`(#e7e8ea).\r\n\r\n3. Write a static method called `getFastestTime()`(#e7e8ea) that returns a `String`(#e7e8ea) containing the text `\"The fastest time so far is {fastestTime}\"`(#e7e8ea), where `fastestTime`(#e7e8ea) is the fastest time of all `Solver`(#e7e8ea) objects.\r\n\r\n‚úÖ **TO DO #2:** In `SolverRunner.java`(#e7e8ea), create several `Solver`(#e7e8ea) objects, such as:\r\n\r\n* Name: Max Park, Time: 363\r\n\r\n* Name: Asher Kim-Magierek, Time: 389\r\n\r\n* Name: Max Siauw, Time: 403\r\n\r\n* Name: Patrick Ponce, Time: 424\r\n\r\n* Name: Tanzer Balimtas, Time: 464\r\n\r\n‚úÖ **TO DO #3:** In `SolverRunner.java`(#e7e8ea), call the `getFastestTime()`(#e7e8ea) method and print the result.\r\n\r\nüí° **TIP:** Check out the **Help & Tips** tab ‚¨ÜÔ∏è for help with declaring and initializing a constant and writing a static method.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/constants",
      "/courses/csa-2023/guides/static-methods"
    ],
    "display_name": "Rubik's Cube Solvers",
    "bubble_choice_description": "Use static variables and methods to keep track of the fastest time it has taken someone to solve a Rubik's Cube.",
    "thumbnail_url": "https://images.code.org/396c695350dff06816a14f6f7df1470f-cube_of_rubik_1.png",
    "encrypted_validation": "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\n",
    "start_sources": {
      "SolverRunner.java": {
        "text": "public class SolverRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate several Solver objects, then call the getFastestTime()\n     * method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Solver.java": {
        "text": "/*\n * Represents a person that participated in\n * the World Cube Association competition\n */\npublic class Solver {\n\n  private String name;    // The name of a person\n  private int time;       // The time in centiseconds it took a person to solve a Rubik's Cube\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Declare and initialize a static variable called fastestTime to 0.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n  /*\n   * Sets name to the specified name and time\n   * to the specified time in centiseconds\n   */\n  public Solver(String name, int time) {\n    this.name = name;\n    this.time = time;\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Check if the parameter time is greater than fastestTime. If this is true,\n     * update fastestTime to the value passed to the parameter time.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write a static method called getFastestTime() that returns a String\n   * containing the text \"The fastest time so far is {fastestTime}\", where\n   * fastestTime is the fastest time of all Solver objects.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n  \n\n  /*\n   * Returns a String containing information about the solver\n   */\n  public String toString() {\n    return name + \": \" + time + \" centiseconds\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_exemplar_sources": "gk7ITjov23ab9OcDKr5oGmVExqv+CtlBQEnsEBmiZBPxJryYYwgp91M/znE5\n9lPs86nur2oAaxXGvoL4KyZYWMy3TnU68Cykvo47wI5Tcsp49o7he+aZqBX3\n3XHyMgzNE/9G/w4OTwkMJXoVAwX+vBHbWj13wTJPIPirIGp7j0flj1O35HY2\nOiQ0xo9Vnid0xdGeD2/yVxSdDCLownsT/QYuaaXuwEMAn/cJ0/yKxKYt5/Au\nSqdMR36UZjNuMsVEXeuhEIGp+rdBMRoFKPkAaRwYiqGgnk+luUd3LGj6L5rJ\nPAk2GVRgOaWC/W/ruNzY/wX+YWFmlaDplzT+p9GvIIoPihw9lKRP4C0YESPb\nrLzAxcOBkqPuUwl1MVx5HLekemnuEdo8qLJsJ1HRZiaUjWTVVT00A91lfS/p\nBeZ2uAiGTBMYAVaPAwcXPpH7cYFctJ5C6m5Ld+3UKHmdEwHKJqBt+g38y5zA\nXHwl3M+gCQNWh1MON92pviBlLMDLPKVxAUkIR0nzX4C26ftufW4+4BpAl2Q0\nFfYpy/YMN13ZicIGt8Kd7253yPD9UebMmLtmN7QDPLGxyi+ZkQIaHC1FcYWh\n3pIxMIjLP66PyJ2G4sHtUYV7eYqus8nZioH89s5rtUWcjeSCVK1a4h3RNaTC\n1ef0uQFHVdLdChP+eFGPuUDsSC9KfvYmS3FonXsEg8aZqzTddmLkh1IsY0Es\nGMQgf9PTCl6WHdf8pfaByW4XeRs1MoftTy1hsKLlmXFuYn8rOpJXtVR1BngJ\nR13BwjmQ1l7tKfa9RXU/qov/sRFd4+4kZENqbxCO5oKOti/WDOr0pLhClnBE\ngRvBXq7BthnUfUiCEaZFjv+NysfIY5BVpMeIUQhDa5ZbFI4oJm/87khpavWV\n/NZ169ymMUMwjpcfZyuQzOEJUsGNaJcCa0OtpnhQctO+li0Ivgg4aCoG0Hir\n2Mi9v1YXvxS1UV/0kHuLYbrPUZ7T7aMhjUYbRRTcx0HHUx1Q+SfcOoYkn92r\nTD783HDeITELUNL8bPK3G+kn3Q3xLRuw5Gn52sKgHWSwnaxf9DFV3LbFzMbb\nAIyWCOPApWDQoXKKZ33bv4iGGrkfcr7Bj/BwzmVHoe9o1N10Z9m/EZJOWKX6\nTF3miqMhxk8xMTSGIBgqn0l73e2ejBZ4QLoJK//hGISQrFzr7/ZZ4keJySLr\nJGqTeTi7mpnZsX7uH95YA1pUlY2HfXJMK1YEOMQqInCbEAJxy68R++evb/iX\na93fGLGSiIpFPgQzagkuAjrFfqF60FY1vvliPmM7+YYax90XbD4utIwRMiDn\nM0fmemsvePNM4JByGGNZjolJaRwhRipaqy6fU57344ZnMBH+7SGd/EDtZizD\njHWPLzLSGSVPY89yqoosntHQeD1IWXhleU6/vjcTK4rQbqUSX4b0K+x9sqb9\nlcLLRWrvRQWANVfnJI+MLkEQ7PBZIuoaklAHhx7rGhFqftF72l2PcVPkKthf\nCnPWZ9K7+FtB2X6ZRXJMwH6hjDeglvG2C81NO03RyOi55ZmU4pO2jIfLrrsk\n8zof/GAh4rNKEYuUgk51f+NEGonlnZClORJKKgPO5WFOBZ6rE3Yz9h6c7UOb\nb+KQ6Apfe/FGW3hQZ9b1txq3dGZsUCy/kcnNUs32jh0sqsswG9xK4PIAa7mU\nbbuI9mQXJ5Kk04UwTdZWgGlly4QDthBSJANPw7Q6rSp7qPmlOaSf98Seyhe/\nVxp8OruqFsGSbxo4uuiFrejA7wQ9BLgYJDtzhjg6O0pdVfyl0Eki+q0uDGBQ\nnO3bs06/QIA+4DKI550PCJWhH0T30q6y7aX67VEyaroG6k9ZJj7N7oJRQRob\nIygndEIvVVdxHFkmC4n7gfEIHnIC7eg3C4UMuLzdI+qXpVD2XjpokL5WWoVM\nvnxll+n7vezFvzIysu18UxwfdrddhmK4Sw0FFRvpO/oXVWL4WbHFkQm4WCSo\nTTHrMjttK1e/x9Glh4T4pz1oORq2w4wDpN+sBjjB/E3bSg8f+kpJMd82mq55\neSZJH20r2k0Vp5+QlXmEh2z8dERvBe1fCAJ23rGnI0LaVa9aZvsh4MUjsx/G\nziOmVlmVDXwi5O/QM3AlSF9TZ5IsOFC4cokGJOJ4gL9mXbftBKYMwmdaaD/7\nll7KongbO2XDy6JMATT46w3PGESudkpa7nZ7XgumavxHl6BqP7uQVenwedzH\n+oeM1U4t4MzCihckrD89gbZUnBtz51wn9ifBr1EG4+W4zs66aUFQ0EpSLUFt\n+DncYmlYl5e4FiS8qMAa3GmW7cb9zEo2FjP3Wl+iXIG52Qrw5akQiJ0mF9jY\nU9Utvt7Zya0+ng35O8fW9FxEByVJeNduHN+USTVRVLr0lsm6+P5gXaLFyKic\n+tVc09RoThJ95PPr26f16Qr5bwHf9tZPjnsHGgJSQ0GwjzO1q4GS0+8Uori5\n9g1f0ZvNMh4erkdCa1M9RHqEb0/S6IofSQWFrrOFIkNbCGM+0L9TxdobZnKn\nEXEpU+re9pHG8H/d4H703Xased+renrgZl+NJ3NZaCygDVr4+bwYqDpSfwm9\nvHr+u02U7iD/FCs23v5WMdI5uXg2vfZRjyt/r0w64DtvmeoDSYugMZrT5r/n\n4fE78qFVyG/7p2yxnlE/guYAPzgrJKe+ji4wtoESecMJ8fNzVlhopbHGIZyX\nkf9uSXjZ0KMe3TKBg590fSqytz2opKxKD/7GVXNV8S/6qH122lpLeHDkdXKR\nEQyEVDiC0OvibP6PLL6o5HpXHHDZZVbEDrs1/VxkRfiOXr3suwpDzhMMp9IT\nHDCzTOP9JAHWMK0erJA4zgdxe+nYkN5jT9Tg8aqfs1aakDYJIqs/RqE1XDa/\nsAHJ6xrgFS5ug5t7bnKb1/YbhQnj5ISKtrz05WS7OGz4OHNHNbgBizsMm8KJ\n9dFD7MWX7Dzfmdj/5DLBlycGoBfsGy6xeicyqbwkO9Kq681yMXJgTbWIcfjH\nROxXF9jsmz/F3inCqHV0wJtRc5b9fCb9kTOd2o81WY9ffa0flXOx54O9CgBJ\nIllqnSHSbN1Bt3hCpjgcvEfyhdYeEjbCo+5OmXpHkfryUr6ZEdgUu52VTXxm\n2N4bj74hQ7lo2vk9y7QSxl+VMcLqU1ftEVdFYON6nzSXvPeKjgUIABnKVMTa\nX0QQJA3oYCT8eVVoIeCZWMipzz1YeWwZYJR3Ulk4opOZPpaMXmHyNmnPIieq\nyn1nmTJrySDj1fB0aqF93rbcqxr/3EzZdVV4pe3r9XHNG03LhwJPkXrefXXZ\nuXKVqQNwvCAZAehT9e+x5/b2T2MpfLFJDxXNy3MDw7i/zjGQ4Ici5KiNtIBX\nnxgdG+ww0uCG+14eYwbiLGFVd91/tvNTBsa7S1UxyxTn8zHcyr3dEzv2Utrs\nfxtHJ58liAGeZwRETGbHJ+nFpk+QuHP8gQc4pTWIHeey1IgaTOtkKi5UKFye\nZfkdxUIuBVyojw0suucfWj+grAfyC8j+wXpRoeklkNo7JWcc6o3YfLhh0GrJ\nkbwE2j77eavmb0uzhs4QVRLPKiIenqSOzvuBjZixgPKK+Gxnl7nYdMp++ZwQ\nfGBDx0u2dMezq9o2STdbAk1PTxE=\n"
  },
  "game_id": 68,
  "created_at": "2023-02-17T18:26:46.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T18:26:46.389+00:00\",\"changed\":[\"cloned from \\\"CSA U4L2-L8b_2023\\\"\"],\"cloned_from\":\"CSA U4L2-L8b_2023\"},{\"changed_at\":\"2023-02-17 18:26:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-02 19:12:24 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:19:07 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:32:32 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:32:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:33:34 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:33:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:34:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:36:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:36:59 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-08 17:37:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
