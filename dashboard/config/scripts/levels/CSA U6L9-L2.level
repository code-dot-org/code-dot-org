<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "One way to check if a `String` is a palindrome is to compare the `String` to a reversed version of it. For example:\r\n\r\n* **Original:** pizza  |  **Reversed:** azzip\r\n\r\n ***Does the original equal the reversed?*** False\r\n\r\n* **Original:** madam  |  **Reversed:** madam\r\n\r\n ***Does the original equal the reversed?*** True\r\n\r\nIn `StringChecker.java`, write the method `isPalindrome()` to check if the parameter `word` is a palindrome. Return `true` if it is a palindrome, otherwise return `false`.\r\n\r\n1. Declare and initialize a `Boolean` variable to `false`.\r\n\r\n2. Declare and initialize a `String` variable to an empty `String`.\r\n\r\n3. Traverse the parameter `word` from the end to the beginning:\r\n\r\n   a. Use the `substring()` method to get the current letter and attach it to the `String` variable.\r\n\r\n4. Check if the reversed `String` is equal to the parameter `word`. If so, set the status to `true`.\r\n\r\n5. Return the `Boolean` status.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.Scanner;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    Scanner input = new Scanner(System.in);\n\n    System.out.print(\"Enter a word to check or q to quit: \");\n    String word = input.next();\n\n    while (!word.equals(\"q\")) {\n      System.out.println(\"Is \" + word + \" a palindrome? \" + StringChecker.isPalindrome(word) + \"\\n\");\n      System.out.print(\"Enter a word to check or q to quit: \");\n      word = input.next();\n    }\n\n    input.close();\n    System.out.println(\"\\nGoodbye!\");\n  }\n}",
        "isVisible": true
      },
      "StringChecker.java": {
        "text": "public class StringChecker {\n\n  // TO DO: Write the method to check if the word is a palindrome.\n  public static boolean isPalindrome(String word) {\n\n\n    return false;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_examples": "f0IsrdHx9oayOAswvXWYgoG/TL5XtGZ+9azHHlFb/tM9E9IspvpSby6P4e/Z\n1tOrfEMOY3T4h8KjDO4zSV45hjiXN36e3EWmndL3GT5Yiqs=\n"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2021-11-03T20:32:08.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "audit_log": "[{\"changed_at\":\"2021-11-03 20:32:10 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-12-01 15:41:15 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-01 15:49:42 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-01 15:56:02 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-02 16:58:45 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
