<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Encrypt a word by randomly choosing letters to replace each letter in a 1D <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> array.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Encryption.java</code>, write the static method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">encryptWord()</code> to replace each letter with a randomly chosen letter. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">encryptWord()</code> method should:\r\n\r\n1. Have a parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">letters</code> that contains the letters that make up the word to encrypt.\r\n\r\n2. Traverse the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">letters</code> array and replace each letter with a randomly chosen letter from the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">availableLetters</code> array.\r\n\r\n3. Use the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">lettersToWord()</code> method to return the encrypted word as a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code>.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">EncryptionRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">encryptWord()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Math.random()</code> method.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nloop from 0 to letters.length\r\n  randomLetterIndex = random index from 0 to availableLetters.length\r\n  randomLetter = availableLetters[randomLetterIndex]\r\n  letters[index] = randomLetter\r\n&nbsp;\r\nString result = lettersToWord(letters)\r\nreturn result\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Random Encryption",
    "bubble_choice_description": "Encrypt a word by randomly choosing letters to replace each letter in a 1D `String` array.",
    "thumbnail_url": "https://images.code.org/922e0b15fa0831d615465c27245d8a6f-encryption.png",
    "encrypted_validation": "frh1fFrLuhoXUCgNN9suaODwkJYuz/3Bsc17jPGU6JbfAYwxMD26e1B2W9st\nF9hgVqDjaLyf3whWQWDft9iBFT9P7c+sfLw2+ZhURAR1tqZXPANiuGet+e7J\nc1cjneCE1C3BxDF/G1vVCrmazpv2pKqb/cFmM7Z0nDrQO4OwGKGjoY+t1KuA\n37+rbjDwTY2WA/8k6WyplMG9v9yiwgqkxDWcItBiq3CzhqajHa0bNG0U8VTr\njVY4gztDkOw3Pa7l9qUaEB4aQD2PEZGNBuKA4MmCTEvMqmBBNviIZqEPUGGc\n+07hvwSJHIJINeBpyapb/Bx5Rx4eTw6BnvQvXX3u+SF9QjOLTbAxEp0wsN2f\nQrjfLINXFyjDY1SbZos6xYBeLiJ6LDwcfY4OSCSCAkc61n/650BE5YmHYODn\n3dFfokVYGL+ZRKFpaFPXVtCkN1od0vK4oPALNj4+iLvP1fF+YTTjqcMUvjef\nGtx0TO4h/DpGSTiEQnSrbRwmKzLPiccErRcuGDiFpiqwnf3WkHdbu1atIGvt\nBIZpKz/x2bGUJx9/ZE4K5SKw+kaxqcgTmmEMY/chH8q3WApa/eEDUddT4mku\n+7sTgs0oMS8aD8+7RvjtX9KJqnu7Z7m/JaBKvDe0f1pvkNO+ZMqLn1TPwQ2X\nawO4rY6HpbGalxLu1sWwCd+ks4fkXmjZXnd2qNTsoS2oTpQy9sADutZvtWH9\nOE8B5DQOvo6dYzKG4k+TjzXFiIxnKqVaN4UBw5us0EPo8ojITFpY+8SRT92s\nzS6v+ZqAH+QkRbcIIkDLpcqvbYs4+IBaxd8/6Lj/sWKw5iFSXLcxzJTW+LRW\nR8DttcIUqJleeHlldw95j1nvXRMjvWpikcf67OR0GaW3G/O1lGRyi1ptiDvD\ndQ95kYoPCXImQTMKCU5FIiXSFO3+H4Dyh/+hREG9ze81xA46GOdduZUH7flS\nKd66ZvKPSxh6B3CD5o1qEme7UTePKYB/ah1WjUr1V2jjkzAhedwHUEr1DRvV\nb8aysaTWrQ7s3criGvRLiP5xEOwUbBHC4zcI7EPO6KjilpciCs4xNRdkI+JR\nU+4jcV7ddTKAFPoapj7V+JVEwR5JtaULf1nwZoW/T6SeCdJqko1UFhfpKrjU\n8UkK1Y7LM/RcZRvTO55Z9QjOFe5GN8mlWA20U+atFeylEzFWwRqzRO8YVZRp\n9nRdT50QgmDh/nJhmO3+94npDCgq0uDmF5zvoxIuWNNXgkYI/QJWRnXPF1py\nS2X3Td7HP/nMFGAdLeiNnbraQKzaUBcDEex3ebWrsipEFs7OTQl+lBKWO6h/\nImmlhaEYNqHFY3KBcE2sz3l5Omt4AFL1W4RtHZk0Sg8TY3p/blZ5xvljRma+\n5OraMovM3ZLoBGfLQ9ZiiSjxeaZsuDEbBudU5rb1mo4QkVME2HZoqRhhOgN3\nVazbfX1/DftBZdJYgI71njOpzQCJqYP+Gst51vrPq1GYFhjcKg3tPpfMymX4\nJDXOC4ZKqaZGifg/fvPq9IZNNIedvfybSpK8oQF0C7h1k9XOYlCxvt9jM/fT\nXL7047OKvBr09C76u+0ogkhbAAbFDfYzj35rzlhOAHQ29mSyhhlrPXbxmtm+\nhgKI5QykzvNsttqlON/WYbJS8KH/G72iLZ7ERMK+SknjCXmT0qyvdEfXW+8m\nX7h/5kZtrCoWNDflYvGV27IE1GIWjaktccjEjQtvwj6KQBYXP6fQ5S8YCYsZ\nHcGJZIk0yA==\n",
    "start_sources": {
      "Encryption.java": {
        "text": "/*\n * Represents a encryption algorithm\n */\npublic class Encryption {\n\n  private static String[] availableLetters = {\"i\", \"j\", \"k\", \"m\", \"n\", \"x\", \"y\", \"z\"};\n\n  /*\n   * Encrypts the word\n   */  \n  public static String encryptWord(String[] letters) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the letters array and replace each letter with a randomly chosen\n     * letter from the availableLetters array. Use the lettersToWord() method to\n     * return the encrypted word as a String.\n     * -----------------------------------------------------------------------------\n     */\n    \n  }\n\n  /*\n   * Convert an array of Strings to a String\n   */  \n  public static String lettersToWord(String[] letters) {\n    String word = \"\";\n\n    for (String s : letters) {\n      word += s;\n    }\n\n    return word;\n  }\n\n  /*\n   * Returns availableLetters\n   */\n  public static String[] getAvailableLetters() {\n    return availableLetters;\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "EncryptionRunner.java": {
        "text": "public class EncryptionRunner {\n  public static void main(String[] args) {\n    String[] wordToEncrypt = {\"s\", \"e\", \"c\", \"r\", \"e\", \"t\"};\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the encryptWord() method on wordToEncrypt and print the result\n     * -----------------------------------------------------------------------------\n     */\n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "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\n"
  },
  "game_id": 68,
  "created_at": "2023-02-17T18:41:06.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T18:41:06.881+00:00\",\"changed\":[\"cloned from \\\"CSA U4L5-L6a_2023\\\"\"],\"cloned_from\":\"CSA U4L5-L6a_2023\"},{\"changed_at\":\"2023-02-17 18:41:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-07 16:39:34 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-09 18:26:03 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:32:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:40:42 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:40:57 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:41:02 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:41:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:41:05 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:43:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:44:01 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:44:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:45:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-04-09 18:45:35 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"}]"
}]]></config>
</Javalab>
