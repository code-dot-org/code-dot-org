<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2017-09-25T22:19:57.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "moveForward": null,
      "dot": null,
      "turnLeft": {
        "paramButtons": {
          "maxArgs": 1,
          "minArgs": 1
        }
      },
      "turnRight": {
        "paramButtons": {
          "maxArgs": 1,
          "minArgs": 1
        }
      },
      "arcRight": null,
      "arcLeft": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "functionParams_none": null,
      "callMyFunction": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Read the documentation for the \"arcLeft\" and \"arcRight\" commands and then draw the squiggles as shown. ",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "slider_speed": "0.5",
    "disable_param_editing": "false",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "app_width": "320",
    "app_height": "480",
    "show_turtle_before_run": "true",
    "autocomplete_palette_apis_only": "true",
    "markdown_instructions": "# Multiple Parameters - Making Arcs\r\n\r\nMany commands need more than one parameter to make sense. When a command needs more than one parameter, the parameters are separated by commas.**The order of the parameters matters**.\r\n\r\nTwo new commands have been added to the block palette, `arcLeft()` and `arcRight()` which both accept two parameters.\r\n\r\nRead the documentation for `arcLeft()` and `arcRight()` . Notice that in the documentation you can see what the order of parameters is.First angle, then radius.\r\n\r\n<img src=\"https://images.code.org/320a5e54abb95b267738d5e15946b51c-image-1441985535028.png\" style=\"height: 250px; float: left; margin: 10px\">\r\n\r\n# Do This:\r\n\r\n**Draw a squiggly line: ** \r\n\r\nUsing `arcLeft` and `arcRight` along with the functions you have already learned to draw a **purple squiggle on a blue background**. Feel free to use any of the methods for choosing colors.\r\n\r\n\r\n\r\nHints:\r\n* To make the figure exactly, you need to turn before calling arcLeft or arcRight to orient the turtle first.\r\n* The parameters to arcLeft and arcRight are the same.\r\n* The colors are \"PowderBlue\" and \"Purple\" - though you can use other colors if you like.\r\n\r\nThe subgoals for this problem are listed below to help you get started.Notice that you'll achieve \"Move turtle\" using the new arc blocks. As we learn more features of App Lab, you'll have more options for how to complete subgoals. \r\n\r\n\r\nIn workspace - prepopulate with\r\n*\t//Set pen properties\r\n*   //Orient turtles\r\n*   //Set pen properties\r\n*   //Move turtle",
    "never_autoplay_video": "false",
    "examples_required": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "true",
    "submittable": "false",
    "hide_view_data_button": "true",
    "droplet_tooltips_disabled": "false",
    "debugger_disabled": "true",
    "encrypted_examples": "7bob5aRFtFH9MtS0NxdWcDh/QPLPxNkyg6d8NaXdZGmHd0gOt8W9UdX2Ogxl\nKR+G\n",
    "lock_zero_param_functions": "true",
    "execute_palette_apis_only": "false",
    "fail_on_lint_errors": "false",
    "log_conditions": [
      {
        "entries": [
          "[forTest]"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "Hey! You're using a programming construct - loops - we haven't (officially) learned about yet :).  Don't worry, your knowledge will come in handy later, but for now, try to stick to the constraints of this problem: Just use a sequence of arcRight() and arcLeft() without any loops."
      },
      {
        "entries": [
          "penColor:1"
        ],
        "matchType": "exact",
        "minTimes": 2,
        "message": "To complete this task you need to set the pen color at least twice - once for the background and once for the squiggly."
      },
      {
        "entries": [
          "penWidth:1"
        ],
        "matchType": "exact",
        "minTimes": 1,
        "message": "To complete this task you need to set the pen width for the squiggly."
      },
      {
        "entries": [
          "dot:1"
        ],
        "matchType": "exact",
        "minTimes": 1,
        "message": "App Lab is expecting you to make at least 1 dot to make the background color"
      },
      {
        "entries": [
          "arcLeft:1"
        ],
        "matchType": "exact",
        "minTimes": 3,
        "message": "To complete this task you need to call arcLeft at least three times"
      },
      {
        "entries": [
          "arcRight:1"
        ],
        "matchType": "exact",
        "minTimes": 3,
        "message": "To complete this task you need to call arcRight at three times."
      }
    ],
    "instructions_important": "false",
    "show_debug_watch": "false",
    "makerlab_enabled": "false",
    "teacher_markdown": "Validation note: we don't check to see if the student actually drew this exact squiggly.  We check that the student: \r\n* set the `penColor` at least twice\r\n* set the `penWidth` at least once\r\n* called `arcLeft` at least 3 times\r\n* called `arcRight` at least 3 times\r\n* called `dot` once (for the background color)\r\n",
    "disable_procedure_autopopulate": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-09-25 22:22:57 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-02 21:57:40 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-05 22:50:51 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-05 22:54:25 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>