<Studio>
  <config><![CDATA[{
  "game_id": 33,
  "created_at": "2014-11-17T17:42:37.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "studio",
    "success_condition": "function () {\r\n  var customLogic = Studio.customLogic;\r\n  return customLogic.stopped.right && customLogic.sam && customLogic.sam.x > 250;\r\n}",
    "failure_condition": "function () {\r\n  return (Studio.sprite[0].x > 310);\r\n}",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,16,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "soft_buttons": [
      "leftButton",
      "rightButton",
      "downButton",
      "upButton"
    ],
    "instructions": "In the last puzzle we kept Sam from leaving on the left, now let's do the same thing on the right. Complete the safe-right? function to make sure Sam can't go off the right side of the screen.",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "true",
    "first_sprite_index": "6",
    "edge_collisions": "false",
    "projectile_collisions": "false",
    "allow_sprites_outside_playspace": "true",
    "sprites_hidden_to_start": "false",
    "coordinate_grid_background": "true",
    "free_play": "false",
    "embed": "false",
    "protaganist_sprite_index": "0",
    "disable_sharing": "false",
    "min_workspace_height": "1500",
    "default_num_example_blocks": "2",
    "generate_function_pass_blocks": "true",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "timeout_after_when_run": "false",
    "custom_game_type": "Sam the Bat",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"Sam the Butterfly 3 1\",\r\n  \"callout_text\": \"Edit this function to keep Sam from going off the right side\",\r\n  \"element_id\": \"[block-id='2'] > .blocklyIconGroup\",\r\n  \"on\": \"\",\r\n  \"qtip_config\": {\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"top left\",\r\n    \"at\": \"bottom center\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "disable_examples": "false",
    "markdown_instructions": "In the last puzzle we kept Sam from leaving on the left, now let's do the same thing on the right. Complete the `safe-right?` function to make sure Sam can't go off the right side of the screen.",
    "examples_required": "true"
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="functional_definition" inline="false" editable="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Given Sam's x coordinate, return true if his x is greater than 50.</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">safe-left?</title>
          <functional_input name="STACK">
            <block type="functional_greater_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="safe-left?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_greater_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="safe-left?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">0</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_greater_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">0</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_start_setValue" inline="false" deletable="false" movable="false" editable="false">
          <functional_input name="VALUE">
            <block type="functional_pass" id="callout_here">
              <mutation name="safe-right?"/>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" deletable="false" movable="false" editable="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Given Sam's x coordinate, return true if his x is less than 350.</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">safe-right?</title>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Number">
          <block type="functional_plus" inline="false"/>
          <block type="functional_minus" inline="false"/>
          <block type="functional_times" inline="false"/>
          <block type="functional_dividedby" inline="false"/>
          <block type="functional_sqrt" inline="false"/>
          <block type="functional_math_number">
            <title name="NUM">0</title>
          </block>
        </category>
        <category name="Boolean">
          <block type="functional_greater_than" inline="false"/>
          <block type="functional_less_than" inline="false"/>
          <block type="functional_number_equals" inline="false"/>
          <block type="functional_logical_and" inline="false"/>
          <block type="functional_logical_or" inline="false"/>
          <block type="functional_logical_not" inline="false"/>
          <block type="functional_boolean">
            <title name="VAL">true</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
      </xml>
    </toolbox_blocks>
  </blocks>
</Studio>