<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**A librarian needs a program to keep track of the books that are available to check out at the library.**\r\n\r\n✅ **TO DO #1:** In the `Book`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the title of a book\r\n   \r\n   * the number of pages in a book\r\n   \r\n   * whether or not a book is available\r\n\r\n✅ **TO DO #2:** In `LibraryRunner.java`(#e7e8ea),instantiate a `Book`(#e7e8ea) object and print the instance variables for the `Book`(#e7e8ea) object by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Library Books",
    "bubble_choice_description": "A librarian needs a program to keep track of the books that are available to check out at the library. Write the `Book` class with instance variables for the specified attributes.",
    "encrypted_exemplar_sources": "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\nKL7ZiW8LkB+JAxmQJVyyY17OiQtIjt9/DZA=\n",
    "thumbnail_url": "https://images.code.org/3a51437f07daefc53deee6f536300baf-books.png",
    "encrypted_validation": "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\nm1UTR7KAPg==\n",
    "start_sources": {
      "LibraryRunner.java": {
        "text": "public class LibraryRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Book object, then print the instance variables for\n     * the Book object to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Book.java": {
        "text": "/*\n * Represents a book\n */\npublic class Book {\n\n  /* ----------------------------- TO DO -----------------------------\n   * ✅ Declare instance variables for the title of a book, the number\n   * of pages in a book, and whether or not a book is available.\n   * -----------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n    typeToFind += \" \";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean \", \"int \", \"double \", \"String \"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result.trim();\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 2
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-11-01T17:29:20.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:29:20.910+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3c_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L3c_2023\"},{\"changed_at\":\"2022-11-01 17:29:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:32 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:11:42 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:11 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:27 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:07 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:42:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:37 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:49:23 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:52:29 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:31:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:10:09 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:55 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:20:23 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:16:13 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:16:38 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:16:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:37:50 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:38:58 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:46:46 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:38:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:39:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:39:15 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:39:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:39:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:39:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
