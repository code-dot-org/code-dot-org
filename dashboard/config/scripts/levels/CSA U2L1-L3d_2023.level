<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**A librarian needs a program to keep track of the books that are available to check out at the library.**\r\n\r\n✅ **TO DO #1:** In the `Book`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the title of a book\r\n   \r\n   * the number of pages in a book\r\n   \r\n   * whether or not a book is available\r\n\r\n✅ **TO DO #2:** In `LibraryRunner.java`(#e7e8ea),instantiate a `Book`(#e7e8ea) object and print the instance variables for the `Book`(#e7e8ea) object by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Library Books",
    "bubble_choice_description": "A librarian needs a program to keep track of the books that are available to check out at the library. Write the `Book` class with instance variables for the specified attributes.",
    "start_sources": {
      "LibraryRunner.java": {
        "text": "public class LibraryRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Book object, then print the instance variables for\n     * the Book object to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Book.java": {
        "text": "/*\n * Represents a book\n */\npublic class Book {\n\n  /* ----------------------------- TO DO -----------------------------\n   * ✅ Declare instance variables for the title of a book, the number\n   * of pages in a book, and whether or not a book is available.\n   * -----------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 4
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "thumbnail_url": "https://images.code.org/3a51437f07daefc53deee6f536300baf-books.png",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:29:20.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:29:20.910+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3c_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L3c_2023\"},{\"changed_at\":\"2022-11-01 17:29:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:32 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:11:42 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:11 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:27 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:07 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:42:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:37 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:44:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:49:23 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:52:29 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:31:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:10:09 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:55 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:20:23 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:16:13 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:16:38 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:16:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:37:50 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:38:58 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:46:46 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
