<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:35.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "write": null,
      "whileBlock": null,
      "addOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "randomNumber_min_max": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "markdown_instructions": "# Debug Commands\r\n\r\n<img src=\"https://images.code.org/c6322845b96b70c9083a6c62736048e5-image-1446739268136.00.34 AM.png\" style=\"width: 200px; float: right\">\r\n\r\nCheck out the new **Debug Commands toolbox** that has appeared next to the Debug Console! These powerful tools allow us to **pause a program at a certain point** while it’s running and then execute lines one at a time. \r\n\r\nUsing these tools we can investigate the state of variables and other elements of the program at any point, mid-execution. This makes it much easier to see what’s happening while the programming is actually running!\r\n\r\nIn order to use the debug commands, you first have to indicate which line you want the program to pause at.  This is called adding a “breakpoint” (see animation below).\r\n\r\n# Do This:\r\n\r\n* **Add a breakpoint** on the line where the `while` loop starts. (**Just click the line number.**)\r\n* **Use the <img src=\"https://images.code.org/eb07da547abe4afcd745f3bb44102fdf-image-1490808274422.24.13 PM.png\" style=\"width: 75px\"> button** to execute each line one at a time.\r\n* Each time you hit the breakpoint, **use the console to check value of `num`**. \r\n* **NOTE:** If you hit <img src=\"https://images.code.org/6c4712da58e32dae2d04c52d9964fca9-image-1446741498097.37.48 AM.png\" style=\"width: 75px\"> it will \"continue\" executing the program normally, unless of course it hits another breakpoint. \r\n\r\n![](https://images.code.org/68f8e185914c8cc127aa9573ae37f687-image-1446835628580.gif)",
    "start_blocks": "var num = randomNumber(1, 6);\r\nwrite(\"Number is \" + num);\r\nwhile(num != 6){\r\n  write(\"Nope. Not 6. Roll again.\");\r\n  num = randomNumber(1, 6);\r\n  write(\"New number is: \" + num);\r\n}\r\nwrite(\"Done.\");",
    "instructions": "Use the Debug Commands to make a list of all the values rolled before a 6. (Click to see full instructions)",
    "instructions_important": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>