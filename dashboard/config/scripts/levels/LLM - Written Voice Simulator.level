<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2023-05-16T14:24:52.000Z",
  "level_num": "custom",
  "user_id": 14639,
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "false",
    "embed": "true",
    "mini_rubric": "false",
    "submittable": "false",
    "start_blocks": "setStyle(\"story\", \"overflow: auto; display: flex; flex-direction: column-reverse;\");\r\nvar voiceModels = {\r\n  \"Dr Seuss: Green Eggs and Ham\" : \r\n  {\r\n    \"i\": [\r\n        \"am\",\r\n        \"do\",\r\n        \"would\",\r\n        \"could\",\r\n        \"will\",\r\n    ],\r\n    \"am\": [\r\n        \"sam\",\r\n        \"that\"\r\n    ],\r\n    \"sam\": [\r\n        \"sam\",\r\n        \"i\",\r\n        \"let\",\r\n        \"you\",\r\n        \"if\"\r\n    ],\r\n    \"that\": [\r\n        \"samiam\"\r\n    ],\r\n    \"samiam\": [\r\n        \"that\",\r\n        \"i\",\r\n        \"do\",\r\n        \"would\",\r\n        \"a\",\r\n    ],\r\n    \"do\": [\r\n        \"not\",\r\n        \"you\",\r\n        \"i\",\r\n        \"so\"\r\n    ],\r\n    \"not\": [\r\n        \"like\",\r\n        \"in\",\r\n        \"with\",\r\n        \"eat\",\r\n        \"could\",\r\n    ],\r\n    \"like\": [\r\n        \"that\",\r\n        \"green\",\r\n        \"them\"\r\n    ],\r\n    \"you\": [\r\n        \"like\",\r\n        \"eat\",\r\n        \"could\",\r\n        \"in\",\r\n        \"may\",\r\n    ],\r\n    \"green\": [\r\n        \"eggs\"\r\n    ],\r\n    \"eggs\": [\r\n        \"and\"\r\n    ],\r\n    \"and\": [\r\n        \"ham\",\r\n        \"spam\",\r\n        \"you\",\r\n        \"i\",\r\n        \"in\",\r\n    ],\r\n    \"ham\": [\r\n        \"i\",\r\n        \"would\",\r\n        \"thank\"\r\n    ],\r\n    \"them\": [\r\n        \"samiam\",\r\n        \"here\",\r\n        \"anywhere\",\r\n        \"in\",\r\n        \"with\",\r\n    ],\r\n    \"would\": [\r\n        \"you\",\r\n        \"not\",\r\n        \"eat\"\r\n    ],\r\n    \"here\": [\r\n        \"or\",\r\n        \"they\",\r\n        \"in\",\r\n        \"and\",\r\n        \"you\"\r\n    ],\r\n    \"or\": [\r\n        \"there\"\r\n    ],\r\n    \"there\": [\r\n        \"i\",\r\n        \"say\"\r\n    ],\r\n    \"anywhere\": [\r\n        \"i\",\r\n        \"you\"\r\n    ],\r\n    \"in\": [\r\n        \"a\",\r\n        \"the\"\r\n    ],\r\n    \"a\": [\r\n        \"house\",\r\n        \"mouse\",\r\n        \"box\",\r\n        \"fox\",\r\n        \"car\",\r\n    ],\r\n    \"house\": [\r\n        \"would\",\r\n        \"i\",\r\n        \"not\",\r\n        \"and\"\r\n    ],\r\n    \"with\": [\r\n        \"a\"\r\n    ],\r\n    \"mouse\": [\r\n        \"i\",\r\n        \"not\",\r\n        \"and\"\r\n    ],\r\n    \"eat\": [\r\n        \"them\",\r\n        \"green\"\r\n    ],\r\n    \"box\": [\r\n        \"would\",\r\n        \"not\",\r\n        \"i\",\r\n        \"and\"\r\n    ],\r\n    \"fox\": [\r\n        \"not\",\r\n        \"i\",\r\n        \"and\"\r\n    ],\r\n    \"could\": [\r\n        \"you\",\r\n        \"not\"\r\n    ],\r\n    \"car\": [\r\n        \"eat\",\r\n        \"you\",\r\n        \"sam\",\r\n        \"not\",\r\n        \"and\"\r\n    ],\r\n    \"they\": [\r\n        \"are\"\r\n    ],\r\n    \"are\": [\r\n        \"i\",\r\n        \"so\"\r\n    ],\r\n    \"may\": [\r\n        \"like\",\r\n        \"try\",\r\n        \"i\"\r\n    ],\r\n    \"will\": [\r\n        \"see\",\r\n        \"not\",\r\n        \"let\",\r\n        \"try\",\r\n        \"eat\"\r\n    ],\r\n    \"see\": [\r\n        \"you\",\r\n        \"not\",\r\n        \"say\",\r\n        \"so\"\r\n    ],\r\n    \"tree\": [\r\n        \"i\",\r\n        \"not\",\r\n        \"they\"\r\n    ],\r\n    \"let\": [\r\n        \"me\"\r\n    ],\r\n    \"me\": [\r\n        \"be\"\r\n    ],\r\n    \"be\": [\r\n        \"i\"\r\n    ],\r\n    \"train\": [\r\n        \"a\",\r\n        \"could\",\r\n        \"not\",\r\n        \"and\"\r\n    ],\r\n    \"on\": [\r\n        \"a\"\r\n    ],\r\n    \"spam\": [\r\n        \"i\"\r\n    ],\r\n    \"say\": [\r\n        \"in\",\r\n        \"try\",\r\n        \"sam\",\r\n        \"i\"\r\n    ],\r\n    \"the\": [\r\n        \"dark\",\r\n        \"rain\"\r\n    ],\r\n    \"dark\": [\r\n        \"here\",\r\n        \"would\",\r\n        \"i\",\r\n        \"not\",\r\n        \"and\"\r\n    ],\r\n    \"rain\": [\r\n        \"i\",\r\n        \"not\",\r\n        \"and\"\r\n    ],\r\n    \"goat\": [\r\n        \"i\",\r\n        \"would\",\r\n        \"and\"\r\n    ],\r\n    \"boat\": [\r\n        \"i\",\r\n        \"and\"\r\n    ],\r\n    \"so\": [\r\n        \"you\",\r\n        \"good\",\r\n        \"i\",\r\n        \"like\"\r\n    ],\r\n    \"try\": [\r\n        \"them\"\r\n    ],\r\n    \"if\": [\r\n        \"you\"\r\n    ],\r\n    \"good\": [\r\n        \"so\",\r\n        \"you\"\r\n    ],\r\n    \"thank\": [\r\n        \"you\"\r\n    ]\r\n  },\r\n  \r\n  \"Pharell: \\\"Happy\\\"\" : \r\n  {\r\n    \"happy)\": [\r\n        \"bring\", \r\n        \"can't\", \r\n        \"clap\"\r\n    ], \r\n    \"all\": [\r\n        \"you\"\r\n    ], \r\n    \"happy\": [\r\n        \"happy)\", \r\n        \"happy\"\r\n    ], \r\n    \"just\": [\r\n        \"fine\"\r\n    ], \r\n    \"don't\": [\r\n        \"care\", \r\n        \"waste\", \r\n        \"hold\"\r\n    ], \r\n    \"uh\": [\r\n        \"bring\"\r\n    ], \r\n    \"bring\": [\r\n        \"me\"\r\n    ], \r\n    \"(because\": [\r\n        \"i'm\"\r\n    ], \r\n    \"down\": [\r\n        \"i\", \r\n        \"my\", \r\n        \"can't\",\r\n        \"(happy\", \r\n    ], \r\n    \"go\": [\r\n        \"to\"\r\n    ], \r\n    \"fine\": [\r\n        \"(yeah)\"\r\n    ], \r\n    \"happiness\": [\r\n        \"is\"\r\n    ], \r\n    \"with\": [\r\n        \"the\"\r\n    ], \r\n    \"should\": [\r\n        \"probably\"\r\n    ], \r\n    \"to\": [\r\n        \"bring\", \r\n        \"say\", \r\n        \"you\", \r\n        \"space\"\r\n    ], \r\n    \"might\": [\r\n        \"seem\"\r\n    ], \r\n    \"do\": [\r\n        \"uh\", \r\n        \"come\", \r\n        \"clap\", \r\n        \"here\"\r\n    ], \r\n    \"break\": [\r\n        \"i'm\"\r\n    ], \r\n    \"know\": [\r\n        \"what\"\r\n    ], \r\n    \"(happy\": [\r\n        \"happy\"\r\n    ], \r\n    \"like\": [\r\n        \"i\", \r\n        \"a\", \r\n        \"happiness\", \r\n        \"that's\"\r\n    ], \r\n    \"bad\": [\r\n        \"news\"\r\n    ], \r\n    \"truth\": [\r\n        \"(because\"\r\n    ], \r\n    \"clap\": [\r\n        \"along\"\r\n    ], \r\n    \"i'll\": [\r\n        \"be\"\r\n    ], \r\n    \"got\": [\r\n        \"don't\"\r\n    ], \r\n    \"back\": [\r\n        \"(yeah)\"\r\n    ], \r\n    \"what\": [\r\n        \"i\", \r\n        \"you\", \r\n        \"happiness\"\r\n    ], \r\n    \"said\": [\r\n        \"bring\", \r\n        \"clap\"\r\n    ], \r\n    \"space\": [\r\n        \"with\"\r\n    ], \r\n    \"sunshine\": [\r\n        \"she's\"\r\n    ], \r\n    \"level's\": [\r\n        \"too\"\r\n    ], \r\n    \"probably\": [\r\n        \"warn\"\r\n    ], \r\n    \"be\": [\r\n        \"just\"\r\n    ], \r\n    \"here\": [\r\n        \"come\"\r\n    ], \r\n    \"news\": [\r\n        \"talking\"\r\n    ], \r\n    \"along\": [\r\n        \"if\"\r\n    ], \r\n    \"come\": [\r\n        \"on\", \r\n        \"bad\"\r\n    ], \r\n    \"by\": [\r\n        \"the\"\r\n    ], \r\n    \"could\": [\r\n        \"go\"\r\n    ], \r\n    \"(hey)\": [\r\n        \"(because\"\r\n    ], \r\n    \"i'm\": [\r\n        \"a\", \r\n        \"happy)\"\r\n    ], \r\n    \"wanna\": [\r\n        \"do\"\r\n    ], \r\n    \"can't\": [\r\n        \"nothing\", \r\n    ], \r\n    \"feel\": [\r\n        \"like\"\r\n    ], \r\n    \"'bout\": [\r\n        \"to\"\r\n    ], \r\n    \"your\": [\r\n        \"time\"\r\n    ], \r\n    \"too\": [\r\n        \"high\"\r\n    ], \r\n    \"way\": [\r\n        \"huh\"\r\n    ], \r\n    \"waste\": [\r\n        \"your\"\r\n    ], \r\n    \"that\": [\r\n        \"could\", \r\n        \"(yeah)\"\r\n    ], \r\n    \"ayy)\": [\r\n        \"(because\"\r\n    ], \r\n    \"huh\": [\r\n        \"(because\"\r\n    ], \r\n    \"ayy\": [\r\n        \"ayy)\"\r\n    ], \r\n    \"warn\": [\r\n        \"you\"\r\n    ], \r\n    \"baby\": [\r\n        \"by\"\r\n    ], \r\n    \"hold\": [\r\n        \"back\"\r\n    ], \r\n    \"(yeah)\": [\r\n        \"well\", \r\n        \"no\"\r\n    ], \r\n    \"here's\": [\r\n        \"why\"\r\n    ], \r\n    \"me\": [\r\n        \"down\", \r\n        \"all\", \r\n    ], \r\n    \"(ayy\": [\r\n        \"ayy\"\r\n    ], \r\n    \"room\": [\r\n        \"without\"\r\n    ], \r\n    \"this\": [\r\n        \"and\"\r\n    ], \r\n    \"air\": [\r\n        \"like\",\r\n        \"balloon\"\r\n    ],\r\n    \"roof\": [\r\n        \"(because\"\r\n    ], \r\n    \"can\": [\r\n        \"take\"\r\n    ], \r\n    \"care\": [\r\n        \"baby\"\r\n    ], \r\n    \"nothing\": [\r\n        \"bring\", \r\n        \"(happy\"\r\n    ],\r\n    \"my\": [\r\n        \"level's\"\r\n    ], \r\n    \"and\": [\r\n        \"that\"\r\n    ], \r\n    \"crazy\": [\r\n        \"what\"\r\n    ], \r\n    \"give\": [\r\n        \"me\"\r\n    ], \r\n    \"is\": [\r\n        \"to\", \r\n        \"the\"\r\n    ], \r\n    \"am\": [\r\n        \"'bout\"\r\n    ], \r\n    \"it\": [\r\n        \"might\"\r\n    ], \r\n    \"high\": [\r\n        \"to\"\r\n    ], \r\n    \"talking\": [\r\n        \"this\"\r\n    ], \r\n    \"say\": [\r\n        \"sunshine\"\r\n    ], \r\n    \"offense\": [\r\n        \"to\"\r\n    ], \r\n    \"seem\": [\r\n        \"crazy\"\r\n    ], \r\n    \"if\": [\r\n        \"you\"\r\n    ], \r\n    \"no\": [\r\n        \"offense\"\r\n    ], \r\n    \"balloon\": [\r\n        \"that\"\r\n    ], \r\n    \"hot\": [\r\n        \"air\"\r\n    ], \r\n    \"take\": [\r\n        \"a\"\r\n    ], \r\n    \"you\": [\r\n        \"i'll\", \r\n        \"(ayy\", \r\n        \"got\", \r\n        \"don't\", \r\n        \"feel\", \r\n    ], \r\n    \"why\": [\r\n        \"clap\"\r\n    ], \r\n    \"a\": [\r\n        \"break\", \r\n        \"hot\", \r\n        \"room\", \r\n        \"roof\"\r\n    ], \r\n    \"i\": [\r\n        \"should\", \r\n        \"am\", \r\n        \"said\", \r\n        \"don't\"\r\n    ], \r\n    \"well\": [\r\n        \"i\", \r\n        \"give\"\r\n    ], \r\n    \"without\": [\r\n        \"a\"\r\n    ], \r\n    \"time\": [\r\n        \"here's\"\r\n    ], \r\n    \"she's\": [\r\n        \"here\"\r\n    ], \r\n    \"the\": [\r\n        \"air\", \r\n        \"truth\", \r\n        \"way\"\r\n    ], \r\n    \"that's\": [\r\n        \"what\"\r\n    ]\r\n  }\r\n};\r\n\r\n\r\nfunction getRandomKey(obj) {\r\n    var keys = Object.keys(obj);\r\n    return keys[Math.floor(Math.random() * keys.length)];\r\n}\r\n\r\nfunction updateButtons(word) {\r\n  //Iterate through the array with the buttonIds\r\n  for(var i = 0; i < buttonIds.length; i++) {\r\n    //Delete the element on the screen with that ID,\r\n    //allowing us to recreate later with the same ID if we want\r\n    deleteElement(buttonIds[i]);\r\n  }\r\n  //Reset the buttonIds array\r\n  buttonIds = [];\r\n  var words = dictionary[word];\r\n  for (i = 0; i < words.length; i++) {\r\n    button(words[i], words[i]);\r\n    setProperty(words[i], \"y\", 225);\r\n    setProperty(words[i], \"height\", 30);\r\n    //...when generating the button, also add the id to the buttonIds array\r\n    buttonIds.push(words[i]);\r\n      onEvent(words[i], \"click\", function(event) {\r\n        story += event.currentTargetId + \" \";\r\n        setText(\"story\", story);\r\n        updateButtons(event.currentTargetId);\r\n      });\r\n  }\r\n}\r\n\r\nfunction initializeButtons() {\r\n    var initialWord = getRandomKey(dictionary);\r\n    story += initialWord + \" \";\r\n    setText(\"story\", story);\r\n    updateButtons(initialWord);\r\n}\r\n\r\nonEvent(\"delete\", \"click\", function( ) {\r\n  story = \"\";\r\n  setText(\"story\", story);\r\n  initializeButtons();\r\n});\r\n\r\nonEvent(\"save\", \"click\", function( ) {\r\n  setScreen(\"saveScreen\");\r\n});\r\n\r\nonEvent(\"saveName\", \"click\", function( ) {\r\n  var savedName = getText(\"savedStoryName\");\r\n  \r\n  while (savedName == null || savedName == \"\"){\r\n    savedName = prompt(\"Please enter a name to save your story under\");\r\n  }\r\n    savedStoryNames.push(savedName);\r\n    setProperty(\"savedStoriesSelect\", \"options\", savedStoryNames);\r\n    savedStories[savedName]= [story, dictionary];\r\n    setScreen(\"storyScreen\");\r\n    setProperty(\"savedStoriesSelect\", \"value\", savedName);\r\n    setText(\"savedStoryName\",\"\");\r\n  });\r\n\r\nonEvent(\"load\", \"click\", function() {\r\n  setScreen(\"loadSaveScreen\");\r\n});\r\n\r\nfunction lastWord(fullString){\r\n  var separateWords = fullString.split(\" \");\r\n  return separateWords[separateWords.length -1];\r\n}\r\n\r\nonEvent(\"loadScreenButton\", \"click\", function() {\r\n  story = savedStories[getProperty(\"savedStoriesSelect\", \"value\")][0];\r\n  dictionary = savedStories[getProperty(\"savedStoriesSelect\", \"value\")][1];\r\n  setText(\"story\", story);\r\n  var finalWord = lastWord(story.trim());\r\n  setScreen(\"storyScreen\");\r\n  updateButtons(finalWord);\r\n});\r\n\r\nonEvent(\"startButton\", \"click\", function( ) {\r\n  var story = \" \";\r\n  var voiceChoice = getProperty(\"whichVoice\", \"value\");\r\n  if (voiceChoice == \"Create my own!\"){\r\n    setText(\"newVoiceInput\",\"\");\r\n    setText(\"newVoiceId\",\"\");\r\n    setScreen(\"newVoiceModel\");\r\n  } else {\r\n    dictionary = voiceModels[voiceChoice];\r\n    setText(\"currVoiceText\", voiceChoice);\r\n    setScreen(\"storyScreen\");\r\n    initializeButtons();\r\n  }\r\n});\r\n\r\nonEvent(\"newVoice\", \"click\", function( ) {\r\n  setScreen(\"voiceChoiceScreen\");\r\n});\r\n\r\nfunction remove_punctuation(word) {\r\n  return word.replace(/[^\\w\\s]|_/g, \"\").toLowerCase();\r\n}\r\n\r\nfunction checkIfInArray (arrayToCheck, itemToCheck){\r\n  for (var i = 0; i < arrayToCheck.length; i++){\r\n    if (arrayToCheck[i] == itemToCheck){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction create_dictionary(text) {\r\n  var words = text.split(/\\s+/);\r\n  var word_dict = {};\r\n  \r\n  if (words.length < 2){\r\n    words = [words[0], words[0]];\r\n  }\r\n\r\n  for (var i = 0; i < words.length - 1; i++) {\r\n    var word = remove_punctuation(words[i]);\r\n    var next_word = remove_punctuation(words[i + 1]);\r\n    if (!word_dict[word]) {\r\n      word_dict[word] = [];\r\n    }\r\n    if (!checkIfInArray(word_dict[word], next_word)){\r\n      word_dict[word].push(next_word);\r\n    }\r\n  }\r\n\r\n  for (var key in word_dict) {\r\n    word_dict[key] = word_dict[key].reduce(function(acc, cur) {\r\n      if (!acc[cur]) {\r\n        acc[cur] = 1;\r\n      } else {\r\n        acc[cur] += 1;\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    // Convert the object of followers to an array of entries\r\n    var entries = [];\r\n\r\n    for (var follower in word_dict[key]) {\r\n      entries.push([follower, word_dict[key][follower]]);\r\n    }\r\n\r\n    // Sort the entries by count in descending order\r\n    entries.sort(function(a, b) {\r\n      return b[1] - a[1];\r\n    });\r\n\r\n    // Extract the top 10 followers and assign them to the current key in the word dictionary\r\n    var top_followers = [];\r\n\r\n    for (var j = 0; j < 5 && j < entries.length; j++) {\r\n      top_followers.push(entries[j][0]);\r\n    }\r\n\r\n    word_dict[key] = top_followers;\r\n  }\r\n\r\n  // Return the completed word dictionary\r\n  return word_dict;\r\n}\r\n\r\nonEvent(\"enterNewVoice\", \"click\", function( ) {\r\n  var newVoiceId = getText(\"newVoiceId\");\r\n  while (newVoiceId == null || newVoiceId == \"\"){\r\n    newVoiceId = prompt(\"Please give the voice a name\");\r\n  }\r\n  setText(\"newVoiceId\", newVoiceId);\r\n  \r\n  var rawNewVoice = getText(\"newVoiceInput\");\r\n  while (rawNewVoice == \"\" || rawNewVoice == null){\r\n    rawNewVoice = prompt(\"Please enter text for the new voice\");\r\n  }\r\n  voices.push(newVoiceId);\r\n  setText(\"currVoiceText\", newVoiceId);\r\n  var dictNewVoice = create_dictionary(rawNewVoice);\r\n  console.log(dictNewVoice);\r\n  voiceModels[newVoiceId] = dictNewVoice;\r\n  dictionary = voiceModels[newVoiceId];\r\n  setProperty(\"whichVoice\", \"options\", voices);\r\n  setScreen(\"storyScreen\");\r\n  initializeButtons();\r\n});\r\n\r\nvar story = \"\"; //the story that shows up on the screen\r\nvar savedStoryNames = []; //list of all saveNames\r\nvar savedStories = {}; //Dictionary with key of saveName, value is [story, correct dictionary]\r\nvar buttonIds = []; //Buttons for choosing the next word. Constantly updating as soon as one is clicked.\r\nvar dictionary = {}; //Each \"voice\" has it's own dictionary associated; this variable keeps track of which voice-dictionary is being used\r\nvar voices = [\"Create my own!\",\"Dr Seuss: Green Eggs and Ham\", \"Pharell: \\\"Happy\\\"\"];\r\n",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "libraries_enabled": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"voiceChoiceScreen\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><select id=\"whichVoice\" style=\"width: 200px; height: 30px; margin: 0px; border-style: solid; background-color: rgb(255, 255, 255); color: rgb(77, 87, 95); background-image: url(&quot;data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20256%20448%22%20enable-background%3D%22new%200%200%20256%20448%22%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E.arrow%7Bfill%3A%234d575f%3B%7D%3C%2Fstyle%3E%3Cpath%20class%3D%22arrow%22%20d%3D%22M255.9%20168c0-4.2-1.6-7.9-4.8-11.2-3.2-3.2-6.9-4.8-11.2-4.8H16c-4.2%200-7.9%201.6-11.2%204.8S0%20163.8%200%20168c0%204.4%201.6%208.2%204.8%2011.4l112%20112c3.1%203.1%206.8%204.6%2011.2%204.6%204.4%200%208.2-1.5%2011.4-4.6l112-112c3-3.2%204.5-7%204.5-11.4z%22%2F%3E%3C%2Fsvg%3E&quot;); border-color: rgb(0, 0, 0); border-radius: 4px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 0px 30px 0px 15px; position: absolute; left: 55px; top: 195px;\"><option>Pharell: \"Happy\"</option><option>Dr Seuss: Green Eggs and Ham</option><option>Create my own!</option></select><button id=\"startButton\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 40px; width: 100px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 100px; top: 235px;\">Generate!</button><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; padding: 2px 15px; width: 210px; position: absolute; left: 45px; top: 100px; height: 85px; text-align: center; font-size: 25px;\" id=\"label2\">Choose a voice to model</label></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"storyScreen\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255); display: none;\"><button id=\"delete\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 40px; width: 100px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 5px; top: 405px;\">Delete Text</button><button id=\"save\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 40px; width: 100px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 110px; top: 405px;\">Save Text</button><button id=\"newVoice\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 35px; width: 305px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 5px; top: 360px;\">Change Voice</button><button id=\"load\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 40px; width: 100px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 215px; top: 405px;\">Load Save</button><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; padding: 2px 15px; width: 170px; position: absolute; left: -1.11022e-16px; top: 325px; height: 30px; font-size: 16px;\" id=\"modelingVoiceLabel\">Modeling Voice</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 14px; padding: 2px 15px; width: 160px; height: 30px; position: absolute; left: 150px; top: 325px;\" id=\"currVoiceText\"></label><div contenteditable=\"false\" class=\"textArea\" id=\"story\" style=\"width: 320px; height: 220px; border-style: solid; background-color: rgb(242, 242, 242); color: rgb(77, 87, 95); border-color: rgb(255, 255, 255); border-radius: 2px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 18px; padding: 5px 15px; position: absolute; left: 0px; top: 0px; margin: 0px;\"></div></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"saveScreen\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255); display: none;\"><input id=\"savedStoryName\" style=\"margin: 0px; width: 265px; height: 35px; border-style: solid; color: rgb(77, 87, 95); background-color: rgb(242, 242, 242); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 5px 15px; position: absolute; left: 30px; top: 165px;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; padding: 2px 15px; width: 290px; height: 35px; position: absolute; left: 15px; top: 135px; font-size: 18px;\" id=\"label3\">Give your save file a name</label><button id=\"saveName\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 40px; width: 100px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 100px; top: 215px;\">Save!</button></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"newVoiceModel\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255); display: none;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 320px; height: 31px; position: absolute; left: 5px; top: 70px;\" id=\"label5\">Copy / Paste or type &nbsp;the words you want to create a model based on below</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 189px; height: 18px; position: absolute; left: 0px; top: 5px;\" id=\"label6\">Give the voice a name</label><input id=\"newVoiceId\" style=\"margin: 0px; width: 305px; height: 35px; border-style: solid; color: rgb(77, 87, 95); background-color: rgb(242, 242, 242); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 5px 15px; position: absolute; left: 10px; top: 30px;\"><button id=\"enterNewVoice\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 40px; width: 305px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 10px; top: 400px;\">Model This Voice!</button><div contenteditable=\"true\" class=\"textArea\" id=\"newVoiceInput\" style=\"width: 305px; height: 280px; border-style: solid; background-color: rgb(242, 242, 242); color: rgb(77, 87, 95); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 5px 15px; position: absolute; left: 10px; top: 110px; margin: 0px;\"></div></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"loadSaveScreen\" style=\"display: none; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><select id=\"savedStoriesSelect\" style=\"width: 245px; height: 30px; margin: 0px; border-style: solid; background-color: rgb(255, 255, 255); color: rgb(77, 87, 95); background-image: url(&quot;data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20256%20448%22%20enable-background%3D%22new%200%200%20256%20448%22%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E.arrow%7Bfill%3A%234d575f%3B%7D%3C%2Fstyle%3E%3Cpath%20class%3D%22arrow%22%20d%3D%22M255.9%20168c0-4.2-1.6-7.9-4.8-11.2-3.2-3.2-6.9-4.8-11.2-4.8H16c-4.2%200-7.9%201.6-11.2%204.8S0%20163.8%200%20168c0%204.4%201.6%208.2%204.8%2011.4l112%20112c3.1%203.1%206.8%204.6%2011.2%204.6%204.4%200%208.2-1.5%2011.4-4.6l112-112c3-3.2%204.5-7%204.5-11.4z%22%2F%3E%3C%2Fsvg%3E&quot;); border-color: rgb(0, 0, 0); border-radius: 4px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 0px 30px 0px 15px; position: absolute; left: 35px; top: 165px;\"><option>Option 1</option><option>Option 2</option></select><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 270px; height: 31px; position: absolute; left: 25px; top: 125px;\" id=\"label1\">Choose the Save file you want to load from the dropdown below</label><button id=\"loadScreenButton\" style=\"padding: 0px; margin: 0px; border-style: solid; height: 35px; width: 245px; background-color: rgb(255, 164, 0); color: rgb(255, 255, 255); border-color: rgb(77, 87, 95); border-radius: 4px; border-width: 1px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 15px; position: absolute; left: 35px; top: 205px;\">Load this file</button></div></div>",
    "fail_on_lint_errors": "false",
    "widget_mode": "false",
    "ai_enabled": "false",
    "long_instructions": "# Written Voice Simulator\r\n\r\nThis app lets you create a brand new piece of writing that sounds like things that have been written before. Each word gives you the option of up to 5 words that would likely be the next word based on whatever short story, poem, song, or writing piece it's currently modeling. Use the example voices, or add your own \"voice\" which could be from a well known work or some of your own writing.\r\n",
    "preload_asset_list": null,
    "encrypted_examples": [

    ],
    "display_name": "Voice Simulator",
    "teacher_markdown": "This activity is based on Botnik. Feel free to explore the real Botnik yourself, which trained on more words and has more options."
  },
  "audit_log": "[{\"changed_at\":\"2023-05-16T14:24:52.824+00:00\",\"changed\":[\"cloned from \\\"Neural Networks - Perceptron - Full\\\"\"],\"cloned_from\":\"Neural Networks - Perceptron - Full\"},{\"changed_at\":\"2023-05-16 15:03:26 +0000\",\"changed\":[\"name\",\"start_blocks\",\"start_html\",\"start_libraries\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":18972,\"changed_by_email\":\"sarah.judd@code.org\"},{\"changed_at\":\"2023-05-16 15:08:06 +0000\",\"changed\":[\"start_blocks\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\",\"teacher_markdown\"],\"changed_by_id\":18972,\"changed_by_email\":\"sarah.judd@code.org\"},{\"changed_at\":\"2023-05-16 15:26:39 +0000\",\"changed\":[\"start_html\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18972,\"changed_by_email\":\"sarah.judd@code.org\"},{\"changed_at\":\"2023-05-16 15:37:16 +0000\",\"changed\":[\"start_html\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18972,\"changed_by_email\":\"sarah.judd@code.org\"},{\"changed_at\":\"2023-05-16 15:40:03 +0000\",\"changed\":[\"start_html\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2023-05-16 15:40:45 +0000\",\"changed\":[\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>