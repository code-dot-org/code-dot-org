<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `BankAccount`(#e7e8ea) class represents a bank account and has instance variables for the customer's name and starting balance. The `BasicAccount`(#e7e8ea) class represents a basic bank account.\r\n\r\nThe `BasicAccount`(#e7e8ea) class overrides the `withdraw()`(#e7e8ea) method to charge a $30 fee if a withdrawal causes an account to be overdrawn (balance is negative).\r\n\r\n##In MyConsole.java:\r\n\r\n1. Create an `BankAccount`(#e7e8ea) array containing the `BankAccount`(#e7e8ea) objects.\r\n\r\n2. Traverse the `BankAccount`(#e7e8ea) array and withdraw `300`(#e7e8ea) from each account, then print the customer's name and new balance using the `getName()`(#e7e8ea) and `getBalance()`(#e7e8ea) methods.",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    BankAccount first = new BankAccount(\"Shakila\", 500);\n    BasicAccount second = new BasicAccount(\"Ali\", 200);\n    BankAccount third = new BankAccount(\"Valentina\", 100);\n    BasicAccount fourth = new BasicAccount(\"Maria\", 800);\n\n    // TO DO #1: Create a BankAccount array containing the BankAccount objects.\n    \n\n    // TO DO #2: Traverse the BankAccount array and withdraw 300\n    // from each account then print the balance for each account.\n\n    \n  }\n}",
        "isVisible": true
      },
      "BankAccount.java": {
        "text": "/*\n * Represents a bank account\n */\npublic class BankAccount {\n\n  private String customerName;  // The name of the account holder\n  private double balance;       // The starting balance of the account\n\n  /*\n   * Constructor to create a BankAccount object\n   * with a specified name and starting balance\n   */\n  public BankAccount(String customerName, double balance) {\n    this.customerName = customerName;\n    this.balance = balance;\n  }\n\n  /*\n   * Adds a given amount to the balance\n   */\n  public void deposit(double amount) {\n    balance += amount;\n  }\n\n  /*\n   * Subtracts a given amount from the balance\n   */\n  public void withdraw(double amount) {\n    balance -= amount;\n  }\n\n  /*\n   * Gets the customer's name\n   */\n  public String getName() {\n    return customerName;\n  }\n\n  /*\n   * Gets the current balance\n   */\n  public double getBalance() {\n    return balance;\n  }\n  \n}",
        "isVisible": true
      },
      "BasicAccount.java": {
        "text": "/*\n * Represents a basic bank account\n */\npublic class BasicAccount extends BankAccount {\n\n  /*\n   * Constructor to create a BasicAccount object\n   * with a specified name and starting balance\n   */\n  public BasicAccount(String customerName, double balance) {\n    super(customerName, balance);  // Calls the BankAccount constructor\n  }\n\n  /*\n   * Subtracts a given amount from the balance and\n   * charges a fee if the withdrawal overdraws the account\n   */\n  public void withdraw(double amount) {\n    super.withdraw(amount);\n\n    if (getBalance() < 0) {\n      super.withdraw(30);\n    }\n  }\n  \n}",
        "isVisible": true
      }
    },
    "display_name": "Bank Account",
    "bubble_choice_description": "Create a BankAccount array and get the balances for each bank account.",
    "thumbnail_url": "https://images.code.org/fc160e1197069043a285a4e9f26a8e9b-image-1648730510117.png",
    "encrypted_exemplar_sources": "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\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-03-25T12:49:05.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-03-25 12:49:07 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 22:13:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 22:17:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 22:39:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 22:41:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 22:42:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 22:47:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 12:42:22 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 12:46:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 12:48:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 12:49:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 12:50:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 12:50:48 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 12:50:59 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 13:16:47 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 13:17:14 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 13:17:41 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 19:28:38 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-06-24 15:13:39 +0000\",\"changed\":[\"map_reference\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
