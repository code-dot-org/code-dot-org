<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Evaluate and test this program using the guiding questions and prompts on the **Secure Coding Practices** activity guide.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "ArrayList<BankEmployee> employees = new ArrayList<BankEmployee>();\n\n    BankEmployee clarenceEllis = new BankEmployee(\"Clarence Ellis\", \"1479\", \"clarence\", \"SyRQzt24\");\n    BankEmployee katherineJohnson = new BankEmployee(\"Katherine Johnson\", \"1831\", \"katherine\", \"zgC2VxZR\");\n    BankEmployee adaLovelace = new BankEmployee(\"Ada Lovelace\", \"1062\", \"ada\", \"q2xjZaQb\");\n    employees.add(clarenceEllis);\n    employees.add(katherineJohnson);\n    employees.add(adaLovelace);\n    BankManager manager = new BankManager(\"Alan Turing\", \"0714\", \"alan\", \"Xq3H4baa\", employees);\n\n    Scanner sc = new Scanner(System.in);\n    boolean found = false;\n    while(!found){\n      System.out.print(\"Welcome to the bank. \\nPlease log in by entering your username: \");\n      String user = sc.nextLine();\n      if(user.equals(manager.getUsername())){\n        found = true;\n        manager.logIn();\n      }\n      else{\n        for(BankEmployee e: employees){\n          if(user.equals(e.getUsername())){\n            found = true;\n            e.logIn();\n          }\n        }\n      }\n      if(!found){\n        System.out.println(\"User not found...Please try again.\\n\");\n      }\n    }\n    sc.close();",
        "isVisible": true
      },
      "BankEmployee.java": {
        "text": "import java.util.Scanner;\n\npublic class BankEmployee {\n\n  /**\n   * the employee's first and last name\n   */\n  private String name;\n\n  /**\n   * the employee's ID number\n   */\n  private String employeeID;\n\n  /**\n   * the employee's username to login to the bank system\n   */\n  private String username;\n\n  /**\n   * the employee's password to login to the bank system\n   */\n  private String password;\n\n  /**\n   * Creates a BankEmployee\n   * @param name the first and last name of the employee\n   * @param employeeID the employee's ID\n   * @param username the employee's username\n   * @param password the employee's password\n   */\n  public BankEmployee(String name, String employeeID, String username, String password) {\n    this.name = name;\n    this.employeeID = employeeID;\n    this.username = username;\n    this.password = password;\n  }\n\n /**\n   * Attempts to log in employee after performing security checks\n   * @param username the employee's username\n   */\n  public void logIn() {\n    Scanner sc = new Scanner(System.in);\n    System.out.print(\"\\nWelcome back, \" + this.getName() +\"!\\nEnter your password: \");\n    String pass = sc.nextLine();\n    int attempts = 3;\n    while(!pass.equals(this.getPassword()) && attempts>0){\n      System.out.print(\"Please try your password again (\"+attempts+\" attempts remaining): \");\n      attempts--;\n      pass = sc.nextLine();\n    }\n    if(attempts == 0){\n      System.out.print(\"\\nFailure to log in...Goodbye\");\n    }\n    else{\n      System.out.println(\"\\nYou are now logged in and can choose one of the following actions:\");\n      System.out.println(access());\n    }\n    sc.close();\n  }\n\n  /**\n   * Gets a list of actions an employee can access\n   * @return a String representing accessible actions\n   */\n  public String access() {\n    return \"(1) Clock in\\n(2) Clock out\\n(3) Assist Customer\";\n  }\n  \n  /**\n   * Gets the employee's first and last name\n   * @return the employee's first and last name\n   */\n  public String getName() {\n    return name;\n  }\n\n  /**\n   * Gets the employee's ID number\n   * @return the employee's ID number\n   */\n  public String getEmployeeID() {\n    return employeeID;\n  }\n\n  /**\n   * Gets the employee's username\n   * @return the employee's username\n   */\n  public String getUsername() {\n    return username;\n  }\n\n  /**\n   * Changes the employee's username\n   * @param newUsername the new username to set\n   */\n  public void setUsername(String newUsername) {\n    username = newUsername;\n  }\n\n  /**\n   * Gets the employee's password\n   * @return the employee's password\n   */\n  public String getPassword() {\n    return password;\n  }\n\n  /**\n   * Changes the employee's password\n   * @param newPassword the new password to set\n   */\n  public void setPassword(String newPassword) {\n    password = newPassword;\n  }\n\n  /**\n   * Gets the employee's information\n   * @return a String containing the employee's information\n   */\n  public String toString() {\n    return name + \" (\" + employeeID + \"): Username = \" + username + \", Password = \" + password;\n  }\n}",
        "isVisible": true
      },
      "BankManager.java": {
        "text": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class BankManager extends BankEmployee {\n\n  /**\n   * the list of BankEmployees\n   */\n  private ArrayList<BankEmployee> employees;\n\n  /**\n   * Creates a BankManager\n   * @param name the name of the bank manager\n   * @param employees the list of bank employees\n   */\n  public BankManager(String name, String employeeID, String username, String password, ArrayList<BankEmployee> employees) {\n    super(name, employeeID, username, password);\n    this.employees = employees;\n  }\n\n  /**\n   * Overrides employee access to give manager more actions\n   * @return a String representing accessible actions\n   */\n  public String access() {\n    return super.access() + \"\\n(4) Hire Employee\\n(5) Fire Employee\";\n  }\n\n  /**\n   * Gets the information of all employees in the list\n   * @return a String containing the information of all\n   *         employees in the list\n   */\n  public String toString() {\n    String allEmployees = \"\";\n    \n    for (int index = 0; index < employees.size(); index++) {\n      allEmployees = allEmployees + employees.get(index) + \"\\n\";\n    }\n\n    return allEmployees;\n  }\n}",
        "isVisible": true
      }
    },
    "display_name": "The Bank",
    "bubble_choice_description": "Evaluate and test a bank program used by the bank manager and other bank employees.",
    "thumbnail_url": "https://images.code.org/fec919e71e324ae3e44e6d914cf528bc-image-1641833391864.png"
  },
  "game_id": 68,
  "created_at": "2021-12-12T16:11:17.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2021-12-12 16:12:01 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 14:03:03 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 14:53:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 16:12:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 16:28:48 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 16:32:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 16:35:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 16:35:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 16:47:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 16:51:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 17:28:43 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-01-10 20:58:57 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-12 00:29:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-12 01:06:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-12 01:11:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-12 01:49:10 +0000\",\"changed\":[],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-12 01:59:06 +0000\",\"changed\":[],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-14 01:02:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-15 02:33:13 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-18 18:41:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-18 18:43:31 +0000\",\"changed\":[],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-18 19:11:20 +0000\",\"changed\":[\"bubble_choice_description\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-18 19:11:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-18 19:12:02 +0000\",\"changed\":[],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-18 19:13:05 +0000\",\"changed\":[\"display_name\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-26 02:06:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-26 02:06:20 +0000\",\"changed\":[],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-26 02:06:22 +0000\",\"changed\":[],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-26 02:06:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-31 01:45:25 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-31 01:46:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"},{\"changed_at\":\"2022-03-31 01:46:25 +0000\",\"changed\":[],\"changed_by_id\":18413,\"changed_by_email\":\"joshua.joyner@code.org\"}]"
}]]></config>
</Javalab>
