<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2018-02-08T00:20:13.000Z",
  "level_num": "custom",
  "user_id": 285,
  "properties": {
    "skin": "harvester",
    "serialized_maze": "[[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":2,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}]]",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "true",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "start_direction": "1",
    "step_mode": "1",
    "flower_type": "redWithNectar",
    "fast_get_nectar_animation": "false",
    "instructions": "Help the farmer find her way down this confusing path and to the pumpkin by turning left at the corn and right at the lettuce.",
    "instructions_important": "false",
    "ideal": "12",
    "markdown_instructions": "*\"This harvest is a-MAZE-ing!\"*\r\n\r\nHelp the farmer find her way down this confusing path and to the pumpkin by turning **left** at the corn and **right** at the lettuce.  \r\n\r\n*(Don't forget to collect all of the produce along the way!)*",
    "authored_hints": "[{\"hint_class\":\"pointer\",\"hint_markdown\":\"You don't need a function here, but you can make one if it is helpful to you!\",\"hint_id\":\"courseE_farmer_functions7b_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/8d71a03c6ee1ac1fa6e9b80b89dc4baa/courseE_farmer_functions7b.mp3\"},{\"hint_class\":\"pointer\",\"hint_markdown\":\"Use an `if/else` statement to check for crops, then turn based on which crop you find.\",\"hint_id\":\"courseE_farmer_functions7b_b\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/32c0ee5add896694e3719022ce1cb8d3/courseE_farmer_functions7b.mp3\"},{\"hint_class\":\"pointer\",\"hint_markdown\":\"A `repeat until pumpkin` loop can help you get all the way through the maze.\",\"hint_id\":\"courseE_farmer_functions7b_c\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/aae44a0b6304d3c07e447f2fdeabdab2/courseE_farmer_functions7b.mp3\"}]",
    "callout_json": "[]",
    "step_speed": "1",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "disable_procedure_autopopulate": "false",
    "shape_shift": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-07-14 20:29:54 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"markdown_instructions\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 23:01:10 +0000\",\"changed\":[\"toolbox_blocks\",\"start_direction\",\"instructions\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 23:03:54 +0000\",\"changed\":[],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 23:05:57 +0000\",\"changed\":[\"toolbox_blocks\",\"ideal\",\"markdown_instructions\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 23:11:28 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-26 17:21:04 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-26 17:21:47 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-26 17:22:52 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-26 18:03:37 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-28 22:36:49 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"never_autoplay_video\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-07-31 19:17:15 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":302,\"changed_by_email\":\"mara.downing@code.org\"},{\"changed_at\":\"2017-08-24 16:21:41 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-10-04 00:11:40 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-10-04 00:17:35 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"ideal\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"}]"
}]]></config>
  <blocks>
    <toolbox_blocks>
      <xml>
        <category name="Actions">
          <block type="maze_move">
            <title name="DIR">moveForward</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="harvester_corn"/>
          <block type="harvester_pumpkin"/>
          <block type="harvester_lettuce"/>
        </category>
        <category name="Loops">
          <block type="harvester_untilHasPumpkin"/>
          <block type="harvester_whileHasCrop">
            <title name="LOC">Corn</title>
          </block>
          <block type="maze_untilBlocked"/>
        </category>
        <category name="Conditionals">
          <block type="maze_if">
            <title name="DIR">isPathForward</title>
          </block>
          <block type="maze_ifElse">
            <title name="DIR">isPathForward</title>
          </block>
          <block type="harvester_ifHasCropElse">
            <title name="LOC">Corn</title>
          </block>
          <block type="harvester_ifHasCrop">
            <title name="LOC">Corn</title>
          </block>
          <block type="harvester_untilHasPumpkin"/>
          <block type="harvester_whileHasCrop">
            <title name="LOC">Corn</title>
          </block>
          <block type="maze_untilBlocked"/>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="harvester_untilHasPumpkin">
              <statement name="DO">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="harvester_ifHasCropElse">
                      <title name="LOC">Corn</title>
                      <statement name="DO">
                        <block type="harvester_corn">
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <statement name="ELSE">
                        <block type="harvester_ifHasCrop">
                          <title name="LOC">Lettuce</title>
                          <statement name="DO">
                            <block type="harvester_lettuce">
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </statement>
              <next>
                <block type="harvester_pumpkin"/>
              </next>
            </block>
          </next>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>