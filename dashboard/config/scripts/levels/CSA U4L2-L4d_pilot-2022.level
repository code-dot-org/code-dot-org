<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In ImageScene.java:\r\n\r\n1. Write the `equals()`(#e7e8ea) method. It should return `true`(#e7e8ea) if the number of images in the `images`(#e7e8ea) array of both `ImageScene`(#e7e8ea) objects are the same. Otherwise, return `false`(#e7e8ea).\r\n\r\n##In MyTheater.java:\r\n\r\n2. Write an `if/else`(#e7e8ea) statement using your `equals()`(#e7e8ea) method to check if `firstImages`(#e7e8ea) and `secondImages`(#e7e8ea) are equivalent.\r\n\r\n   a. If the `equals()`(#e7e8ea) method returns `true`(#e7e8ea), use `Theater.playScenes(firstImages)`(#e7e8ea) to play only `firstImages`(#e7e8ea).\r\n   \r\n   b. If the `equals()`(#e7e8ea) method returns `false`(#e7e8ea), call `secondImages.createScene()`(#e7e8ea) then use `Theater.playScenes(firstImages, secondImages)`(#e7e8ea) to play both scenes.\r\n   \r\n![](https://images.code.org/e0332decbf2e6e0396c019c0d50c8039-image-1653075350052.gif)\r\n\r\n::: details [**Show Me How**]\r\nThe `equals()`(#e7e8ea) method uses the following syntax:\r\n  \r\n  ```\r\n  public boolean equals(Object otherObject) {\r\n    // code to compare values\r\n  }\r\n  ```\r\n\r\nDon't forget to first check if `otherObject`(#e7e8ea) is `null`(#e7e8ea)!\r\n\r\nTo call the `equals()`(#e7e8ea) method in an `if`(#e7e8ea) statement, use the following syntax:\r\n\r\n   ```\r\n   if (firstObject.equals(secondObject) {\r\n     // code to execute\r\n   }\r\n   ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "The ImageScene Class",
    "bubble_choice_description": "Write an equals() method in the ImageScene class to check if ImageScene objects are equivalent.",
    "thumbnail_url": "https://images.code.org/efea2437f7911893fec65d579f0a3a5e-image-1650499050146.png",
    "starter_assets": {
      "amp.jpg": "ab60421b-1f2e-46e1-be79-ac6d2dea211f.jpg",
      "piano.jpg": "82f54566-62fe-414d-9522-889ba7b1193c.jpg",
      "guitar.jpg": "a3cab07e-4aca-4626-b058-aab4d8326956.jpg",
      "violin.jpg": "7ba069d0-93ba-4a73-971e-64ecde7ffc2b.jpg",
      "burger.jpg": "e68f9302-7f5c-4ad6-b365-1734eed60b70.jpg",
      "pineapple.jpg": "84b1b9b2-6a85-4b96-b767-38fb156850e6.jpg",
      "pizza.jpg": "d38ee534-b6f6-469c-a566-355f0cee1a06.jpg",
      "pasta.jpg": "dddbe2df-4133-4e31-a153-3f5af3816420.jpg"
    },
    "encrypted_exemplar_sources": "88cqqh4PFE13VUB7Wdee/b0dxeEfZcOIwxv+hsPvwwJ6AAh93+MveIEePbEe\nzUvl32CxgIAQVENVjfTpm39LWs4OmG3N7O5hL5NznwfvNuKh0O/2XXDY5lJ1\nSoqADHv0SLCJPRoZyzzCYxdxwel9ERw9hiRlEjuiZZDLoKkydfu3biNZ/slr\njPvBSUHd3hjgDFJP3jrz+jhQO8PhQH8xLOLSC7Y4hk3QSFJ6bXGsdio1jLIg\n3Vz2fGvp7BDnM9m9JtShtSxOuuFr9NqLIgbT2kkQEILS5sTxYjCAFZAYKTfo\nqEf63GQaCIkLPWi14RjusenK62d1Y/QuSQqNo2f4jlrHK8zHf1Y6Ai516X/m\n3cHar1akM4oBso0Lk+e7XQUQDSIOfJEKI8BQcMF6tv9lheyiFLtlJVwNy3tu\nlw4+mc/aaZZrzlrpKFXtNfXVbrsnPNKi7ut5iF20NilPKL6+0QLO8t0z35I7\n3rWLHH7Th1MDKzTkEGfYBA2tFIk9joLBV4LGdEdLMd2RbFX1AACYct50ABQB\nnrwo6JAPD+hYgepBX4tUPjrE8KQ7oe3asO1JObRoMQNykAE+URLzUiT+M/1D\nGXDgvlsFZF2jdlB21cbB1Y7rShuK40Kuh4Xp9Sh1EWeDUB4KXLtp7v3u0c6s\n5DedZM93gA9x/eL6RcmAg4sBJQlI/iWzMx4BXmPWKKvkb7Wy/AY8obQcjFWH\nBww/e6/YQOmuouhlmTmPifKSR7gv43BZzrCFcJBRbC3ZTpFlJrBeYiUnT9P5\ne2AAPt17jrG4NNzKY4cpvxl0N91Npx0imUNH9ee7OtWrPvVTDZrQhRtX2G7J\nHp1PWZmWYRmvLiKWmwrnSRkh5TYfnzAGm9ckPCN4kisHiArnqurvBonVPeaq\nvBek9eRM6NLgev4XZdtSI2n/xEf38kZEgaU3xd4KwADeNmQ3kOqOeDpJaEpr\n5LW1AQadrrSqfzLeuCVerg6ogxfqmtB+TZOpeoc7D48W3P7XCYopq/b7ULnu\nFebO1hLT0cpFrubHL/wycnf8NG/CzkmM3VBk8W1tDF+czt3x4ebpDPTH+aY8\nsFU6qpchnXM5wh73IB/kRHjGWW+7vgNIXG7GhBMSV9310P6E30Sfo3Op8WZx\nihV/kQybDLR2PGAw4fgRfX7OJdrSCktbFDCA3mmfQgAO3HF4psJdDseR3EFH\nxWaGTTId1u4ky387UYRp3JKVHBOqwSneL1TIClQvIn4Jv3a0tBeEARmB2410\ndJWfxbP/vGdXMxs3CW3ntIqs+jcJ9pXw2ig+NurSt3apxQ+7auT938K6HHhQ\ngjSQgsAVIH1QNZK4bXnd29UdANPdqRF08wxrOg+SBdv1os15B/lWDUa/PEMC\nHCNN/MIawwbYwphWxwzQYLyVtgFU3SfSoBuAs0dYRiJFeOh0wdSsbOjrCa2h\ns437/gm44uguj4EZ3AmUvQ8SRF4CjbtZNwoRWYnndWVXn3fZP5mJWs0YFVMK\nv/OyRUj9oOw7D3hJSxc6VyvEyn6+usWYxfB0gOZm6tNByKA+6mKzdn+8BLeM\nN62wPCVbXTe5gagzbasqkXfhxWpNUp17TdFM7cG3L2L6VOQOfBFVm2SwdLSa\nIPsdlnUM2zxyGDMEtj43sZKO8R0rZGnJgdJKwS9mzKTRAihM3CmL9nwRMgaO\ndM8VSGgvI9GK96gv11mdDj0eyVk+ldQ/79Evm1dltbLidBW8nMkEM2VHdCEA\n1aPjGOK1M41f/74rglr1m47avt7j5fUu8HmP99POHCAa0jbj14/L01/4SJH0\nBrJbdITWwO9fC+sUpADe6X8WbwSUCLjw9dOpViOrEPl1marLEPUGWHFJOmvG\n1WKB+TA5h1R2gBBIPsITe4ndCr4SH9YMhP1tgnxi/3QTIxJerC2USA6PN4R0\nZqAg64J3io4cMzOwm+zF5wbpBp89qhhi9YBrFMd0yPJMz+oJzD/o8TWwhMTW\nac+qdng8MNSxhLX8zum5/mtErkAoFaubABvNoWPTrZGAdpjynUVk+lURpmJR\nzltd7DWnTHSPWiDb44k5xLYzSgyJ7dEhsP/UeaPruJE/FfbN/c/yRAH5Y8q5\nd5CGBjnuE73XaYdQBVJfRzZEk+xyTgEjZdcXUJnYnv2zEip24x5BsXU=\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "kPJunDKipld6ozMHn7ODR58sb71ckek+PaBiN8arA7kNjMiCUjlG6tty8vMn\nygMKRAugjPMuUkzrm4qqqwCcRS3tRl2NHrhzY1Q/44y0WKAYqYvxPlVlDrwl\nsKaOtUDIwu6gLiPcHNTd6btabA6+2fPnymR1U28TzNtE5eBj/7x/Ae2Gq0qH\nFNS5DrvEDC2xu/5wTeNCqmegO+qanx/i5CNnlvzXKwe0VZX0QNneu6BiU6EF\n6ox53Vcxt4HL2SmQzXAf8lNke1tTdfSdNlwx4u1NykkxGmR0RWSK4uvomLLD\ntMM14IespMuB0BpOvofzzeo+PMGxRmH1TDCkebz0fgz0Ah0yT5Lp8xgsjRwY\nmouEjXuvtIP7IW2mHIKDF/wlY8Ray9soUy4Co2uPI8aBxVQ8HouayRx1mv3h\nFKPEN9Yy/2bDzXoJSMEp9WKPZrbppaQlisWvmoRBrDmw4V1dx/kwTOYrrbxS\n7m6tEFe6blDXQsnCRx0RHHGtReml5EBVxledKqZlA8U4hHffgVY0CHGdMZTV\n4QxwUMIaz8wiEW3X28eWvdUkqgci5qnpxmlH10HMvF9M6qez8ka9v2L1IwBW\nySzFxqEnbsVQ7BabeUK7GB/k5x7LmWFRizXuFhuuzTLK6BfnOpF6p2X3DFCl\nn7t0iHcJvVBUlNOjKVvkEaRlYD+iREPn2KU4WN35q18S8TnBrc5WI1UBsDZg\nAfhfzhaKj47lqvRf/yYvzxw03UmfK/9u+yT1LWQ92GMGgz/YDzQnnQiQZKUd\nMAyzG6VaCagqOvD+Coy04X+Ldxf/c0dILpoXrCftUqsdXTRPjXZJj3HbnS2W\nlZeTa6MHFo86qHxwnMAkpQfFjOWGyOmrBmLrZCfxQIGv6BtBuARCoujD4lm0\na9NGU4dSZCL97bjG1lhbdbhO5E8XqX7IIM6UnD534Vk7Do9ToJYP91TdmUh8\nvOm4/rq0c939HtEsnNB/dKTBgFwOyO9MZ6tUxpTtp8xxSQqXoMUs8vxO1kj1\nC+4u2KN4mNrvuowmwy4bUafVhtlFK9nG0sBJaocn8GWF/rY2/VV6y7UAQob3\nJc/txuqM9ckrYGBA1MgWbj1bI4ZAGPEHTdE5UNSxMurDvK3BghHrEt9XAzNP\nLzrHL2YXdpHuLjzrQ5wH8zi12wga5b6rzpaqGfzqJVP004GeDpbcaTP4eeKP\nbod846ZtPCmTuY6NAWJkkturrXjxwsAalgwQoesu8nVjnaJB5bZLqrRtCYzk\nkywny4Z9wobvPlwNNhGGdqA0iKrm2Zs3qN4pXuUX8DFx9qmH0g+TTkV3tFwG\nt8LZOsu2IRC0b4UJs35lSzs5zN869PIqff/vVBvHKSxTBsJWbDUrRwbw0PHO\ncmTzLrT9+t/ADitss3t36EzUs3UhWm06REpIs4woSlIv4TMxSojse28pxcTn\nK/a0k3BZW6S6p00i3xiMLPY1v7fC2sic4fy2aP6wafbDfmTeBiIwAgQST5SN\nMwGtNxlxnYj7qhXKKSedY3WgmgoZr5YxtRObbVfWfXan5DoMgfjgh4dRlvBn\nXMmZtOkVr1HvduDRiM4r6Zeyv+SPsGNZXKpvjXh6LWt806oz2f5mqzBN1UqC\n1uNFks+r1PrAWA9zNrZqrbb26Aoi+lkW/LU9e5HB9GlSXNyFq71jb1lU2XZS\n2MeYGO0o+lkILBEmPVbXItEweJDy0rHoJKmk5Z2aLvyLfKeLdBwjTx1pEn2+\nw0CtKyi09pa8QTGf5JwDjUBn30ytb/Pekk9H7MXWevavNxm8WpxOIq46PDJ+\n8QI4hntShptaHgiTR76X9Ue5K/CxDuW76K19OQ7Z9c2mbm5OHcNSO/12VHeb\nWuwoN9dNIP1Ex7958Dny4blu72cmYpoMUQvuaQHueMzpJZn6NnHs56kZbEnx\nR1LNj+LbpPB5JyaKkTN0l2+wEmoO2uB1WyEtQzCmq8Bj1cAArv4pbAgxWWrQ\nNZlxp/J2hp2NoGXWzzBF2jEOkp5nCYy12wJWGKeLDExc23KyWAqchba+aTwP\n8k/pnhyDHMKelHfCw7zsUQbpPIo4zZWt9tL6gNR0aElwuFNJHvU8NwRdP7/Z\niLP8EA/se8Qmo/IPZyTQthsO2zHi6MJqn/v3rLn/3A14RLWwKgwiim77v6jn\nTM8WNJC0ThlnYUiNTbRyHo0jSv2utdkZxH0GWbVnjYhV0+9fVcWmbCBkAj2a\nHg5mtf8pDHU8OyHzX05I87AurbNBoc4sYDlP0uLst2CiB4TV6b+r/t0e4gt3\nSU3bfxmFXu+TTLJoRgZicRnxQjAnp8emV8lGgroSbGf1t57Z9UUS2Wlv6bbr\nQcY3x6pvGIpg4VhS91H3xvBip1tsEfs+59bzxn/6QYQMukZAM+BYhHtQ9N4M\n3TjbGev9H13r4wNnics/ZSe8cuuFeRItF9u1hu6dKdgVoziG8159Tp7WOkQi\nx/01UC1B8GHklcT+faonoj4uHiINQv/61FjTaDYFZRxWUl5HOlLe42cYQkx7\n3mCLfgr+HBt2I2dldcgeKqN0weRsPdR8FTjsvSo99iLetwYWpBEotfHyjpL1\nn+YPLblzs/gfFGf3w15SRFb2ZzNClHr2h2c4GxZ0fGpjom0dyZn2McroZ48C\nS9sElPlqShyxTk+rfF22rSRPzZyoz1TyuC8BJOzInSr4eCjwLzw61WPkWC5x\n27wGv/B6D7niBWvXBOlxoyXGsJ4woA3X3ZIhLYeoSYsh7dHZM0sgNlCgLC2r\nMWf0GBPLmMP46nHYYN/8KGoY95WcCelBUxlIl2fYjb6B/+xJYQopomDU46e9\ngk52lecIkikHrtYKP04fXwIMsav8HUQLX70oPyR0Xff+ckJfgUz5hsSZamk2\n2RWAy+bo5tUfY0zwa9Sjz/ohcXXnWW4QWwSOVUqpufAS613e5SSnu3aQaUJ3\nblMBpXbvng7Amnu8+rNXWIAtnJ3sfbTBq0G4NFHEu2U84G6P3hRiD8LGya/e\nGTvPOCktUovPvaAzlJG7kCagVCW4CQmW4lrFqJ3zXd7qSYoo3Qi174Qs1EnL\n2qiY8+Cg6N6PujMinYO2GBJXaFnNfAPLND/16KnhZrcrS+dw46eFrPg=\n",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    String[] music = {\"amp.jpg\", \"guitar.jpg\", \"piano.jpg\", \"violin.jpg\"};\n    ImageScene firstImages = new ImageScene(music);\n\n    String[] food = {\"burger.jpg\", \"pineapple.jpg\", \"pizza.jpg\", \"pasta.jpg\"};\n    ImageScene secondImages = new ImageScene(food);\n\n    firstImages.createScene();\n\n    // TO DO #2: Write an if/else statement to decide which scene(s) to play.\n    \n    \n  } \n}",
        "isVisible": true
      },
      "ImageScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Represents a scene of images\n */\npublic class ImageScene extends Scene {\n\n  private String[] images;  // The array of image files\n\n  /*\n   * Constructor to create a ImageScene with\n   * an array of images\n   */\n  public ImageScene(String[] images) {\n    this.images = images;\n  }\n\n  /*\n   * Returns the array of images\n   */\n  public String[] getImages() {\n    return images;\n  }\n\n  /*\n   * Creates the image scene\n   */\n  public void createScene() {\n    for (int index = 0; index < images.length; index++) {\n      drawImage(images[index], 0, 0, getWidth());\n      pause(0.5);\n    }\n  }\n\n  // TO DO #1: Write the equals() method.\n  \n  \n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:31:56.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:31:56.189+00:00\",\"changed\":[\"cloned from \\\"CSA U4L2-L4d_2022\\\"\"],\"cloned_from\":\"CSA U4L2-L4d_2022\"},{\"changed_at\":\"2022-09-21 02:36:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-21 02:37:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
