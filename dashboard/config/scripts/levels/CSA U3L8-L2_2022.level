<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nRun the program to observe the results.\r\n\r\nThen, experiment with the program by making the following modifications. Change one line at a time, then run the program after each change to observe the results.\r\n\r\n1. What happens when you run the program? Which line is causing the error?\r\n\r\n2. In `States.java`(#e7e8ea), change the condition of the `for`(#e7e8ea) loop on **Line 23** to `stateNames.length - 1`(#e7e8ea). Do you still get the error? Why do you think this fixed the problem?\r\n\r\n3. In `MyConsole.java`(#e7e8ea), add the following lines of code:\r\n\r\n```\r\n// change the file to areas.txt\r\nmyFileReader.setFile(\"areas.txt\");\r\n\r\n// read the data from the areas.txt file\r\nint[] areas = myFileReader.getIntData(50);\r\n\r\n// print the pairs of data with the updated description\r\nmyStates.printPairs(\"area in square miles\");\r\n```\r\n\r\nDoes the program still work and perform as expected?\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://github.com/CivilServiceUSA/us-states)!*",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"statenames.txt\");\n\n    String[] stateNames = myFileReader.getStringData(50);\n    myFileReader.setFile(\"population.txt\");\n    int[] population = myFileReader.getIntData(50);\n\n    States myStates = new States(stateNames, population);\n    \n    myStates.printPairs(\"population\");\n\n    // TO DO #3: Add the code to read and analyze the areas file.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "States.java": {
        "text": "/*\n * Analyzes data about states in the USA\n */\npublic class States {\n\n  private String[] stateNames;  // The array of state names\n  private int[] data;           // The array of data to analyze\n\n  /*\n   * Constructor to create a States object with the\n   * specified arrays of state names and data\n   */\n  public States(String[] stateNames, int[] data) {\n    this.stateNames = stateNames;\n    this.data = data;\n  }\n\n  /*\n   * Prints each pair of states, the description of the data, and whether or not the first\n   * state's data value is greater than the second state's data value\n   */\n  public void printPairs(String description) {\n    for (int index = 0; index < stateNames.length; index++) {\n      System.out.print(stateNames[index] + \" has larger \" + description + \" than \" + stateNames[index + 1] + \": \");\n      System.out.println(compareValues(data[index], data[index + 1]));\n    }\n  }\n\n  /*\n   * Returns true if the first value is greater than the\n   * second value, otherwise returns false\n   */\n  public boolean compareValues(int first, int second) {\n    if (first > second) {\n      return true;\n    }\n\n    return false;\n  }\n\n}",
        "isVisible": true
      },
      "statenames.txt": {
        "text": "Alabama\nAlaska\nArizona\nArkansas\nCalifornia\nColorado\nConnecticut\nDelaware\nFlorida\nGeorgia\nHawaii\nIdaho\nIllinois\nIndiana\nIowa\nKansas\nKentucky\nLouisiana\nMaine\nMaryland\nMassachusetts\nMichigan\nMinnesota\nMississippi\nMissouri\nMontana\nNebraska\nNevada\nNew Hampshire\nNew Jersey\nNew Mexico\nNew York\nNorth Carolina\nNorth Dakota\nOhio\nOklahoma\nOregon\nPennsylvania\nRhode Island\nSouth Carolina\nSouth Dakota\nTennessee\nTexas\nUtah\nVermont\nVirginia\nWashington\nWest Virginia\nWisconsin\nWyoming",
        "isVisible": true
      },
      "population.txt": {
        "text": "4833722\n735132\n6626624\n2959373\n38332521\n5268367\n3596080\n925749\n19552860\n9992167\n1404054\n1612136\n12882135\n6570902\n3090416\n2893957\n4395295\n4625470\n1328302\n5928814\n6692824\n9895622\n5420380\n2991207\n6044171\n1015165\n1868516\n2790136\n1323459\n8899339\n2085287\n19651127\n9848060\n723393\n11570808\n3850568\n3930065\n12773801\n1051511\n4774839\n844877\n6495978\n26448193\n2900872\n626630\n8260405\n6971406\n1854304\n5742713\n582658",
        "isVisible": true
      },
      "areas.txt": {
        "text": "52420\n665384\n113990\n53179\n163695\n104094\n5543\n2489\n65758\n59425\n10932\n83569\n57914\n36420\n56273\n82278\n40408\n52378\n35380\n12406\n10554\n96714\n86936\n48432\n69707\n147040\n77348\n110572\n9349\n8723\n121590\n54555\n53819\n70698\n44826\n69899\n98379\n46054\n1545\n32020\n77116\n42144\n268596\n84897\n9616\n42775\n71298\n24230\n65496\n97813",
        "isVisible": true
      }
    },
    "encrypted_examples": [

    ],
    "map_reference": "/programming_environments/javalab"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-03-25T12:56:11.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-03-25 12:56:13 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:02:51 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:13:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:14:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:20:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:20:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:25:08 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:28:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:29:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 14:29:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 20:43:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 20:43:55 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 20:44:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 20:46:27 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-02 20:47:57 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 12:19:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 12:21:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 12:23:21 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 19:29:08 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
