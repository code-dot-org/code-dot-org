<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nRun the program to observe what it does, then make the following changes to the program. Run the program after each change to observe what it does.\r\n\r\n1. Run the program and enter a negative number for the price. What happens? Does this make sense?\r\n\r\n2. In `Clothes.java`(#e7e8ea), change the `setPrice`(#e7e8ea) to check if the `newPrice`(#e7e8ea) is a valid number. If the `newPrice`(#e7e8ea) is greater than `0.00`(#e7e8ea), then update `price`(#e7e8ea). For example:\r\n\r\n```\r\nif (newPrice > 0.00) {\r\n  price = newPrice;\r\n}\r\n```\r\n\r\nThe `modifyClothes()`(#e7e8ea) method in `Clothes.java`(#e7e8ea) uses the `Scanner`(#e7e8ea) class to obtain input from the user. It uses the `showOptions`(#e7e8ea) method to show the available options to the user.\r\n\r\n3. Run the program and enter a value that is not one of the choices, like `3`(#e7e8ea). What happens?\r\n\r\n4. What could you add to the `modifyClothes()`(#e7e8ea) method to tell the user their choice was invalid? Try adding an `if`(#e7e8ea) statement at the beginning of the `while`(#e7e8ea) loop to check if `choice`(#e7e8ea) is greater than `2`(#e7e8ea). Print a message that their choice is invalid if this is true.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Clothes myClothes = new Clothes();\n\n    System.out.println(\"Clothes size: \" + myClothes.getSize());\n    System.out.println(\"Clothes price: \" + myClothes.getPrice());\n\n    System.out.println(\"--------------------\");\n\n    myClothes.modifyClothes();\n\n    System.out.println(\"--------------------\");\n    \n    System.out.println(\"Clothes size: \" + myClothes.getSize());\n    System.out.println(\"Clothes price: \" + myClothes.getPrice());\n  }\n}",
        "isVisible": true
      },
      "Clothes.java": {
        "text": "import java.util.Scanner;\n\n/*\n * Represents a clothing item\n */\npublic class Clothes {\n\n  private String size;   // the size of the clothing item\n  private double price;  // the price of the clothing item\n\n  /*\n   * Creates a clothing item that is\n   * size small and price of 10.99\n   */\n  public Clothes() {\n    size = \"small\";\n    price = 10.99;\n  }\n\n  /*\n   * Creates a clothing item with the\n   * specified size and price\n   */\n  public Clothes(String newSize, double newPrice) {\n    size = newSize;\n    price = newPrice;\n  }\n\n  /*\n   * Returns the size of the clothing item\n   */\n  public String getSize() {\n    return size;\n  }\n\n  /*\n   * Returns the price of the clothing item\n   */\n  public double getPrice() {\n    return price;\n  }\n\n  /*\n   * Sets the size of the clothing item\n   * to the specified size\n   */\n  public void setSize(String newSize) {\n    size = newSize;\n  }\n\n  /*\n   * Sets the price of the clothing item\n   * to the specified price\n   */\n  public void setPrice(double newPrice) {\n    price = newPrice;\n  }\n\n  /*\n   * Shows the options to the user\n   */\n  public void showOptions() {\n    System.out.println(\"What do you want to modify?\");\n    System.out.print(\"Enter 1 for size, 2 for price, or 0 to quit: \");\n  }\n\n  /*\n   * Allows the user to enter a new size or a new price\n   */\n  public void modifyClothes() {\n    Scanner input = new Scanner(System.in);\n    \n    showOptions();\n    int choice = input.nextInt();\n    input.nextLine();\n\n    while (choice != 0) {\n      if (choice == 1) {\n        System.out.print(\"Enter the new size: \");\n        String size = input.nextLine();\n        setSize(size);\n      }\n\n      if (choice == 2) {\n        System.out.print(\"Enter the new price: \");\n        double price = input.nextDouble();\n        setPrice(price);\n      }\n\n      showOptions();\n      choice = input.nextInt();\n    }\n\n    input.close();\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-03-12T13:20:27.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-03-12T13:20:27.345+00:00\",\"changed\":[\"cloned from \\\"CSA U2L8-L1v2 Placeholder_2022\\\"\"],\"cloned_from\":\"CSA U2L8-L1v2 Placeholder_2022\"},{\"changed_at\":\"2022-03-12 13:20:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-15 13:52:37 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-15 13:53:13 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-15 15:19:25 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-15 15:41:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-15 15:43:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-15 15:44:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-15 15:59:47 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-19 15:45:14 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
