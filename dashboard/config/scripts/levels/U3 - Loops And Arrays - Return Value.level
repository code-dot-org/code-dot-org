<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-11-12T21:35:44.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Make the search function return the value of true or false.  (Click to see full instructions)",
    "markdown_instructions": "# Return Values\r\n\r\n**Instead of just printing to the console if a value is in an array, it might be useful to use the true or false value to make decisions in our programs.** We have seen a function like this before with `includes`. Includes returns a boolean value of true or false which allowed us to write complex logic for the Movie Bot. Let's make our search function return a value as well.\r\n\r\n# Do This\r\n\r\n* Instead of logging the value of your boolean variable to the Debug console **return the variable. **\r\n\r\n<img src=\"https://images.code.org/02a267766b8e072f71ae7c146b424854-image-1447365899274.gif\" style=\"width: 400px\">\r\n\r\n\r\n* **`Console.log` the value of the function call** to see the result. \r\n\r\n<img src=\"https://images.code.org/cc71cee174419d60468ff0b61b25333f-image-1447365879135.gif\" style=\"width: 550px\">\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_blocks": "var justFive = [5];\r\nvar noFive = [1,2,3];\r\nvar testArray = [1,5,3,6,7,5,2,7];\r\nvar bigArray = [ randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10),randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10)];\r\n\r\nconsole.log(\"The bigArray contains the number 5:\");\r\nsearch(bigArray, 5);\r\n\r\nfunction search(list, searchValue){\r\n  var hasElement = false;\r\n  for (var i = 0; i < list.length; i++) {\r\n  \tif (list[i] == searchValue) {\r\n       hasElement =true;\r\n  \t}\r\n  }\r\n  console.log(hasElement);\r\n}"
  }
}]]></config>
  <blocks/>
</Applab>