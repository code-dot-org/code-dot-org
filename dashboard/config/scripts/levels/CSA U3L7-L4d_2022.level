<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "using polymorphism",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Ticket firstTicket = new Ticket(1);\n    WalkupTicket secondTicket = new WalkupTicket(2);\n    AdvanceTicket thirdTicket = new AdvanceTicket(3, 11);\n    StudentAdvanceTicket fourthTicket = new StudentAdvanceTicket(4, 7);\n\n    // TO DO #1: Create a Ticket array containing the Ticket objects.\n    \n\n    // TO DO #2: Traverse the Ticket array and print the ticket\n    // information and the ticket price.\n\n    \n  }\n}",
        "isVisible": true
      },
      "Ticket.java": {
        "text": "/*\n * Represents a ticket for an event\n */\npublic class Ticket {\n\n  private int ticketNumber;   // The ticket number\n\n  /*\n   * Constructor to create a Ticket object\n   * with a specified ticket number\n   */\n  public Ticket(int ticketNumber) {\n    this.ticketNumber = ticketNumber;\n  }\n\n  /*\n   * Gets the price of the ticket\n   */\n  public double getTicketPrice() {\n    return 0;\n  }\n\n  /*\n   * Returns a String with the ticket number\n   */\n  public String toString() {\n    return \"Ticket No \" + ticketNumber;\n  }\n  \n}",
        "isVisible": true
      },
      "WalkupTicket.java": {
        "text": "/*\n * Represents a ticket for an event\n * that is purchased on the day of the event\n */\npublic class WalkupTicket extends Ticket {\n\n  /*\n   * Constructor to create a Ticket object\n   * with a specified ticket number\n   */\n  public WalkupTicket(int ticketNumber) {\n    super(ticketNumber);  // Calls the Ticket constructor\n  }\n\n  /*\n   * Gets the price of the ticket\n   */\n  public double getTicketPrice() {\n    return 50;\n  }\n  \n}",
        "isVisible": true
      },
      "AdvanceTicket.java": {
        "text": "/*\n * Represents a ticket for an event that\n * is purchased in advance\n */\npublic class AdvanceTicket extends Ticket {\n\n  private int numDays;  // The number of days in advance the ticket is being purchased\n\n  /*\n   * Constructor to create a AdvanceTicket object with a\n   * specified ticket number and number of days in advance\n   */\n  public AdvanceTicket(int ticketNumber, int numDays) {\n    super(ticketNumber);\n    this.numDays = numDays;\n  }\n\n  /*\n   * Gets the price of the ticket based on the\n   * number of days in advance it is being purchased\n   */\n  public double getTicketPrice() {\n    if (numDays >= 10) {\n      return 30;\n    }\n    else {\n      return 40;\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "StudentAdvanceTicket.java": {
        "text": "/*\n * Represents a student ticket for an event that\n * is purchased in advance\n */\npublic class StudentAdvanceTicket extends AdvanceTicket {\n\n  /*\n   * Constructor to create a StudentAdvanceTicket object with\n   * a specified ticket number and number of days in advance\n   */\n  public StudentAdvanceTicket(int ticketNumber, int numDays) {\n    super(ticketNumber, numDays);\n  }\n\n  /*\n   * Gets the price of the ticket based on the number of days\n   * in advance it is being purchased and discounts it in half\n   */\n  public double getTicketPrice() {\n    return super.getTicketPrice() / 2;\n  }\n\n  /*\n   * Returns a String with the ticket number and reminder\n   * to show their student ID\n   */\n  public String toString() {\n    return super.toString() + \" (must show their student ID)\";\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\n/g==\n",
    "encrypted_examples": [

    ],
    "display_name": "Ticket",
    "bubble_choice_description": "Create a Ticket array and get the prices for each type of ticket.",
    "thumbnail_url": "https://images.code.org/702e21c287af3af65722266723505373-image-1648686740066.png"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-03-25T12:50:13.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-03-25 12:50:15 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 22:05:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 23:26:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 23:43:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 23:47:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 23:56:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 23:56:57 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-30 23:57:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 00:33:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
