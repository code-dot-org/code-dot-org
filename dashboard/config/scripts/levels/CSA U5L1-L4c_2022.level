<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A social media analyst wants to store data about the top five most followed Instagram accounts to create a visual for each user. They have the following values:\r\n\r\n![](https://images.code.org/4d8c4e750832b8f35456740e25e041f3-image-1650931723109.08.24 PM.png)\r\n\r\nwhere each row represents Instagram, Cristiano Ronaldo, Ariana Grande, Dwayne Johnson, and Kylie Jenner, respectively. Each column represents the username, owner's name, and followers in millions, respectively.\r\n\r\n##In InstagramScene.java:\r\n\r\nWrite the `createDataArray()`(#e7e8ea) method:\r\n\r\n1. Declare and initialize a 2D `String`(#e7e8ea) array called `tempData`(#e7e8ea) to store the values using an initializer list.\r\n\r\n2. Return the `tempData`(#e7e8ea) array.\r\n\r\nWrite the `getUserInfo()`(#e7e8ea) method:\r\n\r\n3. Return a `String`(#e7e8ea) array containing the row in the 2D array `users`(#e7e8ea) that corresponds with the parameter `user`(#e7e8ea).\r\n\r\n**Hint:** Use the `getUserRow()`(#e7e8ea) method in the `InstagramScene`(#e7e8ea) class to get the row in the `users`(#e7e8ea) array for the parameter `users`(#e7e8ea).\r\n\r\n##In MyTheater.java:\r\n\r\n4. Call the `createScene()`(#e7e8ea) method with a user's name (for example, `\"Dwayne Johhnson\"`(#e7e8ea)).\r\n\r\n5. Call `Theater.playScenes()`(#e7e8ea) to play the scene.\r\n\r\n::: details [**Show Me How**]\r\nA 2D array is declared and initialized using the following syntax:\r\n  \r\n  ```\r\n  dataType[][] variableName = { {row1value1, row1value2, row1value3}, {row2value1, row2value2, row2value3} };\r\n  ```\r\n\r\nBe sure to change `variableName`(#e7e8ea) to a name you can easily identify, and add the values for each row in the 2D array inside curly braces `{ }`(#e7e8ea).\r\n\r\nValues are accessed using the following syntax:\r\n\r\n  ```\r\n  variableName[row][col];\r\n  ```\r\n  \r\nSpecify the specific `row`(#e7e8ea) and `col`(#e7e8ea) of the value you want to access.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "bubble_choice_description": "A social media analyst wants to store data about the top five most followed Instagram accounts to create a visual for each user. Declare and initialize a 2D array to store the values.",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    InstagramScene topFive = new InstagramScene();\n\n    // TO DO #4: Call the createScene() method with a user's name (i.e., \"Dwayne Johnson\").\n    \n\n    // TO DO #5: Use Theater.playScenes() to play the scene.\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "InstagramScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a scene to show the an Instagram user\n * and their information\n */\npublic class InstagramScene extends Scene {\n\n  private String[][] users;   // The 2D array of Instagram users\n\n  /*\n   * Constructor to create an InstagramScene\n   * with the specified 2D array of users\n   */\n  public InstagramScene() {\n    this.users = createDataArray();\n  }\n\n  /*\n   * Returns the 2D array of Instagram users\n   */\n  public String[][] getUsers() {\n    return users;\n  }\n\n  /*\n   * Declares, initializes, and returns a 2D array\n   */\n  public String[][] createDataArray() {\n    // TO DO #1: Declare, initialize, and return a 2D String array\n    // called tempData containing the values for each Instagram user.\n    \n\n    // TO DO #2: Return the tempData array.\n    return null;\n  }\n\n  /*\n   * Returns a String array containing the information\n   * in the corresponding row for the parameter user\n   */\n  public String[] getUserInfo(String user) {\n    // TO DO #3: Return the row in the 2D array users that corresponds with the user.\n\n    \n    return null;\n  }\n\n  /*\n   * Returns the row in the 2D array users for the specified user\n   */\n  public int getUserRow(String user) {\n    int userRow = 0;\n\n    if (user.equals(\"Instagram\")) {\n      userRow = 0;\n    }\n    else if (user.equals(\"Cristiano Ronaldo\")) {\n      userRow = 1;\n    }\n    else if (user.equals(\"Ariana Grande\")) {\n      userRow = 2;\n    }\n    else if (user.equals(\"Dwayne Johnson\")) {\n      userRow = 3;\n    }\n    else if (user.equals(\"Kylie Jenner\")) {\n      userRow = 4;\n    }\n\n    return userRow;\n  }\n\n  /*\n   * Returns the image file for the specified user\n   */\n  public String getUserImage(String user) {\n    String userImage = \"\";\n\n    if (user.equals(\"Instagram\")) {\n      userImage = \"instagram.png\";\n    }\n    else if (user.equals(\"Cristiano Ronaldo\")) {\n      userImage = \"cristianoronaldo.jpg\";\n    }\n    else if (user.equals(\"Ariana Grande\")) {\n      userImage = \"arianagrande.png\";\n    }\n    else if (user.equals(\"Dwayne Johnson\")) {\n      userImage = \"dwaynejohnson.jpg\";\n    }\n    else if (user.equals(\"Kylie Jenner\")) {\n      userImage = \"kyliejenner.jpg\";\n    }\n\n    return userImage;\n  }\n\n  /*\n   * Draws the specified text at the given x and y\n   * position, then pauses for 0.3 seconds\n   */\n  public void drawTextAndPause(String text, int xPos, int yPos) {\n    drawText(text, xPos, yPos);\n    pause(0.3);\n  }\n\n  /*\n   * Creates a scene by drawing the image of the user\n   * and text containing the information about the user\n   */\n  public void createScene(String user) {\n    String[] userInfo = getUserInfo(user);\n    String userImage = getUserImage(user);\n    \n    drawTextAndPause(userInfo[0], 50, 50);\n    drawTextAndPause(\"Followers: \" + userInfo[2], 200, 200);\n    drawTextAndPause(userInfo[3], 50, 350);\n\n    drawImage(userImage, 20, 75, 125);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "display_name": "Instagram Users",
    "thumbnail_url": "https://images.code.org/22533bab7292daad541f9ded272fa5fa-image-1650931060148.png",
    "starter_assets": {
      "instagram.png": "12ea2c48-4348-451b-bceb-eaed3e3413cd.png",
      "cristianoronaldo.jpg": "7282ce74-cf47-4d98-ad0f-07fd884bf3f6.jpg",
      "arianagrande.png": "7a8f8a03-6cfd-4d03-ad2f-26b8db110f36.png",
      "dwaynejohnson.jpg": "599141f3-d7b5-4615-ae23-ccf121e7a63f.jpg",
      "kyliejenner.jpg": "6fd80c17-349c-4852-a0cd-fac37dfa3fbd.jpg"
    },
    "encrypted_exemplar_sources": "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\na/Yo+dk=\n"
  },
  "game_id": 68,
  "created_at": "2022-04-12T18:52:28.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-12T18:52:28.823+00:00\",\"changed\":[\"cloned from \\\"CSA U5L1-L4b_2022\\\"\"],\"cloned_from\":\"CSA U5L1-L4b_2022\"},{\"changed_at\":\"2022-04-12 18:52:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-25 20:58:23 +0000\",\"changed\":[\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-25 21:16:14 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-25 21:25:02 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 00:09:01 +0000\",\"changed\":[\"long_instructions\",\"bubble_choice_description\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 00:10:03 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 00:22:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 00:22:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 00:51:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 00:51:38 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 20:27:29 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 20:28:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 20:28:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 20:33:01 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 20:33:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 20:33:35 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 21:01:57 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-08 21:02:07 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
