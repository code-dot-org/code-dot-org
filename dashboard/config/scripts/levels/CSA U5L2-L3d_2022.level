<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A students wants to store data about the bestselling books to create a visual based on the number of reviews each book received. They have a 2D array of `Book`(#e7e8ea) objects, where each row represents each year from 2016 to 2019. Each row contains `Book`(#e7e8ea) objects that represent bestselling books for that year.\r\n\r\n##In BookScene.java:\r\n\r\n1. Write the `createScene()`(#e7e8ea) method to find which `Book`(#e7e8ea) objects have at least `10000`(#e7e8ea) reviews.\r\n\r\n   * Draw the book cover for each `Book`(#e7e8ea) object that has at least `10000`(#e7e8ea) reviews.\r\n   \r\n   * Use the `pause`(#e7e8ea) and `clear()`(#e7e8ea) methods in the `Scene`(#e7e8ea) class to pause and clear the scene before drawing the next book cover.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array uses the following syntax:\r\n  \r\n  ```\r\n  for (int row = 0; row < arrayName.length; row++) {\r\n    for (int col = 0; col < arrayName[0].length; col++) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Bestselling Books",
    "bubble_choice_description": "Write a method to find which Book objects have at least a specific number of reviews and create a scene to visualize the results.",
    "thumbnail_url": "https://images.code.org/3511c1087ebe7ce6b7afe029aef78cdd-image-1650997669413.png",
    "starter_assets": {
      "wonderful.jpg": "467462de-7daf-42ba-bae3-db0564577fa6.jpg",
      "fantasticbeasts.jpg": "0f522cb9-4be0-403a-802c-57dd5c3ac0d6.jpg",
      "ove.jpg": "e497093b-5a0f-4f48-a45d-f2a748f5c63f.jpg",
      "harrypotter.jpg": "04a9d65b-cc55-4fe6-b693-fbca6c73b893.jpg",
      "1984.jpg": "6360d4f8-18fb-4a1b-88e7-8163ea180c63.jpg",
      "origin.jpg": "4bbc2d51-414c-4d88-829e-bb10557cf6f9.jpg",
      "fahrenheit.jpg": "36c29f65-deb5-485d-84f8-0ca4fb17b035.jpg",
      "ready.jpg": "0c5976c9-624b-4a1e-affe-9f6de6a349b7.jpg",
      "wrinkle.jpg": "3a9adb9e-52ca-4a6c-9442-12a1e2198842.jpg",
      "gobletoffire.jpg": "25ff5c73-ffbf-45d0-8b48-63c12f787925.jpg",
      "strangeplanet.jpg": "3cdf8c87-7593-46bf-962e-ba05a0bab9b8.jpg",
      "giraffes.jpg": "543c1beb-9f10-4cc9-b1bb-309351936c0f.jpg"
    },
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    // Creates the Book objects\n    Book wonderfulThings = new Book(\"wonderful.jpg\", 8842);\n    Book fantasticBeasts = new Book(\"fantasticbeasts.jpg\", 4370);\n    Book ove = new Book(\"ove.jpg\", 23848);\n    Book harryPotter = new Book(\"harrypotter.jpg\", 3146);\n    Book orwell = new Book(\"1984.jpg\", 21424);\n    Book origin = new Book(\"origin.jpg\", 18904);\n    Book fahrenheit = new Book(\"fahrenheit.jpg\", 10721);\n    Book ready = new Book(\"ready.jpg\", 22536);\n    Book wrinkle = new Book(\"wrinkle.jpg\", 5153);\n    Book gobletoffire = new Book(\"gobletoffire.jpg\", 7758);\n    Book planet = new Book(\"strangeplanet.jpg\", 9382);\n    Book giraffes = new Book(\"giraffes.jpg\", 14038);\n\n    // Stores the Book objects in a 2D array\n    Book[][] bestsellers = {{wonderfulThings, fantasticBeasts, ove},\n                            {harryPotter, orwell, origin},\n                            {fahrenheit, ready, wrinkle},\n                            {gobletoffire, planet, giraffes}};\n\n    // Creates the BookScene\n    BookScene myScene = new BookScene(bestsellers);\n    myScene.createScene();\n\n    // Plays the BookScene\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true
      },
      "BookScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a scene based on which books have at least 10,000 reviews\n */\npublic class BookScene extends Scene {\n\n  private Book[][] bestsellers;   // The 2D array of Books\n\n  /*\n   * Constructor to create a BookScene with\n   * the specified 2D array of Books\n   */\n  public BookScene(Book[][] bestsellers) {\n    this.bestsellers = bestsellers;\n  }\n\n  /*\n   * Creates a scene that draws the book cover\n   * for each book with at least 10,000 reviews\n   */\n  public void createScene() {\n    // TO DO #1: Find each Book that has at least 10,000 reviews\n    // and draw its book cover.\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "Book.java": {
        "text": "/*\n * Represents a book\n */\npublic class Book {\n\n  private String bookCover;   // The image file of the book cover\n  private int numReviews;     // The number of reviews\n\n  /*\n   * Constructor to create a Book with\n   * a specified bookCover and number of reviews\n   */\n  public Book(String bookCover, int numReviews) {\n    this.bookCover = bookCover;\n    this.numReviews = numReviews;\n  }\n\n  /*\n   * Returns the image file of the book cover\n   */\n  public String getBookCover() {\n    return bookCover;\n  }\n\n  /*\n   * Returns the number of reviews\n   */\n  public int getNumReviews() {\n    return numReviews;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nZF4UFVcy\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-12T18:56:27.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-12T18:56:27.185+00:00\",\"changed\":[\"cloned from \\\"CSA U5L2-L3c_2022\\\"\"],\"cloned_from\":\"CSA U5L2-L3c_2022\"},{\"changed_at\":\"2022-04-12 18:56:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 16:05:07 +0000\",\"changed\":[\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-26 18:29:02 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:56:35 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 00:57:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 01:00:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 01:00:30 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
