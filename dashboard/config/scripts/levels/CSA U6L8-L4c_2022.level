<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Getting Started\r\n1. Import `TextProcessor.java`(#e7e8ea) from the ![Backpack](https://images.code.org/b17feeef2e8db2a98abdb4a5860c5c61-image-1642175705297.png)\r\n\r\n*Don't have it or it doesn't work? That's ok! Just copy and paste the code from <a href=\"https://studio.code.org/projects/javalab/KOGBXxJAZP_vdPinDL_omAO4Jb9CKdE-NggpxRbQ39c\" target=\"_blank\">**here**</a>.*\r\n\r\n##In TextProcessor.java:\r\n\r\n1. Write the method `sortWords()`(#e7e8ea) to sort the words in `textList`(#e7e8ea) in reverse alphabetical order (Z to A).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `sortWords()`(#e7e8ea) method then print the updated list.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Read and Sort Words",
    "bubble_choice_description": "Sort a list of words in reverse alphabetical order (Z to A).",
    "thumbnail_url": "https://images.code.org/78d7a49625a05311957c22e8a7ba25bf-sortwords.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    TextProcessor myText = new TextProcessor(\"words.txt\");\n\n    // TO DO #2: Call the sortWords() method and print the updated list.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "words.txt": {
        "text": "environment\ncity\ncharacter\nroad\nsalad\nbanner\nbed\nthank\nattachment\nmedium\nrecord\nspeech\npause\nspell\ntone\nmystery\ncoat\nstage\nversion\nheight\nadvice\navenue\nchemistry\nwin\nacademy",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nCZxozKO6D1rZn7AY5XDCCk62H729tVUcTTqpAdwSSJamOfBD0RsDh1WJ6Xv6\n1BmsCd8jklawuQVpRtD8svUlNNBQA8xvC7qbL6keqFjiLNbkfCknWWZ8EZvz\n1SjGGhDz4ZxndoD0iHwqkslKbN4kX5w5KYSEuzYEt4zRHdpov4J/0fV4F2MB\na4IWZt0ws/fAn3Xa59BoZynqfcC3tWolrBSBuNSngSCPhUwP2Yi5TuvFHWsc\nL5zIX0TFxUWjoF0wgfKbBgBQcNBQirzK8W8Xqg0Gt9DC1gXkCaXvC1tkm5Th\nyQ7AW07G3Ww8F6MF7gb0LYnKrQ7PJCJUnIjJ9YHAw0p30CL9HfsN+vN8NsTr\nT3H3UX34M9uhslWokZMuRORCIXEJP7vQmEvGnzXjLkTU76PU5c1SKuReM6k6\nrQ6uVvmVjYbluTpI/iOfC/y4VmTainqeTnUQyTt2faerfntlqkhyZ24rHcpW\n6VynLCA8+NnkE69g6mqMU+mg7+vyH3pv6jCa2hn8AA0AnmaZ3OTWH8165MvI\n3gPMFUHEex3PODQGBPtDpBTg8eqt417rX5+H4+2lhKlaTnyxxDpq3myoylSe\nON4bl3J2Z7/y71HOlldM0giuXKKg8Y0hlbHg0Xxq7U2Zl5Gj4mCaV0mTpjpQ\n2z5lPZK0ZKp2z0FDX7r9K2P3UnMPhxFfQRWJndSJfqPWP7K7Tk42xGItKZ+X\n6uWd7cLavLGg7M/wtKarA/2hL2xYnjiDN/VBG+huDirqX2kZUhAQE9KsdTGx\nboWM//HuN7VDe4LFOG07E5TYo04aqaEYtn4AYjPDlzj/UhOQWHKB5RuRmK8K\nDP6Be5J97uHQeFxmcHi/1UGdDqMDutTaMm08x0U29z0N+legwW+H0DissPI9\nmoaYDFXJaoCinFvWZmfzWpIoLQ2XXWTOYYRknEj9EHpReQdH8yuVFMUiOOav\nRxb6Eyib8tOe+mptW4lrkkZoURPsb7FjphSw+2sZ3jeqD8a2PubV0Pt2ZTA3\nbmJ2D73smYMN23sfSPEPcbYeSCHdgnO5kv6BVKBsiPBy8EPgxcQUZDDgqOFh\n5wLJBQF7bnmbFE34G41poX8NZjXv45zz0e1N7qV4dSLANR+aBYbHlRav9wER\nxSuO8AcDiv1yCJANWmzd0CEhqSfgdbq1rKh4Gvu3H2sI7UY9AHfNS9BWd0H9\n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\ngsGMHwusaDLeP0umeKuOOdhYToQ=\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-14T19:36:44.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:36:44.968+00:00\",\"changed\":[\"cloned from \\\"CSA U6L8-L4b_2022\\\"\"],\"cloned_from\":\"CSA U6L8-L4b_2022\"},{\"changed_at\":\"2022-04-14 19:36:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:14:59 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:16:22 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 01:07:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 01:07:43 +0000\",\"changed\":[\"long_instructions\",\"bubble_choice_description\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 11:57:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 11:57:12 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 11:59:41 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:00:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:02:07 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-19 20:13:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-19 20:14:12 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-19 20:16:37 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-06-27 20:50:52 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-07-12 21:08:11 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
