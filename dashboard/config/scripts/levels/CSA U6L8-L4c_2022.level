<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Getting Started\r\n1. Import `TextProcessor.java`(#e7e8ea) from the ![Backpack](https://images.code.org/b17feeef2e8db2a98abdb4a5860c5c61-image-1642175705297.png)\r\n\r\n*Don't have it or it doesn't work? That's ok! Just copy and paste the code from [**here**](https://studio.code.org/s/csa-backpack-2022/lessons/4/levels/2).*\r\n\r\n##In TextProcessor.java:\r\n\r\n1. Write the method `sortWords()`(#e7e8ea) to return a new `ArrayList`(#e7e8ea) containing the words in `textList`(#e7e8ea) sorted in reverse alphabetical order (Z to A).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Declare and initialize an `ArrayList`(#e7e8ea) to store the `ArrayList`(#e7e8ea) returned from calling the `sortWords()`(#e7e8ea) method then print the list.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Read and Sort Words",
    "bubble_choice_description": "Sort a list of words in reverse alphabetical order (Z to A).",
    "thumbnail_url": "https://images.code.org/78d7a49625a05311957c22e8a7ba25bf-sortwords.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    TextProcessor myText = new TextProcessor(\"words.txt\");\n\n    // TO DO #2: Call the sortWords() method and print the list.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "words.txt": {
        "text": "environment\ncity\ncharacter\nroad\nsalad\nbanner\nbed\nthank\nattachment\nmedium\nrecord\nspeech\npause\nspell\ntone\nmystery\ncoat\nstage\nversion\nheight\nadvice\navenue\nchemistry\nwin\nacademy",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\n5Br5aEyT\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:36:44.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:36:44.968+00:00\",\"changed\":[\"cloned from \\\"CSA U6L8-L4b_2022\\\"\"],\"cloned_from\":\"CSA U6L8-L4b_2022\"},{\"changed_at\":\"2022-04-14 19:36:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:14:59 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:16:22 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 01:07:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 01:07:43 +0000\",\"changed\":[\"long_instructions\",\"bubble_choice_description\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 11:57:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 11:57:12 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 11:59:41 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:00:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:02:07 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
