<Applab>
  <config><![CDATA[{
  "properties": {
    "skin": "applab",
    "validation_enabled": "false",
    "encrypted": "false",
    "embed": "false",
    "long_instructions": "## Crypto - Value on Blockchain - Teacher Widget",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "libraries_enabled": "false",
    "autocomplete_palette_apis_only": "false",
    "show_turtle_before_run": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "widget_mode": "true",
    "ai_enabled": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 600px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"screen1\" style=\"display: block; height: 450px; width: 600px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"></div></div>",
    "start_blocks": "//-------------------\n//---ASSETS----\n//-------------------\n\nvar ASSETS = {};\n/*\nASSETS = {\n  “name”: {\n    “value”: num,\n    “quantity”: num\n  }\n}\n\n-1 quantity -> infinite amount (like tokens or cryptocurrency)\n\n*/\n\n\n//name: string\n//value: num\n//quantity: num\nfunction addAsset(name, value, quantity) {\n  \n  ASSETS[name] = {\n    \"value\": value,\n    \"quantity\": quantity\n  };\n}\n\nfunction assetDebug() {\n  console.log(\"ASSETS - \");\n  for(var key in ASSETS) {\n    console.log(\"\\t\" + key);\n    console.log(\"\\t\\t\" + \"value: \" + ASSETS[key][\"value\"]);\n    console.log(\"\\t\\t\" + \"quantity: \" + ASSETS[key][\"quantity\"]);\n  }\n}\n\naddAsset(\"Lazy Ocelots\", 100, 20);\naddAsset(\"High 5\", 1000, 1);\naddAsset(\"BOOPLO\", 500, 5);\naddAsset(\"Crypto Gerbils\", 200, 10);\naddAsset(\"Sol\", 2, -1);\nassetDebug();\n\n//-------------------\n//---ALLNEWS----\n//-------------------\n\nvar ALLNEWS = {};\n/*\nALLNEWS = \n  {\n    “id”: {\n      “headline:” text,\n      “story”: text,\n      “result”: text,\n      “asset”: text,\n      “valueMult”: number,\n      “ripple”: [\n          “id”: text\n        ],\n      “valid”: boolean  \n    }\n  }\n\n- asset and valueMult are how the change in asset is calculated in the ASSETS model behind the scenes. You use the asset key to find that asset in the model, and then multiply that value by valueMult\n- ripple is an array of strings that correspond to ids. As the headlines are being chosen, the controller iterates through the ripple array and finds the corresponding id in the ALLNEWS array. When it does, it sets the boolean value of valid to false. This means that story can no longer be chosen.\n  - For example, if the news story about markets freezing certain assets gets selected, then no other stories about those assets should be generated since the markets already froze those assets\n*/\n\nALLNEWS[\"ocelots1\"] = {\n    \"headline\": \"Ocelots Headline 1\",\n    \"story\": \"Ocelots Story 1\",\n    \"result\": \"Ocelots NFTs increase by 50%\",\n    \"asset\": \"Lazy Ocelots\",\n    \"valueMult\": 1.5,\n    \"ripple\": [],\n    \"valid\": true\n  };\n\nALLNEWS[\"ocelots2\"] = {\n    \"headline\": \"Ocelots Headline 2\",\n    \"story\": \"Ocelots Story 2\",\n    \"result\": \"Ocelots NFTs decrease by 25%\",\n    \"asset\": \"Lazy Ocelots\",\n    \"valueMult\": 0.75,\n    \"ripple\": [],\n    \"valid\": true\n  };\n\nALLNEWS[\"sol1\"] = {\n    \"headline\": \"Sol Headline 1\",\n    \"story\": \"Sol Story 1\",\n    \"result\": \"Sol token decreases by 90%\",\n    \"asset\": \"Sol\",\n    \"valueMult\": 0.1,\n    \"ripple\": [\"sol2\"],\n    \"valid\": true\n  };\n  \nALLNEWS[\"sol2\"] = {\n    \"headline\": \"Sol Headline 2\",\n    \"story\": \"Sol Story 2\",\n    \"result\": \"Sol token increases by 90%\",\n    \"asset\": \"Sol\",\n    \"valueMult\": 1.9,\n    \"ripple\": [\"sol1\"],\n    \"valid\": true\n  };\n\nfunction allNewsDebug() {\n  console.log(\"ALLNEWS - \");\n  for(var key in ALLNEWS) {\n    var newsStory = ALLNEWS[key];\n    console.log(\"\\tid: \" + key);\n    console.log(\"\\t\\theadline: \" + newsStory[\"headline\"]);\n    console.log(\"\\t\\tstory: \" + newsStory[\"story\"]);\n    console.log(\"\\t\\tresult: \" + newsStory[\"result\"]);\n    console.log(\"\\t\\tasset: \" + newsStory[\"asset\"]);\n    console.log(\"\\t\\tvalueMult: \" + newsStory[\"valueMult\"]);\n    console.log(\"\\t\\tripple: [\" + newsStory[\"ripple\"] + \"]\");\n    console.log(\"\\t\\tvalid: \" + newsStory[\"valid\"]);\n  }\n}\n\nallNewsDebug();\n\n\n//-------------------\n//---NewsIDs and currentNews----\n//-------------------\n\nvar newsIDs = [];\nvar currentNews = [];\n\nfunction generateNewsIDs() {\n  for(var key in ALLNEWS) {\n   newsIDs.push(key); \n  }\n}\n\nfunction newsIDsDebug() {\n  console.log(\"newsIds: [\" + newsIDs + \"]\");\n}\n\nfunction currentNewsDebug() {\n  console.log(\"currentNews: [\" + currentNews + \"]\");\n}\n\nfunction randomNews(num) {\n  //num: number - number of news stories to randomly grab\n  //Resets currentNews to empty\n  //Picks a random news story from newsIDs array\n  //Checks the 'valid' property of that ID in allnews (is this necessary anymore?)\n  //Adds that news story to currentNews array\n  //Removes that news story from newsIDs array\n  currentNews = [];\n  for(var i = 0; i < num; i++) {\n    var randomNewsIndex = Math.floor(newsIDs.length * Math.random());\n    var randomNewsID = newsIDs[randomNewsIndex];\n    if(ALLNEWS[randomNewsID][\"valid\"]) {\n      //Story is valid - add it to news array\n      currentNews.push(randomNewsID);\n    } else {\n      //Story is invalid - need to make a different choice\n      //So add 1 to counter variable as a \"Redo\" to pick another story\n      i--;\n    }\n    newsIDs.splice(randomNewsIndex, 1); //deletes the story from the array\n    ALLNEWS[randomNewsID][\"valid\"] = false; //sets the valid bit to false\n  }\n  invalidate();\n}\n\nfunction newsTest1() {\n  //Checks randomly generating 3 news stories in sequence\n  newsIDsDebug();\n  currentNewsDebug();\n  randomNews(1);\n  applyNews();\n  newsIDsDebug();\n  currentNewsDebug();\n  randomNews(1);\n  applyNews();\n  newsIDsDebug();\n  currentNewsDebug();\n  randomNews(1);\n  applyNews();\n  newsIDsDebug();\n  currentNewsDebug(); \n}\n\n//Who's in charge of keeping track whether or not a story is still valid?\n//Answer: ALLNEWS valid bit on each story\nfunction invalidate() {\n  for(var i = 0; i < currentNews.length; i++) {\n    var currentNewsId = currentNews[i];\n    var currentNewsRipple = ALLNEWS[currentNewsId][\"ripple\"];\n    for(var j = 0; j < currentNewsRipple.length; j++) {\n      var rippleId = currentNewsRipple[j];\n      ALLNEWS[rippleId][\"valid\"] = false;\n    }\n  }\n}\n\nfunction applyNews() {\n  for(var i = 0; i < currentNews.length; i++) {\n    var currentNewsId = currentNews[i];\n    var currentNewsAsset = ALLNEWS[currentNewsId][\"asset\"];\n    var currentNewsValueMult = ALLNEWS[currentNewsId][\"valueMult\"];\n    ASSETS[currentNewsAsset][\"value\"] *= currentNewsValueMult;\n  }\n}\n\n\ngenerateNewsIDs();\nnewsTest1();\nassetDebug();\n\n\n\n//ALLNEWS: object\n//NewsIDs: array of strings (ids)\n//currentNews: array of (objects? or ids that reference ALLNEWS?)\n\n//get(id) --> get from ALLNEWS object\n//set(id) --> set to ALLNEWS object\n//random5() --> chooses from newsIDs array. Removes IDs from that array, builds currentNews array from objects in ALLNEWS\n//invalidate() --> goes through ripple array in currentNews, remove those ids from newsIDs array",
    "preload_asset_list": null
  },
  "game_id": 41,
  "created_at": "2022-07-29T21:41:50.000Z",
  "level_num": "custom",
  "user_id": 14639,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-07-29 21:43:19 +0000\",\"changed\":[\"published\",\"validation_enabled\",\"code_functions\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-07-29 21:45:48 +0000\",\"changed\":[],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-08-01 00:17:42 +0000\",\"changed\":[\"start_html\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-08-01 00:21:18 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-08-01 00:41:11 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-08-01 00:52:53 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-08-01 01:02:46 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-08-01 01:03:43 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-08-01 01:19:12 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-08-01 01:25:39 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>