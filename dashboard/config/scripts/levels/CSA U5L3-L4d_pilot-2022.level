<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:49:59.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A students wants to store data about the bestselling books to create a visual of the books that received the most reviews each year. They have a 2D array of `Book`(#e7e8ea) objects, where each row represents fiction books and non-fiction books, respectively. Each column represents 2017, 2018, and 2019, respectively.\r\n\r\n##In BookScene.java:\r\n\r\n1. Write the `createScene()`(#e7e8ea) method to find which `Book`(#e7e8ea) object had the most reviews each year.\r\n\r\n   * Draw the book cover for the `Book`(#e7e8ea) object that has the most reviews for the year.\r\n   \r\n   * Use the `pause`(#e7e8ea) and `clear()`(#e7e8ea) methods in the `Scene`(#e7e8ea) class to pause and clear the scene before drawing the next book cover.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array in column-major order uses the following syntax:\r\n  \r\n  ```\r\n  for (int col = 0; col < arrayName[0].length; col++) {\r\n    for (int row = 0; row < arrayName.length; row++) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Bestselling Books",
    "bubble_choice_description": "Write a method to find which Book objects had the most number of reviews each year and create a scene to visualize the results.",
    "thumbnail_url": "https://images.code.org/3511c1087ebe7ce6b7afe029aef78cdd-image-1650997669413.png",
    "starter_assets": {
      "1984.jpg": "fb541b01-9239-4eae-8bc7-65df1c96637f.jpg",
      "fahrenheit.jpg": "ce8f3910-fcd0-43b7-8a3c-9dd5bea71067.jpg",
      "gobletoffire.jpg": "fe24e889-cba4-4ba0-b8b3-bb96bcf2c427.jpg",
      "winfriends.jpg": "8b14d432-d0c2-422a-8bf7-677ff28f74a5.jpg",
      "agreements.jpg": "352a52fb-2f05-4c88-b06a-afcd4b2dab6c.jpg",
      "gratitude.jpg": "bf10283d-d23e-4bc7-bddb-183381f589f0.jpg"
    },
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    // Creates the Book objects\n    Book orwell = new Book(\"1984.jpg\", 21424);\n    Book fahrenheit = new Book(\"fahrenheit.jpg\", 10721);\n    Book gobletoffire = new Book(\"gobletoffire.jpg\", 7758);\n    Book winFriends = new Book(\"winfriends.jpg\", 25001);\n    Book agreements = new Book(\"agreements.jpg\", 23308);\n    Book gratitude = new Book(\"gratitude.jpg\", 10141);\n\n    // Stores the Book objects in a 2D array\n    Book[][] bestsellers = {{orwell, fahrenheit, gobletoffire},\n                            {winFriends, agreements, gratitude}};\n\n    // Creates the BookScene\n    BookScene myScene = new BookScene(bestsellers);\n    myScene.createScene();\n\n    // Plays the BookScene\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true
      },
      "BookScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a scene based on which books have at least 10,000 reviews\n */\npublic class BookScene extends Scene {\n\n  private Book[][] bestsellers;   // The 2D array of Books\n\n  /*\n   * Constructor to create a BookScene with\n   * the specified 2D array of Books\n   */\n  public BookScene(Book[][] bestsellers) {\n    this.bestsellers = bestsellers;\n  }\n\n  /*\n   * Creates a scene that draws the book cover for\n   * each book that had the most reviews each year\n   */\n  public void createScene() {\n    // TO DO #1: Find each Book that had the most reviews\n    // each year and draw its book cover.\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "Book.java": {
        "text": "/*\n * Represents a book\n */\npublic class Book {\n\n  private String bookCover;   // The image file of the book cover\n  private int numReviews;     // The number of reviews\n\n  /*\n   * Constructor to create a Book with\n   * a specified bookCover and number of reviews\n   */\n  public Book(String bookCover, int numReviews) {\n    this.bookCover = bookCover;\n    this.numReviews = numReviews;\n  }\n\n  /*\n   * Returns the image file of the book cover\n   */\n  public String getBookCover() {\n    return bookCover;\n  }\n\n  /*\n   * Returns the number of reviews\n   */\n  public int getNumReviews() {\n    return numReviews;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\ncYbPXZTY99YTVy3tHFR/00M=\n",
    "name_suffix": "_pilot-2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:49:59.967+00:00\",\"changed\":[\"cloned from \\\"CSA U5L3-L4d_2022\\\"\"],\"cloned_from\":\"CSA U5L3-L4d_2022\"}]"
}]]></config>
</Javalab>
