<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**A video game developer is planning a new game, and they have written a `Player`(#e7e8ea) class to represent a player in their game.**\r\n\r\n✅ **TO DO:** Write a no-argument constructor the `Player`(#e7e8ea) class and instantiate a `Player`(#e7e8ea) object.\r\n\r\n1. In the `Player`(#e7e8ea) class, write a no-argument constructor to assign default values to the instance variables:\r\n\r\n   **(a)** Assign a default name to the instance variable `name`(#e7e8ea), such as `\"new player\"`(#e7e8ea)\r\n\r\n   **(b)** Assign a default value to the instance variable `level`(#e7e8ea), such as `1`(#e7e8ea)\r\n\r\n2. In `GameRunner.java`(#e7e8ea):\r\n\r\n   **(a)** Instantiate a `Player`(#e7e8ea) object\r\n   \r\n   **(b)** Print the constructor for the `Player`(#e7e8ea) object to the console using `ClassInfo.getConstructors(nameOfObject)`(#e7e8ea)\r\n   \r\n   **(c)** Print the values assigned to the instance variables for the `Player`(#e7e8ea) object to the console by calling the `printPlayerInfo()`(#e7e8ea) method\r\n   \r\n\r\n💡 **TIP:** Check out **Help & Tips** tab ⬆️ for help with writing a no-argument constructor and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/02a0328fc369b116fc436dd354ff89f6-image-1667832116860.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/no-argument-constructors",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "The Player Class",
    "bubble_choice_description": "A video game developer is planning a new game, and they have written a `Player` class to represent a player in their game.",
    "thumbnail_url": "https://images.code.org/21f69124180b97ebde9051134135b521-console.png",
    "encrypted_validation": "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\n",
    "start_sources": {
      "GameRunner.java": {
        "text": "public class GameRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Player object. Print the constructor to the console using\n     * ClassInfo.getConstructors(nameOfObject), and print the values assigned to the\n     * instance variables using the Player class printPlayerInfo() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Player.java": {
        "text": "/*\n * Represents a player in a game\n */\npublic class Player {\n\n  private String name;    // The name of a player\n  private int level;      // The level of a player\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ✅ Write a no-argument constructor to assign default values to the\n   * name and level instance variables.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n\n\n\n  \n\n  /*\n   * Prints the name and level of the player\n   */\n  public void printPlayerInfo() {\n    System.out.println(\"Name: \" + name);\n    System.out.println(\"Level: \" + level);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n\n  public static String getConstructors(Object testObject) {\n    Class objectClass = testObject.getClass();\n    String className = objectClass.getSimpleName();\n    Constructor[] objectConstructors = objectClass.getDeclaredConstructors();\n    \n    ArrayList<String> constructorsList = convertToList(Arrays.toString(objectConstructors));\n\n    String heading = \"\\n------------------------------\\n\";\n    String result = className + \" Constructors \" + heading;\n\n    for (String current : constructorsList) {\n      result += current + \"\\n\";\n    }\n    \n    return result;\n  }\n\n  public static String getValue(List<String> output, String lineToFind) {\n    String outputText = \"\";\n    String valueResult = \"\";\n\n    for (int index = 0; index < output.size(); index++) {\n      String current = output.get(index);\n      \n      if (current.indexOf(lineToFind) >= 0) {\n        outputText = current;\n        valueResult = outputText.substring(lineToFind.length());\n      }\n    }\n    \n    return valueResult.trim();\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n"
  },
  "game_id": 68,
  "created_at": "2022-11-03T19:20:44.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-03T19:20:44.348+00:00\",\"changed\":[\"cloned from \\\"CSA U2L2-L2_2023\\\"\"],\"cloned_from\":\"CSA U2L2-L2_2023\"},{\"changed_at\":\"2022-11-03 19:20:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 20:58:35 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:16:19 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\",\"reference_links\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 14:38:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 14:41:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 14:41:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 14:41:59 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:15:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:15:21 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:16:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:17:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:24:13 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:24:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:25:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
