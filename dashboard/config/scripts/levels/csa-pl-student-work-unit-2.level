<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "ArtStore.java": {
        "text": "import java.util.Scanner;\n\npublic class ArtStore {\n  public static void main(String[] args) {\n    \n    Scanner input = new Scanner(System.in);\n    System.out.println(\"Please input information on new marker shippment\");\n    // gets user input for the new marker object\n    System.out.print(\"\\nQuantity? \");\n    int userQuantityMarker = input.nextInt();\n    System.out.print(\"Price per marker? \");\n    double userPriceMarker = input.nextDouble();      \n    System.out.print(\"Color? \");\n    String userColorMarker = input.next();\n    System.out.print(\"Brand? \");      \n    String userBrandMarker = input.next();\n    System.out.print(\"Nib Type? \");\n    String userNibType = input.next();\n    System.out.print(\"Nib Size? \");\n    String userNibSize = input.next();\n\n    Marker newMarker1 = new Marker(userQuantityMarker, userPriceMarker, userColorMarker, userBrandMarker, userNibType, userNibSize);\n    // asks user to change the color they inputted & updates the value\n    System.out.print(\"Oh no! The store already has that color marker. Please input a new color to add to the system. \");\n      String c = input.next();\n        if (c.equals(userColorMarker)) {\n          c = \"red\";\n          newMarker1.setColor(c);\n        } else {\n          newMarker1.setColor(c);\n        }\n\n      System.out.println(\"\\nPlease input information on new paper shippment\");\n      // gets user input for new paper object\n      System.out.print(\"\\nQuantity? \");\n      int userQuantityPaper = input.nextInt();\n      System.out.print(\"Price? \");\n      double userPricePaper = input.nextDouble();\n      System.out.print(\"Color? \");\n      String userColorPaper = input.next();\n      System.out.print(\"Brand? \");\n      String userBrandPaper = input.next();\n      System.out.print(\"Paper Type? \");\n      String userPaperType = input.next();\n      System.out.print(\"Page Number? \");\n      int userPageNumber = input.nextInt();\n\n      Paper newPaper1 = new Paper(userQuantityPaper, userPricePaper, userColorPaper, userBrandPaper, userPaperType, userPageNumber);\n      // asks user to change the page number they inputted & updates the value\n      System.out.print(\"Oh no! The store doesn't have space for pads with that many pages. Please enter a new number of pages. \");\n      int pn = input.nextInt();\n      if (pn <= userPageNumber) {\n        pn = userPageNumber-10;\n        newPaper1.setPageNum(pn);\n      } else {\n        newPaper1.setPageNum(pn);\n      }\n\n    // prints the information about the markers & paper to the console as a string\n      System.out.print(newMarker1.toString());\n      System.out.println(newPaper1.toString());\n  }\n}",
        "isVisible": true
      },
      "Supply.java": {
        "text": "public class Supply {\n  // instance variables\n  private int quantity;\n  private double price;\n  private String color;\n  private String brand;\n\n  // no argument constructor - creates 1 white colored Crayola Supply that costs $1.00\n  public Supply() {\n    setQuantity(1);\n    setPrice(1.00);\n    this.color = \"white\";\n    this.brand = \"Crayola\";\n  }\n\n  // paramaterized construstor\n  public Supply(int quantity, double price, String color, String brand) {\n    setQuantity(quantity);\n    setPrice(price);\n    this.color = color;\n    this.brand = brand;\n  }\n\n  // accessor methods - one for each instance variable\n  \n  public int getQuantity() {\n    return quantity;\n  }\n\n  public double getPrice() {\n    return price;\n  }\n\n  public String getColor() {\n    return color;\n  }\n\n  public String getBrand() {\n    return brand;\n  }\n\n  // mutator methods - one for each instance variable\n  \n  // sets the value of quantity to what is inputted in the constructor and updates quantity to 0 if that value is negative\n  public void setQuantity(int q) {\n    if (q < 0) {\n      quantity = 0;\n    } else {\n      quantity = q;\n    } \n  }\n  \n  // sets the value of price to what is inputted and updates price to 1 if the inputted value is less than or equal to 0\n  public void setPrice(double p) {\n    if (p <= 0) {\n      price = 1.00;\n    } else {\n      price = p;\n    }\n\n  // if more than 15 of an item are imputed then the price per item decreases\n    if (quantity <= 15) {\n      price = p;\n    } else {\n      price = price-quantity*.1;\n    }\n  }\n\n  public void setColor(String c) {\n    color = c;\n  }\n\n  public void setBrand(String b) {\n    brand = b;\n  }\n\n// toString method for Supply - returns the value of each instance variable as a string\n  public String toString() {\n    return \"\\nQuantity: \" + quantity + \"\\nPrice: $\" + price + \"\\nColor: \" + color + \"\\nBrand: \" + brand; \n  }\n}",
        "isVisible": true
      },
      "Marker.java": {
        "text": "// class header\npublic class Marker extends Supply {\n  // instance variables\n  private String nibType;\n  private String nibSize;\n\n  // no argument constructor - creates a marker with the default Supply values and gives it a medium brush tip\n  public Marker() {\n    super();\n    this.nibType = \"brush\";\n    this.nibSize = \"medium\";\n  }\n\n  // paramaterized constructor to create marker object\n  public Marker(int quantity, double price, String color, String brand, String nibType, String nibSize) {\n    super(quantity, price, color, brand);\n    this.nibType = nibType;\n    this.nibSize = nibSize;\n  }\n\n  // accesor methods - each one gets the value of one instance variable\n  \n  public String getNibType() {\n    return nibType;\n  }\n\n  public String getNibSize() {\n    return nibSize;\n  }\n\n\n  // mutator methods - each updates the values of the instance variables with the values inputted into the constructor\n  \n  public void setNibType(String nt) {\n    nibType = nt;\n  }\n\n  public void setNibSize(String ns) {\n    nibSize = ns;\n  }\n\n// To Do: Write a toString() method.\n  public String toString() {\n    return \"\\n\\nThese items are now in the system- \\nQuantity: \" + getQuantity() + \"\\nPrice: $\" + getPrice() + \"\\nColor: \" + getColor() + \"\\nBrand: \" + getBrand() + \"\\nNib Type: \" + getNibType() + \"\\nNib Size: \" + getNibSize();\n  }\n}",
        "isVisible": true
      },
      "Paper.java": {
        "text": "// class header\npublic class Paper extends Supply {\n  // instance variables\n  private String paperType;\n  private int pageNum;\n\n  // no-argument constructor that uses default Supply values & sets the paper type to mixed-media and page # to 50\n  public Paper() {\n    super();\n    this.paperType = \"mixed-media\";\n    this.pageNum = 50;\n  }\n\n  // paramaterized constructor to create paper object\n  public Paper(int quantity, double price, String color, String brand, String paperType, int pageNum) {\n    super(quantity, price, color, brand);\n    this.paperType = paperType;\n    this.pageNum = pageNum;\n  }\n\n  // accesor methods - one per instance variable\n  public String getPaperType() {\n    return paperType;\n  }\n\n  public int getPageNum() {\n    return pageNum;\n  }\n\n\n  // mutator methods - one per instance variable\n  \n  public void setPaperType(String pt) {\n    paperType = pt;\n  }\n\n  // if page # is less than or equal to 5 then the page number is set to 5\n  public void setPageNum(int pn) {\n    if (pn <= 0) {\n      pageNum = 5;\n    } else {\n      pageNum = pn;\n    }\n  }\n\n  // prints the paper object to the console as a string\n  public String toString() {\n    return \"\\n\\nThese items are now in the system- \\nQuantity: \" + getQuantity() + \"\\nPrice: $\" + getPrice() + \"\\nColor: \" + getColor() + \"\\nBrand: \" + getBrand() + \"\\nPaper Type: \" + paperType + \"\\nPage Number: \" + pageNum;\n  }\n\n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-05-10T15:42:22.000Z",
  "level_num": "custom",
  "user_id": 977,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-05-10 15:42:56 +0000\",\"changed\":[\"published\"],\"changed_by_id\":977,\"changed_by_email\":\"kaitie+teacher@code.org\"},{\"changed_at\":\"2022-05-10 15:44:56 +0000\",\"changed\":[],\"changed_by_id\":977,\"changed_by_email\":\"kaitie+teacher@code.org\"}]"
}]]></config>
</Javalab>
