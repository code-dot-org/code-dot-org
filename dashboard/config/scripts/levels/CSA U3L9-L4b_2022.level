<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L9-L4b PBT_2022",
    "long_instructions": "##In Languages.java:\r\n\r\n1. Write the `reverse()`(#e7e8ea) method to reverse the elements in the `mostSpoken`(#e7e8ea) array.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `reverse()`(#e7e8ea) method on the `mostSpokenLanguages`(#e7e8ea) object to reverse the array.\r\n\r\n3. Call the `printLanguages()`(#e7e8ea) method on the `mostSpokenLanguages`(#e7e8ea) object to print the updated array.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://www.ethnologue.com/statistics/size)!*",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Most Spoken Languages",
    "bubble_choice_description": "Reverse the array of most spoken languages to display them in ranking order.",
    "thumbnail_url": "https://images.code.org/a1c76c5d11cb9c1657d494ee8ecdce05-image-1648752702625.png",
    "encrypted_exemplar_sources": "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\nqa9o9sAtIOYTzD+vUYKvnVatDpFYX+YLAUs=\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"languages.txt\");\n    String[] languages = myFileReader.getStringData(91);\n\n    Languages mostSpokenLanguages = new Languages(languages);\n    \n    mostSpokenLanguages.printLanguages();\n\n    // TO DO #2: Call the reverse() method to reverse the array.\n\n\n    // TO DO #3: Call the printLanguages() method to print the array.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "Languages.java": {
        "text": "/*\n * Processes languages in a String array\n */\npublic class Languages {\n\n  private String[] mostSpoken;   // The 1D array of park names\n\n  /*\n   * Constructor to create a Languages object with\n   * a specified list of most spoken languages\n   */\n  public Languages(String[] mostSpoken) {\n    this.mostSpoken = mostSpoken;\n  }\n\n  /*\n   * Returns the mostSpoken array\n   */\n  public String[] getMostSpoken() {\n    return mostSpoken;\n  }\n\n  /*\n   * Prints the languages in the mostSpoken array\n   */\n  public void printLanguages() {\n    for (String language : mostSpoken) {\n      System.out.println(language);\n    }\n  }\n\n  /*\n   * Reverses the mostSpoken array\n   */\n  public void reverse() {\n    // TO DO #1: Reverse the elements in the mostSpoken array.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "languages.txt": {
        "text": "#91: Sylheti\n#90: Min Dong Chinese\n#89: Uyghur\n#88: Taʽizzi-Adeni Arabic\n#87: Czech\n#86: Rundi\n#85: Southern Pashto\n#84: Min Bei Chinese\n#83: Sanaani Spoken Arabic\n#82: Tunisian Arabic\n#81: South Levantine Arabic\n#80: Zulu\n#79: Kinyarwanda\n#78: Hungarian\n#77: Deccan\n#76: Kazakh\n#75: Chittagonian\n#74: Greek\n#73: South Azerbaijani\n#72: Bavarian\n#71: Nigerian Fulfulde\n#70: Hejazi Arabic\n#69: Northern Kurdish\n#68: Sinhalese\n#67: Assamese\n#66: Mesopotamian Arabic\n#65: Nepali\n#64: Cebuano\n#63: Malay (Malaysian Malay)\n#62: Somali\n#61: Chhattisgarhi\n#60: Khmer\n#59: Saraiki\n#58: Thai\n#57: Magahi\n#56: Northern Pashto\n#55: Amharic\n#54: Gan Chinese\n#53: Saʽidi Arabic\n#52: Dutch\n#51: Tagalog\n#50: Romanian\n#49: North Levantine Arabic\n#48: Sindhi\n#47: Northern Uzbek\n#46: Igbo\n#45: Ukrainian\n#44: Moroccan Arabic\n#43: Algerian Arabic\n#42: Sudanese Arabic\n#41: Sunda\n#40: Eastern Punjabi\n#39: Burmese\n#38: Maithili\n#37: Odia\n#36: Malayalam\n#35: Xiang Chinese\n#34: Yoruba\n#33: Polish\n#32: Indonesian (Indonesian Malay)\n#31: Kannada\n#30: Hausa\n#29: Jin Chinese\n#28: Hakka Chinese\n#27: Min Nan Chinese\n#26: Bhojpuri\n#25: Iranian Persian\n#24: Gujarati\n#23: Egyptian Arabic\n#22: Italian\n#21: Javanese\n#20: Urdu (Persianised Hindustani\n#19: Yue Chinese\n#18: Tamil\n#17: Vietnamese\n#16: German\n#15: French\n#14: Korean\n#13: Turkish\n#12: Wu Chinese\n#11: Telugu\n#10: Marathi\n#9: Western Punjabi\n#8: Japanese\n#7: Russian\n#6: Portuguese\n#5: Bengali\n#4: Hindi (Sanskritised Hindustani)\n#3: English\n#2: Spanish\n#1: Mandarin Chinese",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-03-25T13:02:30.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-03-25 13:02:32 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 16:26:17 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 18:49:36 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 18:52:35 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:08:10 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:20:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:44:13 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:59:15 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 12:40:02 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 19:29:50 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-06-24 15:16:06 +0000\",\"changed\":[\"map_reference\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:48:37 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:48:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:48:45 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-18 15:41:16 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
