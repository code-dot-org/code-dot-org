<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L9-L4b PBT_2022",
    "long_instructions": "##In Languages.java:\r\n\r\n1. Write the `reverse()`(#e7e8ea) method to reverse the elements in the `mostSpoken`(#e7e8ea) array.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `reverse()`(#e7e8ea) method on the `mostSpokenLanguages`(#e7e8ea) object to reverse the array.\r\n\r\n3. Call the `printLanguages()`(#e7e8ea) method on the `mostSpokenLanguages`(#e7e8ea) object to print the updated array.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://www.ethnologue.com/statistics/size)!*",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Most Spoken Languages",
    "bubble_choice_description": "Reverse the array of most spoken languages to display them in ranking order.",
    "thumbnail_url": "https://images.code.org/a1c76c5d11cb9c1657d494ee8ecdce05-image-1648752702625.png",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"languages.txt\");\n    String[] languages = myFileReader.getStringData(91);\n\n    Languages mostSpokenLanguages = new Languages(languages);\n    \n    mostSpokenLanguages.printLanguages();\n\n    // TO DO #2: Call the reverse() method to reverse the array.\n\n\n    // TO DO #3: Call the printLanguages() method to print the array.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "Languages.java": {
        "text": "/*\n * Processes languages in a String array\n */\npublic class Languages {\n\n  private String[] mostSpoken;   // The 1D array of park names\n\n  /*\n   * Constructor to create a Languages object with\n   * a specified list of most spoken languages\n   */\n  public Languages(String[] mostSpoken) {\n    this.mostSpoken = mostSpoken;\n  }\n\n  /*\n   * Returns the mostSpoken array\n   */\n  public String[] getMostSpoken() {\n    return mostSpoken;\n  }\n\n  /*\n   * Prints the languages in the mostSpoken array\n   */\n  public void printLanguages() {\n    for (String language : mostSpoken) {\n      System.out.println(language);\n    }\n  }\n\n  /*\n   * Reverses the mostSpoken array\n   */\n  public void reverse() {\n    // TO DO #1: Reverse the elements in the mostSpoken array.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "languages.txt": {
        "text": "#91: Sylheti\n#90: Min Dong Chinese\n#89: Uyghur\n#88: Taʽizzi-Adeni Arabic\n#87: Czech\n#86: Rundi\n#85: Southern Pashto\n#84: Min Bei Chinese\n#83: Sanaani Spoken Arabic\n#82: Tunisian Arabic\n#81: South Levantine Arabic\n#80: Zulu\n#79: Kinyarwanda\n#78: Hungarian\n#77: Deccan\n#76: Kazakh\n#75: Chittagonian\n#74: Greek\n#73: South Azerbaijani\n#72: Bavarian\n#71: Nigerian Fulfulde\n#70: Hejazi Arabic\n#69: Northern Kurdish\n#68: Sinhalese\n#67: Assamese\n#66: Mesopotamian Arabic\n#65: Nepali\n#64: Cebuano\n#63: Malay (Malaysian Malay)\n#62: Somali\n#61: Chhattisgarhi\n#60: Khmer\n#59: Saraiki\n#58: Thai\n#57: Magahi\n#56: Northern Pashto\n#55: Amharic\n#54: Gan Chinese\n#53: Saʽidi Arabic\n#52: Dutch\n#51: Tagalog\n#50: Romanian\n#49: North Levantine Arabic\n#48: Sindhi\n#47: Northern Uzbek\n#46: Igbo\n#45: Ukrainian\n#44: Moroccan Arabic\n#43: Algerian Arabic\n#42: Sudanese Arabic\n#41: Sunda\n#40: Eastern Punjabi\n#39: Burmese\n#38: Maithili\n#37: Odia\n#36: Malayalam\n#35: Xiang Chinese\n#34: Yoruba\n#33: Polish\n#32: Indonesian (Indonesian Malay)\n#31: Kannada\n#30: Hausa\n#29: Jin Chinese\n#28: Hakka Chinese\n#27: Min Nan Chinese\n#26: Bhojpuri\n#25: Iranian Persian\n#24: Gujarati\n#23: Egyptian Arabic\n#22: Italian\n#21: Javanese\n#20: Urdu (Persianised Hindustani\n#19: Yue Chinese\n#18: Tamil\n#17: Vietnamese\n#16: German\n#15: French\n#14: Korean\n#13: Turkish\n#12: Wu Chinese\n#11: Telugu\n#10: Marathi\n#9: Western Punjabi\n#8: Japanese\n#7: Russian\n#6: Portuguese\n#5: Bengali\n#4: Hindi (Sanskritised Hindustani)\n#3: English\n#2: Spanish\n#1: Mandarin Chinese",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-03-25T13:02:30.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-03-25 13:02:32 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 16:26:17 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 18:49:36 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 18:52:35 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:08:10 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:20:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:44:13 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:59:15 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 12:40:02 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 19:29:50 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-06-24 15:16:06 +0000\",\"changed\":[\"map_reference\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:48:37 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:48:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:48:45 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
