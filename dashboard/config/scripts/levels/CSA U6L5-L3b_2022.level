<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `Song`(#e7e8ea) class represents a song and has instance variables for the title of the song and the lines in the song. The `lines`(#e7e8ea) list is created using the `FileReader.getStringData()`(#e7e8ea) method to read the contents of a file into the list.\r\n\r\n##In Song.java:\r\n\r\n1. Write the method `getAverageCharacters()`(#e7e8ea) to calculate and return the average length of the lines in `list`(#e7e8ea).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `getAverageCharacters()`(#e7e8ea) method and print the results.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Song mySong = new Song(\"title\", \"song.txt\");\n\n    // TO DO #2: Call the getAverageCharacters() method and print the results.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "Song.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a song\n */\npublic class Song {\n\n  private String title;              // The title of the song\n  private ArrayList<String> lines;   // The lines of the song\n\n  /*\n   * Constructor to create a Song with the specified\n   * title and the file containing the lines\n   */\n  public Song(String title, String filename) {\n    this.title = title;\n    this.lines = FileReader.getStringData(filename);\n  }\n\n  /*\n   * Returns a string containing the average number\n   * of characters in each line of the song\n   */\n  public String getAverageCharacters() {\n    // TO DO #1: Calculate the average number of characters in each line of\n    // the song and return a string containing the information for each line.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "song.txt": {
        "text": "",
        "isVisible": true
      }
    },
    "project_template_level_name": "CSA U6L5-L3b PBT_2022",
    "display_name": "Lines in a Song",
    "bubble_choice_description": "Find the average length of the lines in a song.",
    "thumbnail_url": "https://images.code.org/fd7e4e61c1695019a8abe44444b99e19-song.png",
    "encrypted_exemplar_sources": "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\nfT6mT8sM24xkSJ4+OQtm79FStCzqVQyT\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:27:02.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:27:02.160+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L3a_2022\\\"\"],\"cloned_from\":\"CSA U6L5-L3a_2022\"},{\"changed_at\":\"2022-04-14 19:27:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:44:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 21:11:02 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 23:00:57 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 23:04:56 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 23:05:23 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 12:17:14 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 13:18:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
