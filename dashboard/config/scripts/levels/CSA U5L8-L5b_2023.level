<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A threshold filter converts an image to a black and white image by comparing the grayscale value of each pixel to a threshold value. This type of filter is often used to separate the foreground and background in an image, or to identify specific objects or features within an image.\r\n\r\nüéí **IMPORT:** Import your <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ImagePlus</code> class from your **Backpack**.\r\n\r\n*Don't have it, or it doesn't work? That's ok! Copy the code from* ***here*** *and paste it into a new file in your project.*\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ImagePlus</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">threshold()</code> method to apply a threshold filter to each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">threshold()</code> method should:\r\n\r\n1. Traverse the 2D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> objects.\r\n\r\n2. Convert each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object to grayscale and set its color to black if its grayscale value is below the parameter value or white if it is above the parameter <code style=\"background-color: #ececec; color: black; font-weight: bold;\">value</code>.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class,\r\n\r\n1. Instantiate an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ImagePlus</code> object with an image in the Asset Manager, then draw the image in the scene without any filters. You can also upload and use your own image.\r\n\r\n2. Add a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">pause()</code> after drawing the image.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">threshold()</code> method on your image, then draw the image with the filter in the scene.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with getting and setting color values for a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- üîé ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_examples": [

    ],
    "display_name": "Threshold Filter",
    "bubble_choice_description": "A threshold filter converts an image to a black and white image by comparing the grayscale value of each pixel to a threshold value. This type of filter is often used to separate the foreground and background in an image, or to identify specific objects or features within an image."
  },
  "game_id": 68,
  "published": true,
  "created_at": "2023-03-28T00:08:46.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2023-03-28T00:08:46.431+00:00\",\"changed\":[\"cloned from \\\"CSA U5L8-L5a_2023\\\"\"],\"cloned_from\":\"CSA U5L8-L5a_2023\"},{\"changed_at\":\"2023-03-28 00:08:47 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-22 00:26:36 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
