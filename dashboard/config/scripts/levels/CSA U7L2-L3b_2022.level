<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A restaurant wants to allow customers to create meal combos consisting of a burger, side, and drink. The `Combo`(#e7e8ea) class represents a combo and has instance variables for a `Burger`(#e7e8ea) object, a `Side`(#e7e8ea) object, and a `Drink`(#e7e8ea) object.\r\n\r\nCustomers can create multiple combos that are added to a `customerOrders`(#e7e8ea) list. When they are finished creating their combos, the program displays the information about their selections.\r\n\r\n##In Combo.java:\r\n\r\n1. Complete the constructor to create a `Combo`(#e7e8ea) object. The constructor should instantiate the `theBurger`(#e7e8ea), `theSide`(#e7e8ea), and `theDrink`(#e7e8ea) instance variables with new `Burger`(#e7e8ea), `Side`(#e7e8ea), and `Drink`(#e7e8ea) objects.\r\n\r\n   * Use the `getHasCheese()`(#e7e8ea), `getSide()`(#e7e8ea) and `getDrink()`(#e7e8ea) methods in the `Burger`(#e7e8ea), `Side`(#e7e8ea), and `Drink`(#e7e8ea) objects to instantiate the new objects.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    Scanner input = new Scanner(System.in);\n    ArrayList<Combo> customerOrders = new ArrayList<Combo>();\n\n    String choice = \"\";\n    Combo myCombo = null;\n\n    while (!choice.equals(\"no\")) {\n      System.out.print(\"Would you like to create a combo? (yes or no) \");\n      choice = input.nextLine();\n\n      if (choice.equals(\"yes\")) {\n        Burger tempBurger = Combo.getCustomerBurger();\n        Side tempSide = Combo.getCustomerSide();\n        Drink tempDrink = Combo.getCustomerDrink();\n\n        myCombo = new Combo(tempBurger, tempSide, tempDrink);\n        customerOrders.add(myCombo);\n      }\n    }\n\n    for (Combo order : customerOrders) {\n      System.out.println(order);\n    }\n    \n  }\n}",
        "isVisible": true
      },
      "Combo.java": {
        "text": "import java.util.Scanner;\n\n/*\n * Represents a meal combo\n */\npublic class Combo {\n\n  private Burger theBurger;   // The Burger for the combo\n  private Side theSide;       // The Side for the combo\n  private Drink theDrink;     // The Drink for the combo\n\n  /*\n   * Constructor to create a Combo with\n   * the specified Burger, Side, and Drink\n   */\n  public Combo(Burger theBurger, Side theSide, Drink theDrink) {\n    // TO DO #1: Write the constructor to create a Combo object\n    // with new Burger, Side, and Drink objects.\n    \n    \n  }\n\n  /*\n   * Returns a Burger based on user input\n   */\n  public static Burger getCustomerBurger() {\n    Scanner input = new Scanner(System.in);\n    System.out.print(\"Would you like cheese on your burger? (true for yes, false for no) \");\n    boolean cheese = input.nextBoolean();\n    input.close();\n    Burger tempBurger = new Burger(cheese);\n    return tempBurger;\n  }\n\n  /*\n   * Returns a Side based on user input\n   */\n  public static Side getCustomerSide() {\n    Scanner input = new Scanner(System.in);\n    System.out.print(\"What side would you like - fries, chips, or salad? \");\n    String choice = input.nextLine();\n    input.close();\n    Side tempSide = new Side(choice);\n    return tempSide;\n  }\n\n  /*\n   * Returns a Drink based on user input\n   */\n  public static Drink getCustomerDrink() {\n    Scanner input = new Scanner(System.in);\n    System.out.print(\"What drink would you like - soda, water, or juice? \");\n    String choice = input.nextLine();\n    input.close();\n    Drink tempDrink = new Drink(choice);\n    return tempDrink;\n  }\n\n  /*\n   * Returns a String containing the Combo information\n   */\n  public String toString() {\n    return theBurger + \" with a \" + theSide + \" and \" + theDrink;\n  }\n  \n}",
        "isVisible": true
      },
      "Burger.java": {
        "text": "/*\n * Represents a burger\n */\npublic class Burger {\n\n  private boolean hasCheese;   // Whether or not the Burger has cheese\n\n  /*\n   * Constructor to create a Burger with\n   * the specified cheese status\n   */\n  public Burger(boolean hasCheese) {\n    this.hasCheese = hasCheese;\n  }\n\n  /*\n   * Returns whether or not the Burger has cheese\n   */\n  public boolean getHasCheese() {\n    return hasCheese;\n  }\n\n  /*\n   * Returns a String containing the Burger information\n   */\n  public String toString() {\n    String text = \"\";\n\n    if (hasCheese) {\n      text = \"Cheeseburger\";\n    }\n    else {\n      text = \"Hamburger\";\n    }\n\n    return text;\n  }\n  \n}",
        "isVisible": true
      },
      "Side.java": {
        "text": "/*\n * Represents a side\n */\npublic class Side {\n\n  private String type;   // The type of side\n\n  /*\n   * Constructor to create a Side with the\n   * specified type (fries, chips, or salad)\n   */\n  public Side(String type) {\n    if (type.equals(\"fries\") || type.equals(\"chips\") || type.equals(\"salad\")) {\n      this.type = type;\n    }\n    else {\n      System.out.println(type + \" is not available as a side.\");\n    }\n  }\n\n  /*\n   * Returns the side\n   */\n  public String getSide() {\n    return side;\n  }\n\n  /*\n   * Returns a String containing the Side information\n   */\n  public String toString() {\n    return \"side of \" + type;\n  }\n  \n}",
        "isVisible": true
      },
      "Drink.java": {
        "text": "/*\n * Represents a drink\n */\npublic class Drink {\n\n  private String type;   // The type of drink\n\n  /*\n   * Constructor to create a Drink with the\n   * the specified type (soda, water, or juice)\n   */\n  public Drink(String type) {\n    if (type.equals(\"soda\") || type.equals(\"water\") || type.equals(\"juice\")) {\n      this.type = type;\n    }\n    else {\n      System.out.println(type + \" is not available as a drink.\");\n    }\n  }\n\n  /*\n   * Returns the type of drink\n   */\n  public String getType() {\n    return type;\n  }\n\n  /*\n   * Returns a String containing information about the Drink\n   */\n  public String toString() {\n    return type + \" drink\";\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nlLhLAV6sBILLC8n/9OtcAKfhBhjdrBE=\n",
    "encrypted_examples": [

    ],
    "display_name": "Meal Combo",
    "bubble_choice_description": "A restaurant wants to allow customers to create meal combos consisting of a burger, side, and drink. Write the constructor for the Combo class to instantiate Burger, Side, and Drink objects.",
    "thumbnail_url": "https://images.code.org/4d907256cb39aba6baf44e776323889c-burger.png"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-18T12:33:06.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-18T12:33:06.257+00:00\",\"changed\":[\"cloned from \\\"CSA U7L2-L3a_2022\\\"\"],\"cloned_from\":\"CSA U7L2-L3a_2022\"},{\"changed_at\":\"2022-04-18 12:33:12 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 16:09:44 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 16:48:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 17:15:07 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:31:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:33:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:33:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:33:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:34:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:35:25 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:36:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:36:12 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:36:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:36:48 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:41:24 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:43:28 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-10 18:44:55 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
