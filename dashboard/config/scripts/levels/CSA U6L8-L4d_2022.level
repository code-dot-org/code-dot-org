<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Getting Started\r\n1. Import `TextProcessor.java`(#e7e8ea) from the ![Backpack](https://images.code.org/b17feeef2e8db2a98abdb4a5860c5c61-image-1642175705297.png)\r\n\r\n*Don't have it or it doesn't work? That's ok! Just copy and paste the code from [**here**](https://studio.code.org/s/csa-backpack-2022/lessons/4/levels/2).*\r\n\r\n##In TextProcessor.java:\r\n\r\n1. Write the method `sortLines()`(#e7e8ea) to return a new `ArrayList`(#e7e8ea) containing each line in `textList`(#e7e8ea) sorted in reverse alphabetical order (Z to A).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Declare and initialize an `ArrayList`(#e7e8ea) to store the `ArrayList`(#e7e8ea) returned from calling the `sortLines()`(#e7e8ea) method then print the list.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Read and Sort Lines",
    "bubble_choice_description": "Sort a list of lines from a file in reverse alphabetical order (Z to A).",
    "thumbnail_url": "https://images.code.org/6114f20626a8e72063ea9b885201bccb-justified.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    TextProcessor myText = new TextProcessor(\"poem.txt\");\n\n    // TO DO #2: Call the sortLines() method and print the list.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "poem.txt": {
        "text": "Two roads diverged in a yellow wood,\nAnd sorry I could not travel both\nAnd be one traveler, long I stood\nAnd looked down one as far as I could\nTo where it bent in the undergrowth;\n\nThen took the other, as just as fair,\nAnd having perhaps the better claim,\nBecause it was grassy and wanted wear;\nThough as for that the passing there\nHad worn them really about the same,\n\nAnd both that morning equally lay\nIn leaves no step had trodden black.\nOh, I kept the first for another day!\nYet knowing how way leads on to way,\nI doubted if I should ever come back.\n\nI shall be telling this with a sigh\nSomewhere ages and ages hence:\nTwo roads diverged in a wood, and Iâ€”\nI took the one less traveled by,\nAnd that has made all the difference.",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nN3cRPF7megMh+C+KqvR4dyhph0DZ6ltEWl8=\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:36:54.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:36:54.371+00:00\",\"changed\":[\"cloned from \\\"CSA U6L8-L4c_2022\\\"\"],\"cloned_from\":\"CSA U6L8-L4c_2022\"},{\"changed_at\":\"2022-04-14 19:36:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:20:02 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 01:09:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 11:57:23 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:01:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:03:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:03:59 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:04:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 12:04:59 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
