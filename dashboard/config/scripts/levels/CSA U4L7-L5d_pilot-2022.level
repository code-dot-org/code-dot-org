<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:32:08.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A researcher wants to determine an approximate width of the largest cities in the world by land area.\r\n\r\nThe researcher assumes that each city is shaped like a circle. To find the approximate width of each city, the researcher needs to find the square root of each value in `landAreas`(#e7e8ea) divided by `Math.PI`(#e7e8ea).\r\n\r\n##In CityData.java:\r\n\r\n1. Write the `calculateSizes()`(#e7e8ea) method.\r\n\r\n   * Traverse the `landAreas`(#e7e8ea) array. Divide each value by `Math.PI`(#e7e8ea) then use `Math.sqrt()`(#e7e8ea) to calculate the square root of this result to get the radius.\r\n   \r\n   * Multiply each radius by `2`(#e7e8ea) to get the total approximate width.\r\n\r\n   * Return a new array that contains the width.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Declare and initialize a new array called `landSizes`(#e7e8ea) that stores the array returned from the `calculateSizes()`(#e7e8ea) method.\r\n\r\n3. Print the values stored in the `landSizes`(#e7e8ea) array.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "City Sizes",
    "bubble_choice_description": "A researcher wants to determine an approximate width of the largest cities in the world by land area.",
    "thumbnail_url": "https://images.code.org/5a69e413e8df7d42deec96c5384b717e-image-1650649001010.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] cities = {\"New York\", \"Tokyo\", \"Chicago\", \"Atlanta\", \"Philadelphia\", \"Boston\",\n                       \"Los Angeles\", \"Dallas/Fort Worth\", \"Houston\", \"Detroit\"};\n    double[] cityAreas = {8683, 6993, 5498, 5083, 4661, 4497, 4320, 3644, 3355, 3267};\n    CityData myCities = new CityData(cityAreas);\n\n    // TO DO #2: Call the calculateSizes() method.\n\n\n    // TO DO #3: Print the values stored in the new array.\n\n    \n  }\n}",
        "isVisible": true
      },
      "CityData.java": {
        "text": "/*\n * Analyzes city data\n */\npublic class CityData {\n\n  private double[] landAreas;   // The list of land areas\n\n  /*\n   * Constructor to create a CityData object\n   * with the specified array of land areas\n   */\n  public CityData(double[] landAreas) {\n    this.landAreas = landAreas;\n  }\n\n  /*\n   * Returns an array containing the approximate\n   * width of each city\n   */\n  public double[] calculateSizes() {\n    // TO DO #2: Return an array containing the approximate width of each city.\n\n    \n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "name_suffix": "_pilot-2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:32:08.949+00:00\",\"changed\":[\"cloned from \\\"CSA U4L7-L5d_2022\\\"\"],\"cloned_from\":\"CSA U4L7-L5d_2022\"}]"
}]]></config>
</Javalab>
