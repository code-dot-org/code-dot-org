<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2023-01-12T21:03:05.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A scientist needs to keep track of the different types of planets found in the universe. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Universe</code> class has an instance variable for a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Planet</code> objects.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Universe.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">toString()</code> method to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the type of each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Planet</code> object in the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">worlds</code>. **Each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Planet</code> object's information should be printed on separate lines.**\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">UniverseRunner.java</code>,\r\n\r\n1. Declare and initialize a 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Planet</code> objects to store a default <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Planet</code> object, a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Neptunian</code> object with the name <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"HAT-P-26b\"</code>, and a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Terrestrial</code> object with the name <code style=\"background-color: #ececec; color: black; font-weight: bold;\">\"TRAPPIST-1 e\"</code>.\r\n\r\n2. Instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Universe</code> object with the 1D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Planet</code> objects.\r\n\r\n3. Print the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Universe</code> object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring and initializing a 1D array of objects.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nfor each planet in worlds\r\n  result += planet + \"\\n\"\r\nreturn result\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/polymorphism"
    ],
    "display_name": "Types of Planets",
    "bubble_choice_description": "Create a 1D array of `Planet` objects to store the different types of planets found in the universe.",
    "thumbnail_url": "https://images.code.org/43484789f8f5804c985baca82adf40e7-solar-system.png",
    "encrypted_validation": "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\nZPpBhgOWczgRM9TI+ENHnhTsew==\n",
    "encrypted_exemplar_sources": "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\nspV2mS3O\n",
    "start_sources": {
      "UniverseRunner.java": {
        "text": "public class UniverseRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Create a 1D array of Planet objects. Instantiate a Universe object with\n     * the 1D array, then print the Universe object.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Universe.java": {
        "text": "/*\n * Represents the universe\n */\npublic class Universe {\n\n  private Planet[] worlds;    // The 1D array of Planet objects\n\n  /*\n   * Initializes worlds to the 1D array of Planet objects\n   */\n  public Universe(Planet[] worlds) {\n    this.worlds = worlds;\n  }\n\n  /*\n   * Returns a String containing each planet's name and type\n   */\n  public String toString() {\n    String result = \"\";\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 1D array worlds and concatenate each Planet object to\n     * result on separate lines.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Planet.java": {
        "text": "/*\n * Represents a planet\n */\npublic class Planet {\n\n  private String name;    // The name of a planet\n  private String type;    // The type of a planet\n\n  /*\n   * Sets name to \"Unknown\" and type to \"Unknown\"\n   */\n  public Planet() {\n    this(\"Unknown\", \"Unknown\");\n  }\n\n  /*\n   * Sets name and type to the specified values\n   */\n  public Planet(String name, String type) {\n    this.name = name;\n    this.type = type;\n  }\n\n  /*\n   * Returns the name of the planet\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the type of the planet\n   */\n  public String getType() {\n    return type;\n  }\n\n  /*\n   * Returns a String containing the name and type of the planet\n   */\n  public String toString() {\n    return name + \": \" + type;\n  }\n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "Neptunian.java": {
        "text": "/*\n * Represents a Neptune-like planet\n */\npublic class Neptunian extends Planet {\n\n  /*\n   * Sets name to the specified name and type to \"Neptunian\"\n   */\n  public Neptunian(String name) {\n    super(name, \"Neptunian\");\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      },
      "Terrestrial.java": {
        "text": "/*\n * Represents a terrestrial planet\n */\npublic class Terrestrial extends Planet {\n\n  /*\n   * Sets name to the specified name and type to \"Terrestrial\"\n   */\n  public Terrestrial(String name) {\n    super(name, \"Terrestrial\");\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 4
      }
    },
    "video_key": "csa_polymorphism",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2023-01-12T21:03:05.459+00:00\",\"changed\":[\"cloned from \\\"CSA U3L6-L6b_2023\\\"\"],\"cloned_from\":\"CSA U3L6-L6b_2023\"},{\"changed_at\":\"2023-01-12 21:03:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-24 20:55:54 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 02:31:29 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 02:33:35 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 02:57:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 03:03:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 03:03:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 03:56:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 04:00:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 04:00:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 04:00:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 04:00:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 04:01:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 04:01:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 04:01:55 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-02 15:27:25 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-31 20:38:03 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-07-12 14:19:36 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
