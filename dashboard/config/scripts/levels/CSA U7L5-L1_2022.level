<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    CrewMember julie = new Animator(\"Julie\", 5000, 1000);\n    CrewMember sam = new CrewMember(\"Sam\", 3000);\n    CrewMember ashley = new SoundMixer(\"Ashley\", 2000, 3);\n\n    CrewMember[] movieCrew = {julie, sam, ashley};\n\n    for (int i = 0; i < movieCrew.length; i++) {\n      System.out.println(movieCrew[i].getName() + \"'s salary': \" + movieCrew[i].getSalary());\n    }\n  }\n}",
        "isVisible": true
      },
      "CrewMember.java": {
        "text": "public class CrewMember {\n  private String name;\n  private double monthlyPay;\n\n  public CrewMember(String name, double monthlyPay) {\n    this.name = name;\n    this.monthlyPay = monthlyPay;\n  }\n\n  public double getSalary() {\n    return 12 * monthlyPay;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public double getMonthlyPay() {\n    return monthlyPay;\n  }\n}",
        "isVisible": true
      },
      "Animator.java": {
        "text": "public class Animator extends CrewMember {\n\n  private double bonus;\n\n  public Animator(String name, double monthlyPay, double bonus) {\n    super(name, monthlyPay);\n    this.bonus = bonus;\n  }\n\n  public double getSalary() {\n    double salary = super.getSalary();\n    salary += bonus;\n    return salary;\n  }\n}",
        "isVisible": true
      },
      "SoundMixer.java": {
        "text": "public class SoundMixer extends CrewMember {\n\n  private int numMonths;\n\n  public SoundMixer(String name, double monthlyPay, int numMonths) {\n    super(name, monthlyPay);\n    this.numMonths = numMonths;\n  }\n\n  public double getSalary() {\n    return numMonths * getMonthlyPay();\n  }\n}",
        "isVisible": true
      }
    },
    "long_instructions": "##Investigate and Modify\r\n\r\nRun the program to observe the results.\r\n\r\nThen, experiment with the program by making the following modifications. Change one line at a time, then run the program after each change to observe the results.\r\n\r\n1. Look at the `Animator.java`(#e7e8ea) file. What do you notice about this class? What does its `getSalary()`(#e7e8ea) method do?\r\n\r\n2. Comment the line `double salary = super.getSalary()`(#e7e8ea) in the `getSalary()`(#e7e8ea) method in the `Animator`(#e7e8ea) class then run the program. What is different about the results?\r\n\r\n3. Look at the `SoundMixer.java`(#e7e8ea) file. What do you notice about this class? What does its `getSalary()`(#e7e8ea) method do?\r\n\r\n4. Comment the `getSalary()`(#e7e8ea) method in the `SoundMixer`(#e7e8ea) class then run the program. What is different about the results?",
    "name_suffix": "_2022",
    "encrypted_examples": [

    ],
    "teacher_markdown": "##Investigate and Modify\r\n\r\n1. The `Animator`(#e7e8ea) class extends the `CrewMember`(#e7e8ea) class. In its constructor, it uses super() in order to call the constructor for this superclass. In addition, it also sets its own unique instance variable, `bonus`(#e7e8ea), equal to third argument that was passed into the class constructor. When the `getSalary()`(#e7e8ea) method is called, it uses the `super`(#e7e8ea) keyword in order to call the parent method to return the salary value. The overloaded method takes this value from the superclass' method and adds the value of its own `bonus`(#e7e8ea) instance variable onto the result, returning this value when the method is called from the `Animator`(#e7e8ea) subclass.\r\n\r\n2. When we comment the line `double salary = super.getSalary()`(#e7e8ea) in the `getSalary()`(#e7e8ea) method in the `Animator`(#e7e8ea) class, the program is unable to compile. This is because the next line in the method references the `double salary`(#e7e8ea) that was declared and initialized in the line that we commented out. Since there is no variable `salary`(#e7e8ea) anymore, the program is unable to compile if we reference that variable name.\r\n\r\n3. Similar to the `Animator`(#e7e8ea) class, the `SoundMixer`(#e7e8ea) class extends `CrewMember`(#e7e8ea). In its constructor, the third argument that is passed indicates the value of the instance variable `numMonths`(#e7e8ea). This might be thought of as the amount of time that a contract for this particular `CrewMember`(#e7e8ea) might last. When the overloaded `getSalary()`(#e7e8ea) method is called for this subclass, instead of relying on the `superclass`(#e7e8ea) method in which we multiply the `monthlyPay`(#e7e8ea) by **12** to receive the yearly salary, we instead multiply by `numMonths`(#e7e8ea) to indicate the amount to be paid over the life of the contract.\r\n\r\n4. In this case, the original method in the `superclass`(#e7e8ea) is called and the method returns the `monthlyPay`(#e7e8ea) multiplied by **12**."
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-02-26T00:32:12.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:32:12.252+00:00\",\"changed\":[\"cloned from \\\"CSA U7L5-L1\\\"\"],\"cloned_from\":\"CSA U7L5-L1\"},{\"changed_at\":\"2022-05-11 13:17:20 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-11 13:19:20 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-11 13:21:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-19 13:58:13 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-08 16:53:14 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2022-11-08 20:09:51 +0000\",\"changed\":[\"encrypted_examples\",\"teacher_markdown\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
