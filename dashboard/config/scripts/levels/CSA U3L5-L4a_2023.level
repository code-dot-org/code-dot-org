<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The <a href=\"https://code.org/promote/ap\" target=\"_blank\">**AP Computer Science Exams dataset**</a> includes the number of exams taken in each state in 2021. The number of exams taken in each state is stored in an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">int</code> array called <code style=\"background-color: #ececec; color: black; font-weight: bold;\">csExams</code>.\r\n\r\n‚úÖ **TO DO #1:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">APExams.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageExams()</code> method to calculate and return the average number of AP Computer Science exams taken in each state.\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">DataRunner.java</code>, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcAverageExams()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with traversing a 1D array using a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">for</code> loop.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The average is found by dividing the sum by the number of values. You already have a way to get the sum of the values in the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">csExams</code>!</p>\r\n        <p>Use the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">calcTotalExams()</code> method to get the sum and divide the result by the length of the 1D array to find the average.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ntotalExams = calcTotalExams()\r\naverageExams = totalExams / csExams.length\r\n</pre>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "AP Computer Science Exams",
    "bubble_choice_description": "The AP Computer Science Exams dataset includes the number of exams taken in each state in 2021. Write the `calcAverageExams()` method to calculate and return the **average** number of AP Computer Science exams taken in each state.",
    "thumbnail_url": "https://images.code.org/8e9cc77f4b543315fed9a4302b93a3e3-exam.png",
    "reference_links": [
      "/courses/csa-2023/guides/for-loops"
    ],
    "project_template_level_name": "CSA U3L5-ChoiceA_2023",
    "encrypted_exemplar_sources": "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\nwRF5gVKi1mGNhXQmB8T1P7goXR82qz5OFPEpbv1Fv1ZU1ElYsOC7xnJNL0YN\nImV9i2XxzCxKfgWxWS/cx5OWLYKs8BbdrHuMwklGVBofrfvQoKSU7ZgIXKl7\njnIURBzNyGctwher0JyThb45DyFYedtf+SYQXrJkiOriX58Sd17UNL8DlAAF\n26T14k/P15rhuyuFIBuIdWqaILfhKihGL7ScdscI4eZ6q3RFAnIfo7pp+R6g\n/bOOiUACc+n0JmD2dSh/KzxOHmoYaewBtGia9IuDtlEuGW++/OWTt0HUursK\nrb2TOLO3H8r/7rIl8yxzCXlEf7foqspCxcGxvknro+XV/Ne5vBou0vPk/3TH\nJBMooECCmIYEC8wTxxcfYqgmXMjI8yH6idFsZgW5FwTAdX3vdVkrzo/xXJJF\n8TyUr/+MGp9lMCwSYTBn+J7li25/dCVdhY0rHNlZksnT7XGPUw+6W1phwVa3\nj/Doz35ThsTDXTabciyU3ffvUIoqU3DuO+dBAu9XTJdjwBAH6J7UzI+duKT1\nrJEaAoMNy0FLbF43maA9qrI5yGhx8Bw+1qDo1IPum/QXJjgtPKseipdZ7fRJ\niFBenDSKQpKMJ+9X7jTYN310plBmINhUYVNzqsvrIVrYmQ+M/xvcKdboCS9y\n5aNH4mJtyMp1BlHOOF/7OUHRTEU8ltOZhec3m4kwU97flaJEe9uJONi251vN\nHu0GAe3XrCvxfSDlOcPXdXMExh8Blf7bDCu40gShQdJUTx5jH38+E+0nwOQn\nkD9MrP428kPc56zknjiSCp5Ip3qb+tnZ50L+oz4cNGqoF6gYNL3wpb6G+pKN\n6c+NqPDY8FhTuVsN3rNVHK62fdv8DE0iEmInELXtJBINrPtbZJwf0ywX3Iko\nOcVtyLPT03QTwzgL5yG/9FlB09KasrM/gQlkKvaeV1S5CLpN1g++xF1XLSQ7\naL6rL89t/8bBk7HffWm4l9pLTIy4kXMAGto0JhbggXQBKRKcQCAdf/UrjmUS\njrO9Wo58WRzHz4DKIK75nP7WQ9iy3C7ptISyAv89J6OhjqLh4bDr4oBnW876\n4Yk+G5sQ/on8rKtdKDsGfYfBCf4lNr+tIpt93lpD2gtPwUKDGoqiAht7AtXw\n0qEWhTeyuHbxT9QHd7ineo0WhDNo2OGMY1kscqeZYsSJiZR8OWXz5989cK3d\n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\n",
    "encrypted_validation": "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\n",
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the FileReader.toIntArray() to read the exams.txt file and store\n     * the result in a 1D array. Instantiate an APExams object with the 1D array,\n     * then call the calcTotalExams() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the calcAverageExams() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "APExams.java": {
        "text": "/*\n * Manages data about AP CS exams taken in each state\n */\npublic class APExams {\n\n  private String[] states;   // The 1D array of state names\n  private int[] csExams;     // The 1D array of the number of AP CS exams taken in each state\n\n  /*\n   * Reads the data from states to initialize states and initializes csExams\n   * to the specified 1D array of the number of AP CS exams taken in each state\n   */\n  public APExams(int[] csExams) {\n    states = FileReader.toStringArray(\"states.txt\");\n    this.csExams = csExams;\n  }\n\n  /*\n   * Returns the information for the state at the specified index\n   */\n  public String getStateInfo(int index) {\n    return states[index] + \"\\nNumber of Exams: \" + csExams[index];\n  }\n\n  /*\n   * Returns the total number of AP CS exams taken in all states\n   */\n  public int calcTotalExams() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse csExams to calculate and return the total number of AP CS exams\n     * taken in all states.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    return -1;\n  }\n\n  /*\n   * Returns the average number of AP CS exams taken in each state\n   */\n  public int calcAverageExams() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calculate and return the average number of AP CS exams taken in each state.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n    return -1;\n  }\n\n  /*\n   * Returns a String containing each state name and the number of AP CS exams taken\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (int index = 0; index < states.length; index++) {\n      result += states[index] + \": \" + csExams[index] + \" AP CS exams taken\\n\";\n    }\n\n    return result;\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "states.txt": {
        "text": "Alabama\nAlaska\nArizona\nArkansas\nCalifornia\nColorado\nConnecticut\nDelaware\nFlorida\nGeorgia\nHawaii\nIdaho\nIllinois\nIndiana\nIowa\nKansas\nKentucky\nLouisiana\nMaine\nMaryland\nMassachusetts\nMichigan\nMinnesota\nMississippi\nMissouri\nMontana\nNebraska\nNevada\nNew Hampshire\nNew Jersey\nNew Mexico\nNew York\nNorth Carolina\nNorth Dakota\nOhio\nOklahoma\nOregon\nPennsylvania\nRhode Island\nSouth Carolina\nSouth Dakota\nTennessee\nTexas\nUtah\nVermont\nVirginia\nWashington\nWest Virginia\nWisconsin\nWyoming",
        "isVisible": true,
        "tabOrder": 2
      },
      "exams.txt": {
        "text": "2399\n100\n1587\n1406\n31189\n2584\n3251\n513\n14864\n7221\n782\n429\n8572\n2883\n521\n236\n1462\n1191\n242\n7662\n5451\n4504\n1432\n400\n1199\n42\n514\n1701\n403\n9391\n270\n13304\n6273\n109\n3754\n500\n714\n6104\n617\n2159\n26\n2046\n17307\n612\n150\n6034\n4034\n352\n2080\n112",
        "isVisible": true,
        "tabOrder": 3
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 4
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2023-01-12T17:53:54.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2023-01-12T17:53:54.964+00:00\",\"changed\":[\"cloned from \\\"CSA U3L5-L3d_2023\\\"\"],\"cloned_from\":\"CSA U3L5-L3d_2023\"},{\"changed_at\":\"2023-01-12 17:53:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-22 23:57:58 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 00:51:14 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 01:19:56 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 02:02:49 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 15:10:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 15:11:52 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 15:20:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-23 15:20:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-31 20:22:34 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
