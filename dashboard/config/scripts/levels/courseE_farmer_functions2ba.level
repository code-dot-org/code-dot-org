<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2017-07-13T22:52:04.000Z",
  "level_num": "custom",
  "user_id": 285,
  "properties": {
    "skin": "harvester",
    "serialized_maze": "[[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":true},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[0,1],\"startsHidden\":true},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[0,1],\"startsHidden\":true},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":2,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[0,1],\"startsHidden\":true},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[0,1],\"startsHidden\":true},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}]]",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "start_direction": "1",
    "step_mode": "1",
    "flower_type": "redWithNectar",
    "fast_get_nectar_animation": "false",
    "instructions": "Help the farmer pick the corn and pumpkins using the `corn and pumpkin` function.",
    "instructions_important": "true",
    "ideal": "13",
    "markdown_instructions": "*\"I feel so functional!\"*\r\n\r\nDid you notice that there was repeated code in the last puzzle?  It doesn't work to put it all inside of a loop, but we **can** use functions.  \r\n\r\nFor this puzzle, we have moved the repeated code into a function called `corn and pumpkin`. Now, all you need to do is put the small `corn and pumpkin` **function call block** into the code where you need it.\r\n\r\n___\r\n#####Each sprout will either grow *one* corn or nothing.",
    "authored_hints": "[{\"hint_class\":\"pointer\",\"hint_markdown\":\"Use the green `corn and pumpkin` block to call this function.\",\"hint_id\":\"courseE_farmer_functions2ba_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/36769aa1bd24c6c4b54321c03f314dd9/courseE_farmer_functions2ba.mp3\"},{\"hint_class\":\"pointer\",\"hint_markdown\":\"Drag all of the blocks in the toolbox together under `when run` to see how this function works.\",\"hint_id\":\"courseE_farmer_functions2ba_b\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/da2b83e22ba502f3c4be42705629bb42/courseE_farmer_functions2ba.mp3\"}]",
    "callout_json": "[]",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "shape_shift": "false",
    "disable_procedure_autopopulate": "false",
    "step_speed": "1",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-07-13 22:33:56 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"markdown_instructions\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-13 22:34:28 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-13 22:45:50 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-13 22:46:51 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"ideal\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:37:56 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"markdown_instructions\",\"callout_json\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:39:35 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:41:06 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"instructions_important\",\"markdown_instructions\",\"contained_level_names\",\"start_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:43:38 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:50:24 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:51:40 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:54:21 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:55:03 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:55:04 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:55:27 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-14 00:56:30 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"ideal\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-26 17:59:47 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-08-24 16:14:36 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"}]",
  "level_concept_difficulty": {
    "sequencing": 4,
    "repeat_until_while": 1,
    "functions": 2
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false"/>
        <block type="procedures_defnoreturn" movable="false" editable="false" x="210px">
          <mutation/>
          <title name="NAME">corn and pumpkin</title>
          <statement name="STACK">
            <block type="harvester_untilHasPumpkin" movable="false" editable="false">
              <statement name="DO">
                <block type="harvester_ifHasCorn" movable="false" editable="false">
                  <statement name="DO">
                    <block type="harvester_corn" movable="false" editable="false"/>
                  </statement>
                  <next>
                    <block type="maze_move" movable="false" editable="false">
                      <title name="DIR">moveForward</title>
                    </block>
                  </next>
                </block>
              </statement>
              <next>
                <block type="harvester_pumpkin" movable="false" editable="false"/>
              </next>
            </block>
          </statement>
        </block>
        <block type="procedures_callnoreturn" y="50px" x="30px">
          <mutation name="corn and pumpkin"/>
        </block>
        <block type="maze_turn" y="140px">
          <title name="DIR">turnLeft</title>
          <next>
            <block type="maze_move">
              <title name="DIR">moveForward</title>
              <next>
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </next>
        </block>
        <block type="procedures_callnoreturn" y="280px" x="100px">
          <mutation name="corn and pumpkin"/>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Actions">
          <block type="maze_move">
            <title name="DIR">moveForward</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="harvester_corn"/>
          <block type="harvester_pumpkin"/>
          <block type="harvester_lettuce"/>
        </category>
        <category name="Loops">
          <block type="harvester_untilHasPumpkin"/>
          <block type="harvester_whileHasCrop">
            <title name="LOC">Corn</title>
          </block>
          <block type="maze_untilBlocked"/>
        </category>
        <category name="Conditionals">
          <block type="maze_if">
            <title name="DIR">isPathForward</title>
          </block>
          <block type="maze_ifElse">
            <title name="DIR">isPathForward</title>
          </block>
          <block type="harvester_ifHasCropElse">
            <title name="LOC">Corn</title>
          </block>
          <block type="harvester_ifHasCrop">
            <title name="LOC">Corn</title>
          </block>
          <block type="harvester_untilHasPumpkin"/>
          <block type="harvester_whileHasCrop">
            <title name="LOC">Corn</title>
          </block>
          <block type="maze_untilBlocked"/>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="procedures_callnoreturn">
              <mutation name="corn and pumpkin"/>
              <next>
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="procedures_callnoreturn">
                                  <mutation name="corn and pumpkin"/>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </next>
        </block>
        <block type="procedures_defnoreturn" editable="false">
          <mutation/>
          <title name="NAME">corn and pumpkin</title>
          <statement name="STACK">
            <block type="harvester_untilHasPumpkin" editable="false">
              <statement name="DO">
                <block type="harvester_ifHasCorn" editable="false">
                  <statement name="DO">
                    <block type="harvester_corn" editable="false"/>
                  </statement>
                  <next>
                    <block type="maze_move" editable="false">
                      <title name="DIR">moveForward</title>
                    </block>
                  </next>
                </block>
              </statement>
              <next>
                <block type="harvester_pumpkin" editable="false"/>
              </next>
            </block>
          </statement>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>