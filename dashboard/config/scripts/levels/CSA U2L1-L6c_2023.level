<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**Create the `Dessert`(#e7e8ea) class by declaring instance variables for the specified attributes, and refactor the `Donut`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.**\r\n\r\n✅ **TO DO #1:** In the `Dessert`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the flavor of a dessert\r\n   \r\n   * the price of a dessert\r\n\r\n✅ **TO DO #2:** Refactor the `Donut`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.\r\n\r\n✅ **TO DO #3:** In `FoodTruckRunner.java`(#e7e8ea), instantiate a `Dessert`(#e7e8ea) object and a `Donut`(#e7e8ea) object, then print the instance variables for the `Dessert`(#e7e8ea) and `Donut`(#e7e8ea) objects by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables, creating a subclass, and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/inheritance",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Desserts and Donuts",
    "bubble_choice_description": "Create the `Dessert` class by declaring instance variables for the specified attributes, and refactor the `Donut` class to be a subclass of the `Dessert` class.",
    "thumbnail_url": "https://images.code.org/f9692b1a8d6f5fcb61cc40fe879a2a18-donut.png",
    "encrypted_exemplar_sources": "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\nQIL6VKb9rlM8fS0=\n",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* ------------------------------------- TO DO -------------------------------------\n     * ✅ Instantiate Dessert and Donut objects, then print the instance variables for\n     * the Dessert and Donut objects to the console using AttributesHelper.printAttributes().\n     * ---------------------------------------------------------------------------------\n     */\n\n    \n\n\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dessert.java": {
        "text": "/*\n * Represents a dessert that can be sold at a food truck\n */\npublic class Dessert {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Declare instance variables for the flavor and price of a dessert.\n   * -------------------------------------------------------------------\n   */\n\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Donut.java": {
        "text": "/*\n * Represents a donut that can be sold at a food truck\n * Donut is a type of Dessert\n */\npublic class Donut {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Refactor the Donut class to be a subclass of Dessert.\n   * -------------------------------------------------------------------\n   */\n\n  private String flavor;          // The flavor of a donut\n  private double price;           // The price of a donut\n  private boolean hasSprinkles;   // Whether or not a donut has sprinkles\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 5
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:31:39.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:31:39.511+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L6b_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L6b_2023\"},{\"changed_at\":\"2022-11-01 17:31:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:19:42 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:41:08 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:49:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:31:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:32:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:32:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:32:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:33:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:20 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:41:04 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:21:18 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:51:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:10:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:11:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:11:30 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:53:55 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:55:41 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:59:48 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
