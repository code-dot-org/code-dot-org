<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**Create the `Dessert`(#e7e8ea) class by declaring instance variables for the specified attributes, and refactor the `Donut`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.**\r\n\r\n✅ **TO DO:** Write the `Dessert`(#e7e8ea) class, and refactor the `Donut`(#e7e8ea) class.\r\n\r\n1. In the `Dessert`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the flavor of a dessert\r\n   \r\n   * the price of a dessert\r\n\r\n2. Refactor the `Donut`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.\r\n\r\n3. In `FoodTruckRunner.java`(#e7e8ea):\r\n\r\n   **a.** Instantiate a `Dessert`(#e7e8ea) object and a `Donut`(#e7e8ea) object\r\n   \r\n   **b.** Print the instance variables for the `Dessert`(#e7e8ea) and `Donut`(#e7e8ea) objects to the console using `ClassInfo.getAttributes(nameOfObject)`(#e7e8ea)\r\n\r\n::: details [**🔦 What is `ClassInfo.getAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `ClassInfo.getAttributes()`(#e7e8ea) is a hidden support method that returns the instance variables in a class as a `String`(#e7e8ea). Call the method by passing an object as its argument, such as:\r\n\r\n```\r\nDog fido = new Dog();\r\nSystem.out.println(ClassInfo.getAttributes(fido));\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables, creating a subclass, and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/d49395cddf45bcfb4bfb19f61689e0f9-image-1667490021219.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/inheritance",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Desserts and Donuts",
    "bubble_choice_description": "Create the `Dessert` class by declaring instance variables for the specified attributes, and refactor the `Donut` class to be a subclass of the `Dessert` class.",
    "thumbnail_url": "https://images.code.org/f9692b1a8d6f5fcb61cc40fe879a2a18-donut.png",
    "encrypted_validation": "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\nkU2SEk/tPf0J51sFCHXvmExetdqECw+cqMkI\n",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* ------------------------------------- TO DO -------------------------------------\n     * ✅ Instantiate Dessert and Donut objects, then print the instance variables for\n     * the Dessert and Donut objects to the console using ClassInfo.getAttributes().\n     * ---------------------------------------------------------------------------------\n     */\n\n    \n\n\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dessert.java": {
        "text": "/*\n * Represents a dessert that can be sold at a food truck\n */\npublic class Dessert {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Declare instance variables for the flavor and price of a dessert.\n   * -------------------------------------------------------------------\n   */\n\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Donut.java": {
        "text": "/*\n * Represents a donut that can be sold at a food truck\n * Donut is a type of Dessert\n */\npublic class Donut {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Refactor the Donut class to be a subclass of Dessert.\n   * -------------------------------------------------------------------\n   */\n\n  private String flavor;          // The flavor of a donut\n  private double price;           // The price of a donut\n  private boolean hasSprinkles;   // Whether or not a donut has sprinkles\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      }
    },
    "encrypted_exemplar_sources": "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\nS89oHKDSTfY5PSWkCQ/1Syk1q5xD25PP\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:31:39.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:31:39.511+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L6b_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L6b_2023\"},{\"changed_at\":\"2022-11-01 17:31:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:19:42 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:41:08 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:49:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:31:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:32:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:32:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:32:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:33:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:20 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:41:04 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:21:18 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
