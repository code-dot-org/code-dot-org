<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**A student wants to create a playlist to listen to while they study, and they need help creating a `Song`(#e7e8ea) class to represent a song.**\r\n\r\n✅ **TO DO #1:** In the `Song`(#e7e8ea) class, declare instance variables named `title`(#e7e8ea) and `rating`(#e7e8ea) for the title of a song and its rating.\r\n\r\n✅ **TO DO #2:** Write a no-argument constructor to assign default values to the instance variables, such as `\"new song\"`(#e7e8ea) for the title and `1`(#e7e8ea) for the rating.\r\n\r\n✅ **TO DO #3:** In `PlaylistRunner.java`(#e7e8ea), instantiate a `Song`(#e7e8ea) object.\r\n\r\n✅ **TO DO #4:** Print the constructor and the values assigned to the instance variables for the `Song`(#e7e8ea) object.\r\n\r\n::: details [**🔦 How do I print the information?**]\r\n  \r\nThe `ConstructorsHelper.printConstructors()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nConstructorsHelper.printConstructors(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n\r\nPrint the values that are currently assigned to the instance variables using the `printSongInfo()`(#e7e8ea) method. For example:\r\n\r\n```\r\nSong hitSong = new Song();\r\nhitSong.printSongInfo();\r\n```\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables, writing no-argument constructors, and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/no-argument-constructors",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "The Song Class",
    "bubble_choice_description": "A student wants to create a playlist to listen to while they study, and they need help creating a `Song` class to represent a song.",
    "thumbnail_url": "https://images.code.org/45cfd82b184e9f10f9e39ad694a02cbc-song.png",
    "encrypted_exemplar_sources": "+Mlt91VxbXcVrPmYxmoIjM1MM1xdVyvJ0kk83GVDbseYu7J7o3v/qOjE6dcx\n1PjZeTqv6aEGyICLbwG/WMII9dx9eCCM1+4gNC5Yjmt7xuMsFZo7rJqm5RYs\nCNmocrss4p7cHB/gACgY8LrbcN9OflM3xgOqmGqb2s6O5dM1YMDJXFmCWvJu\nSr+DIvTVKAx9MT+JgCEx4cjoiCpm2ANUEsW+qjpHZI5SiGG6PfZlSu/u6Xw9\njsa0xEPzBmi7/Bg/YANmkjf5z2hmY+4nQ1Rux1414gwTomTWp6k+SP5/wGqc\n+kqMltUtbZlNelE4DoAbkStVTA2/ocDjyzyW1l2wCeQl84wXW20FeQEC2r5p\ngOX1NyhgTdy0xv2MguEkHt8ON5IiDxwDx/4EqWidbVOycHoBCCsoDKrC75RH\nAlyVr98jjES7KCdd4TEJOAUSNM3QG36wZ0BakJ7/X6t8EwmhSZN5whgwC3GR\nyJAojaIa3647AH/JUgrSJirdeFGlvVltRA3lK2LjewVPlZOvTRIxznIWJdKc\npOf/e+MqTIQqNwCq03NaaWtUpdNUpde4zSrgZ+i1fvBeaTN5EtMB3lvywbm4\nSdKxeFQSURU7iPtmWGaBTERucJFOWCpWcjxvBxE9qfE35gHolulRblG+HOq6\nnEYfbNx4rEuBnoqizB7gb4sq7j7aZJpfC2lx7UiSuZBVKtVQqaa6O+CTfjG5\nuwSZOnOE9OHNJyj10z8PKBlncVImzIYFY/hcsFsrgCSmkkz9d8aszN5vHfvY\ntPFc1Hg9RN5X06JDhI5WaQRzZ6nBxZTk4t2blkCe4w1oYKtCsA8QKDpGTPD6\nBIkMup0T/dyDAWAjk0jFQNGRVuMWiCciUmAhmnAolJLzChNENfFKQacJnqLP\n2COGwSsK9DtsRyVpIgTt5nyWH4GA7ksR3cVutkKDeFCIjOKhY9oWBRgnThZ9\nxmO9miIlgDldoR144uYXunlCvWk7PZy6jhoqbg8djS74N2YazWNkVkQz6H93\njUADsIOtfNkxz1VBEdN31HcNkmEc91zuA4kI1dE0sG+c5UfoZs274utPmwmY\nkF32ihgp+bst4AwCyIZOtcNafccKjkDxyuu9aAR3iH8cZWk5CkjHGwl3BRy4\n/iI0BkpSpWr3vpza/MMqpPuJYxFcddS0I3HJOoNFJG6UBUpby+t+QAg7uO5e\nUjuONRRRRCM4P0SY2bPA8VxMzd21uPVMzpN8b3iC452zCiA8fHSYDsafBYXW\nurB6c50CUuvC2wa0Sp5thdN0nVrHD0V9vHTEkm5I43b45r3fVwBE3yJkDH7c\nSwBkAfyBe8h+McJiw8bt3LnLrtixiTARX6otG2139+f5fx8JjMjbujsE5mgg\n4N26NW4Usubg3kFD7gB5z0hc3YkMLxwWRmiipeAWaeXESIDUlnUD0fR6t2gJ\nOeAsu2wG/0UUdrM//ldnr60w5cnxlzmBJkvn9j+uWUCOwI2uQiq5h8X8THEY\nSaOZIiEx3ZTa1OoxboHlLHe9FEz3MBLRRrBMUhfOl5gQRIHkuIUThuv23pRB\n8zAh7ODXLXWZehKqiM60sC0qjuLDFNvCfeFlfGwpy8a62zih/49Yz17KR73y\nl3UyYiUw9nh5D0AKPzY9H/H+hp3sWjhmXeS8YaSD+tQzCrU8id7OXwyi+pye\nQsTDpeoArOl8UgilfIoW4BsQQnIkRH1h46OxjMDkir4A9vHJBc1UH0KnsegF\nSAkBq1zaq3TJlBIywoKDn0LGgDwAwxLDbFP2oeQ6Oz/WUfWGWTEhds8MB5S/\nDg6QapjZeRgNYlEEnSn3PjyREVqdx2UQNGNQuAaPcU2D3G8UluJnvwAV0Mb/\ncYhoqXvKuZFOqZDjdAiOKSHjYvsC1paDC+UNyjtaDyBC8oP4vcgnvUF2PETM\nXPPNi51TCWYAAez6fE9lZ77m6i7enU50oN2KZ9g0NEB3EWjMM68RGiIqtkoH\nijwTyXNoh+HfWgSSN08vlqUaYYvKHHCB7CnU/3n3Dv5+1ExpqJGuG0zlPYn1\n9nsphnVo8X86SJL8/OyG+9gA/QjkHbsIy4N8LWrBF8zoR6ji2H7G/xOAdqkZ\n/GpZJHvDWAe93ywMG32QUOVZ4PMxDRwoXOJH/lOhqk1Je4/gMIGVjLQICqZB\nL2BiEdwQCC46lKvdFaRnAcXTzsNbrMbZNAPDhy4t1PJgPNCcA576hvE2mfY8\nWmIGnNh7RKTYn7W2QTfyK76yVg2w96DJVv3aPmlZt6aPTkaSOyh0yH8zDmn8\nsSkHt0GXoRnV3JFGCb/tiHi0hrwa4WSIqf0ElgCN4A1zNkcF4/nG96a1/zTM\nJFHBSTa1O4gaZ5FuINQJwxvooDzRxz7tx2fQ8Pk+Lp07N8f9H/k6zFmWvhTQ\nSNgeI2DPjXvRrhNUKs3BBuVGf2DNWbIOGAZcflaj38lGZwt8FT3YGFw3QNmF\nrEPM7g+F8qgxKWBEf1IYuGyklh9YyNbJlwG1G9JZR6eI7rHCdQ2qoQfptg4R\npQyfbmkF5AmwnUemaVLOEMqnX5Eu2hVKpbFtvjbria2kOxNIaZ4OP3ptPqyf\nAvJkIgu53BfcoRiynhKAsxoa+KHxDS74iN5VVwjlG6LArLI0Pn0BgYr8dGyo\nGi5KHeXUogSJl1K9ywV8NHqMX+708uQTYUAsIOapMR4P8S4yvkPE/TRxfROR\nOVsuFWrzaakqnJtKZuFgZsoE26hP15l+qrUpJegNGkRziW4lcEkvEXZR57FI\nVIzNyrimXmSeyuemjx8SoJ5Z8YkZ2LSw0MKerKFNF4ywfKTyY/H7Ndy9+9BV\nPdybxMqO0ehG0XvLe8zIUIRtbzvKXMlDK1pj002WD0lK6Wr64XL6E66Ql8wT\nUzjCs8UN6qVXmnCaM7dtXxBfpWDwa+uJ2/02tUVU0XCorGowC1Htr77O5lsD\noQyds88SaR2LqckrlKO5TY6CYcrD3nyslAAf4nedxUYUt+Hgr3H1vJJ+nTu+\nbuwe4SsyGGHHmPL8yiVwr+AIoow5LZCEDWxIGC+kx+q1KkcHbg0xWMnOnphJ\nkP2IzBf5jXMgfXcFaZx8dnIHGYG02bL/AL8s0WXO1w6boTW2+Fva7RxWleXM\nPPx1m1wQSldhNBLNzIzi4zh5vwiimXmdewAcf9AqA2ClzAST3gUB7NrxwuxH\n6jJjBjuyz1HmZk1wMl2M09wGHPBYL9Kc1fDthC50aEF+pTjbgymk0gWo87uM\nPvNV3NleHOW3U+KY2Q2fEnztbNNyXseUFmMmmd9Tl9H09us36pYVJi/xKFoX\n3Ky1qJIQJ5reUMLrhO5vdQH8XMMajHd+Ka2JKSXqN/7K56MSw63WESIWUXhk\nSYblMDdByXmfxvMYtBU18/I85KegQrpPph2XL23n2+O8ofh5jGohpKD1XJjN\njJkM+y3ilL/2wROHJgMyNl0yLVNdq8EK+Rb/NdsjqbhZa4EsMAagB8D0l1s3\nymQrmNhU3FxpPewhyzu+QURr8vtp2zGSQUxPvF95STcPy/eDkkOJca4E3HmU\n2jUQRnrB+2vCiD5OsIQytL9jXIehuttAiELSIeTbUR3GbIZmeyJmj/2LxGlr\ndrjn8oIA/7Bg3/PuXsTk0mOcsWb+H8j4UDnq+LgSr9HVYIIT4JxiZf4ZEPhL\n2n5uPKybHED42+j7T1EbaJxSUirYD9eLBNp6RTFxIuo0fW3KND68zmqfxcaY\n+bwsxGkYH5OhotseJ84oGYlnJ/IJhQ8cSMA9X+JEqUdmvDaCUsJn0Ryhln+F\n4DSeZdQwpR9KpAO+Rk39mvyglBR4ajbucXTsAvOkN6aTgVpBKfaEEjfFAn6Z\nEHeFGVEI+rGJnx1ilb/aYwXZlWmMm4INnuqB6/nP4bZqlDIMGOtGatQOGcUF\nErNsTYAkDkj2AUB02KFQbEar8DhCjmv8YYaxEKNF7cYCijS1IwUcC37Ts1E2\nSuMeAvOfTBbr/1k++LmmJWX0y2sLJ++G+CKZg0597fP+jcgSN71W+UcxzpBo\nEuEROsyxusMR+NtDHqRPAszIxqdnzLKDgWfLBTq1ku2lQcNiiixW1nsWGKU7\nsP8LYw6/7tqfzrnMg1dMqlCb0s9E39dgMNB9yjJILcjhkaumk2ZunjxA9kLh\n2csI68kYF7M9iHgUwI0E1zgnftDZvVbk7MmRPJmx1qwnrwKEVdIgIPLRuLxW\nL0SOt55aPT8bsrSgoP6cVPbO9+6LIJzi8nJNObFhzH3y09i71qj5zkMK3h8N\nvKB67r9mXP7qG9iyIDK8+m5iBs0yKxtOnjjTEHqoleP85vrBTZLubgxZFbhm\nbADIpoXqKcybr/sfAI5ZwbYVyfx/kk1hz+M64Ar2uIiOAiHziFT1gXDyXuGi\nqtS7ha06CzJBjTlMYm7gnj8zlK5lMC2cWm9vyZyOjMsaVMjVKkZJf3uokrf0\n/zGeD9AoYEvUWY0B5eJ3HIoPFDkYcEmV7A/hgmN99GMKNK2YN9NCDiW2sNww\nkwMOLCaxyfeJtZ3T6nGbcuqPo8iixrVLq0jSp+xLcRgxTu7Ar5Y+d16FbNHn\nsmpgNzEdNLhgTTIpn3HsmzHOkVeNY5Afb+Urk4vDMjI3Kk0LIhWkUlyvf7us\nO4Vq7+Io52BIqksy3X4L4GFoeZHxUEExqDNsc+W2TBq61XK1qJRZtSSr6z12\nsoaYoIPNnIKFZxs0wGlCmf71tc11g+IPHvQ/E4UjOLg9eoaCh4nAq3RB+3e0\n7KgriWrLccTLfoSaO1Xj7Rj+aQoAB6XXWpCghtydTiH+y/2YznOWZuBZxMRV\nOtWt4T/GjG4F/8FkLFTxlUt4c2RMm0dT2YMomWlPikTlv3iI45J8M7DYRMUM\nO+SVhPCbgvt67H7hfup/f7zustjxnD/wg3o14NR8AD1GQq0u3BnfU64ue7/k\nehzXpdTEWd6AQzsNjrIIJTq6FhYlke950ZAM8ErHEsR+9vk4ER6Tzgw0P2zc\nIcIm1wFhBIdME2E93Yk9ksP23rGX3h3hiuwr5ijQges9mbte6APsVwNm7FCw\n5SRyKXloyk3pN+NcHkF0KEOhouotmhAyFtuN+jEoziI7HBM2GyFW8DzmDAis\nh6j4fmy3GZRGRCUo2bxu6aBSiJdnIRnt9LNQpp19tDXYWrH41w0/OSkzAZ8D\neih9b76a0ItGHyxpuLLNVJttEbZbslt0gRfAIRzYp4QFP1a3NEfHXccYkDRH\nrt9/W/RasFo5b9z1cL2ml1rfeKv6vJLqcdmnHWvNmUsquoxxaKvkIxBD/h7Z\nThdv1ji2FFVSB2KMaR5ZQQgdZm9HL5mWyABu2tRrndchOiKuNS9I5V8tzDwB\nMEcOz7TuswiYJpBDVLWeLfYu2MX5OBk4qcK2x/Q52E6CYIp2zhCx4tBG3Scj\nyJniSr3l+/T8HD2RAZTt6k2bpdIL5ouHiW/i7plj9zSjTrpe/G3wMR9tlc8k\n1G7qobGeVzh/+e1qRKkdV1lEIg307YjVrWegkg/xe92ILrr79BB5goR5DZ+x\nHHLfYjAFfkw8c0CnqZMRgiIPzsJf6YT2aBv3yfD/LS+54H8JetgC/t2HkuOz\n7PbZ5dqsrNMADLTDhheX18jOjp5m9PVJa6EU8/ydvJykeXMJHevp2DTcB54p\n9KzsQdwXjD232saRaBPcIdVTz3ouBHS03JrMS1Z5uPJIp4hyiBqtoi7HFMkb\nlLImYw73rHiOUqVeo22EJf7sQz6fSr0kGVZ4POGHrN218Jns9K5UVO0xxdcK\nc3qgoRWYuUmajNbWrLyKKQUuytYYX9519J93hJRH6nWu6i2zVu6Dt2uwQcUY\nxbMZegJfnUrAPnQb3ut3exMclzyTxzhNcKDwuk95q5XYVIlyUsL62p38k8Ms\n8QoKoU9+G+17QxMfRPZ3J6c7ptIcvJXYOtzHgU3iqNPDHp1oZicTapAgrj3L\n+OjELeu00NgBPKV3xdUUqcIbJ0uM8nUPr6s4VnECzIcl9oi9PmS551wZvchx\n7B+0g/G0Qkf1b4DXdDA56CAibbwQ18+fjI2LRxsibCiV63Mo7DCaiLud9EZP\nDPr4NfYuw5kSYUP/3Rze/GIx4vhzx0vm4pJaDkmRqSkOLVXhg+FqWsIkYrOH\n4wliqLHH0QTa5oTrlmBBSKknFIkNoGB2+H8oUbvhE6NQ6YWaeCBPPVrkDFuG\nv1O0pFMc9dnZhCTPkcA4GrO4x/IeozT3tV6TpH+pv5U18y366kAKeN9Bu7Xm\neo9Qg7hLoj73/GhDbiElvYLDK4d2q9bIQxixweLdgl8M6vS4gAlTeVBuVohj\nP1oaHE9LGupWkPi+KmeMfdJEh88WmbFgkzJM+AdDzKxPOApJLU5hihcmkoSZ\nA7f5RV1tCKl0QHkxXBnlO7h9067BBBI3U7v5vZ9sDdX+qahHA0vLjnOYtcx0\n40HvZrHB4GGTZUEN5+gMLBDkbnsU/c/NXocuxgOk0XITOPXTE0G3dWs9mMAA\nROu5dlnvh22coVDXYCgkWQfFrK8hAS1MHoZhkPbD/7ZeeQ+LOD7mQXKM0XWG\nK/bdNoCtCvwCKubjevIW8JYZrv1pJiCXMHPnRyMEARQ9zhK4UpHcwuapB11b\npoVoapSLAEGKlEGJXvoNG7rENh7MIM/VFcTMrt6eHui+nypduWl6ZKto3+Rx\nYBS77eI8NUUcasa8M3Xs1PTcffMAXoLkPA02yIO3xYSVK1qkOeivUUFRYrvB\nCpX5n2k5DWmB2mhNgVlwC4tMPD0wZBTRuDbLBmHVEVLFfc0E5Lvm5rZyxlKy\nK1LZCrASYUpE63I6gpbgkzt/ajUr/4gZQeMIrvdgsqRaM+IR+56ihLfAEZo/\nJol1N/ZduFJV5u7JGnaIlcH3w9jbgrlnQMhxHcAZD6MmBdwG2+4TC2dnaNvP\nGtp8wuyvK9FBMrXRlUgqnWahuWwC0vaoTiQiMoBR5zqA0Art22v93JpabFUx\n/fYdxd5MUFUJ11vMuCU9fChppSnnAqlxReqxRJkZOvMWRqsOtcuXTWB5fqes\ngF1l2Q9UxeHsWdAd31dOi4Md2ZeA6isW6q4KKU/XFJh/e3M03ABh50KnKjI1\nqPHKw+qyBYIQg0TRdvri0UUOFjeiFUuVQdAGfc54YXj7EoRNJrLQCG9ihPFr\n2G6WkLwNpyOdX30rzDqbqVLgFch+M/ST6ZjQ7QESqPSvCo43Fjuv+yIOeq21\nc+dUIjDdYdkaLYpYTMo3IONbPKFBp+IfxFKOlYQFu0299Lkoxeq9GKlUqch1\nuY6GWhAEcpoBItY6HQ/yFHqwqcduH/DJ6yPSkkmvPqJch8mJtV7Ush0/OEmZ\nQRvl+SapJ4ooaYgCuT0ArMIz9hWGdlyHs5z6WeRylVDR0r3e8xu4qQocjFry\nN8uE1AFqZgE8giIQbWKdF/aNvBT0va/IOZE31sXP39jqXSt25cFunVOMI2pE\nSmPCS0jTd85E6M9U+RbLHAzhrjuRhZWRO+k+Kp4ruUPmvaxGrLWdv4/Jxmku\nxsQrlv5GyVEqbr7d0xxxIywxuij5WLibtQk2HNF9dXpKc0IeMf9run9aFHPc\nRWeFQA3xsCOZr2dVw3GiNautcpydrLIyMX1JyDxo5uABbWCzqwPT8aIMTn4h\n6Cuyi/iribreKogN/mqH7YxlewErtsYw9v00Gv2BPW82oVI7BqGweXX8Y4Cc\nGK3p8TwiSAoEHVU7MQh95oE5/K5vyDS1zV5/4mouJmo1PIRoHfWLEkAHrcze\nIE6yJDKARMLITheyl6MEMVLCs3vus1+i9KCU3iCcEVHgF69eUOjpHEQPDVsk\nljhO+BfqUx6tOAy3s5Ol8SwVknEerpzKOJPZ0jTF/rRdCuj6Ad/T1RZ1Hy+3\nuUNFYPlLH6Dft6z8juQhWOwVtidelcYIvRt7pv9nJMlknR++i4qT1ZLgqQBg\nLQn3jPB5/qeXVHX7Pw7JgZBf9nifrzUhjYeGnIZv4MRfGnF0nNtuXPDseWiv\n3uWAAPTwZxHiCTXeiqugkeQH4pNLqVobm9+09ZBN+Dg+KNWAzWaUYU37wSY0\n4WWbDYTxcMKrnAuRCsUqBUBPiPW2e98Gvx1L/gj22zgsuZ8965mC9GQG2ydJ\nHazgSO7w5OK6CUuRM9hoMbYXYTdcLkaGNRz9auj/ZoE+wQ6pKEl+MC1MKuF7\nS7YS+DQwilxYHb/SKIJq7JsgdhI/ZfJC1ar5vLflpPuJ9Fbr272oF2bguO8o\nYE1on/+90mEUPsaFaX2T455MBdHQ3/AKNWsG6PnizSUxn4kE3UHTxubP5cVn\nkC1Dpp4DVpJj9eAC2qn87NqMJHXoaSq0S7IOau+Cy6Ysvx5oJrDdgoxwoysB\ncjVb5+Iyu7JxGBKX+5j6twQhecz4X55dbHBT4LAd8UaGisnmeaSkCKPuDPVl\n3b8UYLU8XKk1dJfDhbbc2HYlP+qK3/dskkR/LTVa3vCzg4H12EZBV6GvzsFX\nCp2zWAcsk1Pxl/YuUn5bar/DnO5diKgrOm/IQ9V/sNpfa/zqBoMWlDev/hWO\nGLkuEQSSkcEWz7yrloT4pEOfp5Xmy63eta3CWxIRU+MPTcimoz8uMi5bnLI8\ndFuN/ID0GEa6Vc80Jggg+ZAz710AlF0nkyjWOS5i0LCK9IJ6JNnICMOZr/tK\nRYclkR2OR6naN6o1nbZXYGn+i5npkju8Ws5aF5SLzjcO9/RZz5SfmH2g22bD\nO7NkTdNb+dQ+o9s3NU0XNsD8tjBv4CEoytK0BTKCOXa4u3Krn7QdgvbouHu5\nwx/B4lsIbYGdQggrR2rLI+LmEXHzco6uic6QcyVJkHx2XKqlgliZnIlvs1De\n+yPdIwezJVzT+SjBAb51nXsky1l0n2IDBQ==\n",
    "start_sources": {
      "PlaylistRunner.java": {
        "text": "public class PlaylistRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Song object. Print the constructor to the console using\n     * ConstructorsHelper.printConstructors(nameOfObject).\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Song.java": {
        "text": "/*\n * Represents a song on a playlist\n */\npublic class Song {\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ✅ Declare instance variables for the title of a song and its rating.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n  \n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ✅ Write a no-argument constructor to assign default values to the instance\n   * variables for the title of a song and its rating.\n   * -----------------------------------------------------------------------------\n   */\n\n  \n\n\n  /*\n   * Prints the title and rating of the song\n   */\n  public void printSongInfo() {\n    System.out.println(\"Title: \" + title);\n    System.out.println(\"Rating: \" + rating);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ConstructorsHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ConstructorsHelper {\n  \n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassConstructors;\n  private static ArrayList<String> superClassConstructors;\n\n  public static void printConstructors(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getConstructorsHeading());\n    System.out.println(getCurrentClassConstructors());\n  }\n  \n  public static String getConstructorsHeading() {\n    String result = getCurrentClassName() + \" Class Constructors\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassConstructors = getClassConstructorsList(currentClass, currentClassName);\n    superClassConstructors = getClassConstructorsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getClassConstructors() {\n    return currentClassConstructors;\n  }\n  \n  public static ArrayList<String> getSuperClassConstructors() {\n    return superClassConstructors;\n  }\n  \n  public static ArrayList<String> getClassConstructorsList(Class currentClass, String className) {\n    Constructor[] classConstructors = currentClass.getDeclaredConstructors();\n    ArrayList<String> constructorsList = constructorsToList(Arrays.toString(classConstructors));\n    cleanConstructors(constructorsList);\n    return constructorsList;\n  }\n  \n  private static ArrayList<String> constructorsToList(String constructorsAsText) {\n    constructorsAsText = constructorsAsText.substring(1, constructorsAsText.length() - 1);\n    ArrayList<String> constructorsList = new ArrayList<String>();\n\n    String currentConstructor = \"\";\n    int start = constructorsAsText.indexOf(\"public\");\n    int end = constructorsAsText.indexOf(\")\");\n\n    while (start != -1 && end != -1) {\n      currentConstructor = constructorsAsText.substring(start, end + 1);\n      constructorsList.add(currentConstructor);\n      constructorsAsText = constructorsAsText.substring(end + 1);\n      start = constructorsAsText.indexOf(\"public\");\n      end = constructorsAsText.indexOf(\")\");\n    }\n\n    constructorsList.add(constructorsAsText);\n    return constructorsList;\n  }\n  \n  public static void cleanConstructors(ArrayList<String> classConstructorsList) {\n    for (int index = 0; index < classConstructorsList.size(); index++) {\n      String currentConstructor = classConstructorsList.get(index);\n\n      currentConstructor = removeJavaLang(currentConstructor);\n      currentConstructor.trim();\n\n      classConstructorsList.set(index, currentConstructor);\n    }\n  }\n\n  public static String getCurrentClassConstructors() {\n    ArrayList<String> currentClassConstructors = getClassConstructors();\n    return getListAsText(currentClassConstructors);\n  }\n  \n  public static String removeJavaLang(String currentConstructor) {\n    String textToFind = \"java.lang.\";\n    int location = currentConstructor.indexOf(textToFind);\n\n    while (location != -1) {\n      currentConstructor = currentConstructor.substring(0, location) + currentConstructor.substring(location + textToFind.length());\n      location = currentConstructor.indexOf(textToFind);\n    }\n\n    return currentConstructor;\n  }\n  \n  public static ArrayList<String> getParameters(String currentConstructor) {\n    ArrayList<String> parametersList = new ArrayList<String>();\n\n    int start = currentConstructor.indexOf(\"(\");\n    int end = currentConstructor.indexOf(\")\");\n\n    currentConstructor.substring(start, end);\n    int comma = currentConstructor.indexOf(\",\");\n  \n      while (comma != -1) {\n        String currentParameter = currentConstructor.substring(0, comma);\n        parametersList.add(currentParameter);\n        currentConstructor = currentConstructor.substring(comma + 1);\n        comma = currentConstructor.indexOf(\",\");\n      }\n  \n      return parametersList;\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n  \n  \n  \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-03T19:22:55.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-03T19:22:55.676+00:00\",\"changed\":[\"cloned from \\\"CSA U2L2-L3d_2023\\\"\"],\"cloned_from\":\"CSA U2L2-L3d_2023\"},{\"changed_at\":\"2022-11-03 19:22:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 13:36:21 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:56:25 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:56:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:56:34 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:00:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:05:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:05:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:07:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:21:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:21:34 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:21:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:22:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:26:33 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:26:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:49:00 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-10 21:46:39 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:26:52 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:53:40 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:53:44 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:53:44 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-12 15:54:51 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
