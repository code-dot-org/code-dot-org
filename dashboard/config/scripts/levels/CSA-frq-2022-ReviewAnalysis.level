<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2023-06-20T15:37:00.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##ReviewAnalysis FRQ\r\n\r\nUsers of a website are asked to provide a review of the website at the end of each visit. Each review, represented by an object of the `Review` class, consists of an integer indicating the userâ€™s rating of the website and an optional `String` comment field. The comment field in a `Review` object ends with a period (\".\"), exclamation point (\"!\"), or letter, or is a `String` of length 0 if the user did not enter a comment. \r\n\r\n```\r\npublic class Review \r\n{ \r\n\tprivate int rating; \r\n    private String comment; \r\n    \r\n    /** Precondition: r >= 0 * c is not null. */ \r\n    public Review(int r, String c) \r\n    { rating = r; comment = c; } \r\n    \r\n    public int getRating() \r\n    { return rating; } \r\n    \r\n    public String getComment() \r\n    { return comment; } \r\n    \r\n    // There may be instance variables, constructors, and methods that are not shown. \r\n}\r\n```\r\n\r\nThe `ReviewAnalysis` class contains methods used to analyze the reviews provided by users. You will write two methods of the `ReviewAnalysis` class. \r\n\r\n__Part A)__ Write the `ReviewAnalysis` method `getAverageRating`, which returns the average rating (arithmetic mean) of all elements of `allReviews`. For example, `getAverageRating` would return `3.4` if `allReviews` contained the following `Review` objects.\r\n\r\n![](https://images.code.org/468f4c4c1d3183beea029536320db13e-image-1687366413334.53.24 PM.png)\r\n\r\nComplete method `getAverageRating`.\r\n\r\n__Part B)__ Write the `ReviewAnalysis` method `collectComments`, which collects and formats only comments that contain an exclamation point. The method returns an `ArrayList` of String objects containing copies of user comments from `allReviews` that contain an exclamation point, formatted as follows. An empty `ArrayList` is returned if no comment in `allReviews` contains an exclamation point. \r\n* The `String` inserted into the `ArrayList` to be returned begins with the index of the `Review` in `allReviews`. \r\n* The index is immediately followed by a hyphen (\"-\"). \r\n* The hyphen is followed by a copy of the original comment. \r\n* The `String` must end with either a period or an exclamation point. If the original comment from `allReviews` does not end in either a period or an exclamation point, a period is added. \r\n\r\nThe following example of `allReviews` is repeated from part (a).\r\n\r\n![](https://images.code.org/468f4c4c1d3183beea029536320db13e-image-1687366413334.53.24 PM.png)\r\n\r\nThe following `ArrayList` would be returned by a call to `collectComments` with the given contents of `allReviews`. The reviews at index `1` and index `4` in `allReviews` are not included in the `ArrayList` to return since neither review contains an exclamation point. \r\n\r\n![](https://images.code.org/03a0545bb54784b6ed531f3b3a9615a7-image-1687366453004.54.09 PM.png)\r\n\r\nComplete method `collectComments`. \r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Review.java": {
        "text": "public class Review \n{ \n  private int rating; \n  private String comment; \n  \n  /** Precondition: r >= 0 * c is not null. */ \n  public Review(int r, String c) \n  { rating = r; comment = c; } \n  \n  public int getRating() \n  { return rating; } \n  \n  public String getComment() \n  { return comment; }\n  \n  // There may be instance variables, constructors, and methods that are not shown. \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ReviewAnalysis.java": {
        "text": "public class ReviewAnalysis \n{ \n  /** All user reviews to be included in this analysis */ \n  private Review[] allReviews; \n  \n  /** Initializes allReviews to contain all the Review objects to be analyzed */ \n  public ReviewAnalysis() \n  { /* implementation not shown */ } \n  \n  /** Returns a double representing the average rating of all the Review objects to be \n  * analyzed, as described in part (a) \n  * Precondition: allReviews contains at least one Review. \n  * No element of allReviews is null. \n  */ \n  public double getAverageRating() \n  { /* to be implemented in part (a) */ } \n  \n  /** Returns an ArrayList of String objects containing formatted versions of \n  * selected user comments, as described in part (b) \n  * Precondition: allReviews contains at least one Review. \n  * No element of allReviews is null. \n  * Postcondition: allReviews is unchanged. \n  */ \n  public ArrayList collectComments() \n  { /* to be implemented in part (b) */ } \n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ReviewAnalysisTest.java": {
        "text": "",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2023-06-20 15:37:04 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 15:37:48 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 15:42:59 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 15:43:00 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 15:44:18 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 17:48:31 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-21 16:54:54 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
