<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A researcher wants to find the population growth over time. They are using the formula\r\n\r\n**totalPopulation = startingPopulation x 2.7 <sup>growthRate * time</sup>**\r\n\r\nwhere `2.7`(#e7e8ea) represents [**Euler's number**](https://www.investopedia.com/terms/e/eulers-constant.asp#:~:text=Euler's%20number%20is%20a%20mathematical,to%20exponential%20growth%20or%20decay.). This value is raised to the power of `growthRate * time`(#e7e8ea).\r\n\r\n##In PopulationData.java:\r\n\r\n1. Write the `calculateGrowth()`(#e7e8ea) method.\r\n\r\n   * Use `Math.pow()`(#e7e8ea) to calculate the total population with the researcher's formula.\r\n\r\n   * Return the value of the new population.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Declare and initialize a variable that stores the result returned from the `calculateGrowth()`(#e7e8ea) method.\r\n\r\n3. Print the current and new population.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Population Growth",
    "bubble_choice_description": "A researcher wants to find the population growth over time.",
    "thumbnail_url": "https://images.code.org/90181431c34802929f0854995f042a22-image-1650648893086.png",
    "encrypted_exemplar_sources": "jrRNHcOowRx22njbDNzE6K10Ex1m7JwmHnodMo3x9M1vForEPl+W8vyprgD+\nAARl7QH8glnxiisyQXWHvLbgUf43jSjTZCQkjMO9OT+NYBkfdqDxtX+3M/Zq\nixluIH1V6mUIHgnJPilzGPoNIrInw0cTAkre/64LITONP8rJgXoQ1SEW91ZU\n4gYuJK1Fp/akyO9lvSMjrij+9TKBXAX2oIUz607DUDzjWQIY7oTOjXN2sfBl\n4MEV3q+N3c/y0HOZJMkUIgCJRoK88Rh38PM8yB5aUdZgC7Pf9XWDZroWuLyW\n6NvfczaIfJVJurXXqj/22sH1zwFpC5hLCceTxvDe7qpD8cE2+WOghjl2OZbh\nGFvQI6o05kW/ALokK4ccHG5KJ/ikqcwlM86+jS6v+QeLJR8B6k71VM76iIE/\n9YO8SOwDJp46+vqfqa2Ac2mZFOTI1FTF433AtuoXdXWVbq2QLLyRebamublQ\ncW5DpuF3fGo6RWSZqlmGN2VxU0gsuTuCeT8IwrTsnTnX2xfnflWpzwnu7Xqp\nXr/FmycVIttSa25XqxEK4ubflx1bN2Dj8dTh3KLPLZWZUzf1+o2ml26Lgnhi\nyOd0QFUnU2gAIQq0vUTbpy1b98pazZB6UXgH7pRkYEnNDUFYI2PsVpX3aE8c\nsaWAUhHC2o5hjJpMNpIsirWAjCdxVH/pRKQR75yGPZbqKlSTWssKFoiQI3P1\nMztGklh93FutnynXuw6CZFA/s/d4Ok03BWQFshIATiT+ErjjJpt2M2pStAwl\nxW/nBOWH2MjFPDCoOS4tSLDNk9bznrudV9lL4bDRhdlCE95zyajDlJCKDKko\n5t2tbs9wvAVg6ZjqTbSHccdYBlP/6PxDOqo2jialdapo9RDrd+4jX5NHEYpR\nqZeFOX2PhJ7Ov1lkLQWSLNOeaDWXn0J6BmrP6jTU8ljE4iTWcZ1HTYgdTs+z\nXbg73/zWQv6/HoAv4mTjVkt3Plg+1lZByQa/7Q8D8H7sZos2pi9x0TkkspW5\n1AdMptGBuFpT5093MZYMWygVf+etCSdNHLmeij39YQicdnaUlqxsdLeBiH6c\n/1em/FkO3l4zz0L/gsnR9NfkBxEJZGT2Ik80d9Vq4NthdSheL9Xo1rASO/Bp\n4crdH9HbnTq/zwLSzxjl0HPPnOZF0vf6+n6zo76Kjmi8KwtplVBzvEPdf6xu\nMfUNr8ha9wFbvsJItgvs8+9TYr9W5ibm4wESfgysqEE8mfqLqTwEBIaI3jpl\nRdMuSpO5xsoJyiASAVQxj4IGs2TIzRp7poAHkwDl+JjaS4LA98yOgqCHoil4\nbBIQnOKLad1ydVJHEHaNgq3RIfcEXt1ty+aL6O/ie/QUmemKzxABA3bM73op\nhoKqDwPfxdqkx86siD1U2D2eSNozPA/J/neJEm8qH1ZGMNM2Nb/A8O+aA35X\n4c816vfl1DyCM5E9HvUuJ7bQQLwqrlh09K2ucrttISgWDzjtq48FsJbMastv\noOAdSexjRXBbqiQdDwbDA7yOJkZn4lYY2LeMqJjZ7HHDE8b8dKyXehtPOpBC\n1Pe2N8W5GPrsSXWTKHMtLA+qdentG4VBT5bWd9EHlC4RBi9HWW2t7O+FxRC0\nUcKH6fNRbxkune251cG/B+dEdSnKAUZJ/7zJd2DcZ6yEuSbeHEq7viJqxIFX\nJE6TlbREs+tvPWkWgQvWx0h8AzkYG3wIlLUXT/Nxf3pYoXMPGxBrMWaU5iHl\nLfJJsL9V2g==\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "238u+PMjr4/9ACplHdjRXq4C4zR2CGVR43AGXBMQmweSexiKHjQuY7hdSiUT\nGd9qFZT9IgFB9SF9nzU90rdleGetBD8FM5xf8g0h8A1wMK1t6z9YioLVSHGM\nUdXsi10mFwdp3CouVmsd2ABOQSIiL9gjUMzmYldC/XWkOHBATDndiGJMwr9x\nW1fsED4Lw0hXBt8ZnIq44gk6sGt35assG7vqQNZmfHx45QMc+TxYsmXiI7IX\nA53XuswiG8+Z5Uvid5V6p/20KH3kJeArZy/oXofJX8P0KQ4lb7+UJfU4svOZ\n+1JxaW7wAav0V/HVIfaAWdTUuOMUxFhsepN9zm4oNx9XUklQxdFs/Q1hH4uF\nbavjH6lCP4KYtuqTM7DJgeQc/QL5uwDQWbWqCEvif5uQkzvZ5Hxxde44n8x1\nAdhZo4yRVQ1/Pjxi3nT3JLgIjqjeaS8+B/O8Be/G8D1/BrOsWoqS/wqH2Bpz\nJxO4k+xERnV7/T5vHZStaqdaBSnW383A4sLfwavs9/+OlOwVFRhUWAe0Mmks\nBFO32K/c9AymMZbPyzjePqXKd2myWfLCsJgHXk23J8wmM14Kh4M0tXc+cPNf\nlFeNKgrgLvtnQQmV2won238B8u4SCgfEyrdfBtC5SU9UusxeQf7A992D07fM\nBT0HknbCdsP20mgfCRh7cpisKfMczu+Yw6BwmOCGTtnZ2yqL+cvKEZMJ1ZD/\npMDYf/lrFLjBCGWEToTnRIv62Z+yoGsZAUTPvqugcG53BLix/kAgGGqwo9vt\nXo88RgUKPLWrgd+zDJ7eNCfcGYuT5WYRVV3QrQzRNaryEY+irkIO9QfwjJvy\nTfev+Oh3dx37Mb9OPnWLxWtpTPnLqakhb3G/5zJB56FnUUy0n6sUuycIbwxb\nrURsQzvVJQOWePKt0iBMI6JJSh0pglDJCl8zGKhZgtB1TfaRhZEilT6DSp1L\nNhhicC97Xi3yOBlmlTOLjSJOYzuHAxG+egG40bqkMndCX9EWoWr93tHQV3o9\nNd7ei9S7yMs6Heqvr0ZMi+OiMA==\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    PopulationData myPopulation = new PopulationData(250.3);\n\n    // TO DO #2: Call the calculateGrowth() method.\n\n\n    // TO DO #3: Print the current and new population.\n\n    \n  }\n}",
        "isVisible": true
      },
      "PopulationData.java": {
        "text": "/*\n * Analyzes population growth\n */\npublic class PopulationData {\n\n  private double currentPopulation;  // The current population\n\n  /*\n   * Constructor to create a PopulationData object\n   * with the specified current population\n   */\n  public PopulationData(double currentPopulation) {\n    this.currentPopulation = currentPopulation;\n  }\n\n  /*\n   * Returns the current population\n   */\n  public double getCurrentPopulation() {\n    return currentPopulation;\n  }\n\n  /*\n   * Returns the new population\n   */\n  public double calculateGrowth(double growthRate, double time) {\n    // TO DO #1: Calculate and return the total population.\n\n    \n    return 0;\n  }\n  \n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:32:08.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:32:08.823+00:00\",\"changed\":[\"cloned from \\\"CSA U4L7-L5c_2022\\\"\"],\"cloned_from\":\"CSA U4L7-L5c_2022\"},{\"changed_at\":\"2022-09-21 21:55:29 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-21 21:55:35 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
