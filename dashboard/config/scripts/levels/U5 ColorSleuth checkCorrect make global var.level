<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-12-07T19:58:17.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "edit_code": true,
    "embed": "false",
    "instructions_important": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "project_template_level_name": "U5 ColorSleuth Template",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "false",
    "markdown_instructions": "## Step 1 - Make randButtonId a global variable\r\n\r\nMaking `randButtonId` global means modifying the code to declare/create it *outside* of any function and then setting its value *inside* setBoard().\r\n\r\n* Create a new variable on line 1: `var randButtonId`;\r\n* **Switch to text-mode** \r\n* Inside the setBoard() function, delete the `var` in front of `randButtonId` so that rather than re-creating the variable, we set the value of the global one.\r\n\r\nUpdated code should look like this (new or updated lines have `<--` arrows)\r\n\r\n\tvar randButtonId;     <-- declare as global variable\r\n    setBoard();\r\n    function setBoard(){\r\n    \t\r\n        //...set board code...\r\n        \r\n        randButtonId = \"button\"+randomNumber(1,4);    <-- remove \"var\" from assignment\r\n        \r\n    }\r\n\r\n**Testing it out**\r\n\r\nUnfortunately, there is not much to test here other than to determine your code still functions.  This is just a step that doesn't really change any functionality.\r\n\r\n* If it works the same as before, it's probably right, move on.\r\n* If it's broken or doesn't run double-check the changes you made.\r\n",
    "teacher_markdown": "Here is a working version of where students should be at this point.\r\n\r\n\r\n\tvar randButtonID;\r\n    setBoard();\r\n\r\n    function setBoard() {\r\n      var R = randomNumber(0,235);\r\n      var G = randomNumber(0,235);\r\n      var B = randomNumber(0,235);\r\n      var color = rgb(R, G, B);\r\n      setProperty(\"button1\", \"background-color\", color);\r\n      setProperty(\"button2\", \"background-color\", color);\r\n      setProperty(\"button3\", \"background-color\", color);\r\n      setProperty(\"button4\", \"background-color\", color);\r\n\r\n      R = R+20; \r\n      G = G+20;\r\n      B = B+20;\r\n      var diffColor = rgb(R, G, B);\r\n      randButtonID = \"button\"+randomNumber(1,4);\r\n      setProperty(randButtonID, \"background-color\", diffColor);\r\n      console.log(\"correct button is: \"+randButtonID);\r\n    }\r\n\r\n",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>