<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A social media analyst wants to store data about the age groups of users on different social media platforms to create a visual to represent each platform. They have the following values:\r\n\r\n![](https://images.code.org/76ef5d2f4378239d7734f70de16556c9-image-1650990198797.png)\r\n\r\nwhere each row represents ages 18-29, ages 30-49, ages 50-64, and ages 65 and up, respectively. Each column represents the percentages of users on Facebook, YouTube, Twitter, and Instagram, respectively.\r\n\r\n##In SocialMediaScene.java:\r\n\r\n1. Write the `findMaxPercentages()`(#e7e8ea) method to find and return the largest percentage of users for each column in `percentages`(#e7e8ea).\r\n\r\n   * Create a 1D array that is the same length as the `icons`(#e7e8ea) array.\r\n   \r\n   * Traverse the `percentages`(#e7e8ea) array to find the largest percentage of users for each column.\r\n   \r\n   * Add the largest percentage found for the column to the 1D array.\r\n   \r\n   * Return the 1D array containing the largest percentages found for each column.\r\n   \r\n2. Write the `findMaxAgeGroups()`(#e7e8ea) method to find and return the age groups with the largest percentage of users for each column in `percentages`(#e7e8ea).\r\n\r\n   * Create a 1D array that is the same length as the `icons`(#e7e8ea) array.\r\n   \r\n   * Traverse the `percentages`(#e7e8ea) array to find the largest percentage of users for each column.\r\n   \r\n   * Add the age group from the `ageGroups`(#e7e8ea) array with the largest percentage found to the 1D array.\r\n   \r\n   * Return the 1D array containing the age groups with the largest percentages found for each column.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array in column-major order uses the following syntax:\r\n  \r\n  ```\r\n  for (int col = 0; col < arrayName[0].length; col++) {\r\n    for (int row = 0; row < arrayName.length; row++) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Social Media Users",
    "bubble_choice_description": "Write a method to find age group with the largest percentage of users for each social media platform and create a scene to visualize the results.",
    "thumbnail_url": "https://images.code.org/555c9c7bbec2eaf3760ae4df3c33bbfb-image-1650990657328.png",
    "starter_assets": {
      "facebook.png": "25a11c02-6b9c-4651-a2ba-d76c21b21c23.png",
      "youtube.png": "9738e002-cbdf-4791-bd76-2dea6a21bbca.png",
      "twitter.png": "3eeccb2a-943d-413e-a1e2-52c7845171a0.png",
      "instagram.png": "a9042a03-a899-467e-a547-46eed2d03ab6.png"
    },
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    String[] icons = {\"facebook.png\", \"youtube.png\", \"twitter.png\", \"instagram.png\"};\n    String[] ageGroups = {\"18-29\", \"30-49\", \"50-64\", \"65 and up\"};\n    int[][] percentages = {{22, 29, 39, 47}, {41, 38, 37, 37},\n                           {23, 21, 18, 12}, {15, 12, 6, 4}};\n\n    SocialMediaScene myScene = new SocialMediaScene(icons, ageGroups, percentages);\n\n    myScene.createScene();\n\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "SocialMediaScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Creates a scene based on which social media platform\n * has the largest percentage of users in an age group\n */\npublic class SocialMediaScene extends Scene {\n\n  private String[] icons;        // The list of social media icons\n  private String[] ageGroups;    // The list of age groups\n  private int[][] percentages;   // The 2D array of age group percentages\n\n  /*\n   * Constructor to create a SocialMediaScene with the specified\n   * array of icons, age groups, and 2D array of age group percentages\n   */\n  public SocialMediaScene(String[] icons, String[] ageGroups, int[][] percentages) {\n    this.icons = icons;\n    this.ageGroups = ageGroups;\n    this.percentages = percentages;\n  }\n\n  /*\n   * Returns a 1D array containing largest percentage of users\n   * of users found for each social media platform\n   */\n  public int[] findMaxPercentages() {\n    // TO DO #1: Find the largest percentage of users for each column in percentages.\n    // Add the max percentage found to a 1D array and return the array.\n\n    \n    \n    return null;\n  }\n\n  /*\n   * Returns a 1D array containing age groups that have the largest\n   * percentage of users found for each social media platform\n   */\n  public String[] findMaxAgeGroups() {\n    // TO DO #2: Find the age groups with the largest percentage of users for each column in percentages.\n    // Add the corresponding age group from the ageGroups array to a 1D array and return the array.\n\n    \n\n    return null;\n  }\n\n  /*\n   * Creates a scene to show each social media platform\n   * and their largest percentage of users in an age group\n   */ \n  public void createScene() {   \n    String[] maxAgeGroups = findMaxAgeGroups();\n    int[] maxPercentages = findMaxPercentages();\n    \n    for (int index = 0; index < icons.length; index++) {\n      drawImage(icons[index], 50, 50, 150);\n      drawText(maxAgeGroups[index] + \": \" + maxPercentages[index], 250, 100);\n      pause(1);\n      clear(\"white\");\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "encrypted_exemplar_sources": "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\n"
  },
  "game_id": 68,
  "created_at": "2022-04-12T19:01:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-12T19:01:04.349+00:00\",\"changed\":[\"cloned from \\\"CSA U5L3-L4b_2022\\\"\"],\"cloned_from\":\"CSA U5L3-L4b_2022\"},{\"changed_at\":\"2022-04-12 19:08:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 15:16:16 +0000\",\"changed\":[\"long_instructions\",\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 16:54:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 18:14:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 18:19:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 18:19:45 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-26 16:10:16 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:50:28 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:52:42 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:53:17 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:53:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:53:37 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:59:10 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:59:38 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:59:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 17:59:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
