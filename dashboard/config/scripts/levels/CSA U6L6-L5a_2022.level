<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**Stop word removal** is the process of removing commonly used words from a list before or after processing text.\r\n\r\nFind and remove stop words from a list of random words.\r\n\r\n##In TextProcessor.java:\r\n\r\n1. Write the method `removeStopWords()`(#e7e8ea) to find and remove all occurrences of each stop word in the `stopWords`(#e7e8ea) list from the `textList`(#e7e8ea).\r\n\r\n   * Traverse the `stopWords`(#e7e8ea) list and the `textList`(#e7e8ea) list.\r\n   \r\n   * If the current word in `stopWords`(#e7e8ea) is found in `textList`(#e7e8ea), use the `remove()`(#e7e8ea) method in the `ArrayList`(#e7e8ea) class to remove the word from `textList`(#e7e8ea).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Declare and initialize a new `ArrayList`(#e7e8ea) to store the `ArrayList`(#e7e8ea) returned from calling the `removeStopWords()`(#e7e8ea) method.\r\n\r\n3. Print the updated `TextProcessor`(#e7e8ea) object.\r\n\r\n##Save the `TextProcessor`(#e7e8ea) class to the ![Backpack](https://images.code.org/b17feeef2e8db2a98abdb4a5860c5c61-image-1642175705297.png) !",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Random Words",
    "bubble_choice_description": "Remove stop words from a list of random words.",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<String> stopWords = FileReader.getStringData(\"stopwords.txt\");\n\n    TextProcessor myText = new TextProcessor(\"randomwords.txt\");\n    System.out.println(myText);\n\n    // TO DO #2: Call the removeStopWords() method.\n\n\n    // TO DO #3: Print the updated TextProcessor object.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "TextProcessor.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Analyzes and processes text\n */\npublic class TextProcessor {\n\n  private String filename;              // The file containing the text\n  private ArrayList<String> textList;   // The list of text from the file\n\n  /*\n   * Constructor to create a TextProcessor with the specified filename\n   */\n  public TextProcessor(String filename) {\n    this.filename = filename;\n    textList = FileReader.getStringData(filename);\n  }\n\n  /*\n   * Changes the file to analyze and process and updates the textList\n   */\n  public void changeFile(String filename) {\n    this.filename = filename;\n    textList = FileReader.getStringData(filename);\n  }\n\n  /*\n   * Changes the textList to the newTextList\n   */\n  public void setTextList(ArrayList<String> newTextList) {\n    textList = newTextList;\n  }\n\n  /*\n   * Finds and removes all occurrences of each stop word from textList\n   */\n  public void removeStopWords(ArrayList<String> stopWords) {\n    // TO DO #1: Find and remove all occurrences of each stop word in the\n    // stopWords list from the textList.\n\n\n    \n  }\n\n  /*\n   * Returns a String containing the text in textList\n   */\n  public String toString() {\n    String text = \"\";\n\n    for (String value : textList) {\n      text = text + value + \"\\n\";\n    }\n\n    return text;\n  }\n  \n}",
        "isVisible": true
      },
      "randomwords.txt": {
        "text": "congratulate\na\ngrape\non\nits\nunique\nattack\nfrom\nits\nsense\nof\nhelp\non\nthe\ntree\nto\nbe\ncool\nand\noutrageous\nbut\nnatural\nto\nreset",
        "isVisible": true
      },
      "stopwords.txt": {
        "text": "a\nan\nand\nare\nas\nat\nbe\nby\nfor\nfrom\nhas\nhe\nin\nis\nit\nits\nof\non\nthat\nthe\nto\nwas\nwere\nwill\nwith",
        "isVisible": true
      }
    },
    "thumbnail_url": "https://images.code.org/473f0697e3b74e5404d6882a83398e0e-search.png",
    "name_suffix": "_2022",
    "encrypted_exemplar_sources": "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\nbA==\n"
  },
  "game_id": 68,
  "created_at": "2022-02-26T00:28:26.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:28:26.311+00:00\",\"changed\":[\"cloned from \\\"CSA U6L6-L5a\\\"\"],\"cloned_from\":\"CSA U6L6-L5a\"},{\"changed_at\":\"2022-05-05 15:17:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:18:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:19:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:25:53 +0000\",\"changed\":[\"long_instructions\",\"display_name\",\"bubble_choice_description\",\"thumbnail_url\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:42:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:55:47 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:56:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:57:21 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:59:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 00:28:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 00:28:25 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
