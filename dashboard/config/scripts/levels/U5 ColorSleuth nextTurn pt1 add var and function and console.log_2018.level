<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2018-05-04T23:03:11.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "edit_code": true,
    "embed": "false",
    "instructions_important": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "project_template_level_name": "U5 ColorSleuth Template_2018",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "false",
    "markdown_instructions": "# Next Step - Alternating Turns\r\n\r\nThis is another step that requires 3 parts.  But **notice there is a pattern** to what we're starting to do, and it is a common one:\r\n\r\n1. Add a global variable\r\n2. Add a new function definition (that updates that variable in some way)\r\n3. Add a call to the new function you just made.\r\n\r\nAnd that's exactly what you're going to do right now.\r\n\r\n1. Add global `var currentPlayer = 1` to the top of the program.\r\n2. Add a new function definition in your code for `switchPlayer()` with an if-statement and console.log message.  It should look something like this:\r\n\r\n\t\tfunction switchPlayer(){\r\n        \tif(currentPlayer==1){\r\n            \tcurrentPlayer=2;\r\n            } else {\r\n            \tcurrentPlayer=1;\r\n            }\r\n            console.log(\"current player is: \"+currentPlayer);\r\n        }\r\n\r\n3. Add a call `switchPlayer()` as the last line inside the `checkCorrect` function\r\n\r\n**TEST IT OUT**\r\n<img src=\"https://images.code.org/e0cbd1d16fa43842d2352df55caa2959-image-1481210618149.png\" style=\"float: right\">\r\n\r\n* After you add this code, you should see a new message in the console amongst the others indicating whose turn it is.  The output might look something like the output shown at right (look for lines that say **current player is: 2**)\r\n* Note: right now most of our output is in the console because it's easy and fast to verify that things are working.  We'll start updating the UI next!\r\n",
    "teacher_markdown": "This is another pretty big step because you need to modify the code in 3 different places.\r\n\r\nIt helps to point out the pattern we identify here:\r\n\r\n1. Add a global variable\r\n2. Add a new function definition (that updates that variable in some way)\r\n3. Add a call to the new function you just made.\r\n\r\nWe don't *have* to add a new function do this.  We could have just written the if-statement into the checkCorrect function.  But that would start to become big and unwieldy. We are trying to model the fact that you can anticipate cases where your code will be easier to read and maintain if you are able to break the discrete parts of the problem into functions.\r\n\r\nThe more the code inside a function can read like a description of how to solve the problem, the better.  For example you might sketch out check correct like this:\r\n\r\n    Check Correct:\r\n    - update the score\r\n    - make a new board\r\n    - switch player turns\r\n\r\nAt this point we have nice tidy functions for the last two parts: `setBoard()` and `switchPlayer()`.\r\n\r\n\r\nWorking version of the code at this point:\r\n\r\n    var currentPlayer = 1;\r\n    var randButtonId = 1;\r\n    setBoard();\r\n\r\n    function setBoard() {\r\n      var R = randomNumber(0,235);\r\n      var G = randomNumber(0,235);\r\n      var B = randomNumber(0,235);\r\n      var color = rgb(R, G, B);\r\n      setProperty(\"button1\", \"background-color\", color);\r\n      setProperty(\"button2\", \"background-color\", color);\r\n      setProperty(\"button3\", \"background-color\", color);\r\n      setProperty(\"button4\", \"background-color\", color);\r\n\r\n      R = R+20; \r\n      G = G+20;\r\n      B = B+20;\r\n      var diffColor = rgb(R, G, B);\r\n      randButtonId = \"button\"+randomNumber(1,4);\r\n      setProperty(randButtonId, \"background-color\", diffColor);\r\n      console.log(\"correct button is: \"+randButtonId);\r\n    }\r\n\r\n    function checkCorrect(buttonId) {\r\n      console.log(\"checking: \"+buttonId);\r\n      if( buttonId == randButtonId ) {\r\n          console.log(\"You got it right!\");\r\n      } else {\r\n          console.log(\"WRONG\");\r\n      }\r\n      setBoard();\r\n      switchPlayer();\r\n    }\r\n\r\n    function switchPlayer(){\r\n      if(currentPlayer==1){\r\n        currentPlayer=2;\r\n      } else {\r\n        currentPlayer=1;\r\n      }\r\n      console.log(\"current player: \"+currentPlayer)\r\n    }\r\n\r\n    onEvent(\"button1\", \"click\", function() {\r\n      checkCorrect(\"button1\");\r\n    });\r\n    onEvent(\"button2\", \"click\", function() {\r\n      checkCorrect(\"button2\");\r\n    });\r\n    onEvent(\"button3\", \"click\", function() {\r\n      checkCorrect(\"button3\");\r\n    });\r\n    onEvent(\"button4\", \"click\", function() {\r\n      checkCorrect(\"button4\");\r\n    });\r\n\r\n\r\n\r\n",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "parent_level_id": 7594,
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true,
  "notes": ""
}]]></config>
  <blocks/>
</Applab>