<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2019-02-14T01:29:54.000Z",
  "level_num": "custom",
  "user_id": 106,
  "properties": {
    "skin": "gamelab",
    "embed": "false",
    "long_instructions": "# Creating Functions to Organize Code\r\n\r\nIn Game Lab all the action is happening in the draw loop, but too much complex code makes it really confusing to read. To keep your draw loop easy to read, use functions for larger chunks of code. You can call them inside the draw loop and define them below. This is a really good example of using **abstraction** to think about problems at a high level and worry about details later.\r\n\r\n<img src=\"https://images.code.org/1a5beeaad6e55c5b27a43604be4f039a-image-1475199750468.42.07 PM.png\" style=\"float:right;width:150px\">\r\n\r\n# Do This\r\n\r\nThis program should draw a daytime scene or a nighttime scene, depending on the location of the mouse. The draw loop describes what needs to happen but one of the functions hasn't been written yet.\r\n\r\n* **Write the `drawNight` function** which has been created but is empty.\r\n* Hint: Look at the picture to the right for how your night image should look. Can you use the `drawDay` function to help you at all?",
    "start_blocks": "function draw() {\r\n  if(World.mouseY > 200){\r\n    drawDay();\r\n  } else {\r\n    drawNight();\r\n  }\r\n}\r\n\r\nfunction drawNight(){\r\n\r\n}\r\n\r\nfunction drawDay(){\r\n  noStroke();\r\n\r\n  //Sky\r\n  background(rgb(0,200,255));\r\n\r\n  //Water\r\n  fill(rgb(0,0,150));\r\n  rect(0,300,400,100);\r\n\r\n  //Sun\r\n  fill(rgb(255,255,0));\r\n  ellipse(100,100,50,50);\r\n\r\n  // Reflection\r\n  ellipse(randomNumber(50,150),randomNumber(300,400),5,5);\r\n  ellipse(randomNumber(50,150),randomNumber(300,400),5,5);\r\n  ellipse(randomNumber(50,150),randomNumber(300,400),5,5);\r\n  ellipse(randomNumber(50,150),randomNumber(300,400),5,5);\r\n  ellipse(randomNumber(50,150),randomNumber(300,400),5,5);    \r\n}\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "true",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "code_functions": {
      "fill": null,
      "noFill": null,
      "background": null,
      "stroke": null,
      "noStroke": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "text": null,
      "textAlign": null,
      "textSize": null,
      "functionParams_none": null,
      "callMyFunction": null,
      "ifBlock": null,
      "lessThanOperator": null,
      "randomNumber_min_max": null,
      "ifElseBlock": null,
      "drawSprites": null,
      "var sprite = createSprite": null,
      "velocityX": null,
      "velocityY": null,
      "x": null,
      "y": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "setAnimation": null,
      "rgb": null
    },
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "false",
    "debugger_disabled": "true",
    "hide_animation_mode": "false",
    "pause_animations_by_default": "false",
    "all_animations_single_frame": "true",
    "instructions_important": "false",
    "show_debug_watch": "true",
    "start_in_animation_tab": "false",
    "encrypted_examples": "o7/ooCz/tbhsZyZ/do6fjC4mvlj5oCJcQIIWbK2/39I4GU3hEA6sDNlkS4y0\n6yC2+ofooliB1y3CkkgRdalt5A==\n",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "parent_level_id": 11383,
    "name_suffix": "_2019",
    "map_reference": "/docs/concepts/javascript/functions/",
    "mini_rubric": "false",
    "encrypted": "false",
    "video_key": "csd_gamelab_functions",
    "preload_asset_list": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-06-08 19:48:55 +0000\",\"changed\":[\"markdown_instructions\",\"code_functions\",\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-03-05 22:57:50 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-04-03 07:16:04 +0000\",\"changed\":[\"never_autoplay_video\",\"code_functions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-06-27 22:45:27 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":959,\"changed_by_email\":\"george.zhang@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>