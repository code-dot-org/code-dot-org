<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**Stop word removal** is the process of removing commonly used words from a list before or after processing text.\r\n\r\nFind and remove stop words from a social media post.\r\n\r\n##In TextProcessor.java:\r\n\r\n1. Write the method `removeStopWords()`(#e7e8ea) to find and remove all occurrences of each stop word in the `stopWords`(#e7e8ea) list from the `textList`(#e7e8ea).\r\n\r\n   * Traverse the `stopWords`(#e7e8ea) list and the `textList`(#e7e8ea) list.\r\n   \r\n   * If the current word in `stopWords`(#e7e8ea) is found in `textList`(#e7e8ea), use the `remove()`(#e7e8ea) method in the `ArrayList`(#e7e8ea) class to remove the word from `textList`(#e7e8ea).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Declare and initialize a new `ArrayList`(#e7e8ea) to store the `ArrayList`(#e7e8ea) returned from calling the `removeStopWords()`(#e7e8ea) method.\r\n\r\n3. Print the updated `TextProcessor`(#e7e8ea) object.\r\n\r\n##Save the `TextProcessor`(#e7e8ea) class to the ![Backpack](https://images.code.org/b17feeef2e8db2a98abdb4a5860c5c61-image-1642175705297.png) !",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<String> stopWords = FileReader.getStringData(\"stopwords.txt\");\n\n    TextProcessor myText = new TextProcessor(\"post.txt\");\n    System.out.println(myText);\n\n    // TO DO #2: Call the removeStopWords() method.\n\n\n    // TO DO #3: Print the updated TextProcessor object.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "TextProcessor.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Analyzes and processes text\n */\npublic class TextProcessor {\n\n  private String filename;              // The file containing the text\n  private ArrayList<String> textList;   // The list of text from the file\n\n  /*\n   * Constructor to create a TextProcessor with the specified filename\n   */\n  public TextProcessor(String filename) {\n    this.filename = filename;\n    textList = FileReader.getWords(filename);\n  }\n\n  /*\n   * Changes the file to analyze and process and updates the textList\n   */\n  public void changeFile(String filename) {\n    this.filename = filename;\n    textList = FileReader.getWords(filename);\n  }\n\n  /*\n   * Finds and removes all occurrences of each stop word from textList\n   */\n  public void removeStopWords(ArrayList<String> stopWords) {\n    // TO DO #1: Find and remove all occurrences of each stop word in the\n    // stopWords list from the textList.\n\n\n    \n  }\n\n  /*\n   * Returns a String containing the text in textList\n   */\n  public String toString() {\n    String text = \"\";\n\n    for (String value : textList) {\n      text = text + value + \" \";\n    }\n\n    return text;\n  }\n  \n}",
        "isVisible": true
      },
      "post.txt": {
        "text": "The movie of the CENTURY comes out in less than 48 hours and I am not sure how to handle it #AvengersEndgame",
        "isVisible": true
      },
      "stopwords.txt": {
        "text": "a\nan\nand\nare\nas\nat\nbe\nby\nfor\nfrom\nhas\nhe\nin\nis\nit\nits\nof\non\nthat\nthe\nto\nwas\nwere\nwill\nwith",
        "isVisible": true
      }
    },
    "display_name": "Social Media Post",
    "bubble_choice_description": "Remove stop words from a social media post.",
    "thumbnail_url": "https://images.code.org/e453ad2b2400023e4bb3ff4cff343075-social-media.png",
    "encrypted_exemplar_sources": "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\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:31:53.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:31:53.742+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L3d_2022\\\"\"],\"cloned_from\":\"CSA U6L5-L3d_2022\"},{\"changed_at\":\"2022-04-14 19:31:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:51:51 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:52:41 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:56:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:56:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 15:57:41 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 16:04:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 16:04:30 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 16:05:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 00:29:09 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
