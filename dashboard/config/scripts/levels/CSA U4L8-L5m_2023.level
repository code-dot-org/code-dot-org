<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "## Finding Patterns\r\n\r\nComplete the <a href=\"https://docs.google.com/document/d/1OJIjB4GPp5eqri8qIIceuUGUYl8bzEYXbH3qXIpcg9I/edit?usp=sharing\" target=\"_blank\"><strong>Finding Patterns</strong></a> activity guide to identify the patterns and relationships you notice in this dataset.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    String[] textFiles = {\"rank.txt\", \"username.txt\", \"owner.txt\", \"followers.txt\", \"country.txt\", \"profession.txt\"};\n\n    DataManager data = new DataManager(textFiles);\n    \n    System.out.print(data.showDataset());\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 1
      },
      "DataManager.java": {
        "text": "/*\n * Reads and displays data from text files\n */\npublic class DataManager {\n\n  private String[] textFiles;    // The 1D array of text files\n  private Data[] dataset;        // The 1D array of Data objects\n\n  /*\n   * Sets textFiles to the specified text files and initializes\n   * dataset to store Data objects for each text file\n   */\n  public DataManager(String[] textFiles) {\n    this.textFiles = textFiles;\n    dataset = new Data[textFiles.length];\n  }\n\n  /*\n   * Creates the datasets and returns the dataset values\n   */\n  public String showDataset() {\n    createData();\n    return getDatasetValues();\n  }\n\n  /*\n   * Instantiates each Data object in the 1D array dataset\n   * using each text file from the 1D array textfiles\n   */\n  public void createData() {\n    for (int index = 0; index < dataset.length; index++) {\n      dataset[index] = new Data(textFiles[index]);\n    }\n  }\n\n  /*\n   * Returns a String containing the values from each Data object\n   */\n  public String getDatasetValues() {\n    String result = \"\";\n\n    // Gets the length of the first Data object's 1D array of values\n    int valuesLength = dataset[0].getNumValues();\n\n    // Outer loop repeats from the first value to the last value of the first Data object's 1D array of values\n    for (int index = 0; index < valuesLength; index++) {\n\n      // Inner loop goes through each Data object to get the corresponding value from each 1D array of values\n      for (Data values : dataset) {\n        \n        // String.format() formats a String using format specifiers. In \"%-30s\", the \"%\" indicates the start of the format specifier,\n        // the \"-\" means the String is left-justified, \"30\" indicates the width of the field, and \"s\" indicates a String\n        result += String.format(\"%-30s\", values.getValue(index));\n      }\n\n      // Adds a new line character after getting a row of data\n      result += \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "Data.java": {
        "text": "/*\n * Manages data from a text file\n */\npublic class Data {\n\n  private String filename;    // The name of a text file\n  private String[] values;    // The 1D array containing the values from a text file\n\n  /*\n   * Sets filename to the specified filename and initializes\n   * values to store the values from the file\n   */\n  public Data(String filename) {\n    this.filename = filename;\n    values = FileReader.toStringArray(filename);\n  }\n\n  /*\n   * Returns the 1D array of values\n   */\n  public String[] getValues() {\n    return values;\n  }\n\n  /*\n   * Returns a value at a specified index from values\n   */\n  public String getValue(int index) {\n    return values[index];\n  }\n\n  /*\n   * Returns the number of elements in values\n   */ \n  public int getNumValues() {\n    return values.length;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      },
      "rank.txt": {
        "text": "RANK\n------\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50",
        "isVisible": true,
        "tabOrder": 4
      },
      "username.txt": {
        "text": "USERNAME\n------\n@instagram\n@cristiano\n@arianagrande\n@therock\n@kyliejenner\n@selenagomez\n@kimkardashian\n@leomessi\n@beyonce\n@neymarjr\n@justinbieber\n@natgeo\n@taylorswift\n@kendalljenner\n@jlo\n@nickiminaj\n@nike\n@khloekardashian\n@mileycyrus\n@katyperry\n@kourtneykardash\n@kevinhart4real\n@theellenshow\n@realmadrid\n@fcbarcelona\n@ddlovato\n@badgalriri\n@zendaya\n@victoriassecret\n@iamcardib\n@champagnepapi\n@shakira\n@chrisbrownofficial\n@kingjames\n@billieeilish\n@vindiesel\n@virat.kohli\n@davidbeckham\n@championsleague\n@nasa\n@justintimberlake\n@emmawatson\n@shawnmendes\n@gigihadid\n@priyankachopra\n@9gag\n@ronaldinho\n@maluma\n@camila_cabello\n@deepikapadukone",
        "isVisible": true,
        "tabOrder": 5
      },
      "owner.txt": {
        "text": "OWNER\n------\nInstagram\nCristiano Ronaldo\nAriana Grande\nDwayne Johnson\nKylie Jenner\nSelena Gomez\nKim Kardashian West\nLionel Messi\nBeyonce\nNeymar\nJustin Bieber\nNational Geographic\nTaylor Swift\nKendall Jenner\nJennifer Lopez\nNicki Minaj\nNike\nKhloe Kardashian\nMiley Cyrus\nKaty Perry\nKourtney Kardashian\nKevin Hart\nEllen DeGeneres\nReal Madrid CF\nFC Barcelona\nDemi Lovato\nRihanna\nZendaya\nVictoria's Secret\nCardi B\nDrake\nShakira\nChris Brown\nLeBron James\nBillie Eilish\nVin Diesel\nVirat Kohli\nDavid Beckham\nUEFA Champions League\nNASA\nJustin Timberlake\nEmma Watson\nShawn Mendes\nGigi Hadid\nPriyanka Chopra\n9GAG\nRonaldinho\nMaluma\nCamila Cabello\nDeepika Padukone",
        "isVisible": true,
        "tabOrder": 6
      },
      "followers.txt": {
        "text": "FOLLOWERS (IN MILLIONS)\n------\n353\n224\n190\n187\n181\n180\n175\n155\n148\n139\n139\n138\n134\n131\n123\n116\n114\n114\n110\n99\n94\n93\n90\n88\n86\n85\n83\n71\n68\n68\n68\n67\n66\n66\n64\n64\n63\n63\n59\n59\n59\n57\n56\n54\n53\n53\n51\n51\n50\n49",
        "isVisible": true,
        "tabOrder": 7
      },
      "country.txt": {
        "text": "COUNTRY/REGION\n------\nUnited States\nPortugal\nUnited States\nUnited States\nUnited States\nUnited States\nUnited States\nArgentina\nUnited States\nBrazil\nCanada\nUnited States\nUnited States\nUnited States\nUnited States\nTrinidad and Tobago\nUnited States\nUnited States\nUnited States\nUnited States\nUnited States\nUnited States\nUnited States\nSpain\nSpain\nUnited States\nBarbados\nUnited States\nUnited States\nUnited States\nCanada\nColombia\nUnited States\nUnited States\nUnited States\nUnited States\nIndia\nUnited Kingdom\nEurope\nUnited States\nUnited States\nUnited Kingdom\nCanada\nUnited States\nIndia\nHong Kong\nBrazil\nColombia\nCuba\nIndia",
        "isVisible": true,
        "tabOrder": 8
      },
      "profession.txt": {
        "text": "PROFESSION/ACTIVITY\n------\nSocial media platform\nFootballer\nMusician and actress\nActor and professional wrestler\nTelevision personality and businesswoman\nMusician and actress\nTelevision personality and businesswoman\nFootballer\nMusician\nFootballer\nMusician\nMagazine\nMusician\nTelevision personality and model\nMusician and actress\nMusician\nSportswear multinational\nTelevision personality and businesswoman\nMusician and actress\nMusician\nTelevision personality\nComedian and actor\nComedian and television personality\nFootball club\nFootball club\nMusician and actress\nMusician and businesswoman\nActress and musician\nClothing brand\nMusician\nMusician\nMusician\nMusician\nBasketball player\nMusician\nActor\nCricketer\nFootballer\nClub football competition\nSpace agency\nMusician and actor\nActress\nMusician\nModel\nActress and musician\nSocial media platform\nFootballer\nMusician\nMusician\nActress",
        "isVisible": true,
        "tabOrder": 9
      }
    },
    "display_name": "Instagram Accounts",
    "bubble_choice_description": "Dataset containing information about the most followed Instagram accounts.",
    "thumbnail_url": "https://images.code.org/1b0de589535d19800f4bdfc5a6a7cc7b-instagram.png"
  },
  "game_id": 68,
  "created_at": "2023-02-17T19:14:29.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T19:14:29.289+00:00\",\"changed\":[\"cloned from \\\"CSA U4L8-L5l_2023\\\"\"],\"cloned_from\":\"CSA U4L8-L5l_2023\"},{\"changed_at\":\"2023-02-17 19:14:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 13:49:38 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 14:32:31 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 15:43:57 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 16:43:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
