<Applab>
  <config><![CDATA[{
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "ifBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "buzzer.frequency": null,
      "onBoardEvent": null,
      "setProperty": null,
      "setText": null,
      "randomNumber_min_max": null,
      "led.on": null,
      "led.off": null,
      "led.pulse": null,
      "led.blink": null,
      "led.toggle": null,
      "setScreen": null
    },
    "edit_code": true,
    "embed": "true",
    "instructions_important": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "validation_enabled": "false",
    "submittable": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "circuitPlayground",
    "long_instructions": "# Applying the Problem Solving Process to a Programing Challenge\r\n\r\nAfter being introduced to the Problem Solving Process, students will practice using the process to solve programming challenges. Let's explore one of the challenges.\r\n\r\n## Challenge 1 - The Clicker Game Problem\r\n\r\nTrinity would like you to create a 2-player, head-to-head game with the circuit playground to see who can click their button the fastest! She requested that everytime a player clicks their button, they gain a point which is displayed on the screen. Trinity would also like to not only know who gets to 50 first, but when someone wins the LED should start flashing, the screen should change to say who won, and the circuit playground should buzz!\r\n\r\n**Students will use an activity guide to lead them though the steps of the Problem Solving Process to solve this programming challenge.**\r\n\r\n## Do This:\r\n1) Review the sample student activity guide responses included below. \r\n2) Click the orange \"Run\" button below to try the sample app. (Hint: To see all of the features, one player must reach 50.) \r\n3) Consider how the problem solving process might help a student through the process of creating this app.\r\n\r\n![](https://images.code.org/d316299ce6ca7e1f2a25881f7e9cfb07-image-1673463089898.49.19 PM.png)\r\n\r\n![](https://images.code.org/c438a524702c5b393c0816d18b9ae345-image-1673463097377.49.59 PM.png)\r\n\r\n![](https://images.code.org/002aa00c32ca65ddb7e47f8edefd6809-image-1673463102969.50.21 PM.png)\r\n\r\n![](https://images.code.org/f129d52a9c338381ac372d121bdc28b3-image-1673463108257.50.47 PM.png)",
    "parent_level_id": 20595,
    "name_suffix": "_2222",
    "mini_rubric": "false",
    "text_mode_at_start": "false",
    "encrypted": "false",
    "libraries_enabled": "false",
    "widget_mode": "false",
    "ai_enabled": "false",
    "reference_links": [
      "/courses/csd-2022/guides/if-statements",
      "/courses/csd-2022/guides/variables",
      "/courses/csd-2022/guides/booleans-and-comparison-operators",
      "/courses/csd-2022/guides/physical-input",
      "/courses/csd-2022/guides/producing-output",
      "/courses/csd-2022/guides/board-events"
    ],
    "callout_json": "[]",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" tabindex=\"1\" data-radium=\"true\" style=\"width: 320px; height: 450px; display: none;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"gameScreen\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255); display: block;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 20px; padding: 2px 15px; width: 320px; height: 40px; position: absolute; left: 0px; top: 0px; text-align: center;\" id=\"titleLabel\">Clicker Challenge!</label><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 13px; padding: 2px 15px; width: 320px; height: 80px; position: absolute; left: 2.22045e-16px; top: 35px; text-align: center;\" id=\"descriptionLabel\">Using the circuit playgrounds buttons, one player will press the left button and the other player will press the right button. Who can reach 50 first?!</label><div contenteditable=\"true\" class=\"textArea\" id=\"leftBackground\" style=\"width: 175px; height: 363px; border-style: solid; background-color: rgb(255, 100, 100); color: rgb(77, 87, 95); border-color: rgb(255, 255, 255); border-radius: 2px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 5px 15px; position: absolute; left: 0px; top: 90px; margin: 0px;\"></div><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 26px; padding: 2px 15px; width: 48px; height: 31px; position: absolute; left: 55.5px; top: 255px; text-align: center;\" id=\"leftPoints\">0</label><div contenteditable=\"true\" class=\"textArea\" id=\"rightBackground\" style=\"width: 175px; height: 363px; border-style: solid; background-color: rgb(100, 100, 255); color: rgb(77, 87, 95); border-color: rgb(255, 255, 255); border-radius: 2px; border-width: 1px; font-family: Arial, Helvetica, sans-serif; font-size: 13px; padding: 5px 15px; position: absolute; left: 165px; top: 90px; margin: 0px;\"></div><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 26px; padding: 2px 15px; width: 48px; height: 31px; position: absolute; left: 220px; top: 255px; text-align: center;\" id=\"rightPoints\">0</label></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"leftPWinner\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(100, 255, 100); display: none;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(255, 100, 100); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 40px; padding: 2px 15px; width: 280px; height: 150px; position: absolute; left: 20px; top: 150px; text-align: center; background-color: rgba(0, 0, 0, 0); border-color: rgb(0, 0, 0);\" id=\"leftWinnerLabel\">Left Player Wins!</label></div><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"rightPWinner\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(100, 255, 100); display: none;\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(100, 100, 255); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 40px; padding: 2px 15px; width: 280px; height: 150px; position: absolute; left: 20px; top: 150px; text-align: center; background-color: rgba(164, 234, 65, 0); border-color: rgb(77, 87, 95);\" id=\"rightWinnerLabel\" data-mod-textcolor=\"1\" data-mod-fontsize=\"1\">Right Player Wins!</label></div></div>",
    "start_blocks": "var leftP = 0;\r\nvar rightP = 0;\r\n\r\nonBoardEvent(buttonL, \"down\", function() {\r\n  // Use the counter pattern to change the leftP variable so it increments\r\n  leftP = leftP + 1;\r\n  \r\n  // Update the screen using setProperty\r\n  setProperty(\"leftPoints\", \"text\", leftP);\r\n  \r\n  // Use an if-statement to check if the leftP variable is 50 or more\r\n  // If it is: change the screen to \"leftPWinner\"\r\n  if (leftP >= 50) {\r\n    setScreen(\"leftPWinner\");\r\n    buzzer.frequency(800, 300);\r\n    led.blink(200);\r\n  }\r\n  \r\n});\r\nonBoardEvent(buttonR, \"down\", function() {\r\n  // Use the counter pattern to change the rightP variable so it increments\r\n  rightP = rightP + 1;\r\n  \r\n  // Update the screen using setProperty\r\n  setProperty(\"rightPoints\", \"text\", rightP);\r\n  \r\n  // Use an if-statement to check if the rightP variable is 50 or more\r\n  // If it is: change the screen to \"rightPWinner\"\r\n  if (rightP >= 50) {\r\n    setScreen(\"rightPWinner\");\r\n    buzzer.frequency(800, 300);\r\n    led.blink(200);\r\n  }\r\n  \r\n});",
    "preload_asset_list": null,
    "encrypted_examples": "MKT+fKkDZ/yH9EDMPnQLPG90g2jzGtX6N+ON5KX/9BJAlLhhLhaqrBtD/c4W\nUC4+Sq55gHHnktTnE8uS2wuteQ==\n"
  },
  "game_id": 41,
  "published": true,
  "created_at": "2023-01-05T21:38:07.000Z",
  "level_num": "custom",
  "user_id": 1,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2023-01-05T21:38:07.456+00:00\",\"changed\":[\"cloned from \\\"CSD U6 - ProbSolvProc_ChallB_2023\\\"\"],\"cloned_from\":\"CSD U6 - ProbSolvProc_ChallB_2023\"},{\"changed_at\":\"2023-01-05 21:58:06 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":18579,\"changed_by_email\":\"jess+levelbuilder@code.org\"},{\"changed_at\":\"2023-01-05 22:16:09 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18579,\"changed_by_email\":\"jess+levelbuilder@code.org\"},{\"changed_at\":\"2023-01-05 22:17:17 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18579,\"changed_by_email\":\"jess+levelbuilder@code.org\"},{\"changed_at\":\"2023-01-05 23:18:10 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18579,\"changed_by_email\":\"jess+levelbuilder@code.org\"},{\"changed_at\":\"2023-01-11 18:56:55 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18579,\"changed_by_email\":\"jess+levelbuilder@code.org\"},{\"changed_at\":\"2023-01-11 19:00:24 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18579,\"changed_by_email\":\"jess+levelbuilder@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>