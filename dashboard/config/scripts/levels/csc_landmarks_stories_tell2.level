<GamelabJr>
  <config><![CDATA[{
  "properties": {
    "skin": "gamelab",
    "show_debug_watch": "true",
    "block_pools": [
      "GamelabJr"
    ],
    "helper_libraries": [
      "NativeSpriteLab",
      "zLandmarksModule-CSC"
    ],
    "use_default_sprites": "false",
    "hide_animation_mode": "false",
    "show_type_hints": true,
    "hide_custom_blocks": true,
    "all_animations_single_frame": "true",
    "use_modal_function_editor": "true",
    "encrypted": "false",
    "embed": "false",
    "instructions_important": "false",
    "project_template_level_name": "csc_landmarks_template_-storyteller-project",
    "long_instructions": "**Itâ€™s time tell the stories! Write code so something changes when the guide meets each storyteller.**\r\n- First, drag out a new `when touches` event block anywhere in the workspace.\r\n- Add a `set background` block under the new event. Change the background to match the story.\r\n- Add a `say` block and add text so the storyteller sprite tells about the community.\r\n- Repeat these steps for the second storyteller. \r\n",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_if_else_editing": "false",
    "include_shared_functions": "false",
    "free_play": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "validation_enabled": "false",
    "start_in_animation_tab": "false",
    "mini_toolbox": "false",
    "hide_pause_button": "false",
    "soft_buttons": [
      "leftButton",
      "rightButton",
      "upButton",
      "downButton"
    ],
    "instructions_icon": "rikki",
    "preload_asset_list": null,
    "encrypted_examples": [

    ],
    "validation_code": "//Make sure [CSC Module Helper Library] is included as a library in this level\r\nif (World.frameCount == 1) {\r\n  //Everything in this if-statement will just run once, during the first frame of your level\r\n  //README() //uncomment this to see the README for the helper library in the console of this level\r\n  //turnOnDebugging() //uncomment this to use a DEBUG global variable to control console.log statements in your code\r\n  \r\n  setFailTime(150); // Frames to wait before failing student\r\n  setDelayTime(90); // Frames to wait after success before stopping program\r\n  setupPrevious(); //Defines the validationProps.previous{} object. To use it, call updatePrevious() at the end of this box\r\n  \r\n  //use addCriteria to setup the validation logic.\r\n  //You can use criterion commands as helper functions: \r\n  //https://github.com/code-dot-org/code-dot-org/blob/staging/apps/src/p5lab/spritelab/commands/criterionCommands.js\r\n  \r\n  \r\n  //For second sprite: check that first sprite started speaking\r\n  //For third sprite: check that the background changed\r\n  //For third sprite: check that the first sprite started speaking\r\n  \r\n  //Check that visited both storytellers\r\n  addCriteria(function() {\r\n    if(checkNumTouchedSprites(2)) {\r\n      return true;\r\n    }\r\n    if(DEBUG) {\r\n      console.log(\"Make sure you visit each storyteller!\");\r\n    }\r\n    return false;\r\n  }, \"visitStorytellers\");  // include i18n feedback string\r\n  \r\n  //For second sprite: check that the background changed\r\n  addCriteria(function() {\r\n    var sprites = getSpritesThatTouched();\r\n    if(sprites != -1) {\r\n      var touchedSprite = sprites[1];\r\n      if(touchedSprite == spriteIds[1]) {\r\n        if(checkNewBackground()) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    if(DEBUG) {\r\n      console.log(\"Make sure to change the background when you visit a storyteller!\");\r\n    }\r\n    return false;\r\n  }, \"changeBackground\");  // include i18n feedback string\r\n  \r\n  //For third sprite: check that the background changed\r\n  addCriteria(function() {\r\n    var sprites = getSpritesThatTouched();\r\n    if(sprites != -1) {\r\n      var touchedSprite = sprites[1];\r\n      if(touchedSprite == spriteIds[2]) {\r\n        if(checkNewBackground()) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    if(DEBUG) {\r\n      console.log(\"Make sure to change the background when you visit a storyteller!\");\r\n    }\r\n    return false;\r\n  }, \"changeBackground\");  // include i18n feedback string\r\n  \r\n  //For second sprite: check that there was a speech block\r\n  addCriteria(function() {\r\n    var sprites = getSpritesThatTouched();\r\n    if(sprites != -1) {\r\n      var touchedSprite = sprites[1];\r\n      if(touchedSprite == spriteIds[1]) {\r\n        if(spriteSpeechRenderedThisFrame(spriteIds[1])) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    if(DEBUG) {\r\n      console.log(\"Make sure the storyteller says something!\");\r\n    }\r\n    return false;\r\n  }, \"storytellerSay\");  // include i18n feedback string\r\n  \r\n  //For third sprite: check that there was a speech block\r\n  addCriteria(function() {\r\n    var sprites = getSpritesThatTouched();\r\n    if(sprites != -1) {\r\n      var touchedSprite = sprites[1];\r\n      if(touchedSprite == spriteIds[2]) {\r\n        if(spriteSpeechRenderedThisFrame(spriteIds[2])) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    if(DEBUG) {\r\n      console.log(\"Make sure the storyteller says something!\");\r\n    }\r\n    return false;\r\n  }, \"storytellerSay\");  // include i18n feedback string  \r\n}\r\n//Everything after this will run during each 'tick' of the draw loop in your level\r\n//Be careful about putting console.log statements here\r\n\r\n//Always have this first to get most up-to-date helper variables\r\ngetHelperVars();\r\n\r\n//This is what calls updateValidation in \r\n//https://github.com/code-dot-org/code-dot-org/blob/staging/apps/src/p5lab/spritelab/commands/validationCommands.js\r\n//To check the validation criteria\r\ncheck();\r\n\r\n//Always have this at end to store previous state in validationProps.previous\r\nupdatePrevious();"
  },
  "game_id": 64,
  "published": true,
  "created_at": "2022-10-13T17:30:48.000Z",
  "level_num": "custom",
  "user_id": 18605,
  "audit_log": "[{\"changed_at\":\"2022-10-13T17:30:48.553+00:00\",\"changed\":[\"cloned from \\\"csc_landmarks_stories_background\\\"\"],\"cloned_from\":\"csc_landmarks_stories_background\"},{\"changed_at\":\"2022-10-13 17:32:18 +0000\",\"changed\":[\"long_instructions\",\"toolbox_blocks\",\"preload_asset_list\"],\"changed_by_id\":18605,\"changed_by_email\":\"katie.frank+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-13 17:47:44 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":18605,\"changed_by_email\":\"katie.frank+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-13 17:49:27 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":18605,\"changed_by_email\":\"katie.frank+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-13 21:27:40 +0000\",\"changed\":[\"long_instructions\",\"toolbox_blocks\",\"preload_asset_list\"],\"changed_by_id\":18605,\"changed_by_email\":\"katie.frank+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-13 21:32:22 +0000\",\"changed\":[\"long_instructions\",\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18605,\"changed_by_email\":\"katie.frank+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-13 21:37:46 +0000\",\"changed\":[\"hide_animation_mode\",\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18605,\"changed_by_email\":\"katie.frank+levelbuilder@code.org\"},{\"changed_at\":\"2022-10-19 18:34:33 +0000\",\"changed\":[\"toolbox_blocks\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1196,\"changed_by_email\":\"amy.woodman@code.org\"},{\"changed_at\":\"2022-11-01 23:30:58 +0000\",\"changed\":[\"toolbox_blocks\",\"project_template_level_name\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-11-01 23:56:24 +0000\",\"changed\":[\"toolbox_blocks\",\"helper_libraries\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-11-02 00:13:10 +0000\",\"changed\":[\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\",\"validation_code\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-11-02 00:30:38 +0000\",\"changed\":[\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-11-02 01:44:24 +0000\",\"changed\":[\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-11-02 01:48:50 +0000\",\"changed\":[\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\",\"validation_code\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-11-02 01:57:25 +0000\",\"changed\":[\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\",\"validation_code\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-11-02 01:58:56 +0000\",\"changed\":[\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\",\"validation_code\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks>
    <toolbox_blocks>
      <xml>
        <block type="gamelab_setBackgroundImageAs">
          <field name="IMG">"map_old_blank"</field>
        </block>
        <block type="gamelab_makeNewSpriteAnon">
          <field name="ANIMATION_NAME">"red_shirt_wave2"</field>
          <value name="LOCATION">
            <block type="gamelab_location_picker">
              <field name="LOCATION">{"x":235,"y":178}</field>
            </block>
          </value>
        </block>
        <block type="gamelab_spriteSay">
          <field name="SPEECH">Welcome.</field>
          <value name="SPRITE">
            <block type="gamelab_allSpritesWithAnimation">
              <field name="ANIMATION">"red_shirt_wave2"</field>
            </block>
          </value>
        </block>
        <block type="gamelab_setProp">
          <field name="PROPERTY">"scale"</field>
          <value name="SPRITE">
            <block type="gamelab_allSpritesWithAnimation">
              <field name="ANIMATION">"red_shirt_wave2"</field>
            </block>
          </value>
          <value name="VAL">
            <block type="math_number">
              <field name="NUM">75</field>
            </block>
          </value>
        </block>
        <block type="gamelab_addBehaviorSimple">
          <value name="SPRITE">
            <block type="gamelab_allSpritesWithAnimation">
              <field name="ANIMATION">"red_shirt_wave2"</field>
            </block>
          </value>
          <value name="BEHAVIOR">
            <block type="gamelab_behavior_get">
              <mutation/>
              <field name="VAR" id="moving with arrow keys">moving with arrow keys</field>
            </block>
          </value>
        </block>
        <block type="gamelab_checkTouching">
          <field name="CONDITION">"when"</field>
          <value name="SPRITE1">
            <block type="gamelab_allSpritesWithAnimation">
              <field name="ANIMATION">"red_shirt_wave2"</field>
            </block>
          </value>
          <value name="SPRITE2">
            <block type="gamelab_allSpritesWithAnimation">
              <field name="ANIMATION">"orange_shirt_wave"</field>
            </block>
          </value>
        </block>
      </xml>
    </toolbox_blocks>
  </blocks>
</GamelabJr>