<Applab>
  <config><![CDATA[{
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "setText": null,
      "buzzer.frequency": null,
      "onBoardEvent": null,
      "tempSensor.C": null,
      "tempSensor.F": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions_important": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "validation_enabled": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "true",
    "disable_procedure_autopopulate": "false",
    "long_instructions": "# Change Event\r\n\r\nThe data event is fine if you don't mind your code running constantly, but sometimes that's not the most efficient solution to your problem. The sensor \"change\" event only fires if the sensor value has changed since the last reading, which can make sure your program isn't running code when it's not necessary.\r\n\r\nLet's write a program that buzzes and updates the screen anytime the temperature sensor changes.\r\n\r\n# Do This\r\n\r\n- Inside the [`onEvent()`(#fff176)](/docs/applab/onEvent/) block:\r\n  - Update the `tempValue` element using the [`tempSensor.F`(#f78183)](/docs/applab/tempSensor.F/) block.\r\n  - Make the buzzer make a sound\r\n- Place your thumb over the temperature sensor to warm up the sensor and get it to change. See how your program responds.\r\n- (Optional): Change the event type to \"data\" and run the program to see how your program changes. Don't run the program for very long though - you'll hurt your ears!\r\n\r\n::: details [**Whoa! What Happened?**]\r\nWhen you use a \"data\" event, the event is constantly happening, which means the code inside it is always happening. This is why you constantly hear the buzzer even when the temperature hasn't changed\r\n\r\nWhen you use the \"change\" event, the event only happens when a _change_ occurs, which is much less frequent. This is why you only hear the buzzer when the temperature changes\r\n\r\nSometimes you can't notice the difference between a \"change\" and \"data\" event, and sometimes it makes a **BIG** difference!\r\n:::",
    "start_blocks": "//The sensor \"change\" event only fires if the sensor value changes\nonBoardEvent(tempSensor, \"change\", function() {\n  //Add code to update the text of \"tempValue\"\n  \n  //Add code to make a buzzing sound whenever the temperature reading changes\n\n\n});\n",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\" data-theme=\"classic\"><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 33px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 320px; height: 71px; position: absolute; left: 2.22045e-16px; top: 20px; text-align: center; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"tempLabel\">Temp Sensor Reading</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 100px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 320px; height: 105px; position: absolute; left: 0px; top: 190px; text-align: center; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"tempValue\">value</label></div></div>",
    "top_level_procedure_autopopulate": "false",
    "encrypted_examples": "cq9uoZLlSKjp2x1JH6YFmiKulhOeGhFCiuXwgqoIW9vVfOAOb13Wah6Dx1VR\nElDA3C1lW28elCLRW4Me2wJiRQ==\n",
    "parent_level_id": 20458,
    "name_suffix": "_2021",
    "reference_links": [
      "/docs/concepts/maker-toolkit/analog-sensors/"
    ],
    "map_reference": "/docs/concepts/maker-toolkit/data-and-change-events/",
    "mini_rubric": "false",
    "encrypted": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "preload_asset_list": null
  },
  "game_id": 41,
  "created_at": "2021-09-01T22:26:47.000Z",
  "level_num": "custom",
  "user_id": 1,
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2021-09-01T22:26:47.885+00:00\",\"changed\":[\"cloned from \\\"CSD U6 analog change_2021\\\"\"],\"cloned_from\":\"CSD U6 analog change_2021\"},{\"changed_at\":\"2021-09-01 22:26:58 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2021-09-17 23:01:43 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"start_html\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2021-09-17 23:02:36 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"encrypted_examples\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2021-12-01 00:41:08 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-02-04 20:32:35 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":1198,\"changed_by_email\":\"dan@code.org\"},{\"changed_at\":\"2022-02-21 05:15:49 +0000\",\"changed\":[\"start_blocks\",\"start_html\"],\"changed_by_id\":17326,\"changed_by_email\":\"larsensn@yahoo.com\"}]"
}]]></config>
  <blocks/>
</Applab>