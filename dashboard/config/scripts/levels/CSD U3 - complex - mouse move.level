<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-06-17T18:33:06.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "Game.mouseX": null,
      "Game.mouseY": null,
      "Game.frameRate": null,
      "keyDown": null,
      "keyWentUp": null,
      "keyWentDown": null,
      "mouseDown": null,
      "mouseWentUp": null,
      "mouseWentDown": null,
      "mouseDidMove": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "sprite.height": null,
      "sprite.width": null,
      "x": null,
      "y": null,
      "rotation": null,
      "shapeColor": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "comment": null,
      "console.log": null
    },
    "show_d_pad": "true",
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# mouseDidMove\r\n\r\nThe last boolean we can check about a mouse is whether it moved or not. The `mouseDidMove` block will return `false` if the mouse is still, but `true` if the mouse was recently moving.\r\n\r\n# Do This\r\nThis program is pretty simple right now, it just displays a present sprite. You'll need to use `mouseDidMove` so that you can \"shake\" the present by moving the mouse back and forth.\r\n\r\n* Add a conditional that checks if `mouseDidMove`\r\n* If the conditional is true, rotate the present sprite randomly to the left or right\r\n\r\n_Challenge: Can you keep track of how many times the `mouseDidMove` shakes the present, and then \"open\" the present after 100 shakes?_",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "callout_json": "[]",
    "contained_level_names": null,
    "start_blocks": "var present = createSprite (200, 300);\r\n// set animation\r\n\r\nfunction draw() {\r\n  // If mouseDidMove, rotate the present randomly to the left or right\r\n  \r\n  background(\"white\");\r\n  drawSprites();\r\n}"
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>