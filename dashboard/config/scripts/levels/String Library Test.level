<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2018-11-16T01:59:51.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "write": null,
      "whileBlock": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "randomNumber_min_max": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "encrypted_examples": [

    ],
    "parent_level_id": 13750,
    "name_suffix": "_2018",
    "contained_level_names": null,
    "preload_asset_list": null,
    "helper_libraries": [
      "Strings"
    ],
    "instructions_important": "false",
    "hide_share_and_remix": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "long_instructions": "### Strings Library\r\n\r\n`firstLast(str)`\r\n\r\n`everyOtherOdd(str)`\r\n\r\n`everyOtherEven(str)`\r\n\r\n`isVowel(str)`\r\n\r\n`vowels(str)`\r\n\r\n`consonants(str)`\r\n\r\n`makeList(str, seperator)`\r\n\r\n`join(list, combiner)`\r\n\r\n`everyOtherWordOdd(str)`\r\n\r\n`everyOtherWordEven(str)`\r\n\r\n`remove(str, remover)`\r\n\r\n`pigLatin(str)`\r\n\r\n`pigLatingStory(str)`\r\n\r\n```\r\n//returns the first and last items in the string\r\nfunction firstLast(str){\r\n  return str.substring(0,1) + str.substring(str.length-1,str.length);\r\n}```\r\n\r\n\r\n```\r\n//returns every other item in a string, starting with the first position\r\nfunction everyOtherOdd(str){\r\n  var temp = \"\";\r\n  for(var i=0; i< str.length; i++){\r\n    if(i%2===0){\r\n      temp+=str[i];\r\n    }\r\n  }\r\n  return temp;\r\n}\r\n```\r\n```\r\n//returns every other item in a string, starting with the second position\r\nfunction everyOtherEven(str){\r\n  var temp = \"\";\r\n  for(var i=0; i< str.length; i++){\r\n    if(i%2===1){\r\n      temp+=str[i];\r\n    }\r\n  }\r\n  return temp;\r\n}\r\n```\r\n```\r\n//checks if a single letter is a vowel\r\nfunction isVowel(str){\r\n  var vowelLower = str.toLowerCase();\r\n  var vowelList = [\"a\", \"e\", \"i\", \"o\", \"u\"];\r\n  for(var i=0; i<vowelList.length; i++){\r\n    if(vowelList[i]==vowelLower){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n```\r\n```\r\n//returns all vowels in a string\r\nfunction vowels(str){\r\n  var vowelsLower = str.toLowerCase();\r\n  var temp = \"\";\r\n  for(var i=0; i<vowelsLower.length; i++){\r\n    if(isVowel(vowelsLower[i]) === true){\r\n      temp += vowelsLower[i];\r\n    }\r\n  }\r\n  return temp;\r\n}\r\n```\r\n```\r\n//returns all consonants in a string\r\nfunction consonants(str){\r\n  var consoLower = str.toLowerCase();\r\n  var temp = \"\";\r\n  for(var i=0; i<consoLower.length; i++){\r\n    if(isVowel(consoLower[i]) === false){\r\n      temp += consoLower[i];\r\n    }\r\n  }\r\n  return temp;\r\n}\r\n```\r\n```\r\n//turns a string into a list\r\nfunction makeList(str, separator){\r\n  var tempList = [];\r\n  var tempWord = \"\";\r\n  for(var i=0; i<str.length; i++){\r\n    if(str[i]== separator){\r\n      appendItem(tempList, tempWord);\r\n      tempWord = \"\";\r\n    } else {\r\n      tempWord += str[i];\r\n    }\r\n  }\r\n  appendItem(tempList, tempWord);\r\n  return tempList;\r\n}\r\n```\r\n```\r\n//turns a list into a string\r\nfunction join(list, combiner){\r\n  var temp = \"\";\r\n  for(var i=0; i<list.length; i++){\r\n    temp+= (list[i] + combiner);\r\n  }\r\n  return temp;\r\n}\r\n```\r\n```\r\n//returns every other word starting with the first one\r\nfunction everyOtherWordOdd(str){\r\n  var tempList = makeList(str, \" \");\r\n  var newList = [];\r\n  for(var i=0; i<tempList.length; i++){\r\n    if(i%2 === 0){\r\n      appendItem(newList, tempList[i]);\r\n    }\r\n  }\r\n  return join(newList, \" \");\r\n}\r\n```\r\n```\r\n//returns every other word starting with the second one\r\nfunction everyOtherWordEven(str){\r\n  var tempList = makeList(str, \" \");\r\n  var newList = [];\r\n  for(var i=0; i<tempList.length; i++){\r\n    if(i%2 == 1){\r\n      appendItem(newList, tempList[i]);\r\n    }\r\n  }\r\n  return join(newList, \" \");\r\n}\r\n```\r\n```\r\n//returns a string with all instances of a letter or symbol removed\r\nfunction remove(str, remover){\r\n  var temp = \"\";\r\n  for(var i=0; i<str.length; i++){\r\n    if(str[i]!= remover){\r\n      temp += str[i];\r\n    }\r\n  }\r\n  return temp;\r\n}\r\n```\r\n```\r\n//returns a single word converted to Pig Latin\r\nfunction pigLatin(str){\r\n  var firstLetter = str.substring(0,1).toLowerCase();\r\n  var secondLetter = str.substring(1,2).toLowerCase();\r\n  if(isVowel(firstLetter)){\r\n    return str + \"ay\";\r\n  } else if(firstLetter == \"t\" && secondLetter == \"h\"){\r\n    if(str.substring(2,3)==\"e\"){\r\n      return \"the\";\r\n    }\r\n    return str.substring(2, str.length) + \"th\" + \"ay\";\r\n  } else if(firstLetter == \"s\" && secondLetter == \"t\"){\r\n    return str.substring(2, str.length) + \"st\" + \"ay\";\r\n  } else if(firstLetter == \"b\" && secondLetter == \"r\"){\r\n    return str.substring(2, str.length) + \"br\" + \"ay\";\r\n  } else if(firstLetter == \"c\" && secondLetter == \"h\"){\r\n    return str.substring(2, str.length) + \"ch\" + \"ay\";\r\n  } else {\r\n    var remainingWord = str.substring(1,str.length);\r\n    return remainingWord + firstLetter + \"ay\";\r\n  }\r\n}\r\n```\r\n```\r\n//takes a string with words separated by spaces and returns it in Pig Latin\r\nfunction pigLatinStory(str){\r\n  var tempList = makeList(str, \" \");\r\n  for(var i=0; i<tempList.length; i++){\r\n    if(tempList[i].length > 2){\r\n      tempList[i] = pigLatin(tempList[i]);\r\n    }\r\n  }\r\n  return join(tempList, \" \");\r\n}\r\n```\r\n",
    "palette_category_at_start": "variables",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" tabindex=\"1\" data-radium=\"true\" style=\"width: 320px; height: 450px; display: none;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(178, 83, 83);\"><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 280px; height: 155px; position: absolute; left: 20px; top: 20px; background-color: rgba(255, 255, 255, 0.32);\" id=\"label1\"></label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; height: 155px; position: absolute; left: 20px; width: 280px; top: 275px; background-color: rgba(255, 255, 255, 0.32);\" id=\"label2\"></label><div contenteditable=\"true\" class=\"textArea\" id=\"storyText\" style=\"width: 270px; height: 145px; font-size: 14px; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0.31); position: absolute; left: 25px; top: 25px; margin: 0px;\">Type your story here...</div><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; overflow-wrap: break-word; color: rgba(51, 51, 51, 0.59); max-width: 320px; width: 260px; height: 135px; position: absolute; left: 30px; top: 285px;\" id=\"pigStoryText\">text</label><button id=\"pigButton\" style=\"padding: 0px; margin: 0px; height: 50px; width: 220px; color: rgb(255, 255, 255); background-color: rgba(101, 91, 123, 0.71); position: absolute; left: 20px; top: 200px; font-family: sans-serif; font-size: 25px;\">Piggify It</button><img src=\"https://images.code.org/ba0d6831b6ebdfa761d6f7e88b86dc8b-image-1542380878825.png\" data-canonical-image-url=\"https://mbtskoudsalg.com/images/pig-cartoon-png-8.png\" data-object-fit=\"contain\" id=\"image1\" style=\"height: 90px; width: 85px; position: absolute; left: 215px; top: 175px; margin: 0px;\"></div></div>",
    "start_blocks": "\r\nonEvent(\"pigButton\", \"click\", function(event) {\r\n  setText(\"pigStoryText\", pigLatinStory(getText(\"storyText\")));\r\n});\r\n\r\n"
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2018-11-16 02:01:22 +0000\",\"changed\":[\"notes\",\"code_functions\",\"instructions\",\"markdown_instructions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 02:18:07 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"long_instructions\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 02:27:58 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"short_instructions\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 02:34:15 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"start_html\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 02:35:47 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"start_html\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 02:36:37 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"start_html\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 02:37:19 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"start_html\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 02:38:22 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"start_html\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 15:05:35 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"start_html\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 15:09:27 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"long_instructions\",\"start_html\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"},{\"changed_at\":\"2018-11-16 15:13:31 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"contained_level_names\",\"preload_asset_list\",\"start_html\"],\"changed_by_id\":832,\"changed_by_email\":\"hannah@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>