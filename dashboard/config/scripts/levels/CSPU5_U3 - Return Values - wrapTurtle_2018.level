<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2018-05-04T23:05:04.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRandom": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "length": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Write wrap in this simple app to let the turtle \"wrap\" to the other side of the screen when it goes off.  (Click to see full instructions)",
    "markdown_instructions": "# Use a Function that Returns a Value in an App - Part 2\r\n\r\nThis time, you're going to write a function that returns a value to add functionality to the turtle driver. The `updateTurtle` function now is making a call to a function called `wrap` that has not been written yet. It accepts three parameters and should work in the following way:\r\n\r\n* `input`: the input value to the function. If it is within the range it should just be returned.\r\n* `low`: the lower bound of the range. If `input` is below this value the output should be the value of `high`.\r\n* `high`: the upper bound of the range. If `input` is above this value the output should be the value of `low`.\r\n\r\nBy using this function you can create the illusion that the screen \"wraps\" around, so when the turtle leaves the top of the screen it appears again at the bottom.\r\n\r\n# Do This:\r\n\r\n* **Starter code** is provided which allows the turtle to move.\r\n* The `updateTurtle` function now makes two calls to `wrap`, but the function is not yet written.\r\n* **Write the `wrap` function** so that it implements the logic described above.\r\n* **Run your app** and confirm the turtle now \"wraps\" when it leaves the screen.\r\n\r\n![](https://images.code.org/ebed5130ccdd16202eac0b8cc02df959-image-1447957698820.gif)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_blocks": "penUp();\r\nvar xloc = 160;\r\nvar yloc = 240;\r\n\r\nonEvent(\"screen1\", \"keydown\", function(event) {\r\n  if (event.key == \"Left\") {\r\n    xloc = xloc - 10;\r\n  } else if (event.key == \"Right\") {\r\n    xloc = xloc + 10;\r\n  } else if (event.key == \"Up\") {\r\n    yloc = yloc - 10;\r\n  } else if (event.key == \"Down\") {\r\n    yloc = yloc + 10;\r\n  }\r\n  \r\n  updateTurtle();\r\n});\r\n\r\nfunction updateTurtle() {\r\n  xloc = wrap(xloc,0,320);\r\n  yloc = wrap(yloc,0,450);\r\n  moveTo(xloc, yloc);\r\n}\r\n\r\nfunction wrap(input, low, high) {\r\n  var output;\r\n\r\n  //your code goes here\r\n  \r\n  return output;\r\n}",
    "encrypted_examples": "eXx5kOwdMjySZercvSo3aJ6hN0y6idV9NkGI85faCjiqyEFBJq3m0tU6VyIJ\n5HIc\n",
    "parent_level_id": 6943,
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true
}]]></config>
  <blocks/>
</Applab>