<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-07-28T21:40:35.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "Game.allSprites": null,
      "Game.width": null,
      "Game.height": null,
      "Game.mouseX": null,
      "Game.mouseY": null,
      "Game.frameRate": null,
      "Game.frameCount": null,
      "playSound": null,
      "keyDown": null,
      "keyWentDown": null,
      "keyWentUp": null,
      "mouseDidMove": null,
      "mouseDown": null,
      "mouseIsOver": null,
      "mouseWentDown": null,
      "mouseWentUp": null,
      "mousePressedOver": null,
      "camera.on": null,
      "camera.off": null,
      "camera.isActive": null,
      "camera.mouseX": null,
      "camera.mouseY": null,
      "camera.x": null,
      "camera.y": null,
      "camera.zoom": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "setSpeed": null,
      "getDirection": null,
      "getSpeed": null,
      "isTouching": null,
      "destroy": null,
      "pointTo": null,
      "bounce": null,
      "bounceOff": null,
      "collide": null,
      "displace": null,
      "overlap": null,
      "setAnimation": null,
      "setCollider": null,
      "setVelocity": null,
      "sprite.height": null,
      "sprite.width": null,
      "getScaledWidth": null,
      "getScaledHeight": null,
      "debug": null,
      "depth": null,
      "lifetime": null,
      "mirrorX": null,
      "mirrorY": null,
      "nextFrame": null,
      "pause": null,
      "play": null,
      "setFrame": null,
      "x": null,
      "y": null,
      "rotateToDirection": null,
      "rotation": null,
      "rotationSpeed": null,
      "scale": null,
      "shapeColor": null,
      "velocityX": null,
      "velocityY": null,
      "visible": null,
      "comment_Sprites": null,
      "var group = createGroup": null,
      "add": null,
      "remove": null,
      "clear": null,
      "contains": null,
      "get": null,
      "group.isTouching": null,
      "group.bounce": null,
      "group.bounceOff": null,
      "group.collide": null,
      "group.displace": null,
      "group.overlap": null,
      "maxDepth": null,
      "minDepth": null,
      "destroyEach": null,
      "pointToEach": null,
      "setAnimationEach": null,
      "setColorEach": null,
      "setColliderEach": null,
      "setDepthEach": null,
      "setHeightEach": null,
      "setLifetimeEach": null,
      "setMirrorXEach": null,
      "setMirrorYEach": null,
      "setRotateToDirectionEach": null,
      "setRotationEach": null,
      "setRotationSpeedEach": null,
      "setScaleEach": null,
      "setSpeedEach": null,
      "setVelocityEach": null,
      "setVelocityXEach": null,
      "setVelocityYEach": null,
      "setVisibleEach": null,
      "setWidthEach": null,
      "comment_Groups": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "comment_Drawing": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "comment_Control": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "comment_Math": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "listLength": null,
      "comment_Variables": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "show_d_pad": "true",
    "edit_code": true,
    "embed": "true",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "false",
    "debugger_disabled": "false",
    "hide_animation_mode": "false",
    "start_animations": "{\r\n  \"orderedKeys\": [\"red_car\", \"orange_cone\"],\r\n  \"propsByKey\": {\r\n    \"red_car\": {\r\n      \"name\": \"red_car\",\r\n      \"sourceUrl\": \"https://images.code.org/5f738da1a2b1ef8af124e4470e2babe7-image-1469742830481.png\",\r\n      \"frameSize\": {\"x\":50, \"y\": 50},\r\n      \"frameCount\": 1,\r\n      \"frameRate\": 15\r\n    },\r\n    \"orange_cone\": {\r\n      \"name\": \"orange_cone\",\r\n      \"sourceUrl\": \"https://images.code.org/f22e6b1a636337820e53fb37a137b3d1-image-1469742992179.png\",\r\n      \"frameSize\": {\"x\":35, \"y\": 35},\r\n      \"frameCount\": 1,\r\n      \"frameRate\": 15\r\n    }\r\n  }\r\n}",
    "markdown_instructions": "# Driving Test\r\n\r\nWe've added some traffic cones to the race game you made last time.  The goal is to get through the track without knocking over any of the cones, but right now the program doesn't know when the car runs into them.  You'll need to figure out a way to detect whether or not the car is touching the cones.\r\n\r\n[//]: #  (https://images.code.org/ee9b677e93213846fe12abb3b34f563c-image-1469742494237.png)\r\n\r\n[//]: #  (https://images.code.org/5f738da1a2b1ef8af124e4470e2babe7-image-1469742830481.png)\r\n\r\n[//]: #  (https://images.code.org/f22e6b1a636337820e53fb37a137b3d1-image-1469742992179.png)",
    "start_blocks": "var cone1 = createSprite(100, 100);\r\ncone1.setAnimation(\"orange_cone\");\r\n\r\nvar cone2 = createSprite(100, 300);\r\ncone2.setAnimation(\"orange_cone\");\r\n\r\nvar cone3 = createSprite(300, 100);\r\ncone3.setAnimation(\"orange_cone\");\r\n\r\nvar cone4 = createSprite(200, 200);\r\ncone4.setAnimation(\"orange_cone\");\r\n\r\nvar cone5 = createSprite(200, 400);\r\ncone5.setAnimation(\"orange_cone\");\r\n\r\nvar car = createSprite(350, 350);\r\ncar.rotateToDirection = \"true\";\r\ncar.setAnimation(\"red_car\");\r\n\r\ncar.setSpeed(0.5, 270);\r\n\r\nfunction draw() {\r\n  // turn left\r\n  if (keyDown(\"left\")){\r\n    // set the car's speed to its current speed, \r\n    // and direction to its current direction minus 1\r\n  \tcar.setSpeed(car.getSpeed(), car.getDirection() - 1);\r\n  }\r\n  // turn right\r\n  if (keyDown(\"right\")){\r\n    // set the car's speed to its current speed, \r\n    // and direction to its current direction plus 1\r\n  \tcar.setSpeed(car.getSpeed(), car.getDirection() + 1);\r\n  }\r\n  \r\n  //speed up\r\n  if (keyDown(\"up\")){\r\n    // set the car's speed to its current speed plus 0.2, \r\n    // and direction to its current direction\r\n  \tcar.setSpeed(car.getSpeed() + 0.2, car.getDirection());\r\n  }\r\n  \r\n  //slow down\r\n  if (keyDown(\"down\")){\r\n    // set the car's speed to its current speed minus 0.2, \r\n    // and direction to its current direction\r\n    if (car.getSpeed() > 0.2) {\r\n  \t\tcar.setSpeed(car.getSpeed() - 0.2, car.getDirection());\r\n    } else {\r\n  \t\tcar.setSpeed(.001, car.getDirection());\r\n    } \r\n  }\r\n  \r\n  drawTrack();\r\n  drawSprites();\r\n}\r\n\r\nfunction drawTrack() {\r\n  background(\"green\");\r\n  stroke(\"gray\");\r\n  noFill();\r\n  strokeWeight(50);\r\n  line(350, 400, 350, 100);\r\n  arc(300, 100, 100, 100, 270, 360);\r\n  line(100, 50, 300 , 50);\r\n  arc(100, 100, 100, 100, 90, 270);\r\n  line(100, 150, 200 , 150);\r\n  arc(200, 200, 100, 100, 270, 90);\r\n  line(100, 250, 200 , 250);\r\n  arc(100, 300, 100, 100, 90, 270);\r\n  line(100, 350, 200 , 350);\r\n  arc(200, 400, 100, 100, 270, 90);\r\n  stroke(\"black\");\r\n  strokeWeight(4);\r\n  line(325, 400, 325, 100);\r\n  line(375, 400, 375, 100);\r\n  arc(300, 100, 50, 50, 270, 360);\r\n  arc(300, 100, 150, 150, 270, 360);\r\n  line(100, 25, 300 , 25);\r\n  line(100, 75, 300 , 75);\r\n  arc(100, 100, 50, 50, 90, 270);\r\n  arc(100, 100, 150, 150, 90, 270);\r\n  line(100, 125, 200 , 125);\r\n  line(100, 175, 200 , 175);\r\n  arc(200, 200, 50, 50, 270, 90);\r\n  arc(200, 200, 150, 150, 270, 90);\r\n  line(100, 225, 200 , 225);\r\n  line(100, 275, 200 , 275);\r\n  arc(100, 300, 50, 50, 90, 270);\r\n  arc(100, 300, 150, 150, 90, 270);\r\n  line(100, 325, 200 , 325);\r\n  line(100, 375, 200 , 375);\r\n  arc(200, 400, 50, 50, 270, 90);\r\n  arc(200, 400, 150, 150, 270, 90);\r\n  \r\n  line(350, 400, 350, 350);\r\n  line(350, 300, 350, 250);\r\n  line(350, 200, 350, 150);\r\n  arc(300, 100, 100, 100, 300, 360);\r\n  line(225, 50, 275 , 50);\r\n  line(125, 50, 175 , 50);\r\n  arc(100, 100, 100, 100, 180, 240);\r\n  arc(100, 100, 100, 100, 90, 120);\r\n  line(100, 150, 120 , 150);\r\n  line(180, 150, 200 , 150);\r\n  arc(200, 200, 100, 100, 270, 310);\r\n  arc(200, 200, 100, 100, 10, 70);\r\n  line(100, 250, 150 , 250);\r\n  arc(100, 300, 100, 100, 260, 270);\r\n  arc(100, 300, 100, 100, 130, 190);\r\n  line(130, 350, 180 , 350);\r\n  arc(200, 400, 100, 100, 320, 90);\r\n}\r\n",
    "pause_animations_by_default": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>