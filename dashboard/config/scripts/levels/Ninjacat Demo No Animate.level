<Studio>
  <config><![CDATA[{
  "game_id": 33,
  "created_at": "2015-05-29T18:21:19.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "studio",
    "failure_condition": "function () {\r\n}",
    "maze": "[[16,16,16,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "soft_buttons": [
      "downButton",
      "upButton"
    ],
    "embed": "true",
    "instructions": "Letâ€™s begin by exploring a simple videogame, and then figuring out how it works. You can use the arrow keys to move the ninja up and down - try to catch the unicorn and avoid the dragon! When you think you've figured out how the game works, click \"Finish\"",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "false",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "true",
    "edge_collisions": "false",
    "projectile_collisions": "false",
    "allow_sprites_outside_playspace": "true",
    "sprites_hidden_to_start": "true",
    "coordinate_grid_background": "false",
    "free_play": "true",
    "disable_sharing": "true",
    "generate_function_pass_blocks": "true",
    "timeout_after_when_run": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "step_speed": "50",
    "custom_game_type": "Ninja Cat",
    "disable_examples": "false",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"Ninjacat Demo B\",\r\n  \"callout_text\": \"Click `Run` to try out the game\",\r\n  \"element_id\": \"#runButton\",\r\n  \"on\": \"\",\r\n  \"qtip_config\": {\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"right center\",\r\n    \"at\": \"left center\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "examples_required": "false",
    "maze_data": null
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="functional_start_setFuncs" inline="false" deletable="false" movable="false" editable="false" id="game_funcs">
          <functional_input name="title">
            <block type="functional_call" deletable="false">
              <mutation name="title"/>
            </block>
          </functional_input>
          <functional_input name="subtitle">
            <block type="functional_call" deletable="false">
              <mutation name="subtitle"/>
            </block>
          </functional_input>
          <functional_input name="background">
            <block type="functional_call" deletable="false">
              <mutation name="bg"/>
            </block>
          </functional_input>
          <functional_input name="target">
            <block type="functional_call" deletable="false">
              <mutation name="target"/>
            </block>
          </functional_input>
          <functional_input name="danger">
            <block type="functional_call" deletable="false">
              <mutation name="danger"/>
            </block>
          </functional_input>
          <functional_input name="player">
            <block type="functional_call" deletable="false">
              <mutation name="player"/>
            </block>
          </functional_input>
          <functional_input name="update-target">
            <block type="functional_pass">
              <mutation name="update-target"/>
            </block>
          </functional_input>
          <functional_input name="update-danger">
            <block type="functional_pass">
              <mutation name="update-danger"/>
            </block>
          </functional_input>
          <functional_input name="update-player">
            <block type="functional_pass">
              <mutation name="update-player"/>
            </block>
          </functional_input>
          <functional_input name="collide?">
            <block type="functional_pass">
              <mutation name="collide?"/>
            </block>
          </functional_input>
          <functional_input name="on-screen?">
            <block type="functional_pass">
              <mutation name="onscreen?"/>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">player</title>
          <functional_input name="STACK">
            <block type="functional_sprite_dropdown">
              <title name="SPRITE_INDEX">ninja</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">danger</title>
          <functional_input name="STACK">
            <block type="functional_sprite_dropdown">
              <title name="SPRITE_INDEX">dragon</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">target</title>
          <functional_input name="STACK">
            <block type="functional_sprite_dropdown">
              <title name="SPRITE_INDEX">unicorn</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">bg</title>
          <functional_input name="STACK">
            <block type="functional_background_dropdown">
              <title name="BACKGROUND">"cloudy"</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <outputtype>String</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">subtitle</title>
          <functional_input name="STACK">
            <block type="functional_string">
              <title name="VAL">Catch the unicorn, avoid the dragon</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <outputtype>String</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">title</title>
          <functional_input name="STACK">
            <block type="functional_string">
              <title name="VAL">Ninja vs Dragon!</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="update-target">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="line-length">
                <arg name="a" type="Number"/>
                <arg name="b" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">200</title>
                </block>
              </functional_input>
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">175</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_minus" inline="false">
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">200</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">175</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="line-length">
                <arg name="a" type="Number"/>
                <arg name="b" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">150</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_minus" inline="false">
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">150</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <arg name="a" type="Number"/>
            <arg name="b" type="Number"/>
            <description>Given two points on a number line, how far apart are they?</description>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">line-length</title>
          <functional_input name="STACK">
            <block type="functional_cond" inline="false">
              <functional_input name="COND0">
                <block type="functional_greater_than" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">a</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">b</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE0">
                <block type="functional_minus" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">a</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">b</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="DEFAULT">
                <block type="functional_minus" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">b</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">a</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="distance">
                <arg name="px" type="Number"/>
                <arg name="py" type="Number"/>
                <arg name="cx" type="Number"/>
                <arg name="cy" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">200</title>
                </block>
              </functional_input>
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">125</title>
                </block>
              </functional_input>
              <functional_input name="ARG3">
                <block type="functional_math_number">
                  <title name="NUM">225</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_sqrt" inline="false">
              <functional_input name="ARG1">
                <block type="functional_plus" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_call" inline="false">
                      <mutation name="sqr">
                        <arg name="number" type="Number"/>
                      </mutation>
                      <functional_input name="ARG0">
                        <block type="functional_call" inline="false">
                          <mutation name="line-length">
                            <arg name="a" type="Number"/>
                            <arg name="b" type="Number"/>
                          </mutation>
                          <functional_input name="ARG0">
                            <block type="functional_math_number">
                              <title name="NUM">200</title>
                            </block>
                          </functional_input>
                          <functional_input name="ARG1">
                            <block type="functional_math_number">
                              <title name="NUM">125</title>
                            </block>
                          </functional_input>
                        </block>
                      </functional_input>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_call" inline="false">
                      <mutation name="sqr">
                        <arg name="number" type="Number"/>
                      </mutation>
                      <functional_input name="ARG0">
                        <block type="functional_call" inline="false">
                          <mutation name="line-length">
                            <arg name="a" type="Number"/>
                            <arg name="b" type="Number"/>
                          </mutation>
                          <functional_input name="ARG0">
                            <block type="functional_math_number">
                              <title name="NUM">100</title>
                            </block>
                          </functional_input>
                          <functional_input name="ARG1">
                            <block type="functional_math_number">
                              <title name="NUM">225</title>
                            </block>
                          </functional_input>
                        </block>
                      </functional_input>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="distance">
                <arg name="px" type="Number"/>
                <arg name="py" type="Number"/>
                <arg name="cx" type="Number"/>
                <arg name="cy" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">150</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">200</title>
                </block>
              </functional_input>
              <functional_input name="ARG3">
                <block type="functional_math_number">
                  <title name="NUM">250</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_sqrt" inline="false">
              <functional_input name="ARG1">
                <block type="functional_plus" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_call" inline="false">
                      <mutation name="sqr">
                        <arg name="number" type="Number"/>
                      </mutation>
                      <functional_input name="ARG0">
                        <block type="functional_call" inline="false">
                          <mutation name="line-length">
                            <arg name="a" type="Number"/>
                            <arg name="b" type="Number"/>
                          </mutation>
                          <functional_input name="ARG0">
                            <block type="functional_math_number">
                              <title name="NUM">100</title>
                            </block>
                          </functional_input>
                          <functional_input name="ARG1">
                            <block type="functional_math_number">
                              <title name="NUM">200</title>
                            </block>
                          </functional_input>
                        </block>
                      </functional_input>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_call" inline="false">
                      <mutation name="sqr">
                        <arg name="number" type="Number"/>
                      </mutation>
                      <functional_input name="ARG0">
                        <block type="functional_call" inline="false">
                          <mutation name="line-length">
                            <arg name="a" type="Number"/>
                            <arg name="b" type="Number"/>
                          </mutation>
                          <functional_input name="ARG0">
                            <block type="functional_math_number">
                              <title name="NUM">150</title>
                            </block>
                          </functional_input>
                          <functional_input name="ARG1">
                            <block type="functional_math_number">
                              <title name="NUM">250</title>
                            </block>
                          </functional_input>
                        </block>
                      </functional_input>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <arg name="px" type="Number"/>
            <arg name="py" type="Number"/>
            <arg name="cx" type="Number"/>
            <arg name="cy" type="Number"/>
            <description>Given the player's x and y coordinates, and the coordinates of another character, how far apart are their center points?</description>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">distance</title>
          <functional_input name="STACK">
            <block type="functional_sqrt" inline="false">
              <functional_input name="ARG1">
                <block type="functional_plus" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_call" inline="false">
                      <mutation name="sqr">
                        <arg name="number" type="Number"/>
                      </mutation>
                      <functional_input name="ARG0">
                        <block type="functional_call" inline="false">
                          <mutation name="line-length">
                            <arg name="a" type="Number"/>
                            <arg name="b" type="Number"/>
                          </mutation>
                          <functional_input name="ARG0">
                            <block type="functional_parameters_get">
                              <mutation>
                                <outputtype>Number</outputtype>
                              </mutation>
                              <title name="VAR">px</title>
                            </block>
                          </functional_input>
                          <functional_input name="ARG1">
                            <block type="functional_parameters_get">
                              <mutation>
                                <outputtype>Number</outputtype>
                              </mutation>
                              <title name="VAR">cx</title>
                            </block>
                          </functional_input>
                        </block>
                      </functional_input>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_call" inline="false">
                      <mutation name="sqr">
                        <arg name="number" type="Number"/>
                      </mutation>
                      <functional_input name="ARG0">
                        <block type="functional_call" inline="false">
                          <mutation name="line-length">
                            <arg name="a" type="Number"/>
                            <arg name="b" type="Number"/>
                          </mutation>
                          <functional_input name="ARG0">
                            <block type="functional_parameters_get">
                              <mutation>
                                <outputtype>Number</outputtype>
                              </mutation>
                              <title name="VAR">py</title>
                            </block>
                          </functional_input>
                          <functional_input name="ARG1">
                            <block type="functional_parameters_get">
                              <mutation>
                                <outputtype>Number</outputtype>
                              </mutation>
                              <title name="VAR">cy</title>
                            </block>
                          </functional_input>
                        </block>
                      </functional_input>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="onscreen?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">-100</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_logical_and" inline="false">
              <functional_input name="ARG1">
                <block type="functional_call" inline="false">
                  <mutation name="safe-left?">
                    <arg name="x" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_math_number">
                      <title name="NUM">-100</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_call" inline="false">
                  <mutation name="safe-right?">
                    <arg name="x" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_math_number">
                      <title name="NUM">-100</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="onscreen?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">250</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_logical_and" inline="false">
              <functional_input name="ARG1">
                <block type="functional_call" inline="false">
                  <mutation name="safe-left?">
                    <arg name="x" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_math_number">
                      <title name="NUM">250</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_call" inline="false">
                  <mutation name="safe-right?">
                    <arg name="x" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_math_number">
                      <title name="NUM">250</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Given a sprite's x-coordinate, is it safe-left? and safe-right?</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">onscreen?</title>
          <functional_input name="STACK">
            <block type="functional_logical_and" inline="false">
              <functional_input name="ARG1">
                <block type="functional_call" inline="false">
                  <mutation name="safe-left?">
                    <arg name="x" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">x</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_call" inline="false">
                  <mutation name="safe-right?">
                    <arg name="x" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">x</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="collide?">
                <arg name="px" type="Number"/>
                <arg name="py" type="Number"/>
                <arg name="cx" type="Number"/>
                <arg name="cy" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">10</title>
                </block>
              </functional_input>
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">20</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">310</title>
                </block>
              </functional_input>
              <functional_input name="ARG3">
                <block type="functional_math_number">
                  <title name="NUM">320</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_less_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_call" inline="false">
                  <mutation name="distance">
                    <arg name="px" type="Number"/>
                    <arg name="py" type="Number"/>
                    <arg name="cx" type="Number"/>
                    <arg name="cy" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_math_number">
                      <title name="NUM">10</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG1">
                    <block type="functional_math_number">
                      <title name="NUM">20</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number">
                      <title name="NUM">310</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG3">
                    <block type="functional_math_number">
                      <title name="NUM">320</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="collide?">
                <arg name="px" type="Number"/>
                <arg name="py" type="Number"/>
                <arg name="cx" type="Number"/>
                <arg name="cy" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">55</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">60</title>
                </block>
              </functional_input>
              <functional_input name="ARG3">
                <block type="functional_math_number">
                  <title name="NUM">65</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_less_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_call" inline="false">
                  <mutation name="distance">
                    <arg name="px" type="Number"/>
                    <arg name="py" type="Number"/>
                    <arg name="cx" type="Number"/>
                    <arg name="cy" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_math_number">
                      <title name="NUM">50</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG1">
                    <block type="functional_math_number">
                      <title name="NUM">55</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number">
                      <title name="NUM">60</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG3">
                    <block type="functional_math_number">
                      <title name="NUM">65</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <arg name="px" type="Number"/>
            <arg name="py" type="Number"/>
            <arg name="cx" type="Number"/>
            <arg name="cy" type="Number"/>
            <description>Given the x and y coordinates of the player and another character, are they colliding?</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">collide?</title>
          <functional_input name="STACK">
            <block type="functional_less_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_call" inline="false">
                  <mutation name="distance">
                    <arg name="px" type="Number"/>
                    <arg name="py" type="Number"/>
                    <arg name="cx" type="Number"/>
                    <arg name="cy" type="Number"/>
                  </mutation>
                  <functional_input name="ARG0">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">px</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">py</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">cx</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG3">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">cy</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">100</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="safe-left?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">-100</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_greater_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">-100</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">-50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="safe-left?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">75</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_greater_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">75</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">-50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Given a sprite's x-coordinate, is it safe on the left?</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">safe-left?</title>
          <functional_input name="STACK">
            <block type="functional_greater_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">-50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="safe-right?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">500</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_less_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">500</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">450</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="safe-right?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number">
                  <title name="NUM">200</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_less_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_math_number">
                  <title name="NUM">200</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">450</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <arg name="x" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">update-target</title>
          <functional_input name="STACK">
            <block type="functional_plus" inline="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">10</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Given a sprite's x-coordinate, is it safe on the right?</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">safe-right?</title>
          <functional_input name="STACK">
            <block type="functional_less_than" inline="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number">
                  <title name="NUM">450</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="update-target">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="sqr">
                <arg name="number" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="sqr">
                <arg name="number" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="number" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">sqr</title>
          <functional_input name="STACK">
            <block type="functional_times" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">number</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">number</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-player">
                <arg name="key" type="Number"/>
                <arg name="y" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-player">
                <arg name="key" type="Number"/>
                <arg name="y" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="key" type="Number"/>
            <arg name="y" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">update-player</title>
          <functional_input name="STACK">
            <block type="functional_cond" inline="false" uservisible="false">
              <mutation pairs="0,1"/>
              <functional_input name="COND0">
                <block type="functional_number_equals" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">key</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number" uservisible="false">
                      <title name="NUM">38</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE0">
                <block type="functional_plus" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">y</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number" uservisible="false">
                      <title name="NUM">10</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="COND1">
                <block type="functional_number_equals" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">key</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number" uservisible="false">
                      <title name="NUM">40</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE1">
                <block type="functional_minus" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">y</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number" uservisible="false">
                      <title name="NUM">10</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="DEFAULT">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">y</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-danger">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">update-danger</title>
          <functional_input name="STACK">
            <block type="functional_minus" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">10</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-danger">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="when_run" uservisible="false">
          <next>
            <block type="studio_setBackgroundParam" inline="true" uservisible="false">
              <value name="VALUE">
                <block type="procedural_to_functional_call" uservisible="false">
                  <mutation name="bg"/>
                </block>
              </value>
              <next>
                <block type="studio_setSpritePosition" uservisible="false">
                  <title name="SPRITE">0</title>
                  <title name="VALUE">13</title>
                  <next>
                    <block type="studio_setSpriteParamValue" inline="true" uservisible="false">
                      <title name="SPRITE">0</title>
                      <value name="VALUE">
                        <block type="procedural_to_functional_call" uservisible="false">
                          <mutation name="player"/>
                        </block>
                      </value>
                      <next>
                        <block type="studio_setSpritePosition" uservisible="false">
                          <title name="SPRITE">1</title>
                          <title name="VALUE">7</title>
                          <next>
                            <block type="studio_setSpriteParamValue" inline="true" uservisible="false">
                              <title name="SPRITE">1</title>
                              <value name="VALUE">
                                <block type="procedural_to_functional_call" uservisible="false">
                                  <mutation name="target"/>
                                </block>
                              </value>
                              <next>
                                <block type="studio_setSpritePosition" uservisible="false">
                                  <title name="SPRITE">2</title>
                                  <title name="VALUE">19</title>
                                  <next>
                                    <block type="studio_setSpriteParamValue" inline="true" uservisible="false">
                                      <title name="SPRITE">2</title>
                                      <value name="VALUE">
                                        <block type="procedural_to_functional_call" uservisible="false">
                                          <mutation name="danger"/>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="studio_showTitleScreenParams" inline="false" uservisible="false">
                                          <value name="TITLE">
                                            <block type="procedural_to_functional_call" uservisible="false">
                                              <mutation name="title"/>
                                            </block>
                                          </value>
                                          <value name="TEXT">
                                            <block type="procedural_to_functional_call" uservisible="false">
                                              <mutation name="subtitle"/>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </next>
        </block>
      </xml>
    </start_blocks>
  </blocks>
</Studio>