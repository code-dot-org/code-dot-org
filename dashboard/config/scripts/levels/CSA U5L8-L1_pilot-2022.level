<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:50:17.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nRun the program to observe the results.\r\n\r\nThen, experiment with the program by making the following modifications. Change one line at a time, then run the program after each change to observe the results.\r\n\r\n1. Look at the `makeSepia()`(#e7e8ea) method in the `SepiaImage`(#e7e8ea) class. What do you notice about the code? Where do you think the values used to create the new red, green, and blue values come from?\r\n\r\n2. Try modifying these values then run the program. How does it change the image?\r\n\r\n3. What happens if you set each color value to the same value? Try setting the red, green, and blue values to all use the `newRed`(#e7e8ea) value and then run the program. How does it change the image?\r\n\r\n###More Information\r\n\r\nThe original values you saw are actually values for a sepia tone that are recommended by Microsoft! You can read more about the sepia algorithm [**here**](https://www.geeksforgeeks.org/image-processing-in-java-colored-image-to-sepia-image-conversion/).",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "starter_assets": {
      "astronaut.jpg": "86dd177f-98c1-4732-bfdc-605e39edf308.jpg",
      "baseball.jpg": "d268936e-e825-4abe-bf30-3c831f2059ea.jpg",
      "basketball.jpg": "fd079d51-260f-45c8-9694-784cb3c28194.jpg",
      "dog.jpg": "9d67b0d2-31ac-47f3-a52e-35f4558d2fe1.jpg",
      "donut.jpg": "4783324f-6b6b-4857-a028-cb3c6cd0688c.jpg",
      "electricguitars.jpg": "78c64dd3-ea23-42de-91fc-1afcbe22f124.jpg",
      "cellphone.jpg": "cd74c02c-0fed-4bc8-875d-97742fa64948.jpg",
      "fashion.jpg": "93ffc6d6-6ab5-4f41-8b2e-01a473e176fc.jpg",
      "football.jpg": "7b48402f-9a4a-4387-a6d3-877047d58429.jpg",
      "games.jpg": "5df64377-b24a-462e-bbc3-2ff46a01d5a7.jpg",
      "guitar.jpg": "c770f364-2208-4b92-8f1e-ace6cefa5cca.jpg",
      "laptop.jpg": "dd3c5c56-518a-44d2-bc85-2aa5e9521578.jpg",
      "motivation.jpg": "8cd3e7c7-d57d-4be6-914c-e9eb5b3af1cf.jpg",
      "nature.jpg": "97146c5c-e237-4a5f-bb69-1b7d1aa25de7.jpg",
      "paintbrushes.jpg": "33d67ec2-7746-429a-bb2a-41c80fff8fa7.jpg",
      "soccer.jpg": "12452c5a-8f83-4fdf-8410-7d9f749fb8c0.jpg",
      "speakers.jpg": "e96190c6-4920-4c6b-b539-330266ab2bc5.jpg",
      "starwars.jpg": "464e397b-09f0-44eb-b7f9-b072a1b3e0f0.jpg",
      "track.jpg": "b204f039-802f-49a4-9ab9-231850664194.jpg"
    },
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    Scene myScene = new Scene();\n    SepiaImage myImage = new SepiaImage(\"paintbrushes.jpg\");\n\n    myScene.drawImage(myImage, 0, 0, myScene.getWidth());\n    myScene.pause(0.5);\n\n    myImage.makeSepia();\n\n    myScene.drawImage(myImage, 0, 0, myScene.getWidth());\n\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true
      },
      "ImagePlus.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image that can be modified with filters and effects\n */\npublic class ImagePlus extends Image {\n\n  private Pixel[][] pixels;    // The 2D array of pixels\n\n  /*\n   * Constructor to create an ImagePlus object\n   * with a specified file name\n   */\n  public ImagePlus(String filename) {\n    super(filename);   // calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixels();\n  }\n\n  /*\n   * Returns the pixels in the image as a 2D array of Pixel objects\n   */\n  public Pixel[][] getPixels() {\n    // Level 2\n    // TO DO #1: Create and return a 2D array of Pixel objects that\n    // contains the pixels from the image.\n\n    Pixel[][] tempPixels = new Pixel[getHeight()][getWidth()];\n    \n    for (int row = 0; row < tempPixels.length; row++) {\n      for (int col = 0; col < tempPixels[0].length; col++) {\n        tempPixels[row][col] = getPixel(col, row);\n      }\n    }\n\n    return tempPixels;\n  }\n  \n}",
        "isVisible": true
      },
      "SepiaImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a sepia image\n */\npublic class SepiaImage extends ImagePlus {\n\n  /*\n   * Constructor to create a SepiaImage\n   * with the specified file name\n   */\n  public SepiaImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Applies a sepia filter to the image\n   */\n  public void makeSepia() {\n    Pixel[][] pixels = getPixels();\n\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n\n        int currentRed = currentPixel.getRed();\n        int currentGreen = currentPixel.getGreen();\n        int currentBlue = currentPixel.getBlue();\n\n        int newRed = (int)((0.393 * currentRed) + (0.769 * currentGreen) + (0.189 * currentBlue));\n        int newGreen = (int)((0.349 * currentRed) + (0.686 * currentGreen) + (0.168 * currentBlue));\n        int newBlue = (int)((0.272 * currentRed) + (0.534 * currentGreen) + (0.131 * currentBlue));\n\n        currentPixel.setRed(newRed);\n        currentPixel.setGreen(newGreen);\n        currentPixel.setBlue(newBlue);\n      }\n    }\n  }\n  \n}",
        "isVisible": true
      }
    },
    "name_suffix": "_pilot-2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:50:17.057+00:00\",\"changed\":[\"cloned from \\\"CSA U5L8-L1_2022\\\"\"],\"cloned_from\":\"CSA U5L8-L1_2022\"}]"
}]]></config>
</Javalab>
