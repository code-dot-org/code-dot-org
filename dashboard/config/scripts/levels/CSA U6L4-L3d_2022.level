<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In Owner.java:\r\n\r\n1. Write the method `getLargestTotal()`(#e7e8ea) to find and return the `Dessert`(#e7e8ea) object that has the largest total price of a dessert order.\r\n\r\n   * Use the `getTotalPrice()`(#e7e8ea) method in the `Dessert`(#e7e8ea) class to get the total price of each `Dessert`(#e7e8ea) object's order.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `getLargestTotal()`(#e7e8ea) method and print the flavor and total price of the `Dessert`(#e7e8ea) object found.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    Dessert first = new Dessert(\"vanilla\", 2.99, 4);\n    Cookie second = new Cookie(\"oatmeal\", 1.50, 12, 6, true);\n    Pie third = new Pie(\"cherry\", 4.75, 4, \"cherry\", true);\n\n    Owner myOwner = new Owner();\n    \n    ArrayList<Dessert> myDesserts = new ArrayList<Dessert>();\n\n    myDesserts.add(first);\n    myDesserts.add(second);\n    myDesserts.add(third);\n\n    // TO DO #2: Call the getLargestTotal() method and print the\n    // flavor and total price of the Dessert found.\n\n    \n    \n  }\n}",
        "isVisible": true
      },
      "Dessert.java": {
        "text": "/*\n * A Dessert that the Project Mercury Pastries Food Truck sells\n */\npublic class Dessert {\n\n  private String flavor;  // The flavor of the dessert\n  private double price;   // The price of the dessert\n  private int quantity;   // The quantity of desserts ordered\n\n  /*\n   * Constructor to create a plain Dessert\n   */\n  public Dessert() {\n    flavor = \"plain\";\n    price = 0.00;\n    quantity = 0;\n  }\n\n  /*\n   * Constructor create a Dessert with\n   * specified flavor, price, and quantity\n   */\n  public Dessert(String newFlavor, double newPrice, int newQuantity) {\n    flavor = newFlavor;\n    price = newPrice;\n    quantity = newQuantity;\n  }\n\n  /*\n   * Gets the flavor of the dessert\n   */\n  public String getFlavor() {\n    return flavor;\n  }\n\n  /*\n   * Gets the quantity of desserts ordered\n   */\n  public int getQuantity() {\n    return quantity;\n  }\n\n  /*\n   * Gets the total price of the dessert order\n   */\n  public double getTotalPrice() {\n    return price * quantity;\n  }\n  \n}",
        "isVisible": true
      },
      "Cookie.java": {
        "text": "/*\n * A Cookie that the Project Mercury Pastries Food Truck sells\n */\npublic class Cookie extends Dessert {\n\n  private int diameter;     // The diameter of the Cookie\n  private boolean isChewy;  // Whether or not the Cookie is chewy\n\n  /*\n   * Constructor to create a plain Cookie\n   */\n  public Cookie() {\n    diameter = 0;\n    isChewy = false;\n  }\n\n  /*\n   * Constructor create a Cookie with specified\n   * flavor, price, quantity, diameter, and chewy status\n   */\n  public Cookie(String newFlavor, double newPrice, int newQuantity, int newDiameter, boolean newChewy) {\n    super(newFlavor, newPrice, newQuantity);\n    diameter = newDiameter;\n    isChewy = newChewy;\n  }\n\n  /*\n   * Gets the total price of the dessert order\n   */\n  public double getTotalPrice() {\n    double total = super.getTotalPrice();\n\n    if (getQuantity() > 6) {\n      total *= .75;\n    }\n\n    return total;\n  }\n  \n}",
        "isVisible": true
      },
      "Pie.java": {
        "text": "/*\n * A Pie that the Project Mercury Pastries Food Truck sells\n */\npublic class Pie extends Dessert {\n\n  private String filling;    // The filling flavor of the Pie\n  private boolean hasCrust;  // Whether or not the Pie has a crust\n\n  /*\n   * Constructor to create a plain Pie\n   */\n  public Pie() {\n    filling = \"none\";\n    hasCrust = false;\n  }\n\n  /*\n   * Constructor create a Pie with specified\n   * flavor, price, quantity, filling flavor, and crust status\n   */\n  public Pie(String newFlavor, double newPrice, int newQuantity, String newFilling, boolean newCrust) {\n    super(newFlavor, newPrice, newQuantity);\n    filling = newFilling;\n    hasCrust = newCrust;\n  }\n\n  /*\n   * Gets the total price of the dessert order\n   */\n  public double getTotalPrice() {\n    double total = super.getTotalPrice();\n\n    if (getQuantity() > 2) {\n      total *= .8;\n    }\n\n    return total;\n  }\n\n}",
        "isVisible": true
      },
      "Owner.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents an owner of the food truck business\n */\npublic class Owner {\n\n  /*\n   * Returns the Dessert that has the largest total price\n   */\n  public Dessert getLargestTotal(ArrayList<Dessert> dessertList) {\n    // TO DO #1: Find the Dessert that has the largest total price in dessertList.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      }
    },
    "display_name": "Largest Dessert Order",
    "bubble_choice_description": "Find the Dessert in an ArrayList that has the largest total price for its order.",
    "thumbnail_url": "https://images.code.org/74e65e715ee6ab750aee5687b0688f82-image-1651690533780.png",
    "encrypted_exemplar_sources": "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\nCJTWQzaeCmS3JeQmcv+CsH9EIw==\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:23:02.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:23:02.245+00:00\",\"changed\":[\"cloned from \\\"CSA U6L4-L3c_2022\\\"\"],\"cloned_from\":\"CSA U6L4-L3c_2022\"},{\"changed_at\":\"2022-04-14 19:23:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 18:11:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 18:56:21 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 19:13:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 19:13:19 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 19:15:51 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 19:15:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
