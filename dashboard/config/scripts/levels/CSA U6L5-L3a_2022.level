<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `Poem`(#e7e8ea) class represents a poem and has instance variables for the title of the poem and the lines of the poem. The `lines`(#e7e8ea) list is created using the `FileReader.getStringData()`(#e7e8ea) method to read the contents of a file into the list.\r\n\r\n##In Poem.java:\r\n\r\n1. Write the method `getLongestLine()`(#e7e8ea) that returns the longest line in the poem. The longest line is the line in `list`(#e7e8ea) with the most characters.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `getLongestLine()`(#e7e8ea) method and print the result.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Poem myPoem = new Poem(\"some title\", \"poem.txt\");\n\n    // TO DO #2: Call the getLongestLine() method and print the result.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "Poem.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a poem\n */\npublic class Poem {\n\n  private String title;              // The title of the poem\n  private ArrayList<String> lines;   // The lines of the poem\n\n  /*\n   * Constructor to create a Poem with the specified\n   * title and the file containing the lines\n   */\n  public Poem(String title, String filename) {\n    this.title = title;\n    this.lines = FileReader.getStringData(filename);\n  }\n\n  /*\n   * Returns the longest line in the poem\n   */\n  public String getLongestLine() {\n    // TO DO #1: Find the line that is the longest length in lines.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "poem.txt": {
        "text": "",
        "isVisible": true
      }
    },
    "project_template_level_name": "CSA U6L5-L3a PBT_2022",
    "display_name": "Lines in a Poem",
    "bubble_choice_description": "Find the longest line in a poem.",
    "thumbnail_url": "https://images.code.org/89067a86f9bbe90697b785e0a21d7633-image-1651752933769.png",
    "encrypted_exemplar_sources": "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\n+iR7jfREX2nPtd7n0g==\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:26:50.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:26:50.896+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L2v2_2022\\\"\"],\"cloned_from\":\"CSA U6L5-L2v2_2022\"},{\"changed_at\":\"2022-04-14 19:26:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:35:27 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:37:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:40:02 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 21:12:14 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 22:58:33 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 22:59:17 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 23:04:22 +0000\",\"changed\":[\"encrypted_examples\",\"display_name\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 12:16:09 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-05 13:11:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
