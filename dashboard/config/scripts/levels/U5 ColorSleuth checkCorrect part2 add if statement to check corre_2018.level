<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2018-05-04T23:03:07.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "edit_code": true,
    "embed": "false",
    "instructions_important": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "project_template_level_name": "U5 ColorSleuth Template_2018",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "false",
    "markdown_instructions": "## Step 4 - add an if-statement in *checkCorrect*\r\n\r\n**Add a simple `if-else` statement inside the function `checkCorrect` that:**\r\n\r\n* Compares `buttonId` and `randButtonId` and\r\n* Displays a message to console that they got right or wrong\r\n\r\nInsert something like this *between* your existing console.log statement and the call to setBoard()\r\n\r\n\t\tif( buttonId == randButtonId ) {\r\n        \tconsole.log(\"You got it right!\");\r\n        } else {\r\n        \tconsole.log(\"WRONG\");\r\n        }\r\n\r\n**TEST IT: Verify that the if-statement is giving correct results**\r\n<img src=\"https://images.code.org/8fd0d14a4c32a6e36299251a2edb56bb-image-1481148748359.png\" style=\"float: right\">\r\n\r\n* You should be able to click on buttons and see messages that verify your if-statement is working\r\n* Be sure to click on all the buttons to test the scenarios\r\n\t* Is it detecting correct or incorrect button clicks properly?\r\n    * Is it changing the board every time?\r\n* Your console output might look something like what's shown at right.\r\n\r\n**TIP:** It might be useful to temporarily remove or comment out the call to `setBoard()` so the board doesn't change every time when you click.  This would let you verify that every button works right for a single board setup.  Then add it back in once you're done.",
    "teacher_markdown": "**Common Mistakes**  \r\n\r\n* Students may have trouble knowing where to insert the if-else statement in the code. See the example below to give them guidance.\r\n\r\n* Output will be very confusing if students put the if-statement AFTER the call to setBoard() since that would effectively change the board before you had a chance to verify the click was correct.\r\n\r\n* Make sure that each call to `checkCorrect` from the eventHandlers is passing the correct buttonId -- for example a copy/paste oversight might have all of them calling `checkCorrect(\"button1\")`, or of course a misspelling or capitalization problem like `checkCorrect(\"Button1\")` won't throw any errors but won't give correct results since there is no button with the id (Capital B) `\"Button1\"` - it needs to be `\"button1\"`\r\n\r\n* If students didn't make `randButtonId` a global variable properly, then things won't consistently work right at this stage.  Make sure they're not re-declaring the variable with `var` inside the function.\r\n\r\n**Code at this point**\r\n\r\n    var randButtonId;\r\n    setBoard();\r\n\r\n    function setBoard() {\r\n      var R = randomNumber(0,235);\r\n      var G = randomNumber(0,235);\r\n      var B = randomNumber(0,235);\r\n      var color = rgb(R, G, B);\r\n      setProperty(\"button1\", \"background-color\", color);\r\n      setProperty(\"button2\", \"background-color\", color);\r\n      setProperty(\"button3\", \"background-color\", color);\r\n      setProperty(\"button4\", \"background-color\", color);\r\n\r\n      R = R+20; \r\n      G = G+20;\r\n      B = B+20;\r\n      var diffColor = rgb(R, G, B);\r\n      randButtonId = \"button\"+randomNumber(1,4);\r\n      setProperty(randButtonId, \"background-color\", diffColor);\r\n      console.log(\"correct button is: \"+randButtonId);\r\n    }\r\n\r\n    function checkCorrect(buttonId) {\r\n      console.log(\"checking: \"+buttonId);\r\n      if( buttonId == randButtonId ) {\r\n          console.log(\"You got it right!\")\r\n      } else {\r\n          console.log(\"WRONG\");\r\n      }\r\n      setBoard();\r\n    }\r\n\r\n    onEvent(\"button1\", \"click\", function() {\r\n      checkCorrect(\"button1\");\r\n    });\r\n    onEvent(\"button2\", \"click\", function() {\r\n      checkCorrect(\"button2\");\r\n    });\r\n    onEvent(\"button3\", \"click\", function() {\r\n      checkCorrect(\"button3\");\r\n    });\r\n    onEvent(\"button4\", \"click\", function() {\r\n      checkCorrect(\"button4\");\r\n    });\r\n\r\n",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "parent_level_id": 7593,
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-11-17 17:42:34 +0000\",\"changed\":[\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":177,\"changed_by_email\":\"josh.schulte@code.org\"},{\"changed_at\":\"2018-01-30 17:18:04 +0000\",\"changed\":[\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":106,\"changed_by_email\":\"gtwrobel@gmail.com\"}]"
}]]></config>
  <blocks/>
</Applab>