<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The owner of the Project Mercury Pastries Food Truck has stored the inventories for each food truck in a 2D array. The 2D array contains the following values:\r\n\r\n![](https://images.code.org/972447c0bb792232427f9739c03e1a7c-image-1650922812556.png)\r\n\r\nwhere each row represents a unique food truck in the business. Each column represents the number of cakes, cookies, and pies, respectively.\r\n\r\nThe owner wants to know if any food trucks have quantities of desserts that are greater than a specified amount.\r\n\r\n##In Owner.java:\r\n\r\n1. Write the method `hasMinimum()`(#e7e8ea) using enhanced `for`(#e7e8ea) loops.\r\n\r\n   * Return `true`(#e7e8ea) if any food truck has a quantity of desserts that are more than the parameter `minValue`(#e7e8ea).\r\n   \r\n   * Otherwise, return `false`(#e7e8ea).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `hasMinimum()`(#e7e8ea) method and print the result.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array using an enhanced `for`(#e7e8ea) loop uses the following syntax:\r\n  \r\n  ```\r\n  for (dataType[] rowName : arrayName) {\r\n    for (dataTy[] valueName : rowName) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "project_template_level_name": "CSA U5L5-L3a PBT_pilot-2022",
    "display_name": "Food Trucks",
    "bubble_choice_description": "The owner of the Project Mercury Pastries Food Truck wants to know if any food trucks have quantities of desserts that are greater than a specified amount in a 2D array.",
    "thumbnail_url": "https://images.code.org/bd65cff0fe5df55597222194fd120da8-image-1651163917695.png",
    "encrypted_exemplar_sources": "jrRNHcOowRx22njbDNzE6K10Ex1m7JwmHnodMo3x9M3C3KmIZMYPgMif4ggg\npyArrjS8Knx2nrCwIPfD0C4c7R+cnXk6vIl8ov903a8BdloDU4fGHttbox4b\nWj6Z1vN3IOInhpgVp1gs/r6MMcnV/smRahBQ51VGx/PZbRi4XUFoE5XRIR0T\ny29XadGL/K6Q6iXI38TczeTINtsbO+7o2OjB5Sy117Z6zmmHsxfSeeo6OTmO\nM7Huxg612hbxHrmGkoFE/mC/NuSt//36wPueOfm9UD/021xAng1uq8kf5Rv2\n1MWlFpKJBiWjj4qV3MNSLKa8NDye8O3oz50j5lrcFli12drqNSTCO2M8Vqj4\ntlzhCT5pLPGHKs2eW+D9EPPXFEPhG66/aws2yEqmLDdLBJ4ZaXPl74cKchSB\n3pFjo/AiMo4nEJtYSWSzvAKxWYeoO0vnbpFgbIQy49KNh0Bigu4tnPJ6aszK\nltFKYsnY0j6QdED+HaVg1TVVA0lWnRgss1kGOVBwquyZL/AYA2IJYp9eywPw\nURQk0Yg6r8Avlpdd99XbxUs+EoL+FSYBeC0quXUPNFHBVwbShKVC1erJMNjW\n91s7usWiTuUKP9IN6e6WK3Dihh10CT2+4zFcv7iCkl6sHbXq00BDUE4ZE3vA\n2X3eWfzgzGzPcxuNVNOR9J8KQKJN6gH5Y/LvnWKqokKsKqdZRWR6/ttOPi+8\nApZPnRxT2OPdV41PqmfuS77kRLYIR1l8Lr46HjklCcbHvZFNKx6Mot6vcQNo\n03/2JOmDA4ZeHkHnN/thu80RowWGlFP1U3VwnB9Zo5+ckzArCjdGaA//NwCl\nzOY4i1yJPYuZ8n4OqirmJLHjFpQJDySeoOltnWIa0fm4q4mpLfmPH53b3N6v\nXQ4Vva6lzgxgTCcBXwOTi3BKO9mn9stsYJ7AlW74LLI/ukn4Wj9SWVADZFEb\nLIcIpWKZvvJOlceBV01encJErOyfgVaqZjwicyeCZS9uTptDjJA3UvZN8Zs/\n5tSQrZfE73Ibt1GOWdWZ9wqIfK55bU4DWzxPpLOVEPuZlq4jp95mh5phqw2Q\nGqKEFY4vCw+ygAWVb8rO48Ua8IXsAIZlrON2SlFVPIXC/R/ncy3eQEl9nI1h\nIeLSdMgheipH1lqvnpYHkAigN3H8WmVB2btqVoKPH+pRyW9GMnRgpH3bs4hr\nshbd3nRL0mM32NLK1ABs6zM1O6IbWjLB1XAcq2gfHBcS7yixLwAIKdWvt6aS\nMre5z8Fb3XoZ22ub+7CcRwttgsAF8XXzpHUDH+9rUocieBWpTTh59O5XZfZZ\nzOxFqPsnqBj16KrBqYiSMfXbshD+A7RfGoYuzIfh5xX0qY6JZNCAm7Qf7CeD\n1fJvMZX0NNhaVa4Uov3uS5GfbycboCHINDKfEHUDUiyMpCegEjHS71twACCv\nueMBV9HNODZnFeMSq/K5gxYj8lKRHu7AYpIuJ27UczXaEYVplCuxq12IZ4iN\nKbZo/S6rxzQ8k3nkpbv20L+XI8SiBhxl2MrfuK/bgLLvZNkrXs1dj1XvQsZW\nTQLeLZRCEFeW2QtZsC5z3j4XphKdHpRvEf2JnUW2a/+fpURDBtE6wk/t4io5\nG4CE6CJzM5ki7jr2zpDQy2CRqrzPT1Fo4w2h65iaA14UJ6oS9DRZmC9A4i+y\nF7jA8PhtMvqYqXp1RkImnnrK3JmrDVHKSfPbei5DHJjgquH3r8crmJeW8hxY\nTcMcreWY/zN4QSnpR9QiQf1YvfKczK+e+x8Vj6KKKVZbFZmd3hsj4/A1P5U3\navUUnPjIRtFoRrGPSRxTS2g+BgvPkCPFt98BMDjluWQI5QdqjMH/LNlh\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    int[][] inventories = {{25, 17, 22}, {18, 12, 15},\n                           {21, 19, 27}, {30, 10, 23}};\n\n    Owner myOwner = new Owner(inventories);\n\n    // TO DO #2: Call the hasMinimum() method and print the result.\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Owner.java": {
        "text": "/*\n * Represents an owner of the food truck business\n */\npublic class Owner {\n\n  private int[][] inventories;   // The 2D array of dessert inventories\n\n  /*\n   * Constructor to create an Owner object\n   * with the specified 2D array of inventories\n   */\n  public Owner(int[][] inventories) {\n    this.inventories = inventories;\n  }\n\n  /*\n   * Returns true if any food truck has a quantity of\n   * desserts that are more than minValue\n   */\n  public boolean hasMinimum(int minValue) {\n    // TO DO #1: Use an enhanced for loop to traverse the inventories array\n    // and return true if any food truck has a quantity of desserts more than\n    // minValue; otherwise, return false.\n\n\n    return false;\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:50:07.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:50:07.724+00:00\",\"changed\":[\"cloned from \\\"CSA U5L5-L3a_2022\\\"\"],\"cloned_from\":\"CSA U5L5-L3a_2022\"},{\"changed_at\":\"2022-10-09 21:20:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 21:21:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 21:23:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 21:23:20 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
