<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-08-04T04:52:36.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "keyDown": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "setSpeedAndDirection": null,
      "getDirection": null,
      "isTouching": null,
      "rotation": null,
      "setAnimation": null,
      "debug": null,
      "visible": null,
      "comment_Sprites": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "comment_Drawing": null,
      "ifBlock": null,
      "comment_Control": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "comment_Variables": null
    },
    "show_d_pad": "true",
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "false",
    "debugger_disabled": "false",
    "hide_animation_mode": "false",
    "start_animations": "{\r\n    \"orderedKeys\": [\r\n        \"red_car\",\r\n        \"orange_cone\"\r\n    ],\r\n    \"propsByKey\": {\r\n        \"red_car\": {\r\n            \"name\": \"red_car\",\r\n            \"sourceUrl\": \"https://images.code.org/5f738da1a2b1ef8af124e4470e2babe7-image-1469742830481.png\",\r\n            \"frameSize\": {\r\n                \"x\": 50,\r\n                \"y\": 50\r\n            },\r\n            \"frameCount\": 1,\r\n            \"frameDelay\": 2,\r\n            \"looping\": true\r\n        },\r\n        \"orange_cone\": {\r\n            \"name\": \"orange_cone\",\r\n            \"sourceUrl\": \"https://images.code.org/f22e6b1a636337820e53fb37a137b3d1-image-1469742992179.png\",\r\n            \"frameSize\": {\r\n                \"x\": 35,\r\n                \"y\": 35\r\n            },\r\n            \"frameCount\": 1,\r\n            \"frameDelay\": 2,\r\n            \"looping\": true\r\n        }\r\n    }\r\n}",
    "markdown_instructions": "# Driving Test\r\n\r\nNow that you can detect collisions, you can make the cones fall down when the car runs into them. \r\n\r\n# Do This\r\n\r\nUse the `if`, `isTouching`, and `rotation` blocks to change the rotation of the cone when the car runs into it.  You'll need to check if each cone is touching the car.",
    "start_blocks": "// make the 4 cones\r\nvar cone1 = createSprite(300, 100);\r\ncone1.setAnimation(\"orange_cone\");\r\nvar cone2 = createSprite(100, 100);\r\ncone2.setAnimation(\"orange_cone\");\r\nvar cone3 = createSprite(200, 200);\r\ncone3.setAnimation(\"orange_cone\");\r\nvar cone4 = createSprite(100, 300);\r\ncone4.setAnimation(\"orange_cone\");\r\n\r\n// make the car\r\nvar car = createSprite(350, 350);\r\ncar.rotateToDirection = \"true\";\r\ncar.setAnimation(\"red_car\");\r\ncar.setSpeedAndDirection(0.5, 270);\r\n\r\nfunction draw() {\r\n  // if the car is touching cone1, change the cone's rotation\r\n  if (__) {\r\n    \r\n  }\r\n  // if the car is touching cone2, change the cone's rotation\r\n  \r\n  // if the car is touching cone3, change the cone's rotation\r\n  \r\n  // if the car is touching cone4, change the cone's rotation\r\n  \r\n  // turn left\r\n  if (keyDown(\"left\")){\r\n    // keep the speed the same\r\n    // change the direction one degree to the left\r\n  \tcar.setSpeedAndDirection(car.getSpeed(), car.getDirection() - 1);\r\n  }\r\n  // turn right\r\n  if (keyDown(\"right\")){\r\n    // keep the speed the same\r\n    // change the direction one degree to the right\r\n  \tcar.setSpeedAndDirection(car.getSpeed(), car.getDirection() + 1);\r\n  }\r\n  //speed up\r\n  if (keyWentDown(\"up\")){\r\n    // increase the car's speed by 0.2, \r\n    // keep the direction the same\r\n  \tcar.setSpeedAndDirection(car.getSpeed() + 0.2, car.getDirection());\r\n  }\r\n  //slow down\r\n  if (keyWentDown(\"down\")){\r\n    // check that it's going fast enough that it can slow down\r\n    if (car.getSpeed() > 0.2) {\r\n      // decrease the car's speed by 0.2, \r\n      // keep the direction the same\r\n      car.setSpeedAndDirection(car.getSpeed() - 0.2, car.getDirection());\r\n    } else {\r\n      // make it almost stop, but not quite\r\n   \t  car.setSpeedAndDirection(.001, car.getDirection());\r\n    }\r\n  }\r\n  \r\n  drawTrack();\r\n  drawSprites();\r\n}\r\n\r\nfunction drawTrack() {\r\n  background(\"green\");\r\n  stroke(\"gray\");\r\n  noFill();\r\n  strokeWeight(50);\r\n  line(350, 400, 350, 100);\r\n  arc(300, 100, 100, 100, 270, 360);\r\n  line(100, 50, 300 , 50);\r\n  arc(100, 100, 100, 100, 90, 270);\r\n  line(100, 150, 200 , 150);\r\n  arc(200, 200, 100, 100, 270, 90);\r\n  line(100, 250, 200 , 250);\r\n  arc(100, 300, 100, 100, 90, 270);\r\n  line(100, 350, 200 , 350);\r\n  arc(200, 400, 100, 100, 270, 90);\r\n  stroke(\"black\");\r\n  strokeWeight(4);\r\n  line(325, 400, 325, 100);\r\n  line(375, 400, 375, 100);\r\n  arc(300, 100, 50, 50, 270, 360);\r\n  arc(300, 100, 150, 150, 270, 360);\r\n  line(100, 25, 300 , 25);\r\n  line(100, 75, 300 , 75);\r\n  arc(100, 100, 50, 50, 90, 270);\r\n  arc(100, 100, 150, 150, 90, 270);\r\n  line(100, 125, 200 , 125);\r\n  line(100, 175, 200 , 175);\r\n  arc(200, 200, 50, 50, 270, 90);\r\n  arc(200, 200, 150, 150, 270, 90);\r\n  line(100, 225, 200 , 225);\r\n  line(100, 275, 200 , 275);\r\n  arc(100, 300, 50, 50, 90, 270);\r\n  arc(100, 300, 150, 150, 90, 270);\r\n  line(100, 325, 200 , 325);\r\n  line(100, 375, 200 , 375);\r\n  arc(200, 400, 50, 50, 270, 90);\r\n  arc(200, 400, 150, 150, 270, 90);\r\n  \r\n  line(350, 400, 350, 350);\r\n  line(350, 300, 350, 250);\r\n  line(350, 200, 350, 150);\r\n  arc(300, 100, 100, 100, 300, 360);\r\n  line(225, 50, 275 , 50);\r\n  line(125, 50, 175 , 50);\r\n  arc(100, 100, 100, 100, 180, 240);\r\n  arc(100, 100, 100, 100, 90, 120);\r\n  line(100, 150, 120 , 150);\r\n  line(180, 150, 200 , 150);\r\n  arc(200, 200, 100, 100, 270, 310);\r\n  arc(200, 200, 100, 100, 10, 70);\r\n  line(100, 250, 150 , 250);\r\n  arc(100, 300, 100, 100, 260, 270);\r\n  arc(100, 300, 100, 100, 130, 190);\r\n  line(130, 350, 180 , 350);\r\n  arc(200, 400, 100, 100, 320, 90);\r\n}\r\n",
    "pause_animations_by_default": "false",
    "palette_category_at_start": "control",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>