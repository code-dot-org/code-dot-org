<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:34.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "write": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "declareNoAssign_x": null,
      "declareAssign_x": null,
      "assign_x": null,
      "console.log": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "markdown_instructions": "# Expressions with Variables\r\nArithmetic becomes much more interesting when we use other variables in our expressions. For example you can do this:\r\n\r\n<table  style=\"margin-left: auto;\r\n  margin-right: auto; align: center\">\r\n<tr>\r\n<td>\r\n<img src=\"https://images.code.org/13c21437292031a705744a8c2663c0d4-image-1445547765131.png\" style=\"width: 400px;\">\r\n</td></tr>\r\n<tr> <td>\r\n <h3>\r\n Mental Model\r\n![](https://images.code.org/b4a2c125508fb06fd653b90c643cb53b-image-1447272790306.png)</h3>\r\n</td></tr>\r\n<tr><td><img src=\"https://images.code.org/95eb7e859d04c72ed82ed80023a870cf-image-1445546103564.gif\" style=\"width: 400px;\"></td>\r\n</tr>\r\n</table>\r\n\r\nThe end result of an expression with variables is the same as one without.  The major difference is that values are retrieved from memory in order to do the calculation rather than simply hard-coded.\r\n\r\n# Mental Model Check\r\nWatch the animation above. To compute the expression the computer will: **first** retrieve each of the values of the variables used in the expression; **then** the arithmetic expression can be evaluated; **finally** the computed value can be stored in memory.\r\n\r\n# Do This:\r\n<img src=\"https://images.code.org/485f61858e45a39e383497c522c94d64-image-1445548216109.png\" style=\"float: right; width: 300px\">\r\n* **Scenario:** In the starting code we have provided you with variables that might be the kinds of things you would keep track of in a game: `totalTime`, `points` and `lives`.  (see right).\r\n\r\n* Right now the `totalScore` is just set to 0.  We want you to compute a final score so that the person is rewarded for having a lot of points and lives, but penalized for taking a lot of time.\r\n\r\n* **Write an expression** that calculates the player's total score and stores it in the `totalScore` variable.  The calculation is: **the player's points *times* lives *divided* by the total time.**\r\n\r\n* For the values provided the app display should look like this:\r\n \r\n<img src=\"https://images.code.org/10c9c6f162004a1b7216ae36c1427478-image-1445548367117.png\" style=\"width: 250px\">\r\n",
    "instructions": "Write an expression that calculates the player's total score and stores it in the totalScore variable. The calculation is: the player's points times lives divided by the total time. (click to see full instructions)",
    "start_blocks": "var points = 1023;\r\nvar lives = 3;\r\nvar totalTime = 45;\r\nwrite(\"Points: \" + points);\r\nwrite(\"Lives: \" + lives);\r\nwrite(\"Total Time: \" + totalTime + \" secs\");\r\nwrite(\"---------------------------\");\r\nvar totalScore = 0;\r\nwrite(\"Your Total Score is: \" + totalScore);\r\n",
    "execute_palette_apis_only": "false",
    "lock_zero_param_functions": "false",
    "encrypted_examples": "qYpGOC1LB6zfL76XU+ZGFTECqgoiWFBfyMPgRjBs10RAEn36k7bpaaFxJA4P\nL7H9\n",
    "contained_level_names": null
  },
  "published": true
}]]></config>
  <blocks/>
</Applab>