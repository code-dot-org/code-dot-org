<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Look at this project example. What are some of its characteristics and features?\r\n\r\n*While this is an example of a project for this unit, it is not representative of the only way you can approach or develop the project.*",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    String[] dogImages = {\"sitting.png\", \"scratching.png\", \"lookingBack.png\"};\n    double[] barking = SoundLoader.read(\"barking.wav\");\n\n    Dog theDog = new Dog(\"running.png\", dogImages, barking, 180, 200);\n    Butterfly theButterfly = new Butterfly(\"butterflyImage.png\", 280, 10, 45);\n\n    GardenScene garden = new GardenScene(theDog, theButterfly, \"garden.jpg\");\n    garden.createScene();\n    \n    Theater.playScenes(garden);\n\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "GardenScene.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.util.ArrayList;\n\npublic class GardenScene extends Scene {\n  \n  private Dog theDog;\n  private Butterfly theButterfly;\n  private String backgroundImage;\n  public static final int size = 400;\n\n  public GardenScene(Dog theDog, Butterfly theButterfly, String backgroundImage) {\n    this.theDog = theDog;\n    this.theButterfly = theButterfly;\n    this.backgroundImage = backgroundImage;\n  }\n  \n  public void drawBackground() {\n    drawImage(backgroundImage, 0, 0, 420);\n  }\n\n  public void drawDogSittingAndScratching() {\n    drawDogSitting();\n    drawBackground();\n    drawDogScratching();\n    drawBackground();\n    drawDogSitting();\n  }\n   \n  public void chaseButterfly(int count, int dogXPos, int butterflyXPos, int butterflyYPos, int butterflyRotation, double increment) {\n    if (count == 0) { \n      return;\n    }\n    \n    drawBackground();\n    drawImage(theDog.getImage(), dogXPos, theDog.getYPos(), size);\n    drawImage(theButterfly.getImage(), butterflyXPos, butterflyYPos, size, butterflyRotation);\n    playBarking(increment);\n    pause(0.5);\n    \n    chaseButterfly(count - 1, dogXPos - 20, butterflyXPos - 20, butterflyYPos - 10, butterflyRotation + 4, increment * 2);\n  }\n  \n  public void createScene() {\n    drawBackground();\n    drawDogSittingAndScratching();\n    chaseButterfly(16, 200, theButterfly.getXPos(), theButterfly.getYPos(), theButterfly.getRotation(), 0);\n    drawBackground();\n    drawDogLookingBack();\n  }\n\n  private void drawDogSitting() {\n    String dogSit = theDog.getMovement(\"sitting\");\n    drawImage(dogSit, theDog.getXPos(), theDog.getYPos(), size);\n    pause(0.5);\n  }\n\n  private void drawDogScratching() {\n    String dogScratch = theDog.getMovement(\"scratching\");\n    drawImage(dogScratch, theDog.getXPos(), theDog.getYPos(), size);\n    pause(0.5);\n  }\n  \n  private void drawDogLookingBack() {\n    String dogLookBack = theDog.getMovement(\"lookingBack\");\n    drawImage(dogLookBack, -80, theDog.getYPos(), size);\n    pause(0.5);\n  }\n\n  private void playBarking(double increment) {\n    double[] newSound = SoundEffects.increaseVolume(theDog.getBarkingSound(), increment);\n    playSound(newSound);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Animal.java": {
        "text": "public class Animal {\n\n  private String image;\n  private int xPos;\n  private int yPos;\n  \n  public Animal(String image, int xPos, int yPos) {\n    this.image = image;\n    this.xPos = xPos;\n    this.yPos = yPos;\n  }\n  \n  public String getImage() {\n    return image;\n  }\n  \n  public int getXPos() {\n    return xPos;\n  }\n  \n  public int getYPos() {\n    return yPos;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "Butterfly.java": {
        "text": "public class Butterfly extends Animal {\n\n  private int rotation;\n  \n  public Butterfly(String image, int xPos, int yPos, int rotation) {\n    super(image, xPos, yPos);\n    this.rotation = rotation;\n  }\n  \n  public int getRotation() {\n    return rotation;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      },
      "Dog.java": {
        "text": "public class Dog extends Animal {\n\n  private String[] dogImages;\n  private double[] barkingSound;\n  \n  public Dog(String image, String[] dogImages, double[] barkingSound, int xPos, int yPos) {\n    super(image, xPos, yPos);\n    this.dogImages = dogImages;\n    this.barkingSound = barkingSound;\n  }\n  \n  public String[] getDogImages() {\n    return dogImages;\n  }\n\n  public double[] getBarkingSound() {\n    return barkingSound;\n  }\n\n  public String getMovement(String position) {\n    String currentMovement = dogImages[0];\n    \n    for (int index = 0; index < dogImages.length; index++) {\n      if (dogImages[index].indexOf(position) > 0) {\n        currentMovement = dogImages[index];\n      }\n    }\n\n    return currentMovement;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 4
      },
      "SoundEffects.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class SoundEffects {\n\n  public static double[] increaseVolume(double[] sound, double amount) {\n    double[] louderBark = new double[sound.length];\n    \n    for (int i = 0; i < sound.length; i++) {\n      louderBark[i] = sound[i] * amount;\n    }\n    \n    return louderBark;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 5
      }
    },
    "display_name": "Dog in the Garden",
    "bubble_choice_description": "An example project that creates an animation of a dog chasing a butterfly in a garden.",
    "thumbnail_url": "https://images.code.org/80abffea1865f26ee272a4c1cde30360-U7_project4.gif"
  },
  "game_id": 68,
  "created_at": "2023-04-11T13:50:56.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-11T13:50:56.423+00:00\",\"changed\":[\"cloned from \\\"CSA U7L1-L1c_2023\\\"\"],\"cloned_from\":\"CSA U7L1-L1c_2023\"},{\"changed_at\":\"2023-04-11 13:50:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 03:23:18 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 03:23:39 +0000\",\"changed\":[\"encrypted_examples\",\"display_name\",\"bubble_choice_description\",\"thumbnail_url\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 03:25:29 +0000\",\"changed\":[\"csa_view_mode\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 03:27:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 03:27:18 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 03:27:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
