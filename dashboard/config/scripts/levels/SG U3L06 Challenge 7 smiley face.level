<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2017-09-26T16:31:54.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "moveForward": null,
      "moveTo": null,
      "dot": null,
      "turnLeft": {
        "paramButtons": {
          "maxArgs": 1,
          "minArgs": 1
        }
      },
      "turnRight": {
        "paramButtons": {
          "maxArgs": 1,
          "minArgs": 1
        }
      },
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": {
        "paramButtons": {
          "maxArgs": 4,
          "minArgs": 4
        },
        "params": [
          "0",
          "0",
          "0",
          "1"
        ],
        "paletteParams": [
          "r",
          "g",
          "b",
          "a"
        ]
      },
      "comment_Goals_1": {
        "goal": "Move turtle"
      },
      "comment_Goals_2": {
        "goal": "Orient turtle"
      },
      "comment_Goals_3": {
        "goal": "Define function"
      },
      "comment_Goals_4": {
        "goal": "Call function"
      },
      "comment_Goals_5": {
        "goal": "Set pen properties"
      },
      "functionParams_none": null,
      "callMyFunction": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "short_instructions": "Use turnTo() and moveTo() to help draw a smiley face. (Click to see full instructions)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "slider_speed": "0.9",
    "disable_param_editing": "false",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "show_turtle_before_run": "true",
    "autocomplete_palette_apis_only": "true",
    "long_instructions": "# Moving Relative to the Screen\r\n\r\nThe turtle commands we've seen so far move the turtle **relative to the turtle's location and direction**. If you want to get the turtle to a specific position on the screen using only `moveForward()` or `turnLeft()`, you need to know the turtle's location beforehand.\r\n\r\nTwo new commands in the toolbox help resolve this issue. `moveTo()` moves the turtle to a location on the screen based on its X and Y coordinates. `turnTo()` turns the turtle in a specific direction. Together these commands can make many drawings easier to complete.\r\n\r\nJust like `moveForward()`, `moveTo()` achieves the subgoal `//Move turtle`. And just like `turnLeft()`, `turnTo()` achieves the subgoal `//Orient turtle`.\r\n\r\n# Do This:\r\n\r\n**Read the documentation: ** Read the documentation for `moveTo()` and `turnTo()`. Pay specific attention to how the coordinate system is arranged in App Lab as it is different from what you might have seen in a math class.\r\n\r\n**Draw the smiley: ** Use these new commands to help you draw the smiley face pictured below.\r\n\r\n**HINT: ** Don't forget to use `penUp()` and `penDown()`.\r\n\r\nMake sure that you plan your program with subgoals before you start filling in the blocks. Especially because you'll have to do some trial and error with the parameters, planning with subgoals will help keep you organized.\r\n\r\n![](https://images.code.org/20cab2a0b3a4fdfd53d7a1876963fa10-image-1441990625064.png)",
    "never_autoplay_video": "false",
    "examples_required": "false",
    "text_mode_at_start": "blocks",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "true",
    "submittable": "false",
    "hide_view_data_button": "true",
    "droplet_tooltips_disabled": "false",
    "debugger_disabled": "true",
    "encrypted_examples": "Lw+9Kkhyxqfvk9gjoWqa6ov3+8pLzsilAKeVlNRs9T4uPBinCbmKchk2PPdy\n1i8H\n",
    "lock_zero_param_functions": "true",
    "execute_palette_apis_only": "false",
    "fail_on_lint_errors": "false",
    "log_conditions": [
      {
        "entries": [
          "[forTest]"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "Hey! You're using a programming construct - loops - we haven't (officially) learned about yet :).  Don't worry, your knowledge will come in handy later, but for now, try to stick to the constraints of this problem"
      },
      {
        "entries": [
          "dot:1"
        ],
        "matchType": "exact",
        "minTimes": 2,
        "message": "App Lab is expecting you to draw at least 2 dots - one for the background and one for the yellow face. You can use dots for the eyes as well, but there are other ways, too."
      },
      {
        "entries": [
          "moveTo:2"
        ],
        "matchType": "exact",
        "minTimes": 1,
        "message": "App Lab is expecting you to use moveTo at least once. You probably want to use it more."
      },
      {
        "entries": [
          "turnTo:1"
        ],
        "matchType": "exact",
        "minTimes": 1,
        "message": "App Lab is expecting you to use turnTo at least once - just to try it out."
      }
    ],
    "instructions_important": "false",
    "show_debug_watch": "false",
    "makerlab_enabled": "false",
    "teacher_markdown": "Unlike in math class, the y-axis moves from top to bottom and 0 degrees is straight up. The screen size is 320 * 480 pixels.\r\n\r\n**Moving Relative to the Screen:** Students are introduced to `moveTo()` and `turnTo()`, functions which move and turn the turtle based on fixed locations on the screen. A student can specify an exact location to move the turtle using x and y coordinates, and can specify a direction for the turtle to turn using a value between 0 and 360. Students combine these commands with those used previously to draw a smiley face.\r\n\r\nYou can see that we are building up multiple ways (blocks) to accomplish each subgoal block. Encourage your students to group the turtle blocks by subgoal. You may even create a handout or chart on the wall showing all the different blocks to accomplish each subgoal.\r\n\r\nValidation note: we don't check to see if the student actually drew this exact figure. We check that the student:\r\n\r\n* called `moveTo(x,y)` at least once\r\n* called `turnTo` at least once\r\n* made at least 2 dots - one for the background and one for the face. (The eyes can be made with dots, but don't have to be.).",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "disable_procedure_autopopulate": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-05-31 20:47:49 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"teacher_markdown\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-09-26 16:33:52 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-06 19:14:21 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-15 14:03:12 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"text_mode_at_start\",\"encrypted_examples\",\"log_conditions\",\"teacher_markdown\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>