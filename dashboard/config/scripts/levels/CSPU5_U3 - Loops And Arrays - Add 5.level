<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:36.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "forLoop_i_0_4": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "appendItem": null,
      "listLength": null,
      "randomNumber_min_max": null,
      "console.log": null,
      "declareAssign_x_array_1_4": {
        "block": "var list = [1,2,3];"
      }
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Add 5 to all the values in an array (Click to see full instructions)",
    "markdown_instructions": "# Updating Values in an Array with a *for* Loop\r\n\r\nThe `for` loop you set up on the last level is actually so common that we will rarely deviate from this `for` loop setup.\r\n\r\n<img src=\"https://images.code.org/fba4d95636869c1c1c1a539fe81ded72-image-1447346793054.45.50 AM.png\">\r\n\r\nThis `for` loop basically means **\"for every possible index in `myArray`...\"** and we use it as a basic building block for processing arrays. Common array-processing techniques like searching for a value, updating all values, or calculating simple stats on an array will all be completed using a `for` loop written with the syntax above.\r\n\r\nIn fact, we're going to see that happen right now as we **use a `for` loop to add 5 to every value in an array**.\r\n\r\n# Do This:\r\n**Starter code** has been provided that creates an array of random values. You are also given a `for` loop that loops over every index in the array.\r\n\r\n* Add code inside the loop to **add 5 to the value at every location in the array**. \r\n\t* ** Remember: ** `myArray[i]` refers to the element in the array at the current value of `i`.\r\n* Confirm your code works by **displaying the values in your array before and after your loop**. Below is a sample result.  Notice how, after the array has been processed, all of the values are 5 greater than the originals.\r\n\r\n![](https://images.code.org/aaf36ac93098ef7f43fdda04243d17ad-image-1447792214666.29.41 PM.png)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_blocks": "var myArray = [];\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\nappendItem(myArray, randomNumber(1,10));\r\n\r\nconsole.log(\"Before: \" + myArray);\r\n\r\nfor (var i = 0; i < myArray.length; i++) {\r\n  \r\n  //Your code goes here\r\n  \r\n}\r\n\r\nconsole.log(\"After: \" + myArray);",
    "encrypted_examples": "q0a2EusG4wjT8oHtwtSOV7dWtbzTJfo+gYl6HbXCewymyera5cjEZUF5JDfg\ng9TC\n",
    "contained_level_names": null
  },
  "published": true
}]]></config>
  <blocks/>
</Applab>