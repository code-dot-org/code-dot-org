<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-06-21T16:38:04.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##BoxOfCandy FRQ\r\n\r\nThis question involves pieces of candy in a box. The `Candy` class represents a single piece of candy. \r\n\r\n```\r\npublic class Candy \r\n{ \r\n\t/** Returns a String representing the flavor of this piece of candy */ \r\n    public String getFlavor() \r\n    { /* implementation not shown */ } \r\n    \r\n    // There may be instance variables, constructors, and methods that are not shown. \r\n} \r\n```\r\n\r\nThe `BoxOfCandy` class represents a candy box where the candy is arranged in a rectangular grid. The instance variable of the class, `box`, is a rectangular two-dimensional array of `Candy` objects. A location in the candy box may contain a piece of candy or may be empty. A piece of candy is represented by a `Candy` object. An empty location is represented by `null`. You will write two methods of the `BoxOfCandy` class.\r\n\r\n\r\n__Part A)__ Write the `moveCandyToFirstRow` method, which attempts to ensure that the `box` element at row `0` and column `col` contains a piece of candy, using the following steps. \r\n* If the element at row `0` and column `col` already contains a piece of candy, then `box` is unchanged and the method returns `true`. \r\n* If the element at row `0` and column `col` does not contain a piece of candy, then the method `searches` the remaining rows of column `col` for a piece of candy. If a piece of candy can be found in column `col`, it is moved to row `0`, its previous location is set to `null`, and the method returns `true`; otherwise, the method returns `false`. \r\n\r\nIn the following example, the grid represents the contents of `box`. An empty square in the grid is `null` in `box`. A non-empty square in the grid represents a `box` element that contains a `Candy` object. The string in the square of the grid indicates the flavor of the piece of candy. \r\n\r\n![](https://images.code.org/8c9c771a353a6f9316a7d4cfe1d7bd7f-image-1687364743885.25.41 PM.png)\r\n\r\nThe method call `moveCandyToFirstRow(0)` returns `false` because the `box` element at row `0` and column `0` does not contain a piece of candy and there are no pieces of candy in column `0` that can be moved to row `0`. The contents of `box` are unchanged. \r\n\r\nThe method call `moveCandyToFirstRow(1)` returns `true` because the box element at row `0` and column `1` already contains a piece of candy. The contents of `box` are unchanged.\r\n\r\nThe method call `moveCandyToFirstRow(2)` moves one of the two pieces of candy in column `2` to row `0` of column `2`, sets the previous location of the piece of candy that was moved to `null`, and returns `true`. The new contents of `box` could be either of the following. \r\n\r\n![](https://images.code.org/a64b76742f61280d9cbc57914346ae3e-image-1687364831347.27.06 PM.png)\r\n\r\nComplete the `moveCandyToFirstRow` method.\r\n\r\n<br>\r\n\r\n__Part B)__ Write the `removeNextByFlavor` method, which attempts to remove and return one piece of candy from the box. The piece of candy to be removed is the first piece of candy with a flavor equal to the parameter `flavor` that is encountered while traversing the candy box in the following order: the last row of the box is traversed from left to right, then the next-to-last row of the box is traversed from left to right, etc., until either a piece of candy with the desired flavor is found or until the entire candy box has been searched. \r\n\r\nIf the `removeNextByFlavor` method finds a `Candy` object with the desired flavor, the corresponding `box` element is assigned `null`, all other `box` elements are unchanged, and the removed `Candy` object is returned. Otherwise, `box` is unchanged and the method returns `null`. \r\n\r\nThe following examples show three consecutive calls to the `removeNextByFlavor` method. The traversal of the candy box always begins in the last row and first column of the box. \r\n\r\nThe following grid shows the contents of `box` before any of the `removeNextByFlavor` method calls. \r\n\r\n![](https://images.code.org/b1cb0f8842854e6d19ac23b49f96a082-image-1687365171951.32.48 PM.png)\r\n\r\nThe method call `removeNextByFlavor(\"cherry\")` removes and returns the `Candy` object located in row `2` and column `0`. The following grid shows the updated contents of `box`.\r\n\r\n![](https://images.code.org/29b7c7e8730c10734f5f7b9308e6210b-image-1687365185411.33.02 PM.png)\r\n\r\nThe method call `removeNextByFlavor(\"lime\")` removes and returns the `Candy` object located in row `1` and column `3`. The following grid shows the updated contents of `box`. \r\n\r\n![](https://images.code.org/72577f51250cfacfe26fdd40f55cd9fd-image-1687365197721.33.14 PM.png)\r\n\r\nThe method call `removeNextByFlavor(\"grape\")` returns `null` because no grape-flavored candy is found. The contents of `box` are unchanged. \r\n\r\nComplete the `removeNextByFlavor` method.\r\n\r\n\r\n\r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "BoxOfCandy.java": {
        "text": "public class BoxOfCandy \n{ \n  /** box contains at least one row and is initialized in the constructor. */ \n  private Candy[][] box; \n  \n  /** \n    * Moves one piece of candy in column col, if necessary and possible, so that the box \n    * element in row 0 of column col contains a piece of candy, as described in part (a). \n    * Returns false if there is no piece of candy in column col and returns true otherwise. \n    * Precondition: col is a valid column index in box. \n    */ \n  public boolean moveCandyToFirstRow(int col) \n  { /* to be implemented in part (a) */ } \n  \n  /** \n    * Removes from box and returns a piece of candy with flavor specified by the parameter, or \n    * returns null if no such piece is found, as described in part (b) \n    */ \n  public Candy removeNextByFlavor(String flavor) \n  { /* to be implemented in part (b) */ } \n  \n  // There may be instance variables, constructors, and methods that are not shown. \n}\n",
        "isVisible": true,
        "tabOrder": 0
      },
      "Candy.java": {
        "text": "public class Candy\n{\n    private String flavor;\n\n    /** Constructor initializes Candy object */\n    public Candy(String flavor)\n    {\n        this.flavor = flavor;\n    }\n\n    /** Returns a String representing the flavor of this piece of candy */ \n    public String getFlavor()\n    {\n        return flavor;\n    }\n}",
        "isVisible": true,
        "tabOrder": 1
      }
    }
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-06-21 16:38:14 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-21 16:41:11 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-21 16:42:48 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 16:02:38 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 16:03:48 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 16:04:16 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:25:05 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:25:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:26:17 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:27:02 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:27:17 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:28:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:28:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:32:11 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:32:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:32:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:34:14 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:34:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:46:04 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 17:46:07 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 18:58:06 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-22 19:11:47 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-07-04 16:37:30 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-07-04 16:37:36 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
