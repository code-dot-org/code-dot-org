<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-06-21T16:38:04.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##BoxOfCandy FRQ\r\n\r\nThis question involves pieces of candy in a box. The `Candy` class represents a single piece of candy. \r\n\r\n```\r\npublic class Candy \r\n{ \r\n\t/** Returns a String representing the flavor of this piece of candy */ \r\n    public String getFlavor() \r\n    { /* implementation not shown */ } \r\n    \r\n    // There may be instance variables, constructors, and methods that are not shown. \r\n} \r\n```\r\n\r\nThe `BoxOfCandy` class represents a candy box where the candy is arranged in a rectangular grid. The instance variable of the class, `box`, is a rectangular two-dimensional array of `Candy` objects. A location in the candy box may contain a piece of candy or may be empty. A piece of candy is represented by a `Candy` object. An empty location is represented by `null`. You will write two methods of the `BoxOfCandy` class.\r\n\r\n\r\n__Part A)__ Write the `moveCandyToFirstRow` method, which attempts to ensure that the `box` element at row `0` and column `col` contains a piece of candy, using the following steps. \r\n* If the element at row `0` and column `col` already contains a piece of candy, then `box` is unchanged and the method returns `true`. \r\n* If the element at row `0` and column `col` does not contain a piece of candy, then the method `searches` the remaining rows of column `col` for a piece of candy. If a piece of candy can be found in column `col`, it is moved to row `0`, its previous location is set to `null`, and the method returns `true`; otherwise, the method returns `false`. \r\n\r\nIn the following example, the grid represents the contents of `box`. An empty square in the grid is `null` in `box`. A non-empty square in the grid represents a `box` element that contains a `Candy` object. The string in the square of the grid indicates the flavor of the piece of candy. \r\n\r\n![](https://images.code.org/8c9c771a353a6f9316a7d4cfe1d7bd7f-image-1687364743885.25.41 PM.png)\r\n\r\nThe method call `moveCandyToFirstRow(0)` returns `false` because the `box` element at row `0` and column `0` does not contain a piece of candy and there are no pieces of candy in column `0` that can be moved to row `0`. The contents of `box` are unchanged. \r\n\r\nThe method call `moveCandyToFirstRow(1)` returns `true` because the box element at row `0` and column `1` already contains a piece of candy. The contents of `box` are unchanged.\r\n\r\nThe method call `moveCandyToFirstRow(2)` moves one of the two pieces of candy in column `2` to row `0` of column `2`, sets the previous location of the piece of candy that was moved to `null`, and returns `true`. The new contents of `box` could be either of the following. \r\n\r\n![](https://images.code.org/a64b76742f61280d9cbc57914346ae3e-image-1687364831347.27.06 PM.png)\r\n\r\nComplete the `moveCandyToFirstRow` method.\r\n\r\n<br>\r\n\r\n__Part B)__ Write the `removeNextByFlavor` method, which attempts to remove and return one piece of candy from the box. The piece of candy to be removed is the first piece of candy with a flavor equal to the parameter `flavor` that is encountered while traversing the candy box in the following order: the last row of the box is traversed from left to right, then the next-to-last row of the box is traversed from left to right, etc., until either a piece of candy with the desired flavor is found or until the entire candy box has been searched. \r\n\r\nIf the `removeNextByFlavor` method finds a `Candy` object with the desired flavor, the corresponding `box` element is assigned `null`, all other `box` elements are unchanged, and the removed `Candy` object is returned. Otherwise, `box` is unchanged and the method returns `null`. \r\n\r\nThe following examples show three consecutive calls to the `removeNextByFlavor` method. The traversal of the candy box always begins in the last row and first column of the box. \r\n\r\nThe following grid shows the contents of `box` before any of the `removeNextByFlavor` method calls. \r\n\r\n![](https://images.code.org/b1cb0f8842854e6d19ac23b49f96a082-image-1687365171951.32.48 PM.png)\r\n\r\nThe method call `removeNextByFlavor(\"cherry\")` removes and returns the `Candy` object located in row `2` and column `0`. The following grid shows the updated contents of `box`.\r\n\r\n![](https://images.code.org/29b7c7e8730c10734f5f7b9308e6210b-image-1687365185411.33.02 PM.png)\r\n\r\nThe method call `removeNextByFlavor(\"lime\")` removes and returns the `Candy` object located in row `1` and column `3`. The following grid shows the updated contents of `box`. \r\n\r\n![](https://images.code.org/72577f51250cfacfe26fdd40f55cd9fd-image-1687365197721.33.14 PM.png)\r\n\r\nThe method call `removeNextByFlavor(\"grape\")` returns `null` because no grape-flavored candy is found. The contents of `box` are unchanged. \r\n\r\nComplete the `removeNextByFlavor` method.\r\n\r\n\r\n\r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "encrypted_validation": "xTLqc7UidmmVIL4kAN78kFFfcL7p5Un6t1pTsco9Hv5guUXy2znoMvlglmX6\nr5ZLMomJ+7sVOYV1qPoFydz2q6kjW2JZFWAj1t2Gxwjm+aI=\n",
    "start_sources": {
      "BoxOfCandy.java": {
        "text": "public class BoxOfCandy \n{ \n  /** box contains at least one row and is initialized in the constructor. */ \n  private Candy[][] box; \n  \n  /** \n    * Moves one piece of candy in column col, if necessary and possible, so that the box \n    * element in row 0 of column col contains a piece of candy, as described in part (a). \n    * Returns false if there is no piece of candy in column col and returns true otherwise. \n    * Precondition: col is a valid column index in box. \n    */ \n  public boolean moveCandyToFirstRow(int col) \n  { /* to be implemented in part (a) */ } \n  \n  /** \n    * Removes from box and returns a piece of candy with flavor specified by the parameter, or \n    * returns null if no such piece is found, as described in part (b) \n    */ \n  public Candy removeNextByFlavor(String flavor) \n  { /* to be implemented in part (b) */ } \n  \n  // There may be instance variables, constructors, and methods that are not shown. \n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Candy.java": {
        "text": "public class Candy \n{ \n    /** Returns a String representing the flavor of this piece of candy */ \n    public String getFlavor() \n    { /* implementation not shown */ } \n    \n    // There may be instance variables, constructors, and methods that are not shown. \n} ",
        "isVisible": true,
        "tabOrder": 1
      },
      "CandyImplemented.java": {
        "text": "",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-06-21 16:38:14 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-21 16:41:11 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-21 16:42:48 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
