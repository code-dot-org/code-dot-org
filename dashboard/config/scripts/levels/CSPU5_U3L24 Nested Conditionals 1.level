<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:35.000Z",
  "level_num": "custom",
  "user_id": 112,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "write": null,
      "setScreen": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "lessThanOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "declareAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "true",
    "instructions": "Change all of the boolean expressions to use includes instead of ==. (Click to see full instructions)",
    "markdown_instructions": "# Adding *includes* to the Movie Bot\r\n\r\nIf our Movie Bot is asked a question like \"What is a good comedy movie?\" it currently won't know how to respond, **even though the question includes one of its keywords.** By using `includes` we can allow our Movie Bot to sense if a keyword appears anywhere in the question.\r\n\r\n# Do This:\r\n\r\n* **Suggestion: Switch to Text Mode.** This will be much easier in Text Mode.\r\n* **Change all your boolean expressions to use `includes` instead of `==`**.\r\n* **Test out a couple sentences with your keywords** to make sure the change worked.\r\n\r\n![](https://images.code.org/0df459c4ccd9b613b23409af7ff5f59e-image-1446139233341.gif)\r\n\r\n**Note: ** Check out the flowchart below to see the logic we are trying to change.\r\n\r\n\r\n<img src=\"https://images.code.org/ea8340252f50774c352f58fa7cc12e5c-image-1446069734921.png\" style=\"width: 100%\">\r\n\r\n<a href=\"https://images.code.org/ea8340252f50774c352f58fa7cc12e5c-image-1446069734921.png\" target=\"_blank\">Open diagram in a new tab</a>",
    "start_blocks": "var NAME = \"Chef's Assistant: \";\r\nvar conversation = NAME + \"What food would you like to know about?\";\r\nvar userInput = \"\";\r\nvar DEFAULT_RESPONSE = \"Hmm I don't know that one. What's another food you want to learn about?\";\r\n\r\nsetText(\"text_area\", conversation);\r\n\r\nfunction generateResponse() {\r\n  console.log(\"generating response\");\r\n  userInput = getText(\"text_input\");\r\n  conversation = \"User: \" + userInput + '\\n' + NAME;\r\n  \r\n  if (userInput.indexOf(\"pizza\") >= 0) {\r\n    conversation += \"Pizza is made from a flat dough that is \" +\r\n        \"generally topped with sauce, cheese, vegetables, and/or \" +\r\n        \"meat and is cooked in an oven.\";\r\n  } else if (userInput.indexOf(\"soup\") >= 0) {\r\n    conversation += \"Soup is generally a hot dish made from a meat \" +\r\n        \"or vegetable broth with grains, vegetables, and/or meat added.\";\r\n  } else {\r\n    conversation += DEFAULT_RESPONSE;\r\n  }\r\n\r\n  setText(\"text_area\", conversation);\r\n}\r\n\r\nonEvent(\"text_input\", \"change\", function(event) {\r\n  console.log(\"text_input entered text: \" + getText(\"text_input\"));\r\n  generateResponse();\r\n  setText(\"text_input\", \"\");\r\n});",
    "start_html": "<div xmlns=\"http://www.w3.org/1999/xhtml\" id=\"divApplab\" class=\"appModern divApplabDesignMode\" tabindex=\"1\" style=\"width: 320px; height: 480px; transform: scale(0.625);\">\r\n  <div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; height: 480px; background-color: rgb(84, 0, 84);\">\r\n    <input id=\"text_input\" style=\"margin: 0px; color: rgb(0, 0, 0); width: 275px; height: 40px; top: 55px; left: 20px; font-size: 18px; position: absolute; background-color: rgb(255, 255, 255);\"/>\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 22px; overflow: hidden; word-wrap: break-word; color: rgb(255, 255, 255); width: 179px; height: 27px; left: 20px; top: 15px; position: absolute;\" id=\"label1\">Chef's Assistant</label>\r\n    <div contenteditable=\"true\" id=\"text_area\" style=\"font-size: 18px; color: rgb(255, 255, 255); left: 20px; top: 110px; margin: 0px; width: 275px; height: 345px; position: absolute;\"/>\r\n  </div>\r\n</div>",
    "never_autoplay_video": "false",
    "examples_required": "false",
    "droplet_tooltips_disabled": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "project_template_level_name": "U3 - Movie Bot - Template",
    "execute_palette_apis_only": "false",
    "lock_zero_param_functions": "false",
    "encrypted_examples": "gzAKlkXs+aDE/I8cpSnvOgN7qjLtcxv1EwwOv8BaqHucCf43e3o3F3rHfZ/r\nwez8\n",
    "contained_level_names": null
  },
  "published": true
}]]></config>
  <blocks/>
</Applab>