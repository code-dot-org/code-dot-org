<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**A clothing designer sells custom apparel, and they have created a `Shirt`(#e7e8ea) class to represent the shirts they create.**\r\n\r\n✅ **TO DO:** Write a no-argument constructor the `Shirt`(#e7e8ea) class and instantiate a `Shirt`(#e7e8ea) object.\r\n\r\n1. In the `Shirt`(#e7e8ea) class, write a no-argument constructor to assign default values to the instance variables:\r\n\r\n   **(a)** Assign a default name to the instance variable `size`(#e7e8ea), such as `\"small\"`(#e7e8ea)\r\n\r\n   **(b)** Assign a default value to the instance variable `price`(#e7e8ea), such as `5.99`(#e7e8ea)\r\n\r\n2. In `ClothesRunner.java`(#e7e8ea):\r\n\r\n   **(a)** Instantiate a `Shirt`(#e7e8ea) object\r\n   \r\n   **(b)** Print the constructor for the `Shirt`(#e7e8ea) object to the console using `ClassInfo.getConstructors(nameOfObject)`(#e7e8ea)\r\n   \r\n   **(c)** Print the values assigned to the instance variables for the `Shirt`(#e7e8ea) object to the console by calling the `printShirtInfo()`(#e7e8ea) method\r\n   \r\n\r\n💡 **TIP:** Check out **Help & Tips** tab ⬆️ for help with writing a no-argument constructor and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/e217d4c3f5b3866faed347cdc234dda9-image-1667836484408.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/no-argument-constructors",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "The Shirt Class",
    "bubble_choice_description": "A clothing designer sells custom apparel, and they have created a `Shirt` class to represent the shirts they create.",
    "thumbnail_url": "https://images.code.org/d1a4be4e76f35fb45c38b556089c1e77-tshirt.png",
    "encrypted_validation": "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\nRezWTW2yYQCS33SF9JCZyWMENw==\n",
    "start_sources": {
      "ClothesRunner.java": {
        "text": "public class ClothesRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Shirt object. Print the constructor to the console using\n     * ClassInfo.getConstructors(nameOfObject), and print the values assigned to the\n     * instance variables using the Shirt class printShirtInfo() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Shirt.java": {
        "text": "/*\n * Represents a custom shirt\n */\npublic class Shirt {\n\n  private String size;     // The size of a shirt\n  private double price;    // The price of a shirt\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ✅ Write a no-argument constructor to assign default values to the\n   * size and price instance variables.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n\n\n\n  \n\n  /*\n   * Prints the size and price of the shirt\n   */\n  public void printShirtInfo() {\n    System.out.println(\"Size: \" + size);\n    System.out.println(\"Price: \" + price);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n\n  public static String getConstructors(Object testObject) {\n    Class objectClass = testObject.getClass();\n    String className = objectClass.getSimpleName();\n    Constructor[] objectConstructors = objectClass.getDeclaredConstructors();\n    \n    ArrayList<String> constructorsList = convertToList(Arrays.toString(objectConstructors));\n\n    String heading = \"\\n------------------------------\\n\";\n    String result = className + \" Constructors \" + heading;\n\n    for (String current : constructorsList) {\n      result += current + \"\\n\";\n    }\n    \n    return result;\n  }\n\n  public static String getValue(List<String> output, String lineToFind) {\n    String outputText = \"\";\n    String valueResult = \"\";\n\n    for (int index = 0; index < output.size(); index++) {\n      String current = output.get(index);\n      \n      if (current.indexOf(lineToFind) >= 0) {\n        outputText = current;\n        valueResult = outputText.substring(lineToFind.length());\n      }\n    }\n    \n    return valueResult.trim();\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-03T19:21:17.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-03T19:21:17.792+00:00\",\"changed\":[\"cloned from \\\"CSA U2L2-L3c_2023\\\"\"],\"cloned_from\":\"CSA U2L2-L3c_2023\"},{\"changed_at\":\"2022-11-03 19:21:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:26:51 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:48:48 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:50:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:50:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:50:34 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:50:46 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:54:45 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
