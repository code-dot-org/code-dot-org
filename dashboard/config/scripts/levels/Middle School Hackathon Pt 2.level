<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-03-14T22:12:29.000Z",
  "level_num": "custom",
  "user_id": 106,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "fill": null,
      "noFill": null,
      "stroke": null,
      "noStroke": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "triangle": null,
      "text": null,
      "textSize": null,
      "background": null,
      "randomNumber_min_max": null,
      "forLoop_i_0_4": null,
      "drawSprites": null,
      "createSprite": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "var sprite = createSprite": null,
      "addImage": null,
      "changeImage": null,
      "sprite.height": null,
      "sprite.width": null,
      "sprite.position.x": null,
      "sprite.position.y": null,
      "shapeColor": null,
      "scale": null,
      "visible": null,
      "rotation": null,
      "keyDown": null,
      "keyWentDown": null,
      "keyWentUp": null,
      "mouseX": null,
      "mouseY": null
    },
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# MS Hackathon: Sprites and Interactivity\r\n\r\nYou now can **create sprites, add images, manipulate their properties, and perform simple variable arithmetic to update their values (e.g. `sprite.scale = sprite.scale + 1;`)**. You've also been introduced to conditional statements and know how to use them to get some interactive behavior with the mouse and keyboard.\r\n\r\n# Do This\r\n\r\n* Using only the tools provided to you **make something awesome!**\r\n* The likely target project here might be a **simple game** or **interactive visualization**.\r\n* You don't yet know about **groups, loops, collisions**, or more magical properties like **velocity or rotationSpeed**\r\n\r\n**These commands are not in the block palette but feel free to use**\r\n\r\n* `mySprite.mouseActive = true;` will make your sprite track mouse events\r\n* `mySprite.mouseIsOver` and `mySprite.mouseIsPressed` are booleans you can now use to sense mouse-to-sprite interactions.\r\n\r\n**To add sprites to images follow the pattern below**\r\n\r\n```\r\nvar spriteImage, sprite;\r\n\r\n//You'll need to create a preload function to load the image.\r\nfunction preload(){\t\t\t\r\n    spriteImage = loadImage(\"imageURL\");\r\n}\r\n\r\n//Create your sprite and add the image\r\nfunction setup(){\r\n    sprite = createSprite(200,200,10,10);\r\n    sprite.addImage(\"someName\", spriteImage);\r\n}\r\n\r\n//Draw your sprites.\r\nfunction draw(){\r\n\tbackground(255,255,255);\r\n\tdrawSprites();\r\n}\r\n```",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "false",
    "debugger_disabled": "false",
    "instructions": "(Click to see full instructions)",
    "show_debug_watch": "true",
    "contained_level_names": null
  },
  "published": true,
  "notes": ""
}]]></config>
  <blocks/>
</Gamelab>