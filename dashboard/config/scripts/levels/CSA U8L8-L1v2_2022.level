<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<Double> dallas = FileReader.getDoubleData(\"dallastemps.txt\");\n    ArrayList<Double> seattle = FileReader.getDoubleData(\"seattletemps.txt\");\n    \n    CityTemps dallasTemps = new CityTemps(dallas);\n    \n    int numDays = dallasTemps.compareTemps(seattle);\n    System.out.println(\"Dallas had \" + numDays + \" days warmer than Seattle in January 2020.\");\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "CityTemps.java": {
        "text": "import java.util.ArrayList;\n\npublic class CityTemps {\n\n  private ArrayList<Double> cityTemps;\n\n  public CityTemps(ArrayList<Double> cityTemps) {\n    this.cityTemps = cityTemps;\n  }\n\n  public int compareTemps(ArrayList<Double> otherCity) {\n    int count = 0;\n\n    for (int index = 0; index < cityTemps.size(); index++) {\n      Double currentCityTemp = cityTemps.get(index);\n      Double otherCityTemp = otherCity.get(index);\n\n      if (currentCityTemp > otherCityTemp) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n  \n}",
        "isVisible": true
      },
      "dallastemps.txt": {
        "text": "47.3\n54.5\n51.1\n47.3\n51.3\n50.4\n49.9\n49.7\n61.1\n67.4\n42.7\n38.8\n47.9\n58.6\n67.6\n54.9\n49.7\n55.8\n42.8\n45.3\n43.8\n41.8\n47.2\n48.2\n49.6\n57.0\n50.9\n51.7\n41.5\n41.7\n45.5",
        "isVisible": true
      },
      "seattletemps.txt": {
        "text": "51.0\n45.1\n48.1\n47.0\n44.3\n44.8\n50.9\n45.2\n35.9\n38.2\n44.2\n41.4\n35.3\n31.0\n35.0\n41.1\n37.3\n41.7\n48.2\n50.2\n48.7\n45.3\n50.9\n50.9\n48.1\n49.4\n47.6\n46.0\n47.9\n46.3\n51.3",
        "isVisible": true
      }
    },
    "contained_level_names": [
      "CSA U8L9-L1 Predict_2022"
    ],
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-18T19:45:09.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-18T19:45:09.501+00:00\",\"changed\":[\"cloned from \\\"CSA U8L6-L1v2_2022\\\"\"],\"cloned_from\":\"CSA U8L6-L1v2_2022\"},{\"changed_at\":\"2022-04-18 19:45:11 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 22:57:47 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 23:02:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 23:04:25 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 23:04:46 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
