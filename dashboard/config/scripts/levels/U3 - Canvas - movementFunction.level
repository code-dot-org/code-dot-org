<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-11-21T22:52:20.000Z",
  "level_num": "custom",
  "user_id": 106,
  "properties": {
    "skin": "applab",
    "edit_code": true,
    "embed": "false",
    "instructions": "Write a function that takes the movement of the mouse as input and generates a line width as output. (Click to see full instructions)",
    "markdown_instructions": "# Adjusting Circle Size\r\n\r\nAmong the other pieces of information contained in each `event` parameter are the values `movementX` and `movementY`. These numbers tell us how far (in pixels) the mouse moved since the last mouse event was triggered, and can be used to measure the speed of the mouse. ** If the movement is large, the mouse is moving fast; if the movement is small, the mouse is moving slowly.**\r\n\r\nLet's use the mouse movement speed to make a cool effect. When we draw with a real pen or brush, the line usually gets thin when making quick strokes and is wider and darker when making slower ones. We can generate this effect by **using `movementX` and `movementY` to calculate the radius for the circle.**  Since this calculation might be a little tricky, a smart thing to do would be to **write a function** that takes `movementX` and `movementY` as parameters and **returns** a value that should be used as the radius.\r\n\r\n<img src=\"https://images.code.org/b9dc4c20d44af7b4e7725b71cd35fa2b-image-1448313734191.21.43 PM.png\" style=\"width: 350px; float: right; border: solid 1px black\">\r\n\r\nThere are several ways to do this. One possible way to write the function is provided on the right, which uses some arithmetic tricks. The function to the right is actually only three lines of code but is heavily commented to explain what it's doing. It makes use of a function called **`Math.abs` which returns the absolute value of a number.** Feel free to use this or another method of converting `movementX` and `movementY` into a radius.\r\n\r\n<details> <summary><strong>What is Absolute Value?</strong> [click to expand]</summary>\r\n`Math.abs` takes a number as input and returns the positive version of this number. \r\n\r\nIn math, absolute value is often written with this | | symbol. So |10| is the absolute value of ten and |-10| is the absolute value of negative ten. Both evaluate to 10.\r\n\r\nIn Javascript we use `Math.abs` instead of | |.  `Math.abs(-10)` and `Math.abs(10)` both evaluate to <strong>10</strong>.\r\n</details> <br>\r\n\r\n# Do This:\r\n\r\n* **Write a function like the one above** that accepts two parameters (one each for `movementX` and `movementY`) and returns a radius. A higher speed should lead to a smaller radius.\r\n* **Inside your `mousemove` event handler,** set the radius of the circle to the value returned by your function, where the function takes `event.movementX` and `event.movementY` as input.  For example, if using the function above, your code would be: <br>![](https://images.code.org/94a379336084954ba2ab27e80b17dee3-image-1448314255797.30.22 PM.png)\r\n* Run your program and confirm that **when you draw, the speed of the mouse affects the radius of the dots**. The effect should look something like what's below \r\n\r\n![](https://images.code.org/ee83d18f04e4d9d486428273b7321f9f-image-1448394071473.gif)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1.0",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "project_template_level_name": "U3 - Canvas - Template",
    "encrypted_examples": "4/vdXiAMqHWBgPhb2G5VOQSZ7hawVFYgEHaG3KvAi3JipludeXgnQ1n7vwqr\nM4Bk\n"
  }
}]]></config>
  <blocks/>
</Applab>
