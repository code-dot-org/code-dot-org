<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-10-15T01:16:07.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": {
        "params": [
          "\"id\"",
          "\"click\"",
          "function(){\n\n}"
        ]
      },
      "button": null,
      "textLabel": {
        "params": [
          "\"id\"",
          "\"text\""
        ]
      },
      "image": null,
      "playSound": null,
      "setPosition": null,
      "setScreen": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "randomNumber_min_max": null,
      "console.log": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "declareAssign_x": null,
      "assign_x": null
    },
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# What happened in the last level?\r\n\r\nIn the last level we saw the difference between a var name `foo` and one names `Foo`.  Variable names are ** case sensitive** meaning that capital letters are different than lower case letters. \r\n\r\n# Debugging Variables: Part 3\r\n\r\nSometimes you have lots of console log statments going on at once and its very difficult to tell which part of the code is printing each message. One strategy to deal with this is to name messages by putting some output in front of them. \r\n\r\n# Do This\r\n\r\n* **Run the program**. Check out what happens when you click Button 1 in comparison to the other buttons.\r\n\r\n* **Add `console.log()` statements** for the other buttons to identify where the value is coming from.",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "start_html": "<div xmlns=\"http://www.w3.org/1999/xhtml\" id=\"designModeViz\" style=\"width: 320px; height: 450px; display: none;\">\r\n  <div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0;\">\r\n    <button id=\"button1\" style=\"padding: 0px; margin: 0px; height: 30px; width: 80px; font-size: 14px; color: rgb(255, 255, 255); position: absolute; left: 110px; top: 25px; background-color: rgb(26, 188, 156);\">Button 1</button>\r\n    <button id=\"button2\" style=\"padding: 0px; margin: 0px; height: 30px; width: 80px; font-size: 14px; color: rgb(255, 255, 255); position: absolute; left: 110px; top: 80px; background-color: rgb(26, 188, 156);\">Button 2</button>\r\n    <button id=\"button3\" style=\"padding: 0px; margin: 0px; height: 30px; width: 80px; font-size: 14px; color: rgb(255, 255, 255); position: absolute; left: 110px; top: 140px; background-color: rgb(26, 188, 156);\">Button 3</button>\r\n    <button id=\"button4\" style=\"padding: 0px; margin: 0px; height: 30px; width: 80px; font-size: 14px; color: rgb(255, 255, 255); position: absolute; left: 110px; top: 200px; background-color: rgb(26, 188, 156);\">Button 4</button>\r\n    <button id=\"button5\" style=\"padding: 0px; margin: 0px; height: 30px; width: 80px; font-size: 14px; color: rgb(255, 255, 255); position: absolute; left: 110px; top: 265px; background-color: rgb(26, 188, 156);\">Button 5</button>\r\n  </div>\r\n</div>",
    "start_blocks": "onEvent(\"button1\", \"click\", function() {\r\n  var button1Value = 10;\r\n  console.log(\"Button 1's value is:\");\r\n  console.log(button1Value);\r\n});\r\nonEvent(\"button2\", \"click\", function() {\r\n  var button2Value = 56;\r\n  console.log(button2Value);\r\n});\r\nonEvent(\"button3\", \"click\", function() {\r\n  var button3Value = 1;\r\n  console.log(button3Value);\r\n});\r\nonEvent(\"button4\", \"click\", function() {\r\n  var button4Value = 5;\r\n  console.log(button4Value);\r\n});\r\nonEvent(\"button5\", \"click\", function() {\r\n  var button5Value = 22;\r\n  console.log(button5Value);\r\n});",
    "instructions": "Identify the values printing in the terminal with console.log statements. (Click to see full instructions)"
  }
}]]></config>
  <blocks/>
</Applab>