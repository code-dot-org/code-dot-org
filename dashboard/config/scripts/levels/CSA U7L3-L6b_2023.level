<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-04-11T14:01:52.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "An online shopping platform wants to manage its products, including adding new products and searching for existing products.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">search()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ShoppingPlatform</code> class. The method should take a product name and ID as parameters.\r\n\r\n‚úÖ **TO DO #2:** Write another <code style=\"background-color: #ececec; color: black; font-weight: bold;\">search()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ShoppingPlatform</code> class. The method should take a product ID as a parameter.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ProductRunner</code> class, call both versions of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">search()</code> method and print the results.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with writing overloaded methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Online Shopping",
    "bubble_choice_description": "An online shopping platform wants to manage its products, including adding new products and updating existing products.",
    "thumbnail_url": "https://images.code.org/9c5fbc305418179acffe9cdd5f8ff812-online-shopping.png",
    "reference_links": [
      "/courses/csa-2023/guides/overloaded-methods"
    ],
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nFGgHG2bHX40L/cUkIpU=\n",
    "start_sources": {
      "ProductRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class ProductRunner {\n  public static void main(String[] args) {\n    ArrayList<Product> products = new ArrayList<Product>();\n    products.add(new Product(\"1\", \"AP CSA textbook\"));\n    products.add(new Product(\"20\", \"running shoes\"));\n    products.add(new Product(\"10\", \"smartphone\"));\n\n    // Create a ShoppingPlatform object\n    ShoppingPlatform myPlatform = new ShoppingPlatform(products);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call both versions of the search() method and print the Product objects\n     * -----------------------------------------------------------------------------\n     */\n    \n \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ShoppingPlatform.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a video platform\n */\npublic class ShoppingPlatform {\n  private ArrayList<Product> products; // list of products\n\n  public ShoppingPlatform(ArrayList<Product> products) {\n    this.products = products;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the search() method. The method should take a product name and ID\n   * as parameters, and return a Product. If no product is found, return null.\n   * -----------------------------------------------------------------------------\n   */\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the search() method. The method should take a product ID\n   * as parameter, and return a Product. If no product is found, return null.\n   * -----------------------------------------------------------------------------\n   */\n\n}\n",
        "isVisible": true,
        "tabOrder": 1
      },
      "Product.java": {
        "text": "/*\n * Represents a Product\n */\npublic class Product {\n  private String ID;   // ID\n  private String name; // name\n\n  public Product(String ID, String name) {\n    this.ID = ID;\n    this.name = name;\n  }\n\n  /*\n   * Returns the ID\n   */\n  public String getID() {\n    return ID;\n  }\n\n  /*\n   * Returns the name\n   */\n  public String getName() {\n    return name;\n  }\n  \n  /*\n   * Returns a String containing the products's information\n   */\n  public String toString() {\n    return \"ID: \" + ID + \" name: \" + name;\n  }\n\n}\n",
        "isVisible": true,
        "tabOrder": 2
      }
    }
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-11T14:01:52.706+00:00\",\"changed\":[\"cloned from \\\"CSA U7L3-L6a_2023\\\"\"],\"cloned_from\":\"CSA U7L3-L6a_2023\"},{\"changed_at\":\"2023-04-11 14:01:54 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 15:04:40 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 15:23:50 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-06 20:35:22 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:54:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:55:20 +0000\",\"changed\":[\"start_sources\",\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:55:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:57:18 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:57:22 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:57:44 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:58:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:58:56 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:59:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 20:59:51 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 21:00:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 21:00:07 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 21:00:09 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 21:00:13 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-06 21:16:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-09 17:53:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"}]"
}]]></config>
</Javalab>
