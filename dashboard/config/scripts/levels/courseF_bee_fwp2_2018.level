<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2018-02-08T20:04:38.000Z",
  "level_num": "custom",
  "user_id": 6,
  "properties": {
    "skin": "bee",
    "step_mode": "1",
    "is_k1": "false",
    "start_direction": "1",
    "flower_type": "redWithNectar",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,1,1,1,1,1,1,0],[0,2,1,\"P\",\"P\",\"P\",1,0],[0,1,1,1,1,1,1,0],[0,1,1,1,1,1,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "initial_dirt": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,98,1,98,4,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "final_dirt": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "skip_instructions_popup": "false",
    "ideal": "8",
    "disable_param_editing": "false",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "true",
    "use_contract_editor": "false",
    "never_autoplay_video": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "fast_get_nectar_animation": "true",
    "serialized_maze": "[[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":2},{\"tileType\":1,\"featureType\":2,\"value\":1,\"cloudType\":2,\"range\":1},{\"tileType\":1,\"featureType\":2,\"value\":1,\"cloudType\":2,\"range\":1},{\"tileType\":1,\"featureType\":2,\"value\":1,\"cloudType\":2,\"range\":1},{\"tileType\":1,\"featureType\":2,\"value\":1,\"cloudType\":2,\"range\":1},{\"tileType\":1,\"featureType\":2,\"value\":1,\"cloudType\":2,\"range\":1},{\"tileType\":1,\"featureType\":2,\"value\":1,\"cloudType\":2,\"range\":1},{\"tileType\":1,\"featureType\":2,\"value\":1,\"cloudType\":2,\"range\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}]]",
    "markdown_instructions": "Here's some code that solves the last puzzle.  \r\nLet's pull it into a function, then call the function to check this row for nectar.  \r\n___\r\nThis may seem like a strange step now, but it will be really helpful soon!",
    "instructions_important": "false",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"To turn this into a function, simply drag the code into the existing function block.  \\n\\n\\n![](https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif)\",\"hint_id\":\"courseF_bee_fwp2_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/7955a3d2befc6a44ee792f89a7e33fa8/courseF_bee_fwp2.mp3\"},{\"hint_class\":\"content\",\"hint_markdown\":\"Don't forget to connect the `rowOfNectar` block to `when run` to call the function that you just built.\",\"hint_id\":\"courseF_bee_fwp2_b\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/62306c617fa84ee565c3dafc4c21da2f/courseF_bee_fwp2.mp3\"}]",
    "instructions": "Pull this code into a function, then call the function to check this row for nectar.",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "shape_shift": "false",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"courseF_bee_fwp2_a\",\r\n  \"callout_text\": \"The block that calls your function lives in here.\",\r\n  \"element_id\": \"[id=':4.label']\",\r\n  \"on\": \"\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": false,\r\n    \"dropletPaletteCategory\": \"\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left bottom\",\r\n    \"at\": \"right center\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-06-20 20:46:02 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":302,\"changed_by_email\":\"mara.downing@code.org\"},{\"changed_at\":\"2017-10-14 00:46:50 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-10-14 00:47:33 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"callout_json\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-10-14 00:48:25 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-10-14 00:50:44 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"use_modal_function_editor\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-10-14 00:51:53 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"use_modal_function_editor\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2018-02-02 01:01:15 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"use_modal_function_editor\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"}]"
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="controls_repeat_ext" inline="true">
              <value name="TIMES">
                <block type="math_number">
                  <title name="NUM">7</title>
                </block>
              </value>
              <statement name="DO">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="bee_ifFlower">
                      <title name="LOC">atFlower</title>
                      <statement name="DO">
                        <block type="maze_nectar"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </next>
        </block>
        <block type="procedures_defnoreturn" editable="false">
          <mutation/>
          <title name="NAME">rowOfNectar</title>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Actions">
          <block type="maze_moveForward" limit="1"/>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="maze_nectar" limit="1"/>
        </category>
        <category name="Loops">
          <block type="controls_repeat_ext" inline="true">
            <value name="TIMES">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
          </block>
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </category>
        <category name="Conditionals">
          <block type="bee_ifFlower">
            <title name="LOC">atFlower</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE">
          <block type="procedures_callnoreturn">
            <mutation name="rowOfNectar"/>
          </block>
          <block type="procedures_defnoreturn" uservisible="false">
            <mutation/>
            <title name="NAME">rowOfNectar</title>
          </block>
        </category>
        <category name="Math">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
          <block type="math_arithmetic" inline="true">
            <title name="OP">ADD</title>
            <value name="A">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
            <value name="B">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
          </block>
        </category>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="procedures_callnoreturn">
              <mutation name="rowOfNectar"/>
            </block>
          </next>
        </block>
        <block type="procedures_defnoreturn">
          <mutation/>
          <title name="NAME">rowOfNectar</title>
          <statement name="STACK">
            <block type="controls_repeat_ext" inline="true">
              <value name="TIMES">
                <block type="math_number">
                  <title name="NUM">7</title>
                </block>
              </value>
              <statement name="DO">
                <block type="maze_moveForward">
                  <next>
                    <block type="bee_ifFlower">
                      <title name="LOC">atFlower</title>
                      <statement name="DO">
                        <block type="maze_nectar"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </statement>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>