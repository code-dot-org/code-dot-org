<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2018-01-11T17:12:44.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "setScreen": null,
      "rgb": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "declareAssign_list_abd": null,
      "accessListItem": null,
      "listLength": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "comment": null,
      "on": null,
      "off": null,
      "toggle": null,
      "blink": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.start": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "buzzer.off": null,
      "soundSensor.start": null,
      "lightSensor.start": null
    },
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# Bug Shaker\r\n\r\nThis program shakes bugs around when the board is shaken, but it's only working for one bug.\r\n\r\n# Do This\r\n* Change the `moveBugs()` function so that it calls `moveBug(color)` on every bug color.\r\n  * (Hint: Look at the `detectHits()` function for clues how to do this.)",
    "instructions_important": "false",
    "submittable": "false",
    "start_blocks": "// create the array of bug colors\r\nvar bugArray = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"violet\", \"gray\"];\r\n// detect when the board is shaken\r\nonBoardEvent(accelerometer, \"tap\", function() {\r\n  moveBugs();\r\n  detectHits();\r\n});\r\n// move all the bugs randomly\r\n// CHANGE THIS FUNCTION\r\nfunction moveBugs() {\r\n  moveBug(\"red\");\r\n}\r\n// detect whether any bugs are hitting the flag,\r\n// and if so, change the flag color\r\nfunction detectHits() {\r\n  for (var i=0; i<bugArray.length; i++) {\r\n    if (detectHit(bugArray[i])) {\r\n      setProperty(\"flag\", \"icon-color\" , bugArray[i]);\r\n    }\r\n  }\r\n}\r\n//  move the bug of the given color\r\nfunction moveBug(color) {\r\n  setProperty(color, \"x\", getProperty(color, \"x\") + randomNumber(-10,10));\r\n  setProperty(color, \"y\", getProperty(color, \"y\") + randomNumber(-10,10));\r\n}\r\n//detect whether a bug is hitting the flag\r\nfunction detectHit(color) {\r\n  return (Math.abs(getProperty(\"flag\",\"x\") - getProperty(color, \"x\")) < 50) && (Math.abs(getProperty(\"flag\",\"y\") - getProperty(color, \"y\")) < 50);\r\n}\r\n\r\n\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern withCrosshair\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 451px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0;\"><img data-canonical-image-url=\"icon://fa-flag\" data-object-fit=\"fill\" id=\"flag\" style=\"position: absolute; left: 125px; top: 185px; margin: 0px; width: 50px; height: 50px;\"><img data-canonical-image-url=\"icon://fa-bug\" data-object-fit=\"contain\" id=\"red\" style=\"height: 50px; width: 50px; position: absolute; left: 255px; top: 200px; margin: 0px;\" data-icon-color=\"red\"><img data-canonical-image-url=\"icon://fa-bug\" data-object-fit=\"contain\" id=\"blue\" style=\"height: 50px; width: 50px; position: absolute; left: 15px; top: 190px; margin: 0px;\" data-icon-color=\"blue\"><img data-canonical-image-url=\"icon://fa-bug\" data-object-fit=\"contain\" id=\"green\" style=\"height: 50px; width: 50px; position: absolute; left: 130px; top: 320px; margin: 0px;\" data-icon-color=\"green\"><img data-canonical-image-url=\"icon://fa-bug\" data-object-fit=\"contain\" id=\"violet\" style=\"height: 50px; width: 50px; position: absolute; left: 130px; top: 50px; margin: 0px;\" data-icon-color=\"violet\"><img data-canonical-image-url=\"icon://fa-bug\" data-object-fit=\"contain\" id=\"yellow\" style=\"height: 50px; width: 50px; position: absolute; left: 215px; top: 105px; margin: 0px;\" data-icon-color=\"yellow\"><img data-canonical-image-url=\"icon://fa-bug\" data-object-fit=\"contain\" id=\"orange\" style=\"height: 50px; width: 50px; position: absolute; left: 45px; top: 105px; margin: 0px;\" data-icon-color=\"orange\"><img data-canonical-image-url=\"icon://fa-bug\" data-object-fit=\"contain\" id=\"purple\" style=\"height: 50px; width: 50px; position: absolute; left: 225px; top: 290px; margin: 0px;\" data-icon-color=\"purple\"><img data-canonical-image-url=\"icon://fa-bug\" data-object-fit=\"contain\" id=\"gray\" style=\"height: 50px; width: 50px; position: absolute; left: 45px; top: 280px; margin: 0px;\" data-icon-color=\"gray\"></div></div>",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "true",
    "encrypted_examples": "r4bJpe9kb2Wtbxe1znV4vG5q/6eMM8MuerD/jeA7g/VHtflK/Qej0oMcISaT\nHlq2S+PIeqxByR7l1VnGdIv/EA==\n",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2018-01-11 17:18:46 +0000\",\"changed\":[\"notes\",\"code_functions\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-01-11 17:19:52 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"start_blocks\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-02-01 17:52:36 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-03-16 19:31:32 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\"],\"changed_by_id\":1,\"changed_by_email\":\"josh@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>