<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:36.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Correct the error in maxVal so that it correctly reports the maximum value.  (Click to see full instructions)",
    "markdown_instructions": "# Debugging and Multiple Return Statements\r\n\r\n**Having multiple `return` statements in a program can lead to tricky situations**. You may use multiple return statements, but it makes it easier to introduce logical errors into your program. We're going to look at some examples of functions with return values that include logical errors and debug them. The goal is to **recognize common errors with return values now so you can avoid them when writing your own programs**.\r\n\r\nThere is a logical error somewhere in the version of `maxVal` you are about to see which uses multiple return statements. As a result, the function works correctly for some inputs but not all. You'll need to inspect the code to understand what the issue is and make changes accordingly. In particular, look closely for conditions that are *not* currently handled by the program.\r\n\r\n# Do This:\r\n\r\n* **Run the program** and identify the errors generated in the output.\r\n* **Inspect the logic of `maxVal`** to identify the logical error.\r\n* **Correct the logical error** so that the function returns the correct value for all inputs.",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_blocks": "console.log(\"The maximum of 2 and 3 is \" + maxVal(2,3));\r\nconsole.log(\"The maximum of 5 and 1 is \" + maxVal(5,1));\r\nconsole.log(\"The maximum of 8 and 8 is \" + maxVal(8,8));\r\n\r\nfunction maxVal(num1, num2){\r\n  if (num1 > num2) {\r\n    return num1;\r\n  }\r\n  else if (num1 < num2) {\r\n    return num2;\r\n  }\r\n}",
    "encrypted_examples": "LI5cWH5JzxxIpV7R9ZrAET+Q9yAI1hTI0Tmp84Ct6grKTvEet2iNAfR+y6gM\nMWn3\n",
    "instructions_important": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>