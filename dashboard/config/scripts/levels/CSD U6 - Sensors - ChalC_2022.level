<Applab>
  <config><![CDATA[{
  "properties": {
    "skin": "applab",
    "code_functions": {
      "soundSensor.value": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "onEvent": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "setProperty": null,
      "getProperty": null,
      "getText": null,
      "setText": null,
      "ifBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "randomNumber_min_max": null,
      "setScreen": null,
      "on": null,
      "off": null,
      "toggle": null,
      "blink": null,
      "pulse": null,
      "color": null,
      "intensity": null,
      "buzzer.frequency": null,
      "onBoardEvent": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions_important": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "validation_enabled": "true",
    "submittable": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "true",
    "long_instructions": "# Volume Meter Version 2\r\n\r\nThis app is the same as the \"Volume Meter\" practice level, which displays how loud or quiet your environment is. It uses a button that changes height to react to the sound in the room - the louder the sound, the taller the button. \r\n\r\nHowever, this version of the app should also react to how loud or quiet the room is. The button itself and the background should also react based on the volume in the room - if it is too loud, the app gives a warning by changing colors.\r\n\r\n## Do This\r\n\r\n- Add a [`soundSensor.setScale()`(#f78183)](/docs/applab/soundSensor.setScale/) block to set the range of values from 30-400\r\n- Add an [`onBoardEvent()`(#f78183)](/docs/applab/onBoardEvent/) block to detect when the `soundSensor` has `data`\r\n- Inside the [`onBoardEvent()`(#f78183)](/docs/applab/onBoardEvent/) block:\r\n\t- Use [`setProperty()`(#fff176)](/docs/applab/setProperty/) to update the height of the button to the value of the `soundSensor`\r\n    - Use an [`if statement`(#64B5F6)](/docs/applab/ifBlock/) to detect if the sound sensor is greater than 200. If it is:\r\n    \t- Update the color of the volume button to red\r\n        - Update the background color of the screen to black\r\n    - Use another [`if statement`(#64B5F6)](/docs/applab/ifBlock/) to detect if the sound sensor is less than 200. If it is:\r\n    \t- Update the color of the volume button to blue\r\n        - Update the background color of the screen to white\r\n\r\n**Run The App!** As you speak or make noise near the circuit playground, the app should react in real time!",
    "parent_level_id": 20595,
    "name_suffix": "_2021",
    "mini_rubric": "false",
    "text_mode_at_start": "false",
    "encrypted": "false",
    "libraries_enabled": "false",
    "widget_mode": "false",
    "ai_enabled": "false",
    "reference_links": [
      "/docs/concepts/maker-toolkit/analog-sensors/",
      "/docs/concepts/maker-toolkit/changing-sensor-scale/",
      "/docs/concepts/maker-toolkit/board-events/",
      "/docs/concepts/maker-toolkit/data-and-change-events/"
    ],
    "display_name": "Volume Meter Version 2",
    "thumbnail_url": "https://dancodedotorg.github.io/CSD-U6-Images/L11/challenge/C.png",
    "preload_asset_list": null,
    "encrypted_examples": [

    ],
    "bubble_choice_description": "Use the sound sensor to create an interactive volume meter that warns the user if the volume gets too loud",
    "start_blocks": "//Use a soundSensor.setScale block to set the range of values from 30-400\r\n\r\n//Add code for an onBoardEvent() block to detect when the soundSensor has data\r\n\r\n//Add code for a setProperty() to update the height of the button to the value of the soundSensor\r\n\r\n//Add code for an if statement to detect if the sound sensor is greater than 200.\r\n//If it is: update the color of the button and background color of the app\r\n\r\n//Add code for another if statement to detect if the sound sensor is less than 200.\r\n//If it is: update the color of the button and background color of the app",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\" data-theme=\"classic\"><button id=\"volumeButton\" style=\"padding: 0px; margin: 0px; width: 275px; font-size: 23px; color: rgb(255, 255, 255); background-color: rgb(23, 0, 255); position: absolute; left: 20px; top: 5px; height: 30px; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\">Volume Meter!</button></div></div>"
  },
  "game_id": 41,
  "published": true,
  "created_at": "2022-02-15T17:31:41.000Z",
  "level_num": "custom",
  "user_id": 1,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2022-02-15T17:31:41.676+00:00\",\"changed\":[\"cloned from \\\"CSD U6 - Sensors - PE_2022\\\"\"],\"cloned_from\":\"CSD U6 - Sensors - PE_2022\"},{\"changed_at\":\"2022-02-15 17:32:02 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"display_name\",\"thumbnail_url\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-03-08 16:55:28 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"display_name\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2022-03-08 16:56:09 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>