<Studio>
  <config><![CDATA[{
  "game_id": 33,
  "created_at": "2017-08-02T20:36:53.000Z",
  "level_num": "custom",
  "user_id": 156,
  "properties": {
    "skin": "iceage",
    "video_key": "iceage_intro",
    "ideal": "2",
    "instructions_important": "true",
    "scale": "{\"snapRadius\":2}",
    "goal": "{}",
    "background": "icy5",
    "timeout_after_when_run": "true",
    "first_sprite_index": "1",
    "success_condition": "function successCondition() {\r\n\t      return Studio.allWhenRunBlocksComplete() && Studio.sayComplete > 0;\r\n\t    }",
    "instructions": "Help Sid say \"Hello!\" by dragging the `actor 1 say` block out and connecting it to the bottom of the `when run` event.",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"playlab_drag_say_a\",\r\n  \"callout_text\": \"Drag the `actor 1 say` block here and type \\\"Hello!\\\"\",\r\n  \"element_id\": \"[block-id='2']\",\r\n  \"on\": \"\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": false,\r\n    \"dropletPaletteCategory\": \"\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"top left\",\r\n    \"at\": \"bottom left\",\r\n    \"adjust\": {\r\n     \"x\": 22,\r\n     \"y\": 4\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "maze": "[[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":16},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":16,\"size\":0.005},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}]]",
    "embed": "false",
    "markdown_instructions": "Sid (actor 1) wants to gather everyone for a new adventure. Can you help him say \"Hello!\" by dragging the `actor 1 say` block out and connecting it to the bottom of the `when run` event?   \r\n\r\nDon't forget to type \"Hello!\" inside!",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"You only need to add one block to solve this puzzle.  Drag the `actor 1 say` block out from the toolbar and connect it to the `when run` event block that is already in the workspace. Next, type \\\"Hello!\\\" inside.\",\"hint_id\":\"iceage_hello1_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/6d26a4aeaa0a3d4ef13e6c482aa2afd8/courseF_IceAge_1.mp3\"}]",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "true",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "disable_sharing": "false",
    "coordinate_grid_background": "false",
    "edge_collisions": "false",
    "projectile_collisions": "false",
    "allow_sprites_outside_playspace": "false",
    "sprites_hidden_to_start": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-08-02 19:42:49 +0000\",\"changed\":[\"notes\",\"ideal\",\"instructions_important\",\"required_blocks\",\"start_blocks\",\"timeout_after_when_run\",\"first_sprite_index\",\"success_condition\",\"toolbox_blocks\",\"instructions\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-08-02 21:04:42 +0000\",\"changed\":[\"required_blocks\",\"start_blocks\",\"toolbox_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-08-02 21:06:54 +0000\",\"changed\":[\"required_blocks\",\"start_blocks\",\"toolbox_blocks\",\"instructions\",\"markdown_instructions\",\"authored_hints\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-08-02 21:07:58 +0000\",\"changed\":[\"required_blocks\",\"start_blocks\",\"toolbox_blocks\",\"callout_json\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-08-02 21:09:44 +0000\",\"changed\":[],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-08-02 21:09:46 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-08-02 21:11:07 +0000\",\"changed\":[\"required_blocks\",\"start_blocks\",\"toolbox_blocks\",\"callout_json\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-08-02 21:11:55 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" deletable="false" x="20" y="20"/>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml id="toolbox" style="display: none;">
        <block type="studio_saySprite"/>
      </xml>
    </toolbox_blocks>
    <required_blocks>
      <xml>
        <block type="studio_saySprite">
          <title name="TEXT">???</title>
        </block>
      </xml>
    </required_blocks>
    <solution_blocks>
      <xml>
        <block type="when_run">
          <next>
            <block type="studio_saySprite">
              <title name="SPRITE">0</title>
              <title name="TEXT">Hello!</title>
            </block>
          </next>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Studio>