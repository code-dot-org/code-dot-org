<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-11-13T02:23:50.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Make the search function return the index of the search value in the array. (Click to see full instructions)",
    "markdown_instructions": "# Search with Return Value of Index\r\n\r\nThe search function you were working on before is back. We are going to try a new challenge. **Instead of returning true or false, return the index at which the value was found.**  \r\n\r\n**What if the value doesn't exist?** You should return -1.  The reason for returning -1 is that when you write a function that returns a value it's expected that it will return one type of data.  So if we're returning a number for the index, we should also return a number that indicates it wasn't found. Since -1 (or any negative number) is not a possible index for an array, we can use -1 to indicate that whatever we're looking for wasn't found.\r\n\r\n# Do This\r\n\r\n* **Update the function search(list, val) to return the index at which the value was found.** If the value is not found return -1. (**Note:** If the value appears more than once you can return any of the indexes at which it appears.)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_blocks": "var bigArray = [randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10),randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10), randomNumber(1,10)];\r\n\r\nconsole.log(\"The bigArray contains the number 5: \"+ search(bigArray, 5));\r\n\r\nfunction search(list, searchValue){\r\n  var hasElement = false;\r\n  for (var i = 0; i < list.length; i++) {\r\n  \tif (list[i] == searchValue) {\r\n       hasElement =true;\r\n  \t}\r\n  }\r\n  return hasElement;\r\n}"
  }
}]]></config>
  <blocks/>
</Applab>