<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:35.000Z",
  "level_num": "custom",
  "user_id": 112,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "write": null,
      "setScreen": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "lessThanOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "declareAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "instructions": "Update the genre and rating if statements to give only one movie suggestion at a time. (Click to see full instructions)",
    "markdown_instructions": "# AND Operator in Movie Bot\r\n\r\nOn the last level you may have noticed that if you typed in a question like \"What is an R rated comedy movie?\" It gives two movie suggestions! It would make more sense for it to give one suggestion.\r\n\r\nWe could use nested `if` statements to do this by nesting `if` statements about ratings inside of `if` statements about genre. However, you might be getting a sinking feeling that this could become a lot of nested `if` statements very quickly! \r\n\r\n**Instead let's use the AND operator (`&&`) to check for a genre and a rating at the same time.** \r\n\r\n<img src=\"https://images.code.org/a9307ead3b147e0a8016f2054f47f5f2-image-1446153610104.png\" style=\"width: 200px; float:right\">\r\n\r\nBe careful about the order of the `if` statements. As a general principle you want to check the most specific conditions before checking more general ones.  For example, you want to have an `if` statement that checks for rating AND genre evaluated before one that just checks for genre on its own. Having a more general `if` statement checked first might cut off or prevent more specific conditions from being reached.\r\n\r\nYou still want your app to give suggestions when just a rating or just a genre is detected, so keep this principle of ordering in mind. (Try them in the reverse order if you're interested in seeing what happens :))\r\n\r\n**Note: ** Check out the flowchart below to see the logic we are trying to add.\r\n\r\n# Do This:\r\n\r\n* **Try the question \"What is an R rated comedy movie?** to see the result.\r\n\r\n* **Update the code to give only one movie suggestion when a genre and a rating are detected in the input.**\r\n\t* Make one set of `if`, `else-if`, and `else` statements about genre and rating\r\n    * Add conditional statements to check for a comedy movie AND a rating. You could do this for all the genres but stick to one for now.\r\n\r\n* **Test out a couple sentences with your keywords** to make sure the change worked.\r\n\r\n<img src=\"https://images.code.org/e64c26fed584ddbb5e5a62e6800d5e69-image-1455816162662.png\" style=\"width: 100%\">\r\n\r\n<a href=\"https://images.code.org/e64c26fed584ddbb5e5a62e6800d5e69-image-1455816162662.png\" target=\"_blank\">Click to open in separate window.</a>",
    "examples_required": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "project_template_level_name": "U3 - Movie Bot - Template",
    "execute_palette_apis_only": "false",
    "lock_zero_param_functions": "false",
    "encrypted_examples": "qyQorz3JvfnKTCiSV6cA6e6Rgm0YQo/sfQYMpAJX5YT4/4IwAVeBnxx120jd\nwmlE\n",
    "contained_level_names": null
  },
  "published": true
}]]></config>
  <blocks/>
</Applab>