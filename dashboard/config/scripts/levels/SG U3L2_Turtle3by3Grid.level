<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2017-09-20T16:52:32.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "moveForward": {
        "params": [
          ""
        ],
        "paletteParams": [
          ""
        ]
      },
      "turnLeft": {
        "paramButtons": null,
        "params": [
          ""
        ],
        "paletteParams": [
          ""
        ]
      },
      "comment_Goals_1": {
        "goal": "Move turtle"
      },
      "comment_Goals_2": {
        "goal": "Orient turtle"
      },
      "penUp": null,
      "penDown": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "slider_speed": "0.1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"pen_functions\",\r\n  \"callout_text\": \"penUp and penDown are here now if you want to use them.\",\r\n  \"element_id\": \"#dropletCodeTextbox\",\r\n  \"on\": \"show_penup\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"turtle\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left center\",\r\n    \"at\": \"top left\",\r\n    \"adjust\": {\r\n     \"x\": 100,\r\n     \"y\": 120\r\n    }\r\n   }\r\n  }\r\n },\r\n {\r\n  \"localization_key\": \"goals_tab\",\r\n  \"callout_text\": \"drag goals out from here\",\r\n  \"element_id\": \"#dropletCodeTextbox\",\r\n  \"on\": \"show_goals\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": true,\r\n    \"dropletPaletteCategory\": \"goals\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left center\",\r\n    \"at\": \"top left\",\r\n    \"adjust\": {\r\n     \"x\": 200,\r\n     \"y\": 60\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "show_turtle_before_run": "true",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "blocks",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "true",
    "long_instructions": "# New challenge <img src=\"https://images.code.org/c15fee1f27c817a352a521c7ddcb5006-image-1436282127747.png\" style=\"float: right\">\r\n\r\nDraw a 3x3 grid to the *front* and *right* of the turtle *as efficiently* as possible.\r\n\r\nWhat does “efficient” mean? In computer science it can actually mean several different things depending on the situation. For this problem let's say that efficient means: **using the fewest turtle commands possible**\r\n\r\n**note:** From now on, the 4 turtle commands mentioned in the video will always be in toolbox.  You don't necessarily need `penUp()` and `penDown()` for this challenge, but in the future you might want to use them. ([Show me where](#triggercallout=show_penup))\r\n\r\n# Do this\r\n\r\n1. This problem presents some subtle challenges. Before you start creating the program, you might want to test your ideas on paper for faster brainstorming. Work with your partner to discuss possible solutions or strategies. Try more than one.\r\n\r\n2. Once you have a solution, **start** by identifying the subgoals and drag them from the **Goals** tab into the workspace. ([Show me where](#triggercallout=show_goals))\r\n\r\n3. Then start filling it in with turtle blocks, and **testing** it out as you go by adding a few commands, then running the program, adding a few more, run again, and so on.\r\n\r\nWhen you think you're done click `Finish` and move on.",
    "short_instructions": "Draw a 3x3 grid to the front and right of the turtle as efficiently as possible. The turtle should end at its original location, facing its original direction. (Click to see full instructions)",
    "examples_required": "false",
    "encrypted_examples": "UdvayYdSjDLGOBFxB4iJXCRJPj5C4V0KwlqKx5jOZOgGYJHgKm2i9ReCsa6L\n7N0N\n",
    "never_autoplay_video": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "droplet_tooltips_disabled": "true",
    "debugger_disabled": "true",
    "lock_zero_param_functions": "true",
    "execute_palette_apis_only": "true",
    "fail_on_lint_errors": "false",
    "log_conditions": [
      {
        "entries": [
          "[forTest]"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "Hey! You're using a programming construct - loops - we haven't (officially) learned about yet :).  Don't worry, your knowledge will come in handy later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() and turnLeft() without any loops."
      },
      {
        "entries": [
          "turnLeft:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have discovered that the turnLeft() function can accept the number of degrees to turn!  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() - which moves 25 pixels forward - and turnLeft() - which turns left 90 degrees every time."
      },
      {
        "entries": [
          "moveForward:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have discovered that the moveForward() function can accept the number of pixels to move forward!  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() - which moves 25 pixels forward - and turnLeft() - which turns left 90 degrees every time."
      },
      {
        "entries": [
          "turnRight"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have found the turnRight function.  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward() and turnLeft()."
      },
      {
        "entries": [
          "turnRight:1"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "You seem to have found the turnRight function.  Clever.  You can use this knowledge later, but for now, try to stick to the constraints of this problem: Just use a sequence of turnLeft() commands."
      },
      {
        "entries": [
          "turnLeft"
        ],
        "matchType": "exact",
        "minTimes": 15,
        "message": "It seems like you're not turning enough to to complete the 3x3 grid."
      },
      {
        "entries": [
          "moveForward"
        ],
        "matchType": "exact",
        "minTimes": 24,
        "message": "It seems like you’re not moving the turtle enough times to draw the full 3x3 grid."
      }
    ],
    "instructions_important": "false",
    "makerlab_enabled": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "teacher_markdown": "* Students will need some time to work on the 3x3 grid problem; it is more challenging than it appears at first. \r\n\r\n* Remind students to begin with the subgoals - when do they need to move the turtle and when do they need to orient the turtle.\r\n\r\n* Students will ask you if you know the least possible number of lines of code needed to draw the 3x3 grid.  Rather than giving an answer, ask student pairs to compare their solutions with other pairs. If they agree on a solution, see if you get a class consensus. \r\n\r\n* You can also ask: Can you do it with fewer commands?  If not, can you prove that it's impossible to do with fewer?\r\n\r\n* Questions like these are the kinds that programmers ask each other all the time.  And programmers usually work with each other to reach a solution. \r\n\r\n* An example of a solution is given in the teacher tab for the problem in Code Studio, but it is just an example; there are millions of ways to do the 3x3 grid.",
    "disable_procedure_autopopulate": "false",
    "palette_category_at_start": "goals",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-05-31 16:52:13 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-09-20 16:52:53 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-02 16:55:03 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-09 21:05:06 +0000\",\"changed\":[\"code_functions\",\"text_mode_at_start\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"teacher_markdown\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-19 19:33:59 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-19 19:35:38 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 18:46:08 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 18:47:57 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:00:11 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:02:35 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:03:12 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:03:59 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:04:31 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:05:20 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:06:19 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:07:36 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:08:08 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:08:39 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:09:54 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:11:57 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:12:49 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:13:30 +0000\",\"changed\":[\"code_functions\",\"callout_json\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"},{\"changed_at\":\"2017-10-20 19:14:35 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":13,\"changed_by_email\":\"baker@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>