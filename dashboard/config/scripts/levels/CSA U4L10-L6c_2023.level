<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A credit card company needs a program that checks if credit card numbers are valid. They want to use the <a href=\"https://www.investopedia.com/terms/l/luhn-algorithm.asp\" target=\"_blank\">**Luhn algorithm**</a> to check if a credit card number is valid or not.\r\n\r\nThe <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Card</code> class has an instance variable for a 1D array containing the digits of a credit card number. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">validateNumber()</code> returns <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if the 1D array contains digits of a valid credit card number and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code> if the digits are invalid.\r\n\r\n✅ **TO DO:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Company.java</code>, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">validateNumber()</code> method to return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code> if the 1D array contains digits of a valid credit card number and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code> if the digits are invalid. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">validateNumber()</code> method should:\r\n\r\n1. Get the parity bit (the remainder after dividing the length of the array by 2)\r\n\r\n2. Traverse the 1D array <code style=\"background-color: #ececec; color: black; font-weight: bold;\">digits</code> from last to first.\r\n\r\n3. If the current index mod <code style=\"background-color: #ececec; color: black; font-weight: bold;\">2</code> does not equal the parity bit, add the digit at the current index to the sum.\r\n\r\n4. Else if the digit at the current index is greater than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">4</code>, add the result of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sum + 2 * the current digit - 9</code> to the sum.\r\n\r\n5. Else add the result of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sum + 2 * the current digit</code> to the sum.\r\n\r\n6. If the remainder of dividing sum by <code style=\"background-color: #ececec; color: black; font-weight: bold;\">10</code> is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">0</code>, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code>. Otherwise, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code>.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n💡 <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ⬆️ for help with writing multi-selection statements.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">🔦 Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n\t\t<pre style=\"background-color: #333333; color: white;\">\r\nsum = 0\r\nparity = digits.length % 2\r\n&nbsp;\r\nloop from 0 to digits.length\r\n  if index % 2 != parity\r\n    sum += digits[index]\r\n  else if digits[index] > 4\r\n    sum += sum + 2 * digits[index] - 9\r\n  else\r\n    sum += sum + 2 * digits[index]\r\n&nbsp;\r\nreturn sum % 10 == 0\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Runner.java": {
        "text": "public class Runner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ instructions for the student to complete\n     * -----------------------------------------------------------------------------\n     *\n     * description of method to write\n     */\n\n    \n\n    \n    /* ---- 🔎 ADD YOUR CODE BELOW THIS LINE ---- */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "display_name": "Valid Credit Cards",
    "bubble_choice_description": "Implement your algorithm to check if a credit card number is valid.",
    "thumbnail_url": "https://images.code.org/e9c6296a626e6bbbdc0fa85dfa5b515e-credit-card.png",
    "encrypted_examples": [

    ],
    "reference_links": [
      "/courses/csa-2023/guides/multi-selection-statements"
    ],
    "video_key": "csa_multi-selection_statements"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2023-02-17T19:05:35.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2023-02-17T19:05:35.713+00:00\",\"changed\":[\"cloned from \\\"CSA U4L10-L6b_2023\\\"\"],\"cloned_from\":\"CSA U4L10-L6b_2023\"},{\"changed_at\":\"2023-02-17 19:05:37 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-10 21:31:04 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-11 18:27:25 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-15 02:31:18 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-15 02:34:12 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-15 02:49:18 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 13:46:29 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
