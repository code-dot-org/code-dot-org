<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2023-02-01T10:51:43.000Z",
  "level_num": "custom",
  "user_id": 568,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "accelerometer.getOrientation": null,
      "lightSensor.value": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "onEvent": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "setProperty": null,
      "getProperty": null,
      "getText": null,
      "setText": null,
      "ifBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "randomNumber_min_max": null,
      "setScreen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.clear": null,
      "ledScreen.display": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions_important": "false",
    "submittable": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "validation_enabled": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "microbit",
    "parent_level_id": 20562,
    "name_suffix": "_mb2022",
    "text_mode_at_start": "false",
    "long_instructions": "# Car Wheel Alignment\r\n\r\nMost cars have sensors to detect if the car is level, and will create a warning message if the car detects it is tilted slightly to the right or left. This can indicate a flat tire or that the wheels are out of alignment and the car needs to be taken to a service center.\r\n\r\nCreate an app that simulates this sensor, using the micro:bit to detect if it is level or tilted slightly to the left or right.\r\n- If the micro:bit is level, the status message should say \"Wheels are Aligned\"\r\n- If the micro:bit is tilted to the left, the status message should say \"Check left side tires\"\r\n- If the micro:bit is tilted to the right, the status message should say \"Check right side tires\"\r\n\r\n## Do This\r\n1) Create an event to continuously check the accelerometer\r\n2) Get the `roll` property of the accelerometer and store it in a variable\r\n3) If the micro:bit is tilted to the left: display \"Check left side tires\" on the screen\r\n4) If the micro:bit is tilted to the right: display \"Check right side tires\" on the screen\r\n\r\n**Run Your App!** If the micro:bit is on a level surface, the app should say \"Wheels are Aligned\". If you put the micro:bit on a tilted surface, the app should update to a different status message\r\n\r\n**Optional Extensions:**\r\n- Change the color of the text to make it appear like an error message if the circuit playground is tilted\r\n- Add an error message on the micro:bit itself",
    "mini_rubric": "false",
    "encrypted": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "display_name": "Car Wheel Alignment",
    "thumbnail_url": "https://images.code.org/7f8fca3bef40cd07285bdab6b8858b1a-mb-Challenge.png",
    "start_html": "<div id=\"designModeViz\" class=\"appModern clip-content\" tabindex=\"1\" data-radium=\"true\" style=\"width: 320px; height: 450px; display: none;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"><label style=\"margin: 0px; line-height: 1; overflow: hidden; overflow-wrap: break-word; max-width: 320px; border-style: solid; text-rendering: optimizespeed; color: rgb(77, 87, 95); background-color: rgba(0, 0, 0, 0); border-color: rgb(77, 87, 95); border-radius: 0px; border-width: 0px; font-family: &quot;Arial Black&quot;, Gadget, sans-serif; font-size: 20px; padding: 2px 15px; width: 320px; height: 80px; position: absolute; left: 2.22045e-16px; top: 125px; text-align: center;\" id=\"statusLabel\">Wheels Are Aligned</label></div></div>",
    "bubble_choice_description": "Create an app that simulates the sensor in cars and trucks that detects if the wheels are aligned and warns about flat tires",
    "start_blocks": "//1) Create an event to continuously check the accelerometer\r\n\r\n//2) Get the `roll` property of the accelerometer and store it in a variable\r\n\r\n//3) If the micro:bit is tilted to the left: display \"Check left side tires\" on the screen\r\n\r\n//4) If the micro:bit is tilted to the right: display \"Check right side tires\" on the screen",
    "encrypted_examples": "e+a8UEyim9qQVd1onbE3O+OwX/aCQCTIxxK55P+VuZy9wvB+7vm3qY7xnsjF\n5o5A5YOe7W7m1jXnwZSCI9UCEw==\n",
    "reference_links": [
      "/courses/csd-2022/guides/the-accelerometer",
      "/courses/csd-2022/guides/accelerometer-events",
      "/courses/csd-2022/guides/microbit-sensors",
      "/courses/csd-2022/guides/data-and-change-events",
      "/courses/csd-2022/guides/changing-sensor-scale",
      "/courses/csd-2022/guides/board-events",
      "/courses/csd-2022/guides/microbit-physical-input",
      "/courses/csd-2022/guides/microbit-display",
      "/courses/csd-2022/guides/microbit-overview",
      "/courses/csd-2022/guides/if-statements-2",
      "/courses/csd-2022/guides/booleans-and-comparison-operators",
      "/courses/csd-2022/guides/variables",
      "/courses/csd-2022/guides/counter-patterns-with-event",
      "/maker/setup"
    ],
    "preload_asset_list": null
  },
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2023-02-01T10:51:43.595+00:00\",\"changed\":[\"cloned from \\\"CSD U6 - Accelerometer - ChalC_2222\\\"\"],\"cloned_from\":\"CSD U6 - Accelerometer - ChalC_2222\"},{\"changed_at\":\"2023-02-10 21:06:39 +0000\",\"changed\":[\"code_functions\",\"makerlab_enabled\",\"long_instructions\",\"reference_links\",\"thumbnail_url\",\"start_blocks\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2023-03-29 22:45:40 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"},{\"changed_at\":\"2023-08-21 23:12:48 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"reference_links\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>