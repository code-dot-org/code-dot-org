<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2023-06-20T12:28:19.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Delimiters FRQ\r\nMany encoded strings contain _delimiters_. A delimiter is a non-empty string that acts as a boundary between different parts of a larger string. The delimiters involved in this question occur in pairs that must be _balanced_, with each pair having an open delimiter and a close delimiter. There will be only one type of delimiter for each string. The following are examples of delimiters.\r\n\r\n<ins>Example 1:</ins> \r\nExpressions in mathematics use open parentheses  \"(\"  and close parentheses  \")\"  as delimiters. For each open parenthesis, there must be a matching close parenthesis. \r\n* (x + y) * 5 is a valid mathematical expression. \r\n* (x + (y) is NOT a valid mathematical expression because there are more open delimiters than close delimiters.\r\n\r\nIn this question, you will write two methods in the following `Delimiters` class.\r\n\r\n__Part A)__ A string containing text and possibly delimiters has been split into _tokens_ and stored in\r\n`String[] tokens`. Each token is either an open delimiter, a close delimiter, or a substring that is not a\r\ndelimiter. You will write the method `getDelimitersList`, which returns an `ArrayList`\r\ncontaining all the open and close delimiters found in `tokens` in their original order.\r\nThe following examples show the contents of an `ArrayList` returned by `getDelimitersList` for\r\ndifferent open and close delimiters and different `tokens` arrays. \r\n\r\n<br>\r\n\r\n__Part B)__ Write the method `isBalanced`, which returns `true` when the delimiters are balanced and returns\r\n`false` otherwise. The delimiters are balanced when both of the following conditions are satisfied;\r\notherwise, they are not balanced.\r\n1. When traversing the `ArrayList` from the first element to the last element, there is no point at\r\nwhich there are more close delimiters than open delimiters at or before that point.\r\n2. The total number of open delimiters is equal to the total number of close delimiters.\r\n\r\n\r\nConsider a `Delimiters` object for which `openDel` is \"\\<sup>\" and `closeDel` is \"\\</sup>\".\r\nThe examples below show different `ArrayList` objects that could be returned by calls to\r\n`getDelimitersList` and the value that would be returned by a call to `isBalanced`. \r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "encrypted_validation": "sedBrmtjhN7oQyuQ5Sb9xRHKngq/lxa+809y/7qaU9ea4IS7gQAIHhM+VE7p\nYI6vDxJGAX5BE0YoELaQGUVlwUkZdrz73Wz9S5AJmnyN8bc=\n",
    "start_sources": {
      "Delimiters.java": {
        "text": "public class Delimiters\n{\n  \n/** The open and close delimiters. */\nprivate String openDel;\nprivate String closeDel;\n  \n/** Constructs a Delimiters object where open is the open delimiter and close is the\n*   close delimiter.\n*   Precondition: open and close are non-empty strings.\n*/\npublic Delimiters(String open, String close)\n{\nopenDel = open;\ncloseDel = close;\n}\n  \n/** Returns an ArrayList of delimiters from the array tokens, as described in part (a). */\npublic ArrayList<String> getDelimitersList(String[] tokens)\n{ /* to be implemented in part (a) */ }\n  \n/** Returns true if the delimiters are balanced and false otherwise, as described in part (b).\n*   Precondition: delimiters contains only valid open and close delimiters.\n*/\npublic boolean isBalanced(ArrayList<String> delimiters)\n{ /* to be implemented in part (b) */ }\n  \n// There may be instance variables, constructors, and methods that are not shown.\n  \n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "D40njQcnaolaodr4VOoTa8ikUSz7w37T5zBv4Vw8T4eSdpVkme7MBjeJfVP7\nX7coRJ8fVgjNISPcjJA5MUfqFftrSm0qOn7Z+Gf8VjSUq2jF/9XJJnKt+9Co\nmimWUIFwU54Ph9Y+zRU77fxPfzvbAq6JBdj6lOdGc4RXWFl3+n8Hh23zZ+wk\nnvTOdPfOh87HrpECJ7dlGRWxaTDcQ1y9CykXS4aPAPlHMvU+WgSNi3DdR37T\n/wJHV9lbK2q4uPfOXMOu9ScIMUu3D5it5zXwjLGE9mvkU34GJdI6CAJ5QgKA\nzj7JyqcCAh5BkPCYIVvEtuI7HfUi2a+IKn3zyxV2sc2+sILPCCrbjRvIGRWv\nIkUKjUgM3/mxVz0cSRSvtDnYZh4eJprLe0Oy32Pb3xDPT/PSit6dNX9QywKr\n+gdEN+UBG082KfgO9Fg4rYTuQepiAkL+vtUq+UpBenZJ0hLPvAm2eYTHS0zu\ndZdu+kax+uvNeF/9tvM8DnpwBv7XmDs0avNZMDfuKfzuqyUosl44kzDyDegg\n+3C0AZH6dK/Q+xAEih0uv5uCWwcWXzgg/Vz2uUj5qGToOgq+lo2FwYa5X2fj\nSq1IBrDGAnSe+lb00Efa4Mv7O24LTPQp925oLXfn94FL9C6hvhZNzLciFREv\nDAIU1oOsdiX6m7nozMSQ1NVzm2MJTF1rtG4h9L8n93MExcGNqo848apzEY8B\n8vfYREM/pTrzFKq93lEX9VK12qudnhQTa+/3HNAaxjxz/7/FlLKSYdolakGX\n07z46Svu/azyPmuF6rg1LAeGyjHxIhOG/dPdClUUkbPPV86H51tICvNgiZqE\n5rbwTCIw58ztHRdF3iuBxibq+H7L5zgf55MNlPmh8FNNsy+tE5iLG44RNQDv\nLvUv/PWidQd6udghx05BMq//V4joTphnMCdWR/Si2VHcLF+8lQyu/llP3h1A\nJ0+jZTlNBSJE4q57JKkTShVZSjHc1xBcGx5gSYbm65vhOZ92f+5cDa/J/CDA\naOmKB2zyswDkpO13I0eWQK1zqo1tjotxGASzI5knPEfPVjPuuapfmKILM+ha\n38Qq9AlNGzrTw9K72ELq2kqv07ek4v/IQwyWHgP1IWeYL3B9V7Fk6Yy1+Yse\n0hsFoSeGGx+BehTIzuGMIXPjc0tCmhJMdZwe+tHkfCX3fMjUNaka5HHEiuBf\nnp1q/0Sgj77338If1T7Aph+bGLd4Wg3vpo8p68V+Cu7HPvXsDz7zF19LPxRt\nl3E71q0J0CKybv2OEpGInC0VjDSk+B2XRLY7XHeSRSzYOXM75kz6i7gwMv/8\n1OY4SDe6BpytcYvfZMeVc53KoIefzGBa3+17v9ZMLKYOxvy1l8+MbAXgHOmw\n9qn8yqPGo5B6BqLr9bY6BoAOsqYcSRpvjoeIpyCFnjac2I7mkRrC0DGP0Xn6\niSKnMuT19uYx1mYCTEONtKQMU6DdDfz3s4ksfmByuJJawzTs23aMOs5rXRpL\n3ooJY8mxBV0k/GFBuJm07z+/Q/MLYHqC0CL06CWmYAq0Vum68NGhq/F6kUl9\nXRDlBJhtkW9T3WaXsXemuB7DTDgAWSY6vjklU33v/QxfcTvAVW2oKVdPbCpr\nffBNh8fQ3wIOhlDSSSurKlj7rCSiv3C6XCwdLQ7+O+hNOmyj5FtMN4+0uINR\nLTc0QNndADU1sV5JGTemblsIdIjISJo6vnjptvBPlJDhqGq9PscLh7ONVXc0\nJpFAnTMj+p8emYIJMXy/bJEPt2waHCdXxrSQC0KCa8TsRvWF5OzxePoQU1Hb\nI2+lR0H/9XriuzXe/lYMbqfEOjG68hrb9NsaGtpvrm3rdoFBMt0YQ2zx+6tJ\nb6+xlDB9b4Q2BJTTDSXPotrvfixaxIs8o8cKgIg=\n",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2023-06-20 12:28:24 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 12:29:20 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 12:29:42 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 16:50:59 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
