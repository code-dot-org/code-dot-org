<Gamelab>
  <config><![CDATA[{
  "properties": {
    "skin": "gamelab",
    "validation_enabled": "false",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "keyDown": null,
      "keyWentDown": null,
      "keyWentUp": null,
      "mouseDidMove": null,
      "mouseDown": null,
      "mouseIsOver": null,
      "mouseWentDown": null,
      "mouseWentUp": null,
      "mousePressedOver": null,
      "showMobileControls": null,
      "World.mouseX": null,
      "World.mouseY": null,
      "World.frameRate": null,
      "World.frameCount": null,
      "World.seconds": null,
      "World.width": null,
      "World.height": null,
      "World.allSprites": null,
      "camera.on": null,
      "camera.off": null,
      "camera.isActive": null,
      "camera.mouseX": null,
      "camera.mouseY": null,
      "camera.x": null,
      "camera.y": null,
      "camera.zoom": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "x": null,
      "y": null,
      "velocityX": null,
      "velocityY": null,
      "scale": null,
      "sprite.height": null,
      "sprite.width": null,
      "visible": null,
      "rotation": null,
      "rotationSpeed": null,
      "rotateToDirection": null,
      "debug": null,
      "isTouching": null,
      "collide": null,
      "displace": null,
      "overlap": null,
      "bounce": null,
      "bounceOff": null,
      "bounciness": null,
      "setCollider": null,
      "createEdgeSprites": null,
      "shapeColor": null,
      "tint": null,
      "alpha": null,
      "setVelocity": null,
      "getDirection": null,
      "getSpeed": null,
      "setSpeedAndDirection": null,
      "pointTo": null,
      "mirrorX": null,
      "mirrorY": null,
      "getScaledWidth": null,
      "getScaledHeight": null,
      "lifetime": null,
      "nextFrame": null,
      "pause": null,
      "play": null,
      "setFrame": null,
      "depth": null,
      "destroy": null,
      "comment_Sprites": null,
      "var group = createGroup": null,
      "add": null,
      "remove": null,
      "clear": null,
      "contains": null,
      "get": null,
      "group.isTouching": null,
      "group.bounce": null,
      "group.bounceOff": null,
      "group.collide": null,
      "group.displace": null,
      "group.overlap": null,
      "maxDepth": null,
      "minDepth": null,
      "destroyEach": null,
      "pointToEach": null,
      "setAnimationEach": null,
      "setColorEach": null,
      "setColliderEach": null,
      "setDepthEach": null,
      "setHeightEach": null,
      "setLifetimeEach": null,
      "setMirrorXEach": null,
      "setMirrorYEach": null,
      "setRotateToDirectionEach": null,
      "setRotationEach": null,
      "setRotationSpeedEach": null,
      "setScaleEach": null,
      "setSpeedAndDirectionEach": null,
      "setTintEach": null,
      "setVelocityEach": null,
      "setVelocityXEach": null,
      "setVelocityYEach": null,
      "setVisibleEach": null,
      "setWidthEach": null,
      "comment_Groups": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "rgb": null,
      "rect": null,
      "ellipse": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "arc": null,
      "line": null,
      "point": null,
      "regularPolygon": null,
      "shape": null,
      "comment_Drawing": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "comment_Control": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "comment_Math": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "comment_Variables": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "show_debug_watch": "false",
    "encrypted": "false",
    "encrypted_examples": "1zmPKeNJERWnNedLf9tIzFG799o0F9SiEU9XWB5RDyqIZCpa8ZNZ0Elp4V3C\n3/6H5A5wevW67sFOvoeruCZVZg==\n",
    "embed": "true",
    "display_name": "Example G",
    "mini_rubric": "false",
    "thumbnail_url": "https://images.code.org/9474528a4f7246f0b9fa0f0cf9c31dbc-image-1647987194526.png",
    "submittable": "false",
    "hide_share_and_remix": "true",
    "start_blocks": "//Student Project - there may be bugs or inconsistencies in the code\r\n\r\ncreateEdgeSprites();\r\nvar state = -1;\r\nvar counter = 0;\r\nvar player = createSprite(200, 150);\r\nplayer.setAnimation(\"player\");\r\nplayer.setCollider(\"circle\", 0, -15, 19);\r\nvar barrier = createSprite(200, 330);\r\nbarrier.setAnimation(\"pit-graber\");\r\nbarrier.scale = 2.5;\r\nbarrier.setCollider(\"rectangle\", 0, 0, 100, 50);\r\nvar left1 = createSprite(30, 100);\r\nleft1.setAnimation(\"wall left 1\");\r\nleft1.scale = 2.5;\r\nleft1.setCollider(\"rectangle\");\r\nvar left2 = createSprite(30, 350);\r\nleft2.setAnimation(\"wall left 2\");\r\nleft2.scale = 2.5;\r\nleft2.setCollider(\"rectangle\");\r\nvar left3 = createSprite(30, -100);\r\nleft3.setAnimation(\"wall left 3\");\r\nleft3.scale = 2.5;\r\nleft3.setCollider(\"rectangle\", 0, 0, 19, 100);\r\nvar right1 = createSprite(370, 100);\r\nright1.setAnimation(\"wall right 1\");\r\nright1.scale = 2.5;\r\nright1.setCollider(\"rectangle\", 0, 0, 19, 100);\r\nvar right2 = createSprite(370, 350);\r\nright2.setAnimation(\"wall right 2\");\r\nright2.scale = 2.5;\r\nright2.setCollider(\"rectangle\");\r\nvar right3 = createSprite(370, -100);\r\nright3.setAnimation(\"wall right 3\");\r\nright3.scale = 2.5;\r\nright3.setCollider(\"rectangle\", 0, 0, 25, 120);\r\nvar jellybounce1 = createSprite(25, 50);\r\njellybounce1.setAnimation(\"bounce\");\r\njellybounce1.setCollider(\"circle\");\r\njellybounce1.visible = 0;\r\nvar jellybounce2 = createSprite(50, 50);\r\njellybounce2.setAnimation(\"bounce\");\r\njellybounce2.setCollider(\"circle\");\r\njellybounce2.visible = 0;\r\nvar jellybounce3 = createSprite(65, 50);\r\njellybounce3.setAnimation(\"bounce\");\r\njellybounce3.setCollider(\"circle\");\r\njellybounce3.visible = 0;\r\nvar fish = createSprite(400, 200);\r\nfish.setAnimation(\"fishiors\");\r\nfish.setCollider(\"circle\", 0, 5, 20);\r\nfunction draw() {\r\n  if(state == -1) {\r\n    newGame();\r\n  }\r\n  if(state == 0) {\r\n  background(rgb(21,34, 75));\r\n  text(counter, 125, 30, 30);\r\n  fill(\"white\");\r\n  text(\"score\", 90, 30, 30);\r\n  fill(\"white\");\r\n  playerwall(left1, left2, left3, right1, right2, right3);\r\n  movement();\r\n  thebadtouch();\r\n  wallmove(519, -120);\r\n  jellyfish();\r\n  fishmovement();\r\n  fishtouchplayer();\r\n  harder();\r\n  counter = counter + 1;\r\n  drawSprites();\r\n  player.bounceOff(edges);\r\n  }\r\n  if(state == 1) {\r\n    gameOver();\r\n  }\r\n}\r\n\r\nfunction newGame() {\r\n  background(\"white\");\r\n  fill(\"black\");\r\n  text(\"Press WASD to move. Avoid the fishes\", 10, 100);\r\n  text(\"Don't get knocked into the squid monster\", 10, 150);\r\n  text(\"Press z to start\", 90, 200);\r\n  if(keyWentDown(\"z\")) {\r\n    state = 0; \r\n  }\r\n}\r\n\r\nfunction gameOver() {\r\n  background(\"white\");\r\n  fill(\"black\");\r\n  text(counter, 125, 30, 30);\r\n  text(\"score\", 90, 30, 30);\r\n  text(\"Game Over\", 90, 100, 30);\r\n  text(\"Press z to restart\", 90, 200);\r\n  if(keyWentDown(\"z\")) {\r\n    counter = 0;\r\n    player.x = 200;\r\n    player.y = 150;\r\n    player.setAnimation(\"player\");\r\n    \r\n    jellybounce1.x = 25;\r\n    jellybounce1.y = 50;\r\n    jellybounce1.visible = 0;\r\n    jellybounce2.x = 50;\r\n    jellybounce2.y = 50;\r\n    jellybounce2.visible = 0;\r\n    jellybounce3.x = 65;\r\n    jellybounce3.y = 50;\r\n    jellybounce3.visible = 0;\r\n    fish.x = 400;\r\n    fish.y = 200;\r\n    state = 0;\r\n  }\r\n}\r\n\r\nfunction wallmove(wallBottom, wallSpawn) {\r\n  if (left1.y > wallBottom) {\r\n    left1.y = wallSpawn;\r\n  }\r\n  if (left2.y > wallBottom) {\r\n    left2.y = wallSpawn;\r\n  }\r\n  if (left3.y > wallBottom) {\r\n    left3.y = wallSpawn;\r\n  }\r\n  if (right1.y > wallBottom) {\r\n    right1.y = wallSpawn;\r\n  }\r\n  if (right2.y > wallBottom) {\r\n    right2.y = wallSpawn;\r\n  }\r\n  if (right3.y > wallBottom) {\r\n    right3.y = wallSpawn;\r\n  }\r\n  left1.velocityY = 5;\r\n  left2.velocityY = 5;\r\n  left3.velocityY = 5;\r\n  right1.velocityY = 5;\r\n  right2.velocityY = 5;\r\n  right3.velocityY = 5;\r\n}\r\nfunction movement() {\r\n  if (keyWentDown(\"a\")) {\r\n    player.setAnimation(\"player\");\r\n    player.velocityX = -3;\r\n  }\r\n  if (keyWentDown(\"d\")) {\r\n    player.setAnimation(\"player\");\r\n    player.velocityX = 3;\r\n  }\r\n  if (keyWentDown(\"w\")) {\r\n    player.setAnimation(\"player\");\r\n    player.velocityY = -2;\r\n  }\r\n  if (keyWentDown(\"s\")) {\r\n    player.setAnimation(\"player\");\r\n    player.velocityY = 2;\r\n  }\r\n  player.bounciness = 0.5;\r\n}\r\nfunction playerwall(a, b, c, d, e, f) {\r\n  if (player.isTouching(a)) {\r\n    player.bounceOff(a);\r\n  }\r\n  if (player.isTouching(b)) {\r\n    player.bounceOff(b);\r\n  }\r\n  if (player.isTouching(c)) {\r\n    player.bounceOff(c);\r\n  }\r\n  if (player.isTouching(d)) {\r\n    player.bounceOff(d);\r\n  }\r\n  if (player.isTouching(e)) {\r\n    player.bounceOff(e);\r\n  }\r\n  if (player.isTouching(f)) {\r\n    player.bounceOff(f);\r\n  }\r\n}\r\nfunction jellyfish() {\r\n  jellybounce1.velocityY = 3;\r\n  jellybounce2.velocityY = 3;\r\n  jellybounce3.velocityY = 3;\r\n  if (player.isTouching(jellybounce1)) {\r\n    player.bounceOff(jellybounce1);\r\n  }\r\n  if (player.isTouching(jellybounce2)) {\r\n    player.bounceOff(jellybounce2);\r\n  }\r\n  if (player.isTouching(jellybounce3)) {\r\n    player.bounceOff(jellybounce3);\r\n  }\r\n  if (jellybounce1.y > 407) {\r\n    jellybounce1.y = -7;\r\n    jellybounce1.x = randomNumber(90, 310);\r\n  }\r\n  if (jellybounce2.y > 407) {\r\n    jellybounce2.y = -7;\r\n    jellybounce2.x = randomNumber(90, 310);\r\n  }\r\n  if (jellybounce3.y > 407) {\r\n    jellybounce3.y = -7;\r\n    jellybounce3.x = randomNumber(90, 310);\r\n  }\r\n  if (jellybounce1.y === -7) {\r\n    jellybounce1.visible = 1;\r\n  }\r\n  if (jellybounce2.y === -7) {\r\n    jellybounce2.visible = 1;\r\n  }\r\n  if (jellybounce1.y === -7) {\r\n    jellybounce3.visible = 1;\r\n  }\r\n}\r\nfunction fishmovement() {\r\n  if (fish.isTouching(right1)) {\r\n    fish.velocityX = -5;\r\n  }\r\n  if (fish.x == -25) {\r\n    fish.x = 425;\r\n    fish.y = randomNumber(0, 270);\r\n  }\r\n}\r\nfunction fishtouchplayer() {\r\n  if (fish.isTouching(player)) {\r\n    player.bounceOff(fish);\r\n  }\r\n}\r\nfunction thebadtouch() {\r\n  if (player.isTouching(barrier)) {\r\n    player.velocityX = 0;\r\n    player.setAnimation(\"player-distroy\");\r\n    player.velocityY = 0;\r\n    state = 1;\r\n  }\r\n}\r\nfunction harder() {\r\n  if (counter > 1000) {\r\n    jellybounce1.velocityY = 5;\r\n    jellybounce2.velocityY = 5;\r\n    jellybounce3.velocityY = 5;\r\n    if (fish.isTouching(right1)) {\r\n      fish.velocityX = -7;\r\n    }\r\n    if (fish.x == -25) {\r\n      fish.x = 425;\r\n      fish.y = randomNumber(0, 270);\r\n    }\r\n  }\r\n  if (counter > 2000) {\r\n    jellybounce1.velocityY = 8;\r\n    jellybounce2.velocityY = 8;\r\n    jellybounce3.velocityY = 8;\r\n    if (fish.isTouching(right1)) {\r\n      fish.velocityX = -10;\r\n    }\r\n    if (fish.x == -25) {\r\n      fish.x = 425;\r\n      fish.y = randomNumber(0, 270);\r\n    }\r\n  }\r\n}\r\n",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_animation_mode": "true",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "pause_animations_by_default": "false",
    "start_animations": "{\r\n  \"orderedKeys\": [\r\n    \"53b11a7b-c92b-4644-a286-625118962452\",\r\n    \"4ea37239-8109-44ea-a4ec-8d3c43b26079\",\r\n    \"63cc5a9b-f5e1-4660-815d-cb6c81d61891\",\r\n    \"4237a597-31d2-45dd-bda5-e8104cb946bb\",\r\n    \"20997597-8bd3-4ae9-9b23-82a454e54e3f\",\r\n    \"a1d40949-874f-496c-ab46-75669fee3ffe\",\r\n    \"9f47169d-6cfb-4743-ab06-88d0d9f7e59f\",\r\n    \"8c8b1733-ff89-4fa0-9867-d2f2f18050fc\",\r\n    \"06a4c22c-99d2-454a-a169-16225749e4d1\",\r\n    \"e22555b9-5c61-4980-9ca3-fca2c6515a85\",\r\n    \"31c29015-681f-42de-960e-4687f3092463\"\r\n  ],\r\n  \"propsByKey\": {\r\n    \"53b11a7b-c92b-4644-a286-625118962452\": {\r\n      \"name\": \"player\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/53b11a7b-c92b-4644-a286-625118962452.png?version=LdCvr9uxNtYhrbJylyVAi9oBrXkfpQTz\",\r\n      \"frameSize\": {\r\n        \"x\": 58,\r\n        \"y\": 72\r\n      },\r\n      \"frameCount\": 5,\r\n      \"looping\": true,\r\n      \"frameDelay\": 3,\r\n      \"version\": \"LdCvr9uxNtYhrbJylyVAi9oBrXkfpQTz\"\r\n    },\r\n    \"4ea37239-8109-44ea-a4ec-8d3c43b26079\": {\r\n      \"name\": \"player-distroy\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/4ea37239-8109-44ea-a4ec-8d3c43b26079.png?version=HJPs8rqwOk3JpxXBOdUroB7IIDesRqZ0\",\r\n      \"frameSize\": {\r\n        \"x\": 50,\r\n        \"y\": 50\r\n      },\r\n      \"frameCount\": 3,\r\n      \"looping\": true,\r\n      \"frameDelay\": 4,\r\n      \"version\": \"HJPs8rqwOk3JpxXBOdUroB7IIDesRqZ0\"\r\n    },\r\n    \"63cc5a9b-f5e1-4660-815d-cb6c81d61891\": {\r\n      \"name\": \"pit-graber\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/63cc5a9b-f5e1-4660-815d-cb6c81d61891.png?version=JYup9hvWv1m70QwsggsIMSRw8qbqAumR\",\r\n      \"frameSize\": {\r\n        \"x\": 100,\r\n        \"y\": 62\r\n      },\r\n      \"frameCount\": 3,\r\n      \"looping\": true,\r\n      \"frameDelay\": 4,\r\n      \"version\": \"JYup9hvWv1m70QwsggsIMSRw8qbqAumR\"\r\n    },\r\n    \"4237a597-31d2-45dd-bda5-e8104cb946bb\": {\r\n      \"name\": \"wall left 1\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/4237a597-31d2-45dd-bda5-e8104cb946bb.png?version=J37pdi.DPpm50CV1V8BkrKhyMy6QDQOR\",\r\n      \"frameSize\": {\r\n        \"x\": 29,\r\n        \"y\": 100\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"J37pdi.DPpm50CV1V8BkrKhyMy6QDQOR\"\r\n    },\r\n    \"20997597-8bd3-4ae9-9b23-82a454e54e3f\": {\r\n      \"name\": \"wall right 3\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/20997597-8bd3-4ae9-9b23-82a454e54e3f.png?version=AXfbTJ94AYxhQCbPiwJ8SIU5BJNWomnu\",\r\n      \"frameSize\": {\r\n        \"x\": 29,\r\n        \"y\": 100\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"AXfbTJ94AYxhQCbPiwJ8SIU5BJNWomnu\"\r\n    },\r\n    \"a1d40949-874f-496c-ab46-75669fee3ffe\": {\r\n      \"name\": \"wall right 1\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/a1d40949-874f-496c-ab46-75669fee3ffe.png?version=Nt.1MWh.CAnl2ObuE1uvIzDTgmTRUO1N\",\r\n      \"frameSize\": {\r\n        \"x\": 30,\r\n        \"y\": 100\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"Nt.1MWh.CAnl2ObuE1uvIzDTgmTRUO1N\"\r\n    },\r\n    \"9f47169d-6cfb-4743-ab06-88d0d9f7e59f\": {\r\n      \"name\": \"wall left 2\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/9f47169d-6cfb-4743-ab06-88d0d9f7e59f.png?version=hcmS09RnZyncct_iWi7KFzrqmMIdTbR6\",\r\n      \"frameSize\": {\r\n        \"x\": 24,\r\n        \"y\": 100\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"hcmS09RnZyncct_iWi7KFzrqmMIdTbR6\"\r\n    },\r\n    \"8c8b1733-ff89-4fa0-9867-d2f2f18050fc\": {\r\n      \"name\": \"wall right 2\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/8c8b1733-ff89-4fa0-9867-d2f2f18050fc.png?version=Demw1mmKebe0Rthw7Qqm4bUv1_Oz2Xul\",\r\n      \"frameSize\": {\r\n        \"x\": 24,\r\n        \"y\": 100\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"Demw1mmKebe0Rthw7Qqm4bUv1_Oz2Xul\"\r\n    },\r\n    \"06a4c22c-99d2-454a-a169-16225749e4d1\": {\r\n      \"name\": \"wall left 3\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/06a4c22c-99d2-454a-a169-16225749e4d1.png?version=vjFBwga96mNZ8fxqGABPrallkpwJdF54\",\r\n      \"frameSize\": {\r\n        \"x\": 24,\r\n        \"y\": 100\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"vjFBwga96mNZ8fxqGABPrallkpwJdF54\"\r\n    },\r\n    \"e22555b9-5c61-4980-9ca3-fca2c6515a85\": {\r\n      \"name\": \"bounce\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/e22555b9-5c61-4980-9ca3-fca2c6515a85.png?version=2et.jBDiguB505T2Cua.hI4mEP.rZ.iy\",\r\n      \"frameSize\": {\r\n        \"x\": 33,\r\n        \"y\": 33\r\n      },\r\n      \"frameCount\": 3,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"2et.jBDiguB505T2Cua.hI4mEP.rZ.iy\"\r\n    },\r\n    \"31c29015-681f-42de-960e-4687f3092463\": {\r\n      \"name\": \"fishiors\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/wU8fv6IB54PI1F5GGAhPQdNTNnO6g3bCbgRYATWeyAw/31c29015-681f-42de-960e-4687f3092463.png?version=5cABLVztJQOwePxtGkztGZRRZyc43cXX\",\r\n      \"frameSize\": {\r\n        \"x\": 51,\r\n        \"y\": 37\r\n      },\r\n      \"frameCount\": 5,\r\n      \"looping\": true,\r\n      \"frameDelay\": 3,\r\n      \"version\": \"5cABLVztJQOwePxtGkztGZRRZyc43cXX\"\r\n    }\r\n  }\r\n}",
    "libraries_enabled": "false",
    "long_instructions": "# Example Game\r\n\r\nWith a partner, brainstorm some different ideas for your game. You can think about the games you've already seen, or look at some more sample games to give you ideas.\r\n\r\nOnce you have settled on a type of game with your partner, fill out the Project Guide with the backgrounds, variables, sprites, and functions that you will need to make the game. You'll spend the next few levels creating your game.",
    "preload_asset_list": null
  },
  "game_id": 50,
  "published": true,
  "created_at": "2022-03-22T22:12:48.000Z",
  "level_num": "custom",
  "user_id": 14639,
  "audit_log": "[{\"changed_at\":\"2022-03-22T22:12:48.856+00:00\",\"changed\":[\"cloned from \\\"CSD U3 - Design a Game 1 - Example8_2022\\\"\"],\"cloned_from\":\"CSD U3 - Design a Game 1 - Example8_2022\"},{\"changed_at\":\"2022-03-22 22:14:33 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"thumbnail_url\",\"start_blocks\",\"start_animations\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Gamelab>