<Applab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "libraries_enabled": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "fail_on_lint_errors": "false",
    "widget_mode": "false",
    "ai_enabled": "false",
    "long_instructions": "## Declare and Initialize Data into Lists\r\n\r\nThis app relies on having a set of amusing, enlightening, and thoughtful fortunes & colors ready to dispense. Destiny has been working hard creating these fortunes and color combinations in order to implement into the app. \r\n\r\nShe saved all of her work into a dataset called **Fortune Data** that we can use to populate three different lists within the app-- one for the fortunes, one for the name of the colors, and one for the hex code that will display the color. Let's begin by helping her to declare and initialize these lists.\r\n\r\n<br>\r\n\r\n1Ô∏è‚É£ Task One: Declare the following lists--\r\n\r\n* <span style=\"color: #bb77c7\">fortunes</span>\r\n* <span style=\"color: #bb77c7\">luckyColorName</span>\r\n* <span style=\"color: #bb77c7\">luckyColorCode</span>\r\n\r\nYou can find the location in the starter code to modify by matching the number next to the task (*e.g. 1Ô∏è‚É£ in this case*)\r\n\r\n<br>\r\n\r\n2Ô∏è‚É£ Task Two: Initialize these lists with data using the <code style=\"color:black; background-color:#d3e965\">getColumn()</code> command\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üîé Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Declaring lists can be accomplished using the following syntax:\r\n\r\n![](https://images.code.org/bee89603cb7587d851d3616416f4980c-image-1678473078011.png)\r\n\r\nIn order to initialize these lists, we will be using the <code style=\"color:black; background-color:#d3e965\">getColumn()</code> command to pull information from the <strong>Fortune Data</strong> dataset as seen below:\r\n\r\n![](https://images.code.org/b13a486b486dd9c5d0260b7c425686c0-image-1678472992694.png)\r\n\r\n\r\nUse similar syntax to declare & initialize the other two lists (<span style=\"color: #bb77c7\">luckyColorName</span> & <span style=\"color: #bb77c7\">luckyColorCode</span>) </p>\r\n<br>\r\n\r\n<div style=\"background-color: #ffffff; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n\r\nüêõ <strong>Bug Alert!</strong>  When using lists, make sure that you do<strong> not</strong> put the name of the list in square brackets. This is a common error that happens when learning how to use lists.\r\n\r\n<div style=\"column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 2; width: 100%\"> \r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    ‚úÖ  var <span style=\"color: #bb77c7\">fortunes</span> = [];\r\n    <br>\r\n    ‚úÖ  var <span style=\"color: #bb77c7\">fortunes</span> = [\"howdy\", \"hey\", \"hello\"];\r\n    <br>\r\n    ‚úÖ  <span style=\"color: #bb77c7\">fortunes</span>[1];\r\n    </p>\r\n\t<p style=\"break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;\">\r\n    ‚ùå  var [<span style=\"color: #bb77c7\">fortunes</span>];  \r\n    <br>\r\n    ‚ùå  [<span style=\"color: #bb77c7\">fortunes</span> = \"howdy\", \"hey\", \"hello\"];\r\n    <br>\r\n    ‚ùå  [<span style=\"color: #bb77c7\">fortunes</span>[1]];\r\n    </p>\r\n </div>\r\n \r\n\r\n</div>\r\n\r\n<br>\r\n\r\n\r\n</div>\r\n</details>\r\n\r\n<hr>\r\n\r\n## Declare / Initialize Index Variables\r\n\r\nSince we have three different lists that contain the fortunes, the color name, and color hex code, we can create two different index variables-- one to reference the fortune elements from the list, and another to reference the color name & code. We only need one index variable for color since the name and the hex code both use the one index value to describe a common color.\r\n\r\n<br>\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\n\r\n*Discuss with your partner:*\r\n\r\n<br>\r\n\r\n<span style=\"font-size: 1.5em\">‚ùì</span> Why can‚Äôt we use just one index variable for all three of the different lists?\r\n\r\n</div>\r\n\r\n<br>\r\n\r\n3Ô∏è‚É£ Declare two index variables that will keep track of an independent index for both the <span style=\"color: #bb77c7\">fortunes</span> list and the <span style=\"color: #bb77c7\">luckyColorName</span> / <span style=\"color: #bb77c7\">luckyColorCode</span> lists & initialize both values to zero. Name them as follows:\r\n* <span style=\"color: #bb77c7\">fortuneIndex</span>\r\n* <span style=\"color: #bb77c7\">colorIndex</span>\r\n\r\n<br>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n<summary style=\"font-size: 1.2em; font-weight: bold;\">üîé Need help with your algorithm?</summary>\r\n<div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n<p>\tThis can be accomplished using the following syntax:\r\n\r\n![](https://images.code.org/3e3bba67ca4c431328412f44f9c9bb78-image-1678473819814.png)\r\n\r\n\r\n</p>\r\n</div>\r\n</details>\r\n\r\n<br>\r\n",
    "project_template_level_name": "U6_L03_Lists Practice_Choice_2-Template",
    "thumbnail_url": "https://images.code.org/f1a379e21e83f1380ff0a09796da5417-M9B_titleCard.png",
    "display_name": "Magic Nine Ball, Part 2",
    "bubble_choice_description": "Spice Level: üå∂üå∂\r\n\r\nDeclare and initialize lists and variables to hold all of the lucky numbers, colors, and fortunes.",
    "preload_asset_list": null,
    "encrypted_examples": [

    ]
  },
  "game_id": 41,
  "published": true,
  "created_at": "2023-03-10T17:53:25.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "audit_log": "[{\"changed_at\":\"2023-03-10T17:53:25.292+00:00\",\"changed\":[\"cloned from \\\"U6_L03_Lists Practice_Choice_2-1\\\"\"],\"cloned_from\":\"U6_L03_Lists Practice_Choice_2-1\"},{\"changed_at\":\"2023-03-10 17:54:19 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-10 17:57:11 +0000\",\"changed\":[\"validation_enabled\",\"code_functions\",\"embed\",\"start_html\",\"start_blocks\",\"data_tables\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-10 18:44:32 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-10 18:51:43 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-10 21:00:49 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-13 16:43:49 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-14 15:58:27 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-16 15:35:05 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-23 15:38:05 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-23 15:42:57 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\",\"display_name\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-23 15:52:14 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"encrypted_examples\",\"bubble_choice_description\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-05-03 17:47:26 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-05-03 17:49:37 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>