<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-05-03T21:31:26.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "gamelab",
    "edit_code": true,
    "embed": "false",
    "instructions": "Modify the code so that all of the console.log commands print true",
    "start_blocks": "// Modify these sprites so that all of the\r\n// console.log() commands print true\r\nvar sprite1 = createSprite(100, 200);\r\nsprite1.width = 80;\r\nsprite1.height = 80;\r\nsprite1.shapeColor = \"green\";\r\nsprite1.rotation = 30;\r\n\r\nvar sprite2 = createSprite(300, 200);\r\nsprite2.width = 70;\r\nsprite2.height = 100;\r\nsprite2.shapeColor = \"blue\";\r\nsprite2.rotation = 60;\r\n\r\n// Don't edit the following (I'm serious!!!)\r\nconsole.log(sprite2.width == sprite2.height);\r\nconsole.log(sprite1.shapeColor == sprite2.shapeColor);\r\nconsole.log(sprite2.rotation < 40);\r\nconsole.log(sprite1.width == sprite2.width);\r\nconsole.log(sprite1.x > 150);\r\nconsole.log(sprite2.y < 200);\r\n\r\ndrawSprites();",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "markdown_instructions": "# Boolean Expressions\r\n\r\nThe simplest Boolean expressions are questions that the computer can answer with true or false. These expressions are made using **comparison operators**, as shown below.\r\n\r\n|Comparison Operator | Boolean Expression |  Meaning |\r\n|:---:|:---:|:---:|\r\n| <img src=\"https://images.code.org/1a0798d75d4242715e7608d825f95101-image-1447271431312.png\" style=\"width: 100px\"> | `1 < 9` | Is 1 less than 9? | \r\n| <img src=\"https://images.code.org/5ff460ac121f0ac51b569e96a4404c57-image-1447271431310.png\" style=\"width: 100px\"> | `1 > 9` | Is 1 greater than 9 ? |  \r\n| <img src=\"https://images.code.org/a4daa9efccea2278e165592efe343c1a-image-1447271431308.png\" style=\"width: 100px\">| `1 == 9` | Is 1 equal to 9?| \r\n<br>\r\n**Note:** If you saw the statement 3 < 2 in math class, you'd think something was terribly wrong, but this is not math class.  In computer science, the comparison operators **ask a question** that the computer will answer with `true` or `false`. So you can read 3 < 2 as **\"Is 3 less than 2?\"** The answer in this case is no, or `false`.  \r\n\r\nAnother way to say this is that the Boolean expression `3 < 2` **evaluates** to `false`.\r\n\r\n# Do This\r\nCan you modify the values of the sprite properties so that each of the Boolean expressions evaluates to `true`?\r\n\r\n- Read through the entire program to see how `sprite1` and `sprite2` are being created and which properties are compared.\r\n- For each of the Boolean expressions, identify the sprite properties being compared.\r\n- Change the code _in the first **13** lines only_ so that each of the `console.log()` statements print `true`.",
    "callout_json": "[]",
    "show_d_pad": "false",
    "instructions_important": "false",
    "hide_animation_mode": "false",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "true",
    "pause_animations_by_default": "false",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "Game.frameRate": null,
      "Game.mouseX": null,
      "Game.mouseY": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "sprite.height": null,
      "sprite.width": null,
      "x": null,
      "y": null,
      "rotation": null,
      "scale": null,
      "shapeColor": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "randomNumber_min_max": null,
      "equalityOperator": null,
      "greaterThanOperator": null,
      "lessThanOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "comment_Drawing": null,
      "comment_Variables": null,
      "comment_GameLab": null,
      "comment_Math": null,
      "comment_Sprites": null,
      "console.log": null
    },
    "show_debug_watch": "true",
    "encrypted_examples": "I1DAR1BMXjpehzsR6JSwBmOv6Y50vGYiLPNnR9ki/Hbi78C6qso9CFlInon4\naEIZ\n",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>