<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2023-06-07T18:51:40.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Many encoded strings contain delimiters. A delimiter is a non-empty string that acts as a boundary between different parts of a larger string. The delimiters involved in this question occur in pairs that must be balanced, with each pair having an open delimiter and a close delimiter. There will be only one type of delimiter for each string. The following are examples of delimiters.\r\n\r\nExample 1: \r\nExpressions in mathematics use open parentheses \"(\" and close parentheses \")\" as delimiters. For each open parenthesis, there must be a matching close parenthesis. \r\n* (x + y) * 5 is a valid mathematical expression. \r\n* (x + (y) is NOT a valid mathematical expression because there are more open delimiters than close delimiters.\r\n\r\nIn this question, you will write two methods in the following Delimiters class.\r\n* Assume that the interface and classes listed in the Java Quick Reference have been imported where appropriate. \r\n* Unless otherwise noted in the question, assume that parameters in method calls are not null and that methods are called only when their preconditions are satisfied. \r\n* In writing solutions for each question, you may use any of the accessible methods that are listed in classes defined in that question. Writing significant amounts of code that can be replaced by a call to one of these methods will not receive full credit.\r\n",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyClass.java": {
        "text": "public class Delimiters\n{\n  \n/** The open and close delimiters. */\nprivate String openDel;\nprivate String closeDel;\n  \n/** Constructs a Delimiters object where open is the open delimiter and close is the\n*   close delimiter.\n*   Precondition: open and close are non-empty strings.\n*/\npublic Delimiters(String open, String close)\n{\nopenDel = open;\ncloseDel = close;\n}\n  \n/** Returns an ArrayList of delimiters from the array tokens, as described in part (a). */\npublic ArrayList<String> getDelimitersList(String[] tokens)\n{ /* to be implemented in part (a) */ }\n  \n/** Returns true if the delimiters are balanced and false otherwise, as described in part (b).\n*   Precondition: delimiters contains only valid open and close delimiters.\n*/\npublic boolean isBalanced(ArrayList<String> delimiters)\n{ /* to be implemented in part (b) */ }\n  \n// There may be instance variables, constructors, and methods that are not shown.\n  \n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "6G6ExKZgxp5DJKlPjCBd+lKw88VDJuoGYswlfhk3Ar21c7ASPfHy+eLVIvWA\nDel1Z9yT/DO52fV8Pm9ExSU0SrWwMNa5QM7nKPwPbqkojSOtDXzsFtxjjTVh\noD+dSyAQI0D/QH7BgVXGMwag7s+uaoja389MeBYxEB6JaIQ60vhBj+yEOyX8\n0pbbZPS2xfEuDzlP7I+m0vnCc0HzfJFuShLhnTF6K+dlotLkOJZaouvp6qgZ\nOGDJDecJ/XoqQ5j1iGgZuUnoRVAQvvHorphVC+AQBHctR78Apuo34K76VcHD\nzW41GMvcOtAs+EVDoCovAoSypQM57qouwmXpXzsvSV6pjx3ebPpC1bfdW/ea\nKJ8kq+ZKF4TXAudBqrjj5OgNsSGl5Ol0hWaCQVxjSXxseoJw3JSeo62nzH3I\nXilVMpVBoo+mo8Cl2BsVeDV5aDXwMbWVVpP1a9eyCKJaNWcOfOXYDm6tVzSA\npYve7pCFrkkaP414bN9+eCW6SKIeyJkY8D4dL/qh6UZ1xXyX4qlWhEDSkcZM\niL9FP+JcWxXbijK2DbygnImtj00Xc8c20g0F0fmFUT7Hb7GWPYpJaDS2ZcMf\nngb7AtQqwLSSEaylZdUDzOCF39uXngwN8YWlNO0imtLAjuZO8FnT0AfD1PeB\nco3vp25vL7qob+KJ5xFfZyPwh3fvsadD9x/OuDMEyJ6Sm4bOtLN9sTS1cphu\ntu48NLfziDG/w8Bo4wC4Dnjk/WAkPkbpucXF5YZN1N0wgdtv7hRCQ35SXqTi\n7/vxOVEtqZ+wdT3LXZbOPIulOhbk9++Q1SueClo0TCytxNtsZFW/S2YfMjvC\n+jFudmbY3GU2Wj1qGLvjAhDFJKI8LbhoWIQVURCQBtnMCkwtoBiFfH3uYqAB\nTM2ndq/Xkz3MoR2vHTjxYPpyosT5vyk/03toXaQzVRNHuMPtcQUd4xeVOXRs\n+xZ6T41AgF1fomsz9v73JiwUUI8wMVv0S2zCY3A5kqAFCwrFhYj7T1lnliwk\nnAk7zf05cS+hskvS7lMOOSlHc4voscpFKqArTeebN42lCTFaMYPe0TKcgPKB\nxask7gpXZHmvSxur0IymO1XrrKMDQtQ1N08HPAeUdFyO7RYNrEVW5Kz27dC2\n/z01Ni7fZOX7I6XeSCypwyCOQ7PhlWNu1/lytj8jMrOod2pTKpykHjHluneJ\n6BO3YKIUDQVe5Y6aEj2PG79xGGm3ITM0ZRQZGI4S7KFTxsx1zHkChPOadTfr\nWG6HH5nir/QFcUvdODVEkpoXwdUdsGmyPOkcren8NbLkW+D5FNkJl+rU+9af\nz3NwroHTcnEzqvAWPIqY2IDWSMJMFMTv5j5l+yMhF5VbSS8LH7dkRwM6XghC\nL4muu0MgT2GD9LDFlLtLDETTt12/la7Ywawy13mCcv6mjNknK9PdGK45Qh7W\nEuql017kdo6WPiNTd40nIPUnR0LIbXU23Us21dK+UWRD+KnWIKIjlOM4xpuo\nhSPMnYXUjjruVpPA1K97+4QZz1LPilsATM4kayxcJ/G5lXoddVAHb9lp90R1\nRFmd0VXEWHHjsbkC6r/JuBc3yOJlj0wzhCcn3AXDVmw062Df4jjxb8aczKo2\n+8fLKmXATaVr1XeY1u7v3qs7X2d0zrFS4lo4FvzYFeT+qP5enmWZMMbDTHlx\nJbwhAvcKSg2unpOz/X9z6VM5C6g76CYJY0W5f6t2q/5rWnGWlmbXRQmhhce1\nzT9b2FlZ5bR2Ujtj/ogd8EIBHKyh8t9PRRiGljiYNYHi5sxty0AShfN1uQfi\nhcfQ3oRMk+t48IiONckwcbNS1ALuDTlmkvvZaQw5SwKFbrcBvcgOndT4Ad4j\nx5e/kmsx3cY+4e2bwWhCw6SadeYa96vrD3+x2EY=\n",
    "encrypted_validation": "rZAZhYIqjxTQ1JnSCmhkE/HWVUAjut2KMACRkyINlKpMZF98K6BedF3I1Iyl\no7ZoCznXKpgr1GwSACfoXXtbguRj+bm04jOJ9GSZXg/ztBH0gVjaaoJIaolS\nAh0EO+4UcG7Tw97NsfXqS8eJCTNGByivAvzxh0Kc3LHIeOO5LbE=\n",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2023-06-07 19:46:50 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-07 19:57:31 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-07 20:38:34 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-07 20:47:55 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-07 20:52:03 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 11:56:45 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
