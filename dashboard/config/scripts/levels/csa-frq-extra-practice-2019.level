<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-06-07T18:51:40.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "long_instructions": "Read the question carefully: Before starting to write code, read each FRQ question thoroughly. Pay close attention to the requirements, inputs, outputs, and any given constraints. Make sure you understand what the question is asking and what is expected in the solution.\r\n\r\nPlan your approach: Take a few moments to plan your approach to each FRQ question before diving into writing code. Consider the steps or algorithms you will need to implement, any data structures that may be helpful, and whether any additional helper methods are required. Sketching out a rough outline or pseudocode can be beneficial.\r\n\r\nFollow proper Java syntax: Write your solutions using correct Java syntax and adhere to the AP Java subset. Ensure that your code is well-structured, readable, and follows standard programming conventions. Use appropriate variable names and comment your code to explain your thought process and rationale.\r\n\r\nTest your solutions: After completing each FRQ question, test your solution with various test cases to verify its correctness. Consider edge cases and scenarios that may challenge your implementation. Make sure your code produces the expected outputs and handles all given inputs accurately.\r\n\r\nTime management: Keep track of the time you spend on each FRQ question. Develop strategies to manage your time effectively during the exam, such as setting time limits for each part of the question or allocating specific amounts of time to different sections.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyClass.java": {
        "text": "public class Delimiters\n{\n  \n/** The open and close delimiters. */\nprivate String openDel;\nprivate String closeDel;\n  \n/** Constructs a Delimiters object where open is the open delimiter and close is the\n*   close delimiter.\n*   Precondition: open and close are non-empty strings.\n*/\npublic Delimiters(String open, String close)\n{\nopenDel = open;\ncloseDel = close;\n}\n  \n/** Returns an ArrayList of delimiters from the array tokens, as described in part (a). */\npublic ArrayList<String> getDelimitersList(String[] tokens)\n{ /* to be implemented in part (a) */ }\n  \n/** Returns true if the delimiters are balanced and false otherwise, as described in part (b).\n*   Precondition: delimiters contains only valid open and close delimiters.\n*/\npublic boolean isBalanced(ArrayList<String> delimiters)\n{ /* to be implemented in part (b) */ }\n  \n// There may be instance variables, constructors, and methods that are not shown.\n  \n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "6G6ExKZgxp5DJKlPjCBd+lKw88VDJuoGYswlfhk3Ar21c7ASPfHy+eLVIvWA\nDel1Z9yT/DO52fV8Pm9ExSU0SrWwMNa5QM7nKPwPbqkojSOtDXzsFtxjjTVh\noD+dSyAQI0D/QH7BgVXGMwag7s+uaoja389MeBYxEB6JaIQ60vhBj+yEOyX8\n0pbbZPS2xfEuDzlP7I+m0vnCc0HzfJFuShLhnTF6K+dlotLkOJZaouvp6qgZ\nOGDJDecJ/XoqQ5j1iGgZuUnoRVAQvvHorphVC+AQBHctR78Apuo34K76VcHD\nzW41GMvcOtAs+EVDoCovAoSypQM57qouwmXpXzsvSV6pjx3ebPpC1bfdW/ea\nKJ8kq+ZKF4TXAudBqrjj5OgNsSGl5Ol0hWaCQVxjSXxseoJw3JSeo62nzH3I\nXilVMpVBoo+mo8Cl2BsVeDV5aDXwMbWVVpP1a9eyCKJaNWcOfOXYDm6tVzSA\npYve7pCFrkkaP414bN9+eCW6SKIeyJkY8D4dL/qh6UZ1xXyX4qlWhEDSkcZM\niL9FP+JcWxXbijK2DbygnImtj00Xc8c20g0F0fmFUT7Hb7GWPYpJaDS2ZcMf\nngb7AtQqwLSSEaylZdUDzOCF39uXngwN8YWlNO0imtLAjuZO8FnT0AfD1PeB\nco3vp25vL7qob+KJ5xFfZyPwh3fvsadD9x/OuDMEyJ6Sm4bOtLN9sTS1cphu\ntu48NLfziDG/w8Bo4wC4Dnjk/WAkPkbpucXF5YZN1N0wgdtv7hRCQ35SXqTi\n7/vxOVEtqZ+wdT3LXZbOPIulOhbk9++Q1SueClo0TCytxNtsZFW/S2YfMjvC\n+jFudmbY3GU2Wj1qGLvjAhDFJKI8LbhoWIQVURCQBtnMCkwtoBiFfH3uYqAB\nTM2ndq/Xkz3MoR2vHTjxYPpyosT5vyk/03toXaQzVRNHuMPtcQUd4xeVOXRs\n+xZ6T41AgF1fomsz9v73JiwUUI8wMVv0S2zCY3A5kqAFCwrFhYj7T1lnliwk\nnAk7zf05cS+hskvS7lMOOSlHc4voscpFKqArTeebN42lCTFaMYPe0TKcgPKB\nxask7gpXZHmvSxur0IymO1XrrKMDQtQ1N08HPAeUdFyO7RYNrEVW5Kz27dC2\n/z01Ni7fZOX7I6XeSCypwyCOQ7PhlWNu1/lytj8jMrOod2pTKpykHjHluneJ\n6BO3YKIUDQVe5Y6aEj2PG79xGGm3ITM0ZRQZGI4S7KFTxsx1zHkChPOadTfr\nWG6HH5nir/QFcUvdODVEkpoXwdUdsGmyPOkcren8NbLkW+D5FNkJl+rU+9af\nz3NwroHTcnEzqvAWPIqY2IDWSMJMFMTv5j5l+yMhF5VbSS8LH7dkRwM6XghC\nL4muu0MgT2GD9LDFlLtLDETTt12/la7Ywawy13mCcv6mjNknK9PdGK45Qh7W\nEuql017kdo6WPiNTd40nIPUnR0LIbXU23Us21dK+UWRD+KnWIKIjlOM4xpuo\nhSPMnYXUjjruVpPA1K97+4QZz1LPilsATM4kayxcJ/G5lXoddVAHb9lp90R1\nRFmd0VXEWHHjsbkC6r/JuBc3yOJlj0wzhCcn3AXDVmw062Df4jjxb8aczKo2\n+8fLKmXATaVr1XeY1u7v3qs7X2d0zrFS4lo4FvzYFeT+qP5enmWZMMbDTHlx\nJbwhAvcKSg2unpOz/X9z6VM5C6g76CYJY0W5f6t2q/5rWnGWlmbXRQmhhce1\nzT9b2FlZ5bR2Ujtj/ogd8EIBHKyh8t9PRRiGljiYNYHi5sxty0AShfN1uQfi\nhcfQ3oRMk+t48IiONckwcbNS1ALuDTlmkvvZaQw5SwKFbrcBvcgOndT4Ad4j\nx5e/kmsx3cY+4e2bwWhCw6SadeYa96vrD3+x2EY=\n",
    "encrypted_validation": "rZAZhYIqjxTQ1JnSCmhkE/HWVUAjut2KMACRkyINlKpMZF98K6BedF3I1Iyl\no7ZoCznXKpgr1GwSACfoXXtbguRj+bm04jOJ9GSZXg/ztBH0gVjaaoJIaolS\nAh0EO+4UcG7Tw97NsfXqS8eJCTNGByivAvzxh0Kc3LHIeOO5LbE=\n"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-06-07 19:46:50 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-07 19:57:31 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-07 20:38:34 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-07 20:47:55 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-07 20:52:03 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
