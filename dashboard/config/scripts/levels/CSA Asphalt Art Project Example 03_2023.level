<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**Teacher Feedback:** none\r\n\r\n##Result\r\n\r\n![](https://images.code.org/d928e5b90544a0ac5eb54cc25fb24aca-image-1666710355204.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "serialized_maze": [
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ]
    ],
    "csa_view_mode": "neighborhood",
    "start_sources": {
      "MyNeighborhood.java": {
        "text": "import org.code.neighborhood.Painter;\n\npublic class MyNeighborhood {\n  public static void main(String[] args) {\n    DiagonalStripePainter myPainter = new DiagonalStripePainter();\n    myPainter.setPaint(800);\n    myPainter.diagonalUntilDone(8);\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "PainterPlus.java": {
        "text": "import org.code.neighborhood.Painter;\n\n/*\n * Creates a PainterPlus\n * PainterPlus is a subclass of Painter.\n */\npublic class PainterPlus extends Painter {\n\n  /*\n   * Constructor to create a PainterPlus object\n   */\n  public PainterPlus() {\n    super();  // Calls the Painter constructor\n  }\n\n  /*\n   * Turns a PainterPlus object to the right\n   * by turning left three times\n   */\n  public void turnRight() {\n    turnLeft();\n    turnLeft();\n    turnLeft();\n  }\n\n  /*\n   * Unit 1 Lesson 9\n   */\n  public void takeAllPaint() {\n    while (isOnBucket()) {\n      takePaint();\n    }\n  }\n\n  /*\n   * Unit 1 Lesson 9\n   */\n  public void paintLine(String color) {\n    while (canMove()) {\n      paint(color);\n      move();\n    }\n  }\n\n  /*\n   * Unit 1 Lesson 10\n   */\n  public void moveOrTakePaint() {\n    while (canMove()) {\n      if (!isOnBucket()) {\n        move();\n      }\n      else {\n        takeAllPaint();\n      }\n    }\n  }\n\n  /*\n   * Unit 1 Lesson 10\n   */\n  public void moveSouth() {\n    while (canMove(\"south\")) {\n      if (!isFacingSouth()) {\n        turnRight();\n      }\n      else {\n        move();\n      }\n    }\n  }\n\n  /*\n   * Unit 1 Lesson 11\n   */\n  public void printStatus() {\n    System.out.print(\"Paint: \" + getMyPaint() + \", \");\n    System.out.print(\"Position: (\" + getX() + \", \" + getY() + \"), \");\n    System.out.println(\"Direction: \" + getDirection());\n  }\n\n  public void paintWell() {\n    while (canMove()) {\n      if (!isOnBucket()) {\n        move();\n      }\n      else {\n        takeAllPaint();\n      }\n      if (hasPaint()) {\n        paint(\"white\");\n      }\n    }\n  }\n\n  public void faceDirection(String direction) {\n    while (getDirection() != direction) {\n      turnLeft();\n    }\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "DiagonalStripePainter.java": {
        "text": "import org.code.neighborhood.*;\n\npublic class DiagonalStripePainter extends PainterPlus {\n\n  // calls PainterPlus constructor\n  public DiagonalStripePainter(){\n    super();\n  }\n\n  // sets up starting location of the painter\n  public void startLocation() {\n    faceDirection(\"south\");\n    move();\n  }\n\n  // function to make the painter go in a single staircase movement while painting it\n  public void staircasePaint() {\n      paint(\"white\");\n      move();\n      turnRight();\n      move();\n      turnLeft();\n  }\n\n  // function to create a diagonal line and stop at an edge (from west to north)\n  public void diagonalWestToNorth(){\n    faceDirection(\"north\");\n    while(canMove(\"north\") && canMove(\"east\")) {\n      staircasePaint();\n    }\n    paint(\"white\");\n    if (canMove(\"east\")) {\n      faceDirection(\"east\");\n    } else {\n      faceDirection(\"south\");\n    }\n    for (int i = 0; i < 3; i++) {\n      if (!canMove()) {\n        turnRight();\n      }\n      move();\n    }\n  }\n\n  // function to create a diagonal line and stop at an edge (from north to west)\n  public void diagonalNorthToWest(){\n    faceDirection(\"south\");\n    while(canMove(\"south\") && canMove(\"west\")) {\n      staircasePaint();\n    }\n    paint(\"white\");\n    if (canMove(\"south\")) {\n      faceDirection(\"south\");\n    } else {\n      faceDirection(\"east\");\n    }\n    for (int i = 0; i < 3; i++) {\n      if (!canMove()) {\n        turnLeft();\n      }\n      move();\n    }\n  }\n\n  // continue painting diagonal lines until the canvas is filled\n  // requires int input for the length of one side of the canvas\n  public void diagonalUntilDone(int canvasLength){\n    startLocation();\n    for (int i = 0; i < canvasLength/3; i++) {\n      diagonalWestToNorth();\n      diagonalNorthToWest();\n    }\n    if (2*canvasLength/3 - canvasLength/3 - canvasLength/3 > 0) {\n      faceDirection(\"north\");\n      staircasePaint();\n      paint(\"white\");\n    }\n  }\n}",
        "isVisible": true,
        "tabOrder": 4
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-10-25T14:42:12.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-10-25T14:42:12.121+00:00\",\"changed\":[\"cloned from \\\"CSA Asphalt Art Project Example 02_2023\\\"\"],\"cloned_from\":\"CSA Asphalt Art Project Example 02_2023\"},{\"changed_at\":\"2022-10-25 14:42:29 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 14:44:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 14:44:17 +0000\",\"changed\":[\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 15:05:55 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
