<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2023-04-11T14:10:42.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "A weather app wants to implement a system that displays weather information based on the user's location.\r\n\r\n‚úÖ **TO DO #1:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTemperature()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Weather</code> class that returns the temperature. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getSimilarLocations()</code> to get a list of similar locations with their weather data.\r\n\r\n‚úÖ **TO DO #2:** Write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTemperature()</code> method in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LocalWeather</code> class that overrides the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTemperature()</code> method to return the temperature based on the user's current location. The method should call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">private</code> method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getCurrentLocation()</code> to get the current location of the user and return the corresponding temperature.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class, create several <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Weather</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">LocalWeather</code> objects and call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getTemperature()</code> method for each object.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with overriding methods.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "reference_links": [
      "/courses/csa-2023/guides/method-overriding"
    ],
    "display_name": "Weather Information",
    "bubble_choice_description": "A weather app wants to implement a system that displays weather information based on the user's location.",
    "thumbnail_url": "https://images.code.org/280a7be7a46e7beae4e90891c33480b8-weather-forecast.png",
    "encrypted_validation": "Vp5OeVLRlzQzoMQDJg6vYD3/YOjwiTtHBQaNv32YzQ42nfvvItif0kZU9EyS\n2pPK2aJQJG30QfBAGs8/FU7c7wuEfXYXj5qma6JOIkR7aNjy3Gi5xTDxanrG\nbdaG9PzqhnYVMOFgONtCYPyCzDI+nwVhjcAiAjq9gFS5YXAJnoAlJEXfLUBc\n5OZBga1XefIcq12YxBqdQ0gBYmG9po3eb/WEOobuW+79UhP+JXwaHxHoM5Ao\nd9WKojt/jjGzOuANOii7X9NKBf2APUw3mCPWkozD7qq8xWhQA99DOPK0Pv4h\nY+rBPDBIKYFcw6/NOpkRovkzp4BsuoY4MrLVMweYW9NLyQ4hOxIuW6iaJfyA\nSXVCxSfpLinzq6po2UMJIpNPo/AHEu4nkAJ/Q/nntqkuZQhJ+S+bB/C1c2a3\n4cJuj0vg9dsTHzkqbNqpgh4RhMU8WCBHLvkFKiu8TxYH8UB8vfM4xylRKyYH\n7briHc4GSp+zqcyR2i0qVhYfpgciviZ7J24KH6GqqxJMjH1aKp6GLjkoy5v7\nLhyJ3CvMQ/cg98osr3M5dH5jg0vx5zrI5w6pDKTrJeeDMBxA3W4495gS7YaP\ncz6/OqCax5nVmX72PYA1lEVGmGLoyYDPnl09VDtWgx7NA1F/idfzS2grHM6W\nKolvIK5q/TZ3XpXW5ScQ7rIRqFRJBusC7dPFMAQxbcxmpgnQowzt/+hGKbD2\nSYHZSz9BvmolzJpOj1b9munpyv/w7AqCIkWBBSAkEide5jQFIsADdhggnG8k\nXu+/A17mRloT29lXU/14KZVoUbHmlai1r17DmNBcqWgaa04xjpEm/Eija+8g\nYxk3abPdjqUQ7/mXF0qiBCH9afypiuaoPHKBkf5ngAct2Usdinesu0p/rbb4\nQNiAxQwBTjo4Pdt2PfvV+rO9zw7wkd9UHeGYl3SKUhrmdIUt1OWTyxZjdHAG\nq5jrbIWuiwQeDUHVUkKLbTurrA0gNKBq9ii1UM3FC6xp6Mahjg/2w0OT1olm\nIT7Eq3aIKvRJIhSPiV5cJhh1fY3SfQCGTAYA4MPh/3scfqwbpytSFT4xcl9+\nf7z2GqIFgJIOac49NNnLySdGREknFPEzmWc6Np3Eg9TDUt2fCIEDngHObZTl\nAemGhmV5Jt1ObSr7hFbEWkTLBThXINF46eLlXm38TK1W3pA3RjXfeWgIgpFu\nLUEGrD7wljQgD/5zkbziOGsLfxaKaGkLY+aeR6jAhZ7glQRymcMkAlvbPjPa\n1h5O1PlSpGPwesoOuGSbRDrA4cJ+KYSAAGS34vmNwbbqAHA1fxthihPL2AIU\nK7ANIKIE3GAvuxWxK033RbDzuOXwJv/F6S1YhhJXXSNcPeotbJOqYrhVv3mo\nv6GskMp1K2AN5hKf5psp2DvBTO78u5JreVb152cPPcMPvFWAFm1jo8SGFSxL\nrXgM07zcMFVJZ/t2Ss8qzLe2aMpzTTJLfUudCg3atyOmhUfw1xwSq2Iu6zOB\nIHK7k2OP+uGUT9k8f9csiqJ55RQ4hClvxfBlIbYCoF552FJwIyM2mud1QtX9\nouodXHu3Tl9LwbWlm9yBea52k+DqC8eyc7K0WflYLHCW4O6GBHGEX8ndKpSU\nxIjx8bn/20HliYaW89crgYf9t8jzi93xWSxfE9/oei76ZXl2i94+0CAMTEyN\n3YVGi8mIqi7bur1YziVnZqEka8f6Eyoxsy4uRpCzcoPmV0SnEPWCLQ7KJiEb\nEiXiuhQR1FeBnHdIq97kCZykttdZg+l2BiHz9L0IWgmsoPSfk9L88HKlWLP7\ng57fjPNFF/vBzKUA/CJvVrWUqSJysJ+XU6U=\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import java.util.ArrayList;\n\nimport org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Create several Weather and LocalWeather objects and call the getTemperature()\n     * method for each object. Call the drawResult() with double returned from calling\n     * getTemperature();\n     * -----------------------------------------------------------------------------\n     */\n    ArrayList<Double> local = new ArrayList<Double>();\n    local.add(50.5);\n    local.add(61.2);\n    local.add(57.5);\n\n    Weather s = new Weather(59.9);\n    LocalWeather loc = new LocalWeather(52.4, local);\n    \n\n    // Plays the scene\n    Theater.playScenes(s);\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Weather.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a Weather\n */\npublic class Weather extends Scene {\n  private double temperature;\n  private int y = 100;\n  \n  public Weather(double temperature) {\n    this.temperature = temperature;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getTemperature() method to return the temperature of the weather. The method\n   * should call the private method getThisTemperature() to get this temperature.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  private double getThisTemperature() {\n    return temperature;\n  }\n\n    /*\n   * Draws the result in the scene\n   */\n  public void drawResult(double temperature) {\n    drawText(\"temperature \" + temperature, 50, y);\n    y += 50;\n    pause(0.5);\n  }\n}\n\n",
        "isVisible": true,
        "tabOrder": 1
      },
      "LocalWeather.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a LocalWeather\n */\npublic class LocalWeather extends Weather {\n  private ArrayList<Double> local;\n  \n  public LocalWeather(double temperature, ArrayList<Double> local) {\n    super(temperature);\n    this.local = local;\n  }\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ‚úÖ Write the getTemperature() method that overrides the getTemperature() method to\n   * return the temperature of the local weather. The method should call the private\n   * method getLocalTemperature() to get a list of local temperature, then\n   * randomly return one of the temperature.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  private ArrayList<Double> getLocalTemperature() {    \n    return local;\n  }\n}\n\n",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "YyRhf5XQ7GbGqjh3pQacF8EMMpqOQsu168sBLGi5TMsVHQwCwjwxspHfYzZ2\nsYcu8JWm1o5V85KTTxivox7H0lUtekLHFOOHk2oWfsdSJ+bLYtFi/kisk2Jp\n0liVUyKuPJT8xuJNfHv6vkN1xpu3OhZasMRHYGINMCp1Qki2AMtNDetX/A8k\nCjulfi1JoWTou4Jh6z05sjrmu62qtXidl3Hk9S/sTMju3+55LTj5/O59mjlt\nfGhlSHqiEEPnR20UldcmxlWjiTq5hPlND2y5UPz5xe/2WBXqMmQJGz4ksO3u\nClczC4pjppJ5zyAtueemqoYzCzLTxA3AyB3hH4Fc1o6ZbHZHzzWC7R/TDI/R\n9QjF6C32ISVplJt4sW8ar6lyaR/ergBGvn31XzrqjgijvLWIGFwGZC3ocV79\nqc1XmEvjSHJJh/qFm7htSLpGop626s/zjOOy52xjz7N8K2x2VSSSekOW8CoI\nBNSlzoJIRxPe3ltTnHTjZd+7fEDaOz/v6gsg27e1U+xek+rL1sNFdttln40D\nZabFOavKwSdua6YHjMuSsbUiUJFv2PyTyinV2qN/ke4iHd8LmySzCbu9T3Ug\nwxeIFt+MAS3+VJuqTYTdYgpQ89VQ14BJlq5EIdFfU/O2oh6Xotw01CrY9Jjk\ndsL1JsFhBWTfY3k45c4w0lcftDOxwMuP9G2tGLiGchp3pNOnfKFwvVCNzAem\nM+chxa3IFSfZ9w/t0DIGr672HTATDZnU5qHvVgreMrNWuAOhePRSR+5FuBnX\nT9v0T3OmIYMkVWA9bCvajTR3ajDzBq3fpnE3N+CxPHXUaDm69EWryak8l0G+\n5dbrfazqw0fdd76jjLzrfn2cEinOG6tamDQUKOoKlSbDzETdJsPOUYKXM13n\nbkfYHNGPrOyICHhV3zPsE9NCxAyyypQvi5TsaufGJKI7R2cEq4kidxUACLBY\nMoUNcZ0OP3gV4SejZF7b+thQlbqmlfG1QYeDFpOWUE7HvusPIvV2LKjWGtGN\nCrrlAjW/629/EcoqFTJH+peiHHo04KlwApiobXrUfSCpCPgxg4bJQbsmCfBS\n/h9epTPKB49LgbAfrQQUk3bVQY5tZRjO2O1Tw4x4gnVHB3Ch10mVr1wDso9s\naRSxw4yiY5qf7gZzufvped1fn+ckp1+xgbnLVRIigROLEmISEh6+dNmSn06I\n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\n"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-11T14:10:42.929+00:00\",\"changed\":[\"cloned from \\\"CSA U7L5-L6c_2023\\\"\"],\"cloned_from\":\"CSA U7L5-L6c_2023\"},{\"changed_at\":\"2023-04-11 14:10:44 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-28 02:35:19 +0000\",\"changed\":[\"long_instructions\",\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-07 18:54:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:54:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:01 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:22 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:55:51 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-07 18:56:03 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"}]"
}]]></config>
</Javalab>
