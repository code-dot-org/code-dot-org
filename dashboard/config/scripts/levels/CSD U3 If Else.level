<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-05-27T21:01:23.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "Game.mouseX": null,
      "Game.mouseY": null,
      "Game.frameRate": null,
      "keyDown": null,
      "keyWentUp": null,
      "keyWentDown": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "sprite.height": null,
      "sprite.width": null,
      "visible": null,
      "x": null,
      "y": null,
      "rotation": null,
      "shapeColor": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "comment_Sprites": null,
      "comment_GameLab": null,
      "comment_Variables": null,
      "comment_Math": null,
      "comment_Control": null,
      "comment_Drawing": null,
      "console.log": null
    },
    "show_d_pad": "true",
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# When to Provide a Fallback\r\n\r\nThe else clause is really useful as a fallback to the main condition that you're checking - that is, if you _care_ what happens when your primary condition is `false`, you should provide an else clause to take care of it.\r\n\r\n<img src=\"https://images.code.org/b386cee653e931dbd44c9a18c3bd4a22-image-1468440283473.gif\" style=\"float:right;width:200px\">\r\n\r\n# Do This\r\nThere is a swarm of bees created for you and a flower on the right side of the screen. Make the swarm of bees **appear when the mouse is near the flower** (on the left side of the screen) and **disappear when the mouse is away from the flower** (on the right side of the screen). Check out the example on the right.\r\n\r\n* Add an `if else` statement after you update the position of the bees\r\n* In the input of the if use a boolean to check if the x position of the mouse is on the side of the screen with the flower\r\n* Set the `visible` property of each bee inside both the if and else statements appropraitely to make the bees only show near the flower\r\n",
    "start_blocks": "var flower = createSprite(100, 200);\r\nflower.setAnimation(\"flower\");\r\nflower.scale = 0.5;\r\n\r\nvar bee1 = createSprite(randomNumber(0, 400), randomNumber(0, 400));\r\nbee1.setAnimation(\"bee\");\r\nvar bee2 = createSprite(randomNumber(0, 400), randomNumber(0, 400));\r\nbee2.setAnimation(\"bee\");\r\nvar bee3 = createSprite(randomNumber(0, 400), randomNumber(0, 400));\r\nbee3.setAnimation(\"bee\");\r\n\r\nframeRate(20);\r\n\r\nfunction draw() {\r\n  background('white');\r\n  \r\n  bee1.x = mouseX + randomNumber(-50, 50);\r\n  bee1.y = mouseY + randomNumber(-50, 50);\r\n  \r\n  bee2.x = mouseX + randomNumber(-50, 50);\r\n  bee2.y = mouseY + randomNumber(-50, 50);\r\n  \r\n  bee3.x = mouseX + randomNumber(-50, 50);\r\n  bee3.y = mouseY + randomNumber(-50, 50);\r\n  \r\n  drawSprites();\r\n}",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "callout_json": "[]",
    "start_animations": "{\r\n  \"orderedKeys\": [\"bee\", \"flower\"],\r\n  \"propsByKey\": {\r\n    \"bee\": {\r\n      \"name\": \"bee\",\r\n      \"sourceUrl\": \"https://images.code.org/d91cefbb2e45f0338ea49783c8c01283-image-1465514170553.png\",\r\n      \"sourceSize\": {\"x\":88, \"y\": 72},\r\n      \"frameSize\": {\"x\":88, \"y\": 72},\r\n      \"frameCount\": 1,\r\n      \"frameRate\": 15\r\n    },\r\n    \"flower\": {\r\n      \"name\": \"flower\",\r\n      \"sourceUrl\": \"https://images.code.org/40d064829d0d2ec31ba1e10689952bd0-image-1466131774152.png\",\r\n      \"sourceSize\": {\"x\":426, \"y\": 596},\r\n      \"frameSize\": {\"x\":426, \"y\": 596},\r\n      \"frameCount\": 1,\r\n      \"frameRate\": 15\r\n    }\r\n  }\r\n}",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>