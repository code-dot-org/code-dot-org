<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In ListSorter.java:\r\n\r\n1. Write the method `sortWords()`(#e7e8ea) to sort the list of words in alphabetical order.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `sortWords()`(#e7e8ea) method then print the updated list.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Sort a List",
    "bubble_choice_description": "Sort a list of items in alphabetical order.",
    "thumbnail_url": "https://images.code.org/67de5d36eb471e010b87e80e528e5a81-sort.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<String> wordList = FileReader.getStringData(\"words.txt\");\n\n    // TO DO #2: Call the sortWords() method and print the updated list.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "ListSorter.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Processes data in a list\n */\npublic final class ListSorter {\n\n  /*\n   * Sorts the words in wordList in alphabetical order\n   */\n  public static void sortWords(ArrayList<String> wordList) {\n    // TO DO #1: Sort the words in wordList in alphabetical order.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "words.txt": {
        "text": "environment\ncity\ncharacter\nroad\nsalad\nbanner\nbed\nthank\nattachment\nmedium\nrecord\nspeech\npause\nspell\ntone\nmystery\ncoat\nstage\nversion\nheight\nadvice\navenue\nchemistry\nwin\nacademy",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nfGzFswY8XMNf6SNGPnDcm6y20Q==\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:36:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:36:24.890+00:00\",\"changed\":[\"cloned from \\\"CSA U6L7-L4d_2022\\\"\"],\"cloned_from\":\"CSA U6L7-L4d_2022\"},{\"changed_at\":\"2022-04-14 19:36:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:08:53 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:15:21 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:24:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:26:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:34:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:54:18 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:56:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 01:01:26 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-19 20:08:04 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-19 20:08:56 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-19 20:09:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-19 20:10:04 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-19 20:10:11 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
