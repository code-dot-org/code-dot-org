<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In ListSorter.java:\r\n\r\n1. Write the method `sortWords()`(#e7e8ea) to return a new `ArrayList`(#e7e8ea) containing the list of items sorted in alphabetical order.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Declare and initialize an `ArrayList`(#e7e8ea) to store the `ArrayList`(#e7e8ea) returned from calling the `sortWords()`(#e7e8ea) method then print the list.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Sort a List",
    "bubble_choice_description": "Sort a list of items in alphabetical order.",
    "thumbnail_url": "https://images.code.org/67de5d36eb471e010b87e80e528e5a81-sort.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<String> wordList = FileReader.getStringData(\"words.txt\");\n\n    // TO DO #2: Call the sortWords() method and print the list.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "ListSorter.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Processes data in a list\n */\npublic final class ListSorter {\n\n  /*\n   * Returns an ArrayList containing the items in\n   * wordList sorted in alphabetical order\n   */\n  public static ArrayList<String> sortWords(ArrayList<String> wordList) {\n    // TO DO #1: Add each word in wordList to a new ArrayList in alphabetical order.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "words.txt": {
        "text": "environment\ncity\ncharacter\nroad\nsalad\nbanner\nbed\nthank\nattachment\nmedium\nrecord\nspeech\npause\nspell\ntone\nmystery\ncoat\nstage\nversion\nheight\nadvice\navenue\nchemistry\nwin\nacademy",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nIndDZJywcdRti+fohjPCaLlPKCjP\n"
  },
  "game_id": 68,
  "created_at": "2022-04-14T19:36:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:36:24.890+00:00\",\"changed\":[\"cloned from \\\"CSA U6L7-L4d_2022\\\"\"],\"cloned_from\":\"CSA U6L7-L4d_2022\"},{\"changed_at\":\"2022-04-14 19:36:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:08:53 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:15:21 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:24:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:26:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:34:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:54:18 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-06 23:56:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-07 01:01:26 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
