<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Create a scene that draws the logos of basketball teams based on the number of championship wins they have.\r\n\r\n##In BasketballScene.java:\r\n\r\n1. Write the `chooseSize()`(#e7e8ea) method using multi-selection statements to check the number of championship wins and return the size to draw the image.\r\n\r\n   * If the number of wins is greater than `10`(#e7e8ea), return a size of `150`(#e7e8ea).\r\n   \r\n   * Else if the number of wins is greater than or equal to `5`(#e7e8ea), return a size of `100`(#e7e8ea).\r\n   \r\n   * Otherwise, return a size of `50`(#e7e8ea).\r\n\r\n##In MyTheater.java:\r\n\r\n2. Call the `createScene()`(#e7e8ea) method with the array.\r\n\r\n3. Use `Theater.playScenes()`(#e7e8ea) to play the scene.\r\n\r\n::: details [**Show Me How**]\r\nA multi-selection statement uses the following syntax:\r\n  \r\n  ```\r\n  if (condition) {\r\n    // code to execute\r\n  }\r\n  else if (condition) {\r\n    // code to execute\r\n  }\r\n  else {\r\n    // code to execute\r\n  }\r\n  ```\r\n\r\nYou can have more than one `else if`(#e7e8ea) if you have additional conditions you need to check.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"logos.txt\");\n    String[] logos = myFileReader.getStringData(30);\n\n    myFileReader.setFile(\"wins.txt\");\n    int[] wins = myFileReader.getIntData(50);\n\n    BasketballScene myScene = new BasketballScene(logos, wins);\n\n    // TO DO #2: Call the createScene() method.\n\n\n    // TO DO #3: Use Theater.playScenes() to play the scene.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a double array containing the values in the file\n   */\n  public double[] getDoubleData(int numValues) {\n    double[] values = new double[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextDouble()) {\n        values[index] = fileReader.nextDouble();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "BasketballScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * A scene visualizing the number of championship wins\n * for each basketball team\n */\npublic class BasketballScene extends Scene {\n\n  private String[] logos;             // The list of basketball team logos\n  private int[] championships;        // The list of championship wins\n\n  /*\n   * Constructor to create a BasketballScene with the\n   * specified arrays of logos and championship wins\n   */\n  public BasketballScene(String[] logos, int[] championships) {\n    this.logos = logos;\n    this.championships = championships;\n  }\n\n  /*\n   * Return the size to draw the image based on\n   * the number of championship wins\n   */\n  public int chooseSize(int numWins) {\n    int size = 0;\n\n    // TO DO #1: Check the number of championship wins and\n    // decide the image size to use based on the value.\n    \n\n    return size;\n  }\n\n  /*\n   * Creates the scene by drawing each team logo based\n   * on the number of championship wins they have\n   */\n  public void createScene() {    \n    for (int i = 0; i < championships.length; i++) {\n      int x = (int) (Math.random() * getWidth());\n      int y = (int) (Math.random() * getHeight());\n      int size = chooseSize(championships[i]);\n      drawImage(logos[i], x, y, size);\n    }\n  }\n}",
        "isVisible": true
      },
      "logos.txt": {
        "text": "bostonceltics.png\nbrooklynnets.png\nnewyorkknicks.png\nphiladelphia76ers.png\ntorontoraptors.png\nchicagobulls.png\nclevelandcavaliers.png\ndetroitpistons.png\nindianapacers.png\nmilwaukeebucks.png\natlantahawks.png\ncharlottehornets.png\nmiamiheat.png\norlandomagic.png\nwashingtonwizards.png\ndenvernuggets.png\nminnesotatimberwolves.png\nokcthunder.png\nportlandtrailblazers.png\nutahjazz.png\ngoldenstatewarriors.png\nlosangelesclippers.png\nlalakers.png\nphoenixsuns.png\nsacramentokings.png\ndallasmavericks.png\nhoustonrockets.png\nmemphisgrizzlies.png\nneworleanspelicans.png\nsanantoniospurs.png",
        "isVisible": true
      },
      "wins.txt": {
        "text": "17\n0\n2\n3\n1\n6\n1\n3\n0\n1\n1\n0\n3\n0\n1\n0\n0\n1\n1\n0\n6\n0\n16\n0\n1\n1\n2\n0\n0\n5",
        "isVisible": true
      }
    },
    "display_name": "NBA Teams",
    "bubble_choice_description": "Draw the logos for each NBA team based on the number of championship wins they have.",
    "thumbnail_url": "https://images.code.org/4c3552b00321d044c4c44408ddc5af8c-image-1650719208107.png",
    "starter_assets": {
      "bostonceltics.png": "8d0c4cbc-ad44-4fec-b5bb-ea75a2f11845.png",
      "brooklynnets.png": "4ed2f12b-25bb-4a1f-a1a6-de3088a6b146.png",
      "newyorkknicks.png": "973a488c-6506-49e4-b5db-0a1e6307783e.png",
      "philadelphia76ers.png": "b62ef4ce-20e5-4fd2-a0f8-267612e24c44.png",
      "torontoraptors.png": "201e2e9f-e591-4ab2-a109-371d1d080bb7.png",
      "chicagobulls.png": "9c45f74b-e082-4eb0-8d70-b6404302a567.png",
      "clevelandcavaliers.png": "0e990edc-33d4-44b7-9777-06bd84338265.png",
      "detroitpistons.png": "5467cc09-9161-4d50-bb27-570488cf97fe.png",
      "indianapacers.png": "fb42d121-fcdd-477c-9b32-9dcad075b3f8.png",
      "milwaukeebucks.png": "eed23b47-9443-463d-9a7a-95fc668860f1.png",
      "atlantahawks.png": "089bc0ba-0a70-44b4-a2a9-bf770714f94f.png",
      "charlottehornets.png": "7307b9a1-b9cb-4af1-bf4b-11b2f45074fd.png",
      "miamiheat.png": "4c8a15cd-0413-4c84-9ae7-5ae5f4af0434.png",
      "orlandomagic.png": "55a8642f-355b-4f35-8679-dcc2725869aa.png",
      "washingtonwizards.png": "7491cdfa-9f32-4b15-9ff4-c10953d35bf9.png",
      "denvernuggets.png": "3c713d8e-7e68-483e-855c-af30a287d90e.png",
      "minnesotatimberwolves.png": "8c54f077-9c64-4a63-b143-a740aecd24bd.png",
      "okcthunder.png": "19419a54-8649-48b8-8b21-536a523e548b.png",
      "portlandtrailblazers.png": "06937393-537f-4aa6-b4c4-f326baeec984.png",
      "utahjazz.png": "67b4e79a-aae9-4c3e-b1dd-498f85971a63.png",
      "goldenstatewarriors.png": "f06c5338-5b48-45a1-91fb-ccdd990a289f.png",
      "losangelesclippers.png": "9a53038a-651e-486e-bec0-324d68044fc5.png",
      "lalakers.png": "22e61a3c-bcde-4f80-b4e9-983511257d1d.png",
      "phoenixsuns.png": "65dee8d5-28c7-4479-a837-d457a947d738.png",
      "sacramentokings.png": "d5b6b861-8036-4f0e-a55a-cf35dc37fdbe.png",
      "dallasmavericks.png": "f98ff3e0-e9ba-48db-a38d-fa35b55f3844.png",
      "houstonrockets.png": "f7643790-2edb-4ffc-89a6-62c06a7a92b9.png",
      "memphisgrizzlies.png": "e5115728-8b77-42fb-848f-9beba94cec64.png",
      "neworleanspelicans.png": "34dd1e64-8e4a-4d2f-a3f3-9c895d807e48.png",
      "sanantoniospurs.png": "b90c5bbd-2602-4a9d-ac10-fd2d12da00db.png"
    },
    "encrypted_exemplar_sources": "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\nScXZyM7At2y1XOB6z8oUIa4mgEc=\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-07T18:58:06.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-07T18:58:06.768+00:00\",\"changed\":[\"cloned from \\\"CSA U4L10-L3a_2022\\\"\"],\"cloned_from\":\"CSA U4L10-L3a_2022\"},{\"changed_at\":\"2022-04-07 18:58:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:00:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:02:36 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:06:59 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 15:25:01 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 15:36:36 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:08:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:14:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:15:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:16:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-25 21:15:52 +0000\",\"changed\":[],\"changed_by_id\":13506,\"changed_by_email\":\"sanchit+levelbuilder@code.org\"},{\"changed_at\":\"2022-05-03 12:42:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:42:54 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:42:59 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:43:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 13:01:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 13:01:34 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-22 19:56:22 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-22 19:56:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-22 19:56:35 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-22 19:57:37 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
