<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2018-05-04T23:03:50.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "write": null,
      "whileBlock": null,
      "addOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "randomNumber_min_max": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "markdown_instructions": "# Debug Console: Variable Values\r\n\r\nUp until now, if we wanted to find out the value of a variable at some point in the execution of a program, we've used `console.log`. That is still going to be a great strategy but **the Debug Console can do even more for us!**\r\n\r\n**Check this out:** We can check the value of a variable in real time (as our program executes) by typing its name into the prompt within the Debug Console and hitting \"enter\". **This is another powerful tool for debugging your programs.** \r\n\r\n![](https://images.code.org/7e7ff7aa041814cfcd69a1c9a028c439-image-1446826780896.gif)\r\n\r\n# Do This:\r\n\r\n* **Run the program.**\r\n\r\n* Use the Debug Console to **check the ending value of `num`**. You can do this by typing num in the Debug Console and hitting enter!",
    "start_blocks": "var num = randomNumber(1, 6);\r\nwrite(\"Number is \" + num);\r\nwhile(num != 6){\r\n  write(\"Nope. Not 6. Roll again.\");\r\n  num = randomNumber(1, 6);\r\n  write(\"New number is: \" + num);\r\n}\r\nwrite(\"Done.\");",
    "instructions": "Use console to check the ending value of num. (Click to see full instructions)",
    "parent_level_id": 6855,
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true
}]]></config>
  <blocks/>
</Applab>