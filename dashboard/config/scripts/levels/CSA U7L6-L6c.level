<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "display_name": "The Theater",
    "long_instructions": "The `Concert` class uses an array of `Scene` objects to display a concert.\r\n\r\nThe `Scene` class represents a scene in a concert and has a `playScene()` method to play the scene components.\r\n\r\nIn `Concert.java`, write the `selectBackgrounds()` method to prompt the user to choose background images from `backgrounds` and add them to the `tempList`.\r\n\r\nThe `IntroScene` class is a `Scene` that is used as the opening scene of a concert. In `IntroScene.java`, override the `playScene()` method from the `Scene` class to create an interesting drawing and/or add text.",
    "mini_rubric": "false",
    "bubble_choice_description": "Create scenes with overridden methods in The Theater.",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyTheater.java": {
        "text": "import java.util.ArrayList;\nimport java.io.FileNotFoundException;\n\npublic class MyTheater {\n  public static void main(String[] args) throws FileNotFoundException {\n\n    String[] backgrounds = {\"blue.png\", \"green.png\", \"pink.png\", \"purple.png\", \"red.png\", \"yellow.png\"};\n    \n    ArrayList<String> chosenBackgrounds = Concert.selectBackgrounds(backgrounds);\n\n    Concert demoConcert = new Concert(chosenBackgrounds);\n    demoConcert.playConcert();\n    \n  }\n}",
        "isVisible": true
      },
      "Concert.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.util.ArrayList;\nimport java.util.Scanner;\nimport java.io.FileNotFoundException;\n\npublic class Concert {\n\n  private ArrayList<String> backgrounds;\n  private Scene[] concertScenes;\n  private Stage myStage = Theater.stage;\n\n  public Concert(ArrayList<String> backgrounds) {\n    this.backgrounds = backgrounds;\n    concertScenes = createScenes(backgrounds.size());\n  }\n\n  public static ArrayList<String> selectBackgrounds(String[] backgrounds) {\n    ArrayList<String> tempList = new ArrayList<String>();\n    Scanner input = new Scanner(System.in);\n\n    String options = \"\";\n    for (int index = 0; index < backgrounds.length; index++) {\n      options = options + backgrounds[index] + \", \";\n    }\n\n    // TO DO: Write the selectBackgrounds() method to allow\n    // the user to choose images from the list backgrounds.\n    \n\n    return tempList;\n  }\n\n  private Scene[] createScenes(int numScenes) {\n    Scene[] tempScenes = new Scene[numScenes];\n    tempScenes[0] = new IntroScene(backgrounds.get(0));\n    \n    for (int index = 1; index < tempScenes.length; index++) {\n      tempScenes[index] = new Scene(backgrounds.get(index));\n    }\n    \n    return tempScenes;\n  }\n\n  public void playConcert() throws FileNotFoundException {\n    for (int index = 0; index < concertScenes.length; index++) {\n      concertScenes[index].playScene();\n      myStage.pause(3);\n    }\n    \n    myStage.play();\n  }\n}",
        "isVisible": true
      },
      "Scene.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Scene {\n\n  private String background;\n  private Stage myStage = Theater.stage;\n\n  public Scene(String background) {\n    this.background = background;\n  }\n\n  public void playScene() throws FileNotFoundException {\n    myStage.drawImage(background, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n    myStage.setStrokeWidth(0);\n    myStage.setFillColor(Color.WHITE);\n    myStage.drawRegularPolygon(200, 200, 10, 50);\n  }\n  \n}",
        "isVisible": true
      },
      "IntroScene.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class IntroScene extends Scene {\n\n  private Stage myStage = Theater.stage;\n\n  public IntroScene(String background) {\n    super(background);\n  }\n\n  // TO DO: Override the playScene() method from the Scene\n  // class to create an interesting drawing and/or add text.\n  public void playScene() throws FileNotFoundException {\n    \n  }\n  \n}",
        "isVisible": true
      }
    },
    "starter_assets": {
      "background1.png": "01b0ea4a-08e7-42df-810d-60ab15840df9.png",
      "blue.png": "6f76d944-6e11-44ba-97be-f94c792457e1.png",
      "green.png": "890c5888-c1f0-4261-84bd-60b9be739e63.png",
      "pink.png": "7961561b-6431-4b91-8aad-87890b0d76a8.png",
      "purple.png": "fd91e773-ac17-490d-922a-d0beaa979f2a.png",
      "red.png": "78a36b51-0eb5-435e-92ba-928ca41b7baa.png",
      "yellow.png": "56da207b-cfae-4ce4-a004-a0e731dab321.png"
    },
    "thumbnail_url": "https://images.code.org/970d4886a53a00d9e60e77b2e221ccb1-image-1639688661088.gif",
    "encrypted_examples": "Y5oxU2saAYVgPIsEA2UtbgpirxPfyQgbuyBX978jkHb8P3/b6ls7VSz8nxyw\nx3Dwb0kaHYW4NtDW3p0ojL60KZvcfcYzy+/TTZtw1tvSWpVv4rYEfpKBYBzb\n+YrA3c2M\n"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2021-12-06T17:17:29.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2021-12-06T17:17:29.126+00:00\",\"changed\":[\"cloned from \\\"CSA U7L6-L6b\\\"\"],\"cloned_from\":\"CSA U7L6-L6b\"},{\"changed_at\":\"2021-12-06 17:17:41 +0000\",\"changed\":[\"display_name\",\"long_instructions\",\"bubble_choice_description\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-09 20:22:52 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-09 23:54:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-09 23:54:57 +0000\",\"changed\":[\"csa_view_mode\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-10 00:10:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-10 00:20:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-10 00:23:16 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-10 00:25:36 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-10 00:26:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-10 00:27:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-10 00:29:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-16 21:05:45 +0000\",\"changed\":[\"bubble_choice_description\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-02-16 21:24:26 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-02-16 21:26:43 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
