<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-10-06T22:56:04.000Z",
  "level_num": "custom",
  "user_id": 106,
  "properties": {
    "skin": "gamelab",
    "embed": "false",
    "markdown_instructions": "# Play and Pause\r\n\r\nYou can use the `sprite.play` and `sprite.pause` commands to play and pause a sprite's animation. If the animation is already playing or paused, using these commands twice in a row has no effect.  There's one important exception, however, which is that **play will restart a non-looping animation if it has finished**. We're going to look at some cool behavior this lets us create.\r\n\r\n# Do This\r\n\r\n* Use the `sprite.play` command after each of your `setAnimation` commands. This will restart the walk animations as long as the keys are pressed.",
    "submittable": "false",
    "start_blocks": "// Variables\r\nvar score = 0;\r\n// Create Sprites\r\nvar cake = createSprite(350,200);\r\n\r\nvar player = createSprite(200,200);\r\n\r\nvar enemy1 = createSprite();\r\n\r\nvar enemy2 = createSprite();\r\n\r\nfunction draw() {\r\n  // draw the background\r\n  gameBackground();\r\n  // update the sprites\r\n  enemiesTouchCake();\r\n  movePlayer();\r\n  displaceEnemies();\r\n  enemiesTouchWater();\r\n  showScore();\r\n  drawSprites();\r\n}\r\n\r\n// Functions\r\nfunction gameBackground() {\r\n  noStroke();\r\n  background(rgb(0,100,255));\r\n  fill(rgb(100,100,100));\r\n  rect(0,150,400,100);\r\n  fill(rgb(80,80,80));\r\n  rect(0,140,400,10);\r\n  rect(0,250,400,10);\r\n}\r\n\r\nfunction enemiesTouchCake(){\r\n  \r\n}\r\n\r\nfunction movePlayer(){\r\n  \r\n}\r\n\r\nfunction displaceEnemies(){\r\n\r\n}\r\n\r\nfunction enemiesTouchWater(){\r\n  \r\n}\r\n\r\nfunction showScore() {\r\n  fill(\"white\");\r\n  textSize(20);\r\n  text(\"Score\",20,20,200,100);\r\n  text(score,20,40,200,100);\r\n}",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "text_mode_at_start": "false",
    "hide_view_data_button": "false",
    "debugger_disabled": "false",
    "hide_animation_mode": "false",
    "show_d_pad": "false",
    "pause_animations_by_default": "false",
    "start_animations": "{\r\n  \"orderedKeys\": [\r\n    \"2e736881-4ea8-4eca-85bb-26f9706b5e05\",\r\n    \"a835e970-9099-430b-8a20-0a3ff372bbe8\",\r\n    \"a68bf5c5-c831-4a78-bb22-4410894c3d0c\"\r\n  ],\r\n  \"propsByKey\": {\r\n    \"2e736881-4ea8-4eca-85bb-26f9706b5e05\": {\r\n      \"name\": \"alienWalkRight\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/DXku1Qmmd1MnorDZbvUOJQ/2e736881-4ea8-4eca-85bb-26f9706b5e05.png?version=YzR3T7ylWjfl6uIq0cuSAG93TfRGok9L\",\r\n      \"frameSize\": {\r\n        \"x\": 36,\r\n        \"y\": 50\r\n      },\r\n      \"frameCount\": 2,\r\n      \"looping\": true,\r\n      \"frameDelay\": 10,\r\n      \"version\": \"YzR3T7ylWjfl6uIq0cuSAG93TfRGok9L\"\r\n    },\r\n    \"a835e970-9099-430b-8a20-0a3ff372bbe8\": {\r\n      \"name\": \"cake\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/DXku1Qmmd1MnorDZbvUOJQ/a835e970-9099-430b-8a20-0a3ff372bbe8.png?version=EbmTTH44G2wVZikfoc0yCCIqYY7t7F2o\",\r\n      \"frameSize\": {\r\n        \"x\": 100,\r\n        \"y\": 100\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"EbmTTH44G2wVZikfoc0yCCIqYY7t7F2o\"\r\n    },\r\n    \"a68bf5c5-c831-4a78-bb22-4410894c3d0c\": {\r\n      \"name\": \"ladybug\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/DXku1Qmmd1MnorDZbvUOJQ/a68bf5c5-c831-4a78-bb22-4410894c3d0c.png?version=spSmK9SIJ8Tm9f3WHLkCGg_kI6j8EDrP\",\r\n      \"frameSize\": {\r\n        \"x\": 30,\r\n        \"y\": 17\r\n      },\r\n      \"frameCount\": 2,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"spSmK9SIJ8Tm9f3WHLkCGg_kI6j8EDrP\"\r\n    }\r\n  }\r\n}",
    "all_animations_single_frame": "false",
    "start_in_animation_tab": "false",
    "instructions_important": "false",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "World.mouseX": null,
      "World.mouseY": null,
      "World.frameRate": null,
      "playSound": null,
      "keyDown": null,
      "keyWentUp": null,
      "keyWentDown": null,
      "mouseDidMove": null,
      "mouseIsOver": null,
      "mouseDown": null,
      "mouseWentDown": null,
      "mouseWentUp": null,
      "mousePressedOver": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "setSpeed": null,
      "isTouching": null,
      "destroy": null,
      "pointTo": null,
      "bounce": null,
      "bounceOff": null,
      "collide": null,
      "displace": null,
      "overlap": null,
      "setAnimation": null,
      "setCollider": null,
      "setVelocity": null,
      "sprite.height": null,
      "sprite.width": null,
      "debug": null,
      "depth": null,
      "lifetime": null,
      "mirrorX": null,
      "mirrorY": null,
      "pause": null,
      "play": null,
      "x": null,
      "y": null,
      "rotateToDirection": null,
      "rotation": null,
      "rotationSpeed": null,
      "scale": null,
      "shapeColor": null,
      "velocityX": null,
      "velocityY": null,
      "visible": null,
      "comment_Sprites": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "comment_Drawing": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "comment_Control": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "randomNumber_min_max": null,
      "mathRandom": null,
      "comment_Math": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "comment_Variables": null,
      "console.log": null,
      "functionParams_none": null,
      "callMyFunction": null,
      "comment": null,
      "stopSound": null
    },
    "show_debug_watch": "true",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "Need to add gif of what it should look like.",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>