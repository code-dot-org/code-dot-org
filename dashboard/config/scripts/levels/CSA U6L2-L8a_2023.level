<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A data scientist is working on analyzing customer feedback for a company's products. The feedback is in the form of sentences and paragraphs. The data scientist needs to preprocess the text data by breaking it down into individual words, so they can perform tasks such as counting the frequency of certain words or identifying common themes in the feedback.\r\n\r\n‚úÖ **TO DO #1:** Write the method <code style=\"background-color: #ececec; color: black; font-weight: bold;\">textToWords()</code> in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ProductData</code> class to create and return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing the individual words from <code style=\"background-color: #ececec; color: black; font-weight: bold;\">feedback</code> on separate lines.\r\n\r\n1. For each line in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">feedback</code>, use the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">indexOf()</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">substring()</code> methods in the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class to obtain and concatenate each word in the line to a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> on a new line.\r\n\r\n2. Return the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> containing each word in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">feedback</code> on new lines.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ProductRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">textToWords()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">indexOf()</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">substring()</code> methods.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\ncreate an empty String to contain the result\r\nfind the location of the first space\r\n&nbsp;\r\nwhile the location of the space is not -1\r\n  get current word between index 0 and the space\r\n  concatenate the current word to the result plus a new line\r\n  update feedback to the location of the space + 1\r\n  find the location of the next space\r\n&nbsp;\r\nconcatenate the rest of feedback to result\r\nreturn result\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Customer Feedback",
    "bubble_choice_description": "A data scientist is working on analyzing customer feedback for a company's products. The feedback is in the form of sentences and paragraphs. The data scientist needs to preprocess the text data by breaking it down into individual words, so they can perform tasks such as counting the frequency of certain words or identifying common themes in the feedback.",
    "thumbnail_url": "https://images.code.org/c090ba3d3b67b5a655622ae0a3f5c35b-feedback.png",
    "encrypted_validation": "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\nwV544gI=\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "ProductRunner.java": {
        "text": "public class ProductRunner {\n  public static void main(String[] args) {\n\n    // Creates a customer feedback\n    String customer = \"The product has exceeded my expectations and I will definitely be a returning customer.\";\n\n    // Creates a ProductData object\n    ProductData feedback = new ProductData(customer);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the textToWords() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ProductData.java": {
        "text": "/*\n * Represents feedback for a product\n */\npublic class ProductData {\n\n  private String feedback;    // The feedback for a product\n\n  /*\n   * Sets feedback to the specified customer feedback\n   */\n  public ProductData(String feedback) {\n    this.feedback = feedback;\n  }\n\n  /*\n   * Returns the customer feedback\n   */\n  public String getFeedback() {\n    return feedback;\n  }\n\n  /*\n   * Returns a String containing each word in feedback on separate lines\n   */\n  public String textToWords() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use the indexOf() and substring() methods in the String class to obtain\n     * each word in feedback and concatenating it to a new String on a new line.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    return \"\";\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    }
  },
  "game_id": 68,
  "created_at": "2023-04-03T13:48:30.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-03T13:48:30.221+00:00\",\"changed\":[\"cloned from \\\"CSA U6L2-L7d_2023\\\"\"],\"cloned_from\":\"CSA U6L2-L7d_2023\"},{\"changed_at\":\"2023-04-03 13:48:32 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 16:27:42 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:01:55 +0000\",\"changed\":[\"long_instructions\",\"display_name\",\"bubble_choice_description\",\"thumbnail_url\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:24:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:24:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:26:06 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:37:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:37:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:37:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:40:34 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:41:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:41:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 22:41:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
