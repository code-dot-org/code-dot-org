<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A video game sorts scores to create a scoreboard displaying scores in order from the highest score to the lowest score.\r\n\r\nUse the selection sort algorithm to sort the list of scores from the highest score to the lowest score.\r\n\r\n##In GameScores.java:\r\n\r\n1. Write the method `sortScores()`(#e7e8ea) to sort the instance variable `gameScores`(#e7e8ea) using a selection sort.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `sortScores()`(#e7e8ea) method and print the updated list.\r\n\r\n::: details [**Show Me How**]\r\nThe algorithm for a selection sort is:\r\n\r\n**Step 1:** Set MIN to location 0\r\n**Step 2:** Find the minimum element in the list\r\n**Step 3:** Swap with value at location MIN\r\n**Step 4:** Set MIN to point to the next element\r\n**Step 5:** Repeat until list is sorted\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Game Scores",
    "bubble_choice_description": "Sort an ArrayList of game scores to display the scores from highest to lowest.",
    "thumbnail_url": "https://images.code.org/861ca4ff4abd6fd47257ea0f262da1aa-console.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<Integer> gameScores = FileReader.getIntData(\"scores.txt\");\n\n    GameScores myScores = new GameScores(gameScores);\n\n    System.out.println(\"Before Sort\");\n    myScores.printScores();\n\n    System.out.println(\"\\nAfter Sort\");\n    \n    // TO DO #2: Call the sortScores() method and print the updated list.\n    \n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "GameScores.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Stores and processes scores for a video game\n */\npublic class GameScores {\n\n  private ArrayList<Integer> gameScores;   // The list of game scores\n\n  /*\n   * Constructor to create a GameScores object\n   * with the specified list of game scores\n   */\n  public GameScores(ArrayList<Integer> gameScores) {\n    this.gameScores = gameScores;\n  }\n\n  /*\n   * Sorts the list of game scores from the\n   * highest score to the lowest score\n   */\n  public void sortScores() {\n    // TO DO #1: Implement the selection sort algorithm\n    // to sort the list of game scores.\n\n    \n    \n  }\n\n  /*\n   * Prints the values in gameScores\n   */\n  public void printScores() {\n    for (int index = 0; index < gameScores.size(); index++) {\n      System.out.println(\"#\" + (index + 1) + \": \" + gameScores.get(index));\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "scores.txt": {
        "text": "514\n794\n815\n683\n668\n700\n660\n545\n773\n542",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\n2oIP1iXT\n"
  },
  "game_id": 68,
  "created_at": "2022-04-18T19:42:09.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-18T19:42:09.743+00:00\",\"changed\":[\"cloned from \\\"CSA U8L5-L3b_2022\\\"\"],\"cloned_from\":\"CSA U8L5-L3b_2022\"},{\"changed_at\":\"2022-04-18 19:42:11 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 01:42:48 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 01:44:22 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 11:43:47 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 11:44:04 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 11:50:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 11:52:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 11:53:42 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 11:54:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 20:43:47 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 20:47:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 20:47:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 20:48:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 20:49:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 20:49:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-15 20:56:12 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
