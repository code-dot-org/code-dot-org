<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A coach keeps track of their team's performance in a text file. They want to calculate the average time it takes the team to complete a race.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Team</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getAverageTime()</code> method to calculate and return the average time it takes the team to complete a race.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TeamRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getAverageTime()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Integer</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with instantiating <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Integer</code> objects and using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">parseInt()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "video_key": "csa_wrapper_classes_part_1",
    "display_name": "Team Performance",
    "bubble_choice_description": "A coach keeps track of their team's performance in a text file. They want to calculate the average time it takes the team to complete a race.",
    "thumbnail_url": "https://images.code.org/503cd41e008148c9e91723ff0630854d-finish.png",
    "encrypted_exemplar_sources": "kln86cfj4m2PmLO8/SRCxcqR3GZsSsfKZzK9ucp0NXhH7Md4uRhfChX24D4Y\n92LyqdyX9hyF+fdZQYHI7tyzvOMnIY9BL+XSUnoj4J34RED7tAswpZLbHmOS\nq1eVrJxfT1pU9ch6HIc4xrcEaEycddmgIVucmOgZ8ePPkQPnZSuy+bj00MBn\nnOTvqYPUcbrez24w880QRmx268TETS7MtJZ7YHOkzc6L8rRI+8+jvyaENiKf\njh6MqK6MhQVisigLls0HFnXa/8vkEzY4pzD1hwugkm7M96JBIv5fkD2HYTlA\nlcbGqQyqZ6iJ4GqGGcFDQLWqH8eXsp1ReTC35axUPeyE4uT+PsR9YS613Wkt\nCWiYMciTlHnepD8ETfrPAPgMu4Vnwm8R2W2S1oyeEAWGLaXi7mrfD2wUuzFh\nDX8hyX3mNGmOxw1lIVd/D7p2ezrlVASykxuhfvGVKDSPe74FRPkUzfeGZu6c\nNkUb2unKRaLzZo8NVDo6gUIXqT21w+AfzRI5fm/N+boTEdPGISGgPvLXLIXi\nlOCYPX4t//E1LtOzPpKXVYIVXmApoaCQKJ7ckioV7UPMvSSUqangIr3ZAiMR\nst54oo5XZkDTq1v3qk7EUshC4jOJrXoXSJSWywY/Are3GT/mtdPZX5U46TE7\nTPHI7QN+LgW3z6z5/s+IilGjqoDzYddpgp1XrRA4v6Xgw5omKkgFHuiylByO\nPySOqvU3qt+KmNW5TZTeDBW52TVJfNTeqfheap1eCwXCGC5cLV+w1PAXjfCU\ntmg2gL9H1PZi/1LQ5gMIAGq6Z41jDMX4feuiapswuQHdTsURXZlh4WN8l2B4\n3uQDqjBddkBMgArgTgwXJ+OQMkh+KcFYkMmhx0t9xE9/2hAECCxXclMT+cwF\njrsZBlzQZmvnmUbahnXTz601/rGEcXdXMcB7AKSAWwVRNHmWNPYmO2WQMOhN\nbnVVYUAbe3SdyTXmTdjo7wkkJoXeOvluCQ/2Qj/yBaHUl8Z4TQ4si50p/SNn\nyLaUWqGpfBjk8P4gnoPBlP+4gNWa8Kh709TVfiwCqAex9PyudLlO0S5uUPLx\nz4HDbjtLShQR7r+YzS4TsjiRVYCEki6wyrT6OMBxAu0PVLnDs4/uOBLLW9Dc\nnXAIBD6+qy0E7QmwZR25mSuGKOwD10EO9UQjqdwVi+YM3KyuTnT5dXvDyy5J\njFQcE+7LT+RwFVdxsJLJNuH/vZz6qQ4/PTWYVTExu+kUcIzpKIooSZX5PUZ6\nGol3n1J+rMBCprSPaGKMKObTV1sgfa1KS3OKmrJtfqFRJHmGVNwXcPp92I4B\nC4AyFEtLcYZOwP/On2eZjz45fx0TE80oGGzD5dWI1uH2LlVQP9VzHHDOBEWB\nr/OaWNvcfM1QlbF39XyAikjbSx79GprJYIwdl40q7jKCmPIFOeU7OkCiE3zJ\nr9pfEEcEsgnfGPLApt6jq2aDGib3QGaXCzx9td3raRdCOkmLoysnDAJHD+fe\nLleRQpx4uDpFUywC38T5Urf0smcBsnPRY3FTMhIIgRndOpAAnysUz0/akNTi\nowsHCO7LQadI40BE5Pza0Y4oGh/cUYjKO7tkJm3S/Mt/3zyiDkA6RWX9+vSt\ngNqkqIyPzNsKem69hPB2dDzWt703zc0l9RWDXa1Cmcp6qCH7Imw8bvnW7Tjt\npGm/b+JZ/gKeVKnzz/IoWIzJvg0ojxylRlOLzf+Hw8o5lixZbb0SEtmz/psW\njCQ7OGt9hXVmGpNjf4OXKYHAEUAP3WUHZ54vfK7Ek1gyTVQ56n24MoYD38gJ\nlm0Kvala1HN78Wvt6e2XnQbrTBxOA1fOvUPo5CLrHCWQE3I6SEaxEiAfk9L8\nbwritydc7DRfexmob6tUFX0k2wnjfWonZb0GbzyrkjYK1amQOvGnNlg1YwiT\nwzYVMV1OW99SxmYnhxMClbfI1wC5grpUuVilFKa3sKuyC4ZJRKMJpzOrxLyO\nT3NtwSgnaZiMCPGebtCZf+wa7fHimTYeSPQzPJTa4BkzYOwJmkOr5jgZYVUb\nR1PlG9IESnQHHNGTKz7Kts8bE3jR+O59Rckvp8qwENwQrgs4B9nHBsAOqCT6\nlznIkW6K21GLkDdeRCBTVuWrgdC54NQcsmqJHwI6yTI2LtL71zq/RdnkpsYQ\nj1vgiaUDQk4qH344bFZkK5MAa2tRXEElvAEq/WpFtIz2u/gsXpS9BzqdzWs/\nbo5aa0fC9SXLXkBPR5ufZ6LksbVTv0UOU2g4G7W8iCuKFOWwzAy6QdV6wZwO\nS99p0FuU6FEzhzXAf4+3IUKaJzExRcVGnRk7OfjQkgU2TbI8oqkHJRo3MFHW\nZG6OL5Lg8QdYKKNAGXi+jUKWgk+viRqNiDmbPLXSuPpuHsNqNFxjxWfHP5z8\nHgY7qTgO3X6TPpiPrLk8OhHdT4y6uT3UdDRf769+2+cEGdtPCAKQ3pG1u1Hg\nbklKwTQTEuJiTKoVXdXt6U/cM6o1vK8IJe9wEEU6yXOrFbdYzVYvLsBO/2yF\nvswsJjrbGpGdgcwKgzVSha20ItxeGjeBlfQppRPoXnGyAo5h/qQkl1L/g0zh\nkyr83D27FQVhyIOdlNWLMYYFAtVA9hVlWqSPE6xRwI0L5t8GCY9ftwWn4kVC\nwklD5m71KTne7cysRGvChXExlw38MjvI2P6k0vlMRoetX9LdzIQZuYcThcBb\nZGxx8C2h0AFAy/RhxM378U+HMcx2MWk5EVou++s+Y0ogT30xG5tThUyhHv+1\nA8SQb1BZpnahE81SpqxVGz16xWBsE8VdtjqxHCAyKrhIIb4Qcpb2f00PSeiE\n0Vf3IPsjWm+EbnrCDy9Kw8hJTDMfTuulPF9zxsbK6avrTQMLddoJr3iaDk/l\nB/ZOuX9jdYQaL1a/rgE2dQHUl8vpHCqTrfVMtf2CnA/Ow+A9ChARp9uUOrCP\niYKBzeOP60lFiSOvMjbKlDP1OXOKVW/KUvj8P0/kT4gTcZokhpIROH4grEX2\nijph2XOBkBrmME5TC52RVeQBO7wWTVrZgEJZud88WyTmpcXlW+foXWbhuZMT\nC/jzwI0vG4ghOldKjEnuJN3HX0LUn3x5v2VJbV6zhz8VDXD4fMQpMf8R4qpH\n3Gos4+SwKs5w/zgfECffT39BUXk/92OC2WCCKiRBTDtjaNlpVgCTPdrWJVVN\nyxnzOWi5OUITw/mXha98RUHj0ehyZeQsLaCNRPVHszb+7+PmcYfC7/IERRee\nd+cL6XzyfVWDCTz/X2/2gti+omMwVxcqINz64qA9xekLVfld+w9jghETbT3t\nxmjB/lQ7jdRY93q0GZcZCO+BQ4HlF6kWoAhqIWrlDKSkF7cwTWV76Rd0e3KM\nBni0PO9PMjgzYIt+szeU8dUqpPfQUFzAxJhCO2A98M0yw4D/fghHOGgbBToC\n8AUgXiVSy5hVeYRKSI4RrAazlfyEvoZlQ2gGjJonAWUq56Ynn1zPdE7xok+Q\nXq0PXDhaOw5GkgUFIYk4v1RyWSi+YEq7zeqcF44bYSOHjIocncl3VEHfhAOL\nYrVIv1TwcYxdkYHgDJSPrWRNUqVTqZGmhhJvHCCIU0n1Ura8+W3VPLrARZcr\nffqRbAdP5S6Yz82NnlBjVz+7vvHuNkK78Po4+0xQDTEvHPm7pJTJczedi+D4\n3+zi+46mDkqOkBKy33mBuT4J1Ph5f7H7Q1x4c/YujXrCY3MydstUzS+C6aVt\nPDQm19AsZOJhczL0au/UYPhoWMlrusCgu39eHZdI79m094ofMF9bdBRrOmYJ\nhedAZO9m08xqFrFFk7G1p1bTZStzLha7m397djALjBmfox13fimtec2m785s\nBGF3FrSB0sH6FxPYci2t6sQ3c6O2e60v3BGAZJoWLWcAInzeQaoHlEQe8xJR\nD9g9IY74nr+8a2ya62UYwgyUYmuJFPbPZglDZcdy8veqKV08vcZQ/UL7rhhj\n7ZJm3wiPFM8GQq8CIHwDtDoNVp9Lgy5gQPttHGy4gfC588N5MvrfGfQ7/3Pd\nXxUJCgYH+MpR1dhHeOWCc06h06nhv2ACF3bR3MZYu0z5Y6/dunUYnueUTDmO\nkjE1OHDRK8XKNUBP2VD48OcSY6NEiZBLBGJnZnAsoMqYFTekEemU4vL/hRFw\nKQZkyo3I+2pdepxihbCm14ZR0zbu/RIgDpRTXcBr1+3teEVZGcw66swY0yIZ\nNIEULIy8YEyOW+yyZMD4fLncmzR6LjDOT9CLdfMkEYdGitBCxvmzrf+RA0bH\n/O6QpTn4mfqSZtJ0oN6FhWjoS1khpM5m1ZpWnLY0FnhiRTwfefsbxJQeZnbs\nvJIYSd7dRaG8cWBvgawtRJb4M+8pQWFvImlhF00B60pbcdifTZ4z3vV4/GKf\nN8V9ttlpey87HdzhvsRzZCcOglrR9w7qIJwAnRkiGfOqZhtv+royGGSljL3s\nWjehvVNFJQFaMt0mhdAIp+iSam/S4siFF00h5hic+J6VU5iAt3Okg0qihHtI\ndkEt4sNwBmnedsVN9QeT829ROQHudBT+OicmUtE3/sJs\n",
    "encrypted_validation": "E+2k/sFrRMhTsCodHtF1yKCCjT7fD16ucUZqM0U4Xfrciigv4Wu+4RrZd3V1\nDXGRAFjwwod1FZpq9tkYfffjeW0gKENGlSTkHzConKYkJwjh2MABBpABRoJy\nn9j7kraoFtllnC11XKf9Xjodrz/9b/+Ji2Hmt+bzjX2KH5ZxMWYOcswLkToj\neNwaw6KuPUL8OuJOv2oIlmdDpWAzq5fF9XlG9CdxFlcpZW59Qt6baT8SGPxa\neAPJDw8nlXrmPmnS+xf6zZIIOQnJEC7UVMWrvtaRQJGRhbxw4/0Sudk5zhiN\nTKAyIOhOIkns+tE0ltUrRJgChrua+UqgcRjIOqUbyZ7CgDpvDDnVm8I9sRya\nssi3st8bHLvG6GXxK54J5RQmR7+ESB8ojTwqBJakfGyeFcAWribVmge7sSyC\nbWHdZHndA3jd7RPFNMhFiQXVCj7vbYUA5SLGsMGyVqoHQmmWx16gwSMrLGNe\ngKAsWa2o7ffguMooxtc1rXyg1GR30DfMKj5YGb0/5sTfGQSVYULuKCdpevah\nOzt4ViKwpRxab8IUOKt1qGSmxA+I/c2bgtWTo0hRb3wTlOYW0JSAW4gyCJNK\ncdxZwIU9s9Juo6Cofg83HUZvdc0r1JUiU0TU7yBhALrp85zqYquKYt4w+Dpd\nnPeybxahCbjRfKlaatWvVxcLH35U9E1Ilk/l5X5tDIaKc9NmINYfZs2QrJmR\neWtmOH29b/C97YDT+7Z+5BAkvuU8bu8DEwDBoBEvC6T+fcPGJvSe3ZRh3hkB\nTnUe6oUhAYge9HKdS6wM66bulemMhpiYLV3+gxuzC0s+uLdm+sG0eCtSevHF\nLfMK2Qq+yiCmFi/1ZpI2nG3QoIGInhF+Jz0NR3vkmM9k0UNj6ULsuaenSYRA\nIu2HvapzDUVt3ht1B9PGTRXbpUsqbcBjysS2ZVFsx3ZUuaoRzv1+fcw1NPn3\n2Ps/dKOzCkDIsI5HwmtXsECt9ARDWFMLbFDMzntAawbUehBYQb9E9vpSALY7\nTWGplsZFn7BmMvMS6LScxBoVNWqwQ0b6FSwBYPK2NzPfKVZ/iETUjcVK8f6P\nyRFjNZ9I7OnhHuMb1zd874SHrB5ALuEpo6nV90hHeaEsI8X/m8aLIbn+q+wB\n9lnLHE+oby138RfmO8prF5cLYlA96mHpJLW73rdLcPIcetUMy/qoyjTbePUC\nNVKIiiT5FaAfPVIrdolA1xny5em3+KAadwEGgaxyQnICeSpPM7sHt64c/CoG\nJl/3PZWWOdUOsF8ho8jSE17ytjCMwr8237KsUcsMUsvbNXFsQfn8S1JwzGk7\nWKUab85xYJd/pR6Vq0jVJDHSWDR/k7Be9lcX3uzGwtVyTDxwr30NAtQFof/m\nAU/VZZdTOXxZQavt9XCWeyApkthM4DKtfP1NhdIM6Xx0yIkXjtcPP9PwOBka\nxwTQqYusFnjTXbuEPxLTjwme5cfcEqBfQwW4/rB2FMjumgcR5jORfsVvAIjD\nZJw1z9qI1iLBVjawqUBkm5l3C5WQvKqxTed85UqTMP2k1xblYvPxJZn4jZR1\n/0bAJUW8QZPtXbSD/4ud7E2wIcNxF2+liA1SEEH/MA9TjALlTAz05qbKWcVa\nEJGmS9B8b8t5yn+fR1dhOzWmM9zvxVcv72pWG4y6uHbI\n",
    "start_sources": {
      "TeamRunner.java": {
        "text": "public class TeamRunner {\n  public static void main(String[] args) {\n    String[] times = Team.createTimes(\"times.txt\");\n    Team myTeam = new Team(times);\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the getAverageTime() method and print the result\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Team.java": {
        "text": "/*\n * Represents a team\n */\npublic class Team {\n\n  private String[] times;     // The times of each individual on the team\n  /*\n   * Sets times to the specified values\n   */\n  public Team(String[] times) {\n    this.times = times;\n  }\n\n  /*\n   * Returns the average time it takes the team to complete a race\n   */\n  public int getAverageTime() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Calculate the average time it takes the team to complete a race.\n     * -----------------------------------------------------------------------------\n     */\n\n    return 0;\n  }\n\n  /*\n   * Returns a 1D array of Strings using the data in the specified files\n   */\n  public static String[] createTimes(String timesFile) {\n    return FileReader.toStringArray(timesFile);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "times.txt": {
        "text": "20\n21\n24\n19\n32",
        "isVisible": true,
        "tabOrder": 2
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      }
    }
  },
  "game_id": 68,
  "created_at": "2023-04-03T13:52:08.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-03T13:52:08.140+00:00\",\"changed\":[\"cloned from \\\"CSA U6L3-L6b_2023\\\"\"],\"cloned_from\":\"CSA U6L3-L6b_2023\"},{\"changed_at\":\"2023-04-03 13:52:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-17 14:32:15 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 16:55:37 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-02 02:42:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:43:51 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:45:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:46:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:46:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:46:55 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:50:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:50:56 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:51:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:51:17 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:51:20 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:51:33 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:51:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:51:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:51:50 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:56:47 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:57:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:57:32 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:57:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:57:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:58:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 02:58:18 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 03:25:00 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 03:25:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:48:13 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:48:15 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:48:16 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:48:16 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:49:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:50:27 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:51:35 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:52:25 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:52:51 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:53:56 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:54:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:54:07 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:54:34 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:54:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:54:43 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 15:54:47 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"},{\"changed_at\":\"2023-05-02 16:44:58 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"}]"
}]]></config>
</Javalab>
