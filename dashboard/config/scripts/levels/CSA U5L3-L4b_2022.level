<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A family is trying to decide on which dog breed to adopt. They want to choose a dog breed that is less than or equal to 20 inches tall. They have the following values:\r\n\r\n![](https://images.code.org/48f45f5c5536ef79b2e6f45293020325-image-1650999244520.png)\r\n\r\nwhere each row represents a Beagle, Dalmation, Golden Retriever, and Pug, respectively. Each column represents the minimum height and maximum height of each dog breed, respectively.\r\n\r\n##In DogData.java:\r\n\r\n1. Write the method `findHeight()`(#e7e8ea) to find the dog breed with a minimum height and the dog breed with a maximum height that is less than or equal to `20`(#e7e8ea). Print each value found that meets the criteria.\r\n\r\n   * If the value is less than or equal to `maxHeight`(#e7e8ea) and the column is `0`(#e7e8ea), print the corresponding name of the breed from the `breeds`(#e7e8ea) based on the row that the value is found, the value found, and that it is the minimum height.\r\n   \r\n   * If the value is less than or equal to `maxHeight`(#e7e8ea) and the column is `1`(#e7e8ea), print the corresponding name of the breed from the `breeds`(#e7e8ea) based on the row that the value is found, the value found, and that it is the maximum height.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array in column-major order uses the following syntax:\r\n  \r\n  ```\r\n  for (int col = 0; col < arrayName[0].length; col++) {\r\n    for (int row = 0; row < arrayName.length; row++) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Dog Breeds",
    "bubble_choice_description": "Write a method to find the dog breeds with a minimum and maximum height that meet a specific criteria and print the results.",
    "thumbnail_url": "https://images.code.org/88f3474433cfc656f10f5f9d39e325fc-image-1650999257527.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] breeds = {\"Beagle\", \"Dalmation\", \"Golden Retriever\", \"Pug\"};\n    int[][] heights = {{13, 15}, {19, 23}, {22, 24}, {10, 12}};\n\n    DogData myDogs = new DogData(breeds, heights);\n\n    myDogs.findHeight(20);\n    \n  }\n}",
        "isVisible": true
      },
      "DogData.java": {
        "text": "/*\n * Analyzes data about dog breeds\n */\npublic class DogData {\n\n  private String[] breeds;  // The list of dog breeds\n  private int[][] data;     // The 2D array of data to analyze\n\n  /*\n   * Constructor to create a DogData with the\n   * specified array of breeds 2D array of data\n   */\n  public DogData(String[] breeds, int[][] data) {\n    this.breeds = breeds;\n    this.data = data;\n  }\n\n  /*\n   * Finds the dog breed that has a minimum height and the dog\n   * breed that has a maximum height less than or equal to maxHeight\n   */\n  public void findHeight(int maxHeight) {\n    // TO DO #1: Print the dog breed that has a minimum height and the\n    // dog breed that has the maximum height less than or equal to maxHeight.\n\n    \n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\neVmRCaxIES7A\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-12T19:00:52.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-12T19:00:52.040+00:00\",\"changed\":[\"cloned from \\\"CSA U5L3-L4a_2022\\\"\"],\"cloned_from\":\"CSA U5L3-L4a_2022\"},{\"changed_at\":\"2022-04-12 19:00:54 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 15:14:06 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 16:53:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 17:11:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 17:39:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 17:44:19 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-27 17:44:28 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
