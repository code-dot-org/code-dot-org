<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"countries.txt\");\n    String[] countries = myFileReader.getStringData(65);\n\n    myFileReader.setFile(\"fees.txt\");\n    double[] fees = myFileReader.getDoubleData(65);\n\n    Netflix myNetflixStats = new Netflix(countries, fees);\n\n    // TO DO #2: Print the result of a call to hasDuplicates().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a double array containing the values in the file\n   */\n  public double[] getDoubleData(int numValues) {\n    double[] values = new double[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextDouble()) {\n        values[index] = fileReader.nextDouble();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "countries.txt": {
        "text": "Argentina\nAustralia\nAustria\nBelgium\nBolivia\nBrazil\nBulgaria\nCanada\nChile\nColombia\nCosta Rica\nCroatia\nCzechia\nDenmark\nEcuador\nEstonia\nFinland\nFrance\nGermany\nGibraltar\nGreece\nGuatemala\nHonduras\nHong Kong\nHungary\nIceland\nIndia\nIndonesia\nIreland\nIsrael\nItaly\nJapan\nLatvia\nLiechtenstein\nLithuania\nMalaysia\nMexico\nMoldova\nMonaco\nNetherlands\nNew Zealand\nNorway\nParaguay\nPeru\nPhilippines\nPoland\nPortugal\nRomania\nRussia\nSan Marino\nSingapore\nSlovakia\nSouth Africa\nSouth Korea\nSpain\nSweden\nSwitzerland\nTaiwan\nThailand\nTurkey\nUkraine\nUnited Kingdom\nUnited States\nUruguay\nVenezuela",
        "isVisible": true
      },
      "fees.txt": {
        "text": "6.3\n12.12\n14.67\n15.24\n10.99\n7.11\n11.29\n11.87\n9.91\n6.86\n12.99\n11.29\n11.49\n15.04\n10.99\n11.29\n13.54\n15.24\n14.67\n14.67\n12.42\n10.99\n10.99\n10\n10.71\n14.67\n6.61\n10.66\n14.67\n15.05\n14.67\n13.13\n11.29\n20.46\n11.29\n10.65\n10.43\n11.29\n13.54\n13.54\n12.53\n12.17\n11.49\n8.56\n9.14\n10.58\n13.54\n11.29\n10.84\n14.67\n12.81\n11.29\n10.05\n11.47\n14.67\n14.2\n20.46\n11.9\n10.43\n3\n8.46\n13.2\n13.99\n12.99\n10.99",
        "isVisible": true
      },
      "Netflix.java": {
        "text": "/*\n * Analyzes data about Netflix subscription fees in different countries\n */\npublic class Netflix {\n\n  private String[] countries;\n  private double[] subscriptionFees;\n\n  /*\n   * Constructor to create an Netflix object with the\n   * specified arrays of countries and their subscription fees\n   */\n  public Netflix(String[] countries, double[] subscriptionFees) {\n    this.countries = countries;\n    this.subscriptionFees = subscriptionFees;\n  }\n\n  /*\n   * Returns true if there are duplicate years in\n   * the subscriptionFees array, otherwise returns false\n   */\n  public boolean hasDuplicates() {\n    // TO DO #1: Traverse the subscriptionFees array to determine if there\n    // are duplicate values and return the result.\n\n\n    return false;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "name_suffix": "_pilot-2022"
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:44.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:44.830+00:00\",\"changed\":[\"cloned from \\\"CSA U3L10-L3d PBT_2022\\\"\"],\"cloned_from\":\"CSA U3L10-L3d PBT_2022\"},{\"changed_at\":\"2022-09-09 19:55:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-09 19:55:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
