<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L4-L3a PBT_pilot-2022",
    "long_instructions": "Request a code review to get feedback from your peers on your `hasAtLeast()`(#e7e8ea) method.\r\n\r\nWhen you are finished receiving feedback, return to your project and click the **Close review** button.\r\n\r\n##Requesting Feedback\r\n\r\n**Commit your code** and add a comment that includes:\r\n\r\n* a description of the goals and intended outcome of the program\r\n\r\n* any additional relevant information\r\n\r\n* specific tasks or questions you want your reviewer to perform or answer\r\n\r\n##TAG to Give Feedback\r\n*Remember to keep feedback kind, specific, and helpful. Refer to your sentence starters to structure your feedback.*\r\n\r\n1. Tell them something you like about their code.\r\n\r\n2. Ask them something about the code.\r\n\r\n3. Give a suggestion for improvement.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Crops",
    "bubble_choice_description": "Determine if a 1D array of crop yields contains at least one value that is greater than or equal to a specific value.",
    "thumbnail_url": "https://images.code.org/ccb71b81c733b7d425baf7a0ab5c0609-image-1648576359049.png",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\nKp79u6W8vSQt\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] cropsList = {\"tomatoes\", \"strawberries\", \"carrots\", \"apples\", \"sweet potatoes\"};\n    int[] yieldsList = {968079, 650772, 463819, 394802, 212510};\n\n    Crops myCrops = new Crops(cropsList, yieldsList);\n\n    System.out.println(\"My crops has a yield of at least 600000: \" + myCrops.hasAtLeast(600000));\n    \n  }\n}",
        "isVisible": true
      },
      "Crops.java": {
        "text": "/*\n * Stores and analyzes the list of\n * crops and their annual yields\n */\npublic class Crops {\n\n  private String[] types;    // The types of crops\n  private int[] yields;      // The yield in hectograms\n\n  /*\n   * Constructor to create a Crops object with\n   * specified types of crops and yields arrays\n   */\n  public Crops(String[] types, int[] yields) {\n    this.types = types;\n    this.yields = yields;\n  }\n\n  /*\n   * Returns the array types\n   */\n  public String[] getTypes() {\n    return types;\n  }\n\n  /*\n   * Returns the array yields\n   */\n  public int[] getYields() {\n    return yields;\n  }\n\n  /*\n   * Checks if yields array contains at least one value\n   * that is greater than valueToFind\n   */\n  public boolean hasAtLeast(int valueToFind) {\n    // TO DO #1: Check if yields array contains at least\n    // one value that is greater than valueToFind.\n\n\n    return false;\n  }\n  \n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:15.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:15.844+00:00\",\"changed\":[\"cloned from \\\"CSA U3L4-L4a CR_2022\\\"\"],\"cloned_from\":\"CSA U3L4-L4a CR_2022\"},{\"changed_at\":\"2022-09-01 14:35:12 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
