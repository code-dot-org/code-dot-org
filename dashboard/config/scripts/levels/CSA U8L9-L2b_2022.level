<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A teacher wants to place students in pairs for an assignment. They have a list of students and want to find the name of a student whose name is closest to the target name and comes after the target name.\r\n\r\n##In PairFinder.java:\r\n\r\n1. Write the method `findPartner()`(#e7e8ea) to use the binary search algorithm to find and return the name that is closest and comes after the name to find.\r\n\r\n**Hint:** When returning the student from `students`(#e7e8ea), use the mod operator to return the name at the front of the list if the target name comes after the last name in `students`(#e7e8ea).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `findPartner()`(#e7e8ea) method and print the result.\r\n\r\n::: details [**Show Me How**]\r\nThe binary search algorithm can be implemented using iteration or recursion.\r\n  \r\n**Iteration Method**\r\nwhile low is less than high\r\n  mid = (low + high) / 2\r\n  \r\n  if target comes after list[mid]\r\n    low = mid + 1\r\n  else\r\n    high = mid - 1\r\n\r\nreturn list[low]\r\n\r\n**Recursive Method**\r\nString binarySearch(list, target, low, high)\r\n  mid = (low + high) / 2\r\n  \r\n  if low is greater than high\r\n    return list[low]\r\n  \r\n  if target comes after list[mid]\r\n    return binarySearch(list, target, mid + 1, high)\r\n  else\r\n    return binarySearch(list, target, low, mid)\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] students = {\"Blake\", \"Claire\", \"Dominic\", \"Elias\", \"Leah\", \"Natalie\", \"Sophia\"};\n\n    // TO DO #2: Call the findPartner() method and print the result.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "PairFinder.java": {
        "text": "/*\n * Manages a list of students\n */\npublic final class PairFinder {\n\n  /*\n   * Finds the closest matching student that comes after target\n   */\n  public static String findPartner(String[] students, String target) {\n    // TO DO #1: Implement the binary search algorithm to find the closest student.\n    \n\n    \n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "jrRNHcOowRx22njbDNzE6K10Ex1m7JwmHnodMo3x9M3whHWcg6iZtaYI6xrj\nzv5yPCuYAzceOPKi/RvbXJlr4eT80msh8z94CD6HfRG96TiRqjGHS/FJoFtg\nA2b3dDEH6vnYg1ZQLwcswIOaKvMDVN8q/M2rZIpq2kwh2D7vb9bOOfPm9gZ5\nq9AOcVcVLPl7/LjBjFibZ2XhJ9Y3fwdwmKsYGFesZQzrChOi9IBk9+LUo3Vw\n+zHf67v93Yr04s7dvIzXRt9nsjthmQjchqs50JdQIzGAa9h4b8TElHJzn8PS\nYxTbTt21ZQiQHmfn3vmS+P5nvMVPPnDKQmS3kKJ0aOPTIwafVUPbmt1vJSHw\nxiQ+6nUlq5B4+Ei3/43Dv7aXvS9DzKq/orkqmyp31nLF2IJdHBZgc1X6eN9E\nq03i2ralcvDQemrop5xhAuKSslk9qAobZ5EmzSibGw/wfqMNOpYbK/E64ThB\n2tlMHkf2r88roO5wwAeFw6weNSMWM2Y01zIV0vHffcdkqIjgSmgDCzUI00eg\n9OZSBbddDacuTDmgO4Bf6aiTumADihD8CoFidZVQwtbtltxpbY4Ycyi7RgRy\nzx3hrvOZnAc4XJq4PKDJmuMIWomhTvsa4voskRoISXJWNv943+iEDp64x2Cw\nyarsEyiFwKgBRwHKjMc+BVXJrEAfieDC/ARAmymXAPjiXFAXgdt2C3Gg9+8P\nxdGCgEy64Bgs1TjdW+izBRBvVc11/3mBNOkyKVKoqdKh9Q97nh1iPtLuPu2f\nzPR/qn985LlUyd6lkjo79ws80YIS4tf2QBK2dAkoIpMMzBPqO9vi0wVC1M4+\nKKF3DJY1at/PkOFqOMr00lEarMUeAGmTckg4RUS1bQwC3Fj1dovlNKarG/Lk\n2p3ZCJPJJ8/ugVvEycw3S9mfCm7vpxTa38dPM3C4NYgCBiKampC+ziG5M23s\nYnuyvAhaUqSW4IIxtyhr/Sq+eKokrw2XqZwRGFzDZMHDNkdBqsgetmgER9vm\nBe08mbwAmevjcqUaUPjEx38N7KW6/n8A9fK5bV0xUQQyGaMmJvU3tCgIr8Vf\n5Ory2I6wFlsWvHsNR6/V232Ye8LPRzCViD7y4I1d1Y9wt/qIm9LFknVBjgsG\npLanV7u5NV+4GjXpGvIbWk1H2szZO/1HHnK+6Ba/I+fdQ5gGBRfQ2e0P99jv\ngNu6qkUlvMH/OT/edQOIuhh97bUblMHmjxpSbhhYoOnNNJZ7OYwZy9tdqWDF\nfeQo2IiTnvbGIhXDz7BOm6kI2Rd201EbuXWmS9Odm15OyoYDqAilC75SII7/\noYHOk3z4qS8P+wYgIREuIaYhlLULULB9rfU6p+nN6MLmsgScjzRhfFaL8DTg\ngx4vn7rms/FKobBNM2KJI2Zhb1mU\n",
    "encrypted_examples": [

    ],
    "display_name": "Finding Students",
    "bubble_choice_description": "A teacher wants to place students in pairs for an assignment. They have a list of students and want to find the name of a student whose name is closest and comes after the target name.",
    "thumbnail_url": "https://images.code.org/71345917b57ae89670566bff83934dcc-pair.png"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-18T19:48:29.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-18T19:48:29.488+00:00\",\"changed\":[\"cloned from \\\"CSA U8L9-L2a_2022\\\"\"],\"cloned_from\":\"CSA U8L9-L2a_2022\"},{\"changed_at\":\"2022-04-18 19:48:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 16:57:10 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 17:53:32 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 17:56:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 17:56:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 17:56:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 18:10:21 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 19:10:37 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
