<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-11-12T22:12:30.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Test out the return values of the findMax function.  (Click to see full instructions)",
    "markdown_instructions": "# Functions with Return Values\r\n\r\nLet's try out another function that returns. As reminder here are the rules for writing functions with return values:\r\n\r\n* A function can **only return a single value.**\r\n* You **must use the word `return`** in the code, it is a command that makes the computer return control back to the place in the code where the function was called from in the first place. **Note:** All of the functions we've written so far have an implied return statement - when the execution hits the last curly brace it returns back to where it left off\r\n* **When the function returns you can also send a value along with it,** when you did this you say the function returns a value\r\n\r\n# Do This\r\n\r\n* Check out the example of a function that accepts two numbers and returns the larger the two.\r\n\r\n* **Call the findMax function with a couple different sets of numbers. `console.log` the results.**",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_blocks": "function findMax(num1, num2){\r\n  var max;\r\n  if(num1 > num2){\r\n     max=num1;\r\n  }\r\n  else{\r\n    max = num2;\r\n  }\r\n  return max;\r\n}"
  }
}]]></config>
  <blocks/>
</Applab>