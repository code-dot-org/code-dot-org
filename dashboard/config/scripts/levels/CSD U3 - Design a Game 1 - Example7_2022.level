<Gamelab>
  <config><![CDATA[{
  "properties": {
    "skin": "gamelab",
    "validation_enabled": "false",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "keyDown": null,
      "keyWentDown": null,
      "keyWentUp": null,
      "mouseDidMove": null,
      "mouseDown": null,
      "mouseIsOver": null,
      "mouseWentDown": null,
      "mouseWentUp": null,
      "mousePressedOver": null,
      "showMobileControls": null,
      "World.mouseX": null,
      "World.mouseY": null,
      "World.frameRate": null,
      "World.frameCount": null,
      "World.seconds": null,
      "World.width": null,
      "World.height": null,
      "World.allSprites": null,
      "camera.on": null,
      "camera.off": null,
      "camera.isActive": null,
      "camera.mouseX": null,
      "camera.mouseY": null,
      "camera.x": null,
      "camera.y": null,
      "camera.zoom": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "x": null,
      "y": null,
      "velocityX": null,
      "velocityY": null,
      "scale": null,
      "sprite.height": null,
      "sprite.width": null,
      "visible": null,
      "rotation": null,
      "rotationSpeed": null,
      "rotateToDirection": null,
      "debug": null,
      "isTouching": null,
      "collide": null,
      "displace": null,
      "overlap": null,
      "bounce": null,
      "bounceOff": null,
      "bounciness": null,
      "setCollider": null,
      "createEdgeSprites": null,
      "shapeColor": null,
      "tint": null,
      "alpha": null,
      "setVelocity": null,
      "getDirection": null,
      "getSpeed": null,
      "setSpeedAndDirection": null,
      "pointTo": null,
      "mirrorX": null,
      "mirrorY": null,
      "getScaledWidth": null,
      "getScaledHeight": null,
      "lifetime": null,
      "nextFrame": null,
      "pause": null,
      "play": null,
      "setFrame": null,
      "depth": null,
      "destroy": null,
      "comment_Sprites": null,
      "var group = createGroup": null,
      "add": null,
      "remove": null,
      "clear": null,
      "contains": null,
      "get": null,
      "group.isTouching": null,
      "group.bounce": null,
      "group.bounceOff": null,
      "group.collide": null,
      "group.displace": null,
      "group.overlap": null,
      "maxDepth": null,
      "minDepth": null,
      "destroyEach": null,
      "pointToEach": null,
      "setAnimationEach": null,
      "setColorEach": null,
      "setColliderEach": null,
      "setDepthEach": null,
      "setHeightEach": null,
      "setLifetimeEach": null,
      "setMirrorXEach": null,
      "setMirrorYEach": null,
      "setRotateToDirectionEach": null,
      "setRotationEach": null,
      "setRotationSpeedEach": null,
      "setScaleEach": null,
      "setSpeedAndDirectionEach": null,
      "setTintEach": null,
      "setVelocityEach": null,
      "setVelocityXEach": null,
      "setVelocityYEach": null,
      "setVisibleEach": null,
      "setWidthEach": null,
      "comment_Groups": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "rgb": null,
      "rect": null,
      "ellipse": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "arc": null,
      "line": null,
      "point": null,
      "regularPolygon": null,
      "shape": null,
      "comment_Drawing": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "comment_Control": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "comment_Math": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "comment_Variables": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "show_debug_watch": "false",
    "encrypted": "false",
    "encrypted_examples": "eMlheSNWyBxYMw5XlI0KY+dHmkn6QH947AayizZUR/iKoXxn/zbEa30htFBb\n2GxaNsTpFoEqCIB4AZGn3NriaA==\n",
    "embed": "true",
    "display_name": "Example G",
    "mini_rubric": "false",
    "thumbnail_url": "https://images.code.org/f775f0b2f6dbf4403ea49dc2a6490109-image-1647986220661.png",
    "submittable": "false",
    "hide_share_and_remix": "true",
    "start_blocks": "//Student project - there may be small bugs or inconsistencies in the code\r\n\r\nvar stage = 0;\r\nvar score = 0;\r\n\r\nvar bucket = createSprite(200, 360);\r\nbucket.setAnimation(\"bucket\");\r\nbucket.scale = 1.1;\r\n\r\nvar pizza = createSprite(randomNumber(10, 390), -30);\r\npizza.setAnimation(\"pizza_slice_1\");\r\npizza.scale = 0.2;\r\n\r\nvar fries = createSprite(randomNumber(10, 390), -30);\r\nfries.setAnimation(\"fries_1\");\r\nfries.scale = 0.2;\r\n\r\nvar apple = createSprite(randomNumber(10, 390), -30);\r\napple.setAnimation(\"red_apple_1\");\r\napple.scale = 0.2;\r\n\r\nvar burger = createSprite(randomNumber(10, 390), -30);\r\nburger.setAnimation(\"burger_1\");\r\nburger.scale = 0.2;\r\n\r\nvar orange = createSprite(randomNumber(10, 390), -30);\r\norange.setAnimation(\"orange_1\");\r\norange.scale = 0.2;\r\n\r\nvar banana = createSprite(randomNumber(10, 390), -30);\r\nbanana.setAnimation(\"bannana_1\");\r\nbanana.scale = 0.15;\r\n\r\nfunction draw() {\r\n  back();\r\n  \r\n  if (stage == 0) {\r\n    fill(\"white\");\r\n    textSize(25);\r\n    text(\"Grab all the healthy foods.\", 60, 47);\r\n    text(\"Use arrows to move the bucket,\", 30, 127);\r\n    text(\"from side to side.\", 110, 207);\r\n    text(\"Press space to start.\", 90, 285);\r\n    if (keyWentDown(\"space\")) {\r\n      stage = 1;\r\n    }\r\n  }\r\n  \r\n  if (stage == 1) {\r\n    functions();\r\n    if (score >= 100) {\r\n      stage = 2;\r\n    }\r\n    if (score <= -50) {\r\n      stage = 3;\r\n    }\r\n  }\r\n  \r\n  if (stage == 2) {\r\n    pizza.y = -40;\r\n    fries.y = -40;\r\n    burger.y = -40;\r\n    apple.y = -40;\r\n    orange.y = -40;\r\n    banana.y = -40;\r\n    bucket.x = 200;\r\n    bucket.y = 360;\r\n    fill(\"white\");\r\n    textSize(45);\r\n    text(\"YOU WIN!!\", 90, 137);\r\n    textSize(25);\r\n    text(\"Press space to play again.\", 60, 207);\r\n    if (keyWentDown(\"space\")) {\r\n      score = 0;\r\n      stage = 1;\r\n    }\r\n  }\r\n  \r\n  if (stage == 3) {\r\n    pizza.y = -40;\r\n    fries.y = -40;\r\n    burger.y = -40;\r\n    apple.y = -40;\r\n    orange.y = -40;\r\n    banana.y = -40;\r\n    bucket.x = 200;\r\n    bucket.y = 360;\r\n    fill(\"white\");\r\n    textSize(45);\r\n    text(\"You Lost.\", 110, 137);\r\n    textSize(25);\r\n    text(\"Press space to play again.\", 60, 207);\r\n    if (keyWentDown(\"space\")) {\r\n      score = 0;\r\n      stage = 1;\r\n    }\r\n  }\r\n\r\n  drawSprites();\r\n}\r\n\r\nfunction back() {\r\n  noStroke();\r\n  background(rgb(80,0,80));\r\n  fill(rgb(180,0,0));\r\n  rect(0,160,400,80);\r\n  fill(rgb(0,125,125));\r\n  rect(0,80,400,80);\r\n  rect(0,240,400,80);\r\n}\r\n\r\nfunction Score() {\r\n  textSize(25);\r\n  fill(\"white\");\r\n  text(\"Score:\", 10, 25);\r\n  text(score, 85, 25);\r\n}\r\n\r\nfunction fall() {\r\n  banana.velocityY = 2;\r\n  banana.rotationSpeed = 6.5;\r\n  orange.velocityY = 2.5;\r\n  orange.rotationSpeed = 6.5;\r\n  burger.velocityY = 3.5;\r\n  burger.rotationSpeed = 6.5;\r\n  apple.velocityY = 3;\r\n  apple.rotationSpeed = 6.5;\r\n  fries.velocityY = 4;\r\n  fries.rotationSpeed = 6.5;\r\n  pizza.velocityY = 4.5;\r\n  pizza.rotationSpeed = 6.5;\r\n}\r\n\r\nfunction control() {\r\n  if (keyDown(\"left\")) {\r\n    bucket.x = bucket.x - 4.5;\r\n  }\r\n  if (keyDown(\"right\")) {\r\n    bucket.x = bucket.x + 4.5;\r\n  }\r\n}\r\n\r\nfunction reset() {\r\n  if (pizza.y > 430) {\r\n    pizza.y = -30;\r\n    pizza.x = randomNumber(10, 390);\r\n    pizza.velocityY = randomNumber(2, 4.5);\r\n  }\r\n  \r\n  if (fries.y > 430) {\r\n    fries.y = -30;\r\n    fries.x = randomNumber(10, 390);\r\n    fries.velocityY = randomNumber(2, 4.5);\r\n  }\r\n  \r\n  if (apple.y > 430) {\r\n    apple.y = -30;\r\n    apple.x = randomNumber(10, 390);\r\n    apple.velocityY = randomNumber(2, 4.5);\r\n  }\r\n  \r\n  if (burger.y > 430) {\r\n    burger.y = -30;\r\n    burger.x = randomNumber(10, 390);\r\n    burger.velocityY = randomNumber(2, 4.5);\r\n  }\r\n  \r\n  if (orange.y > 430) {\r\n    orange.y = -30;\r\n    orange.x = randomNumber(10, 390);\r\n    orange.velocityY = randomNumber(2, 4.5);\r\n  }\r\n  \r\n  if (banana.y > 430) {\r\n    banana.y = -30;\r\n    banana.x = randomNumber(10, 390);\r\n    banana.velocityY = randomNumber(2, 4.5);\r\n  }\r\n}\r\n\r\nfunction scoring() {\r\n  if (bucket.isTouching(apple)) {\r\n    apple.y = -30;\r\n    apple.x = randomNumber(10, 390);\r\n    apple.velocityY = randomNumber(2, 4.5);\r\n    score = score + 3;\r\n  }\r\n  \r\n  if (bucket.isTouching(orange)) {\r\n    orange.y = -30;\r\n    orange.x = randomNumber(10, 390);\r\n    orange.velocityY = randomNumber(2, 4.5);\r\n    score = score + 3;\r\n  }\r\n  \r\n  if (bucket.isTouching(banana)) {\r\n    banana.y = -30;\r\n    banana.x = randomNumber(10, 390);\r\n    banana.velocityY = randomNumber(2, 4.5);\r\n    score = score + 3;\r\n  }\r\n  \r\n  if (pizza.y > 425) {\r\n    pizza.y = -30;\r\n    pizza.x = randomNumber(10, 390);\r\n    pizza.velocityY = randomNumber(2, 4.5);\r\n    score = score + 2;\r\n  }\r\n  \r\n  if (fries.y > 425) {\r\n    fries.y = -30;\r\n    fries.x = randomNumber(10, 390);\r\n    fries.velocityY = randomNumber(2, 4.5);\r\n    score = score + 2;\r\n  }\r\n  \r\n  if (burger.y > 425) {\r\n    burger.y = -30;\r\n    burger.x = randomNumber(10, 390);\r\n    burger.velocityY = randomNumber(2, 4.5);\r\n    score = score + 2;\r\n  }\r\n  \r\n  if (bucket.isTouching(pizza)) {\r\n    pizza.y = -30;\r\n    pizza.x = randomNumber(10, 390);\r\n    pizza.velocityY = randomNumber(2, 4.5);\r\n    score = score - 10;\r\n  }\r\n  \r\n  if (bucket.isTouching(fries)) {\r\n    fries.y = -30;\r\n    fries.x = randomNumber(10, 390);\r\n    fries.velocityY = randomNumber(2, 4.5);\r\n    score = score - 10;\r\n  }\r\n  \r\n  if (bucket.isTouching(burger)) {\r\n    burger.y = -30;\r\n    burger.x = randomNumber(10, 390);\r\n    burger.velocityY = randomNumber(2, 4.5);\r\n    score = score - 10;\r\n  }\r\n  \r\n  if (apple.y > 425) {\r\n    apple.y = -30;\r\n    apple.x = randomNumber(10, 390);\r\n    apple.velocityY = randomNumber(2, 4.5);\r\n    score = score - 1;\r\n  }\r\n  \r\n  if (orange.y > 425) {\r\n    orange.y = -30;\r\n    orange.x = randomNumber(10, 390);\r\n    orange.velocityY = randomNumber(2, 4.5);\r\n    score = score - 1;\r\n  }\r\n  \r\n  if (banana.y > 425) {\r\n    banana.y = -30;\r\n    banana.x = randomNumber(10, 390);\r\n    banana.velocityY = randomNumber(2, 4.5);\r\n    score = score - 1;\r\n  }\r\n}\r\n\r\nfunction functions() {\r\n  Score();\r\n  fall();\r\n  control();\r\n  reset();\r\n  scoring();\r\n}\r\n",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_animation_mode": "true",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "pause_animations_by_default": "false",
    "start_animations": "{\r\n  \"orderedKeys\": [\r\n    \"9e855234-65b3-48f9-b06f-ce76d81c4fbf\",\r\n    \"af66681e-ad92-40e6-a647-9bb8b484648b\",\r\n    \"ab4b8195-cc00-44a4-a587-d9dc5ef7cdf5\",\r\n    \"d31d2a57-587a-4be6-aa2b-4ac1dee665bc\",\r\n    \"d74a5e3d-21f8-4a8f-a05f-d814079d266f\",\r\n    \"8b1a967e-ebcd-490c-ba64-b9052c0025d1\",\r\n    \"9db307ac-8abc-4974-a64a-b820d6215eb5\"\r\n  ],\r\n  \"propsByKey\": {\r\n    \"9e855234-65b3-48f9-b06f-ce76d81c4fbf\": {\r\n      \"name\": \"burger_1\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/6L_wmvoCqt89kPqFpAZbyXbH55WRKA5Sr8XA-oacKvk/9e855234-65b3-48f9-b06f-ce76d81c4fbf.png?version=bZRG_lYkIIk.T3CCo5Ks31pkTZ6DsdO1\",\r\n      \"frameSize\": {\r\n        \"x\": 300,\r\n        \"y\": 260\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"bZRG_lYkIIk.T3CCo5Ks31pkTZ6DsdO1\"\r\n    },\r\n    \"af66681e-ad92-40e6-a647-9bb8b484648b\": {\r\n      \"name\": \"fries_1\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/6L_wmvoCqt89kPqFpAZbyXbH55WRKA5Sr8XA-oacKvk/af66681e-ad92-40e6-a647-9bb8b484648b.png?version=7cy1fh6.EA74gIfOKqoZvFjPOsQJXPGS\",\r\n      \"frameSize\": {\r\n        \"x\": 300,\r\n        \"y\": 252\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"7cy1fh6.EA74gIfOKqoZvFjPOsQJXPGS\"\r\n    },\r\n    \"ab4b8195-cc00-44a4-a587-d9dc5ef7cdf5\": {\r\n      \"name\": \"pizza_slice_1\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/6L_wmvoCqt89kPqFpAZbyXbH55WRKA5Sr8XA-oacKvk/ab4b8195-cc00-44a4-a587-d9dc5ef7cdf5.png?version=OpM0Ahtw6ifILRZn_8n4TRv_fnOP5DFo\",\r\n      \"frameSize\": {\r\n        \"x\": 300,\r\n        \"y\": 199\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"OpM0Ahtw6ifILRZn_8n4TRv_fnOP5DFo\"\r\n    },\r\n    \"d31d2a57-587a-4be6-aa2b-4ac1dee665bc\": {\r\n      \"name\": \"orange_1\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/6L_wmvoCqt89kPqFpAZbyXbH55WRKA5Sr8XA-oacKvk/d31d2a57-587a-4be6-aa2b-4ac1dee665bc.png?version=PZxEX.MbecqM5C.T9fufs1o9w1Q4.1rz\",\r\n      \"frameSize\": {\r\n        \"x\": 300,\r\n        \"y\": 294\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"PZxEX.MbecqM5C.T9fufs1o9w1Q4.1rz\"\r\n    },\r\n    \"d74a5e3d-21f8-4a8f-a05f-d814079d266f\": {\r\n      \"name\": \"bannana_1\",\r\n      \"sourceUrl\": \"https://studio.code.org/api/v1/animation-library/2hzsFjmDxsMsWNsEVLL6ljU4NocabK7v/category_food/bannana.png\",\r\n      \"frameSize\": {\r\n        \"x\": 382,\r\n        \"y\": 310\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 2,\r\n      \"version\": \"2hzsFjmDxsMsWNsEVLL6ljU4NocabK7v\"\r\n    },\r\n    \"8b1a967e-ebcd-490c-ba64-b9052c0025d1\": {\r\n      \"name\": \"red_apple_1\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/6L_wmvoCqt89kPqFpAZbyXbH55WRKA5Sr8XA-oacKvk/8b1a967e-ebcd-490c-ba64-b9052c0025d1.png?version=3pqjeGLDCtGPKFe_HFAdEqMsy1oyCCcu\",\r\n      \"frameSize\": {\r\n        \"x\": 270,\r\n        \"y\": 300\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"3pqjeGLDCtGPKFe_HFAdEqMsy1oyCCcu\"\r\n    },\r\n    \"9db307ac-8abc-4974-a64a-b820d6215eb5\": {\r\n      \"name\": \"bucket\",\r\n      \"sourceUrl\": \"https://studio.code.org/v3/animations/6L_wmvoCqt89kPqFpAZbyXbH55WRKA5Sr8XA-oacKvk/9db307ac-8abc-4974-a64a-b820d6215eb5.png?version=Aya92.7DAblbcOOTeR3z2NcY.xe.bJwl\",\r\n      \"frameSize\": {\r\n        \"x\": 72,\r\n        \"y\": 72\r\n      },\r\n      \"frameCount\": 1,\r\n      \"looping\": true,\r\n      \"frameDelay\": 12,\r\n      \"version\": \"Aya92.7DAblbcOOTeR3z2NcY.xe.bJwl\"\r\n    }\r\n  }\r\n}",
    "libraries_enabled": "false",
    "long_instructions": "# Example Game\r\n\r\nWith a partner, brainstorm some different ideas for your game. You can think about the games you've already seen, or look at some more sample games to give you ideas.\r\n\r\nOnce you have settled on a type of game with your partner, fill out the Project Guide with the backgrounds, variables, sprites, and functions that you will need to make the game. You'll spend the next few levels creating your game.",
    "preload_asset_list": null
  },
  "game_id": 50,
  "published": true,
  "created_at": "2022-03-22T21:56:37.000Z",
  "level_num": "custom",
  "user_id": 14639,
  "audit_log": "[{\"changed_at\":\"2022-03-22T21:56:37.442+00:00\",\"changed\":[\"cloned from \\\"CSD U3 - Design a Game 1 - Example6_2022\\\"\"],\"cloned_from\":\"CSD U3 - Design a Game 1 - Example6_2022\"},{\"changed_at\":\"2022-03-22 21:57:43 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"display_name\",\"thumbnail_url\",\"start_blocks\",\"start_animations\",\"preload_asset_list\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Gamelab>