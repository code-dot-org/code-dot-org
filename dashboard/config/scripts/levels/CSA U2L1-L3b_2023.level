<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**A chef needs a program to keep track of their recipes.**\r\n\r\n✅ **TO DO #1:** In the `Recipe`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the type of meal (breakfast, lunch, dinner, etc.)\r\n   \r\n   * the number of servings\r\n   \r\n   * whether or not it is healthy\r\n\r\n✅ **TO DO #2:** In `RecipeRunner.java`(#e7e8ea), instantiate a `Recipe`(#e7e8ea) object and print the instance variables for the `Recipe`(#e7e8ea) object by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Recipes",
    "bubble_choice_description": "A chef needs a program to keep track of their recipes. Write the `Recipe` class with instance variables for the specified attributes.",
    "start_sources": {
      "RecipeRunner.java": {
        "text": "public class RecipeRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Recipe object, then print the instance variables for\n     * the Recipe object to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Recipe.java": {
        "text": "/*\n * Represents a recipe\n */\npublic class Recipe {\n\n  /* --------------------------- TO DO ---------------------------\n   * ✅ Declare instance variables for the type of meal, the\n   * number of servings, and whether or not it is healthy.\n   * -------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 4
      }
    },
    "encrypted_exemplar_sources": "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\nPKXFVFnfL4djWLJtAhtl5R1+ZbDwGWH1FPutFUpoS3BX7g1f1qS1YKnM8M5Z\n7Dhmlgn4kTESXXX0FCrg82PYogQRh5dYvSLBjCNVQMuI3C9wMecNbZkbzXrt\nFzenIJremCDDeeCNd1Zs7KxWZ0lVjEuhUpi8TV/6AbDAQlclYfSRCXZdNCAB\n34F+FIgZTfsBdG5xfFBJQ+sK+seE8JkFgj6t3p1wT8DY22mQSE6bMGWYrgcw\nRjlTHl6K9S5g6UGkKsvZFCyG2VQ7/IJDGrjm4X1GVaCuOVriD5bcjVjT339w\nuVlwNRQO7+WJjyvAxjyB0t6MtiBfimiG4+/0JxI1A93YAHDxMxAeeHAD9kc0\nU+Fm/tdCJYdeHSyomGDH7ky4g8m1kXaiC8tnCCmwhba8CPWSbNSv6DXm3GB9\nGd6j9eKIGH2Uxmm9iulL6EWWDAOE8uRLWAYDwiYJFwyltEUqb980PeX7u7IG\ne+nLUBupEA0HAUjjASLVGae2/7xTxfWQh9pVuILbi44EFsaWXswGuwSuUBkW\nDkDxc6/WkFeupj4/l6IrkGTeVo4+ehu+ynvLSyUhnCO9r6gZGquSfe/u8S19\n3nUM5wI86TjpccJgtD+MPyVH5fhj0gccJ7dXfB8MG58r7jNeuXvassEoVZ7g\n/9wF1DhDUP1M3KoBYk4EwxZJLAVyZljRwmok/wbGNIwbRVCIkDXObYxoLU2b\nn7Pd4V4ZsUeBvW/3PnYzm+xepfOyd+nbojJ+uftl7hZIeCmVxR07yzJ6reI7\nageNr1LcAPzD6NKwJtswn5ohADYTJHGyFMNmoBi2a+aH0bJBTacWUrfz1XaR\napgS50MoAhyBSlfnrHdwcouWf896hCzlR15NQhDWcoqbNgucliZ4UdpGCmMC\nRZV9V4YTlgSKEsANXAZTypD02Uu5Fha+45IhopbAxIRfIL8gEriyWTtpbLMQ\n+d4gqWkgWZnNjBYWvLHx12+qrKrJuWLCS2GMp05bNRoS2p/VVs294/H3lNUe\nhawPpPbeM5t4OPwXTvZhrM/mWgUCU7/dojWk+VjUObjutdRYE2d65LI+EOjx\ntXyk+vYiDwr92S8ScOzAtZLuQu30kRkOIDCUzIVe5zVTekfvqlhUoWN43cat\nQd4dR6B2DtSEyBfije6MqeB5seESfar1obNwdBM3AiU5B40bcPQf7zMGGDp7\nbNC/GdniOkd00A3/9i9mLLa8BTiM68LTpdLvIuaaWUUXedA52UE67TtIdPYw\nZcXxU5AnH305XC0aQXEdfA87y8DpQFEXEY64VRnYJT0rx9KWKuFxsvcSp5h6\n80wKPNKXEOuqTzQovHFrvg/pgokwd97PorpySFwCVa/kI0tH/zMlRB5VIfc2\n0uJEvu6DkhS7JAtPNW9TSD2iyeubqeo0Q47lfekiael1KPTxjc6ZRAW6Q1Fo\nbiTWtqDJuN7iNlN9G+3Yy5swPGHMy6dJfsLfDDA/T+SLLC4L8TPhMnRZGAeF\nLJ6Ln9VhuczHs4+HeyLSkFZa2mXvyfJdX5YzXeYlGJGVM7Sm7Eoucky/W0dV\nJlOeY2vG0yKFsStdYNT6vZaB9t8HbJiaAAxGf3w93Bebf65xKsY6ltdVkvge\nVhijS80B6CpMyGTaw928/CeX90GPDe8BD/ZOK0KelV8HyrsiqUWD0jkyBkAr\nj+KQZqSzOok37T5eZYeL+FgRF0EsW4a5VD5n3IDGxJv5QEYwvMYM6Dl9boXv\nuwKSB9L6HHlDo6jrbHhmX7DWBD5kgLFcdiUB2PRQSRomc1ZeMBBNrdr80rp/\nwyVBt7S8wUQIs1OB8DJEP0MEbznGUdp/PzXcYgF0rcb9uh3JdetbSzmWakuQ\nT93afp2pjhkj9j98gnns8xrKE1e9cGj6AdzZunHLCCmHtDd3Dsre/JNMfu2R\n4Xx7Wt4RfVo8GVzLTJpo7ZW00wRFDBiLB+epZJVqGHatGRsjEL7ILDwfE6d0\nJK1cWBE86pnwf8t8JeL3NSHdENqXmVHEeRj6MgS844G/P9TznEnStTwcwwlo\neC4qBsyiOkV6/YHeC/aFnJ37CDmDN6kIOAPE+04L04PsHO+WxHpKxUY5WlYt\nfUj2FLg0CRJcOor1ylmsaVe8U+eRM+0duKlr5BH9K99KHWC/FODUYaa99DKF\nehA3Blm1NrTFGvGbVbNvxyeTQ1k=\n",
    "thumbnail_url": "https://images.code.org/1534f739689199502d59a714f19d5f3d-food.png",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:28:57.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:28:57.138+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3a_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L3a_2023\"},{\"changed_at\":\"2022-11-01 17:28:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:18 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:06:41 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:07:27 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:08:43 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:14 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:26:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:26:27 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:10 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:33:47 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:03 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:59 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:48 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:39 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:41:08 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:52:12 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:15 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:41:18 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:49:03 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:51:51 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:30:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:47 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:20:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:03 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:19:49 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:18:27 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:15:31 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:15:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:36:27 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:38:36 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:46:20 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
