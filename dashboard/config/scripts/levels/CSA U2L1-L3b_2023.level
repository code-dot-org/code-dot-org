<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-11-01T17:28:57.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "A chef needs a program to keep track of their recipes.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Recipe</code> class, declare instance variables for the following attributes:\r\n\r\n   * the type of meal (breakfast, lunch, dinner, etc.)\r\n   \r\n   * the number of servings\r\n   \r\n   * whether or not it is healthy\r\n\r\n‚úÖ **TO DO #2:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">RecipeRunner.java</code>, instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Recipe</code> object and print the instance variables for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Recipe</code> object by calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">AttributesHelper.printAttributes(nameOfObject)</code> method.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring instance variables and instantiating objects.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">AttributesHelper.printAttributes()</code> is a hidden support method that prints the instance variables in a class to the console. For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n\t  </pre>\r\n      \r\n      <p>This method (along with the tests) will help you check that you declared your instance variables correctly.</p>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Recipes",
    "bubble_choice_description": "A chef needs a program to keep track of their recipes. Write the `Recipe` class with instance variables for the specified attributes.",
    "encrypted_exemplar_sources": "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\naNP2Uw==\n",
    "thumbnail_url": "https://images.code.org/1534f739689199502d59a714f19d5f3d-food.png",
    "encrypted_validation": "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\n",
    "start_sources": {
      "RecipeRunner.java": {
        "text": "public class RecipeRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a Recipe object, then print the instance variables for\n     * the Recipe object to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Recipe.java": {
        "text": "/*\n * Represents a recipe\n */\npublic class Recipe {\n\n  /* --------------------------- TO DO ---------------------------\n   * ‚úÖ Declare instance variables for the type of meal, the\n   * number of servings, and whether or not it is healthy.\n   * -------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n    typeToFind += \" \";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean \", \"int \", \"double \", \"String \"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result.trim();\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "video_key": "csa_instance_variables_and_attributes"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:28:57.138+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3a_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L3a_2023\"},{\"changed_at\":\"2022-11-01 17:28:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:18 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:06:41 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:07:27 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:08:43 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:14 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:26:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:26:27 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:10 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:33:47 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:03 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:59 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:48 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:39 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:41:08 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:52:12 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:15 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:41:18 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:49:03 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:51:51 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:30:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:47 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:20:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:03 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:19:49 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:18:27 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:15:31 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:15:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:36:27 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:38:36 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:46:20 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:35:10 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:35:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:35:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:36:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:36:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:36:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:36:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-02 14:25:32 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-14 15:36:23 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-14 15:37:25 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
