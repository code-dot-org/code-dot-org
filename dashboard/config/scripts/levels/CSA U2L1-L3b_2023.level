<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**A chef needs a program to keep track of their recipes.**\r\n\r\n✅ **TO DO:** Write the `Recipe`(#e7e8ea) class and instantiate a `Recipe`(#e7e8ea) object.\r\n\r\n1. In the `Recipe`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the type of meal (breakfast, lunch, dinner, etc.)\r\n   \r\n   * the number of servings\r\n   \r\n   * whether or not it is healthy\r\n\r\n2. In `RecipeRunner.java`(#e7e8ea):\r\n\r\n   **a.** Instantiate a `Recipe`(#e7e8ea) object\r\n   \r\n   **b.** Print the instance variables for the `Recipe`(#e7e8ea) object to the console using `ClassInfo.getAttributes(nameOfObject)`(#e7e8ea)\r\n\r\n::: details [**🔦 What is `ClassInfo.getAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `ClassInfo.getAttributes()`(#e7e8ea) is a hidden support method that returns the instance variables in a class as a `String`(#e7e8ea). Call the method by passing an object as its argument, such as:\r\n\r\n```\r\nDog fido = new Dog();\r\nSystem.out.println(ClassInfo.getAttributes(fido));\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/8b5fa41c9e0df5005b35c1e2441110a4-image-1667422143436.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Recipes",
    "bubble_choice_description": "A chef needs a program to keep track of their recipes. Write the `Recipe` class with instance variables for the specified attributes.",
    "encrypted_validation": "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\nOaNZly0=\n",
    "start_sources": {
      "RecipeRunner.java": {
        "text": "public class RecipeRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Recipe object, then print the instance variables for\n     * the Recipe object to the console using ClassInfo.getAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Recipe.java": {
        "text": "/*\n * Represents a recipe\n */\npublic class Recipe {\n\n  /* --------------------------- TO DO ---------------------------\n   * ✅ Declare instance variables for the type of meal, the\n   * number of servings, and whether or not it is healthy.\n   * -------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n\n  public static String findField(ArrayList<String> classFields, String typeToFind) {\n    String result = \"MISSING\";\n    \n    for (int index = 0; index < classFields.size(); index++) {\n      String current = classFields.get(index);\n      \n      if (current.indexOf(typeToFind) > 0) {\n        result = ClassInfo.removeClassName(current, \"Instrument\");\n        result = ClassInfo.removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n\n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    }\n\n    return result;\n  }\n\n  public static String getFieldType(String currentField) {\n    currentField = currentField.trim();\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n\n  public static String getConstructors(Object testObject) {\n    Class objectClass = testObject.getClass();\n    String className = objectClass.getSimpleName();\n    Constructor[] objectConstructors = objectClass.getDeclaredConstructors();\n    \n    ArrayList<String> constructorsList = convertToList(Arrays.toString(objectConstructors));\n\n    String heading = \"\\n------------------------------\\n\";\n    String result = className + \" Constructors \" + heading;\n\n    for (String current : constructorsList) {\n      result += current + \"\\n\";\n    }\n    \n    return result;\n  }\n\n  public static String getValue(List<String> output, String lineToFind) {\n    String outputText = \"\";\n    String valueResult = \"\";\n\n    for (int index = 0; index < output.size(); index++) {\n      String current = output.get(index);\n      \n      if (current.indexOf(lineToFind) >= 0) {\n        outputText = current;\n        valueResult = outputText.substring(lineToFind.length());\n      }\n    }\n    \n    return valueResult.trim();\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "z89PlZnmPwSDUhUDGt+6Q1HwGXhdsdSU2hAL0l44NlEqIu7xRoS+ZkXIKaZZ\nwDLj2SXgnJnkq0GYU0R6ELxbf6z10UMPF6es8v3XzCB6EVe/crFTu5Q6lxO7\nkQAYtVkSNhAafDk+m++uZtKjZQRp5x5Sys3/b8gsGipGmZfXddCV0MmGSokB\nmIkPT2Vn/2XxQqjI04+hD+8FesbtlFhAu2V9gIuJ0wFZRFzp+hEFtZbhqD2q\nmDYPamJGVhemk9UD/fqSi/J5Byc9BqIMsgeaa4rMSVjIMdw59tql6MRn/Gde\nAh5seatDJCE8YKNjXU3hIIuvp0Icv+j4MAmBAqEcMzrbNXXRyH/XoXkJy5e1\nV88efUZj6CMrG5qLyAFtwEbs3IeNUgnkpp9TfhQh9y8AcPfS/Tuo5+lB3X7p\nJyTlEzVovBAwbN1kYKGJazP9P88pdsnEGNxzYIW0u+0HMM8HQWa7fDVFOsdY\nfm3YBapXIi9YCQpS0MwsSIQ7jb+wCPA+j8ElWUor5N1qqR8XsVKqPYLOSOJx\neTMSyqDFCGOx9LcN8ZO3LMiVSSKDUiIygImTMF8Ewpzkoo1vOHvwj4vJdy05\nsvEeCSlasje6VCyuJsEumbob0R3QyJ0IeiDsSgbMV/k2X3DctXLA1aKt5FPN\nahKhFWFJNV7buKbwWs+AfzHRTFFPrG5o18ifpycFB97YxaJHYmF+JLk5H9ys\nfGJcLbiTmYu1Opqm9LJjSn/svFggm4NzBaW3YTupb9xvGIcsVrHI15enFUAS\nDaBBHCRUrMV1yo+fKNdeZiflqFQAcWvDOv9OvlqGOBC6L/vbYrRuaaXbZwC3\nDtbEmEq8jl9rUBox2FgUukMbYRQj//sNVUk6gKMwxKmsyFfCWZO1uvxAKMJV\nrHC/7sxmhEDP2CzS5m9H/ZzXY0OY/0e9QChfuedD3WxtoQcbr8Deh89YR9pM\ny8eHpy6wo5xgwDO0F/FmAOyohd6AYbltvCX/f/rMz68dIQtRn+YnQY+iBbme\nBnmSo5j8uJUt/PLkY2/pn7BONMRv9bz9GfFMdguSWK4RiCu5Txz51YcEBo2G\ngPOtyiNhQjoNWqQdjcxNtAb2RKriaDUJFlH0IOG0ZZiXeoRAWdQ53CQZoSbu\nLa7DE856Exc9E0Sn9h0yfwGKhqskgavo7rCsF83io4+5h6kADCEEummxATSt\nEbFFup99EVWXUVokmQAS3cSiDgVM64DolrR8BJ9O3s/hmesXm2IwN+/sLjkn\n76LMEzUdgnio8Gvn78Tuqu3e4cZa7ppgbpsW6ugpMqa8sTtaxPPutT6jJojX\nUYDXIRGZIjLLQajYwvHi+tfhTFRz9II1X/nGaRabUptDUXAD3X67bn1D08xx\nqTPdzfBtJTl2eBriganXIhe1ZgnODj4uoCPEOMTupDWB9alVMFCztXASVEnI\n0DEpvLk8Hcn7ezUAFF2wY1E2Md2Km4CuTQLtsdz/1RZqI2WZLglrD+ozQ0/j\nw9JyA3X0M8aJSKDt+zexpOakimPs7kNa/H4cvx7A5qqJ/SuZmf0e3Og/hRlQ\n4LIw2XpLtMMU0BEaCJMjp34Lsq9IxEd3UtXPbDmvmgKigHiYN4+9Iqk/mqoI\ncIyo7geTSYL+ryQko1ZWAsRqoPDIaHREA+qJKR9iJPFXU9rtcMZ1FuYytYKp\nlSw02jN+RtvUmbTfqtCswmDAo97GRxgrUkJoO+MsjXDcwuDEQgL5NJaaBgne\nBb/zKaIVmor2Yv/Ne1B1F5zUxYlF0WSfNdFFBlayjdHVsrH+6GHARo6Pqrvx\nyJ8YvLk0w8UxnyN3EIflnmybzJmJBOJCg/FkmGxcrfTCiH2ZhbX/O+n3vqhq\nlBcJDUm0agHCRUsJI1AQ4Mf5/NJNDHv4Ff2+rGjSKzn35lUy9eGQ+HDfPDoV\n+anKhPFqTybesBh+leUdm74NgxqicGLlnDVCcBoUiTgAkIpoYMaP1ZD6xZav\nla11sa8tbwUZa0s7PJQah6TYXQ2zfJzj8CMZKS1pTJhmP9Y8SxyrSb6Dcnm2\nxXNcm3FvY8svQuxZO0DOynSZig4tofBAlzSCDl6E6qsH9FvqqeVcfrjKxsW6\nJ9VuMAkR0zJL0dmakNVv4XFli2NeS1f4iFN7ErP2fOoZu4dOxwqVSfWE87to\nBM298MQkvOevJmGl3m4hV0bnNT3mj80ZRzf1pE3Em6jL92cEgaEoEowNtmck\nJI/v+MmKfJyndhQoSLGsYrL0cSBVitr6n208sWk5Abg6eqJWjzyTYnn2YRxG\n96hPTc+gs/lu1D0yboZeR/cYIGo8Yo6G3R3TWeOKxrQi2L9+b2OkOVssJ8Xj\nvJhMVwjaiBsiSGoLE/WyrxQ9rXby2cxAyRW+L1/axU/vyDtNjcEZqDFQZaBJ\nCeaDdACkr3De3ptezksCIkjWCUHd/xjRlvxeLB94/Kmcfxt0rNPZ75czSpMX\n4peeoLYOkoNmMvXTOBgNnIdW1t+KHnt2BItQHUMDeZeTDO//BK6/xnBkG/nw\nZ2f/sNox+zegCf3Irm8H+BErBPXCXCt8mBHraBuR6TfaOE8BQ8PUi7sDB9k8\ngDM+YAGj7ESaUZtY28/HtISp6+CvACzCvZdcUrK75BfpLEI7KR/q9Y2h48uY\n9iTYpYbEfAENqHOGkX2hVucyxLfz5MGl+S51BXs+3qBfNs5Omq/tVcHIWHcN\ngqfC3JsQIhoxGyu1BmPmnDNpmEaJXq7XCc5duxjOJcZkI/RuqsvNgiOdQNnh\nH1rHjmar1vK+3Uq/uPIQVOnHAj3Dsa8hTj4mcJIjMWcuGoiQ6lbUcwt33OKk\nkAjNPHvcidNEsbEETWK8RseCV+bShPYxsbJJIZNZ352eG/dcldMEM0GTRZLP\nT2J6oK8NFDDC9NU65sbScIgmLf+VnnIM1AGHUnBeMlmqdGxtAETgbagb1Rd6\nvYUBfclZgqHj4xjIa9jrFDui/Bf2H+v1QhrFJFZ1+rcRjpLfqr3jqnKMxvEq\nwDhZx7QchZw/FhxsFgLXvyCZ1vSO3/r3O+BMuyk0se/RhJLl44gBTVC/VDk6\nqhxbaao9Ly/dP66dkj9ZBMFtXag/5p4XxqlpMtEq2hOLlogFgLTR/OsmUqTW\nvOW4GjhsuHR6jt6zrETOCDDSUlvu1wt26kE0rTBVy/tczG0qDRW/tviLO1F7\n0MJKKTT8BAilGHo7o2su0ka1NGZcynMymqDe1CtN57X89cE94QFT5TS9y2YX\nKqYdEKgJVdj37XBUJ3XHXw9zbFrvxV+nTlPl7+9rqlG+2MDMKQatIgLsvf1A\n1yJfXjnewQYlq1JZwDIe+4zQ8vtrLpsj08ZbCoiClpt6myBIdg5Ulh6juaQk\nQHS43n+VonY7IN51GaKQDtDbhoJw2jW/RczQpfiWf+TsMFbBV8QoNLyXRmW2\nLqnlWbjhrMgDPmIJgjATKGQKEf6p3jRTRtFNF0CWc3E0S+2maETqXeLMafT8\nxlVTlJuAbUHzwFMZHB9Vu9mBlsUpNfnqh9Lrh2iFMChi37Pd2B6FVeXdn2gb\nbCWDdI8LCcnbCKWd5WfDw7N/FjedBEOSQB/gOuHPKG6Taxa/OBbNGiozd498\n8IgHg18gwuP7FdfXpjaXSHahtO3HiU3qDr3PjIgOHYpr3MTcjMHbBPDLi7Az\nenOHzsDL1a+Wxvu+ZFbm59ZNUrRfyIBjoQFHkpOL09zx1Xz0jltZlHhPtPCH\n9q9ndZcI13YkPVvsU+kU4LMtW0w9vPPdytqR0gptBGNQZcLPxjELscy7qcRj\nVESTHTh2/zfGTNqLOvm4x73ZP+0ZVtZ7h250Akxly+XB+fEhtCKxFBelI7pn\nLrlj5C17iAUTbx2+KaySlpAKG9DfMDXycVs+ctF/oWY7zjwIhpLuwSOJfmOG\neZSSaJwAXbDPY7pwsN7JMdN+isLLRS2jxyru3aQHr0ivF/Vm+vzMQdkVS4lp\n+ERDfKwK8KtBTlRn5pOU3Z0vFvJ7WZb6I6kGfUDQQRkWSHw0S+OWomggxNAX\n2D+stJjtM4AG0Wlig8s2XMSPwC3x6nX4IRYEyZgB92qqWMGJNR5tod2/iquW\nmpggY6UEslplRK3peDykpYpJYAXMestVTwSRiVyG/wPVk712EMqUyr0uuZgS\nfJ3RB7rFHcMo4+dwb7uEMw2GI1PVKret3KIzO38/csQ4pImWrCpa5GRk1Zb5\nqBc5ucxoMkv1FCXOpiGx9+qZ9Ldp760uDcEcYUQBtHUPwup8wTABVI8An1N7\n38+vTKC2Gap0ND4GbzfrjDng2wJHJFw+I1M7ObxLSUAZN0QYBykWQBUiu3Ic\nS8Fs3nuAHgeJ/89NDhsLDMyYTQAQgP1hGVAusscjjvpSxrpzL5sWMBE54Rs3\nFL9GecSKxqtEAOPBi014JYR1zK66iWgnRC5Ej0PRqyUR9DhDAHKS2s4pKViK\nhOCaIHlY6bJ8D0FZIkwU/riDApc5OATf9KwK5/4VymlwX82aZWnEFRmWjbO/\nZkPLNhZhXcJ/0IBYVJu4x69bzNZVUAvSwomTS4+YUwe0g55BXiMS2c6B1m9X\n+nipEQ==\n",
    "thumbnail_url": "https://images.code.org/1534f739689199502d59a714f19d5f3d-food.png"
  },
  "game_id": 68,
  "created_at": "2022-11-01T17:28:57.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:28:57.138+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3a_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L3a_2023\"},{\"changed_at\":\"2022-11-01 17:28:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:18 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:06:41 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:07:27 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:08:43 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:14 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:26:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:26:27 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:10 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:32:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:33:47 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:03 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:59 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:48 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:39 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:41:08 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:52:12 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:15 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:41:18 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:49:03 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:51:51 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:30:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:47 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:20:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:03 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:19:49 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:18:27 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
