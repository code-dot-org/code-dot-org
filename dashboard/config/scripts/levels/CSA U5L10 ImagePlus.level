<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Unit 5 Lesson 10 version of `ImagePlus.java`(#e7e8ea), `NegativeImage.java`(#e7e8ea), `RandomImage.java`(#e7e8ea), `BlueImage.java`(#e7e8ea), `MirroredImage.java`(#e7e8ea), and `ShiftedImage`(#e7e8ea)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "serialized_maze": [
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ]
    ],
    "start_sources": {
      "ImagePlus.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image that can be modified with filters and effects\n */\npublic class ImagePlus extends Image {\n\n  private Pixel[][] pixels;    // The 2D array of pixels\n\n  /*\n   * Constructor to create an ImagePlus object\n   * with a specified file name\n   */\n  public ImagePlus(String filename) {\n    super(filename);   // calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixels();\n  }\n\n  /*\n   * Constructor to create an ImagePlus object\n   * with a specified width and height\n   */\n  public ImagePlus(int width, int height) {\n    super(width, height);   // calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixels();\n  }\n\n  /*\n   * Returns the pixels in the image as a 2D array of Pixel objects\n   */\n  public Pixel[][] getPixels() {\n    // Level 2\n    // TO DO #1: Create and return a 2D array of Pixel objects that\n    // contains the pixels from the image.\n\n    Pixel[][] tempPixels = new Pixel[getHeight()][getWidth()];\n    \n    for (int row = 0; row < tempPixels.length; row++) {\n      for (int col = 0; col < tempPixels[0].length; col++) {\n        tempPixels[row][col] = getPixel(col, row);\n      }\n    }\n\n    return tempPixels;\n  }\n\n  // Unit 5 Lesson 6 - Level 3a\n  public void zeroRed() {\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n\n        currentPixel.setRed(0);\n      }\n    }\n  }\n\n  // Unit 5 Lesson 6 - Level 3b\n  public void zeroBlue() {\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n\n        currentPixel.setBlue(0);\n      }\n    }\n  }\n\n  // Unit 5 Lesson 6 - Level 3c\n  public void zeroGreen() {\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n\n        currentPixel.setGreen(0);\n      }\n    }\n  }\n\n  // Unit 5 Lesson 6 - Level 3d\n  public void keepBlue() {\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n\n        currentPixel.setRed(0);\n        currentPixel.setGreen(0);\n      }\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "NegativeImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a negative image\n */\npublic class NegativeImage extends ImagePlus {\n\n  /*\n   * Constructor to create a NegativeImage\n   * with the specified filename\n   */\n  public NegativeImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Applies a negative filter to the image\n   */\n  public void makeNegative() {\n    Pixel[][] pixels = getPixels();\n\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n\n        currentPixel.setRed(255 - currentPixel.getRed());\n        currentPixel.setGreen(255 - currentPixel.getGreen());\n        currentPixel.setBlue(255 - currentPixel.getBlue());\n      }\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "RandomImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a randomly colored image\n */\npublic class RandomImage extends ImagePlus {\n\n  /*\n   * Constructor to create a RandomImage\n   * with a specified width and height\n   */\n  public RandomImage(int width, int height) {\n    super(width, height);\n  }\n\n  /*\n   * Fills the image with randomly colored pixels\n   */\n  public void makeRandom() {\n    Pixel[][] pixels = getPixels();\n\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n        \n        int randomRed = (int)(Math.random() * 255);\n        int randomGreen = (int)(Math.random() * 255);\n        int randomBlue = (int)(Math.random() * 255);\n\n        currentPixel.setRed(randomRed);\n        currentPixel.setGreen(randomGreen);\n        currentPixel.setBlue(randomBlue);\n      }\n    }\n  }\n\n  /*\n   * Shifts the pixels in the image\n   */\n  public void shiftColors(int shift) {\n    Pixel[][] pixels = getPixels();\n\n    for (int row = 0; row < pixels.length; row++) {\n      for (int count = 0; count < shift; count++) {\n        Pixel temp = pixels[row][0];\n\n        for (int col = 0; col < pixels[0].length - 1; col++) {\n          Pixel current = pixels[row][col];\n          Pixel next = pixels[row][col + 1];\n\n          current.setColor(next.getColor());\n        }\n\n        pixels[row][pixels[0].length - 1].setColor(temp.getColor());\n      }\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "BlueImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a image with blue color values modified\n */\npublic class BlueImage extends ImagePlus {\n\n  /*\n   * Constructor to create a BlueImage\n   * with the specified filename\n   */\n  public BlueImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Applies a filter that modifies the blue color values\n   */\n  public void modifyBlues(int value) {\n    Pixel[][] pixels = getPixels();\n\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n\n        if (currentPixel.getBlue() > value) {\n          currentPixel.setBlue(0);\n        }\n      }\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "MirroredImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a mirrored image\n */\npublic class MirroredImage extends ImagePlus {\n\n  /*\n   * Constructor to create a MirroredImage\n   * with the specified filename\n   */\n  public MirroredImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Applies an effect to vertically mirror the image\n   */\n  public void mirrorVertical() {\n    Pixel[][] pixels = getPixels();\n\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length / 2; col++) {\n        Pixel leftPixel = pixels[row][col];\n        Pixel rightPixel = pixels[row][pixels[0].length - col - 1];\n        leftPixel.setColor(rightPixel.getColor());\n      }\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "ShiftedImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image with its pixels shifted\n */\npublic class ShiftedImage extends ImagePlus {\n\n  /*\n   * Constructor to create a ShiftedImage\n   * with the specified filename\n   */\n  public ShiftedImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Creates an effect that shifts the pixels\n   * in the image by the value specified for shift\n   */\n  public void makeShift(int shift) {\n    Pixel[][] pixels = getPixels();\n\n    for (int row = 0; row < pixels.length; row++) {\n      for (int count = 0; count < shift; count++) {\n        Pixel temp = pixels[row][0];\n\n        for (int col = 0; col < pixels[0].length - 1; col++) {\n          Pixel current = pixels[row][col];\n          Pixel next = pixels[row][col + 1];\n\n          current.setColor(next.getColor());\n        }\n\n        pixels[row][pixels[0].length - 1].setColor(temp.getColor());\n      }\n    }\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-30T13:27:50.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-30T13:27:50.145+00:00\",\"changed\":[\"cloned from \\\"CSA U5L8 ImagePlus\\\"\"],\"cloned_from\":\"CSA U5L8 ImagePlus\"},{\"changed_at\":\"2022-04-30 13:28:03 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-30 13:30:02 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-30 13:30:10 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
