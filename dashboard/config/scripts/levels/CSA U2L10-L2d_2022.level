<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `FoodTruck`(#e7e8ea) class represents a single food truck that is part of the Project Mercury Pastries Food Truck business.\r\n\r\n##Getting Started\r\n1. Import `Dessert.java`(#e7e8ea) from the ![Backpack](https://images.code.org/b17feeef2e8db2a98abdb4a5860c5c61-image-1642175705297.png)\r\n\r\n*Don't have it or it doesn't work? That's ok! Just copy and paste the code from [**here**](https://studio.code.org/s/csa-backpack-2022/lessons/2/levels/5).*\r\n\r\n##In FoodTruck.java:\r\n2. Complete the parameterized constructor. Use the `this`(#e7e8ea) keyword to initialize the instance variables to the values passed to the parameters.\r\n\r\n3. Complete the `hasGreaterProfit()`(#e7e8ea) method.\r\n\r\n   * If the result of a call to `addBonus()`(#e7e8ea) with the current object using the `this`(#e7e8ea) keyword is greater than the result of a call to `addBonus()`(#e7e8ea) with `otherTruck`(#e7e8ea), return `true`(#e7e8ea).\r\n   \r\n   * Otherwise, return `false`(#e7e8ea).",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "The FoodTruck Class",
    "bubble_choice_description": "The FoodTruck class represents a single food truck that is part of the Project Mercury Pastries Food Truck business. Complete its parameterized constructor and hasGreaterProfit() method.",
    "thumbnail_url": "https://images.code.org/9c436c06bc850fb25f4e797e0603b0b6-image-1646615592652.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Dessert amyDessert = new Dessert(\"strawberry\", 4.50);\n    Dessert saraDessert = new Dessert(\"blueberry\", 3.75);\n\n    FoodTruck amyFoodTruck = new FoodTruck(\"Amy\", amyDessert, 5700);\n    FoodTruck saraFoodTruck = new FoodTruck(\"Sara\", saraDessert, 4500);\n\n    System.out.println(\"Did Amy's food truck have a greater profit than Sara's?\");\n    System.out.println(amyFoodTruck.hasGreaterProfit(saraFoodTruck));\n    \n  }\n}",
        "isVisible": true
      },
      "FoodTruck.java": {
        "text": "/*\n * Represents a single food truck at the\n * Project Mercury Pastries Food Truck business\n */\npublic class FoodTruck {\n\n  private String owner;         // The owner of the FoodTruck\n  private Dessert newDessert;   // The Dessert the FoodTruck sells\n  private double profit;        // The profit of the FoodTruck\n\n  /*\n   * Creates a FoodTruck with the specified\n   * owner, Dessert, and profit\n   */\n  public FoodTruck(String owner, Dessert newDessert, double profit) {\n    // TO DO #2: Initialize the instance variables to the values\n    // passed to the parameters.\n    \n    \n  }\n\n  /*\n   * Gets the current value of profit\n   */\n  public double getProfit() {\n    return profit;\n  }\n\n  /*\n   * Sets profit to the given value\n   */\n  public void setProfit(double newProfit) {\n    profit = newProfit;\n  }\n\n  /*\n   * Adds a bonus to the specified FoodTruck\n   */\n  public double addBonus(FoodTruck truck) {\n    double bonus = truck.getProfit() * 0.15;\n    truck.setProfit(truck.getProfit() + bonus);\n    \n    return truck.getProfit();\n  }\n\n  /*\n   * Checks whether or not this FoodTruck has a greater\n   * profit than otherTruck after receiving a bonus\n   */\n  public boolean hasGreaterProfit(FoodTruck otherTruck) {\n    // TO DO #3: Use an if-else statement to check if the result\n    // of addBonus with this FoodTruck is greater than the\n    // result of addBonus with the otherTruck\n    \n    \n  }\n}",
        "isVisible": true
      }
    },
    "encrypted_examples": "+2JDDQW62ZlqxWyXdQHBCFy8OtybMPAt2n9mnOWWxaY9Yp+Wj1aArmnuZjS9\nusYerJBNuSXrWQpiU1P9yF65u54ivVbj0JeIlGeKt7gGKbiy976YQm057x56\nzro6GZVd\n",
    "encrypted_exemplar_sources": "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\n",
    "map_reference": "/programming_environments/javalab"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-03-07T00:56:03.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-03-07T00:56:03.644+00:00\",\"changed\":[\"cloned from \\\"CSA U2L10-L2c_2022\\\"\"],\"cloned_from\":\"CSA U2L10-L2c_2022\"},{\"changed_at\":\"2022-03-07 00:56:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-07 01:13:34 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-07 13:25:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-08 14:52:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-08 14:52:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-11 13:13:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-19 16:11:24 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 21:26:48 +0000\",\"changed\":[\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":977,\"changed_by_email\":\"kaitie+teacher@code.org\"}]"
}]]></config>
</Javalab>
