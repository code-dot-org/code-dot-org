<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##In NamesList.java:\r\n\r\n1. Write the method `replaceDuplicates()`(#e7e8ea) to find and replace duplicate names in the `names`(#e7e8ea) list.\r\n\r\n   * Use the `set()`(#e7e8ea) method in the `ArrayList`(#e7e8ea) to replace any duplicate names found with `\"DUPLICATE NAME\"`(#e7e8ea)\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `replaceDuplicates()`(#e7e8ea) method and print the updated `names`(#e7e8ea) list.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n    \n    ArrayList<String> names = NamesList.getNamesList(\"names.txt\");\n\n    NamesList.printNames(names);\n    \n    // TO DO #2: Call the replaceDuplicates() method and print the new list.\n\n    \n  }\n}",
        "isVisible": true
      },
      "NamesList.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.ArrayList;\n\n/*\n * Reads and analyzes a list of names\n */\npublic final class NamesList {\n\n  /*\n   * Returns an ArrayList containing names from a file\n   */\n  public static ArrayList<String> getNamesList(String filename) {\n    File myFile = new File(filename);\n    Scanner fileReader = createScanner(myFile);\n    ArrayList<String> names = new ArrayList<String>();\n\n    while (fileReader.hasNextLine()) {\n      names.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return names;\n  }\n\n  /*\n   * Creates a Scanner to read a file or notifies the user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch (FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Prints the list of names\n   */\n  public static void printNames(ArrayList<String> names) {\n    for (int index = 0; index < names.size(); index++) {\n      System.out.println(names.get(index));\n    }\n  }\n\n  /*\n   * Finds and replaces duplicate names in the list\n   */\n  public static void replaceDuplicates(ArrayList<String> names) {\n    // TO DO #1: Find and replace duplicate names in the names list.\n\n\n    \n  }\n\n}",
        "isVisible": true
      },
      "names.txt": {
        "text": "Liam\nOlivia\nElijah\nAva\nNoah\nOlivia\nAmelia\nIsabella\nMason\nAiden\nLiam\nGianna\nLuna\nSofia\nOlivia\nLayla\nAria\nAndrew\nLuna\nNolan",
        "isVisible": true
      }
    },
    "display_name": "Duplicate Names",
    "bubble_choice_description": "Find and replace duplicate names in an ArrayList.",
    "thumbnail_url": "https://images.code.org/6013fb74d60853ec418cb4ed43c2bd0b-image-1651690148694.png",
    "encrypted_exemplar_sources": "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\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-14T19:22:39.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:22:39.960+00:00\",\"changed\":[\"cloned from \\\"CSA U6L4-L3a_2022\\\"\"],\"cloned_from\":\"CSA U6L4-L3a_2022\"},{\"changed_at\":\"2022-04-14 19:22:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 18:46:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 18:48:25 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 18:49:39 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 19:06:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 19:06:47 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
