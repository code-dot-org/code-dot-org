<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-10-27T19:27:50.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "assign_x": null
    },
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# Moving Memory - Challenge 5\r\n\r\nTry another one.  Here is the starting code:\r\n\r\n```\r\nvar x = 2;\r\nvar y = 3;\r\nvar z = 0;\r\n// your code here\r\n\r\nconsole.log(\"The value of x is: \" + x + \" (x should be 3)\");\r\nconsole.log(\"The value of y is: \" + y + \" (y should be 2)\");\r\n```\r\n</p><p>\r\n<details>\r\n<summary><strong><big>HINT:</big></strong>(click to expand)</summary>\r\nSince this one requires you to change the value of two variables you need to be careful about which one you change first, since its new value will affect the next lines of code.\r\n<p></p>\r\nYou can also take advantage of the fact that since `z` is not used as a display value, you can use it as a temporary holding ground for one value while you change another.\r\n\r\n</details>\r\n</p><p>\r\n</p><p>\r\n\r\n<details>\r\n<summary><strong>Reminder of the rules</strong> (click to expand)</summary>\r\n\r\n<p>\r\n**GOAL:** Set the value of the variable(s) to make the `console.log` statement display what it's supposed to.\r\n</p><p>\r\n\r\n**Rules**:\r\n</p><p>\r\n <li>You may **only** add lines of code that re-assign values of variables provided.\r\n <li> You may **only** use assignment (`=`) and arithmetic operators (`+` `-` `*` `/`).\r\n <li> You **MAY NOT** type or introduce any numbers.\r\n <li> You **MAY NOT** change or alter the `console.log` statement at all.\r\n</p><p>\r\n \r\nExample:\r\n<table>\r\n<tr>\r\n\t<th>Code Provided</th>\r\n</tr>\r\n<tr>\r\n <td >\r\n        <img src=\"https://images.code.org/bd3c9a918b22a2874ae77fc82289aab5-image-1447800921923.52.14.png\"><br>\r\n        <br>The code you're given will have a few variables initialized to some values.  The last line will be one or more `console.log` statements with a comment indicating what the expected value to display should be.\r\n        <hr>\r\n    </td>\r\n</tr>\r\n<tr>\r\n\t<th>A Possible Solution</th>\r\n</tr>\r\n<tr>\r\n\t<td valign=top >\r\n    <img src=\"https://images.code.org/4742fed6bff4ad62411b9090f8468db0-image-1447800924556.54.37.png\" >\r\n    <br><br>You need to add a line (or multiple lines) of code to re-assign the values in variables so the `console.log` statement displays what's expected.  In this example we show a solution on line 5.  Please note that there are several different things you could do. For example, you could go crazy and do something like: <strong>y = x + x + (x/x);</strong>.  What you do is up to you.\r\n    </td> \r\n</tr>\r\n</table>\r\n\r\n</details>\r\n\r\n<br><br>\r\n### Try it yourself...\r\n",
    "start_blocks": "var x = 2;\r\nvar y = 3;\r\nvar z = 0;\r\n// your code here\r\n\r\nconsole.log(\"The value of x is: \" + x + \" (x should be 3)\");\r\nconsole.log(\"The value of y is: \" + y + \" (y should be 2)\");",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "instructions": "Using only the variables provided, assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log statement display the correct value(s).  (Click to see full instructions)",
    "lock_zero_param_functions": "false",
    "execute_palette_apis_only": "false",
    "encrypted_examples": "wYz9vF/yw4qKjS1oclk+y6kkQAuBnGKd8jVfx4VObjiRLX8ZgVWuZEDfAD8W\nQutzrjv8ASGqUsswZCdTqqjJfQ==\n"
  }
}]]></config>
  <blocks/>
</Applab>
