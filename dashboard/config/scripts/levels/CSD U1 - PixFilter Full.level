<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-08-11T14:36:49.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "setInterval": null,
      "clearInterval": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "stopSound": null
    },
    "edit_code": true,
    "embed": "true",
    "markdown_instructions": "# Instructions Go Here",
    "start_blocks": "var PIXSIZE = 8;\r\nvar NUMPIX = 16;\r\nvar inPixels = [];\r\nvar outPixels = [];\r\nvar inBin = \"\";\r\nvar clicked = false;\r\nvar currentPixel;\r\n\r\nsetup();\r\n\r\nfunction setup() {\r\n  setStyle(\"binary_text\", \"font-family:monospace\");\r\n  setStyle(\"binary_filtered\", \"font-family:monospace\");\r\n  setStyle(\"binary_example\", \"font-family:monospace; line-height: 15px;\");\r\n  setStyle(\"in_grid\", \"padding: 1px 0 0 1px;\")\r\n  setStyle(\"out_grid\", \"padding: 1px 0 0 1px;\")\r\n  setProperty(\"binary_filtered\", \"readonly\", true);\r\n  for (var i=0; i<NUMPIX; i++) {\r\n    var inRow = \"in_grid_row\" + i;\r\n    var outRow = \"out_grid_row\" + i;\r\n    container(inRow, \"\");\r\n    container(outRow, \"\");\r\n    setParent(inRow, \"in_grid\");\r\n    setParent(outRow, \"out_grid\");\r\n    for (var j=0; j<NUMPIX; j++) {\r\n      var inPix = \"in_grid_pixel_\" + i + \"_\" + j;\r\n      var outPix = \"out_grid_pixel_\" + i + \"_\" + j;\r\n      var color = \"000\";\r\n      container(inPix, color);\r\n      container(outPix, color);\r\n      setParent(inPix, inRow);\r\n      setParent(outPix, outRow);\r\n      setSize(inPix, PIXSIZE, PIXSIZE);\r\n      setSize(outPix, PIXSIZE, PIXSIZE);\r\n      setStyle(inPix, \"float:left; margin: 0 1px 1px 0;\");\r\n      setStyle(outPix, \"float:left; margin: 0 1px 1px 0;\");\r\n      setColor(inPix, color);\r\n      setColor(outPix, color);\r\n      appendItem(inPixels, inPix);\r\n      appendItem(outPixels, outPix);\r\n    }\r\n  }\r\n  \r\n  readRecords(\"drawings\", {}, function(records) {\r\n    var images = [];\r\n    for (var i=0; i<records.length; i++) {\r\n      images[i] = records[i].name;\r\n    }\r\n    setProperty(\"image_dropdown\", \"options\", images);\r\n    \r\n    var bin = records[0].bin;\r\n    bin = bin.slice(1, bin.length - 1);\r\n    drawBits(bin, inPixels);\r\n    genBin();\r\n    filterBits();\r\n  });\r\n}\r\n\r\nfunction drawBits(source, pixels) {\r\n  bitpos = 0;\r\n  for (var i=0; i<pixels.length; i++) {\r\n    var id = pixels[i];\r\n    var color = source.slice(bitpos, bitpos+3);\r\n    setColor(id, color);\r\n    bitpos += 3\r\n  }\r\n}\r\n\r\nfunction setColor(id, color) {\r\n  if (color === undefined) {\r\n    color = getText(\"pen_color\");\r\n  }\r\n  var red = color.slice(0,1) * 255;\r\n  var green = color.slice(1,2) * 255;\r\n  var blue = color.slice(2,3) * 255;\r\n  var rgbColor = \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\r\n  setProperty(id, \"background-color\", rgbColor);\r\n  setProperty(id, \"text-color\", rgbColor);\r\n  setText(id, color);\r\n}\r\n\r\nfunction filterBits() {\r\n  var filtered = \"\"\r\n  for (var i=0; i<NUMPIX; i++) {\r\n    for (var j=0; j<NUMPIX; j++) {\r\n      var id = \"in_grid_pixel_\" + i + \"_\" + j;\r\n      var color = getText(id);\r\n      var red = parseInt(color.substring(0,1));\r\n      var green = parseInt(color.substring(1,2));\r\n      var blue = parseInt(color.substring(2,3));\r\n      var newColor = \"\";\r\n      newColor += Number(eval(getText(\"red_source\")));\r\n      newColor += Number(eval(getText(\"green_source\")));\r\n      newColor += Number(eval(getText(\"blue_source\")));\r\n      filtered += newColor;\r\n      filtered += \" \";\r\n    }\r\n  }\r\n  setText(\"binary_filtered\", filtered);\r\n  drawBits(filtered.replace(/[^01]/g, ''), outPixels);\r\n}\r\n\r\nfunction filterBit(bit) {\r\n  var color = getText(bit);\r\n  var outPixel = \"out\" + bit.substring(bit.indexOf('_'), bit.length)\r\n  var red = parseInt(color.substring(0,1));\r\n  var green = parseInt(color.substring(1,2));\r\n  var blue = parseInt(color.substring(2,3));\r\n  var newColor = \"\";\r\n  newColor += Number(eval(getText(\"red_source\")));\r\n  newColor += Number(eval(getText(\"green_source\")));\r\n  newColor += Number(eval(getText(\"blue_source\")));\r\n  setColor(outPixel, newColor);\r\n}\r\n\r\nfunction genBin() {\r\n  inBin = \"\";\r\n  for (var i=0; i<inPixels.length; i++) {\r\n    var id = inPixels[i];\r\n    inBin += getText(id);\r\n    inBin += \" \";\r\n  }\r\n  setText(\"binary_text\", inBin)\r\n}\r\n\r\nfunction checkLogic(channel) {\r\n  var logicDropdown = channel + \"_logic\";\r\n  var sourceDropdown = channel + \"_source\";\r\n  var selection = getText(logicDropdown);\r\n  if (selection == \"And\") {\r\n    setProperty(sourceDropdown, \"options\", [\"red && green\", \"red && blue\", \"green && blue\"]);\r\n  } else if (selection == \"Or\") {\r\n    setProperty(sourceDropdown, \"options\", [\"red || green\", \"red || blue\", \"green || blue\"]);\r\n  } else if (selection == \"Not\") {\r\n    setProperty(sourceDropdown, \"options\", [\"!red\", \"!green\", \"!blue\"]);\r\n  } else {\r\n    setProperty(sourceDropdown, \"options\", [\"red\", \"green\", \"blue\", \"0\", \"1\"]);\r\n  }\r\n}\r\n\r\nonEvent(\"in_grid\", \"mousedown\", function(event) {\r\n  clicked = true;\r\n  if (event.targetId.includes(\"pixel\")) {\r\n    currentPixel = event.targetId;\r\n    setColor(currentPixel);\r\n    filterBit(currentPixel);\r\n  }\r\n});\r\n\r\nonEvent(\"in_grid\", \"mouseup\", function() {\r\n  clicked = false;\r\n  genBin();\r\n});\r\n\r\nonEvent(\"in_grid\", \"mousemove\", function(event) {\r\n  if (clicked && (event.targetId != currentPixel) && event.targetId.includes(\"pixel\")) {\r\n    currentPixel = event.targetId;\r\n    setColor(currentPixel);\r\n    filterBit(currentPixel);\r\n  }\r\n});\r\n\r\nonEvent(\"image_dropdown\", \"change\", function(event) {\r\n  var imageName = getText(\"image_dropdown\");\r\n  readRecords(\"drawings\", {name:imageName}, function(records) {\r\n    for (var i =0; i < records.length; i++) {\r\n      var bin = (records[i]).bin;\r\n      bin = bin.slice(1, bin.length - 1);\r\n      drawBits(bin, inPixels);\r\n      genBin();\r\n      filterBits();\r\n    }\r\n  });\r\n});\r\n\r\nonEvent(\"binary_text\", \"input\", function(event) {\r\n  var bin = getText(\"binary_text\");\r\n  bin = bin.replace(/[^01]/g, '');\r\n  setText(\"binary_text\", bin);\r\n  if (bin != inBin) {\r\n    inBin = bin;\r\n    drawBits(getText(\"binary_text\"), inPixels);\r\n    genBin();\r\n    filterBits();\r\n  }\r\n});\r\n\r\nonEvent(\"red_logic\", \"change\", function(event) {\r\n  checkLogic(\"red\");\r\n  filterBits();\r\n});\r\n\r\nonEvent(\"green_logic\", \"change\", function(event) {\r\n  checkLogic(\"green\");\r\n  filterBits();\r\n});\r\n\r\nonEvent(\"blue_logic\", \"change\", function(event) {\r\n  checkLogic(\"blue\");\r\n  filterBits();\r\n});\r\n\r\nonEvent(\"red_source\", \"change\", filterBits);\r\n\r\nonEvent(\"green_source\", \"change\", filterBits);\r\n\r\nonEvent(\"blue_source\", \"change\", filterBits);\r\n\r\nonEvent(\"pen_color\", \"change\", function(event) {\r\n  var color = getText(\"pen_color\");\r\n  var red = color.slice(0,1) * 255;\r\n  var green = color.slice(1,2) * 255;\r\n  var blue = color.slice(2,3) * 255;\r\n  var rgbColor = \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\r\n  setProperty(\"pen_color\", \"text-color\", rgbColor);\r\n});\r\n\r\nonEvent(\"help_button\", \"click\", function(event) {\r\n  setScreen(\"help\");\r\n});\r\n\r\nonEvent(\"exit_help\", \"click\", function(event) {\r\n  setScreen(\"screen1\");\r\n});\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern withCrosshair\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0;\"><button id=\"in_grid\" style=\"padding: 0px; margin: 0px; height: 145px; width: 145px; font-size: 0px; color: white; position: absolute; left: 10px; top: 55px; background-color: rgb(206, 206, 206);\"></button><div contenteditable=\"true\" class=\"textArea\" id=\"binary_text\" style=\"height: 145px; font-size: 9px; color: rgb(0, 0, 0); position: absolute; left: 165px; top: 55px; margin: 0px; width: 145px; background-color: rgb(255, 255, 255);\"></div><button id=\"out_grid\" style=\"padding: 0px; margin: 0px; height: 145px; width: 145px; font-size: 0px; color: white; position: absolute; left: 10px; top: 295px; background-color: rgb(206, 206, 206);\"></button><select id=\"red_logic\" style=\"width: 150px; height: 25px; font-size: 12px; margin: 0px; color: white; position: absolute; left: 10px; top: 205px; background-color: rgb(188, 26, 26);\"><option>Replace</option><option>And</option><option>Or</option><option>Not</option></select><select id=\"green_logic\" style=\"width: 150px; height: 25px; font-size: 12px; margin: 0px; color: white; position: absolute; left: 10px; top: 235px; background-color: rgb(28, 188, 26);\"><option>Replace</option><option>And</option><option>Or</option><option>Not</option></select><select id=\"blue_logic\" style=\"width: 150px; height: 25px; font-size: 12px; margin: 0px; color: white; position: absolute; left: 10px; top: 265px; background-color: rgb(28, 26, 188);\"><option>Replace</option><option>And</option><option>Or</option><option>Not</option></select><select id=\"red_source\" style=\"width: 150px; height: 25px; font-size: 12px; margin: 0px; color: white; position: absolute; left: 160px; top: 205px; background-color: rgba(188, 26, 26, 0.498039);\"><option>red</option><option>green</option><option>blue</option><option>0</option><option>1</option></select><select id=\"green_source\" style=\"height: 25px; font-size: 12px; margin: 0px; color: white; position: absolute; left: 160px; top: 235px; width: 150px; background-color: rgba(28, 188, 26, 0.498039);\"><option>green</option><option>red</option><option>blue</option><option>0</option><option>1</option></select><select id=\"blue_source\" style=\"height: 25px; font-size: 12px; margin: 0px; color: white; position: absolute; left: 160px; top: 265px; width: 150px; background-color: rgba(28, 26, 188, 0.498039);\"><option>blue</option><option>red</option><option>green</option><option>0</option><option>1</option></select><div contenteditable=\"false\" class=\"textArea\" id=\"binary_filtered\" style=\"width: 145px; height: 145px; font-size: 9px; color: rgb(0, 0, 0); position: absolute; left: 165px; top: 295px; margin: 0px; background-color: rgb(255, 255, 255);\"></div><select id=\"image_dropdown\" style=\"width: 110px; height: 20px; font-size: 12px; margin: 0px; color: white; position: absolute; left: 200px; top: 30px; background-color: rgb(206, 206, 206);\"></select><select id=\"pen_color\" style=\"height: 20px; font-size: 12px; margin: 0px; color: white; position: absolute; left: 45px; top: 30px; width: 75px; background-color: rgb(206, 206, 206);\"><option>000</option><option>001</option><option>010</option><option>011</option><option>100</option><option>101</option><option>110</option><option>111</option></select><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 12px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 27px; height: 17px; position: absolute; left: 15px; top: 30px;\" id=\"pen_label\">Pen</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 20px; overflow: hidden; word-wrap: break-word; color: rgb(255, 255, 255); max-width: 320px; width: 360px; height: 25px; position: absolute; left: 0px; top: 0px; text-align: center; background-color: rgb(0, 173, 188);\" id=\"title\">Pixel Filterator</label><button id=\"help_button\" style=\"padding: 0px; margin: 0px; height: 25px; width: 25px; font-size: 14px; color: white; position: absolute; left: 290px; top: 0px; background-color: rgba(0, 0, 0, 0); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"icon://fa-question-circle\" data-icon-color=\"#ffffff\"></button><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 12px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 61px; height: 17px; position: absolute; left: 130px; top: 30px;\" id=\"load_label\">Load Img</label></div><div class=\"screen\" tabindex=\"1\" id=\"help\" style=\"height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; display: none; background-color: rgba(255, 255, 255, 0.498039);\"><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 310px; height: 33px; position: absolute; left: 10px; top: 35px;\" id=\"label3\">Colors are expressed as 3-bit sequences, one bit per color channel. For example:</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 20px; overflow: hidden; word-wrap: break-word; color: white; max-width: 320px; width: 320px; height: 25px; position: absolute; left: 0px; top: 0px; text-align: center; background-color: rgb(0, 173, 188);\" id=\"label2\">How the Filterator Works</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 300px; height: 95px; position: absolute; left: 10px; top: 215px;\" id=\"label4\">You can use the pen, load a predefined image, or&nbsp;type binary directly into the top input section. As you change the input, each 3-bit pixel will be run through the three filter settings you define in the middle&nbsp;filtering section.</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 35px; height: 145px; position: absolute; left: 110px; top: 78px; text-align: right;\" id=\"binary_example\">000 001 010 011 100 101 110 111</label><button id=\"button1\" style=\"padding: 0px; margin: 0px; width: 40px; font-size: 14px; position: absolute; left: 160px; top: 95px; height: 15px; background-color: rgb(0, 0, 255);\"></button><button id=\"button2\" style=\"padding: 0px; margin: 0px; width: 40px; font-size: 14px; position: absolute; left: 160px; top: 110px; height: 15px; background-color: rgb(0, 255, 0);\"></button><button id=\"button3\" style=\"padding: 0px; margin: 0px; width: 40px; font-size: 14px; position: absolute; left: 160px; top: 125px; height: 15px; background-color: rgb(0, 255, 255);\"></button><button id=\"button4\" style=\"padding: 0px; margin: 0px; width: 40px; font-size: 14px; position: absolute; left: 160px; top: 140px; height: 15px; background-color: rgb(255, 0, 0);\"></button><button id=\"button5\" style=\"padding: 0px; margin: 0px; width: 40px; font-size: 14px; position: absolute; left: 160px; top: 155px; height: 15px; background-color: rgb(255, 0, 255);\"></button><button id=\"button6\" style=\"padding: 0px; margin: 0px; width: 40px; font-size: 14px; position: absolute; left: 160px; top: 170px; height: 15px; background-color: rgb(255, 255, 0);\"></button><button id=\"button7\" style=\"padding: 0px; margin: 0px; width: 40px; font-size: 14px; position: absolute; left: 160px; top: 185px; height: 15px; background-color: rgb(255, 255, 255);\"></button><button id=\"button8\" style=\"padding: 0px; margin: 0px; width: 40px; font-size: 14px; position: absolute; left: 160px; top: 80px; height: 15px; background-color: rgb(0, 0, 0);\"></button><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 300px; height: 75px; position: absolute; left: 10px; top: 330px;\" id=\"label7\">The bottom section shows the output of the original image being run through your filter. You cannot manipulate the image or binary in this section directly, on by modifying the input or filter settings.</label><button id=\"exit_help\" style=\"padding: 0px; margin: 0px; height: 25px; width: 25px; font-size: 14px; color: white; position: absolute; left: 290px; top: 0px; background-color: rgba(26, 188, 156, 0); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" data-canonical-image-url=\"icon://fa-times-circle\" data-icon-color=\"white\"></button></div></div>",
    "submittable": "false",
    "hide_view_data_button": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "data_tables": "{\r\n  \"drawings\": [\r\n    {\r\n      \"name\": \"apple tree\",\r\n      \"bin\": \"'001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001010010010010010010010010010010001001001001001010010010010010010010100010010010010001001001001010010010010010010010010010010010010001001001001010100010010010010010010010010010010001001001001010010010010010010010010010010010010001001001001010010010010010010010010010010010010001001001001010010010010010010010010010100010010001001001001001010010010010010010010010010010001001001001001001001001001001110110001001001001001001001001001001001001001001110110001001001001001001001001001001001001001001110110001001001001001001001001001001001001001001110110001001001001001001001010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010010'\"\r\n    }\r\n  ]\r\n}",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>