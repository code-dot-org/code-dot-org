<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A DJ wants to quickly find whether a song exists in their playlist.\r\n\r\n##In Playlist.java:\r\n\r\n1. Write the method `findSong()`(#e7e8ea) to find the index location of a song in `songList`(#e7e8ea) using an iterative or recursive binary search. Return the index location of the song or `-1`(#e7e8ea) if the song is not found.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    Song song1 = new Song(\"Eye of the Tiger\");\n    Song song2 = new Song(\"Fantasy\");\n    Song song3 = new Song(\"Hero\");\n    Song song4 = new Song(\"I Will Always Love You\");\n\n    ArrayList<Song> songList = new ArrayList<Song>();\n    songList.add(song1);\n    songList.add(song2);\n    songList.add(song3);\n    songList.add(song4);\n\n    Playlist myPlaylist = new Playlist(songList);\n    int location = myPlaylist.findSong(song3);\n    System.out.println(song2.getTitle() + \" found at index \" + location);\n    \n  }\n}",
        "isVisible": true
      },
      "Song.java": {
        "text": "/*\n * Represents a song\n */\npublic class Song {\n\n  private String title;   // The title of the song\n\n  /*\n   * Creates a Song with the specified title\n   */\n  public Song(String title) {\n    this.title = title;\n  }\n\n  /*\n   * Returns the title of the song\n   */\n  public String getTitle() {\n    return title;\n  }\n  \n}",
        "isVisible": true
      },
      "Playlist.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a playlist of songs\n */\npublic class Playlist {\n\n  private ArrayList<Song> songList;   // The list of songs\n\n  /*\n   * Creates a Playlist with a specified list of songs\n   */\n  public Playlist(ArrayList<Song> songList) {\n    this.songList = songList;\n  }\n\n  /*\n   * Searches for a target song in the songList and returns its index location\n   */\n  public int findSong(Song target) {\n    return findSong(0, songList.size() - 1, target);\n  }\n\n  /*\n   * Uses a binary search to find a target song in songList and return its index location\n   */\n  public int findSong(int low, int high, Song target) {\n    // TO DO #1: Implement an iterative or recursive binary search\n    // to find the target song in songList.\n\n\n    \n  }\n}",
        "isVisible": true
      }
    },
    "display_name": "Playlist Manager",
    "bubble_choice_description": "Use a binary search to find the location of a song in a playlist.",
    "thumbnail_url": "https://images.code.org/387f98a1e270ea56e04adad7b7d0b0c8-music.png",
    "name_suffix": "_2022",
    "encrypted_exemplar_sources": "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\nT4aBKvWl5CdatjE7/feZYO9OIPvovPLSWQ==\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-02-26T00:33:55.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:33:55.373+00:00\",\"changed\":[\"cloned from \\\"CSA U8L4-L2b\\\"\"],\"cloned_from\":\"CSA U8L4-L2b\"},{\"changed_at\":\"2022-05-14 01:41:38 +0000\",\"changed\":[\"encrypted_examples\",\"bubble_choice_description\",\"thumbnail_url\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:43:50 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:53:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:54:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 01:57:50 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-14 02:04:12 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
