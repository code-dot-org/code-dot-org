<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**Create the `Dessert`(#e7e8ea) class by declaring instance variables for the specified attributes, and refactor the `Cookie`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.**\r\n\r\n✅ **TO DO:** Write the `Dessert`(#e7e8ea) class, and refactor the `Cookie`(#e7e8ea) class.\r\n\r\n1. In the `Dessert`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the flavor of a dessert\r\n   \r\n   * the price of a dessert\r\n\r\n2. Refactor the `Cookie`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.\r\n\r\n3. In `FoodTruckRunner.java`(#e7e8ea):\r\n\r\n   **a.** Instantiate a `Dessert`(#e7e8ea) object and a `Cookie`(#e7e8ea) object\r\n   \r\n   **b.** Print the instance variables for the `Dessert`(#e7e8ea) and `Cookie`(#e7e8ea) objects to the console using `ClassInfo.getAttributes(nameOfObject)`(#e7e8ea)\r\n\r\n::: details [**🔦 What is `ClassInfo.getAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `ClassInfo.getAttributes()`(#e7e8ea) is a hidden support method that returns the instance variables in a class as a `String`(#e7e8ea). Call the method by passing an object as its argument, such as:\r\n\r\n```\r\nDog fido = new Dog();\r\nSystem.out.println(ClassInfo.getAttributes(fido));\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables, creating a subclass, and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/170ea66d8783febe2db9bcd54a7288d7-image-1667489998731.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/inheritance",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Desserts and Cookies",
    "bubble_choice_description": "Create the `Dessert` class by declaring instance variables for the specified attributes, and refactor the `Cookie` class to be a subclass of the `Dessert` class.",
    "thumbnail_url": "https://images.code.org/20490e89a01048e57894bdb3fca5d498-cookie.png",
    "encrypted_validation": "+blWbpW6SQmgZ41IAQJSx6vpffdE9qhAZeT8d/BqleZR0xqKTkcCbpZhWmAC\nU0BZZEtjtDlq9XJWPyqUwkU+cmNXVNVlkplx58ryQPhpUNLs9/0kg/v5dYfK\nKiYREUyWPmkFWf+KxTivIX/2PyQEHC0zAj3QAXzhSFfbMWq6LwLt5vahSkNB\n/zdiCN4M7wEDaDtzpY4vepyZy3c/WJEZ4uGoeU8mBmAMSkIebhi8HfL6Lyyb\n2pEvJO+XtZT8I62RdombEqdGb99yUOq/fBLttsvbNfm2VMdJY8s6uaT0CtrE\nqIBIilzQG1UQfJIhvOStDCWPtbF62n35NMkIpb8og1FtlAIGKpHrRU6010CY\nfLrf2bOXmznRffwX35tPAO+Y9rhEV+BjDiVRztqT1x+9jaCX+L9dpskBoVty\nGDpu7gidzHb0rw8JGsG8i7q8ZXENhsAEFBYJKpPd1CDjzvjPcGPfn/3SebL9\n9Y3qC+vh0MOUoQei98ajsIZPB1MUS3tRYoq73yNsjsrMv2thSETdPw2xwxrV\nRVRfm/uE86bCiCoHIYETuYg+0mfbkrLfUJtqS3jVqEU3oaZqFz7gkVI6lqM0\nh9I4dAcBJmxRN7pIu5PrZgpXAgbK0Y/rDbDa89LLbm1jmgyTcRxaidRbx92Q\nAF7AzjeBGnXX8AJ4566Ce4SNOg2yCyGRTyHsU6X+XBC1ctvkUoEhkO0q/vc0\ntcLPYylvIc4fS6kaecKDjE5283JObUrLJ1tXNY+pdp/GD6/DZJUYloXDNqNP\nAykXn+lguHsswjv6hRxnYMgaD2/QMBgryuLsy1Jki5+FW8t4bpEHW1vMHs2v\nOKzwvlWLC7XTWEp2SAibrF/cvpjaNokIllZhlKHjsL4HpauiOJW4TPX79OMH\nVYQXge9Hjg0Si/whjt0XNBxJDrnUvfSMdH5S7WzJ7ybY0vPB+lSjCmJLhvkp\nV0bU018u6g/46IN9IUkftepaW2UZNy+hJlRMQqhvwrvS2HT41VgNlqrJKIlY\niHYpflN44wWNA3A/W7NGQg26C0B8jZYFh6hC1kx3Bk/qYCVCN0wgRl4zkTj7\nka8fwn5qEzczCI545z8GA51jGAdc/fW3dkqZhE8CVUV0TG+Mrj9Y7kxtHMID\nbAwStkM7Uxm9jTwA9E4JJK5p/HEjmf/C+HJF1qgpSvhseiUUc6XOjBOdCMZj\n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\n",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* ------------------------------------- TO DO -------------------------------------\n     * ✅ Instantiate Dessert and Cookie objects, then print the instance variables for\n     * the Dessert and Cookie objects to the console using ClassInfo.getAttributes().\n     * ---------------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dessert.java": {
        "text": "/*\n * Represents a dessert that can be sold at a food truck\n */\npublic class Dessert {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Declare instance variables for the flavor and price of a dessert.\n   * -------------------------------------------------------------------\n   */\n\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Cookie.java": {
        "text": "/*\n * Represents a cookie that can be sold at a food truck\n * Cookie is a type of Dessert\n */\npublic class Cookie {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Refactor the Cookie class to be a subclass of Dessert.\n   * -------------------------------------------------------------------\n   */\n\n  private String flavor;     // The flavor of a cookie\n  private double price;      // The price of a cookie\n  private boolean isChewy;   // Whether or not a cookie is chewy\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      }
    },
    "encrypted_exemplar_sources": "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\nngZRAytGbto36lTMc+pi1hFmeQzGIOiL\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:31:17.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:31:17.803+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L4_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L4_2023\"},{\"changed_at\":\"2022-11-01 17:31:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:19:28 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:37:06 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:45:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:45:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:46:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:05:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:05:44 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:07:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:07:47 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:08:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:13:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:15:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:12 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:39:59 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:48 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:20:49 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
