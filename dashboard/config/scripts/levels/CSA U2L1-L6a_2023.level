<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**Create the `Dessert`(#e7e8ea) class by declaring instance variables for the specified attributes, and refactor the `Cookie`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.**\r\n\r\n✅ **TO DO #1:** In the `Dessert`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the flavor of a dessert\r\n   \r\n   * the price of a dessert\r\n\r\n✅ **TO DO #2:** Refactor the `Cookie`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.\r\n\r\n✅ **TO DO #3:** In `FoodTruckRunner.java`(#e7e8ea), instantiate a `Dessert`(#e7e8ea) object and a `Cookie`(#e7e8ea) object, then print the instance variables for the `Dessert`(#e7e8ea) and `Cookie`(#e7e8ea) objects by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables, creating a subclass, and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/inheritance",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Desserts and Cookies",
    "bubble_choice_description": "Create the `Dessert` class by declaring instance variables for the specified attributes, and refactor the `Cookie` class to be a subclass of the `Dessert` class.",
    "thumbnail_url": "https://images.code.org/20490e89a01048e57894bdb3fca5d498-cookie.png",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* ------------------------------------- TO DO -------------------------------------\n     * ✅ Instantiate Dessert and Cookie objects, then print the instance variables for\n     * the Dessert and Cookie objects to the console using AttributesHelper.printAttributes().\n     * ---------------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dessert.java": {
        "text": "/*\n * Represents a dessert that can be sold at a food truck\n */\npublic class Dessert {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Declare instance variables for the flavor and price of a dessert.\n   * -------------------------------------------------------------------\n   */\n\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Cookie.java": {
        "text": "/*\n * Represents a cookie that can be sold at a food truck\n * Cookie is a type of Dessert\n */\npublic class Cookie {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Refactor the Cookie class to be a subclass of Dessert.\n   * -------------------------------------------------------------------\n   */\n\n  private String flavor;     // The flavor of a cookie\n  private double price;      // The price of a cookie\n  private boolean isChewy;   // Whether or not a cookie is chewy\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 5
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:31:17.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:31:17.803+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L4_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L4_2023\"},{\"changed_at\":\"2022-11-01 17:31:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:19:28 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:37:06 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:45:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:45:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:46:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:05:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:05:44 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:07:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:07:47 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:08:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:13:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:15:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:12 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:39:59 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:48 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:20:49 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:51:42 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:14:36 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:14:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:14:43 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:53:25 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:54:27 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:58:13 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
