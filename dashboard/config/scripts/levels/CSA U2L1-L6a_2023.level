<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "Create the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dessert</code> class by declaring instance variables for the specified attributes, and refactor the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Cookie</code> class to be a subclass of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dessert</code> class.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dessert</code> class, declare instance variables for the following attributes:\r\n\r\n   * the flavor of a dessert\r\n   \r\n   * the price of a dessert\r\n\r\n‚úÖ **TO DO #2:** Refactor the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Cookie</code> class to be a subclass of the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dessert</code> class.\r\n\r\n‚úÖ **TO DO #3:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">FoodTruckRunner.java</code>, instantiate a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dessert</code> object and a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Cookie</code> object, then print the instance variables for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Dessert</code> and <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Cookie</code> objects by calling the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">AttributesHelper.printAttributes(nameOfObject)</code> method.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with declaring instance variables, creating a subclass, and instantiating objects.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ What is <code style=\"background-color: #ececec; color: black; font-weight: bold;\">AttributesHelper.printAttributes()</code>?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    <p>The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">AttributesHelper.printAttributes()</code> is a hidden support method that prints the instance variables in a class to the console. For example:</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n\t  </pre>\r\n      \r\n      <p>This method (along with the tests) will help you check that you declared your instance variables correctly.</p>\r\n    </div>\r\n</details>\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/inheritance",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Desserts and Cookies",
    "bubble_choice_description": "Create the `Dessert` class by declaring instance variables for the specified attributes, and refactor the `Cookie` class to be a subclass of the `Dessert` class.",
    "thumbnail_url": "https://images.code.org/20490e89a01048e57894bdb3fca5d498-cookie.png",
    "encrypted_exemplar_sources": "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\np7qfTUebvHg=\n",
    "encrypted_validation": "FoPsNWTm4Xn7T3ICp1XF43FbSeMZr9hWRhQJHpVjL2iUMbmbhiYSK4iMjBwl\nOA/XXNakb1pHHwLIFZ4nX7ZdcmYvUM7i1UZqjVokMdPUjCOhW+D7mWDUii76\noMMJbZJtNnXQocO9mq+GebpxCgomNijRb8LmdxaSJKsMRoF2Fn96S2jGEiQ+\nH/E8o4M0nivahL9lsCHDLuZ+xqjK6xXm/dachkntLWBMcRQglr3bhiAwOXJQ\ntbppkQHDklwAQVjyfri8w804nAebcGLb1pSpGa6AR6+3sYgen2CyuNIfHxPS\nEsLtWZfmh3Tn2w/7RtTpwXGhuzMGpcTM2V/RFUtOcxbNrYtSvryuQzvuW9M1\ny0jaXFMglokf3+ppHITU4MaqNjgKxUkjlpxGuFRps2y70hxT+kraezVbSXef\neQCp7xx4lEqYYGBF2BLaXc8IksAewf1ry2UL6idK9hxBdtZcGngJOIPQ+jnb\nDTy8S31wf2mpo3/tDjk3rMff3X3vTfgFRLhjrWh3KgzdOqMjygGLLApTweQz\nwiNJWfPPAJS3sBEYIOY4orvgb+oFedtGrViisvC5oUxrOX08KLdCpH/wcM6p\n0eknb22e6vsUEL0Vn05d2j/SwoisPHSvY8vrOMRN3Si7qPPIst9WKNZ30eqF\njI/mzOQEFOWxiHRA0tberbmgWFEksX/3LtFF064EmNgjTxzEw8OX3kToUrMU\nQ00id9/vkZVNglLfnAlNCEOgKy0iBVxstJJoSi7Vj2iqcoJxywQZJFujyHUN\nKEZ/EQ3eK341HJ/k3lAIkePVpfk/1ZsQNg0uv+VNzAlmip5XFqzpS+cV5ygz\nTcJh6zghUK51rS1RaXSYlwfaCJW5BR/bybRIZlGUSrKyWzvu64uP406Zxbdh\n71f8hUcZjq4JxYU9/44+maG4k5IM6fLUPlPjGdxCrx2ZCDr2niAh3V/NtX/N\nUzo7r2vaLkp0rQJhr7v5nIRWruJSLuJfO+oGydo90FP06iLqBpC+6JJg2L94\njGO2Q41w3K05ii8ycIUjGIGv9RzAqpTMY0EbWfCzhJJCRdzBMEzrUabWP2CX\nlGwfn4VJcBoc0bJopm64B/1kn+1LcAm+7dbW2XXNUZ+CTse7C3JzM1JUKVeC\nz22FekBlBLfyJBy5gJpp/liPZ9mNSMhMsku39ib1ERcN7jzeSiUP77HgySzj\n5zXLhjh8mQyce7z8gilgp5uHnD+mvVz5hcT6nNePitJFGNyMU/QKVHovME2R\nDt8jLAtQo9XXFmBtLITdEYmZm72FlriEZsOAkqcj9q6/8NTJiYlFkgJuh/mx\nnn0GCnaHTj5OiUIHkh4XfR5EmyZunljpeFeZqjAAr71S3ZyyNojROcqXSh53\nQFlj50TQqasC7E4fS6nldysGxd/enBsWEnCDT/9j/ZkwYkJQAMy9UUd2Oj4N\na8VT8JmiBYTi+dZRxgB0ZX6iikpFta3WeFhtqPfp7OUH8tl09Vo/79yq1/yD\n9sIU3FnR05N25+nuFgYze9RGzOOHAfXDRflEzWXlpbyZJesY4nROjQWSiM16\nJvODYiu6oRSLKtIOHTbSt/SkCVBi890xpaE5w70jo4vWWM1IFnDCBa1Udz0X\n+Ay2kloMaXtT23jmml6/+DOfn1vPi2coxPNUYoL4kkUDM16swbWhtHgpWX0m\nfaIhOLWtC10ihvgF7IQwdoh/7VE2RInOu65+Hm9ytK5MAfif9n3Dj5dA0WxN\nUVqOVyeaLDBgR3VBYHqEH659N+l0wBCoxaMF1QQh587ySoRfks8ajKupZsM0\nbhCeoG73xfUHs4b/4eDPpw/6DcsVe3j2izJV5voNZcUSgpp1akykWbLy3ZTY\nA7VLB4Ws3Eh1L8Uwq25fgg4ocsiZZMMN1T63XMQ7dM+VY1NWRrt4YEZ1NuXc\noIU2TQjsEUOy/o+DLkP0bDu8M3+txPed1VJPOinxTKPyJO9RFha/jIO720s8\n35tvOBNl7ntBVyFkOYbLN8ywiqgu/IOss/V1EnSOX3FotxFX1WodZJMDM8xl\nxmOjR9zJrBGmU4zmEP6irpRGGItv2GJ/hDNdMKPWix13GOsHkH6AkHwOSC/B\nafpG61WLJn1uNQEkWgDSOqT9D6wTXJFiLgO6aUMqr6nDqpvVh/6Eawz7I1EF\n7+JxEU7qG5on7qjVtVsXPGBzKCFrklw43rjcOYzoeu8NUihnpgeJ52QqGUh/\nGtjOntVLQH922d+zgxK15jtTx87OROi5VTN18I70Ps5ZyTAZZspnMy6iCo5I\nx1Y7igHp3rP7nzubuX1Cq4NDDH6X0o6lOPlUHFY60g08H5186g6Q49eFDm71\nouCGZX1DOeObhJFrxjdvyU5AxOfAWxmrXVIg3xpQ47gwmuAKmKrak/KJl/LD\n9LUG7EQGYR/rAg6bJ7N6ZusitE4Jj+3cu+EWbn6V6X++WWAYdirBfvv+vS3w\nsq2VAXCYW675W+k1ehJgRXTMpDY3eq3AM63ST280bTAgJF6dukDcO7GMZH0r\nSRP0IoiQdUOWhAMMbuvgitIgLbVwbUPRaXVS9cD9P1hrp2hqBnlNd2hsnn11\nGAQ169J5S6DGwq0mu2BJOnlRUn79MGx1Vo5IzukCOPrLq3oNRVPMw5WJRI3V\n10cNgLE3JyEy298rkhMuSYk4NyG5gFGl9guzBL/dyq40YoSjixmSItpeksOa\ngQ2/nhkhVUm/YYDZs/otHyt420KbVQuZTyJFOJYDfnXB9xA1yLtxuZWSntCl\nSgioKYBWZ+ite2wQBc7jNigtkTik7VQ4xm2RnDYXtZHeuANTTUmurJJSrE/S\ngjGVMVelie4c7sR2N+kkilRbUyjaYTPzBWz+/OGPsF+6z+7/CTPeFdgCieu4\nMjX7L7VEN+LHOEOyQesr7bMFGdy5uA30JxfckxdV3m+UwaEUGlSTY2FnWlLn\nua9w/nmVS2cJ8rwmtelIK+pHrIu7DDQZhDjUOxLVM2W8uRR6J0TRgeDK9DS7\nI4KL/GqJ8YZCbJrKq5h3bGssxUn1fCRHf9Y1rtoXmpYbjo3vLRA/lqQc4RMS\nEGVR8bNcjoX36pxe+jJSHWRyfOn6SLhztm3BhT+H2mrQv+fADVlNTaHElNfH\nIqmq46UTm+kIkHUEA0TnYnQo9WpDbYrqZejszl3itLNrXY+hMwWDVtr4J5i3\n+Nj1ruU6oEsKqy5W9gY1amnG+Bw+yKSqrmtkZrzYoxar/YujgAqg6fGhJmfl\n2RJU+xcKY/18k4ZzA60hm/VDSFU0LkMPEIYwSr8Xztz18mrKaEJlJ7qx9UV9\n0qWbfswb9JJ5OTCtYC2ObY7k6SQSubTfVXtZ7p7+LYDGbYnrZbowoeieRZWT\nRLD/TiPiZQtIHJGOeVggH0HHgAkEi2Z2CWw4JdUQTNHPowyzyEXOA6+0Ezy7\nL2WarKurR940p0iHOmgZ7e3MQdykXyqixb4nswvL6rFO+Ku1SEJv26WHzfqZ\nPDNgRxlJEJdoIRurGgZ0/nRcU6g4Jwj5Z2lpObz+O5rS8TyBB34mCqcgyfP4\nyEKcYXTsdiYSxTMpM59cU1zuULQQ9LOX2CyNg9XWa8ipvSroT3w/LswD0r6+\n2O4MjuDNMXdoHI99gXwj4JJ7MJ5b/pa2/zug5TzPF1IFv8bA4ms+iLDmku8q\nA0HewCNBf2dsTNUYHeKoGUDwscVRS95l+TeXkZXbQhxr6jzVerdIUN+Js6e5\nfMUswLwaFP6wg5bK9ubfjAJ/IXIuPUPrdvd9lTfv0dhmJaLTgsh8QUanKH6g\ndDy8ivahaKh/GexLsOAaLYCA1XzUmxY0RtayJ+gq/4UoODhXZ5TgUNfzvEgd\nou2eETH6bj/hsGu9Jh+OKEYxIlNb0+6jEuaQc/t6vRRn8qwJW+RlJIyTNF6+\neAqjTXzTrDNGwMdtwK7alI3o99TAggbJc32sz7Uct+ArFmU4kRUSWbccb427\ncTlT5KO5HhkqXS3JuFveDKQ4L526gpzs/ue3JbCTje3n2FXyMa/6t+veaTfB\nSezI0r6STOHDFCNJb65mRbai4l19nEmTFOVp5p1VkJRUQm07swyvUHz2njwR\nEbdrMNeBZOTjNPaoKua9xnj54eAaqSGTcHult1+Q3Pnj14XLEiJx2EpCn+B7\nVZ3j2ABpLW7lX3gmzh4eUsEEKxDfBLLdyKc4vL4cdzQx8njFRyTGo4+jCFft\nQ2E71kby5ppjhwdyfRGGCSmER8Q4yBhuY4CqjdfKKiymGnR2b6/lrnCbB5tQ\n3K62wTHvD38ryAQLkduR9ik4j/nVIJe5hxLQ23nv4etJRXbrgx0gDEcF03ue\n03Cxmu1xqKrk6Z+gVwHS2SZxt5b2cDiKCsFQQiyNtxwN7waDpUbyBsKYCTRN\nrYgfBmvrkjzgPUGzEUMFbR0FFO3YC5UFL4+2Qn2+G3+0I2vtfaZO157oi97L\nINilg3ce8Ys+/xVuDb/uBmrXnQk4ZXSTVkJ2ORkuqtMpB/Ics1+DnDybe/vp\n8I2uUcQwiixA1pPLSwvk+KEg+4oLIpoJwzug3GIuo209VmMevW5QvDDPaKKo\naujcJz4FnemGDKr+KEeDoYu3dZQfjoInTKBvkQYKn15TGsT/B0WfJ2X58HTP\n1T9mb4QoHbBz8Qavwnpyat1r1kJe6ZRtSJq78NeEzFJA1ubIjeihpQAMRIMt\nksYrdzpJ1wtuJ5NwBr9uETG2R2hXcfnF7nQhnx9I6B9dE1HAZxke9GVbT8dz\nWiI2oRJHVjEsFp/YetHz6DLvoshy6h1Znf4H70N4QIm0+N7qJXttpd75KpFa\nxFM1E8QPfTTECS2PK+uAW13KDnet801vOPXhunbvagAowOrEYLis/k6XVmlh\ntsivabN4LEPWnyduMhdjFH8/jHcexD24sELUNYSwfZoFH1Gf989yeD/J7cK+\nrKuPzbWsJB4pHp3f7JhIKUHZDhEeZyfBP869g4UDKqAkszwrz+9zha+3G2FR\nuR6v6Dd6nnaY68j6+wfp4ukKl4t+bEg3fMsTSqu0y23dAl3Hu87E1/C4DzJq\nx9pt9YlVrnXK5/RG7qP1TILLK5Fw7TnoHbD4R1Wh9Kpnz9O+rnQEGRR7mr62\nmHVjfOGzws82vYWm5vpOj1NI20GpiMrug+VhS0et3dDHnzth+ThmkJifSvX6\nwPLBLjswavbYiRsCJAw5UQzZRffGAXKgTHGqpJ68Xvf4cM0rxY483ee8iYQt\nGbA//Nxs8esVUH9/7CvGev/WXiyA\n",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* ------------------------------------- TO DO -------------------------------------\n     * ‚úÖ Instantiate Dessert and Cookie objects, then print the instance variables for\n     * the Dessert and Cookie objects to the console using AttributesHelper.printAttributes().\n     * ---------------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dessert.java": {
        "text": "/*\n * Represents a dessert that can be sold at a food truck\n */\npublic class Dessert {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ‚úÖ Declare instance variables for the flavor and price of a dessert.\n   * -------------------------------------------------------------------\n   */\n\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Cookie.java": {
        "text": "/*\n * Represents a cookie that can be sold at a food truck\n * Cookie is a type of Dessert\n */\npublic class Cookie {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ‚úÖ Refactor the Cookie class to be a subclass of Dessert.\n   * -------------------------------------------------------------------\n   */\n\n  private String flavor;     // The flavor of a cookie\n  private double price;      // The price of a cookie\n  private boolean isChewy;   // Whether or not a cookie is chewy\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n    typeToFind += \" \";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean \", \"int \", \"double \", \"String \"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result.trim();\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 3
      }
    },
    "video_key": "csa_constructors",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:31:17.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:31:17.803+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L4_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L4_2023\"},{\"changed_at\":\"2022-11-01 17:31:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:19:28 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:37:06 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:45:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:45:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:46:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:05:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:05:44 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:07:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:07:47 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:08:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:13:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:15:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:12 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:16:32 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:39:59 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:48 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:20:49 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:51:42 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:14:36 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:14:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:14:43 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:53:25 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:54:27 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:58:13 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:40:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:40:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:40:57 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:41:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:42:16 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:42:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:46:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:47:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:47:42 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-31 01:33:10 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-02 14:26:28 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-14 16:02:48 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
