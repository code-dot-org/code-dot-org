<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L10-L3b PBT_pilot-2022",
    "long_instructions": "Request a code review to get feedback from your peers on your `hasDuplicates()`(#e7e8ea) method.\r\n\r\nWhen you are finished receiving feedback, return to your project and click the **Close review** button.\r\n\r\n##Requesting Feedback\r\n\r\n**Commit your code** and add a comment that includes:\r\n\r\n* a description of the goals and intended outcome of the program\r\n\r\n* any additional relevant information\r\n\r\n* specific tasks or questions you want your reviewer to perform or answer\r\n\r\n##TAG to Give Feedback\r\n*Remember to keep feedback kind, specific, and helpful. Refer to your sentence starters to structure your feedback.*\r\n\r\n1. Tell them something you like about their code.\r\n\r\n2. Ask them something about the code.\r\n\r\n3. Give a suggestion for improvement.",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Basketball",
    "bubble_choice_description": "Find out if there are duplicate numbers of championship wins for a list of basketball teams.",
    "thumbnail_url": "https://images.code.org/85b78d8dd66f050a208cbf4a15f21021-image-1648757498214.png",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n0H/pYguiAPMhVaW9MFfMFvbj6i/3sCaYDWg=\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"teamnames.txt\");\n    String[] teams = myFileReader.getStringData(30);\n\n    myFileReader.setFile(\"championshipwins.txt\");\n    int[] wins = myFileReader.getIntData(30);\n\n    Basketball myBasketballStats = new Basketball(teams, wins);\n\n    // TO DO #2: Print the result of a call to hasDuplicates().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a double array containing the values in the file\n   */\n  public double[] getDoubleData(int numValues) {\n    double[] values = new double[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextDouble()) {\n        values[index] = fileReader.nextDouble();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "teamnames.txt": {
        "text": "Boston Celtics\nBrooklyn Nets\nNew York Knicks\nPhiladelphia 76ers\nToronto Raptors\nChicago Bulls\nCleveland Cavaliers\nDetroit Pistons\nIndiana Pacers\nMilwaukee Bucks\nAtlanta Hawks\nCharlotte Hornets\nMiami Heat\nOrlando Magic\nWashington Wizards\nDenver Nuggets\nMinnesota Timberwolves\nOklahoma City Thunder\nPortland Trail Blazers\nUtah Jazz\nGolden State Warriors\nLos Angeles Clippers\nLos Angeles Lakers\nPhoenix Suns\nSacramento Kings\nDallas Mavericks\nHouston Rockets\nMemphis Grizzlies\nNew Orleans Pelicans\nSan Antonio Spurs",
        "isVisible": true
      },
      "championshipwins.txt": {
        "text": "17\n0\n2\n3\n1\n6\n1\n3\n0\n1\n1\n0\n3\n0\n1\n0\n0\n1\n1\n0\n6\n0\n16\n0\n1\n1\n2\n0\n0\n5",
        "isVisible": true
      },
      "Basketball.java": {
        "text": "/*\n * Analyzes data about basketball teams\n */\npublic class Basketball {\n\n  private String[] teamNames;\n  private int[] championshipWins;\n\n  /*\n   * Constructor to create an Basketball object with the\n   * specified arrays of team names and championship wins\n   */\n  public Basketball(String[] teamNames, int[] championshipWins) {\n    this.teamNames = teamNames;\n    this.championshipWins = championshipWins;\n  }\n\n  /*\n   * Returns true if there are duplicate years in\n   * the championshipWins array, otherwise returns false\n   */\n  public boolean hasDuplicates() {\n    // TO DO #1: Traverse the championshipWins array to determine if there\n    // are duplicate values and return the result.\n\n\n    return false;\n  }\n  \n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:45.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:45.716+00:00\",\"changed\":[\"cloned from \\\"CSA U3L10-L4b CR_2022\\\"\"],\"cloned_from\":\"CSA U3L10-L4b CR_2022\"},{\"changed_at\":\"2022-09-09 19:52:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
