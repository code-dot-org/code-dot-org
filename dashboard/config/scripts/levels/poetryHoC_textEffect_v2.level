<GamelabJr>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "skin": "gamelab",
    "show_debug_watch": "true",
    "block_pools": [
      "GamelabJr",
      "PoemBot"
    ],
    "helper_libraries": [
      "NativeSpriteLab"
    ],
    "use_default_sprites": "true",
    "hide_animation_mode": "true",
    "show_type_hints": true,
    "hide_custom_blocks": true,
    "all_animations_single_frame": "true",
    "use_modal_function_editor": "true",
    "embed": "false",
    "instructions_important": "false",
    "long_instructions": "Find text effect that match the feeling of this poem. \r\n\r\n* Explore the new `text effect` blocks\r\n* Choose **at least two effects** that matches the mood of the poem. \r\n* Click \"Run.\"\r\n\r\n*Extra Challenge:* Use an **event** to make a text effect happen when the mood shifts!",
    "submittable": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "hide_share_and_remix": "true",
    "disable_if_else_editing": "false",
    "include_shared_functions": "false",
    "free_play": "false",
    "start_in_animation_tab": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "validation_enabled": "false",
    "mini_toolbox": "false",
    "hide_pause_button": "false",
    "instructions_icon": "octiSomber",
    "callout_json": "[]",
    "parent_level_id": 29612,
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"You can change the color of your text by clicking on the color block. \\n\\n<xml><block type=\\\"PoemBot_setFontColor\\\"><value name=\\\"FILL\\\"><block type=\\\"colour_picker\\\"><title name=\\\"COLOUR\\\">#333333</title></block></value></block></xml>\\n \\n\\n\\n\\nThink about how different colors feel more happy or sad. Choose colors that match the mood of the poem.\\n\\n![](https://images.code.org/9e334ef513aac006c06548e7eb4c6105-image-1630688009831.53.08 AM.png)\",\"hint_id\":\"hint1\",\"hint_type\":\"general\",\"hint_path\":\"\",\"hint_video\":\"\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/8ce94b7d4ee0c78a311ae3555bd64105/poetryHoC_textEffect.mp3\"}]",
    "validation_code": "var validationInfo = getValidationInfo();\r\n\r\nif (!validationProps.previous) {\r\n  validationProps.previous = {\r\n    textFont: 'Arial',\r\n    textColorFill: 'black',\r\n    textColorStroke: 'rgba(0,0,0,0)',\r\n    numTextEffects: 0,\r\n    numFontChanges: 0,\r\n    numTextColorChanges: 0,\r\n    numTextEffectChanges: 0\r\n  };\r\n}\r\n\r\n// Check for font change & update count\r\nvar newFont = validationInfo.font.font != validationProps.previous.textFont; //'Arial';\r\nif (newFont) { validationProps.previous.numFontChanges++; }\r\n\r\n// Check for text color change & update count\r\nvar newTextColor = validationInfo.font.fill != validationProps.previous.textColorFill ||\r\n    validationInfo.font.stroke != validationProps.previous.textColorStroke;\r\nif (newTextColor) { validationProps.previous.numTextColorChanges++; }\r\n\r\n// Check for text effect change & update count\r\nvar newTextEffect = validationProps.previous.numTextEffects < validationInfo.textEffects.length;\r\nif (newTextEffect) { validationProps.previous.numTextEffectChanges++; }\r\n\r\nvar hasLineEvent = validationInfo.lineEvents.length > 0;\r\n\r\n\r\n// Pass the level if they have at least two of the three effects.\r\nif ((validationProps.previous.numFontChanges>0 && validationProps.previous.numTextColorChanges>0) ||\r\n    (validationProps.previous.numFontChanges>0 && validationProps.previous.numTextEffectChanges>0) ||\r\n    (validationProps.previous.numTextColorChanges>0 && validationProps.previous.numTextEffectChanges>0)) {\r\n  setSuccessFrame();\r\n}\r\n\r\n// Check if an event caused a new effect\r\nif (hasLineEvent && (newFont || newTextColor || newTextEffect) && World.frameCount != 1) {\r\n  validationProps.previous.newFont =\r\n    validationProps.previous.newFont || newFont;\r\n  validationProps.previous.newTextColor =\r\n    validationProps.previous.newTextColor || newTextColor;\r\n  validationProps.previous.newTextEffect =\r\n    validationProps.previous.newTextEffect || newTextEffect;\r\n}\r\n\r\n// Update previous\r\nvalidationProps.previous.numTextEffects = validationInfo.textEffects.length;\r\nvalidationProps.previous.textFont = validationInfo.font.font;\r\nvalidationProps.previous.textColorFill = validationInfo.font.fill;\r\nvalidationProps.previous.textColorStroke = validationInfo.font.stroke;\r\n\r\ndrawProgressBar();\r\nif (World.frameCount == validationInfo.endTime) {\r\n  if (validationInfo.successFrame) {\r\n    if (validationProps.previous.newFont ||\r\n        validationProps.previous.newTextColor ||\r\n        validationProps.previous.newTextEffect) {\r\n      levelFailure(0, 'genericBonusSuccess');\r\n    } else {\r\n      levelFailure(0, 'poemBotSuccessLevel3');\r\n    }\r\n  } else {\r\n    if (validationProps.previous.numFontChanges>0 ||\r\n        validationProps.previous.numTextColorChanges>0 ||\r\n        validationProps.previous.numTextEffectChanges>0) {\r\n      // 1 effect\r\n      levelFailure(3, 'poemBotOneTextEffect');\r\n    } else {\r\n      // 0 effects\r\n      levelFailure(3, 'poemBotNoTextEffects');\r\n    }\r\n  }\r\n}",
    "short_instructions": "Find text effect that match the feeling of this poem.  Choose **at least two effects** that matches the mood of the poem.",
    "preload_asset_list": null,
    "encrypted_examples": [

    ]
  },
  "game_id": 64,
  "published": true,
  "created_at": "2021-09-21T18:23:48.000Z",
  "level_num": "custom",
  "user_id": 1196,
  "audit_log": "[{\"changed_at\":\"2021-09-21T18:23:48.079+00:00\",\"changed\":[\"cloned from \\\"poetryHoC_textEffect\\\"\"],\"cloned_from\":\"poetryHoC_textEffect\"},{\"changed_at\":\"2021-09-21 18:23:51 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"preload_asset_list\"],\"changed_by_id\":1196,\"changed_by_email\":\"amy.woodman@code.org\"},{\"changed_at\":\"2021-09-21 20:28:57 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-21 20:29:14 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-21 20:39:51 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-21 20:43:20 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 14:41:43 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:05:27 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:08:56 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:09:54 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:15:42 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:16:38 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:18:57 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:22:34 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:23:33 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:26:56 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:29:05 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:34:09 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:36:32 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:38:32 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 15:42:56 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 16:04:47 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 16:04:59 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 16:13:52 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 16:14:50 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 16:16:46 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 16:21:32 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 16:25:31 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"validation_code\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 20:51:10 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"},{\"changed_at\":\"2021-09-22 20:58:36 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":13468,\"changed_by_email\":\"gabrielle.hemlick@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" movable="false">
          <next>
            <block type="PoemBot_setPoem" can_disconnect_from_parent="false">
              <title name="POEM">"rumi_2"</title>
              <next>
                <block type="PoemBot_setBackgroundEffect">
                  <title name="EFFECT">"colors"</title>
                  <title name="PALETTE">"sunrise"</title>
                  <next>
                    <block type="PoemBot_setForegroundEffect">
                      <title name="EFFECT">"twinkling"</title>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </next>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <block type="gamelab_setBackground">
          <value name="COLOR">
            <block type="colour_picker">
              <title name="COLOUR">#666666</title>
            </block>
          </value>
        </block>
        <block type="PoemBot_setBackgroundEffect">
          <title name="EFFECT">"colors"</title>
          <title name="PALETTE">"grayscale"</title>
        </block>
        <block type="PoemBot_setForegroundEffect">
          <title name="EFFECT">"rain"</title>
        </block>
        <block type="PoemBot_setFont">
          <title name="FONT">"Tahoma"</title>
        </block>
        <block type="PoemBot_setFontColor">
          <value name="FILL">
            <block type="colour_picker">
              <title name="COLOUR">#000099</title>
            </block>
          </value>
        </block>
        <block type="PoemBot_setTextEffect">
          <title name="EFFECT">"fade"</title>
        </block>
        <block type="PoemBot_whenLineShows">
          <title name="N">2</title>
        </block>
      </xml>
    </toolbox_blocks>
  </blocks>
</GamelabJr>