<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "An event manager is preparing tickets to sell and needs to make sure there are no missing ticket numbers. They have entered the ticket numbers into a file to check.\r\n\r\n##In TicketGenerator.java:\r\n\r\n1. Write the method `missingSmallest()`(#e7e8ea) to use the binary search algorithm to find and return the smallest missing number in `tickets`(#e7e8ea).\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `missingSmallest()`(#e7e8ea) method and print the result.\r\n\r\n::: details [**Show Me How**]\r\nThe binary search algorithm can be implemented using iteration or recursion.\r\n  \r\n**Iteration Method**\r\nwhile low is less than high\r\n  mid = (low + high) / 2\r\n  \r\n  if target equals list[mid]\r\n    low = mid + 1\r\n  else\r\n    high = mid - 1\r\n\r\n**Recursive Method**\r\nint binarySearch(list, target, low, high)\r\n  mid = (low + high) / 2\r\n  \r\n  if low is greater than high\r\n    return low\r\n  \r\n  if target is equal to mid\r\n    return binarySearch(list, mid + 1, high)\r\n  else\r\n    return binarySearch(list, low, mid - 1)\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\n\npublic class MyConsole {\n  public static void main(String[] args) {\n\n    ArrayList<Integer> ticketNumbers = FileReader.getIntData(\"ticketnumbers.txt\");\n\n    // TO DO #2: Call the missingSmallest() method and print the result.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "TicketGenerator.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Manages a list of ticket numbers\n */\npublic final class TicketGenerator {\n\n  /*\n   * Finds and returns the smallest missing value in tickets\n   */\n  public static int missingSmallest(ArrayList<Integer> tickets, int start, int end) {\n    // TO DO #1: Implement the binary search algorithm to find the\n    // smallest missing value in tickets.\n\n    \n    \n  }\n  \n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of words from a file\n   */\n  public static ArrayList<String> getWords(String filename) {\n    createFile(filename);\n\n    ArrayList<String> tempList = new ArrayList<String>();\n\n    while (fileReader.hasNext()) {\n      tempList.add(fileReader.next());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "ticketnumbers.txt": {
        "text": "0\n1\n2\n3\n4\n6\n7\n8\n9\n10",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\nwLZIH8mbSjJVzSIEhQ==\n",
    "encrypted_examples": [

    ],
    "display_name": "Missing Tickets",
    "bubble_choice_description": "An event manager is preparing tickets to sell and needs to make sure there are no missing ticket numbers.",
    "thumbnail_url": "https://images.code.org/21d6ee59eeea20b84c201a273fa67a1d-ticket.png"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-18T19:48:39.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-18T19:48:39.401+00:00\",\"changed\":[\"cloned from \\\"CSA U8L9-L2b_2022\\\"\"],\"cloned_from\":\"CSA U8L9-L2b_2022\"},{\"changed_at\":\"2022-04-18 19:48:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 19:01:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 19:02:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 19:02:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 19:02:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-18 19:07:53 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
