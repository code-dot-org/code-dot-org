<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:34.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "edit_code": true,
    "embed": "false",
    "instructions": "Recreate the \"Chaser Game\" from the last lesson using Design Mode. (Click to see full instructions.)",
    "markdown_instructions": "# Use console.log to Test Overlapping Objects and the Screen\r\n\r\nThere are two goals here:\r\n\r\n1. Practice inserting your own console.log statements.\r\n2. Investigate how the screen captures events (it's different).\r\n\r\n## Do This:\r\n<img src=\"https://images.code.org/4100fcc7062f97ce8440003b3a17cd25-image-1477363054051.png\" style=\"float: right\">\r\n\r\n* **Add `console.log` statements to each of the 3 event handlers** we started you out with.\r\n * Make the text that gets printed *be descriptive* so that you know exactly what is happening when.\r\n\r\n* **Run** the program and try clicking where the diagram (at right) shows.\r\n  * Click on each button\r\n  * Click where the buttons overlap\r\n  * Click on the screen (i.e. the background)\r\n\r\n**Investigate until you can answer these questions:**\r\n1. When you click on a location where two objects are overlapping, which event(s) fire(s)?\r\n2. When you click on an non-overlapping part of some object what gets triggered?\r\n3. When does a \"click\" on the \"screen\" get triggered?\r\n\r\n\r\n<details><summary>Answers: [click here]</summary>\r\n<br><br>\r\n1. When you click on a location where two objects are overlapping, which event(s) fire(s)?\r\n<br>\r\n<li><em> The event-handler for object that is on top gets triggered.  The object that is underneath is essentially blocked from being clicked in the overlapping portion</em></li>\r\n<br><br>\r\n2. When you click on an non-overlapping part of some object what gets triggered?\r\n<li><em>The event-handler for the object gets triggered as you might expect</em></li>\r\n<br><br>\r\n3. When does a \"click\" on the \"screen\" get triggered?\r\n<li><em>Always. Events that occur on the screen cannot be blocked by other objects.  If you set up an event listener for the screen it will capture EVERY event of that type, no matter what other UI elements are on the screen.  This behavior of the screen is done on purpose and is useful for certain kinds of things.</em></li>\r\n\r\n\r\n</details>\r\n\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "true",
    "submittable": "false",
    "hide_view_data_button": "true",
    "slider_speed": "1",
    "droplet_tooltips_disabled": "false",
    "debugger_disabled": "true",
    "lock_zero_param_functions": "false",
    "execute_palette_apis_only": "false",
    "encrypted_examples": "ycSLscXm7m+Cr1w5GAATKTAvGoH3gl4Z5EVTZdkrXoyB1PXN5RpNl+lChTq7\nXnQU\n",
    "instructions_important": "false",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern withCrosshair clip-content\" data-radium=\"true\" style=\"width: 320px; height: 450px; transform: scale(0.625); display: block;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgba(253, 224, 12, 0.431373);\"><button id=\"greenBtn\" style=\"padding: 0px; margin: 0px; height: 140px; width: 95px; font-size: 14px; color: rgb(255, 255, 255); background-color: rgb(26, 188, 156); position: absolute; left: 60px; top: 100px;\">Green Button Behind</button><button id=\"purpleBtn\" style=\"padding: 0px; margin: 0px; height: 95px; width: 145px; font-size: 14px; color: rgb(255, 255, 255); background-color: rgba(67, 26, 188, 0.741176); position: absolute; left: 115px; top: 200px;\">Purple Button in Front</button></div></div>",
    "start_blocks": "onEvent(\"greenBtn\", \"click\", function() {\r\n  \r\n});\r\nonEvent(\"purpleBtn\", \"click\", function() {\r\n  \r\n});\r\nonEvent(\"screen1\", \"click\", function() {\r\n  \r\n});",
    "code_functions": {
      "onEvent": {
        "params": [
          "\"id\"",
          "\"click\"",
          "function(){\n\n}"
        ]
      },
      "setPosition": null,
      "randomNumber_min_max": null,
      "console.log": null
    },
    "palette_category_at_start": "variables",
    "log_conditions": [
      {
        "entries": [
          "console.log"
        ],
        "matchType": "exact",
        "minTimes": 7,
        "message": "The task asked you to add console.log statements to each event handler, and then click on at least 4 different locations to test it out.  We do not see enough messages in the debugger console for this to be true."
      }
    ],
    "show_debug_watch": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>