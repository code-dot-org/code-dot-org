<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**Teacher Feedback:** none\r\n\r\n##Result\r\n\r\n![](https://images.code.org/c3dd9d8f7ff1b4d4f015274da9f0d4d6-image-1666710390543.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "serialized_maze": [
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ]
    ],
    "csa_view_mode": "neighborhood",
    "start_sources": {
      "MyNeighborhood.java": {
        "text": "import org.code.neighborhood.Painter;\n\npublic class MyNeighborhood {\n  public static void main(String[] args) {\n    SquarePainter myPainter = new SquarePainter();\n    myPainter.setPaint(1000); \n    myPainter.alternateLines(\"black\", \"white\", 8);\n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "PainterPlus.java": {
        "text": "import org.code.neighborhood.Painter;\n\n/*\n * Creates a PainterPlus\n * PainterPlus is a subclass of Painter.\n */\npublic class PainterPlus extends Painter {\n  private int l;\n  private int i;\n  private int limit;\n  /*\n   * Constructor to create a PainterPlus object\n   */\n  public PainterPlus() {\n    super();  // Calls the Painter constructor\n  }\n\n  /*\n   * Turns a PainterPlus object to the right\n   * by turning left three times\n   */\n  public void turnRight() {\n    turnLeft();\n    turnLeft();\n    turnLeft();\n  }\n\n  /*\n   * Unit 1 Lesson 9\n   */\n  public void takeAllPaint() {\n    while (isOnBucket()) {\n      takePaint();\n    }\n  }\n\n  /*\n   * Unit 1 Lesson 9\n   */\n  public void paintLine(String color) {\n    while (canMove()) {\n      paint(color);\n      move();\n    }\n    paint(color);\n  }\n  \n  public void paintMissingLine(String color) {\n    while (canMove()) {\n      if(!isOnPaint()) {\n        paint(color);\n      }\n      move();\n    }\n    if(!isOnPaint()) {\n        paint(color);\n      }\n  }\n\n  public void moveOrTakePaint() {\n    while (canMove()) {\n      if (!isOnBucket()) {\n        move();\n      }\n      else {\n        takeAllPaint();\n      }\n    }\n  }\n\n\n  public void moveSouth() {\n    while (canMove(\"south\")) {\n      if (!isFacingSouth()) {\n        turnRight();\n      }\n      else {\n        move();\n      }\n    }\n  }\n  public void printStatus() {\n    //print paint\n    System.out.println(\"Paint: \" + getMyPaint());\n    //print x location\n    System.out.println(\"X Location: \" + getX());\n    //print y location\n    System.out.println(\"Y Location: \" + getY());\n    //print direction\n    System.out.println(\"Direction: \" + getDirection());\n  }\n  public void moveFast() {\n    while(canMove()) {\n      move();\n      //while it can move it moves\n      if (isOnBucket()){\n        takeAllPaint();\n        //then takes bucket if its on it\n      }\n    }\n  }\n  public void paintSquare() {\n    int i = 0;\n    for(i = 0; i <= 2; i++) {\n    paint(\"white\");\n    move();\n    paint(\"white\");\n    move();\n    turnRight();\n    }\n    //for loop for 3 sides of square\n    paint(\"white\");\n    move();\n    paint(\"white\");\n    move();\n    //final side facing forward\n  }\n  public void paintDashes() {\n    while(canMove()) {\n      paint(\"white\");\n      move();\n      paint(\"white\");\n      if(canMove()) {\n      move();\n      }\n      if(canMove()) {\n      move();\n      }\n    }\n  }\n  public void makeTurn() {\n    if(getDirection()==\"west\") {\n      if(canMove(\"south\")) {\n        turnLeft();\n      }\n      else if(canMove(\"north\")){\n        turnRight();\n      }\n    }\n    else if(getDirection()==\"north\") {\n      if(canMove(\"west\")) {\n        turnLeft();\n      }\n      else if(canMove(\"east\")){\n        turnRight();\n      }\n    }\n    else if(getDirection()==\"east\") {\n      if(canMove(\"north\")) {\n        turnLeft();\n      }\n      else if(canMove(\"south\")){\n        turnRight();\n      }\n    }\n    else if(getDirection()==\"south\") {\n      if(canMove(\"east\")) {\n        turnLeft();\n      }\n      else if(canMove(\"west\")){\n        turnRight();\n      }\n    }\n  }\n  public void paintFast() {\n    while(canMove()) {\n      move();\n      //while it can move it moves\n      if (isOnBucket()){\n        takeAllPaint();\n        //then takes bucket if its on it\n      }\n      paint(\"white\");\n    }\n  }\n  public void paintFastAndTurn() {\n    while(canMove()){\n      paintFast();\n      makeTurn();\n    }\n  }\n  public void paintBorder() {\n    for(i = 0; i <= 3; i++) {\n      paintFast();\n      turnLeft();\n    }\n  }\n  public void emptySquare(int length, String color) {\n    if (length > 0) {\n      for(i = 0; i < 4; i++) {\n        for(l = 0; l < length; l++) {\n          paint(color);\n          move();\n        }\n        turnRight();\n      }\n    }\n    else paint(color);\n  }\n  public void moveMiddle(int dist) {\n    if (dist % 2 == 0) limit = dist / 2 -1;\n    else limit = dist / 2;\n    for(i = 0; i < limit; i++) {\n      move();\n    }\n  }\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "SquarePainter.java": {
        "text": "import org.code.neighborhood.*;\n\n/*\n * Creates a SquarePainter\n * SquarePainter is a subclass of Painter.\n */\npublic class SquarePainter extends PainterPlus {\n  private String color = \"\";\n  private int i;\n  private int l;\n  /*\n   * Constructor to create a SquarePainter object\n   */\n  public SquarePainter() {\n    super();  // Calls the PainterPlus constructor\n  }\n  public void alternateLines(String color1, String color2, int length) {\n    for(i = length/2; i > 0; i -= 1){\n      if (i % 2 == 1) color = color1;\n      else color = color2;\n      emptySquare(i * 2 - 1, color);\n      move();\n      turnRight();\n      move();\n      turnLeft();\n    }\n  }\n}",
        "isVisible": true,
        "tabOrder": 3
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-10-25T14:44:59.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-10-25T14:44:59.135+00:00\",\"changed\":[\"cloned from \\\"CSA Asphalt Art Project Example 03_2023\\\"\"],\"cloned_from\":\"CSA Asphalt Art Project Example 03_2023\"},{\"changed_at\":\"2022-10-25 14:45:21 +0000\",\"changed\":[\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 14:46:03 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 14:46:34 +0000\",\"changed\":[\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 15:06:30 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
