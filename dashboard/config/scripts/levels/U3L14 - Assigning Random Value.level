<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-10-22T21:15:41.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "write": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "declareAssign_x": null,
      "randomNumber_min_max": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "console.log": null
    },
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# Other Ways to Assign Values to Variables\r\nPrograms become much more interesting when the values in variables change while the program is running. We can also assign to a variable the value returned by a function. For example:\r\n\r\n![](https://images.code.org/31447c1b90c925bba3ca86ead8d84a7d-image-1445892065474.png)\r\n\r\nBecause the `randomNumber` function *evaluates to a number* it means we can treat it *as though it were a number*. We've used it before by just \"plugging it in\" to some function that needed a number as a parameter like:\r\n![](https://images.code.org/5df0376d562bd75a1899e17c49b00144-image-1445941026356.png)\r\n\r\nBecause the `randomNumber` function generates a new and different number each time you call it, one thing we *could not* do before we had variables was generate a random number, and use that *same number* for two different things in a program. Now we can.\r\n\r\n# Do This:\r\n<img src=\"https://images.code.org/df3d2a8f4c1a3061981667c9f85b0071-image-1445549489133.png\" style=\"float: right; width: 350px\">Write a program that simulates the rolling of two dice and reports their individual values as well as the sum. \r\nThe program should:\r\n* Generate two random numbers between 1 and 6 and store each result in its own variable.\r\n* Display the individual values of the two dice.\r\n* Display the sum of the two dice (see right).\r\n* Every time you run the program the result will be a little different.\r\n\r\nWe have given you starting code that shows what to do for the first die. The *rest of the code is up to you!*  When you're done the output in the app display should look like what's above.\r\n\r\n",
    "start_blocks": "write(\"Rolling dice!\");\r\nvar die1 = randomNumber(1,6);\r\nwrite(\"You rolled a: \"+die1);",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "true",
    "instructions": "Write a program that simulates the rolling of two dice and reports their individual values as well as the sum. (click to see full instructions)",
    "lock_zero_param_functions": "false",
    "execute_palette_apis_only": "false",
    "encrypted_examples": "YBxoDtBqXI72z7KcaN5Ds+sIZK88W0qaAcrhEcHmnD+yqGGot2irVlqPzxX+\nIp+w\n"
  }
}]]></config>
  <blocks/>
</Applab>