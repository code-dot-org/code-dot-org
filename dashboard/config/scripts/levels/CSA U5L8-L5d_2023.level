<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Sharpening an image enhances the edges and fine details of an image by increasing the contrast between adjacent pixels. The result is an image that appears clearer and more defined, with a greater level of detail and clarity.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SharpImage</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sharpen()</code> method to apply a sharpen filter to each <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object. The <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sharpen()</code> method should:\r\n\r\n1. Traverse the 2D array of <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> objects except the border pixels (start at row 1 column 1).\r\n\r\n2. Calculate the difference between the current <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object and its top-left neighbor in red, green, and blue color values.\r\n\r\n3. Calculate the average difference by adding the three color differences and dividing by <code style=\"background-color: #ececec; color: black; font-weight: bold;\">3</code>.\r\n\r\n4. Adjust the red, green, and blue values of the current <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> by adding the average difference to the current red, green, and blue values.\r\n\r\n5. If the new red, green, and blue values are greater than <code style=\"background-color: #ececec; color: black; font-weight: bold;\">255</code>, set the value to <code style=\"background-color: #ececec; color: black; font-weight: bold;\">255</code>.\r\n\r\n6. Set the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object's red, green, and blue values to the new red, green, and blue values.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">TheaterRunner</code> class,\r\n\r\n1. Instantiate an <code style=\"background-color: #ececec; color: black; font-weight: bold;\">SharpImage</code> object with an image in the Asset Manager, then draw the image in the scene without any filters. You can also upload and use your own image.\r\n\r\n2. Add a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">pause()</code> after drawing the image.\r\n\r\n3. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sharpen()</code> method on your image, then draw the image with the filter in the scene.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with getting and setting color values for a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Pixel</code> object.\r\n</div>\r\n\r\n## üéØ Goal\r\n\r\n![](https://images.code.org/cb27ec3fa0533adc7cbe1a067fcdfd78-image-1682902990012.gif)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Sharpen Image",
    "bubble_choice_description": "Sharpening an image enhances the edges and fine details of an image by increasing the contrast between adjacent pixels. The result is an image that appears clearer and more defined, with a greater level of detail and clarity.",
    "starter_assets": {
      "track.jpg": "a8f9f9a3-181b-487d-8ac8-382d9253cb7f.jpg",
      "starwars.jpg": "bf7a9d28-f597-4c85-8332-409c7d25d8dd.jpg",
      "speakers.jpg": "0aae8143-34a9-422d-acbc-afaf261956b8.jpg",
      "soccer.jpg": "c6805a25-ca56-459f-b8ff-8f613a92a9ab.jpg",
      "paintbrushes.jpg": "1b2d38a2-323b-4e26-be03-ed8fdadea44a.jpg",
      "nature.jpg": "445f74e4-11cd-431b-9e94-3068d55a0b6a.jpg",
      "motivation.jpg": "a8d07752-cb98-4927-a54c-5e1212ff31ba.jpg",
      "laptop.jpg": "842436af-4bce-4162-a43c-4d7fcc6a2029.jpg",
      "guitar.jpg": "ef9a4017-671d-41ca-ae48-0042fa95e5a5.jpg",
      "games.jpg": "c4547032-6beb-43b5-9076-49da3bb9790b.jpg",
      "football.jpg": "e8aebde5-b789-4895-b84c-01375f361201.jpg",
      "fashion.jpg": "8dda5f00-5bbd-4340-868d-38d73bd316a9.jpg",
      "electricguitars.jpg": "194acc31-1fd3-41f2-99e7-89bff3116a57.jpg",
      "donut.jpg": "f2b5df2f-086d-4526-9e8e-3583bcbb21c0.jpg",
      "dog.jpg": "8b90dad5-7a48-44db-9916-92a93185184a.jpg",
      "cellphone.jpg": "d81e20b1-a348-4ae0-ac77-b722c24aacbf.jpg",
      "basketball.jpg": "c6f402a5-7971-4c8f-b614-728a08053ef1.jpg",
      "baseball.jpg": "2bdcda44-fa02-4151-990f-e8926aee24c1.jpg",
      "astronaut.jpg": "46e45064-51e6-4f1b-a802-e0ee681b521a.jpg"
    },
    "encrypted_validation": "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\no54O0XWFWyqbHkDffaElyUnSX2CFxm74IOKAL9nM+PRGITm9jsmEb17844B0\nX7YT0AmrzuBmnDvUFVOVfuXiCx0nzvdz1VJgS7Ub36KlpG+lPegyPEsY7r2b\nkwaibq7kJWFixXlX6Y2Cxi7y5aKCfcKqdzTbrZEeavlba0M5SJu49wC/dL4M\n24INSQF3xDHN8xRxCHfa6KdfpjbAR6H533yuqaYlTDfKONzlbWXX1zJLLZiO\nenHs+ipKQKFf92XhRfYxnmYgrencWkeujksiU0sz6fRVHEdLZv7FYZGtYRoO\nlNVO3MWJV5uIRz382VkZSdsH3t3vnW5FZplhvv0eg+zWlXg3tOE5Z4cHc1mV\nGsYtUjq2U2w3M5cj7T7iyQwo0kvFmzSeqhYFp5bec/SFH0r9eZrv5fbsiyBV\nnoRlwzJPbjdZvXHz9WGc59EAEBmoD9Bk80xn/axX7imQYU3QPlFSavmC5umH\ng6sRhjwTdwSt1ngPPv4S7miOWxMIKAFYhg3c5QZ1XcFSYBPVzzf5ATP6TSyi\nugtrltxrDCcPzwld3HlgoLmkzveAoSH+LNoQo1OJpzqznxd/7BXHPTqXPV3l\nCYp3pwwIcsjGcbr/uNNMRaW3zv6NXSlWljJmqc/2MfGtzFrmzBgMvegPnAU0\nPwgJND3qwR83/1QNMWRgs8ZML/k8SyUAd6TDreGgyDQHZp4cP4WRqx+l1r+6\ncRTl+gakIUYG40UQ08luSrQTpN26/6ibXCjgpAiOM0mKAhr2SdSd3Xskl7bX\nWVrIXyUuBK5hw730BZfEudPSYSPIzxCwZdHg+VaoOmrm2DU3fu4CbdEL3Ce+\nEBEXK9N8Hh1cZJVlZc9l5vw/wr9Ukjte6cxSIGrsgMazN1pBK6JwVUy7oOnL\naq92ITfgRrP6XgO2NsHaGy0jDlwKrT/jYpdeKvhi725vDM40OiHiLYZT4Mye\nbBqgRZR+7LDsublgUlXnOrYSVSAZvHac1izALs3B3nTT5L4hby/YqqegryGj\nrYYcWeMjsflyMbBvf1tFYaynpdSDaL+GfH3VMNW5VWyxXQDnqm57rVxEkePS\n5OFSiY7+GtsIH+2ILo+oh6E0tyK8IXJ9QVMdr+1jP1KQgKsaE2pNune0D179\nhg4sfccM6wRfGXtkAEN5a/XVLip2fD47e60XNMfb2T3ZAPT0KMDCBe4+6STD\n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\nm8eFBcpJXvkgW7Jt1a0rMmM=\n",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    // Creates a Scene object\n    Scene images = new Scene();\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Instantiate a SharpImage object, and draw the image in the scene with no\n     * filter. Then call the sharpen() method and draw the image in the scene again.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n\n    // Plays the scene\n    Theater.playScenes(images);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ImagePlus.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image that can be modified with filters and effects\n */\npublic class ImagePlus extends Image {\n\n  private Pixel[][] pixels;    // The 2D array of pixels\n\n  /*\n   * Sets the superclass filename to the specified filename\n   * and calls the getPixelsFromImage() method to initialize\n   * the 2D array of Pixel objects that make up the image\n   */\n  public ImagePlus(String filename) {\n    super(filename);   // Calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixelsFromImage();\n  }\n\n  /*\n   * Returns the 2D array of pixels\n   */\n  public Pixel[][] getImagePixels() {\n    return pixels;\n  }\n\n  /*\n   * Returns the pixels in the image as a 2D array of Pixel objects\n   */\n  public Pixel[][] getPixelsFromImage() {\n    Pixel[][] tempPixels = new Pixel[getHeight()][getWidth()];\n    \n    for (int row = 0; row < tempPixels.length; row++) {\n      for (int col = 0; col < tempPixels[0].length; col++) {\n        tempPixels[row][col] = getPixel(col, row);\n      }\n    }\n\n    return tempPixels;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "SharpImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a sharpened image\n */\npublic class SharpImage extends ImagePlus {\n\n  /*\n   * Calls the superclass constructor to initialize pixels\n   */\n  public SharpImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Sharpens the image by calculating the difference between the color values of the current\n   * and neighboring Pixel objects and adjust the color values to emphasize the edges\n   */\n  public void sharpen() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Get the pixels from the image, and traverse the 2D array of Pixel objects.\n     * Calculate the difference between the current pixel and its top-left\n     * neighbor in red, green, and blue values. Then find the average difference by\n     * dividing these differences by 3. Adjust the color values of the current pixel\n     * by adding the average difference to the current color values. Make sure the\n     * new colors are less than or equal to 255! Then set the color values for the\n     * current pixel to the new color values.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\nb0Xy7Uazj6XzKxVLRS5AkjDr\n",
    "encrypted_examples": [

    ],
    "thumbnail_url": "https://images.code.org/1bf621f15982e77d09869c1b28ddd13c-optionD.gif"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2023-03-28T00:09:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2023-03-28T00:09:04.165+00:00\",\"changed\":[\"cloned from \\\"CSA U5L8-L5c_2023\\\"\"],\"cloned_from\":\"CSA U5L8-L5c_2023\"},{\"changed_at\":\"2023-03-28 00:09:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-22 00:25:04 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:31:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:31:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:31:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:32:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:37:33 +0000\",\"changed\":[\"long_instructions\",\"csa_view_mode\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 22:59:23 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:19:50 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:29:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:29:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:32:32 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:41:16 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:41:19 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:41:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 23:41:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 01:03:21 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
