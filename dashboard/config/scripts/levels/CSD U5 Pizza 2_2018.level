<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2018-04-30T18:05:38.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "on": null,
      "off": null,
      "toggle": null,
      "blink": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.play": null,
      "accelerometer.getOrientation": null,
      "accelerometer.start": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null
    },
    "edit_code": true,
    "embed": "true",
    "instructions_important": "false",
    "submittable": "false",
    "start_blocks": "var numRecords = 0;\r\nvar currentScroll = 5;\r\nvar toppings = [];\r\nvar chartSize = 0;\r\n\r\nsetScreen(\"Chart\");\r\ntextLabel(\"chartTitle\", \"\");\r\nsetPosition(\"chartTitle\", 0,5,320,30);\r\nsetProperty(\"chartTitle\", \"font-size\", 20);\r\nsetProperty(\"chartTitle\", \"text-align\", \"center\");\r\nbutton(\"toList\", \"Back to List\");\r\nsetPosition(\"toList\", 100, 40, 120, 30);\r\nonEvent(\"toList\", \"click\", function() { setScreen(\"Data\")});\r\ncreateCanvas(\"toppingsChart\", 160, 650);\r\nsetPosition(\"toppingsChart\", 160, 80);\r\n\r\nsetScreen(\"Data\");\r\ntextLabel(\"titleM\", \"Raw Data\");\r\nsetPosition(\"titleM\", 5,5,150,50);\r\nsetProperty(\"titleM\", \"font-size\", 18);\r\nsetStyle(\"titleM\", \"font-weight\", \"bold\");\r\nsetStyle(\"titlem\", \"line-height\", 50);\r\n\r\ntextLabel(\"titleC\", \"Clean Data\");\r\nsetPosition(\"titleC\", 200,5,150,50);\r\nsetProperty(\"titleC\", \"font-size\", 18);\r\nsetStyle(\"titleC\", \"font-weight\", \"bold\");\r\nsetStyle(\"titleC\", \"line-height\", 50);\r\n\r\n\r\nreadRecords(\"toppings\", {}, function(records) {\r\n  numRecords = records.length;\r\n  toppings = records;\r\n  for (var i =0; i < numRecords; i++) {\r\n    textLabel(\"messy\" + i, toppings[i].messy);\r\n    textLabel(\"clean\" + i, toppings[i].clean);\r\n    textInput(\"editClean\" + i, toppings[i].clean);\r\n    button(\"saveClean\" + i, \"Save\");\r\n    button(\"editCleanBut\" + i, \"Edit\");\r\n    hideElement(\"editClean\" + i);\r\n    hideElement(\"saveClean\" + i);\r\n    setProperty(\"messy\" + i, \"font-size\", 14);\r\n    setProperty(\"clean\" + i, \"font-size\", 14);\r\n    setPosition(\"messy\" + i, 5, 30 * i + 70, 200, 30);\r\n    setPosition(\"clean\" + i, 200, 30 * i + 70, 200, 30);\r\n    setPosition(\"editClean\" + i, 194, 30 * i + 62, 150, 30);\r\n    setPosition(\"saveClean\" + i, 130, 30 * i + 63, 60, 28);\r\n    setPosition(\"editCleanBut\" + i, 130, 30 * i + 63, 60, 28);\r\n    setProperty(\"saveClean\" + i, \"background-color\", \"purple\");\r\n    setProperty(\"editCleanBut\" + i, \"background-color\", \"purple\");\r\n    onEvent(\"clean\" + i, \"mousedown\", function(event) {\r\n        hideElement(event.srcElementId);\r\n        hideElement(\"editCleanBut\" + event.srcElementId.substring(5));\r\n        showElement(\"editC\" + event.srcElementId.substring(1));\r\n        showElement(\"saveC\" + event.srcElementId.substring(1));\r\n      });\r\n    onEvent(\"editCleanBut\" + i, \"mousedown\", function(event) {\r\n        hideElement(event.srcElementId);\r\n        hideElement(\"clean\" + event.srcElementId.substring(12));\r\n        showElement(\"editClean\" + event.srcElementId.substring(12));\r\n        showElement(\"saveClean\" + event.srcElementId.substring(12));\r\n      });\r\n    onEvent(\"editClean\" + i, \"keypress\", function(event) {\r\n      if (event.key == \"\\r\") {\r\n        hideElement(event.targetId);\r\n        hideElement(\"saveC\" + event.targetId.substring(5));\r\n        showElement(\"c\" + event.targetId.substring(5));\r\n        showElement(\"editCleanBut\" + event.targetId.substring(9));\r\n        setText(\"c\" + event.targetId.substring(5) ,getText(event.targetId) );\r\n        toppings[event.targetId.substring(9)].clean = getText(event.targetId);\r\n        updateTopping(event.targetId.substring(9));\r\n      }\r\n    });\r\n    onEvent(\"saveClean\" + i, \"click\", function(event){\r\n      hideElement(event.targetId);\r\n      hideElement(\"editC\" + event.targetId.substring(5));\r\n      showElement(\"editCleanBut\" + event.targetId.substring(9));\r\n      showElement(\"c\" + event.targetId.substring(5));\r\n      setText(\"c\" + event.targetId.substring(5) ,getText(\"editC\" + event.targetId.substring(5)) );\r\n      toppings[event.targetId.substring(9)].clean = getText(\"editC\" + event.targetId.substring(5));\r\n      updateTopping(event.targetId.substring(9));\r\n    });\r\n  }\r\n\r\nbutton(\"goCChart\", \"Show Chart\");\r\nsetPosition(\"goCChart\", 200, 30, 110, 30);\r\nonEvent(\"goCChart\", \"click\", countToppings);\r\nbutton(\"goMChart\", \"Show Chart\");\r\nsetPosition(\"goMChart\", 5, 30, 110, 30);\r\nonEvent(\"goMChart\", \"click\", countOldToppings);\r\n});\r\n\r\nfunction updateTopping(id) {\r\n  updateRecord(\"toppings\", {id: toppings[id].id, clean: toppings[id].clean, messy:  toppings[id].messy}, function(record, success) {\r\n        });\r\n}\r\n\r\nfunction countToppings() {\r\n  setScreen(\"Chart\");\r\n  setText(\"chartTitle\", \"Cleaned Data\");\r\n  clearChart();\r\n  var toppingsCount = [];\r\n  var currentTopping = \"\";\r\n  for (var i=0; i<toppings.length; i++) {\r\n    currentTopping = toppings[i].clean;\r\n    if (toppingsCount[currentTopping]) {\r\n      toppingsCount[currentTopping]++;\r\n    } else if (currentTopping.length > 0) {\r\n      toppingsCount[currentTopping] = 1;\r\n    }\r\n  }\r\n  setActiveCanvas(\"toppingsChart\");\r\n\r\n  var yPos = 5;\r\n  chartSize = 0;\r\n  for (var j in toppingsCount) {\r\n    textLabel(\"chart\" + chartSize, j);\r\n    setPosition(\"chart\" + chartSize, 5, yPos + 80);\r\n    rect(0, yPos, toppingsCount[j] * 10, 10);\r\n    yPos += 20;\r\n    chartSize++;\r\n  }\r\n}\r\n\r\nfunction countOldToppings() {\r\n  setText(\"chartTitle\", \"Raw Data\");\r\n  setScreen(\"Chart\");\r\n  clearChart();\r\n  var toppingsCount = [];\r\n  var currentTopping = \"\";\r\n  for (var i=0; i<toppings.length; i++) {\r\n    currentTopping = toppings[i].messy;\r\n    if (toppingsCount[currentTopping]) {\r\n      toppingsCount[currentTopping]++;\r\n    } else if (currentTopping.length > 0) {\r\n      toppingsCount[currentTopping] = 1;\r\n    }\r\n  }\r\n  setActiveCanvas(\"toppingsChart\");\r\n\r\n  var yPos = 5;\r\n  chartSize = 0;\r\n  for (var j in toppingsCount) {\r\n    textLabel(\"chart\" + chartSize, j);\r\n    setPosition(\"chart\" + chartSize, 5, yPos + 80);\r\n    setFillColor(\"black\");\r\n    rect(0, yPos, toppingsCount[j] * 10, 10);\r\n    yPos += 20;\r\n    chartSize++;\r\n  }\r\n}\r\n\r\nfunction clearChart() {\r\n  clearCanvas(\"toppingsChart\");\r\n  for (var i = 0; i < chartSize; i++) {\r\n    deleteElement(\"chart\" + i);\r\n  }\r\n}\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern withCrosshair clip-content\" data-radium=\"true\" style=\"width: 320px; height: 450px; display: block; transform: scale(0.85625);\">\r\n  <div class=\"screen\" tabindex=\"1\" id=\"Data\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; overflow: scroll;\"></div>\r\n  <div class=\"screen\" tabindex=\"1\" id=\"Chart\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; overflow: scroll;\">\r\n  </div></div>",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "false",
    "data_tables": "{ \"toppings\": [\r\n  {\r\n    \"id\": 1,\r\n    \"clean\": \"Pepperoni\",\r\n    \"messy\": \"Pepperoni\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"clean\": \"Cheese\",\r\n    \"messy\": \"Cheese\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"clean\": \"Bbq chicken\",\r\n    \"messy\": \"Bbq chicken\"\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"clean\": \"Sausage\",\r\n    \"messy\": \"Sausage\"\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"clean\": \"Mushrooms\",\r\n    \"messy\": \"Mushrooms\"\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"clean\": \"I will be absent :(\",\r\n    \"messy\": \"I will be absent :(\"\r\n  },\r\n  {\r\n    \"id\": 7,\r\n    \"clean\": \"Bbq chicken\",\r\n    \"messy\": \"Bbq chicken\"\r\n  },\r\n  {\r\n    \"id\": 8,\r\n    \"clean\": \"Pineapple\",\r\n    \"messy\": \"Pineapple\"\r\n  },\r\n  {\r\n    \"id\": 9,\r\n    \"clean\": \"Olives\",\r\n    \"messy\": \"Olives\"\r\n  },\r\n  {\r\n    \"id\": 10,\r\n    \"clean\": \"Anything is good.\",\r\n    \"messy\": \"Anything is good.\"\r\n  },\r\n  {\r\n    \"id\": 11,\r\n    \"clean\": \"Just cheese\",\r\n    \"messy\": \"Just cheese\"\r\n  },\r\n  {\r\n    \"id\": 12,\r\n    \"clean\": \"Cheese\",\r\n    \"messy\": \"Cheese\"\r\n  },\r\n  {\r\n    \"id\": 13,\r\n    \"clean\": \"Sausage\",\r\n    \"messy\": \"Sausage\"\r\n  },\r\n  {\r\n    \"id\": 14,\r\n    \"clean\": \"Barbecue chicken\",\r\n    \"messy\": \"Barbecue chicken\"\r\n  },\r\n  {\r\n    \"id\": 15,\r\n    \"clean\": \"Pinapple\",\r\n    \"messy\": \"Pinapple\"\r\n  },\r\n  {\r\n    \"id\": 16,\r\n    \"clean\": \"Peppers\",\r\n    \"messy\": \"Peppers\"\r\n  },\r\n  {\r\n    \"id\": 17,\r\n    \"clean\": \"Green peppers\",\r\n    \"messy\": \"Green peppers\"\r\n  },\r\n  {\r\n    \"id\": 18,\r\n    \"clean\": \"Pepperonni\",\r\n    \"messy\": \"Pepperonni\"\r\n  },\r\n  {\r\n    \"id\": 19,\r\n    \"clean\": \"Mushrooms\",\r\n    \"messy\": \"Mushrooms\"\r\n  },\r\n  {\r\n    \"id\": 20,\r\n    \"clean\": \"I don't like pizza.\",\r\n    \"messy\": \"I don't like pizza.\"\r\n  },\r\n  {\r\n    \"id\": 21,\r\n    \"clean\": \"Pepperoni\",\r\n    \"messy\": \"Pepperoni\"\r\n  },\r\n  {\r\n    \"id\": 22,\r\n    \"clean\": \"Cheese\",\r\n    \"messy\": \"Cheese\"\r\n  },\r\n  {\r\n    \"id\": 23,\r\n    \"clean\": \"Bbq chicken\",\r\n    \"messy\": \"Bbq chicken\"\r\n  },\r\n  {\r\n    \"id\": 24,\r\n    \"clean\": \"Pizza party!!!!\",\r\n    \"messy\": \"Pizza party!!!!\"\r\n  },\r\n  {\r\n    \"id\": 25,\r\n    \"clean\": \"Pepperonni\",\r\n    \"messy\": \"Pepperonni\"\r\n  },\r\n  {\r\n    \"id\": 26,\r\n    \"clean\": \"Four\",\r\n    \"messy\": \"Four\"\r\n  },\r\n  {\r\n    \"id\": 27,\r\n    \"clean\": \"No meat, please!\",\r\n    \"messy\": \"No meat, please!\"\r\n  },\r\n  {\r\n    \"id\": 28,\r\n    \"clean\": \"Pepperoni\",\r\n    \"messy\": \"Pepperoni\"\r\n  },\r\n  {\r\n    \"id\": 29,\r\n    \"clean\": \"Pepperoni\",\r\n    \"messy\": \"Pepperoni\"\r\n  },\r\n  {\r\n    \"id\": 30,\r\n    \"clean\": \"Cheese\",\r\n    \"messy\": \"Cheese\"\r\n  },\r\n  {\r\n    \"id\": 31,\r\n    \"clean\": \"Bbq chicken\",\r\n    \"messy\": \"Bbq chicken\"\r\n  },\r\n  {\r\n    \"id\": 32,\r\n    \"clean\": \"Sausage\",\r\n    \"messy\": \"Sausage\"\r\n  },\r\n  {\r\n    \"id\": 33,\r\n    \"clean\": \"Mushrooms\",\r\n    \"messy\": \"Mushrooms\"\r\n  },\r\n  {\r\n    \"id\": 34,\r\n    \"clean\": \"I will be absent :(\",\r\n    \"messy\": \"I will be absent :(\"\r\n  },\r\n  {\r\n    \"id\": 35,\r\n    \"clean\": \"Bbq\",\r\n    \"messy\": \"Bbq\"\r\n  },\r\n  {\r\n    \"id\": 36,\r\n    \"clean\": \"Pineapple\",\r\n    \"messy\": \"Pineapple\"\r\n  },\r\n  {\r\n    \"id\": 37,\r\n    \"clean\": \"cheese\",\r\n    \"messy\": \"cheese\"\r\n  },\r\n  {\r\n    \"id\": 38,\r\n    \"clean\": \"Anything is good.\",\r\n    \"messy\": \"Anything is good.\"\r\n  },\r\n  {\r\n    \"id\": 39,\r\n    \"clean\": \"Just cheese please\",\r\n    \"messy\": \"Just cheese please\"\r\n  },\r\n  {\r\n    \"id\": 40,\r\n    \"clean\": \"Cheese\",\r\n    \"messy\": \"Cheese\"\r\n  },\r\n  {\r\n    \"id\": 41,\r\n    \"clean\": \"Sausage\",\r\n    \"messy\": \"Sausage\"\r\n  },\r\n  {\r\n    \"id\": 42,\r\n    \"clean\": \"Barbecue chicken\",\r\n    \"messy\": \"Barbecue chicken\"\r\n  },\r\n  {\r\n    \"id\": 43,\r\n    \"clean\": \"Pinapple\",\r\n    \"messy\": \"Pinapple\"\r\n  },\r\n  {\r\n    \"id\": 44,\r\n    \"clean\": \"I'm allergic to mushrooms\",\r\n    \"messy\": \"I'm allergic to mushrooms\"\r\n  },\r\n  {\r\n    \"id\": 45,\r\n    \"clean\": \"Green peppers\",\r\n    \"messy\": \"Green peppers\"\r\n  },\r\n  {\r\n    \"id\": 46,\r\n    \"clean\": \"Pepperonni\",\r\n    \"messy\": \"Pepperonni\"\r\n  },\r\n  {\r\n    \"id\": 47,\r\n    \"clean\": \"Mushrooms are awful\",\r\n    \"messy\": \"Mushrooms are awful\"\r\n  },\r\n  {\r\n    \"id\": 48,\r\n    \"clean\": \"I don't like pizza.\",\r\n    \"messy\": \"I don't like pizza.\"\r\n  },\r\n  {\r\n    \"id\": 49,\r\n    \"clean\": \"Pepperoni\",\r\n    \"messy\": \"Pepperoni\"\r\n  },\r\n  {\r\n    \"id\": 50,\r\n    \"clean\": \"Cheese\",\r\n    \"messy\": \"Cheese\"\r\n  },\r\n  {\r\n    \"id\": 51,\r\n    \"clean\": \"chicken\",\r\n    \"messy\": \"chicken\"\r\n  },\r\n  {\r\n    \"id\": 52,\r\n    \"clean\": \"All the toppings!\",\r\n    \"messy\": \"All the toppings!\"\r\n  },\r\n  {\r\n    \"id\": 53,\r\n    \"clean\": \"Pepperonni\",\r\n    \"messy\": \"Pepperonni\"\r\n  },\r\n  {\r\n    \"id\": 54,\r\n    \"clean\": \"Anything vegetarian\",\r\n    \"messy\": \"Anything vegetarian\"\r\n  },\r\n  {\r\n    \"id\": 55,\r\n    \"clean\": \"Pepperoni is great!\",\r\n    \"messy\": \"Pepperoni is great!\"\r\n  }\r\n]\r\n}",
    "markdown_instructions": "# Pizza Party\r\n\r\nWhen people work with data, they know to leave off answers that don't make sense, and that some answers, such as \"peppers\", \"pepppers\" and \"green peppers\", actually meant the same thing. Computers don't know how to do this, so we have to clean the data before the computer is able to use it.\r\n\r\nThis version of the app has a second column for data to be cleaned.\r\n\r\n## Do this\r\n* Click \"Run\" to see the new list of answers to be cleaned.\r\n* Click on each answer that needs to be cleaned and correct it so that the computer will chart it properly. (You may want to delete some answers entirely.)\r\n* When you are finished, click \"Show Chart\" to see the new chart of cleaned answers.",
    "parent_level_id": 9687,
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-08-10 21:28:19 +0000\",\"changed\":[\"notes\",\"code_functions\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 21:30:15 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 21:31:39 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"start_html\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 21:33:43 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"start_blocks\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 21:48:22 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"start_blocks\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 21:49:09 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"start_html\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 21:55:39 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"start_blocks\",\"start_html\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:20:13 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"start_blocks\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:22:59 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"data_tables\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:29:39 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\",\"start_blocks\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:35:56 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:41:39 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:45:47 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:48:57 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:57:41 +0000\",\"changed\":[\"code_functions\",\"embed\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:58:29 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 22:58:59 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 23:00:00 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 23:00:23 +0000\",\"changed\":[\"code_functions\",\"embed\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 23:02:20 +0000\",\"changed\":[\"code_functions\",\"embed\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-10 23:04:43 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-14 22:05:31 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-15 17:15:10 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-08-15 17:17:43 +0000\",\"changed\":[\"code_functions\",\"data_tables\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-09-27 17:27:50 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-09-27 17:37:20 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-09-27 17:46:26 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-09-27 17:46:58 +0000\",\"changed\":[\"code_functions\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2017-09-27 17:53:00 +0000\",\"changed\":[\"code_functions\",\"start_blocks\",\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>