<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**The local music store needs a program to keep track of the various instruments they sell.**\r\n\r\n✅ **TO DO:** Write the `Instrument`(#e7e8ea) class and instantiate an `Instrument`(#e7e8ea) object.\r\n\r\n1. In the `Instrument`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the type of instrument (guitar, piano, trumpet, etc.)\r\n   \r\n   * the price of an instrument\r\n   \r\n   * whether or not an instrument has strings\r\n\r\n2. In `StoreRunner.java`(#e7e8ea):\r\n\r\n   **a.** Instantiate an `Instrument`(#e7e8ea) object\r\n   \r\n   **b.** Print the instance variables for the `Instrument`(#e7e8ea) object to the console using `ClassInfo.getAttributes(nameOfObject)`(#e7e8ea)\r\n\r\n::: details [**🔦 What is `ClassInfo.getAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `ClassInfo.getAttributes()`(#e7e8ea) is a hidden support method that returns the instance variables in a class as a `String`(#e7e8ea). Call the method by passing an object as its argument, such as:\r\n\r\n```\r\nDog fido = new Dog();\r\nSystem.out.println(ClassInfo.getAttributes(fido));\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/ea65d0f5c3a362a0fd716b60344e22ed-image-1667422134224.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Music Store",
    "bubble_choice_description": "The local music store needs a program to keep track of the various isntruments they sell. Write the `Instrument` class with instance variables for the specified attributes.",
    "encrypted_validation": "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\n",
    "encrypted_exemplar_sources": "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\nkYQY\n",
    "thumbnail_url": "https://images.code.org/6b92f9d600b15ca89a76f5c655e57274-instruments.png",
    "start_sources": {
      "StoreRunner.java": {
        "text": "public class StoreRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate an Instrument object, then print the instance variables for\n     * the Instrument object to the console using ClassInfo.getAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Instrument.java": {
        "text": "/*\n * Represents an instrument at a music store\n */\npublic class Instrument {\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ✅ Declare instance variables for the type of instrument, the price of an\n   * instrument, and whether or not an instrument has strings.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n\n  public static String findField(ArrayList<String> classFields, String typeToFind) {\n    String result = \"MISSING\";\n    \n    for (int index = 0; index < classFields.size(); index++) {\n      String current = classFields.get(index);\n      \n      if (current.indexOf(typeToFind) > 0) {\n        result = ClassInfo.removeClassName(current, \"Instrument\");\n        result = ClassInfo.removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n\n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    }\n\n    return result;\n  }\n\n  public static String getFieldType(String currentField) {\n    currentField = currentField.trim();\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n\n  public static String getConstructors(Object testObject) {\n    Class objectClass = testObject.getClass();\n    String className = objectClass.getSimpleName();\n    Constructor[] objectConstructors = objectClass.getDeclaredConstructors();\n    \n    ArrayList<String> constructorsList = convertToList(Arrays.toString(objectConstructors));\n\n    String heading = \"\\n------------------------------\\n\";\n    String result = className + \" Constructors \" + heading;\n\n    for (String current : constructorsList) {\n      result += current + \"\\n\";\n    }\n    \n    return result;\n  }\n\n  public static String getValue(List<String> output, String lineToFind) {\n    String outputText = \"\";\n    String valueResult = \"\";\n\n    for (int index = 0; index < output.size(); index++) {\n      String current = output.get(index);\n      \n      if (current.indexOf(lineToFind) >= 0) {\n        outputText = current;\n        valueResult = outputText.substring(lineToFind.length());\n      }\n    }\n    \n    return valueResult.trim();\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-11-01T17:28:48.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:28:47.992+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L2_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L2_2023\"},{\"changed_at\":\"2022-11-01 17:28:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:11 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:03:04 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:05:41 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:13:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:18:20 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:26:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:26:32 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:26:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:20 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:31:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:33:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:05:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:05:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:06:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:06:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:09:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:10:18 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:12:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:12:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:19:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:22:34 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:24:34 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:26:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:29:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:29:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:30:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:31:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:32:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:32:43 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:33:01 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:33:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:05:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:15:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:15:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:17:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:18:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:20:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:20:27 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:20:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:23:05 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:11 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:33 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:24 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:52:20 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:52:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:09 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:41:03 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:48:55 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:51:27 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:30:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:29 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:20:29 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:20:37 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:19:32 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:19:37 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:20:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:20:16 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
