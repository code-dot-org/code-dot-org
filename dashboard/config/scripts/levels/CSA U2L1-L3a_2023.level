<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**The local music store needs a program to keep track of the various instruments they sell.**\r\n\r\n✅ **TO DO #1:** In the `Instrument`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the type of instrument (guitar, piano, trumpet, etc.)\r\n   \r\n   * the price of an instrument\r\n   \r\n   * whether or not an instrument has strings\r\n\r\n✅ **TO DO #2:** In `StoreRunner.java`(#e7e8ea), instantiate an `Instrument`(#e7e8ea) object and print the instance variables for the `Instrument`(#e7e8ea) object by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Music Store",
    "bubble_choice_description": "The local music store needs a program to keep track of the various isntruments they sell. Write the `Instrument` class with instance variables for the specified attributes.",
    "encrypted_exemplar_sources": "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\nynUt7IvWV7Ev0MDct39M5heTSg==\n",
    "thumbnail_url": "https://images.code.org/6b92f9d600b15ca89a76f5c655e57274-instruments.png",
    "start_sources": {
      "StoreRunner.java": {
        "text": "public class StoreRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate an Instrument object, then print the instance variables for\n     * the Instrument object to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Instrument.java": {
        "text": "/*\n * Represents an instrument at a music store\n */\npublic class Instrument {\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ✅ Declare instance variables for the type of instrument, the price of an\n   * instrument, and whether or not an instrument has strings.\n   * -----------------------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:28:48.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:28:47.992+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L2_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L2_2023\"},{\"changed_at\":\"2022-11-01 17:28:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:11 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:03:04 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:05:41 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:13:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:18:20 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:26:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:26:32 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:26:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:20 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:31:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:33:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:05:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:05:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:06:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:06:58 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:09:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:10:18 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:12:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:12:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:19:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:22:34 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:24:34 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:26:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:29:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:29:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:30:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:31:56 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:32:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:32:43 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:33:01 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 18:33:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:05:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:15:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:15:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:17:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:18:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:20:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:20:27 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:20:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:23:05 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:11 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:33 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:36:24 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:52:20 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:52:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:09 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:41:03 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:48:55 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:51:27 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:30:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:29 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:20:29 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:20:37 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:19:32 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:06 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:19:37 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:20:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:20:16 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:14:58 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:33:26 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:35:04 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:39:11 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:46:03 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
