<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**A company is planning a new social media app, and the software engineer has created a `Profile`(#e7e8ea) class to represent a user's profile on the app.**\r\n\r\n✅ **TO DO:** Write a no-argument constructor the `Profile`(#e7e8ea) class and instantiate a `Profile`(#e7e8ea) object.\r\n\r\n1. In the `Profile`(#e7e8ea) class, write a no-argument constructor to assign default values to the instance variables:\r\n\r\n   **(a)** Assign a default name to the instance variable `name`(#e7e8ea), such as `\"new user\"`(#e7e8ea)\r\n\r\n   **(b)** Assign a default value to the instance variable `yearJoined`(#e7e8ea), such as `2022`(#e7e8ea)\r\n\r\n2. In `ProfileRunner.java`(#e7e8ea):\r\n\r\n   **(a)** Instantiate a `Profile`(#e7e8ea) object\r\n   \r\n   **(b)** Print the constructor for the `Profile`(#e7e8ea) object to the console using `ClassInfo.getConstructors(nameOfObject)`(#e7e8ea)\r\n   \r\n   **(c)** Print the values assigned to the instance variables for the `Profile`(#e7e8ea) object to the console by calling the `printProfileInfo()`(#e7e8ea) method\r\n   \r\n\r\n💡 **TIP:** Check out **Help & Tips** tab ⬆️ for help with writing a no-argument constructor and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/e3723732108dcdd762ab5503fc5d5029-image-1667834776843.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/no-argument-constructors",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "The Profile Class",
    "bubble_choice_description": "A company is planning a new social media app, and the software engineer has created a `Profile` class to represent a user's profile on the app.",
    "thumbnail_url": "https://images.code.org/147c48047ed61b5411478bc480e21792-social-media.png",
    "encrypted_validation": "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\nhMHpuuLVXgDfUE6locNymzv7yYAe0Q==\n",
    "start_sources": {
      "ProfileRunner.java": {
        "text": "public class ProfileRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Profile object. Print the constructor to the console using\n     * ClassInfo.getConstructors(nameOfObject), and print the values assigned to the\n     * instance variables using the Profile class printProfileInfo() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Profile.java": {
        "text": "/*\n * Represents a user's profile on a social media app\n */\npublic class Profile {\n\n  private String name;      // The name of a user\n  private int yearJoined;   // The year a user joined the app\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ✅ Write a no-argument constructor to assign default values to the\n   * name and yearJoined instance variables.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n\n\n  \n\n  /*\n   * Prints the name of the user and the year\n   * the user joined the social media app\n   */\n  public void printProfileInfo() {\n    System.out.println(\"Name: \" + name);\n    System.out.println(\"Year Joined: \" + yearJoined);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n\n  public static String getConstructors(Object testObject) {\n    Class objectClass = testObject.getClass();\n    String className = objectClass.getSimpleName();\n    Constructor[] objectConstructors = objectClass.getDeclaredConstructors();\n    \n    ArrayList<String> constructorsList = convertToList(Arrays.toString(objectConstructors));\n\n    String heading = \"\\n------------------------------\\n\";\n    String result = className + \" Constructors \" + heading;\n\n    for (String current : constructorsList) {\n      result += current + \"\\n\";\n    }\n    \n    return result;\n  }\n\n  public static String getValue(List<String> output, String lineToFind) {\n    String outputText = \"\";\n    String valueResult = \"\";\n\n    for (int index = 0; index < output.size(); index++) {\n      String current = output.get(index);\n      \n      if (current.indexOf(lineToFind) >= 0) {\n        outputText = current;\n        valueResult = outputText.substring(lineToFind.length());\n      }\n    }\n    \n    return valueResult.trim();\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\n"
  },
  "game_id": 68,
  "created_at": "2022-11-03T19:20:55.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-03T19:20:55.918+00:00\",\"changed\":[\"cloned from \\\"CSA U2L2-L3a_2023\\\"\"],\"cloned_from\":\"CSA U2L2-L3a_2023\"},{\"changed_at\":\"2022-11-03 19:20:57 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:18:16 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:24:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:24:34 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:24:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:26:18 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:27:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:27:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
