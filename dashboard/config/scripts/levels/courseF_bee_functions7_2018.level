<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2018-02-08T19:48:47.000Z",
  "level_num": "custom",
  "user_id": 6,
  "properties": {
    "skin": "bee",
    "instructions": "Rebuild your function from the last puzzle to solve this maze.",
    "step_mode": "1",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "start_direction": "3",
    "nectar_goal": "4",
    "honey_goal": "5",
    "flower_type": "redWithNectar",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,1,1,1,1,0],[0,0,0,1,0,0,1,0],[0,0,0,1,0,0,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "initial_dirt": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,7,0,0,7,0],[0,0,0,-7,0,0,-7,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "final_dirt": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "ideal": "21",
    "never_autoplay_video": "true",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "true",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "fast_get_nectar_animation": "true",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"You can look back at the last puzzle to see your function.\",\"hint_id\":\"courseF_bee_functions7_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/904791e2bbbdf63e60b1d1bcaa950367/courseF_bee_functions7.mp3\"},{\"hint_class\":\"content\",\"hint_markdown\":\"Try drawing a path through this maze with your finger. Where will the bee have to make a decision?\",\"hint_id\":\"courseF_bee_functions7_b\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/8902c12c6736ad0db4121c9a9fb0afeb/courseF_bee_functions7.mp3\"}]",
    "instructions_important": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "step_speed": "1",
    "serialized_maze": "[[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":0},{\"tileType\":1},{\"tileType\":2},{\"tileType\":0}],[{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}],[{\"tileType\":1},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":1}],[{\"tileType\":1},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":1},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":0},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":1},{\"tileType\":1},{\"tileType\":0},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":1},{\"tileType\":1},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":1},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0}]]",
    "markdown_instructions": "Rebuild your function from the last puzzle to solve this maze.\r\n\r\nTurn left at the honeycomb and right at the flowers.  \r\n**Note:** Some corners are unmarked!",
    "shape_shift": "false",
    "disable_procedure_autopopulate": "false",
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-05-31 19:05:57 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-06-12 17:53:35 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-06-12 17:53:47 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-06-12 17:54:10 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 22:35:54 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"authored_hints\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 22:48:46 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"start_direction\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 22:49:25 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 22:54:42 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 22:55:18 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 22:56:51 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 22:59:15 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"nectar_goal\",\"honey_goal\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 23:16:21 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 23:21:42 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"markdown_instructions\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 23:22:45 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"instructions_important\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-28 22:49:28 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"never_autoplay_video\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-08-25 16:17:40 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"}]"
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
  </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Actions">
          <block type="maze_move">
            <title name="DIR">moveForward</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="maze_nectar"/>
          <block type="maze_honey"/>
        </category>
        <category name="Loops">
          <block type="maze_untilBlocked"/>
          <block type="controls_repeat_ext" inline="true">
            <value name="TIMES">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
          </block>
          <block type="bee_whileNectarAmount">
            <title name="ARG1">nectarRemaining</title>
            <title name="OP">&gt;</title>
            <title name="ARG2">0</title>
          </block>
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </category>
        <category name="Conditionals">
          <block type="maze_if">
            <title name="DIR">isPathRight</title>
          </block>
          <block type="maze_ifElse">
            <title name="DIR">isPathForward</title>
          </block>
          <block type="bee_ifFlower">
            <title name="LOC">atFlower</title>
          </block>
          <block type="bee_ifElseFlower">
            <title name="LOC">atFlower</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE">
          <block type="procedures_callnoreturn">
            <mutation name="do something"/>
          </block>
        </category>
        <category name="Math">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
          <block type="math_arithmetic" inline="true">
            <title name="OP">ADD</title>
            <value name="A">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
            <value name="B">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
          </block>
        </category>
      </xml>
    </toolbox_blocks>
    <recommended_blocks>
      <xml/>
    </recommended_blocks>
    <solution_blocks>
      <xml>
        <block type="procedures_defnoreturn" editable="false">
          <mutation/>
          <title name="NAME">get nectar make honey</title>
          <statement name="STACK">
            <block type="bee_ifElseFlower">
              <title name="LOC">atFlower</title>
              <statement name="DO">
                <block type="maze_nectar">
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                    </block>
                  </next>
                </block>
              </statement>
              <statement name="ELSE">
                <block type="bee_ifFlower">
                  <title name="LOC">atHoneycomb</title>
                  <statement name="DO">
                    <block type="maze_honey">
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </statement>
        </block>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="maze_untilBlocked">
              <statement name="DO">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="procedures_callnoreturn">
                      <mutation name="get nectar make honey"/>
                    </block>
                  </next>
                </block>
              </statement>
              <next>
                <block type="maze_turn">
                  <title name="DIR">turnRight</title>
                  <next>
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn">
                              <mutation name="get nectar make honey"/>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="procedures_callnoreturn">
                                      <mutation name="get nectar make honey"/>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </next>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>