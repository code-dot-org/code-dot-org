<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-31T21:45:11.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "applab",
    "embed": "false",
    "markdown_instructions": "# setText on More than Just Labels\r\n\r\nYou can use `setText()` to change the text of labels, obviously, but it can also be used to change to change the text on _any_ element that has text, including buttons, text input, and text areas.\r\n\r\n# Do This\r\n\r\nThe starter program has an event handler already set up for the red button, can you write event handlers for the other three buttons so they behave in the same way?",
    "instructions_important": "false",
    "start_blocks": "// Change the text of all buttons to \"Red\" when the red button is clicked\r\nonEvent(\"redButton\", \"click\", function(event) {\r\n  setText(\"redButton\", \"Red\")\r\n  setText(\"greenButton\", \"Red\")\r\n  setText(\"blueButton\", \"Red\")\r\n  setText(\"purpleButton\", \"Red\")\r\n});\r\n\r\n// Change the text of all buttons to \"Green\" when the green button is clicked\r\n\r\n// Change the text of all buttons to \"Blue\" when the blue button is clicked\r\n\r\n// Change the text of all buttons to \"Purple\" when the purple button is clicked\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "code_functions": {
      "onEvent": {
        "params": [
          "\"id\"",
          "\"click\"",
          "function(){\n\n}"
        ]
      },
      "setText": null,
      "setScreen": null,
      "console.log": null,
      "comment": null
    },
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern withCrosshair clip-content\" data-radium=\"true\" style=\"width: 320px; height: 450px; transform: scale(1.00625); display: block;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0;\"><button id=\"redButton\" style=\"padding: 0px; margin: 0px; height: 145px; width: 145px; font-size: 14px; color: rgb(255, 255, 255); background-color: red; position: absolute; left: 10px; top: 65px; background-image: url(&quot;https://studio.code.org/blockly/media/1x1.gif&quot;); background-size: contain; background-position: 50% 50%; background-repeat: no-repeat;\" class=\"\" data-canonical-image-url=\"\">Click Me</button><button id=\"greenButton\" style=\"padding: 0px; margin: 0px; height: 145px; width: 145px; font-size: 14px; color: rgb(255, 255, 255); background-color: green; position: absolute; left: 165px; top: 65px;\" class=\"\">Click Me</button><button id=\"blueButton\" style=\"padding: 0px; margin: 0px; height: 145px; width: 145px; font-size: 14px; color: rgb(255, 255, 255); background-color: blue; position: absolute; left: 10px; top: 220px;\" class=\"\">Click Me</button><button id=\"purpleButton\" style=\"padding: 0px; margin: 0px; height: 145px; width: 145px; font-size: 14px; color: rgb(255, 255, 255); background-color: purple; position: absolute; left: 165px; top: 220px;\" class=\"\">Click Me</button></div></div>",
    "fail_on_lint_errors": "false",
    "makerlab_enabled": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>