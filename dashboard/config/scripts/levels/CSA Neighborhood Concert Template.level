<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyConcert.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\n\npublic class MyConcert {\n  public static void main(String[] args) throws FileNotFoundException {\n\n    Stage myStage = Theater.stage;\n    Scanner input = new Scanner(System.in);\n\n    System.out.println(\"Welcome to The Theater!\");\n    System.out.print(\"Enter the name of your neighborhood image: \");\n    String neighborhood = input.next();\n\n    System.out.print(\"Enter the name of your personal image: \");\n    String myPicture = input.next();\n    \n    NeighborhoodConcert myConcert = new NeighborhoodConcert(neighborhood, myPicture);\n    \n    myConcert.welcome();\n\n\n\n    myConcert.playConcert();\n  }\n}",
        "isVisible": true
      },
      "NeighborhoodConcert.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class NeighborhoodConcert {\n  private Stage myStage = Theater.stage;\t\t// where images and drawings are displayed\n  private Image neighborhood;\t\t\t\t\t// an image of your neighborhood\n  private Image myPicture;\t\t\t\t\t\t// an image of you or something that represents you\n\n  public NeighborhoodConcert(String neighborhood, String myPicture) throws FileNotFoundException {\n    this.neighborhood = new Image(neighborhood);\n    this.myPicture = new Image(myPicture);\n  }\n\n  public void playConcert() throws FileNotFoundException {\n    // Scene 1\n    welcome();\n\n    // Scene 2\n\tmyStage.pause(1.5);\n    introSelf();\n    \n    // Scene 3\n\tmyStage.pause(1.5);\n    showCommunity();\n    \n    // Scene 4\n\tmyStage.pause(1.5);\n    showAnimals();\n    \n    // Scene 5\n\tmyStage.pause(1.5);\n    showDaytime();\n    \n    // Scene 6\n    myStage.pause(1.5);\n    showSleeping();\n    \n    // Scene 7\n\tmyStage.pause(1.5);\n    showLake();\n    \n    // Scene 8\n\tmyStage.pause(1.5);\n    showSky();\n    \n    // Scene 9\n    myStage.pause(1.5);\n    showTime();\n\n    // Scene 10\n    myStage.pause(1.5);\n    showHelp();\n\n    myStage.play();\n  }\n\n  // SCENE 1\n  public void welcome() throws FileNotFoundException {\n    // TO DO: Display an image of your neighborhood.\n\n    \n    // TO DO: Write a welcome message.\n\n\n    int[] notes = {75, 74, 77, 80};\n\n    myStage.playNote(Instrument.PIANO, notes[0], 1);\n    myStage.pause(0.5);\n\n\tmyStage.playNote(Instrument.PIANO, notes[0], 0.3);\n    myStage.playNote(Instrument.PIANO, notes[1], 0.3);\n    myStage.playNote(Instrument.PIANO, notes[0], 1);\n    myStage.pause(0.5);\n\n    myStage.playNote(Instrument.PIANO, notes[0], 0.3);\n    myStage.playNote(Instrument.PIANO, notes[1], 0.3);\n    myStage.playNote(Instrument.PIANO, notes[0], 1);\n    myStage.playNote(Instrument.PIANO, notes[2], 0.3);\n    myStage.playNote(Instrument.PIANO, notes[2], 0.3);\n    myStage.playNote(Instrument.PIANO, notes[3], 0.3);\n    myStage.playNote(Instrument.PIANO, notes[3], 0.6);\n    myStage.pause(0.5);\n  }\n\n  // SCENE 2\n  public void introSelf() throws FileNotFoundException {\n    // TO DO: Display the image of your neighborhood.\n\n\n    // TO DO: Display a picture of yourself (or something that represents you).\n\n\n    // TO DO: Write a message introducing yourself.\n\n\n    // TO DO: Discover the song by playing the notes in the right order.\n    int[] partA = {60, 67, 69, 67, 65, 64, 62};\n    int[] partB = {60, 67, 69, 65, 64, 62, 60};\n\n    \n  }\n\n  // SCENE 3 PART A\n  public void drawSquares() {\n    // TO DO: Create an array of colors.\n\n\n    // TO DO: Draw rectangles.\n\n    \n  }\n\n  // SCENE 3 PART B\n  public void showCommunity() throws FileNotFoundException {\n    // TO DO: Write a message about people in your neighborhood.\n\n\n    String[] people = {\"person1.png\", \"person2.png\", \"person3.png\", \"person4.png\", \"person5.png\",\n                       \"person6.png\", \"person7.png\", \"person8.png\", \"person9.png\", \"person10.png\"};\n\n    // TO DO: Play a sound effect the number of times specified.\n\n    \n  }\n\n  // SCENE 4\n  public void showAnimals() throws FileNotFoundException {\n    myStage.drawImage(\"park.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    // TO DO: Write a message about the animals in your neighborhood.\n\n\n    // TO DO: Create an array of Animal objects.\n\n\n    // TO DO: Display each animal on the park image and play their sounds.\n\n    \n  }\n\n  // SCENE 5 PART A\n  public void introDaytime() throws FileNotFoundException {\n    myStage.drawImage(neighborhood, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    myStage.drawText(\"Most people are at\", 20, 40, \"black\", \"Arial\", 20, 0);\n    myStage.drawText(\"work during the day.\", 20, 70, \"black\", \"Arial\", 20, 0);\n\n    // TO DO: Create an array of notes.\n\n\n    // TO DO: Play the array of notes.\n\n    \n  }\n\n  // SCENE 5 PART B\n  public void showDaytime() throws FileNotFoundException {\n    String[] workingPeople = {\"workingPerson1.png\", \"workingPerson2.png\", \"workingPerson3.png\", \"workingPerson4.png\"};\n\n    // TO DO: Refactor the loop as an enhanced for loop to display the people working.\n\tint xPos = 20;\n    int yPos = 100;\n\n    for (int i = 0; i < workingPeople.length; i++) {\n      myStage.drawImage(workingPeople[i], xPos, yPos, 150, 120, 0);\n\n      xPos += 80;\n      yPos += 50;\n\n      myStage.pause(1);\n    }\n\n    // TO DO: Refactor the loop as an enhanced for loop to display growing sun.\n    int[] notes = {60, 75, 63, 78};\n    int width = 100;\n    int height = 100;\n    int index = 0;\n\n    while (index < notes.length) {\n      xPos = (myStage.getWidth() / 2) - (width / 2);\n      yPos = (myStage.getHeight() / 2) - (height / 2);\n      \n      myStage.drawImage(\"sun.png\", xPos, yPos, width, height, 0);\n      myStage.playNote(Instrument.PIANO, notes[index], 0.5);\n\n      width += 50;\n      height += 50;\n      index++;\n\n      myStage.pause(1);\n    }\n  }\n\n  // SCENE 6\n  public void showSleeping() throws FileNotFoundException {\n    myStage.drawImage(\"sleeping.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    myStage.drawText(\"...and then sleep\", 20, 40, \"black\", \"Arial\", 20, 0);\n    myStage.drawText(\"at night\", 20, 70, \"black\", \"Arial\", 20, 0);\n\n    // TO DO: Create an array of samples from a sound.\n\n\n    // TO DO: Play the array of samples.\n\n\n    // TO DO: Decrease the volume and play the samples again.\n\n\n    // TO DO: Increase the volume and play the samples again.\n\n\n  }\n\n  // SCENE 7\n  public void showLake() throws FileNotFoundException {\n    myStage.drawImage(\"lake.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    myStage.drawText(\"Then there is the lake\", 20, 40, \"black\", \"Arial\", 20, 0);\n    myStage.drawText(\"which is full of fish\", 20, 70, \"black\", \"Arial\", 20, 0);\n\n    // TO DO: Create an array of samples from a sound.\n\n\n    // TO DO: Play the array of samples.\n\n\n    String[] fish = {\"fish1.png\", \"fish2.png\", \"fish3.png\", \"fish4.png\"};\n\n    // TO DO: Display the fish in the lake.\n\n\n    // TO DO: Apply the replaceDuplicates() effect on the sound and play again.\n\n    \n  }\n\n  // SCENE 8\n  public void showSky() throws FileNotFoundException {\n    myStage.drawImage(\"sky.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    myStage.drawText(\"The sky is always\", 20, 40, \"black\", \"Arial\", 20, 0);\n    myStage.drawText(\"full of birds.\", 20, 70, \"black\", \"Arial\", 20, 0);\n\n    // TO DO: Create an array of samples from a sound.\n\n\n    // TO DO: Play the array of samples.\n\n\n    String[] birds = {\"bird1.png\", \"bird2.png\", \"bird3.png\", \"bird4.png\"};\n\n    // TO DO: Display the birds in the sky.\n\n\n    // TO DO: Apply the find() effect on the sound and play again.\n\n    \n  }\n\n  // SCENE 9\n  public void showTime() throws FileNotFoundException {\n    myStage.drawImage(\"park.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    myStage.drawText(\"Sometimes time moves slowly\", 20, 40, \"black\", \"Arial\", 20, 0);\n    myStage.drawText(\"in The Neighborhood.\", 20, 70, \"black\", \"Arial\", 20, 0);\n\n    // TO DO: Create an array  of samples from a sound.\n\n\n    // TO DO: Play the array of samples.\n    \n\n    String[] turtles = {\"turtle1.png\", \"turtle2.png\", \"turtle3.png\", \"turtle4.png\"};\n    \n    // TO DO: Display turtles spinning and growing.\n\n\n    // TO DO: Apply the shiftSound() effect on the sound and play again.\n\n    \n  }\n\n  // SCENE 10\n  public void showHelp() throws FileNotFoundException {\n    myStage.drawImage(neighborhood, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n\n    myStage.drawText(\"If you need to know anything else\", 20, 40, \"black\", \"Arial\", 20, 0);\n    myStage.drawText(\"you can always ask someone\", 20, 70, \"black\", \"Arial\", 20, 0);\n\n    // TO DO: Create an array of samples from a sound.\n\n\n    // TO DO: Play the array of samples.\n\n\n    String[] people = {\"person1.png\", \"person2.png\", \"person3.png\", \"person4.png\"};\n\n    int xPos = 50;\n    for (int i = 0; i < people.length; i++) {\n      myStage.drawImage(people[i], xPos, 200, 120, 150, 0);\n      xPos += 150;\n    }\n\n    myStage.pause(1);\n\tmyStage.drawImage(neighborhood, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n    \n    // TO DO: Apply the reverseSound() effect on the sound and play again.\n\n    \n\n\txPos = 300;\n    for (int i = people.length - 1; i > 0; i--) {\n      myStage.drawImage(people[i], xPos, 200, 120, 150, 0);\n      xPos -= 150;\n    }\n  }\n}",
        "isVisible": true
      },
      "Animal.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Animal {\n\n  private Image animalImage;\n  private String soundFile;\n\n  public Animal(String imageFile, String soundFile) throws FileNotFoundException {\n    this.animalImage = new Image(imageFile);\n    this.soundFile = soundFile;\n  }\n  \n  public Image getImage() {\n    return animalImage;\n  }\n\n  public String getSound() {\n    return soundFile;\n  }\n  \n  public void speak() throws FileNotFoundException {\n    System.out.println(\"I am an animal!\");\n    Theater.stage.playSound(soundFile);\n  }\n}",
        "isVisible": false
      },
      "Chicken.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Chicken extends Animal {\n\n  public Chicken(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void speak() throws FileNotFoundException {\n    System.out.println(\"I am a chicken!\");\n    Theater.stage.playSound(super.getSound());\n  }\n}",
        "isVisible": false
      },
      "Sheep.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Sheep extends Animal {\n\n  public Sheep(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void speak() throws FileNotFoundException {\n    System.out.println(\"I am a sheep!\");\n    Theater.stage.playSound(super.getSound());\n  }\n}",
        "isVisible": false
      },
      "Tiger.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Tiger extends Animal {\n\n  public Tiger(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void speak() throws FileNotFoundException {\n    System.out.println(\"I am a tiger!\");\n    Theater.stage.playSound(super.getSound());\n  }\n}",
        "isVisible": false
      },
      "Wolf.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Wolf extends Animal {\n\n  public Wolf(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void speak() throws FileNotFoundException {\n    System.out.println(\"I am a wolf!\");\n    Theater.stage.playSound(super.getSound());\n  }\n}",
        "isVisible": false
      },
      "Zebra.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Zebra extends Animal {\n\n  public Zebra(String imageFile, String soundFile) throws FileNotFoundException {\n    super(imageFile, soundFile);\n  }\n\n  public void speak() throws FileNotFoundException {\n    System.out.println(\"I am a zebra!\");\n    Theater.stage.playSound(super.getSound());\n  }\n}",
        "isVisible": false
      },
      "SoundEffects.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic final class SoundEffects {\n\n  // TO DO: Create constants for volume.\n\n\n  public static final int SAMPLE_RATE = 44100;\n\n  // Gets the length of a sound in seconds.\n  public static int getSoundLength(double[] samples) {\n    int soundLength = samples.length / SAMPLE_RATE;\n    return soundLength;\n  }\n\n  // Decreases the volume of a sound.\n  public static void decreaseVolume(double[] samples) {\n    for (int i = 0; i < samples.length; i++) {\n      samples[i] *= 0.5;\n    }\n  }\n\n  // Increases the volume of a sound.\n  public static void increaseVolume(double[] samples) {\n    for (int i = 0; i < samples.length; i++) {\n      samples[i] *= 2;\n    }\n\n    // TO DO: Use if statements to make sure the volume is\n    // not greater than MAX_VOLUME or less than MIN_VOLUME.\n\n\n  }\n\n  // Replaces and counts duplicate samples with 0.\n  public static void replaceDuplicates(double[] samples) {\n\n\n    System.out.println(\"Duplicates replaced: \");\n  }\n\n  // Creates a new array containing the samples that are\n  // greater than 0 from the original array.\n  public static double[] find(double[] samples) {\n    double[] newSound = new double[1];\n    \n\n\n    System.out.println(\"Number of original samples: \");\n    System.out.println(\"Number of samples greater than 0: \");\n\n    return newSound;\n  }\n\n  // Shift the samples in the sound to the left by one place\n  public static double[] shiftSound(double[] samples) {\n    double[] newSound = new double[1];\n\n    \n\n    return newSound;\n  }\n\n  // Creates a new array containing the samples from\n  // the original array in reverse.\n  public static double[] reverseSound(double[] samples) {\n    double[] reversed = new double[1];\n\n    \n\n    return reversed;\n  }\n}",
        "isVisible": true
      }
    },
    "parent_level_id": 29149
  },
  "game_id": 68,
  "created_at": "2021-07-21T13:35:32.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2021-07-21T13:35:32.525+00:00\",\"changed\":[\"cloned from \\\"CSA U3L2 Template\\\"\"],\"cloned_from\":\"CSA U3L2 Template\"},{\"changed_at\":\"2021-07-21 13:35:43 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 13:44:31 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 14:03:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 14:34:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 14:56:20 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 15:06:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 16:52:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 17:26:02 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 18:04:59 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 19:44:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 19:47:15 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 19:48:02 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 19:50:01 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 20:46:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 20:55:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 20:56:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-21 21:25:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 13:36:37 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 13:59:10 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 14:39:31 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 16:05:25 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 16:38:30 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 16:53:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 17:52:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 17:53:57 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 18:03:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 19:30:41 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 20:06:03 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 21:11:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-22 21:26:04 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-23 12:37:02 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-23 13:57:29 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-23 14:48:49 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-23 14:52:25 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-23 15:54:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-23 15:56:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-23 16:04:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-29 12:19:10 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-29 12:28:20 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-07-29 12:42:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-03 00:42:38 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-03 00:44:54 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"}]"
}]]></config>
</Javalab>
