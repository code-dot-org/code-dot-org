<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:36.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Write the function maxVal and then use it within the console.log statement to calculate the maximum of two values.  (Click to see full instructions)",
    "markdown_instructions": "# Writing Functions that Return Values\r\n\r\nNow you are going to write your own function that returns a value, `maxVal`. This function should return the maximum of two values provided as input. The code for `minVal` is provided so that you can **replicate the pattern used in this function**.\r\n\r\n**Pattern for Functions that Return Values**\r\n* Use parameters to provide input.\r\n* Declare a variable that will be used as output, possibly initializing its value.\r\n* Update the value in your output variable throughout your program.\r\n* Return your output variable on the last line of your function.\r\n\r\nYou may actually recognize many similarities between how we wrote functions that process arrays and functions that return values. **These patterns aren't rules of programming, but they help make your code easy to read and understand**.\r\n\r\n# Do This:\r\n\r\n* **Starter code** has been provided which stubs out `maxVal` and generates two random values. `minVal` is still provided **so that you can replicate the pattern used**.\r\n* **Write `maxVal`**, replicating the pattern used to write `minVal`.\r\n* **Use `maxVal` within the `console.log` statement as if it were a number** to generate the output similar to the one shown below.\r\n\r\n![](https://images.code.org/5941ceeb27f0ad2d59819c9395d0d89a-image-1447947829448.gif)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_blocks": "// Add a call to minVal to the console.log command below\r\nvar rand1 = randomNumber(1,100);\r\nvar rand2 = randomNumber(1,100);    \r\nconsole.log(\"The maximum of \" + rand1 + \" and \" + rand2 + \" is \");\r\n\r\nfunction maxVal(num1, num2){\r\n  \r\n}\r\n\r\nfunction minVal(num1, num2){\r\n  var min;\r\n  if(num1 < num2){\r\n    min = num1;\r\n  }\r\n  else{\r\n    min = num2;\r\n  }\r\n  return min;\r\n}",
    "encrypted_examples": "g9ofYdgZnod5ET4eSrUOkzf78VUSMj93v/HfgEXMD6gfEiPVpVppV64cKi7h\nRWAE\n",
    "contained_level_names": null
  },
  "published": true
}]]></config>
  <blocks/>
</Applab>