<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "## Finding Patterns\r\n\r\nComplete the <a href=\"https://docs.google.com/document/d/1OJIjB4GPp5eqri8qIIceuUGUYl8bzEYXbH3qXIpcg9I/edit?usp=sharing\" target=\"_blank\"><strong>Finding Patterns</strong></a> activity guide to identify the patterns and relationships you notice in this dataset.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "DataRunner.java": {
        "text": "public class DataRunner {\n  public static void main(String[] args) {\n\n    String[] firstTextFiles = {\"state.txt\", \"total.txt\", \"values1.txt\", \"values2.txt\", \"values3.txt\"};\n    String[] secondTextFiles = {\"state.txt\", \"values4.txt\", \"values5.txt\", \"schools.txt\", \"ap.txt\"};\n\n    DataManager firstDataset = new DataManager(firstTextFiles);\n    DataManager secondDataset = new DataManager(secondTextFiles);\n    \n    System.out.println(firstDataset.showDataset());\n    System.out.println(secondDataset.showDataset());\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class FileReader {\n\n  public static String[] toStringArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    String[] data = new String[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = currentValue;\n    }\n\n    return data;\n  }\n\n  public static int[] toIntArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    int[] data = new int[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Integer.parseInt(currentValue);\n    }\n\n    return data;\n  }\n\n  public static double[] toDoubleArray(String filename) {\n    ArrayList<String> temp = readDataFromFile(filename);\n    double[] data = new double[temp.size()];\n\n    for (int index = 0; index < data.length; index++) {\n      String currentValue = temp.get(index);\n      data[index] = Double.parseDouble(currentValue);\n    }\n\n    return data;\n  }\n\n  private static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  private static ArrayList<String> readDataFromFile(String filename) {\n    File dataFile = new File(filename);\n    Scanner reader = createScanner(dataFile);\n    ArrayList<String> temp = new ArrayList<String>();\n\n    while (reader.hasNextLine()) {\n      String currentLine = reader.nextLine().trim();\n      temp.add(currentLine);\n    }\n\n    reader.close();\n    return temp;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 1
      },
      "DataManager.java": {
        "text": "/*\n * Reads and displays data from text files\n */\npublic class DataManager {\n\n  private String[] textFiles;    // The 1D array of text files\n  private Data[] dataset;        // The 1D array of Data objects\n\n  /*\n   * Sets textFiles to the specified text files and initializes\n   * dataset to store Data objects for each text file\n   */\n  public DataManager(String[] textFiles) {\n    this.textFiles = textFiles;\n    dataset = new Data[textFiles.length];\n  }\n\n  /*\n   * Creates the datasets and returns the dataset values\n   */\n  public String showDataset() {\n    createData();\n    return getDatasetValues();\n  }\n\n  /*\n   * Instantiates each Data object in the 1D array dataset\n   * using each text file from the 1D array textfiles\n   */\n  public void createData() {\n    for (int index = 0; index < dataset.length; index++) {\n      dataset[index] = new Data(textFiles[index]);\n    }\n  }\n\n  /*\n   * Returns a String containing the values from each Data object\n   */\n  public String getDatasetValues() {\n    String result = \"\";\n\n    // Gets the length of the first Data object's 1D array of values\n    int valuesLength = dataset[0].getNumValues();\n\n    // Outer loop repeats from the first value to the last value of the first Data object's 1D array of values\n    for (int index = 0; index < valuesLength; index++) {\n\n      // Inner loop goes through each Data object to get the corresponding value from each 1D array of values\n      for (Data values : dataset) {\n        \n        // String.format() formats a String using format specifiers. In \"%-40s\", the \"%\" indicates the start of the format specifier,\n        // the \"-\" means the String is left-justified, \"40\" indicates the width of the field, and \"s\" indicates a String\n        result += String.format(\"%-40s\", values.getValue(index));\n      }\n\n      // Adds a new line character after getting a row of data\n      result += \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "Data.java": {
        "text": "/*\n * Manages data from a text file\n */\npublic class Data {\n\n  private String filename;    // The name of a text file\n  private String[] values;    // The 1D array containing the values from a text file\n\n  /*\n   * Sets filename to the specified filename and initializes\n   * values to store the values from the file\n   */\n  public Data(String filename) {\n    this.filename = filename;\n    values = FileReader.toStringArray(filename);\n  }\n\n  /*\n   * Returns the 1D array of values\n   */\n  public String[] getValues() {\n    return values;\n  }\n\n  /*\n   * Returns a value at a specified index from values\n   */\n  public String getValue(int index) {\n    return values[index];\n  }\n\n  /*\n   * Returns the number of elements in values\n   */ \n  public int getNumValues() {\n    return values.length;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 3
      },
      "state.txt": {
        "text": "\nSTATE\n------\nAlaska\nAlabama\nArkansas\nArizona\nCalifornia\nColorado\nConnecticut\nDistrict of Columbia\nDelaware\nFlorida\nGeorgia\nHawaii\nIowa\nIdaho\nIllinois\nIndiana\nKansas\nKentucky\nLouisiana\nMassachusetts\nMaryland\nMaine\nMichigan\nMinnesota\nMissouri\nMississippi\nMontana\nNorth Carolina\nNorth Dakota\nNebraska\nNew Hampshire\nNew Jersey\nNew Mexico\nNevada\nNew York\nOhio\nOklahoma\nOregon\nPennsylvania\nRhode Island\nSouth Carolina\nSouth Dakota\nTennessee\nTexas\nUtah\nVirginia\nVermont\nWashington\nWisconsin\nWest Virginia\nWyoming",
        "isVisible": true,
        "tabOrder": 4
      },
      "total.txt": {
        "text": "TOTAL\nAP CS EXAMS\n------\n117\n2257\n1246\n1522\n29047\n2460\n3145\n348\n475\n12811\n5882\n666\n583\n446\n7692\n2386\n213\n1627\n850\n5226\n6327\n333\n3871\n1547\n1034\n327\n52\n4525\n84\n365\n501\n7658\n221\n2215\n11969\n3504\n627\n788\n5301\n697\n1423\n35\n1536\n12394\n567\n5719\n111\n3524\n1884\n331\n88",
        "isVisible": true,
        "tabOrder": 5
      },
      "values1.txt": {
        "text": "TOTAL CS EXAMS\nFEMALES\n------\n29\n841\n350\n394\n8993\n641\n904\n136\n120\n3689\n1685\n203\n137\n120\n2207\n505\n31\n488\n252\n1455\n2168\n77\n1120\n329\n218\n121\n14\n1248\n16\n76\n144\n2282\n52\n822\n4202\n915\n162\n177\n1362\n214\n449\n6\n454\n3403\n127\n1682\n31\n1005\n401\n111\n26",
        "isVisible": true,
        "tabOrder": 6
      },
      "values2.txt": {
        "text": "TOTAL AP CS EXAMS\nHISPANIC/LATINO\n------\n7\n155\n138\n360\n7268\n445\n322\n45\n38\n4320\n508\n93\n52\n69\n1375\n178\n10\n70\n93\n526\n471\n7\n150\n87\n52\n22\n1\n459\n6\n29\n17\n905\n88\n869\n1904\n159\n83\n81\n273\n111\n127\n2\n124\n3317\n58\n465\n5\n252\n124\n7\n2",
        "isVisible": true,
        "tabOrder": 7
      },
      "values3.txt": {
        "text": "TOTAL CS EXAMS\nAFRICAN AMERICAN\n------\n0\n291\n126\n33\n561\n52\n152\n141\n46\n1070\n680\n1\n28\n4\n284\n98\n1\n43\n147\n337\n794\n2\n148\n68\n83\n42\n0\n370\n3\n13\n5\n302\n3\n64\n1153\n261\n18\n5\n222\n36\n148\n1\n206\n488\n10\n441\n0\n57\n36\n6\n0",
        "isVisible": true,
        "tabOrder": 8
      },
      "values4.txt": {
        "text": "TOTAL AP CS EXAMS\nAMERICAN INDIAN/ALASKA NATIVE\n------\n6\n15\n6\n6\n44\n11\n3\n4\n5\n26\n11\n0\n2\n1\n6\n1\n1\n3\n2\n11\n5\n2\n10\n4\n2\n0\n0\n17\n1\n0\n0\n18\n2\n7\n33\n1\n20\n4\n9\n1\n9\n1\n2\n22\n2\n5\n0\n9\n2\n1\n0",
        "isVisible": true,
        "tabOrder": 9
      },
      "values5.txt": {
        "text": "TOTAL CS EXAMS\nNATIVE HAWAIIAN/OTHER PACIFIC ISLANDER\n------\n0\n3\n1\n3\n69\n1\n1\n0\n0\n10\n6\n20\n0\n1\n5\n2\n0\n0\n0\n3\n8\n1\n1\n1\n0\n0\n0\n5\n0\n0\n0\n10\n0\n8\n12\n5\n0\n3\n5\n1\n0\n0\n0\n11\n1\n5\n0\n11\n2\n0\n0",
        "isVisible": true,
        "tabOrder": 10
      },
      "schools.txt": {
        "text": "TOTAL SCHOOLS\nOFFERING AP CS TEST\n------\n11\n124\n63\n90\n786\n140\n135\n19\n28\n360\n195\n33\n53\n16\n207\n103\n31\n117\n63\n220\n186\n36\n216\n77\n106\n43\n12\n148\n11\n31\n36\n276\n22\n62\n494\n178\n60\n42\n296\n40\n71\n5\n91\n506\n33\n167\n12\n167\n125\n34\n11",
        "isVisible": true,
        "tabOrder": 11
      },
      "ap.txt": {
        "text": "TOTAL SCHOOLS THAT\nHAVE AN AP PROGRAM\n------\n77\n328\n318\n340\n2397\n367\n263\n59\n61\n1146\n626\n85\n221\n115\n684\n421\n123\n263\n280\n460\n359\n135\n660\n314\n322\n189\n100\n630\n56\n98\n111\n567\n132\n123\n1505\n755\n300\n229\n786\n72\n288\n66\n382\n1879\n207\n494\n67\n438\n505\n127\n36",
        "isVisible": true,
        "tabOrder": 12
      }
    },
    "display_name": "AP CS Test Takers",
    "bubble_choice_description": "Dataset containing information about all AP Computer Science (CS) test takers (both Computer Science Principles and Computer Science A tests) and their demographics, per state.",
    "thumbnail_url": "https://images.code.org/8d21322b78766964865324d5e943f013-exam.png"
  },
  "game_id": 68,
  "created_at": "2023-02-17T19:15:51.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T19:15:51.062+00:00\",\"changed\":[\"cloned from \\\"CSA U4L8-L5o_2023\\\"\"],\"cloned_from\":\"CSA U4L8-L5o_2023\"},{\"changed_at\":\"2023-02-17 19:15:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 13:49:47 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 14:39:51 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 15:45:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 15:45:28 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-29 16:24:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
