<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Users of an image storage app want to be able to sort the list of image files alphabetically.\r\n\r\n‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ImageApp</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sortFiles()</code> method to sort the list of image files alphabetically.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">ImageAppRunner</code> class, call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sortFiles()</code> method and print the updated list of image files.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help with using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">compareTo()</code> method.\r\n</div>\r\n\r\n<details style=\"background-color: #ececec; padding: 10px; margin-bottom: 10px; border: 1px solid transparent; border-radius: 5px;\">\r\n    <summary style=\"font-size: 1.2em; font-weight: bold;\">üî¶ Need help with your algorithm?</summary>\r\n    <div style=\"margin-top: 20px; margin-left: 20px; margin-right: 20px;\">\r\n    \t<p>Here is one approach to solving this problem.</p>\r\n        <pre style=\"background-color: #333333; color: white;\">\r\nloop from 0 to imageFiles size - 1\r\n  loop from index + 1 to imageFiles size\r\n    get file at outer loop index\r\n    get file at inner loop index\r\n&nbsp;\r\n    if outerFile.compareTo(innerFile) > 0\r\n      set outerIndex to innerFile\r\n      set innerIndex to outerFile\r\n</pre>\r\n    </div>\r\n</details>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Image Files",
    "bubble_choice_description": "Users of an image storage app want to be able to sort their list of image files alphabetically.",
    "thumbnail_url": "https://images.code.org/7ce3eda39271a51b2d44b77f5c2db357-picture.png",
    "encrypted_validation": "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\nMoaCVJN2stl6\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "ImageAppRunner.java": {
        "text": "import java.util.ArrayList;\n\npublic class ImageAppRunner {\n  public static void main(String[] args) {\n\n    // Creates an ArrayList of image files\n    ArrayList<String> images = new ArrayList<String>();\n    images.add(\"petsatpark.jpg\");\n    images.add(\"computer.jpg\");\n    images.add(\"tacos.jpg\");\n    images.add(\"bagofchips.jpg\");\n    images.add(\"friends.jpg\");\n\n    // Creates an ImageApp object\n    ImageApp app = new ImageApp(images);\n\n    // Prints the ImageApp object\n    System.out.println(\"----- Unsorted Files -----\");\n    System.out.println(app + \"\\n\");\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the sortFiles() method and print the updated ImageApp object.\n     * -----------------------------------------------------------------------------\n     */\n\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ImageApp.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents an image storage app\n */\npublic class ImageApp {\n  \n  private ArrayList<String> imageFiles;   // The list of image files\n\n  /*\n   * Initializes imageFiles to the specified list of image files\n   */\n  public ImageApp(ArrayList<String> imageFiles) {\n    this.imageFiles = imageFiles;\n  }\n\n  /*\n   * Returns the list of image files\n   */\n  public ArrayList<String> getImageFiles() {\n    return imageFiles;\n  }\n\n  /*\n   * Sorts the list of image files in alphabetical order\n   */\n  public void sortFiles() {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use nested loops to traverse the imageFiles list to get the current\n     * element (outer loop) and the next element (inner loop). If the result of\n     * currentElement.compareTo(nextElement) is greater than 0, set the next index\n     * (inner loop variable) to currentElement and the current index (outer loop)\n     * variable) to nextElement.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n\n    \n  }\n\n  /*\n   * Returns a String containing each image file in imageFiles\n   */\n  public String toString() {\n    String result = \"\";\n\n    for (int index = 0; index < imageFiles.size(); index++) {\n      result += imageFiles.get(index) + \"\\n\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    }
  },
  "game_id": 68,
  "created_at": "2023-04-03T14:08:16.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-03T14:08:16.739+00:00\",\"changed\":[\"cloned from \\\"CSA U6L6-L6a_2023\\\"\"],\"cloned_from\":\"CSA U6L6-L6a_2023\"},{\"changed_at\":\"2023-04-03 14:08:18 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-01 23:22:44 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:26:33 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:27:08 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:28:47 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:28:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:28:51 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:31:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:31:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:31:18 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:31:35 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:31:39 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-04 23:48:21 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-05-05 00:02:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
