<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2018-02-08T19:48:16.000Z",
  "level_num": "custom",
  "user_id": 6,
  "properties": {
    "skin": "bee",
    "instructions": "Help the bee through the maze by turning left at flowers and right at honeycomb.",
    "step_mode": "1",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "start_direction": "1",
    "nectar_goal": "2",
    "honey_goal": "3",
    "flower_type": "redWithNectar",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,2,1,1,1,1,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "initial_dirt": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,7,-7,0,7,-7,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "final_dirt": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "ideal": "11",
    "never_autoplay_video": "true",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "true",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "fast_get_nectar_animation": "true",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"If the puzzle seems challenging, try building your function a little at a time.  \\n\\nAdd some blocks, then try it out. Add more, then try again.  Soon, you'll get there!\\n\\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)\",\"hint_id\":\"courseF_bee_functions6_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/43ab5adbae7c4b5dd5eb9c3746439283/courseF_bee_functions6.mp3\"},{\"hint_class\":\"content\",\"hint_markdown\":\"Your function should check if there is a flower or honeycomb, get nectar or make honey, then turn.\",\"hint_id\":\"courseF_bee_functions6_b\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/dae6147700b71a2675c1397479aaca48/courseF_bee_functions6.mp3\"},{\"hint_class\":\"content\",\"hint_markdown\":\"Since you are turning within your function, you only need one `while` loop to get you through this maze.\",\"hint_id\":\"courseF_bee_functions6_c\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/739c3d97e99fbecdca94e139b2117ea7/courseF_bee_functions6.mp3\"}]",
    "instructions_important": "true",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "serialized_maze": "[[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":0},{\"tileType\":1},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":0},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":2},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":1},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":0},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1}],[{\"tileType\":0},{\"tileType\":0},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":1},{\"tileType\":1},{\"tileType\":1},{\"tileType\":1,\"value\":1,\"range\":1,\"featureType\":0},{\"tileType\":1},{\"tileType\":1}]]",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"courseF_bee_functions6_1\",\r\n  \"callout_text\": \"Don't forget to look in here for more blocks that might help make this easier!\",\r\n  \"element_id\": \"[id=':3.label']\",\r\n  \"on\": \"\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": false,\r\n    \"dropletPaletteCategory\": \"\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left center\",\r\n    \"at\": \"right center\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "step_speed": "1",
    "markdown_instructions": "*\"This field is a-MAZE-ing!\"*\r\n\r\nBuild your own function to help the bee through the maze by turning left at flowers and right at honeycomb.  Don't forget to collect nectar and make honey along the way!",
    "disable_procedure_autopopulate": "false",
    "shape_shift": "false",
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-05-31 19:02:46 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-06-01 00:04:59 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-07-17 21:28:07 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:30:56 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:33:41 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:36:14 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:49:41 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"markdown_instructions\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:51:52 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:53:32 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:54:31 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"nectar_goal\",\"honey_goal\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:55:12 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 21:55:30 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"ideal\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-17 23:13:51 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-07-28 22:49:09 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"never_autoplay_video\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"},{\"changed_at\":\"2017-08-25 16:15:52 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":684,\"changed_by_email\":\"audrey.clark@code.org\"}]"
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false"/>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Actions">
          <block type="maze_move">
            <title name="DIR">moveForward</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="maze_nectar"/>
          <block type="maze_honey"/>
        </category>
        <category name="Loops">
          <block type="maze_untilBlocked">
    </block>
          <block type="controls_repeat_ext" inline="true">
            <value name="TIMES">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
          </block>
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
          <block type="bee_whileNectarAmount">
            <title name="ARG1">nectarRemaining</title>
            <title name="OP">&gt;</title>
            <title name="ARG2">0</title>
          </block>
        </category>
        <category name="Conditionals">
          <block type="bee_ifFlower">
            <title name="LOC">atFlower</title>
          </block>
          <block type="bee_ifElseFlower">
            <title name="LOC">atFlower</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE">
          <block type="procedures_callnoreturn">
            <mutation name="do something"/>
          </block>
        </category>
        <category name="Math">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
          <block type="math_arithmetic" inline="true">
            <title name="OP">ADD</title>
            <value name="A">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
            <value name="B">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
          </block>
        </category>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="procedures_defnoreturn" editable="false">
          <mutation/>
          <title name="NAME">get nectar make honey</title>
          <statement name="STACK">
            <block type="bee_ifElseFlower">
              <title name="LOC">atFlower</title>
              <statement name="DO">
                <block type="maze_nectar">
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                    </block>
                  </next>
                </block>
              </statement>
              <statement name="ELSE">
                <block type="bee_ifFlower">
                  <title name="LOC">atHoneycomb</title>
                  <statement name="DO">
                    <block type="maze_honey">
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </statement>
        </block>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="maze_untilBlocked">
              <statement name="DO">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="procedures_callnoreturn">
                      <mutation name="get nectar make honey"/>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </next>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>