<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `BankAccount`(#e7e8ea) class represents a bank account and has instance variables for the customer's name and starting balance.\r\n\r\nThe `BasicAccount`(#e7e8ea) class represents a basic bank account. It overrides the `withdraw()`(#e7e8ea) method to charge a $30 fee if a withdrawal causes an account to be overdrawn (balance is negative).\r\n\r\n✅ **TO DO #1:** In `Bank.java`(#e7e8ea), write the `makeWithdrawals()`(#e7e8ea) method to withdraw the parameter `amount`(#e7e8ea) from each account balance.\r\n\r\nFor example, calling `makeWithdrawals()`(#e7e8ea) with the value `300`(#e7e8ea) should produce the following results:\r\n\r\n```\r\nShakila: $200.0\r\nAli: $-130.0\r\nValentina: $-200.0\r\nMaria: $500.0\r\n```\r\n\r\n::: details [**🔦 Need help with your algorithm?**]\r\n  \r\nHere is one approach to solving this problem.\r\n\r\n```\r\nfor each bankAccount in accounts\r\n  bankAccount.withdraw(300)\r\n```\r\n:::\r\n&nbsp;\r\n\r\n✅ **TO DO #2:** In `BankRunner.java`(#e7e8ea), call the `makeWithdrawals()`(#e7e8ea) method, then print the `Bank`(#e7e8ea) object.\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with traversing a 1D array of objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/polymorphism"
    ],
    "display_name": "Bank Account",
    "bubble_choice_description": "Traverse a 1D array of `BankAccount` objects and get the balances for each bank account.",
    "thumbnail_url": "https://images.code.org/410351bc8ad13c43a8056e781da0882e-money.png",
    "encrypted_validation": "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\nyBpVtsUkHVj8g7+vH4M=\n",
    "encrypted_exemplar_sources": "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\n",
    "encrypted_examples": [

    ],
    "video_key": "csa_polymorphism"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2023-01-12T21:12:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2023-01-12T21:12:23.998+00:00\",\"changed\":[\"cloned from \\\"CSA U3L6-L7a_2023\\\"\"],\"cloned_from\":\"CSA U3L6-L7a_2023\"},{\"changed_at\":\"2023-01-12 21:12:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 14:36:52 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 23:03:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-25 23:05:01 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-26 00:51:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-26 00:51:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-26 01:24:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-26 01:24:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-01-26 01:24:25 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-02-02 15:26:59 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
