<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `Netflix`(#e7e8ea) class analyzes data about the cost of Netflix subscription fees in different countries and has an instance variable for their subscription fees.\r\n\r\n##In Netflix.java:\r\n\r\n1. Declare and initialize a constant `MAX_PRICE`(#e7e8ea) to `12`(#e7e8ea).\r\n\r\nThe method `countUnderMax()`(#e7e8ea) returns the number of countries with subscription fees that are less than or equal to the constant `MAX_PRICE`(#e7e8ea). In the `countUnderMax()`(#e7e8ea) method,\r\n\r\n2. Traverse the instance variable `prices`(#e7e8ea). Count each value that is less than or equal to the constant `MAX_PRICE`(#e7e8ea), then return the count.\r\n\r\n##In MyConsole.java:\r\n\r\n3. Print the result of a call to `countUnderMax()`(#e7e8ea) on the `countryPrices`(#e7e8ea) object.\r\n\r\n**Note:** Use the constant `MAX_PRICE`(#e7e8ea) when displaying the results.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://www.kaggle.com/datasets/prasertk/netflix-subscription-price-in-different-countries)!*\r\n\r\n![](https://images.code.org/777463a360fe8b1875e443010a08f79c-image-1648665390761.png)\r\n\r\n::: details [**Show Me How**]\r\nA constant variable uses the following syntax:\r\n  \r\n  ```\r\n  public static dataType VARIABLE_NAME = value;\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Subscription Fees",
    "bubble_choice_description": "Find the number of countries that have Netflix subscription fees that are less than or equal to a maximum price.",
    "thumbnail_url": "https://images.code.org/3dc0e87d88d3fbcc31fda946e7c41bef-image-1648663001013.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    /*\n     * Prices of a standard Netflix subscription in Canada, Costa Rica,\n     * France, Germany, India, Japan, New Zealand, Peru, United Kingdom,\n     * and United States (in order).\n     */\n    double[] pricesList = {11.87, 12.99, 15.24, 14.67, 6.61, 13.13, 12.53, 8.56, 13.2, 13.99};\n\n    Netflix countryPrices = new Netflix(pricesList);\n\n    // TO DO #3: Print the result of a call to countUnderMax().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "Netflix.java": {
        "text": "public class Netflix {\n\n  private double[] prices;\n\n  // TO DO #1: Declare and initialize a constant MAX_PRICE.\n\n  \n\n  public Netflix(double[] prices) {\n    this.prices = prices;\n  }\n\n  public int countUnderMax() {\n    // TO DO #2: Traverse prices and count the number of\n    // countries with fees less than or equal to MAX_PRICE.\n\n\n    return 0;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "jrRNHcOowRx22njbDNzE6K10Ex1m7JwmHnodMo3x9M2kKh2e12PGdF3lBTDQ\ndZipOlUtcNRzxgxobqbeTRz/syfbIBYIYnngzWUl9DKt6FDAwXhf+SbPTOeC\nxivE0PZ5EaaIwaK1hDyBb1vZsJs8qWFXOr3wqtPEt6Q07x+o1elk5BgtptMz\nZXZY+Ou64q01ZlLfonaX7ZIiJ1S7VRvrOhHhzfursTrVJcjLFMCyCDJmoFD3\nJkLNdPnJjCw0ygiDWtVbJswSukG5hwvSmdIn7T8gfFZuw9D5Z2ilGyoqm6EP\nyAmyYVZ2q82cp3twKyTMcp+7qhZIWTwIjWJxz4rfMR34lzF7dmdaTokEDdxq\nbCr9JOiJhgJn9XrIowk5fTmmhKsGyKDvbFowI3nhnZZEYAC6uAliLALavTDr\neLscWZIIGoISRsWbrutO8NlWgK1f2oIQuMokkAyFfNJcBTSs6tCM9hkUZza5\ns2IXx+yrPKH1aSPyR8OP/VYecNWLhZ6uK1QEJbMu+iAEj8bgAmqG/aWUTBrJ\nC8GVL5CMiH6eOPcsGzZT0apx66s0yqT0stErwejuojMR6fi5UTxLb3fUO6Wf\nT98orzEyM77abvrkPT3/IRzmDQEOvbKGxrN3JXLtaoM/yEkdPdG8DyTgK48s\nNq/FQHcIKe5bEDu/zNPShmPR3JhWEHvjKJbU9j1w9oqrXp2yDfRzYv6INOsB\ne6XKBq3HSUeEQ7wBwZNavpYIM7DtciPEVvEeWGirutc+Q4tysirTMMw0BHuD\n/xouEfVULgGG8mWIQBTKRdjU43mg0XC6U6EPtAw/NRbX++YFwm580H5d8sUb\nzmvnaXOgMDPtin37zLBfcFIBp7Hd+ng3M+/5D8d0ciJaH6tQQCY3TSnJCqEK\nXXGSpthqace5iuEGpngb9bwlEdSQnCPhNUsP7+FAOPBpB+BgHFl1zHSWHYoL\n/ifZNZgpNn6nkOE8HePMbynidDiElI13F8rU/FYcUTtVl9jBytjsb5HG95vx\nxiKrMt8baVPGstslyNXE8JQTlvN04+nUFiwMTNgAYaWyjrzzYTQu+Z+kQje1\nh96tNfzg9+5I1gvN+Huue+RbNTqAM0GdhhUA0xxYYoMPf594yKfMd5sFJSCo\nutjbMB8LVa8DGeYRdiIR1oDOkJ2IP6tRaO/KlpCamin/2vxtWzwzEfcxmPL/\n2WJ46xAfjhwnuaPPVOeMUkQpMvopmxR/BTWxdQsZnRxqpcC81BkVGMn0UFJ7\np9tN4EoUVlCq2TpU3nJz+lmfuDnxZMPu8ztHaBeGpBn/AXNIe8ckS2I9AMYG\nc7zew9LZ8Xatu81cBq4wKg7t9jELNiGcbYrVTYwkIYxi0P//62epd6d3A3ER\naYeN6olcPOeC0bZLwy6m/9wThc5pQGJVba2ijVpNUrdrAo/9AWS3qpEMVz1X\n7vMfI+qxonf58StTmpp0kQ2YPgkMai+nXxeMjUGWljOqPfbLqeuFV529qWVh\n4ZHOlEmJGcnwsmSjyCX9d/1HNCWToOvnniVMX8pJXT04LEWchIUsqWTC6tNt\nTjGv6iKzOAmp1t8Xzw+JFVPcO70A7yew8ubwI8EP/c44vrz+3Kw2PoptRMU+\n1UUUoYWYB9IHwZnkXSYhaSWQkfLffHELzwZRKNqLCA+OthIBi2hZfS0zbUS0\n8YQIzw==\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\n"
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:25.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:25.720+00:00\",\"changed\":[\"cloned from \\\"CSA U3L6-L5c_2022\\\"\"],\"cloned_from\":\"CSA U3L6-L5c_2022\"},{\"changed_at\":\"2022-09-06 16:34:20 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:35:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:35:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:35:23 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:40:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
