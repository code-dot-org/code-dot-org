<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `Netflix`(#e7e8ea) class analyzes data about the cost of Netflix subscription fees in different countries and has an instance variable for their subscription fees.\r\n\r\n##In Netflix.java:\r\n\r\n1. Declare and initialize a constant `MAX_PRICE`(#e7e8ea) to `12`(#e7e8ea).\r\n\r\nThe method `countUnderMax()`(#e7e8ea) returns the number of countries with subscription fees that are less than or equal to the constant `MAX_PRICE`(#e7e8ea). In the `countUnderMax()`(#e7e8ea) method,\r\n\r\n2. Traverse the instance variable `prices`(#e7e8ea). Count each value that is less than or equal to the constant `MAX_PRICE`(#e7e8ea), then return the count.\r\n\r\n##In MyConsole.java:\r\n\r\n3. Print the result of a call to `countUnderMax()`(#e7e8ea) on the `countryPrices`(#e7e8ea) object.\r\n\r\n**Note:** Use the constant `MAX_PRICE`(#e7e8ea) when displaying the results.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://www.kaggle.com/datasets/prasertk/netflix-subscription-price-in-different-countries)!*\r\n\r\n![](https://images.code.org/777463a360fe8b1875e443010a08f79c-image-1648665390761.png)\r\n\r\n::: details [**Show Me How**]\r\nA constant variable uses the following syntax:\r\n  \r\n  ```\r\n  public static dataType VARIABLE_NAME = value;\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Subscription Fees",
    "bubble_choice_description": "Find the number of countries that have Netflix subscription fees that are less than or equal to a maximum price.",
    "thumbnail_url": "https://images.code.org/3dc0e87d88d3fbcc31fda946e7c41bef-image-1648663001013.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    /*\n     * Prices of a standard Netflix subscription in Canada, Costa Rica,\n     * France, Germany, India, Japan, New Zealand, Peru, United Kingdom,\n     * and United States (in order).\n     */\n    double[] pricesList = {11.87, 12.99, 15.24, 14.67, 6.61, 13.13, 12.53, 8.56, 13.2, 13.99};\n\n    Netflix countryPrices = new Netflix(pricesList);\n\n    // TO DO #3: Print the result of a call to countUnderMax().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "Netflix.java": {
        "text": "public class Netflix {\n\n  private double[] prices;\n\n  // TO DO #1: Declare and initialize a constant MAX_PRICE.\n\n  \n\n  public Netflix(double[] prices) {\n    this.prices = prices;\n  }\n\n  public int countUnderMax() {\n    // TO DO #2: Traverse prices and count the number of\n    // countries with fees less than or equal to MAX_PRICE.\n\n\n    return 0;\n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "jrRNHcOowRx22njbDNzE6K10Ex1m7JwmHnodMo3x9M2kKh2e12PGdF3lBTDQ\ndZipOlUtcNRzxgxobqbeTRz/syfbIBYIYnngzWUl9DKt6FDAwXhf+SbPTOeC\nxivE0PZ5EaaIwaK1hDyBb1vZsJs8qWFXOr3wqtPEt6Q07x+o1elk5BgtptMz\nZXZY+Ou64q01ZlLfonaX7ZIiJ1S7VRvrOhHhzfursTrVJcjLFMCyCDJmoFD3\nJkLNdPnJjCw0ygiDWtVbJswSukG5hwvSmdIn7T8gfFZuw9D5Z2ilGyoqm6EP\nyAmyYVZ2q82cp3twKyTMcp+7qhZIWTwIjWJxz4rfMR34lzF7dmdaTokEDdxq\nbCr9JOiJhgJn9XrIowk5fTmmhKsGyKDvbFowI3nhnZZEYAC6uAliLALavTDr\neLscWZIIGoISRsWbrutO8NlWgK1f2oIQuMokkAyFfNJcBTSs6tCM9hkUZza5\ns2IXx+yrPKH1aSPyR8OP/VYecNWLhZ6uK1QEJbMu+iAEj8bgAmqG/aWUTBrJ\nC8GVL5CMiH6eOPcsGzZT0apx66s0yqT0stErwejuojMR6fi5UTxLb3fUO6Wf\nT98orzEyM77abvrkPT3/IRzmDQEOvbKGxrN3JXLtaoM/yEkdPdG8DyTgK48s\nNq/FQHcIKe5bEDu/zNPShmPR3JhWEHvjKJbU9j1w9oqrXp2yDfRzYv6INOsB\ne6XKBq3HSUeEQ7wBwZNavpYIM7DtciPEVvEeWGirutc+Q4tysirTMMw0BHuD\n/xouEfVULgGG8mWIQBTKRdjU43mg0XC6U6EPtAw/NRbX++YFwm580H5d8sUb\nzmvnaXOgMDPtin37zLBfcFIBp7Hd+ng3M+/5D8d0ciJaH6tQQCY3TSnJCqEK\nXXGSpthqace5iuEGpngb9bwlEdSQnCPhNUsP7+FAOPBpB+BgHFl1zHSWHYoL\n/ifZNZgpNn6nkOE8HePMbynidDiElI13F8rU/FYcUTtVl9jBytjsb5HG95vx\nxiKrMt8baVPGstslyNXE8JQTlvN04+nUFiwMTNgAYaWyjrzzYTQu+Z+kQje1\nh96tNfzg9+5I1gvN+Huue+RbNTqAM0GdhhUA0xxYYoMPf594yKfMd5sFJSCo\nutjbMB8LVa8DGeYRdiIR1oDOkJ2IP6tRaO/KlpCamin/2vxtWzwzEfcxmPL/\n2WJ46xAfjhwnuaPPVOeMUkQpMvopmxR/BTWxdQsZnRxqpcC81BkVGMn0UFJ7\np9tN4EoUVlCq2TpU3nJz+lmfuDnxZMPu8ztHaBeGpBn/AXNIe8ckS2I9AMYG\nc7zew9LZ8Xatu81cBq4wKg7t9jELNiGcbYrVTYwkIYxi0P//62epd6d3A3ER\naYeN6olcPOeC0bZLwy6m/9wThc5pQGJVba2ijVpNUrdrAo/9AWS3qpEMVz1X\n7vMfI+qxonf58StTmpp0kQ2YPgkMai+nXxeMjUGWljOqPfbLqeuFV529qWVh\n4ZHOlEmJGcnwsmSjyCX9d/1HNCWToOvnniVMX8pJXT04LEWchIUsqWTC6tNt\nTjGv6iKzOAmp1t8Xzw+JFVPcO70A7yew8ubwI8EP/c44vrz+3Kw2PoptRMU+\n1UUUoYWYB9IHwZnkXSYhaSWQkfLffHELzwZRKNqLCA+OthIBi2hZfS0zbUS0\n8YQIzw==\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "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\nERuyvY/xk2twmSxi/Hn8+zjaJQ==\n"
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:25:25.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:25.720+00:00\",\"changed\":[\"cloned from \\\"CSA U3L6-L5c_2022\\\"\"],\"cloned_from\":\"CSA U3L6-L5c_2022\"},{\"changed_at\":\"2022-09-06 16:34:20 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:35:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:35:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:35:23 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-06 16:40:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-08 13:36:07 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
