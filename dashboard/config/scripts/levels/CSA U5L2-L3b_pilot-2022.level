<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A family is trying to decide on which dog breed to adopt. They want to choose a dog breed that is less than or equal to 20 inches tall. They have the following values:\r\n\r\n![](https://images.code.org/48f45f5c5536ef79b2e6f45293020325-image-1650999244520.png)\r\n\r\nwhere each row represents a Beagle, Dalmation, Golden Retriever, and Pug, respectively. Each column represents the minimum height and maximum height of each dog breed, respectively.\r\n\r\n##In DogData.java:\r\n\r\n1. Write the method `findHeight()`(#e7e8ea) to find the dog breeds with a minimum or maximum height that is less than or equal to `20`(#e7e8ea). Print each value found that meets the criteria.\r\n\r\n   * If the value is less than or equal to `maxHeight`(#e7e8ea) and the column is `0`(#e7e8ea), print the corresponding name of the breed from the `breeds`(#e7e8ea) based on the row that the value is found, the value found, and that it is the minimum height.\r\n   \r\n   * If the value is less than or equal to `maxHeight`(#e7e8ea) and the column is `1`(#e7e8ea), print the corresponding name of the breed from the `breeds`(#e7e8ea) based on the row that the value is found, the value found, and that it is the maximum height.\r\n\r\n::: details [**Show Me How**]\r\nTraversing a 2D array uses the following syntax:\r\n  \r\n  ```\r\n  for (int row = 0; row < arrayName.length; row++) {\r\n    for (int col = 0; col < arrayName[0].length; col++) {\r\n      // code to execute\r\n    }\r\n  }\r\n  ```\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "Dog Breeds",
    "bubble_choice_description": "Write a method to find the dog breeds with a minimum or maximum height that meet a specific criteria and print the results.",
    "thumbnail_url": "https://images.code.org/88f3474433cfc656f10f5f9d39e325fc-image-1650999257527.png",
    "encrypted_exemplar_sources": "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\nzKJk+WjW\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "XRmoEY98B7t2URw1podKp+VxapiSf76QETWvaI0KjXtMg7b/LE6e618KJDlP\nEXQVRhWJCkKmcYcW162rdSzZ32G/JQ1hvwyHcohhnq9Zde9b1SlpVIXa64In\nol6icEL6/0d4/QnycIXo6NZUEiYtcdThX9R1f0cC0mFoqZ/e9YHHADRsOa4U\n5pLQhTcfxu3WhPAqjShOrgVs8fZ1ZeGVLtWAQyb9oWQJXKlLTnhJqC3Um6ir\n/Q6JygfV8GeIJrt0N/S5EWi8PELczI2efG3w1VW2PvJ5HPSIfGqAGMNQkYqq\nlKwYYHOK1j5Pw0HS4yJSpTAfkJ5xwmB1IjkqJ7mHH8EmkZ0aVxuLfYduPU1+\nHY8R+tE+odBTnGAv2dEpV0vvHw/gafQCxrohZ+RApr6OxWN/p9I7XVHAi8/V\nCQ9xA7ZnIGV89jEYRY6dkCugf3IMK0IzAVoWBpwrYPN+mpTegGP9365B7gA9\nlchbiWduCR43cqmBSxDJkqYIUQ7Cs7mdH00glbe/7GaHEmU80+XxQjz7utlc\nPFwcCG7sXVt+6QMPXxlC8gUBmQf75lqVsyhT6u36lkrAp7xA/ATG/QXoK0wm\nhXcPeOIRMvsXNh2IPi+ADMSqOWKzvk7RQiuB1UshevkXv9Hk6PVZu/D87c2o\nQpMIST5far4Bgfq46ph3U29vX+3AO5qjvN/Vmll592kUlL5+T5hIxxb62WiP\nSiheXzxulLOA374asNRN7rjiCf/nWDWSC6lPawSQGOxDi+jVTuOUrNIyKt3+\n35gyd7oEfBpYuG6hqTpHhBf3iFfC9Zu4x0nJNCjIWLcJQwfH1AdUTnyt4sNO\nEu5sWKb7JUdnEeXpIWNVhxVIfk4VB/CzZp8StDLnibl2ZFc+/fbtdbRTwYoY\nnYcNena4J6rnE8C62B8HK62GVlvgkW+yGid91LR/nQ+gJzgpfnaTnC/45Qkh\nYmhFShcanfqonHIl1YC/OArbRKFnYui4oawtQ8leLJTMFwGFi3H5fd4Tz1Cq\nfZUb4FwKAro2dk+8qwjOFjkJUNxHGrjatP3aXefNH+2n3pIJuMgUPkNjgqDc\nE/PaqZQIe5ltnSD9gGFe01oJnV2MpjJq4jrexxY6O/2q2g8+Gvh5HTsu4FP0\n/d049cI2e6K4kAcfiBiwjo4HdPUmY6Q1WT3Q0TrwQEqpVK3i7O66UwBBdwyD\nzflkG6e4YJuC8Hzs2Zdt1ZTuVAmtVzZy4excfdSFIIXkBFliBSTThnaVwbgY\nn+Pyj0l37KCOaSPxw8PpA4LYlCLAjalgYxkg2lSVRRyvTykwu6SY0t/Rmxwr\nvRTkzjBdLEXg1AOVAUg2Qpe64q4vG069uF91n3CCrLKxbN9THkSB+YnIsyIP\nHGwEmt8GQojib2yuRnDd9WcHJnWwf48wxumTcH3rpVFZWp2ZnLu+J/1IwcWO\nQ1tHHNgWKOb4T9769/F/fDxGLg4ic3FV4MxLRvlPYarAqilVohnqhnuH+CtS\nbFUYPCHHiErqsXl707zRyUbFxB5qLl06hwoBw8PX1Icho7QLsjihxMiSTE8K\nKRxAqO7lNVUiCJ0RfDlKvR6BMQlqm7i7+OFfE3v2ZGDAr3PKuQoDudkBIIJR\ndb/WxdljK6UPiDnLe/dYblALxTyjrL9AmBdrIeP+fNNlT5cMJcCJyMOmxa2/\nhos3DIisVLlvlnZDfkhuXkjH3oXrnqh0rtiyIjI3pIZ/H2SResb7M0hP5lkg\nRkQ7k4U9vfsNMtbLMhk48Ni6AXJNuJym0eHDZ+gMaNrNLzi+7xQOF9q6AZAb\ndsUJWg9UFxErgQ==\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    String[] breeds = {\"Beagle\", \"Dalmation\", \"Golden Retriever\", \"Pug\"};\n    int[][] heights = {{13, 15}, {19, 23}, {22, 24}, {10, 12}};\n\n    DogData myDogs = new DogData(breeds, heights);\n\n    myDogs.findHeight(20);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "DogData.java": {
        "text": "/*\n * Analyzes data about dog breeds\n */\npublic class DogData {\n\n  private String[] breeds;  // The list of dog breeds\n  private int[][] data;     // The 2D array of data to analyze\n\n  /*\n   * Constructor to create a DogData with the\n   * specified array of breeds 2D array of data\n   */\n  public DogData(String[] breeds, int[][] data) {\n    this.breeds = breeds;\n    this.data = data;\n  }\n\n  /*\n   * Prints each dog breed found that has a minimum\n   * or maximum height less than or equal to a given value\n   */\n  public void findHeight(int maxHeight) {\n    // TO DO #1: Print each dog breed that has a minimum or\n    // maximum height that is less than or equal to maxHeight.\n\n    \n    \n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:49:56.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:49:56.111+00:00\",\"changed\":[\"cloned from \\\"CSA U5L2-L3b_2022\\\"\"],\"cloned_from\":\"CSA U5L2-L3b_2022\"},{\"changed_at\":\"2022-10-09 00:13:11 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:13:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:16:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-09 00:16:54 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
