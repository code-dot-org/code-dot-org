<Eval>
  <config><![CDATA[{
  "game_id": 36,
  "created_at": "2014-11-21T18:41:54.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "eval",
    "use_contract_editor": "true",
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "free_play": "false",
    "instructions": "If we wanted to make fifty green triangles, it would be a pain to repeat that block of code 50 times. Let's create a variable called my-shape and put the code for a 50 pixel solid green triangle inside.",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"MSM Defining Vars 2_callout1\",\r\n  \"callout_text\": \"Click \\\"edit\\\" to open the function editor to update the function\",\r\n  \"element_id\": \"[block-id='8'] > .blocklyIconGroup\",\r\n  \"on\": \"\",\r\n  \"qtip_config\": {\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left center\",\r\n    \"at\": \"right top\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 15\r\n    }\r\n   }\r\n  }\r\n },\r\n {\r\n  \"localization_key\": \"MSM Defining Vars 2_callout2\",\r\n  \"callout_text\": \"Define the triangle here\",\r\n  \"element_id\": \"[block-id='9']\",\r\n  \"on\": \"function_editor_opened\",\r\n  \"qtip_config\": {\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left center\",\r\n    \"at\": \"right center\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "coordinate_grid_background": "false",
    "disable_examples": "false",
    "markdown_instructions": "If we wanted to make fifty green triangles, it would be a pain to repeat that block of code 50 times. Let's create a variable called `my-shape` and put the code for a 50 pixel solid green triangle inside.",
    "never_autoplay_video": "false",
    "examples_required": "false"
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="functional_definition" inline="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">my-shape</title>
        </block>
        <block type="functional_display" inline="false" deletable="false" movable="false">
          <functional_input name="ARG1">
            <block type="functional_call">
              <mutation name="my-shape"/>
            </block>
          </functional_input>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Number">
          <block type="functional_math_number_dropdown">
            <title name="NUM" config="25, 50, 75, 100">???</title>
          </block>
        </category>
        <category name="String">
          <block type="functional_string">
            <title name="VAL"/>
          </block>
          <block type="functional_style">
            <title name="VAL">solid</title>
          </block>
        </category>
        <category name="Image">
          <block type="functional_triangle" inline="false"/>
        </category>
        <category name="Variables" custom="FUNCTIONAL_VARIABLE"/>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="functional_display" inline="false" deletable="false" movable="false">
          <functional_input name="ARG1">
            <block type="functional_triangle" inline="false">
              <functional_input name="SIZE">
                <block type="functional_math_number">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
              <functional_input name="STYLE">
                <block type="functional_style">
                  <title name="VAL">solid</title>
                </block>
              </functional_input>
              <functional_input name="COLOR">
                <block type="functional_string">
                  <title name="VAL">green</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Eval>