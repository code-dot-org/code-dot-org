<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyConcert.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class MyConcert {\n  public static void main(String[] args) throws FileNotFoundException {\n\n    Stage myStage = Theater.stage;\n\n    System.out.println(\"Welcome to The Theater!\");\n    \n    CharacterStory myConcert = new CharacterStory(\"yourCharacter.png\", \"characterHome.png\");\n\n    /* Test individual methods from CharacterStory by commenting\n\t * commenting out the myConcert.playConcert() below and then\n\t * calling the method in your concert that you want to test.\n     */\n    \n    myConcert.playConcert();\n\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "CharacterStory.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class CharacterStory {\n  private Stage myStage = Theater.stage;\t\t\t// where images and drawings are displayed\n  private String myCharacter;\t\t\t\t\t\t// the main character of your story\n  private String characterHome;\t\t\t\t\t\t// the main character's home\n\n  public CharacterStory(String myCharacter, String characterHome) {\n    this.myCharacter = myCharacter;\n    this.characterHome = characterHome;\n  }\n\n  // LESSON 2 - SCENE 1\n  public void showIntroduction() throws FileNotFoundException {    \n    // TO DO: Display the image of your character's home.\n\n\n    // TO DO: Display the image of your character.\n    \n\n    // TO DO: Add more notes to the song.\n    int[] notes = {75, 74, 77, 80};\n\n    // TO DO: Play the notes you added and modify how the notes are played.\n    myStage.playNoteAndPause(Instrument.PIANO, notes[0], 1);\n\n\tmyStage.playNoteAndPause(Instrument.PIANO, notes[0], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[1], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[0], 1);\n    \n    myStage.playNoteAndPause(Instrument.PIANO, notes[0], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[1], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[0], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[2], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[2], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[3], 0.3);\n    myStage.playNoteAndPause(Instrument.PIANO, notes[3], 1);\n  }\n  \n\n  // LESSON 4 - SCENE 2 PART A\n  public void drawShapes() {\n    // TO DO: Create an array of colors for the fill.\n\t\n\n    // TO DO: Create an array of colors for the stroke.\n\t\n\n    // TO DO: Set the stroke width.\n    \n    \n    // TO DO: Loop through one of the color arrays and draw rectangles and circles.\n\n  }\n  \n\n  // LESSON 4 - SCENE 2 PART B\n  public void showFavoriteFoods() throws FileNotFoundException {\n    // TO DO: Create an array of food images.\n\n    \n    // TO DO: Loop through the array of foods to display each food and play the sound effect.\n\n  }\n  \n\n  // LESSON 5 - SCENE 3\n  public void showFriends() throws FileNotFoundException {\n    // TO DO: Display the image of your character's home.\n    \n\n    // TO DO: Create an array of Animal objects.\n\n\n    // TO DO: Loop through the array of animals to display each animal and play their sound.\n\n  }\n  \n\n  // LESSON 6 - SCENE 4 PART A\n  public void playUnicornMusic() throws FileNotFoundException {\n    // TO DO: Create an array of notes.\n\n\n    // TO DO: Play the array of notes.\n\n  }\n  \n\n  // LESSON 6 - SCENE 4 PART B\n  public void showUnicorn() throws FileNotFoundException {\n    String[] unicornRunning = {\"fireworks01.png\", \"fireworks02.png\", \"fireworks03.png\", \"fireworks04.png\", \"fireworks05.png\", \"fireworks06.png\"};\n    String[] unicornJumping = {\"swirl01.png\", \"swirl02.png\", \"swirl03.png\", \"swirl04.png\", \"swirl05.png\", \"swirl06.png\", \"swirl07.png\"};\n\n    // TO DO: Refactor the loop as an enhanced for loop to display the unicorn running.\n    for (int i = 0; i < fireworks.length; i++) {\n      myStage.drawImage(\"gradient.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n      myStage.drawImage(fireworks[i], 200, 200, 150, 150, 0);\n      myStage.pause(1);\n      myStage.clear(Color.WHITE);\n    }\n\n    // TO DO: Refactor the loop as an enhanced for loop to display the unicorn jumping.\n    int index = 0;\n\n    while (index < swirls.length) {\n      myStage.drawImage(\"gradient.png\", 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n      myStage.drawImage(swirls[index], 200, 200, 150, 150, 0);\n      index++;\n      myStage.pause(1);\n      myStage.clear(Color.WHITE);\n    }\n  }\n\n  \n  // LESSON 7 - SCENE 5\n  public void showCity() throws FileNotFoundException {\n    // TO DO: Create an array of samples from a sound.\n\n\n    // TO DO: Display an image of a city during the day.\n\n\n    // TO DO: Display the image of your character.\n\n\n    // TO DO: Play the array of samples.\n\n\n    // TO DO: Increase the volume and play the samples again.\n\n\n    // TO DO: Display an image of a city at night.\n\n\n    // TO DO: Display the image of your character.\n\n\n    // TO DO: Decrease the volume twice and play the samples again.\n\n  }\n\n  \n  // LESSON 9 - SCENE 6\n  public void showSky() throws FileNotFoundException {\n    // TO DO: Display an image of an ocean.\n    \n\n    // TO DO: Create an aray of samples from a sound.\n\n\n    // TO DO: Create an array of fish images.\n\n\n    // TO DO: Play the aray of samples.\n\n\n    // TO DO: Display the image of your character.\n    \n\n    // TO DO: Loop through the array of fish to display each fish.\n\n\n    // TO DO: Apply find() on the array of samples and play the samples again.\n    \n  }\n  \n\n  // LESSON 10 - SCENE 7\n  public void showSpace() throws FileNotFoundException {\n    // TO DO: Display an image of space.\n    \n\n    // TO DO: Create an array of samples from a sound.\n\n\n    // TO DO: Create an array of planet images.\n    \n\n    // TO DO: Play the array of samples.\n    \n\n    // TO DO: Display the image of your character.\n    \n    \n    // TO DO: Use nested loops to loop through the array of planets to\n    // display each planet moving around your character.\n\n\n    // TO DO: Apply shiftSound() on the array of samples and play the samples again.\n\n  }\n  \n\n  // LESSON 10 - SCENE 8\n  public void showHome() throws FileNotFoundException {\n    // TO DO: Display the image of your character's home.\n    \n\n    // TO DO: Create an array of samples from a sound.\n\n\n    // TO DO: Create an array of Animal objects.\n\n\n    // TO DO: Play the array of samples.\n\n\n    // TO DO: Display the image of your character.\n    \n    \n    // TO DO: Apply the reverseSound() effect on the sound and play again.\n\n\n    // TO DO: Loop through the array of animals to display each animal and play their sound.\n    \n  }\n  \n\n  public void playConcert() throws FileNotFoundException {  \n    // Scene 1\n    showIntroduction();\n\n    // Scene 2\n\tmyStage.pause(2);\n    drawShapes();\n    showFavoriteFoods();\n    \n    // Scene 3\n\tmyStage.pause(2);\n    showFriends();\n    \n    // Scene 4\n\tmyStage.pause(2);\n    playUnicornMusic();\n    showUnicorn();\n    \n    // Scene 5\n    myStage.pause(2);\n    showCity();\n    \n    // Scene 6\n\tmyStage.pause(2);\n    showOcean();\n    \n    // Scene 7\n    myStage.pause(2);\n    showSpace();\n\n    // Scene 8\n    myStage.pause(2);\n    showHome();\n\n    myStage.play();\n  }\n  \n}",
        "isVisible": true
      },
      "SoundEffects.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic final class SoundEffects {\n\n  // TO DO: Create constants for volume.\n\n\n  public static final int SAMPLE_RATE = 44100;\n\n  // Gets the length of a sound in seconds.\n  public static int getSoundLength(double[] samples) {\n    int soundLength = samples.length / SAMPLE_RATE;\n    return soundLength;\n  }\n\n  // Decreases the volume of a sound.\n  public static void decreaseVolume(double[] samples) {\n    for (int i = 0; i < samples.length; i++) {\n      samples[i] *= 0.5;\n    }\n  }\n\n  // Increases the volume of a sound.\n  public static void increaseVolume(double[] samples) {\n    for (int i = 0; i < samples.length; i++) {\n      samples[i] *= 2;\n\n      // TO DO: Use if statements to make sure the volume is\n      // not greater than MAX_VOLUME or less than MIN_VOLUME.\n\n\n      \n    }\n  }\n\n  // Replaces and counts duplicate samples with 0.\n  public static void replaceDuplicates(double[] samples) {\n\n\n    System.out.println(\"Duplicates replaced: \");\n  }\n\n  // Creates a new array containing the samples that are\n  // greater than 0 from the original array.\n  public static double[] find(double[] samples) {\n    double[] newSound = new double[1];\n    \n\n\n    System.out.println(\"Number of original samples: \");\n    System.out.println(\"Number of samples greater than 0: \");\n\n    return newSound;\n  }\n\n  // Shift the samples in the sound to the left by one place\n  public static double[] shiftSound(double[] samples) {\n    double[] newSound = new double[1];\n\n    \n\n    return newSound;\n  }\n\n  // Creates a new array containing the samples from\n  // the original array in reverse.\n  public static double[] reverseSound(double[] samples) {\n    double[] reversed = new double[1];\n\n    \n\n    return reversed;\n  }\n}",
        "isVisible": true
      }
    },
    "starter_assets": {
      "animal01.png": "cf275a60-9810-4981-93a8-5ca405c53108.png",
      "animal02.png": "abd57661-3dc1-4b22-b63c-ddb51e18bbf6.png",
      "animal03.png": "a33d3117-d1f9-43db-947b-abdffc0428d3.png",
      "animal04.png": "062c0267-1bb3-47ae-a9fe-9a1b60dd0092.png",
      "animal05.png": "fa2d3cb0-14a0-4104-a9f2-b4b2a2a96ba2.png",
      "animal06.png": "3f604a47-ab24-46e0-9133-56a2254bfc3c.png",
      "animal07.png": "9c8ef914-e08a-4c94-8282-5b7b873df273.png",
      "animal08.png": "3c5740e2-9060-47b9-ad28-b1958b7fd520.png",
      "animal09.png": "04d1be3c-617f-436a-944b-314d33fb32c8.png",
      "animal10.png": "afcc43d3-a276-421f-a417-50064760a303.png",
      "animal11.png": "e82bb95f-5583-44c8-8a65-6b73ea255ef9.png",
      "animal12.png": "0a03e798-eb3e-4c7d-b978-9d0f5f2141aa.png",
      "animal13.png": "63f74b51-c906-4ac9-b742-7650f7287dc2.png",
      "animal14.png": "c7379a64-18f8-434f-8967-355ef0a7d6e3.png",
      "animal15.png": "c7fdf1af-f116-4c9e-832c-74588e0ef8bd.png",
      "animal16.png": "b28999d5-2a9d-4e62-a167-f419aca8f609.png",
      "animal17.png": "2c5ce45c-a611-4eee-96e9-d734af63e956.png",
      "animal18.png": "36606674-b54f-4ed0-a07d-1b077fb77b83.png",
      "animal19.png": "a5ffe119-5846-45ff-ba0a-15ebec7b11f1.png",
      "animal20.png": "a2d9461a-85c3-4dc1-b83a-24dc46302c68.png",
      "animal21.png": "62909095-eea3-4ccb-90ab-18d7d3e3a2c5.png",
      "animal22.png": "01036040-d3f9-4ed5-9aa0-be78495fca11.png",
      "animal23.png": "e48e429e-bc2d-4e61-853a-28d625426a6a.png",
      "animal24.png": "4fd1bdf2-47fa-41c5-bc0e-d4022b364727.png",
      "animal25.png": "66f636fb-18c4-462e-af25-0228866b697d.png",
      "home01.png": "a0452971-344a-40f3-8d7f-d8475a89a328.png",
      "home02.png": "6725e719-2308-48f2-b355-c2660cb7a685.png",
      "home03.png": "5403297c-c90f-4f01-a8a6-d2172b2d62ec.png",
      "home04.png": "64d59fc7-fb48-4701-a145-eb38e8ef4b57.png",
      "home06.png": "379b21a2-f7e2-4ad4-b11b-935023e9cdf0.png",
      "home07.png": "52316d11-4750-464a-befa-0f4802827ab9.png",
      "home08.png": "0e96ddc4-08a5-4793-af75-f939a7659fc4.png",
      "home09.png": "9df60eae-a635-43fe-b3f6-936d0aa8dc4d.png",
      "home10.png": "e856d5db-bdce-4056-b1fb-dbedaf077f64.png",
      "home11.png": "9fbd02c2-cc32-4895-b08a-de6f513b0c4b.png",
      "home12.png": "72e5b334-abe7-470e-94e2-d2cad6a45146.png",
      "home13.png": "bf4817c3-2b57-4d2d-a9c1-9ce0ac9ddaf4.png",
      "home14.png": "cf5500ce-dd44-4b72-9dd2-87db19acf0e7.png",
      "home15.png": "ada453c6-9781-496f-8826-aa4e62b5b0bc.png",
      "food01.png": "731a190a-2783-4ab8-bbf7-4bbf201ac3d6.png",
      "food02.png": "985bc7ac-8366-4ee5-b244-eb0e70f1ec59.png",
      "food03.png": "95c16d5f-6cb7-4e4f-8d8e-df231096d298.png",
      "food04.png": "57481eb0-b462-454d-b02d-d2c671b69dcc.png",
      "food05.png": "dc53cd68-9b3c-41c9-b831-f47971e78174.png",
      "food06.png": "f957c3a3-bdbf-4b8f-a582-5406c89b3f34.png",
      "food07.png": "5cdd709f-e267-47c1-8a97-1c6ddd5c97d9.png",
      "food08.png": "1b89fbfc-28ae-4ea4-8015-3126ed476372.png",
      "food09.png": "54526e4a-873a-481a-ba80-077c851546b1.png",
      "food10.png": "c5538644-b333-4b98-91ac-3cb384bbedaf.png",
      "food11.png": "af605335-e6c3-4a47-9340-7903d8426491.png",
      "food12.png": "6edd0e38-f2d3-430d-8a96-3965647de74a.png",
      "food13.png": "a0c4c2e8-3303-47da-8f55-300961a61d70.png",
      "food14.png": "df89d9fd-7382-41db-8a39-b4eb0e421afc.png",
      "food15.png": "0157d4e5-3348-4b42-83ba-c072fb851c58.png",
      "food16.png": "5ac1f756-ae76-4754-bed8-09bad521f23d.png",
      "food17.png": "83ca5e2a-9025-461d-a7b9-71cdb6a409ee.png",
      "food18.png": "9e2f08fa-b33e-4c05-aea2-ca43e48414de.png",
      "food19.png": "5a552b53-05f3-4bdb-899c-c7c7db034e8a.png",
      "food20.png": "60d1a103-ba11-4589-b46f-06489edc8558.png",
      "food21.png": "8ab93ed3-a5a7-453c-8f4f-2a8f3a7e7e7f.png",
      "food22.png": "43624f2f-db35-4f30-80d9-34a20e29c96d.png",
      "food23.png": "31c26491-f6dc-4fea-96fa-2419dc2ac632.png",
      "food24.png": "42be4a9b-0b81-4485-816b-4efbbd19d47a.png",
      "food25.png": "236c8925-8044-4f58-99d9-e0d7766ea10f.png",
      "winning.wav": "09a7f792-4e1a-4627-80ed-6e9cbb5d7e2e.wav",
      "chicken.png": "b46c04ce-94b2-4b66-8e77-1623e3d56a9b.png",
      "cow.png": "c8f9a3fc-0dd0-4863-af68-6a07d61a645b.png",
      "elephant.png": "4ebbdfff-6a4a-43fe-b00c-94c967537595.png",
      "horse.png": "b16f58b6-3ccf-4515-a9b6-1c89d4fde66b.png",
      "monkey.png": "53e648a6-3d72-48c6-b904-c8e003e7703f.png",
      "pig.png": "8084722f-79ed-4552-b65b-7bfc8bbfb2e3.png",
      "sheep.png": "ab154132-fe00-4cd1-a3cb-5f2e170e2b48.png",
      "tiger.png": "52ca1274-4ecb-49e4-a3d7-6b90c0f26183.png",
      "chicken.wav": "5b705462-9b41-4667-aeec-e69dc38abd3b.wav",
      "cow.wav": "29cfab39-fa81-4ea3-bcf4-41f5fb6b2d11.wav",
      "elephant.wav": "f8b2d86d-7394-4a6f-b3e5-cacd81c90bdd.wav",
      "horse.wav": "b7bd92f3-b3e0-4f4b-9516-b6c4e054d3de.wav",
      "monkey.wav": "d7f91ec4-4704-4f3b-87a9-e67305d66f40.wav",
      "pig.wav": "3a18594c-855a-4413-8d6a-05f99cd35beb.wav",
      "sheep.wav": "e383cb91-1bd7-4f09-ab16-fb3991638f48.wav",
      "tiger.wav": "3e799f8a-505c-45b7-b756-40bf1dd3608b.wav"
    }
  },
  "game_id": 68,
  "created_at": "2021-08-11T15:24:38.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2021-08-11 15:25:07 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 15:26:04 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 16:54:59 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 16:58:15 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 17:04:58 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 17:17:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 18:11:24 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 18:21:35 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 18:52:27 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-08-11 18:55:45 +0000\",\"changed\":[],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"}]"
}]]></config>
</Javalab>
