<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**Create the `Dessert`(#e7e8ea) class by declaring instance variables for the specified attributes, and refactor the `Pie`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.**\r\n\r\n✅ **TO DO:** Write the `Dessert`(#e7e8ea) class, and refactor the `Pie`(#e7e8ea) class.\r\n\r\n1. In the `Dessert`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the flavor of a dessert\r\n   \r\n   * the price of a dessert\r\n\r\n2. Refactor the `Pie`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.\r\n\r\n3. In `FoodTruckRunner.java`(#e7e8ea):\r\n\r\n   **a.** Instantiate a `Dessert`(#e7e8ea) object and a `Pie`(#e7e8ea) object\r\n   \r\n   **b.** Print the instance variables for the `Dessert`(#e7e8ea) and `Pie`(#e7e8ea) objects to the console using `ClassInfo.getAttributes(nameOfObject)`(#e7e8ea)\r\n\r\n::: details [**🔦 What is `ClassInfo.getAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `ClassInfo.getAttributes()`(#e7e8ea) is a hidden support method that returns the instance variables in a class as a `String`(#e7e8ea). Call the method by passing an object as its argument, such as:\r\n\r\n```\r\nDog fido = new Dog();\r\nSystem.out.println(ClassInfo.getAttributes(fido));\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables, creating a subclass, and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/426d729f2ae56219ad67e8e1e1d9b663-image-1667490012557.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/inheritance",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Desserts and Pies",
    "bubble_choice_description": "Create the `Dessert` class by declaring instance variables for the specified attributes, and refactor the `Pie` class to be a subclass of the `Dessert` class.",
    "thumbnail_url": "https://images.code.org/9035a1faa42e4530234f38f0678f927a-pie.png",
    "encrypted_validation": "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\nty+xpZspWHZ0L/7FFxSqeC2ihSjg\n",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* ------------------------------------- TO DO -------------------------------------\n     * ✅ Instantiate Dessert and Pie objects, then print the instance variables for\n     * the Dessert and Pie objects to the console using ClassInfo.getAttributes().\n     * ---------------------------------------------------------------------------------\n     */\n\n\n    \n\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dessert.java": {
        "text": "/*\n * Represents a dessert that can be sold at a food truck\n */\npublic class Dessert {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Declare instance variables for the flavor and price of a dessert.\n   * -------------------------------------------------------------------\n   */\n\n\n\n  \n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Pie.java": {
        "text": "/*\n * Represents a pie that can be sold at a food truck\n * Pie is a type of Dessert\n */\npublic class Pie {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Refactor the Pie class to be a subclass of Dessert.\n   * -------------------------------------------------------------------\n   */\n\n  private String flavor;     // The flavor of a pie\n  private double price;      // The price of a pie\n  private int diameter;      // The diameter of a pie\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      }
    },
    "encrypted_exemplar_sources": "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\nURl4IK6woqcgxfCL98irme6OHYL4\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:31:27.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:31:27.915+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L6a_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L6a_2023\"},{\"changed_at\":\"2022-11-01 17:31:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:19:35 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:40:42 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:47:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:47:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:26:15 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:26:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:26:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:26:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:27:55 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:12 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:56 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:21:04 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
