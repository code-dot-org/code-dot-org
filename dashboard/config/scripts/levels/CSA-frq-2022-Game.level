<Javalab>
  <config><![CDATA[{
  "published": true,
  "game_id": 68,
  "created_at": "2023-06-20T15:04:37.000Z",
  "level_num": "custom",
  "user_id": 19026,
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Game FRQ\r\n\r\nThis question involves simulation of the play and scoring of a single-player video game. In the game, a player attempts to complete three levels. A level in the game is represented by the `Level` class. \r\n\r\n```\r\npublic class Level \r\n{ \r\n\t/** Returns true if the player reached the goal on this level and returns false otherwise */ \r\n    public boolean goalReached() \r\n    { /* implementation not shown */ } \r\n    \r\n    /** Returns the number of points (a positive integer) recorded for this level */ \r\n    public int getPoints() \r\n    { /* implementation not shown */ } \r\n    \r\n    // There may be instance variables, constructors, and methods that are not shown. \r\n}\r\n```\r\n\r\nPlay of the game is represented by the `Game` class. You will write two methods of the `Game` class. \r\n\r\n__Part A)__ Write the `getScore` method, which returns the score for the most recently played game. Each game consists of three levels. The score for the game is computed using the following helper methods. \r\n* The `isBonus` method of the `Game` class returns `true` if this is a bonus game and returns `false` otherwise. \r\n* The `goalReached` method of the `Level` class returns `true` if the goal has been reached on a particular level and returns `false` otherwise. \r\n* The `getPoints` method of the `Level` class returns the number of points recorded on a particular level. Whether or not recorded points are earned (included in the game score) depends on the rules of the game, which follow. \r\n\r\nThe score for the game is computed according to the following rules. \r\n* Level one points are earned only if the level one goal is reached. Level two points are earned only if both the level one and level two goals are reached. Level three points are earned only if the goals of all three levels are reached. \r\n* The score for the game is the sum of the points earned for levels one, two, and three. \r\n* If the game is a bonus game, the score for the game is tripled.\r\n\r\nThe following table shows some examples of game score calculations.\r\n\r\nComplete the `getScore` method\r\n\r\n<br>\r\n\r\n__Part B)__ Write the `playManyTimes` method, which simulates the play of `num` games and returns the highest game score earned. For example, if the four plays of the game that are simulated as a result of the method call `playManyTimes(4)` earn scores of `75`, `50`, `90`, and `20`, then the method should return `90`. \r\n\r\nPlay of the game is simulated by calling the helper method `play`. Note that if `play` is called only one time followed by multiple consecutive calls to `getScore`, each call to `getScore` will return the score earned in the single simulated play of the game. \r\n\r\nComplete the `playManyTimes` method. Assume that `getScore` works as intended, regardless of what you wrote in part (a). You must call `play` and `getScore` appropriately in order to receive full credit.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "encrypted_validation": "J76fobxWwZ1E6ozPBkPZkKanfs6VZq+wM8RZ1LwHPWx9DUl3Rf4gi9KiA3fW\nNrQ8vp63XsbHiIDCqUA7QcHMXw==\n",
    "start_sources": {
      "Level.java": {
        "text": "public class Level \n{ \n  /** Returns true if the player reached the goal on this level and returns false otherwise */ \n  public boolean goalReached() \n  { /* implementation not shown */ } \n  \n  /** Returns the number of points (a positive integer) recorded for this level */ \n  public int getPoints() \n  { /* implementation not shown */ } \n  \n  // There may be instance variables, constructors, and methods that are not shown. \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Game.java": {
        "text": "public class Game \n{ \n  private Level levelOne; \n  private Level levelTwo; \n  private Level levelThree; \n  \n  /** Postcondition: All instance variables have been initialized. \n  */ \n  public Game() \n  { /* implementation not shown */ } \n  \n  /** Returns true if this game is a bonus game and returns false otherwise */ \n  public boolean isBonus() \n  { /* implementation not shown */ } \n  \n  /** Simulates the play of this Game (consisting of three levels) and updates all relevant \n  * game data \n  */ \n  public void play() \n  { /* implementation not shown */ } \n  /** Returns the score earned in the most recently played game, as described in part (a) */ \n  \n  public int getScore() \n  { /* to be implemented in part (a) */ } \n  \n  /** Simulates the play of num games and returns the highest score earned, as \n  * described in part (b) \n  * Precondition: num > 0 \n  */ \n  public int playManyTimes(int num) \n  { /* to be implemented in part (b) */ } \n  // There may be instance variables, constructors, and methods that are not shown. \n  \n}",
        "isVisible": true,
        "tabOrder": 0
      }
    },
    "encrypted_exemplar_sources": "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\nWmD0t0WdfnOkgfJtUg==\n",
    "encrypted_examples": [

    ]
  },
  "audit_log": "[{\"changed_at\":\"2023-06-20 15:04:48 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 15:16:36 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 15:19:09 +0000\",\"changed\":[],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"},{\"changed_at\":\"2023-06-20 17:41:15 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":19026,\"changed_by_email\":\"brandon.spellman@code.org\"}]"
}]]></config>
</Javalab>
