<GamelabJr>
  <config><![CDATA[{
  "game_id": 64,
  "created_at": "2022-01-06T19:46:56.000Z",
  "level_num": "custom",
  "user_id": 9,
  "properties": {
    "skin": "gamelab",
    "show_debug_watch": "true",
    "embed": "false",
    "instructions_important": "true",
    "submittable": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "use_modal_function_editor": "true",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "true",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "hide_animation_mode": "false",
    "start_in_animation_tab": "false",
    "all_animations_single_frame": "true",
    "hide_view_data_button": "false",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "pause_animations_by_default": "false",
    "edit_code": "false",
    "helper_libraries": [
      "NativeSpriteLab"
    ],
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "hide_custom_blocks": "true",
    "use_default_sprites": "false",
    "auto_run_setup": "DRAW_LOOP",
    "parent_level_id": 21664,
    "long_instructions": "*Next let's add another \"draggable\" sprite for your pet to play with. This could be a toy or even a friend.*\r\n\r\n<div style=\"float:right\">\r\n\r\n![expandable](https://images.code.org/32a155295a8c64b4268483cb72f8b317-image-1620760940263.2021-05-11 14_28_58.gif)\r\n\r\n</div>\r\n\r\n## Do This:\r\n1. Make another new sprite.\r\n2. Choose a costume to represent your pet's toy or friend.\r\n3. (Optional) Change the size of your new sprite.\r\n4. Give the new sprite the \"being draggable\" behavior.",
    "show_type_hints": "true",
    "project_template_level_name": "Virtual Pet Template2022",
    "include_shared_functions": "false",
    "block_pool": "gamelab",
    "name_suffix": "2022",
    "encrypted": "false",
    "block_pools": [
      "GamelabJr"
    ],
    "mini_rubric": "false",
    "encrypted_examples": "wWlsbXmuoIqaEfDMznAtU4zntnB+oaGM0Y5HKtR1JmJ69dG4ySeLOTvLwopL\nV+cQWY49W1NFC1BFpSfwRHdKB6xW+xuPKYHhnWJ+lx73NjUdIOm8HwvMfmuX\njEeiLsoaOCN5aRmnSaHfLdgFXDZUVQ==\n",
    "teacher_markdown": "This lesson contains a **mini-project** called *Virtual Pet*. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \r\n\r\n* The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\r\n* These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \r\n* Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.\r\n",
    "hint_prompt_attempts_threshold": "1",
    "validation_enabled": "false",
    "validation_code": "if (!validationProps.successCriteria) {\r\n  validationProps.successCriteria = {\r\n    threeSprites: false,\r\n    uniqueCostumes: false,\r\n    hasPet: false,\r\n    hasTwoDraggable: false,\r\n    initialSpritesNotTouching: true\r\n  };\r\n}\r\n\r\n// Helper variables\r\nvar spriteIds = getSpriteIdsInUse();\r\nvar animations = getAnimationsInUse();\r\n\r\n\r\n//Helper Functions\r\nfunction drawRings(x,y){\r\n  push();\r\n  stroke(\"rgba(0,0,0,0.5)\");\r\n  noFill();\r\n  strokeWeight(3);\r\n  ellipse(x,y,Math.cos(World.frameCount/10)*30,Math.cos(World.frameCount/10)*30);\r\n  stroke(\"rgba(255,255,255,0.5)\");\r\n  noFill();\r\n  strokeWeight(3);\r\n  ellipse(x,y,Math.sin(World.frameCount/10)*30,Math.sin(World.frameCount/10)*30);\r\n  pop();\r\n}\r\nfunction drawHand(x, y) {\r\n  y+=5;\r\n  push();\r\n  var gray1=Math.cos(World.frameCount/10)*30;\r\n  var gray2=Math.sin(World.frameCount/10)*30+225;\r\n  //background(color);\r\n  noStroke();\r\n  fill(rgb(224, 224, 224));\r\n  //palm\r\n  shape(x-5.5,y+12,x+35.5,y+20,x+35.5,y+37,x-5.5,y+37);\r\n  //index finger\r\n  rect(x-5.5,y-5,10,30);\r\n  ellipse(x,y-5,10);\r\n  //middle\r\n  ellipse(x+10,y+15,10);\r\n  //ring\r\n  ellipse(x+20,y+17.5,10);\r\n  //pinky\r\n  ellipse(x+30,y+20,10);\r\n  //wrist\r\n  ellipse(x,y+37,10);\r\n  ellipse(x+30,y+37,10);\r\n  rect(x,y+32,30,15);\r\n  //thumb\r\n  shape(x-5.5,y+37,x-20.5,y+22,x-13.5,y+15,x-5.5,y+25);\r\n  ellipse(x-17,y+18.5,10);\r\n  stroke(rgb(96, 96, 96));\r\n  strokeWeight(3);\r\n  noFill();\r\n  //palm\r\n  line(x-5.5,y-5,x-5.5,y+25);\r\n  line(x+35,y+20,x+35,y+37);\r\n  //index finger\r\n  line(x+4.5,y-5,x+4.5,y+15);\r\n  arc(x,y-5,10,10,180,0);\r\n  //middle\r\n  arc(x+10,y+15,10,10,180,0);\r\n  //ring\r\n  arc(x+20,y+17.5,10,10,180,0);\r\n  //pinky\r\n  arc(x+30,y+20,10,10,180,0);\r\n  //wrist\r\n  arc(x,y+37,10,10,90,180);\r\n  arc(x+30,y+37,10,10,0,90);\r\n  line(x,y+42,x,y+47);\r\n  line(x+30,y+42,x+30,y+47);\r\n  line(x,y+47,x+30,y+47);\r\n  //thumb\r\n  line(x-5.5,y+37,x-20.5,y+22);\r\n  line(x-13.5,y+15,x-5.5,y+25);\r\n  arc(x-17,y+18.5,10,10,135,315);\r\n  pop();\r\n}\r\n\r\n// Check for at least 3 sprites\r\nif (spriteIds.length >= 3) {\r\n  validationProps.successCriteria.threeSprites = true;\r\n}\r\n\r\n// Check for all sprites having unique costumes\r\nif (spriteIds.length == animations.length) {\r\n  validationProps.successCriteria.uniqueCostumes = true;\r\n}\r\n\r\nvar numDraggable = 0;\r\nvar numNotDraggable = 0;\r\n\r\n// Check behavior for draggable\r\nfor (var i = 0; i < spriteIds.length; i++) {\r\n  var spriteId = spriteIds[i];\r\n\r\n  // checks if sprite is draggable\r\n  var behaviors = getBehaviorsForSpriteId(spriteId);\r\n  var draggable = behaviors.toString().includes(\"draggable\");\r\n\r\n  if (draggable) {\r\n    drawRings(getProp({ id: spriteId }, \"x\"),400-getProp({ id: spriteId }, \"y\"));\r\n    drawHand(getProp({ id: spriteId }, \"x\"),400-getProp({ id: spriteId }, \"y\"));\r\n    numDraggable++;\r\n  } else {\r\n    numNotDraggable++;\r\n  }\r\n}\r\n\r\n// Check for at least 1 non-draggable sprite\r\nif (numNotDraggable >= 1) {\r\n  validationProps.successCriteria.hasPet = true;\r\n}\r\n\r\n// Check for at least 2 draggable sprites\r\nif (numDraggable >= 2) {\r\n  validationProps.successCriteria.hasTwoDraggable = true;\r\n}\r\n\r\n// Checks to see if sprites are initially touching\r\nif (World.frameCount == 1) {\r\n  for (var i = 0; i < spriteIds.length; i++) {\r\n    var outer = spriteIds[i];\r\n\r\n    for (var j = i+1; j < spriteIds.length; j++) {\r\n      var inner = spriteIds[j];\r\n      \r\n      if (isTouchingSprite({ id: outer }, { id: inner })) {\r\n        validationProps.successCriteria.initialSpritesNotTouching = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Set success time if success\r\nif (validationProps.successCriteria.threeSprites &&\r\n    validationProps.successCriteria.uniqueCostumes &&\r\n    validationProps.successCriteria.hasPet &&\r\n    validationProps.successCriteria.hasTwoDraggable &&\r\n    validationProps.successCriteria.initialSpritesNotTouching &&\r\n    !validationProps.successTime)\r\n{\r\n  validationProps.successTime = World.frameCount;\r\n}\r\n\r\n// Delay fail time (so student can observe the wrong animation)\r\nvar failTime = 60;\r\n\r\nif(World.frameCount>failTime){\r\n\r\n  if (!validationProps.successCriteria.threeSprites) {\r\n    levelFailure(3, \"createAtLeastThreeSprites\");\r\n  } else if (!validationProps.successCriteria.uniqueCostumes) {\r\n    levelFailure(3, \"spritesNeedUniqueCostumes\");\r\n  } else if (!validationProps.successCriteria.hasPet) {\r\n    levelFailure(3, \"createNotDraggableSPrite\");\r\n  } else if (!validationProps.successCriteria.hasTwoDraggable) {\r\n    levelFailure(3, \"createTwoDraggableSprites\");\r\n  } else if (!validationProps.successCriteria.initialSpritesNotTouching) {\r\n    levelFailure(3, \"startingSpritesShouldNotTouch\");\r\n  } \r\n}\r\n\r\n// Pass 90 frames after success\r\nvar waitTime = 90;\r\nif (World.frameCount - validationProps.successTime >= waitTime && !mouseDown('left')) {\r\n  levelFailure(0, \"genericSuccess\");\r\n}\r\n\r\npush();\r\nstroke(\"white\");\r\nif (!validationProps.successTime) {\r\n  fill(rgb(118,102,160));\r\n  rect(0,390,(World.frameCount*400/failTime),10);\r\n} else {\r\n  fill(rgb(0,173,188));\r\n  rect(0,390,((World.frameCount-validationProps.successTime)*400/waitTime),10);\r\n}\r\npop();",
    "mini_toolbox": "false",
    "hide_pause_button": "false",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"vp_costumes\",\r\n  \"callout_text\": \"Click here to add new costumes to your project!\",\r\n  \"element_id\": \"#animationMode\",\r\n  \"on\": \"\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": false,\r\n    \"dropletPaletteCategory\": \"\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"left center\",\r\n    \"at\": \"right center\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "tts_long_instructions_override": "Next let's add another \"draggable\" sprite for your pet to play with. This could be a toy or even a friend.",
    "short_instructions": "Next let's add another \"draggable\" sprite for your pet to play with. This could be a toy or even a friend.",
    "instructions_icon": "dog",
    "soft_buttons": [
      "leftButton",
      "rightButton",
      "downButton",
      "upButton"
    ],
    "preload_asset_list": null,
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2022-01-06T19:46:56.279+00:00\",\"changed\":[\"cloned from \\\"Virtual Pet 6_2021\\\"\"],\"cloned_from\":\"Virtual Pet 6_2021\"}]",
  "level_concept_difficulty": {
    "sequencing": 4,
    "events": 1
  }
}]]></config>
  <blocks/>
</GamelabJr>