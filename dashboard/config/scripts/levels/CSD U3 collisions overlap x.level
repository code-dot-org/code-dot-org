<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-08-03T01:29:42.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "x": null,
      "y": null,
      "velocityX": null,
      "velocityY": null,
      "visible": null,
      "comment_Sprites": null,
      "ifBlock": null,
      "comment_Control": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "mathAbs": null,
      "mathRandom": null,
      "comment_Math": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "comment_Variables": null
    },
    "show_d_pad": "true",
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# Turtle Race\r\n\r\nThe turtle moves forward every time you press the left key.  When he touches the finish line, he should get a trophy.  The trophy will appear when `isTouchingX` is true.  Can you add code to make sure it is set to true when the turtle gets to the finish line?\r\n\r\n# Do This\r\n\r\nAdd code inside the draw loop to set the values of the variables that have been created for you.  Then, test your program by playing the game.\r\n\r\n\r\n[//]: #  (https://images.code.org/af2cffe952997258eb6b5573cfe9a29f-image-1470188585528.png)\r\n\r\n[//]: #  (https://images.code.org/d2eb9684743d45ef1e10ff4602936107-image-1470188590517.png)\r\n\r\n[//]: #  (https://images.code.org/98aee1ed11c7e00cd66718b4c232ab66-image-1470190293465.png)\r\n\r\n[//]: #  (https://images.code.org/fb129d34e3089763f35dfc8980d705ea-image-1470191576501.png)\r\n\r\n[//]: #  (https://images.code.org/3fc6da739dfd31b256618a560c12a076-image-1470191923150.png)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "false",
    "debugger_disabled": "false",
    "hide_animation_mode": "false",
    "pause_animations_by_default": "false",
    "start_animations": "{\n    \"orderedKeys\": [\n        \"finish\",\n        \"turtle\",\n        \"trophy\"\n    ],\n    \"propsByKey\": {\n        \"finish\": {\n            \"name\": \"finish\",\n            \"sourceUrl\": \"https://images.code.org/3fc6da739dfd31b256618a560c12a076-image-1470191923150.png\",\n            \"frameSize\": {\n                \"x\": 50,\n                \"y\": 150\n            },\n            \"frameCount\": 1,\n            \"frameDelay\": 2,\n            \"looping\": true\n        },\n        \"turtle\": {\n            \"name\": \"turtle\",\n            \"sourceUrl\": \"https://images.code.org/d2eb9684743d45ef1e10ff4602936107-image-1470188590517.png\",\n            \"frameSize\": {\n                \"x\": 100,\n                \"y\": 64\n            },\n            \"frameCount\": 1,\n            \"frameDelay\": 2,\n            \"looping\": true\n        },\n        \"trophy\": {\n            \"name\": \"trophy\",\n            \"sourceUrl\": \"https://images.code.org/fb129d34e3089763f35dfc8980d705ea-image-1470191576501.png\",\n            \"frameSize\": {\n                \"x\": 250,\n                \"y\": 272\n            },\n            \"frameCount\": 1,\n            \"frameDelay\": 2,\n            \"looping\": true\n        }\n    }\n}",
    "start_blocks": "// make the finish line sprite\r\nvar finish = createSprite(25, 200);\r\nfinish.setAnimation(\"finish\");\r\n\r\n// make the turtle sprite\r\nvar turtle = createSprite(350, 200);\r\nturtle.setAnimation(\"turtle\");\r\n\r\n// make the trophy sprite (invisible)\r\nvar trophy = createSprite(200,200);\r\ntrophy.setAnimation(\"trophy\");\r\ntrophy.visible = false;\r\n\r\n// create variables to help determine overlap\r\nvar distanceX;\r\nvar distanceXEdge1;\r\nvar distanceXEdge2;\r\n\r\nvar overlapX = false;\r\n\r\n\r\nfunction draw() {\r\n  drawBackground();\r\n  \r\n  // if it overlaps, show the trophy\r\n  if (overlapX) {\r\n    trophy.visible = true;\r\n  }\r\n  \r\n  if (keyDown(\"left\")) {\r\n    turtle.x -=1;\r\n  }\r\n  drawSprites();\r\n}\r\n\r\n\r\n// function to draw the background picture\r\nfunction drawBackground() {\r\n  background(\"green\");\r\n  strokeWeight(0);\r\n  fill(\"burlywood\");\r\n  rect(0, 100, 400, 200);\r\n  stroke(\"sienna\");\r\n  strokeWeight(15);\r\n  for (var i=15; i<400; i +=20) {\r\n    arc(i, 100, 15, 15, 180, 0);\r\n    arc(i, 300, 15, 15, 180, 0);\r\n  }\r\n}\r\n",
    "show_debug_watch": "true",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>