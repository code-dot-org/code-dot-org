<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `SocialMediaScene`(#e7e8ea) class displays the icon for the social media app with the most users.\r\n\r\nIt has instance variables for `twitter`(#e7e8ea), `facebook`(#e7e8ea), and `instagram`(#e7e8ea) to store the number of users for each app. The `createScene()`(#e7e8ea) method draws the icon for the social media app with the most users.\r\n\r\n##In SocialMediaScene.java:\r\n\r\nWrite the `getImage()`(#e7e8ea) method to return the icon for the social media app with the most users.\r\n\r\n   * If `twitter`(#e7e8ea) is greater than `facebook`(#e7e8ea) and `instagram`(#e7e8ea), return `\"twitter.png\"`(#e7e8ea).\r\n   \r\n   * If `facebook`(#e7e8ea) is greater than `twitter`(#e7e8ea) and `instagram`(#e7e8ea), return `\"facebook.png\"`(#e7e8ea).\r\n   \r\n   * If `instagram`(#e7e8ea) is greater than `facebook`(#e7e8ea) and `twitter`(#e7e8ea), return `\"instagram.png\"`(#e7e8ea).",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "starter_assets": {
      "twitter.png": "4b65ee47-ff9d-4a12-bc5b-21e2f531b73f.png",
      "facebook.png": "b0391ea8-beda-401d-baa2-24e68e43a1fa.png",
      "instagram.png": "c4b2142b-76c4-4294-bce4-1f06d5721da6.png"
    },
    "display_name": "Social Media",
    "bubble_choice_description": "Use nested if statements to determine which social media app had the most users and draw the icon for the app with the most users.",
    "thumbnail_url": "https://images.code.org/1a476aeaa9ef35f7c7383ef0273ce63f-image-1650574693750.png",
    "encrypted_exemplar_sources": "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\nsLIJClMM41tDU4MfEIQctwoxVQ==\n",
    "name_suffix": "_pilot-2022",
    "encrypted_validation": "9VyJ3o6j1u3WuWPshGH4odFBWV4JW+4WD1AXvpBzs8J3T4uC3U74hf/2p/KI\n1YfnBJOwgd/3xpFl19H84ixAf/OCIQAoHVCa+bhIyh6fPxAQb3OU2VKRVsn2\nbIM4jYyy4S9DaAEN7HycMsHuizg0RfB8HIrGi1IkaqyJQ9gJq4iG73VXrnsB\nEentoQJYgfnmPh4dBZQ2L6uHQ1KMnPg7e6gXSBqVgzAJJGJ1HMmb6VPsQBT0\n8A9ZSgra5yXJOJoV2RcBVvjqrODhmEpneoVXiJ0NRYFHZN5F2K9ITCkjDDYj\nlL6YCf2aba9RbPjTHzmfwcKDgdcMSjsD8Uv4oOeXPwado/YNEv2SUfK/Ng+p\nF0SpRGk5W/bzVmfbxdtgKOi+kzoe/EF/ml9ZIlLBU9Tw0OH9N/v0Z4YjV+3b\n24iPuVLBc+j2JecwiIfjiHSAzfdRKdPQXgwO7YS6+8sPJOTqOPq307Rqlnjz\n3ixqIIlDX+ZWEU4lcHxfXxKuD0TWJQdFMDteKPBqz2BYyZ1KffxoWVn20tUx\nTULnTsvcaNS5GG45YBOcTcOg16Axg6GFbP5Bmay0ELNxEDIJTtG2pQUAuScQ\nVJv/ojBwQLe+YKsidzrok6rZw6GvSRwppagjxZ8Ht7ubzVXPMY/uepkeB0cN\nyD83zSHJgGJAc5mohbZ3DP0hHktw/0IBwDsRewyt5vn3l9LTnbLczBG64a2l\nzMeU/cGB1+lK4C6tD7+8UUNuYiCDHhTIzQ+ecq9zCsdDfo9v4PbbYzhqeno9\nw0jD1YVVBJJUxQhTXtU1pgdGInYo1lJbmzj49WhBbeqxHSqxbENw4Vpf2ib0\n7J7K6e6NGbhz3m662IHHPfml3AGkkt/+Py/HGYpho2x+DmKQIaSKFrFoI4TS\nG/+w5Wy1USyT0GSC0l2nqZafbXuvNKMFPLqVBrlihAFTb/XedUOwJLUsktgj\n+8ATCoarE21Re63NhackCovHugcWyUvp9cItrqHD5zZlGZeL5W6tnmmBKV9M\nX2s/MjtgK2sCgN4TKZ+f6GNnEYk59Kv4DNXRLiwA1KZKFof7gBN4mptiq3kr\n/9Y5UZQa4tIJopIBnH1lbYY1YH7H5peqHWG07Mt0uhoINsK5Auqj+mB9FHnm\n64p1jO0SE0XLMt8CFiFSDuk0PVNAvLUk569f8tBrpnRLDlrYn0wdbrn0Bij0\nJeAgGlHukeB+vg+Ulgkfl6IYVsc+2SP2zbUsLHwPMIfcpOxxzzRwDcsr9qYM\n0QewsCN2CqbjUBYO+rzbEzAeHn61+/2QRgUiQCGuW+YmhTAcDgrL5KPh07Is\nb5G6gP28tAdgAPtxfAf+O9U0JRjD8K06moZH5oWVH4WjHRe09b3ONLklE5Zy\n1aH8P+LxZOoEjS4MrCOzQwfXYczw0Kgu6jhcJa5LRRNObx7Jf1PxVkbi/Dhh\n+6p6XQkt3z9Josdm2gg7i6hM84AfiQ+88YQAPVZiaU5mz6tKhvU+RzShheKL\nDduwtxKy7lp20FZU77jL/uJhbHW78GgEGC2Od5/yF3NjaRCYpazAuUUVKK0C\nIe35gpyRu6jaUMN2k8/2W1mOCDMF+pfmxxSHXHZ24Po2U3w5Ydb3kPF+GAEI\n0+Gmq5WnWMLQENy9VQVn33KHDXjtbKV0YTdE3qGyV35U3TnEH8cWKNeq2XE7\nqcR0/dfN/1gS+1ZFuO4PSX4z8lpLEBNYOD5mmy03Ml5UDbyNkec0uCJQGplX\nJWi2XqNuTST23ULChzLLTdCdAC/KSrD2IGNAvKLg+vYmaOzWU2M1Rx5/6xVQ\n23S/QmqCVLa1EzxU0SL3GP2Kymj7sUxdwd12fSStvkHDaxWwZeRyjfVysH3c\n9pCsQ89SHUQjdIloVLNCGxx2StaV1JlPJ/OhcKXTfJJhaw8gQ7T94CvcWx4s\nX42z/YtuMOgcFJ+6wu63TRfJMVg+2kCcIliegTLrqC3ohxCBau6ewSLFpqth\nxj14mlL4ISx2jHpWaA3Ya4/WtEnDiX4revorVXHf+6n/S5SIidRdapwyMiSy\nmAHSkAWqtPlG5rw51YtMWR65rAfZyVC6f3FMyOa+XnnfMqY0/7IdkAg9RIod\ngthcrA68r3/yQe0GDuq6pX6MzEb3rgp59Ojd5kpPAnwqH7AmqDX5EvYD+6r4\ndZo+/V/Wu76mubd6VGgdGMvyhCUF27LmCvO4fkXydfpH5ASE5IcZAvI/mlTl\n+aX8MzqlqNlpO6L4QCebmAa6l0HNLvPcaDuiydgNMWgSxzMB0kbSUwAUTlGI\nKYcUHg10Y9+Ur0JbTwKKWI24OGB5PfT6Q67v+Jr0AE4GuoI3+rdeavG8mu1k\n1Ec5Wx7UntZemfLRMwxYYvQoZNU95B7mZ0VbxcRwx2xM9g76ny8LB1IOFPTn\nceNEJdtHGSJaj14Udj3LocEKLQXw7cyLvy0DgECQu0eHNI0hl55Z198iJ0wV\nSxLITOZz6ZQbMPutRIZ0++JXYbaZvWCX15CfcFrlRH8gqmynqFk3EpOIoQ7x\nBwr7nRpj0rYHAQNQBCpzGe5Y867psAjtU7wIOmX2Rfmc3N+v9nH9gMI8DF2E\n2YVWcrRSbzIIvgnqnPMAQGi900CcJP0OvGkcL8zrLjFDmFaDeAyndNQ1w6e/\nW+v8yzerYX9NJktb4Yil6MhQU0AvFeLlKuCUe6Fa+7pX1hXO72SSsohsCoPo\nCdCtscbE5NPeE2k6RiHimURIMSkBf4ztfCrK5Kev7HqaR3MG9MS7cOqOsvnB\nyQVKXwG+vYnSqcKnIL0OL2Vm2h0QZeSmg4nwYg9rFfOlVcOI+XGXCxPN5nBb\nt11PT9cE3xiGk5imAlbrSLdjY6zXibsBKOMzZk5tRAjDaddZwIvhT+sbDN34\n7KvEnMbJD8x4LfUe2UV9/Omt2CXxybid+fNUnEfQQMi0LjSqkcNSrAQK9p3x\n0/0cNVdIB0DC8jPGzLcZlBUz7w4keUFe8gUJfdTRoZOdYshBItMMyAwEUOpY\nqsTHdauFk6dtnbOCCdHDqcujbpVGonG+JeeCjC6hLaRaqO2jfoDh6ydCnJLD\nlofxppP/C5xYe6ymkujqJ5O57Mdo/s+YHUFxJNqDCiAiJMHBeBcvZuq250H7\nx9kWw10etXZQw949vAQm2wxZLPNay/UUXjQgzk6mWxMKh2ZEYNPe8wCOyxKS\nCYDsG7xjRZOp0uorLBcIrLC0O3RRqCNZ2zuVpdJuFUedOtptMs44W36fe82G\n7NOLeRQ/aRh900LZN2yZjzxLA5QDTY0FTYGPrLkguFXi5iPTIbpc96eru/Nz\n+T085oquBZtOleVPJFtwPo0ulmhNT563LLFt8M4/2xRRGoL7+OpInpCf08bj\nz5NkQb92rvc=\n",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    SocialMediaScene myScene = new SocialMediaScene(1358, 10841, 4134);\n\n    myScene.createScene();\n\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true
      },
      "SocialMediaScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Represents a scene that illustrates\n * which social media app had the most users\n */\npublic class SocialMediaScene extends Scene {\n\n  private int twitter;     // The number of users on Twitter\n  private int facebook;    // The number of users on Facebook\n  private int instagram;   // The number of users on Instagram\n\n  /*\n   * Constructor to create a SocialMediaScene with the\n   * specified values for each social media app\n   */\n  public SocialMediaScene(int twitter, int facebook, int instagram) {\n    this.twitter = twitter;\n    this.facebook = facebook;\n    this.instagram = instagram;\n  }\n\n  /*\n   * Sets the number of users on Twitter\n   */\n  public void setTwitter(int newUsers) {\n    this.twitter = newUsers;\n  }\n\n  /*\n   * Sets the number of users on Facebook\n   */\n  public void setFacebook(int newUsers) {\n    this.facebook = newUsers;\n  }\n\n  /*\n   * Sets the number of users on Instagram\n   */\n  public void setInstagram(int newUsers) {\n    this.instagram = newUsers;\n  }\n\n  /*\n   * Returns the icon to draw for the social\n   * media app that has the most users\n   */\n  public String getImage() {\n    String image = \"\";\n    \n    // TO DO #1: Use nested if statements to determine which\n    // social media app had the most users and draw its icon.\n    \n\n    return image;\n  }\n\n  /*\n   * Creates the scene by displaying the icon\n   * for the social media app with the most users\n   */\n  public void createScene() {\n    String imageToDraw = getImage();\n    drawImage(imageToDraw, 50, 50, 200);\n  }\n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-08-23T20:31:58.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:31:58.636+00:00\",\"changed\":[\"cloned from \\\"CSA U4L3-L3c_2022\\\"\"],\"cloned_from\":\"CSA U4L3-L3c_2022\"},{\"changed_at\":\"2022-09-20 21:39:58 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 21:40:09 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 21:42:13 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:09:45 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:10:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:10:31 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:10:55 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-09-20 22:11:12 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
