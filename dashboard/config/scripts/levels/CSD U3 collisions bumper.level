<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-08-05T16:41:20.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "keyDown": null,
      "comment_GameLab": null,
      "var sprite = createSprite": null,
      "getDirection": null,
      "getSpeed": null,
      "setSpeedAndDirection": null,
      "bounce": null,
      "bounceOff": null,
      "collide": null,
      "displace": null,
      "setAnimation": null,
      "debug": null,
      "x": null,
      "y": null,
      "rotateToDirection": null,
      "velocityX": null,
      "velocityY": null,
      "comment_Sprites": null,
      "background": null,
      "comment_Drawing": null,
      "ifBlock": null,
      "comment_Control": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "randomNumber_min_max": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "comment_Math": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "comment_Variables": null
    },
    "show_d_pad": "true",
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# Bumper Cars\r\n\r\nThe bumper cars are almost ready, but they still don't bump into each other.  Can you choose the right method to make the cars behave like they do in the picture?\r\n\r\n# Do This\r\n\r\nUse `displace`, `collide`, `bounce`, or `bounceOff` to make the sprites interact in the right way.\r\n\r\n[//]: # (https://images.code.org/682567536f824cc930ebed5c1b936e5f-image-1470415888369.png)\r\n\r\n[//]: # (https://images.code.org/8a6915fe703f4fe097094cad1e754a6f-image-1470415888371.png)\r\n\r\n[//]: # (https://images.code.org/0b9f5ca88dc99fc08d472fdba87d6e32-image-1470417254115.png)\r\n\r\n[//]: # (https://images.code.org/2085e5de29f7170465b0c7bd5e6b56e9-image-1470417254116.png)",
    "submittable": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "text_mode_at_start": "false",
    "hide_view_data_button": "false",
    "debugger_disabled": "false",
    "hide_animation_mode": "false",
    "pause_animations_by_default": "false",
    "start_animations": "{\r\n    \"orderedKeys\": [\r\n        \"green_car\",\r\n        \"red_car\"\r\n    ],\r\n    \"propsByKey\": {\r\n        \"green_car\": {\r\n            \"name\": \"green_car\",\r\n            \"sourceUrl\": \"https://images.code.org/0b9f5ca88dc99fc08d472fdba87d6e32-image-1470417254115.png\",\r\n            \"frameSize\": {\r\n                \"x\": 60,\r\n                \"y\": 30\r\n            },\r\n            \"frameCount\": 1,\r\n            \"frameDelay\": 2,\r\n            \"looping\": true\r\n        },\r\n        \"red_car\": {\r\n            \"name\": \"red_car\",\r\n            \"sourceUrl\": \"https://images.code.org/2085e5de29f7170465b0c7bd5e6b56e9-image-1470417254116.png\",\r\n            \"frameSize\": {\r\n                \"x\": 60,\r\n                \"y\": 30\r\n            },\r\n            \"frameCount\": 1,\r\n            \"frameDelay\": 2,\r\n            \"looping\": true\r\n        }\r\n    }\r\n}",
    "start_blocks": "var greenCar = createSprite(100,100);\r\ngreenCar.setAnimation(\"green_car\");\r\ngreenCar.rotateToDirection = true;\r\ngreenCar.setSpeedAndDirection(5, 0);\r\nvar greenCarTurning = 0;\r\n\r\nvar redCar = createSprite(300,300);\r\nredCar.setAnimation(\"red_car\");\r\nredCar.rotateToDirection = true;\r\nredCar.setSpeedAndDirection(5, 0);\r\n\r\nfunction draw() {\r\n  background(\"gray\");\r\n  // make the green car move\r\n  greenCarTurning += randomNumber(0,1) * randomNumber(-1,1);\r\n  greenCarTurning = max(greenCarTurning, -4);\r\n  greenCarTurning = min(greenCarTurning, 4);\r\n  greenCar.setSpeedAndDirection(5, greenCar.getDirection() + greenCarTurning);\r\n  // make the red car move according to user input\r\n  if (keyDown(\"left\")) {\r\n    redCar.setSpeedAndDirection(5, redCar.getDirection() - 3);\r\n  }\r\n  if (keyDown(\"right\")) {\r\n    redCar.setSpeedAndDirection(5, redCar.getDirection() + 3);\r\n  }\r\n  // make sure the cars don't go off screen\r\n  greenCar.x = max(greenCar.x, 50);\r\n  greenCar.y = max(greenCar.y, 50);\r\n  greenCar.x = min(greenCar.x, 350);\r\n  greenCar.y = min(greenCar.y, 350);\r\n  redCar.x = max(redCar.x, 50);\r\n  redCar.y = max(redCar.y, 50);\r\n  redCar.x = min(redCar.x, 350);\r\n  redCar.y = min(redCar.y, 350);\r\n  drawSprites();\r\n}",
    "palette_category_at_start": "sprites",
    "show_debug_watch": "true",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>