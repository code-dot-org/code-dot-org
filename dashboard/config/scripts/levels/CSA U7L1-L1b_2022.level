<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-02-26T00:32:00.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "display_name": "Gamer Talk Show",
    "long_instructions": "Look at this project example. What are some of its characteristics and features?\r\n\r\n*While this is an example of a project for this unit, it is not representative of the only way you can approach or develop the project.*",
    "mini_rubric": "false",
    "bubble_choice_description": "An example project that creates a title sequence for a gamer's talk show.",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "starter_assets": {
      "mario.jpeg": "8526e1eb-b2b7-46a7-90b5-b7ad55499c38.jpeg",
      "playstation.jpeg": "dece9917-54ec-44e1-a0ce-1a06504d25bb.jpeg",
      "pokemon.jpeg": "3bcf8b0f-38fd-4bf8-b5c9-e06efc951d57.jpeg",
      "arcade.wav": "5e880bfa-2df9-4233-877a-7c09f23dd1ff.wav",
      "microphone.png": "e0e421aa-9f99-4f03-8b61-9402375e80b3.png"
    },
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class MyTheater {\n  public static void main(String[] args) throws FileNotFoundException {\n\n    GrayscaleImage grayscalePS = new GrayscaleImage(\"playstation.jpeg\");\n    grayscalePS.grayscale();\n    Scene intro = new Scene(\"Introducing\", grayscalePS);\n\n    ColorEditor charmander = new ColorEditor(\"pokemon.jpeg\");\n    charmander.keepRed();\n    Scene main = new SpecialScene(\"the Charmander and\", charmander, \"microphone.png\");\n\n    ColorEditor mario = new ColorEditor(\"mario.jpeg\");\n    mario.removeGreen();\n    Scene ending = new SpecialScene(\"Mario Bros Talk Show\", mario, \"microphone.png\");\n\n    Scene[] sequenceScenes = {intro, main, ending};\n\n    TitleSequence gamerShow = new TitleSequence(sequenceScenes, \"arcade.wav\");\n    gamerShow.playTitleSequence();\n    \n  }\n}",
        "isVisible": true
      },
      "TitleSequence.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class TitleSequence {\n\n  private Stage myStage = Theater.stage;    // the stage the scenes are played on\n  private Scene[] sequenceScenes;           // the array of scenes in the title sequence\n  private String audioFile;                 // the audio file for the sequence music\n\n  public TitleSequence(Scene[] sequenceScenes, String audioFile) {\n    this.sequenceScenes = sequenceScenes;\n    this.audioFile = audioFile;\n  }\n\n  /**\n   * Plays each scene in the array of scenes\n   */\n  public void playTitleSequence() throws FileNotFoundException {\n    myStage.playSound(audioFile);\n\n    int xPos = 30;\n    int yPos = 100;\n    \n    for (int index = 0; index < sequenceScenes.length; index++) {\n      sequenceScenes[index].playScene(xPos, yPos);\n      myStage.pause(0.5);\n\n      xPos += 20;\n      yPos += 100;\n    }\n\n    myStage.play();\n  }\n}",
        "isVisible": true
      },
      "Scene.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class Scene {\n\n  private String sceneTitle;\n  private Image background;\n  private Stage myStage = Theater.stage;\n\n  public Scene(String sceneTitle, Image background) {\n    this.sceneTitle = sceneTitle;\n    this.background = background;\n  }\n\n  public void setBackground(Image theImage) {\n    myStage.drawImage(theImage, 0, 0, myStage.getWidth(), myStage.getHeight(), 0);\n  }\n\n  public Image getBackground() {\n    return background;\n  }\n\n  public void setTitle(String text, int xPos, int yPos, int rotation) {\n    myStage.drawText(text, xPos, yPos, Color.WHITE, Font.SANS, FontStyle.BOLD, 30, rotation);\n  }\n\n  public void playScene(int xPos, int yPos) throws FileNotFoundException {\n    setBackground(background);\n    myStage.pause(0.5);\n    setTitle(sceneTitle, xPos, yPos, 0);\n  }\n}",
        "isVisible": true
      },
      "SpecialScene.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class SpecialScene extends Scene {\n\n  private Stage myStage = Theater.stage;\n  private String micImage;\n\n  public SpecialScene(String sceneTitle, Image background, String micImage) {\n    super(sceneTitle, background);\n    this.micImage = micImage;\n  }\n\n  private void drawMics(String micImage) throws FileNotFoundException {\n    drawMics(micImage, 0);\n  }\n\n  private void drawMics(String micImage, int rotation) throws FileNotFoundException{\n    for (int mics = 0; mics < 5; mics++) {\n      int randomX = (int)((Math.random() * 300) + 50);\n      int randomY = (int)((Math.random() * 300) + 50);\n      \n      for (int spins = 0; spins < 10; spins++) {\n        myStage.drawImage(micImage, randomX, randomY, 75, 75, rotation);\n        rotation += 30;\n        myStage.pause(0.1);\n      }\n      setBackground(super.getBackground());\n      myStage.pause(0.2);\n    }\n  }\n\n  public void playScene(int xPos, int yPos) throws FileNotFoundException {\n    drawMics(micImage, 0);\n    super.playScene(xPos, yPos);\n  }\n}",
        "isVisible": true
      },
      "ImageEffect.java": {
        "text": "import org.code.media.*;\n\npublic final class ImageEffect {\n\n\tpublic static Pixel[][] getPixels(Image theImage) {\n    int width = theImage.getWidth();\n    int height = theImage.getHeight();\n    Pixel[][] pixelArray = new Pixel[height][width];\n\n    for (int row = 0; row < height; row++) {\n      for (int col = 0; col < width; col++) {\n        pixelArray[row][col] = theImage.getPixel(col, row);\n      }\n    }\n\n    return pixelArray;\n  }\n  \n}",
        "isVisible": false
      },
      "ColorEditor.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class ColorEditor extends Image {\n  private Pixel[][] imagePixels;\n\n  public ColorEditor(String filename) throws FileNotFoundException {\n    super(filename);\n    imagePixels = ImageEffect.getPixels(this);\n  }\n\n  public void removeRed() {\n    for (Pixel[] pixelRow : imagePixels) {\n      for (Pixel pixel : pixelRow) {\n        pixel.setRed(0);\n      }\n    }\n  }\n\n  public void removeGreen() {\n    for (Pixel[] pixelRow : imagePixels) {\n      for (Pixel pixel : pixelRow) {\n        pixel.setGreen(0);\n      }\n    }\n  }\n\n  public void removeBlue() {\n    for (Pixel[] pixelRow : imagePixels) {\n      for (Pixel pixel : pixelRow) {\n        pixel.setGreen(0);\n      }\n    }\n  }\n\n  public void keepRed() {\n    for (Pixel[] pixelRow : imagePixels) {\n      for (Pixel pixel : pixelRow) {\n        pixel.setGreen(0);\n        pixel.setBlue(0);\n      }\n    }\n  }\n\n  public void keepGreen() {\n    for (Pixel[] pixelRow : imagePixels) {\n      for (Pixel pixel : pixelRow) {\n        pixel.setRed(0);\n        pixel.setBlue(0);\n      }\n    }\n  }\n\n  public void keepBlue() {\n    for (Pixel[] pixelRow : imagePixels) {\n      for (Pixel pixel : pixelRow) {\n        pixel.setRed(0);\n        pixel.setGreen(0);\n      }\n    }\n  }\n}",
        "isVisible": false
      },
      "GrayscaleImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\nimport java.io.FileNotFoundException;\n\npublic class GrayscaleImage extends Image {\n\n  private Pixel[][] imagePixels;\n\n  public GrayscaleImage(String filename) throws FileNotFoundException {\n    super(filename);\n    imagePixels = ImageEffect.getPixels(this);\n  }\n\n  public void grayscale() {\n    for (int row = 0; row < imagePixels.length; row++) {\n      for (int col = 0; col < imagePixels[0].length; col++) {\n        Pixel currentPixel = imagePixels[row][col];\n\n        int average = (int)((currentPixel.getRed() + currentPixel.getGreen() + currentPixel.getBlue()) / 3);\n\n        currentPixel.setRed(average);\n        currentPixel.setGreen(average);\n        currentPixel.setBlue(average);\n      }\n    }\n  }\n}",
        "isVisible": false
      }
    },
    "thumbnail_url": "https://images.code.org/26fc4440422ddec2a81b4a3534b4116f-image-1639769651987.jpeg",
    "name_suffix": "_2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-02-26T00:32:00.157+00:00\",\"changed\":[\"cloned from \\\"CSA U7L1-L1b\\\"\"],\"cloned_from\":\"CSA U7L1-L1b\"}]"
}]]></config>
</Javalab>
