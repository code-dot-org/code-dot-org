<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**An artist wants to sell their work on an app, and the software engineer has created a `Painting`(#e7e8ea) class to represent the paintings.**\r\n\r\n✅ **TO DO:** Write a no-argument constructor the `Painting`(#e7e8ea) class and instantiate a `Painting`(#e7e8ea) object.\r\n\r\n1. In the `Painting`(#e7e8ea) class, write a no-argument constructor to assign default values to the instance variables:\r\n\r\n   **(a)** Assign a default name to the instance variable `title`(#e7e8ea), such as `\"new painting\"`(#e7e8ea)\r\n\r\n   **(b)** Assign a default value to the instance variable `year`(#e7e8ea), such as `2022`(#e7e8ea)\r\n\r\n2. In `ArtRunner.java`(#e7e8ea):\r\n\r\n   **(a)** Instantiate a `Painting`(#e7e8ea) object\r\n   \r\n   **(b)** Print the constructor for the `Painting`(#e7e8ea) object to the console using `ClassInfo.getConstructors(nameOfObject)`(#e7e8ea)\r\n   \r\n   **(c)** Print the values assigned to the instance variables for the `Painting`(#e7e8ea) object to the console by calling the `printPaintingInfo()`(#e7e8ea) method\r\n   \r\n\r\n💡 **TIP:** Check out **Help & Tips** tab ⬆️ for help with writing a no-argument constructor and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/36424c3e317d0b3335dfa77288c81286-image-1667835803428.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/no-argument-constructors",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "The Painting Class",
    "bubble_choice_description": "An artist wants to sell their work on an app, and the software engineer has created a `Painting` class to represent the paintings.",
    "thumbnail_url": "https://images.code.org/74d20a08c9c353e657eadf25651b413f-artwork.png",
    "encrypted_validation": "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\nGCcSGnMQY0FGExZHgLp+fYocFW+XQw==\n",
    "start_sources": {
      "ArtRunner.java": {
        "text": "public class ArtRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate a Painting object. Print the constructor to the console using\n     * ClassInfo.getConstructors(nameOfObject), and print the values assigned to the\n     * instance variables using the Painting class printPaintingInfo() method.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Painting.java": {
        "text": "/*\n * Represents a painting\n */\npublic class Painting {\n\n  private String title;    // The title of a painting\n  private int year;        // The year a painting was created\n\n  /* ----------------------------------- TO DO -----------------------------------\n   * ✅ Write a no-argument constructor to assign default values to the\n   * title and year instance variables.\n   * -----------------------------------------------------------------------------\n   */\n\n\n\n\n\n  \n\n  /*\n   * Prints the title of the painting and\n   * the year the painting was created\n   */\n  public void printPaintingInfo() {\n    System.out.println(\"Title: \" + title);\n    System.out.println(\"Year: \" + year);\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n\n  public static String getConstructors(Object testObject) {\n    Class objectClass = testObject.getClass();\n    String className = objectClass.getSimpleName();\n    Constructor[] objectConstructors = objectClass.getDeclaredConstructors();\n    \n    ArrayList<String> constructorsList = convertToList(Arrays.toString(objectConstructors));\n\n    String heading = \"\\n------------------------------\\n\";\n    String result = className + \" Constructors \" + heading;\n\n    for (String current : constructorsList) {\n      result += current + \"\\n\";\n    }\n    \n    return result;\n  }\n\n  public static String getValue(List<String> output, String lineToFind) {\n    String outputText = \"\";\n    String valueResult = \"\";\n\n    for (int index = 0; index < output.size(); index++) {\n      String current = output.get(index);\n      \n      if (current.indexOf(lineToFind) >= 0) {\n        outputText = current;\n        valueResult = outputText.substring(lineToFind.length());\n      }\n    }\n    \n    return valueResult.trim();\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "+aK8w/41NT/vNOGYR6Xe1FMCV2vXRrQxzrlmWNN35wMdqpAFxfwo4XCD5NcR\nSRaStAQ/zbRRJEWp4A9+JGuUSVAU2OUnwx9KOHZsOvIolh3RpxDXNxKV5rd2\noVdbNaUDOxI9dd7QUwwJ5P3poXXcGsdBZXB1Map3Yl3vvVK/OOO+vvMlOEPF\n5pWk9r394bC3IoLWK0UIrklrOOAfeM/DruWjCrbPxwF9N8TEjVt492rOxER7\nJ2mkLjO7IOIwB77THBIbkKoD6TD08FyRFISMXQROfOpoR1RB2yMVSh8Q6/sV\nTMFcvtzhVqDWqLyxTxI4c095ydzWXPvh+yObqQi5A59vK5XKIzreikIg+nre\nTuUTnCb5kH5BAwPXxG8YB9dJy9SuMNrUOITxQjT1O2rS6A9OMnBOCJbTcHJ5\nGeEQAZ7QwU56vrOmkve8tC3zYfpi4p9gDkTEtVFnzH8t+aXF5Cd47XIOdVJ+\nFpX4BOw9LtMt7DxWpLx7Iz6fwcOe241nJcx8fYrhxyxZ4DFZ2m4JtBSATIXf\nJOxoIWY69P7sZVYiV75eQf9S1LYtQp4FPJwYK2Rc7uASQMV9V2xTcRltpKem\ndRX7RxyaC14N2lpLI9rcH6x/czNtHQGCaE59+6BRU1psoVqV1/9xAN0hDd5S\nV3+5ypTxIdpjW9QumIeuFf+DjioOA4RzvsUVGFtz/uTZsvS/BVrJbY4jBXCx\nKV7QTREY+ws4y3V6FuGTvy6qPUYneuyfwc2/CuKflROPaLOwnOEj1sUJ1O8M\no3uHWu7zuD60CKf/HLp9/rGEEFFkl26/1F1UJaBpV5SjTnL+vLyD2u968cYX\nnqHGB5ZbgOpNFPrYjzEW5gjmAt5GwSpm+T/nQ6NsYLl68gyBwKvav6P5cumX\nuF6GcZ4lZhVde28TK4Shxti69e89fMT7ShOKcnI6Qzn1q9wM8i5Ye70o8+pz\nm0G3u425B5i02oCq8GIz3e3BkF4J04jQhp08gWF9cYx37gSloUYfpF75KGEK\niVZTPllvRJ7Tone9NUHbm+E/WEZSKTxX04EmfI9alVFGLiV6aAK4h4hveNcs\n3B4oaMtbFXxYORClGryHo2GruzS8sP/LlutddDtdXGq2APpZjcbPjjIxEwiW\nbuf6DHzCxKG2QJu2tM6zodVrl480n1+Mxg/XwY/OtHdl3yFtgucHcxs1r58C\nYosIitPTXtNzF5YPwRAkJyUUn2r6egl3KRse/LfpNDgeAH1iQtG8BJAKuP1Y\nQG92QVUpd8NbKTVRpMkB8uZFQbaqM1qHlIRhgDXlK070SkEg+OwrCW5sgYRQ\n/2bMTnBJosormkMBIdM5y+oXiJnvaLcqdWtAeQhO9xTLFxzCKAQKmDdlHi/G\nR2pIjQGCmro/t0Jo4Tm0eH1xmFJp2Y2YeAhU5AxxqfyC+Nt+jRLgLdM7+wTi\n+dEBGIdqt9O0jKV7v8JVMjL3fAd7iMDHtwUox+9U2VB/LdnWMnScpGXWScRg\n5CQLBtTUiKzqnupC93R4A92+fhW7Md7fb13VVNbx5/F/VBTAJFEdK3vVXh60\nq7Q7Nh9UqwFCWW5TFWcRjBu9xFLoUF6MXpYNVDnzBg2+7na4j/PTcdWkMz2x\n3+1QEQxDqO65rS+tutg40TxT7Tnb6OGvxbo57adEDAmqgI7TjY3HVDabWJGc\n2mq1ix1nrNTcO8j26lyqbr3o5mDkMqglIFr1r2j8fxftCP0aFmquQMgUcjIA\nILY7Kxd3Xi/S2U3JHwyPiCiFYnfoQSGf0nWKT/vq+RvVT4wIGnZTu1wTAbkI\nEoTrQBi7oLznk8y2PCgXjcglSIeHNv55pUi6CadMp1vkWJDGUOXcJAQ0Dl93\n+/ppleH6n4hDOYAKKG049Mbgq3/X6rXcj2zQSFbaV6XKCycrME9nPO6dr92u\n0bjY3Rn7e3Ul5h5qvIlWwa6++KYm1X0SjalnXLhhKXLcw2/kpLayTCwsP0yT\nVKBszKuKVaiMIme9WPzI7POCEe0g0+8uhkp3f9CglvAaAQJ+gnmqTUJuz1AF\n5HTFJtj1isF32vccT44JrRwwAvKiTsxj1c4aAVVUsoiQSxLo6n8WkWXYwH5k\neHVRcliOP38ZoffvTP3MnfKAkMZ8OfOfRDNhpHwJmH3+B/J9T/HHJFN41qsZ\nK9RQq4DinCHvBKi6xH+NAXiLrfiFOc/h2CoZHSB88LWiA+opgEfn/2BopUz2\nMQa2uIJbDicHLLL+6lJaQoYzOPjKA6LaRL23zBh95M7nZWvwvIdFTgPOfwF0\nEUDr0i+OoCgrY0YngPs5NiD1X5VsUuZjV220wjZVKv/f/46kYqnBf0Ln3goj\ndq2GTnbAazQJAEDbCq6VV3SorvNCMLCx0bQ7hNsCnPuMvJ2XcvxjKYkAaNFI\nBShysEm28h+oKJTMApGmT6cJYXTNGIa6ncjrA+x9tNMvshzcrexHujLvMuHh\nSMfieiHb3HGXeRrr3KDpEOmsdS5cSOW0brZdT4n1GFtIZsNethILfHJe8ABM\n3F3jIglfcWHNKDKBDYnjvETC9E1KraVdVkXveLJWNQ6HrWi7SvQZu50q1tga\nLCLx9ZBt2raydy0QUCPtNPNHplkSr+oqepkeZdHWyYrpxHtf4y6bYZYFNY2E\nZeMw2f3tM0hjcnG/wLU+Hr8jZNkrSefwoDk9nLav0izAGYJmpE0UoupQwsLK\nCjVvnzasEsWqaIgcXXNC06xRUprNSzvL3h5CCRVMsOEn8z6EEh9sOuUaJbCn\nkrHnP9MJQF8o1392PEzvZX8v34624AtUBtn0siBwDWSSh4j6RgD3ACUs7KcK\nkyfQJ2H0MJwRwFD3CG2AnignXH94Lu9jeMP2FKSVwos/L0i3QQ6Xcv0KYFp+\n5N4iaBAeoedX73WNrRp1L33H99PLrsEXeZwT7AjK0cm3KExaIPmH7CrzPoR6\n6mZH5nYJMOXcZH4EbZD5AAg7Uvr9EhjsjWqM54NK4XzJak87bi+bBH0WXW1b\n32ZmwyY2fPeI2kH4PJ4SzgdzNNIpZUFoRBPOSlno5hRfTgON0c8IXhT0SIh8\naQxI4iW6HS/j6oLp792ivnRNl6Fx04nbwUAl2KwYaQkF6XfR6s45d39vy+vz\nv1Yyvhg0cPNZYVgoi35r+RWIZJl4vXeA5hHhlN1ueCfSJtP3JAVbivYCYRO/\nHsZ5TylHEFhsSFKswyl8Kz7uW4EElHxPu+b1uzTMru1ua5xHxId+3/Q+TLpr\n2Dewj4RUtJIV06b3pXxfHHyB4aaHVDTWXvSBE2jWH/WrfzzxVdqGI3thv1Vp\nbzial+fiM0vPgW8+3xaIq1vAUz8M6Vkhi1IWn/zKXo2Nc3N68aH8wx0iupYg\n3pM0xSZAOzfYz4HP6DhO9e1Gh6dJJtwzhWN3f/sRrI7Pm4z4EyZSuvmyU7dS\n/kfxesBs1NTFfLOb8dxWX8Pb9GBbZ2QhYPVq5efYJ62LpZb1tnmf9rlrXLE/\n3ieltM+zBy0AUftyxZP970THC0LgDd+N/tWQYDAMzOeSuZXqQSQE1tCgq5DV\nZe9U5qXC5zv5I0CUI0/c9v3D+aiIDIugCjIx0mJBv58eI/Hp5/AtzUXm0Lum\nzbT0lDJxjzpCkhqCsEr28uQ8g8Lm+zuQGhXqDxycVB9KE+ocVBKb/0+LAb5q\nYt5LYdfkRpWO/SGi7Bt/8il/8S1bLg2IvA4S24P+TQsExecvrJPwclyGodRd\nqcvG52wFcJA1ww33VjmXoj6DOnNb6/LTBnv7+rN6Td30GajBB6bhU/zIjbll\ngOFZ5uUmQgRFBbDMXzAicFhc5GKkrRbk6abwErrFZyzbMQtYGAsxX7RevIUT\nNUaLbkjOfDPKRFfN4dDbYCfPxIMOaNG6noiyJqaQ+dyADWKGgHTeeVK1TTPy\nm0jS0PP113lIt6lXzvjtzywyJ5jRLU0wXVFsyAGABSEL1T4vIWbaZ0EvAbWh\nRyeRlMyWuZdnfyDLQwzDimMQhsnLId6IVfkst141wVOX0nEJLMykiVbObUmA\nCfnBihfRJEPw1OZupowOsyjJjyUW6cwnJHiboL40hg3U90cyeaqUv2UdOHbp\n9xWsDlv5K9zgJuQlzc2WZkuX+HrurCeKf0Nc3+vn9meyHtqnIEBI61WvOkdB\neZbh75VDmeL8nuMdn/2m2plGSDhTWI7+wgSlF4VA1wuPMH59vPu6fvvkdrTa\negxGi8Sz0u3hGe5hhIPDSmB8KQ4kcnac2NIQjH5UnvsbXF0eIp1/h9b0KQKd\nww6eR/eATSuj6wDZMWM/hajR9e1ELxchYMhCkqTmZnve1urLKl4HqN+3SDLW\nHEPNoGBXjV2WFpllF9OnhUH7BAevnUm15FyJ6JmWep/nB1HXOSI/Y8WX3udf\nCtbGULgpJVd83mqRi7atPGDdtpcYk37IkzH1G57olNC1ngpIOsGf6DyhpFo5\nbUQez0iR1wad0NrHMIsFAQ7VhfaBf4VAapgdwHfkPZE5vG2o3s2pKaP6SDGV\nyx9zjqzYabV2Wd/mFhMLwTUkHIbU6dlTptmdVeUHBgEw5af+blCx1+e437Nw\n8byr+64ZhJKkR0xYZuB3JIfKYhPz+vIwadNtd1y3KKMXSWBWZkZTcXahd02Y\n+22h8ov60PXbW06zt6LuNm4LoItVhtq8anEYPepPnWu+iIA+1v3rfzZyq43k\ny4S55sLBrAGEQ6XKOF71n87HFiiULpbq+YUB5vtVW104ta935ReF6kyiA1C8\nG27PjCWTLpphpzNeiuAkIfVFG4RnmOUmdCUiZWBxfbS8/aaPkZPhzo43OZVw\nc1DVCT7oPIWvyPavqUzqb/wziGcJdIMlzGIzVEX6rhPBvP+YGYZR/1eC0VQD\nyJefAdWWV3aNwfUaYJ6aXUUQjaKBcJbd3JmFekW1gU6xiZAafl5rFe8HXjQQ\nn32iyJY12yptY5CskhF6NuBqlU6zORg5NsC1qL7WtgDMXE4xmCM7z9/k9OOW\nTuIrhkykjCZZGsjc0uytK8xjapvgiAOQCT07W+nI1Nw7eBAiSiSkQikQG5Ec\n64F6vxPMLwBmOzi0b8Hcl8gUOs/sYfrh1FCp0qbWmm2KwyDedKn6/9pv+jho\n5yCsFPmUK2j9n/nx0pSSbfqU0wxdfqJfX4ScsoJtjeI8VkBaVQQuAquuSd6m\nTKHuN73oKAAJClXkvASbGqb2aU6E1cTDVXyw7aJGGEa43yGg3/JGzxpMl2lF\na6abPZXO0csyNooGnl5X0sLwVJP3Ct+wH00caxzaVONcoqIlkLpliM1ZSslf\nwZK82AFkVNJZz1YMPhXZHlkGb9O2PoF8wbfcdS6ZlyguahsA/mf70XUnPe4o\nSbnaxeuoFsn0LNRj9E85RqdPLMvwgeBBNNi5GuvfTKuvSxph7JdMqbKb6o4D\nTuwF3W/T0ModTTInwbwY6xMHLsqawCI3iynafnKMRpt9ZD1Q/J8iC9m7yCjO\n9Tq7zKt9Whtr6U6ctO9j3O1QPW4GNMPjYsTDgnzuKFs+D2JEkW4tZe94H57+\nOC4tNK5brLQHRMePcVIMOVI8cFZGPbuSqb8joeTWoqvczuXPHLx7ek1mJF7x\nvbw4/jXeq8LS8blRUvhBGjmkuLzTCstyUs0AOOH8CHyg2cl/5wUm4IcOU/Nm\nJOoJbFNge/BTKFWZznyCznTt6GWrQAK5Pgaa5OWkDd5cWN1UT8mZ7TVUARiS\ncJ3cKjqkyM/8hF1pNf+9LyTivZvtLRua4yBOZDlxAf1nXNj9+rmiPfn4Vi4p\ni1rHnE7z9YI/RpFaURzkPIjTlMqdbB/Bg8EF74g4+ygJvNEvZPAwac7ZB3yf\noyt/Fny7pEn7mJl7bPqJYfx1N8KWca/ZkvXlSOUW1yl1kR3wydRQOsEeJPIw\nah1MXGN5y1V45BCqBR+foYfpfCTSscGltly8DWvjc5s3aCvCWKUiPE+z+OlF\njk+X+BtlKlRBNsF73zqaGsqGxZHPtYNeWivCI89KtIf2f57G8dMp0VxYXzqL\nMY7dUnNUuz3lwribGDy26M8Ofn/DbSUvUrvSo1tAOk/FQTIhCBY5SZJP8KdG\nsPFGCfL9byOUFDMqgrXn0SXhmd4hpkFfEi0rModlMvGyolknZK+NMaCTlOw7\n2gbGOzP+TnXC3OeR+xnLxJyJWxmfYNe0x8392uH660MxW9dlyl9yzfALlTjs\nzlhwvcfR94RRxZe4j3M34uDcCTZDrPu+5YKQtx1FoNAKSLNwKZ2DkcUWgros\nkZMaCj9TceGyl2LWvrXMYE2CpfNoZKDdFnytDUiB7td1dBcDuyT0IENIsCsN\nXqgyFL9sB3iXwI0BGpKhh1AZ/OJOtP4acb0MEUPT16KZ10UTSR7SwxO1PxP/\nOKzL5K2WqcVVqr0n8VLOguCU83uq6g/IWBr4YZXEaZ6v84GlF2dCrxjjMzya\nZbfG9djUO4xOGVd283eW+SSS2N/MyRuxKFQDX1ePh3a/YLuVPjNAksVjTbQs\nuuCINNKolS3YmZ3XP/iH6u1mZuOjE5UFrf6/fgS6AHqEtBs1ilcEixpOPzfZ\n/zRHoFNyekCXIPr43llJnIP8H0dow6/xHQ7tz/I+QnwrQ91LKpHl3CIuChrX\nY6NHrR2QSQBIdCOfabXEfjd8m+Cphxw7OTkmWIxkEMVQPWzdpTmySKJTVzch\n0wCN1vEBeacn6rvJFzLG1KAJ8kHsRdA4HqmiI5yyxQILHDBVgbzakrUCRBk8\nyPCCO7lZR9D0tDxJEU0VeILaHA54S3Eg45G88fZN6/YRG0qJI3ZoxN6M7Oyd\ne/JGcL/p8hIOxBFq3LUofOex61urnuJ6zvdQqTuzZmENSrqgab+IJuG22YXC\nd1nT7iiGlH/k/GDnshYs1ms6bGQirtpOs03BhxXGtSfj+kFmJI10HtD6Fmh8\nZmn2dMePykgrqMNO9Nr/3btookY6Q9wwlCvsSjAOS3IiprG+a0NMa0bk6c8i\ntf0F9YyeQl7PIU1xAAT6sp+LCf7CZ/AagJ513P8Yc7I1pA0RtV0HqrMNO1Iq\neKe9o+7IjQAy2ErStb4B0I9vUM6YV8+emPhd2Y1hKOg1ccUCdknqxlysGrZy\npe6wFTHINUmzslIpabQVkvn3arxsUru326l63pBFu2675UBLzoM6EOU9OzgU\nFW+riiXIzMM9E6LKZRDl+5Q356psUR0rXM8jb3S/oc2nYUUwLrNB2fZOeowj\nqXC7aCPw5AmM6p30hL72CxhDMioDbyP+xXIHYIQM3+TQt3CBY23B54rwq5Hr\nqRCoj9WS33FH/1Yrsv3oEWLcWKpc1+7DesC31n/XhzGlw7st4Dme9oUacPJj\nAHNVjvZmaaiD9mgtT6sTao14OxBLXxmBTwGDH1L+wctegTUbQZ19Hp44c81H\nA86pSmRXoryeKy1mgwrzyrJ3op7023a5uoNVc24LUK3+\n"
  },
  "game_id": 68,
  "created_at": "2022-11-03T19:21:06.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-03T19:21:06.801+00:00\",\"changed\":[\"cloned from \\\"CSA U2L2-L3b_2023\\\"\"],\"cloned_from\":\"CSA U2L2-L3b_2023\"},{\"changed_at\":\"2022-11-03 19:21:08 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:23:02 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:42:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:42:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:43:25 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:44:05 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:44:19 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
