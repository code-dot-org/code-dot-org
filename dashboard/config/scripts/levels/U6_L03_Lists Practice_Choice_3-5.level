<Applab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "skin": "applab",
    "validation_enabled": "true",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "stopSound": null,
      "playSpeech": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "getProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "rgb": null,
      "open": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "getColumn": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "onRecordEvent": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "getPrediction": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "timedLoop": null,
      "stopTimedLoop": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "moduloOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "mathPow": null,
      "mathSqrt": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "console.clear": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "declareAssign_list_123": null,
      "accessListItem": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "join": null,
      "declareAssign_object": null,
      "getValue": null,
      "addPair": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null,
      "pinMode": null,
      "digitalWrite": null,
      "digitalRead": null,
      "analogWrite": null,
      "analogRead": null,
      "boardConnected": null,
      "var myLed = createLed": null,
      "var myButton = createButton": null,
      "var mySensor = createCapacitiveTouchSensor": null,
      "__.on": null,
      "__.off": null,
      "__.toggle": null,
      "__.blink": null,
      "__.pulse": null,
      "colorLeds[0].on": null,
      "colorLeds[0].off": null,
      "colorLeds[0].toggle": null,
      "colorLeds[0].blink": null,
      "colorLeds[0].pulse": null,
      "stop": null,
      "color": null,
      "intensity": null,
      "led.on": null,
      "led.off": null,
      "led.blink": null,
      "led.toggle": null,
      "led.pulse": null,
      "buzzer.frequency": null,
      "buzzer.note": null,
      "buzzer.stop": null,
      "buzzer.playNotes": null,
      "buzzer.playSong": null,
      "accelerometer.getOrientation": null,
      "accelerometer.getAcceleration": null,
      "isPressed": null,
      "holdtime": null,
      "soundSensor.value": null,
      "soundSensor.getAveragedValue": null,
      "soundSensor.setScale": null,
      "soundSensor.threshold": null,
      "lightSensor.value": null,
      "lightSensor.getAveragedValue": null,
      "lightSensor.setScale": null,
      "lightSensor.threshold": null,
      "tempSensor.F": null,
      "tempSensor.C": null,
      "toggleSwitch.isOpen": null,
      "onBoardEvent": null,
      "ledScreen.on": null,
      "ledScreen.off": null,
      "ledScreen.toggle": null,
      "ledScreen.display": null,
      "ledScreen.clear": null,
      "ledScreen.scrollNumber": null,
      "ledScreen.scrollString": null,
      "compass.getHeading": null
    },
    "embed": "false",
    "long_instructions": "## Emoji, I Choose You!\r\n\r\nEmojiMaker would be a lot more interactive for users if they were allowed to save their best creations! It is time to code the ability for users to do just that.\r\n\r\n<br>\r\n\r\n<details>\r\n<summary><span style=\"color: #777777; font-size: 120%\"><strong>üí¨ Read the dialogue between Xochitl & Destiny</strong> [click to expand]</span> </summary>\r\n\r\n<br>\r\n\r\n<span style=\"color: #777777; font-size: 220%\"><strong>UPDATE!!</strong></span>\r\n\r\n![](https://images.code.org/dc5e583e3d0edb485e25812577f3fee2-image-1678138580852.png)\r\n\r\n![](https://images.code.org/55f1c4b08e9c7d185ca3027e5a7ba670-image-1678138582819.png)\r\n\r\n</details>\r\n\r\n<br>\r\n<br>\r\n\r\n6Ô∏è‚É£ Find the <code style=\"color:black; background-color:#68d995\">addToFavorites() function</code> and write code that will accomplish the following:\r\n\r\n* Use the <code style=\"color:white; background-color:#bb77c7\">appendItem()</code> command to add data into the various favorite lists that have been declared. There are 8 total favorite lists, one for every attribute of the emoji: *red, green, blue values, name, description, eye index, mouth index,* and *extra index*.\r\n\r\n\r\nThe <code style=\"color:black; background-color:#68d995\">addToFavorites() function</code> will be called in the <code style=\"color:black; background-color:#fef088\">onEvent</code> code every time that the Favorite tab is clicked by the user.\r\n\r\n<br>\r\n\r\n<details>\r\n<summary><span style=\"color: #777777; font-size: 120%\"><strong>üîé Need Help?</strong> [click to expand]</span> </summary>\r\n\r\n<br>\r\n\r\n<table style=\"width: 90%; margin-left: auto; margin-right: auto; background-color:#eeeeee\" dir=\"ltr\" frame=\"box\">\r\n<tbody><tr><td>\r\n<br>\r\n\r\nDepending on the favorite list that we are adding onto using <code style=\"color:white; background-color:#bb77c7\">appendItem()</code>, we may need to use additional commands. All three index variables can be saved easily into their respective lists. However, we will need to use <code style=\"color:black; background-color:#fef088\">getText()</code> to read the name and description input boxes, and <code style=\"color:black; background-color:#fef088\">getNumber()</code> to read the values of the color sliders.\r\n\r\n<br>\r\n\r\n\r\n![](https://images.code.org/786fea7021a91ca0a16b9b1ecc22f07e-image-1678304307439.png)\r\n\r\n<br>\r\n\r\n</td></tr></tbody></table>\r\n\r\n</details>\r\n\r\n<br>\r\n\r\nüñ•Ô∏è **Test your code!** See if clicking the Favorite tab will make the Gallery Mode tab visible. Use the Watchers tab in the debug tools at the bottom of the screen to test the values that were saved into your favorite lists. Did they data get written into the lists correctly?\r\n\r\n<br>\r\n\r\n<hr>\r\n\r\n## Creating Gallery Mode\r\n\r\n<br>\r\n\r\nGallery Mode is accessed with one of the three tabs that appears on the bottom of the app and allows users to view emojis that they have favorited using the Favorite tab. This tab will not appear nor be clickable until the users have favorited at least *one* emoji.\r\n\r\n<br>\r\n\r\n7Ô∏è‚É£ Find the <code style=\"color:black; background-color:#68d995\">displayGalleryMode() function</code> and write code that will accomplish the following:\r\n\r\n* Use the <span style=\"color: #bb77c7\">favoriteIndex</span> variable (*already declared and initialized at the beginning of the program*) to retrieve elements from the <span style=\"color: #bb77c7\">favoriteEyes, favoriteMouth</span>, and <span style=\"color: #bb77c7\">favoriteExtras</span> lists that we just worked with. \r\n* Set the current emoji properties (<span style=\"color: #bb77c7\">eyeIndex, mouthIndex</span>, and <span style=\"color: #bb77c7\">extraIndex</span>) to this data.\r\n* <strong>Note</strong>: Retrieving the red/green/blue colors and the name/description data has already been written in this function.\r\n\r\n\r\nThe <code style=\"color:black; background-color:#68d995\">displayGalleryMode() function</code> will be called in the <code style=\"color:black; background-color:#fef088\">onEvent</code> code every time that the Gallery Mode tab is clicked by the user.\r\n\r\n<br>\r\n\r\n<details>\r\n<summary><span style=\"color: #777777; font-size: 120%\"><strong>üîé Need Help?</strong> [click to expand]</span> </summary>\r\n\r\n<br>\r\n\r\n<table style=\"width: 90%; margin-left: auto; margin-right: auto; background-color:#eeeeee\" dir=\"ltr\" frame=\"box\">\r\n<tbody><tr><td>\r\n<br>\r\n\r\nEach value of the favoriteIndex variable will reference one emoji's data that was saved into the different favorite lists. \r\n\r\n<br>\r\n\r\n\r\n![](https://images.code.org/d3a460cfaf4d2f73500d4c261586e2a0-image-1678305710258.png)\r\n\r\n<br>\r\n\r\nIn order to pull data from these lists, we will use this index variable to reference an element in each of the three lists and set our emoji image index variables to equal these elements. In this way, we can retrieve information saved into our favorite lists and display it back for the user!\r\n\r\n<br>\r\n\r\n![](https://images.code.org/00da908e1e91649f253cb6a240b3f0e2-image-1678307093611.png)\r\n\r\n<br>\r\n\r\n</td></tr></tbody></table>\r\n\r\n</details>\r\n\r\n<br>\r\n\r\nüñ•Ô∏è **Test your code!** Favorite an emoji- don't forget to give it a name and description! Click on the Gallery Mode tab at the bottom to see if your emoji appears.\r\n\r\n<br>\r\n\r\n<hr>\r\n\r\n## Navigating the Gallery\r\n\r\n\r\n\r\nThe final step to complete the app is navigating through Gallery Mode, using the left and right arrows that appear on either side of the screen.\r\n\r\n8Ô∏è‚É£ Find the <code style=\"color:black; background-color:#fef088\">onEvent</code> code for *leftArrowButton* and *rightArrowButton* and write code that will accomplish the following:\r\n\r\n* Implement the List Scrolling Pattern that was introduced in *Level 6* of the *Lists Investigate* lesson using the <span style=\"color: #bb77c7\">favoriteIndex</span> variable.\r\n* Call the <code style=\"color:black; background-color:#68d995\">displayGalleryMode() function</code> once again to redraw the new favorited emoji on the screen.\r\n\r\n<br>\r\n\r\n<details>\r\n<summary><span style=\"color: #777777; font-size: 120%\"><strong>üîé Need Help?</strong> [click to expand]</span> </summary>\r\n\r\n<br>\r\n\r\n<table style=\"width: 90%; margin-left: auto; margin-right: auto; background-color:#eeeeee\" dir=\"ltr\" frame=\"box\">\r\n<tbody><tr><td>\r\n<br>\r\n\r\nWhen the user clicks on the left arrow, we will be decrementing the <span style=\"color: #bb77c7\">favoriteIndex</span> variable (*decreasing value by 1*). Afterwards, we will call the <code style=\"color:black; background-color:#68d995\">displayGalleryMode() function</code> to redraw the emoji on the screen.\r\n\r\n<br>\r\n\r\nüêõ **Bug Alert!** Before decrementing the value of <span style=\"color: #bb77c7\">favoriteIndex</span>, make sure that its value is greater than zero. If the user attempts to decrease the index value below 0, there will be an error. \r\n\r\n<br>\r\n\r\n![](https://images.code.org/b11af97761048d17bc043e7d876c6f38-image-1678314187115.png)\r\n\r\n<br>\r\n\r\nFor the right arrow, the logic is very similar. However, this time we must increment the value of <span style=\"color: #bb77c7\">favoriteIndex</span> and test that the value is less than the **length** of one of our **favorite lists - 1**. \r\n\r\n<br>\r\n\r\n![](https://images.code.org/09493e5344e048a5dd711fc3740e53b8-image-1678314189822.png)\r\n\r\n<br>\r\n\r\n</td></tr></tbody></table>\r\n\r\n</details>\r\n\r\n<br>\r\n\r\nüñ•Ô∏è **Test your code!** Favorite several different combinations of emojis. Switch into Gallery Mode and try navigating through through them with the arrows.\r\n\r\n<br>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "never_autoplay_video": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "starter_assets": {
      "createBG.png": "36626891-fe4e-41cd-bbcb-2910aac448a4.png"
    },
    "project_template_level_name": "U6_L03_Lists Practice_Choice_3-Template",
    "preload_asset_list": null,
    "encrypted_examples": [

    ]
  },
  "game_id": 41,
  "published": true,
  "created_at": "2023-03-08T18:22:28.000Z",
  "level_num": "custom",
  "user_id": 18603,
  "audit_log": "[{\"changed_at\":\"2023-03-08T18:22:28.951+00:00\",\"changed\":[\"cloned from \\\"U6_L03_Lists Practice_Choice_3-4\\\"\"],\"cloned_from\":\"U6_L03_Lists Practice_Choice_3-4\"},{\"changed_at\":\"2023-03-08 19:44:23 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-08 22:00:14 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-08 22:32:45 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-08 22:33:34 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-08 22:35:58 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"preload_asset_list\",\"encrypted_examples\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"},{\"changed_at\":\"2023-03-09 16:09:54 +0000\",\"changed\":[\"code_functions\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18603,\"changed_by_email\":\"erik+levelbuilder@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>