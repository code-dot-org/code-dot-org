<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U3L9-L4d PBT_2022",
    "long_instructions": "##In Cats.java:\r\n\r\n1. Write the `reverse()`(#e7e8ea) method to reverse the elements in the `catBreeds`(#e7e8ea) array.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `reverse()`(#e7e8ea) method on the `myCats`(#e7e8ea) object to reverse the array.\r\n\r\n3. Call the `printCatBreeds()`(#e7e8ea) method on the `myCats`(#e7e8ea) object to print the updated array.\r\n\r\n***Curious about this dataset?*** *Learn more about it [**here**](https://thecatapi.com)!*",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "display_name": "Cat Breeds",
    "bubble_choice_description": "Reverse the array of cat breeds to display them in A-Z order.",
    "thumbnail_url": "https://images.code.org/7af862142f7265abfd076aef58b2723d-image-1648753568196.png",
    "encrypted_exemplar_sources": "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\nDodhKHHKZstmqLrk/iM=\n",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"catbreeds.txt\");\n    String[] breeds = myFileReader.getStringData(67);\n\n    Cats myCats = new Cats(breeds);\n    \n    myCats.printCatBreeds();\n\n    // TO DO #2: Call the reverse() method to reverse the array.\n\n\n    // TO DO #3: Call the printCatBreeds() method to print the array.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "Cats.java": {
        "text": "/*\n * Processes cat breeds in a String array\n */\npublic class Cats {\n\n  private String[] catBreeds;   // The 1D array of cat breeds\n\n  /*\n   * Constructor to create a Cats object with\n   * a specified list of cat breeds\n   */\n  public Cats(String[] catBreeds) {\n    this.catBreeds = catBreeds;\n  }\n\n  /*\n   * Returns the catBreeds array\n   */\n  public String[] getCatBreeds() {\n    return catBreeds;\n  }\n\n  /*\n   * Prints the names of the parks in the catBreeds array\n   */\n  public void printCatBreeds() {\n    for (String cat : catBreeds) {\n      System.out.println(cat);\n    }\n  }\n\n  /*\n   * Reverses the catBreeds array\n   */\n  public void reverse() {\n    // TO DO #1: Reverse the elements in the catBreeds array.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "catbreeds.txt": {
        "text": "York Chocolate\nTurkish Van\nTurkish Angora\nToyger\nTonkinese\nSphynx\nSomali\nSnowshoe\nSingapura\nSiberian\nSiamese\nSelkirk Rex\nScottish Fold\nSavannah\nRussian Blue\nRagdoll\nRagamuffin\nPixie-bob\nPersian\nOriental\nOcicat\nNorwegian Forest Cat\nNebelung\nMunchkin\nManx\nMalayan\nMaine Coon\nLaPerm\nKurilian\nKorat\nKhao Manee\nJavanese\nJapanese Bobtail\nHimalayan\nHavana Brown\nExotic Shorthair\nEuropean Burmese\nEgyptian Mau\nDragon Li\nDonskoy\nDevon Rex\nCyprus\nCymric\nCornish Rex\nColorpoint Shorthair\nCheetoh\nChausie\nChartreux\nChantilly-Tiffany\nCalifornia Spangled\nBurmilla\nBurmese\nBritish Shorthair\nBritish Longhair\nBombay\nBirman\nBengal\nBambino\nBalinese\nAustralian Mist\nArabian Mau\nAmerican Wirehair\nAmerican Shorthair\nAmerican Curl\nAmerican Bobtail\nAegean\nAbyssinian",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-03-25T13:05:06.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-03-25 13:05:09 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 16:26:29 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:06:40 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:09:03 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:22:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 19:45:00 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 13:00:30 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 12:44:28 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 19:30:03 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-06-24 15:16:20 +0000\",\"changed\":[\"map_reference\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:52:03 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:52:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 23:52:12 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
