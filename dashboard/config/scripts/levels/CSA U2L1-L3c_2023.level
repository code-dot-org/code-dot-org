<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**An event planner needs a program to keep track of the events they host.**\r\n\r\n✅ **TO DO #1:** In the `Event`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the name of an event\r\n   \r\n   * whether or not an event is online\r\n   \r\n   * the ticket price for an event\r\n\r\n✅ **TO DO #2:** In `EventRunner.java`(#e7e8ea), instantiate an `Event`(#e7e8ea) object and print the instance variables for the `Event`(#e7e8ea) object by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Event Planner",
    "bubble_choice_description": "An event planner needs a program to keep track of the events they host. Write the `Event` class with instance variables for the specified attributes.",
    "encrypted_exemplar_sources": "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\nTD6pb+kOtWTgu6qHZfxUCXql84pn9IdZSbg=\n",
    "thumbnail_url": "https://images.code.org/72ed27bc3aece87b8dc2c72f2fcec0f8-ticket.png",
    "encrypted_validation": "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\n",
    "start_sources": {
      "EventRunner.java": {
        "text": "public class EventRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate an Event object, then print the instance variables for\n     * the Event object to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Event.java": {
        "text": "/*\n * Represents an event\n */\npublic class Event {\n\n  /* --------------------------- TO DO ---------------------------\n   * ✅ Declare instance variables for the name of an event, whether\n   * or not an event is online, and the ticket price of an event.\n   * -------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n    typeToFind += \" \";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean \", \"int \", \"double \", \"String \"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result.trim();\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 2
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-11-01T17:29:08.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:29:08.692+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3b_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L3b_2023\"},{\"changed_at\":\"2022-11-01 17:29:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:26 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:09:56 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:12 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:18 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:57 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:41:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:42:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:43:08 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:43:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:59 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:45:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:50:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:51:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:51:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:22 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:54:07 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:54:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:41:43 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:49:14 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:52:13 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:30:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:59 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:23 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:20:09 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:17:17 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:16:09 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:37:11 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:38:49 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:46:32 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:37:17 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:37:30 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:38:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:38:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:38:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-12-12 14:38:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
