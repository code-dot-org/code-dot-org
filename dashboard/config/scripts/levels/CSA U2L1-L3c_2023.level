<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**An event planner needs a program to keep track of the events they host.**\r\n\r\n✅ **TO DO #1:** In the `Event`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the name of an event\r\n   \r\n   * whether or not an event is online\r\n   \r\n   * the ticket price for an event\r\n\r\n✅ **TO DO #2:** In `EventRunner.java`(#e7e8ea), instantiate an `Event`(#e7e8ea) object and print the instance variables for the `Event`(#e7e8ea) object by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Event Planner",
    "bubble_choice_description": "An event planner needs a program to keep track of the events they host. Write the `Event` class with instance variables for the specified attributes.",
    "start_sources": {
      "EventRunner.java": {
        "text": "public class EventRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate an Event object, then print the instance variables for\n     * the Event object to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Event.java": {
        "text": "/*\n * Represents an event\n */\npublic class Event {\n\n  /* --------------------------- TO DO ---------------------------\n   * ✅ Declare instance variables for the name of an event, whether\n   * or not an event is online, and the ticket price of an event.\n   * -------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 4
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "thumbnail_url": "https://images.code.org/72ed27bc3aece87b8dc2c72f2fcec0f8-ticket.png",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:29:08.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:29:08.692+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3b_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L3b_2023\"},{\"changed_at\":\"2022-11-01 17:29:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:26 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:09:56 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:12 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:18 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:57 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:41:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:42:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:43:08 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:43:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:59 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:45:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:50:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:51:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:51:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:22 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:54:07 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:54:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:41:43 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:49:14 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:52:13 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:30:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:59 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:23 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:20:09 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:17:17 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:16:09 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:37:11 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:38:49 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:46:32 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
