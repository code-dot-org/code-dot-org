<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**An event planner needs a program to keep track of the events they host.**\r\n\r\n✅ **TO DO:** Write the `Event`(#e7e8ea) class and instantiate an `Event`(#e7e8ea) object.\r\n\r\n1. In the `Event`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the name of an event\r\n   \r\n   * whether or not an event is online\r\n   \r\n   * the ticket price for an event\r\n\r\n2. In `EventRunner.java`(#e7e8ea):\r\n\r\n   **a.** Instantiate an `Event`(#e7e8ea) object\r\n   \r\n   **b.** Print the instance variables for the `Event`(#e7e8ea) object to the console using `ClassInfo.getAttributes(nameOfObject)`(#e7e8ea)\r\n\r\n::: details [**🔦 What is `ClassInfo.getAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `ClassInfo.getAttributes()`(#e7e8ea) is a hidden support method that returns the instance variables in a class as a `String`(#e7e8ea). Call the method by passing an object as its argument, such as:\r\n\r\n```\r\nDog fido = new Dog();\r\nSystem.out.println(ClassInfo.getAttributes(fido));\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/096897a7ed4c0a10fe5c6e52f090643e-image-1667422154462.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Event Planner",
    "bubble_choice_description": "An event planner needs a program to keep track of the events they host. Write the `Event` class with instance variables for the specified attributes.",
    "encrypted_validation": "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\nlhqFFvBqyDuT4cQtn62dF8sPK28Y\n",
    "start_sources": {
      "EventRunner.java": {
        "text": "public class EventRunner {\n  public static void main(String[] args) {\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ✅ Instantiate an Event object, then print the instance variables for\n     * the Event object to the console using ClassInfo.getAttributes().\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Event.java": {
        "text": "/*\n * Represents an event\n */\npublic class Event {\n\n  /* --------------------------- TO DO ---------------------------\n   * ✅ Declare instance variables for the name of an event, whether\n   * or not an event is online, and the ticket price of an event.\n   * -------------------------------------------------------------\n   */\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n\n  public static String findField(ArrayList<String> classFields, String typeToFind) {\n    String result = \"MISSING\";\n    \n    for (int index = 0; index < classFields.size(); index++) {\n      String current = classFields.get(index);\n      \n      if (current.indexOf(typeToFind) > 0) {\n        result = ClassInfo.removeClassName(current, \"Instrument\");\n        result = ClassInfo.removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n\n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    }\n\n    return result;\n  }\n\n  public static String getFieldType(String currentField) {\n    currentField = currentField.trim();\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n\n  public static String getConstructors(Object testObject) {\n    Class objectClass = testObject.getClass();\n    String className = objectClass.getSimpleName();\n    Constructor[] objectConstructors = objectClass.getDeclaredConstructors();\n    \n    ArrayList<String> constructorsList = convertToList(Arrays.toString(objectConstructors));\n\n    String heading = \"\\n------------------------------\\n\";\n    String result = className + \" Constructors \" + heading;\n\n    for (String current : constructorsList) {\n      result += current + \"\\n\";\n    }\n    \n    return result;\n  }\n\n  public static String getValue(List<String> output, String lineToFind) {\n    String outputText = \"\";\n    String valueResult = \"\";\n\n    for (int index = 0; index < output.size(); index++) {\n      String current = output.get(index);\n      \n      if (current.indexOf(lineToFind) >= 0) {\n        outputText = current;\n        valueResult = outputText.substring(lineToFind.length());\n      }\n    }\n    \n    return valueResult.trim();\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 2
      }
    },
    "encrypted_exemplar_sources": "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\nF7EziDzX2c0yowOlVfdYI4ag97zOXSWSoFs=\n",
    "thumbnail_url": "https://images.code.org/72ed27bc3aece87b8dc2c72f2fcec0f8-ticket.png"
  },
  "game_id": 68,
  "created_at": "2022-11-01T17:29:08.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:29:08.692+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L3b_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L3b_2023\"},{\"changed_at\":\"2022-11-01 17:29:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:18:26 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:09:56 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 17:30:12 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:34:18 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:49 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:35:57 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:41:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:42:05 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:43:08 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:43:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:46 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:44:59 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:45:48 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:46:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:48:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:50:40 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:51:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:51:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:22 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:53:28 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:54:07 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 19:54:27 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:41:43 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:49:14 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 20:52:13 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-02 21:30:58 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:09:59 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:21:23 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:20:09 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:53:24 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:17:17 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
