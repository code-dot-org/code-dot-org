<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Unit 2 Lesson 9 version of `Dessert.java`(#e7e8ea), `Cake.java`(#e7e8ea), and `Cookie.java`(#e7e8ea)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "serialized_maze": [
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ]
    ],
    "start_sources": {
      "Dessert.java": {
        "text": "import java.util.Scanner;\n\n/*\n * A Dessert that the Project Mercury Pastries Food Truck sells\n */\npublic class Dessert {\n\n  private String flavor;  // The flavor of the Dessert\n  private double price;   // The price of the Dessert\n\n  /*\n   * Constructor to create a plain Dessert\n   */\n  public Dessert() {\n    flavor = \"plain\";\n    price = 0.00;\n  }\n\n  /*\n   * Constructor create a Dessert with\n   * specified flavor and price\n   */\n  public Dessert(String newFlavor, double newPrice) {\n    flavor = newFlavor;\n    price = newPrice;\n  }\n\n  /*\n   * Returns the current value of flavor\n   */\n  public String getFlavor() {\n    return flavor;\n  }\n\n  /*\n   * Returns the current value of price\n   */\n  public double getPrice() {\n    return price;\n  }\n\n  /*\n   * Updates the flavor to the new flavor given\n   */\n  public void setFlavor(String newFlavor) {\n    flavor = newFlavor;\n  }\n\n  /*\n   * Updates the price to the new price given\n   */\n  public void setPrice(double newPrice) {\n    price = newPrice;\n  }\n\n  /*\n   * Gets the user's input to modify\n   * the flavor or price of a dessert\n   */\n  public void modifyDessert() {\n    Scanner input = new Scanner(System.in);\n    int choice = 1;\n\n    while (choice == 1) {\n      System.out.print(\"Which do you want to change? Enter 1 for flavor, 2 for price: \");\n      choice = input.nextInt();\n      input.nextLine();\n\n      if (choice == 1) {\n        System.out.print(\"Enter the new flavor: \");\n        String newFlavor = input.nextLine();\n        setFlavor(newFlavor);\n      }\n\n      if (choice == 2) {\n        System.out.print(\"Enter the new price: \");\n        double newPrice = input.nextDouble();\n        setPrice(newPrice);\n      }\n\n      System.out.print(\"Make another change? Enter 1 for yes, 0 for no: \");\n      choice = input.nextInt();\n    }\n\n    input.close();\n  }\n\n  /*\n   * Returns a string containing the flavor and price\n   */\n  public String toString() {\n    return \"Flavor: \" + flavor + \"\\nPrice: \" + price;\n  }\n  \n}",
        "isVisible": true
      },
      "Cake.java": {
        "text": "/*\n * A Cake that the Project Mercury Pastries Food Truck sells\n */\npublic class Cake extends Dessert {\n\n  private int numLayers;       // How many layers the Cake has\n  private String icingFlavor;  // The flavor of the icing on the Cake\n\n  /*\n   * Constructor to create a Cake\n   */\n  public Cake(String newFlavor, int newLayers, String newIcing, double newPrice) {\n    super(newFlavor, newPrice);  // Calls the Dessert constructor\n    numLayers = newLayers;\n    icingFlavor = newIcing;\n  }\n\n  /*\n   * Returns the current value of numLayers\n   */\n  public int getNumLayers() {\n    return numLayers;\n  }\n\n  /*\n   * Returns the current value of icingFlavor\n   */\n  public String getIcingFlavor() {\n    return icingFlavor;\n  }\n\n  /*\n   * Returns a string containing the flavor, price,\n   * number of layers, and icing flavor\n   */\n  public String toString() {\n    return super.toString() + \"\\nIcing Flavor: \" + icingFlavor + \"\\nNumber of Layers: \" + numLayers;\n  }\n}",
        "isVisible": true
      },
      "Cookie.java": {
        "text": "/*\n * A Cookie that the Project Mercury Pastries Food Truck sells\n */\npublic class Cookie extends Dessert {\n\n  private boolean hasIcing;  // Whether or not the Cookie has icing\n\n  /*\n   * Constructor to create a Cookie\n   */\n  public Cookie(String newFlavor, boolean newIcing, double newPrice) {\n    super(newFlavor, newPrice);  // Calls the Dessert constructor\n    hasIcing = newIcing;\n  }\n\n  /*\n   * Returns the current value of hasIcing\n   */\n  public boolean getIcing() {\n    return hasIcing;\n  }\n\n  /*\n   * Returns a string containing the\n   * flavor, price, and icing status\n   */\n  public String toString() {\n    return super.toString() + \"\\nHas Icing: \" + hasIcing;\n  }\n}",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-03-07T00:29:34.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-03-07T00:29:34.870+00:00\",\"changed\":[\"cloned from \\\"CSA U2L8 Dessert\\\"\"],\"cloned_from\":\"CSA U2L8 Dessert\"},{\"changed_at\":\"2022-03-07 00:29:40 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-07 00:30:02 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
