<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "TheaterRunner.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\npublic class TheaterRunner {\n  public static void main(String[] args) {\n\n    Scene myScene = new Scene();\n    SepiaImage myImage = new SepiaImage(\"paintbrushes.jpg\");\n\n    myScene.drawImage(myImage, 0, 0, myScene.getWidth());\n    myScene.pause(0.5);\n\n    myImage.makeSepia();\n\n    myScene.drawImage(myImage, 0, 0, myScene.getWidth());\n\n    Theater.playScenes(myScene);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "ImagePlus.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents an image that can be modified with filters and effects\n */\npublic class ImagePlus extends Image {\n\n  private Pixel[][] pixels;    // The 2D array of pixels\n\n  /*\n   * Sets the superclass filename to the specified filename\n   * and calls the getPixelsFromImage() method to initialize\n   * the 2D array of Pixel objects that make up the image\n   */\n  public ImagePlus(String filename) {\n    super(filename);   // Calls the Image class constructor\n\n    // Initialize the pixels array by getting the pixels from the image\n    pixels = getPixelsFromImage();\n  }\n\n  /*\n   * Returns the 2D array of pixels\n   */\n  public Pixel[][] getImagePixels() {\n    return pixels;\n  }\n\n  /*\n   * Returns the pixels in the image as a 2D array of Pixel objects\n   */\n  public Pixel[][] getPixelsFromImage() {\n    Pixel[][] tempPixels = new Pixel[getHeight()][getWidth()];\n    \n    for (int row = 0; row < tempPixels.length; row++) {\n      for (int col = 0; col < tempPixels[0].length; col++) {\n        tempPixels[row][col] = getPixel(col, row);\n      }\n    }\n\n    return tempPixels;\n  }\n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "SepiaImage.java": {
        "text": "import org.code.theater.*;\nimport org.code.media.*;\n\n/*\n * Represents a sepia image\n */\npublic class SepiaImage extends ImagePlus {\n\n  /*\n   * Constructor to create a SepiaImage\n   * with the specified file name\n   */\n  public SepiaImage(String filename) {\n    super(filename);\n  }\n\n  /*\n   * Applies a sepia filter to the image\n   */\n  public void makeSepia() {\n    Pixel[][] pixels = getPixels();\n\n    for (int row = 0; row < pixels.length; row++) {\n      for (int col = 0; col < pixels[0].length; col++) {\n        Pixel currentPixel = pixels[row][col];\n\n        int currentRed = currentPixel.getRed();\n        int currentGreen = currentPixel.getGreen();\n        int currentBlue = currentPixel.getBlue();\n\n        int newRed = (int)((0.393 * currentRed) + (0.769 * currentGreen) + (0.189 * currentBlue));\n        int newGreen = (int)((0.349 * currentRed) + (0.686 * currentGreen) + (0.168 * currentBlue));\n        int newBlue = (int)((0.272 * currentRed) + (0.534 * currentGreen) + (0.131 * currentBlue));\n\n        currentPixel.setRed(newRed);\n        currentPixel.setGreen(newGreen);\n        currentPixel.setBlue(newBlue);\n      }\n    }\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      }
    },
    "starter_assets": {
      "paintbrushes.jpg": "51b19d83-0384-4659-b6b0-f5a891748864.jpg"
    },
    "contained_level_names": [
      "CSA U5L8-L1 Contained_2023"
    ],
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2023-03-28T00:06:20.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2023-03-28T00:06:20.744+00:00\",\"changed\":[\"cloned from \\\"CSA U5L7-L1_2023\\\"\"],\"cloned_from\":\"CSA U5L7-L1_2023\"},{\"changed_at\":\"2023-03-28 00:06:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-03-28 00:06:29 +0000\",\"changed\":[\"contained_level_names\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-22 00:06:18 +0000\",\"changed\":[\"csa_view_mode\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-22 00:07:00 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-22 00:07:02 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-22 00:07:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-22 00:07:14 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:24:28 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:24:37 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:24:38 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:24:41 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-30 15:24:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
