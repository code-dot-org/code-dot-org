<Weblab>
  <config><![CDATA[{
  "game_id": 58,
  "created_at": "2019-06-06T20:09:11.000Z",
  "level_num": "custom",
  "user_id": 324,
  "properties": {
    "instructions_important": "false",
    "encrypted_examples": "l9SXBYEPEqRfoLSqDqLJHMuhMU9TV3aEoET3jufL0KH47mPDE6ihje7hJRl3\ngnKAAj9nYzubmiI91azwO5V3CQ==\n",
    "hide_share_and_remix": "false",
    "parent_level_id": 15922,
    "name_suffix": "_pilot",
    "reference_links": [
      "/docs/csd-1718/style_sheets/index.html",
      "/docs/csd-1718/html_tags/index.html",
      "/docs/csd-1718/headers/index.html",
      "/docs/csd-1718/lists/index.html",
      "/docs/csd-1718/images-in-html/index.html",
      "/docs/csd-1718/cc_search/index.html"
    ],
    "map_reference": "/docs/csd-1718/text_properties/index.html",
    "video_key": "csd_weblab_css_1",
    "submittable": "false",
    "long_instructions": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\r\n\r\n::: details [**How does the code work?**]\r\nHere is the code that makes the `h1` elements underlined:\r\n\r\n```\r\nh1 {\r\n  text-decoration: underline;\r\n}\r\n```\r\n\r\n* `h1` is the _selector_.  It specifies which elements will have to follow the rules inside the curly braces. The `p` stands for paragraph.\r\n* `text-decoration: underline;` is the rule that makes the text inside the `h1` tag underlined.\r\n  * `text-decoration` is the _property_.  It explains what the rule is about, in this case where the line goes.\r\n  * `underline` is the _value_.  It explains how the rule should be applied, in this case making the test underlined.\r\n:::\r\n\r\n::: details [**What are the possible values for text decoration?**]\r\nYou can choose between \"underline\", \"overline\", and \"line-through\".  You can read more about the text-decoration property at <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\" target=\"_new\">W3Schools - CSS text-decoration Property</a>\r\n:::\r\n\r\n::: details [**Why do I need all the punctuation?**]\r\n\r\nThe punctuation, such as the curly braces `{}`, the colon `:`, and the semicolon `;`, help the computer to understand the rules in the stylesheet.  The curly braces hold all the rules for a particular selector.  Each rule should end in a semicolon, and the properties and values are always separated by a colon.\r\n\r\n:::\r\n::: details [**What is a stylesheet?**]\r\nA style sheet is a document that controls how a web page will appear.  External style sheets are separate files that are linked to the HTML page.\r\n:::\r\n\r\n::: details [**What is CSS?**]\r\n\r\nCSS is a language that controls the way content on a web site appears.  It uses rule-sets to change the look of a page.  Each rule set has a selector, which specifies which elements on the page will be affected, and the rules, which explain how to display the elements.   Each rule consists of a property and a value for that property.\r\n\r\n\r\nHereâ€™s an example of a rule-set that makes the text in an `h2` tag blue and cursive:\r\n\r\n```\r\nh2 {\r\n   color: blue;\r\n   font-family: cursive;\r\n}\r\n```\r\n\r\nIn this example, `h2` is the selector, `color` and `font-family` are properties, and `blue` and `cursive` are the values for those properties.\r\n\r\n\r\n:::\r\n</div>\r\n\r\n# Underlining\r\n\r\n* Find the code in the style sheet that makes the h4 tag double underlined.\r\n* Change the text decoration to something else.\r\n  * Choose from \"underline\", \"overline\", and \"line-through\"\r\n* Add a text decoration rule for the paragraph, h1, h2 or h3 tag.\r\n",
    "encrypted": "false",
    "mini_rubric": "false",
    "display_name": "Extra Code: Underlining",
    "bubble_choice_description": "Put lines under, over, or through your text.",
    "start_sources": "{\r\n  \"files\": [\r\n    {\"name\": \"style.css\",\r\n     \"data\": \"h1 {\\r\\n  color: green;\\r\\n  font-size: 24px;\\r\\n}\\r\\nh4 {\\r\\n  color: red;\\r\\n  text-decoration: underline double;\\r\\n}\\r\\np {\\r\\n    font-size: 14px;\\r\\n}\"\r\n     },\r\n    {\r\n      \"name\": \"index.html\",\r\n      \"data\": \"<!DOCTYPE html> \\r\\n<html> \\r\\n<head>\\r\\n   <link rel=\\\"stylesheet\\\" href=\\\"style.css\\\">\\r\\n<\\/head>\\r\\n<body>\\r\\n  <h1>How to make boba<\\/h1> \\r\\n  <h3>\\r\\n    Do you enjoy delicious boba tea?\\r\\n  <\\/h3>\\r\\n\\r\\n  <h3>\\r\\n    Did you know you can make boba at home?\\r\\n  <\\/h3>\\r\\n  <p>\\r\\n    Making boba is easy.  I always get the quick style that you can boil in just a few minutes. \\r\\n  <\\/p>\\r\\n  <h4>Important!!!!!<\\/h4>\\r\\n  <p>These instructions are for the quick style boba.  If you get the regular boba, they WILL NOT WORK!<\\/p>\\r\\n  <h2>Step 1<\\/h2>\\r\\n  <p> \\r\\n    Boil your water and pour the boba in.  Stir until they float to the top, then let them boil for 2-3 minutes\\r\\n  <\\/p> \\r\\n\\r\\n  <h2>Step 2<\\/h2>\\r\\n  <p>\\r\\n    Turn off the heat and let it sit in the water for another 2-3 minutes, then drain it and rinse it with cold water\\r\\n  <\\/p> \\r\\n  <h2>Step 3<\\/h2>\\r\\n  <p>Pour brown sugar syrup or just brown sugar on top of your boba and let them sit for a long time so they can get very sweet.<\\/p>\\r\\n  \\r\\n<\\/body>\\r\\n<\\/html>  \\r\\n\"\r\n    }\r\n  ]\r\n}",
    "thumbnail_url": "https://images.code.org/b7bd7169e59bc50e732cfb8474bda904-image-1565646948500.54.56 PM.png"
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-05-11 04:39:42 +0000\",\"changed\":[\"markdown_instructions\",\"encrypted_examples\"],\"changed_by_id\":1,\"changed_by_email\":\"josh@code.org\"},{\"changed_at\":\"2018-05-09 18:04:24 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-07-12 20:44:21 +0000\",\"changed\":[\"markdown_instructions\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2018-12-10 21:35:59 +0000\",\"changed\":[\"markdown_instructions\",\"encrypted_examples\"],\"changed_by_id\":156,\"changed_by_email\":\"elijah@code.org\"},{\"changed_at\":\"2019-05-23 00:15:28 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":18,\"changed_by_email\":\"dave@code.org\"},{\"changed_at\":\"2019-08-12 20:59:49 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-08-12 21:02:35 +0000\",\"changed\":[\"encrypted_examples\",\"display_name\",\"bubble_choice_description\",\"thumbnail_url\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-08-12 21:05:54 +0000\",\"changed\":[\"project_template_level_name\",\"encrypted_examples\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-08-12 21:53:52 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\",\"start_sources\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-08-12 21:54:38 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-08-12 21:56:23 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"},{\"changed_at\":\"2019-08-19 22:36:35 +0000\",\"changed\":[\"encrypted_examples\",\"start_sources\"],\"changed_by_id\":959,\"changed_by_email\":\"george.zhang@code.org\"},{\"changed_at\":\"2019-09-24 20:44:14 +0000\",\"changed\":[\"encrypted_examples\",\"long_instructions\"],\"changed_by_id\":975,\"changed_by_email\":\"andrew.hu@code.org\"},{\"changed_at\":\"2020-04-09 01:15:39 +0000\",\"changed\":[\"encrypted_examples\",\"start_sources\"],\"changed_by_id\":324,\"changed_by_email\":\"elizabeth@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
</Weblab>
