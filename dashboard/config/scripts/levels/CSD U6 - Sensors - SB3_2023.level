<Applab>
  <config><![CDATA[{
  "published": true,
  "game_id": 41,
  "created_at": "2022-09-21T13:16:44.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "setText": null,
      "soundSensor.value": null,
      "onBoardEvent": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions_important": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "disable_if_else_editing": "false",
    "free_play": "false",
    "validation_enabled": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "show_debug_watch": "false",
    "expand_debugger": "false",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "false",
    "makerlab_enabled": "circuitPlayground",
    "disable_procedure_autopopulate": "false",
    "long_instructions": "# Data Event\r\n\r\nEach of these analog sensors emits a special event called \"data\" which occurs every time new data comes in from the sensor. Using this event, you can rewrite the first program you worked on in this lesson so that it continually updates.\r\n\r\n## Do This\r\n\r\n1) Create an event to continuously check the `soundSensor`\r\n\t- Drag out an [`onBoardEvent()`(#f78183)](/docs/applab/onBoardEvent/) to check the `soundSensor` for a `data` event\r\n    - ::: details [**Show Me How**]\r\n    ![](https://images.code.org/4697dca08b3b3ffad1f103e7eb61c05c-image-1648845372839.png)\r\n    :::\r\n2) Inside the event, update the screen to display the value of the sound sensor\r\n\t- Use the [`setText()`(#fff176)](/docs/applab/setText/) and [`soundSensor.value`(#f78183)](/docs/applab/soundSensor.value/) blocks to update the screen\r\n\r\n**Run Your Code!** You should see the screen update in real-time based on the volume in the room. How low can you make the sensor go? How high can you make it go?",
    "start_blocks": "// Set the text of \"sound_value\"\r\n// to the current sound sensor value\r\nsetText(\"soundValue\", soundSensor.value);\r\n\r\n//Add an event handler to respond to sound sensor's \"data\" event\r\n//Move the existing code into your event handler\r\n\r\n",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\" data-theme=\"classic\"><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 33px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 320px; height: 71px; position: absolute; left: 2.22045e-16px; top: 20px; text-align: center; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"soundLabel\">Sound Sensor Reading</label><label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 100px; overflow: hidden; overflow-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 320px; height: 105px; position: absolute; left: 0px; top: 190px; text-align: center; background-color: rgba(0, 0, 0, 0); text-rendering: optimizespeed; border-style: solid; border-width: 0px; border-color: rgb(0, 0, 0); border-radius: 0px; font-family: Arial, Helvetica, sans-serif;\" id=\"soundValue\">value</label></div></div>",
    "top_level_procedure_autopopulate": "false",
    "encrypted_examples": "ROeONLC2UCxyNKO5K09id7T6ordflX/PKY0Io7JW8AP1vO9TLnHal0rFLTXL\niG+IepKrlzns85JbEQMi1yEGew==\n",
    "parent_level_id": 20457,
    "name_suffix": "_2023",
    "reference_links": [
      "/courses/csd-2022/guides/analog-sensors",
      "/maker/setup"
    ],
    "map_reference": "/courses/csd-2022/guides/data-and-change-events",
    "mini_rubric": "false",
    "encrypted": "false",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "ai_enabled": "false",
    "project_template_level_name": "CSD U6 - Sensors - SB - Data Event Template_2023",
    "preload_asset_list": null
  },
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2022-09-21T13:16:44.112+00:00\",\"changed\":[\"cloned from \\\"CSD U6 - Sensors - SB3_2222\\\"\"],\"cloned_from\":\"CSD U6 - Sensors - SB3_2222\"},{\"changed_at\":\"2022-09-30 18:55:45 +0000\",\"changed\":[\"code_functions\",\"makerlab_enabled\",\"encrypted_examples\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":18602,\"changed_by_email\":\"angelina+levelbuilder@code.org\"},{\"changed_at\":\"2023-08-16 19:04:13 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"reference_links\",\"preload_asset_list\",\"contained_level_names\"],\"changed_by_id\":14639,\"changed_by_email\":\"dan+teacher@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>