<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-11-22T01:48:20.000Z",
  "level_num": "custom",
  "user_id": 106,
  "properties": {
    "skin": "applab",
    "edit_code": true,
    "embed": "false",
    "instructions": "Write code that redraws your image using a sketch effect. (Click to see full instructions)",
    "markdown_instructions": "# Relative Indexes\r\n\r\nWhen looping over an array, we use a counter variable (typically `i`) to keep track of which index we're at. We can then access the contents at each index with the syntax `list[i]`.\r\n\r\nIf we want, however, we could access the contents of the next element as well, since its index is just one greater. For example, if we are currently focused on the element at index `i`, then `list[i+1]` gives us access to the next element in the array. In other words, you can **reference indexes relative to your counter variable**.\r\n\r\n![](https://images.code.org/3bb5dfce60951040172bfe08d98a8750-image-1448393281688.png)\r\n\r\nWe are going to use relative indexing to create our final effect, which will look sort of like an etching of the image. The idea is simple:  **for every (x,&nbsp;y) location in the event list, draw a straight line between that location and the location stored 10 spots further down the array.** You will use the **`line` command** to draw a line connecting these points.\r\n\r\n# Do This:\r\n\r\n* **Read the documentation for `line`**.\r\n* **Set the style of the final button** in Design Mode, give a label like \"Etch,\" give it a descriptive ID, and attach a click event handler to it.\r\n* **Call `clearCanvas`** to clear the screen.\r\n* Create a `for` loop that counts from **0 to `eventList.length - 10`**. \r\n\t* Why do you think we're not counting over the entire array?\r\n* Use `line` to draw a line between the (x,&nbsp;y) locations of `eventList[i]` and `eventList[i+10]`.  The full line of code will be another big one: ![](https://images.code.org/5de2c40b56042069379ff20ce5d10cab-image-1448393948598.38.49 PM.png)\r\n* **Use `setStrokeColor` and/or `setStrokeWidth` inside the event handler** to make the lines visible; otherwise, they will be transparent, since we set the stroke color to transparent at the beginning of the program.\r\n* **Run your app** and confirm that your new button creates a sketch effect, as shown below.\r\n\r\n![](https://images.code.org/c06c268a4757e8838435e576a676a0a2-image-1448395181441.gif)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1.0",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "project_template_level_name": "U3 - Canvas - Template",
    "encrypted_examples": "Gbk4DXHKPdY1J6CNbBa6gLEkKqcLE6eSBh4kedMDZxASwLRAJlV5U3XI0vuq\nUX0M\n"
  }
}]]></config>
  <blocks/>
</Applab>