<Studio>
  <config><![CDATA[{
  "game_id": 33,
  "created_at": "2014-11-21T22:21:22.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "studio",
    "success_condition": "function () {\r\n  if (!Studio.bigGameStarted || Studio.levelRestarted) {\r\n    Studio.bigGameStarted = true;\r\n    \r\n    // Attach student defined update functions to appropriate sprites\r\n    Studio.sprite[0].update = function(){ this.y = Studio.Globals.update_player('',this.y) }; // need a way to capture keypress\r\n    Studio.sprite[1].update = function(){ this.x = Studio.moveX(this, Studio.Globals.update_target) }\r\n    Studio.sprite[2].update = function(){ this.x = Studio.moveX(this, Studio.Globals.update_danger) }\r\n    \r\n    // Target and Danger need to check onscreen? before moving\r\n    Studio.moveX = function(sprite, updateFunc) {\r\n      var newX = sprite.x;\r\n      if (Studio.Globals.onscreen_(sprite.x + 50) || !sprite.backonscreen){\r\n        newX = updateFunc(sprite.x);\r\n        if (!sprite.backonscreen){\r\n          sprite.backonscreen = Studio.Globals.onscreen_(sprite.x + 50);\r\n        }\r\n      } else if (sprite.visible) {\r\n        Studio.setSprite({spriteIndex:Studio.sprite.indexOf(sprite), value:\"hidden\"});\r\n        setTimeout(Studio.resetSprite, 1000, sprite);\r\n      }\r\n      \r\n      return newX;\r\n    }\r\n    \r\n    // If Target or Danger goes off screen, reset them to the opposite side, random y value\r\n    Studio.resetSprite = function(sprite) {\r\n      if (sprite.dir == 2){\r\n        sprite.x = 0 - sprite.width;\r\n      } else {\r\n        sprite.x = 400;\r\n      }\r\n      sprite.y = Math.floor(Math.random() *Â 300);\r\n      sprite.backonscreen = Studio.Globals.onscreen_(sprite.x + 50);\r\n      Studio.setSprite({spriteIndex:Studio.sprite.indexOf(sprite), value:\"visible\"});\r\n    }\r\n  }\r\n  \r\n  if (document.getElementById('titleScreenTitle').getAttribute('visibility') == \"hidden\") { // Don't start until the title is over\r\n    Studio.sprite[1].update();\r\n    Studio.sprite[2].update();\r\n  }\r\n  \r\n}",
    "failure_condition": "function () {\r\n}",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,16,0,0,0,0],[16,0,0,0,0,0,16,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "embed": "false",
    "instructions": "In the Variables toolbox you'll see several variables that define how your game characters look, move, and interact",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "true",
    "free_play": "true",
    "edge_collisions": "false",
    "projectile_collisions": "false",
    "allow_sprites_outside_playspace": "true",
    "sprites_hidden_to_start": "true",
    "coordinate_grid_background": "false",
    "default_num_example_blocks": "2",
    "disable_sharing": "false",
    "generate_function_pass_blocks": "true",
    "timeout_after_when_run": "false",
    "soft_buttons": [
      "downButton",
      "upButton"
    ],
    "step_speed": "100"
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="functional_call" inline="false" deletable="false" movable="false" editable="false" id="game_vars">
          <mutation name="game-variables">
            <arg name="title" type="String"/>
            <arg name="subtitle" type="String"/>
            <arg name="background" type="Image"/>
            <arg name="danger" type="Image"/>
            <arg name="target" type="Image"/>
            <arg name="player" type="Image"/>
          </mutation>
          <functional_input name="ARG0">
            <block type="functional_call" deletable="false" movable="false">
              <mutation name="title"/>
            </block>
          </functional_input>
          <functional_input name="ARG1">
            <block type="functional_call" deletable="false" movable="false">
              <mutation name="subtitle"/>
            </block>
          </functional_input>
          <functional_input name="ARG2">
            <block type="functional_call" deletable="false" movable="false">
              <mutation name="bg"/>
            </block>
          </functional_input>
          <functional_input name="ARG3">
            <block type="functional_call" deletable="false" movable="false">
              <mutation name="danger"/>
            </block>
          </functional_input>
          <functional_input name="ARG4">
            <block type="functional_call" deletable="false" movable="false">
              <mutation name="target"/>
            </block>
          </functional_input>
          <functional_input name="ARG5">
            <block type="functional_call" deletable="false" movable="false">
              <mutation name="player"/>
            </block>
          </functional_input>
        </block>
        <block type="functional_start_setFuncs" inline="false" id="game_funcs">
          <functional_input name="update-target">
            <block type="functional_pass">
              <mutation name="update-target"/>
            </block>
          </functional_input>
          <functional_input name="update-danger">
            <block type="functional_pass">
              <mutation name="update-danger"/>
            </block>
          </functional_input>
          <functional_input name="update-player">
            <block type="functional_pass">
              <mutation name="update-player"/>
            </block>
          </functional_input>
          <functional_input name="collide?">
            <block type="functional_pass">
              <mutation name="onscreen?"/>
            </block>
          </functional_input>
          <functional_input name="on-screen?">
            <block type="functional_pass">
              <mutation name="collide?"/>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-player">
                <arg name="key" type="String"/>
                <arg name="y" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-player">
                <arg name="key" type="String"/>
                <arg name="y" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="collide?">
                <arg name="px" type="Number"/>
                <arg name="py" type="Number"/>
                <arg name="cx" type="Number"/>
                <arg name="cy" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="px" type="Number"/>
            <arg name="py" type="Number"/>
            <arg name="cx" type="Number"/>
            <arg name="cy" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">collide?</title>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="distance">
                <arg name="px" type="Number"/>
                <arg name="py" type="Number"/>
                <arg name="cx" type="Number"/>
                <arg name="cy" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="distance">
                <arg name="px" type="Number"/>
                <arg name="py" type="Number"/>
                <arg name="cx" type="Number"/>
                <arg name="cy" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="key" type="String"/>
            <arg name="y" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">update-player</title>
          <functional_input name="STACK">
            <block type="functional_cond" inline="false" uservisible="false">
              <mutation pairs="0,1"/>
              <functional_input name="COND0">
                <block type="functional_string_equals" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>String</outputtype>
                      </mutation>
                      <title name="VAR">key</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_string" uservisible="false">
                      <title name="VAL">up</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE0">
                <block type="functional_plus" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">y</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number" uservisible="false">
                      <title name="NUM">10</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="COND1">
                <block type="functional_string_equals" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>String</outputtype>
                      </mutation>
                      <title name="VAR">key</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_string" uservisible="false">
                      <title name="VAL">down</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE1">
                <block type="functional_minus" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">y</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number" uservisible="false">
                      <title name="NUM">10</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="DEFAULT">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">y</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="collide?">
                <arg name="px" type="Number"/>
                <arg name="py" type="Number"/>
                <arg name="cx" type="Number"/>
                <arg name="cy" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="px" type="Number"/>
            <arg name="py" type="Number"/>
            <arg name="cx" type="Number"/>
            <arg name="cy" type="Number"/>
            <outputtype>None</outputtype>
          </mutation>
          <title name="NAME">distance</title>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="line-length">
                <arg name="a" type="Number"/>
                <arg name="b" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="line-length">
                <arg name="a" type="Number"/>
                <arg name="b" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="onscreen?">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="onscreen?">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">onscreen?</title>
          <functional_input name="STACK">
            <block type="functional_logical_and" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_greater_than" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">x</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number" uservisible="false">
                      <title name="NUM">-50</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_less_than" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">x</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_math_number" uservisible="false">
                      <title name="NUM">450</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-target">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-target">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="a" type="Number"/>
            <arg name="b" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">line-length</title>
          <functional_input name="STACK">
            <block type="functional_cond" inline="false" uservisible="false">
              <functional_input name="COND0">
                <block type="functional_greater_than" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">a</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">b</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE0">
                <block type="functional_minus" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">a</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">b</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="DEFAULT">
                <block type="functional_minus" inline="false" uservisible="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">b</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_parameters_get" uservisible="false">
                      <mutation>
                        <outputtype>Number</outputtype>
                      </mutation>
                      <title name="VAR">a</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-danger">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">update-danger</title>
          <functional_input name="STACK">
            <block type="functional_minus" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">10</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <outputtype>Number</outputtype>
          </mutation>
          <title name="NAME">update-target</title>
          <functional_input name="STACK">
            <block type="functional_plus" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">10</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">bg</title>
          <functional_input name="STACK">
            <block type="functional_background_dropdown" uservisible="false">
              <title name="BACKGROUND">"rainbow"</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="update-danger">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">danger</title>
          <functional_input name="STACK">
            <block type="functional_sprite_dropdown" uservisible="false">
              <title name="SPRITE_INDEX">soccergirl</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <outputtype>String</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">title</title>
          <functional_input name="STACK">
            <block type="functional_string" uservisible="false">
              <title name="VAL">My Game</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">target</title>
          <functional_input name="STACK">
            <block type="functional_sprite_dropdown" uservisible="false">
              <title name="SPRITE_INDEX">bat</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <outputtype>Image</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">player</title>
          <functional_input name="STACK">
            <block type="functional_sprite_dropdown" uservisible="false">
              <title name="SPRITE_INDEX">cat</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <outputtype>String</outputtype>
            <isfunctionalvariable>true</isfunctionalvariable>
          </mutation>
          <title name="NAME">subtitle</title>
          <functional_input name="STACK">
            <block type="functional_string" uservisible="false">
              <title name="VAL">Is so cool</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="title" type="String"/>
            <arg name="subtitle" type="String"/>
            <arg name="background" type="Image"/>
            <arg name="danger" type="Image"/>
            <arg name="target" type="Image"/>
            <arg name="player" type="Image"/>
            <outputtype>None</outputtype>
          </mutation>
          <title name="NAME">game-variables</title>
        </block>
        <block type="when_run" uservisible="false">
          <next>
            <block type="studio_setBackgroundParam" inline="true" uservisible="false">
              <value name="VALUE">
                <block type="procedural_to_functional_call" uservisible="false">
                  <mutation name="bg"/>
                </block>
              </value>
              <next>
                <block type="studio_setSpritePosition" uservisible="false">
                  <title name="SPRITE">0</title>
                  <title name="VALUE">13</title>
                  <next>
                    <block type="studio_setSpriteParamValue" inline="true" uservisible="false">
                      <title name="SPRITE">0</title>
                      <value name="VALUE">
                        <block type="procedural_to_functional_call" uservisible="false">
                          <mutation name="player"/>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false" uservisible="false">
                          <title name="VAR">playery</title>
                          <value name="VALUE">
                            <block type="math_number" uservisible="false">
                              <title name="NUM">200</title>
                            </block>
                          </value>
                          <next>
                            <block type="studio_setSpritePosition" uservisible="false">
                              <title name="SPRITE">1</title>
                              <title name="VALUE">7</title>
                              <next>
                                <block type="studio_setSpriteParamValue" inline="true" uservisible="false">
                                  <title name="SPRITE">1</title>
                                  <value name="VALUE">
                                    <block type="procedural_to_functional_call" uservisible="false">
                                      <mutation name="target"/>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="studio_setSpritePosition" uservisible="false">
                                      <title name="SPRITE">2</title>
                                      <title name="VALUE">19</title>
                                      <next>
                                        <block type="studio_setSpriteParamValue" inline="true" uservisible="false">
                                          <title name="SPRITE">2</title>
                                          <value name="VALUE">
                                            <block type="procedural_to_functional_call" uservisible="false">
                                              <mutation name="danger"/>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="studio_showTitleScreenParams" inline="false" uservisible="false">
                                              <value name="TITLE">
                                                <block type="procedural_to_functional_call" uservisible="false">
                                                  <mutation name="title"/>
                                                </block>
                                              </value>
                                              <value name="TEXT">
                                                <block type="procedural_to_functional_call" uservisible="false">
                                                  <mutation name="subtitle"/>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </next>
        </block>
        <block type="studio_whenArrow" uservisible="false">
          <title name="VALUE">up</title>
          <next>
            <block type="variables_set" inline="false" uservisible="false">
              <title name="VAR">playery</title>
              <value name="VALUE">
                <block type="math_arithmetic" inline="true" uservisible="false">
                  <title name="OP">ADD</title>
                  <value name="A">
                    <block type="variables_get" uservisible="false">
                      <title name="VAR">playery</title>
                    </block>
                  </value>
                  <value name="B">
                    <block type="math_arithmetic" inline="true" uservisible="false">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get" uservisible="false">
                          <title name="VAR">playery</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="procedural_to_functional_call" inline="false" uservisible="false">
                          <mutation name="update-player">
                            <arg name="key"/>
                            <arg name="y"/>
                          </mutation>
                          <value name="ARG0">
                            <block type="text" uservisible="false">
                              <title name="TEXT">up</title>
                            </block>
                          </value>
                          <value name="ARG1">
                            <block type="variables_get" uservisible="false">
                              <title name="VAR">playery</title>
                            </block>
                          </value>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </value>
              <next>
                <block type="studio_setSpriteXY" inline="true" uservisible="false">
                  <value name="SPRITE">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="XPOS">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">200</title>
                    </block>
                  </value>
                  <value name="YPOS">
                    <block type="variables_get" uservisible="false">
                      <title name="VAR">playery</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </next>
        </block>
        <block type="studio_whenArrow" uservisible="false">
          <title name="VALUE">down</title>
          <next>
            <block type="variables_set" inline="false" uservisible="false">
              <title name="VAR">playery</title>
              <value name="VALUE">
                <block type="math_arithmetic" inline="true" uservisible="false">
                  <title name="OP">ADD</title>
                  <value name="A">
                    <block type="variables_get" uservisible="false">
                      <title name="VAR">playery</title>
                    </block>
                  </value>
                  <value name="B">
                    <block type="math_arithmetic" inline="true" uservisible="false">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get" uservisible="false">
                          <title name="VAR">playery</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="procedural_to_functional_call" inline="false" uservisible="false">
                          <mutation name="update-player">
                            <arg name="key"/>
                            <arg name="y"/>
                          </mutation>
                          <value name="ARG0">
                            <block type="text" uservisible="false">
                              <title name="TEXT">down</title>
                            </block>
                          </value>
                          <value name="ARG1">
                            <block type="variables_get" uservisible="false">
                              <title name="VAR">playery</title>
                            </block>
                          </value>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </value>
              <next>
                <block type="studio_setSpriteXY" inline="true" uservisible="false">
                  <value name="SPRITE">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="XPOS">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">200</title>
                    </block>
                  </value>
                  <value name="YPOS">
                    <block type="variables_get" uservisible="false">
                      <title name="VAR">playery</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </next>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Number">
          <block type="functional_plus" inline="false"/>
          <block type="functional_minus" inline="false"/>
          <block type="functional_times" inline="false"/>
          <block type="functional_dividedby" inline="false"/>
          <block type="functional_math_number">
            <title name="NUM">0</title>
          </block>
        </category>
        <category name="String">
          <block type="functional_string">
            <title name="VAL"/>
          </block>
        </category>
        <category name="Image">
          <block type="functional_sprite_dropdown">
            <title name="SPRITE_INDEX">dog</title>
          </block>
          <block type="functional_background_dropdown">
            <title name="BACKGROUND">"cave"</title>
          </block>
        </category>
        <category name="Boolean">
          <block type="functional_greater_than" inline="false"/>
          <block type="functional_less_than" inline="false"/>
          <block type="functional_number_equals" inline="false"/>
          <block type="functional_string_equals" inline="false"/>
          <block type="functional_logical_and" inline="false"/>
          <block type="functional_logical_or" inline="false"/>
          <block type="functional_logical_not" inline="false"/>
          <block type="functional_boolean">
            <title name="VAL">true</title>
          </block>
        </category>
        <category name="Conditionals">
          <block type="functional_cond" inline="false"/>
        </category>
        <category name="Variables" custom="FUNCTIONAL_VARIABLE"/>
        <category name="Functions" custom="PROCEDURE"/>
      </xml>
    </toolbox_blocks>
  </blocks>
</Studio>