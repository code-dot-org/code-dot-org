<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2018-02-08T20:07:48.000Z",
  "level_num": "custom",
  "user_id": 318,
  "properties": {
    "skin": "harvester",
    "serialized_maze": "[[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":2,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":1,\"value\":2,\"range\":2,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":1,\"value\":2,\"range\":2,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1,2,3],\"startsHidden\":true},{\"tileType\":1,\"value\":2,\"range\":2,\"possibleFeatures\":[1,2,3],\"startsHidden\":true},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[1,2,3],\"startsHidden\":true},{\"tileType\":1,\"value\":4,\"range\":4,\"possibleFeatures\":[1,2,3],\"startsHidden\":true},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":1,\"value\":2,\"range\":2,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"value\":4,\"range\":4,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":1,\"value\":5,\"range\":5,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"value\":2,\"range\":2,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":1,\"value\":4,\"range\":4,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":1,\"value\":5,\"range\":5,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":1,\"value\":6,\"range\":6,\"possibleFeatures\":[3],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}]]",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "true",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "start_direction": "2",
    "step_mode": "1",
    "flower_type": "redWithNectar",
    "fast_get_nectar_animation": "false",
    "step_speed": "1",
    "ideal": "0",
    "instructions_important": "false",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"Start by making sure you understand how this function is *supposed* to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?\\n\\nAdd conditional statements to the function to check for corn, pumpkins, and lettuce.\",\"hint_id\":\"courseF_bee_fwp_challenge2_a\",\"hint_type\":\"general\",\"hint_path\":\"\",\"hint_video\":\"\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/5ef2039ba33ee6a57673efe797e95506/courseF_bee_fwp_challenge2.mp3\"},{\"hint_class\":\"content\",\"hint_markdown\":\"Are you running out of `move forward` blocks?\\nTry using a *second* `for loop` in your main program.\",\"hint_id\":\"courseF_bee_fwp_challenge2_b\",\"hint_type\":\"general\",\"hint_path\":\"\",\"hint_video\":\"\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/3ec5a03d41cfdd81b0714be9c9704369/courseF_bee_fwp_challenge2.mp3\"},{\"hint_class\":\"bottom-out\",\"hint_markdown\":\"**Here is what your function should look like:**\\n\\n<xml><block type=\\\"procedures_defnoreturn\\\" deletable=\\\"false\\\" movable=\\\"false\\\" editable=\\\"false\\\" usercreated=\\\"true\\\">\\n    <mutation>\\n      <arg name=\\\"length\\\"/>\\n    </mutation>\\n    <title name=\\\"NAME\\\">pick row</title>\\n    <statement name=\\\"STACK\\\">\\n      <block type=\\\"maze_turn\\\">\\n        <title name=\\\"DIR\\\">turnLeft</title>\\n        <next>\\n          <block type=\\\"controls_for\\\" inline=\\\"true\\\">\\n            <title name=\\\"VAR\\\">counter</title>\\n            <value name=\\\"FROM\\\">\\n              <block type=\\\"math_number\\\">\\n                <title name=\\\"NUM\\\">1</title>\\n              </block>\\n            </value>\\n            <value name=\\\"TO\\\">\\n              <block type=\\\"parameters_get\\\">\\n                <title name=\\\"VAR\\\">length</title>\\n              </block>\\n            </value>\\n            <value name=\\\"BY\\\">\\n              <block type=\\\"math_number\\\">\\n                <title name=\\\"NUM\\\">1</title>\\n              </block>\\n            </value>\\n            <statement name=\\\"DO\\\">\\n              <block type=\\\"maze_move\\\">\\n                <title name=\\\"DIR\\\">moveForward</title>\\n                <next>\\n                  <block type=\\\"controls_repeat_ext\\\" inline=\\\"true\\\">\\n                    <value name=\\\"TIMES\\\">\\n                      <block type=\\\"variables_get\\\">\\n                        <title name=\\\"VAR\\\">counter</title>\\n                      </block>\\n                    </value>\\n                    <statement name=\\\"DO\\\">\\n                      <block type=\\\"harvester_ifHasCrop\\\">\\n                        <title name=\\\"LOC\\\">Corn</title>\\n                        <statement name=\\\"DO\\\">\\n                          <block type=\\\"harvester_corn\\\"/>\\n                        </statement>\\n                        <next>\\n                          <block type=\\\"harvester_ifHasCrop\\\">\\n                            <title name=\\\"LOC\\\">Pumpkin</title>\\n                            <statement name=\\\"DO\\\">\\n                              <block type=\\\"harvester_pumpkin\\\"/>\\n                            </statement>\\n                            <next>\\n                              <block type=\\\"harvester_ifHasCrop\\\">\\n                                <title name=\\\"LOC\\\">Lettuce</title>\\n                                <statement name=\\\"DO\\\">\\n                                  <block type=\\\"harvester_lettuce\\\"/>\\n                                </statement>\\n                              </block>\\n                            </next>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </statement>\\n                  </block>\\n                </next>\\n              </block>\\n            </statement>\\n            <next>\\n              <block type=\\\"controls_repeat_ext\\\" inline=\\\"true\\\">\\n                <value name=\\\"TIMES\\\">\\n                  <block type=\\\"parameters_get\\\">\\n                    <title name=\\\"VAR\\\">length</title>\\n                  </block>\\n                </value>\\n                <statement name=\\\"DO\\\">\\n                  <block type=\\\"maze_move\\\">\\n                    <title name=\\\"DIR\\\">moveBackward</title>\\n                  </block>\\n                </statement>\\n                <next>\\n                  <block type=\\\"maze_turn\\\">\\n                    <title name=\\\"DIR\\\">turnRight</title>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n  </block>\\n</xml>\",\"hint_id\":\"courseF_bee_fwp_challenge2_c\",\"hint_type\":\"general\",\"hint_path\":\"\",\"hint_video\":\"\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/6f0726034971f86b428ffc7f53bc8cac/courseF_bee_fwp_challenge2.mp3\"},{\"hint_class\":\"bottom-out\",\"hint_markdown\":\"**Here is what your main program should look like:**\\n\\n<xml>\\n  <block type=\\\"when_run\\\" deletable=\\\"false\\\" movable=\\\"false\\\">\\n    <next>\\n      <block type=\\\"controls_for\\\" inline=\\\"true\\\">\\n        <title name=\\\"VAR\\\">counter2</title>\\n        <value name=\\\"FROM\\\">\\n          <block type=\\\"math_number\\\">\\n            <title name=\\\"NUM\\\">1</title>\\n          </block>\\n        </value>\\n        <value name=\\\"TO\\\">\\n          <block type=\\\"math_number\\\">\\n            <title name=\\\"NUM\\\">6</title>\\n          </block>\\n        </value>\\n        <value name=\\\"BY\\\">\\n          <block type=\\\"math_number\\\">\\n            <title name=\\\"NUM\\\">1</title>\\n          </block>\\n        </value>\\n        <statement name=\\\"DO\\\">\\n          <block type=\\\"maze_move\\\">\\n            <title name=\\\"DIR\\\">moveForward</title>\\n            <next>\\n              <block type=\\\"procedures_callnoreturn\\\" inline=\\\"false\\\">\\n                <mutation name=\\\"pick row\\\">\\n                  <arg name=\\\"length\\\"/>\\n                </mutation>\\n                <value name=\\\"ARG0\\\">\\n                  <block type=\\\"variables_get\\\">\\n                    <title name=\\\"VAR\\\">counter2</title>\\n                  </block>\\n                </value>\\n              </block>\\n            </next>\\n          </block>\\n        </statement>\\n      </block>\\n    </next>\\n    </block></xml>\\n\",\"hint_id\":\"courseF_bee_fwp_challenge2_d\",\"hint_type\":\"general\",\"hint_path\":\"\",\"hint_video\":\"\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/4bcadd5d26f702d2c33fb869102acc3c/courseF_bee_fwp_challenge2.mp3\"}]",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "shape_shift": "false",
    "min_collected": "0",
    "instructions": "Use one `for loop` in a function with a `length` parameter to collect all of the vegetables in each row. ",
    "markdown_instructions": "*\"**Lettuce** see if you can handle this one final test! Give it everything you've got!\"*\r\n\r\nUse one `for loop` in a function to collect all of the vegetables in the row. Make the `for loop` count to different maximum values by using the `length` parameter. Make your program as short as possible by using a second `for loop` outside the function.\r\n\r\nGood luck!",
    "callout_json": "[\r\n {\r\n  \"localization_key\": \"courseF_bee_fwp_challenge2_callout1\",\r\n  \"callout_text\": \"This function will do a good job with corn, but what about the other vegetables?\",\r\n  \"element_id\": \"#corn\",\r\n  \"on\": \"function_editor_opened\",\r\n  \"qtip_config\": {\r\n   \"codeStudio\": {\r\n    \"canReappear\": false,\r\n    \"dropletPaletteCategory\": \"\"\r\n   },\r\n   \"style\": {\r\n    \"classes\": \"\"\r\n   },\r\n   \"position\": {\r\n    \"my\": \"bottom center\",\r\n    \"at\": \"right top\",\r\n    \"adjust\": {\r\n     \"x\": 0,\r\n     \"y\": 0\r\n    }\r\n   }\r\n  }\r\n }\r\n]",
    "disable_procedure_autopopulate": "false",
    "top_level_procedure_autopopulate": "false",
    "name_suffix": "_2018",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-05-27 12:29:28 +0000\",\"changed\":[\"notes\",\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"markdown_instructions\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 12:30:28 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"markdown_instructions\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 12:32:38 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 12:34:10 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 12:35:12 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 12:40:06 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 12:42:36 +0000\",\"changed\":[\"notes\",\"toolbox_blocks\",\"solution_blocks\",\"ideal\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 12:43:26 +0000\",\"changed\":[\"name\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 15:29:35 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 15:30:56 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 15:32:18 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 15:32:32 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 15:33:45 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 15:36:09 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-05-27 15:36:50 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:06:45 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:09:43 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:14:24 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"use_modal_function_editor\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:14:39 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"start_direction\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:19:20 +0000\",\"changed\":[],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:23:11 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:23:14 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:23:17 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:24:18 +0000\",\"changed\":[\"notes\",\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"markdown_instructions\",\"ideal\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:24:35 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 22:27:35 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:42:32 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:42:38 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:43:09 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:44:36 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:45:46 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:51:34 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"shape_shift\",\"start_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:52:06 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:52:24 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:52:50 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"shape_shift\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:57:30 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:58:18 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"start_blocks\",\"contained_level_names\",\"maze_data\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:58:32 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:58:43 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:59:14 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-19 23:59:23 +0000\",\"changed\":[\"start_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-20 00:02:09 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-20 00:09:07 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-20 00:12:07 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-20 00:14:10 +0000\",\"changed\":[\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"start_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-20 00:41:39 +0000\",\"changed\":[\"toolbox_blocks\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-29 15:45:33 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2017-06-29 15:48:06 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":285,\"changed_by_email\":\"harvey@pd.code.org\"},{\"changed_at\":\"2018-02-01 01:02:13 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":772,\"changed_by_email\":\"tessa.wiedmann@code.org\"},{\"changed_at\":\"2018-02-01 16:39:52 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"contained_level_names\"],\"changed_by_id\":772,\"changed_by_email\":\"tessa.wiedmann@code.org\"},{\"changed_at\":\"2018-02-01 16:49:07 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"instructions\",\"contained_level_names\"],\"changed_by_id\":772,\"changed_by_email\":\"tessa.wiedmann@code.org\"},{\"changed_at\":\"2018-02-01 16:52:41 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"markdown_instructions\",\"contained_level_names\"],\"changed_by_id\":772,\"changed_by_email\":\"tessa.wiedmann@code.org\"}]"
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="maze_move">
              <title name="DIR">moveForward</title>
              <next>
                <block type="procedures_callnoreturn" inline="false">
                  <mutation name="pick row">
                    <arg name="length"/>
                  </mutation>
                  <value name="ARG0">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </next>
        </block>
        <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
            <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
            <block type="maze_turn">
              <title name="DIR">turnLeft</title>
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="parameters_get">
                      <title name="VAR">length</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="harvester_corn" id="corn"/>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveBackward</title>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </statement>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Actions">
          <block type="maze_move" limit="7">
            <title name="DIR">moveForward</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="harvester_pumpkin" limit="1"/>
          <block type="harvester_corn" limit="1"/>
          <block type="harvester_lettuce" limit="1"/>
        </category>
        <category name="Loops">
          <block type="controls_repeat_ext" inline="true"/>
          <block type="controls_for" inline="true">
            <title name="VAR">counter2</title>
            <value name="FROM">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
            <value name="TO">
              <block type="math_number">
                <title name="NUM">6</title>
              </block>
            </value>
            <value name="BY">
              <block type="math_number">
                <title name="NUM">1</title>
              </block>
            </value>
          </block>
          <block type="variables_get">
            <title name="VAR">counter2</title>
          </block>
        </category>
        <category name="Conditionals">
          <block type="harvester_ifHasCrop">
            <title name="LOC">Lettuce</title>
          </block>
          <block type="harvester_ifHasCropElse">
            <title name="LOC">Corn</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
        <category name="Math">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </category>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="controls_for" inline="true">
              <title name="VAR">counter2</title>
              <value name="FROM">
                <block type="math_number">
                  <title name="NUM">1</title>
                </block>
              </value>
              <value name="TO">
                <block type="math_number">
                  <title name="NUM">6</title>
                </block>
              </value>
              <value name="BY">
                <block type="math_number">
                  <title name="NUM">1</title>
                </block>
              </value>
              <statement name="DO">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="pick row">
                        <arg name="length"/>
                      </mutation>
                      <value name="ARG0">
                        <block type="variables_get">
                          <title name="VAR">counter2</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </next>
        </block>
        <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false" usercreated="true">
          <mutation>
            <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
            <block type="maze_turn">
              <title name="DIR">turnLeft</title>
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="parameters_get">
                      <title name="VAR">length</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="harvester_ifHasCrop">
                              <title name="LOC">Corn</title>
                              <statement name="DO">
                                <block type="harvester_corn"/>
                              </statement>
                              <next>
                                <block type="harvester_ifHasCrop">
                                  <title name="LOC">Pumpkin</title>
                                  <statement name="DO">
                                    <block type="harvester_pumpkin"/>
                                  </statement>
                                  <next>
                                    <block type="harvester_ifHasCrop">
                                      <title name="LOC">Lettuce</title>
                                      <statement name="DO">
                                        <block type="harvester_lettuce"/>
                                      </statement>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveBackward</title>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </statement>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>