<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2017-09-25T20:55:58.000Z",
  "level_num": "custom",
  "user_id": 13,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "moveForward": null,
      "turnRight": {
        "paramButtons": {
          "maxArgs": 1,
          "minArgs": 1
        }
      },
      "turnLeft": {
        "paramButtons": {
          "maxArgs": 1,
          "minArgs": 1
        }
      },
      "comment_Goals_1": {
        "goal": "Move turtle"
      },
      "comment_Goals_2": {
        "goal": "Orient turtle"
      },
      "comment_Goals_3": {
        "goal": "Define function"
      },
      "comment_Goals_4": {
        "goal": "Call function"
      },
      "functionParams_none": null,
      "callMyFunction": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "slider_speed": "0.9",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "free_play": "true",
    "show_turtle_before_run": "true",
    "autocomplete_palette_apis_only": "true",
    "long_instructions": "# Terminology: *Parameter*\r\n\r\nWhen you have a command like: `moveForward(100)` we say that the `moveForward()` command *accepts a **parameter***.  And 100 is the value *given* or *supplied* to `moveForward()`'s **parameter**.  Since this value can change, you will often see a written description for the command that looks something like **`moveForward(pixels)`** to indicate that the value supplied to `moveForward()`'s **parameter** should be the number of pixels you want it move.\r\n\r\nThe good old `moveForward()` command still exists.  In fact it's the **same command** as `moveForward(pixels)`. The \"parameter-less\" version of `moveForward()` simply supplies a **default value** to the parameter.  We might also say that the `moveForward()` command has an **optional parameter** since you could call either `moveForward()` or `moveForward(50)` and it doesn't cause an error when you run the program.\r\n\r\n\r\n# New Commands!\r\n\r\nCheck it out.  The turtle toolbox now contains the *parameterized* versions of the turtle commands including `turnLeft(angle)` and `turnRight(angle)`.  \r\n\r\n# Do This:\r\n\r\nUse the parameterized versions of the commands to draw a triangle with sides that are 100 pixels long. Don't forget that you can define and call functions to make the code more efficient.\r\n\r\nAt a minimum, you'll use `//Move turtle` and `//Orient turtle` to do this. You can also solve the problem by using `//Define function` and `//Call function`.\r\n\r\n<img src=\"https://images.code.org/0207568ff82b0571fa6757081330749d-image-1441901783815.png\" width=150>",
    "never_autoplay_video": "false",
    "examples_required": "false",
    "text_mode_at_start": "blocks",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "true",
    "short_instructions": "Use the parameterized versions of the turtle commands to create a triangle with sides 100 pixels long. (Click to see full instructions)",
    "submittable": "false",
    "hide_view_data_button": "true",
    "droplet_tooltips_disabled": "false",
    "debugger_disabled": "true",
    "encrypted_examples": "nwkkv3tTxoA8esOQ6cA3vh6zTaTI/4tDFTlSpUOX9Qw8OdADcbaCSoxZ9fjS\nlOC+\n",
    "lock_zero_param_functions": "true",
    "execute_palette_apis_only": "false",
    "fail_on_lint_errors": "false",
    "min_workspace_height": "-41",
    "log_conditions": [
      {
        "entries": [
          "[forTest]"
        ],
        "matchType": "exact",
        "minTimes": 0,
        "maxTimes": 0,
        "message": "Hey! You're using a programming construct - loops - we haven't (officially) learned about yet :).  Don't worry, your knowledge will come in handy later, but for now, try to stick to the constraints of this problem: Just use a sequence of moveForward(pixels) and turnRight(degrees) without any loops."
      },
      {
        "entries": [
          "moveForward:1"
        ],
        "matchType": "exact",
        "minTimes": 3,
        "message": "At a minimum, to draw the triangle you need to move 3 times."
      },
      {
        "entries": [
          "turnLeft:1"
        ],
        "matchType": "exact",
        "maxTimes": 0,
        "message": "App Lab is expecting that you'll use a combination of turnRight(degrees) and moveForward(pixels) to complete this task.  There is a clever way to use turnLeft that will result in a correct program, but use turnRight for now."
      },
      {
        "entries": [
          "turnRight:1"
        ],
        "matchType": "exact",
        "minTimes": 2,
        "maxTimes": 3,
        "message": "App Lab is expecting that you'll need to call turnRight(degrees) twice, or three times, to do this task."
      }
    ],
    "instructions_important": "false",
    "show_debug_watch": "false",
    "makerlab_enabled": "false",
    "disable_procedure_autopopulate": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "expand_debugger": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-09-25 21:07:50 +0000\",\"changed\":[\"code_functions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-02 21:18:45 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":743,\"changed_by_email\":\"kvenkatesh@unomaha.edu\"},{\"changed_at\":\"2017-10-15 13:15:48 +0000\",\"changed\":[\"code_functions\",\"text_mode_at_start\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-15 13:19:33 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"},{\"changed_at\":\"2017-10-20 13:20:29 +0000\",\"changed\":[\"code_functions\",\"markdown_instructions\",\"encrypted_examples\",\"log_conditions\",\"contained_level_names\"],\"changed_by_id\":726,\"changed_by_email\":\"bbmorrison@unomaha.edu\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>