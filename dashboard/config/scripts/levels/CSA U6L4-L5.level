<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "A `WordListEditor` object has two `ArrayList`s – a `wordList` and a `replacements` list – which contain words read in from `File` objects.\r\n\r\n1. In `WordListEditor.java`, write the method `replaceWords()`. The `replaceWords()` method in the `WordListEditor` class is intended to find words in `wordList` that are less than the parameter `minLength` and replace them with a randomly chosen word from the `replacements` list.\r\n\r\n2. In `MyConsole.java`, test the `replaceWords()` method with different arguments.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "import java.util.ArrayList;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class MyConsole {\n  public static void main(String[] args) throws FileNotFoundException {\n\n    File randomWords = new File(\"randomWords.txt\");\n    File replacementWords = new File(\"replacements.txt\");\n    WordListEditor wordList = new WordListEditor(randomWords, replacementWords);\n\n    System.out.println(\"Before: \" + wordList);\n    \n    wordList.replaceWords(6);\n\n    System.out.println(\"\\nAfter: \" + wordList);\n  }\n}",
        "isVisible": true
      },
      "WordListEditor.java": {
        "text": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\npublic class WordListEditor {\n\n  private ArrayList<String> wordList;\n  private ArrayList<String> replacements;\n\n  public WordListEditor(File newFile, File newWords) throws FileNotFoundException {\n    wordList = createList(newFile);\n    replacements = createList(newWords);\n  }\n\n  public ArrayList<String> createList(File inputFile) throws FileNotFoundException {\n    Scanner fileInput = new Scanner(inputFile);\n    ArrayList<String> wordList = new ArrayList<String>();\n\n    while (fileInput.hasNext()) {\n      wordList.add(fileInput.next());\n    }\n\n    fileInput.close();\n\n    return wordList;\n  }\n\n  // TO DO: Write the method to check each word in the\n  // list and replace any that are less than minLength\n  // with a word from the replacement list.\n  public void replaceWords(int minLength) {\n    \n  }\n\n  public String toString() {\n    String listText = \"\";\n    \n    for (int i = 0; i < wordList.size(); i++) {\n      listText += wordList.get(i) + \", \";\n    }\n\n    return listText;\n  }\n}",
        "isVisible": true
      },
      "randomWords.txt": {
        "text": "writer\ndevelop\nconvert\nread\nstop\ndecade\ncontact\nseries\nact\nabstract\nprogress\nfate\nscheme\nknow\ntheater\nunique\nitem\nconcept\nloud\ncultural",
        "isVisible": true
      },
      "replacements.txt": {
        "text": "opinion\ncontribution\ncontext\nstatement\nattitude\nprofession\nthought\nemotion\ntradition\nphilosophy",
        "isVisible": true
      }
    },
    "encrypted_examples": "f0IsrdHx9oayOAswvXWYgoG/TL5XtGZ+9azHHlFb/tM9E9IspvpSby6P4e/Z\n1tOrrwgIsEG8fMtjVrjzMm5o/4qtQWEkmEe8eWocEDnkutQ=\n",
    "encrypted_validation": "30w++H0uoSZKdN3gmTKRoGeWz7zsDGQ5Ms59JmQZAdV+83kogGNr7OOoFbIB\nHaqa41GX9ZUt3LPkwiF323hudNmbAAC15Z8SjOiQ20/yYEDxKCv/mNmaAdv2\nT3+g5eMYUh953xh+Q92qdVMLhqSi0encnh+dqSSGP6+xR9OQQuEbNH6KmxBR\nCDVDHwpr6AIcNcuBZk49Bn7EYwFJYIP7OBaTFQy7rE+mkwS5jGRnJsKsSrlw\nffucTgfnB97NLh6zcfQ+Kl0GkxUK6K4H05FwJ2WFzEiy4L7SQ9tPMbGS2WTv\ngYXFrtJSn3CwpXAdk/MPttyFvqIrY8YgErHgnJymmEY+dGSGQfsJAIBFym3Z\nInMJbbJInqT2WvBsh6v6uaqaQZ3xIO4AxiuTyygCUAn2OM2w+K92+1d9n1Dp\ntL1FEm9iLgkSVP43ze1wTGosfW8JLHMBQ0ecpo18N0AhEQoTNa1eZIPYBjHz\nPAymGE4vT31YgU13HFrXOBJTy1LIjzF497mxY0GfOWJsME37i/rDamjenXNX\nClRrW1eyy+AKM+dXhKasSz1qYkKxy/hhnKuT7yfzVs2/ewcUmegiMQnf+gSj\nQ+K7DJsgn/moZT17EFclcPPAMuo0+ZcsewG94VzjdgzGYeWqir/DJqjc4MEJ\nGvP3i1Ak2kjuRbHk7vzzxjet8sPRwdtM5CDGHRxnCUIa8/1LjeXNFJC220FO\n50Khwtz6iJQeMw2vgBSaGJ3AOd20yA6lOFxvf3oNzZGaOJZGxd/J/Hcv9ptM\n795Ly10Ludh00kRnOAMq2a2TosWd3eByZlvscbHs7J+lKhJRRvxpxvDTs86H\ny5gETJWttdkPhzr0wLm3+chk0gxz59Nf6TCfMMwLc4IeaealfPq6a82R4qJb\nL/wQNNhtqhY8EhVovyansPNPOoUHOtdLhvp7KUO2PydDy2Qechtxpg5o9ttL\niccdczBL31AvAqI0YPJ48rugUKwJ632jn3VfoWpdZOE8+pwFrGJMv2UKLVX/\nvoMo7ces+TS0TiBmq3ltDK5aPUGK2qMrD7LVLPFoPxDLoOwhb9yXnUNPEmcf\nILhHV+QmRXQw0vFmgWKHFiFUJ3K+NuQf4SNdtUHJi6JYO4q7OuwRuOLZEk3U\nBPlID9yH1ibnDFF6a3fDQ4Qej/rH5qVDAOYlUAr6FSdF38JeyDvan6Z8lS91\nNZjzcw3X6HPdq4AYY6WSttuq9yqugS8odg+gOE92REqRPKrAwTn+4R205TEY\nZggmPKL2Y5N0wUtzAO3m9in5GPS5NUzC81eKTTtTs6RFdFpJFHOO2fw0cu59\nsmVfZztriUIC9z1HAXHr4ZaKFGS9uQiB2bW9+XHy37XbWABuM3yXQ4D8iS8B\nTIaadS018K+OqGTlOYCKYKMqriTvgccKFwlAB9xJD+VMRmOtSQ==\n"
  },
  "game_id": 68,
  "created_at": "2021-11-03T19:36:03.000Z",
  "level_num": "custom",
  "user_id": 9271,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2021-11-03 19:36:10 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":9271,\"changed_by_email\":\"jamila@code.org\"},{\"changed_at\":\"2021-11-20 16:36:28 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-11-20 16:57:07 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-11-22 00:29:55 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-11-22 00:31:13 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-11-23 16:42:53 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2021-12-02 16:52:22 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-03 14:56:14 +0000\",\"changed\":[],\"changed_by_id\":18414,\"changed_by_email\":\"thomas.wang@code.org\"}]"
}]]></config>
</Javalab>
