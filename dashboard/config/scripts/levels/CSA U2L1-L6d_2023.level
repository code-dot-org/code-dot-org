<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**Create the `Dessert`(#e7e8ea) class by declaring instance variables for the specified attributes, and refactor the `Cupcake`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.**\r\n\r\n✅ **TO DO #1:** In the `Dessert`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the flavor of a dessert\r\n   \r\n   * the price of a dessert\r\n\r\n✅ **TO DO #2:** Refactor the `Cupcake`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.\r\n\r\n✅ **TO DO #3:** In `FoodTruckRunner.java`(#e7e8ea), instantiate a `Dessert`(#e7e8ea) object and a `Cupcake`(#e7e8ea) object, then print the instance variables for the `Dessert`(#e7e8ea) and `Cupcake`(#e7e8ea) objects by calling the `AttributesHelper.printAttributes(nameOfObject)`(#e7e8ea) method.\r\n\r\n::: details [**🔦 What is `AttributesHelper.printAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `AttributesHelper.printAttributes()`(#e7e8ea) is a hidden support method that prints the instance variables in a class to the console. For example:\r\n\r\n```\r\nDog fido = new Dog();\r\nAttributesHelper.printAttributes(fido);\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables, creating a subclass, and instantiating objects.\r\n\r\n## ***Don't forget to . . .***\r\n\r\n![](https://images.code.org/eb2c8910ae2e150019b8e2177405d4af-image-1668191576873.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/inheritance",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Desserts and Cupcakes",
    "bubble_choice_description": "Create the `Dessert` class by declaring instance variables for the specified attributes, and refactor the `Cupcake` class to be a subclass of the `Dessert` class.",
    "thumbnail_url": "https://images.code.org/5324bf9000c0be0a687436e37b9d93f9-cupcake.png",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* -------------------------------------- TO DO --------------------------------------\n     * ✅ Instantiate Dessert and Cupcake objects, then print the instance variables for\n     * the Dessert and Cupcake objects to the console using AttributesHelper.printAttributes().\n     * -----------------------------------------------------------------------------------\n     */\n\n    \n\n\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dessert.java": {
        "text": "/*\n * Represents a dessert that can be sold at a food truck\n */\npublic class Dessert {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Declare instance variables for the flavor and price of a dessert.\n   * -------------------------------------------------------------------\n   */\n\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Cupcake.java": {
        "text": "/*\n * Represents a cupcake that can be sold at a food truck\n * Cupcake is a type of Dessert\n */\npublic class Cupcake {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Refactor the Cupcake class to be a subclass of Dessert.\n   * -------------------------------------------------------------------\n   */\n\n  private String flavor;    // The flavor of a cupcake\n  private double price;     // The price of a cupcake\n  private boolean isMini;   // Whether or not a cupcake is a miniature cupcake\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "AttributesHelper.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.*;\n\npublic final class AttributesHelper {\n\n  private static Class currentClass;\n  private static Class superClass;\n  private static String currentClassName;\n  private static String superClassName;\n  private static ArrayList<String> currentClassFields;\n  private static ArrayList<String> superClassFields;\n\n  public static void setInfo(Object testObject) {\n    currentClass = testObject.getClass();\n    superClass = currentClass.getSuperclass();\n\n    currentClassName = currentClass.getSimpleName();\n    superClassName = superClass.getSimpleName();\n\n    currentClassFields = getClassFieldsList(currentClass, currentClassName);\n    superClassFields = getClassFieldsList(superClass, superClassName);\n  }\n  \n  public static String getCurrentClassName() {\n    return currentClassName;\n  }\n  \n  public static String getSuperClassName() {\n    return superClassName;\n  }\n  \n  public static ArrayList<String> getCurrentClassFields() {\n    return currentClassFields;\n  }\n  \n  public static ArrayList<String> getSuperClassFields() {\n    return superClassFields;\n  }\n  \n  public static ArrayList<String> getClassFieldsList(Class currentClass, String className) {\n    Field[] classFields = currentClass.getDeclaredFields();\n    ArrayList<String> fieldsList = fieldsToList(Arrays.toString(classFields));\n    cleanFields(fieldsList, className);\n    return fieldsList;\n  }\n  \n  private static ArrayList<String> fieldsToList(String fieldsAsText) {\n    fieldsAsText = fieldsAsText.substring(1, fieldsAsText.length() - 1);\n    ArrayList<String> fieldsList = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = fieldsAsText.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = fieldsAsText.substring(0, comma);\n      fieldsList.add(currentField);\n      fieldsAsText = fieldsAsText.substring(comma + 2);\n      comma = fieldsAsText.indexOf(\",\");\n    }\n\n    fieldsList.add(fieldsAsText);\n    return fieldsList;\n  }\n  \n  public static void cleanFields(ArrayList<String> classFieldsList, String className) {\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String currentField = classFieldsList.get(index);\n\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      currentField.trim();\n\n      classFieldsList.set(index, currentField);\n    }\n  }\n  \n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n  \n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n  public static String findField(ArrayList<String> classFieldsList, String typeToFind, String className) {\n    String result = \"MISSING\";\n\n    for (int index = 0; index < classFieldsList.size(); index++) {\n      String current = classFieldsList.get(index);\n\n      if (current.indexOf(typeToFind) > 0) {\n        result = removeClassName(current, className);\n        result = removeJavaLang(result);\n      }\n    }\n\n    return result;\n  }\n  \n  public static String getAccess(String currentField) {\n    String result = \"\";\n\n    if (!currentField.equals(\"MISSING\")) {\n      result = currentField.substring(0, currentField.indexOf(\" \"));\n    \n    }\n\n    return result;\n  }\n  \n  public static String getFieldType(String currentField) {\n    String[] possibleTypes = {\"boolean\", \"int\", \"double\", \"String\"};\n    String result = \"MISSING\";\n\n    for (int index = 0; index < possibleTypes.length; index++) {\n      if (currentField.indexOf(possibleTypes[index]) > 0) {\n        result = possibleTypes[index];\n      }\n    }\n\n    return result;\n  }\n  \n  public static void printAttributes(Object currentObject) {\n    setInfo(currentObject);\n\n    System.out.println(getAttributesHeading());\n    System.out.println(getCurrentClassAttributes());\n\n    if (!superClassName.equals(\"Object\")) {\n      System.out.println(getSuperAttributes(superClassName));\n    }\n  }\n  \n  public static String getAttributesHeading() {       \n    String result = currentClassName + \" Class Attributes\";\n    result += \"\\n------------------------------\";\n    return result;\n  }\n  \n  public static String getSuperAttributesHeading(String superClassName) {\n    return \"\\n>> inherited from \" + superClassName + \" class <<\\n\";\n  }\n  \n  public static String getCurrentClassAttributes() {\n    ArrayList<String> currentClassFields = getCurrentClassFields();\n    return getListAsText(currentClassFields);\n  }\n  \n  public static String getSuperAttributes(String superClassName) {\n    ArrayList<String> superClassFields = getSuperClassFields();\n    return getSuperAttributesHeading(superClassName) + getListAsText(superClassFields);\n  }\n  \n  public static String getListAsText(ArrayList<String> classInfoList) {\n    String result = \"\";\n\n    for (String currentField : classInfoList) {\n      result += currentField + \"\\n\";\n    }\n\n    return result.trim();\n  }\n\n}",
        "isVisible": false,
        "tabOrder": 5
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:31:49.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:31:49.328+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L6c_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L6c_2023\"},{\"changed_at\":\"2022-11-01 17:31:50 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:19:48 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:41:25 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:51:59 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:52:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:52:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:36:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:36:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:36:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:36:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:33 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-06 21:21:30 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 15:52:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:09:14 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-07 16:09:24 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:55:50 +0000\",\"changed\":[\"encrypted_validation\",\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 18:56:04 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-11 19:00:30 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
