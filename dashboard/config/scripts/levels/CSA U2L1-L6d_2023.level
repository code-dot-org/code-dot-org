<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "long_instructions": "**Create the `Dessert`(#e7e8ea) class by declaring instance variables for the specified attributes, and refactor the `Cupcake`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.**\r\n\r\n✅ **TO DO:** Write the `Dessert`(#e7e8ea) class, and refactor the `Cupcake`(#e7e8ea) class.\r\n\r\n1. In the `Dessert`(#e7e8ea) class, declare instance variables for the following attributes:\r\n\r\n   * the flavor of a dessert\r\n   \r\n   * the price of a dessert\r\n\r\n2. Refactor the `Cupcake`(#e7e8ea) class to be a subclass of the `Dessert`(#e7e8ea) class.\r\n\r\n3. In `FoodTruckRunner.java`(#e7e8ea):\r\n\r\n   * Instantiate a `Dessert`(#e7e8ea) object and a `Cupcake`(#e7e8ea) object\r\n   \r\n   * Print the instance variables for the `Dessert`(#e7e8ea) and `Cupcake`(#e7e8ea) objects to the console using `ClassInfo.getAttributes(nameOfObject)`(#e7e8ea)\r\n\r\n::: details [**🔦 What is `ClassInfo.getAttributes()`(#e7e8ea)?**]\r\n  \r\nThe `ClassInfo.getAttributes()`(#e7e8ea) is a hidden support method that returns the instance variables in a class as a `String`(#e7e8ea). Call the method by passing an object as its argument, such as:\r\n\r\n```\r\nDog fido = new Dog();\r\nSystem.out.println(ClassInfo.getAttributes(fido));\r\n```\r\n\r\nThis method (along with the tests) will help you check that you declared your instance variables correctly.\r\n:::\r\n&nbsp;\r\n\r\n💡 **TIP:** Check out the **Help & Tips** tab ⬆️ for help with declaring instance variables, creating a subclass, and instantiating objects.\r\n\r\n📝 **COMMENT:** Be sure to add comments to note what your code does.\r\n\r\n🖥️ **TEST:** Test your program to check if your code achieves the expected result.\r\n\r\n🎉 **RUN:** Run your program to see the result of your code!\r\n\r\n## 🎯 Goal\r\n\r\n![](https://images.code.org/c3fa440c805c6d38316ee35324022457-image-1667490034423.png)",
    "reference_links": [
      "/courses/csa-2023/guides/instance-variables",
      "/courses/csa-2023/guides/inheritance",
      "/courses/csa-2023/guides/instantiating-objects"
    ],
    "display_name": "Desserts and Cupcakes",
    "bubble_choice_description": "Create the `Dessert` class by declaring instance variables for the specified attributes, and refactor the `Cupcake` class to be a subclass of the `Dessert` class.",
    "thumbnail_url": "https://images.code.org/5324bf9000c0be0a687436e37b9d93f9-cupcake.png",
    "encrypted_validation": "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\nPJFlVDa/3/0hiOQ3is8=\n",
    "start_sources": {
      "FoodTruckRunner.java": {
        "text": "public class FoodTruckRunner {\n  public static void main(String[] args) {\n\n    /* -------------------------------------- TO DO --------------------------------------\n     * ✅ Instantiate Dessert and Cupcake objects, then print the instance variables for\n     * the Dessert and Cupcake objects to the console using ClassInfo.getAttributes().\n     * -----------------------------------------------------------------------------------\n     */\n\n    \n\n\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Dessert.java": {
        "text": "/*\n * Represents a dessert that can be sold at a food truck\n */\npublic class Dessert {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Declare instance variables for the flavor and price of a dessert.\n   * -------------------------------------------------------------------\n   */\n\n\n\n  \n  \n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Cupcake.java": {
        "text": "/*\n * Represents a cupcake that can be sold at a food truck\n * Cupcake is a type of Dessert\n */\npublic class Cupcake {\n\n  /* ------------------------------ TO DO ------------------------------\n   * ✅ Refactor the Cupcake class to be a subclass of Dessert.\n   * -------------------------------------------------------------------\n   */\n\n  private String flavor;    // The flavor of a cupcake\n  private double price;     // The price of a cupcake\n  private boolean isMini;   // Whether or not a cupcake is a miniature cupcake\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "ClassInfo.java": {
        "text": "import java.lang.reflect.*;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic final class ClassInfo {\n\n  public static String getAttributes(Object testObject) {\n    Class objectClass = testObject.getClass();\n    Class objectSuperClass = objectClass.getSuperclass();\n    \n    Field[] objectFields = objectClass.getDeclaredFields();\n    Field[] superFields = objectSuperClass.getDeclaredFields();\n    \n    ArrayList<String> classFieldsList = convertToList(Arrays.toString(objectFields));\n    ArrayList<String> superFieldsList = convertToList(Arrays.toString(superFields));\n\n    String className = objectClass.getSimpleName();\n    String superClassName = objectSuperClass.getSimpleName();\n    \n    String heading = \"\\n------------------------------\\n\";\n    \n    String classFieldsText = cleanFields(classFieldsList, className);\n    String superFieldsText = cleanFields(superFieldsList, superClassName);\n\n    String result = className + \" Attributes \" + heading + classFieldsText;\n\n    if (!superClassName.equals(\"Object\")) {\n      result += \"\\n>> inherited from \" + superClassName + \" class <<\\n\" + superFieldsText;\n    }\n\n    return result;\n  }\n\n  public static ArrayList<String> convertToList(String result) {\n    result = result.substring(1, result.length() - 1);\n    ArrayList<String> classFields = new ArrayList<String>();\n\n    String currentField = \"\";\n    int comma = result.indexOf(\",\");\n\n    while (comma != -1) {\n      currentField = result.substring(0, comma);\n      classFields.add(currentField);\n      result = result.substring(comma + 2);\n      comma = result.indexOf(\",\");\n    }\n\n    classFields.add(result);\n    return classFields;\n  }\n\n  public static String cleanFields(ArrayList<String> classFields, String className) {\n    String result = \"\";\n\n    for (int index = 0; index < classFields.size(); index++) {\n      String currentField = classFields.get(index);\n      currentField = removeClassName(currentField, className);\n      currentField = removeJavaLang(currentField);\n      result += currentField + \"\\n\";\n    }\n\n    return result;\n  }\n\n  public static String removeClassName(String currentField, String className) {\n    int location = currentField.indexOf(className);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + className.length() + 1);\n      location = currentField.indexOf(className);\n    }\n\n    return currentField;\n  }\n\n  public static String removeJavaLang(String currentField) {\n    String textToFind = \"java.lang.\";\n    int location = currentField.indexOf(textToFind);\n\n    while (location != -1) {\n      currentField = currentField.substring(0, location) + currentField.substring(location + textToFind.length());\n      location = currentField.indexOf(textToFind);\n    }\n\n    return currentField;\n  }\n  \n}",
        "isVisible": false,
        "tabOrder": 3
      }
    },
    "encrypted_exemplar_sources": "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\nFIQDfkgnONlvXCs=\n",
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-11-01T17:31:49.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-11-01T17:31:49.328+00:00\",\"changed\":[\"cloned from \\\"CSA U2L1-L6c_2023\\\"\"],\"cloned_from\":\"CSA U2L1-L6c_2023\"},{\"changed_at\":\"2022-11-01 17:31:50 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-01 18:19:48 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:41:25 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:51:59 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:52:00 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 14:52:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:36:12 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:36:15 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:36:23 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:36:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-11-03 15:40:33 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
