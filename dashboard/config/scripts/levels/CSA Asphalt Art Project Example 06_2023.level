<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "**Teacher Feedback:** none\r\n\r\n##Result\r\n\r\n![](https://images.code.org/d3fd7134adf5d1fa8e9f89c4b1b9fb88-image-1666710503651.png)",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "serialized_maze": [
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ],
      [
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        },
        {
          "tileType": 1,
          "value": 0,
          "assetId": 0
        }
      ]
    ],
    "csa_view_mode": "neighborhood",
    "start_sources": {
      "MyNeighborhood.java": {
        "text": "import org.code.neighborhood.Painter;\n\npublic class MyNeighborhood {\n  public static void main(String[] args) {\n\n    Artist monet = new Artist();\n    monet.setCenter(8);\n    monet.paintCenter(\"MediumOrchid\");\n    monet.paintPetals(8);\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "PainterPlus.java": {
        "text": "import org.code.neighborhood.*;\n\npublic class PainterPlus extends Painter {\n  public PainterPlus() {\n    super();\n  }\n\n  public void turnRight() {\n    turnLeft();\n    turnLeft();\n    turnLeft();\n  }\n\n  public void printStatus() {\n    System.out.println(\"Paint: \" + getMyPaint());\n    System.out.println(\"X Location: \" + getX());\n    System.out.println(\"Y Location: \" + getY());\n    System.out.println(\"Direction: \" + getDirection());\n\n  }\n\n  public void moveFast() {\n    while (canMove()) {\n      move();\n      while (isOnBucket()) {\n        takePaint();\n      }\n    }\n  }\n\n  public void turnBackwards() {\n    turnLeft();\n    turnLeft();\n  }\n\n  public void moveBackwards() {\n    turnBackwards();\n    move();\n  }\n\n  public void moveSouth() {\n    if (!isFacingSouth()) {\n      turnRight();\n      while (isFacingSouth() && canMove()) {\n        move();\n      }\n    }\n  }\n\n  public void paintSquare(String color) {\n    while (canMove() && hasPaint()) {\n      move();\n      paint(color);\n      if (!canMove()) {\n        turnRight();\n      }\n    }\n  }\n\n  public void paintDashes(String color) {\n    while (hasPaint()) {\n      move();\n      paint(color);\n      move();\n      paint(color);\n      if (canMove()) {move();}\n    }\n  }\n\n  public void takeAllPaint() {\n    while (isOnBucket()) {\n      takePaint();\n    }\n  }\n\n  public void paintTruckBorder() {\n    while (hasPaint()) {\n      move();\n      takeAllPaint();\n      paint(\"white\");\n      if (!canMove()) {\n        turnLeft();\n      }\n    }\n  }\n\n  public void checkPaintMove() {\n    move();\n    if (isOnPaint()) {\n      turnLeft();\n      turnLeft();\n      move();\n      turnRight();\n    }\n  }\n\n  public void paintFastAndTurn() {\n    if (hasPaint() && !(isOnPaint())) {\n        paint(\"white\");\n      }\n      \n      if (!(canMove())) {\n        turnLeft();\n      }\n        \n      else {\n        checkPaintMove();\n      }\n  }\n\n  public void makeTurn() {}\n\n}",
        "isVisible": true,
        "tabOrder": 1
      },
      "Artist.java": {
        "text": "import org.code.neighborhood.*;\n\npublic class Artist extends PainterPlus {\n  public Artist() {\n    super();\n  }\n\n  public void setCenter(int gridSize) {\n    while (!(getX() == gridSize/2-1 && getY() == gridSize/2-1)) {\n      move();\n      turnRight();\n      move();\n      turnLeft();\n    }\n  }\n\n  public void paintCenter(String color) {\n    setPaint(10000);\n    for(int i=0; i<4; i++) {\n      paint(color);\n      move();\n      turnRight();\n    }\n  }\n  \n  public void setPositionOne() { // sets position to next square\n    turnBackwards();\n    move();\n    turnRight();\n    move();\n    turnRight();\n  }\n\n  public void paintPetals(int gridSize) {\n    int petalCount = 2;\n    while (petalCount < gridSize-1) {\n      if (petalCount % 2 == 0) { // paints alternating colored rows\n        setPositionOne();\n        for (int i=4; i>0; i--) {\n          for (int x=petalCount*2; x>1; x--) {\n            if (!isOnPaint()) {\n              paint(\"Orchid\");\n            }\n            move();\n          }\n          turnRight();\n        }\n        setPositionOne();\n        for (int i=4; i>0; i--) {\n          for (int x=0; x<petalCount*2+1; x++) {\n            if (!isOnPaint() && (x>=(petalCount/2) && x<(petalCount*2-(petalCount/2)))) {\n              paint(\"Violet\");\n            }\n            if (canMove()) {\n              move();\n            }\n          }\n          turnRight();\n        }\n      }\n      else { // paints fully colored rows\n        for (int i=4; i>0; i--) {\n          for (int x=0; x<petalCount*2-1; x++) {\n            if (!isOnPaint()) {\n              paint(\"DarkOrchid\");\n            }\n            if (canMove()) {\n              move();\n            }\n          }\n          turnRight();\n        }\n      }\n      petalCount++;\n    }\n  }\n}",
        "isVisible": true,
        "tabOrder": 5
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-10-25T14:50:00.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-10-25T14:50:00.672+00:00\",\"changed\":[\"cloned from \\\"CSA Asphalt Art Project Example 05_2023\\\"\"],\"cloned_from\":\"CSA Asphalt Art Project Example 05_2023\"},{\"changed_at\":\"2022-10-25 14:50:16 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 14:51:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 14:51:16 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 14:51:47 +0000\",\"changed\":[\"serialized_maze\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-10-25 15:08:23 +0000\",\"changed\":[\"long_instructions\",\"serialized_maze\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
