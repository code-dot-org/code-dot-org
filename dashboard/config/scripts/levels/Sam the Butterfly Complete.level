<Studio>
  <config><![CDATA[{
  "game_id": 33,
  "created_at": "2015-02-20T20:01:11.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "studio",
    "success_condition": "function () { \r\n  this.studio_ = Studio;\r\n  this.onscreen = this.studio_.Globals.onscreen_;\r\n  this.sam = this.studio_.sprite[0];\r\n  this.updateSam_ = function (xDelta, yDelta) {\r\n    console.log('update sam');\r\n    var newCenterX = xDelta + this.sam.x + this.sam.width / 2;\r\n    var newCenterY = yDelta + this.sam.y + this.sam.height / 2;\r\n    console.log('(' + newCenterX + ', ' + newCenterY + ')');\r\n    if (this.onscreen.length === 1 && !this.onscreen(newCenterX)) {\r\n      console.log('onscreen? = ' + this.onscreen(newCenterX));\r\n      return;\r\n    } else if (this.onscreen.length === 2 && !this.onscreen(newCenterX, newCenterY)) {\r\n      return;\r\n    } else {\r\n      this.sam.x = newCenterX - this.sam.width / 2;\r\n      this.sam.y = newCenterY - this.sam.height / 2;\r\n    }\r\n  }\r\n  \r\n  for (var key in this.studio_.keyState) {\r\n    if (this.studio_.keyState[key] === 'keydown') {\r\n      if (key == 37) {\r\n        this.updateSam_(-5,0);\r\n      } else if (key == 38) {\r\n        this.updateSam_(0,-5);\r\n      } else if (key == 39) {\r\n        this.updateSam_(5,0);\r\n      } else if (key == 40) {\r\n        this.updateSam_(0,5);\r\n      }\r\n    }\r\n  }\r\n\r\n  for (var btn in this.studio_.btnState) {\r\n    if (this.studio_.btnState[btn]) {\r\n      if (btn === 'leftButton') {\r\n        this.updateSam_(-5,0);\r\n      } else if (btn === 'upButton') {\r\n        this.updateSam_(0,-5);\r\n      } else if (btn === 'rightButton') {\r\n        this.updateSam_(5,0);\r\n      } else if (btn === 'downButton') {\r\n        this.updateSam_(0,5);\r\n      }\r\n    }\r\n  }\r\n}",
    "failure_condition": "function () {\r\n}",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,16,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "soft_buttons": [
      "leftButton",
      "rightButton",
      "downButton",
      "upButton"
    ],
    "short_instructions": "Only one last direction to worry about! Create a \"safe-down?\" function and update the \"on-screen?\" function so that it checks up, down, left, and right.",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "true",
    "first_sprite_index": "6",
    "edge_collisions": "false",
    "projectile_collisions": "false",
    "allow_sprites_outside_playspace": "true",
    "sprites_hidden_to_start": "false",
    "coordinate_grid_background": "true",
    "free_play": "false",
    "embed": "false",
    "open_function_definition": "safe-down?",
    "protaganist_sprite_index": "0",
    "disable_sharing": "false",
    "min_workspace_height": "1500",
    "default_num_example_blocks": "2",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "generate_function_pass_blocks": "true",
    "timeout_after_when_run": "false"
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="functional_start_setValue" inline="false" deletable="false" movable="false" editable="false">
          <functional_input name="VALUE">
            <block type="functional_pass">
              <mutation name="onscreen?"/>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">onscreen?</title>
          <functional_input name="STACK">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="safe-right?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="onscreen?">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="onscreen?">
                <arg name="x" type="Number"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Return true if x is less than 400.</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">safe-right?</title>
          <functional_input name="STACK">
            <block type="functional_boolean">
              <title name="VAL">true</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="safe-right?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="safe-right?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">450</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Math">
          <block type="functional_math_number">
            <title name="NUM">0</title>
          </block>
        </category>
        <category name="Logic">
          <block type="functional_greater_than" inline="false"/>
          <block type="functional_less_than" inline="false"/>
          <block type="functional_number_equals" inline="false"/>
          <block type="functional_logical_and" inline="false"/>
          <block type="functional_logical_or" inline="false"/>
          <block type="functional_logical_not" inline="false"/>
          <block type="functional_boolean">
            <title name="VAL">true</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE">
          <block type="functional_call" inline="false">
            <mutation name="safe-left?">
              <arg name="x-coordinate"/>
            </mutation>
          </block>
          <block type="functional_definition" inline="false" uservisible="false">
            <mutation>
              <arg name="x-coordinate"/>
              <outputtype>Boolean</outputtype>
            </mutation>
            <title name="NAME">safe-left?</title>
            <functional_input name="STACK">
              <block type="functional_boolean" uservisible="false">
                <title name="VAL">true</title>
              </block>
            </functional_input>
          </block>
        </category>
      </xml>
    </toolbox_blocks>
  </blocks>
</Studio>