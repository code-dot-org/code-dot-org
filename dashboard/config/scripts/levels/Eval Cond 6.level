<Eval>
  <config><![CDATA[{
  "game_id": 36,
  "created_at": "2015-02-09T22:43:49.000Z",
  "level_num": "custom",
  "user_id": 32,
  "properties": {
    "skin": "eval",
    "use_contract_editor": "true",
    "embed": "false",
    "instructions": "Write a function called food-critic, which takes in the name of a food and produces a String that says how you feel about that food. For example, (food-critic “pizza”) might evaluate to “delicious”, but (food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two foods to review, but you can you write more if you like!  Don’t forget to add an “else” clause!\r\nOne example - and part of the definition -  has already been done for you!",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "free_play": "false"
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="functional_display" inline="false" deletable="false" movable="false">
          <functional_input name="ARG1">
            <block type="functional_call" inline="false">
              <mutation name="food-critic">
                <arg name="food" type="String"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_string">
                  <title name="VAL">pizza</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="food-critic">
                <arg name="food" type="String"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_string" uservisible="false">
                  <title name="VAL">chicken soup</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_string" uservisible="false">
              <title name="VAL">Best food on a cold day</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="food-critic">
                <arg name="food" type="String"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="food" type="String"/>
            <outputtype>String</outputtype>
          </mutation>
          <title name="NAME">food-critic</title>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Number">
          <block type="functional_plus"/>
          <block type="functional_minus"/>
          <block type="functional_times"/>
          <block type="functional_dividedby"/>
          <block type="functional_math_number"/>
          <block type="functional_math_number_dropdown">
            <title name="NUM" config="0,1,2,3,4,5,6,7,8,9,10">???</title>
          </block>
        </category>
        <category name="String">
          <block type="functional_string"/>
          <block type="functional_style"/>
          <block type="string_append"/>
          <block type="string_length"/>
        </category>
        <category name="Image">
          <block type="functional_circle"/>
          <block type="functional_triangle"/>
          <block type="functional_square"/>
          <block type="functional_rectangle"/>
          <block type="functional_ellipse"/>
          <block type="functional_star"/>
          <block type="functional_radial_star"/>
          <block type="functional_polygon"/>
          <block type="place_image"/>
          <block type="offset"/>
          <block type="overlay"/>
          <block type="underlay"/>
          <block type="rotate"/>
          <block type="scale"/>
          <block type="functional_text"/>
        </category>
        <category name="Boolean">
          <block type="functional_greater_than"/>
          <block type="functional_less_than"/>
          <block type="functional_number_equals"/>
          <block type="functional_string_equals"/>
          <block type="functional_logical_and"/>
          <block type="functional_logical_or"/>
          <block type="functional_logical_not"/>
          <block type="functional_boolean"/>
        </category>
        <category name="Conditionals">
          <block type="functional_cond"/>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
        <category name="Variables" custom="FUNCTIONAL_VARIABLE"/>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="functional_display" inline="false" deletable="false" movable="false">
          <functional_input name="ARG1">
            <block type="functional_call" inline="false">
              <mutation name="food-critic">
                <arg name="food" type="String"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_string">
                  <title name="VAL">pizza</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" movable="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="food-critic">
                <arg name="food" type="String"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_string">
                  <title name="VAL">chicken soup</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_string">
              <title name="VAL">Best food on a cold day</title>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" movable="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false">
              <mutation name="food-critic">
                <arg name="food" type="String"/>
              </mutation>
            </block>
          </functional_input>
        </block>
        <block type="functional_definition" inline="false" movable="false">
          <mutation>
            <arg name="food" type="String"/>
            <outputtype>String</outputtype>
          </mutation>
          <title name="NAME">food-critic</title>
          <functional_input name="STACK">
            <block type="functional_cond" inline="false">
              <mutation pairs="0,1,2"/>
              <functional_input name="COND0">
                <block type="functional_string_equals" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>String</outputtype>
                      </mutation>
                      <title name="VAR">food</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_string">
                      <title name="VAL">chicken soup</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE0">
                <block type="functional_string">
                  <title name="VAL">Best food on a cold day</title>
                </block>
              </functional_input>
              <functional_input name="COND1">
                <block type="functional_string_equals" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>String</outputtype>
                      </mutation>
                      <title name="VAR">food</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_string">
                      <title name="VAL">pizza</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE1">
                <block type="functional_string">
                  <title name="VAL">Delicious</title>
                </block>
              </functional_input>
              <functional_input name="COND2">
                <block type="functional_string_equals" inline="false">
                  <functional_input name="ARG1">
                    <block type="functional_parameters_get">
                      <mutation>
                        <outputtype>String</outputtype>
                      </mutation>
                      <title name="VAR">food</title>
                    </block>
                  </functional_input>
                  <functional_input name="ARG2">
                    <block type="functional_string">
                      <title name="VAL">rotten eggs</title>
                    </block>
                  </functional_input>
                </block>
              </functional_input>
              <functional_input name="VALUE2">
                <block type="functional_string">
                  <title name="VAL">Gross!</title>
                </block>
              </functional_input>
              <functional_input name="DEFAULT">
                <block type="functional_string">
                  <title name="VAL">I have never tried that</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Eval>