<Gamelab>
  <config><![CDATA[{
  "game_id": 50,
  "created_at": "2016-05-26T22:52:51.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "gamelab",
    "code_functions": {
      "draw": null,
      "drawSprites": null,
      "World.mouseX": null,
      "World.mouseY": null,
      "World.frameRate": null,
      "keyDown": null,
      "keyWentUp": null,
      "keyWentDown": null,
      "var sprite = createSprite": null,
      "setAnimation": null,
      "sprite.height": null,
      "sprite.width": null,
      "x": null,
      "y": null,
      "rotation": null,
      "shapeColor": null,
      "background": null,
      "fill": null,
      "noFill": null,
      "stroke": null,
      "strokeWeight": null,
      "noStroke": null,
      "color": null,
      "arc": null,
      "ellipse": null,
      "line": null,
      "point": null,
      "rect": null,
      "regularPolygon": null,
      "shape": null,
      "text": null,
      "textAlign": null,
      "textFont": null,
      "textSize": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "comment": null,
      "console.log": null
    },
    "show_d_pad": "true",
    "edit_code": true,
    "embed": "false",
    "markdown_instructions": "# Doing More With Conditionals\r\nUsing conditionals to figure out which key was pressed is pretty useful, but we can also use conditionals with any value in our program, including sprite properties!\r\n\r\nWith your neighbor, discuss the kinds of boolean questions you could use with the following sprite properties:\r\n\r\n- `sprite.x` and `sprite.y`\r\n- `sprite.width` and `sprite.height`\r\n- `sprite.shapeColor`\r\n- `sprite.visibility`\r\n\r\n# Do This\r\nHere's a program similar to one you just made, it uses `keyDown()` to move the sprite around the screen when you click the arrow keys. You're going to add some additional conditionals to this program to do the following:\r\n\r\n- Change the color of the sprite if it goes into the top quarter of the screen\r\n- Rotate the sprite if it goes into the left quarter of the screen\r\n- Make the sprite invisible if it goes into the bottom quarter of the screen\r\n- Make the sprite larger if it goes into the right quarter of the screen\r\n\r\n_BTW, if you're looking for the `keyDown()` block, you'll notice that it's now in the 'Game Lab' category._ \r\n",
    "start_blocks": "// Create a sprite\r\nvar sprite = createSprite(200, 200, 50, 50);\r\nsprite.shapeColor = color(255, 0, 255);\r\n\r\nfunction draw() {\r\n  background(\"white\");\r\n  \r\n  // Move the sprite in the direction of the arrow keys\r\n  if (keyDown(\"up\")) {\r\n      sprite.y = sprite.y - 1;\r\n  }\r\n  if (keyDown(\"down\")) {\r\n      sprite.y = sprite.y + 1;\r\n  }\r\n  if (keyDown(\"left\")) {\r\n      sprite.x = sprite.x - 1;\r\n  }\r\n  if (keyDown(\"right\")) {\r\n      sprite.x = sprite.x + 1;\r\n  }\r\n  \r\n  // If the sprite goes into the top quarter of the screen, change its color\r\n  if (sprite.y < 100) {\r\n    \r\n  }\r\n  // If the sprite goes into the left quarter of the screen, change its rotation\r\n  \r\n  // If the sprite goes into the bottom quarter of the screen, change its visibility\r\n  \r\n  // If the sprite goes into the right quarter of the screen, change its size\r\n  \r\n  drawSprites();\r\n}",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "text_mode_at_start": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "callout_json": "[]",
    "show_debug_watch": "true",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Gamelab>