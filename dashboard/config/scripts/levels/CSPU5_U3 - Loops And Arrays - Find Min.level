<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-10-12T17:57:36.000Z",
  "level_num": "custom",
  "user_id": 155,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "console.log": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "false",
    "instructions": "Complete the findMinVal function to find and display the smallest value in an array  (Click to see full instructions)",
    "markdown_instructions": "# Reusing a Function Pattern: Find Minimum\r\n\r\n**Nice work! You've just written a function that implements an algorithm to process an array!** If you feel comfortable with the basic pattern you used to create this function, you can quickly create functions for many other useful algorithms that work on arrays.\r\n\r\n**Basic Function Pattern**\r\n\r\n* Create a **function that accepts an array** as input.\r\n* **Create a \"flag\" variable** and set its default value before looping through the array.\r\n* Loop through your array with a `for` loop that **visits every index in the array**.\r\n* **Update your flag** as necessary with every iteration of your loop.\r\n* **Display your flag** at the end of the loop.\r\n\r\nLet's use this pattern to **write a function that finds and displays the smallest value in an array**.\r\n\r\nInstead of using a true/false flag to indicate whether we found a value, **we'll use a variable to keep track of the smallest value we've seen in the array so far**.\r\n\r\n# Do This:\r\n\r\n**Starter code** has been provided which outlines and calls `findMinVal` with different inputs. Your job will be to finish writing the function.\r\n\r\n* Before programming, try to **develop an algorithm that you could use to find the minimum value in an array**. Use the pattern outlined above as a guide.\r\n* **Write code** in the places indicated with comments to complete the function.  \r\n\t* You'll want to use the `minVal` variable to keep track of the smallest value you've found so far.\r\n    * You'll need to **write an `if` statement** that checks whether the current value in the array is less than `minVal`. If it is, then update the smallest value.     \r\n* **Run the code** to ensure it is working as you intend.\r\n\r\n<details><summary><strong>HINT: pseudocode</strong> [click to expand]</summary>\r\n<p>\r\nHere is some pseduocode that you should be able to implement.\r\n</p>\r\n<pre>\r\nminVal = first value in array \r\nfor EACH value IN array\r\n  if value < minVal\r\n     minVal = value\r\n\r\ndisplay(minVal)\r\n</pre>\r\n</details>\r\n\r\n\r\n![](https://images.code.org/e6abdc34c653e4bb0885ffabcf897fc5-image-1447877822696.16.03 PM.png)",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "true",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "true",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "submittable": "false",
    "hide_view_data_button": "true",
    "debugger_disabled": "false",
    "start_blocks": "var array1 = [1,3,4,6,7,6];\r\nvar array2 = [6,2,7,2,5,6,1,3,7];\r\nvar arrayRandom = [];\r\nfor (var i = 0; i < 10; i++) {\r\n  appendItem(arrayRandom, randomNumber(0,100));\r\n}\r\n\r\nfindMinVal(array1);\r\nfindMinVal(array2);\r\nfindMinVal(arrayRandom);\r\n\r\nfunction findMinVal(list){\r\n  \r\n  console.log(\"Original:\" + list);\r\n  \r\n  //What value should minVal start off as? Set its value before your loop.\r\n  var minVal;\r\n  \r\n  for (var i = 0; i < list.length; i++) {\r\n  \r\n    //Update your minimum value on each iteration of the loop\r\n    \r\n  }\r\n  \r\n  console.log(\"The smallest value in the array is: \" + minVal);\r\n}",
    "encrypted_examples": "8J2SP3ZvY0u8cfC+3qXvwlI7Hxns359ZrTOEeTVPDt95fQWQvgkXDqNFbE/y\nouQL\n",
    "contained_level_names": null
  },
  "published": true
}]]></config>
  <blocks/>
</Applab>