<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2016-11-18T22:27:41.000Z",
  "level_num": "custom",
  "user_id": 285,
  "properties": {
    "skin": "harvester",
    "serialized_maze": "[[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":2,\"range\":4,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":2,\"range\":4,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":2,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[1],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":2,\"range\":4,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}]]",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "start_direction": "1",
    "step_mode": "1",
    "flower_type": "redWithNectar",
    "fast_get_nectar_animation": "false",
    "instructions": "**Challenge:** Get the farmer to the pumpkin and collect all of the lettuce and corn along the way. ",
    "instructions_important": "false",
    "ideal": "27",
    "markdown_instructions": "**Challenge:** Get the farmer to the pumpkin and collect all of the lettuce and corn along the way. ",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"The farmer will reach the pumpkin at the very end of this puzzle, so using the `repeat until at pumpkin` block will be helpful.\",\"hint_id\":\"courseE_farmer_functions8b_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/70265f73aaf046fb911b271317094e40/courseE_farmer_functions8b.mp3\"},{\"hint_class\":\"content\",\"hint_markdown\":\"Just like the last puzzle, think of a main path and side paths. Below is a picture where the main path is the yellow blocks and the side paths are the blue blocks.\\n\\n![](https://images.code.org/9b544ac0fca84eead7a0952286284c7b-image-1493151031070.6.10 Hint Drawing.png)\\n\\nBecause all of the side paths are to the left, you can use a function like the one you made from the last puzzle.\",\"hint_id\":\"courseE_farmer_functions8b_b\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/0b3e764885047be71595879f10146f10/courseE_farmer_functions8b.mp3\"},{\"hint_class\":\"bottom-out\",\"hint_markdown\":\"To finish this puzzle, use the following blocks.\\n\\nrepeat until at pumpkin\\n - while path ahead\\n    - move forward\\n    - harvest path\\n - turn right\\n \\nHarvest path references the function you made in the last puzzle.\",\"hint_id\":\"courseE_farmer_functions8b_c\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/6bb861dc234d3da9072fc18bde28390a/courseE_farmer_functions8b.mp3\"}]",
    "callout_json": "[]",
    "step_speed": "1",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "shape_shift": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-06-08 17:25:10 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-06-08 17:26:39 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-06-08 17:28:33 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"contained_level_names\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"},{\"changed_at\":\"2017-06-08 17:29:16 +0000\",\"changed\":[\"solution_blocks\"],\"changed_by_id\":63,\"changed_by_email\":\"kiki@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false"/>
        <block type="procedures_defnoreturn" movable="false" x="40" y="250">
          <mutation/>
          <title name="NAME">harvest path</title>
          <statement name="STACK">
            <block type="maze_if" movable="false">
              <title name="DIR">isPathLeft</title>
              <statement name="DO">
                <block type="maze_turn" movable="false">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="maze_untilBlocked" movable="false">
                      <statement name="DO">
                        <block type="maze_move" movable="false">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn" movable="false">
                              <mutation name="check and pick"/>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn" movable="false">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_turn" movable="false">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_untilBlocked" movable="false">
                                  <statement name="DO">
                                    <block type="maze_move" movable="false">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn" movable="false">
                                      <title name="DIR">turnLeft</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </statement>
        </block>
        <block type="procedures_defnoreturn" movable="false" x="350" y="250">
          <mutation/>
          <title name="NAME">check and pick</title>
          <statement name="STACK">
            <block type="harvester_ifAtCropElse" movable="false">
              <title name="LOC">Corn</title>
              <statement name="DO">
                <block type="harvester_whileHasCrop" movable="false">
                  <title name="LOC">Corn</title>
                  <statement name="DO">
                    <block type="harvester_corn" movable="false"/>
                  </statement>
                </block>
              </statement>
              <statement name="ELSE">
                <block type="harvester_ifAtCropElse" movable="false">
                  <title name="LOC">Lettuce</title>
                  <statement name="DO">
                    <block type="harvester_whileHasCrop" movable="false">
                      <title name="LOC">Lettuce</title>
                      <statement name="DO">
                        <block type="harvester_lettuce" movable="false"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="harvester_ifAtCrop" movable="false">
                      <title name="LOC">Pumpkin</title>
                      <statement name="DO">
                        <block type="harvester_whileHasCrop" movable="false">
                          <title name="LOC">Pumpkin</title>
                          <statement name="DO">
                            <block type="harvester_pumpkin" movable="false"/>
                          </statement>
                        </block>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </statement>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Actions">
          <block type="maze_move">
            <title name="DIR">moveForward</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="harvester_corn"/>
          <block type="harvester_pumpkin"/>
          <block type="harvester_lettuce"/>
        </category>
        <category name="Loops">
          <block type="controls_repeat">
            <title name="TIMES">5</title>
          </block>
          <block type="harvester_whileHasCrop">
            <title name="LOC">Corn</title>
          </block>
          <block type="maze_untilBlocked"/>
          <block type="harvester_untilAtCrop">
            <title name="LOC">Pumpkin</title>
          </block>
        </category>
        <category name="Conditionals">
          <block type="maze_if">
            <title name="DIR">isPathForward</title>
          </block>
          <block type="maze_ifElse">
            <title name="DIR">isPathForward</title>
          </block>
          <block type="harvester_ifAtCropElse">
            <title name="LOC">Corn</title>
          </block>
          <block type="harvester_ifAtCrop">
            <title name="LOC">Corn</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="harvester_untilAtCrop">
              <title name="LOC">Pumpkin</title>
              <statement name="DO">
                <block type="maze_untilBlocked">
                  <statement name="DO">
                    <block type="maze_moveForward">
                      <next>
                        <block type="procedures_callnoreturn">
                          <mutation name="harvest path"/>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </next>
        </block>
        <block type="procedures_defnoreturn">
          <mutation/>
          <title name="NAME">harvest path</title>
          <statement name="STACK">
            <block type="maze_if">
              <title name="DIR">isPathLeft</title>
              <statement name="DO">
                <block type="maze_turn">
                  <title name="DIR">turnLeft</title>
                  <next>
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="procedures_callnoreturn">
                              <mutation name="check and pick"/>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_untilBlocked">
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </statement>
        </block>
        <block type="procedures_defnoreturn">
          <mutation/>
          <title name="NAME">check and pick</title>
          <statement name="STACK">
            <block type="harvester_ifAtCropElse">
              <title name="LOC">Corn</title>
              <statement name="DO">
                <block type="harvester_whileHasCrop">
                  <title name="LOC">Corn</title>
                  <statement name="DO">
                    <block type="harvester_corn"/>
                  </statement>
                </block>
              </statement>
              <statement name="ELSE">
                <block type="harvester_ifAtCropElse">
                  <title name="LOC">Lettuce</title>
                  <statement name="DO">
                    <block type="harvester_whileHasCrop">
                      <title name="LOC">Lettuce</title>
                      <statement name="DO">
                        <block type="harvester_lettuce"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="harvester_ifAtCrop">
                      <title name="LOC">Pumpkin</title>
                      <statement name="DO">
                        <block type="harvester_whileHasCrop">
                          <title name="LOC">Pumpkin</title>
                          <statement name="DO">
                            <block type="harvester_pumpkin"/>
                          </statement>
                        </block>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </statement>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>