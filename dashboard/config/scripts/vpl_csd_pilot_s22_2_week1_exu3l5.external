name 'VPL-CSD-pilot-S22-2-week1-exU3L5'
title 'title'
description 'description here'

markdown <<MARKDOWN
# Lessons 1 - 5 

##### The first few lessons of the unit help students build foundational knowledge that they will continue to draw upon as they move through the unit. 

## Overview of Lessons 1 - 5

##### Click the dropdown arrows below to view lesson overviews.

<details>
<summary><strong>Lesson 1: Programming for Entertainment </strong></summary>

<img src="https://images.code.org/c3cecc70d194d4998072d372685efd5d-image-1648858391813.JPG" alt="Image of Alien Game in Game Lag" width="225px" style="float:left; margin: 0 0 10px 10px;  padding-right: 30px;">

**Question of the Day:** How is computer science used in entertainment?

**Lesson Overview:**

Students are asked to consider the "problems" of boredom and self expression, and to reflect on how they approach those problems in their own lives. From there, students will explore how computer science in general, and programming specifically, plays a role in either a specific form of entertainment or as a vehicle for self expression.

**Students will be able to:** 
* Identify how computer science is used in a field of entertainment

</details>

<div style="clear:both"/>


<details>
<summary><strong>Lesson 2: Plotting Shapes </strong></summary>

<img src="https://images.code.org/eab1ca733940261c15ef0c280e382175-image-1648858668304.JPG" alt="Image of smiley face in Game Lab" width="200px" style="float:left; margin: 0 0 40px 40px;  padding-right: 30px;">

**Question of the Day:** How can we clearly communicate how to draw something on a screen?

**Lesson Overview:**

Students explore the challenges of communicating how to draw with shapes and use a tool that introduces how this problem is approached in Game Lab. The warm up activity demonstrates the challenges of communicating position without some shared reference point. In the main activity, students explore a Game Lab tool that allows students to interactively place shapes on Game Lab's 400 by 400 grid. They then take turns instructing a partner how to draw a hidden image using this tool, accounting for many challenges students will encounter when programming in Game Lab. 

**Students will be able to:** 
* Communicate how to draw an image in Game Lab, accounting for shape position, color, and order
* Reason about locations on the Game Lab coordinate grid

</details>

<div style="clear:both"/>

<details>
<summary><strong>Lesson 3: Drawing in Game Lab </strong></summary>

<img src="https://images.code.org/0a9de539627410952d97be05b54af086-image-1648858818460.JPG" alt="Image of a purple flower created in Game Lab" width="200px" style="float:left; margin: 0 0 40px 40px;  padding-right: 30px;">

**Question of the Day:** How can we communicate to a computer how to draw shapes on the screen?

**Lesson Overview:**

Students are introduced to Game Lab, the programming environment for this unit, and begin to use it to position shapes on the screen. They learn the basics of sequencing and debugging, as well as a few simple commands. At the end of the lesson, students will be able to program images like the ones they made with the drawing tool in the previous lesson.

**Students will be able to:** 
* Sequence code correctly to overlay shapes.
* Use a coordinate system to place elements on the screen.

</details>

<div style="clear:both"/>

<details>
<summary><strong>Lesson 4: Shapes and Parameters </strong></summary>

<img src="https://images.code.org/c366d0ceb920e7f2401c821baf5b2d5b-image-1648858873441.JPG" alt="Image of pig created in Game Lab" width="200px" style="float:left; margin: 0 0 40px 40px;  padding-right: 30px;">

**Question of the Day:** How can we use parameters to give the computer more specific instructions?

**Lesson Overview:**

In this lesson students continue to develop their familiarity with Game Lab by manipulating the width and height of the shapes they use to draw. The lesson kicks off with a discussion that connects expanded block functionality (e.g. different sized shapes) with the need for more block inputs, or "parameters". Students learn to draw with versions of ellipse() and rect() that include width and height parameters. They also learn to use the background() block.

**Students will be able to:** 
* Use and reason about drawing commands with multiple parameters

</details>

<div style="clear:both"/>

<details>
<summary><strong>Lesson 5: Variables </strong></summary>

<img src="https://images.code.org/20c1daa52493a7770a33a23cb4247e40-image-1648858911692.JPG" alt="Image of a gray robot created in Game Lab" width="200px" style="float:left; margin: 0 0 40px 40px;  padding-right: 30px;">

**Question of the Day:** How can we use variables to store information in our programs?

**Lesson Overview:**

In this lesson students learn how to use variables to label a number. Students begin the lesson with a very basic description of the purpose of a variable within the context of the storage component of the input-output-storage-processing model. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number.

**Students will be able to:** 
* Identify a variable as a way to label and reference a value in a program
* Use variables in a program to store a piece of information that is used multiple times

</details>

<div style="clear:both"/>


MARKDOWN
