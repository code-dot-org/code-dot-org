name 'csp-20-21-u4-assess-functions-missing-code2022_2023'
right 'https://images.code.org/8de5202b2cf38e6b8c4992395060e20e-image-1552676931182.PNG'
wrong 'https://images.code.org/4d412f2464fb28db3ff728c693df31b3-image-1552676931183.PNG'
wrong 'https://images.code.org/231baaf9cfc275c8d1edb47b3793da30-image-1552676931179.PNG'
wrong 'https://images.code.org/f5291340af6853e1131ea3f6a86b648a-image-1552676931180.PNG'

markdown <<MARKDOWN
When this function is called, the smaller of two numbers is displayed. What Boolean expression would **not** work in line 12 in order to accomplish this goal?

![](https://images.code.org/9318f07f1499707ff3b542121c238f6c-image-1552676259486.PNG)
MARKDOWN

teacher_markdown <<MARKDOWN
**Explanation:** We can use the first call to the function `smallest()` to demonstrate why `num1 == num2` would prevent the function from accomplishing its goal. The first time `smallest()` is called on line 3, the value assigned to num1 is 5 and the value assigned to num2 is 7. So walking through the function line by line:
* The function would print `What is smallest? 5 or 7?` to the console.
* The conditional statement `5 == 7` would evaluate to `false`.
* The command under `else` will run and `7 is the smallest` will print to the console.

[Lesson 7 - Conditionals Practice](https://studio.code.org/s/csp4-2021/lessons/7) provided opportunities for students to debug and write their own Boolean expressions.

::: details [**Essential Knowledge Connected To This Question**]
* CRD-2.I.1 - A logic error is a mistake in the algorithm or program that causes it to behave incorrectly or unexpectedly.

:::

MARKDOWN

allow_multiple_attempts true