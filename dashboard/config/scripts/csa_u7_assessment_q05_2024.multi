name 'CSA U7 Assessment q05_2024'

wrong '`Ring Vrr`'
wrong '`Beep Bzzt`'
wrong '`Ring Vrr Beep Bzzt`'
right '`Ring Vrr Bzzt Beep`'
wrong '`Ring Vrr Beep`'

markdown <<MARKDOWN
What is displayed by the method call `p.sound()`, given the declaration `HomePhone p = new CellPhone();` and the following class definitions?

```
public class HomePhone {
  public void sound() {
    System.out.print("Ring ");
    vibrate();
  }

  public void vibrate(){
    System.out.print("Vrr ");
  }
}

public class CellPhone extends HomePhone {
  public void sound() {
    super.sound();
    System.out.print("Beep ");
  }

  public void vibrate() {
    super.vibrate();
    System.out.print("Bzzt ");
  }
}
```
MARKDOWN

allow_multiple_attempts true
teacher_markdown <<MARKDOWN
The `sound()` method is called on an instance of `CellPhone` that is being referred to with a `HomePhone` reference `p`.

Here's the sequence of method calls and their outputs:

1. `p.sound();` is called. Because `p` is an instance of `CellPhone`, the `sound()` method in `CellPhone` is invoked.

2. `super.sound();` inside `CellPhone`'s `sound()` method calls the `sound()` method of the superclass `HomePhone`.

3. In `HomePhone`'s `sound()` method, `System.out.print("Ring ");` prints `"Ring "`.

4. Then, `vibrate();` is called in the same `sound()` method of `HomePhone`. However, since `vibrate()` is overridden in `CellPhone` and the current instance is of `CellPhone`, the `vibrate()` of `CellPhone` is invoked.

5. Inside `CellPhone`'s `vibrate()` method, `super.vibrate();` calls `HomePhone`'s `vibrate()` method which prints `"Vrr "`.

6. After that, `System.out.print("Bzzt ");` in `CellPhone`'s `vibrate()` method prints `"Bzzt "`.

7. Control returns to `CellPhone`'s `sound()` method and `System.out.print("Beep ");` is executed, which prints `"Beep "`.

So, the final output from `p.sound();` is `"Ring Vrr Bzzt Beep"`.
MARKDOWN
