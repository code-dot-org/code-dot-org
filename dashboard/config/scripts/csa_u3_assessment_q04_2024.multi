name 'CSA U3 Assessment q04_2024'

wrong 'Choice A'
right 'Choice B'
wrong 'Choice C'
wrong 'Choice D'
wrong 'Choice E'

markdown <<MARKDOWN
Consider the following code segment.

```
for (int count = 1; count < 11; count += 3) {
  System.out.print(count);
}
```

Which of the following code segments will produce the same output as the code segment above?

**Choice A**
```
int count = 1;

while (count < 11) {
  count += 3;
  System.out.print(count);
}
```

**Choice B**
```
int count = 1;

while (count < 11) {
  System.out.print(count);
  count += 3;
}
```

**Choice C**
```
int count = 0;

while (count < 11) {
  System.out.print(count);
  count += 3;
}
```

**Choice D**
```
int count = 0;

while (count < 11) {
  count += 3;
  System.out.print(count);
}
```

**Choice E**
```
int count = 0;

while (count <= 11) {
  count += 3;
  System.out.print(count);
}
```
MARKDOWN

teacher_markdown <<MARKDOWN
A `for` loop has the same components as a `while` loop. The first part is the loop control variable, the second part is the condition, and the third part is the change of the loop control variable. The change of the loop control variable happens after the body of the `for` loop is executed.

For this code segment, only Choice A and Choice B correctly declare and initialize the loop control variable. In the `for` loop, the loop control variable `count` is initialized to `1`, so it should be initialized to `1` before the `while` loop. Both Choice A and Choice B also have the same condition as the `for` loop. However, only Choice B correctly changes the value of the loop control variable **after** the body of the `for` loop is executed, which is the same flow of execution as the `for` loop.
MARKDOWN

allow_multiple_attempts true