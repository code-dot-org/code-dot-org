name 'CSA U8L7-L9_2023'
title 'Check for Understanding'

wrong '`prices.get(i) == budget, 		choices.add(menu.get(i));`'
right '`prices.get(i) <= budget, 		choices.add(menu.get(i));`'
wrong '`prices.get(i) <= budget, 		menu.add(menu.get(i));`'
wrong '`menu.get(i) <= budget,			choices.add(prices.get(i));`'
wrong '`menu.get(i) == budget,			choices.add(prices.get(i));`'

allow_multiple_attempts false

markdown <<MARKDOWN
Consider the following code segment:

```
ArrayList<String> menuItems = new ArrayList<String>();
menuItems.add("Curry");
menuItems.add("Stir Fry");
menuItems.add("Noodles");
menuItems.add("Fried Rice");

ArrayList<Double> prices = new ArrayList<Double>();
prices.add(13.50);
prices.add(12.00);
prices.add(13.00);
prices.add(14.00);

public String[] withinBudget(ArrayList<String> menu, ArrayList<double> prices, double budget) {
  ArrayList<String> choices = new ArrayList<String>();
  for (int i = 0; i < menu.size(); i++) {
    if ( /* missing code 1 */ ) {
      /* missing code 2 */
    }
  }

  return choices;
}
```

Which two code segments can be inserted in for `/* missing code 1 */` and `/* missing code 2 */` in order to return a list of menu items that are equal to or below the budget?
MARKDOWN

teacher_markdown <<MARKDOWN
In this code, the `withinBudget` method takes three parameters: `menu`, `prices`, and `budget`. It iterates over the elements of the `menu` list using a `for` loop, and checks whether the corresponding element of the `prices` list is less than or equal to `budget`. If it is, the corresponding element of the `menu` list is added to the `choices` list.

To do this, we need to insert the condition `prices.get(i) <= budget` for `/* missing code 1 /`. This checks whether the current item is within the budget or not.

If it is, we need to add it to the `choices` list. This is done by inserting `choices.add(menu.get(i));` for `/ missing code 2 */`, which adds the current menu item to the `choices` list.
MARKDOWN
