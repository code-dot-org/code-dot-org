name 'CSA U8L4-L4_2023'
title 'Check for Understanding'

wrong '`{10, 12, 12, 50, 40, 10}`'
wrong '`{10, 12, 13, 16, 40, 50}`'
wrong '`{10, 13, 12, 50, 40, 16}`'
wrong '`{10, 12, 13, 50, 40, 10}`'
right '`{10, 12, 13, 50, 40, 16}`'

allow_multiple_attempts true

markdown <<MARKDOWN
Consider the following sort method. This method correctly sorts the elements of array data into increasing order.

```
public static void selectSort(int[] data) {
   for (int index = 0; index < data.length - 1; index++) {
      int current = index;
      for (int next = index + 1; next < data.length; next++) {
         if (data[next] < data[current]) {      // Compare values
            current = next;
         }
      }
      int temp = data[current];      // Assign to temp
      data[current] = data[index];
      data[index] = temp;
   }  // End of outer loop
}
```

Assume that `selectSort` is called with the array `{16, 13, 12, 50, 40, 10}`. What will the value of data be after three passes of the outer loop (i.e., when `j = 2` at the point indicated by `/* End of outer loop */`) ?
MARKDOWN

teacher_markdown <<MARKDOWN
In the first pass of the outer loop (when `j = 0`), the minimum value of the unsorted part of the array is `10`. This value is swapped with the value at the beginning of the unsorted part of the array, so the array becomes `{10, 13, 12, 50, 40, 16}`.

In the second pass of the outer loop (when `j = 1`), the minimum value of the unsorted part of the array is `12`. This value is swapped with the value at the beginning of the unsorted part of the array, so the array becomes `{10, 12, 13, 50, 40, 16}`.

In the third pass of the outer loop (when `j = 2`), the minimum value of the unsorted part of the array is `16`. This value is already in the correct position, so no swapping is necessary, so the array remains as `{10, 12, 13, 50, 40, 16}`.
MARKDOWN
