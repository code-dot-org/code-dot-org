name 'CSA U7 Assessment q09_pilot-2025'

wrong '`468`'
right '`18`'
wrong '`146781`'
wrong '`27`'
wrong '`0`'

markdown <<MARKDOWN
Consider the following method.

```
// Precondition: b > 0
public static int surprise(int b) {
  if ((b % 2) == 0) {
    if (b < 10) {
      return b;
    }
    else {
      return ((b % 10) + surprise(b / 10));
    }
  } else {
    if (b < 10) {
      return 0;
    }
    else {
      return surprise(b / 10);
    }
  }
}
```

What will `surprise(146781)` return?
MARKDOWN

allow_multiple_attempts true
teacher_markdown <<MARKDOWN
The `surprise` method is a recursive method that sums up the even digits of the input number. It checks each digit of the number from right to left (least significant to most significant). If the digit is even and the number is less than `10`, it returns the digit itself. If the digit is even and the number is greater than or equal to `10`, it adds the digit to the result of a recursive call with the rest of the number. If the digit is odd, it just calls the method recursively with the rest of the number.

Let's break down the operation for the given `surprise(146781)` call:

- The first digit from the right is `1`, which is odd. The method is called recursively with `14678`.

- The next digit is `8`, which is even. The method is called recursively with `1467`, and `8` is added to the result.

- The next digit is `7`, which is odd. The method is called recursively with `146`.

- The next digit is `6`, which is even. The method is called recursively with `14`, and `6` is added to the result.

- The next digit is `4`, which is even. The method is called recursively with `1`, and `4` is added to the result.

- The last digit is `1`, which is odd. As the number is now less than `10`, the method returns `0`.

Adding up all the results gives `8 + 6 + 4 = 18`, so `surprise(146781)` returns `18`.
MARKDOWN
