name 'csp-20-21-u4-assess-variables trace 4'
wrong 'Less than 10'
wrong 'Less than 20'
wrong 'Less than 30'
right '30 or more'

markdown <<MARKDOWN
What text will be output by the program?

![](https://images.code.org/3fa2eb3d0d666d3f924c9d4bc8a5861a-image-1552519112666.17.49 PM.png)
MARKDOWN

teacher_markdown <<MARKDOWN
**Explanation:** Walking through the program line by line:
* On line 1, the variable `score` is initialized and assigned the value `0`.
* On line 2, the variable `score` is assigned its current value (`0`) plus `10`.
On line 3, the variable `score` is assigned its current value (`10`) plus `10`.
On line 4, the variable `score` is assigned its current value (`20`) plus `10`.
* On line 5, the boolean expression `score < 10` evaluates to `false` since the current value of `score` is `30`, which causes the command on line 6 to not execute.
* On line 7, the boolean expression `score < 20` evaluates to `false` since the current value of `score` is `30`, which causes the command on line 8 to not execute.
* On line 9, the boolean expression `score < 30` evaluates to `false` since the current value of `score` is `30`, which causes the command on line `10` to not execute.
* Since all of the `if-else-if` statements have evaluated to `false`, the command inside the `else` statement will run and the console prints `30 or more`.


The Lemon Squeeze app in [Lesson 6 - Conditionals Investigate](https://curriculum.code.org/csp-20/unit4/6/) contained similar combinations of variables updating and then being used in conditional statements.

::: details [**Essential Knowledge Connected To This Question**]
* AAP-2.I.1 - Nested conditional statements, or “else if” statements, consist of conditional statements within conditional statements.


:::
MARKDOWN

allow_multiple_attempts true