name 'VPL-CSD-PILOT-S22-CI-mod3-lesson4-booleanOverview'
title 'title'
description 'description here'

markdown <<MARKDOWN
# Boolean expressions

##### Students should be able to explain that a Boolean expression is something that is either true or false, similar to a yes or no question.  The more formal way to say this is that Boolean expressions *evaluate* to either true or false.  That means that when the computer processes a Boolean expression, it checks to see whether the expression describes a situation that is true or false, and then uses the value of either true or false wherever the expression is found.

<img src="https://images.code.org/1e559b75a02295007006ad010c59aee1-image-1648648103751.48.03 AM.png" style="float: right; height: 50px; clear: both; margin: 0 20px 20px 0;">

* ##### **Boolean Expression** - in programming, an expression that evaluates to True or False.

<div style="clear:both"/>

##### Some examples of Boolean expressions that evaluate to true are `3 > 1` and `4 <= 7`, but press students to think of expressions that might be better represented by variables, such as `studentAge < 70` or `sizeOfClass > 2`.

##### Some examples of Boolean expressions that evaluate to false are `4 == 7`, `schoolName == "Hogwarts"`, and `currentYear < 1000`. 


## Comparison Operators

<img src="https://images.code.org/79f2ae7d27a3fa434138aeeb17146cab-image-1479413755076.png" style="float: left; margin-left: 20px; margin-right: 20px">

A common type of condition to check is a comparison of two values.  Here are 6 common **comparison operators**. Each compares a value on the left with a value on the right and returns a Boolean value -- **true** or **false**.  Most of these do what you would expect. 

### Why these symbols: **==**, **!=**, **<=**, and **>=**?

1. We use `==` because the single equal sign <code>=</code> is the assignment operator. We need something different to indicate we want to compare two values instead of assign one to the other.

    **Common mistake:** writing something like `if (age = 18)`  instead of `if (age == 18)`.  

2. We use `!=`, `<=`, and `>=` because they only require symbols easily represented on a computer. Historically the mathematical symbols <code>&ne;</code>, <code>&le;</code> and <code>&ge;</code> were hard or impossible to produce on some systems.  The `!` is universally read as "not".

<div style="clear: both">&nbsp;</div>

![]()
MARKDOWN
