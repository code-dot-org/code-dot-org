name 'CSA U4 Assessment q03_2024'

wrong '`(int) (Math.random() * numList.length) - 1`'
right '`(int) (Math.random() * numList.length)`'
wrong '`(int) (Math.random() * numList.length) + 1`'
wrong '`(int) (Math.random() * (numList.length + 1))`'
wrong '`Math.random(numList.length)`'

markdown <<MARKDOWN
Assume that `numList` is a 1D array that has been correctly constructed and populated with `int` values.

Which of the following expressions produces a valid random index for `numList`?
MARKDOWN

teacher_markdown <<MARKDOWN
The general syntax for getting a random value within a specific range is

```
(int)(Math.random() * range) + minValue;
```

where `range` is `maxValue - minValue + 1`.

The range of possible index values for a 1D array is `0` to the length of the array. For example, if the length of a 1D array is `5`, the maximum index value would be `4` and the minimum index value would be `0`. If we plug in these values:

```
(int)(Math.random() * (4 - 0 + 1) + 0;
```

this would simplify to

```
(int)(Math.random() * 5);
```

which would be the same as

```
(int)(Math.random() * nameOfArray.length);
```
MARKDOWN

allow_multiple_attempts true