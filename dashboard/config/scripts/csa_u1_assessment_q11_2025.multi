name 'CSA U1 Assessment q11_2025'

wrong '0'
wrong '2'
right '3'
wrong '4'
wrong 'Infinite'

markdown <<MARKDOWN
Consider the following code segment.

```
while(!myPainter.isFacingWest()) {
  myPainter.turnLeft();
}
```

What is the most number of times that the `turnLeft()` method would be called?
MARKDOWN

teacher_markdown <<MARKDOWN
The condition for the `while` loop checks if the `Painter` object is **not** facing west. This means that the `Painter` object will continue to turn left while it is not facing west.

If the `Painter` object is facing west, the condition for the `while` loop is `false`, so the body of the `while` loop will not execute.

If the `Painter` object is facing north, it will turn left **one time** before the condition for the `while` loop is `false`.

![](https://images.code.org/85aa0d5adee4809799c953b5a89a65b2-image-1669133866215.png)

If the `Painter` object is facing east, it will turn left **two times** before the condition for the `while` loop is `false`.

![](https://images.code.org/875eb015ce482e32e023e0a62f97b3e5-image-1669133959131.png)

If the `Painter` object is facing south, it will turn left **three times** before the condition for the `while` loop is `false`.

![](https://images.code.org/efd62e25a93f35d39b3ec9e808f2520f-image-1669134108968.png)

So the most number of times that the `turnLeft()` method would be called is 3 times.
MARKDOWN

allow_multiple_attempts true