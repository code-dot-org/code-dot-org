name 'CSA U5 Assessment q07_2023'

wrong '`letters[1][1] + letters[1][2] + letters[1][3]`'
wrong '`letters[0][0] + letters[0][1] + letters[0][2]`'
wrong '`letters[1][1] + letters[2][2] + letters[3][3]`'
wrong '`letters[0][0] + letters[1][1] + letters[2][2]`'
right '`letters[0][0] + letters[1][0] + letters[2][0]`'

markdown <<MARKDOWN
Consider the following code segment, where `letters` is a two-dimensional (2D) array that contains possible letters. The code segment is intended to print `"DOG"` using column-major order.

```
String[][] letters = {{"D", "O", "G"},
                      {"O", "O", "-"},
                      {"G", "-", "G"}};

System.out.println( /* missing code */ );
```

Which of the following could replace `/* missing code */` so that the code segment works as intended?
MARKDOWN

allow_multiple_attempts true
teacher_markdown <<MARKDOWN
To print `"DOG"` using column-major order, we need to access the elements in the first column of the `letters` array.

`letters[0][0]` represents the element in the first row (index `0`) and the first column (index `0`), which is `"D"`.

`letters[1][0]` represents the element in the second row (index `1`) and the first column (index `0`), which is `"O"`.

`letters[2][0]` represents the element in the third row (index `2`) and the first column (index `0`), which is `"G"`.
MARKDOWN
