name 'SP-VPL-21-CSA-mod1-csa-framework'
title 'The AP CSA Framework and Code.org\â€™s Approach'
description 'description here'

markdown <<MARKDOWN
# The AP CSA Framework

## The Big ideas
The AP CSA CSA Framework developed by the College Board outlines four **<span style="color:#00adbc"><b>Big Ideas</b> </span>**, each consisting of Enduring Understandings, Learning Objectives, and Essential Knowledge statements.

* **<span style="color:#00adbc"><b>Modularity (MOD)</b></span>** - Incorporating elements of abstraction, by breaking problems down into interacting pieces, each with their own purpose, makes writing complex programs easier. Abstracting simplifies concepts and processes by looking at the big picture rather than being overwhelmed by the details. Modularity in object-oriented programming allows us to use abstraction to break complex programs down into individual classes and methods. 
* **<span style="color:#00adbc"><b>Variables (VAR)</b></span>** - Information used as a basis for reasoning, discussion, or calculation is referred to as data. Programs rely on variables to store data, on data structures to organize multiple values when program complexity increases, and on algorithms to sort, access, and manipulate this data. Variables create data abstractions, as they can represent a set of possible values or a group of related values.
* **<span style="color:#00adbc"><b>Control (CON)</b></span>** - Doing things in order, making decisions, and doing the same process multiple times are represented in code by using control structures and specifying the order in which instructions are executed. Programmers need to think algorithmically in order to define and interpret processes that are used in a program. 
* **<span style="color:#00adbc"><b>Impacts of Computing (IOC)</b></span>** - Computers and computing have revolutionized our lives. To use computing safely and responsibly, we need to be aware of privacy, security, and ethical issues. As programmers, we need to understand how our programs will be used and be responsible for the consequences

## The Computational Thinking Practices
Additionally, the framework identifies five **<span style="color:#00adbc">Computational Thinking Practices</span>**, each outlining skills that students should develop throughout the course. The Computational Thinking Practices are:

<span style="color:#00adbc">
<ol><li>Program Design and Algorithm Development</li>
<li>Code Logic</li>
<li>Code Implementation</li>
<li>Code Testing</li>
<li>Documentation</li>
</ol>
</span>

These Computational Thinking Practices form the basis of tasks on the AP Exam. You can read more about these Computational Thinking Practices in the <a href="https://apcentral.collegeboard.org/pdf/ap-computer-science-a-course-and-exam-description.pdf?course=ap-computer-science-a" target="_blank">Course and Exam Description from the College Board</a>.

---

**Up next:** We will look at Code.org's Approach to the AP CSA Framework.
MARKDOWN
