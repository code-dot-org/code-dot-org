name 'CSA U8 Assessment q06_2025'

wrong 'Inserting a word is faster in II than in I.'
wrong 'Finding a given word is faster in I than in II.'
right 'Finding a given word is faster in II than in I.'
wrong 'Finding the longest word is faster in II than in I.'
wrong 'Finding the first word in alphabetical order is faster in I than in II.'

markdown <<MARKDOWN
Consider the following two data structures for storing millions of words.

  I. An array of words, not in any particular order
 
 II. An array of words, sorted in alphabetical order

Which of the following statements most accurately describes the time needed for operations on these data structures?
MARKDOWN

allow_multiple_attempts true
teacher_markdown <<MARKDOWN
When comparing the operations on the two data structures, the statement that most accurately describes the difference is that finding a given word is faster in structure II, where the words are sorted in alphabetical order.

Here's why this statement is true:

**I. An array of words, not in any particular order**
   - In an unsorted array, finding a specific word requires searching through the entire array sequentially, comparing each word until a match is found or reaching the end of the array. Since the words are not organized in any specific order, there is no inherent structure that aids in locating a word efficiently. As a result, the search time increases linearly with the number of words in the array.

**II. An array of words, sorted in alphabetical order**
   - In a sorted array, like structure II, a given word can be found more efficiently. Since the words are sorted, binary search or other efficient search algorithms can be applied to quickly locate a word. These search algorithms take advantage of the sorted nature of the array to divide the search space and eliminate a significant portion of words with each comparison, resulting in faster search times.

Therefore, when considering the operations on these data structures, finding a given word is faster in structure II, where the words are sorted in alphabetical order. The sorted arrangement allows for the application of efficient search algorithms, reducing the number of comparisons needed and resulting in faster retrieval of words compared to an unsorted array.
MARKDOWN
