name 'CSA U8 Assessment q02_2025'

wrong '`0`'
wrong '`1`'
right '`2`'
wrong '`3`'
wrong '`4`'

markdown <<MARKDOWN
Consider the following code segment.

```
int[] values = {1, 1, 1, 2, 2, 3};
int target = 1;
```

What value is returned by the call `binarySearch(values, target)`?

```
public static int binarySearch(int[] a, int target) {
  int left = 0;
  int right = a.length - 1;
  
  while (left <= right) {
    int mid = (left + right) / 2;

    if (a[mid] < target) {
      left = mid + 1;
    }
    else if (a[mid] > target) {
      right = mid - 1;
    }
    else {
      return mid;
    }
  }

  return -1;
}
```
MARKDOWN

allow_multiple_attempts true
teacher_markdown <<MARKDOWN
In the given code segment, the value returned by the call `binarySearch(values, target)` is 2.

Let's go through the code to understand why:

1. The array `values` is initialized with the values `{1, 1, 1, 2, 2, 3}`.

2. The variable `target` is set to `1`.

3. The `binarySearch` method is called with the array `values` and the target `1`.

4. Inside the method, the variable `left` is initialized to `0`, and `right` is initialized to `a.length - 1`, which is `5` in this case.

5. The `while` loop begins with the condition `left <= right`, which means there are still elements to search within the current range.

6. The midpoint `mid` is calculated as `(left + right) / 2`, which gives `(0 + 5) / 2 = 2`.

7. The value at index `mid` in the array `values` is checked against the target.

8. Since `a[mid]` is equal to the target (`1`), the condition in the `else` block is satisfied, and the method returns `mid`, which is `2`.

9. The value `2` is returned as the result of the call `binarySearch(values, target)`.
MARKDOWN
