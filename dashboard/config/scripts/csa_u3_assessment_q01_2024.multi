name 'CSA U3 Assessment q01_2024'

right 'I only'
wrong 'II only'
wrong 'I and II only'
wrong 'I and III only'
wrong 'I, II, and III'

markdown <<MARKDOWN
Consider an integer array `nums`, which has been properly declared and initialized with one or more integer values.

Which of the following code segments counts the number of odd values found in `nums` and stores the count in `oddCount`?

I.
```
int oddCount = 0;
int index = -1;

while (index <= nums.length - 2) {
  index++;
  
  if (nums[index] % 2 == 1) {
    oddCount++;
  }
}
```

II.
```
int oddCount = 0;

for (int index = 1; index < nums.length; index++) {
  if (nums[index] % 2 == 1) {
    oddCount++;
  }
}
```

III.
```
int oddCount = 0;

for (int value : nums) {
  if (nums[index] % 2 == 1) {
    oddCount++;
  }
}
```
MARKDOWN

teacher_markdown <<MARKDOWN
Option I **does** work. The variable `index` is initialized to `-1`, making the condition of the `while` loop `true`. The value of `index` is increased by `1`, making it `0`, and this value is used to then access the first element in the 1D array `nums`. Since the condition checks if `index` is less than or equal to `nums.length - 2` and the value of `index` is increased by `1` first before checking the condition, all elements of `nums` will be checked.

Option II does **not** work. The loop control variable in the `for` loop is initialized to `1` and increases by `1` until the end of the 1D array `nums` is reached. Since `index` starts at `1`, this means that the first element in `nums` is missed. If the first element in `nums` is an odd number, then it won't be counted.

Option III does **not** work. While the enhanced `for` loop traverses each element of the 1D array `nums`, the condition for the `if` statement uses a variable `index` to attempt to access the current element. This is incorrect because with an enhanced `for` loop, the enhanced `for` loop variable `value` should be used to access the current element and the variable `index` has not been declared and initialized.
MARKDOWN

allow_multiple_attempts true