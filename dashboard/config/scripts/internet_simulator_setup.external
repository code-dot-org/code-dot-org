name 'Internet Simulator Setup'
title 'Internet Simulator Setup'
description 'description here'
css 'unplugged'

markdown <<MARKDOWN
# Code.org's Internet Simulator

_Note: This instructions listed in this tutorial are for teachers wishing to use the Internet Simulator as a standalone tool, separate from the Code.org Computer Science Principles curriculum. If you are planning to use the activities designed as part of the Code.org CSP curriculum, then please head to the [CSP curriculum page.](https://code.org/educate/csp)_

### Contents
There are 3 pages of background and information contained here:

* What is the Internet Simulator? Overview (see below)
* [setup instructions](/s/netsim/stage/1/puzzle/2)
* [FAQ](/s/netsim/stage/1/puzzle/3)
 
### What is the Internet Simulator? An Overview:

The Internet Simulator is a tool developed by Code.org for our new high school [Computer Science Principles](https://code.org/educate/csp) class. The tool is designed to let students get a hands on experience experimenting with (and solving) different kinds of problems associated with networked computers. The Internet Simulator is used in multiple lessons throughout Units 1 and 2 in our curriculum to successively build up the different layers of the Internet. 

If you are considering using the tool in your classroom with activities you design, we would recommend you get familiar with the tool via our [lesson plans](https://curriculum.code.org/csp/unit1). **The setup instructions** on the next page are for teachers who would like to use the Internet Simulator separate from the Code.org CSP curriculum. 

The tool itself doesn't _teach_ these concepts, but rather provides an environment for multiple students to come together and send binary, decimal, or ascii based messages to each other or other classmates.  **The environment can be configured** in a variety of ways to expose different kinds of problems, visualize data and connections between hosts, and support learning of various concepts related to the Internet.

The Internet Simulator was designed to be used in a *classroom* with students working collaboratively in-person to solve problems. Often these problems involve inventing a communcation protocol, or inventing ways to encode information in a structred way that makes transporting it over the Internet feasible. 

**In Code.org's Computer Science Principles curriculum** we typically structure lessons and activities in the following way:

* **First present students with a challenge**
 * e.g. The physical internet is inherently unreliable and can drop messages
* **Give an opportunity to experiment with the simulator to get a sense of issues** 
 * e.g. look at the router logs to discover that 10-20% of all messages are dropped and packets can be routed out of order
* **Give an opportunity to invent their own solution to the challenge** 
  * e.g. invent their own protocol for how to reliably send messages on this unreliable network
* **Finally, students research how that protocol or invention works "in the real world"**
 * e.g. Research how TCP really works and watch a video

### What Can The Internet Simulator be Configured To Do?

At its most basic, the Internet Simulator can communicate a single bit of information via a single shared wire with no coordination or synchronization.  At it's most advanced it can simulate unreliable connections over multiple routers, using IP addresses, a DNS, and fixed sized packets requiring the creation of protocols similar to TCP/IP or HTTP. 

We have set up the Internet Simulator in a variety of configurations that are conducive to teaching certain topics.  But if using the Internet Simulator for class you should be aware of some user interface settings that you may wish to control or tell your students to setup in a particular way.  

For example: one of the features of the Internet Simulator is that you can show the binary, decimal, hex and ASCII representations of any data you send around.  In some configurations the user can also set the "chunk size" to dictate how bits are interpreted.  For a lesson of your own design, you might choose one of the configurations we have provided, but might need to mandate that students only show a particular representation of the bits, or maybe you want the chunk size to be set to a particular value.

The larger point is that the configurations provided here are meant to be a starting point for teaching a particular topic.  You might need to employ some ingenuity and teaching strategies to further refine the use of the Simulator to fit your needs.


 <br><br>
<img src="https://images.code.org/0bf9799b2bec2756c1664b84e12cbe27-image-1438642671141.57.13.png" width="600px" hspace="100px"/>
<br><br>



    


_Next up: Setup instructions_

<a class="btn btn-large btn-primary next-stage submitButton">Continue</a>
MARKDOWN
