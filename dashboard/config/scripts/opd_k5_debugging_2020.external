name 'OPD-K5 debugging_2020'
title 'Debugging'
description 'description here'
markdown <<MARKDOWN
# Teaching practice: Debugging

Everyone gets bugs! Therefore, debugging is an essential skill all students should develop that builds on the student practices discussed above. Without strong debugging skills, students can become frustrated. Help keep students moving by implementing both active and reflective debugging strategies in your classroom.

> **Debugging** is finding and fixing problems in an algorithm or program

## Active Debugging
New programmers are prone to writing long chunks of code without pausing to read or test their work along the way, which can snowball into a program that is very hard to debug. To prevent this, we suggest implementing active debugging as part of a general coding philosophy.

Active debugging describes the practice of debugging while coding. This generally means students taking time during coding exercises to read, process, and test small pieces of code that they have just written.

Use this debugging guide to help with active debugging: 

<img src="https://images.code.org/b17956e111a6ca4ec17ace55f7fdf69b-image-1571695775936.09.14 PM.png">


## Reflective Debugging
Reflective debugging is a practice in which students participate in debugging as an entire class. ‘Bug talks’ and keeping a ‘bug tracker’ are two examples of  strategies that can be used to implement reflective debugging in your classroom and are described below. Read more about these on <a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview" target="blank">page 23 of the curriculum guide</a>. 

Check out this video on debugging to learn more about the debugging process:

<a href="https://www.youtube.com/watch?v=auv10y-dN4s" target="blank">![](https://images.code.org/281fbcbd84d0df2491e0c4050e612b97-image-1571696135948.13.58 PM.png)</a>
MARKDOWN
